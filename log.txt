[DBG]  hodnota skip_initial_solution=0
[DBG]  getInitialSolution() => succ=1, sum_of_costs=4461, num_of_colliding_pairs=1
[DBG]  After skip/init build => iteration_stats.back(): sum_of_costs=4461, collisions=1
[DEBUG] Using default neighbor generation strategy for conflicts: 0
	InitLNS(PP): runtime = 0.0195038, iterations = 2, colliding pairs = 0, initial colliding pairs = 1, solution cost = 4490, initial solution cost = 4461, failed iterations = 0
[STAT] Iteration 1
[DBG]  Random chance did not select SAT operator (r=34), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 1
[DBG]  Using SAT operator (destroy+repair SAT).
[DBG]  ====================
[DBG]  SAT destroy operator called.
[DBG]  SAT heuristic: 2
[DBG]  key_agent_id: 120
[DBG]  key_agent_id global path length: 43
[DBG]  Submap content (global positions):
[DBG]  169 170 171 172 173 
[DBG]  201 202 203 204 205 
[DBG]  233 234 235 236 237 
[DBG]  265 266 267 268 269 
[DBG]  297 298 299 300 301 
[DBG]  Map content with agents and obstacles:
[DBG]  X . X . . 
[DBG]  X X . . . 
[DBG]  . . A . . 
[DBG]  . . . . . 
[DBG]  . . . . . 
[DBG]  content of the map structure that we pass to the SAT solver:
[DBG]  -1  1  -1  1  1  
[DBG]  -1  -1  1  1  1  
[DBG]  1  1  1  1  1  
[DBG]  1  1  1  1  1  
[DBG]  1  1  1  1  1  
[DBG]  Identifying agents in a submap for rescheduling (when key_agent is there at the time 5):
[DBG]  Agent 120 found intervals in the sub-map:
[DBG]   [0..39]
[DBG]  Agent 120 (interval in submap: [0..39]) contains time 5, added to replan.
[DBG]  Agent 120 | Start (global): 235 -> (local): (2, 2) at time 5 | Goal (global): 265 -> (local): (3, 0) at time 39
[DBG]  [REPAIR] SAT destroy operator called.
[DBG]  [REPAIR] SAT operator – launching subproblem FOR OPTIMIZATION.
[DBG]  Creating local paths (sx, sy) in the submap for T_sync = 5
[DBG]    Agent 120 (global paths from T=5 to 39) has local path: (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (3,2) (3,1) (3,0) (3,0) (3,0) (3,0) (3,0) (3,0) (3,0) 
[DBG]  Checking input data for SAT solver:
[DBG]    - Number of agents to replan: 1
[DBG]  Agent 120 has the original local path length: 35 => Start (2,2), Goal (3,0)
[DBG]  Start position: (2, 2), 
[DBG]  Goal position: (3, 0), 
[DBG]  SAT instance and solver created.
Currently solving
Instance name: scen
Map name: map
Encoding used: disappear_at_goal
SAT solver used: Kissat
Optimizing function: sum of costs
Number of agents: 1
Mks LB: 4
SoC LB: 4
Delta: 0
Remaining time: 300000 [ms]

Found plan [agents = 1] [timesteps = 4]
Agent #0 : 8 13 12 11 

[STAT] Solver returned: 0
[DBG]  Agent (index) 120 | New local path (submap idx):
[DBG]  8 13 12 11 
[DBG]  Update the agent path 120 | Original local length: 35 | New local length: 4
[DBG]  agent 120 t=0 => decoded (sx,sy)=(2,2) => global_id=235
[DBG]  agent 120 t=1 => decoded (sx,sy)=(3,2) => global_id=267
[DBG]  agent 120 t=2 => decoded (sx,sy)=(3,1) => global_id=266
[DBG]  agent 120 t=3 => decoded (sx,sy)=(3,0) => global_id=265
[DBG]  Complete path of agent 120:
[DBG]    Original: 203 235 235 235 235 235 235 235 235 235 235 235 235 235 235 235 235 235 235 235 235 235 235 235 235 235 235 235 235 235 235 267 266 265 265 265 265 265 265 265 264 232 200 
[DBG]    New:     203 235 235 235 235 235 267 266 265 264 232 200 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 203 235 235 235 235 
[DBG]    Local path (in submap): 235 267 266 265 264 232 200 
[DBG]    Suffix (out of submap): 
[DBG]  Original agent path length 120 je: 43
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 0: 203, 235, 235, 235, 235, 235, 267, 266, 265, 264, 232, 200, 
[DBG]  Path for agent 120 updated, resulting length: 12
[DBG]  Paths successfully updated.
[DBG]  (LNS.cpp) New path for agent 120: 
[DBG]  203, 235, 235, 235, 235, 235, 267, 266, 265, 264, 232, 200, 
[DBG]  Delta value: 0.738095
[DBG]  Rewarding metric index = 1
[DBG]  component_weights = {0.207058, 0.378827, 0.207058, 0.207058}
[DBG]  opSuccess value: 1
[STAT] neighbor.sum_of_costs before recomputation: 11
[STAT] neighbor.old_sum_of_costs before recomputation: 42
[STAT] sum_of_costs before recomputation: 4490
[DBG]  Validate solution immediately after SAT success.
[WARNING] Problem after SAT: Edge conflict between agents 120 and 87 at edge (265,264) at timestep 9
[DBG]  [DEBUG] Attempting immediate repair via init_lns because problem occurred after SAT (should be applied only for conflicts...).
[DBG]  [DEBUG] Passing 150 agents to init_lns (skip=true).
[DBG]  [DEBUG] path_table contents for selected agents (neighbor.agents):
[DBG]    Agent 120 => controlling path length=12
[DBG]  hodnota skip_initial_solution=1
[DBG]  We skip initialSolution => call buildCollisionData()
[DBG]  buildCollisionData() called – skip_initial_solution case.
[DBG]  Agents.size()=150, collision_graph.size()=150
[DBG]  agent 87 => updateCollidingPairs => foundCollision
[DBG]  agent 101 => updateCollidingPairs => foundCollision
[DBG]  agent 116 => updateCollidingPairs => foundCollision
[DBG]  agent 120 => updateCollidingPairs => foundCollision
[DBG]  agent 127 => updateCollidingPairs => foundCollision
[DBG]  Conflicting agent pairs:
[DBG]  agent 87 is in conflict with agent 120
[DBG]  agent 101 is in conflict with agent 120
[DBG]  agent 116 is in conflict with agent 120
[DBG]  agent 120 is in conflict with agent 127
[DBG]  buildCollisionData() => sum_of_costs=4459, num_of_colliding_pairs=4
[DBG]  buildCollisionData done => sum_of_costs=4459, num_of_colliding_pairs=4
[DBG]  sum_of_cost hodnota: 4459
[DBG]  After skip/init build => iteration_stats.back(): sum_of_costs=4459, collisions=4
[DEBUG] Using default neighbor generation strategy for conflicts: 0
	InitLNS(PP): runtime = 0.000823542, iterations = 2, colliding pairs = 0, initial colliding pairs = 4, solution cost = 4490, initial solution cost = 4459, failed iterations = 0
[DBG]  init_lns->sum_of_costs after init_lns->run: 4490
[DBG]  sum_of_costs after assignment from init_lns->run: 4490
[DBG]  Recomputing sum_of_cost by dividing neighbor.sum_of_costs and neighbor.old_sum_of_costs
[STAT] sum_of_costs after recomputation: 4490
[STAT] Iteration 2
[DBG]  Random chance did not select SAT operator (r=64), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 2
[DBG]  Random chance did not select SAT operator (r=86), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 2
[DBG]  Random chance did not select SAT operator (r=34), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 2
[DBG]  Random chance did not select SAT operator (r=48), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 2
[DBG]  Random chance did not select SAT operator (r=77), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 2
[DBG]  Random chance did not select SAT operator (r=83), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 2
[DBG]  Random chance did not select SAT operator (r=90), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 2
[DBG]  Random chance did not select SAT operator (r=38), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 2
[DBG]  Random chance did not select SAT operator (r=29), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] neighbor.sum_of_costs before recomputation: 233
[STAT] neighbor.old_sum_of_costs before recomputation: 236
[STAT] sum_of_costs before recomputation: 4490
[DBG]  Recomputing sum_of_cost by dividing neighbor.sum_of_costs and neighbor.old_sum_of_costs
[STAT] sum_of_costs after recomputation: 4487
[STAT] Iteration 3
[DBG]  Random chance did not select SAT operator (r=31), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 3
[DBG]  Random chance did not select SAT operator (r=42), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] neighbor.sum_of_costs before recomputation: 265
[STAT] neighbor.old_sum_of_costs before recomputation: 266
[STAT] sum_of_costs before recomputation: 4487
[DBG]  Recomputing sum_of_cost by dividing neighbor.sum_of_costs and neighbor.old_sum_of_costs
[STAT] sum_of_costs after recomputation: 4486
[STAT] Iteration 4
[DBG]  Random chance did not select SAT operator (r=44), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 4
[DBG]  Random chance did not select SAT operator (r=96), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] neighbor.sum_of_costs before recomputation: 224
[STAT] neighbor.old_sum_of_costs before recomputation: 242
[STAT] sum_of_costs before recomputation: 4486
[DBG]  Recomputing sum_of_cost by dividing neighbor.sum_of_costs and neighbor.old_sum_of_costs
[STAT] sum_of_costs after recomputation: 4468
[STAT] Iteration 5
[DBG]  Random chance did not select SAT operator (r=17), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 5
[DBG]  Random chance did not select SAT operator (r=31), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 5
[DBG]  Random chance did not select SAT operator (r=53), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 5
[DBG]  Random chance did not select SAT operator (r=87), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 5
[DBG]  Random chance did not select SAT operator (r=63), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 5
[DBG]  Random chance did not select SAT operator (r=94), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 5
[DBG]  Random chance did not select SAT operator (r=82), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 5
[DBG]  Random chance did not select SAT operator (r=43), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 5
[DBG]  Random chance did not select SAT operator (r=18), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] neighbor.sum_of_costs before recomputation: 303
[STAT] neighbor.old_sum_of_costs before recomputation: 314
[STAT] sum_of_costs before recomputation: 4468
[DBG]  Recomputing sum_of_cost by dividing neighbor.sum_of_costs and neighbor.old_sum_of_costs
[STAT] sum_of_costs after recomputation: 4457
[STAT] Iteration 6
[DBG]  Random chance did not select SAT operator (r=70), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] neighbor.sum_of_costs before recomputation: 259
[STAT] neighbor.old_sum_of_costs before recomputation: 261
[STAT] sum_of_costs before recomputation: 4457
[DBG]  Recomputing sum_of_cost by dividing neighbor.sum_of_costs and neighbor.old_sum_of_costs
[STAT] sum_of_costs after recomputation: 4455
[STAT] Iteration 7
[DBG]  Random chance did not select SAT operator (r=82), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] neighbor.sum_of_costs before recomputation: 250
[STAT] neighbor.old_sum_of_costs before recomputation: 252
[STAT] sum_of_costs before recomputation: 4455
[DBG]  Recomputing sum_of_cost by dividing neighbor.sum_of_costs and neighbor.old_sum_of_costs
[STAT] sum_of_costs after recomputation: 4453
[STAT] Iteration 8
[DBG]  Random chance did not select SAT operator (r=12), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 8
[DBG]  Random chance did not select SAT operator (r=82), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 8
[DBG]  Using SAT operator (destroy+repair SAT).
[DBG]  ====================
[DBG]  SAT destroy operator called.
[DBG]  SAT heuristic: 2
[DBG]  key_agent_id: 28
[DBG]  key_agent_id global path length: 44
[DBG]  Submap content (global positions):
[DBG]  595 596 597 598 599 
[DBG]  627 628 629 630 631 
[DBG]  659 660 661 662 663 
[DBG]  691 692 693 694 695 
[DBG]  723 724 725 726 727 
[DBG]  Map content with agents and obstacles:
[DBG]  X . . X . 
[DBG]  . . . X . 
[DBG]  . . A X X 
[DBG]  . . X X X 
[DBG]  X . . . . 
[DBG]  content of the map structure that we pass to the SAT solver:
[DBG]  -1  1  1  -1  1  
[DBG]  1  1  1  -1  1  
[DBG]  1  1  1  -1  -1  
[DBG]  1  1  -1  -1  -1  
[DBG]  -1  1  1  1  1  
[DBG]  Identifying agents in a submap for rescheduling (when key_agent is there at the time 27):
[DBG]  Agent 28 found intervals in the sub-map:
[DBG]   [0..43]
[DBG]  Agent 28 (interval in submap: [0..43]) contains time 27, added to replan.
[DBG]  Agent 28 | Start (global): 661 -> (local): (2, 2) at time 27 | Goal (global): 727 -> (local): (4, 4) at time 43
[DBG]  [REPAIR] SAT destroy operator called.
[DBG]  [REPAIR] SAT operator – launching subproblem FOR OPTIMIZATION.
[DBG]  Creating local paths (sx, sy) in the submap for T_sync = 27
[DBG]    Agent 28 (global paths from T=27 to 43) has local path: (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,1) (3,1) (4,1) (4,2) (4,3) (4,4) 
[DBG]  Checking input data for SAT solver:
[DBG]    - Number of agents to replan: 1
[DBG]  Agent 28 has the original local path length: 17 => Start (2,2), Goal (4,4)
[DBG]  Start position: (2, 2), 
[DBG]  Goal position: (4, 4), 
[DBG]  SAT instance and solver created.
Currently solving
Instance name: scen
Map name: map
Encoding used: disappear_at_goal
SAT solver used: Kissat
Optimizing function: sum of costs
Number of agents: 1
Mks LB: 7
SoC LB: 7
Delta: 0
Remaining time: 300000 [ms]

Found plan [agents = 1] [timesteps = 7]
Agent #0 : 9 8 11 12 13 14 15 

[STAT] Solver returned: 0
[DBG]  Agent (index) 28 | New local path (submap idx):
[DBG]  9 8 11 12 13 14 15 
[DBG]  Update the agent path 28 | Original local length: 17 | New local length: 7
[DBG]  agent 28 t=0 => decoded (sx,sy)=(2,2) => global_id=661
[DBG]  agent 28 t=1 => decoded (sx,sy)=(2,1) => global_id=660
[DBG]  agent 28 t=2 => decoded (sx,sy)=(3,1) => global_id=692
[DBG]  agent 28 t=3 => decoded (sx,sy)=(4,1) => global_id=724
[DBG]  agent 28 t=4 => decoded (sx,sy)=(4,2) => global_id=725
[DBG]  agent 28 t=5 => decoded (sx,sy)=(4,3) => global_id=726
[DBG]  agent 28 t=6 => decoded (sx,sy)=(4,4) => global_id=727
[DBG]  Complete path of agent 28:
[DBG]    Original: 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 660 692 724 725 726 727 
[DBG]    New:     661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 660 692 724 725 726 727 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 
[DBG]    Local path (in submap): 661 660 692 724 725 726 727 
[DBG]    Suffix (out of submap): 
[DBG]  Original agent path length 28 je: 44
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 0: 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 660, 692, 724, 725, 726, 727, 
[DBG]  Path for agent 28 updated, resulting length: 34
[DBG]  Paths successfully updated.
[DBG]  (LNS.cpp) New path for agent 28: 
[DBG]  661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 660, 692, 724, 725, 726, 727, 
[DBG]  Delta value: 0.232558
[DBG]  Rewarding metric index = 0
[DBG]  component_weights = {0.253058, 0.356851, 0.195046, 0.195046}
[DBG]  opSuccess value: 1
[STAT] neighbor.sum_of_costs before recomputation: 33
[STAT] neighbor.old_sum_of_costs before recomputation: 43
[STAT] sum_of_costs before recomputation: 4453
[DBG]  Validate solution immediately after SAT success.
[WARNING] Problem after SAT: Target conflict: agent 42 (len 43) traverses target of agent 28 (len 33) at location 727 at timestep 42
[DBG]  [DEBUG] Attempting immediate repair via init_lns because problem occurred after SAT (should be applied only for conflicts...).
[DBG]  [DEBUG] Passing 150 agents to init_lns (skip=true).
[DBG]  [DEBUG] path_table contents for selected agents (neighbor.agents):
[DBG]    Agent 28 => controlling path length=34
[DBG]  hodnota skip_initial_solution=1
[DBG]  We skip initialSolution => call buildCollisionData()
[DBG]  buildCollisionData() called – skip_initial_solution case.
[DBG]  Agents.size()=150, collision_graph.size()=150
[DBG]  agent 28 => updateCollidingPairs => foundCollision
[DBG]  agent 42 => updateCollidingPairs => foundCollision
[DBG]  agent 148 => updateCollidingPairs => foundCollision
[DBG]  Conflicting agent pairs:
[DBG]  agent 28 is in conflict with agent 42
[DBG]  agent 28 is in conflict with agent 148
[DBG]  buildCollisionData() => sum_of_costs=4443, num_of_colliding_pairs=2
[DBG]  buildCollisionData done => sum_of_costs=4443, num_of_colliding_pairs=2
[DBG]  sum_of_cost hodnota: 4443
[DBG]  After skip/init build => iteration_stats.back(): sum_of_costs=4443, collisions=2
[DEBUG] Using default neighbor generation strategy for conflicts: 0
	InitLNS(PP): runtime = 0.00167183, iterations = 2, colliding pairs = 0, initial colliding pairs = 2, solution cost = 4452, initial solution cost = 4443, failed iterations = 0
[DBG]  init_lns->sum_of_costs after init_lns->run: 4452
[DBG]  sum_of_costs after assignment from init_lns->run: 4452
[DBG]  Recomputing sum_of_cost by dividing neighbor.sum_of_costs and neighbor.old_sum_of_costs
[STAT] sum_of_costs after recomputation: 4452
[STAT] Iteration 9
[DBG]  Random chance did not select SAT operator (r=86), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 9
[DBG]  Random chance did not select SAT operator (r=67), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] neighbor.sum_of_costs before recomputation: 260
[STAT] neighbor.old_sum_of_costs before recomputation: 263
[STAT] sum_of_costs before recomputation: 4452
[DBG]  Recomputing sum_of_cost by dividing neighbor.sum_of_costs and neighbor.old_sum_of_costs
[STAT] sum_of_costs after recomputation: 4449
[STAT] Iteration 10
[DBG]  Random chance did not select SAT operator (r=74), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 10
[DBG]  Random chance did not select SAT operator (r=90), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 10
[DBG]  Random chance did not select SAT operator (r=24), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 10
[DBG]  Random chance did not select SAT operator (r=83), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 10
[DBG]  Random chance did not select SAT operator (r=81), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] neighbor.sum_of_costs before recomputation: 247
[STAT] neighbor.old_sum_of_costs before recomputation: 248
[STAT] sum_of_costs before recomputation: 4449
[DBG]  Recomputing sum_of_cost by dividing neighbor.sum_of_costs and neighbor.old_sum_of_costs
[STAT] sum_of_costs after recomputation: 4448
[STAT] Iteration 11
[DBG]  Random chance did not select SAT operator (r=43), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] neighbor.sum_of_costs before recomputation: 213
[STAT] neighbor.old_sum_of_costs before recomputation: 216
[STAT] sum_of_costs before recomputation: 4448
[DBG]  Recomputing sum_of_cost by dividing neighbor.sum_of_costs and neighbor.old_sum_of_costs
[STAT] sum_of_costs after recomputation: 4445
[STAT] Iteration 12
[DBG]  Random chance did not select SAT operator (r=87), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] neighbor.sum_of_costs before recomputation: 280
[STAT] neighbor.old_sum_of_costs before recomputation: 282
[STAT] sum_of_costs before recomputation: 4445
[DBG]  Recomputing sum_of_cost by dividing neighbor.sum_of_costs and neighbor.old_sum_of_costs
[STAT] sum_of_costs after recomputation: 4443
[STAT] Iteration 13
[DBG]  Random chance did not select SAT operator (r=92), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 13
[DBG]  Random chance did not select SAT operator (r=66), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] neighbor.sum_of_costs before recomputation: 306
[STAT] neighbor.old_sum_of_costs before recomputation: 309
[STAT] sum_of_costs before recomputation: 4443
[DBG]  Recomputing sum_of_cost by dividing neighbor.sum_of_costs and neighbor.old_sum_of_costs
[STAT] sum_of_costs after recomputation: 4440
[STAT] Iteration 14
[DBG]  Random chance did not select SAT operator (r=27), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 14
[DBG]  Random chance did not select SAT operator (r=15), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 14
[DBG]  Random chance did not select SAT operator (r=51), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 14
[DBG]  Random chance did not select SAT operator (r=80), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 14
[DBG]  Random chance did not select SAT operator (r=38), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] neighbor.sum_of_costs before recomputation: 265
[STAT] neighbor.old_sum_of_costs before recomputation: 268
[STAT] sum_of_costs before recomputation: 4440
[DBG]  Recomputing sum_of_cost by dividing neighbor.sum_of_costs and neighbor.old_sum_of_costs
[STAT] sum_of_costs after recomputation: 4437
[STAT] Iteration 15
[DBG]  Random chance did not select SAT operator (r=26), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] neighbor.sum_of_costs before recomputation: 220
[STAT] neighbor.old_sum_of_costs before recomputation: 227
[STAT] sum_of_costs before recomputation: 4437
[DBG]  Recomputing sum_of_cost by dividing neighbor.sum_of_costs and neighbor.old_sum_of_costs
[STAT] sum_of_costs after recomputation: 4430
[STAT] Iteration 16
[DBG]  Random chance did not select SAT operator (r=46), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] neighbor.sum_of_costs before recomputation: 280
[STAT] neighbor.old_sum_of_costs before recomputation: 281
[STAT] sum_of_costs before recomputation: 4430
[DBG]  Recomputing sum_of_cost by dividing neighbor.sum_of_costs and neighbor.old_sum_of_costs
[STAT] sum_of_costs after recomputation: 4429
[STAT] Iteration 17
[DBG]  Random chance did not select SAT operator (r=36), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 17
[DBG]  Random chance did not select SAT operator (r=84), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 17
[DBG]  Random chance did not select SAT operator (r=29), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 17
[DBG]  Using SAT operator (destroy+repair SAT).
[DBG]  ====================
[DBG]  SAT destroy operator called.
[DBG]  SAT heuristic: 2
[DBG]  key_agent_id: 28
[DBG]  key_agent_id global path length: 44
[DBG]  Submap content (global positions):
[DBG]  595 596 597 598 599 
[DBG]  627 628 629 630 631 
[DBG]  659 660 661 662 663 
[DBG]  691 692 693 694 695 
[DBG]  723 724 725 726 727 
[DBG]  Map content with agents and obstacles:
[DBG]  X A A X . 
[DBG]  . A A X . 
[DBG]  A . A X X 
[DBG]  . A X X X 
[DBG]  X . . . . 
[DBG]  content of the map structure that we pass to the SAT solver:
[DBG]  -1  1  1  -1  1  
[DBG]  1  1  1  -1  1  
[DBG]  1  1  1  -1  -1  
[DBG]  1  1  -1  -1  -1  
[DBG]  -1  1  1  1  1  
[DBG]  Identifying agents in a submap for rescheduling (when key_agent is there at the time 21):
[DBG]  Agent 11 found intervals in the sub-map:
[DBG]   [18..21]
[DBG]  Agent 11 (interval in submap: [18..21]) contains time 21, added to replan.
[DBG]  Agent 28 found intervals in the sub-map:
[DBG]   [0..35] [40..43]
[DBG]  Agent 28 (interval in submap: [0..35]) contains time 21, added to replan.
[DBG]  Agent 30 found intervals in the sub-map:
[DBG]   [20..25]
[DBG]  Agent 30 (interval in submap: [20..25]) contains time 21, added to replan.
[DBG]  Agent 56 found intervals in the sub-map:
[DBG]   [19..24]
[DBG]  Agent 56 (interval in submap: [19..24]) contains time 21, added to replan.
[DBG]  Agent 61 found intervals in the sub-map:
[DBG]   [17..21]
[DBG]  Agent 61 (interval in submap: [17..21]) contains time 21, added to replan.
[DBG]  Agent 79 found intervals in the sub-map:
[DBG]   [17..22]
[DBG]  Agent 79 (interval in submap: [17..22]) contains time 21, added to replan.
[DBG]  Agent 91 found intervals in the sub-map:
[DBG]   [15..23]
[DBG]  Agent 91 (interval in submap: [15..23]) contains time 21, added to replan.
[DBG]  Agent 11 | Start (global): 659 -> (local): (2, 0) at time 21 | Goal (global): 659 -> (local): (2, 0) at time 21
[DBG]  Agent 28 | Start (global): 661 -> (local): (2, 2) at time 21 | Goal (global): 724 -> (local): (4, 1) at time 35
[DBG]  Agent 30 | Start (global): 692 -> (local): (3, 1) at time 21 | Goal (global): 597 -> (local): (0, 2) at time 25
[DBG]  Agent 56 | Start (global): 628 -> (local): (1, 1) at time 21 | Goal (global): 597 -> (local): (0, 2) at time 24
[DBG]  Agent 61 | Start (global): 597 -> (local): (0, 2) at time 21 | Goal (global): 597 -> (local): (0, 2) at time 21
[DBG]  Agent 79 | Start (global): 629 -> (local): (1, 2) at time 21 | Goal (global): 597 -> (local): (0, 2) at time 22
[DBG]  Agent 91 | Start (global): 596 -> (local): (0, 1) at time 21 | Goal (global): 597 -> (local): (0, 2) at time 23
[DBG]  [REPAIR] SAT destroy operator called.
[DBG]  [REPAIR] SAT operator – launching subproblem FOR OPTIMIZATION.
[DBG]  Creating local paths (sx, sy) in the submap for T_sync = 21
[DBG]    Agent 11 (global paths from T=21 to 21) has local path: (2,0) 
[DBG]    Agent 28 (global paths from T=21 to 35) has local path: (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,1) (3,1) (4,1) 
[DBG]    Agent 30 (global paths from T=21 to 25) has local path: (3,1) (2,1) (1,1) (0,1) (0,2) 
[DBG]    Agent 56 (global paths from T=21 to 24) has local path: (1,1) (1,2) (1,2) (0,2) 
[DBG]    Agent 61 (global paths from T=21 to 21) has local path: (0,2) 
[DBG]    Agent 79 (global paths from T=21 to 22) has local path: (1,2) (0,2) 
[DBG]    Agent 91 (global paths from T=21 to 23) has local path: (0,1) (0,1) (0,2) 
[DBG]  Checking input data for SAT solver:
[DBG]    - Number of agents to replan: 7
[DBG]  Agent 11 has the original local path length: 1 => Start (2,0), Goal (2,0)
[DBG]  Agent 28 has the original local path length: 15 => Start (2,2), Goal (4,1)
[DBG]  Agent 30 has the original local path length: 5 => Start (3,1), Goal (0,2)
[DBG]  Agent 56 has the original local path length: 4 => Start (1,1), Goal (0,2)
[DBG]  Agent 61 has the original local path length: 1 => Start (0,2), Goal (0,2)
[DBG]  Agent 79 has the original local path length: 2 => Start (1,2), Goal (0,2)
[DBG]  Agent 91 has the original local path length: 3 => Start (0,1), Goal (0,2)
[DBG]  Start position: (2, 0), (2, 2), (3, 1), (1, 1), (0, 2), (1, 2), (0, 1), 
[DBG]  Goal position: (2, 0), (4, 1), (0, 2), (0, 2), (0, 2), (0, 2), (0, 2), 
[DBG]  SAT instance and solver created.
Currently solving
Instance name: scen
Map name: map
Encoding used: disappear_at_goal
SAT solver used: Kissat
Optimizing function: sum of costs
Number of agents: 7
Mks LB: 5
SoC LB: 18
Delta: 0
Remaining time: 300000 [ms]

[STAT] Solver returned: -1
[DBG]  SAT solver failed.
[STAT] SAT solver failed to find a valid solution.
[DBG]  ====================
[DBG]  SAT destroy operator called.
[DBG]  SAT heuristic: 2
[DBG]  key_agent_id: 28
[DBG]  key_agent_id global path length: 44
[DBG]  Submap content (global positions):
[DBG]  562 563 564 565 566 
[DBG]  594 595 596 597 598 
[DBG]  626 627 628 629 630 
[DBG]  658 659 660 661 662 
[DBG]  690 691 692 693 694 
[DBG]  Map content with agents and obstacles:
[DBG]  X . X . A 
[DBG]  . X . . X 
[DBG]  X . A . X 
[DBG]  . A . . X 
[DBG]  X A . X X 
[DBG]  content of the map structure that we pass to the SAT solver:
[DBG]  -1  1  -1  1  1  
[DBG]  1  -1  1  1  -1  
[DBG]  -1  1  1  1  -1  
[DBG]  1  1  1  1  -1  
[DBG]  -1  1  1  -1  -1  
[DBG]  Identifying agents in a submap for rescheduling (when key_agent is there at the time 3):
[DBG]  Agent 28 found intervals in the sub-map:
[DBG]   [0..34]
[DBG]  Agent 28 (interval in submap: [0..34]) contains time 3, added to replan.
[DBG]  Agent 63 found intervals in the sub-map:
[DBG]   [2..18]
[DBG]  Agent 63 (interval in submap: [2..18]) contains time 3, added to replan.
[DBG]  Agent 104 found intervals in the sub-map:
[DBG]   [0..4]
[DBG]  Agent 104 (interval in submap: [0..4]) contains time 3, added to replan.
[DBG]  Agent 108 found intervals in the sub-map:
[DBG]   [0..6]
[DBG]  Agent 108 (interval in submap: [0..6]) contains time 3, added to replan.
[DBG]  Agent 28 | Start (global): 628 -> (local): (2, 2) at time 3 | Goal (global): 692 -> (local): (4, 2) at time 34
[DBG]  Agent 63 | Start (global): 659 -> (local): (3, 1) at time 3 | Goal (global): 565 -> (local): (0, 3) at time 18
[DBG]  Agent 104 | Start (global): 566 -> (local): (0, 4) at time 3 | Goal (global): 566 -> (local): (0, 4) at time 4
[DBG]  Agent 108 | Start (global): 691 -> (local): (4, 1) at time 3 | Goal (global): 692 -> (local): (4, 2) at time 6
[DBG]  [REPAIR] SAT destroy operator called.
[DBG]  [REPAIR] SAT operator – launching subproblem FOR OPTIMIZATION.
[DBG]  Creating local paths (sx, sy) in the submap for T_sync = 3
[DBG]    Agent 28 (global paths from T=3 to 34) has local path: (2,2) (2,2) (2,2) (2,2) (3,2) (3,3) (3,3) (3,3) (3,3) (3,3) (3,3) (3,3) (3,3) (3,3) (3,3) (3,3) (3,3) (3,3) (3,3) (3,3) (3,3) (3,3) (3,3) (3,3) (3,3) (3,3) (3,3) (3,3) (3,3) (3,3) (3,2) (4,2) 
[DBG]    Agent 63 (global paths from T=3 to 18) has local path: (3,1) (3,1) (3,1) (4,1) (4,1) (4,1) (4,1) (4,1) (4,1) (4,2) (3,2) (2,2) (2,3) (1,3) (0,3) (0,3) 
[DBG]    Agent 104 (global paths from T=3 to 4) has local path: (0,4) (0,4) 
[DBG]    Agent 108 (global paths from T=3 to 6) has local path: (4,1) (4,1) (4,1) (4,2) 
[DBG]  Checking input data for SAT solver:
[DBG]    - Number of agents to replan: 4
[DBG]  Agent 28 has the original local path length: 32 => Start (2,2), Goal (4,2)
[DBG]  Agent 63 has the original local path length: 16 => Start (3,1), Goal (0,3)
[DBG]  Agent 104 has the original local path length: 2 => Start (0,4), Goal (0,4)
[DBG]  Agent 108 has the original local path length: 4 => Start (4,1), Goal (4,2)
[DBG]  Start position: (2, 2), (3, 1), (0, 4), (4, 1), 
[DBG]  Goal position: (4, 2), (0, 3), (0, 4), (4, 2), 
[DBG]  SAT instance and solver created.
Currently solving
Instance name: scen
Map name: map
Encoding used: disappear_at_goal
SAT solver used: Kissat
Optimizing function: sum of costs
Number of agents: 4
Mks LB: 6
SoC LB: 12
Delta: 0
Remaining time: 300000 [ms]

Vertex conflict! Agents 0, 2, timestep 3, location 0
Swapping conflict! Agents 0, 2, timestep 3, edge (0,0)
Vertex conflict! Agents 0, 2, timestep 4, location 0
Swapping conflict! Agents 0, 2, timestep 4, edge (0,0)
Vertex conflict! Agents 0, 2, timestep 5, location 0
Vertex conflict! Agents 0, 3, timestep 3, location 0
Swapping conflict! Agents 0, 3, timestep 3, edge (0,0)
Vertex conflict! Agents 0, 3, timestep 4, location 0
Swapping conflict! Agents 0, 3, timestep 4, edge (0,0)
Vertex conflict! Agents 0, 3, timestep 5, location 0
Vertex conflict! Agents 2, 3, timestep 2, location 0
Swapping conflict! Agents 2, 3, timestep 2, edge (0,0)
Vertex conflict! Agents 2, 3, timestep 3, location 0
Swapping conflict! Agents 2, 3, timestep 3, edge (0,0)
Vertex conflict! Agents 2, 3, timestep 4, location 0
Swapping conflict! Agents 2, 3, timestep 4, edge (0,0)
Vertex conflict! Agents 2, 3, timestep 5, location 0
Found plan [agents = 4] [timesteps = 6]
Agent #0 : 7 11 14 0 0 0 
Agent #1 : 10 6 7 8 5 1 
Agent #2 : 2 0 0 0 0 0 
Agent #3 : 13 14 0 0 0 0 

[STAT] Solver returned: 0
[DBG]  Agent (index) 28 | New local path (submap idx):
[DBG]  7 11 14 
[DBG]  Agent (index) 63 | New local path (submap idx):
[DBG]  10 6 7 8 5 1 
[DBG]  Agent (index) 104 | New local path (submap idx):
[DBG]  2 
[DBG]  Agent (index) 108 | New local path (submap idx):
[DBG]  13 14 
[DBG]  Update the agent path 28 | Original local length: 32 | New local length: 3
[DBG]  agent 28 t=0 => decoded (sx,sy)=(2,2) => global_id=628
[DBG]  agent 28 t=1 => decoded (sx,sy)=(3,2) => global_id=660
[DBG]  agent 28 t=2 => decoded (sx,sy)=(4,2) => global_id=692
[DBG]  Complete path of agent 28:
[DBG]    Original: 661 660 628 628 628 628 628 660 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 660 692 724 756 756 756 756 724 725 726 727 
[DBG]    New:     661 660 628 628 660 692 724 756 756 756 756 724 725 726 727 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 661 660 628 
[DBG]    Local path (in submap): 628 660 692 724 756 756 756 756 724 725 726 727 
[DBG]    Suffix (out of submap): 
[DBG]  Original agent path length 28 je: 44
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 0: 661, 660, 628, 628, 660, 692, 724, 756, 756, 756, 756, 724, 725, 726, 727, 
[DBG]  Path for agent 28 updated, resulting length: 15
[DBG]  Update the agent path 63 | Original local length: 16 | New local length: 6
[DBG]  agent 63 t=0 => decoded (sx,sy)=(3,1) => global_id=659
[DBG]  agent 63 t=1 => decoded (sx,sy)=(2,1) => global_id=627
[DBG]  agent 63 t=2 => decoded (sx,sy)=(2,2) => global_id=628
[DBG]  agent 63 t=3 => decoded (sx,sy)=(2,3) => global_id=629
[DBG]  agent 63 t=4 => decoded (sx,sy)=(1,3) => global_id=597
[DBG]  agent 63 t=5 => decoded (sx,sy)=(0,3) => global_id=565
[DBG]  Complete path of agent 63:
[DBG]    Original: 689 657 658 659 659 659 691 691 691 691 691 691 692 660 628 629 597 565 565 533 501 469 468 467 466 465 433 401 400 368 368 368 336 335 303 302 
[DBG]    New:     689 657 658 659 627 628 629 597 565 533 501 469 468 467 466 465 433 401 400 368 368 368 336 335 303 302 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 689 657 658 
[DBG]    Local path (in submap): 659 627 628 629 597 565 533 501 469 468 467 466 465 433 401 400 
[DBG]    Suffix (out of submap): 368 368 368 336 335 303 302 
[DBG]  Original agent path length 63 je: 36
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 1: 689, 657, 658, 659, 627, 628, 629, 597, 565, 533, 501, 469, 468, 467, 466, 465, 433, 401, 400, 368, 368, 368, 336, 335, 303, 302, 
[DBG]  Path for agent 63 updated, resulting length: 26
[DBG]  Update the agent path 104 | Original local length: 2 | New local length: 1
[DBG]  agent 104 t=0 => decoded (sx,sy)=(0,4) => global_id=566
[DBG]  Complete path of agent 104:
[DBG]    Original: 566 566 566 566 566 534 534 534 502 470 438 439 407 375 343 311 310 278 277 276 
[DBG]    New:     566 566 566 566 534 534 534 502 470 438 439 407 375 343 311 310 278 277 276 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 566 566 566 
[DBG]    Local path (in submap): 566 534 
[DBG]    Suffix (out of submap): 534 534 502 470 438 439 407 375 343 311 310 278 277 276 
[DBG]  Original agent path length 104 je: 20
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 2: 566, 566, 566, 566, 534, 534, 534, 502, 470, 438, 439, 407, 375, 343, 311, 310, 278, 277, 276, 
[DBG]  Path for agent 104 updated, resulting length: 19
[DBG]  Update the agent path 108 | Original local length: 4 | New local length: 2
[DBG]  agent 108 t=0 => decoded (sx,sy)=(4,1) => global_id=691
[DBG]  agent 108 t=1 => decoded (sx,sy)=(4,2) => global_id=692
[DBG]  Complete path of agent 108:
[DBG]    Original: 628 627 659 691 691 691 692 724 756 788 820 821 822 854 886 887 919 920 952 953 954 955 956 957 989 1021 
[DBG]    New:     628 627 659 691 692 724 756 788 820 821 822 854 886 887 919 920 952 953 954 955 956 957 989 1021 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 628 627 659 
[DBG]    Local path (in submap): 691 692 724 756 
[DBG]    Suffix (out of submap): 788 820 821 822 854 886 887 919 920 952 953 954 955 956 957 989 1021 
[DBG]  Original agent path length 108 je: 26
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 3: 628, 627, 659, 691, 692, 724, 756, 788, 820, 821, 822, 854, 886, 887, 919, 920, 952, 953, 954, 955, 956, 957, 989, 1021, 
[DBG]  Path for agent 108 updated, resulting length: 24
[DBG]  Paths successfully updated.
[DBG]  (LNS.cpp) New path for agent 28: 
[DBG]  661, 660, 628, 628, 660, 692, 724, 756, 756, 756, 756, 724, 725, 726, 727, 
[DBG]  (LNS.cpp) New path for agent 63: 
[DBG]  689, 657, 658, 659, 627, 628, 629, 597, 565, 533, 501, 469, 468, 467, 466, 465, 433, 401, 400, 368, 368, 368, 336, 335, 303, 302, 
[DBG]  (LNS.cpp) New path for agent 104: 
[DBG]  566, 566, 566, 566, 534, 534, 534, 502, 470, 438, 439, 407, 375, 343, 311, 310, 278, 277, 276, 
[DBG]  (LNS.cpp) New path for agent 108: 
[DBG]  628, 627, 659, 691, 692, 724, 756, 788, 820, 821, 822, 854, 886, 887, 919, 920, 952, 953, 954, 955, 956, 957, 989, 1021, 
[DBG]  Delta value: 0.344262
[DBG]  Rewarding metric index = 3
[DBG]  component_weights = {0.234108, 0.330128, 0.18044, 0.255325}
[DBG]  opSuccess value: 1
[STAT] neighbor.sum_of_costs before recomputation: 80
[STAT] neighbor.old_sum_of_costs before recomputation: 122
[STAT] sum_of_costs before recomputation: 4429
[DBG]  Validate solution immediately after SAT success.
[WARNING] Problem after SAT: Vertex conflict between agents 28 and 1 at location 727 at timestep 14
[DBG]  [DEBUG] Attempting immediate repair via init_lns because problem occurred after SAT (should be applied only for conflicts...).
[DBG]  [DEBUG] Passing 150 agents to init_lns (skip=true).
[DBG]  [DEBUG] path_table contents for selected agents (neighbor.agents):
[DBG]    Agent 28 => controlling path length=15
[DBG]    Agent 63 => controlling path length=26
[DBG]    Agent 104 => controlling path length=19
[DBG]    Agent 108 => controlling path length=24
[DBG]  hodnota skip_initial_solution=1
[DBG]  We skip initialSolution => call buildCollisionData()
[DBG]  buildCollisionData() called – skip_initial_solution case.
[DBG]  Agents.size()=150, collision_graph.size()=150
[DBG]  agent 1 => updateCollidingPairs => foundCollision
[DBG]  agent 10 => updateCollidingPairs => foundCollision
[DBG]  agent 28 => updateCollidingPairs => foundCollision
[DBG]  agent 33 => updateCollidingPairs => foundCollision
[DBG]  agent 42 => updateCollidingPairs => foundCollision
[DBG]  agent 46 => updateCollidingPairs => foundCollision
[DBG]  agent 47 => updateCollidingPairs => foundCollision
[DBG]  agent 53 => updateCollidingPairs => foundCollision
[DBG]  agent 54 => updateCollidingPairs => foundCollision
[DBG]  agent 63 => updateCollidingPairs => foundCollision
[DBG]  agent 66 => updateCollidingPairs => foundCollision
[DBG]  agent 70 => updateCollidingPairs => foundCollision
[DBG]  agent 75 => updateCollidingPairs => foundCollision
[DBG]  agent 89 => updateCollidingPairs => foundCollision
[DBG]  agent 104 => updateCollidingPairs => foundCollision
[DBG]  agent 108 => updateCollidingPairs => foundCollision
[DBG]  agent 119 => updateCollidingPairs => foundCollision
[DBG]  agent 121 => updateCollidingPairs => foundCollision
[DBG]  agent 136 => updateCollidingPairs => foundCollision
[DBG]  agent 137 => updateCollidingPairs => foundCollision
[DBG]  agent 147 => updateCollidingPairs => foundCollision
[DBG]  Conflicting agent pairs:
[DBG]  agent 1 is in conflict with agent 28
[DBG]  agent 10 is in conflict with agent 63
[DBG]  agent 28 is in conflict with agent 42
[DBG]  agent 28 is in conflict with agent 46
[DBG]  agent 28 is in conflict with agent 70
[DBG]  agent 33 is in conflict with agent 63
[DBG]  agent 46 is in conflict with agent 108
[DBG]  agent 47 is in conflict with agent 108
[DBG]  agent 53 is in conflict with agent 104
[DBG]  agent 54 is in conflict with agent 63
[DBG]  agent 63 is in conflict with agent 89
[DBG]  agent 63 is in conflict with agent 119
[DBG]  agent 63 is in conflict with agent 121
[DBG]  agent 63 is in conflict with agent 136
[DBG]  agent 63 is in conflict with agent 137
[DBG]  agent 63 is in conflict with agent 147
[DBG]  agent 66 is in conflict with agent 104
[DBG]  agent 75 is in conflict with agent 104
[DBG]  agent 89 is in conflict with agent 104
[DBG]  agent 104 is in conflict with agent 136
[DBG]  agent 104 is in conflict with agent 147
[DBG]  buildCollisionData() => sum_of_costs=4387, num_of_colliding_pairs=21
[DBG]  buildCollisionData done => sum_of_costs=4387, num_of_colliding_pairs=21
[DBG]  sum_of_cost hodnota: 4387
[DBG]  After skip/init build => iteration_stats.back(): sum_of_costs=4387, collisions=21
[DEBUG] Using default neighbor generation strategy for conflicts: 1
[DEBUG] Using default neighbor generation strategy for conflicts: 0
[DEBUG] Using default neighbor generation strategy for conflicts: 0
[DEBUG] Using default neighbor generation strategy for conflicts: 2
[DEBUG] Using default neighbor generation strategy for conflicts: 0
	InitLNS(PP): runtime = 0.00623504, iterations = 6, colliding pairs = 0, initial colliding pairs = 21, solution cost = 4413, initial solution cost = 4387, failed iterations = 0
[DBG]  init_lns->sum_of_costs after init_lns->run: 4413
[DBG]  sum_of_costs after assignment from init_lns->run: 4413
[DBG]  Recomputing sum_of_cost by dividing neighbor.sum_of_costs and neighbor.old_sum_of_costs
[STAT] sum_of_costs after recomputation: 4413
[STAT] Iteration 18
[DBG]  Random chance did not select SAT operator (r=49), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 18
[DBG]  Using SAT operator (destroy+repair SAT).
[DBG]  ====================
[DBG]  SAT destroy operator called.
[DBG]  SAT heuristic: 2
[DBG]  key_agent_id: 28
[DBG]  key_agent_id global path length: 46
[DBG]  Submap content (global positions):
[DBG]  595 596 597 598 599 
[DBG]  627 628 629 630 631 
[DBG]  659 660 661 662 663 
[DBG]  691 692 693 694 695 
[DBG]  723 724 725 726 727 
[DBG]  Map content with agents and obstacles:
[DBG]  X . . X . 
[DBG]  . A . X . 
[DBG]  . . A X X 
[DBG]  . A X X X 
[DBG]  X . . . . 
[DBG]  content of the map structure that we pass to the SAT solver:
[DBG]  -1  1  1  -1  1  
[DBG]  1  1  1  -1  1  
[DBG]  1  1  1  -1  -1  
[DBG]  1  1  -1  -1  -1  
[DBG]  -1  1  1  1  1  
[DBG]  Identifying agents in a submap for rescheduling (when key_agent is there at the time 16):
[DBG]  Agent 28 found intervals in the sub-map:
[DBG]   [0..45]
[DBG]  Agent 28 (interval in submap: [0..45]) contains time 16, added to replan.
[DBG]  Agent 74 found intervals in the sub-map:
[DBG]   [14..18]
[DBG]  Agent 74 (interval in submap: [14..18]) contains time 16, added to replan.
[DBG]  Agent 91 found intervals in the sub-map:
[DBG]   [15..23]
[DBG]  Agent 91 (interval in submap: [15..23]) contains time 16, added to replan.
[DBG]  Agent 28 | Start (global): 661 -> (local): (2, 2) at time 16 | Goal (global): 727 -> (local): (4, 4) at time 45
[DBG]  Agent 74 | Start (global): 628 -> (local): (1, 1) at time 16 | Goal (global): 597 -> (local): (0, 2) at time 18
[DBG]  Agent 91 | Start (global): 692 -> (local): (3, 1) at time 16 | Goal (global): 597 -> (local): (0, 2) at time 23
[DBG]  [REPAIR] SAT destroy operator called.
[DBG]  [REPAIR] SAT operator – launching subproblem FOR OPTIMIZATION.
[DBG]  Creating local paths (sx, sy) in the submap for T_sync = 16
[DBG]    Agent 28 (global paths from T=16 to 45) has local path: (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (1,2) (1,1) (1,0) (2,0) (3,0) (3,1) (4,1) (4,2) (4,3) (4,4) 
[DBG]    Agent 74 (global paths from T=16 to 18) has local path: (1,1) (1,2) (0,2) 
[DBG]    Agent 91 (global paths from T=16 to 23) has local path: (3,1) (2,1) (1,1) (0,1) (0,1) (0,1) (0,1) (0,2) 
[DBG]  Checking input data for SAT solver:
[DBG]    - Number of agents to replan: 3
[DBG]  Agent 28 has the original local path length: 30 => Start (2,2), Goal (4,4)
[DBG]  Agent 74 has the original local path length: 3 => Start (1,1), Goal (0,2)
[DBG]  Agent 91 has the original local path length: 8 => Start (3,1), Goal (0,2)
[DBG]  Start position: (2, 2), (1, 1), (3, 1), 
[DBG]  Goal position: (4, 4), (0, 2), (0, 2), 
[DBG]  SAT instance and solver created.
Currently solving
Instance name: scen
Map name: map
Encoding used: disappear_at_goal
SAT solver used: Kissat
Optimizing function: sum of costs
Number of agents: 3
Mks LB: 7
SoC LB: 15
Delta: 0
Remaining time: 300000 [ms]

[STAT] Solver returned: -1
[DBG]  SAT solver failed.
[STAT] SAT solver failed to find a valid solution.
[DBG]  ====================
[DBG]  SAT destroy operator called.
[DBG]  SAT heuristic: 2
[DBG]  key_agent_id: 28
[DBG]  key_agent_id global path length: 46
[DBG]  Submap content (global positions):
[DBG]  595 596 597 598 599 
[DBG]  627 628 629 630 631 
[DBG]  659 660 661 662 663 
[DBG]  691 692 693 694 695 
[DBG]  723 724 725 726 727 
[DBG]  Map content with agents and obstacles:
[DBG]  X A . X . 
[DBG]  . A A X . 
[DBG]  . . A X X 
[DBG]  . . X X X 
[DBG]  X . . . . 
[DBG]  content of the map structure that we pass to the SAT solver:
[DBG]  -1  1  1  -1  1  
[DBG]  1  1  1  -1  1  
[DBG]  1  1  1  -1  -1  
[DBG]  1  1  -1  -1  -1  
[DBG]  -1  1  1  1  1  
[DBG]  Identifying agents in a submap for rescheduling (when key_agent is there at the time 30):
[DBG]  Agent 26 found intervals in the sub-map:
[DBG]   [28..33]
[DBG]  Agent 26 (interval in submap: [28..33]) contains time 30, added to replan.
[DBG]  Agent 28 found intervals in the sub-map:
[DBG]   [0..45]
[DBG]  Agent 28 (interval in submap: [0..45]) contains time 30, added to replan.
[DBG]  Agent 53 found intervals in the sub-map:
[DBG]   [29..37]
[DBG]  Agent 53 (interval in submap: [29..37]) contains time 30, added to replan.
[DBG]  Agent 148 found intervals in the sub-map:
[DBG]   [20..32]
[DBG]  Agent 148 (interval in submap: [20..32]) contains time 30, added to replan.
[DBG]  Agent 26 | Start (global): 628 -> (local): (1, 1) at time 30 | Goal (global): 724 -> (local): (4, 1) at time 33
[DBG]  Agent 28 | Start (global): 661 -> (local): (2, 2) at time 30 | Goal (global): 727 -> (local): (4, 4) at time 45
[DBG]  Agent 53 | Start (global): 596 -> (local): (0, 1) at time 30 | Goal (global): 724 -> (local): (4, 1) at time 37
[DBG]  Agent 148 | Start (global): 629 -> (local): (1, 2) at time 30 | Goal (global): 660 -> (local): (2, 1) at time 32
[DBG]  [REPAIR] SAT destroy operator called.
[DBG]  [REPAIR] SAT operator – launching subproblem FOR OPTIMIZATION.
[DBG]  Creating local paths (sx, sy) in the submap for T_sync = 30
[DBG]    Agent 26 (global paths from T=30 to 33) has local path: (1,1) (2,1) (3,1) (4,1) 
[DBG]    Agent 28 (global paths from T=30 to 45) has local path: (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (1,2) (1,1) (1,0) (2,0) (3,0) (3,1) (4,1) (4,2) (4,3) (4,4) 
[DBG]    Agent 53 (global paths from T=30 to 37) has local path: (0,1) (0,1) (1,1) (1,0) (2,0) (3,0) (3,1) (4,1) 
[DBG]    Agent 148 (global paths from T=30 to 32) has local path: (1,2) (1,1) (2,1) 
[DBG]  Checking input data for SAT solver:
[DBG]    - Number of agents to replan: 4
[DBG]  Agent 26 has the original local path length: 4 => Start (1,1), Goal (4,1)
[DBG]  Agent 28 has the original local path length: 16 => Start (2,2), Goal (4,4)
[DBG]  Agent 53 has the original local path length: 8 => Start (0,1), Goal (4,1)
[DBG]  Agent 148 has the original local path length: 3 => Start (1,2), Goal (2,1)
[DBG]  Start position: (1, 1), (2, 2), (0, 1), (1, 2), 
[DBG]  Goal position: (4, 1), (4, 4), (4, 1), (2, 1), 
[DBG]  SAT instance and solver created.
Currently solving
Instance name: scen
Map name: map
Encoding used: disappear_at_goal
SAT solver used: Kissat
Optimizing function: sum of costs
Number of agents: 4
Mks LB: 7
SoC LB: 19
Delta: 0
Remaining time: 300000 [ms]

[STAT] Solver returned: -1
[DBG]  SAT solver failed.
[STAT] SAT solver failed to find a valid solution.
[DBG]  ====================
[DBG]  SAT destroy operator called.
[DBG]  SAT heuristic: 2
[DBG]  key_agent_id: 28
[DBG]  key_agent_id global path length: 46
[DBG]  Submap content (global positions):
[DBG]  595 596 597 598 599 
[DBG]  627 628 629 630 631 
[DBG]  659 660 661 662 663 
[DBG]  691 692 693 694 695 
[DBG]  723 724 725 726 727 
[DBG]  Map content with agents and obstacles:
[DBG]  X . . X . 
[DBG]  A A . X . 
[DBG]  . . A X X 
[DBG]  . A X X X 
[DBG]  X . . . . 
[DBG]  content of the map structure that we pass to the SAT solver:
[DBG]  -1  1  1  -1  1  
[DBG]  1  1  1  -1  1  
[DBG]  1  1  1  -1  -1  
[DBG]  1  1  -1  -1  -1  
[DBG]  -1  1  1  1  1  
[DBG]  Identifying agents in a submap for rescheduling (when key_agent is there at the time 11):
[DBG]  Agent 28 found intervals in the sub-map:
[DBG]   [0..45]
[DBG]  Agent 28 (interval in submap: [0..45]) contains time 11, added to replan.
[DBG]  Agent 46 found intervals in the sub-map:
[DBG]   [4..13]
[DBG]  Agent 46 (interval in submap: [4..13]) contains time 11, added to replan.
[DBG]  Agent 86 found intervals in the sub-map:
[DBG]   [10..14]
[DBG]  Agent 86 (interval in submap: [10..14]) contains time 11, added to replan.
[DBG]  Agent 89 found intervals in the sub-map:
[DBG]   [5..12]
[DBG]  Agent 89 (interval in submap: [5..12]) contains time 11, added to replan.
[DBG]  Agent 28 | Start (global): 661 -> (local): (2, 2) at time 11 | Goal (global): 727 -> (local): (4, 4) at time 45
[DBG]  Agent 46 | Start (global): 628 -> (local): (1, 1) at time 11 | Goal (global): 597 -> (local): (0, 2) at time 13
[DBG]  Agent 86 | Start (global): 627 -> (local): (1, 0) at time 11 | Goal (global): 597 -> (local): (0, 2) at time 14
[DBG]  Agent 89 | Start (global): 692 -> (local): (3, 1) at time 11 | Goal (global): 724 -> (local): (4, 1) at time 12
[DBG]  [REPAIR] SAT destroy operator called.
[DBG]  [REPAIR] SAT operator – launching subproblem FOR OPTIMIZATION.
[DBG]  Creating local paths (sx, sy) in the submap for T_sync = 11
[DBG]    Agent 28 (global paths from T=11 to 45) has local path: (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (1,2) (1,1) (1,0) (2,0) (3,0) (3,1) (4,1) (4,2) (4,3) (4,4) 
[DBG]    Agent 46 (global paths from T=11 to 13) has local path: (1,1) (1,2) (0,2) 
[DBG]    Agent 86 (global paths from T=11 to 14) has local path: (1,0) (1,1) (0,1) (0,2) 
[DBG]    Agent 89 (global paths from T=11 to 12) has local path: (3,1) (4,1) 
[DBG]  Checking input data for SAT solver:
[DBG]    - Number of agents to replan: 4
[DBG]  Agent 28 has the original local path length: 35 => Start (2,2), Goal (4,4)
[DBG]  Agent 46 has the original local path length: 3 => Start (1,1), Goal (0,2)
[DBG]  Agent 86 has the original local path length: 4 => Start (1,0), Goal (0,2)
[DBG]  Agent 89 has the original local path length: 2 => Start (3,1), Goal (4,1)
[DBG]  Start position: (2, 2), (1, 1), (1, 0), (3, 1), 
[DBG]  Goal position: (4, 4), (0, 2), (0, 2), (4, 1), 
[DBG]  SAT instance and solver created.
Currently solving
Instance name: scen
Map name: map
Encoding used: disappear_at_goal
SAT solver used: Kissat
Optimizing function: sum of costs
Number of agents: 4
Mks LB: 7
SoC LB: 16
Delta: 0
Remaining time: 300000 [ms]

Vertex conflict! Agents 1, 2, timestep 4, location 0
Swapping conflict! Agents 1, 2, timestep 4, edge (0,0)
Vertex conflict! Agents 1, 2, timestep 5, location 0
Swapping conflict! Agents 1, 2, timestep 5, edge (0,0)
Vertex conflict! Agents 1, 2, timestep 6, location 0
Vertex conflict! Agents 1, 3, timestep 3, location 0
Swapping conflict! Agents 1, 3, timestep 3, edge (0,0)
Vertex conflict! Agents 1, 3, timestep 4, location 0
Swapping conflict! Agents 1, 3, timestep 4, edge (0,0)
Vertex conflict! Agents 1, 3, timestep 5, location 0
Swapping conflict! Agents 1, 3, timestep 5, edge (0,0)
Vertex conflict! Agents 1, 3, timestep 6, location 0
Vertex conflict! Agents 2, 3, timestep 4, location 0
Swapping conflict! Agents 2, 3, timestep 4, edge (0,0)
Vertex conflict! Agents 2, 3, timestep 5, location 0
Swapping conflict! Agents 2, 3, timestep 5, edge (0,0)
Vertex conflict! Agents 2, 3, timestep 6, location 0
Found plan [agents = 4] [timesteps = 7]
Agent #0 : 9 8 11 12 13 14 15 
Agent #1 : 4 5 1 0 0 0 0 
Agent #2 : 3 4 5 1 0 0 0 
Agent #3 : 11 12 0 0 0 0 0 

[STAT] Solver returned: 0
[DBG]  Agent (index) 28 | New local path (submap idx):
[DBG]  9 8 11 12 13 14 15 
[DBG]  Agent (index) 46 | New local path (submap idx):
[DBG]  4 5 1 
[DBG]  Agent (index) 86 | New local path (submap idx):
[DBG]  3 4 5 1 
[DBG]  Agent (index) 89 | New local path (submap idx):
[DBG]  11 12 
[DBG]  Update the agent path 28 | Original local length: 35 | New local length: 7
[DBG]  agent 28 t=0 => decoded (sx,sy)=(2,2) => global_id=661
[DBG]  agent 28 t=1 => decoded (sx,sy)=(2,1) => global_id=660
[DBG]  agent 28 t=2 => decoded (sx,sy)=(3,1) => global_id=692
[DBG]  agent 28 t=3 => decoded (sx,sy)=(4,1) => global_id=724
[DBG]  agent 28 t=4 => decoded (sx,sy)=(4,2) => global_id=725
[DBG]  agent 28 t=5 => decoded (sx,sy)=(4,3) => global_id=726
[DBG]  agent 28 t=6 => decoded (sx,sy)=(4,4) => global_id=727
[DBG]  Complete path of agent 28:
[DBG]    Original: 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 629 628 627 659 691 692 724 725 726 727 
[DBG]    New:     661 661 661 661 661 661 661 661 661 661 661 661 660 692 724 725 726 727 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 661 661 661 661 661 661 661 661 661 661 661 
[DBG]    Local path (in submap): 661 660 692 724 725 726 727 
[DBG]    Suffix (out of submap): 
[DBG]  Original agent path length 28 je: 46
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 0: 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 660, 692, 724, 725, 726, 727, 
[DBG]  Path for agent 28 updated, resulting length: 18
[DBG]  Update the agent path 46 | Original local length: 3 | New local length: 3
[DBG]  agent 46 t=0 => decoded (sx,sy)=(1,1) => global_id=628
[DBG]  agent 46 t=1 => decoded (sx,sy)=(1,2) => global_id=629
[DBG]  agent 46 t=2 => decoded (sx,sy)=(0,2) => global_id=597
[DBG]  Complete path of agent 46:
[DBG]    Original: 786 787 755 756 724 725 724 692 660 659 627 628 629 597 565 533 533 501 501 501 502 503 504 505 506 474 475 443 444 412 380 381 349 317 285 284 252 
[DBG]    New:     786 787 755 756 724 725 724 692 660 659 627 628 629 597 565 533 533 501 501 501 502 503 504 505 506 474 475 443 444 412 380 381 349 317 285 284 252 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 786 787 755 756 724 725 724 692 660 659 627 
[DBG]    Local path (in submap): 628 629 597 
[DBG]    Suffix (out of submap): 565 533 533 501 501 501 502 503 504 505 506 474 475 443 444 412 380 381 349 317 285 284 252 
[DBG]  Original agent path length 46 je: 37
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 1: 786, 787, 755, 756, 724, 725, 724, 692, 660, 659, 627, 628, 629, 597, 565, 533, 533, 501, 501, 501, 502, 503, 504, 505, 506, 474, 475, 443, 444, 412, 380, 381, 349, 317, 285, 284, 252, 
[DBG]  Path for agent 46 updated, resulting length: 37
[DBG]  Update the agent path 86 | Original local length: 4 | New local length: 4
[DBG]  agent 86 t=0 => decoded (sx,sy)=(1,0) => global_id=627
[DBG]  agent 86 t=1 => decoded (sx,sy)=(1,1) => global_id=628
[DBG]  agent 86 t=2 => decoded (sx,sy)=(1,2) => global_id=629
[DBG]  agent 86 t=3 => decoded (sx,sy)=(0,2) => global_id=597
[DBG]  Complete path of agent 86:
[DBG]    Original: 781 782 750 751 719 720 721 689 657 658 659 627 628 596 597 565 566 534 534 502 503 504 505 506 538 539 540 541 
[DBG]    New:     781 782 750 751 719 720 721 689 657 658 659 627 628 629 597 565 566 534 534 502 503 504 505 506 538 539 540 541 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 781 782 750 751 719 720 721 689 657 658 659 
[DBG]    Local path (in submap): 627 628 629 597 
[DBG]    Suffix (out of submap): 565 566 534 534 502 503 504 505 506 538 539 540 541 
[DBG]  Original agent path length 86 je: 28
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 2: 781, 782, 750, 751, 719, 720, 721, 689, 657, 658, 659, 627, 628, 629, 597, 565, 566, 534, 534, 502, 503, 504, 505, 506, 538, 539, 540, 541, 
[DBG]  Path for agent 86 updated, resulting length: 28
[DBG]  Update the agent path 89 | Original local length: 2 | New local length: 2
[DBG]  agent 89 t=0 => decoded (sx,sy)=(3,1) => global_id=692
[DBG]  agent 89 t=1 => decoded (sx,sy)=(4,1) => global_id=724
[DBG]  Complete path of agent 89:
[DBG]    Original: 437 469 501 533 565 597 596 628 628 628 660 692 724 756 788 787 819 820 821 822 854 854 886 918 950 982 1014 1015 
[DBG]    New:     437 469 501 533 565 597 596 628 628 628 660 692 724 756 788 787 819 820 821 822 854 854 886 918 950 982 1014 1015 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 437 469 501 533 565 597 596 628 628 628 660 
[DBG]    Local path (in submap): 692 724 
[DBG]    Suffix (out of submap): 756 788 787 819 820 821 822 854 854 886 918 950 982 1014 1015 
[DBG]  Original agent path length 89 je: 28
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 3: 437, 469, 501, 533, 565, 597, 596, 628, 628, 628, 660, 692, 724, 756, 788, 787, 819, 820, 821, 822, 854, 854, 886, 918, 950, 982, 1014, 1015, 
[DBG]  Path for agent 89 updated, resulting length: 28
[DBG]  Paths successfully updated.
[DBG]  (LNS.cpp) New path for agent 28: 
[DBG]  661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 660, 692, 724, 725, 726, 727, 
[DBG]  (LNS.cpp) New path for agent 46: 
[DBG]  786, 787, 755, 756, 724, 725, 724, 692, 660, 659, 627, 628, 629, 597, 565, 533, 533, 501, 501, 501, 502, 503, 504, 505, 506, 474, 475, 443, 444, 412, 380, 381, 349, 317, 285, 284, 252, 
[DBG]  (LNS.cpp) New path for agent 86: 
[DBG]  781, 782, 750, 751, 719, 720, 721, 689, 657, 658, 659, 627, 628, 629, 597, 565, 566, 534, 534, 502, 503, 504, 505, 506, 538, 539, 540, 541, 
[DBG]  (LNS.cpp) New path for agent 89: 
[DBG]  437, 469, 501, 533, 565, 597, 596, 628, 628, 628, 660, 692, 724, 756, 788, 787, 819, 820, 821, 822, 854, 854, 886, 918, 950, 982, 1014, 1015, 
[DBG]  Delta value: 0.207407
[DBG]  Rewarding metric index = 0
[DBG]  component_weights = {0.279793, 0.310436, 0.169677, 0.240095}
[DBG]  opSuccess value: 1
[STAT] neighbor.sum_of_costs before recomputation: 107
[STAT] neighbor.old_sum_of_costs before recomputation: 135
[STAT] sum_of_costs before recomputation: 4413
[DBG]  Validate solution immediately after SAT success.
[WARNING] Problem after SAT: Target conflict: agent 42 (len 45) traverses target of agent 28 (len 17) at location 727 at timestep 44
[DBG]  [DEBUG] Attempting immediate repair via init_lns because problem occurred after SAT (should be applied only for conflicts...).
[DBG]  [DEBUG] Passing 150 agents to init_lns (skip=true).
[DBG]  [DEBUG] path_table contents for selected agents (neighbor.agents):
[DBG]    Agent 28 => controlling path length=18
[DBG]    Agent 46 => controlling path length=37
[DBG]    Agent 86 => controlling path length=28
[DBG]    Agent 89 => controlling path length=28
[DBG]  hodnota skip_initial_solution=1
[DBG]  We skip initialSolution => call buildCollisionData()
[DBG]  buildCollisionData() called – skip_initial_solution case.
[DBG]  Agents.size()=150, collision_graph.size()=150
[DBG]  agent 28 => updateCollidingPairs => foundCollision
[DBG]  agent 42 => updateCollidingPairs => foundCollision
[DBG]  Conflicting agent pairs:
[DBG]  agent 28 is in conflict with agent 42
[DBG]  buildCollisionData() => sum_of_costs=4385, num_of_colliding_pairs=1
[DBG]  buildCollisionData done => sum_of_costs=4385, num_of_colliding_pairs=1
[DBG]  sum_of_cost hodnota: 4385
[DBG]  After skip/init build => iteration_stats.back(): sum_of_costs=4385, collisions=1
[DEBUG] Using default neighbor generation strategy for conflicts: 2
[DEBUG] Using default neighbor generation strategy for conflicts: 1
	InitLNS(PP): runtime = 0.00259171, iterations = 3, colliding pairs = 0, initial colliding pairs = 1, solution cost = 4420, initial solution cost = 4385, failed iterations = 0
[DBG]  init_lns->sum_of_costs after init_lns->run: 4420
[DBG]  sum_of_costs after assignment from init_lns->run: 4420
[DBG]  Recomputing sum_of_cost by dividing neighbor.sum_of_costs and neighbor.old_sum_of_costs
[STAT] sum_of_costs after recomputation: 4420
[STAT] Iteration 19
[DBG]  Random chance did not select SAT operator (r=54), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 19
[DBG]  Using SAT operator (destroy+repair SAT).
[DBG]  ====================
[DBG]  SAT destroy operator called.
[DBG]  SAT heuristic: 2
[DBG]  key_agent_id: 28
[DBG]  key_agent_id global path length: 43
[DBG]  Submap content (global positions):
[DBG]  467 468 469 470 471 
[DBG]  499 500 501 502 503 
[DBG]  531 532 533 534 535 
[DBG]  563 564 565 566 567 
[DBG]  595 596 597 598 599 
[DBG]  Map content with agents and obstacles:
[DBG]  . . A A X 
[DBG]  . X A A A 
[DBG]  . X A A X 
[DBG]  . X . . X 
[DBG]  X . . X . 
[DBG]  content of the map structure that we pass to the SAT solver:
[DBG]  1  1  1  1  -1  
[DBG]  1  -1  1  1  1  
[DBG]  1  -1  1  1  -1  
[DBG]  1  -1  1  1  -1  
[DBG]  -1  1  1  -1  1  
[DBG]  Identifying agents in a submap for rescheduling (when key_agent is there at the time 17):
[DBG]  Agent 10 found intervals in the sub-map:
[DBG]   [11..17]
[DBG]  Agent 10 (interval in submap: [11..17]) contains time 17, added to replan.
[DBG]  Agent 28 found intervals in the sub-map:
[DBG]   [15..32]
[DBG]  Agent 28 (interval in submap: [15..32]) contains time 17, added to replan.
[DBG]  Agent 33 found intervals in the sub-map:
[DBG]   [14..19]
[DBG]  Agent 33 (interval in submap: [14..19]) contains time 17, added to replan.
[DBG]  Agent 46 found intervals in the sub-map:
[DBG]   [13..21]
[DBG]  Agent 46 (interval in submap: [13..21]) contains time 17, added to replan.
[DBG]  Agent 54 found intervals in the sub-map:
[DBG]   [12..18]
[DBG]  Agent 54 (interval in submap: [12..18]) contains time 17, added to replan.
[DBG]  Agent 57 found intervals in the sub-map:
[DBG]   [16..16]
[DBG]  Agent 57 is not in sub-map at time 17 (intervals: 
[DBG]  [16..16] )
[DBG]  Agent 86 found intervals in the sub-map:
[DBG]   [13..20]
[DBG]  Agent 86 (interval in submap: [13..20]) contains time 17, added to replan.
[DBG]  Agent 135 found intervals in the sub-map:
[DBG]   [11..19]
[DBG]  Agent 135 (interval in submap: [11..19]) contains time 17, added to replan.
[DBG]  Agent 10 | Start (global): 503 -> (local): (1, 4) at time 17 | Goal (global): 503 -> (local): (1, 4) at time 17
[DBG]  Agent 28 | Start (global): 533 -> (local): (2, 2) at time 17 | Goal (global): 596 -> (local): (4, 1) at time 32
[DBG]  Agent 33 | Start (global): 470 -> (local): (0, 3) at time 17 | Goal (global): 503 -> (local): (1, 4) at time 19
[DBG]  Agent 46 | Start (global): 501 -> (local): (1, 2) at time 17 | Goal (global): 503 -> (local): (1, 4) at time 21
[DBG]  Agent 54 | Start (global): 502 -> (local): (1, 3) at time 17 | Goal (global): 503 -> (local): (1, 4) at time 18
[DBG]  Agent 86 | Start (global): 534 -> (local): (2, 3) at time 17 | Goal (global): 503 -> (local): (1, 4) at time 20
[DBG]  Agent 135 | Start (global): 469 -> (local): (0, 2) at time 17 | Goal (global): 467 -> (local): (0, 0) at time 19
[DBG]  [REPAIR] SAT destroy operator called.
[DBG]  [REPAIR] SAT operator – launching subproblem FOR OPTIMIZATION.
[DBG]  Creating local paths (sx, sy) in the submap for T_sync = 17
[DBG]    Agent 10 (global paths from T=17 to 17) has local path: (1,4) 
[DBG]    Agent 28 (global paths from T=17 to 32) has local path: (2,2) (2,2) (2,2) (1,2) (0,2) (0,1) (0,1) (0,1) (0,1) (0,2) (1,2) (2,2) (3,2) (4,2) (4,2) (4,1) 
[DBG]    Agent 33 (global paths from T=17 to 19) has local path: (0,3) (1,3) (1,4) 
[DBG]    Agent 46 (global paths from T=17 to 21) has local path: (1,2) (1,2) (1,2) (1,3) (1,4) 
[DBG]    Agent 54 (global paths from T=17 to 18) has local path: (1,3) (1,4) 
[DBG]    Agent 86 (global paths from T=17 to 20) has local path: (2,3) (2,3) (1,3) (1,4) 
[DBG]    Agent 135 (global paths from T=17 to 19) has local path: (0,2) (0,1) (0,0) 
[DBG]  Checking input data for SAT solver:
[DBG]    - Number of agents to replan: 7
[DBG]  Agent 10 has the original local path length: 1 => Start (1,4), Goal (1,4)
[DBG]  Agent 28 has the original local path length: 16 => Start (2,2), Goal (4,1)
[DBG]  Agent 33 has the original local path length: 3 => Start (0,3), Goal (1,4)
[DBG]  Agent 46 has the original local path length: 5 => Start (1,2), Goal (1,4)
[DBG]  Agent 54 has the original local path length: 2 => Start (1,3), Goal (1,4)
[DBG]  Agent 86 has the original local path length: 4 => Start (2,3), Goal (1,4)
[DBG]  Agent 135 has the original local path length: 3 => Start (0,2), Goal (0,0)
[DBG]  Start position: (1, 4), (2, 2), (0, 3), (1, 2), (1, 3), (2, 3), (0, 2), 
[DBG]  Goal position: (1, 4), (4, 1), (1, 4), (1, 4), (1, 4), (1, 4), (0, 0), 
[DBG]  SAT instance and solver created.
Currently solving
Instance name: scen
Map name: map
Encoding used: disappear_at_goal
SAT solver used: Kissat
Optimizing function: sum of costs
Number of agents: 7
Mks LB: 4
SoC LB: 19
Delta: 0
Remaining time: 300000 [ms]

[STAT] Solver returned: -1
[DBG]  SAT solver failed.
[STAT] SAT solver failed to find a valid solution.
[DBG]  ====================
[DBG]  SAT destroy operator called.
[DBG]  SAT heuristic: 2
[DBG]  key_agent_id: 28
[DBG]  key_agent_id global path length: 43
[DBG]  Submap content (global positions):
[DBG]  561 562 563 564 565 
[DBG]  593 594 595 596 597 
[DBG]  625 626 627 628 629 
[DBG]  657 658 659 660 661 
[DBG]  689 690 691 692 693 
[DBG]  Map content with agents and obstacles:
[DBG]  . X . X . 
[DBG]  . . X . . 
[DBG]  . X A . . 
[DBG]  A A A . . 
[DBG]  . X . . X 
[DBG]  content of the map structure that we pass to the SAT solver:
[DBG]  1  -1  1  -1  1  
[DBG]  1  1  -1  1  1  
[DBG]  1  -1  1  1  1  
[DBG]  1  1  1  1  1  
[DBG]  1  -1  1  1  -1  
[DBG]  Identifying agents in a submap for rescheduling (when key_agent is there at the time 34):
[DBG]  Agent 11 found intervals in the sub-map:
[DBG]   [26..34]
[DBG]  Agent 11 (interval in submap: [26..34]) contains time 34, added to replan.
[DBG]  Agent 28 found intervals in the sub-map:
[DBG]   [0..16] [29..38]
[DBG]  Agent 28 (interval in submap: [29..38]) contains time 34, added to replan.
[DBG]  Agent 42 found intervals in the sub-map:
[DBG]   [30..37]
[DBG]  Agent 42 (interval in submap: [30..37]) contains time 34, added to replan.
[DBG]  Agent 53 found intervals in the sub-map:
[DBG]   [28..36]
[DBG]  Agent 53 (interval in submap: [28..36]) contains time 34, added to replan.
[DBG]  Agent 11 | Start (global): 657 -> (local): (3, 0) at time 34 | Goal (global): 657 -> (local): (3, 0) at time 34
[DBG]  Agent 28 | Start (global): 627 -> (local): (2, 2) at time 34 | Goal (global): 692 -> (local): (4, 3) at time 38
[DBG]  Agent 42 | Start (global): 658 -> (local): (3, 1) at time 34 | Goal (global): 692 -> (local): (4, 3) at time 37
[DBG]  Agent 53 | Start (global): 659 -> (local): (3, 2) at time 34 | Goal (global): 692 -> (local): (4, 3) at time 36
[DBG]  [REPAIR] SAT destroy operator called.
[DBG]  [REPAIR] SAT operator – launching subproblem FOR OPTIMIZATION.
[DBG]  Creating local paths (sx, sy) in the submap for T_sync = 34
[DBG]    Agent 11 (global paths from T=34 to 34) has local path: (3,0) 
[DBG]    Agent 28 (global paths from T=34 to 38) has local path: (2,2) (2,2) (3,2) (4,2) (4,3) 
[DBG]    Agent 42 (global paths from T=34 to 37) has local path: (3,1) (3,2) (4,2) (4,3) 
[DBG]    Agent 53 (global paths from T=34 to 36) has local path: (3,2) (4,2) (4,3) 
[DBG]  Checking input data for SAT solver:
[DBG]    - Number of agents to replan: 4
[DBG]  Agent 11 has the original local path length: 1 => Start (3,0), Goal (3,0)
[DBG]  Agent 28 has the original local path length: 5 => Start (2,2), Goal (4,3)
[DBG]  Agent 42 has the original local path length: 4 => Start (3,1), Goal (4,3)
[DBG]  Agent 53 has the original local path length: 3 => Start (3,2), Goal (4,3)
[DBG]  Start position: (3, 0), (2, 2), (3, 1), (3, 2), 
[DBG]  Goal position: (3, 0), (4, 3), (4, 3), (4, 3), 
[DBG]  SAT instance and solver created.
Currently solving
Instance name: scen
Map name: map
Encoding used: disappear_at_goal
SAT solver used: Kissat
Optimizing function: sum of costs
Number of agents: 4
Mks LB: 4
SoC LB: 12
Delta: 0
Remaining time: 300000 [ms]

[STAT] Solver returned: -1
[DBG]  SAT solver failed.
[STAT] SAT solver failed to find a valid solution.
[DBG]  ====================
[DBG]  SAT destroy operator called.
[DBG]  SAT heuristic: 2
[DBG]  key_agent_id: 28
[DBG]  key_agent_id global path length: 43
[DBG]  Submap content (global positions):
[DBG]  595 596 597 598 599 
[DBG]  627 628 629 630 631 
[DBG]  659 660 661 662 663 
[DBG]  691 692 693 694 695 
[DBG]  723 724 725 726 727 
[DBG]  Map content with agents and obstacles:
[DBG]  X A . X . 
[DBG]  . . . X . 
[DBG]  . . A X X 
[DBG]  . . X X X 
[DBG]  X A . . . 
[DBG]  content of the map structure that we pass to the SAT solver:
[DBG]  -1  1  1  -1  1  
[DBG]  1  1  1  -1  1  
[DBG]  1  1  1  -1  -1  
[DBG]  1  1  -1  -1  -1  
[DBG]  -1  1  1  1  1  
[DBG]  Identifying agents in a submap for rescheduling (when key_agent is there at the time 6):
[DBG]  Agent 28 found intervals in the sub-map:
[DBG]   [0..15] [30..42]
[DBG]  Agent 28 (interval in submap: [0..15]) contains time 6, added to replan.
[DBG]  Agent 46 found intervals in the sub-map:
[DBG]   [4..13]
[DBG]  Agent 46 (interval in submap: [4..13]) contains time 6, added to replan.
[DBG]  Agent 63 found intervals in the sub-map:
[DBG]  
[DBG]  Agent 63 is not in sub-map at time 6 (intervals: 
[DBG]  )
[DBG]  Agent 89 found intervals in the sub-map:
[DBG]   [5..12]
[DBG]  Agent 89 (interval in submap: [5..12]) contains time 6, added to replan.
[DBG]  Agent 28 | Start (global): 661 -> (local): (2, 2) at time 6 | Goal (global): 597 -> (local): (0, 2) at time 15
[DBG]  Agent 46 | Start (global): 724 -> (local): (4, 1) at time 6 | Goal (global): 597 -> (local): (0, 2) at time 13
[DBG]  Agent 89 | Start (global): 596 -> (local): (0, 1) at time 6 | Goal (global): 724 -> (local): (4, 1) at time 12
[DBG]  [REPAIR] SAT destroy operator called.
[DBG]  [REPAIR] SAT operator – launching subproblem FOR OPTIMIZATION.
[DBG]  Creating local paths (sx, sy) in the submap for T_sync = 6
[DBG]    Agent 28 (global paths from T=6 to 15) has local path: (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (1,2) (1,2) (0,2) 
[DBG]    Agent 46 (global paths from T=6 to 13) has local path: (4,1) (3,1) (2,1) (2,0) (1,0) (1,1) (1,2) (0,2) 
[DBG]    Agent 89 (global paths from T=6 to 12) has local path: (0,1) (1,1) (1,1) (1,1) (2,1) (3,1) (4,1) 
[DBG]  Checking input data for SAT solver:
[DBG]    - Number of agents to replan: 3
[DBG]  Agent 28 has the original local path length: 10 => Start (2,2), Goal (0,2)
[DBG]  Agent 46 has the original local path length: 8 => Start (4,1), Goal (0,2)
[DBG]  Agent 89 has the original local path length: 7 => Start (0,1), Goal (4,1)
[DBG]  Start position: (2, 2), (4, 1), (0, 1), 
[DBG]  Goal position: (0, 2), (0, 2), (4, 1), 
[DBG]  SAT instance and solver created.
Currently solving
Instance name: scen
Map name: map
Encoding used: disappear_at_goal
SAT solver used: Kissat
Optimizing function: sum of costs
Number of agents: 3
Mks LB: 6
SoC LB: 14
Delta: 0
Remaining time: 300000 [ms]

[STAT] Solver returned: -1
[DBG]  SAT solver failed.
[STAT] SAT solver failed to find a valid solution.
[DBG]  ====================
[DBG]  SAT destroy operator called.
[DBG]  SAT heuristic: 2
[DBG]  key_agent_id: 28
[DBG]  key_agent_id global path length: 43
[DBG]  Submap content (global positions):
[DBG]  563 564 565 566 567 
[DBG]  595 596 597 598 599 
[DBG]  627 628 629 630 631 
[DBG]  659 660 661 662 663 
[DBG]  691 692 693 694 695 
[DBG]  Map content with agents and obstacles:
[DBG]  . X . . X 
[DBG]  X A A X . 
[DBG]  . . A X . 
[DBG]  . . . X X 
[DBG]  . . X X X 
[DBG]  content of the map structure that we pass to the SAT solver:
[DBG]  1  -1  1  1  -1  
[DBG]  -1  1  1  -1  1  
[DBG]  1  1  1  -1  1  
[DBG]  1  1  1  -1  -1  
[DBG]  1  1  -1  -1  -1  
[DBG]  Identifying agents in a submap for rescheduling (when key_agent is there at the time 13):
[DBG]  Agent 28 found intervals in the sub-map:
[DBG]   [0..16] [29..38]
[DBG]  Agent 28 (interval in submap: [0..16]) contains time 13, added to replan.
[DBG]  Agent 46 found intervals in the sub-map:
[DBG]   [7..14]
[DBG]  Agent 46 (interval in submap: [7..14]) contains time 13, added to replan.
[DBG]  Agent 86 found intervals in the sub-map:
[DBG]   [10..16]
[DBG]  Agent 86 (interval in submap: [10..16]) contains time 13, added to replan.
[DBG]  Agent 28 | Start (global): 629 -> (local): (2, 2) at time 13 | Goal (global): 565 -> (local): (0, 2) at time 16
[DBG]  Agent 46 | Start (global): 597 -> (local): (1, 2) at time 13 | Goal (global): 565 -> (local): (0, 2) at time 14
[DBG]  Agent 86 | Start (global): 596 -> (local): (1, 1) at time 13 | Goal (global): 566 -> (local): (0, 3) at time 16
[DBG]  [REPAIR] SAT destroy operator called.
[DBG]  [REPAIR] SAT operator – launching subproblem FOR OPTIMIZATION.
[DBG]  Creating local paths (sx, sy) in the submap for T_sync = 13
[DBG]    Agent 28 (global paths from T=13 to 16) has local path: (2,2) (2,2) (1,2) (0,2) 
[DBG]    Agent 46 (global paths from T=13 to 14) has local path: (1,2) (0,2) 
[DBG]    Agent 86 (global paths from T=13 to 16) has local path: (1,1) (1,2) (0,2) (0,3) 
[DBG]  Checking input data for SAT solver:
[DBG]    - Number of agents to replan: 3
[DBG]  Agent 28 has the original local path length: 4 => Start (2,2), Goal (0,2)
[DBG]  Agent 46 has the original local path length: 2 => Start (1,2), Goal (0,2)
[DBG]  Agent 86 has the original local path length: 4 => Start (1,1), Goal (0,3)
[DBG]  Start position: (2, 2), (1, 2), (1, 1), 
[DBG]  Goal position: (0, 2), (0, 2), (0, 3), 
[DBG]  SAT instance and solver created.
Currently solving
Instance name: scen
Map name: map
Encoding used: disappear_at_goal
SAT solver used: Kissat
Optimizing function: sum of costs
Number of agents: 3
Mks LB: 4
SoC LB: 9
Delta: 0
Remaining time: 300000 [ms]

[STAT] Solver returned: -1
[DBG]  SAT solver failed.
[STAT] SAT solver failed to find a valid solution.
[DBG]  ====================
[DBG]  SAT destroy operator called.
[DBG]  SAT heuristic: 2
[DBG]  key_agent_id: 28
[DBG]  key_agent_id global path length: 43
[DBG]  Submap content (global positions):
[DBG]  659 660 661 662 663 
[DBG]  691 692 693 694 695 
[DBG]  723 724 725 726 727 
[DBG]  755 756 757 758 759 
[DBG]  787 788 789 790 791 
[DBG]  Map content with agents and obstacles:
[DBG]  A . . X X 
[DBG]  . . X X X 
[DBG]  X . A A . 
[DBG]  . . . X . 
[DBG]  . . X . X 
[DBG]  content of the map structure that we pass to the SAT solver:
[DBG]  1  1  1  -1  -1  
[DBG]  1  1  -1  -1  -1  
[DBG]  -1  1  1  1  1  
[DBG]  1  1  1  -1  1  
[DBG]  1  1  -1  1  -1  
[DBG]  Identifying agents in a submap for rescheduling (when key_agent is there at the time 40):
[DBG]  Agent 28 found intervals in the sub-map:
[DBG]   [0..12] [36..42]
[DBG]  Agent 28 (interval in submap: [36..42]) contains time 40, added to replan.
[DBG]  Agent 42 found intervals in the sub-map:
[DBG]   [35..42]
[DBG]  Agent 42 (interval in submap: [35..42]) contains time 40, added to replan.
[DBG]  Agent 55 found intervals in the sub-map:
[DBG]   [40..42]
[DBG]  Agent 55 (interval in submap: [40..42]) contains time 40, added to replan.
[DBG]  Agent 148 found intervals in the sub-map:
[DBG]   [20..32]
[DBG]  Agent 148 is not in sub-map at time 40 (intervals: 
[DBG]  [20..32] )
[DBG]  Agent 28 | Start (global): 725 -> (local): (2, 2) at time 40 | Goal (global): 727 -> (local): (2, 4) at time 42
[DBG]  Agent 42 | Start (global): 726 -> (local): (2, 3) at time 40 | Goal (global): 759 -> (local): (3, 4) at time 42
[DBG]  Agent 55 | Start (global): 659 -> (local): (0, 0) at time 40 | Goal (global): 692 -> (local): (1, 1) at time 42
[DBG]  [REPAIR] SAT destroy operator called.
[DBG]  [REPAIR] SAT operator – launching subproblem FOR OPTIMIZATION.
[DBG]  Creating local paths (sx, sy) in the submap for T_sync = 40
[DBG]    Agent 28 (global paths from T=40 to 42) has local path: (2,2) (2,3) (2,4) 
[DBG]    Agent 42 (global paths from T=40 to 42) has local path: (2,3) (2,4) (3,4) 
[DBG]    Agent 55 (global paths from T=40 to 42) has local path: (0,0) (1,0) (1,1) 
[DBG]  Checking input data for SAT solver:
[DBG]    - Number of agents to replan: 3
[DBG]  Agent 28 has the original local path length: 3 => Start (2,2), Goal (2,4)
[DBG]  Agent 42 has the original local path length: 3 => Start (2,3), Goal (3,4)
[DBG]  Agent 55 has the original local path length: 3 => Start (0,0), Goal (1,1)
[DBG]  Start position: (2, 2), (2, 3), (0, 0), 
[DBG]  Goal position: (2, 4), (3, 4), (1, 1), 
[DBG]  SAT instance and solver created.
Currently solving
Instance name: scen
Map name: map
Encoding used: disappear_at_goal
SAT solver used: Kissat
Optimizing function: sum of costs
Number of agents: 3
Mks LB: 3
SoC LB: 9
Delta: 0
Remaining time: 300000 [ms]

Found plan [agents = 3] [timesteps = 3]
Agent #0 : 6 7 8 
Agent #1 : 7 8 12 
Agent #2 : 0 3 4 

[STAT] Solver returned: 0
[DBG]  Agent (index) 28 | New local path (submap idx):
[DBG]  6 7 8 
[DBG]  Agent (index) 42 | New local path (submap idx):
[DBG]  7 8 12 
[DBG]  Agent (index) 55 | New local path (submap idx):
[DBG]  0 3 4 
[DBG]  Update the agent path 28 | Original local length: 3 | New local length: 3
[DBG]  agent 28 t=0 => decoded (sx,sy)=(2,2) => global_id=725
[DBG]  agent 28 t=1 => decoded (sx,sy)=(2,3) => global_id=726
[DBG]  agent 28 t=2 => decoded (sx,sy)=(2,4) => global_id=727
[DBG]  Complete path of agent 28:
[DBG]    Original: 661 661 661 661 661 661 661 661 661 661 661 661 661 629 629 597 565 533 533 533 501 469 468 468 468 468 469 501 533 565 597 597 596 628 627 627 659 691 692 724 725 726 727 
[DBG]    New:     661 661 661 661 661 661 661 661 661 661 661 661 661 629 629 597 565 533 533 533 501 469 468 468 468 468 469 501 533 565 597 597 596 628 627 627 659 691 692 724 725 726 727 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 661 661 661 661 661 661 661 661 661 661 661 661 661 629 629 597 565 533 533 533 501 469 468 468 468 468 469 501 533 565 597 597 596 628 627 627 659 691 692 724 
[DBG]    Local path (in submap): 725 726 727 
[DBG]    Suffix (out of submap): 
[DBG]  Original agent path length 28 je: 43
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 0: 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 629, 629, 597, 565, 533, 533, 533, 501, 469, 468, 468, 468, 468, 469, 501, 533, 565, 597, 597, 596, 628, 627, 627, 659, 691, 692, 724, 725, 726, 727, 
[DBG]  Path for agent 28 updated, resulting length: 43
[DBG]  Update the agent path 42 | Original local length: 3 | New local length: 3
[DBG]  agent 42 t=0 => decoded (sx,sy)=(2,3) => global_id=726
[DBG]  agent 42 t=1 => decoded (sx,sy)=(2,4) => global_id=727
[DBG]  agent 42 t=2 => decoded (sx,sy)=(3,4) => global_id=759
[DBG]  Complete path of agent 42:
[DBG]    Original: 224 256 257 289 321 353 354 354 355 387 388 389 421 422 422 423 424 425 426 427 428 429 430 431 432 464 496 528 528 529 561 593 625 657 658 659 691 692 724 725 726 727 759 
[DBG]    New:     224 256 257 289 321 353 354 354 355 387 388 389 421 422 422 423 424 425 426 427 428 429 430 431 432 464 496 528 528 529 561 593 625 657 658 659 691 692 724 725 726 727 759 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 224 256 257 289 321 353 354 354 355 387 388 389 421 422 422 423 424 425 426 427 428 429 430 431 432 464 496 528 528 529 561 593 625 657 658 659 691 692 724 725 
[DBG]    Local path (in submap): 726 727 759 
[DBG]    Suffix (out of submap): 
[DBG]  Original agent path length 42 je: 43
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 1: 224, 256, 257, 289, 321, 353, 354, 354, 355, 387, 388, 389, 421, 422, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 464, 496, 528, 528, 529, 561, 593, 625, 657, 658, 659, 691, 692, 724, 725, 726, 727, 759, 
[DBG]  Path for agent 42 updated, resulting length: 43
[DBG]  Update the agent path 55 | Original local length: 3 | New local length: 3
[DBG]  agent 55 t=0 => decoded (sx,sy)=(0,0) => global_id=659
[DBG]  agent 55 t=1 => decoded (sx,sy)=(1,0) => global_id=691
[DBG]  agent 55 t=2 => decoded (sx,sy)=(1,1) => global_id=692
[DBG]  Complete path of agent 55:
[DBG]    Original: 34 35 67 68 69 70 71 72 73 105 137 138 139 140 141 173 205 237 269 270 302 303 335 367 368 400 432 464 465 466 467 468 469 501 533 565 597 629 628 627 659 691 692 
[DBG]    New:     34 35 67 68 69 70 71 72 73 105 137 138 139 140 141 173 205 237 269 270 302 303 335 367 368 400 432 464 465 466 467 468 469 501 533 565 597 629 628 627 659 691 692 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 34 35 67 68 69 70 71 72 73 105 137 138 139 140 141 173 205 237 269 270 302 303 335 367 368 400 432 464 465 466 467 468 469 501 533 565 597 629 628 627 
[DBG]    Local path (in submap): 659 691 692 
[DBG]    Suffix (out of submap): 
[DBG]  Original agent path length 55 je: 43
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 2: 34, 35, 67, 68, 69, 70, 71, 72, 73, 105, 137, 138, 139, 140, 141, 173, 205, 237, 269, 270, 302, 303, 335, 367, 368, 400, 432, 464, 465, 466, 467, 468, 469, 501, 533, 565, 597, 629, 628, 627, 659, 691, 692, 
[DBG]  Path for agent 55 updated, resulting length: 43
[DBG]  Paths successfully updated.
[DBG]  (LNS.cpp) New path for agent 28: 
[DBG]  661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 629, 629, 597, 565, 533, 533, 533, 501, 469, 468, 468, 468, 468, 469, 501, 533, 565, 597, 597, 596, 628, 627, 627, 659, 691, 692, 724, 725, 726, 727, 
[DBG]  (LNS.cpp) New path for agent 42: 
[DBG]  224, 256, 257, 289, 321, 353, 354, 354, 355, 387, 388, 389, 421, 422, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 464, 496, 528, 528, 529, 561, 593, 625, 657, 658, 659, 691, 692, 724, 725, 726, 727, 759, 
[DBG]  (LNS.cpp) New path for agent 55: 
[DBG]  34, 35, 67, 68, 69, 70, 71, 72, 73, 105, 137, 138, 139, 140, 141, 173, 205, 237, 269, 270, 302, 303, 335, 367, 368, 400, 432, 464, 465, 466, 467, 468, 469, 501, 533, 565, 597, 629, 628, 627, 659, 691, 692, 
[DBG]  Delta value: 0
[DBG]  Rewarding metric index = 1
[DBG]  component_weights = {0.275295, 0.321522, 0.166949, 0.236235}
[DBG]  opSuccess value: 1
[STAT] neighbor.sum_of_costs before recomputation: 126
[STAT] neighbor.old_sum_of_costs before recomputation: 126
[STAT] sum_of_costs before recomputation: 4420
[DBG]  Validate solution immediately after SAT success.
[DBG]  No problems after SAT replan.
[DBG]  Recomputing sum_of_cost by dividing neighbor.sum_of_costs and neighbor.old_sum_of_costs
[STAT] sum_of_costs after recomputation: 4420
[STAT] Iteration 20
[DBG]  Using SAT operator (destroy+repair SAT).
[DBG]  ====================
[DBG]  SAT destroy operator called.
[DBG]  SAT heuristic: 2
[DBG]  key_agent_id: 28
[DBG]  key_agent_id global path length: 43
[DBG]  Submap content (global positions):
[DBG]  593 594 595 596 597 
[DBG]  625 626 627 628 629 
[DBG]  657 658 659 660 661 
[DBG]  689 690 691 692 693 
[DBG]  721 722 723 724 725 
[DBG]  Map content with agents and obstacles:
[DBG]  . . X . A 
[DBG]  . X . . . 
[DBG]  . . A . . 
[DBG]  . X A A X 
[DBG]  . . X . . 
[DBG]  content of the map structure that we pass to the SAT solver:
[DBG]  1  1  -1  1  1  
[DBG]  1  -1  1  1  1  
[DBG]  1  1  1  1  1  
[DBG]  1  -1  1  1  -1  
[DBG]  1  1  -1  1  1  
[DBG]  Identifying agents in a submap for rescheduling (when key_agent is there at the time 36):
[DBG]  Agent 28 found intervals in the sub-map:
[DBG]   [0..15] [30..40]
[DBG]  Agent 28 (interval in submap: [30..40]) contains time 36, added to replan.
[DBG]  Agent 42 found intervals in the sub-map:
[DBG]   [31..39]
[DBG]  Agent 42 (interval in submap: [31..39]) contains time 36, added to replan.
[DBG]  Agent 53 found intervals in the sub-map:
[DBG]   [29..37]
[DBG]  Agent 53 (interval in submap: [29..37]) contains time 36, added to replan.
[DBG]  Agent 55 found intervals in the sub-map:
[DBG]   [36..42]
[DBG]  Agent 55 (interval in submap: [36..42]) contains time 36, added to replan.
[DBG]  Agent 148 found intervals in the sub-map:
[DBG]   [16..32]
[DBG]  Agent 148 is not in sub-map at time 36 (intervals: 
[DBG]  [16..32] )
[DBG]  Agent 28 | Start (global): 659 -> (local): (2, 2) at time 36 | Goal (global): 725 -> (local): (4, 4) at time 40
[DBG]  Agent 42 | Start (global): 691 -> (local): (3, 2) at time 36 | Goal (global): 725 -> (local): (4, 4) at time 39
[DBG]  Agent 53 | Start (global): 692 -> (local): (3, 3) at time 36 | Goal (global): 724 -> (local): (4, 3) at time 37
[DBG]  Agent 55 | Start (global): 597 -> (local): (0, 4) at time 36 | Goal (global): 692 -> (local): (3, 3) at time 42
[DBG]  [REPAIR] SAT destroy operator called.
[DBG]  [REPAIR] SAT operator – launching subproblem FOR OPTIMIZATION.
[DBG]  Creating local paths (sx, sy) in the submap for T_sync = 36
[DBG]    Agent 28 (global paths from T=36 to 40) has local path: (2,2) (3,2) (3,3) (4,3) (4,4) 
[DBG]    Agent 42 (global paths from T=36 to 39) has local path: (3,2) (3,3) (4,3) (4,4) 
[DBG]    Agent 53 (global paths from T=36 to 37) has local path: (3,3) (4,3) 
[DBG]    Agent 55 (global paths from T=36 to 42) has local path: (0,4) (1,4) (1,3) (1,2) (2,2) (3,2) (3,3) 
[DBG]  Checking input data for SAT solver:
[DBG]    - Number of agents to replan: 4
[DBG]  Agent 28 has the original local path length: 5 => Start (2,2), Goal (4,4)
[DBG]  Agent 42 has the original local path length: 4 => Start (3,2), Goal (4,4)
[DBG]  Agent 53 has the original local path length: 2 => Start (3,3), Goal (4,3)
[DBG]  Agent 55 has the original local path length: 7 => Start (0,4), Goal (3,3)
[DBG]  Start position: (2, 2), (3, 2), (3, 3), (0, 4), 
[DBG]  Goal position: (4, 4), (4, 4), (4, 3), (3, 3), 
[DBG]  SAT instance and solver created.
Currently solving
Instance name: scen
Map name: map
Encoding used: disappear_at_goal
SAT solver used: Kissat
Optimizing function: sum of costs
Number of agents: 4
Mks LB: 5
SoC LB: 16
Delta: 0
Remaining time: 300000 [ms]

Vertex conflict! Agents 1, 2, timestep 4, location 0
Found plan [agents = 4] [timesteps = 5]
Agent #0 : 10 14 15 18 19 
Agent #1 : 14 15 18 19 0 
Agent #2 : 15 18 0 0 0 
Agent #3 : 3 7 12 11 15 

[STAT] Solver returned: 0
[DBG]  Agent (index) 28 | New local path (submap idx):
[DBG]  10 14 15 18 19 
[DBG]  Agent (index) 42 | New local path (submap idx):
[DBG]  14 15 18 19 
[DBG]  Agent (index) 53 | New local path (submap idx):
[DBG]  15 18 
[DBG]  Agent (index) 55 | New local path (submap idx):
[DBG]  3 7 12 11 15 
[DBG]  Update the agent path 28 | Original local length: 5 | New local length: 5
[DBG]  agent 28 t=0 => decoded (sx,sy)=(2,2) => global_id=659
[DBG]  agent 28 t=1 => decoded (sx,sy)=(3,2) => global_id=691
[DBG]  agent 28 t=2 => decoded (sx,sy)=(3,3) => global_id=692
[DBG]  agent 28 t=3 => decoded (sx,sy)=(4,3) => global_id=724
[DBG]  agent 28 t=4 => decoded (sx,sy)=(4,4) => global_id=725
[DBG]  Complete path of agent 28:
[DBG]    Original: 661 661 661 661 661 661 661 661 661 661 661 661 661 629 629 597 565 533 533 533 501 469 468 468 468 468 469 501 533 565 597 597 596 628 627 627 659 691 692 724 725 726 727 
[DBG]    New:     661 661 661 661 661 661 661 661 661 661 661 661 661 629 629 597 565 533 533 533 501 469 468 468 468 468 469 501 533 565 597 597 596 628 627 627 659 691 692 724 725 726 727 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 661 661 661 661 661 661 661 661 661 661 661 661 661 629 629 597 565 533 533 533 501 469 468 468 468 468 469 501 533 565 597 597 596 628 627 627 
[DBG]    Local path (in submap): 659 691 692 724 725 
[DBG]    Suffix (out of submap): 726 727 
[DBG]  Original agent path length 28 je: 43
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 0: 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 629, 629, 597, 565, 533, 533, 533, 501, 469, 468, 468, 468, 468, 469, 501, 533, 565, 597, 597, 596, 628, 627, 627, 659, 691, 692, 724, 725, 726, 727, 
[DBG]  Path for agent 28 updated, resulting length: 43
[DBG]  Update the agent path 42 | Original local length: 4 | New local length: 4
[DBG]  agent 42 t=0 => decoded (sx,sy)=(3,2) => global_id=691
[DBG]  agent 42 t=1 => decoded (sx,sy)=(3,3) => global_id=692
[DBG]  agent 42 t=2 => decoded (sx,sy)=(4,3) => global_id=724
[DBG]  agent 42 t=3 => decoded (sx,sy)=(4,4) => global_id=725
[DBG]  Complete path of agent 42:
[DBG]    Original: 224 256 257 289 321 353 354 354 355 387 388 389 421 422 422 423 424 425 426 427 428 429 430 431 432 464 496 528 528 529 561 593 625 657 658 659 691 692 724 725 726 727 759 
[DBG]    New:     224 256 257 289 321 353 354 354 355 387 388 389 421 422 422 423 424 425 426 427 428 429 430 431 432 464 496 528 528 529 561 593 625 657 658 659 691 692 724 725 726 727 759 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 224 256 257 289 321 353 354 354 355 387 388 389 421 422 422 423 424 425 426 427 428 429 430 431 432 464 496 528 528 529 561 593 625 657 658 659 
[DBG]    Local path (in submap): 691 692 724 725 
[DBG]    Suffix (out of submap): 726 727 759 
[DBG]  Original agent path length 42 je: 43
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 1: 224, 256, 257, 289, 321, 353, 354, 354, 355, 387, 388, 389, 421, 422, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 464, 496, 528, 528, 529, 561, 593, 625, 657, 658, 659, 691, 692, 724, 725, 726, 727, 759, 
[DBG]  Path for agent 42 updated, resulting length: 43
[DBG]  Update the agent path 53 | Original local length: 2 | New local length: 2
[DBG]  agent 53 t=0 => decoded (sx,sy)=(3,3) => global_id=692
[DBG]  agent 53 t=1 => decoded (sx,sy)=(4,3) => global_id=724
[DBG]  Complete path of agent 53:
[DBG]    Original: 84 116 148 149 150 151 183 215 247 279 311 343 375 407 406 406 406 406 438 470 470 470 470 469 469 469 501 533 565 597 596 596 628 627 659 691 692 724 756 788 820 821 
[DBG]    New:     84 116 148 149 150 151 183 215 247 279 311 343 375 407 406 406 406 406 438 470 470 470 470 469 469 469 501 533 565 597 596 596 628 627 659 691 692 724 756 788 820 821 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 84 116 148 149 150 151 183 215 247 279 311 343 375 407 406 406 406 406 438 470 470 470 470 469 469 469 501 533 565 597 596 596 628 627 659 691 
[DBG]    Local path (in submap): 692 724 
[DBG]    Suffix (out of submap): 756 788 820 821 
[DBG]  Original agent path length 53 je: 42
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 2: 84, 116, 148, 149, 150, 151, 183, 215, 247, 279, 311, 343, 375, 407, 406, 406, 406, 406, 438, 470, 470, 470, 470, 469, 469, 469, 501, 533, 565, 597, 596, 596, 628, 627, 659, 691, 692, 724, 756, 788, 820, 821, 
[DBG]  Path for agent 53 updated, resulting length: 42
[DBG]  Update the agent path 55 | Original local length: 7 | New local length: 5
[DBG]  agent 55 t=0 => decoded (sx,sy)=(0,4) => global_id=597
[DBG]  agent 55 t=1 => decoded (sx,sy)=(1,4) => global_id=629
[DBG]  agent 55 t=2 => decoded (sx,sy)=(2,4) => global_id=661
[DBG]  agent 55 t=3 => decoded (sx,sy)=(2,3) => global_id=660
[DBG]  agent 55 t=4 => decoded (sx,sy)=(3,3) => global_id=692
[DBG]  Complete path of agent 55:
[DBG]    Original: 34 35 67 68 69 70 71 72 73 105 137 138 139 140 141 173 205 237 269 270 302 303 335 367 368 400 432 464 465 466 467 468 469 501 533 565 597 629 628 627 659 691 692 
[DBG]    New:     34 35 67 68 69 70 71 72 73 105 137 138 139 140 141 173 205 237 269 270 302 303 335 367 368 400 432 464 465 466 467 468 469 501 533 565 597 629 661 660 692 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 34 35 67 68 69 70 71 72 73 105 137 138 139 140 141 173 205 237 269 270 302 303 335 367 368 400 432 464 465 466 467 468 469 501 533 565 
[DBG]    Local path (in submap): 597 629 661 660 692 
[DBG]    Suffix (out of submap): 
[DBG]  Original agent path length 55 je: 43
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 3: 34, 35, 67, 68, 69, 70, 71, 72, 73, 105, 137, 138, 139, 140, 141, 173, 205, 237, 269, 270, 302, 303, 335, 367, 368, 400, 432, 464, 465, 466, 467, 468, 469, 501, 533, 565, 597, 629, 661, 660, 692, 
[DBG]  Path for agent 55 updated, resulting length: 41
[DBG]  Paths successfully updated.
[DBG]  (LNS.cpp) New path for agent 28: 
[DBG]  661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 629, 629, 597, 565, 533, 533, 533, 501, 469, 468, 468, 468, 468, 469, 501, 533, 565, 597, 597, 596, 628, 627, 627, 659, 691, 692, 724, 725, 726, 727, 
[DBG]  (LNS.cpp) New path for agent 42: 
[DBG]  224, 256, 257, 289, 321, 353, 354, 354, 355, 387, 388, 389, 421, 422, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 464, 496, 528, 528, 529, 561, 593, 625, 657, 658, 659, 691, 692, 724, 725, 726, 727, 759, 
[DBG]  (LNS.cpp) New path for agent 53: 
[DBG]  84, 116, 148, 149, 150, 151, 183, 215, 247, 279, 311, 343, 375, 407, 406, 406, 406, 406, 438, 470, 470, 470, 470, 469, 469, 469, 501, 533, 565, 597, 596, 596, 628, 627, 659, 691, 692, 724, 756, 788, 820, 821, 
[DBG]  (LNS.cpp) New path for agent 55: 
[DBG]  34, 35, 67, 68, 69, 70, 71, 72, 73, 105, 137, 138, 139, 140, 141, 173, 205, 237, 269, 270, 302, 303, 335, 367, 368, 400, 432, 464, 465, 466, 467, 468, 469, 501, 533, 565, 597, 629, 661, 660, 692, 
[DBG]  Delta value: 0.011976
[DBG]  Rewarding metric index = 1
[DBG]  component_weights = {0.269639, 0.33546, 0.163519, 0.231382}
[DBG]  opSuccess value: 1
[STAT] neighbor.sum_of_costs before recomputation: 165
[STAT] neighbor.old_sum_of_costs before recomputation: 167
[STAT] sum_of_costs before recomputation: 4420
[DBG]  Validate solution immediately after SAT success.
[WARNING] Problem after SAT: Target conflict: agent 55 (len 40) traverses target of agent 148 (len 32) at location 660 at timestep 39
[DBG]  [DEBUG] Attempting immediate repair via init_lns because problem occurred after SAT (should be applied only for conflicts...).
[DBG]  [DEBUG] Passing 150 agents to init_lns (skip=true).
[DBG]  [DEBUG] path_table contents for selected agents (neighbor.agents):
[DBG]    Agent 28 => controlling path length=43
[DBG]    Agent 42 => controlling path length=43
[DBG]    Agent 53 => controlling path length=42
[DBG]    Agent 55 => controlling path length=41
[DBG]  hodnota skip_initial_solution=1
[DBG]  We skip initialSolution => call buildCollisionData()
[DBG]  buildCollisionData() called – skip_initial_solution case.
[DBG]  Agents.size()=150, collision_graph.size()=150
[DBG]  agent 55 => updateCollidingPairs => foundCollision
[DBG]  agent 148 => updateCollidingPairs => foundCollision
[DBG]  Conflicting agent pairs:
[DBG]  agent 55 is in conflict with agent 148
[DBG]  buildCollisionData() => sum_of_costs=4418, num_of_colliding_pairs=1
[DBG]  buildCollisionData done => sum_of_costs=4418, num_of_colliding_pairs=1
[DBG]  sum_of_cost hodnota: 4418
[DBG]  After skip/init build => iteration_stats.back(): sum_of_costs=4418, collisions=1
[DEBUG] Using default neighbor generation strategy for conflicts: 1
	InitLNS(PP): runtime = 0.00207054, iterations = 2, colliding pairs = 0, initial colliding pairs = 1, solution cost = 4430, initial solution cost = 4418, failed iterations = 0
[DBG]  init_lns->sum_of_costs after init_lns->run: 4430
[DBG]  sum_of_costs after assignment from init_lns->run: 4430
[DBG]  Recomputing sum_of_cost by dividing neighbor.sum_of_costs and neighbor.old_sum_of_costs
[STAT] sum_of_costs after recomputation: 4430
[STAT] Iteration 21
[DBG]  Random chance did not select SAT operator (r=87), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 21
[DBG]  Random chance did not select SAT operator (r=17), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 21
[DBG]  Random chance did not select SAT operator (r=66), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 21
[DBG]  Random chance did not select SAT operator (r=54), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 21
[DBG]  Random chance did not select SAT operator (r=47), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 21
[DBG]  Random chance did not select SAT operator (r=96), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 21
[DBG]  Random chance did not select SAT operator (r=59), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 21
[DBG]  Random chance did not select SAT operator (r=75), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] neighbor.sum_of_costs before recomputation: 251
[STAT] neighbor.old_sum_of_costs before recomputation: 252
[STAT] sum_of_costs before recomputation: 4430
[DBG]  Recomputing sum_of_cost by dividing neighbor.sum_of_costs and neighbor.old_sum_of_costs
[STAT] sum_of_costs after recomputation: 4429
[STAT] Iteration 22
[DBG]  Using SAT operator (destroy+repair SAT).
[DBG]  ====================
[DBG]  SAT destroy operator called.
[DBG]  SAT heuristic: 2
[DBG]  key_agent_id: 28
[DBG]  key_agent_id global path length: 43
[DBG]  Submap content (global positions):
[DBG]  660 661 662 663 664 
[DBG]  692 693 694 695 696 
[DBG]  724 725 726 727 728 
[DBG]  756 757 758 759 760 
[DBG]  788 789 790 791 792 
[DBG]  Map content with agents and obstacles:
[DBG]  . . X X . 
[DBG]  . X X X . 
[DBG]  . . A A . 
[DBG]  A . X . X 
[DBG]  . X . X . 
[DBG]  content of the map structure that we pass to the SAT solver:
[DBG]  1  1  -1  -1  1  
[DBG]  1  -1  -1  -1  1  
[DBG]  1  1  1  1  1  
[DBG]  1  1  -1  1  -1  
[DBG]  1  -1  1  -1  1  
[DBG]  Identifying agents in a submap for rescheduling (when key_agent is there at the time 41):
[DBG]  Agent 26 found intervals in the sub-map:
[DBG]   [37..41]
[DBG]  Agent 26 (interval in submap: [37..41]) contains time 41, added to replan.
[DBG]  Agent 28 found intervals in the sub-map:
[DBG]   [0..12] [38..42]
[DBG]  Agent 28 (interval in submap: [38..42]) contains time 41, added to replan.
[DBG]  Agent 42 found intervals in the sub-map:
[DBG]   [37..42]
[DBG]  Agent 42 (interval in submap: [37..42]) contains time 41, added to replan.
[DBG]  Agent 26 | Start (global): 756 -> (local): (3, 0) at time 41 | Goal (global): 756 -> (local): (3, 0) at time 41
[DBG]  Agent 28 | Start (global): 726 -> (local): (2, 2) at time 41 | Goal (global): 727 -> (local): (2, 3) at time 42
[DBG]  Agent 42 | Start (global): 727 -> (local): (2, 3) at time 41 | Goal (global): 759 -> (local): (3, 3) at time 42
[DBG]  [REPAIR] SAT destroy operator called.
[DBG]  [REPAIR] SAT operator – launching subproblem FOR OPTIMIZATION.
[DBG]  Creating local paths (sx, sy) in the submap for T_sync = 41
[DBG]    Agent 26 (global paths from T=41 to 41) has local path: (3,0) 
[DBG]    Agent 28 (global paths from T=41 to 42) has local path: (2,2) (2,3) 
[DBG]    Agent 42 (global paths from T=41 to 42) has local path: (2,3) (3,3) 
[DBG]  Checking input data for SAT solver:
[DBG]    - Number of agents to replan: 3
[DBG]  Agent 26 has the original local path length: 1 => Start (3,0), Goal (3,0)
[DBG]  Agent 28 has the original local path length: 2 => Start (2,2), Goal (2,3)
[DBG]  Agent 42 has the original local path length: 2 => Start (2,3), Goal (3,3)
[DBG]  Start position: (3, 0), (2, 2), (2, 3), 
[DBG]  Goal position: (3, 0), (2, 3), (3, 3), 
[DBG]  SAT instance and solver created.
Currently solving
Instance name: scen
Map name: map
Encoding used: disappear_at_goal
SAT solver used: Kissat
Optimizing function: sum of costs
Number of agents: 3
Mks LB: 2
SoC LB: 5
Delta: 0
Remaining time: 300000 [ms]

Found plan [agents = 3] [timesteps = 2]
Agent #0 : 10 0 
Agent #1 : 7 8 
Agent #2 : 8 12 

[STAT] Solver returned: 0
[DBG]  Agent (index) 26 | New local path (submap idx):
[DBG]  10 
[DBG]  Agent (index) 28 | New local path (submap idx):
[DBG]  7 8 
[DBG]  Agent (index) 42 | New local path (submap idx):
[DBG]  8 12 
[DBG]  Update the agent path 26 | Original local length: 1 | New local length: 1
[DBG]  agent 26 t=0 => decoded (sx,sy)=(3,0) => global_id=756
[DBG]  Complete path of agent 26:
[DBG]    Original: 13 14 15 47 79 80 81 82 83 115 147 179 180 212 244 276 277 309 341 373 405 404 404 404 403 435 435 435 467 468 469 501 533 565 597 596 628 660 660 692 724 756 755 
[DBG]    New:     13 14 15 47 79 80 81 82 83 115 147 179 180 212 244 276 277 309 341 373 405 404 404 404 403 435 435 435 467 468 469 501 533 565 597 596 628 660 660 692 724 756 755 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 13 14 15 47 79 80 81 82 83 115 147 179 180 212 244 276 277 309 341 373 405 404 404 404 403 435 435 435 467 468 469 501 533 565 597 596 628 660 660 692 724 
[DBG]    Local path (in submap): 756 
[DBG]    Suffix (out of submap): 755 
[DBG]  Original agent path length 26 je: 43
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 0: 13, 14, 15, 47, 79, 80, 81, 82, 83, 115, 147, 179, 180, 212, 244, 276, 277, 309, 341, 373, 405, 404, 404, 404, 403, 435, 435, 435, 467, 468, 469, 501, 533, 565, 597, 596, 628, 660, 660, 692, 724, 756, 755, 
[DBG]  Path for agent 26 updated, resulting length: 43
[DBG]  Update the agent path 28 | Original local length: 2 | New local length: 2
[DBG]  agent 28 t=0 => decoded (sx,sy)=(2,2) => global_id=726
[DBG]  agent 28 t=1 => decoded (sx,sy)=(2,3) => global_id=727
[DBG]  Complete path of agent 28:
[DBG]    Original: 661 661 661 661 661 661 661 661 661 661 661 661 661 629 629 597 565 533 533 533 501 469 468 468 468 468 469 501 533 565 597 597 596 628 627 627 659 691 692 724 725 726 727 
[DBG]    New:     661 661 661 661 661 661 661 661 661 661 661 661 661 629 629 597 565 533 533 533 501 469 468 468 468 468 469 501 533 565 597 597 596 628 627 627 659 691 692 724 725 726 727 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 661 661 661 661 661 661 661 661 661 661 661 661 661 629 629 597 565 533 533 533 501 469 468 468 468 468 469 501 533 565 597 597 596 628 627 627 659 691 692 724 725 
[DBG]    Local path (in submap): 726 727 
[DBG]    Suffix (out of submap): 
[DBG]  Original agent path length 28 je: 43
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 1: 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 629, 629, 597, 565, 533, 533, 533, 501, 469, 468, 468, 468, 468, 469, 501, 533, 565, 597, 597, 596, 628, 627, 627, 659, 691, 692, 724, 725, 726, 727, 
[DBG]  Path for agent 28 updated, resulting length: 43
[DBG]  Update the agent path 42 | Original local length: 2 | New local length: 2
[DBG]  agent 42 t=0 => decoded (sx,sy)=(2,3) => global_id=727
[DBG]  agent 42 t=1 => decoded (sx,sy)=(3,3) => global_id=759
[DBG]  Complete path of agent 42:
[DBG]    Original: 224 256 257 289 321 353 354 354 355 387 388 389 421 422 422 423 424 425 426 427 428 429 430 431 432 464 496 528 528 529 561 593 625 657 658 659 691 692 724 725 726 727 759 
[DBG]    New:     224 256 257 289 321 353 354 354 355 387 388 389 421 422 422 423 424 425 426 427 428 429 430 431 432 464 496 528 528 529 561 593 625 657 658 659 691 692 724 725 726 727 759 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 224 256 257 289 321 353 354 354 355 387 388 389 421 422 422 423 424 425 426 427 428 429 430 431 432 464 496 528 528 529 561 593 625 657 658 659 691 692 724 725 726 
[DBG]    Local path (in submap): 727 759 
[DBG]    Suffix (out of submap): 
[DBG]  Original agent path length 42 je: 43
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 2: 224, 256, 257, 289, 321, 353, 354, 354, 355, 387, 388, 389, 421, 422, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 464, 496, 528, 528, 529, 561, 593, 625, 657, 658, 659, 691, 692, 724, 725, 726, 727, 759, 
[DBG]  Path for agent 42 updated, resulting length: 43
[DBG]  Paths successfully updated.
[DBG]  (LNS.cpp) New path for agent 26: 
[DBG]  13, 14, 15, 47, 79, 80, 81, 82, 83, 115, 147, 179, 180, 212, 244, 276, 277, 309, 341, 373, 405, 404, 404, 404, 403, 435, 435, 435, 467, 468, 469, 501, 533, 565, 597, 596, 628, 660, 660, 692, 724, 756, 755, 
[DBG]  (LNS.cpp) New path for agent 28: 
[DBG]  661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 629, 629, 597, 565, 533, 533, 533, 501, 469, 468, 468, 468, 468, 469, 501, 533, 565, 597, 597, 596, 628, 627, 627, 659, 691, 692, 724, 725, 726, 727, 
[DBG]  (LNS.cpp) New path for agent 42: 
[DBG]  224, 256, 257, 289, 321, 353, 354, 354, 355, 387, 388, 389, 421, 422, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 464, 496, 528, 528, 529, 561, 593, 625, 657, 658, 659, 691, 692, 724, 725, 726, 727, 759, 
[DBG]  Delta value: 0
[DBG]  Rewarding metric index = 1
[DBG]  component_weights = {0.264961, 0.34699, 0.160682, 0.227367}
[DBG]  opSuccess value: 1
[STAT] neighbor.sum_of_costs before recomputation: 126
[STAT] neighbor.old_sum_of_costs before recomputation: 126
[STAT] sum_of_costs before recomputation: 4429
[DBG]  Validate solution immediately after SAT success.
[DBG]  No problems after SAT replan.
[DBG]  Recomputing sum_of_cost by dividing neighbor.sum_of_costs and neighbor.old_sum_of_costs
[STAT] sum_of_costs after recomputation: 4429
[STAT] Iteration 23
[DBG]  Random chance did not select SAT operator (r=33), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 23
[DBG]  Random chance did not select SAT operator (r=12), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 23
[DBG]  Random chance did not select SAT operator (r=84), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 23
[DBG]  Random chance did not select SAT operator (r=69), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 23
[DBG]  Random chance did not select SAT operator (r=37), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 23
[DBG]  Random chance did not select SAT operator (r=30), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 23
[DBG]  Random chance did not select SAT operator (r=32), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 23
[DBG]  Random chance did not select SAT operator (r=57), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 23
[DBG]  Random chance did not select SAT operator (r=37), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] neighbor.sum_of_costs before recomputation: 274
[STAT] neighbor.old_sum_of_costs before recomputation: 292
[STAT] sum_of_costs before recomputation: 4429
[DBG]  Recomputing sum_of_cost by dividing neighbor.sum_of_costs and neighbor.old_sum_of_costs
[STAT] sum_of_costs after recomputation: 4411
[STAT] Iteration 24
[DBG]  Using SAT operator (destroy+repair SAT).
[DBG]  ====================
[DBG]  SAT destroy operator called.
[DBG]  SAT heuristic: 2
[DBG]  key_agent_id: 28
[DBG]  key_agent_id global path length: 43
[DBG]  Submap content (global positions):
[DBG]  626 627 628 629 630 
[DBG]  658 659 660 661 662 
[DBG]  690 691 692 693 694 
[DBG]  722 723 724 725 726 
[DBG]  754 755 756 757 758 
[DBG]  Map content with agents and obstacles:
[DBG]  X . A . X 
[DBG]  . . A A X 
[DBG]  X . A X X 
[DBG]  . X A . . 
[DBG]  X . A . X 
[DBG]  content of the map structure that we pass to the SAT solver:
[DBG]  -1  1  1  1  -1  
[DBG]  1  1  1  1  -1  
[DBG]  -1  1  1  -1  -1  
[DBG]  1  -1  1  1  1  
[DBG]  -1  1  1  1  -1  
[DBG]  Identifying agents in a submap for rescheduling (when key_agent is there at the time 38):
[DBG]  Agent 26 found intervals in the sub-map:
[DBG]   [36..42]
[DBG]  Agent 26 (interval in submap: [36..42]) contains time 38, added to replan.
[DBG]  Agent 28 found intervals in the sub-map:
[DBG]   [0..14] [33..41]
[DBG]  Agent 28 (interval in submap: [33..41]) contains time 38, added to replan.
[DBG]  Agent 42 found intervals in the sub-map:
[DBG]   [34..40]
[DBG]  Agent 42 (interval in submap: [34..40]) contains time 38, added to replan.
[DBG]  Agent 53 found intervals in the sub-map:
[DBG]   [32..38]
[DBG]  Agent 53 (interval in submap: [32..38]) contains time 38, added to replan.
[DBG]  Agent 55 found intervals in the sub-map:
[DBG]   [37..40]
[DBG]  Agent 55 (interval in submap: [37..40]) contains time 38, added to replan.
[DBG]  Agent 148 found intervals in the sub-map:
[DBG]   [32..40]
[DBG]  Agent 148 (interval in submap: [32..40]) contains time 38, added to replan.
[DBG]  Agent 26 | Start (global): 660 -> (local): (1, 2) at time 38 | Goal (global): 755 -> (local): (4, 1) at time 42
[DBG]  Agent 28 | Start (global): 692 -> (local): (2, 2) at time 38 | Goal (global): 726 -> (local): (3, 4) at time 41
[DBG]  Agent 42 | Start (global): 724 -> (local): (3, 2) at time 38 | Goal (global): 726 -> (local): (3, 4) at time 40
[DBG]  Agent 53 | Start (global): 756 -> (local): (4, 2) at time 38 | Goal (global): 756 -> (local): (4, 2) at time 38
[DBG]  Agent 55 | Start (global): 628 -> (local): (0, 2) at time 38 | Goal (global): 692 -> (local): (2, 2) at time 40
[DBG]  Agent 148 | Start (global): 661 -> (local): (1, 3) at time 38 | Goal (global): 660 -> (local): (1, 2) at time 40
[DBG]  [REPAIR] SAT destroy operator called.
[DBG]  [REPAIR] SAT operator – launching subproblem FOR OPTIMIZATION.
[DBG]  Creating local paths (sx, sy) in the submap for T_sync = 38
[DBG]    Agent 26 (global paths from T=38 to 42) has local path: (1,2) (2,2) (3,2) (4,2) (4,1) 
[DBG]    Agent 28 (global paths from T=38 to 41) has local path: (2,2) (3,2) (3,3) (3,4) 
[DBG]    Agent 42 (global paths from T=38 to 40) has local path: (3,2) (3,3) (3,4) 
[DBG]    Agent 53 (global paths from T=38 to 38) has local path: (4,2) 
[DBG]    Agent 55 (global paths from T=38 to 40) has local path: (0,2) (1,2) (2,2) 
[DBG]    Agent 148 (global paths from T=38 to 40) has local path: (1,3) (1,3) (1,2) 
[DBG]  Checking input data for SAT solver:
[DBG]    - Number of agents to replan: 6
[DBG]  Agent 26 has the original local path length: 5 => Start (1,2), Goal (4,1)
[DBG]  Agent 28 has the original local path length: 4 => Start (2,2), Goal (3,4)
[DBG]  Agent 42 has the original local path length: 3 => Start (3,2), Goal (3,4)
[DBG]  Agent 53 has the original local path length: 1 => Start (4,2), Goal (4,2)
[DBG]  Agent 55 has the original local path length: 3 => Start (0,2), Goal (2,2)
[DBG]  Agent 148 has the original local path length: 3 => Start (1,3), Goal (1,2)
[DBG]  Start position: (1, 2), (2, 2), (3, 2), (4, 2), (0, 2), (1, 3), 
[DBG]  Goal position: (4, 1), (3, 4), (3, 4), (4, 2), (2, 2), (1, 2), 
[DBG]  SAT instance and solver created.
Currently solving
Instance name: scen
Map name: map
Encoding used: disappear_at_goal
SAT solver used: Kissat
Optimizing function: sum of costs
Number of agents: 6
Mks LB: 5
SoC LB: 18
Delta: 0
Remaining time: 300000 [ms]

[STAT] Solver returned: -1
[DBG]  SAT solver failed.
[STAT] SAT solver failed to find a valid solution.
[DBG]  ====================
[DBG]  SAT destroy operator called.
[DBG]  SAT heuristic: 2
[DBG]  key_agent_id: 28
[DBG]  key_agent_id global path length: 43
[DBG]  Submap content (global positions):
[DBG]  402 403 404 405 406 
[DBG]  434 435 436 437 438 
[DBG]  466 467 468 469 470 
[DBG]  498 499 500 501 502 
[DBG]  530 531 532 533 534 
[DBG]  Map content with agents and obstacles:
[DBG]  . A . A . 
[DBG]  X . X A . 
[DBG]  . A A A . 
[DBG]  A . X . . 
[DBG]  A . X . A 
[DBG]  content of the map structure that we pass to the SAT solver:
[DBG]  1  1  1  1  1  
[DBG]  -1  1  -1  1  1  
[DBG]  1  1  1  1  1  
[DBG]  1  1  -1  1  1  
[DBG]  1  1  -1  1  1  
[DBG]  Identifying agents in a submap for rescheduling (when key_agent is there at the time 24):
[DBG]  Agent 4 found intervals in the sub-map:
[DBG]   [23..38]
[DBG]  Agent 4 (interval in submap: [23..38]) contains time 24, added to replan.
[DBG]  Agent 26 found intervals in the sub-map:
[DBG]   [20..32]
[DBG]  Agent 26 (interval in submap: [20..32]) contains time 24, added to replan.
[DBG]  Agent 28 found intervals in the sub-map:
[DBG]   [17..28]
[DBG]  Agent 28 (interval in submap: [17..28]) contains time 24, added to replan.
[DBG]  Agent 44 found intervals in the sub-map:
[DBG]   [18..27]
[DBG]  Agent 44 (interval in submap: [18..27]) contains time 24, added to replan.
[DBG]  Agent 53 found intervals in the sub-map:
[DBG]   [14..27]
[DBG]  Agent 53 (interval in submap: [14..27]) contains time 24, added to replan.
[DBG]  Agent 62 found intervals in the sub-map:
[DBG]   [24..32]
[DBG]  Agent 62 (interval in submap: [24..32]) contains time 24, added to replan.
[DBG]  Agent 74 found intervals in the sub-map:
[DBG]   [23..27]
[DBG]  Agent 74 (interval in submap: [23..27]) contains time 24, added to replan.
[DBG]  Agent 114 found intervals in the sub-map:
[DBG]   [23..31]
[DBG]  Agent 114 (interval in submap: [23..31]) contains time 24, added to replan.
[DBG]  Agent 119 found intervals in the sub-map:
[DBG]   [23..24]
[DBG]  Agent 119 (interval in submap: [23..24]) contains time 24, added to replan.
[DBG]  Agent 4 | Start (global): 437 -> (local): (1, 3) at time 24 | Goal (global): 466 -> (local): (2, 0) at time 38
[DBG]  Agent 26 | Start (global): 403 -> (local): (0, 1) at time 24 | Goal (global): 533 -> (local): (4, 3) at time 32
[DBG]  Agent 28 | Start (global): 468 -> (local): (2, 2) at time 24 | Goal (global): 533 -> (local): (4, 3) at time 28
[DBG]  Agent 44 | Start (global): 467 -> (local): (2, 1) at time 24 | Goal (global): 530 -> (local): (4, 0) at time 27
[DBG]  Agent 53 | Start (global): 469 -> (local): (2, 3) at time 24 | Goal (global): 533 -> (local): (4, 3) at time 27
[DBG]  Agent 62 | Start (global): 530 -> (local): (4, 0) at time 24 | Goal (global): 406 -> (local): (0, 4) at time 32
[DBG]  Agent 74 | Start (global): 534 -> (local): (4, 4) at time 24 | Goal (global): 438 -> (local): (1, 4) at time 27
[DBG]  Agent 114 | Start (global): 498 -> (local): (3, 0) at time 24 | Goal (global): 406 -> (local): (0, 4) at time 31
[DBG]  Agent 119 | Start (global): 405 -> (local): (0, 3) at time 24 | Goal (global): 405 -> (local): (0, 3) at time 24
[DBG]  [REPAIR] SAT destroy operator called.
[DBG]  [REPAIR] SAT operator – launching subproblem FOR OPTIMIZATION.
[DBG]  Creating local paths (sx, sy) in the submap for T_sync = 24
[DBG]    Agent 4 (global paths from T=24 to 38) has local path: (1,3) (1,3) (1,3) (1,3) (1,3) (0,3) (0,2) (0,1) (1,1) (1,1) (1,1) (1,1) (1,1) (2,1) (2,0) 
[DBG]    Agent 26 (global paths from T=24 to 32) has local path: (0,1) (1,1) (1,1) (1,1) (2,1) (2,2) (2,3) (3,3) (4,3) 
[DBG]    Agent 28 (global paths from T=24 to 28) has local path: (2,2) (2,2) (2,3) (3,3) (4,3) 
[DBG]    Agent 44 (global paths from T=24 to 27) has local path: (2,1) (3,1) (3,0) (4,0) 
[DBG]    Agent 53 (global paths from T=24 to 27) has local path: (2,3) (2,3) (3,3) (4,3) 
[DBG]    Agent 62 (global paths from T=24 to 32) has local path: (4,0) (4,1) (3,1) (2,1) (2,2) (2,3) (1,3) (1,4) (0,4) 
[DBG]    Agent 74 (global paths from T=24 to 27) has local path: (4,4) (3,4) (2,4) (1,4) 
[DBG]    Agent 114 (global paths from T=24 to 31) has local path: (3,0) (2,0) (2,1) (2,2) (2,3) (2,4) (1,4) (0,4) 
[DBG]    Agent 119 (global paths from T=24 to 24) has local path: (0,3) 
[DBG]  Checking input data for SAT solver:
[DBG]    - Number of agents to replan: 9
[DBG]  Agent 4 has the original local path length: 15 => Start (1,3), Goal (2,0)
[DBG]  Agent 26 has the original local path length: 9 => Start (0,1), Goal (4,3)
[DBG]  Agent 28 has the original local path length: 5 => Start (2,2), Goal (4,3)
[DBG]  Agent 44 has the original local path length: 4 => Start (2,1), Goal (4,0)
[DBG]  Agent 53 has the original local path length: 4 => Start (2,3), Goal (4,3)
[DBG]  Agent 62 has the original local path length: 9 => Start (4,0), Goal (0,4)
[DBG]  Agent 74 has the original local path length: 4 => Start (4,4), Goal (1,4)
[DBG]  Agent 114 has the original local path length: 8 => Start (3,0), Goal (0,4)
[DBG]  Agent 119 has the original local path length: 1 => Start (0,3), Goal (0,3)
[DBG]  Start position: (1, 3), (0, 1), (2, 2), (2, 1), (2, 3), (4, 0), (4, 4), (3, 0), (0, 3), 
[DBG]  Goal position: (2, 0), (4, 3), (4, 3), (4, 0), (4, 3), (0, 4), (1, 4), (0, 4), (0, 3), 
[DBG]  SAT instance and solver created.
Currently solving
Instance name: scen
Map name: map
Encoding used: disappear_at_goal
SAT solver used: Kissat
Optimizing function: sum of costs
Number of agents: 9
Mks LB: 9
SoC LB: 45
Delta: 0
Remaining time: 300000 [ms]

[STAT] Solver returned: -1
[DBG]  SAT solver failed.
[STAT] SAT solver failed to find a valid solution.
[DBG]  ====================
[DBG]  SAT destroy operator called.
[DBG]  SAT heuristic: 2
[DBG]  key_agent_id: 28
[DBG]  key_agent_id global path length: 43
[DBG]  Submap content (global positions):
[DBG]  435 436 437 438 439 
[DBG]  467 468 469 470 471 
[DBG]  499 500 501 502 503 
[DBG]  531 532 533 534 535 
[DBG]  563 564 565 566 567 
[DBG]  Map content with agents and obstacles:
[DBG]  . X . . . 
[DBG]  A A . A X 
[DBG]  . X A A A 
[DBG]  . X A . X 
[DBG]  . X . . X 
[DBG]  content of the map structure that we pass to the SAT solver:
[DBG]  1  -1  1  1  1  
[DBG]  1  1  1  1  -1  
[DBG]  1  -1  1  1  1  
[DBG]  1  -1  1  1  -1  
[DBG]  1  -1  1  1  -1  
[DBG]  Identifying agents in a submap for rescheduling (when key_agent is there at the time 20):
[DBG]  Agent 28 found intervals in the sub-map:
[DBG]   [16..29]
[DBG]  Agent 28 (interval in submap: [16..29]) contains time 20, added to replan.
[DBG]  Agent 46 found intervals in the sub-map:
[DBG]   [14..21]
[DBG]  Agent 46 (interval in submap: [14..21]) contains time 20, added to replan.
[DBG]  Agent 53 found intervals in the sub-map:
[DBG]   [18..28]
[DBG]  Agent 53 (interval in submap: [18..28]) contains time 20, added to replan.
[DBG]  Agent 61 found intervals in the sub-map:
[DBG]   [19..23]
[DBG]  Agent 61 (interval in submap: [19..23]) contains time 20, added to replan.
[DBG]  Agent 86 found intervals in the sub-map:
[DBG]   [15..20]
[DBG]  Agent 86 (interval in submap: [15..20]) contains time 20, added to replan.
[DBG]  Agent 100 found intervals in the sub-map:
[DBG]   [15..21]
[DBG]  Agent 100 (interval in submap: [15..21]) contains time 20, added to replan.
[DBG]  Agent 128 found intervals in the sub-map:
[DBG]   [8..20]
[DBG]  Agent 128 (interval in submap: [8..20]) contains time 20, added to replan.
[DBG]  Agent 28 | Start (global): 501 -> (local): (2, 2) at time 20 | Goal (global): 565 -> (local): (4, 2) at time 29
[DBG]  Agent 46 | Start (global): 502 -> (local): (2, 3) at time 20 | Goal (global): 503 -> (local): (2, 4) at time 21
[DBG]  Agent 53 | Start (global): 470 -> (local): (1, 3) at time 20 | Goal (global): 565 -> (local): (4, 2) at time 28
[DBG]  Agent 61 | Start (global): 533 -> (local): (3, 2) at time 20 | Goal (global): 503 -> (local): (2, 4) at time 23
[DBG]  Agent 86 | Start (global): 503 -> (local): (2, 4) at time 20 | Goal (global): 503 -> (local): (2, 4) at time 20
[DBG]  Agent 100 | Start (global): 468 -> (local): (1, 1) at time 20 | Goal (global): 467 -> (local): (1, 0) at time 21
[DBG]  Agent 128 | Start (global): 467 -> (local): (1, 0) at time 20 | Goal (global): 467 -> (local): (1, 0) at time 20
[DBG]  [REPAIR] SAT destroy operator called.
[DBG]  [REPAIR] SAT operator – launching subproblem FOR OPTIMIZATION.
[DBG]  Creating local paths (sx, sy) in the submap for T_sync = 20
[DBG]    Agent 28 (global paths from T=20 to 29) has local path: (2,2) (1,2) (1,1) (1,1) (1,1) (1,1) (1,2) (2,2) (3,2) (4,2) 
[DBG]    Agent 46 (global paths from T=20 to 21) has local path: (2,3) (2,4) 
[DBG]    Agent 53 (global paths from T=20 to 28) has local path: (1,3) (1,3) (1,3) (1,2) (1,2) (1,2) (2,2) (3,2) (4,2) 
[DBG]    Agent 61 (global paths from T=20 to 23) has local path: (3,2) (2,2) (2,3) (2,4) 
[DBG]    Agent 86 (global paths from T=20 to 20) has local path: (2,4) 
[DBG]    Agent 100 (global paths from T=20 to 21) has local path: (1,1) (1,0) 
[DBG]    Agent 128 (global paths from T=20 to 20) has local path: (1,0) 
[DBG]  Checking input data for SAT solver:
[DBG]    - Number of agents to replan: 7
[DBG]  Agent 28 has the original local path length: 10 => Start (2,2), Goal (4,2)
[DBG]  Agent 46 has the original local path length: 2 => Start (2,3), Goal (2,4)
[DBG]  Agent 53 has the original local path length: 9 => Start (1,3), Goal (4,2)
[DBG]  Agent 61 has the original local path length: 4 => Start (3,2), Goal (2,4)
[DBG]  Agent 86 has the original local path length: 1 => Start (2,4), Goal (2,4)
[DBG]  Agent 100 has the original local path length: 2 => Start (1,1), Goal (1,0)
[DBG]  Agent 128 has the original local path length: 1 => Start (1,0), Goal (1,0)
[DBG]  Start position: (2, 2), (2, 3), (1, 3), (3, 2), (2, 4), (1, 1), (1, 0), 
[DBG]  Goal position: (4, 2), (2, 4), (4, 2), (2, 4), (2, 4), (1, 0), (1, 0), 
[DBG]  SAT instance and solver created.
Currently solving
Instance name: scen
Map name: map
Encoding used: disappear_at_goal
SAT solver used: Kissat
Optimizing function: sum of costs
Number of agents: 7
Mks LB: 5
SoC LB: 18
Delta: 0
Remaining time: 300000 [ms]

Vertex conflict! Agents 0, 1, timestep 3, location 0
Swapping conflict! Agents 0, 1, timestep 3, edge (0,0)
Vertex conflict! Agents 0, 1, timestep 4, location 0
Vertex conflict! Agents 0, 3, timestep 4, location 0
Vertex conflict! Agents 0, 4, timestep 3, location 0
Swapping conflict! Agents 0, 4, timestep 3, edge (0,0)
Vertex conflict! Agents 0, 4, timestep 4, location 0
Vertex conflict! Agents 0, 5, timestep 3, location 0
Swapping conflict! Agents 0, 5, timestep 3, edge (0,0)
Vertex conflict! Agents 0, 5, timestep 4, location 0
Vertex conflict! Agents 0, 6, timestep 3, location 0
Swapping conflict! Agents 0, 6, timestep 3, edge (0,0)
Vertex conflict! Agents 0, 6, timestep 4, location 0
Vertex conflict! Agents 1, 3, timestep 4, location 0
Vertex conflict! Agents 1, 4, timestep 2, location 0
Swapping conflict! Agents 1, 4, timestep 2, edge (0,0)
Vertex conflict! Agents 1, 4, timestep 3, location 0
Swapping conflict! Agents 1, 4, timestep 3, edge (0,0)
Vertex conflict! Agents 1, 4, timestep 4, location 0
Vertex conflict! Agents 1, 5, timestep 2, location 0
Swapping conflict! Agents 1, 5, timestep 2, edge (0,0)
Vertex conflict! Agents 1, 5, timestep 3, location 0
Swapping conflict! Agents 1, 5, timestep 3, edge (0,0)
Vertex conflict! Agents 1, 5, timestep 4, location 0
Vertex conflict! Agents 1, 6, timestep 2, location 0
Swapping conflict! Agents 1, 6, timestep 2, edge (0,0)
Vertex conflict! Agents 1, 6, timestep 3, location 0
Swapping conflict! Agents 1, 6, timestep 3, edge (0,0)
Vertex conflict! Agents 1, 6, timestep 4, location 0
Vertex conflict! Agents 3, 4, timestep 4, location 0
Vertex conflict! Agents 3, 5, timestep 4, location 0
Vertex conflict! Agents 3, 6, timestep 4, location 0
Vertex conflict! Agents 4, 5, timestep 2, location 0
Swapping conflict! Agents 4, 5, timestep 2, edge (0,0)
Vertex conflict! Agents 4, 5, timestep 3, location 0
Swapping conflict! Agents 4, 5, timestep 3, edge (0,0)
Vertex conflict! Agents 4, 5, timestep 4, location 0
Vertex conflict! Agents 4, 6, timestep 1, location 0
Swapping conflict! Agents 4, 6, timestep 1, edge (0,0)
Vertex conflict! Agents 4, 6, timestep 2, location 0
Swapping conflict! Agents 4, 6, timestep 2, edge (0,0)
Vertex conflict! Agents 4, 6, timestep 3, location 0
Swapping conflict! Agents 4, 6, timestep 3, edge (0,0)
Vertex conflict! Agents 4, 6, timestep 4, location 0
Vertex conflict! Agents 5, 6, timestep 2, location 0
Swapping conflict! Agents 5, 6, timestep 2, edge (0,0)
Vertex conflict! Agents 5, 6, timestep 3, location 0
Swapping conflict! Agents 5, 6, timestep 3, edge (0,0)
Vertex conflict! Agents 5, 6, timestep 4, location 0
Found plan [agents = 7] [timesteps = 5]
Agent #0 : 9 13 16 0 0 
Agent #1 : 10 11 0 0 0 
Agent #2 : 7 10 9 13 16 
Agent #3 : 13 14 10 11 0 
Agent #4 : 11 0 0 0 0 
Agent #5 : 5 4 0 0 0 
Agent #6 : 4 0 0 0 0 

[STAT] Solver returned: 0
[DBG]  Agent (index) 28 | New local path (submap idx):
[DBG]  9 13 16 
[DBG]  Agent (index) 46 | New local path (submap idx):
[DBG]  10 11 
[DBG]  Agent (index) 53 | New local path (submap idx):
[DBG]  7 10 9 13 16 
[DBG]  Agent (index) 61 | New local path (submap idx):
[DBG]  13 14 10 11 
[DBG]  Agent (index) 86 | New local path (submap idx):
[DBG]  11 
[DBG]  Agent (index) 100 | New local path (submap idx):
[DBG]  5 4 
[DBG]  Agent (index) 128 | New local path (submap idx):
[DBG]  4 
[DBG]  Update the agent path 28 | Original local length: 10 | New local length: 3
[DBG]  agent 28 t=0 => decoded (sx,sy)=(2,2) => global_id=501
[DBG]  agent 28 t=1 => decoded (sx,sy)=(3,2) => global_id=533
[DBG]  agent 28 t=2 => decoded (sx,sy)=(4,2) => global_id=565
[DBG]  Complete path of agent 28:
[DBG]    Original: 661 661 661 661 661 661 661 661 661 661 661 661 661 629 629 597 565 533 533 533 501 469 468 468 468 468 469 501 533 565 597 597 596 628 627 627 659 691 692 724 725 726 727 
[DBG]    New:     661 661 661 661 661 661 661 661 661 661 661 661 661 629 629 597 565 533 533 533 501 533 565 597 597 596 628 627 627 659 691 692 724 725 726 727 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 661 661 661 661 661 661 661 661 661 661 661 661 661 629 629 597 565 533 533 533 
[DBG]    Local path (in submap): 501 533 565 597 597 596 628 627 627 659 
[DBG]    Suffix (out of submap): 691 692 724 725 726 727 
[DBG]  Original agent path length 28 je: 43
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 0: 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 629, 629, 597, 565, 533, 533, 533, 501, 533, 565, 597, 597, 596, 628, 627, 627, 659, 691, 692, 724, 725, 726, 727, 
[DBG]  Path for agent 28 updated, resulting length: 36
[DBG]  Update the agent path 46 | Original local length: 2 | New local length: 2
[DBG]  agent 46 t=0 => decoded (sx,sy)=(2,3) => global_id=502
[DBG]  agent 46 t=1 => decoded (sx,sy)=(2,4) => global_id=503
[DBG]  Complete path of agent 46:
[DBG]    Original: 786 787 755 756 724 725 724 692 660 659 627 628 629 597 565 533 533 501 501 501 502 503 504 505 506 474 475 443 444 412 380 381 349 317 285 284 252 
[DBG]    New:     786 787 755 756 724 725 724 692 660 659 627 628 629 597 565 533 533 501 501 501 502 503 504 505 506 474 475 443 444 412 380 381 349 317 285 284 252 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 786 787 755 756 724 725 724 692 660 659 627 628 629 597 565 533 533 501 501 501 
[DBG]    Local path (in submap): 502 503 
[DBG]    Suffix (out of submap): 504 505 506 474 475 443 444 412 380 381 349 317 285 284 252 
[DBG]  Original agent path length 46 je: 37
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 1: 786, 787, 755, 756, 724, 725, 724, 692, 660, 659, 627, 628, 629, 597, 565, 533, 533, 501, 501, 501, 502, 503, 504, 505, 506, 474, 475, 443, 444, 412, 380, 381, 349, 317, 285, 284, 252, 
[DBG]  Path for agent 46 updated, resulting length: 37
[DBG]  Update the agent path 53 | Original local length: 9 | New local length: 5
[DBG]  agent 53 t=0 => decoded (sx,sy)=(1,3) => global_id=470
[DBG]  agent 53 t=1 => decoded (sx,sy)=(2,3) => global_id=502
[DBG]  agent 53 t=2 => decoded (sx,sy)=(2,2) => global_id=501
[DBG]  agent 53 t=3 => decoded (sx,sy)=(3,2) => global_id=533
[DBG]  agent 53 t=4 => decoded (sx,sy)=(4,2) => global_id=565
[DBG]  Complete path of agent 53:
[DBG]    Original: 84 116 148 149 150 151 183 215 247 279 311 343 375 407 406 406 406 406 438 470 470 470 470 469 469 469 501 533 565 597 596 596 628 627 659 691 692 724 756 788 820 821 
[DBG]    New:     84 116 148 149 150 151 183 215 247 279 311 343 375 407 406 406 406 406 438 470 470 502 501 533 565 597 596 596 628 627 659 691 692 724 756 788 820 821 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 84 116 148 149 150 151 183 215 247 279 311 343 375 407 406 406 406 406 438 470 
[DBG]    Local path (in submap): 470 502 501 533 565 597 596 596 628 
[DBG]    Suffix (out of submap): 627 659 691 692 724 756 788 820 821 
[DBG]  Original agent path length 53 je: 42
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 2: 84, 116, 148, 149, 150, 151, 183, 215, 247, 279, 311, 343, 375, 407, 406, 406, 406, 406, 438, 470, 470, 502, 501, 533, 565, 597, 596, 596, 628, 627, 659, 691, 692, 724, 756, 788, 820, 821, 
[DBG]  Path for agent 53 updated, resulting length: 38
[DBG]  Update the agent path 61 | Original local length: 4 | New local length: 4
[DBG]  agent 61 t=0 => decoded (sx,sy)=(3,2) => global_id=533
[DBG]  agent 61 t=1 => decoded (sx,sy)=(3,3) => global_id=534
[DBG]  agent 61 t=2 => decoded (sx,sy)=(2,3) => global_id=502
[DBG]  agent 61 t=3 => decoded (sx,sy)=(2,4) => global_id=503
[DBG]  Complete path of agent 61:
[DBG]    Original: 813 781 781 782 782 783 783 751 719 720 721 689 657 658 659 627 628 629 597 565 533 501 502 503 504 505 473 473 473 473 473 472 473 505 505 473 472 440 408 376 377 345 313 
[DBG]    New:     813 781 781 782 782 783 783 751 719 720 721 689 657 658 659 627 628 629 597 565 533 534 502 503 504 505 473 473 473 473 473 472 473 505 505 473 472 440 408 376 377 345 313 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 813 781 781 782 782 783 783 751 719 720 721 689 657 658 659 627 628 629 597 565 
[DBG]    Local path (in submap): 533 534 502 503 
[DBG]    Suffix (out of submap): 504 505 473 473 473 473 473 472 473 505 505 473 472 440 408 376 377 345 313 
[DBG]  Original agent path length 61 je: 43
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 3: 813, 781, 781, 782, 782, 783, 783, 751, 719, 720, 721, 689, 657, 658, 659, 627, 628, 629, 597, 565, 533, 534, 502, 503, 504, 505, 473, 473, 473, 473, 473, 472, 473, 505, 505, 473, 472, 440, 408, 376, 377, 345, 313, 
[DBG]  Path for agent 61 updated, resulting length: 43
[DBG]  Update the agent path 86 | Original local length: 1 | New local length: 1
[DBG]  agent 86 t=0 => decoded (sx,sy)=(2,4) => global_id=503
[DBG]  Complete path of agent 86:
[DBG]    Original: 781 782 750 718 719 687 688 689 657 658 659 627 628 596 597 565 566 534 534 502 503 504 505 506 538 539 540 541 
[DBG]    New:     781 782 750 718 719 687 688 689 657 658 659 627 628 596 597 565 566 534 534 502 503 504 505 506 538 539 540 541 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 781 782 750 718 719 687 688 689 657 658 659 627 628 596 597 565 566 534 534 502 
[DBG]    Local path (in submap): 503 
[DBG]    Suffix (out of submap): 504 505 506 538 539 540 541 
[DBG]  Original agent path length 86 je: 28
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 4: 781, 782, 750, 718, 719, 687, 688, 689, 657, 658, 659, 627, 628, 596, 597, 565, 566, 534, 534, 502, 503, 504, 505, 506, 538, 539, 540, 541, 
[DBG]  Path for agent 86 updated, resulting length: 28
[DBG]  Update the agent path 100 | Original local length: 2 | New local length: 2
[DBG]  agent 100 t=0 => decoded (sx,sy)=(1,1) => global_id=468
[DBG]  agent 100 t=1 => decoded (sx,sy)=(1,0) => global_id=467
[DBG]  Complete path of agent 100:
[DBG]    Original: 287 319 318 350 349 381 413 445 444 476 475 474 473 472 440 439 438 438 437 469 468 467 466 465 464 496 528 529 561 593 592 591 623 655 687 719 751 783 815 847 846 878 877 909 941 973 1005 1004 1003 
[DBG]    New:     287 319 318 350 349 381 413 445 444 476 475 474 473 472 440 439 438 438 437 469 468 467 466 465 464 496 528 529 561 593 592 591 623 655 687 719 751 783 815 847 846 878 877 909 941 973 1005 1004 1003 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 287 319 318 350 349 381 413 445 444 476 475 474 473 472 440 439 438 438 437 469 
[DBG]    Local path (in submap): 468 467 
[DBG]    Suffix (out of submap): 466 465 464 496 528 529 561 593 592 591 623 655 687 719 751 783 815 847 846 878 877 909 941 973 1005 1004 1003 
[DBG]  Original agent path length 100 je: 49
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 5: 287, 319, 318, 350, 349, 381, 413, 445, 444, 476, 475, 474, 473, 472, 440, 439, 438, 438, 437, 469, 468, 467, 466, 465, 464, 496, 528, 529, 561, 593, 592, 591, 623, 655, 687, 719, 751, 783, 815, 847, 846, 878, 877, 909, 941, 973, 1005, 1004, 1003, 
[DBG]  Path for agent 100 updated, resulting length: 49
[DBG]  Update the agent path 128 | Original local length: 1 | New local length: 1
[DBG]  agent 128 t=0 => decoded (sx,sy)=(1,0) => global_id=467
[DBG]  Complete path of agent 128:
[DBG]    Original: 604 603 602 570 538 506 505 504 503 502 470 470 438 438 438 437 437 437 469 468 467 466 465 464 463 431 430 462 494 526 525 524 523 522 521 520 519 551 550 549 548 547 
[DBG]    New:     604 603 602 570 538 506 505 504 503 502 470 470 438 438 438 437 437 437 469 468 467 466 465 464 463 431 430 462 494 526 525 524 523 522 521 520 519 551 550 549 548 547 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 604 603 602 570 538 506 505 504 503 502 470 470 438 438 438 437 437 437 469 468 
[DBG]    Local path (in submap): 467 
[DBG]    Suffix (out of submap): 466 465 464 463 431 430 462 494 526 525 524 523 522 521 520 519 551 550 549 548 547 
[DBG]  Original agent path length 128 je: 42
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 6: 604, 603, 602, 570, 538, 506, 505, 504, 503, 502, 470, 470, 438, 438, 438, 437, 437, 437, 469, 468, 467, 466, 465, 464, 463, 431, 430, 462, 494, 526, 525, 524, 523, 522, 521, 520, 519, 551, 550, 549, 548, 547, 
[DBG]  Path for agent 128 updated, resulting length: 42
[DBG]  Paths successfully updated.
[DBG]  (LNS.cpp) New path for agent 28: 
[DBG]  661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 629, 629, 597, 565, 533, 533, 533, 501, 533, 565, 597, 597, 596, 628, 627, 627, 659, 691, 692, 724, 725, 726, 727, 
[DBG]  (LNS.cpp) New path for agent 46: 
[DBG]  786, 787, 755, 756, 724, 725, 724, 692, 660, 659, 627, 628, 629, 597, 565, 533, 533, 501, 501, 501, 502, 503, 504, 505, 506, 474, 475, 443, 444, 412, 380, 381, 349, 317, 285, 284, 252, 
[DBG]  (LNS.cpp) New path for agent 53: 
[DBG]  84, 116, 148, 149, 150, 151, 183, 215, 247, 279, 311, 343, 375, 407, 406, 406, 406, 406, 438, 470, 470, 502, 501, 533, 565, 597, 596, 596, 628, 627, 659, 691, 692, 724, 756, 788, 820, 821, 
[DBG]  (LNS.cpp) New path for agent 61: 
[DBG]  813, 781, 781, 782, 782, 783, 783, 751, 719, 720, 721, 689, 657, 658, 659, 627, 628, 629, 597, 565, 533, 534, 502, 503, 504, 505, 473, 473, 473, 473, 473, 472, 473, 505, 505, 473, 472, 440, 408, 376, 377, 345, 313, 
[DBG]  (LNS.cpp) New path for agent 86: 
[DBG]  781, 782, 750, 718, 719, 687, 688, 689, 657, 658, 659, 627, 628, 596, 597, 565, 566, 534, 534, 502, 503, 504, 505, 506, 538, 539, 540, 541, 
[DBG]  (LNS.cpp) New path for agent 100: 
[DBG]  287, 319, 318, 350, 349, 381, 413, 445, 444, 476, 475, 474, 473, 472, 440, 439, 438, 438, 437, 469, 468, 467, 466, 465, 464, 496, 528, 529, 561, 593, 592, 591, 623, 655, 687, 719, 751, 783, 815, 847, 846, 878, 877, 909, 941, 973, 1005, 1004, 1003, 
[DBG]  (LNS.cpp) New path for agent 128: 
[DBG]  604, 603, 602, 570, 538, 506, 505, 504, 503, 502, 470, 470, 438, 438, 438, 437, 437, 437, 469, 468, 467, 466, 465, 464, 463, 431, 430, 462, 494, 526, 525, 524, 523, 522, 521, 520, 519, 551, 550, 549, 548, 547, 
[DBG]  Delta value: 0.0397112
[DBG]  Rewarding metric index = 0
[DBG]  component_weights = {0.282903, 0.33852, 0.15676, 0.221817}
[DBG]  opSuccess value: 1
[STAT] neighbor.sum_of_costs before recomputation: 266
[STAT] neighbor.old_sum_of_costs before recomputation: 277
[STAT] sum_of_costs before recomputation: 4411
[DBG]  Validate solution immediately after SAT success.
[WARNING] Problem after SAT: Target conflict: agent 42 (len 42) traverses target of agent 28 (len 35) at location 727 at timestep 41
[DBG]  [DEBUG] Attempting immediate repair via init_lns because problem occurred after SAT (should be applied only for conflicts...).
[DBG]  [DEBUG] Passing 150 agents to init_lns (skip=true).
[DBG]  [DEBUG] path_table contents for selected agents (neighbor.agents):
[DBG]    Agent 28 => controlling path length=36
[DBG]    Agent 46 => controlling path length=37
[DBG]    Agent 53 => controlling path length=38
[DBG]    Agent 61 => controlling path length=43
[DBG]    Agent 86 => controlling path length=28
[DBG]    Agent 100 => controlling path length=49
[DBG]    Agent 128 => controlling path length=42
[DBG]  hodnota skip_initial_solution=1
[DBG]  We skip initialSolution => call buildCollisionData()
[DBG]  buildCollisionData() called – skip_initial_solution case.
[DBG]  Agents.size()=150, collision_graph.size()=150
[DBG]  agent 28 => updateCollidingPairs => foundCollision
[DBG]  agent 30 => updateCollidingPairs => foundCollision
[DBG]  agent 42 => updateCollidingPairs => foundCollision
[DBG]  agent 53 => updateCollidingPairs => foundCollision
[DBG]  agent 56 => updateCollidingPairs => foundCollision
[DBG]  agent 74 => updateCollidingPairs => foundCollision
[DBG]  agent 79 => updateCollidingPairs => foundCollision
[DBG]  agent 91 => updateCollidingPairs => foundCollision
[DBG]  agent 148 => updateCollidingPairs => foundCollision
[DBG]  Conflicting agent pairs:
[DBG]  agent 28 is in conflict with agent 42
[DBG]  agent 28 is in conflict with agent 56
[DBG]  agent 28 is in conflict with agent 74
[DBG]  agent 28 is in conflict with agent 79
[DBG]  agent 28 is in conflict with agent 91
[DBG]  agent 30 is in conflict with agent 53
[DBG]  agent 53 is in conflict with agent 56
[DBG]  agent 53 is in conflict with agent 74
[DBG]  agent 53 is in conflict with agent 91
[DBG]  agent 53 is in conflict with agent 148
[DBG]  buildCollisionData() => sum_of_costs=4400, num_of_colliding_pairs=10
[DBG]  buildCollisionData done => sum_of_costs=4400, num_of_colliding_pairs=10
[DBG]  sum_of_cost hodnota: 4400
[DBG]  After skip/init build => iteration_stats.back(): sum_of_costs=4400, collisions=10
[DEBUG] Using default neighbor generation strategy for conflicts: 2
[DEBUG] Using default neighbor generation strategy for conflicts: 1
	InitLNS(PP): runtime = 0.00247246, iterations = 3, colliding pairs = 0, initial colliding pairs = 10, solution cost = 4411, initial solution cost = 4400, failed iterations = 0
[DBG]  init_lns->sum_of_costs after init_lns->run: 4411
[DBG]  sum_of_costs after assignment from init_lns->run: 4411
[DBG]  Recomputing sum_of_cost by dividing neighbor.sum_of_costs and neighbor.old_sum_of_costs
[STAT] sum_of_costs after recomputation: 4411
[STAT] Iteration 25
[DBG]  Random chance did not select SAT operator (r=81), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 25
[DBG]  Random chance did not select SAT operator (r=81), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 25
[DBG]  Random chance did not select SAT operator (r=64), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] neighbor.sum_of_costs before recomputation: 304
[STAT] neighbor.old_sum_of_costs before recomputation: 305
[STAT] sum_of_costs before recomputation: 4411
[DBG]  Recomputing sum_of_cost by dividing neighbor.sum_of_costs and neighbor.old_sum_of_costs
[STAT] sum_of_costs after recomputation: 4410
[STAT] Iteration 26
[DBG]  Using SAT operator (destroy+repair SAT).
[DBG]  ====================
[DBG]  SAT destroy operator called.
[DBG]  SAT heuristic: 2
[DBG]  key_agent_id: 28
[DBG]  key_agent_id global path length: 43
[DBG]  Submap content (global positions):
[DBG]  562 563 564 565 566 
[DBG]  594 595 596 597 598 
[DBG]  626 627 628 629 630 
[DBG]  658 659 660 661 662 
[DBG]  690 691 692 693 694 
[DBG]  Map content with agents and obstacles:
[DBG]  X . X A . 
[DBG]  A X A . X 
[DBG]  X . A . X 
[DBG]  . A A . X 
[DBG]  X . A X X 
[DBG]  content of the map structure that we pass to the SAT solver:
[DBG]  -1  1  -1  1  1  
[DBG]  1  -1  1  1  -1  
[DBG]  -1  1  1  1  -1  
[DBG]  1  1  1  1  -1  
[DBG]  -1  1  1  -1  -1  
[DBG]  Identifying agents in a submap for rescheduling (when key_agent is there at the time 19):
[DBG]  Agent 3 found intervals in the sub-map:
[DBG]   [19..21]
[DBG]  Agent 3 (interval in submap: [19..21]) contains time 19, added to replan.
[DBG]  Agent 28 found intervals in the sub-map:
[DBG]   [0..31]
[DBG]  Agent 28 (interval in submap: [0..31]) contains time 19, added to replan.
[DBG]  Agent 56 found intervals in the sub-map:
[DBG]   [18..27]
[DBG]  Agent 56 (interval in submap: [18..27]) contains time 19, added to replan.
[DBG]  Agent 61 found intervals in the sub-map:
[DBG]   [13..19]
[DBG]  Agent 61 (interval in submap: [13..19]) contains time 19, added to replan.
[DBG]  Agent 74 found intervals in the sub-map:
[DBG]   [15..22]
[DBG]  Agent 74 (interval in submap: [15..22]) contains time 19, added to replan.
[DBG]  Agent 79 found intervals in the sub-map:
[DBG]   [17..23]
[DBG]  Agent 79 (interval in submap: [17..23]) contains time 19, added to replan.
[DBG]  Agent 91 found intervals in the sub-map:
[DBG]   [16..25]
[DBG]  Agent 91 (interval in submap: [16..25]) contains time 19, added to replan.
[DBG]  Agent 148 found intervals in the sub-map:
[DBG]   [35..40]
[DBG]  Agent 148 is not in sub-map at time 19 (intervals: 
[DBG]  [35..40] )
[DBG]  Agent 3 | Start (global): 594 -> (local): (1, 0) at time 19 | Goal (global): 594 -> (local): (1, 0) at time 21
[DBG]  Agent 28 | Start (global): 628 -> (local): (2, 2) at time 19 | Goal (global): 692 -> (local): (4, 2) at time 31
[DBG]  Agent 56 | Start (global): 659 -> (local): (3, 1) at time 19 | Goal (global): 566 -> (local): (0, 4) at time 27
[DBG]  Agent 61 | Start (global): 565 -> (local): (0, 3) at time 19 | Goal (global): 565 -> (local): (0, 3) at time 19
[DBG]  Agent 74 | Start (global): 596 -> (local): (1, 2) at time 19 | Goal (global): 566 -> (local): (0, 4) at time 22
[DBG]  Agent 79 | Start (global): 660 -> (local): (3, 2) at time 19 | Goal (global): 565 -> (local): (0, 3) at time 23
[DBG]  Agent 91 | Start (global): 692 -> (local): (4, 2) at time 19 | Goal (global): 566 -> (local): (0, 4) at time 25
[DBG]  [REPAIR] SAT destroy operator called.
[DBG]  [REPAIR] SAT operator – launching subproblem FOR OPTIMIZATION.
[DBG]  Creating local paths (sx, sy) in the submap for T_sync = 19
[DBG]    Agent 3 (global paths from T=19 to 21) has local path: (1,0) (1,0) (1,0) 
[DBG]    Agent 28 (global paths from T=19 to 31) has local path: (2,2) (2,1) (2,1) (2,1) (2,1) (2,1) (2,1) (2,1) (2,1) (2,1) (3,1) (3,2) (4,2) 
[DBG]    Agent 56 (global paths from T=19 to 27) has local path: (3,1) (3,1) (3,1) (3,2) (2,2) (2,3) (1,3) (0,3) (0,4) 
[DBG]    Agent 61 (global paths from T=19 to 19) has local path: (0,3) 
[DBG]    Agent 74 (global paths from T=19 to 22) has local path: (1,2) (1,3) (0,3) (0,4) 
[DBG]    Agent 79 (global paths from T=19 to 23) has local path: (3,2) (2,2) (2,3) (1,3) (0,3) 
[DBG]    Agent 91 (global paths from T=19 to 25) has local path: (4,2) (3,2) (3,3) (2,3) (1,3) (0,3) (0,4) 
[DBG]  Checking input data for SAT solver:
[DBG]    - Number of agents to replan: 7
[DBG]  Agent 3 has the original local path length: 3 => Start (1,0), Goal (1,0)
[DBG]  Agent 28 has the original local path length: 13 => Start (2,2), Goal (4,2)
[DBG]  Agent 56 has the original local path length: 9 => Start (3,1), Goal (0,4)
[DBG]  Agent 61 has the original local path length: 1 => Start (0,3), Goal (0,3)
[DBG]  Agent 74 has the original local path length: 4 => Start (1,2), Goal (0,4)
[DBG]  Agent 79 has the original local path length: 5 => Start (3,2), Goal (0,3)
[DBG]  Agent 91 has the original local path length: 7 => Start (4,2), Goal (0,4)
[DBG]  Start position: (1, 0), (2, 2), (3, 1), (0, 3), (1, 2), (3, 2), (4, 2), 
[DBG]  Goal position: (1, 0), (4, 2), (0, 4), (0, 3), (0, 4), (0, 3), (0, 4), 
[DBG]  SAT instance and solver created.
Currently solving
Instance name: scen
Map name: map
Encoding used: disappear_at_goal
SAT solver used: Kissat
Optimizing function: sum of costs
Number of agents: 7
Mks LB: 7
SoC LB: 28
Delta: 0
Remaining time: 300000 [ms]

[STAT] Solver returned: -1
[DBG]  SAT solver failed.
[STAT] SAT solver failed to find a valid solution.
[DBG]  ====================
[DBG]  SAT destroy operator called.
[DBG]  SAT heuristic: 2
[DBG]  key_agent_id: 28
[DBG]  key_agent_id global path length: 43
[DBG]  Submap content (global positions):
[DBG]  658 659 660 661 662 
[DBG]  690 691 692 693 694 
[DBG]  722 723 724 725 726 
[DBG]  754 755 756 757 758 
[DBG]  786 787 788 789 790 
[DBG]  Map content with agents and obstacles:
[DBG]  . . A . X 
[DBG]  X . . X X 
[DBG]  . X A . . 
[DBG]  X A . . X 
[DBG]  . . . X . 
[DBG]  content of the map structure that we pass to the SAT solver:
[DBG]  1  1  1  1  -1  
[DBG]  -1  1  1  -1  -1  
[DBG]  1  -1  1  1  1  
[DBG]  -1  1  1  1  -1  
[DBG]  1  1  1  -1  1  
[DBG]  Identifying agents in a submap for rescheduling (when key_agent is there at the time 32):
[DBG]  Agent 26 found intervals in the sub-map:
[DBG]   [32..39]
[DBG]  Agent 26 (interval in submap: [32..39]) contains time 32, added to replan.
[DBG]  Agent 28 found intervals in the sub-map:
[DBG]   [0..17] [29..41]
[DBG]  Agent 28 (interval in submap: [29..41]) contains time 32, added to replan.
[DBG]  Agent 53 found intervals in the sub-map:
[DBG]   [37..41]
[DBG]  Agent 53 is not in sub-map at time 32 (intervals: 
[DBG]  [37..41] )
[DBG]  Agent 148 found intervals in the sub-map:
[DBG]   [31..40]
[DBG]  Agent 148 (interval in submap: [31..40]) contains time 32, added to replan.
[DBG]  Agent 26 | Start (global): 660 -> (local): (0, 2) at time 32 | Goal (global): 755 -> (local): (3, 1) at time 39
[DBG]  Agent 28 | Start (global): 724 -> (local): (2, 2) at time 32 | Goal (global): 726 -> (local): (2, 4) at time 41
[DBG]  Agent 148 | Start (global): 755 -> (local): (3, 1) at time 32 | Goal (global): 660 -> (local): (0, 2) at time 40
[DBG]  [REPAIR] SAT destroy operator called.
[DBG]  [REPAIR] SAT operator – launching subproblem FOR OPTIMIZATION.
[DBG]  Creating local paths (sx, sy) in the submap for T_sync = 32
[DBG]    Agent 26 (global paths from T=32 to 39) has local path: (0,2) (1,2) (1,1) (1,1) (1,2) (2,2) (3,2) (3,1) 
[DBG]    Agent 28 (global paths from T=32 to 41) has local path: (2,2) (2,3) (3,3) (3,3) (3,3) (3,3) (3,3) (3,3) (2,3) (2,4) 
[DBG]    Agent 148 (global paths from T=32 to 40) has local path: (3,1) (3,2) (2,2) (1,2) (0,2) (0,3) (0,3) (0,3) (0,2) 
[DBG]  Checking input data for SAT solver:
[DBG]    - Number of agents to replan: 3
[DBG]  Agent 26 has the original local path length: 8 => Start (0,2), Goal (3,1)
[DBG]  Agent 28 has the original local path length: 10 => Start (2,2), Goal (2,4)
[DBG]  Agent 148 has the original local path length: 9 => Start (3,1), Goal (0,2)
[DBG]  Start position: (0, 2), (2, 2), (3, 1), 
[DBG]  Goal position: (3, 1), (2, 4), (0, 2), 
[DBG]  SAT instance and solver created.
Currently solving
Instance name: scen
Map name: map
Encoding used: disappear_at_goal
SAT solver used: Kissat
Optimizing function: sum of costs
Number of agents: 3
Mks LB: 5
SoC LB: 13
Delta: 0
Remaining time: 300000 [ms]

[STAT] Solver returned: -1
[DBG]  SAT solver failed.
[STAT] SAT solver failed to find a valid solution.
[DBG]  ====================
[DBG]  SAT destroy operator called.
[DBG]  SAT heuristic: 2
[DBG]  key_agent_id: 28
[DBG]  key_agent_id global path length: 43
[DBG]  Submap content (global positions):
[DBG]  595 596 597 598 599 
[DBG]  627 628 629 630 631 
[DBG]  659 660 661 662 663 
[DBG]  691 692 693 694 695 
[DBG]  723 724 725 726 727 
[DBG]  Map content with agents and obstacles:
[DBG]  X . A X . 
[DBG]  . . . X . 
[DBG]  A . A X X 
[DBG]  . . X X X 
[DBG]  X . . . . 
[DBG]  content of the map structure that we pass to the SAT solver:
[DBG]  -1  1  1  -1  1  
[DBG]  1  1  1  -1  1  
[DBG]  1  1  1  -1  -1  
[DBG]  1  1  -1  -1  -1  
[DBG]  -1  1  1  1  1  
[DBG]  Identifying agents in a submap for rescheduling (when key_agent is there at the time 14):
[DBG]  Agent 28 found intervals in the sub-map:
[DBG]   [0..33] [40..42]
[DBG]  Agent 28 (interval in submap: [0..33]) contains time 14, added to replan.
[DBG]  Agent 61 found intervals in the sub-map:
[DBG]   [14..18]
[DBG]  Agent 61 (interval in submap: [14..18]) contains time 14, added to replan.
[DBG]  Agent 86 found intervals in the sub-map:
[DBG]   [10..14]
[DBG]  Agent 86 (interval in submap: [10..14]) contains time 14, added to replan.
[DBG]  Agent 28 | Start (global): 661 -> (local): (2, 2) at time 14 | Goal (global): 725 -> (local): (4, 2) at time 33
[DBG]  Agent 61 | Start (global): 659 -> (local): (2, 0) at time 14 | Goal (global): 597 -> (local): (0, 2) at time 18
[DBG]  Agent 86 | Start (global): 597 -> (local): (0, 2) at time 14 | Goal (global): 597 -> (local): (0, 2) at time 14
[DBG]  [REPAIR] SAT destroy operator called.
[DBG]  [REPAIR] SAT operator – launching subproblem FOR OPTIMIZATION.
[DBG]  Creating local paths (sx, sy) in the submap for T_sync = 14
[DBG]    Agent 28 (global paths from T=14 to 33) has local path: (2,2) (2,2) (2,2) (2,2) (1,2) (1,1) (1,0) (1,0) (1,0) (1,0) (1,0) (1,0) (1,0) (1,0) (1,0) (2,0) (2,1) (3,1) (4,1) (4,2) 
[DBG]    Agent 61 (global paths from T=14 to 18) has local path: (2,0) (1,0) (1,1) (1,2) (0,2) 
[DBG]    Agent 86 (global paths from T=14 to 14) has local path: (0,2) 
[DBG]  Checking input data for SAT solver:
[DBG]    - Number of agents to replan: 3
[DBG]  Agent 28 has the original local path length: 20 => Start (2,2), Goal (4,2)
[DBG]  Agent 61 has the original local path length: 5 => Start (2,0), Goal (0,2)
[DBG]  Agent 86 has the original local path length: 1 => Start (0,2), Goal (0,2)
[DBG]  Start position: (2, 2), (2, 0), (0, 2), 
[DBG]  Goal position: (4, 2), (0, 2), (0, 2), 
[DBG]  SAT instance and solver created.
Currently solving
Instance name: scen
Map name: map
Encoding used: disappear_at_goal
SAT solver used: Kissat
Optimizing function: sum of costs
Number of agents: 3
Mks LB: 5
SoC LB: 11
Delta: 0
Remaining time: 300000 [ms]

Found plan [agents = 3] [timesteps = 5]
Agent #0 : 9 8 11 12 13 
Agent #1 : 7 3 4 5 1 
Agent #2 : 1 0 0 0 0 

[STAT] Solver returned: 0
[DBG]  Agent (index) 28 | New local path (submap idx):
[DBG]  9 8 11 12 13 
[DBG]  Agent (index) 61 | New local path (submap idx):
[DBG]  7 3 4 5 1 
[DBG]  Agent (index) 86 | New local path (submap idx):
[DBG]  1 
[DBG]  Update the agent path 28 | Original local length: 20 | New local length: 5
[DBG]  agent 28 t=0 => decoded (sx,sy)=(2,2) => global_id=661
[DBG]  agent 28 t=1 => decoded (sx,sy)=(2,1) => global_id=660
[DBG]  agent 28 t=2 => decoded (sx,sy)=(3,1) => global_id=692
[DBG]  agent 28 t=3 => decoded (sx,sy)=(4,1) => global_id=724
[DBG]  agent 28 t=4 => decoded (sx,sy)=(4,2) => global_id=725
[DBG]  Complete path of agent 28:
[DBG]    Original: 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 629 628 627 627 627 627 627 627 627 627 627 659 660 692 724 725 757 757 757 757 757 757 725 726 727 
[DBG]    New:     661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 660 692 724 725 757 757 757 757 757 757 725 726 727 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 661 661 661 661 661 661 661 661 661 661 661 661 661 661 
[DBG]    Local path (in submap): 661 660 692 724 725 757 757 757 757 757 757 725 726 727 
[DBG]    Suffix (out of submap): 
[DBG]  Original agent path length 28 je: 43
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 0: 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 660, 692, 724, 725, 757, 757, 757, 757, 757, 757, 725, 726, 727, 
[DBG]  Path for agent 28 updated, resulting length: 28
[DBG]  Update the agent path 61 | Original local length: 5 | New local length: 5
[DBG]  agent 61 t=0 => decoded (sx,sy)=(2,0) => global_id=659
[DBG]  agent 61 t=1 => decoded (sx,sy)=(1,0) => global_id=627
[DBG]  agent 61 t=2 => decoded (sx,sy)=(1,1) => global_id=628
[DBG]  agent 61 t=3 => decoded (sx,sy)=(1,2) => global_id=629
[DBG]  agent 61 t=4 => decoded (sx,sy)=(0,2) => global_id=597
[DBG]  Complete path of agent 61:
[DBG]    Original: 813 781 781 782 782 783 783 751 719 720 721 689 657 658 659 627 628 629 597 565 533 534 502 503 504 505 473 473 473 473 473 472 473 505 505 473 472 440 408 376 377 345 313 
[DBG]    New:     813 781 781 782 782 783 783 751 719 720 721 689 657 658 659 627 628 629 597 565 533 534 502 503 504 505 473 473 473 473 473 472 473 505 505 473 472 440 408 376 377 345 313 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 813 781 781 782 782 783 783 751 719 720 721 689 657 658 
[DBG]    Local path (in submap): 659 627 628 629 597 
[DBG]    Suffix (out of submap): 565 533 534 502 503 504 505 473 473 473 473 473 472 473 505 505 473 472 440 408 376 377 345 313 
[DBG]  Original agent path length 61 je: 43
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 1: 813, 781, 781, 782, 782, 783, 783, 751, 719, 720, 721, 689, 657, 658, 659, 627, 628, 629, 597, 565, 533, 534, 502, 503, 504, 505, 473, 473, 473, 473, 473, 472, 473, 505, 505, 473, 472, 440, 408, 376, 377, 345, 313, 
[DBG]  Path for agent 61 updated, resulting length: 43
[DBG]  Update the agent path 86 | Original local length: 1 | New local length: 1
[DBG]  agent 86 t=0 => decoded (sx,sy)=(0,2) => global_id=597
[DBG]  Complete path of agent 86:
[DBG]    Original: 781 782 750 718 719 687 688 689 657 658 659 627 628 596 597 565 566 534 534 502 503 504 505 506 538 539 540 541 
[DBG]    New:     781 782 750 718 719 687 688 689 657 658 659 627 628 596 597 565 566 534 534 502 503 504 505 506 538 539 540 541 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 781 782 750 718 719 687 688 689 657 658 659 627 628 596 
[DBG]    Local path (in submap): 597 
[DBG]    Suffix (out of submap): 565 566 534 534 502 503 504 505 506 538 539 540 541 
[DBG]  Original agent path length 86 je: 28
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 2: 781, 782, 750, 718, 719, 687, 688, 689, 657, 658, 659, 627, 628, 596, 597, 565, 566, 534, 534, 502, 503, 504, 505, 506, 538, 539, 540, 541, 
[DBG]  Path for agent 86 updated, resulting length: 28
[DBG]  Paths successfully updated.
[DBG]  (LNS.cpp) New path for agent 28: 
[DBG]  661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 660, 692, 724, 725, 757, 757, 757, 757, 757, 757, 725, 726, 727, 
[DBG]  (LNS.cpp) New path for agent 61: 
[DBG]  813, 781, 781, 782, 782, 783, 783, 751, 719, 720, 721, 689, 657, 658, 659, 627, 628, 629, 597, 565, 533, 534, 502, 503, 504, 505, 473, 473, 473, 473, 473, 472, 473, 505, 505, 473, 472, 440, 408, 376, 377, 345, 313, 
[DBG]  (LNS.cpp) New path for agent 86: 
[DBG]  781, 782, 750, 718, 719, 687, 688, 689, 657, 658, 659, 627, 628, 596, 597, 565, 566, 534, 534, 502, 503, 504, 505, 506, 538, 539, 540, 541, 
[DBG]  Delta value: 0.135135
[DBG]  Rewarding metric index = 1
[DBG]  component_weights = {0.265395, 0.379457, 0.147058, 0.208089}
[DBG]  opSuccess value: 1
[STAT] neighbor.sum_of_costs before recomputation: 96
[STAT] neighbor.old_sum_of_costs before recomputation: 111
[STAT] sum_of_costs before recomputation: 4410
[DBG]  Validate solution immediately after SAT success.
[WARNING] Problem after SAT: Vertex conflict between agents 28 and 30 at location 724 at timestep 17
[DBG]  [DEBUG] Attempting immediate repair via init_lns because problem occurred after SAT (should be applied only for conflicts...).
[DBG]  [DEBUG] Passing 150 agents to init_lns (skip=true).
[DBG]  [DEBUG] path_table contents for selected agents (neighbor.agents):
[DBG]    Agent 28 => controlling path length=28
[DBG]    Agent 61 => controlling path length=43
[DBG]    Agent 86 => controlling path length=28
[DBG]  hodnota skip_initial_solution=1
[DBG]  We skip initialSolution => call buildCollisionData()
[DBG]  buildCollisionData() called – skip_initial_solution case.
[DBG]  Agents.size()=150, collision_graph.size()=150
[DBG]  agent 28 => updateCollidingPairs => foundCollision
[DBG]  agent 30 => updateCollidingPairs => foundCollision
[DBG]  agent 42 => updateCollidingPairs => foundCollision
[DBG]  agent 91 => updateCollidingPairs => foundCollision
[DBG]  Conflicting agent pairs:
[DBG]  agent 28 is in conflict with agent 30
[DBG]  agent 28 is in conflict with agent 42
[DBG]  agent 28 is in conflict with agent 91
[DBG]  buildCollisionData() => sum_of_costs=4395, num_of_colliding_pairs=3
[DBG]  buildCollisionData done => sum_of_costs=4395, num_of_colliding_pairs=3
[DBG]  sum_of_cost hodnota: 4395
[DBG]  After skip/init build => iteration_stats.back(): sum_of_costs=4395, collisions=3
[DEBUG] Using default neighbor generation strategy for conflicts: 0
	InitLNS(PP): runtime = 0.00126621, iterations = 2, colliding pairs = 0, initial colliding pairs = 3, solution cost = 4410, initial solution cost = 4395, failed iterations = 0
[DBG]  init_lns->sum_of_costs after init_lns->run: 4410
[DBG]  sum_of_costs after assignment from init_lns->run: 4410
[DBG]  Recomputing sum_of_cost by dividing neighbor.sum_of_costs and neighbor.old_sum_of_costs
[STAT] sum_of_costs after recomputation: 4410
[STAT] Iteration 27
[DBG]  Random chance did not select SAT operator (r=52), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 27
[DBG]  Random chance did not select SAT operator (r=94), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 27
[DBG]  Random chance did not select SAT operator (r=90), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 27
[DBG]  Random chance did not select SAT operator (r=60), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 27
[DBG]  Random chance did not select SAT operator (r=27), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 27
[DBG]  Random chance did not select SAT operator (r=76), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 27
[DBG]  Using SAT operator (destroy+repair SAT).
[DBG]  ====================
[DBG]  SAT destroy operator called.
[DBG]  SAT heuristic: 2
[DBG]  key_agent_id: 28
[DBG]  key_agent_id global path length: 43
[DBG]  Submap content (global positions):
[DBG]  467 468 469 470 471 
[DBG]  499 500 501 502 503 
[DBG]  531 532 533 534 535 
[DBG]  563 564 565 566 567 
[DBG]  595 596 597 598 599 
[DBG]  Map content with agents and obstacles:
[DBG]  A . A A X 
[DBG]  . X . A A 
[DBG]  . X A . X 
[DBG]  . X A . X 
[DBG]  X . A X . 
[DBG]  content of the map structure that we pass to the SAT solver:
[DBG]  1  1  1  1  -1  
[DBG]  1  -1  1  1  1  
[DBG]  1  -1  1  1  -1  
[DBG]  1  -1  1  1  -1  
[DBG]  -1  1  1  -1  1  
[DBG]  Identifying agents in a submap for rescheduling (when key_agent is there at the time 29):
[DBG]  Agent 26 found intervals in the sub-map:
[DBG]   [22..29]
[DBG]  Agent 26 (interval in submap: [22..29]) contains time 29, added to replan.
[DBG]  Agent 28 found intervals in the sub-map:
[DBG]   [21..31]
[DBG]  Agent 28 (interval in submap: [21..31]) contains time 29, added to replan.
[DBG]  Agent 30 found intervals in the sub-map:
[DBG]   [24..29]
[DBG]  Agent 30 (interval in submap: [24..29]) contains time 29, added to replan.
[DBG]  Agent 53 found intervals in the sub-map:
[DBG]   [19..31]
[DBG]  Agent 53 (interval in submap: [19..31]) contains time 29, added to replan.
[DBG]  Agent 56 found intervals in the sub-map:
[DBG]   [25..31]
[DBG]  Agent 56 (interval in submap: [25..31]) contains time 29, added to replan.
[DBG]  Agent 62 found intervals in the sub-map:
[DBG]   [25..29]
[DBG]  Agent 62 (interval in submap: [25..29]) contains time 29, added to replan.
[DBG]  Agent 69 found intervals in the sub-map:
[DBG]   [29..36]
[DBG]  Agent 69 (interval in submap: [29..36]) contains time 29, added to replan.
[DBG]  Agent 114 found intervals in the sub-map:
[DBG]   [26..29]
[DBG]  Agent 114 (interval in submap: [26..29]) contains time 29, added to replan.
[DBG]  Agent 26 | Start (global): 597 -> (local): (4, 2) at time 29 | Goal (global): 597 -> (local): (4, 2) at time 29
[DBG]  Agent 28 | Start (global): 533 -> (local): (2, 2) at time 29 | Goal (global): 597 -> (local): (4, 2) at time 31
[DBG]  Agent 30 | Start (global): 503 -> (local): (1, 4) at time 29 | Goal (global): 503 -> (local): (1, 4) at time 29
[DBG]  Agent 53 | Start (global): 565 -> (local): (3, 2) at time 29 | Goal (global): 596 -> (local): (4, 1) at time 31
[DBG]  Agent 56 | Start (global): 502 -> (local): (1, 3) at time 29 | Goal (global): 470 -> (local): (0, 3) at time 31
[DBG]  Agent 62 | Start (global): 469 -> (local): (0, 2) at time 29 | Goal (global): 469 -> (local): (0, 2) at time 29
[DBG]  Agent 69 | Start (global): 467 -> (local): (0, 0) at time 29 | Goal (global): 596 -> (local): (4, 1) at time 36
[DBG]  Agent 114 | Start (global): 470 -> (local): (0, 3) at time 29 | Goal (global): 470 -> (local): (0, 3) at time 29
[DBG]  [REPAIR] SAT destroy operator called.
[DBG]  [REPAIR] SAT operator – launching subproblem FOR OPTIMIZATION.
[DBG]  Creating local paths (sx, sy) in the submap for T_sync = 29
[DBG]    Agent 26 (global paths from T=29 to 29) has local path: (4,2) 
[DBG]    Agent 28 (global paths from T=29 to 31) has local path: (2,2) (3,2) (4,2) 
[DBG]    Agent 30 (global paths from T=29 to 29) has local path: (1,4) 
[DBG]    Agent 53 (global paths from T=29 to 31) has local path: (3,2) (4,2) (4,1) 
[DBG]    Agent 56 (global paths from T=29 to 31) has local path: (1,3) (0,3) (0,3) 
[DBG]    Agent 62 (global paths from T=29 to 29) has local path: (0,2) 
[DBG]    Agent 69 (global paths from T=29 to 36) has local path: (0,0) (0,1) (0,2) (1,2) (2,2) (3,2) (4,2) (4,1) 
[DBG]    Agent 114 (global paths from T=29 to 29) has local path: (0,3) 
[DBG]  Checking input data for SAT solver:
[DBG]    - Number of agents to replan: 8
[DBG]  Agent 26 has the original local path length: 1 => Start (4,2), Goal (4,2)
[DBG]  Agent 28 has the original local path length: 3 => Start (2,2), Goal (4,2)
[DBG]  Agent 30 has the original local path length: 1 => Start (1,4), Goal (1,4)
[DBG]  Agent 53 has the original local path length: 3 => Start (3,2), Goal (4,1)
[DBG]  Agent 56 has the original local path length: 3 => Start (1,3), Goal (0,3)
[DBG]  Agent 62 has the original local path length: 1 => Start (0,2), Goal (0,2)
[DBG]  Agent 69 has the original local path length: 8 => Start (0,0), Goal (4,1)
[DBG]  Agent 114 has the original local path length: 1 => Start (0,3), Goal (0,3)
[DBG]  Start position: (4, 2), (2, 2), (1, 4), (3, 2), (1, 3), (0, 2), (0, 0), (0, 3), 
[DBG]  Goal position: (4, 2), (4, 2), (1, 4), (4, 1), (0, 3), (0, 2), (4, 1), (0, 3), 
[DBG]  SAT instance and solver created.
Currently solving
Instance name: scen
Map name: map
Encoding used: disappear_at_goal
SAT solver used: Kissat
Optimizing function: sum of costs
Number of agents: 8
Mks LB: 8
SoC LB: 20
Delta: 0
Remaining time: 300000 [ms]

Vertex conflict! Agents 0, 1, timestep 3, location 0
Swapping conflict! Agents 0, 1, timestep 3, edge (0,0)
Vertex conflict! Agents 0, 1, timestep 4, location 0
Swapping conflict! Agents 0, 1, timestep 4, edge (0,0)
Vertex conflict! Agents 0, 1, timestep 5, location 0
Swapping conflict! Agents 0, 1, timestep 5, edge (0,0)
Vertex conflict! Agents 0, 1, timestep 6, location 0
Swapping conflict! Agents 0, 1, timestep 6, edge (0,0)
Vertex conflict! Agents 0, 1, timestep 7, location 0
Vertex conflict! Agents 0, 2, timestep 1, location 0
Swapping conflict! Agents 0, 2, timestep 1, edge (0,0)
Vertex conflict! Agents 0, 2, timestep 2, location 0
Swapping conflict! Agents 0, 2, timestep 2, edge (0,0)
Vertex conflict! Agents 0, 2, timestep 3, location 0
Swapping conflict! Agents 0, 2, timestep 3, edge (0,0)
Vertex conflict! Agents 0, 2, timestep 4, location 0
Swapping conflict! Agents 0, 2, timestep 4, edge (0,0)
Vertex conflict! Agents 0, 2, timestep 5, location 0
Swapping conflict! Agents 0, 2, timestep 5, edge (0,0)
Vertex conflict! Agents 0, 2, timestep 6, location 0
Swapping conflict! Agents 0, 2, timestep 6, edge (0,0)
Vertex conflict! Agents 0, 2, timestep 7, location 0
Vertex conflict! Agents 0, 3, timestep 3, location 0
Swapping conflict! Agents 0, 3, timestep 3, edge (0,0)
Vertex conflict! Agents 0, 3, timestep 4, location 0
Swapping conflict! Agents 0, 3, timestep 4, edge (0,0)
Vertex conflict! Agents 0, 3, timestep 5, location 0
Swapping conflict! Agents 0, 3, timestep 5, edge (0,0)
Vertex conflict! Agents 0, 3, timestep 6, location 0
Swapping conflict! Agents 0, 3, timestep 6, edge (0,0)
Vertex conflict! Agents 0, 3, timestep 7, location 0
Vertex conflict! Agents 0, 4, timestep 2, location 0
Swapping conflict! Agents 0, 4, timestep 2, edge (0,0)
Vertex conflict! Agents 0, 4, timestep 3, location 0
Swapping conflict! Agents 0, 4, timestep 3, edge (0,0)
Vertex conflict! Agents 0, 4, timestep 4, location 0
Swapping conflict! Agents 0, 4, timestep 4, edge (0,0)
Vertex conflict! Agents 0, 4, timestep 5, location 0
Swapping conflict! Agents 0, 4, timestep 5, edge (0,0)
Vertex conflict! Agents 0, 4, timestep 6, location 0
Swapping conflict! Agents 0, 4, timestep 6, edge (0,0)
Vertex conflict! Agents 0, 4, timestep 7, location 0
Vertex conflict! Agents 0, 5, timestep 1, location 0
Swapping conflict! Agents 0, 5, timestep 1, edge (0,0)
Vertex conflict! Agents 0, 5, timestep 2, location 0
Swapping conflict! Agents 0, 5, timestep 2, edge (0,0)
Vertex conflict! Agents 0, 5, timestep 3, location 0
Swapping conflict! Agents 0, 5, timestep 3, edge (0,0)
Vertex conflict! Agents 0, 5, timestep 4, location 0
Swapping conflict! Agents 0, 5, timestep 4, edge (0,0)
Vertex conflict! Agents 0, 5, timestep 5, location 0
Swapping conflict! Agents 0, 5, timestep 5, edge (0,0)
Vertex conflict! Agents 0, 5, timestep 6, location 0
Swapping conflict! Agents 0, 5, timestep 6, edge (0,0)
Vertex conflict! Agents 0, 5, timestep 7, location 0
Vertex conflict! Agents 0, 7, timestep 1, location 0
Swapping conflict! Agents 0, 7, timestep 1, edge (0,0)
Vertex conflict! Agents 0, 7, timestep 2, location 0
Swapping conflict! Agents 0, 7, timestep 2, edge (0,0)
Vertex conflict! Agents 0, 7, timestep 3, location 0
Swapping conflict! Agents 0, 7, timestep 3, edge (0,0)
Vertex conflict! Agents 0, 7, timestep 4, location 0
Swapping conflict! Agents 0, 7, timestep 4, edge (0,0)
Vertex conflict! Agents 0, 7, timestep 5, location 0
Swapping conflict! Agents 0, 7, timestep 5, edge (0,0)
Vertex conflict! Agents 0, 7, timestep 6, location 0
Swapping conflict! Agents 0, 7, timestep 6, edge (0,0)
Vertex conflict! Agents 0, 7, timestep 7, location 0
Vertex conflict! Agents 1, 2, timestep 3, location 0
Swapping conflict! Agents 1, 2, timestep 3, edge (0,0)
Vertex conflict! Agents 1, 2, timestep 4, location 0
Swapping conflict! Agents 1, 2, timestep 4, edge (0,0)
Vertex conflict! Agents 1, 2, timestep 5, location 0
Swapping conflict! Agents 1, 2, timestep 5, edge (0,0)
Vertex conflict! Agents 1, 2, timestep 6, location 0
Swapping conflict! Agents 1, 2, timestep 6, edge (0,0)
Vertex conflict! Agents 1, 2, timestep 7, location 0
Vertex conflict! Agents 1, 3, timestep 3, location 0
Swapping conflict! Agents 1, 3, timestep 3, edge (0,0)
Vertex conflict! Agents 1, 3, timestep 4, location 0
Swapping conflict! Agents 1, 3, timestep 4, edge (0,0)
Vertex conflict! Agents 1, 3, timestep 5, location 0
Swapping conflict! Agents 1, 3, timestep 5, edge (0,0)
Vertex conflict! Agents 1, 3, timestep 6, location 0
Swapping conflict! Agents 1, 3, timestep 6, edge (0,0)
Vertex conflict! Agents 1, 3, timestep 7, location 0
Vertex conflict! Agents 1, 4, timestep 3, location 0
Swapping conflict! Agents 1, 4, timestep 3, edge (0,0)
Vertex conflict! Agents 1, 4, timestep 4, location 0
Swapping conflict! Agents 1, 4, timestep 4, edge (0,0)
Vertex conflict! Agents 1, 4, timestep 5, location 0
Swapping conflict! Agents 1, 4, timestep 5, edge (0,0)
Vertex conflict! Agents 1, 4, timestep 6, location 0
Swapping conflict! Agents 1, 4, timestep 6, edge (0,0)
Vertex conflict! Agents 1, 4, timestep 7, location 0
Vertex conflict! Agents 1, 5, timestep 3, location 0
Swapping conflict! Agents 1, 5, timestep 3, edge (0,0)
Vertex conflict! Agents 1, 5, timestep 4, location 0
Swapping conflict! Agents 1, 5, timestep 4, edge (0,0)
Vertex conflict! Agents 1, 5, timestep 5, location 0
Swapping conflict! Agents 1, 5, timestep 5, edge (0,0)
Vertex conflict! Agents 1, 5, timestep 6, location 0
Swapping conflict! Agents 1, 5, timestep 6, edge (0,0)
Vertex conflict! Agents 1, 5, timestep 7, location 0
Vertex conflict! Agents 1, 7, timestep 3, location 0
Swapping conflict! Agents 1, 7, timestep 3, edge (0,0)
Vertex conflict! Agents 1, 7, timestep 4, location 0
Swapping conflict! Agents 1, 7, timestep 4, edge (0,0)
Vertex conflict! Agents 1, 7, timestep 5, location 0
Swapping conflict! Agents 1, 7, timestep 5, edge (0,0)
Vertex conflict! Agents 1, 7, timestep 6, location 0
Swapping conflict! Agents 1, 7, timestep 6, edge (0,0)
Vertex conflict! Agents 1, 7, timestep 7, location 0
Vertex conflict! Agents 2, 3, timestep 3, location 0
Swapping conflict! Agents 2, 3, timestep 3, edge (0,0)
Vertex conflict! Agents 2, 3, timestep 4, location 0
Swapping conflict! Agents 2, 3, timestep 4, edge (0,0)
Vertex conflict! Agents 2, 3, timestep 5, location 0
Swapping conflict! Agents 2, 3, timestep 5, edge (0,0)
Vertex conflict! Agents 2, 3, timestep 6, location 0
Swapping conflict! Agents 2, 3, timestep 6, edge (0,0)
Vertex conflict! Agents 2, 3, timestep 7, location 0
Vertex conflict! Agents 2, 4, timestep 2, location 0
Swapping conflict! Agents 2, 4, timestep 2, edge (0,0)
Vertex conflict! Agents 2, 4, timestep 3, location 0
Swapping conflict! Agents 2, 4, timestep 3, edge (0,0)
Vertex conflict! Agents 2, 4, timestep 4, location 0
Swapping conflict! Agents 2, 4, timestep 4, edge (0,0)
Vertex conflict! Agents 2, 4, timestep 5, location 0
Swapping conflict! Agents 2, 4, timestep 5, edge (0,0)
Vertex conflict! Agents 2, 4, timestep 6, location 0
Swapping conflict! Agents 2, 4, timestep 6, edge (0,0)
Vertex conflict! Agents 2, 4, timestep 7, location 0
Vertex conflict! Agents 2, 5, timestep 1, location 0
Swapping conflict! Agents 2, 5, timestep 1, edge (0,0)
Vertex conflict! Agents 2, 5, timestep 2, location 0
Swapping conflict! Agents 2, 5, timestep 2, edge (0,0)
Vertex conflict! Agents 2, 5, timestep 3, location 0
Swapping conflict! Agents 2, 5, timestep 3, edge (0,0)
Vertex conflict! Agents 2, 5, timestep 4, location 0
Swapping conflict! Agents 2, 5, timestep 4, edge (0,0)
Vertex conflict! Agents 2, 5, timestep 5, location 0
Swapping conflict! Agents 2, 5, timestep 5, edge (0,0)
Vertex conflict! Agents 2, 5, timestep 6, location 0
Swapping conflict! Agents 2, 5, timestep 6, edge (0,0)
Vertex conflict! Agents 2, 5, timestep 7, location 0
Vertex conflict! Agents 2, 7, timestep 1, location 0
Swapping conflict! Agents 2, 7, timestep 1, edge (0,0)
Vertex conflict! Agents 2, 7, timestep 2, location 0
Swapping conflict! Agents 2, 7, timestep 2, edge (0,0)
Vertex conflict! Agents 2, 7, timestep 3, location 0
Swapping conflict! Agents 2, 7, timestep 3, edge (0,0)
Vertex conflict! Agents 2, 7, timestep 4, location 0
Swapping conflict! Agents 2, 7, timestep 4, edge (0,0)
Vertex conflict! Agents 2, 7, timestep 5, location 0
Swapping conflict! Agents 2, 7, timestep 5, edge (0,0)
Vertex conflict! Agents 2, 7, timestep 6, location 0
Swapping conflict! Agents 2, 7, timestep 6, edge (0,0)
Vertex conflict! Agents 2, 7, timestep 7, location 0
Vertex conflict! Agents 3, 4, timestep 3, location 0
Swapping conflict! Agents 3, 4, timestep 3, edge (0,0)
Vertex conflict! Agents 3, 4, timestep 4, location 0
Swapping conflict! Agents 3, 4, timestep 4, edge (0,0)
Vertex conflict! Agents 3, 4, timestep 5, location 0
Swapping conflict! Agents 3, 4, timestep 5, edge (0,0)
Vertex conflict! Agents 3, 4, timestep 6, location 0
Swapping conflict! Agents 3, 4, timestep 6, edge (0,0)
Vertex conflict! Agents 3, 4, timestep 7, location 0
Vertex conflict! Agents 3, 5, timestep 3, location 0
Swapping conflict! Agents 3, 5, timestep 3, edge (0,0)
Vertex conflict! Agents 3, 5, timestep 4, location 0
Swapping conflict! Agents 3, 5, timestep 4, edge (0,0)
Vertex conflict! Agents 3, 5, timestep 5, location 0
Swapping conflict! Agents 3, 5, timestep 5, edge (0,0)
Vertex conflict! Agents 3, 5, timestep 6, location 0
Swapping conflict! Agents 3, 5, timestep 6, edge (0,0)
Vertex conflict! Agents 3, 5, timestep 7, location 0
Vertex conflict! Agents 3, 7, timestep 3, location 0
Swapping conflict! Agents 3, 7, timestep 3, edge (0,0)
Vertex conflict! Agents 3, 7, timestep 4, location 0
Swapping conflict! Agents 3, 7, timestep 4, edge (0,0)
Vertex conflict! Agents 3, 7, timestep 5, location 0
Swapping conflict! Agents 3, 7, timestep 5, edge (0,0)
Vertex conflict! Agents 3, 7, timestep 6, location 0
Swapping conflict! Agents 3, 7, timestep 6, edge (0,0)
Vertex conflict! Agents 3, 7, timestep 7, location 0
Vertex conflict! Agents 4, 5, timestep 2, location 0
Swapping conflict! Agents 4, 5, timestep 2, edge (0,0)
Vertex conflict! Agents 4, 5, timestep 3, location 0
Swapping conflict! Agents 4, 5, timestep 3, edge (0,0)
Vertex conflict! Agents 4, 5, timestep 4, location 0
Swapping conflict! Agents 4, 5, timestep 4, edge (0,0)
Vertex conflict! Agents 4, 5, timestep 5, location 0
Swapping conflict! Agents 4, 5, timestep 5, edge (0,0)
Vertex conflict! Agents 4, 5, timestep 6, location 0
Swapping conflict! Agents 4, 5, timestep 6, edge (0,0)
Vertex conflict! Agents 4, 5, timestep 7, location 0
Vertex conflict! Agents 4, 7, timestep 2, location 0
Swapping conflict! Agents 4, 7, timestep 2, edge (0,0)
Vertex conflict! Agents 4, 7, timestep 3, location 0
Swapping conflict! Agents 4, 7, timestep 3, edge (0,0)
Vertex conflict! Agents 4, 7, timestep 4, location 0
Swapping conflict! Agents 4, 7, timestep 4, edge (0,0)
Vertex conflict! Agents 4, 7, timestep 5, location 0
Swapping conflict! Agents 4, 7, timestep 5, edge (0,0)
Vertex conflict! Agents 4, 7, timestep 6, location 0
Swapping conflict! Agents 4, 7, timestep 6, edge (0,0)
Vertex conflict! Agents 4, 7, timestep 7, location 0
Vertex conflict! Agents 5, 7, timestep 1, location 0
Swapping conflict! Agents 5, 7, timestep 1, edge (0,0)
Vertex conflict! Agents 5, 7, timestep 2, location 0
Swapping conflict! Agents 5, 7, timestep 2, edge (0,0)
Vertex conflict! Agents 5, 7, timestep 3, location 0
Swapping conflict! Agents 5, 7, timestep 3, edge (0,0)
Vertex conflict! Agents 5, 7, timestep 4, location 0
Swapping conflict! Agents 5, 7, timestep 4, edge (0,0)
Vertex conflict! Agents 5, 7, timestep 5, location 0
Swapping conflict! Agents 5, 7, timestep 5, edge (0,0)
Vertex conflict! Agents 5, 7, timestep 6, location 0
Swapping conflict! Agents 5, 7, timestep 6, edge (0,0)
Vertex conflict! Agents 5, 7, timestep 7, location 0
Found plan [agents = 8] [timesteps = 8]
Agent #0 : 15 0 0 0 0 0 0 0 
Agent #1 : 9 12 15 0 0 0 0 0 
Agent #2 : 7 0 0 0 0 0 0 0 
Agent #3 : 12 15 14 0 0 0 0 0 
Agent #4 : 6 3 0 0 0 0 0 0 
Agent #5 : 2 0 0 0 0 0 0 0 
Agent #6 : 0 1 2 5 9 12 15 14 
Agent #7 : 3 0 0 0 0 0 0 0 

[STAT] Solver returned: 0
[DBG]  Agent (index) 26 | New local path (submap idx):
[DBG]  15 
[DBG]  Agent (index) 28 | New local path (submap idx):
[DBG]  9 12 15 
[DBG]  Agent (index) 30 | New local path (submap idx):
[DBG]  7 
[DBG]  Agent (index) 53 | New local path (submap idx):
[DBG]  12 15 14 
[DBG]  Agent (index) 56 | New local path (submap idx):
[DBG]  6 3 
[DBG]  Agent (index) 62 | New local path (submap idx):
[DBG]  2 
[DBG]  Agent (index) 69 | New local path (submap idx):
[DBG]  0 1 2 5 9 12 15 14 
[DBG]  Agent (index) 114 | New local path (submap idx):
[DBG]  3 
[DBG]  Update the agent path 26 | Original local length: 1 | New local length: 1
[DBG]  agent 26 t=0 => decoded (sx,sy)=(4,2) => global_id=597
[DBG]  Complete path of agent 26:
[DBG]    Original: 13 14 46 47 48 49 81 82 83 115 147 179 180 212 244 276 308 309 341 373 405 437 469 501 501 501 501 533 565 597 629 628 660 692 691 691 692 724 756 755 
[DBG]    New:     13 14 46 47 48 49 81 82 83 115 147 179 180 212 244 276 308 309 341 373 405 437 469 501 501 501 501 533 565 597 629 628 660 692 691 691 692 724 756 755 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 13 14 46 47 48 49 81 82 83 115 147 179 180 212 244 276 308 309 341 373 405 437 469 501 501 501 501 533 565 
[DBG]    Local path (in submap): 597 
[DBG]    Suffix (out of submap): 629 628 660 692 691 691 692 724 756 755 
[DBG]  Original agent path length 26 je: 40
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 0: 13, 14, 46, 47, 48, 49, 81, 82, 83, 115, 147, 179, 180, 212, 244, 276, 308, 309, 341, 373, 405, 437, 469, 501, 501, 501, 501, 533, 565, 597, 629, 628, 660, 692, 691, 691, 692, 724, 756, 755, 
[DBG]  Path for agent 26 updated, resulting length: 40
[DBG]  Update the agent path 28 | Original local length: 3 | New local length: 3
[DBG]  agent 28 t=0 => decoded (sx,sy)=(2,2) => global_id=533
[DBG]  agent 28 t=1 => decoded (sx,sy)=(3,2) => global_id=565
[DBG]  agent 28 t=2 => decoded (sx,sy)=(4,2) => global_id=597
[DBG]  Complete path of agent 28:
[DBG]    Original: 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 629 629 629 597 565 566 534 502 470 469 501 533 565 597 629 661 660 692 724 725 757 757 725 726 727 
[DBG]    New:     661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 629 629 629 597 565 566 534 502 470 469 501 533 565 597 629 661 660 692 724 725 757 757 725 726 727 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 629 629 629 597 565 566 534 502 470 469 501 
[DBG]    Local path (in submap): 533 565 597 
[DBG]    Suffix (out of submap): 629 661 660 692 724 725 757 757 725 726 727 
[DBG]  Original agent path length 28 je: 43
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 1: 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 629, 629, 629, 597, 565, 566, 534, 502, 470, 469, 501, 533, 565, 597, 629, 661, 660, 692, 724, 725, 757, 757, 725, 726, 727, 
[DBG]  Path for agent 28 updated, resulting length: 43
[DBG]  Update the agent path 30 | Original local length: 1 | New local length: 1
[DBG]  agent 30 t=0 => decoded (sx,sy)=(1,4) => global_id=503
[DBG]  Complete path of agent 30:
[DBG]    Original: 922 922 922 921 920 888 888 888 856 855 855 855 854 822 821 820 788 756 724 724 692 660 628 629 597 565 566 534 502 503 
[DBG]    New:     922 922 922 921 920 888 888 888 856 855 855 855 854 822 821 820 788 756 724 724 692 660 628 629 597 565 566 534 502 503 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 922 922 922 921 920 888 888 888 856 855 855 855 854 822 821 820 788 756 724 724 692 660 628 629 597 565 566 534 502 
[DBG]    Local path (in submap): 503 
[DBG]    Suffix (out of submap): 
[DBG]  Original agent path length 30 je: 30
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 2: 922, 922, 922, 921, 920, 888, 888, 888, 856, 855, 855, 855, 854, 822, 821, 820, 788, 756, 724, 724, 692, 660, 628, 629, 597, 565, 566, 534, 502, 503, 
[DBG]  Path for agent 30 updated, resulting length: 30
[DBG]  Update the agent path 53 | Original local length: 3 | New local length: 3
[DBG]  agent 53 t=0 => decoded (sx,sy)=(3,2) => global_id=565
[DBG]  agent 53 t=1 => decoded (sx,sy)=(4,2) => global_id=597
[DBG]  agent 53 t=2 => decoded (sx,sy)=(4,1) => global_id=596
[DBG]  Complete path of agent 53:
[DBG]    Original: 84 116 148 149 150 151 183 215 247 279 311 343 375 407 406 406 406 406 438 470 470 470 470 469 469 469 469 501 533 565 597 596 628 628 628 628 628 660 692 724 756 788 820 821 
[DBG]    New:     84 116 148 149 150 151 183 215 247 279 311 343 375 407 406 406 406 406 438 470 470 470 470 469 469 469 469 501 533 565 597 596 628 628 628 628 628 660 692 724 756 788 820 821 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 84 116 148 149 150 151 183 215 247 279 311 343 375 407 406 406 406 406 438 470 470 470 470 469 469 469 469 501 533 
[DBG]    Local path (in submap): 565 597 596 
[DBG]    Suffix (out of submap): 628 628 628 628 628 660 692 724 756 788 820 821 
[DBG]  Original agent path length 53 je: 44
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 3: 84, 116, 148, 149, 150, 151, 183, 215, 247, 279, 311, 343, 375, 407, 406, 406, 406, 406, 438, 470, 470, 470, 470, 469, 469, 469, 469, 501, 533, 565, 597, 596, 628, 628, 628, 628, 628, 660, 692, 724, 756, 788, 820, 821, 
[DBG]  Path for agent 53 updated, resulting length: 44
[DBG]  Update the agent path 56 | Original local length: 3 | New local length: 2
[DBG]  agent 56 t=0 => decoded (sx,sy)=(1,3) => global_id=502
[DBG]  agent 56 t=1 => decoded (sx,sy)=(0,3) => global_id=470
[DBG]  Complete path of agent 56:
[DBG]    Original: 805 773 774 775 776 744 745 713 714 682 683 684 685 653 654 655 656 657 658 659 659 659 660 628 629 597 565 566 534 502 470 470 438 439 440 408 409 377 378 379 380 412 413 414 415 383 351 319 287 255 
[DBG]    New:     805 773 774 775 776 744 745 713 714 682 683 684 685 653 654 655 656 657 658 659 659 659 660 628 629 597 565 566 534 502 470 438 439 440 408 409 377 378 379 380 412 413 414 415 383 351 319 287 255 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 805 773 774 775 776 744 745 713 714 682 683 684 685 653 654 655 656 657 658 659 659 659 660 628 629 597 565 566 534 
[DBG]    Local path (in submap): 502 470 438 
[DBG]    Suffix (out of submap): 439 440 408 409 377 378 379 380 412 413 414 415 383 351 319 287 255 
[DBG]  Original agent path length 56 je: 50
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 4: 805, 773, 774, 775, 776, 744, 745, 713, 714, 682, 683, 684, 685, 653, 654, 655, 656, 657, 658, 659, 659, 659, 660, 628, 629, 597, 565, 566, 534, 502, 470, 438, 439, 440, 408, 409, 377, 378, 379, 380, 412, 413, 414, 415, 383, 351, 319, 287, 255, 
[DBG]  Path for agent 56 updated, resulting length: 49
[DBG]  Update the agent path 62 | Original local length: 1 | New local length: 1
[DBG]  agent 62 t=0 => decoded (sx,sy)=(0,2) => global_id=469
[DBG]  Complete path of agent 62:
[DBG]    Original: 753 753 753 753 753 753 753 753 753 753 753 753 753 753 752 720 720 688 656 657 625 593 561 529 530 531 499 467 468 469 437 438 406 
[DBG]    New:     753 753 753 753 753 753 753 753 753 753 753 753 753 753 752 720 720 688 656 657 625 593 561 529 530 531 499 467 468 469 437 438 406 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 753 753 753 753 753 753 753 753 753 753 753 753 753 753 752 720 720 688 656 657 625 593 561 529 530 531 499 467 468 
[DBG]    Local path (in submap): 469 
[DBG]    Suffix (out of submap): 437 438 406 
[DBG]  Original agent path length 62 je: 33
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 5: 753, 753, 753, 753, 753, 753, 753, 753, 753, 753, 753, 753, 753, 753, 752, 720, 720, 688, 656, 657, 625, 593, 561, 529, 530, 531, 499, 467, 468, 469, 437, 438, 406, 
[DBG]  Path for agent 62 updated, resulting length: 33
[DBG]  Update the agent path 69 | Original local length: 8 | New local length: 8
[DBG]  agent 69 t=0 => decoded (sx,sy)=(0,0) => global_id=467
[DBG]  agent 69 t=1 => decoded (sx,sy)=(0,1) => global_id=468
[DBG]  agent 69 t=2 => decoded (sx,sy)=(0,2) => global_id=469
[DBG]  agent 69 t=3 => decoded (sx,sy)=(1,2) => global_id=501
[DBG]  agent 69 t=4 => decoded (sx,sy)=(2,2) => global_id=533
[DBG]  agent 69 t=5 => decoded (sx,sy)=(3,2) => global_id=565
[DBG]  agent 69 t=6 => decoded (sx,sy)=(4,2) => global_id=597
[DBG]  agent 69 t=7 => decoded (sx,sy)=(4,1) => global_id=596
[DBG]  Complete path of agent 69:
[DBG]    Original: 4 5 37 69 70 71 72 73 105 137 138 139 140 172 173 205 237 269 301 333 365 366 398 430 462 463 464 465 466 467 468 469 501 533 565 597 596 628 660 692 724 756 788 820 
[DBG]    New:     4 5 37 69 70 71 72 73 105 137 138 139 140 172 173 205 237 269 301 333 365 366 398 430 462 463 464 465 466 467 468 469 501 533 565 597 596 628 660 692 724 756 788 820 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 4 5 37 69 70 71 72 73 105 137 138 139 140 172 173 205 237 269 301 333 365 366 398 430 462 463 464 465 466 
[DBG]    Local path (in submap): 467 468 469 501 533 565 597 596 
[DBG]    Suffix (out of submap): 628 660 692 724 756 788 820 
[DBG]  Original agent path length 69 je: 44
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 6: 4, 5, 37, 69, 70, 71, 72, 73, 105, 137, 138, 139, 140, 172, 173, 205, 237, 269, 301, 333, 365, 366, 398, 430, 462, 463, 464, 465, 466, 467, 468, 469, 501, 533, 565, 597, 596, 628, 660, 692, 724, 756, 788, 820, 
[DBG]  Path for agent 69 updated, resulting length: 44
[DBG]  Update the agent path 114 | Original local length: 1 | New local length: 1
[DBG]  agent 114 t=0 => decoded (sx,sy)=(0,3) => global_id=470
[DBG]  Complete path of agent 114:
[DBG]    Original: 875 875 875 875 875 843 844 812 813 781 782 783 783 751 719 687 655 623 591 592 593 561 529 530 498 466 467 468 469 470 438 406 407 408 409 377 345 313 281 249 217 185 186 154 
[DBG]    New:     875 875 875 875 875 843 844 812 813 781 782 783 783 751 719 687 655 623 591 592 593 561 529 530 498 466 467 468 469 470 438 406 407 408 409 377 345 313 281 249 217 185 186 154 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 875 875 875 875 875 843 844 812 813 781 782 783 783 751 719 687 655 623 591 592 593 561 529 530 498 466 467 468 469 
[DBG]    Local path (in submap): 470 
[DBG]    Suffix (out of submap): 438 406 407 408 409 377 345 313 281 249 217 185 186 154 
[DBG]  Original agent path length 114 je: 44
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 7: 875, 875, 875, 875, 875, 843, 844, 812, 813, 781, 782, 783, 783, 751, 719, 687, 655, 623, 591, 592, 593, 561, 529, 530, 498, 466, 467, 468, 469, 470, 438, 406, 407, 408, 409, 377, 345, 313, 281, 249, 217, 185, 186, 154, 
[DBG]  Path for agent 114 updated, resulting length: 44
[DBG]  Paths successfully updated.
[DBG]  (LNS.cpp) New path for agent 26: 
[DBG]  13, 14, 46, 47, 48, 49, 81, 82, 83, 115, 147, 179, 180, 212, 244, 276, 308, 309, 341, 373, 405, 437, 469, 501, 501, 501, 501, 533, 565, 597, 629, 628, 660, 692, 691, 691, 692, 724, 756, 755, 
[DBG]  (LNS.cpp) New path for agent 28: 
[DBG]  661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 629, 629, 629, 597, 565, 566, 534, 502, 470, 469, 501, 533, 565, 597, 629, 661, 660, 692, 724, 725, 757, 757, 725, 726, 727, 
[DBG]  (LNS.cpp) New path for agent 30: 
[DBG]  922, 922, 922, 921, 920, 888, 888, 888, 856, 855, 855, 855, 854, 822, 821, 820, 788, 756, 724, 724, 692, 660, 628, 629, 597, 565, 566, 534, 502, 503, 
[DBG]  (LNS.cpp) New path for agent 53: 
[DBG]  84, 116, 148, 149, 150, 151, 183, 215, 247, 279, 311, 343, 375, 407, 406, 406, 406, 406, 438, 470, 470, 470, 470, 469, 469, 469, 469, 501, 533, 565, 597, 596, 628, 628, 628, 628, 628, 660, 692, 724, 756, 788, 820, 821, 
[DBG]  (LNS.cpp) New path for agent 56: 
[DBG]  805, 773, 774, 775, 776, 744, 745, 713, 714, 682, 683, 684, 685, 653, 654, 655, 656, 657, 658, 659, 659, 659, 660, 628, 629, 597, 565, 566, 534, 502, 470, 438, 439, 440, 408, 409, 377, 378, 379, 380, 412, 413, 414, 415, 383, 351, 319, 287, 255, 
[DBG]  (LNS.cpp) New path for agent 62: 
[DBG]  753, 753, 753, 753, 753, 753, 753, 753, 753, 753, 753, 753, 753, 753, 752, 720, 720, 688, 656, 657, 625, 593, 561, 529, 530, 531, 499, 467, 468, 469, 437, 438, 406, 
[DBG]  (LNS.cpp) New path for agent 69: 
[DBG]  4, 5, 37, 69, 70, 71, 72, 73, 105, 137, 138, 139, 140, 172, 173, 205, 237, 269, 301, 333, 365, 366, 398, 430, 462, 463, 464, 465, 466, 467, 468, 469, 501, 533, 565, 597, 596, 628, 660, 692, 724, 756, 788, 820, 
[DBG]  (LNS.cpp) New path for agent 114: 
[DBG]  875, 875, 875, 875, 875, 843, 844, 812, 813, 781, 782, 783, 783, 751, 719, 687, 655, 623, 591, 592, 593, 561, 529, 530, 498, 466, 467, 468, 469, 470, 438, 406, 407, 408, 409, 377, 345, 313, 281, 249, 217, 185, 186, 154, 
[DBG]  Delta value: 0.003125
[DBG]  Rewarding metric index = 0
[DBG]  component_weights = {0.276138, 0.373908, 0.144908, 0.205046}
[DBG]  opSuccess value: 1
[STAT] neighbor.sum_of_costs before recomputation: 319
[STAT] neighbor.old_sum_of_costs before recomputation: 320
[STAT] sum_of_costs before recomputation: 4410
[DBG]  Validate solution immediately after SAT success.
[WARNING] Problem after SAT: Vertex conflict between agents 62 and 56 at location 438 at timestep 31
[DBG]  [DEBUG] Attempting immediate repair via init_lns because problem occurred after SAT (should be applied only for conflicts...).
[DBG]  [DEBUG] Passing 150 agents to init_lns (skip=true).
[DBG]  [DEBUG] path_table contents for selected agents (neighbor.agents):
[DBG]    Agent 26 => controlling path length=40
[DBG]    Agent 28 => controlling path length=43
[DBG]    Agent 30 => controlling path length=30
[DBG]    Agent 53 => controlling path length=44
[DBG]    Agent 56 => controlling path length=49
[DBG]    Agent 62 => controlling path length=33
[DBG]    Agent 69 => controlling path length=44
[DBG]    Agent 114 => controlling path length=44
[DBG]  hodnota skip_initial_solution=1
[DBG]  We skip initialSolution => call buildCollisionData()
[DBG]  buildCollisionData() called – skip_initial_solution case.
[DBG]  Agents.size()=150, collision_graph.size()=150
[DBG]  agent 56 => updateCollidingPairs => foundCollision
[DBG]  agent 62 => updateCollidingPairs => foundCollision
[DBG]  Conflicting agent pairs:
[DBG]  agent 56 is in conflict with agent 62
[DBG]  buildCollisionData() => sum_of_costs=4409, num_of_colliding_pairs=1
[DBG]  buildCollisionData done => sum_of_costs=4409, num_of_colliding_pairs=1
[DBG]  sum_of_cost hodnota: 4409
[DBG]  After skip/init build => iteration_stats.back(): sum_of_costs=4409, collisions=1
[DEBUG] Using default neighbor generation strategy for conflicts: 1
	InitLNS(PP): runtime = 0.00109254, iterations = 2, colliding pairs = 0, initial colliding pairs = 1, solution cost = 4414, initial solution cost = 4409, failed iterations = 0
[DBG]  init_lns->sum_of_costs after init_lns->run: 4414
[DBG]  sum_of_costs after assignment from init_lns->run: 4414
[DBG]  Recomputing sum_of_cost by dividing neighbor.sum_of_costs and neighbor.old_sum_of_costs
[STAT] sum_of_costs after recomputation: 4414
[STAT] Iteration 28
[DBG]  Random chance did not select SAT operator (r=52), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 28
[DBG]  Random chance did not select SAT operator (r=80), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 28
[DBG]  Random chance did not select SAT operator (r=40), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 28
[DBG]  Random chance did not select SAT operator (r=24), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 28
[DBG]  Random chance did not select SAT operator (r=59), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 28
[DBG]  Random chance did not select SAT operator (r=46), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 28
[DBG]  Random chance did not select SAT operator (r=83), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 28
[DBG]  Random chance did not select SAT operator (r=38), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 28
[DBG]  Random chance did not select SAT operator (r=65), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 28
[DBG]  Random chance did not select SAT operator (r=81), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 28
[DBG]  Random chance did not select SAT operator (r=80), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 28
[DBG]  Random chance did not select SAT operator (r=35), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] neighbor.sum_of_costs before recomputation: 277
[STAT] neighbor.old_sum_of_costs before recomputation: 279
[STAT] sum_of_costs before recomputation: 4414
[DBG]  Recomputing sum_of_cost by dividing neighbor.sum_of_costs and neighbor.old_sum_of_costs
[STAT] sum_of_costs after recomputation: 4412
[STAT] Iteration 29
[DBG]  Random chance did not select SAT operator (r=56), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 29
[DBG]  Random chance did not select SAT operator (r=56), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 29
[DBG]  Random chance did not select SAT operator (r=68), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 29
[DBG]  Random chance did not select SAT operator (r=48), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] neighbor.sum_of_costs before recomputation: 276
[STAT] neighbor.old_sum_of_costs before recomputation: 282
[STAT] sum_of_costs before recomputation: 4412
[DBG]  Recomputing sum_of_cost by dividing neighbor.sum_of_costs and neighbor.old_sum_of_costs
[STAT] sum_of_costs after recomputation: 4406
[STAT] Iteration 30
[DBG]  Using SAT operator (destroy+repair SAT).
[DBG]  ====================
[DBG]  SAT destroy operator called.
[DBG]  SAT heuristic: 2
[DBG]  key_agent_id: 28
[DBG]  key_agent_id global path length: 43
[DBG]  Submap content (global positions):
[DBG]  531 532 533 534 535 
[DBG]  563 564 565 566 567 
[DBG]  595 596 597 598 599 
[DBG]  627 628 629 630 631 
[DBG]  659 660 661 662 663 
[DBG]  Map content with agents and obstacles:
[DBG]  . X . . X 
[DBG]  . X . . X 
[DBG]  X A A X . 
[DBG]  . A . X . 
[DBG]  . . . X X 
[DBG]  content of the map structure that we pass to the SAT solver:
[DBG]  1  -1  1  1  -1  
[DBG]  1  -1  1  1  -1  
[DBG]  -1  1  1  -1  1  
[DBG]  1  1  1  -1  1  
[DBG]  1  1  1  -1  -1  
[DBG]  Identifying agents in a submap for rescheduling (when key_agent is there at the time 31):
[DBG]  Agent 26 found intervals in the sub-map:
[DBG]   [27..32]
[DBG]  Agent 26 (interval in submap: [27..32]) contains time 31, added to replan.
[DBG]  Agent 28 found intervals in the sub-map:
[DBG]   [0..24] [29..34]
[DBG]  Agent 28 (interval in submap: [29..34]) contains time 31, added to replan.
[DBG]  Agent 53 found intervals in the sub-map:
[DBG]   [28..37]
[DBG]  Agent 53 (interval in submap: [28..37]) contains time 31, added to replan.
[DBG]  Agent 148 found intervals in the sub-map:
[DBG]   [33..40]
[DBG]  Agent 148 is not in sub-map at time 31 (intervals: 
[DBG]  [33..40] )
[DBG]  Agent 26 | Start (global): 628 -> (local): (3, 1) at time 31 | Goal (global): 660 -> (local): (4, 1) at time 32
[DBG]  Agent 28 | Start (global): 597 -> (local): (2, 2) at time 31 | Goal (global): 660 -> (local): (4, 1) at time 34
[DBG]  Agent 53 | Start (global): 596 -> (local): (2, 1) at time 31 | Goal (global): 660 -> (local): (4, 1) at time 37
[DBG]  [REPAIR] SAT destroy operator called.
[DBG]  [REPAIR] SAT operator – launching subproblem FOR OPTIMIZATION.
[DBG]  Creating local paths (sx, sy) in the submap for T_sync = 31
[DBG]    Agent 26 (global paths from T=31 to 32) has local path: (3,1) (4,1) 
[DBG]    Agent 28 (global paths from T=31 to 34) has local path: (2,2) (3,2) (4,2) (4,1) 
[DBG]    Agent 53 (global paths from T=31 to 37) has local path: (2,1) (3,1) (3,1) (3,1) (3,1) (3,1) (4,1) 
[DBG]  Checking input data for SAT solver:
[DBG]    - Number of agents to replan: 3
[DBG]  Agent 26 has the original local path length: 2 => Start (3,1), Goal (4,1)
[DBG]  Agent 28 has the original local path length: 4 => Start (2,2), Goal (4,1)
[DBG]  Agent 53 has the original local path length: 7 => Start (2,1), Goal (4,1)
[DBG]  Start position: (3, 1), (2, 2), (2, 1), 
[DBG]  Goal position: (4, 1), (4, 1), (4, 1), 
[DBG]  SAT instance and solver created.
Currently solving
Instance name: scen
Map name: map
Encoding used: disappear_at_goal
SAT solver used: Kissat
Optimizing function: sum of costs
Number of agents: 3
Mks LB: 4
SoC LB: 9
Delta: 0
Remaining time: 300000 [ms]

Vertex conflict! Agents 0, 2, timestep 3, location 0
Found plan [agents = 3] [timesteps = 4]
Agent #0 : 10 14 0 0 
Agent #1 : 7 11 15 14 
Agent #2 : 6 10 14 0 

[STAT] Solver returned: 0
[DBG]  Agent (index) 26 | New local path (submap idx):
[DBG]  10 14 
[DBG]  Agent (index) 28 | New local path (submap idx):
[DBG]  7 11 15 14 
[DBG]  Agent (index) 53 | New local path (submap idx):
[DBG]  6 10 14 
[DBG]  Update the agent path 26 | Original local length: 2 | New local length: 2
[DBG]  agent 26 t=0 => decoded (sx,sy)=(3,1) => global_id=628
[DBG]  agent 26 t=1 => decoded (sx,sy)=(4,1) => global_id=660
[DBG]  Complete path of agent 26:
[DBG]    Original: 13 14 46 47 48 49 81 82 83 115 147 179 180 212 244 276 308 309 341 373 405 437 469 501 501 501 501 533 565 597 629 628 660 692 691 691 692 724 756 755 
[DBG]    New:     13 14 46 47 48 49 81 82 83 115 147 179 180 212 244 276 308 309 341 373 405 437 469 501 501 501 501 533 565 597 629 628 660 692 691 691 692 724 756 755 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 13 14 46 47 48 49 81 82 83 115 147 179 180 212 244 276 308 309 341 373 405 437 469 501 501 501 501 533 565 597 629 
[DBG]    Local path (in submap): 628 660 
[DBG]    Suffix (out of submap): 692 691 691 692 724 756 755 
[DBG]  Original agent path length 26 je: 40
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 0: 13, 14, 46, 47, 48, 49, 81, 82, 83, 115, 147, 179, 180, 212, 244, 276, 308, 309, 341, 373, 405, 437, 469, 501, 501, 501, 501, 533, 565, 597, 629, 628, 660, 692, 691, 691, 692, 724, 756, 755, 
[DBG]  Path for agent 26 updated, resulting length: 40
[DBG]  Update the agent path 28 | Original local length: 4 | New local length: 4
[DBG]  agent 28 t=0 => decoded (sx,sy)=(2,2) => global_id=597
[DBG]  agent 28 t=1 => decoded (sx,sy)=(3,2) => global_id=629
[DBG]  agent 28 t=2 => decoded (sx,sy)=(4,2) => global_id=661
[DBG]  agent 28 t=3 => decoded (sx,sy)=(4,1) => global_id=660
[DBG]  Complete path of agent 28:
[DBG]    Original: 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 629 629 629 597 565 566 534 502 470 469 501 533 565 597 629 661 660 692 724 725 757 757 725 726 727 
[DBG]    New:     661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 629 629 629 597 565 566 534 502 470 469 501 533 565 597 629 661 660 692 724 725 757 757 725 726 727 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 629 629 629 597 565 566 534 502 470 469 501 533 565 
[DBG]    Local path (in submap): 597 629 661 660 
[DBG]    Suffix (out of submap): 692 724 725 757 757 725 726 727 
[DBG]  Original agent path length 28 je: 43
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 1: 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 629, 629, 629, 597, 565, 566, 534, 502, 470, 469, 501, 533, 565, 597, 629, 661, 660, 692, 724, 725, 757, 757, 725, 726, 727, 
[DBG]  Path for agent 28 updated, resulting length: 43
[DBG]  Update the agent path 53 | Original local length: 7 | New local length: 3
[DBG]  agent 53 t=0 => decoded (sx,sy)=(2,1) => global_id=596
[DBG]  agent 53 t=1 => decoded (sx,sy)=(3,1) => global_id=628
[DBG]  agent 53 t=2 => decoded (sx,sy)=(4,1) => global_id=660
[DBG]  Complete path of agent 53:
[DBG]    Original: 84 116 148 149 150 151 183 215 247 279 311 343 375 407 406 406 406 406 438 470 470 470 470 469 469 469 469 501 533 565 597 596 628 628 628 628 628 660 692 724 756 788 820 821 
[DBG]    New:     84 116 148 149 150 151 183 215 247 279 311 343 375 407 406 406 406 406 438 470 470 470 470 469 469 469 469 501 533 565 597 596 628 660 692 724 756 788 820 821 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 84 116 148 149 150 151 183 215 247 279 311 343 375 407 406 406 406 406 438 470 470 470 470 469 469 469 469 501 533 565 597 
[DBG]    Local path (in submap): 596 628 660 692 724 756 788 
[DBG]    Suffix (out of submap): 820 821 
[DBG]  Original agent path length 53 je: 44
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 2: 84, 116, 148, 149, 150, 151, 183, 215, 247, 279, 311, 343, 375, 407, 406, 406, 406, 406, 438, 470, 470, 470, 470, 469, 469, 469, 469, 501, 533, 565, 597, 596, 628, 660, 692, 724, 756, 788, 820, 821, 
[DBG]  Path for agent 53 updated, resulting length: 40
[DBG]  Paths successfully updated.
[DBG]  (LNS.cpp) New path for agent 26: 
[DBG]  13, 14, 46, 47, 48, 49, 81, 82, 83, 115, 147, 179, 180, 212, 244, 276, 308, 309, 341, 373, 405, 437, 469, 501, 501, 501, 501, 533, 565, 597, 629, 628, 660, 692, 691, 691, 692, 724, 756, 755, 
[DBG]  (LNS.cpp) New path for agent 28: 
[DBG]  661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 629, 629, 629, 597, 565, 566, 534, 502, 470, 469, 501, 533, 565, 597, 629, 661, 660, 692, 724, 725, 757, 757, 725, 726, 727, 
[DBG]  (LNS.cpp) New path for agent 53: 
[DBG]  84, 116, 148, 149, 150, 151, 183, 215, 247, 279, 311, 343, 375, 407, 406, 406, 406, 406, 438, 470, 470, 470, 470, 469, 469, 469, 469, 501, 533, 565, 597, 596, 628, 660, 692, 724, 756, 788, 820, 821, 
[DBG]  Delta value: 0.0322581
[DBG]  Rewarding metric index = 0
[DBG]  component_weights = {0.293041, 0.365177, 0.141524, 0.200258}
[DBG]  opSuccess value: 1
[STAT] neighbor.sum_of_costs before recomputation: 120
[STAT] neighbor.old_sum_of_costs before recomputation: 124
[STAT] sum_of_costs before recomputation: 4406
[DBG]  Validate solution immediately after SAT success.
[DBG]  No problems after SAT replan.
[DBG]  Recomputing sum_of_cost by dividing neighbor.sum_of_costs and neighbor.old_sum_of_costs
[STAT] sum_of_costs after recomputation: 4402
[STAT] Iteration 31
[DBG]  Random chance did not select SAT operator (r=65), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 31
[DBG]  Random chance did not select SAT operator (r=32), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 31
[DBG]  Random chance did not select SAT operator (r=96), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 31
[DBG]  Random chance did not select SAT operator (r=49), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 31
[DBG]  Random chance did not select SAT operator (r=95), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 31
[DBG]  Random chance did not select SAT operator (r=71), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 31
[DBG]  Random chance did not select SAT operator (r=59), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 31
[DBG]  Random chance did not select SAT operator (r=79), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 31
[DBG]  Random chance did not select SAT operator (r=42), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 31
[DBG]  Random chance did not select SAT operator (r=84), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 31
[DBG]  Random chance did not select SAT operator (r=66), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 31
[DBG]  Random chance did not select SAT operator (r=21), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 31
[DBG]  Random chance did not select SAT operator (r=49), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 31
[DBG]  Random chance did not select SAT operator (r=98), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 31
[DBG]  Random chance did not select SAT operator (r=86), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 31
[DBG]  Random chance did not select SAT operator (r=28), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 31
[DBG]  Random chance did not select SAT operator (r=34), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 31
[DBG]  Random chance did not select SAT operator (r=29), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 31
[DBG]  Random chance did not select SAT operator (r=19), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 31
[DBG]  Using SAT operator (destroy+repair SAT).
[DBG]  ====================
[DBG]  SAT destroy operator called.
[DBG]  SAT heuristic: 2
[DBG]  key_agent_id: 28
[DBG]  key_agent_id global path length: 43
[DBG]  Submap content (global positions):
[DBG]  691 692 693 694 695 
[DBG]  723 724 725 726 727 
[DBG]  755 756 757 758 759 
[DBG]  787 788 789 790 791 
[DBG]  819 820 821 822 823 
[DBG]  Map content with agents and obstacles:
[DBG]  . A X X X 
[DBG]  X . A . . 
[DBG]  A . A X . 
[DBG]  . . X . X 
[DBG]  . . A . . 
[DBG]  content of the map structure that we pass to the SAT solver:
[DBG]  1  1  -1  -1  -1  
[DBG]  -1  1  1  1  1  
[DBG]  1  1  1  -1  1  
[DBG]  1  1  -1  1  -1  
[DBG]  1  1  1  1  1  
[DBG]  Identifying agents in a submap for rescheduling (when key_agent is there at the time 39):
[DBG]  Agent 26 found intervals in the sub-map:
[DBG]   [33..39]
[DBG]  Agent 26 (interval in submap: [33..39]) contains time 39, added to replan.
[DBG]  Agent 28 found intervals in the sub-map:
[DBG]   [35..42]
[DBG]  Agent 28 (interval in submap: [35..42]) contains time 39, added to replan.
[DBG]  Agent 42 found intervals in the sub-map:
[DBG]   [36..42]
[DBG]  Agent 42 (interval in submap: [36..42]) contains time 39, added to replan.
[DBG]  Agent 53 found intervals in the sub-map:
[DBG]   [34..39]
[DBG]  Agent 53 (interval in submap: [34..39]) contains time 39, added to replan.
[DBG]  Agent 69 found intervals in the sub-map:
[DBG]   [39..43]
[DBG]  Agent 69 (interval in submap: [39..43]) contains time 39, added to replan.
[DBG]  Agent 26 | Start (global): 755 -> (local): (2, 0) at time 39 | Goal (global): 755 -> (local): (2, 0) at time 39
[DBG]  Agent 28 | Start (global): 757 -> (local): (2, 2) at time 39 | Goal (global): 727 -> (local): (1, 4) at time 42
[DBG]  Agent 42 | Start (global): 725 -> (local): (1, 2) at time 39 | Goal (global): 759 -> (local): (2, 4) at time 42
[DBG]  Agent 53 | Start (global): 821 -> (local): (4, 2) at time 39 | Goal (global): 821 -> (local): (4, 2) at time 39
[DBG]  Agent 69 | Start (global): 692 -> (local): (0, 1) at time 39 | Goal (global): 820 -> (local): (4, 1) at time 43
[DBG]  [REPAIR] SAT destroy operator called.
[DBG]  [REPAIR] SAT operator – launching subproblem FOR OPTIMIZATION.
[DBG]  Creating local paths (sx, sy) in the submap for T_sync = 39
[DBG]    Agent 26 (global paths from T=39 to 39) has local path: (2,0) 
[DBG]    Agent 28 (global paths from T=39 to 42) has local path: (2,2) (1,2) (1,3) (1,4) 
[DBG]    Agent 42 (global paths from T=39 to 42) has local path: (1,2) (1,3) (1,4) (2,4) 
[DBG]    Agent 53 (global paths from T=39 to 39) has local path: (4,2) 
[DBG]    Agent 69 (global paths from T=39 to 43) has local path: (0,1) (1,1) (2,1) (3,1) (4,1) 
[DBG]  Checking input data for SAT solver:
[DBG]    - Number of agents to replan: 5
[DBG]  Agent 26 has the original local path length: 1 => Start (2,0), Goal (2,0)
[DBG]  Agent 28 has the original local path length: 4 => Start (2,2), Goal (1,4)
[DBG]  Agent 42 has the original local path length: 4 => Start (1,2), Goal (2,4)
[DBG]  Agent 53 has the original local path length: 1 => Start (4,2), Goal (4,2)
[DBG]  Agent 69 has the original local path length: 5 => Start (0,1), Goal (4,1)
[DBG]  Start position: (2, 0), (2, 2), (1, 2), (4, 2), (0, 1), 
[DBG]  Goal position: (2, 0), (1, 4), (2, 4), (4, 2), (4, 1), 
[DBG]  SAT instance and solver created.
Currently solving
Instance name: scen
Map name: map
Encoding used: disappear_at_goal
SAT solver used: Kissat
Optimizing function: sum of costs
Number of agents: 5
Mks LB: 5
SoC LB: 15
Delta: 0
Remaining time: 300000 [ms]

Vertex conflict! Agents 0, 1, timestep 4, location 0
Vertex conflict! Agents 0, 2, timestep 4, location 0
Vertex conflict! Agents 0, 3, timestep 1, location 0
Swapping conflict! Agents 0, 3, timestep 1, edge (0,0)
Vertex conflict! Agents 0, 3, timestep 2, location 0
Swapping conflict! Agents 0, 3, timestep 2, edge (0,0)
Vertex conflict! Agents 0, 3, timestep 3, location 0
Swapping conflict! Agents 0, 3, timestep 3, edge (0,0)
Vertex conflict! Agents 0, 3, timestep 4, location 0
Vertex conflict! Agents 1, 2, timestep 4, location 0
Vertex conflict! Agents 1, 3, timestep 4, location 0
Vertex conflict! Agents 2, 3, timestep 4, location 0
Found plan [agents = 5] [timesteps = 5]
Agent #0 : 6 0 0 0 0 
Agent #1 : 8 3 4 5 0 
Agent #2 : 3 4 5 9 0 
Agent #3 : 15 0 0 0 0 
Agent #4 : 1 2 7 11 14 

[STAT] Solver returned: 0
[DBG]  Agent (index) 26 | New local path (submap idx):
[DBG]  6 
[DBG]  Agent (index) 28 | New local path (submap idx):
[DBG]  8 3 4 5 
[DBG]  Agent (index) 42 | New local path (submap idx):
[DBG]  3 4 5 9 
[DBG]  Agent (index) 53 | New local path (submap idx):
[DBG]  15 
[DBG]  Agent (index) 69 | New local path (submap idx):
[DBG]  1 2 7 11 14 
[DBG]  Update the agent path 26 | Original local length: 1 | New local length: 1
[DBG]  agent 26 t=0 => decoded (sx,sy)=(2,0) => global_id=755
[DBG]  Complete path of agent 26:
[DBG]    Original: 13 14 46 47 48 49 81 82 83 115 147 179 180 212 244 276 308 309 341 373 405 437 469 501 501 501 501 533 565 597 629 628 660 692 691 691 692 724 756 755 
[DBG]    New:     13 14 46 47 48 49 81 82 83 115 147 179 180 212 244 276 308 309 341 373 405 437 469 501 501 501 501 533 565 597 629 628 660 692 691 691 692 724 756 755 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 13 14 46 47 48 49 81 82 83 115 147 179 180 212 244 276 308 309 341 373 405 437 469 501 501 501 501 533 565 597 629 628 660 692 691 691 692 724 756 
[DBG]    Local path (in submap): 755 
[DBG]    Suffix (out of submap): 
[DBG]  Original agent path length 26 je: 40
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 0: 13, 14, 46, 47, 48, 49, 81, 82, 83, 115, 147, 179, 180, 212, 244, 276, 308, 309, 341, 373, 405, 437, 469, 501, 501, 501, 501, 533, 565, 597, 629, 628, 660, 692, 691, 691, 692, 724, 756, 755, 
[DBG]  Path for agent 26 updated, resulting length: 40
[DBG]  Update the agent path 28 | Original local length: 4 | New local length: 4
[DBG]  agent 28 t=0 => decoded (sx,sy)=(2,2) => global_id=757
[DBG]  agent 28 t=1 => decoded (sx,sy)=(1,2) => global_id=725
[DBG]  agent 28 t=2 => decoded (sx,sy)=(1,3) => global_id=726
[DBG]  agent 28 t=3 => decoded (sx,sy)=(1,4) => global_id=727
[DBG]  Complete path of agent 28:
[DBG]    Original: 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 629 629 629 597 565 566 534 502 470 469 501 533 565 597 629 661 660 692 724 725 757 757 725 726 727 
[DBG]    New:     661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 629 629 629 597 565 566 534 502 470 469 501 533 565 597 629 661 660 692 724 725 757 757 725 726 727 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 629 629 629 597 565 566 534 502 470 469 501 533 565 597 629 661 660 692 724 725 757 
[DBG]    Local path (in submap): 757 725 726 727 
[DBG]    Suffix (out of submap): 
[DBG]  Original agent path length 28 je: 43
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 1: 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 629, 629, 629, 597, 565, 566, 534, 502, 470, 469, 501, 533, 565, 597, 629, 661, 660, 692, 724, 725, 757, 757, 725, 726, 727, 
[DBG]  Path for agent 28 updated, resulting length: 43
[DBG]  Update the agent path 42 | Original local length: 4 | New local length: 4
[DBG]  agent 42 t=0 => decoded (sx,sy)=(1,2) => global_id=725
[DBG]  agent 42 t=1 => decoded (sx,sy)=(1,3) => global_id=726
[DBG]  agent 42 t=2 => decoded (sx,sy)=(1,4) => global_id=727
[DBG]  agent 42 t=3 => decoded (sx,sy)=(2,4) => global_id=759
[DBG]  Complete path of agent 42:
[DBG]    Original: 224 256 257 289 321 353 354 354 355 387 388 389 421 422 422 423 424 425 426 427 428 429 430 431 432 464 496 528 528 529 561 593 625 657 658 659 691 692 724 725 726 727 759 
[DBG]    New:     224 256 257 289 321 353 354 354 355 387 388 389 421 422 422 423 424 425 426 427 428 429 430 431 432 464 496 528 528 529 561 593 625 657 658 659 691 692 724 725 726 727 759 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 224 256 257 289 321 353 354 354 355 387 388 389 421 422 422 423 424 425 426 427 428 429 430 431 432 464 496 528 528 529 561 593 625 657 658 659 691 692 724 
[DBG]    Local path (in submap): 725 726 727 759 
[DBG]    Suffix (out of submap): 
[DBG]  Original agent path length 42 je: 43
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 2: 224, 256, 257, 289, 321, 353, 354, 354, 355, 387, 388, 389, 421, 422, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 464, 496, 528, 528, 529, 561, 593, 625, 657, 658, 659, 691, 692, 724, 725, 726, 727, 759, 
[DBG]  Path for agent 42 updated, resulting length: 43
[DBG]  Update the agent path 53 | Original local length: 1 | New local length: 1
[DBG]  agent 53 t=0 => decoded (sx,sy)=(4,2) => global_id=821
[DBG]  Complete path of agent 53:
[DBG]    Original: 84 116 148 149 150 151 183 215 247 279 311 343 375 407 406 406 406 406 438 470 470 470 470 469 469 469 469 501 533 565 597 596 628 660 692 724 756 788 820 821 
[DBG]    New:     84 116 148 149 150 151 183 215 247 279 311 343 375 407 406 406 406 406 438 470 470 470 470 469 469 469 469 501 533 565 597 596 628 660 692 724 756 788 820 821 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 84 116 148 149 150 151 183 215 247 279 311 343 375 407 406 406 406 406 438 470 470 470 470 469 469 469 469 501 533 565 597 596 628 660 692 724 756 788 820 
[DBG]    Local path (in submap): 821 
[DBG]    Suffix (out of submap): 
[DBG]  Original agent path length 53 je: 40
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 3: 84, 116, 148, 149, 150, 151, 183, 215, 247, 279, 311, 343, 375, 407, 406, 406, 406, 406, 438, 470, 470, 470, 470, 469, 469, 469, 469, 501, 533, 565, 597, 596, 628, 660, 692, 724, 756, 788, 820, 821, 
[DBG]  Path for agent 53 updated, resulting length: 40
[DBG]  Update the agent path 69 | Original local length: 5 | New local length: 5
[DBG]  agent 69 t=0 => decoded (sx,sy)=(0,1) => global_id=692
[DBG]  agent 69 t=1 => decoded (sx,sy)=(1,1) => global_id=724
[DBG]  agent 69 t=2 => decoded (sx,sy)=(2,1) => global_id=756
[DBG]  agent 69 t=3 => decoded (sx,sy)=(3,1) => global_id=788
[DBG]  agent 69 t=4 => decoded (sx,sy)=(4,1) => global_id=820
[DBG]  Complete path of agent 69:
[DBG]    Original: 4 5 37 69 70 71 72 73 105 137 138 139 140 172 173 205 237 269 301 333 365 366 398 430 462 463 464 465 466 467 468 469 501 533 565 597 596 628 660 692 724 756 788 820 
[DBG]    New:     4 5 37 69 70 71 72 73 105 137 138 139 140 172 173 205 237 269 301 333 365 366 398 430 462 463 464 465 466 467 468 469 501 533 565 597 596 628 660 692 724 756 788 820 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 4 5 37 69 70 71 72 73 105 137 138 139 140 172 173 205 237 269 301 333 365 366 398 430 462 463 464 465 466 467 468 469 501 533 565 597 596 628 660 
[DBG]    Local path (in submap): 692 724 756 788 820 
[DBG]    Suffix (out of submap): 
[DBG]  Original agent path length 69 je: 44
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 4: 4, 5, 37, 69, 70, 71, 72, 73, 105, 137, 138, 139, 140, 172, 173, 205, 237, 269, 301, 333, 365, 366, 398, 430, 462, 463, 464, 465, 466, 467, 468, 469, 501, 533, 565, 597, 596, 628, 660, 692, 724, 756, 788, 820, 
[DBG]  Path for agent 69 updated, resulting length: 44
[DBG]  Paths successfully updated.
[DBG]  (LNS.cpp) New path for agent 26: 
[DBG]  13, 14, 46, 47, 48, 49, 81, 82, 83, 115, 147, 179, 180, 212, 244, 276, 308, 309, 341, 373, 405, 437, 469, 501, 501, 501, 501, 533, 565, 597, 629, 628, 660, 692, 691, 691, 692, 724, 756, 755, 
[DBG]  (LNS.cpp) New path for agent 28: 
[DBG]  661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 629, 629, 629, 597, 565, 566, 534, 502, 470, 469, 501, 533, 565, 597, 629, 661, 660, 692, 724, 725, 757, 757, 725, 726, 727, 
[DBG]  (LNS.cpp) New path for agent 42: 
[DBG]  224, 256, 257, 289, 321, 353, 354, 354, 355, 387, 388, 389, 421, 422, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 464, 496, 528, 528, 529, 561, 593, 625, 657, 658, 659, 691, 692, 724, 725, 726, 727, 759, 
[DBG]  (LNS.cpp) New path for agent 53: 
[DBG]  84, 116, 148, 149, 150, 151, 183, 215, 247, 279, 311, 343, 375, 407, 406, 406, 406, 406, 438, 470, 470, 470, 470, 469, 469, 469, 469, 501, 533, 565, 597, 596, 628, 660, 692, 724, 756, 788, 820, 821, 
[DBG]  (LNS.cpp) New path for agent 69: 
[DBG]  4, 5, 37, 69, 70, 71, 72, 73, 105, 137, 138, 139, 140, 172, 173, 205, 237, 269, 301, 333, 365, 366, 398, 430, 462, 463, 464, 465, 466, 467, 468, 469, 501, 533, 565, 597, 596, 628, 660, 692, 724, 756, 788, 820, 
[DBG]  Delta value: 0
[DBG]  Rewarding metric index = 0
[DBG]  component_weights = {0.303779, 0.35963, 0.139374, 0.197216}
[DBG]  opSuccess value: 1
[STAT] neighbor.sum_of_costs before recomputation: 205
[STAT] neighbor.old_sum_of_costs before recomputation: 205
[STAT] sum_of_costs before recomputation: 4402
[DBG]  Validate solution immediately after SAT success.
[DBG]  No problems after SAT replan.
[DBG]  Recomputing sum_of_cost by dividing neighbor.sum_of_costs and neighbor.old_sum_of_costs
[STAT] sum_of_costs after recomputation: 4402
[STAT] Iteration 32
[DBG]  Random chance did not select SAT operator (r=58), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] neighbor.sum_of_costs before recomputation: 215
[STAT] neighbor.old_sum_of_costs before recomputation: 217
[STAT] sum_of_costs before recomputation: 4402
[DBG]  Recomputing sum_of_cost by dividing neighbor.sum_of_costs and neighbor.old_sum_of_costs
[STAT] sum_of_costs after recomputation: 4400
[STAT] Iteration 33
[DBG]  Random chance did not select SAT operator (r=93), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 33
[DBG]  Random chance did not select SAT operator (r=99), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 33
[DBG]  Random chance did not select SAT operator (r=17), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 33
[DBG]  Random chance did not select SAT operator (r=31), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 33
[DBG]  Random chance did not select SAT operator (r=50), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 33
[DBG]  Random chance did not select SAT operator (r=72), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 33
[DBG]  Using SAT operator (destroy+repair SAT).
[DBG]  ====================
[DBG]  SAT destroy operator called.
[DBG]  SAT heuristic: 2
[DBG]  key_agent_id: 28
[DBG]  key_agent_id global path length: 43
[DBG]  Submap content (global positions):
[DBG]  500 501 502 503 504 
[DBG]  532 533 534 535 536 
[DBG]  564 565 566 567 568 
[DBG]  596 597 598 599 600 
[DBG]  628 629 630 631 632 
[DBG]  Map content with agents and obstacles:
[DBG]  X A . A . 
[DBG]  X . A X X 
[DBG]  X A A X X 
[DBG]  A A X . A 
[DBG]  . A X . . 
[DBG]  content of the map structure that we pass to the SAT solver:
[DBG]  -1  1  1  1  1  
[DBG]  -1  1  1  -1  -1  
[DBG]  -1  1  1  -1  -1  
[DBG]  1  1  -1  1  1  
[DBG]  1  1  -1  1  1  
[DBG]  Identifying agents in a submap for rescheduling (when key_agent is there at the time 23):
[DBG]  Agent 26 found intervals in the sub-map:
[DBG]   [23..31]
[DBG]  Agent 26 (interval in submap: [23..31]) contains time 23, added to replan.
[DBG]  Agent 28 found intervals in the sub-map:
[DBG]   [18..25] [28..32]
[DBG]  Agent 28 (interval in submap: [18..25]) contains time 23, added to replan.
[DBG]  Agent 30 found intervals in the sub-map:
[DBG]   [22..29]
[DBG]  Agent 30 (interval in submap: [22..29]) contains time 23, added to replan.
[DBG]  Agent 53 found intervals in the sub-map:
[DBG]   [27..32]
[DBG]  Agent 53 is not in sub-map at time 23 (intervals: 
[DBG]  [27..32] )
[DBG]  Agent 56 found intervals in the sub-map:
[DBG]   [21..29]
[DBG]  Agent 56 (interval in submap: [21..29]) contains time 23, added to replan.
[DBG]  Agent 61 found intervals in the sub-map:
[DBG]   [16..24]
[DBG]  Agent 61 (interval in submap: [16..24]) contains time 23, added to replan.
[DBG]  Agent 74 found intervals in the sub-map:
[DBG]   [18..24] [30..30]
[DBG]  Agent 74 (interval in submap: [18..24]) contains time 23, added to replan.
[DBG]  Agent 79 found intervals in the sub-map:
[DBG]   [20..26]
[DBG]  Agent 79 (interval in submap: [20..26]) contains time 23, added to replan.
[DBG]  Agent 91 found intervals in the sub-map:
[DBG]   [22..29]
[DBG]  Agent 91 (interval in submap: [22..29]) contains time 23, added to replan.
[DBG]  Agent 94 found intervals in the sub-map:
[DBG]  
[DBG]  Agent 94 is not in sub-map at time 23 (intervals: 
[DBG]  )
[DBG]  Agent 144 found intervals in the sub-map:
[DBG]   [23..25]
[DBG]  Agent 144 (interval in submap: [23..25]) contains time 23, added to replan.
[DBG]  Agent 26 | Start (global): 501 -> (local): (0, 1) at time 23 | Goal (global): 628 -> (local): (4, 0) at time 31
[DBG]  Agent 28 | Start (global): 566 -> (local): (2, 2) at time 23 | Goal (global): 502 -> (local): (0, 2) at time 25
[DBG]  Agent 30 | Start (global): 629 -> (local): (4, 1) at time 23 | Goal (global): 503 -> (local): (0, 3) at time 29
[DBG]  Agent 56 | Start (global): 596 -> (local): (3, 0) at time 23 | Goal (global): 502 -> (local): (0, 2) at time 29
[DBG]  Agent 61 | Start (global): 503 -> (local): (0, 3) at time 23 | Goal (global): 504 -> (local): (0, 4) at time 24
[DBG]  Agent 74 | Start (global): 534 -> (local): (1, 2) at time 23 | Goal (global): 502 -> (local): (0, 2) at time 24
[DBG]  Agent 79 | Start (global): 565 -> (local): (2, 1) at time 23 | Goal (global): 502 -> (local): (0, 2) at time 26
[DBG]  Agent 91 | Start (global): 597 -> (local): (3, 1) at time 23 | Goal (global): 504 -> (local): (0, 4) at time 29
[DBG]  Agent 144 | Start (global): 600 -> (local): (3, 4) at time 23 | Goal (global): 631 -> (local): (4, 3) at time 25
[DBG]  [REPAIR] SAT destroy operator called.
[DBG]  [REPAIR] SAT operator – launching subproblem FOR OPTIMIZATION.
[DBG]  Creating local paths (sx, sy) in the submap for T_sync = 23
[DBG]    Agent 26 (global paths from T=23 to 31) has local path: (0,1) (0,1) (0,1) (0,1) (1,1) (2,1) (3,1) (4,1) (4,0) 
[DBG]    Agent 28 (global paths from T=23 to 25) has local path: (2,2) (1,2) (0,2) 
[DBG]    Agent 30 (global paths from T=23 to 29) has local path: (4,1) (3,1) (2,1) (2,2) (1,2) (0,2) (0,3) 
[DBG]    Agent 56 (global paths from T=23 to 29) has local path: (3,0) (3,0) (3,1) (2,1) (2,2) (1,2) (0,2) 
[DBG]    Agent 61 (global paths from T=23 to 24) has local path: (0,3) (0,4) 
[DBG]    Agent 74 (global paths from T=23 to 24) has local path: (1,2) (0,2) 
[DBG]    Agent 79 (global paths from T=23 to 26) has local path: (2,1) (1,1) (1,2) (0,2) 
[DBG]    Agent 91 (global paths from T=23 to 29) has local path: (3,1) (2,1) (2,2) (1,2) (0,2) (0,3) (0,4) 
[DBG]    Agent 144 (global paths from T=23 to 25) has local path: (3,4) (3,3) (4,3) 
[DBG]  Checking input data for SAT solver:
[DBG]    - Number of agents to replan: 9
[DBG]  Agent 26 has the original local path length: 9 => Start (0,1), Goal (4,0)
[DBG]  Agent 28 has the original local path length: 3 => Start (2,2), Goal (0,2)
[DBG]  Agent 30 has the original local path length: 7 => Start (4,1), Goal (0,3)
[DBG]  Agent 56 has the original local path length: 7 => Start (3,0), Goal (0,2)
[DBG]  Agent 61 has the original local path length: 2 => Start (0,3), Goal (0,4)
[DBG]  Agent 74 has the original local path length: 2 => Start (1,2), Goal (0,2)
[DBG]  Agent 79 has the original local path length: 4 => Start (2,1), Goal (0,2)
[DBG]  Agent 91 has the original local path length: 7 => Start (3,1), Goal (0,4)
[DBG]  Agent 144 has the original local path length: 3 => Start (3,4), Goal (4,3)
[DBG]  Start position: (0, 1), (2, 2), (4, 1), (3, 0), (0, 3), (1, 2), (2, 1), (3, 1), (3, 4), 
[DBG]  Goal position: (4, 0), (0, 2), (0, 3), (0, 2), (0, 4), (0, 2), (0, 2), (0, 4), (4, 3), 
[DBG]  SAT instance and solver created.
Currently solving
Instance name: scen
Map name: map
Encoding used: disappear_at_goal
SAT solver used: Kissat
Optimizing function: sum of costs
Number of agents: 9
Mks LB: 7
SoC LB: 40
Delta: 0
Remaining time: 300000 [ms]

[STAT] Solver returned: -1
[DBG]  SAT solver failed.
[STAT] SAT solver failed to find a valid solution.
[DBG]  ====================
[DBG]  SAT destroy operator called.
[DBG]  SAT heuristic: 2
[DBG]  key_agent_id: 28
[DBG]  key_agent_id global path length: 43
[DBG]  Submap content (global positions):
[DBG]  595 596 597 598 599 
[DBG]  627 628 629 630 631 
[DBG]  659 660 661 662 663 
[DBG]  691 692 693 694 695 
[DBG]  723 724 725 726 727 
[DBG]  Map content with agents and obstacles:
[DBG]  X . . X . 
[DBG]  A . . X . 
[DBG]  . . A X X 
[DBG]  . . X X X 
[DBG]  X A . . . 
[DBG]  content of the map structure that we pass to the SAT solver:
[DBG]  -1  1  1  -1  1  
[DBG]  1  1  1  -1  1  
[DBG]  1  1  1  -1  -1  
[DBG]  1  1  -1  -1  -1  
[DBG]  -1  1  1  1  1  
[DBG]  Identifying agents in a submap for rescheduling (when key_agent is there at the time 15):
[DBG]  Agent 1 found intervals in the sub-map:
[DBG]  
[DBG]  Agent 1 is not in sub-map at time 15 (intervals: 
[DBG]  )
[DBG]  Agent 28 found intervals in the sub-map:
[DBG]   [0..21] [31..37] [40..42]
[DBG]  Agent 28 (interval in submap: [0..21]) contains time 15, added to replan.
[DBG]  Agent 61 found intervals in the sub-map:
[DBG]   [14..18]
[DBG]  Agent 61 (interval in submap: [14..18]) contains time 15, added to replan.
[DBG]  Agent 91 found intervals in the sub-map:
[DBG]   [15..23]
[DBG]  Agent 91 (interval in submap: [15..23]) contains time 15, added to replan.
[DBG]  Agent 28 | Start (global): 661 -> (local): (2, 2) at time 15 | Goal (global): 597 -> (local): (0, 2) at time 21
[DBG]  Agent 61 | Start (global): 627 -> (local): (1, 0) at time 15 | Goal (global): 597 -> (local): (0, 2) at time 18
[DBG]  Agent 91 | Start (global): 724 -> (local): (4, 1) at time 15 | Goal (global): 597 -> (local): (0, 2) at time 23
[DBG]  [REPAIR] SAT destroy operator called.
[DBG]  [REPAIR] SAT operator – launching subproblem FOR OPTIMIZATION.
[DBG]  Creating local paths (sx, sy) in the submap for T_sync = 15
[DBG]    Agent 28 (global paths from T=15 to 21) has local path: (2,2) (2,2) (2,2) (1,2) (1,2) (1,2) (0,2) 
[DBG]    Agent 61 (global paths from T=15 to 18) has local path: (1,0) (1,1) (1,2) (0,2) 
[DBG]    Agent 91 (global paths from T=15 to 23) has local path: (4,1) (3,1) (3,1) (3,1) (3,1) (2,1) (2,2) (1,2) (0,2) 
[DBG]  Checking input data for SAT solver:
[DBG]    - Number of agents to replan: 3
[DBG]  Agent 28 has the original local path length: 7 => Start (2,2), Goal (0,2)
[DBG]  Agent 61 has the original local path length: 4 => Start (1,0), Goal (0,2)
[DBG]  Agent 91 has the original local path length: 9 => Start (4,1), Goal (0,2)
[DBG]  Start position: (2, 2), (1, 0), (4, 1), 
[DBG]  Goal position: (0, 2), (0, 2), (0, 2), 
[DBG]  SAT instance and solver created.
Currently solving
Instance name: scen
Map name: map
Encoding used: disappear_at_goal
SAT solver used: Kissat
Optimizing function: sum of costs
Number of agents: 3
Mks LB: 6
SoC LB: 13
Delta: 0
Remaining time: 300000 [ms]

Vertex conflict! Agents 0, 1, timestep 4, location 0
Swapping conflict! Agents 0, 1, timestep 4, edge (0,0)
Vertex conflict! Agents 0, 1, timestep 5, location 0
Found plan [agents = 3] [timesteps = 6]
Agent #0 : 9 5 1 0 0 0 
Agent #1 : 3 4 5 1 0 0 
Agent #2 : 12 11 8 9 5 1 

[STAT] Solver returned: 0
[DBG]  Agent (index) 28 | New local path (submap idx):
[DBG]  9 5 1 
[DBG]  Agent (index) 61 | New local path (submap idx):
[DBG]  3 4 5 1 
[DBG]  Agent (index) 91 | New local path (submap idx):
[DBG]  12 11 8 9 5 1 
[DBG]  Update the agent path 28 | Original local length: 7 | New local length: 3
[DBG]  agent 28 t=0 => decoded (sx,sy)=(2,2) => global_id=661
[DBG]  agent 28 t=1 => decoded (sx,sy)=(1,2) => global_id=629
[DBG]  agent 28 t=2 => decoded (sx,sy)=(0,2) => global_id=597
[DBG]  Complete path of agent 28:
[DBG]    Original: 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 629 629 629 597 565 566 534 502 470 469 501 533 565 597 629 661 660 692 724 725 757 757 725 726 727 
[DBG]    New:     661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 629 597 565 566 534 502 470 469 501 533 565 597 629 661 660 692 724 725 757 757 725 726 727 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 
[DBG]    Local path (in submap): 661 629 597 565 566 534 502 
[DBG]    Suffix (out of submap): 470 469 501 533 565 597 629 661 660 692 724 725 757 757 725 726 727 
[DBG]  Original agent path length 28 je: 43
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 0: 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 629, 597, 565, 566, 534, 502, 470, 469, 501, 533, 565, 597, 629, 661, 660, 692, 724, 725, 757, 757, 725, 726, 727, 
[DBG]  Path for agent 28 updated, resulting length: 39
[DBG]  Update the agent path 61 | Original local length: 4 | New local length: 4
[DBG]  agent 61 t=0 => decoded (sx,sy)=(1,0) => global_id=627
[DBG]  agent 61 t=1 => decoded (sx,sy)=(1,1) => global_id=628
[DBG]  agent 61 t=2 => decoded (sx,sy)=(1,2) => global_id=629
[DBG]  agent 61 t=3 => decoded (sx,sy)=(0,2) => global_id=597
[DBG]  Complete path of agent 61:
[DBG]    Original: 813 781 781 782 782 783 783 751 719 720 721 689 657 658 659 627 628 629 597 565 533 534 502 503 504 505 473 473 473 473 473 472 473 505 505 473 472 440 408 376 377 345 313 
[DBG]    New:     813 781 781 782 782 783 783 751 719 720 721 689 657 658 659 627 628 629 597 565 533 534 502 503 504 505 473 473 473 473 473 472 473 505 505 473 472 440 408 376 377 345 313 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 813 781 781 782 782 783 783 751 719 720 721 689 657 658 659 
[DBG]    Local path (in submap): 627 628 629 597 
[DBG]    Suffix (out of submap): 565 533 534 502 503 504 505 473 473 473 473 473 472 473 505 505 473 472 440 408 376 377 345 313 
[DBG]  Original agent path length 61 je: 43
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 1: 813, 781, 781, 782, 782, 783, 783, 751, 719, 720, 721, 689, 657, 658, 659, 627, 628, 629, 597, 565, 533, 534, 502, 503, 504, 505, 473, 473, 473, 473, 473, 472, 473, 505, 505, 473, 472, 440, 408, 376, 377, 345, 313, 
[DBG]  Path for agent 61 updated, resulting length: 43
[DBG]  Update the agent path 91 | Original local length: 9 | New local length: 6
[DBG]  agent 91 t=0 => decoded (sx,sy)=(4,1) => global_id=724
[DBG]  agent 91 t=1 => decoded (sx,sy)=(3,1) => global_id=692
[DBG]  agent 91 t=2 => decoded (sx,sy)=(2,1) => global_id=660
[DBG]  agent 91 t=3 => decoded (sx,sy)=(2,2) => global_id=661
[DBG]  agent 91 t=4 => decoded (sx,sy)=(1,2) => global_id=629
[DBG]  agent 91 t=5 => decoded (sx,sy)=(0,2) => global_id=597
[DBG]  Complete path of agent 91:
[DBG]    Original: 787 755 756 757 757 757 757 757 757 757 757 757 757 757 756 724 692 692 692 692 660 661 629 597 565 566 534 502 503 504 505 473 474 475 443 444 412 380 381 
[DBG]    New:     787 755 756 757 757 757 757 757 757 757 757 757 757 757 756 724 692 660 661 629 597 565 566 534 502 503 504 505 473 474 475 443 444 412 380 381 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 787 755 756 757 757 757 757 757 757 757 757 757 757 757 756 
[DBG]    Local path (in submap): 724 692 660 661 629 597 565 566 534 
[DBG]    Suffix (out of submap): 502 503 504 505 473 474 475 443 444 412 380 381 
[DBG]  Original agent path length 91 je: 39
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 2: 787, 755, 756, 757, 757, 757, 757, 757, 757, 757, 757, 757, 757, 757, 756, 724, 692, 660, 661, 629, 597, 565, 566, 534, 502, 503, 504, 505, 473, 474, 475, 443, 444, 412, 380, 381, 
[DBG]  Path for agent 91 updated, resulting length: 36
[DBG]  Paths successfully updated.
[DBG]  (LNS.cpp) New path for agent 28: 
[DBG]  661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 629, 597, 565, 566, 534, 502, 470, 469, 501, 533, 565, 597, 629, 661, 660, 692, 724, 725, 757, 757, 725, 726, 727, 
[DBG]  (LNS.cpp) New path for agent 61: 
[DBG]  813, 781, 781, 782, 782, 783, 783, 751, 719, 720, 721, 689, 657, 658, 659, 627, 628, 629, 597, 565, 533, 534, 502, 503, 504, 505, 473, 473, 473, 473, 473, 472, 473, 505, 505, 473, 472, 440, 408, 376, 377, 345, 313, 
[DBG]  (LNS.cpp) New path for agent 91: 
[DBG]  787, 755, 756, 757, 757, 757, 757, 757, 757, 757, 757, 757, 757, 757, 756, 724, 692, 660, 661, 629, 597, 565, 566, 534, 502, 503, 504, 505, 473, 474, 475, 443, 444, 412, 380, 381, 
[DBG]  Delta value: 0.057377
[DBG]  Rewarding metric index = 3
[DBG]  component_weights = {0.297155, 0.351788, 0.136335, 0.214721}
[DBG]  opSuccess value: 1
[STAT] neighbor.sum_of_costs before recomputation: 115
[STAT] neighbor.old_sum_of_costs before recomputation: 122
[STAT] sum_of_costs before recomputation: 4400
[DBG]  Validate solution immediately after SAT success.
[WARNING] Problem after SAT: Vertex conflict between agents 28 and 26 at location 501 at timestep 24
[DBG]  [DEBUG] Attempting immediate repair via init_lns because problem occurred after SAT (should be applied only for conflicts...).
[DBG]  [DEBUG] Passing 150 agents to init_lns (skip=true).
[DBG]  [DEBUG] path_table contents for selected agents (neighbor.agents):
[DBG]    Agent 28 => controlling path length=39
[DBG]    Agent 61 => controlling path length=43
[DBG]    Agent 91 => controlling path length=36
[DBG]  hodnota skip_initial_solution=1
[DBG]  We skip initialSolution => call buildCollisionData()
[DBG]  buildCollisionData() called – skip_initial_solution case.
[DBG]  Agents.size()=150, collision_graph.size()=150
[DBG]  agent 26 => updateCollidingPairs => foundCollision
[DBG]  agent 28 => updateCollidingPairs => foundCollision
[DBG]  agent 42 => updateCollidingPairs => foundCollision
[DBG]  agent 53 => updateCollidingPairs => foundCollision
[DBG]  agent 56 => updateCollidingPairs => foundCollision
[DBG]  agent 61 => updateCollidingPairs => foundCollision
[DBG]  agent 67 => updateCollidingPairs => foundCollision
[DBG]  agent 74 => updateCollidingPairs => foundCollision
[DBG]  agent 91 => updateCollidingPairs => foundCollision
[DBG]  Conflicting agent pairs:
[DBG]  agent 26 is in conflict with agent 28
[DBG]  agent 28 is in conflict with agent 42
[DBG]  agent 28 is in conflict with agent 53
[DBG]  agent 28 is in conflict with agent 56
[DBG]  agent 61 is in conflict with agent 91
[DBG]  agent 67 is in conflict with agent 91
[DBG]  agent 74 is in conflict with agent 91
[DBG]  buildCollisionData() => sum_of_costs=4393, num_of_colliding_pairs=7
[DBG]  buildCollisionData done => sum_of_costs=4393, num_of_colliding_pairs=7
[DBG]  sum_of_cost hodnota: 4393
[DBG]  After skip/init build => iteration_stats.back(): sum_of_costs=4393, collisions=7
[DEBUG] Using default neighbor generation strategy for conflicts: 2
[DEBUG] Using default neighbor generation strategy for conflicts: 1
[DEBUG] Using default neighbor generation strategy for conflicts: 1
[DEBUG] Using default neighbor generation strategy for conflicts: 2
[DEBUG] Using default neighbor generation strategy for conflicts: 1
[DEBUG] Using default neighbor generation strategy for conflicts: 0
	InitLNS(PP): runtime = 0.00962317, iterations = 7, colliding pairs = 0, initial colliding pairs = 7, solution cost = 4397, initial solution cost = 4393, failed iterations = 0
[DBG]  init_lns->sum_of_costs after init_lns->run: 4397
[DBG]  sum_of_costs after assignment from init_lns->run: 4397
[DBG]  Recomputing sum_of_cost by dividing neighbor.sum_of_costs and neighbor.old_sum_of_costs
[STAT] sum_of_costs after recomputation: 4397
[STAT] Iteration 34
[DBG]  Random chance did not select SAT operator (r=84), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 34
[DBG]  Using SAT operator (destroy+repair SAT).
[DBG]  ====================
[DBG]  SAT destroy operator called.
[DBG]  SAT heuristic: 2
[DBG]  key_agent_id: 28
[DBG]  key_agent_id global path length: 44
[DBG]  Submap content (global positions):
[DBG]  595 596 597 598 599 
[DBG]  627 628 629 630 631 
[DBG]  659 660 661 662 663 
[DBG]  691 692 693 694 695 
[DBG]  723 724 725 726 727 
[DBG]  Map content with agents and obstacles:
[DBG]  X . . X . 
[DBG]  A . A X . 
[DBG]  . . A X X 
[DBG]  . A X X X 
[DBG]  X . . . . 
[DBG]  content of the map structure that we pass to the SAT solver:
[DBG]  -1  1  1  -1  1  
[DBG]  1  1  1  -1  1  
[DBG]  1  1  1  -1  -1  
[DBG]  1  1  -1  -1  -1  
[DBG]  -1  1  1  1  1  
[DBG]  Identifying agents in a submap for rescheduling (when key_agent is there at the time 26):
[DBG]  Agent 11 found intervals in the sub-map:
[DBG]   [25..28]
[DBG]  Agent 11 (interval in submap: [25..28]) contains time 26, added to replan.
[DBG]  Agent 28 found intervals in the sub-map:
[DBG]   [0..43]
[DBG]  Agent 28 (interval in submap: [0..43]) contains time 26, added to replan.
[DBG]  Agent 53 found intervals in the sub-map:
[DBG]   [28..33]
[DBG]  Agent 53 is not in sub-map at time 26 (intervals: 
[DBG]  [28..33] )
[DBG]  Agent 56 found intervals in the sub-map:
[DBG]   [19..29]
[DBG]  Agent 56 (interval in submap: [19..29]) contains time 26, added to replan.
[DBG]  Agent 62 found intervals in the sub-map:
[DBG]   [25..30]
[DBG]  Agent 62 (interval in submap: [25..30]) contains time 26, added to replan.
[DBG]  Agent 148 found intervals in the sub-map:
[DBG]   [33..40]
[DBG]  Agent 148 is not in sub-map at time 26 (intervals: 
[DBG]  [33..40] )
[DBG]  Agent 11 | Start (global): 692 -> (local): (3, 1) at time 26 | Goal (global): 659 -> (local): (2, 0) at time 28
[DBG]  Agent 28 | Start (global): 661 -> (local): (2, 2) at time 26 | Goal (global): 727 -> (local): (4, 4) at time 43
[DBG]  Agent 56 | Start (global): 629 -> (local): (1, 2) at time 26 | Goal (global): 597 -> (local): (0, 2) at time 29
[DBG]  Agent 62 | Start (global): 627 -> (local): (1, 0) at time 26 | Goal (global): 597 -> (local): (0, 2) at time 30
[DBG]  [REPAIR] SAT destroy operator called.
[DBG]  [REPAIR] SAT operator – launching subproblem FOR OPTIMIZATION.
[DBG]  Creating local paths (sx, sy) in the submap for T_sync = 26
[DBG]    Agent 11 (global paths from T=26 to 28) has local path: (3,1) (3,0) (2,0) 
[DBG]    Agent 28 (global paths from T=26 to 43) has local path: (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,1) (1,1) (2,1) (3,1) (4,1) (4,2) (4,3) (4,4) 
[DBG]    Agent 56 (global paths from T=26 to 29) has local path: (1,2) (1,2) (1,2) (0,2) 
[DBG]    Agent 62 (global paths from T=26 to 30) has local path: (1,0) (1,1) (1,1) (1,2) (0,2) 
[DBG]  Checking input data for SAT solver:
[DBG]    - Number of agents to replan: 4
[DBG]  Agent 11 has the original local path length: 3 => Start (3,1), Goal (2,0)
[DBG]  Agent 28 has the original local path length: 18 => Start (2,2), Goal (4,4)
[DBG]  Agent 56 has the original local path length: 4 => Start (1,2), Goal (0,2)
[DBG]  Agent 62 has the original local path length: 5 => Start (1,0), Goal (0,2)
[DBG]  Start position: (3, 1), (2, 2), (1, 2), (1, 0), 
[DBG]  Goal position: (2, 0), (4, 4), (0, 2), (0, 2), 
[DBG]  SAT instance and solver created.
Currently solving
Instance name: scen
Map name: map
Encoding used: disappear_at_goal
SAT solver used: Kissat
Optimizing function: sum of costs
Number of agents: 4
Mks LB: 7
SoC LB: 16
Delta: 0
Remaining time: 300000 [ms]

Vertex conflict! Agents 0, 2, timestep 3, location 0
Swapping conflict! Agents 0, 2, timestep 3, edge (0,0)
Vertex conflict! Agents 0, 2, timestep 4, location 0
Swapping conflict! Agents 0, 2, timestep 4, edge (0,0)
Vertex conflict! Agents 0, 2, timestep 5, location 0
Swapping conflict! Agents 0, 2, timestep 5, edge (0,0)
Vertex conflict! Agents 0, 2, timestep 6, location 0
Vertex conflict! Agents 0, 3, timestep 4, location 0
Swapping conflict! Agents 0, 3, timestep 4, edge (0,0)
Vertex conflict! Agents 0, 3, timestep 5, location 0
Swapping conflict! Agents 0, 3, timestep 5, edge (0,0)
Vertex conflict! Agents 0, 3, timestep 6, location 0
Vertex conflict! Agents 2, 3, timestep 4, location 0
Swapping conflict! Agents 2, 3, timestep 4, edge (0,0)
Vertex conflict! Agents 2, 3, timestep 5, location 0
Swapping conflict! Agents 2, 3, timestep 5, edge (0,0)
Vertex conflict! Agents 2, 3, timestep 6, location 0
Found plan [agents = 4] [timesteps = 7]
Agent #0 : 11 10 7 0 0 0 0 
Agent #1 : 9 8 11 12 13 14 15 
Agent #2 : 5 1 0 0 0 0 0 
Agent #3 : 3 4 5 1 0 0 0 

[STAT] Solver returned: 0
[DBG]  Agent (index) 11 | New local path (submap idx):
[DBG]  11 10 7 
[DBG]  Agent (index) 28 | New local path (submap idx):
[DBG]  9 8 11 12 13 14 15 
[DBG]  Agent (index) 56 | New local path (submap idx):
[DBG]  5 1 
[DBG]  Agent (index) 62 | New local path (submap idx):
[DBG]  3 4 5 1 
[DBG]  Update the agent path 11 | Original local length: 3 | New local length: 3
[DBG]  agent 11 t=0 => decoded (sx,sy)=(3,1) => global_id=692
[DBG]  agent 11 t=1 => decoded (sx,sy)=(3,0) => global_id=691
[DBG]  agent 11 t=2 => decoded (sx,sy)=(2,0) => global_id=659
[DBG]  Complete path of agent 11:
[DBG]    Original: 990 990 990 990 990 989 957 956 924 892 892 892 860 859 858 857 856 855 823 823 822 821 820 788 756 724 692 691 659 658 657 689 689 689 657 
[DBG]    New:     990 990 990 990 990 989 957 956 924 892 892 892 860 859 858 857 856 855 823 823 822 821 820 788 756 724 692 691 659 658 657 689 689 689 657 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 990 990 990 990 990 989 957 956 924 892 892 892 860 859 858 857 856 855 823 823 822 821 820 788 756 724 
[DBG]    Local path (in submap): 692 691 659 
[DBG]    Suffix (out of submap): 658 657 689 689 689 657 
[DBG]  Original agent path length 11 je: 35
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 0: 990, 990, 990, 990, 990, 989, 957, 956, 924, 892, 892, 892, 860, 859, 858, 857, 856, 855, 823, 823, 822, 821, 820, 788, 756, 724, 692, 691, 659, 658, 657, 689, 689, 689, 657, 
[DBG]  Path for agent 11 updated, resulting length: 35
[DBG]  Update the agent path 28 | Original local length: 18 | New local length: 7
[DBG]  agent 28 t=0 => decoded (sx,sy)=(2,2) => global_id=661
[DBG]  agent 28 t=1 => decoded (sx,sy)=(2,1) => global_id=660
[DBG]  agent 28 t=2 => decoded (sx,sy)=(3,1) => global_id=692
[DBG]  agent 28 t=3 => decoded (sx,sy)=(4,1) => global_id=724
[DBG]  agent 28 t=4 => decoded (sx,sy)=(4,2) => global_id=725
[DBG]  agent 28 t=5 => decoded (sx,sy)=(4,3) => global_id=726
[DBG]  agent 28 t=6 => decoded (sx,sy)=(4,4) => global_id=727
[DBG]  Complete path of agent 28:
[DBG]    Original: 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 660 628 660 692 724 725 726 727 
[DBG]    New:     661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 660 692 724 725 726 727 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 
[DBG]    Local path (in submap): 661 660 692 724 725 726 727 
[DBG]    Suffix (out of submap): 
[DBG]  Original agent path length 28 je: 44
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 1: 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 660, 692, 724, 725, 726, 727, 
[DBG]  Path for agent 28 updated, resulting length: 33
[DBG]  Update the agent path 56 | Original local length: 4 | New local length: 2
[DBG]  agent 56 t=0 => decoded (sx,sy)=(1,2) => global_id=629
[DBG]  agent 56 t=1 => decoded (sx,sy)=(0,2) => global_id=597
[DBG]  Complete path of agent 56:
[DBG]    Original: 805 806 774 775 776 777 778 746 747 715 683 684 685 686 687 655 656 657 658 659 627 627 627 628 629 629 629 629 629 597 565 566 534 502 470 438 439 440 440 408 376 377 378 379 380 412 413 414 415 383 351 319 287 255 
[DBG]    New:     805 806 774 775 776 777 778 746 747 715 683 684 685 686 687 655 656 657 658 659 627 627 627 628 629 629 629 597 565 566 534 502 470 438 439 440 440 408 376 377 378 379 380 412 413 414 415 383 351 319 287 255 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 805 806 774 775 776 777 778 746 747 715 683 684 685 686 687 655 656 657 658 659 627 627 627 628 629 629 
[DBG]    Local path (in submap): 629 597 565 566 
[DBG]    Suffix (out of submap): 534 502 470 438 439 440 440 408 376 377 378 379 380 412 413 414 415 383 351 319 287 255 
[DBG]  Original agent path length 56 je: 54
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 2: 805, 806, 774, 775, 776, 777, 778, 746, 747, 715, 683, 684, 685, 686, 687, 655, 656, 657, 658, 659, 627, 627, 627, 628, 629, 629, 629, 597, 565, 566, 534, 502, 470, 438, 439, 440, 440, 408, 376, 377, 378, 379, 380, 412, 413, 414, 415, 383, 351, 319, 287, 255, 
[DBG]  Path for agent 56 updated, resulting length: 52
[DBG]  Update the agent path 62 | Original local length: 5 | New local length: 4
[DBG]  agent 62 t=0 => decoded (sx,sy)=(1,0) => global_id=627
[DBG]  agent 62 t=1 => decoded (sx,sy)=(1,1) => global_id=628
[DBG]  agent 62 t=2 => decoded (sx,sy)=(1,2) => global_id=629
[DBG]  agent 62 t=3 => decoded (sx,sy)=(0,2) => global_id=597
[DBG]  Complete path of agent 62:
[DBG]    Original: 753 721 722 722 722 722 722 722 721 721 721 721 721 721 721 721 721 720 720 719 687 655 656 657 658 659 627 628 628 629 597 565 566 534 502 470 438 406 
[DBG]    New:     753 721 722 722 722 722 722 722 721 721 721 721 721 721 721 721 721 720 720 719 687 655 656 657 658 659 627 628 629 597 565 566 534 502 470 438 406 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 753 721 722 722 722 722 722 722 721 721 721 721 721 721 721 721 721 720 720 719 687 655 656 657 658 659 
[DBG]    Local path (in submap): 627 628 629 597 565 
[DBG]    Suffix (out of submap): 566 534 502 470 438 406 
[DBG]  Original agent path length 62 je: 38
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 3: 753, 721, 722, 722, 722, 722, 722, 722, 721, 721, 721, 721, 721, 721, 721, 721, 721, 720, 720, 719, 687, 655, 656, 657, 658, 659, 627, 628, 629, 597, 565, 566, 534, 502, 470, 438, 406, 
[DBG]  Path for agent 62 updated, resulting length: 37
[DBG]  Paths successfully updated.
[DBG]  (LNS.cpp) New path for agent 11: 
[DBG]  990, 990, 990, 990, 990, 989, 957, 956, 924, 892, 892, 892, 860, 859, 858, 857, 856, 855, 823, 823, 822, 821, 820, 788, 756, 724, 692, 691, 659, 658, 657, 689, 689, 689, 657, 
[DBG]  (LNS.cpp) New path for agent 28: 
[DBG]  661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 660, 692, 724, 725, 726, 727, 
[DBG]  (LNS.cpp) New path for agent 56: 
[DBG]  805, 806, 774, 775, 776, 777, 778, 746, 747, 715, 683, 684, 685, 686, 687, 655, 656, 657, 658, 659, 627, 627, 627, 628, 629, 629, 629, 597, 565, 566, 534, 502, 470, 438, 439, 440, 440, 408, 376, 377, 378, 379, 380, 412, 413, 414, 415, 383, 351, 319, 287, 255, 
[DBG]  (LNS.cpp) New path for agent 62: 
[DBG]  753, 721, 722, 722, 722, 722, 722, 722, 721, 721, 721, 721, 721, 721, 721, 721, 721, 720, 720, 719, 687, 655, 656, 657, 658, 659, 627, 628, 629, 597, 565, 566, 534, 502, 470, 438, 406, 
[DBG]  Delta value: 0.0838323
[DBG]  Rewarding metric index = 0
[DBG]  component_weights = {0.325396, 0.337653, 0.130857, 0.206094}
[DBG]  opSuccess value: 1
[STAT] neighbor.sum_of_costs before recomputation: 153
[STAT] neighbor.old_sum_of_costs before recomputation: 167
[STAT] sum_of_costs before recomputation: 4397
[DBG]  Validate solution immediately after SAT success.
[WARNING] Problem after SAT: Vertex conflict between agents 26 and 56 at location 597 at timestep 27
[DBG]  [DEBUG] Attempting immediate repair via init_lns because problem occurred after SAT (should be applied only for conflicts...).
[DBG]  [DEBUG] Passing 150 agents to init_lns (skip=true).
[DBG]  [DEBUG] path_table contents for selected agents (neighbor.agents):
[DBG]    Agent 11 => controlling path length=35
[DBG]    Agent 28 => controlling path length=33
[DBG]    Agent 56 => controlling path length=52
[DBG]    Agent 62 => controlling path length=37
[DBG]  hodnota skip_initial_solution=1
[DBG]  We skip initialSolution => call buildCollisionData()
[DBG]  buildCollisionData() called – skip_initial_solution case.
[DBG]  Agents.size()=150, collision_graph.size()=150
[DBG]  agent 26 => updateCollidingPairs => foundCollision
[DBG]  agent 28 => updateCollidingPairs => foundCollision
[DBG]  agent 42 => updateCollidingPairs => foundCollision
[DBG]  agent 53 => updateCollidingPairs => foundCollision
[DBG]  agent 56 => updateCollidingPairs => foundCollision
[DBG]  agent 61 => updateCollidingPairs => foundCollision
[DBG]  agent 62 => updateCollidingPairs => foundCollision
[DBG]  agent 94 => updateCollidingPairs => foundCollision
[DBG]  Conflicting agent pairs:
[DBG]  agent 26 is in conflict with agent 56
[DBG]  agent 28 is in conflict with agent 42
[DBG]  agent 53 is in conflict with agent 56
[DBG]  agent 56 is in conflict with agent 94
[DBG]  agent 61 is in conflict with agent 62
[DBG]  buildCollisionData() => sum_of_costs=4383, num_of_colliding_pairs=5
[DBG]  buildCollisionData done => sum_of_costs=4383, num_of_colliding_pairs=5
[DBG]  sum_of_cost hodnota: 4383
[DBG]  After skip/init build => iteration_stats.back(): sum_of_costs=4383, collisions=5
[DEBUG] Using default neighbor generation strategy for conflicts: 1
[DEBUG] Using default neighbor generation strategy for conflicts: 2
[DEBUG] Using default neighbor generation strategy for conflicts: 2
[DEBUG] Using default neighbor generation strategy for conflicts: 2
	InitLNS(PP): runtime = 0.00307633, iterations = 5, colliding pairs = 0, initial colliding pairs = 5, solution cost = 4380, initial solution cost = 4383, failed iterations = 0
[DBG]  init_lns->sum_of_costs after init_lns->run: 4380
[DBG]  sum_of_costs after assignment from init_lns->run: 4380
[DBG]  Recomputing sum_of_cost by dividing neighbor.sum_of_costs and neighbor.old_sum_of_costs
[STAT] sum_of_costs after recomputation: 4380
[STAT] Iteration 35
[DBG]  Random chance did not select SAT operator (r=75), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 35
[DBG]  Random chance did not select SAT operator (r=23), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 35
[DBG]  Random chance did not select SAT operator (r=26), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 35
[DBG]  Random chance did not select SAT operator (r=87), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] neighbor.sum_of_costs before recomputation: 206
[STAT] neighbor.old_sum_of_costs before recomputation: 207
[STAT] sum_of_costs before recomputation: 4380
[DBG]  Recomputing sum_of_cost by dividing neighbor.sum_of_costs and neighbor.old_sum_of_costs
[STAT] sum_of_costs after recomputation: 4379
[STAT] Iteration 36
[DBG]  Random chance did not select SAT operator (r=58), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 36
[DBG]  Random chance did not select SAT operator (r=83), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 36
[DBG]  Using SAT operator (destroy+repair SAT).
[DBG]  ====================
[DBG]  SAT destroy operator called.
[DBG]  SAT heuristic: 2
[DBG]  key_agent_id: 28
[DBG]  key_agent_id global path length: 44
[DBG]  Submap content (global positions):
[DBG]  595 596 597 598 599 
[DBG]  627 628 629 630 631 
[DBG]  659 660 661 662 663 
[DBG]  691 692 693 694 695 
[DBG]  723 724 725 726 727 
[DBG]  Map content with agents and obstacles:
[DBG]  X A A X . 
[DBG]  . A . X . 
[DBG]  . . A X X 
[DBG]  . . X X X 
[DBG]  X . . . . 
[DBG]  content of the map structure that we pass to the SAT solver:
[DBG]  -1  1  1  -1  1  
[DBG]  1  1  1  -1  1  
[DBG]  1  1  1  -1  -1  
[DBG]  1  1  -1  -1  -1  
[DBG]  -1  1  1  1  1  
[DBG]  Identifying agents in a submap for rescheduling (when key_agent is there at the time 22):
[DBG]  Agent 28 found intervals in the sub-map:
[DBG]   [0..43]
[DBG]  Agent 28 (interval in submap: [0..43]) contains time 22, added to replan.
[DBG]  Agent 30 found intervals in the sub-map:
[DBG]   [18..24]
[DBG]  Agent 30 (interval in submap: [18..24]) contains time 22, added to replan.
[DBG]  Agent 56 found intervals in the sub-map:
[DBG]   [19..23]
[DBG]  Agent 56 (interval in submap: [19..23]) contains time 22, added to replan.
[DBG]  Agent 79 found intervals in the sub-map:
[DBG]   [18..22]
[DBG]  Agent 79 (interval in submap: [18..22]) contains time 22, added to replan.
[DBG]  Agent 28 | Start (global): 661 -> (local): (2, 2) at time 22 | Goal (global): 727 -> (local): (4, 4) at time 43
[DBG]  Agent 30 | Start (global): 628 -> (local): (1, 1) at time 22 | Goal (global): 597 -> (local): (0, 2) at time 24
[DBG]  Agent 56 | Start (global): 596 -> (local): (0, 1) at time 22 | Goal (global): 597 -> (local): (0, 2) at time 23
[DBG]  Agent 79 | Start (global): 597 -> (local): (0, 2) at time 22 | Goal (global): 597 -> (local): (0, 2) at time 22
[DBG]  [REPAIR] SAT destroy operator called.
[DBG]  [REPAIR] SAT operator – launching subproblem FOR OPTIMIZATION.
[DBG]  Creating local paths (sx, sy) in the submap for T_sync = 22
[DBG]    Agent 28 (global paths from T=22 to 43) has local path: (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,1) (1,1) (1,1) (1,1) (1,1) (1,1) (2,1) (3,1) (4,1) (4,2) (4,3) (4,4) 
[DBG]    Agent 30 (global paths from T=22 to 24) has local path: (1,1) (1,2) (0,2) 
[DBG]    Agent 56 (global paths from T=22 to 23) has local path: (0,1) (0,2) 
[DBG]    Agent 79 (global paths from T=22 to 22) has local path: (0,2) 
[DBG]  Checking input data for SAT solver:
[DBG]    - Number of agents to replan: 4
[DBG]  Agent 28 has the original local path length: 22 => Start (2,2), Goal (4,4)
[DBG]  Agent 30 has the original local path length: 3 => Start (1,1), Goal (0,2)
[DBG]  Agent 56 has the original local path length: 2 => Start (0,1), Goal (0,2)
[DBG]  Agent 79 has the original local path length: 1 => Start (0,2), Goal (0,2)
[DBG]  Start position: (2, 2), (1, 1), (0, 1), (0, 2), 
[DBG]  Goal position: (4, 4), (0, 2), (0, 2), (0, 2), 
[DBG]  SAT instance and solver created.
Currently solving
Instance name: scen
Map name: map
Encoding used: disappear_at_goal
SAT solver used: Kissat
Optimizing function: sum of costs
Number of agents: 4
Mks LB: 7
SoC LB: 13
Delta: 0
Remaining time: 300000 [ms]

Vertex conflict! Agents 1, 2, timestep 3, location 0
Swapping conflict! Agents 1, 2, timestep 3, edge (0,0)
Vertex conflict! Agents 1, 2, timestep 4, location 0
Swapping conflict! Agents 1, 2, timestep 4, edge (0,0)
Vertex conflict! Agents 1, 2, timestep 5, location 0
Swapping conflict! Agents 1, 2, timestep 5, edge (0,0)
Vertex conflict! Agents 1, 2, timestep 6, location 0
Vertex conflict! Agents 1, 3, timestep 3, location 0
Swapping conflict! Agents 1, 3, timestep 3, edge (0,0)
Vertex conflict! Agents 1, 3, timestep 4, location 0
Swapping conflict! Agents 1, 3, timestep 4, edge (0,0)
Vertex conflict! Agents 1, 3, timestep 5, location 0
Swapping conflict! Agents 1, 3, timestep 5, edge (0,0)
Vertex conflict! Agents 1, 3, timestep 6, location 0
Swapping conflict! Agents 2, 3, timestep 0, edge (0,1)
Vertex conflict! Agents 2, 3, timestep 2, location 0
Swapping conflict! Agents 2, 3, timestep 2, edge (0,0)
Vertex conflict! Agents 2, 3, timestep 3, location 0
Swapping conflict! Agents 2, 3, timestep 3, edge (0,0)
Vertex conflict! Agents 2, 3, timestep 4, location 0
Swapping conflict! Agents 2, 3, timestep 4, edge (0,0)
Vertex conflict! Agents 2, 3, timestep 5, location 0
Swapping conflict! Agents 2, 3, timestep 5, edge (0,0)
Vertex conflict! Agents 2, 3, timestep 6, location 0
Found plan [agents = 4] [timesteps = 7]
Agent #0 : 9 8 11 12 13 14 15 
Agent #1 : 4 5 1 0 0 0 0 
Agent #2 : 0 1 0 0 0 0 0 
Agent #3 : 1 0 0 0 0 0 0 

[STAT] Solver returned: 0
[DBG]  Agent (index) 28 | New local path (submap idx):
[DBG]  9 8 11 12 13 14 15 
[DBG]  Agent (index) 30 | New local path (submap idx):
[DBG]  4 5 1 
[DBG]  Agent (index) 56 | New local path (submap idx):
[DBG]  0 1 
[DBG]  Agent (index) 79 | New local path (submap idx):
[DBG]  1 
[DBG]  Update the agent path 28 | Original local length: 22 | New local length: 7
[DBG]  agent 28 t=0 => decoded (sx,sy)=(2,2) => global_id=661
[DBG]  agent 28 t=1 => decoded (sx,sy)=(2,1) => global_id=660
[DBG]  agent 28 t=2 => decoded (sx,sy)=(3,1) => global_id=692
[DBG]  agent 28 t=3 => decoded (sx,sy)=(4,1) => global_id=724
[DBG]  agent 28 t=4 => decoded (sx,sy)=(4,2) => global_id=725
[DBG]  agent 28 t=5 => decoded (sx,sy)=(4,3) => global_id=726
[DBG]  agent 28 t=6 => decoded (sx,sy)=(4,4) => global_id=727
[DBG]  Complete path of agent 28:
[DBG]    Original: 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 660 628 628 628 628 628 660 692 724 725 726 727 
[DBG]    New:     661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 660 692 724 725 726 727 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 
[DBG]    Local path (in submap): 661 660 692 724 725 726 727 
[DBG]    Suffix (out of submap): 
[DBG]  Original agent path length 28 je: 44
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 0: 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 660, 692, 724, 725, 726, 727, 
[DBG]  Path for agent 28 updated, resulting length: 29
[DBG]  Update the agent path 30 | Original local length: 3 | New local length: 3
[DBG]  agent 30 t=0 => decoded (sx,sy)=(1,1) => global_id=628
[DBG]  agent 30 t=1 => decoded (sx,sy)=(1,2) => global_id=629
[DBG]  agent 30 t=2 => decoded (sx,sy)=(0,2) => global_id=597
[DBG]  Complete path of agent 30:
[DBG]    Original: 922 922 922 921 920 888 888 888 856 855 855 855 854 822 821 820 788 756 724 724 692 660 628 629 597 565 566 534 502 503 
[DBG]    New:     922 922 922 921 920 888 888 888 856 855 855 855 854 822 821 820 788 756 724 724 692 660 628 629 597 565 566 534 502 503 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 922 922 922 921 920 888 888 888 856 855 855 855 854 822 821 820 788 756 724 724 692 660 
[DBG]    Local path (in submap): 628 629 597 
[DBG]    Suffix (out of submap): 565 566 534 502 503 
[DBG]  Original agent path length 30 je: 30
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 1: 922, 922, 922, 921, 920, 888, 888, 888, 856, 855, 855, 855, 854, 822, 821, 820, 788, 756, 724, 724, 692, 660, 628, 629, 597, 565, 566, 534, 502, 503, 
[DBG]  Path for agent 30 updated, resulting length: 30
[DBG]  Update the agent path 56 | Original local length: 2 | New local length: 2
[DBG]  agent 56 t=0 => decoded (sx,sy)=(0,1) => global_id=596
[DBG]  agent 56 t=1 => decoded (sx,sy)=(0,2) => global_id=597
[DBG]  Complete path of agent 56:
[DBG]    Original: 805 806 774 775 776 744 745 713 714 715 683 684 685 653 654 655 656 657 658 659 627 628 596 597 565 566 534 502 470 438 439 440 472 473 474 475 443 444 412 413 414 415 383 351 319 287 255 
[DBG]    New:     805 806 774 775 776 744 745 713 714 715 683 684 685 653 654 655 656 657 658 659 627 628 596 597 565 566 534 502 470 438 439 440 472 473 474 475 443 444 412 413 414 415 383 351 319 287 255 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 805 806 774 775 776 744 745 713 714 715 683 684 685 653 654 655 656 657 658 659 627 628 
[DBG]    Local path (in submap): 596 597 
[DBG]    Suffix (out of submap): 565 566 534 502 470 438 439 440 472 473 474 475 443 444 412 413 414 415 383 351 319 287 255 
[DBG]  Original agent path length 56 je: 47
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 2: 805, 806, 774, 775, 776, 744, 745, 713, 714, 715, 683, 684, 685, 653, 654, 655, 656, 657, 658, 659, 627, 628, 596, 597, 565, 566, 534, 502, 470, 438, 439, 440, 472, 473, 474, 475, 443, 444, 412, 413, 414, 415, 383, 351, 319, 287, 255, 
[DBG]  Path for agent 56 updated, resulting length: 47
[DBG]  Update the agent path 79 | Original local length: 1 | New local length: 1
[DBG]  agent 79 t=0 => decoded (sx,sy)=(0,2) => global_id=597
[DBG]  Complete path of agent 79:
[DBG]    Original: 1004 1005 973 974 942 910 878 846 847 815 783 751 752 720 688 656 657 658 659 660 628 629 597 565 533 534 502 470 438 439 440 408 409 409 377 345 313 281 249 217 185 186 154 122 123 
[DBG]    New:     1004 1005 973 974 942 910 878 846 847 815 783 751 752 720 688 656 657 658 659 660 628 629 597 565 533 534 502 470 438 439 440 408 409 409 377 345 313 281 249 217 185 186 154 122 123 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 1004 1005 973 974 942 910 878 846 847 815 783 751 752 720 688 656 657 658 659 660 628 629 
[DBG]    Local path (in submap): 597 
[DBG]    Suffix (out of submap): 565 533 534 502 470 438 439 440 408 409 409 377 345 313 281 249 217 185 186 154 122 123 
[DBG]  Original agent path length 79 je: 45
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 3: 1004, 1005, 973, 974, 942, 910, 878, 846, 847, 815, 783, 751, 752, 720, 688, 656, 657, 658, 659, 660, 628, 629, 597, 565, 533, 534, 502, 470, 438, 439, 440, 408, 409, 409, 377, 345, 313, 281, 249, 217, 185, 186, 154, 122, 123, 
[DBG]  Path for agent 79 updated, resulting length: 45
[DBG]  Paths successfully updated.
[DBG]  (LNS.cpp) New path for agent 28: 
[DBG]  661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 660, 692, 724, 725, 726, 727, 
[DBG]  (LNS.cpp) New path for agent 30: 
[DBG]  922, 922, 922, 921, 920, 888, 888, 888, 856, 855, 855, 855, 854, 822, 821, 820, 788, 756, 724, 724, 692, 660, 628, 629, 597, 565, 566, 534, 502, 503, 
[DBG]  (LNS.cpp) New path for agent 56: 
[DBG]  805, 806, 774, 775, 776, 744, 745, 713, 714, 715, 683, 684, 685, 653, 654, 655, 656, 657, 658, 659, 627, 628, 596, 597, 565, 566, 534, 502, 470, 438, 439, 440, 472, 473, 474, 475, 443, 444, 412, 413, 414, 415, 383, 351, 319, 287, 255, 
[DBG]  (LNS.cpp) New path for agent 79: 
[DBG]  1004, 1005, 973, 974, 942, 910, 878, 846, 847, 815, 783, 751, 752, 720, 688, 656, 657, 658, 659, 660, 628, 629, 597, 565, 533, 534, 502, 470, 438, 439, 440, 408, 409, 409, 377, 345, 313, 281, 249, 217, 185, 186, 154, 122, 123, 
[DBG]  Delta value: 0.0925926
[DBG]  Rewarding metric index = 0
[DBG]  component_weights = {0.35681, 0.32193, 0.124764, 0.196496}
[DBG]  opSuccess value: 1
[STAT] neighbor.sum_of_costs before recomputation: 147
[STAT] neighbor.old_sum_of_costs before recomputation: 162
[STAT] sum_of_costs before recomputation: 4379
[DBG]  Validate solution immediately after SAT success.
[WARNING] Problem after SAT: Vertex conflict between agents 28 and 11 at location 724 at timestep 25
[DBG]  [DEBUG] Attempting immediate repair via init_lns because problem occurred after SAT (should be applied only for conflicts...).
[DBG]  [DEBUG] Passing 150 agents to init_lns (skip=true).
[DBG]  [DEBUG] path_table contents for selected agents (neighbor.agents):
[DBG]    Agent 28 => controlling path length=29
[DBG]    Agent 30 => controlling path length=30
[DBG]    Agent 56 => controlling path length=47
[DBG]    Agent 79 => controlling path length=45
[DBG]  hodnota skip_initial_solution=1
[DBG]  We skip initialSolution => call buildCollisionData()
[DBG]  buildCollisionData() called – skip_initial_solution case.
[DBG]  Agents.size()=150, collision_graph.size()=150
[DBG]  agent 11 => updateCollidingPairs => foundCollision
[DBG]  agent 28 => updateCollidingPairs => foundCollision
[DBG]  agent 42 => updateCollidingPairs => foundCollision
[DBG]  Conflicting agent pairs:
[DBG]  agent 11 is in conflict with agent 28
[DBG]  agent 28 is in conflict with agent 42
[DBG]  buildCollisionData() => sum_of_costs=4364, num_of_colliding_pairs=2
[DBG]  buildCollisionData done => sum_of_costs=4364, num_of_colliding_pairs=2
[DBG]  sum_of_cost hodnota: 4364
[DBG]  After skip/init build => iteration_stats.back(): sum_of_costs=4364, collisions=2
[DEBUG] Using default neighbor generation strategy for conflicts: 1
	InitLNS(PP): runtime = 0.00203537, iterations = 2, colliding pairs = 0, initial colliding pairs = 2, solution cost = 4393, initial solution cost = 4364, failed iterations = 0
[DBG]  init_lns->sum_of_costs after init_lns->run: 4393
[DBG]  sum_of_costs after assignment from init_lns->run: 4393
[DBG]  Recomputing sum_of_cost by dividing neighbor.sum_of_costs and neighbor.old_sum_of_costs
[STAT] sum_of_costs after recomputation: 4393
[STAT] Iteration 37
[DBG]  Random chance did not select SAT operator (r=89), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 37
[DBG]  Random chance did not select SAT operator (r=82), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 37
[DBG]  Random chance did not select SAT operator (r=10), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 37
[DBG]  Random chance did not select SAT operator (r=55), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 37
[DBG]  Random chance did not select SAT operator (r=54), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 37
[DBG]  Random chance did not select SAT operator (r=30), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 37
[DBG]  Using SAT operator (destroy+repair SAT).
[DBG]  ====================
[DBG]  SAT destroy operator called.
[DBG]  SAT heuristic: 2
[DBG]  key_agent_id: 28
[DBG]  key_agent_id global path length: 43
[DBG]  Submap content (global positions):
[DBG]  595 596 597 598 599 
[DBG]  627 628 629 630 631 
[DBG]  659 660 661 662 663 
[DBG]  691 692 693 694 695 
[DBG]  723 724 725 726 727 
[DBG]  Map content with agents and obstacles:
[DBG]  X . . X . 
[DBG]  . . . X . 
[DBG]  . . A X X 
[DBG]  . A X X X 
[DBG]  X . A . A 
[DBG]  content of the map structure that we pass to the SAT solver:
[DBG]  -1  1  1  -1  1  
[DBG]  1  1  1  -1  1  
[DBG]  1  1  1  -1  -1  
[DBG]  1  1  -1  -1  -1  
[DBG]  -1  1  1  1  1  
[DBG]  Identifying agents in a submap for rescheduling (when key_agent is there at the time 4):
[DBG]  Agent 7 found intervals in the sub-map:
[DBG]   [2..4]
[DBG]  Agent 7 (interval in submap: [2..4]) contains time 4, added to replan.
[DBG]  Agent 28 found intervals in the sub-map:
[DBG]   [0..15] [32..42]
[DBG]  Agent 28 (interval in submap: [0..15]) contains time 4, added to replan.
[DBG]  Agent 46 found intervals in the sub-map:
[DBG]   [5..13]
[DBG]  Agent 46 is not in sub-map at time 4 (intervals: 
[DBG]  [5..13] )
[DBG]  Agent 63 found intervals in the sub-map:
[DBG]  
[DBG]  Agent 63 is not in sub-map at time 4 (intervals: 
[DBG]  )
[DBG]  Agent 91 found intervals in the sub-map:
[DBG]   [3..6] [8..8]
[DBG]  Agent 91 (interval in submap: [3..6]) contains time 4, added to replan.
[DBG]  Agent 108 found intervals in the sub-map:
[DBG]   [0..5]
[DBG]  Agent 108 (interval in submap: [0..5]) contains time 4, added to replan.
[DBG]  Agent 7 | Start (global): 727 -> (local): (4, 4) at time 4 | Goal (global): 727 -> (local): (4, 4) at time 4
[DBG]  Agent 28 | Start (global): 661 -> (local): (2, 2) at time 4 | Goal (global): 597 -> (local): (0, 2) at time 15
[DBG]  Agent 91 | Start (global): 725 -> (local): (4, 2) at time 4 | Goal (global): 727 -> (local): (4, 4) at time 6
[DBG]  Agent 108 | Start (global): 692 -> (local): (3, 1) at time 4 | Goal (global): 724 -> (local): (4, 1) at time 5
[DBG]  [REPAIR] SAT destroy operator called.
[DBG]  [REPAIR] SAT operator – launching subproblem FOR OPTIMIZATION.
[DBG]  Creating local paths (sx, sy) in the submap for T_sync = 4
[DBG]    Agent 7 (global paths from T=4 to 4) has local path: (4,4) 
[DBG]    Agent 28 (global paths from T=4 to 15) has local path: (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (1,2) (1,2) (0,2) 
[DBG]    Agent 91 (global paths from T=4 to 6) has local path: (4,2) (4,3) (4,4) 
[DBG]    Agent 108 (global paths from T=4 to 5) has local path: (3,1) (4,1) 
[DBG]  Checking input data for SAT solver:
[DBG]    - Number of agents to replan: 4
[DBG]  Agent 7 has the original local path length: 1 => Start (4,4), Goal (4,4)
[DBG]  Agent 28 has the original local path length: 12 => Start (2,2), Goal (0,2)
[DBG]  Agent 91 has the original local path length: 3 => Start (4,2), Goal (4,4)
[DBG]  Agent 108 has the original local path length: 2 => Start (3,1), Goal (4,1)
[DBG]  Start position: (4, 4), (2, 2), (4, 2), (3, 1), 
[DBG]  Goal position: (4, 4), (0, 2), (4, 4), (4, 1), 
[DBG]  SAT instance and solver created.
Currently solving
Instance name: scen
Map name: map
Encoding used: disappear_at_goal
SAT solver used: Kissat
Optimizing function: sum of costs
Number of agents: 4
Mks LB: 3
SoC LB: 9
Delta: 0
Remaining time: 300000 [ms]

Vertex conflict! Agents 0, 3, timestep 2, location 0
Found plan [agents = 4] [timesteps = 3]
Agent #0 : 15 0 0 
Agent #1 : 9 5 1 
Agent #2 : 13 14 15 
Agent #3 : 11 12 0 

[STAT] Solver returned: 0
[DBG]  Agent (index) 7 | New local path (submap idx):
[DBG]  15 
[DBG]  Agent (index) 28 | New local path (submap idx):
[DBG]  9 5 1 
[DBG]  Agent (index) 91 | New local path (submap idx):
[DBG]  13 14 15 
[DBG]  Agent (index) 108 | New local path (submap idx):
[DBG]  11 12 
[DBG]  Update the agent path 7 | Original local length: 1 | New local length: 1
[DBG]  agent 7 t=0 => decoded (sx,sy)=(4,4) => global_id=727
[DBG]  Complete path of agent 7:
[DBG]    Original: 756 757 725 726 727 728 729 697 697 697 697 697 697 729 761 793 792 824 856 888 889 921 
[DBG]    New:     756 757 725 726 727 728 729 697 697 697 697 697 697 729 761 793 792 824 856 888 889 921 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 756 757 725 726 
[DBG]    Local path (in submap): 727 
[DBG]    Suffix (out of submap): 728 729 697 697 697 697 697 697 729 761 793 792 824 856 888 889 921 
[DBG]  Original agent path length 7 je: 22
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 0: 756, 757, 725, 726, 727, 728, 729, 697, 697, 697, 697, 697, 697, 729, 761, 793, 792, 824, 856, 888, 889, 921, 
[DBG]  Path for agent 7 updated, resulting length: 22
[DBG]  Update the agent path 28 | Original local length: 12 | New local length: 3
[DBG]  agent 28 t=0 => decoded (sx,sy)=(2,2) => global_id=661
[DBG]  agent 28 t=1 => decoded (sx,sy)=(1,2) => global_id=629
[DBG]  agent 28 t=2 => decoded (sx,sy)=(0,2) => global_id=597
[DBG]  Complete path of agent 28:
[DBG]    Original: 661 661 661 661 661 661 661 661 661 661 661 661 661 629 629 597 565 533 533 534 534 534 502 502 502 501 533 533 533 533 533 565 597 629 628 628 628 660 692 724 725 726 727 
[DBG]    New:     661 661 661 661 661 629 597 565 533 533 534 534 534 502 502 502 501 533 533 533 533 533 565 597 629 628 628 628 660 692 724 725 726 727 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 661 661 661 661 
[DBG]    Local path (in submap): 661 629 597 565 533 533 534 534 534 502 502 502 
[DBG]    Suffix (out of submap): 501 533 533 533 533 533 565 597 629 628 628 628 660 692 724 725 726 727 
[DBG]  Original agent path length 28 je: 43
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 1: 661, 661, 661, 661, 661, 629, 597, 565, 533, 533, 534, 534, 534, 502, 502, 502, 501, 533, 533, 533, 533, 533, 565, 597, 629, 628, 628, 628, 660, 692, 724, 725, 726, 727, 
[DBG]  Path for agent 28 updated, resulting length: 34
[DBG]  Update the agent path 91 | Original local length: 3 | New local length: 3
[DBG]  agent 91 t=0 => decoded (sx,sy)=(4,2) => global_id=725
[DBG]  agent 91 t=1 => decoded (sx,sy)=(4,3) => global_id=726
[DBG]  agent 91 t=2 => decoded (sx,sy)=(4,4) => global_id=727
[DBG]  Complete path of agent 91:
[DBG]    Original: 787 755 756 724 725 726 727 759 727 728 696 664 632 600 600 600 600 601 601 601 602 570 571 571 539 540 541 509 477 445 413 413 381 
[DBG]    New:     787 755 756 724 725 726 727 759 727 728 696 664 632 600 600 600 600 601 601 601 602 570 571 571 539 540 541 509 477 445 413 413 381 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 787 755 756 724 
[DBG]    Local path (in submap): 725 726 727 
[DBG]    Suffix (out of submap): 759 727 728 696 664 632 600 600 600 600 601 601 601 602 570 571 571 539 540 541 509 477 445 413 413 381 
[DBG]  Original agent path length 91 je: 33
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 2: 787, 755, 756, 724, 725, 726, 727, 759, 727, 728, 696, 664, 632, 600, 600, 600, 600, 601, 601, 601, 602, 570, 571, 571, 539, 540, 541, 509, 477, 445, 413, 413, 381, 
[DBG]  Path for agent 91 updated, resulting length: 33
[DBG]  Update the agent path 108 | Original local length: 2 | New local length: 2
[DBG]  agent 108 t=0 => decoded (sx,sy)=(3,1) => global_id=692
[DBG]  agent 108 t=1 => decoded (sx,sy)=(4,1) => global_id=724
[DBG]  Complete path of agent 108:
[DBG]    Original: 628 628 628 660 692 724 756 788 820 821 822 823 824 856 857 889 921 953 954 955 956 957 989 1021 
[DBG]    New:     628 628 628 660 692 724 756 788 820 821 822 823 824 856 857 889 921 953 954 955 956 957 989 1021 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 628 628 628 660 
[DBG]    Local path (in submap): 692 724 
[DBG]    Suffix (out of submap): 756 788 820 821 822 823 824 856 857 889 921 953 954 955 956 957 989 1021 
[DBG]  Original agent path length 108 je: 24
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 3: 628, 628, 628, 660, 692, 724, 756, 788, 820, 821, 822, 823, 824, 856, 857, 889, 921, 953, 954, 955, 956, 957, 989, 1021, 
[DBG]  Path for agent 108 updated, resulting length: 24
[DBG]  Paths successfully updated.
[DBG]  (LNS.cpp) New path for agent 7: 
[DBG]  756, 757, 725, 726, 727, 728, 729, 697, 697, 697, 697, 697, 697, 729, 761, 793, 792, 824, 856, 888, 889, 921, 
[DBG]  (LNS.cpp) New path for agent 28: 
[DBG]  661, 661, 661, 661, 661, 629, 597, 565, 533, 533, 534, 534, 534, 502, 502, 502, 501, 533, 533, 533, 533, 533, 565, 597, 629, 628, 628, 628, 660, 692, 724, 725, 726, 727, 
[DBG]  (LNS.cpp) New path for agent 91: 
[DBG]  787, 755, 756, 724, 725, 726, 727, 759, 727, 728, 696, 664, 632, 600, 600, 600, 600, 601, 601, 601, 602, 570, 571, 571, 539, 540, 541, 509, 477, 445, 413, 413, 381, 
[DBG]  (LNS.cpp) New path for agent 108: 
[DBG]  628, 628, 628, 660, 692, 724, 756, 788, 820, 821, 822, 823, 824, 856, 857, 889, 921, 953, 954, 955, 956, 957, 989, 1021, 
[DBG]  Delta value: 0.0762712
[DBG]  Rewarding metric index = 1
[DBG]  component_weights = {0.342169, 0.349754, 0.119644, 0.188433}
[DBG]  opSuccess value: 1
[STAT] neighbor.sum_of_costs before recomputation: 109
[STAT] neighbor.old_sum_of_costs before recomputation: 118
[STAT] sum_of_costs before recomputation: 4393
[DBG]  Validate solution immediately after SAT success.
[WARNING] Problem after SAT: Edge conflict between agents 30 and 28 at edge (629,597) at timestep 24
[DBG]  [DEBUG] Attempting immediate repair via init_lns because problem occurred after SAT (should be applied only for conflicts...).
[DBG]  [DEBUG] Passing 150 agents to init_lns (skip=true).
[DBG]  [DEBUG] path_table contents for selected agents (neighbor.agents):
[DBG]    Agent 7 => controlling path length=22
[DBG]    Agent 28 => controlling path length=34
[DBG]    Agent 91 => controlling path length=33
[DBG]    Agent 108 => controlling path length=24
[DBG]  hodnota skip_initial_solution=1
[DBG]  We skip initialSolution => call buildCollisionData()
[DBG]  buildCollisionData() called – skip_initial_solution case.
[DBG]  Agents.size()=150, collision_graph.size()=150
[DBG]  agent 28 => updateCollidingPairs => foundCollision
[DBG]  agent 30 => updateCollidingPairs => foundCollision
[DBG]  agent 42 => updateCollidingPairs => foundCollision
[DBG]  agent 46 => updateCollidingPairs => foundCollision
[DBG]  agent 56 => updateCollidingPairs => foundCollision
[DBG]  agent 62 => updateCollidingPairs => foundCollision
[DBG]  agent 74 => updateCollidingPairs => foundCollision
[DBG]  agent 79 => updateCollidingPairs => foundCollision
[DBG]  agent 104 => updateCollidingPairs => foundCollision
[DBG]  agent 135 => updateCollidingPairs => foundCollision
[DBG]  Conflicting agent pairs:
[DBG]  agent 28 is in conflict with agent 30
[DBG]  agent 28 is in conflict with agent 42
[DBG]  agent 28 is in conflict with agent 46
[DBG]  agent 28 is in conflict with agent 56
[DBG]  agent 28 is in conflict with agent 62
[DBG]  agent 28 is in conflict with agent 74
[DBG]  agent 28 is in conflict with agent 79
[DBG]  agent 28 is in conflict with agent 104
[DBG]  agent 28 is in conflict with agent 135
[DBG]  buildCollisionData() => sum_of_costs=4384, num_of_colliding_pairs=9
[DBG]  buildCollisionData done => sum_of_costs=4384, num_of_colliding_pairs=9
[DBG]  sum_of_cost hodnota: 4384
[DBG]  After skip/init build => iteration_stats.back(): sum_of_costs=4384, collisions=9
[DEBUG] Using default neighbor generation strategy for conflicts: 0
[DEBUG] Using default neighbor generation strategy for conflicts: 1
	InitLNS(PP): runtime = 0.0021675, iterations = 3, colliding pairs = 0, initial colliding pairs = 9, solution cost = 4389, initial solution cost = 4384, failed iterations = 0
[DBG]  init_lns->sum_of_costs after init_lns->run: 4389
[DBG]  sum_of_costs after assignment from init_lns->run: 4389
[DBG]  Recomputing sum_of_cost by dividing neighbor.sum_of_costs and neighbor.old_sum_of_costs
[STAT] sum_of_costs after recomputation: 4389
[STAT] Iteration 38
[DBG]  Using SAT operator (destroy+repair SAT).
[DBG]  ====================
[DBG]  SAT destroy operator called.
[DBG]  SAT heuristic: 2
[DBG]  key_agent_id: 28
[DBG]  key_agent_id global path length: 43
[DBG]  Submap content (global positions):
[DBG]  594 595 596 597 598 
[DBG]  626 627 628 629 630 
[DBG]  658 659 660 661 662 
[DBG]  690 691 692 693 694 
[DBG]  722 723 724 725 726 
[DBG]  Map content with agents and obstacles:
[DBG]  . X . A X 
[DBG]  X A . . X 
[DBG]  . A A . X 
[DBG]  X . . X X 
[DBG]  . X . . . 
[DBG]  content of the map structure that we pass to the SAT solver:
[DBG]  1  -1  1  1  -1  
[DBG]  -1  1  1  1  -1  
[DBG]  1  1  1  1  -1  
[DBG]  -1  1  1  -1  -1  
[DBG]  1  -1  1  1  1  
[DBG]  Identifying agents in a submap for rescheduling (when key_agent is there at the time 35):
[DBG]  Agent 26 found intervals in the sub-map:
[DBG]   [27..32]
[DBG]  Agent 26 is not in sub-map at time 35 (intervals: 
[DBG]  [27..32] )
[DBG]  Agent 28 found intervals in the sub-map:
[DBG]   [0..41]
[DBG]  Agent 28 (interval in submap: [0..41]) contains time 35, added to replan.
[DBG]  Agent 42 found intervals in the sub-map:
[DBG]   [34..40]
[DBG]  Agent 42 (interval in submap: [34..40]) contains time 35, added to replan.
[DBG]  Agent 53 found intervals in the sub-map:
[DBG]  
[DBG]  Agent 53 is not in sub-map at time 35 (intervals: 
[DBG]  )
[DBG]  Agent 69 found intervals in the sub-map:
[DBG]   [35..40]
[DBG]  Agent 69 (interval in submap: [35..40]) contains time 35, added to replan.
[DBG]  Agent 148 found intervals in the sub-map:
[DBG]   [32..40]
[DBG]  Agent 148 (interval in submap: [32..40]) contains time 35, added to replan.
[DBG]  Agent 28 | Start (global): 660 -> (local): (2, 2) at time 35 | Goal (global): 726 -> (local): (4, 4) at time 41
[DBG]  Agent 42 | Start (global): 659 -> (local): (2, 1) at time 35 | Goal (global): 726 -> (local): (4, 4) at time 40
[DBG]  Agent 69 | Start (global): 597 -> (local): (0, 3) at time 35 | Goal (global): 724 -> (local): (4, 2) at time 40
[DBG]  Agent 148 | Start (global): 627 -> (local): (1, 1) at time 35 | Goal (global): 660 -> (local): (2, 2) at time 40
[DBG]  [REPAIR] SAT destroy operator called.
[DBG]  [REPAIR] SAT operator – launching subproblem FOR OPTIMIZATION.
[DBG]  Creating local paths (sx, sy) in the submap for T_sync = 35
[DBG]    Agent 28 (global paths from T=35 to 41) has local path: (2,2) (2,2) (2,2) (3,2) (4,2) (4,3) (4,4) 
[DBG]    Agent 42 (global paths from T=35 to 40) has local path: (2,1) (3,1) (3,2) (4,2) (4,3) (4,4) 
[DBG]    Agent 69 (global paths from T=35 to 40) has local path: (0,3) (0,2) (1,2) (2,2) (3,2) (4,2) 
[DBG]    Agent 148 (global paths from T=35 to 40) has local path: (1,1) (2,1) (2,1) (2,1) (2,1) (2,2) 
[DBG]  Checking input data for SAT solver:
[DBG]    - Number of agents to replan: 4
[DBG]  Agent 28 has the original local path length: 7 => Start (2,2), Goal (4,4)
[DBG]  Agent 42 has the original local path length: 6 => Start (2,1), Goal (4,4)
[DBG]  Agent 69 has the original local path length: 6 => Start (0,3), Goal (4,2)
[DBG]  Agent 148 has the original local path length: 6 => Start (1,1), Goal (2,2)
[DBG]  Start position: (2, 2), (2, 1), (0, 3), (1, 1), 
[DBG]  Goal position: (4, 4), (4, 4), (4, 2), (2, 2), 
[DBG]  SAT instance and solver created.
Currently solving
Instance name: scen
Map name: map
Encoding used: disappear_at_goal
SAT solver used: Kissat
Optimizing function: sum of costs
Number of agents: 4
Mks LB: 6
SoC LB: 20
Delta: 0
Remaining time: 300000 [ms]

Vertex conflict! Agents 0, 3, timestep 5, location 0
Found plan [agents = 4] [timesteps = 6]
Agent #0 : 8 11 13 14 15 0 
Agent #1 : 7 10 11 13 14 15 
Agent #2 : 2 5 9 8 11 13 
Agent #3 : 3 7 8 0 0 0 

[STAT] Solver returned: 0
[DBG]  Agent (index) 28 | New local path (submap idx):
[DBG]  8 11 13 14 15 
[DBG]  Agent (index) 42 | New local path (submap idx):
[DBG]  7 10 11 13 14 15 
[DBG]  Agent (index) 69 | New local path (submap idx):
[DBG]  2 5 9 8 11 13 
[DBG]  Agent (index) 148 | New local path (submap idx):
[DBG]  3 7 8 
[DBG]  Update the agent path 28 | Original local length: 7 | New local length: 5
[DBG]  agent 28 t=0 => decoded (sx,sy)=(2,2) => global_id=660
[DBG]  agent 28 t=1 => decoded (sx,sy)=(3,2) => global_id=692
[DBG]  agent 28 t=2 => decoded (sx,sy)=(4,2) => global_id=724
[DBG]  agent 28 t=3 => decoded (sx,sy)=(4,3) => global_id=725
[DBG]  agent 28 t=4 => decoded (sx,sy)=(4,4) => global_id=726
[DBG]  Complete path of agent 28:
[DBG]    Original: 661 661 661 661 660 692 691 691 691 691 691 691 691 691 691 691 691 691 691 691 691 691 691 691 691 691 659 659 627 627 628 660 660 660 660 660 660 660 692 724 725 726 727 
[DBG]    New:     661 661 661 661 660 692 691 691 691 691 691 691 691 691 691 691 691 691 691 691 691 691 691 691 691 691 659 659 627 627 628 660 660 660 660 660 692 724 725 726 727 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 661 661 661 661 660 692 691 691 691 691 691 691 691 691 691 691 691 691 691 691 691 691 691 691 691 691 659 659 627 627 628 660 660 660 660 
[DBG]    Local path (in submap): 660 692 724 725 726 727 
[DBG]    Suffix (out of submap): 
[DBG]  Original agent path length 28 je: 43
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 0: 661, 661, 661, 661, 660, 692, 691, 691, 691, 691, 691, 691, 691, 691, 691, 691, 691, 691, 691, 691, 691, 691, 691, 691, 691, 691, 659, 659, 627, 627, 628, 660, 660, 660, 660, 660, 692, 724, 725, 726, 727, 
[DBG]  Path for agent 28 updated, resulting length: 41
[DBG]  Update the agent path 42 | Original local length: 6 | New local length: 6
[DBG]  agent 42 t=0 => decoded (sx,sy)=(2,1) => global_id=659
[DBG]  agent 42 t=1 => decoded (sx,sy)=(3,1) => global_id=691
[DBG]  agent 42 t=2 => decoded (sx,sy)=(3,2) => global_id=692
[DBG]  agent 42 t=3 => decoded (sx,sy)=(4,2) => global_id=724
[DBG]  agent 42 t=4 => decoded (sx,sy)=(4,3) => global_id=725
[DBG]  agent 42 t=5 => decoded (sx,sy)=(4,4) => global_id=726
[DBG]  Complete path of agent 42:
[DBG]    Original: 224 192 193 194 226 227 228 260 261 293 294 295 327 328 329 361 393 425 426 427 428 429 430 431 432 464 496 528 528 529 561 593 625 657 658 659 691 692 724 725 726 727 759 
[DBG]    New:     224 192 193 194 226 227 228 260 261 293 294 295 327 328 329 361 393 425 426 427 428 429 430 431 432 464 496 528 528 529 561 593 625 657 658 659 691 692 724 725 726 727 759 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 224 192 193 194 226 227 228 260 261 293 294 295 327 328 329 361 393 425 426 427 428 429 430 431 432 464 496 528 528 529 561 593 625 657 658 
[DBG]    Local path (in submap): 659 691 692 724 725 726 
[DBG]    Suffix (out of submap): 727 759 
[DBG]  Original agent path length 42 je: 43
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 1: 224, 192, 193, 194, 226, 227, 228, 260, 261, 293, 294, 295, 327, 328, 329, 361, 393, 425, 426, 427, 428, 429, 430, 431, 432, 464, 496, 528, 528, 529, 561, 593, 625, 657, 658, 659, 691, 692, 724, 725, 726, 727, 759, 
[DBG]  Path for agent 42 updated, resulting length: 43
[DBG]  Update the agent path 69 | Original local length: 6 | New local length: 6
[DBG]  agent 69 t=0 => decoded (sx,sy)=(0,3) => global_id=597
[DBG]  agent 69 t=1 => decoded (sx,sy)=(1,3) => global_id=629
[DBG]  agent 69 t=2 => decoded (sx,sy)=(2,3) => global_id=661
[DBG]  agent 69 t=3 => decoded (sx,sy)=(2,2) => global_id=660
[DBG]  agent 69 t=4 => decoded (sx,sy)=(3,2) => global_id=692
[DBG]  agent 69 t=5 => decoded (sx,sy)=(4,2) => global_id=724
[DBG]  Complete path of agent 69:
[DBG]    Original: 4 5 6 7 8 9 41 73 74 106 138 139 140 172 173 205 237 269 301 333 365 366 398 430 462 463 464 465 466 467 468 469 501 533 565 597 596 628 660 692 724 756 788 820 
[DBG]    New:     4 5 6 7 8 9 41 73 74 106 138 139 140 172 173 205 237 269 301 333 365 366 398 430 462 463 464 465 466 467 468 469 501 533 565 597 629 661 660 692 724 756 788 820 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 4 5 6 7 8 9 41 73 74 106 138 139 140 172 173 205 237 269 301 333 365 366 398 430 462 463 464 465 466 467 468 469 501 533 565 
[DBG]    Local path (in submap): 597 629 661 660 692 724 
[DBG]    Suffix (out of submap): 756 788 820 
[DBG]  Original agent path length 69 je: 44
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 2: 4, 5, 6, 7, 8, 9, 41, 73, 74, 106, 138, 139, 140, 172, 173, 205, 237, 269, 301, 333, 365, 366, 398, 430, 462, 463, 464, 465, 466, 467, 468, 469, 501, 533, 565, 597, 629, 661, 660, 692, 724, 756, 788, 820, 
[DBG]  Path for agent 69 updated, resulting length: 44
[DBG]  Update the agent path 148 | Original local length: 6 | New local length: 3
[DBG]  agent 148 t=0 => decoded (sx,sy)=(1,1) => global_id=627
[DBG]  agent 148 t=1 => decoded (sx,sy)=(2,1) => global_id=659
[DBG]  agent 148 t=2 => decoded (sx,sy)=(2,2) => global_id=660
[DBG]  Complete path of agent 148:
[DBG]    Original: 776 744 712 713 714 714 714 714 715 683 684 685 717 717 717 717 717 718 686 654 655 654 655 687 719 720 721 689 657 625 625 657 658 659 627 627 659 659 659 659 660 
[DBG]    New:     776 744 712 713 714 714 714 714 715 683 684 685 717 717 717 717 717 718 686 654 655 654 655 687 719 720 721 689 657 625 625 657 658 659 627 627 659 660 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 776 744 712 713 714 714 714 714 715 683 684 685 717 717 717 717 717 718 686 654 655 654 655 687 719 720 721 689 657 625 625 657 658 659 627 
[DBG]    Local path (in submap): 627 659 660 
[DBG]    Suffix (out of submap): 
[DBG]  Original agent path length 148 je: 41
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 3: 776, 744, 712, 713, 714, 714, 714, 714, 715, 683, 684, 685, 717, 717, 717, 717, 717, 718, 686, 654, 655, 654, 655, 687, 719, 720, 721, 689, 657, 625, 625, 657, 658, 659, 627, 627, 659, 660, 
[DBG]  Path for agent 148 updated, resulting length: 38
[DBG]  Paths successfully updated.
[DBG]  (LNS.cpp) New path for agent 28: 
[DBG]  661, 661, 661, 661, 660, 692, 691, 691, 691, 691, 691, 691, 691, 691, 691, 691, 691, 691, 691, 691, 691, 691, 691, 691, 691, 691, 659, 659, 627, 627, 628, 660, 660, 660, 660, 660, 692, 724, 725, 726, 727, 
[DBG]  (LNS.cpp) New path for agent 42: 
[DBG]  224, 192, 193, 194, 226, 227, 228, 260, 261, 293, 294, 295, 327, 328, 329, 361, 393, 425, 426, 427, 428, 429, 430, 431, 432, 464, 496, 528, 528, 529, 561, 593, 625, 657, 658, 659, 691, 692, 724, 725, 726, 727, 759, 
[DBG]  (LNS.cpp) New path for agent 69: 
[DBG]  4, 5, 6, 7, 8, 9, 41, 73, 74, 106, 138, 139, 140, 172, 173, 205, 237, 269, 301, 333, 365, 366, 398, 430, 462, 463, 464, 465, 466, 467, 468, 469, 501, 533, 565, 597, 629, 661, 660, 692, 724, 756, 788, 820, 
[DBG]  (LNS.cpp) New path for agent 148: 
[DBG]  776, 744, 712, 713, 714, 714, 714, 714, 715, 683, 684, 685, 717, 717, 717, 717, 717, 718, 686, 654, 655, 654, 655, 687, 719, 720, 721, 689, 657, 625, 625, 657, 658, 659, 627, 627, 659, 660, 
[DBG]  Delta value: 0.0299401
[DBG]  Rewarding metric index = 0
[DBG]  component_weights = {0.360579, 0.339965, 0.116296, 0.18316}
[DBG]  opSuccess value: 1
[STAT] neighbor.sum_of_costs before recomputation: 162
[STAT] neighbor.old_sum_of_costs before recomputation: 167
[STAT] sum_of_costs before recomputation: 4389
[DBG]  Validate solution immediately after SAT success.
[WARNING] Problem after SAT: Target conflict: agent 42 (len 42) traverses target of agent 28 (len 40) at location 727 at timestep 41
[DBG]  [DEBUG] Attempting immediate repair via init_lns because problem occurred after SAT (should be applied only for conflicts...).
[DBG]  [DEBUG] Passing 150 agents to init_lns (skip=true).
[DBG]  [DEBUG] path_table contents for selected agents (neighbor.agents):
[DBG]    Agent 28 => controlling path length=41
[DBG]    Agent 42 => controlling path length=43
[DBG]    Agent 69 => controlling path length=44
[DBG]    Agent 148 => controlling path length=38
[DBG]  hodnota skip_initial_solution=1
[DBG]  We skip initialSolution => call buildCollisionData()
[DBG]  buildCollisionData() called – skip_initial_solution case.
[DBG]  Agents.size()=150, collision_graph.size()=150
[DBG]  agent 28 => updateCollidingPairs => foundCollision
[DBG]  agent 42 => updateCollidingPairs => foundCollision
[DBG]  agent 55 => updateCollidingPairs => foundCollision
[DBG]  agent 69 => updateCollidingPairs => foundCollision
[DBG]  agent 148 => updateCollidingPairs => foundCollision
[DBG]  Conflicting agent pairs:
[DBG]  agent 28 is in conflict with agent 42
[DBG]  agent 55 is in conflict with agent 148
[DBG]  agent 69 is in conflict with agent 148
[DBG]  buildCollisionData() => sum_of_costs=4384, num_of_colliding_pairs=3
[DBG]  buildCollisionData done => sum_of_costs=4384, num_of_colliding_pairs=3
[DBG]  sum_of_cost hodnota: 4384
[DBG]  After skip/init build => iteration_stats.back(): sum_of_costs=4384, collisions=3
[DEBUG] Using default neighbor generation strategy for conflicts: 2
[DEBUG] Using default neighbor generation strategy for conflicts: 1
[DEBUG] Using default neighbor generation strategy for conflicts: 1
[DEBUG] Using default neighbor generation strategy for conflicts: 2
[DEBUG] Using default neighbor generation strategy for conflicts: 2
[DEBUG] Using default neighbor generation strategy for conflicts: 1
[DEBUG] Using default neighbor generation strategy for conflicts: 0
	InitLNS(PP): runtime = 0.0120248, iterations = 8, colliding pairs = 0, initial colliding pairs = 3, solution cost = 4352, initial solution cost = 4384, failed iterations = 0
[DBG]  init_lns->sum_of_costs after init_lns->run: 4352
[DBG]  sum_of_costs after assignment from init_lns->run: 4352
[DBG]  Recomputing sum_of_cost by dividing neighbor.sum_of_costs and neighbor.old_sum_of_costs
[STAT] sum_of_costs after recomputation: 4352
[STAT] Iteration 39
[DBG]  Random chance did not select SAT operator (r=57), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 39
[DBG]  Using SAT operator (destroy+repair SAT).
[DBG]  ====================
[DBG]  SAT destroy operator called.
[DBG]  SAT heuristic: 2
[DBG]  key_agent_id: 28
[DBG]  key_agent_id global path length: 43
[DBG]  Submap content (global positions):
[DBG]  595 596 597 598 599 
[DBG]  627 628 629 630 631 
[DBG]  659 660 661 662 663 
[DBG]  691 692 693 694 695 
[DBG]  723 724 725 726 727 
[DBG]  Map content with agents and obstacles:
[DBG]  X . . X . 
[DBG]  . . . X . 
[DBG]  A . A X X 
[DBG]  . . X X X 
[DBG]  X . . . . 
[DBG]  content of the map structure that we pass to the SAT solver:
[DBG]  -1  1  1  -1  1  
[DBG]  1  1  1  -1  1  
[DBG]  1  1  1  -1  -1  
[DBG]  1  1  -1  -1  -1  
[DBG]  -1  1  1  1  1  
[DBG]  Identifying agents in a submap for rescheduling (when key_agent is there at the time 33):
[DBG]  Agent 26 found intervals in the sub-map:
[DBG]   [27..32]
[DBG]  Agent 26 is not in sub-map at time 33 (intervals: 
[DBG]  [27..32] )
[DBG]  Agent 28 found intervals in the sub-map:
[DBG]   [0..42]
[DBG]  Agent 28 (interval in submap: [0..42]) contains time 33, added to replan.
[DBG]  Agent 53 found intervals in the sub-map:
[DBG]   [33..36]
[DBG]  Agent 53 (interval in submap: [33..36]) contains time 33, added to replan.
[DBG]  Agent 28 | Start (global): 661 -> (local): (2, 2) at time 33 | Goal (global): 727 -> (local): (4, 4) at time 42
[DBG]  Agent 53 | Start (global): 659 -> (local): (2, 0) at time 33 | Goal (global): 724 -> (local): (4, 1) at time 36
[DBG]  [REPAIR] SAT destroy operator called.
[DBG]  [REPAIR] SAT operator – launching subproblem FOR OPTIMIZATION.
[DBG]  Creating local paths (sx, sy) in the submap for T_sync = 33
[DBG]    Agent 28 (global paths from T=33 to 42) has local path: (2,2) (2,2) (2,2) (2,1) (2,1) (3,1) (4,1) (4,2) (4,3) (4,4) 
[DBG]    Agent 53 (global paths from T=33 to 36) has local path: (2,0) (3,0) (3,1) (4,1) 
[DBG]  Checking input data for SAT solver:
[DBG]    - Number of agents to replan: 2
[DBG]  Agent 28 has the original local path length: 10 => Start (2,2), Goal (4,4)
[DBG]  Agent 53 has the original local path length: 4 => Start (2,0), Goal (4,1)
[DBG]  Start position: (2, 2), (2, 0), 
[DBG]  Goal position: (4, 4), (4, 1), 
[DBG]  SAT instance and solver created.
Currently solving
Instance name: scen
Map name: map
Encoding used: disappear_at_goal
SAT solver used: Kissat
Optimizing function: sum of costs
Number of agents: 2
Mks LB: 7
SoC LB: 11
Delta: 0
Remaining time: 300000 [ms]

[STAT] Solver returned: -1
[DBG]  SAT solver failed.
[STAT] SAT solver failed to find a valid solution.
[DBG]  ====================
[DBG]  SAT destroy operator called.
[DBG]  SAT heuristic: 2
[DBG]  key_agent_id: 28
[DBG]  key_agent_id global path length: 43
[DBG]  Submap content (global positions):
[DBG]  595 596 597 598 599 
[DBG]  627 628 629 630 631 
[DBG]  659 660 661 662 663 
[DBG]  691 692 693 694 695 
[DBG]  723 724 725 726 727 
[DBG]  Map content with agents and obstacles:
[DBG]  X . . X . 
[DBG]  . A . X . 
[DBG]  . . A X X 
[DBG]  . . X X X 
[DBG]  X . . . . 
[DBG]  content of the map structure that we pass to the SAT solver:
[DBG]  -1  1  1  -1  1  
[DBG]  1  1  1  -1  1  
[DBG]  1  1  1  -1  -1  
[DBG]  1  1  -1  -1  -1  
[DBG]  -1  1  1  1  1  
[DBG]  Identifying agents in a submap for rescheduling (when key_agent is there at the time 2):
[DBG]  Agent 7 found intervals in the sub-map:
[DBG]  
[DBG]  Agent 7 is not in sub-map at time 2 (intervals: 
[DBG]  )
[DBG]  Agent 28 found intervals in the sub-map:
[DBG]   [0..42]
[DBG]  Agent 28 (interval in submap: [0..42]) contains time 2, added to replan.
[DBG]  Agent 108 found intervals in the sub-map:
[DBG]   [0..5]
[DBG]  Agent 108 (interval in submap: [0..5]) contains time 2, added to replan.
[DBG]  Agent 28 | Start (global): 661 -> (local): (2, 2) at time 2 | Goal (global): 727 -> (local): (4, 4) at time 42
[DBG]  Agent 108 | Start (global): 628 -> (local): (1, 1) at time 2 | Goal (global): 724 -> (local): (4, 1) at time 5
[DBG]  [REPAIR] SAT destroy operator called.
[DBG]  [REPAIR] SAT operator – launching subproblem FOR OPTIMIZATION.
[DBG]  Creating local paths (sx, sy) in the submap for T_sync = 2
[DBG]    Agent 28 (global paths from T=2 to 42) has local path: (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,1) (2,1) (3,1) (4,1) (4,2) (4,3) (4,4) 
[DBG]    Agent 108 (global paths from T=2 to 5) has local path: (1,1) (2,1) (3,1) (4,1) 
[DBG]  Checking input data for SAT solver:
[DBG]    - Number of agents to replan: 2
[DBG]  Agent 28 has the original local path length: 41 => Start (2,2), Goal (4,4)
[DBG]  Agent 108 has the original local path length: 4 => Start (1,1), Goal (4,1)
[DBG]  Start position: (2, 2), (1, 1), 
[DBG]  Goal position: (4, 4), (4, 1), 
[DBG]  SAT instance and solver created.
Currently solving
Instance name: scen
Map name: map
Encoding used: disappear_at_goal
SAT solver used: Kissat
Optimizing function: sum of costs
Number of agents: 2
Mks LB: 7
SoC LB: 11
Delta: 0
Remaining time: 300000 [ms]

[STAT] Solver returned: -1
[DBG]  SAT solver failed.
[STAT] SAT solver failed to find a valid solution.
[DBG]  ====================
[DBG]  SAT destroy operator called.
[DBG]  SAT heuristic: 2
[DBG]  key_agent_id: 28
[DBG]  key_agent_id global path length: 43
[DBG]  Submap content (global positions):
[DBG]  595 596 597 598 599 
[DBG]  627 628 629 630 631 
[DBG]  659 660 661 662 663 
[DBG]  691 692 693 694 695 
[DBG]  723 724 725 726 727 
[DBG]  Map content with agents and obstacles:
[DBG]  X . . X . 
[DBG]  . A . X . 
[DBG]  . . A X X 
[DBG]  . A X X X 
[DBG]  X . . . A 
[DBG]  content of the map structure that we pass to the SAT solver:
[DBG]  -1  1  1  -1  1  
[DBG]  1  1  1  -1  1  
[DBG]  1  1  1  -1  -1  
[DBG]  1  1  -1  -1  -1  
[DBG]  -1  1  1  1  1  
[DBG]  Identifying agents in a submap for rescheduling (when key_agent is there at the time 7):
[DBG]  Agent 28 found intervals in the sub-map:
[DBG]   [0..42]
[DBG]  Agent 28 (interval in submap: [0..42]) contains time 7, added to replan.
[DBG]  Agent 46 found intervals in the sub-map:
[DBG]   [4..13]
[DBG]  Agent 46 (interval in submap: [4..13]) contains time 7, added to replan.
[DBG]  Agent 63 found intervals in the sub-map:
[DBG]  
[DBG]  Agent 63 is not in sub-map at time 7 (intervals: 
[DBG]  )
[DBG]  Agent 70 found intervals in the sub-map:
[DBG]   [7..10]
[DBG]  Agent 70 (interval in submap: [7..10]) contains time 7, added to replan.
[DBG]  Agent 89 found intervals in the sub-map:
[DBG]   [5..11]
[DBG]  Agent 89 (interval in submap: [5..11]) contains time 7, added to replan.
[DBG]  Agent 28 | Start (global): 661 -> (local): (2, 2) at time 7 | Goal (global): 727 -> (local): (4, 4) at time 42
[DBG]  Agent 46 | Start (global): 692 -> (local): (3, 1) at time 7 | Goal (global): 597 -> (local): (0, 2) at time 13
[DBG]  Agent 70 | Start (global): 727 -> (local): (4, 4) at time 7 | Goal (global): 724 -> (local): (4, 1) at time 10
[DBG]  Agent 89 | Start (global): 628 -> (local): (1, 1) at time 7 | Goal (global): 724 -> (local): (4, 1) at time 11
[DBG]  [REPAIR] SAT destroy operator called.
[DBG]  [REPAIR] SAT operator – launching subproblem FOR OPTIMIZATION.
[DBG]  Creating local paths (sx, sy) in the submap for T_sync = 7
[DBG]    Agent 28 (global paths from T=7 to 42) has local path: (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,1) (2,1) (3,1) (4,1) (4,2) (4,3) (4,4) 
[DBG]    Agent 46 (global paths from T=7 to 13) has local path: (3,1) (2,1) (2,0) (2,1) (1,1) (1,2) (0,2) 
[DBG]    Agent 70 (global paths from T=7 to 10) has local path: (4,4) (4,3) (4,2) (4,1) 
[DBG]    Agent 89 (global paths from T=7 to 11) has local path: (1,1) (1,1) (2,1) (3,1) (4,1) 
[DBG]  Checking input data for SAT solver:
[DBG]    - Number of agents to replan: 4
[DBG]  Agent 28 has the original local path length: 36 => Start (2,2), Goal (4,4)
[DBG]  Agent 46 has the original local path length: 7 => Start (3,1), Goal (0,2)
[DBG]  Agent 70 has the original local path length: 4 => Start (4,4), Goal (4,1)
[DBG]  Agent 89 has the original local path length: 5 => Start (1,1), Goal (4,1)
[DBG]  Start position: (2, 2), (3, 1), (4, 4), (1, 1), 
[DBG]  Goal position: (4, 4), (0, 2), (4, 1), (4, 1), 
[DBG]  SAT instance and solver created.
Currently solving
Instance name: scen
Map name: map
Encoding used: disappear_at_goal
SAT solver used: Kissat
Optimizing function: sum of costs
Number of agents: 4
Mks LB: 7
SoC LB: 20
Delta: 0
Remaining time: 300000 [ms]

[STAT] Solver returned: -1
[DBG]  SAT solver failed.
[STAT] SAT solver failed to find a valid solution.
[DBG]  ====================
[DBG]  SAT destroy operator called.
[DBG]  SAT heuristic: 2
[DBG]  key_agent_id: 28
[DBG]  key_agent_id global path length: 43
[DBG]  Submap content (global positions):
[DBG]  595 596 597 598 599 
[DBG]  627 628 629 630 631 
[DBG]  659 660 661 662 663 
[DBG]  691 692 693 694 695 
[DBG]  723 724 725 726 727 
[DBG]  Map content with agents and obstacles:
[DBG]  X . A X . 
[DBG]  . . . X . 
[DBG]  . . A X X 
[DBG]  . . X X X 
[DBG]  X A A A . 
[DBG]  content of the map structure that we pass to the SAT solver:
[DBG]  -1  1  1  -1  1  
[DBG]  1  1  1  -1  1  
[DBG]  1  1  1  -1  -1  
[DBG]  1  1  -1  -1  -1  
[DBG]  -1  1  1  1  1  
[DBG]  Identifying agents in a submap for rescheduling (when key_agent is there at the time 5):
[DBG]  Agent 28 found intervals in the sub-map:
[DBG]   [0..42]
[DBG]  Agent 28 (interval in submap: [0..42]) contains time 5, added to replan.
[DBG]  Agent 46 found intervals in the sub-map:
[DBG]   [4..13]
[DBG]  Agent 46 (interval in submap: [4..13]) contains time 5, added to replan.
[DBG]  Agent 63 found intervals in the sub-map:
[DBG]  
[DBG]  Agent 63 is not in sub-map at time 5 (intervals: 
[DBG]  )
[DBG]  Agent 89 found intervals in the sub-map:
[DBG]   [5..11]
[DBG]  Agent 89 (interval in submap: [5..11]) contains time 5, added to replan.
[DBG]  Agent 91 found intervals in the sub-map:
[DBG]   [3..6] [8..8]
[DBG]  Agent 91 (interval in submap: [3..6]) contains time 5, added to replan.
[DBG]  Agent 108 found intervals in the sub-map:
[DBG]   [0..5]
[DBG]  Agent 108 (interval in submap: [0..5]) contains time 5, added to replan.
[DBG]  Agent 28 | Start (global): 661 -> (local): (2, 2) at time 5 | Goal (global): 727 -> (local): (4, 4) at time 42
[DBG]  Agent 46 | Start (global): 725 -> (local): (4, 2) at time 5 | Goal (global): 597 -> (local): (0, 2) at time 13
[DBG]  Agent 89 | Start (global): 597 -> (local): (0, 2) at time 5 | Goal (global): 724 -> (local): (4, 1) at time 11
[DBG]  Agent 91 | Start (global): 726 -> (local): (4, 3) at time 5 | Goal (global): 727 -> (local): (4, 4) at time 6
[DBG]  Agent 108 | Start (global): 724 -> (local): (4, 1) at time 5 | Goal (global): 724 -> (local): (4, 1) at time 5
[DBG]  [REPAIR] SAT destroy operator called.
[DBG]  [REPAIR] SAT operator – launching subproblem FOR OPTIMIZATION.
[DBG]  Creating local paths (sx, sy) in the submap for T_sync = 5
[DBG]    Agent 28 (global paths from T=5 to 42) has local path: (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,1) (2,1) (3,1) (4,1) (4,2) (4,3) (4,4) 
[DBG]    Agent 46 (global paths from T=5 to 13) has local path: (4,2) (4,1) (3,1) (2,1) (2,0) (2,1) (1,1) (1,2) (0,2) 
[DBG]    Agent 89 (global paths from T=5 to 11) has local path: (0,2) (0,1) (1,1) (1,1) (2,1) (3,1) (4,1) 
[DBG]    Agent 91 (global paths from T=5 to 6) has local path: (4,3) (4,4) 
[DBG]    Agent 108 (global paths from T=5 to 5) has local path: (4,1) 
[DBG]  Checking input data for SAT solver:
[DBG]    - Number of agents to replan: 5
[DBG]  Agent 28 has the original local path length: 38 => Start (2,2), Goal (4,4)
[DBG]  Agent 46 has the original local path length: 9 => Start (4,2), Goal (0,2)
[DBG]  Agent 89 has the original local path length: 7 => Start (0,2), Goal (4,1)
[DBG]  Agent 91 has the original local path length: 2 => Start (4,3), Goal (4,4)
[DBG]  Agent 108 has the original local path length: 1 => Start (4,1), Goal (4,1)
[DBG]  Start position: (2, 2), (4, 2), (0, 2), (4, 3), (4, 1), 
[DBG]  Goal position: (4, 4), (0, 2), (4, 1), (4, 4), (4, 1), 
[DBG]  SAT instance and solver created.
Currently solving
Instance name: scen
Map name: map
Encoding used: disappear_at_goal
SAT solver used: Kissat
Optimizing function: sum of costs
Number of agents: 5
Mks LB: 7
SoC LB: 23
Delta: 0
Remaining time: 300000 [ms]

[STAT] Solver returned: -1
[DBG]  SAT solver failed.
[STAT] SAT solver failed to find a valid solution.
[DBG]  ====================
[DBG]  SAT destroy operator called.
[DBG]  SAT heuristic: 2
[DBG]  key_agent_id: 28
[DBG]  key_agent_id global path length: 43
[DBG]  Submap content (global positions):
[DBG]  595 596 597 598 599 
[DBG]  627 628 629 630 631 
[DBG]  659 660 661 662 663 
[DBG]  691 692 693 694 695 
[DBG]  723 724 725 726 727 
[DBG]  Map content with agents and obstacles:
[DBG]  X . . X . 
[DBG]  . . . X . 
[DBG]  . A A X X 
[DBG]  . A X X X 
[DBG]  X A . . . 
[DBG]  content of the map structure that we pass to the SAT solver:
[DBG]  -1  1  1  -1  1  
[DBG]  1  1  1  -1  1  
[DBG]  1  1  1  -1  -1  
[DBG]  1  1  -1  -1  -1  
[DBG]  -1  1  1  1  1  
[DBG]  Identifying agents in a submap for rescheduling (when key_agent is there at the time 18):
[DBG]  Agent 4 found intervals in the sub-map:
[DBG]   [18..26]
[DBG]  Agent 4 (interval in submap: [18..26]) contains time 18, added to replan.
[DBG]  Agent 28 found intervals in the sub-map:
[DBG]   [0..42]
[DBG]  Agent 28 (interval in submap: [0..42]) contains time 18, added to replan.
[DBG]  Agent 30 found intervals in the sub-map:
[DBG]   [16..21]
[DBG]  Agent 30 (interval in submap: [16..21]) contains time 18, added to replan.
[DBG]  Agent 61 found intervals in the sub-map:
[DBG]  
[DBG]  Agent 61 is not in sub-map at time 18 (intervals: 
[DBG]  )
[DBG]  Agent 74 found intervals in the sub-map:
[DBG]   [12..16]
[DBG]  Agent 74 is not in sub-map at time 18 (intervals: 
[DBG]  [12..16] )
[DBG]  Agent 79 found intervals in the sub-map:
[DBG]   [17..22]
[DBG]  Agent 79 (interval in submap: [17..22]) contains time 18, added to replan.
[DBG]  Agent 4 | Start (global): 724 -> (local): (4, 1) at time 18 | Goal (global): 659 -> (local): (2, 0) at time 26
[DBG]  Agent 28 | Start (global): 661 -> (local): (2, 2) at time 18 | Goal (global): 727 -> (local): (4, 4) at time 42
[DBG]  Agent 30 | Start (global): 660 -> (local): (2, 1) at time 18 | Goal (global): 597 -> (local): (0, 2) at time 21
[DBG]  Agent 79 | Start (global): 692 -> (local): (3, 1) at time 18 | Goal (global): 597 -> (local): (0, 2) at time 22
[DBG]  [REPAIR] SAT destroy operator called.
[DBG]  [REPAIR] SAT operator – launching subproblem FOR OPTIMIZATION.
[DBG]  Creating local paths (sx, sy) in the submap for T_sync = 18
[DBG]    Agent 4 (global paths from T=18 to 26) has local path: (4,1) (3,1) (3,0) (3,0) (3,0) (3,0) (3,0) (3,0) (2,0) 
[DBG]    Agent 28 (global paths from T=18 to 42) has local path: (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,1) (2,1) (3,1) (4,1) (4,2) (4,3) (4,4) 
[DBG]    Agent 30 (global paths from T=18 to 21) has local path: (2,1) (1,1) (0,1) (0,2) 
[DBG]    Agent 79 (global paths from T=18 to 22) has local path: (3,1) (2,1) (1,1) (1,2) (0,2) 
[DBG]  Checking input data for SAT solver:
[DBG]    - Number of agents to replan: 4
[DBG]  Agent 4 has the original local path length: 9 => Start (4,1), Goal (2,0)
[DBG]  Agent 28 has the original local path length: 25 => Start (2,2), Goal (4,4)
[DBG]  Agent 30 has the original local path length: 4 => Start (2,1), Goal (0,2)
[DBG]  Agent 79 has the original local path length: 5 => Start (3,1), Goal (0,2)
[DBG]  Start position: (4, 1), (2, 2), (2, 1), (3, 1), 
[DBG]  Goal position: (2, 0), (4, 4), (0, 2), (0, 2), 
[DBG]  SAT instance and solver created.
Currently solving
Instance name: scen
Map name: map
Encoding used: disappear_at_goal
SAT solver used: Kissat
Optimizing function: sum of costs
Number of agents: 4
Mks LB: 7
SoC LB: 20
Delta: 0
Remaining time: 300000 [ms]

[STAT] Solver returned: -1
[DBG]  SAT solver failed.
[STAT] SAT solver failed to find a valid solution.
[DBG]  ====================
[DBG]  SAT destroy operator called.
[DBG]  SAT heuristic: 2
[DBG]  key_agent_id: 28
[DBG]  key_agent_id global path length: 43
[DBG]  Submap content (global positions):
[DBG]  595 596 597 598 599 
[DBG]  627 628 629 630 631 
[DBG]  659 660 661 662 663 
[DBG]  691 692 693 694 695 
[DBG]  723 724 725 726 727 
[DBG]  Map content with agents and obstacles:
[DBG]  X . . X . 
[DBG]  . A A X . 
[DBG]  A . A X X 
[DBG]  . . X X X 
[DBG]  X . . . . 
[DBG]  content of the map structure that we pass to the SAT solver:
[DBG]  -1  1  1  -1  1  
[DBG]  1  1  1  -1  1  
[DBG]  1  1  1  -1  -1  
[DBG]  1  1  -1  -1  -1  
[DBG]  -1  1  1  1  1  
[DBG]  Identifying agents in a submap for rescheduling (when key_agent is there at the time 12):
[DBG]  Agent 28 found intervals in the sub-map:
[DBG]   [0..42]
[DBG]  Agent 28 (interval in submap: [0..42]) contains time 12, added to replan.
[DBG]  Agent 46 found intervals in the sub-map:
[DBG]   [4..13]
[DBG]  Agent 46 (interval in submap: [4..13]) contains time 12, added to replan.
[DBG]  Agent 74 found intervals in the sub-map:
[DBG]   [12..16]
[DBG]  Agent 74 (interval in submap: [12..16]) contains time 12, added to replan.
[DBG]  Agent 86 found intervals in the sub-map:
[DBG]   [10..14]
[DBG]  Agent 86 (interval in submap: [10..14]) contains time 12, added to replan.
[DBG]  Agent 89 found intervals in the sub-map:
[DBG]   [5..11]
[DBG]  Agent 89 is not in sub-map at time 12 (intervals: 
[DBG]  [5..11] )
[DBG]  Agent 28 | Start (global): 661 -> (local): (2, 2) at time 12 | Goal (global): 727 -> (local): (4, 4) at time 42
[DBG]  Agent 46 | Start (global): 629 -> (local): (1, 2) at time 12 | Goal (global): 597 -> (local): (0, 2) at time 13
[DBG]  Agent 74 | Start (global): 659 -> (local): (2, 0) at time 12 | Goal (global): 597 -> (local): (0, 2) at time 16
[DBG]  Agent 86 | Start (global): 628 -> (local): (1, 1) at time 12 | Goal (global): 597 -> (local): (0, 2) at time 14
[DBG]  [REPAIR] SAT destroy operator called.
[DBG]  [REPAIR] SAT operator – launching subproblem FOR OPTIMIZATION.
[DBG]  Creating local paths (sx, sy) in the submap for T_sync = 12
[DBG]    Agent 28 (global paths from T=12 to 42) has local path: (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,1) (2,1) (3,1) (4,1) (4,2) (4,3) (4,4) 
[DBG]    Agent 46 (global paths from T=12 to 13) has local path: (1,2) (0,2) 
[DBG]    Agent 74 (global paths from T=12 to 16) has local path: (2,0) (1,0) (1,1) (0,1) (0,2) 
[DBG]    Agent 86 (global paths from T=12 to 14) has local path: (1,1) (1,2) (0,2) 
[DBG]  Checking input data for SAT solver:
[DBG]    - Number of agents to replan: 4
[DBG]  Agent 28 has the original local path length: 31 => Start (2,2), Goal (4,4)
[DBG]  Agent 46 has the original local path length: 2 => Start (1,2), Goal (0,2)
[DBG]  Agent 74 has the original local path length: 5 => Start (2,0), Goal (0,2)
[DBG]  Agent 86 has the original local path length: 3 => Start (1,1), Goal (0,2)
[DBG]  Start position: (2, 2), (1, 2), (2, 0), (1, 1), 
[DBG]  Goal position: (4, 4), (0, 2), (0, 2), (0, 2), 
[DBG]  SAT instance and solver created.
Currently solving
Instance name: scen
Map name: map
Encoding used: disappear_at_goal
SAT solver used: Kissat
Optimizing function: sum of costs
Number of agents: 4
Mks LB: 7
SoC LB: 17
Delta: 0
Remaining time: 300000 [ms]

Vertex conflict! Agents 1, 2, timestep 5, location 0
Swapping conflict! Agents 1, 2, timestep 5, edge (0,0)
Vertex conflict! Agents 1, 2, timestep 6, location 0
Vertex conflict! Agents 1, 3, timestep 3, location 0
Swapping conflict! Agents 1, 3, timestep 3, edge (0,0)
Vertex conflict! Agents 1, 3, timestep 4, location 0
Swapping conflict! Agents 1, 3, timestep 4, edge (0,0)
Vertex conflict! Agents 1, 3, timestep 5, location 0
Swapping conflict! Agents 1, 3, timestep 5, edge (0,0)
Vertex conflict! Agents 1, 3, timestep 6, location 0
Vertex conflict! Agents 2, 3, timestep 5, location 0
Swapping conflict! Agents 2, 3, timestep 5, edge (0,0)
Vertex conflict! Agents 2, 3, timestep 6, location 0
Found plan [agents = 4] [timesteps = 7]
Agent #0 : 9 8 11 12 13 14 15 
Agent #1 : 5 1 0 0 0 0 0 
Agent #2 : 7 3 4 5 1 0 0 
Agent #3 : 4 5 1 0 0 0 0 

[STAT] Solver returned: 0
[DBG]  Agent (index) 28 | New local path (submap idx):
[DBG]  9 8 11 12 13 14 15 
[DBG]  Agent (index) 46 | New local path (submap idx):
[DBG]  5 1 
[DBG]  Agent (index) 74 | New local path (submap idx):
[DBG]  7 3 4 5 1 
[DBG]  Agent (index) 86 | New local path (submap idx):
[DBG]  4 5 1 
[DBG]  Update the agent path 28 | Original local length: 31 | New local length: 7
[DBG]  agent 28 t=0 => decoded (sx,sy)=(2,2) => global_id=661
[DBG]  agent 28 t=1 => decoded (sx,sy)=(2,1) => global_id=660
[DBG]  agent 28 t=2 => decoded (sx,sy)=(3,1) => global_id=692
[DBG]  agent 28 t=3 => decoded (sx,sy)=(4,1) => global_id=724
[DBG]  agent 28 t=4 => decoded (sx,sy)=(4,2) => global_id=725
[DBG]  agent 28 t=5 => decoded (sx,sy)=(4,3) => global_id=726
[DBG]  agent 28 t=6 => decoded (sx,sy)=(4,4) => global_id=727
[DBG]  Complete path of agent 28:
[DBG]    Original: 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 660 660 692 724 725 726 727 
[DBG]    New:     661 661 661 661 661 661 661 661 661 661 661 661 661 660 692 724 725 726 727 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 661 661 661 661 661 661 661 661 661 661 661 661 
[DBG]    Local path (in submap): 661 660 692 724 725 726 727 
[DBG]    Suffix (out of submap): 
[DBG]  Original agent path length 28 je: 43
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 0: 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 660, 692, 724, 725, 726, 727, 
[DBG]  Path for agent 28 updated, resulting length: 19
[DBG]  Update the agent path 46 | Original local length: 2 | New local length: 2
[DBG]  agent 46 t=0 => decoded (sx,sy)=(1,2) => global_id=629
[DBG]  agent 46 t=1 => decoded (sx,sy)=(0,2) => global_id=597
[DBG]  Complete path of agent 46:
[DBG]    Original: 786 787 755 756 724 725 724 692 660 659 660 628 629 597 565 533 533 501 501 501 502 503 504 472 473 474 475 443 411 412 380 348 349 317 285 284 252 
[DBG]    New:     786 787 755 756 724 725 724 692 660 659 660 628 629 597 565 533 533 501 501 501 502 503 504 472 473 474 475 443 411 412 380 348 349 317 285 284 252 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 786 787 755 756 724 725 724 692 660 659 660 628 
[DBG]    Local path (in submap): 629 597 
[DBG]    Suffix (out of submap): 565 533 533 501 501 501 502 503 504 472 473 474 475 443 411 412 380 348 349 317 285 284 252 
[DBG]  Original agent path length 46 je: 37
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 1: 786, 787, 755, 756, 724, 725, 724, 692, 660, 659, 660, 628, 629, 597, 565, 533, 533, 501, 501, 501, 502, 503, 504, 472, 473, 474, 475, 443, 411, 412, 380, 348, 349, 317, 285, 284, 252, 
[DBG]  Path for agent 46 updated, resulting length: 37
[DBG]  Update the agent path 74 | Original local length: 5 | New local length: 5
[DBG]  agent 74 t=0 => decoded (sx,sy)=(2,0) => global_id=659
[DBG]  agent 74 t=1 => decoded (sx,sy)=(1,0) => global_id=627
[DBG]  agent 74 t=2 => decoded (sx,sy)=(1,1) => global_id=628
[DBG]  agent 74 t=3 => decoded (sx,sy)=(1,2) => global_id=629
[DBG]  agent 74 t=4 => decoded (sx,sy)=(0,2) => global_id=597
[DBG]  Complete path of agent 74:
[DBG]    Original: 752 720 688 689 657 657 657 657 656 656 657 658 659 627 628 596 597 565 566 534 534 502 503 504 
[DBG]    New:     752 720 688 689 657 657 657 657 656 656 657 658 659 627 628 629 597 565 566 534 534 502 503 504 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 752 720 688 689 657 657 657 657 656 656 657 658 
[DBG]    Local path (in submap): 659 627 628 629 597 
[DBG]    Suffix (out of submap): 565 566 534 534 502 503 504 
[DBG]  Original agent path length 74 je: 24
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 2: 752, 720, 688, 689, 657, 657, 657, 657, 656, 656, 657, 658, 659, 627, 628, 629, 597, 565, 566, 534, 534, 502, 503, 504, 
[DBG]  Path for agent 74 updated, resulting length: 24
[DBG]  Update the agent path 86 | Original local length: 3 | New local length: 3
[DBG]  agent 86 t=0 => decoded (sx,sy)=(1,1) => global_id=628
[DBG]  agent 86 t=1 => decoded (sx,sy)=(1,2) => global_id=629
[DBG]  agent 86 t=2 => decoded (sx,sy)=(0,2) => global_id=597
[DBG]  Complete path of agent 86:
[DBG]    Original: 781 782 750 718 686 687 688 689 657 658 659 660 628 629 597 565 566 534 534 502 503 504 505 506 538 539 540 541 
[DBG]    New:     781 782 750 718 686 687 688 689 657 658 659 660 628 629 597 565 566 534 534 502 503 504 505 506 538 539 540 541 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 781 782 750 718 686 687 688 689 657 658 659 660 
[DBG]    Local path (in submap): 628 629 597 
[DBG]    Suffix (out of submap): 565 566 534 534 502 503 504 505 506 538 539 540 541 
[DBG]  Original agent path length 86 je: 28
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 3: 781, 782, 750, 718, 686, 687, 688, 689, 657, 658, 659, 660, 628, 629, 597, 565, 566, 534, 534, 502, 503, 504, 505, 506, 538, 539, 540, 541, 
[DBG]  Path for agent 86 updated, resulting length: 28
[DBG]  Paths successfully updated.
[DBG]  (LNS.cpp) New path for agent 28: 
[DBG]  661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 660, 692, 724, 725, 726, 727, 
[DBG]  (LNS.cpp) New path for agent 46: 
[DBG]  786, 787, 755, 756, 724, 725, 724, 692, 660, 659, 660, 628, 629, 597, 565, 533, 533, 501, 501, 501, 502, 503, 504, 472, 473, 474, 475, 443, 411, 412, 380, 348, 349, 317, 285, 284, 252, 
[DBG]  (LNS.cpp) New path for agent 74: 
[DBG]  752, 720, 688, 689, 657, 657, 657, 657, 656, 656, 657, 658, 659, 627, 628, 629, 597, 565, 566, 534, 534, 502, 503, 504, 
[DBG]  (LNS.cpp) New path for agent 86: 
[DBG]  781, 782, 750, 718, 686, 687, 688, 689, 657, 658, 659, 660, 628, 629, 597, 565, 566, 534, 534, 502, 503, 504, 505, 506, 538, 539, 540, 541, 
[DBG]  Delta value: 0.1875
[DBG]  Rewarding metric index = 3
[DBG]  component_weights = {0.344791, 0.32508, 0.111204, 0.218925}
[DBG]  opSuccess value: 1
[STAT] neighbor.sum_of_costs before recomputation: 104
[STAT] neighbor.old_sum_of_costs before recomputation: 128
[STAT] sum_of_costs before recomputation: 4352
[DBG]  Validate solution immediately after SAT success.
[WARNING] Problem after SAT: Target conflict: agent 42 (len 42) traverses target of agent 28 (len 18) at location 727 at timestep 41
[DBG]  [DEBUG] Attempting immediate repair via init_lns because problem occurred after SAT (should be applied only for conflicts...).
[DBG]  [DEBUG] Passing 150 agents to init_lns (skip=true).
[DBG]  [DEBUG] path_table contents for selected agents (neighbor.agents):
[DBG]    Agent 28 => controlling path length=19
[DBG]    Agent 46 => controlling path length=37
[DBG]    Agent 74 => controlling path length=24
[DBG]    Agent 86 => controlling path length=28
[DBG]  hodnota skip_initial_solution=1
[DBG]  We skip initialSolution => call buildCollisionData()
[DBG]  buildCollisionData() called – skip_initial_solution case.
[DBG]  Agents.size()=150, collision_graph.size()=150
[DBG]  agent 28 => updateCollidingPairs => foundCollision
[DBG]  agent 42 => updateCollidingPairs => foundCollision
[DBG]  Conflicting agent pairs:
[DBG]  agent 28 is in conflict with agent 42
[DBG]  buildCollisionData() => sum_of_costs=4328, num_of_colliding_pairs=1
[DBG]  buildCollisionData done => sum_of_costs=4328, num_of_colliding_pairs=1
[DBG]  sum_of_cost hodnota: 4328
[DBG]  After skip/init build => iteration_stats.back(): sum_of_costs=4328, collisions=1
[DEBUG] Using default neighbor generation strategy for conflicts: 1
	InitLNS(PP): runtime = 0.001702, iterations = 2, colliding pairs = 0, initial colliding pairs = 1, solution cost = 4388, initial solution cost = 4328, failed iterations = 0
[DBG]  init_lns->sum_of_costs after init_lns->run: 4388
[DBG]  sum_of_costs after assignment from init_lns->run: 4388
[DBG]  Recomputing sum_of_cost by dividing neighbor.sum_of_costs and neighbor.old_sum_of_costs
[STAT] sum_of_costs after recomputation: 4388
[STAT] Iteration 40
[DBG]  Random chance did not select SAT operator (r=10), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 40
[DBG]  Random chance did not select SAT operator (r=38), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 40
[DBG]  Random chance did not select SAT operator (r=81), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 40
[DBG]  Random chance did not select SAT operator (r=51), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 40
[DBG]  Using SAT operator (destroy+repair SAT).
[DBG]  ====================
[DBG]  SAT destroy operator called.
[DBG]  SAT heuristic: 2
[DBG]  key_agent_id: 28
[DBG]  key_agent_id global path length: 57
[DBG]  Submap content (global positions):
[DBG]  625 626 627 628 629 
[DBG]  657 658 659 660 661 
[DBG]  689 690 691 692 693 
[DBG]  721 722 723 724 725 
[DBG]  753 754 755 756 757 
[DBG]  Map content with agents and obstacles:
[DBG]  . X . . . 
[DBG]  A . A A . 
[DBG]  A X A A X 
[DBG]  . . X A . 
[DBG]  A X . . . 
[DBG]  content of the map structure that we pass to the SAT solver:
[DBG]  1  -1  1  1  1  
[DBG]  1  1  1  1  1  
[DBG]  1  -1  1  1  -1  
[DBG]  1  1  -1  1  1  
[DBG]  1  -1  1  1  1  
[DBG]  Identifying agents in a submap for rescheduling (when key_agent is there at the time 10):
[DBG]  Agent 19 found intervals in the sub-map:
[DBG]   [0..10]
[DBG]  Agent 19 (interval in submap: [0..10]) contains time 10, added to replan.
[DBG]  Agent 28 found intervals in the sub-map:
[DBG]   [0..54]
[DBG]  Agent 28 (interval in submap: [0..54]) contains time 10, added to replan.
[DBG]  Agent 46 found intervals in the sub-map:
[DBG]   [2..12]
[DBG]  Agent 46 (interval in submap: [2..12]) contains time 10, added to replan.
[DBG]  Agent 61 found intervals in the sub-map:
[DBG]   [10..12] [19..20]
[DBG]  Agent 61 (interval in submap: [10..12]) contains time 10, added to replan.
[DBG]  Agent 62 found intervals in the sub-map:
[DBG]   [0..5] [23..29]
[DBG]  Agent 62 is not in sub-map at time 10 (intervals: 
[DBG]  [0..5] [23..29] )
[DBG]  Agent 70 found intervals in the sub-map:
[DBG]   [9..11]
[DBG]  Agent 70 (interval in submap: [9..11]) contains time 10, added to replan.
[DBG]  Agent 74 found intervals in the sub-map:
[DBG]   [10..15]
[DBG]  Agent 74 (interval in submap: [10..15]) contains time 10, added to replan.
[DBG]  Agent 86 found intervals in the sub-map:
[DBG]   [7..13]
[DBG]  Agent 86 (interval in submap: [7..13]) contains time 10, added to replan.
[DBG]  Agent 89 found intervals in the sub-map:
[DBG]   [6..12]
[DBG]  Agent 89 (interval in submap: [6..12]) contains time 10, added to replan.
[DBG]  Agent 91 found intervals in the sub-map:
[DBG]   [1..4]
[DBG]  Agent 91 is not in sub-map at time 10 (intervals: 
[DBG]  [1..4] )
[DBG]  Agent 19 | Start (global): 689 -> (local): (2, 0) at time 10 | Goal (global): 689 -> (local): (2, 0) at time 10
[DBG]  Agent 28 | Start (global): 691 -> (local): (2, 2) at time 10 | Goal (global): 725 -> (local): (3, 4) at time 54
[DBG]  Agent 46 | Start (global): 660 -> (local): (1, 3) at time 10 | Goal (global): 629 -> (local): (0, 4) at time 12
[DBG]  Agent 61 | Start (global): 753 -> (local): (4, 0) at time 10 | Goal (global): 753 -> (local): (4, 0) at time 12
[DBG]  Agent 70 | Start (global): 724 -> (local): (3, 3) at time 10 | Goal (global): 756 -> (local): (4, 3) at time 11
[DBG]  Agent 74 | Start (global): 657 -> (local): (1, 0) at time 10 | Goal (global): 629 -> (local): (0, 4) at time 15
[DBG]  Agent 86 | Start (global): 659 -> (local): (1, 2) at time 10 | Goal (global): 629 -> (local): (0, 4) at time 13
[DBG]  Agent 89 | Start (global): 692 -> (local): (2, 3) at time 10 | Goal (global): 756 -> (local): (4, 3) at time 12
[DBG]  [REPAIR] SAT destroy operator called.
[DBG]  [REPAIR] SAT operator – launching subproblem FOR OPTIMIZATION.
[DBG]  Creating local paths (sx, sy) in the submap for T_sync = 10
[DBG]    Agent 19 (global paths from T=10 to 10) has local path: (2,0) 
[DBG]    Agent 28 (global paths from T=10 to 54) has local path: (2,2) (2,2) (2,2) (1,2) (1,2) (1,2) (1,2) (1,2) (1,2) (1,2) (1,3) (1,3) (1,3) (1,3) (1,3) (1,3) (1,3) (1,3) (1,3) (1,2) (1,2) (1,3) (2,3) (3,3) (4,3) (4,4) (4,4) (4,4) (4,4) (4,4) (4,4) (4,4) (4,4) (4,4) (4,4) (4,4) (4,4) (4,4) (4,4) (4,4) (4,4) (4,4) (4,4) (4,4) (3,4) 
[DBG]    Agent 46 (global paths from T=10 to 12) has local path: (1,3) (0,3) (0,4) 
[DBG]    Agent 61 (global paths from T=10 to 12) has local path: (4,0) (4,0) (4,0) 
[DBG]    Agent 70 (global paths from T=10 to 11) has local path: (3,3) (4,3) 
[DBG]    Agent 74 (global paths from T=10 to 15) has local path: (1,0) (1,1) (1,2) (1,3) (1,4) (0,4) 
[DBG]    Agent 86 (global paths from T=10 to 13) has local path: (1,2) (1,3) (0,3) (0,4) 
[DBG]    Agent 89 (global paths from T=10 to 12) has local path: (2,3) (3,3) (4,3) 
[DBG]  Checking input data for SAT solver:
[DBG]    - Number of agents to replan: 8
[DBG]  Agent 19 has the original local path length: 1 => Start (2,0), Goal (2,0)
[DBG]  Agent 28 has the original local path length: 45 => Start (2,2), Goal (3,4)
[DBG]  Agent 46 has the original local path length: 3 => Start (1,3), Goal (0,4)
[DBG]  Agent 61 has the original local path length: 3 => Start (4,0), Goal (4,0)
[DBG]  Agent 70 has the original local path length: 2 => Start (3,3), Goal (4,3)
[DBG]  Agent 74 has the original local path length: 6 => Start (1,0), Goal (0,4)
[DBG]  Agent 86 has the original local path length: 4 => Start (1,2), Goal (0,4)
[DBG]  Agent 89 has the original local path length: 3 => Start (2,3), Goal (4,3)
[DBG]  Start position: (2, 0), (2, 2), (1, 3), (4, 0), (3, 3), (1, 0), (1, 2), (2, 3), 
[DBG]  Goal position: (2, 0), (3, 4), (0, 4), (4, 0), (4, 3), (0, 4), (0, 4), (4, 3), 
[DBG]  SAT instance and solver created.
Currently solving
Instance name: scen
Map name: map
Encoding used: disappear_at_goal
SAT solver used: Kissat
Optimizing function: sum of costs
Number of agents: 8
Mks LB: 6
SoC LB: 24
Delta: 0
Remaining time: 300000 [ms]

Vertex conflict! Agents 0, 1, timestep 4, location 0
Swapping conflict! Agents 0, 1, timestep 4, edge (0,0)
Vertex conflict! Agents 0, 1, timestep 5, location 0
Vertex conflict! Agents 0, 2, timestep 3, location 0
Swapping conflict! Agents 0, 2, timestep 3, edge (0,0)
Vertex conflict! Agents 0, 2, timestep 4, location 0
Swapping conflict! Agents 0, 2, timestep 4, edge (0,0)
Vertex conflict! Agents 0, 2, timestep 5, location 0
Vertex conflict! Agents 0, 3, timestep 1, location 0
Swapping conflict! Agents 0, 3, timestep 1, edge (0,0)
Vertex conflict! Agents 0, 3, timestep 2, location 0
Swapping conflict! Agents 0, 3, timestep 2, edge (0,0)
Vertex conflict! Agents 0, 3, timestep 3, location 0
Swapping conflict! Agents 0, 3, timestep 3, edge (0,0)
Vertex conflict! Agents 0, 3, timestep 4, location 0
Swapping conflict! Agents 0, 3, timestep 4, edge (0,0)
Vertex conflict! Agents 0, 3, timestep 5, location 0
Vertex conflict! Agents 0, 4, timestep 2, location 0
Swapping conflict! Agents 0, 4, timestep 2, edge (0,0)
Vertex conflict! Agents 0, 4, timestep 3, location 0
Swapping conflict! Agents 0, 4, timestep 3, edge (0,0)
Vertex conflict! Agents 0, 4, timestep 4, location 0
Swapping conflict! Agents 0, 4, timestep 4, edge (0,0)
Vertex conflict! Agents 0, 4, timestep 5, location 0
Vertex conflict! Agents 0, 6, timestep 4, location 0
Swapping conflict! Agents 0, 6, timestep 4, edge (0,0)
Vertex conflict! Agents 0, 6, timestep 5, location 0
Vertex conflict! Agents 0, 7, timestep 3, location 0
Swapping conflict! Agents 0, 7, timestep 3, edge (0,0)
Vertex conflict! Agents 0, 7, timestep 4, location 0
Swapping conflict! Agents 0, 7, timestep 4, edge (0,0)
Vertex conflict! Agents 0, 7, timestep 5, location 0
Vertex conflict! Agents 1, 2, timestep 4, location 0
Swapping conflict! Agents 1, 2, timestep 4, edge (0,0)
Vertex conflict! Agents 1, 2, timestep 5, location 0
Vertex conflict! Agents 1, 3, timestep 4, location 0
Swapping conflict! Agents 1, 3, timestep 4, edge (0,0)
Vertex conflict! Agents 1, 3, timestep 5, location 0
Vertex conflict! Agents 1, 4, timestep 4, location 0
Swapping conflict! Agents 1, 4, timestep 4, edge (0,0)
Vertex conflict! Agents 1, 4, timestep 5, location 0
Vertex conflict! Agents 1, 6, timestep 4, location 0
Swapping conflict! Agents 1, 6, timestep 4, edge (0,0)
Vertex conflict! Agents 1, 6, timestep 5, location 0
Vertex conflict! Agents 1, 7, timestep 4, location 0
Swapping conflict! Agents 1, 7, timestep 4, edge (0,0)
Vertex conflict! Agents 1, 7, timestep 5, location 0
Vertex conflict! Agents 2, 3, timestep 3, location 0
Swapping conflict! Agents 2, 3, timestep 3, edge (0,0)
Vertex conflict! Agents 2, 3, timestep 4, location 0
Swapping conflict! Agents 2, 3, timestep 4, edge (0,0)
Vertex conflict! Agents 2, 3, timestep 5, location 0
Vertex conflict! Agents 2, 4, timestep 3, location 0
Swapping conflict! Agents 2, 4, timestep 3, edge (0,0)
Vertex conflict! Agents 2, 4, timestep 4, location 0
Swapping conflict! Agents 2, 4, timestep 4, edge (0,0)
Vertex conflict! Agents 2, 4, timestep 5, location 0
Vertex conflict! Agents 2, 6, timestep 4, location 0
Swapping conflict! Agents 2, 6, timestep 4, edge (0,0)
Vertex conflict! Agents 2, 6, timestep 5, location 0
Vertex conflict! Agents 2, 7, timestep 3, location 0
Swapping conflict! Agents 2, 7, timestep 3, edge (0,0)
Vertex conflict! Agents 2, 7, timestep 4, location 0
Swapping conflict! Agents 2, 7, timestep 4, edge (0,0)
Vertex conflict! Agents 2, 7, timestep 5, location 0
Vertex conflict! Agents 3, 4, timestep 2, location 0
Swapping conflict! Agents 3, 4, timestep 2, edge (0,0)
Vertex conflict! Agents 3, 4, timestep 3, location 0
Swapping conflict! Agents 3, 4, timestep 3, edge (0,0)
Vertex conflict! Agents 3, 4, timestep 4, location 0
Swapping conflict! Agents 3, 4, timestep 4, edge (0,0)
Vertex conflict! Agents 3, 4, timestep 5, location 0
Vertex conflict! Agents 3, 6, timestep 4, location 0
Swapping conflict! Agents 3, 6, timestep 4, edge (0,0)
Vertex conflict! Agents 3, 6, timestep 5, location 0
Vertex conflict! Agents 3, 7, timestep 3, location 0
Swapping conflict! Agents 3, 7, timestep 3, edge (0,0)
Vertex conflict! Agents 3, 7, timestep 4, location 0
Swapping conflict! Agents 3, 7, timestep 4, edge (0,0)
Vertex conflict! Agents 3, 7, timestep 5, location 0
Vertex conflict! Agents 4, 6, timestep 4, location 0
Swapping conflict! Agents 4, 6, timestep 4, edge (0,0)
Vertex conflict! Agents 4, 6, timestep 5, location 0
Vertex conflict! Agents 4, 7, timestep 3, location 0
Swapping conflict! Agents 4, 7, timestep 3, edge (0,0)
Vertex conflict! Agents 4, 7, timestep 4, location 0
Swapping conflict! Agents 4, 7, timestep 4, edge (0,0)
Vertex conflict! Agents 4, 7, timestep 5, location 0
Vertex conflict! Agents 6, 7, timestep 4, location 0
Swapping conflict! Agents 6, 7, timestep 4, edge (0,0)
Vertex conflict! Agents 6, 7, timestep 5, location 0
Found plan [agents = 8] [timesteps = 6]
Agent #0 : 9 0 0 0 0 0 
Agent #1 : 10 11 14 15 0 0 
Agent #2 : 7 8 3 0 0 0 
Agent #3 : 16 0 0 0 0 0 
Agent #4 : 14 18 0 0 0 0 
Agent #5 : 4 5 6 7 8 3 
Agent #6 : 6 7 8 3 0 0 
Agent #7 : 11 14 18 0 0 0 

[STAT] Solver returned: 0
[DBG]  Agent (index) 19 | New local path (submap idx):
[DBG]  9 
[DBG]  Agent (index) 28 | New local path (submap idx):
[DBG]  10 11 14 15 
[DBG]  Agent (index) 46 | New local path (submap idx):
[DBG]  7 8 3 
[DBG]  Agent (index) 61 | New local path (submap idx):
[DBG]  16 
[DBG]  Agent (index) 70 | New local path (submap idx):
[DBG]  14 18 
[DBG]  Agent (index) 74 | New local path (submap idx):
[DBG]  4 5 6 7 8 3 
[DBG]  Agent (index) 86 | New local path (submap idx):
[DBG]  6 7 8 3 
[DBG]  Agent (index) 89 | New local path (submap idx):
[DBG]  11 14 18 
[DBG]  Update the agent path 19 | Original local length: 1 | New local length: 1
[DBG]  agent 19 t=0 => decoded (sx,sy)=(2,0) => global_id=689
[DBG]  Complete path of agent 19:
[DBG]    Original: 625 625 625 625 625 625 625 625 625 657 689 688 688 688 688 688 687 655 655 654 622 590 589 588 620 619 651 683 682 682 683 
[DBG]    New:     625 625 625 625 625 625 625 625 625 657 689 688 688 688 688 688 687 655 655 654 622 590 589 588 620 619 651 683 682 682 683 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 625 625 625 625 625 625 625 625 625 657 
[DBG]    Local path (in submap): 689 
[DBG]    Suffix (out of submap): 688 688 688 688 688 687 655 655 654 622 590 589 588 620 619 651 683 682 682 683 
[DBG]  Original agent path length 19 je: 31
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 0: 625, 625, 625, 625, 625, 625, 625, 625, 625, 657, 689, 688, 688, 688, 688, 688, 687, 655, 655, 654, 622, 590, 589, 588, 620, 619, 651, 683, 682, 682, 683, 
[DBG]  Path for agent 19 updated, resulting length: 31
[DBG]  Update the agent path 28 | Original local length: 45 | New local length: 4
[DBG]  agent 28 t=0 => decoded (sx,sy)=(2,2) => global_id=691
[DBG]  agent 28 t=1 => decoded (sx,sy)=(2,3) => global_id=692
[DBG]  agent 28 t=2 => decoded (sx,sy)=(3,3) => global_id=724
[DBG]  agent 28 t=3 => decoded (sx,sy)=(3,4) => global_id=725
[DBG]  Complete path of agent 28:
[DBG]    Original: 661 661 660 660 660 692 691 691 691 691 691 691 691 659 659 659 659 659 659 659 660 660 660 660 660 660 660 660 660 659 659 660 692 724 756 757 757 757 757 757 757 757 757 757 757 757 757 757 757 757 757 757 757 757 725 726 727 
[DBG]    New:     661 661 660 660 660 692 691 691 691 691 691 692 724 725 726 727 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 661 661 660 660 660 692 691 691 691 691 
[DBG]    Local path (in submap): 691 692 724 725 726 727 
[DBG]    Suffix (out of submap): 
[DBG]  Original agent path length 28 je: 57
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 1: 661, 661, 660, 660, 660, 692, 691, 691, 691, 691, 691, 692, 724, 725, 726, 727, 
[DBG]  Path for agent 28 updated, resulting length: 16
[DBG]  Update the agent path 46 | Original local length: 3 | New local length: 3
[DBG]  agent 46 t=0 => decoded (sx,sy)=(1,3) => global_id=660
[DBG]  agent 46 t=1 => decoded (sx,sy)=(1,4) => global_id=661
[DBG]  agent 46 t=2 => decoded (sx,sy)=(0,4) => global_id=629
[DBG]  Complete path of agent 46:
[DBG]    Original: 786 787 755 756 724 725 724 692 660 659 660 628 629 597 565 533 533 501 501 501 502 503 504 472 473 474 475 443 411 412 380 348 349 317 285 284 252 
[DBG]    New:     786 787 755 756 724 725 724 692 660 659 660 661 629 597 565 533 533 501 501 501 502 503 504 472 473 474 475 443 411 412 380 348 349 317 285 284 252 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 786 787 755 756 724 725 724 692 660 659 
[DBG]    Local path (in submap): 660 661 629 
[DBG]    Suffix (out of submap): 597 565 533 533 501 501 501 502 503 504 472 473 474 475 443 411 412 380 348 349 317 285 284 252 
[DBG]  Original agent path length 46 je: 37
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 2: 786, 787, 755, 756, 724, 725, 724, 692, 660, 659, 660, 661, 629, 597, 565, 533, 533, 501, 501, 501, 502, 503, 504, 472, 473, 474, 475, 443, 411, 412, 380, 348, 349, 317, 285, 284, 252, 
[DBG]  Path for agent 46 updated, resulting length: 37
[DBG]  Update the agent path 61 | Original local length: 3 | New local length: 1
[DBG]  agent 61 t=0 => decoded (sx,sy)=(4,0) => global_id=753
[DBG]  Complete path of agent 61:
[DBG]    Original: 813 813 813 845 846 847 815 783 784 752 753 753 753 752 720 720 720 688 656 657 625 593 561 529 530 498 498 498 498 498 466 467 468 469 437 405 406 407 408 376 377 345 313 
[DBG]    New:     813 813 813 845 846 847 815 783 784 752 753 752 720 720 720 688 656 657 625 593 561 529 530 498 498 498 498 498 466 467 468 469 437 405 406 407 408 376 377 345 313 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 813 813 813 845 846 847 815 783 784 752 
[DBG]    Local path (in submap): 753 752 720 
[DBG]    Suffix (out of submap): 720 720 688 656 657 625 593 561 529 530 498 498 498 498 498 466 467 468 469 437 405 406 407 408 376 377 345 313 
[DBG]  Original agent path length 61 je: 43
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 3: 813, 813, 813, 845, 846, 847, 815, 783, 784, 752, 753, 752, 720, 720, 720, 688, 656, 657, 625, 593, 561, 529, 530, 498, 498, 498, 498, 498, 466, 467, 468, 469, 437, 405, 406, 407, 408, 376, 377, 345, 313, 
[DBG]  Path for agent 61 updated, resulting length: 41
[DBG]  Update the agent path 70 | Original local length: 2 | New local length: 2
[DBG]  agent 70 t=0 => decoded (sx,sy)=(3,3) => global_id=724
[DBG]  agent 70 t=1 => decoded (sx,sy)=(4,3) => global_id=756
[DBG]  Complete path of agent 70:
[DBG]    Original: 632 633 633 632 664 696 728 727 726 725 724 756 788 820 819 818 850 850 850 882 914 913 912 944 976 975 974 
[DBG]    New:     632 633 633 632 664 696 728 727 726 725 724 756 788 820 819 818 850 850 850 882 914 913 912 944 976 975 974 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 632 633 633 632 664 696 728 727 726 725 
[DBG]    Local path (in submap): 724 756 
[DBG]    Suffix (out of submap): 788 820 819 818 850 850 850 882 914 913 912 944 976 975 974 
[DBG]  Original agent path length 70 je: 27
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 4: 632, 633, 633, 632, 664, 696, 728, 727, 726, 725, 724, 756, 788, 820, 819, 818, 850, 850, 850, 882, 914, 913, 912, 944, 976, 975, 974, 
[DBG]  Path for agent 70 updated, resulting length: 27
[DBG]  Update the agent path 74 | Original local length: 6 | New local length: 6
[DBG]  agent 74 t=0 => decoded (sx,sy)=(1,0) => global_id=657
[DBG]  agent 74 t=1 => decoded (sx,sy)=(1,1) => global_id=658
[DBG]  agent 74 t=2 => decoded (sx,sy)=(1,2) => global_id=659
[DBG]  agent 74 t=3 => decoded (sx,sy)=(1,3) => global_id=660
[DBG]  agent 74 t=4 => decoded (sx,sy)=(1,4) => global_id=661
[DBG]  agent 74 t=5 => decoded (sx,sy)=(0,4) => global_id=629
[DBG]  Complete path of agent 74:
[DBG]    Original: 752 751 751 750 718 686 687 655 656 656 657 658 659 660 661 629 597 565 533 533 501 502 503 504 
[DBG]    New:     752 751 751 750 718 686 687 655 656 656 657 658 659 660 661 629 597 565 533 533 501 502 503 504 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 752 751 751 750 718 686 687 655 656 656 
[DBG]    Local path (in submap): 657 658 659 660 661 629 
[DBG]    Suffix (out of submap): 597 565 533 533 501 502 503 504 
[DBG]  Original agent path length 74 je: 24
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 5: 752, 751, 751, 750, 718, 686, 687, 655, 656, 656, 657, 658, 659, 660, 661, 629, 597, 565, 533, 533, 501, 502, 503, 504, 
[DBG]  Path for agent 74 updated, resulting length: 24
[DBG]  Update the agent path 86 | Original local length: 4 | New local length: 4
[DBG]  agent 86 t=0 => decoded (sx,sy)=(1,2) => global_id=659
[DBG]  agent 86 t=1 => decoded (sx,sy)=(1,3) => global_id=660
[DBG]  agent 86 t=2 => decoded (sx,sy)=(1,4) => global_id=661
[DBG]  agent 86 t=3 => decoded (sx,sy)=(0,4) => global_id=629
[DBG]  Complete path of agent 86:
[DBG]    Original: 781 782 750 718 686 687 688 689 657 658 659 660 628 629 597 565 566 534 534 502 503 504 505 506 538 539 540 541 
[DBG]    New:     781 782 750 718 686 687 688 689 657 658 659 660 661 629 597 565 566 534 534 502 503 504 505 506 538 539 540 541 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 781 782 750 718 686 687 688 689 657 658 
[DBG]    Local path (in submap): 659 660 661 629 
[DBG]    Suffix (out of submap): 597 565 566 534 534 502 503 504 505 506 538 539 540 541 
[DBG]  Original agent path length 86 je: 28
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 6: 781, 782, 750, 718, 686, 687, 688, 689, 657, 658, 659, 660, 661, 629, 597, 565, 566, 534, 534, 502, 503, 504, 505, 506, 538, 539, 540, 541, 
[DBG]  Path for agent 86 updated, resulting length: 28
[DBG]  Update the agent path 89 | Original local length: 3 | New local length: 3
[DBG]  agent 89 t=0 => decoded (sx,sy)=(2,3) => global_id=692
[DBG]  agent 89 t=1 => decoded (sx,sy)=(3,3) => global_id=724
[DBG]  agent 89 t=2 => decoded (sx,sy)=(4,3) => global_id=756
[DBG]  Complete path of agent 89:
[DBG]    Original: 437 469 501 533 565 597 629 661 661 660 692 724 756 788 820 819 820 821 822 854 886 918 950 982 983 1015 
[DBG]    New:     437 469 501 533 565 597 629 661 661 660 692 724 756 788 820 819 820 821 822 854 886 918 950 982 983 1015 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 437 469 501 533 565 597 629 661 661 660 
[DBG]    Local path (in submap): 692 724 756 
[DBG]    Suffix (out of submap): 788 820 819 820 821 822 854 886 918 950 982 983 1015 
[DBG]  Original agent path length 89 je: 26
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 7: 437, 469, 501, 533, 565, 597, 629, 661, 661, 660, 692, 724, 756, 788, 820, 819, 820, 821, 822, 854, 886, 918, 950, 982, 983, 1015, 
[DBG]  Path for agent 89 updated, resulting length: 26
[DBG]  Paths successfully updated.
[DBG]  (LNS.cpp) New path for agent 19: 
[DBG]  625, 625, 625, 625, 625, 625, 625, 625, 625, 657, 689, 688, 688, 688, 688, 688, 687, 655, 655, 654, 622, 590, 589, 588, 620, 619, 651, 683, 682, 682, 683, 
[DBG]  (LNS.cpp) New path for agent 28: 
[DBG]  661, 661, 660, 660, 660, 692, 691, 691, 691, 691, 691, 692, 724, 725, 726, 727, 
[DBG]  (LNS.cpp) New path for agent 46: 
[DBG]  786, 787, 755, 756, 724, 725, 724, 692, 660, 659, 660, 661, 629, 597, 565, 533, 533, 501, 501, 501, 502, 503, 504, 472, 473, 474, 475, 443, 411, 412, 380, 348, 349, 317, 285, 284, 252, 
[DBG]  (LNS.cpp) New path for agent 61: 
[DBG]  813, 813, 813, 845, 846, 847, 815, 783, 784, 752, 753, 752, 720, 720, 720, 688, 656, 657, 625, 593, 561, 529, 530, 498, 498, 498, 498, 498, 466, 467, 468, 469, 437, 405, 406, 407, 408, 376, 377, 345, 313, 
[DBG]  (LNS.cpp) New path for agent 70: 
[DBG]  632, 633, 633, 632, 664, 696, 728, 727, 726, 725, 724, 756, 788, 820, 819, 818, 850, 850, 850, 882, 914, 913, 912, 944, 976, 975, 974, 
[DBG]  (LNS.cpp) New path for agent 74: 
[DBG]  752, 751, 751, 750, 718, 686, 687, 655, 656, 656, 657, 658, 659, 660, 661, 629, 597, 565, 533, 533, 501, 502, 503, 504, 
[DBG]  (LNS.cpp) New path for agent 86: 
[DBG]  781, 782, 750, 718, 686, 687, 688, 689, 657, 658, 659, 660, 661, 629, 597, 565, 566, 534, 534, 502, 503, 504, 505, 506, 538, 539, 540, 541, 
[DBG]  (LNS.cpp) New path for agent 89: 
[DBG]  437, 469, 501, 533, 565, 597, 629, 661, 661, 660, 692, 724, 756, 788, 820, 819, 820, 821, 822, 854, 886, 918, 950, 982, 983, 1015, 
[DBG]  Delta value: 0.162264
[DBG]  Rewarding metric index = 1
[DBG]  component_weights = {0.321443, 0.370783, 0.103673, 0.2041}
[DBG]  opSuccess value: 1
[STAT] neighbor.sum_of_costs before recomputation: 222
[STAT] neighbor.old_sum_of_costs before recomputation: 265
[STAT] sum_of_costs before recomputation: 4388
[DBG]  Validate solution immediately after SAT success.
[WARNING] Problem after SAT: Vertex conflict between agents 19 and 61 at location 688 at timestep 15
[DBG]  [DEBUG] Attempting immediate repair via init_lns because problem occurred after SAT (should be applied only for conflicts...).
[DBG]  [DEBUG] Passing 150 agents to init_lns (skip=true).
[DBG]  [DEBUG] path_table contents for selected agents (neighbor.agents):
[DBG]    Agent 19 => controlling path length=31
[DBG]    Agent 28 => controlling path length=16
[DBG]    Agent 46 => controlling path length=37
[DBG]    Agent 61 => controlling path length=41
[DBG]    Agent 70 => controlling path length=27
[DBG]    Agent 74 => controlling path length=24
[DBG]    Agent 86 => controlling path length=28
[DBG]    Agent 89 => controlling path length=26
[DBG]  hodnota skip_initial_solution=1
[DBG]  We skip initialSolution => call buildCollisionData()
[DBG]  buildCollisionData() called – skip_initial_solution case.
[DBG]  Agents.size()=150, collision_graph.size()=150
[DBG]  agent 19 => updateCollidingPairs => foundCollision
[DBG]  agent 27 => updateCollidingPairs => foundCollision
[DBG]  agent 28 => updateCollidingPairs => foundCollision
[DBG]  agent 42 => updateCollidingPairs => foundCollision
[DBG]  agent 61 => updateCollidingPairs => foundCollision
[DBG]  agent 63 => updateCollidingPairs => foundCollision
[DBG]  agent 69 => updateCollidingPairs => foundCollision
[DBG]  agent 94 => updateCollidingPairs => foundCollision
[DBG]  agent 114 => updateCollidingPairs => foundCollision
[DBG]  Conflicting agent pairs:
[DBG]  agent 19 is in conflict with agent 61
[DBG]  agent 27 is in conflict with agent 61
[DBG]  agent 28 is in conflict with agent 42
[DBG]  agent 61 is in conflict with agent 63
[DBG]  agent 61 is in conflict with agent 69
[DBG]  agent 61 is in conflict with agent 94
[DBG]  agent 61 is in conflict with agent 114
[DBG]  buildCollisionData() => sum_of_costs=4345, num_of_colliding_pairs=7
[DBG]  buildCollisionData done => sum_of_costs=4345, num_of_colliding_pairs=7
[DBG]  sum_of_cost hodnota: 4345
[DBG]  After skip/init build => iteration_stats.back(): sum_of_costs=4345, collisions=7
[DEBUG] Using default neighbor generation strategy for conflicts: 1
[DEBUG] Using default neighbor generation strategy for conflicts: 2
	InitLNS(PP): runtime = 0.00187942, iterations = 3, colliding pairs = 0, initial colliding pairs = 7, solution cost = 4375, initial solution cost = 4345, failed iterations = 0
[DBG]  init_lns->sum_of_costs after init_lns->run: 4375
[DBG]  sum_of_costs after assignment from init_lns->run: 4375
[DBG]  Recomputing sum_of_cost by dividing neighbor.sum_of_costs and neighbor.old_sum_of_costs
[STAT] sum_of_costs after recomputation: 4375
[STAT] Iteration 41
[DBG]  Random chance did not select SAT operator (r=94), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 41
[DBG]  Random chance did not select SAT operator (r=38), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 41
[DBG]  Random chance did not select SAT operator (r=68), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 41
[DBG]  Random chance did not select SAT operator (r=37), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 41
[DBG]  Random chance did not select SAT operator (r=86), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 41
[DBG]  Using SAT operator (destroy+repair SAT).
[DBG]  ====================
[DBG]  SAT destroy operator called.
[DBG]  SAT heuristic: 2
[DBG]  key_agent_id: 28
[DBG]  key_agent_id global path length: 57
[DBG]  Submap content (global positions):
[DBG]  594 595 596 597 598 
[DBG]  626 627 628 629 630 
[DBG]  658 659 660 661 662 
[DBG]  690 691 692 693 694 
[DBG]  722 723 724 725 726 
[DBG]  Map content with agents and obstacles:
[DBG]  . X A . X 
[DBG]  X A . . X 
[DBG]  . . A . X 
[DBG]  X . A X X 
[DBG]  . X . . . 
[DBG]  content of the map structure that we pass to the SAT solver:
[DBG]  1  -1  1  1  -1  
[DBG]  -1  1  1  1  -1  
[DBG]  1  1  1  1  -1  
[DBG]  -1  1  1  -1  -1  
[DBG]  1  -1  1  1  1  
[DBG]  Identifying agents in a submap for rescheduling (when key_agent is there at the time 37):
[DBG]  Agent 28 found intervals in the sub-map:
[DBG]   [0..39] [54..55]
[DBG]  Agent 28 (interval in submap: [0..39]) contains time 37, added to replan.
[DBG]  Agent 55 found intervals in the sub-map:
[DBG]   [36..40]
[DBG]  Agent 55 (interval in submap: [36..40]) contains time 37, added to replan.
[DBG]  Agent 69 found intervals in the sub-map:
[DBG]   [34..38]
[DBG]  Agent 69 (interval in submap: [34..38]) contains time 37, added to replan.
[DBG]  Agent 148 found intervals in the sub-map:
[DBG]   [33..40]
[DBG]  Agent 148 (interval in submap: [33..40]) contains time 37, added to replan.
[DBG]  Agent 28 | Start (global): 660 -> (local): (2, 2) at time 37 | Goal (global): 724 -> (local): (4, 2) at time 39
[DBG]  Agent 55 | Start (global): 596 -> (local): (0, 2) at time 37 | Goal (global): 692 -> (local): (3, 2) at time 40
[DBG]  Agent 69 | Start (global): 692 -> (local): (3, 2) at time 37 | Goal (global): 724 -> (local): (4, 2) at time 38
[DBG]  Agent 148 | Start (global): 627 -> (local): (1, 1) at time 37 | Goal (global): 660 -> (local): (2, 2) at time 40
[DBG]  [REPAIR] SAT destroy operator called.
[DBG]  [REPAIR] SAT operator – launching subproblem FOR OPTIMIZATION.
[DBG]  Creating local paths (sx, sy) in the submap for T_sync = 37
[DBG]    Agent 28 (global paths from T=37 to 39) has local path: (2,2) (3,2) (4,2) 
[DBG]    Agent 55 (global paths from T=37 to 40) has local path: (0,2) (1,2) (2,2) (3,2) 
[DBG]    Agent 69 (global paths from T=37 to 38) has local path: (3,2) (4,2) 
[DBG]    Agent 148 (global paths from T=37 to 40) has local path: (1,1) (1,1) (1,2) (2,2) 
[DBG]  Checking input data for SAT solver:
[DBG]    - Number of agents to replan: 4
[DBG]  Agent 28 has the original local path length: 3 => Start (2,2), Goal (4,2)
[DBG]  Agent 55 has the original local path length: 4 => Start (0,2), Goal (3,2)
[DBG]  Agent 69 has the original local path length: 2 => Start (3,2), Goal (4,2)
[DBG]  Agent 148 has the original local path length: 4 => Start (1,1), Goal (2,2)
[DBG]  Start position: (2, 2), (0, 2), (3, 2), (1, 1), 
[DBG]  Goal position: (4, 2), (3, 2), (4, 2), (2, 2), 
[DBG]  SAT instance and solver created.
Currently solving
Instance name: scen
Map name: map
Encoding used: disappear_at_goal
SAT solver used: Kissat
Optimizing function: sum of costs
Number of agents: 4
Mks LB: 4
SoC LB: 12
Delta: 0
Remaining time: 300000 [ms]

[STAT] Solver returned: -1
[DBG]  SAT solver failed.
[STAT] SAT solver failed to find a valid solution.
[DBG]  ====================
[DBG]  SAT destroy operator called.
[DBG]  SAT heuristic: 2
[DBG]  key_agent_id: 28
[DBG]  key_agent_id global path length: 57
[DBG]  Submap content (global positions):
[DBG]  691 692 693 694 695 
[DBG]  723 724 725 726 727 
[DBG]  755 756 757 758 759 
[DBG]  787 788 789 790 791 
[DBG]  819 820 821 822 823 
[DBG]  Map content with agents and obstacles:
[DBG]  . . X X X 
[DBG]  X . . . . 
[DBG]  . . A X . 
[DBG]  . . X . X 
[DBG]  . . . . . 
[DBG]  content of the map structure that we pass to the SAT solver:
[DBG]  1  1  -1  -1  -1  
[DBG]  -1  1  1  1  1  
[DBG]  1  1  1  -1  1  
[DBG]  1  1  -1  1  -1  
[DBG]  1  1  1  1  1  
[DBG]  Identifying agents in a submap for rescheduling (when key_agent is there at the time 44):
[DBG]  Agent 28 found intervals in the sub-map:
[DBG]   [5..15] [38..56]
[DBG]  Agent 28 (interval in submap: [38..56]) contains time 44, added to replan.
[DBG]  Agent 42 found intervals in the sub-map:
[DBG]   [48..56]
[DBG]  Agent 42 is not in sub-map at time 44 (intervals: 
[DBG]  [48..56] )
[DBG]  Agent 28 | Start (global): 757 -> (local): (2, 2) at time 44 | Goal (global): 727 -> (local): (1, 4) at time 56
[DBG]  [REPAIR] SAT destroy operator called.
[DBG]  [REPAIR] SAT operator – launching subproblem FOR OPTIMIZATION.
[DBG]  Creating local paths (sx, sy) in the submap for T_sync = 44
[DBG]    Agent 28 (global paths from T=44 to 56) has local path: (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (1,2) (1,3) (1,4) 
[DBG]  Checking input data for SAT solver:
[DBG]    - Number of agents to replan: 1
[DBG]  Agent 28 has the original local path length: 13 => Start (2,2), Goal (1,4)
[DBG]  Start position: (2, 2), 
[DBG]  Goal position: (1, 4), 
[DBG]  SAT instance and solver created.
Currently solving
Instance name: scen
Map name: map
Encoding used: disappear_at_goal
SAT solver used: Kissat
Optimizing function: sum of costs
Number of agents: 1
Mks LB: 4
SoC LB: 4
Delta: 0
Remaining time: 300000 [ms]

Found plan [agents = 1] [timesteps = 4]
Agent #0 : 8 3 4 5 

[STAT] Solver returned: 0
[DBG]  Agent (index) 28 | New local path (submap idx):
[DBG]  8 3 4 5 
[DBG]  Update the agent path 28 | Original local length: 13 | New local length: 4
[DBG]  agent 28 t=0 => decoded (sx,sy)=(2,2) => global_id=757
[DBG]  agent 28 t=1 => decoded (sx,sy)=(1,2) => global_id=725
[DBG]  agent 28 t=2 => decoded (sx,sy)=(1,3) => global_id=726
[DBG]  agent 28 t=3 => decoded (sx,sy)=(1,4) => global_id=727
[DBG]  Complete path of agent 28:
[DBG]    Original: 661 661 660 660 660 692 691 691 691 691 691 691 691 691 691 691 659 659 659 659 660 660 660 660 660 660 660 660 660 659 659 660 660 660 660 660 660 660 692 724 756 757 757 757 757 757 757 757 757 757 757 757 757 757 725 726 727 
[DBG]    New:     661 661 660 660 660 692 691 691 691 691 691 691 691 691 691 691 659 659 659 659 660 660 660 660 660 660 660 660 660 659 659 660 660 660 660 660 660 660 692 724 756 757 757 757 757 725 726 727 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 661 661 660 660 660 692 691 691 691 691 691 691 691 691 691 691 659 659 659 659 660 660 660 660 660 660 660 660 660 659 659 660 660 660 660 660 660 660 692 724 756 757 757 757 
[DBG]    Local path (in submap): 757 725 726 727 
[DBG]    Suffix (out of submap): 
[DBG]  Original agent path length 28 je: 57
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 0: 661, 661, 660, 660, 660, 692, 691, 691, 691, 691, 691, 691, 691, 691, 691, 691, 659, 659, 659, 659, 660, 660, 660, 660, 660, 660, 660, 660, 660, 659, 659, 660, 660, 660, 660, 660, 660, 660, 692, 724, 756, 757, 757, 757, 757, 725, 726, 727, 
[DBG]  Path for agent 28 updated, resulting length: 48
[DBG]  Paths successfully updated.
[DBG]  (LNS.cpp) New path for agent 28: 
[DBG]  661, 661, 660, 660, 660, 692, 691, 691, 691, 691, 691, 691, 691, 691, 691, 691, 659, 659, 659, 659, 660, 660, 660, 660, 660, 660, 660, 660, 660, 659, 659, 660, 660, 660, 660, 660, 660, 660, 692, 724, 756, 757, 757, 757, 757, 725, 726, 727, 
[DBG]  Delta value: 0.160714
[DBG]  Rewarding metric index = 1
[DBG]  component_weights = {0.297016, 0.418598, 0.095795, 0.18859}
[DBG]  opSuccess value: 1
[STAT] neighbor.sum_of_costs before recomputation: 47
[STAT] neighbor.old_sum_of_costs before recomputation: 56
[STAT] sum_of_costs before recomputation: 4375
[DBG]  Validate solution immediately after SAT success.
[WARNING] Problem after SAT: Target conflict: agent 42 (len 56) traverses target of agent 28 (len 47) at location 727 at timestep 55
[DBG]  [DEBUG] Attempting immediate repair via init_lns because problem occurred after SAT (should be applied only for conflicts...).
[DBG]  [DEBUG] Passing 150 agents to init_lns (skip=true).
[DBG]  [DEBUG] path_table contents for selected agents (neighbor.agents):
[DBG]    Agent 28 => controlling path length=48
[DBG]  hodnota skip_initial_solution=1
[DBG]  We skip initialSolution => call buildCollisionData()
[DBG]  buildCollisionData() called – skip_initial_solution case.
[DBG]  Agents.size()=150, collision_graph.size()=150
[DBG]  agent 28 => updateCollidingPairs => foundCollision
[DBG]  agent 42 => updateCollidingPairs => foundCollision
[DBG]  Conflicting agent pairs:
[DBG]  agent 28 is in conflict with agent 42
[DBG]  buildCollisionData() => sum_of_costs=4366, num_of_colliding_pairs=1
[DBG]  buildCollisionData done => sum_of_costs=4366, num_of_colliding_pairs=1
[DBG]  sum_of_cost hodnota: 4366
[DBG]  After skip/init build => iteration_stats.back(): sum_of_costs=4366, collisions=1
[DEBUG] Using default neighbor generation strategy for conflicts: 2
[DEBUG] Using default neighbor generation strategy for conflicts: 0
	InitLNS(PP): runtime = 0.00217667, iterations = 3, colliding pairs = 0, initial colliding pairs = 1, solution cost = 4366, initial solution cost = 4366, failed iterations = 0
[DBG]  init_lns->sum_of_costs after init_lns->run: 4366
[DBG]  sum_of_costs after assignment from init_lns->run: 4366
[DBG]  Recomputing sum_of_cost by dividing neighbor.sum_of_costs and neighbor.old_sum_of_costs
[STAT] sum_of_costs after recomputation: 4366
[STAT] Iteration 42
[DBG]  Random chance did not select SAT operator (r=83), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 42
[DBG]  Random chance did not select SAT operator (r=26), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 42
[DBG]  Random chance did not select SAT operator (r=99), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 42
[DBG]  Random chance did not select SAT operator (r=22), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 42
[DBG]  Random chance did not select SAT operator (r=79), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 42
[DBG]  Random chance did not select SAT operator (r=18), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 42
[DBG]  Random chance did not select SAT operator (r=58), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 42
[DBG]  Random chance did not select SAT operator (r=22), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 42
[DBG]  Random chance did not select SAT operator (r=26), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 42
[DBG]  Random chance did not select SAT operator (r=85), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 42
[DBG]  Random chance did not select SAT operator (r=87), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 42
[DBG]  Random chance did not select SAT operator (r=61), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 42
[DBG]  Random chance did not select SAT operator (r=26), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 42
[DBG]  Random chance did not select SAT operator (r=23), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 42
[DBG]  Random chance did not select SAT operator (r=52), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 42
[DBG]  Random chance did not select SAT operator (r=95), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 42
[DBG]  Random chance did not select SAT operator (r=14), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 42
[DBG]  Random chance did not select SAT operator (r=83), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 42
[DBG]  Random chance did not select SAT operator (r=55), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 42
[DBG]  Random chance did not select SAT operator (r=95), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 42
[DBG]  Random chance did not select SAT operator (r=10), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 42
[DBG]  Random chance did not select SAT operator (r=23), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 42
[DBG]  Random chance did not select SAT operator (r=67), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 42
[DBG]  Random chance did not select SAT operator (r=22), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 42
[DBG]  Random chance did not select SAT operator (r=87), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 42
[DBG]  Using SAT operator (destroy+repair SAT).
[DBG]  ====================
[DBG]  SAT destroy operator called.
[DBG]  SAT heuristic: 2
[DBG]  key_agent_id: 28
[DBG]  key_agent_id global path length: 57
[DBG]  Submap content (global positions):
[DBG]  595 596 597 598 599 
[DBG]  627 628 629 630 631 
[DBG]  659 660 661 662 663 
[DBG]  691 692 693 694 695 
[DBG]  723 724 725 726 727 
[DBG]  Map content with agents and obstacles:
[DBG]  X A A X . 
[DBG]  . A . X . 
[DBG]  A . A X X 
[DBG]  . . X X X 
[DBG]  X . . . . 
[DBG]  content of the map structure that we pass to the SAT solver:
[DBG]  -1  1  1  -1  1  
[DBG]  1  1  1  -1  1  
[DBG]  1  1  1  -1  -1  
[DBG]  1  1  -1  -1  -1  
[DBG]  -1  1  1  1  1  
[DBG]  Identifying agents in a submap for rescheduling (when key_agent is there at the time 28):
[DBG]  Agent 11 found intervals in the sub-map:
[DBG]   [25..28]
[DBG]  Agent 11 (interval in submap: [25..28]) contains time 28, added to replan.
[DBG]  Agent 26 found intervals in the sub-map:
[DBG]   [27..32]
[DBG]  Agent 26 (interval in submap: [27..32]) contains time 28, added to replan.
[DBG]  Agent 28 found intervals in the sub-map:
[DBG]   [0..39] [54..56]
[DBG]  Agent 28 (interval in submap: [0..39]) contains time 28, added to replan.
[DBG]  Agent 56 found intervals in the sub-map:
[DBG]   [23..28]
[DBG]  Agent 56 (interval in submap: [23..28]) contains time 28, added to replan.
[DBG]  Agent 62 found intervals in the sub-map:
[DBG]   [25..30]
[DBG]  Agent 62 (interval in submap: [25..30]) contains time 28, added to replan.
[DBG]  Agent 11 | Start (global): 659 -> (local): (2, 0) at time 28 | Goal (global): 659 -> (local): (2, 0) at time 28
[DBG]  Agent 26 | Start (global): 596 -> (local): (0, 1) at time 28 | Goal (global): 724 -> (local): (4, 1) at time 32
[DBG]  Agent 28 | Start (global): 661 -> (local): (2, 2) at time 28 | Goal (global): 724 -> (local): (4, 1) at time 39
[DBG]  Agent 56 | Start (global): 597 -> (local): (0, 2) at time 28 | Goal (global): 597 -> (local): (0, 2) at time 28
[DBG]  Agent 62 | Start (global): 628 -> (local): (1, 1) at time 28 | Goal (global): 597 -> (local): (0, 2) at time 30
[DBG]  [REPAIR] SAT destroy operator called.
[DBG]  [REPAIR] SAT operator – launching subproblem FOR OPTIMIZATION.
[DBG]  Creating local paths (sx, sy) in the submap for T_sync = 28
[DBG]    Agent 11 (global paths from T=28 to 28) has local path: (2,0) 
[DBG]    Agent 26 (global paths from T=28 to 32) has local path: (0,1) (1,1) (2,1) (3,1) (4,1) 
[DBG]    Agent 28 (global paths from T=28 to 39) has local path: (2,2) (2,2) (2,2) (2,1) (2,1) (2,1) (2,1) (2,1) (2,1) (2,1) (3,1) (4,1) 
[DBG]    Agent 56 (global paths from T=28 to 28) has local path: (0,2) 
[DBG]    Agent 62 (global paths from T=28 to 30) has local path: (1,1) (1,2) (0,2) 
[DBG]  Checking input data for SAT solver:
[DBG]    - Number of agents to replan: 5
[DBG]  Agent 11 has the original local path length: 1 => Start (2,0), Goal (2,0)
[DBG]  Agent 26 has the original local path length: 5 => Start (0,1), Goal (4,1)
[DBG]  Agent 28 has the original local path length: 12 => Start (2,2), Goal (4,1)
[DBG]  Agent 56 has the original local path length: 1 => Start (0,2), Goal (0,2)
[DBG]  Agent 62 has the original local path length: 3 => Start (1,1), Goal (0,2)
[DBG]  Start position: (2, 0), (0, 1), (2, 2), (0, 2), (1, 1), 
[DBG]  Goal position: (2, 0), (4, 1), (4, 1), (0, 2), (0, 2), 
[DBG]  SAT instance and solver created.
Currently solving
Instance name: scen
Map name: map
Encoding used: disappear_at_goal
SAT solver used: Kissat
Optimizing function: sum of costs
Number of agents: 5
Mks LB: 5
SoC LB: 14
Delta: 0
Remaining time: 300000 [ms]

Vertex conflict! Agents 0, 2, timestep 4, location 0
Vertex conflict! Agents 0, 3, timestep 1, location 0
Swapping conflict! Agents 0, 3, timestep 1, edge (0,0)
Vertex conflict! Agents 0, 3, timestep 2, location 0
Swapping conflict! Agents 0, 3, timestep 2, edge (0,0)
Vertex conflict! Agents 0, 3, timestep 3, location 0
Swapping conflict! Agents 0, 3, timestep 3, edge (0,0)
Vertex conflict! Agents 0, 3, timestep 4, location 0
Vertex conflict! Agents 0, 4, timestep 3, location 0
Swapping conflict! Agents 0, 4, timestep 3, edge (0,0)
Vertex conflict! Agents 0, 4, timestep 4, location 0
Vertex conflict! Agents 2, 3, timestep 4, location 0
Vertex conflict! Agents 2, 4, timestep 4, location 0
Vertex conflict! Agents 3, 4, timestep 3, location 0
Swapping conflict! Agents 3, 4, timestep 3, edge (0,0)
Vertex conflict! Agents 3, 4, timestep 4, location 0
Found plan [agents = 5] [timesteps = 5]
Agent #0 : 7 0 0 0 0 
Agent #1 : 0 4 8 11 12 
Agent #2 : 9 8 11 12 0 
Agent #3 : 1 0 0 0 0 
Agent #4 : 4 5 1 0 0 

[STAT] Solver returned: 0
[DBG]  Agent (index) 11 | New local path (submap idx):
[DBG]  7 
[DBG]  Agent (index) 26 | New local path (submap idx):
[DBG]  0 4 8 11 12 
[DBG]  Agent (index) 28 | New local path (submap idx):
[DBG]  9 8 11 12 
[DBG]  Agent (index) 56 | New local path (submap idx):
[DBG]  1 
[DBG]  Agent (index) 62 | New local path (submap idx):
[DBG]  4 5 1 
[DBG]  Update the agent path 11 | Original local length: 1 | New local length: 1
[DBG]  agent 11 t=0 => decoded (sx,sy)=(2,0) => global_id=659
[DBG]  Complete path of agent 11:
[DBG]    Original: 990 990 990 990 990 989 957 956 955 923 922 890 858 858 858 857 856 855 823 823 822 821 820 788 756 724 692 691 659 658 657 656 656 656 657 
[DBG]    New:     990 990 990 990 990 989 957 956 955 923 922 890 858 858 858 857 856 855 823 823 822 821 820 788 756 724 692 691 659 658 657 656 656 656 657 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 990 990 990 990 990 989 957 956 955 923 922 890 858 858 858 857 856 855 823 823 822 821 820 788 756 724 692 691 
[DBG]    Local path (in submap): 659 
[DBG]    Suffix (out of submap): 658 657 656 656 656 657 
[DBG]  Original agent path length 11 je: 35
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 0: 990, 990, 990, 990, 990, 989, 957, 956, 955, 923, 922, 890, 858, 858, 858, 857, 856, 855, 823, 823, 822, 821, 820, 788, 756, 724, 692, 691, 659, 658, 657, 656, 656, 656, 657, 
[DBG]  Path for agent 11 updated, resulting length: 35
[DBG]  Update the agent path 26 | Original local length: 5 | New local length: 5
[DBG]  agent 26 t=0 => decoded (sx,sy)=(0,1) => global_id=596
[DBG]  agent 26 t=1 => decoded (sx,sy)=(1,1) => global_id=628
[DBG]  agent 26 t=2 => decoded (sx,sy)=(2,1) => global_id=660
[DBG]  agent 26 t=3 => decoded (sx,sy)=(3,1) => global_id=692
[DBG]  agent 26 t=4 => decoded (sx,sy)=(4,1) => global_id=724
[DBG]  Complete path of agent 26:
[DBG]    Original: 13 14 15 47 79 80 81 82 83 84 116 148 180 212 244 276 277 309 341 373 405 437 469 501 501 533 565 597 596 628 660 692 724 756 755 
[DBG]    New:     13 14 15 47 79 80 81 82 83 84 116 148 180 212 244 276 277 309 341 373 405 437 469 501 501 533 565 597 596 628 660 692 724 756 755 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 13 14 15 47 79 80 81 82 83 84 116 148 180 212 244 276 277 309 341 373 405 437 469 501 501 533 565 597 
[DBG]    Local path (in submap): 596 628 660 692 724 
[DBG]    Suffix (out of submap): 756 755 
[DBG]  Original agent path length 26 je: 35
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 1: 13, 14, 15, 47, 79, 80, 81, 82, 83, 84, 116, 148, 180, 212, 244, 276, 277, 309, 341, 373, 405, 437, 469, 501, 501, 533, 565, 597, 596, 628, 660, 692, 724, 756, 755, 
[DBG]  Path for agent 26 updated, resulting length: 35
[DBG]  Update the agent path 28 | Original local length: 12 | New local length: 4
[DBG]  agent 28 t=0 => decoded (sx,sy)=(2,2) => global_id=661
[DBG]  agent 28 t=1 => decoded (sx,sy)=(2,1) => global_id=660
[DBG]  agent 28 t=2 => decoded (sx,sy)=(3,1) => global_id=692
[DBG]  agent 28 t=3 => decoded (sx,sy)=(4,1) => global_id=724
[DBG]  Complete path of agent 28:
[DBG]    Original: 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 660 660 660 660 660 660 660 692 724 756 757 757 757 757 757 757 757 757 757 757 757 757 757 725 726 727 
[DBG]    New:     661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 660 692 724 756 757 757 757 757 757 757 757 757 757 757 757 757 757 725 726 727 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 
[DBG]    Local path (in submap): 661 660 692 724 756 757 757 757 757 757 757 757 
[DBG]    Suffix (out of submap): 757 757 757 757 757 757 725 726 727 
[DBG]  Original agent path length 28 je: 57
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 2: 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 660, 692, 724, 756, 757, 757, 757, 757, 757, 757, 757, 757, 757, 757, 757, 757, 757, 725, 726, 727, 
[DBG]  Path for agent 28 updated, resulting length: 49
[DBG]  Update the agent path 56 | Original local length: 1 | New local length: 1
[DBG]  agent 56 t=0 => decoded (sx,sy)=(0,2) => global_id=597
[DBG]  Complete path of agent 56:
[DBG]    Original: 805 773 741 709 710 678 646 647 648 649 650 651 683 684 685 686 654 622 623 655 656 657 658 659 627 628 629 629 597 565 566 534 502 470 438 439 407 408 409 377 378 379 380 412 413 414 415 383 351 319 287 255 
[DBG]    New:     805 773 741 709 710 678 646 647 648 649 650 651 683 684 685 686 654 622 623 655 656 657 658 659 627 628 629 629 597 565 566 534 502 470 438 439 407 408 409 377 378 379 380 412 413 414 415 383 351 319 287 255 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 805 773 741 709 710 678 646 647 648 649 650 651 683 684 685 686 654 622 623 655 656 657 658 659 627 628 629 629 
[DBG]    Local path (in submap): 597 
[DBG]    Suffix (out of submap): 565 566 534 502 470 438 439 407 408 409 377 378 379 380 412 413 414 415 383 351 319 287 255 
[DBG]  Original agent path length 56 je: 52
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 3: 805, 773, 741, 709, 710, 678, 646, 647, 648, 649, 650, 651, 683, 684, 685, 686, 654, 622, 623, 655, 656, 657, 658, 659, 627, 628, 629, 629, 597, 565, 566, 534, 502, 470, 438, 439, 407, 408, 409, 377, 378, 379, 380, 412, 413, 414, 415, 383, 351, 319, 287, 255, 
[DBG]  Path for agent 56 updated, resulting length: 52
[DBG]  Update the agent path 62 | Original local length: 3 | New local length: 3
[DBG]  agent 62 t=0 => decoded (sx,sy)=(1,1) => global_id=628
[DBG]  agent 62 t=1 => decoded (sx,sy)=(1,2) => global_id=629
[DBG]  agent 62 t=2 => decoded (sx,sy)=(0,2) => global_id=597
[DBG]  Complete path of agent 62:
[DBG]    Original: 753 753 753 753 753 753 752 720 720 720 719 719 751 750 751 719 719 720 720 719 687 655 656 657 658 659 627 627 628 629 597 565 533 534 502 470 438 406 
[DBG]    New:     753 753 753 753 753 753 752 720 720 720 719 719 751 750 751 719 719 720 720 719 687 655 656 657 658 659 627 627 628 629 597 565 533 534 502 470 438 406 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 753 753 753 753 753 753 752 720 720 720 719 719 751 750 751 719 719 720 720 719 687 655 656 657 658 659 627 627 
[DBG]    Local path (in submap): 628 629 597 
[DBG]    Suffix (out of submap): 565 533 534 502 470 438 406 
[DBG]  Original agent path length 62 je: 38
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 4: 753, 753, 753, 753, 753, 753, 752, 720, 720, 720, 719, 719, 751, 750, 751, 719, 719, 720, 720, 719, 687, 655, 656, 657, 658, 659, 627, 627, 628, 629, 597, 565, 533, 534, 502, 470, 438, 406, 
[DBG]  Path for agent 62 updated, resulting length: 38
[DBG]  Paths successfully updated.
[DBG]  (LNS.cpp) New path for agent 11: 
[DBG]  990, 990, 990, 990, 990, 989, 957, 956, 955, 923, 922, 890, 858, 858, 858, 857, 856, 855, 823, 823, 822, 821, 820, 788, 756, 724, 692, 691, 659, 658, 657, 656, 656, 656, 657, 
[DBG]  (LNS.cpp) New path for agent 26: 
[DBG]  13, 14, 15, 47, 79, 80, 81, 82, 83, 84, 116, 148, 180, 212, 244, 276, 277, 309, 341, 373, 405, 437, 469, 501, 501, 533, 565, 597, 596, 628, 660, 692, 724, 756, 755, 
[DBG]  (LNS.cpp) New path for agent 28: 
[DBG]  661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 660, 692, 724, 756, 757, 757, 757, 757, 757, 757, 757, 757, 757, 757, 757, 757, 757, 725, 726, 727, 
[DBG]  (LNS.cpp) New path for agent 56: 
[DBG]  805, 773, 741, 709, 710, 678, 646, 647, 648, 649, 650, 651, 683, 684, 685, 686, 654, 622, 623, 655, 656, 657, 658, 659, 627, 628, 629, 629, 597, 565, 566, 534, 502, 470, 438, 439, 407, 408, 409, 377, 378, 379, 380, 412, 413, 414, 415, 383, 351, 319, 287, 255, 
[DBG]  (LNS.cpp) New path for agent 62: 
[DBG]  753, 753, 753, 753, 753, 753, 752, 720, 720, 720, 719, 719, 751, 750, 751, 719, 719, 720, 720, 719, 687, 655, 656, 657, 658, 659, 627, 627, 628, 629, 597, 565, 533, 534, 502, 470, 438, 406, 
[DBG]  Delta value: 0.0377358
[DBG]  Rewarding metric index = 1
[DBG]  component_weights = {0.285961, 0.440238, 0.0922295, 0.181571}
[DBG]  opSuccess value: 1
[STAT] neighbor.sum_of_costs before recomputation: 204
[STAT] neighbor.old_sum_of_costs before recomputation: 212
[STAT] sum_of_costs before recomputation: 4366
[DBG]  Validate solution immediately after SAT success.
[WARNING] Problem after SAT: Target conflict: agent 42 (len 56) traverses target of agent 28 (len 48) at location 727 at timestep 55
[DBG]  [DEBUG] Attempting immediate repair via init_lns because problem occurred after SAT (should be applied only for conflicts...).
[DBG]  [DEBUG] Passing 150 agents to init_lns (skip=true).
[DBG]  [DEBUG] path_table contents for selected agents (neighbor.agents):
[DBG]    Agent 11 => controlling path length=35
[DBG]    Agent 26 => controlling path length=35
[DBG]    Agent 28 => controlling path length=49
[DBG]    Agent 56 => controlling path length=52
[DBG]    Agent 62 => controlling path length=38
[DBG]  hodnota skip_initial_solution=1
[DBG]  We skip initialSolution => call buildCollisionData()
[DBG]  buildCollisionData() called – skip_initial_solution case.
[DBG]  Agents.size()=150, collision_graph.size()=150
[DBG]  agent 28 => updateCollidingPairs => foundCollision
[DBG]  agent 42 => updateCollidingPairs => foundCollision
[DBG]  Conflicting agent pairs:
[DBG]  agent 28 is in conflict with agent 42
[DBG]  buildCollisionData() => sum_of_costs=4358, num_of_colliding_pairs=1
[DBG]  buildCollisionData done => sum_of_costs=4358, num_of_colliding_pairs=1
[DBG]  sum_of_cost hodnota: 4358
[DBG]  After skip/init build => iteration_stats.back(): sum_of_costs=4358, collisions=1
[DEBUG] Using default neighbor generation strategy for conflicts: 2
[DEBUG] Using default neighbor generation strategy for conflicts: 1
	InitLNS(PP): runtime = 0.00304712, iterations = 3, colliding pairs = 0, initial colliding pairs = 1, solution cost = 4353, initial solution cost = 4358, failed iterations = 0
[DBG]  init_lns->sum_of_costs after init_lns->run: 4353
[DBG]  sum_of_costs after assignment from init_lns->run: 4353
[DBG]  Recomputing sum_of_cost by dividing neighbor.sum_of_costs and neighbor.old_sum_of_costs
[STAT] sum_of_costs after recomputation: 4353
[STAT] Iteration 43
[DBG]  Using SAT operator (destroy+repair SAT).
[DBG]  ====================
[DBG]  SAT destroy operator called.
[DBG]  SAT heuristic: 2
[DBG]  key_agent_id: 28
[DBG]  key_agent_id global path length: 44
[DBG]  Submap content (global positions):
[DBG]  595 596 597 598 599 
[DBG]  627 628 629 630 631 
[DBG]  659 660 661 662 663 
[DBG]  691 692 693 694 695 
[DBG]  723 724 725 726 727 
[DBG]  Map content with agents and obstacles:
[DBG]  X . . X . 
[DBG]  . . . X . 
[DBG]  . A A X X 
[DBG]  . . X X X 
[DBG]  X . . . A 
[DBG]  content of the map structure that we pass to the SAT solver:
[DBG]  -1  1  1  -1  1  
[DBG]  1  1  1  -1  1  
[DBG]  1  1  1  -1  -1  
[DBG]  1  1  -1  -1  -1  
[DBG]  -1  1  1  1  1  
[DBG]  Identifying agents in a submap for rescheduling (when key_agent is there at the time 1):
[DBG]  Agent 7 found intervals in the sub-map:
[DBG]  
[DBG]  Agent 7 is not in sub-map at time 1 (intervals: 
[DBG]  )
[DBG]  Agent 12 found intervals in the sub-map:
[DBG]   [0..1]
[DBG]  Agent 12 (interval in submap: [0..1]) contains time 1, added to replan.
[DBG]  Agent 28 found intervals in the sub-map:
[DBG]   [0..16] [35..43]
[DBG]  Agent 28 (interval in submap: [0..16]) contains time 1, added to replan.
[DBG]  Agent 108 found intervals in the sub-map:
[DBG]   [0..5]
[DBG]  Agent 108 (interval in submap: [0..5]) contains time 1, added to replan.
[DBG]  Agent 12 | Start (global): 727 -> (local): (4, 4) at time 1 | Goal (global): 727 -> (local): (4, 4) at time 1
[DBG]  Agent 28 | Start (global): 661 -> (local): (2, 2) at time 1 | Goal (global): 597 -> (local): (0, 2) at time 16
[DBG]  Agent 108 | Start (global): 660 -> (local): (2, 1) at time 1 | Goal (global): 724 -> (local): (4, 1) at time 5
[DBG]  [REPAIR] SAT destroy operator called.
[DBG]  [REPAIR] SAT operator – launching subproblem FOR OPTIMIZATION.
[DBG]  Creating local paths (sx, sy) in the submap for T_sync = 1
[DBG]    Agent 12 (global paths from T=1 to 1) has local path: (4,4) 
[DBG]    Agent 28 (global paths from T=1 to 16) has local path: (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,1) (2,1) (2,1) (2,1) (2,1) (1,1) (0,1) (0,2) 
[DBG]    Agent 108 (global paths from T=1 to 5) has local path: (2,1) (3,1) (3,1) (3,1) (4,1) 
[DBG]  Checking input data for SAT solver:
[DBG]    - Number of agents to replan: 3
[DBG]  Agent 12 has the original local path length: 1 => Start (4,4), Goal (4,4)
[DBG]  Agent 28 has the original local path length: 16 => Start (2,2), Goal (0,2)
[DBG]  Agent 108 has the original local path length: 5 => Start (2,1), Goal (4,1)
[DBG]  Start position: (4, 4), (2, 2), (2, 1), 
[DBG]  Goal position: (4, 4), (0, 2), (4, 1), 
[DBG]  SAT instance and solver created.
Currently solving
Instance name: scen
Map name: map
Encoding used: disappear_at_goal
SAT solver used: Kissat
Optimizing function: sum of costs
Number of agents: 3
Mks LB: 3
SoC LB: 7
Delta: 0
Remaining time: 300000 [ms]

Found plan [agents = 3] [timesteps = 3]
Agent #0 : 15 0 0 
Agent #1 : 9 5 1 
Agent #2 : 8 11 12 

[STAT] Solver returned: 0
[DBG]  Agent (index) 12 | New local path (submap idx):
[DBG]  15 
[DBG]  Agent (index) 28 | New local path (submap idx):
[DBG]  9 5 1 
[DBG]  Agent (index) 108 | New local path (submap idx):
[DBG]  8 11 12 
[DBG]  Update the agent path 12 | Original local length: 1 | New local length: 1
[DBG]  agent 12 t=0 => decoded (sx,sy)=(4,4) => global_id=727
[DBG]  Complete path of agent 12:
[DBG]    Original: 726 727 728 729 730 731 732 764 765 766 767 
[DBG]    New:     726 727 728 729 730 731 732 764 765 766 767 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 726 
[DBG]    Local path (in submap): 727 
[DBG]    Suffix (out of submap): 728 729 730 731 732 764 765 766 767 
[DBG]  Original agent path length 12 je: 11
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 0: 726, 727, 728, 729, 730, 731, 732, 764, 765, 766, 767, 
[DBG]  Path for agent 12 updated, resulting length: 11
[DBG]  Update the agent path 28 | Original local length: 16 | New local length: 3
[DBG]  agent 28 t=0 => decoded (sx,sy)=(2,2) => global_id=661
[DBG]  agent 28 t=1 => decoded (sx,sy)=(1,2) => global_id=629
[DBG]  agent 28 t=2 => decoded (sx,sy)=(0,2) => global_id=597
[DBG]  Complete path of agent 28:
[DBG]    Original: 661 661 661 661 661 661 661 661 661 660 660 660 660 660 628 596 597 565 566 534 502 470 470 469 469 469 469 469 470 502 534 533 534 566 565 597 596 628 660 692 724 725 726 727 
[DBG]    New:     661 661 629 597 565 566 534 502 470 470 469 469 469 469 469 470 502 534 533 534 566 565 597 596 628 660 692 724 725 726 727 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 661 
[DBG]    Local path (in submap): 661 629 597 565 566 534 502 470 470 469 469 469 469 469 470 502 
[DBG]    Suffix (out of submap): 534 533 534 566 565 597 596 628 660 692 724 725 726 727 
[DBG]  Original agent path length 28 je: 44
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 1: 661, 661, 629, 597, 565, 566, 534, 502, 470, 470, 469, 469, 469, 469, 469, 470, 502, 534, 533, 534, 566, 565, 597, 596, 628, 660, 692, 724, 725, 726, 727, 
[DBG]  Path for agent 28 updated, resulting length: 31
[DBG]  Update the agent path 108 | Original local length: 5 | New local length: 3
[DBG]  agent 108 t=0 => decoded (sx,sy)=(2,1) => global_id=660
[DBG]  agent 108 t=1 => decoded (sx,sy)=(3,1) => global_id=692
[DBG]  agent 108 t=2 => decoded (sx,sy)=(4,1) => global_id=724
[DBG]  Complete path of agent 108:
[DBG]    Original: 628 660 692 692 692 724 756 788 820 821 822 854 886 887 888 920 952 953 954 955 956 957 989 1021 
[DBG]    New:     628 660 692 724 756 788 820 821 822 854 886 887 888 920 952 953 954 955 956 957 989 1021 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 628 
[DBG]    Local path (in submap): 660 692 724 756 788 
[DBG]    Suffix (out of submap): 820 821 822 854 886 887 888 920 952 953 954 955 956 957 989 1021 
[DBG]  Original agent path length 108 je: 24
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 2: 628, 660, 692, 724, 756, 788, 820, 821, 822, 854, 886, 887, 888, 920, 952, 953, 954, 955, 956, 957, 989, 1021, 
[DBG]  Path for agent 108 updated, resulting length: 22
[DBG]  Paths successfully updated.
[DBG]  (LNS.cpp) New path for agent 12: 
[DBG]  726, 727, 728, 729, 730, 731, 732, 764, 765, 766, 767, 
[DBG]  (LNS.cpp) New path for agent 28: 
[DBG]  661, 661, 629, 597, 565, 566, 534, 502, 470, 470, 469, 469, 469, 469, 469, 470, 502, 534, 533, 534, 566, 565, 597, 596, 628, 660, 692, 724, 725, 726, 727, 
[DBG]  (LNS.cpp) New path for agent 108: 
[DBG]  628, 660, 692, 724, 756, 788, 820, 821, 822, 854, 886, 887, 888, 920, 952, 953, 954, 955, 956, 957, 989, 1021, 
[DBG]  Delta value: 0.197368
[DBG]  Rewarding metric index = 1
[DBG]  component_weights = {0.256552, 0.497806, 0.0827443, 0.162898}
[DBG]  opSuccess value: 1
[STAT] neighbor.sum_of_costs before recomputation: 61
[STAT] neighbor.old_sum_of_costs before recomputation: 76
[STAT] sum_of_costs before recomputation: 4353
[DBG]  Validate solution immediately after SAT success.
[WARNING] Problem after SAT: Vertex conflict between agents 7 and 108 at location 788 at timestep 5
[DBG]  [DEBUG] Attempting immediate repair via init_lns because problem occurred after SAT (should be applied only for conflicts...).
[DBG]  [DEBUG] Passing 150 agents to init_lns (skip=true).
[DBG]  [DEBUG] path_table contents for selected agents (neighbor.agents):
[DBG]    Agent 12 => controlling path length=11
[DBG]    Agent 28 => controlling path length=31
[DBG]    Agent 108 => controlling path length=22
[DBG]  hodnota skip_initial_solution=1
[DBG]  We skip initialSolution => call buildCollisionData()
[DBG]  buildCollisionData() called – skip_initial_solution case.
[DBG]  Agents.size()=150, collision_graph.size()=150
[DBG]  agent 7 => updateCollidingPairs => foundCollision
[DBG]  agent 10 => updateCollidingPairs => foundCollision
[DBG]  agent 11 => updateCollidingPairs => foundCollision
[DBG]  agent 28 => updateCollidingPairs => foundCollision
[DBG]  agent 30 => updateCollidingPairs => foundCollision
[DBG]  agent 38 => updateCollidingPairs => foundCollision
[DBG]  agent 42 => updateCollidingPairs => foundCollision
[DBG]  agent 74 => updateCollidingPairs => foundCollision
[DBG]  agent 79 => updateCollidingPairs => foundCollision
[DBG]  agent 89 => updateCollidingPairs => foundCollision
[DBG]  agent 91 => updateCollidingPairs => foundCollision
[DBG]  agent 92 => updateCollidingPairs => foundCollision
[DBG]  agent 104 => updateCollidingPairs => foundCollision
[DBG]  agent 108 => updateCollidingPairs => foundCollision
[DBG]  agent 114 => updateCollidingPairs => foundCollision
[DBG]  agent 123 => updateCollidingPairs => foundCollision
[DBG]  Conflicting agent pairs:
[DBG]  agent 7 is in conflict with agent 108
[DBG]  agent 10 is in conflict with agent 28
[DBG]  agent 11 is in conflict with agent 28
[DBG]  agent 28 is in conflict with agent 30
[DBG]  agent 28 is in conflict with agent 42
[DBG]  agent 28 is in conflict with agent 74
[DBG]  agent 28 is in conflict with agent 79
[DBG]  agent 28 is in conflict with agent 89
[DBG]  agent 28 is in conflict with agent 92
[DBG]  agent 28 is in conflict with agent 104
[DBG]  agent 28 is in conflict with agent 114
[DBG]  agent 28 is in conflict with agent 123
[DBG]  agent 38 is in conflict with agent 108
[DBG]  agent 91 is in conflict with agent 108
[DBG]  buildCollisionData() => sum_of_costs=4338, num_of_colliding_pairs=14
[DBG]  buildCollisionData done => sum_of_costs=4338, num_of_colliding_pairs=14
[DBG]  sum_of_cost hodnota: 4338
[DBG]  After skip/init build => iteration_stats.back(): sum_of_costs=4338, collisions=14
[DEBUG] Using default neighbor generation strategy for conflicts: 0
[DEBUG] Using default neighbor generation strategy for conflicts: 0
	InitLNS(PP): runtime = 0.00183787, iterations = 3, colliding pairs = 0, initial colliding pairs = 14, solution cost = 4336, initial solution cost = 4338, failed iterations = 0
[DBG]  init_lns->sum_of_costs after init_lns->run: 4336
[DBG]  sum_of_costs after assignment from init_lns->run: 4336
[DBG]  Recomputing sum_of_cost by dividing neighbor.sum_of_costs and neighbor.old_sum_of_costs
[STAT] sum_of_costs after recomputation: 4336
[STAT] Iteration 44
[DBG]  Random chance did not select SAT operator (r=53), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 44
[DBG]  Random chance did not select SAT operator (r=43), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 44
[DBG]  Random chance did not select SAT operator (r=27), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 44
[DBG]  Random chance did not select SAT operator (r=77), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 44
[DBG]  Random chance did not select SAT operator (r=63), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 44
[DBG]  Random chance did not select SAT operator (r=88), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 44
[DBG]  Random chance did not select SAT operator (r=97), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 44
[DBG]  Random chance did not select SAT operator (r=60), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 44
[DBG]  Random chance did not select SAT operator (r=73), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 44
[DBG]  Random chance did not select SAT operator (r=10), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 44
[DBG]  Random chance did not select SAT operator (r=16), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 44
[DBG]  Using SAT operator (destroy+repair SAT).
[DBG]  ====================
[DBG]  SAT destroy operator called.
[DBG]  SAT heuristic: 2
[DBG]  key_agent_id: 28
[DBG]  key_agent_id global path length: 44
[DBG]  Submap content (global positions):
[DBG]  595 596 597 598 599 
[DBG]  627 628 629 630 631 
[DBG]  659 660 661 662 663 
[DBG]  691 692 693 694 695 
[DBG]  723 724 725 726 727 
[DBG]  Map content with agents and obstacles:
[DBG]  X . A X . 
[DBG]  . A A X . 
[DBG]  . . A X X 
[DBG]  . . X X X 
[DBG]  X . A . . 
[DBG]  content of the map structure that we pass to the SAT solver:
[DBG]  -1  1  1  -1  1  
[DBG]  1  1  1  -1  1  
[DBG]  1  1  1  -1  -1  
[DBG]  1  1  -1  -1  -1  
[DBG]  -1  1  1  1  1  
[DBG]  Identifying agents in a submap for rescheduling (when key_agent is there at the time 9):
[DBG]  Agent 28 found intervals in the sub-map:
[DBG]   [0..43]
[DBG]  Agent 28 (interval in submap: [0..43]) contains time 9, added to replan.
[DBG]  Agent 46 found intervals in the sub-map:
[DBG]   [4..9]
[DBG]  Agent 46 (interval in submap: [4..9]) contains time 9, added to replan.
[DBG]  Agent 70 found intervals in the sub-map:
[DBG]   [1..2] [7..10]
[DBG]  Agent 70 (interval in submap: [7..10]) contains time 9, added to replan.
[DBG]  Agent 89 found intervals in the sub-map:
[DBG]   [5..12]
[DBG]  Agent 89 (interval in submap: [5..12]) contains time 9, added to replan.
[DBG]  Agent 91 found intervals in the sub-map:
[DBG]   [5..10]
[DBG]  Agent 91 (interval in submap: [5..10]) contains time 9, added to replan.
[DBG]  Agent 28 | Start (global): 661 -> (local): (2, 2) at time 9 | Goal (global): 727 -> (local): (4, 4) at time 43
[DBG]  Agent 46 | Start (global): 597 -> (local): (0, 2) at time 9 | Goal (global): 597 -> (local): (0, 2) at time 9
[DBG]  Agent 70 | Start (global): 725 -> (local): (4, 2) at time 9 | Goal (global): 724 -> (local): (4, 1) at time 10
[DBG]  Agent 89 | Start (global): 628 -> (local): (1, 1) at time 9 | Goal (global): 724 -> (local): (4, 1) at time 12
[DBG]  Agent 91 | Start (global): 629 -> (local): (1, 2) at time 9 | Goal (global): 597 -> (local): (0, 2) at time 10
[DBG]  [REPAIR] SAT destroy operator called.
[DBG]  [REPAIR] SAT operator – launching subproblem FOR OPTIMIZATION.
[DBG]  Creating local paths (sx, sy) in the submap for T_sync = 9
[DBG]    Agent 28 (global paths from T=9 to 43) has local path: (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (1,2) (1,1) (1,0) (1,0) (1,0) (1,0) (1,0) (2,0) (3,0) (3,1) (4,1) (4,2) (4,3) (4,4) 
[DBG]    Agent 46 (global paths from T=9 to 9) has local path: (0,2) 
[DBG]    Agent 70 (global paths from T=9 to 10) has local path: (4,2) (4,1) 
[DBG]    Agent 89 (global paths from T=9 to 12) has local path: (1,1) (2,1) (3,1) (4,1) 
[DBG]    Agent 91 (global paths from T=9 to 10) has local path: (1,2) (0,2) 
[DBG]  Checking input data for SAT solver:
[DBG]    - Number of agents to replan: 5
[DBG]  Agent 28 has the original local path length: 35 => Start (2,2), Goal (4,4)
[DBG]  Agent 46 has the original local path length: 1 => Start (0,2), Goal (0,2)
[DBG]  Agent 70 has the original local path length: 2 => Start (4,2), Goal (4,1)
[DBG]  Agent 89 has the original local path length: 4 => Start (1,1), Goal (4,1)
[DBG]  Agent 91 has the original local path length: 2 => Start (1,2), Goal (0,2)
[DBG]  Start position: (2, 2), (0, 2), (4, 2), (1, 1), (1, 2), 
[DBG]  Goal position: (4, 4), (0, 2), (4, 1), (4, 1), (0, 2), 
[DBG]  SAT instance and solver created.
Currently solving
Instance name: scen
Map name: map
Encoding used: disappear_at_goal
SAT solver used: Kissat
Optimizing function: sum of costs
Number of agents: 5
Mks LB: 7
SoC LB: 16
Delta: 0
Remaining time: 300000 [ms]

[STAT] Solver returned: -1
[DBG]  SAT solver failed.
[STAT] SAT solver failed to find a valid solution.
[DBG]  ====================
[DBG]  SAT destroy operator called.
[DBG]  SAT heuristic: 2
[DBG]  key_agent_id: 28
[DBG]  key_agent_id global path length: 44
[DBG]  Submap content (global positions):
[DBG]  660 661 662 663 664 
[DBG]  692 693 694 695 696 
[DBG]  724 725 726 727 728 
[DBG]  756 757 758 759 760 
[DBG]  788 789 790 791 792 
[DBG]  Map content with agents and obstacles:
[DBG]  . . X X . 
[DBG]  A X X X . 
[DBG]  . . A A . 
[DBG]  . . X . X 
[DBG]  . X . X . 
[DBG]  content of the map structure that we pass to the SAT solver:
[DBG]  1  1  -1  -1  1  
[DBG]  1  -1  -1  -1  1  
[DBG]  1  1  1  1  1  
[DBG]  1  1  -1  1  -1  
[DBG]  1  -1  1  -1  1  
[DBG]  Identifying agents in a submap for rescheduling (when key_agent is there at the time 42):
[DBG]  Agent 28 found intervals in the sub-map:
[DBG]   [0..29] [39..43]
[DBG]  Agent 28 (interval in submap: [39..43]) contains time 42, added to replan.
[DBG]  Agent 42 found intervals in the sub-map:
[DBG]   [38..43]
[DBG]  Agent 42 (interval in submap: [38..43]) contains time 42, added to replan.
[DBG]  Agent 55 found intervals in the sub-map:
[DBG]   [42..42]
[DBG]  Agent 55 (interval in submap: [42..42]) contains time 42, added to replan.
[DBG]  Agent 69 found intervals in the sub-map:
[DBG]   [37..40]
[DBG]  Agent 69 is not in sub-map at time 42 (intervals: 
[DBG]  [37..40] )
[DBG]  Agent 28 | Start (global): 726 -> (local): (2, 2) at time 42 | Goal (global): 727 -> (local): (2, 3) at time 43
[DBG]  Agent 42 | Start (global): 727 -> (local): (2, 3) at time 42 | Goal (global): 759 -> (local): (3, 3) at time 43
[DBG]  Agent 55 | Start (global): 692 -> (local): (1, 0) at time 42 | Goal (global): 692 -> (local): (1, 0) at time 42
[DBG]  [REPAIR] SAT destroy operator called.
[DBG]  [REPAIR] SAT operator – launching subproblem FOR OPTIMIZATION.
[DBG]  Creating local paths (sx, sy) in the submap for T_sync = 42
[DBG]    Agent 28 (global paths from T=42 to 43) has local path: (2,2) (2,3) 
[DBG]    Agent 42 (global paths from T=42 to 43) has local path: (2,3) (3,3) 
[DBG]    Agent 55 (global paths from T=42 to 42) has local path: (1,0) 
[DBG]  Checking input data for SAT solver:
[DBG]    - Number of agents to replan: 3
[DBG]  Agent 28 has the original local path length: 2 => Start (2,2), Goal (2,3)
[DBG]  Agent 42 has the original local path length: 2 => Start (2,3), Goal (3,3)
[DBG]  Agent 55 has the original local path length: 1 => Start (1,0), Goal (1,0)
[DBG]  Start position: (2, 2), (2, 3), (1, 0), 
[DBG]  Goal position: (2, 3), (3, 3), (1, 0), 
[DBG]  SAT instance and solver created.
Currently solving
Instance name: scen
Map name: map
Encoding used: disappear_at_goal
SAT solver used: Kissat
Optimizing function: sum of costs
Number of agents: 3
Mks LB: 2
SoC LB: 5
Delta: 0
Remaining time: 300000 [ms]

Found plan [agents = 3] [timesteps = 2]
Agent #0 : 7 8 
Agent #1 : 8 12 
Agent #2 : 3 0 

[STAT] Solver returned: 0
[DBG]  Agent (index) 28 | New local path (submap idx):
[DBG]  7 8 
[DBG]  Agent (index) 42 | New local path (submap idx):
[DBG]  8 12 
[DBG]  Agent (index) 55 | New local path (submap idx):
[DBG]  3 
[DBG]  Update the agent path 28 | Original local length: 2 | New local length: 2
[DBG]  agent 28 t=0 => decoded (sx,sy)=(2,2) => global_id=726
[DBG]  agent 28 t=1 => decoded (sx,sy)=(2,3) => global_id=727
[DBG]  Complete path of agent 28:
[DBG]    Original: 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 629 628 627 627 627 627 627 659 691 692 724 725 726 727 
[DBG]    New:     661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 629 628 627 627 627 627 627 659 691 692 724 725 726 727 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 629 628 627 627 627 627 627 659 691 692 724 725 
[DBG]    Local path (in submap): 726 727 
[DBG]    Suffix (out of submap): 
[DBG]  Original agent path length 28 je: 44
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 0: 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 629, 628, 627, 627, 627, 627, 627, 659, 691, 692, 724, 725, 726, 727, 
[DBG]  Path for agent 28 updated, resulting length: 44
[DBG]  Update the agent path 42 | Original local length: 2 | New local length: 2
[DBG]  agent 42 t=0 => decoded (sx,sy)=(2,3) => global_id=727
[DBG]  agent 42 t=1 => decoded (sx,sy)=(3,3) => global_id=759
[DBG]  Complete path of agent 42:
[DBG]    Original: 224 192 193 194 195 227 228 260 261 293 294 295 296 297 329 361 393 425 426 458 490 491 523 555 556 555 587 588 589 590 622 654 655 656 657 658 659 691 692 724 725 726 727 759 
[DBG]    New:     224 192 193 194 195 227 228 260 261 293 294 295 296 297 329 361 393 425 426 458 490 491 523 555 556 555 587 588 589 590 622 654 655 656 657 658 659 691 692 724 725 726 727 759 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 224 192 193 194 195 227 228 260 261 293 294 295 296 297 329 361 393 425 426 458 490 491 523 555 556 555 587 588 589 590 622 654 655 656 657 658 659 691 692 724 725 726 
[DBG]    Local path (in submap): 727 759 
[DBG]    Suffix (out of submap): 
[DBG]  Original agent path length 42 je: 44
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 1: 224, 192, 193, 194, 195, 227, 228, 260, 261, 293, 294, 295, 296, 297, 329, 361, 393, 425, 426, 458, 490, 491, 523, 555, 556, 555, 587, 588, 589, 590, 622, 654, 655, 656, 657, 658, 659, 691, 692, 724, 725, 726, 727, 759, 
[DBG]  Path for agent 42 updated, resulting length: 44
[DBG]  Update the agent path 55 | Original local length: 1 | New local length: 1
[DBG]  agent 55 t=0 => decoded (sx,sy)=(1,0) => global_id=692
[DBG]  Complete path of agent 55:
[DBG]    Original: 34 35 67 99 131 132 164 196 228 260 261 293 325 357 358 390 422 423 424 425 426 427 428 429 430 462 463 464 465 466 467 468 469 501 533 565 597 596 628 627 659 691 692 
[DBG]    New:     34 35 67 99 131 132 164 196 228 260 261 293 325 357 358 390 422 423 424 425 426 427 428 429 430 462 463 464 465 466 467 468 469 501 533 565 597 596 628 627 659 691 692 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 34 35 67 99 131 132 164 196 228 260 261 293 325 357 358 390 422 423 424 425 426 427 428 429 430 462 463 464 465 466 467 468 469 501 533 565 597 596 628 627 659 691 
[DBG]    Local path (in submap): 692 
[DBG]    Suffix (out of submap): 
[DBG]  Original agent path length 55 je: 43
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 2: 34, 35, 67, 99, 131, 132, 164, 196, 228, 260, 261, 293, 325, 357, 358, 390, 422, 423, 424, 425, 426, 427, 428, 429, 430, 462, 463, 464, 465, 466, 467, 468, 469, 501, 533, 565, 597, 596, 628, 627, 659, 691, 692, 
[DBG]  Path for agent 55 updated, resulting length: 43
[DBG]  Paths successfully updated.
[DBG]  (LNS.cpp) New path for agent 28: 
[DBG]  661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 629, 628, 627, 627, 627, 627, 627, 659, 691, 692, 724, 725, 726, 727, 
[DBG]  (LNS.cpp) New path for agent 42: 
[DBG]  224, 192, 193, 194, 195, 227, 228, 260, 261, 293, 294, 295, 296, 297, 329, 361, 393, 425, 426, 458, 490, 491, 523, 555, 556, 555, 587, 588, 589, 590, 622, 654, 655, 656, 657, 658, 659, 691, 692, 724, 725, 726, 727, 759, 
[DBG]  (LNS.cpp) New path for agent 55: 
[DBG]  34, 35, 67, 99, 131, 132, 164, 196, 228, 260, 261, 293, 325, 357, 358, 390, 422, 423, 424, 425, 426, 427, 428, 429, 430, 462, 463, 464, 465, 466, 467, 468, 469, 501, 533, 565, 597, 596, 628, 627, 659, 691, 692, 
[DBG]  Delta value: 0
[DBG]  Rewarding metric index = 3
[DBG]  component_weights = {0.254371, 0.493574, 0.0820409, 0.170014}
[DBG]  opSuccess value: 1
[STAT] neighbor.sum_of_costs before recomputation: 128
[STAT] neighbor.old_sum_of_costs before recomputation: 128
[STAT] sum_of_costs before recomputation: 4336
[DBG]  Validate solution immediately after SAT success.
[DBG]  No problems after SAT replan.
[DBG]  Recomputing sum_of_cost by dividing neighbor.sum_of_costs and neighbor.old_sum_of_costs
[STAT] sum_of_costs after recomputation: 4336
[STAT] Iteration 45
[DBG]  Random chance did not select SAT operator (r=18), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 45
[DBG]  Random chance did not select SAT operator (r=10), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 45
[DBG]  Random chance did not select SAT operator (r=66), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 45
[DBG]  Random chance did not select SAT operator (r=47), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 45
[DBG]  Random chance did not select SAT operator (r=34), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 45
[DBG]  Random chance did not select SAT operator (r=10), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 45
[DBG]  Random chance did not select SAT operator (r=55), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 45
[DBG]  Random chance did not select SAT operator (r=67), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 45
[DBG]  Random chance did not select SAT operator (r=32), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 45
[DBG]  Random chance did not select SAT operator (r=23), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 45
[DBG]  Random chance did not select SAT operator (r=28), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 45
[DBG]  Random chance did not select SAT operator (r=31), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 45
[DBG]  Using SAT operator (destroy+repair SAT).
[DBG]  ====================
[DBG]  SAT destroy operator called.
[DBG]  SAT heuristic: 2
[DBG]  key_agent_id: 28
[DBG]  key_agent_id global path length: 44
[DBG]  Submap content (global positions):
[DBG]  595 596 597 598 599 
[DBG]  627 628 629 630 631 
[DBG]  659 660 661 662 663 
[DBG]  691 692 693 694 695 
[DBG]  723 724 725 726 727 
[DBG]  Map content with agents and obstacles:
[DBG]  X . . X . 
[DBG]  . A . X A 
[DBG]  A . A X X 
[DBG]  . A X X X 
[DBG]  X . . . . 
[DBG]  content of the map structure that we pass to the SAT solver:
[DBG]  -1  1  1  -1  1  
[DBG]  1  1  1  -1  1  
[DBG]  1  1  1  -1  -1  
[DBG]  1  1  -1  -1  -1  
[DBG]  -1  1  1  1  1  
[DBG]  Identifying agents in a submap for rescheduling (when key_agent is there at the time 25):
[DBG]  Agent 4 found intervals in the sub-map:
[DBG]  
[DBG]  Agent 4 is not in sub-map at time 25 (intervals: 
[DBG]  )
[DBG]  Agent 11 found intervals in the sub-map:
[DBG]   [24..28]
[DBG]  Agent 11 (interval in submap: [24..28]) contains time 25, added to replan.
[DBG]  Agent 28 found intervals in the sub-map:
[DBG]   [0..43]
[DBG]  Agent 28 (interval in submap: [0..43]) contains time 25, added to replan.
[DBG]  Agent 56 found intervals in the sub-map:
[DBG]   [23..28]
[DBG]  Agent 56 (interval in submap: [23..28]) contains time 25, added to replan.
[DBG]  Agent 62 found intervals in the sub-map:
[DBG]   [25..30]
[DBG]  Agent 62 (interval in submap: [25..30]) contains time 25, added to replan.
[DBG]  Agent 144 found intervals in the sub-map:
[DBG]   [24..25]
[DBG]  Agent 144 (interval in submap: [24..25]) contains time 25, added to replan.
[DBG]  Agent 11 | Start (global): 692 -> (local): (3, 1) at time 25 | Goal (global): 659 -> (local): (2, 0) at time 28
[DBG]  Agent 28 | Start (global): 661 -> (local): (2, 2) at time 25 | Goal (global): 727 -> (local): (4, 4) at time 43
[DBG]  Agent 56 | Start (global): 628 -> (local): (1, 1) at time 25 | Goal (global): 597 -> (local): (0, 2) at time 28
[DBG]  Agent 62 | Start (global): 659 -> (local): (2, 0) at time 25 | Goal (global): 597 -> (local): (0, 2) at time 30
[DBG]  Agent 144 | Start (global): 631 -> (local): (1, 4) at time 25 | Goal (global): 631 -> (local): (1, 4) at time 25
[DBG]  [REPAIR] SAT destroy operator called.
[DBG]  [REPAIR] SAT operator – launching subproblem FOR OPTIMIZATION.
[DBG]  Creating local paths (sx, sy) in the submap for T_sync = 25
[DBG]    Agent 11 (global paths from T=25 to 28) has local path: (3,1) (3,0) (3,0) (2,0) 
[DBG]    Agent 28 (global paths from T=25 to 43) has local path: (2,2) (2,2) (2,2) (2,2) (2,2) (1,2) (1,1) (1,0) (1,0) (1,0) (1,0) (1,0) (2,0) (3,0) (3,1) (4,1) (4,2) (4,3) (4,4) 
[DBG]    Agent 56 (global paths from T=25 to 28) has local path: (1,1) (1,2) (1,2) (0,2) 
[DBG]    Agent 62 (global paths from T=25 to 30) has local path: (2,0) (1,0) (1,0) (1,1) (1,2) (0,2) 
[DBG]    Agent 144 (global paths from T=25 to 25) has local path: (1,4) 
[DBG]  Checking input data for SAT solver:
[DBG]    - Number of agents to replan: 5
[DBG]  Agent 11 has the original local path length: 4 => Start (3,1), Goal (2,0)
[DBG]  Agent 28 has the original local path length: 19 => Start (2,2), Goal (4,4)
[DBG]  Agent 56 has the original local path length: 4 => Start (1,1), Goal (0,2)
[DBG]  Agent 62 has the original local path length: 6 => Start (2,0), Goal (0,2)
[DBG]  Agent 144 has the original local path length: 1 => Start (1,4), Goal (1,4)
[DBG]  Start position: (3, 1), (2, 2), (1, 1), (2, 0), (1, 4), 
[DBG]  Goal position: (2, 0), (4, 4), (0, 2), (0, 2), (1, 4), 
[DBG]  SAT instance and solver created.
Currently solving
Instance name: scen
Map name: map
Encoding used: disappear_at_goal
SAT solver used: Kissat
Optimizing function: sum of costs
Number of agents: 5
Mks LB: 7
SoC LB: 19
Delta: 0
Remaining time: 300000 [ms]

Vertex conflict! Agents 0, 2, timestep 3, location 0
Swapping conflict! Agents 0, 2, timestep 3, edge (0,0)
Vertex conflict! Agents 0, 2, timestep 4, location 0
Swapping conflict! Agents 0, 2, timestep 4, edge (0,0)
Vertex conflict! Agents 0, 2, timestep 5, location 0
Swapping conflict! Agents 0, 2, timestep 5, edge (0,0)
Vertex conflict! Agents 0, 2, timestep 6, location 0
Vertex conflict! Agents 0, 3, timestep 5, location 0
Swapping conflict! Agents 0, 3, timestep 5, edge (0,0)
Vertex conflict! Agents 0, 3, timestep 6, location 0
Vertex conflict! Agents 0, 4, timestep 3, location 0
Swapping conflict! Agents 0, 4, timestep 3, edge (0,0)
Vertex conflict! Agents 0, 4, timestep 4, location 0
Swapping conflict! Agents 0, 4, timestep 4, edge (0,0)
Vertex conflict! Agents 0, 4, timestep 5, location 0
Swapping conflict! Agents 0, 4, timestep 5, edge (0,0)
Vertex conflict! Agents 0, 4, timestep 6, location 0
Vertex conflict! Agents 2, 3, timestep 5, location 0
Swapping conflict! Agents 2, 3, timestep 5, edge (0,0)
Vertex conflict! Agents 2, 3, timestep 6, location 0
Vertex conflict! Agents 2, 4, timestep 3, location 0
Swapping conflict! Agents 2, 4, timestep 3, edge (0,0)
Vertex conflict! Agents 2, 4, timestep 4, location 0
Swapping conflict! Agents 2, 4, timestep 4, edge (0,0)
Vertex conflict! Agents 2, 4, timestep 5, location 0
Swapping conflict! Agents 2, 4, timestep 5, edge (0,0)
Vertex conflict! Agents 2, 4, timestep 6, location 0
Vertex conflict! Agents 3, 4, timestep 5, location 0
Swapping conflict! Agents 3, 4, timestep 5, edge (0,0)
Vertex conflict! Agents 3, 4, timestep 6, location 0
Found plan [agents = 5] [timesteps = 7]
Agent #0 : 11 10 7 0 0 0 0 
Agent #1 : 9 8 11 12 13 14 15 
Agent #2 : 4 5 1 0 0 0 0 
Agent #3 : 7 3 4 5 1 0 0 
Agent #4 : 6 0 0 0 0 0 0 

[STAT] Solver returned: 0
[DBG]  Agent (index) 11 | New local path (submap idx):
[DBG]  11 10 7 
[DBG]  Agent (index) 28 | New local path (submap idx):
[DBG]  9 8 11 12 13 14 15 
[DBG]  Agent (index) 56 | New local path (submap idx):
[DBG]  4 5 1 
[DBG]  Agent (index) 62 | New local path (submap idx):
[DBG]  7 3 4 5 1 
[DBG]  Agent (index) 144 | New local path (submap idx):
[DBG]  6 
[DBG]  Update the agent path 11 | Original local length: 4 | New local length: 3
[DBG]  agent 11 t=0 => decoded (sx,sy)=(3,1) => global_id=692
[DBG]  agent 11 t=1 => decoded (sx,sy)=(3,0) => global_id=691
[DBG]  agent 11 t=2 => decoded (sx,sy)=(2,0) => global_id=659
[DBG]  Complete path of agent 11:
[DBG]    Original: 990 990 990 990 990 989 957 956 924 923 891 890 889 857 856 855 823 822 821 820 819 787 755 756 724 692 691 691 659 658 657 656 688 688 656 657 
[DBG]    New:     990 990 990 990 990 989 957 956 924 923 891 890 889 857 856 855 823 822 821 820 819 787 755 756 724 692 691 659 658 657 656 688 688 656 657 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 990 990 990 990 990 989 957 956 924 923 891 890 889 857 856 855 823 822 821 820 819 787 755 756 724 
[DBG]    Local path (in submap): 692 691 659 658 
[DBG]    Suffix (out of submap): 657 656 688 688 656 657 
[DBG]  Original agent path length 11 je: 36
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 0: 990, 990, 990, 990, 990, 989, 957, 956, 924, 923, 891, 890, 889, 857, 856, 855, 823, 822, 821, 820, 819, 787, 755, 756, 724, 692, 691, 659, 658, 657, 656, 688, 688, 656, 657, 
[DBG]  Path for agent 11 updated, resulting length: 35
[DBG]  Update the agent path 28 | Original local length: 19 | New local length: 7
[DBG]  agent 28 t=0 => decoded (sx,sy)=(2,2) => global_id=661
[DBG]  agent 28 t=1 => decoded (sx,sy)=(2,1) => global_id=660
[DBG]  agent 28 t=2 => decoded (sx,sy)=(3,1) => global_id=692
[DBG]  agent 28 t=3 => decoded (sx,sy)=(4,1) => global_id=724
[DBG]  agent 28 t=4 => decoded (sx,sy)=(4,2) => global_id=725
[DBG]  agent 28 t=5 => decoded (sx,sy)=(4,3) => global_id=726
[DBG]  agent 28 t=6 => decoded (sx,sy)=(4,4) => global_id=727
[DBG]  Complete path of agent 28:
[DBG]    Original: 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 629 628 627 627 627 627 627 659 691 692 724 725 726 727 
[DBG]    New:     661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 660 692 724 725 726 727 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 
[DBG]    Local path (in submap): 661 660 692 724 725 726 727 
[DBG]    Suffix (out of submap): 
[DBG]  Original agent path length 28 je: 44
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 1: 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 660, 692, 724, 725, 726, 727, 
[DBG]  Path for agent 28 updated, resulting length: 32
[DBG]  Update the agent path 56 | Original local length: 4 | New local length: 3
[DBG]  agent 56 t=0 => decoded (sx,sy)=(1,1) => global_id=628
[DBG]  agent 56 t=1 => decoded (sx,sy)=(1,2) => global_id=629
[DBG]  agent 56 t=2 => decoded (sx,sy)=(0,2) => global_id=597
[DBG]  Complete path of agent 56:
[DBG]    Original: 805 773 741 709 710 678 646 647 648 649 650 651 683 684 685 686 654 622 623 655 656 657 658 659 627 628 629 629 597 565 566 534 502 470 438 439 407 408 409 377 378 379 380 412 413 414 415 383 351 319 287 255 
[DBG]    New:     805 773 741 709 710 678 646 647 648 649 650 651 683 684 685 686 654 622 623 655 656 657 658 659 627 628 629 597 565 566 534 502 470 438 439 407 408 409 377 378 379 380 412 413 414 415 383 351 319 287 255 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 805 773 741 709 710 678 646 647 648 649 650 651 683 684 685 686 654 622 623 655 656 657 658 659 627 
[DBG]    Local path (in submap): 628 629 597 565 
[DBG]    Suffix (out of submap): 566 534 502 470 438 439 407 408 409 377 378 379 380 412 413 414 415 383 351 319 287 255 
[DBG]  Original agent path length 56 je: 52
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 2: 805, 773, 741, 709, 710, 678, 646, 647, 648, 649, 650, 651, 683, 684, 685, 686, 654, 622, 623, 655, 656, 657, 658, 659, 627, 628, 629, 597, 565, 566, 534, 502, 470, 438, 439, 407, 408, 409, 377, 378, 379, 380, 412, 413, 414, 415, 383, 351, 319, 287, 255, 
[DBG]  Path for agent 56 updated, resulting length: 51
[DBG]  Update the agent path 62 | Original local length: 6 | New local length: 5
[DBG]  agent 62 t=0 => decoded (sx,sy)=(2,0) => global_id=659
[DBG]  agent 62 t=1 => decoded (sx,sy)=(1,0) => global_id=627
[DBG]  agent 62 t=2 => decoded (sx,sy)=(1,1) => global_id=628
[DBG]  agent 62 t=3 => decoded (sx,sy)=(1,2) => global_id=629
[DBG]  agent 62 t=4 => decoded (sx,sy)=(0,2) => global_id=597
[DBG]  Complete path of agent 62:
[DBG]    Original: 753 753 753 753 753 753 752 720 720 720 719 719 751 750 751 719 719 720 720 719 687 655 656 657 658 659 627 627 628 629 597 565 533 534 502 470 438 406 
[DBG]    New:     753 753 753 753 753 753 752 720 720 720 719 719 751 750 751 719 719 720 720 719 687 655 656 657 658 659 627 628 629 597 565 533 534 502 470 438 406 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 753 753 753 753 753 753 752 720 720 720 719 719 751 750 751 719 719 720 720 719 687 655 656 657 658 
[DBG]    Local path (in submap): 659 627 628 629 597 565 
[DBG]    Suffix (out of submap): 533 534 502 470 438 406 
[DBG]  Original agent path length 62 je: 38
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 3: 753, 753, 753, 753, 753, 753, 752, 720, 720, 720, 719, 719, 751, 750, 751, 719, 719, 720, 720, 719, 687, 655, 656, 657, 658, 659, 627, 628, 629, 597, 565, 533, 534, 502, 470, 438, 406, 
[DBG]  Path for agent 62 updated, resulting length: 37
[DBG]  Update the agent path 144 | Original local length: 1 | New local length: 1
[DBG]  agent 144 t=0 => decoded (sx,sy)=(1,4) => global_id=631
[DBG]  Complete path of agent 144:
[DBG]    Original: 121 153 185 217 249 281 313 345 345 377 377 376 408 409 441 473 474 506 538 570 569 569 601 600 599 631 
[DBG]    New:     121 153 185 217 249 281 313 345 345 377 377 376 408 409 441 473 474 506 538 570 569 569 601 600 599 631 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 121 153 185 217 249 281 313 345 345 377 377 376 408 409 441 473 474 506 538 570 569 569 601 600 599 
[DBG]    Local path (in submap): 631 
[DBG]    Suffix (out of submap): 
[DBG]  Original agent path length 144 je: 26
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 4: 121, 153, 185, 217, 249, 281, 313, 345, 345, 377, 377, 376, 408, 409, 441, 473, 474, 506, 538, 570, 569, 569, 601, 600, 599, 631, 
[DBG]  Path for agent 144 updated, resulting length: 26
[DBG]  Paths successfully updated.
[DBG]  (LNS.cpp) New path for agent 11: 
[DBG]  990, 990, 990, 990, 990, 989, 957, 956, 924, 923, 891, 890, 889, 857, 856, 855, 823, 822, 821, 820, 819, 787, 755, 756, 724, 692, 691, 659, 658, 657, 656, 688, 688, 656, 657, 
[DBG]  (LNS.cpp) New path for agent 28: 
[DBG]  661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 660, 692, 724, 725, 726, 727, 
[DBG]  (LNS.cpp) New path for agent 56: 
[DBG]  805, 773, 741, 709, 710, 678, 646, 647, 648, 649, 650, 651, 683, 684, 685, 686, 654, 622, 623, 655, 656, 657, 658, 659, 627, 628, 629, 597, 565, 566, 534, 502, 470, 438, 439, 407, 408, 409, 377, 378, 379, 380, 412, 413, 414, 415, 383, 351, 319, 287, 255, 
[DBG]  (LNS.cpp) New path for agent 62: 
[DBG]  753, 753, 753, 753, 753, 753, 752, 720, 720, 720, 719, 719, 751, 750, 751, 719, 719, 720, 720, 719, 687, 655, 656, 657, 658, 659, 627, 628, 629, 597, 565, 533, 534, 502, 470, 438, 406, 
[DBG]  (LNS.cpp) New path for agent 144: 
[DBG]  121, 153, 185, 217, 249, 281, 313, 345, 345, 377, 377, 376, 408, 409, 441, 473, 474, 506, 538, 570, 569, 569, 601, 600, 599, 631, 
[DBG]  Delta value: 0.078534
[DBG]  Rewarding metric index = 3
[DBG]  component_weights = {0.248652, 0.482476, 0.0801962, 0.188676}
[DBG]  opSuccess value: 1
[STAT] neighbor.sum_of_costs before recomputation: 176
[STAT] neighbor.old_sum_of_costs before recomputation: 191
[STAT] sum_of_costs before recomputation: 4336
[DBG]  Validate solution immediately after SAT success.
[WARNING] Problem after SAT: Vertex conflict between agents 11 and 42 at location 656 at timestep 33
[DBG]  [DEBUG] Attempting immediate repair via init_lns because problem occurred after SAT (should be applied only for conflicts...).
[DBG]  [DEBUG] Passing 150 agents to init_lns (skip=true).
[DBG]  [DEBUG] path_table contents for selected agents (neighbor.agents):
[DBG]    Agent 11 => controlling path length=35
[DBG]    Agent 28 => controlling path length=32
[DBG]    Agent 56 => controlling path length=51
[DBG]    Agent 62 => controlling path length=37
[DBG]    Agent 144 => controlling path length=26
[DBG]  hodnota skip_initial_solution=1
[DBG]  We skip initialSolution => call buildCollisionData()
[DBG]  buildCollisionData() called – skip_initial_solution case.
[DBG]  Agents.size()=150, collision_graph.size()=150
[DBG]  agent 11 => updateCollidingPairs => foundCollision
[DBG]  agent 26 => updateCollidingPairs => foundCollision
[DBG]  agent 28 => updateCollidingPairs => foundCollision
[DBG]  agent 42 => updateCollidingPairs => foundCollision
[DBG]  agent 56 => updateCollidingPairs => foundCollision
[DBG]  agent 148 => updateCollidingPairs => foundCollision
[DBG]  Conflicting agent pairs:
[DBG]  agent 11 is in conflict with agent 42
[DBG]  agent 11 is in conflict with agent 148
[DBG]  agent 26 is in conflict with agent 56
[DBG]  agent 28 is in conflict with agent 42
[DBG]  buildCollisionData() => sum_of_costs=4321, num_of_colliding_pairs=4
[DBG]  buildCollisionData done => sum_of_costs=4321, num_of_colliding_pairs=4
[DBG]  sum_of_cost hodnota: 4321
[DBG]  After skip/init build => iteration_stats.back(): sum_of_costs=4321, collisions=4
[DEBUG] Using default neighbor generation strategy for conflicts: 1
[DEBUG] Using default neighbor generation strategy for conflicts: 0
	InitLNS(PP): runtime = 0.00174758, iterations = 3, colliding pairs = 0, initial colliding pairs = 4, solution cost = 4342, initial solution cost = 4321, failed iterations = 0
[DBG]  init_lns->sum_of_costs after init_lns->run: 4342
[DBG]  sum_of_costs after assignment from init_lns->run: 4342
[DBG]  Recomputing sum_of_cost by dividing neighbor.sum_of_costs and neighbor.old_sum_of_costs
[STAT] sum_of_costs after recomputation: 4342
[STAT] Iteration 46
[DBG]  Random chance did not select SAT operator (r=88), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 46
[DBG]  Random chance did not select SAT operator (r=78), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 46
[DBG]  Random chance did not select SAT operator (r=20), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 46
[DBG]  Random chance did not select SAT operator (r=59), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 46
[DBG]  Random chance did not select SAT operator (r=98), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 46
[DBG]  Random chance did not select SAT operator (r=84), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 46
[DBG]  Random chance did not select SAT operator (r=20), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 46
[DBG]  Random chance did not select SAT operator (r=26), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 46
[DBG]  Random chance did not select SAT operator (r=26), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 46
[DBG]  Random chance did not select SAT operator (r=58), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 46
[DBG]  Random chance did not select SAT operator (r=83), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 46
[DBG]  Random chance did not select SAT operator (r=58), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 46
[DBG]  Random chance did not select SAT operator (r=22), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 46
[DBG]  Random chance did not select SAT operator (r=17), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 46
[DBG]  Random chance did not select SAT operator (r=63), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 46
[DBG]  Random chance did not select SAT operator (r=61), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 46
[DBG]  Using SAT operator (destroy+repair SAT).
[DBG]  ====================
[DBG]  SAT destroy operator called.
[DBG]  SAT heuristic: 2
[DBG]  key_agent_id: 28
[DBG]  key_agent_id global path length: 44
[DBG]  Submap content (global positions):
[DBG]  661 662 663 664 665 
[DBG]  693 694 695 696 697 
[DBG]  725 726 727 728 729 
[DBG]  757 758 759 760 761 
[DBG]  789 790 791 792 793 
[DBG]  Map content with agents and obstacles:
[DBG]  . X X . X 
[DBG]  X X X . . 
[DBG]  . . A . . 
[DBG]  . X A X . 
[DBG]  X . X . . 
[DBG]  content of the map structure that we pass to the SAT solver:
[DBG]  1  -1  -1  1  -1  
[DBG]  -1  -1  -1  1  1  
[DBG]  1  1  1  1  1  
[DBG]  1  -1  1  -1  1  
[DBG]  -1  1  -1  1  1  
[DBG]  Identifying agents in a submap for rescheduling (when key_agent is there at the time 43):
[DBG]  Agent 28 found intervals in the sub-map:
[DBG]   [0..37] [41..43]
[DBG]  Agent 28 (interval in submap: [41..43]) contains time 43, added to replan.
[DBG]  Agent 42 found intervals in the sub-map:
[DBG]   [40..43]
[DBG]  Agent 42 (interval in submap: [40..43]) contains time 43, added to replan.
[DBG]  Agent 28 | Start (global): 727 -> (local): (2, 2) at time 43 | Goal (global): 727 -> (local): (2, 2) at time 43
[DBG]  Agent 42 | Start (global): 759 -> (local): (3, 2) at time 43 | Goal (global): 759 -> (local): (3, 2) at time 43
[DBG]  [REPAIR] SAT destroy operator called.
[DBG]  [REPAIR] SAT operator – launching subproblem FOR OPTIMIZATION.
[DBG]  Creating local paths (sx, sy) in the submap for T_sync = 43
[DBG]    Agent 28 (global paths from T=43 to 43) has local path: (2,2) 
[DBG]    Agent 42 (global paths from T=43 to 43) has local path: (3,2) 
[DBG]  Checking input data for SAT solver:
[DBG]    - Number of agents to replan: 2
[DBG]  Agent 28 has the original local path length: 1 => Start (2,2), Goal (2,2)
[DBG]  Agent 42 has the original local path length: 1 => Start (3,2), Goal (3,2)
[DBG]  Start position: (2, 2), (3, 2), 
[DBG]  Goal position: (2, 2), (3, 2), 
[DBG]  SAT instance and solver created.
Currently solving
Instance name: scen
Map name: map
Encoding used: disappear_at_goal
SAT solver used: Kissat
Optimizing function: sum of costs
Number of agents: 2
Mks LB: 1
SoC LB: 2
Delta: 0
Remaining time: 300000 [ms]

Found plan [agents = 2] [timesteps = 1]
Agent #0 : 6 
Agent #1 : 10 

[STAT] Solver returned: 0
[DBG]  Agent (index) 28 | New local path (submap idx):
[DBG]  6 
[DBG]  Agent (index) 42 | New local path (submap idx):
[DBG]  10 
[DBG]  Update the agent path 28 | Original local length: 1 | New local length: 1
[DBG]  agent 28 t=0 => decoded (sx,sy)=(2,2) => global_id=727
[DBG]  Complete path of agent 28:
[DBG]    Original: 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 660 692 724 725 726 727 
[DBG]    New:     661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 660 692 724 725 726 727 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 660 692 724 725 726 
[DBG]    Local path (in submap): 727 
[DBG]    Suffix (out of submap): 
[DBG]  Original agent path length 28 je: 44
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 0: 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 660, 692, 724, 725, 726, 727, 
[DBG]  Path for agent 28 updated, resulting length: 44
[DBG]  Update the agent path 42 | Original local length: 1 | New local length: 1
[DBG]  agent 42 t=0 => decoded (sx,sy)=(3,2) => global_id=759
[DBG]  Complete path of agent 42:
[DBG]    Original: 224 192 193 194 226 227 228 260 261 293 325 326 327 359 391 423 424 425 426 458 490 491 523 555 556 556 556 588 589 590 591 623 655 656 657 658 659 660 692 724 725 726 727 759 
[DBG]    New:     224 192 193 194 226 227 228 260 261 293 325 326 327 359 391 423 424 425 426 458 490 491 523 555 556 556 556 588 589 590 591 623 655 656 657 658 659 660 692 724 725 726 727 759 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 224 192 193 194 226 227 228 260 261 293 325 326 327 359 391 423 424 425 426 458 490 491 523 555 556 556 556 588 589 590 591 623 655 656 657 658 659 660 692 724 725 726 727 
[DBG]    Local path (in submap): 759 
[DBG]    Suffix (out of submap): 
[DBG]  Original agent path length 42 je: 44
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 1: 224, 192, 193, 194, 226, 227, 228, 260, 261, 293, 325, 326, 327, 359, 391, 423, 424, 425, 426, 458, 490, 491, 523, 555, 556, 556, 556, 588, 589, 590, 591, 623, 655, 656, 657, 658, 659, 660, 692, 724, 725, 726, 727, 759, 
[DBG]  Path for agent 42 updated, resulting length: 44
[DBG]  Paths successfully updated.
[DBG]  (LNS.cpp) New path for agent 28: 
[DBG]  661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 660, 692, 724, 725, 726, 727, 
[DBG]  (LNS.cpp) New path for agent 42: 
[DBG]  224, 192, 193, 194, 226, 227, 228, 260, 261, 293, 325, 326, 327, 359, 391, 423, 424, 425, 426, 458, 490, 491, 523, 555, 556, 556, 556, 588, 589, 590, 591, 623, 655, 656, 657, 658, 659, 660, 692, 724, 725, 726, 727, 759, 
[DBG]  Delta value: 0
[DBG]  Rewarding metric index = 0
[DBG]  component_weights = {0.258357, 0.476243, 0.0791603, 0.186239}
[DBG]  opSuccess value: 1
[STAT] neighbor.sum_of_costs before recomputation: 86
[STAT] neighbor.old_sum_of_costs before recomputation: 86
[STAT] sum_of_costs before recomputation: 4342
[DBG]  Validate solution immediately after SAT success.
[DBG]  No problems after SAT replan.
[DBG]  Recomputing sum_of_cost by dividing neighbor.sum_of_costs and neighbor.old_sum_of_costs
[STAT] sum_of_costs after recomputation: 4342
[STAT] Iteration 47
[DBG]  Random chance did not select SAT operator (r=50), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 47
[DBG]  Random chance did not select SAT operator (r=25), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 47
[DBG]  Random chance did not select SAT operator (r=70), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 47
[DBG]  Random chance did not select SAT operator (r=49), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 47
[DBG]  Random chance did not select SAT operator (r=98), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 47
[DBG]  Random chance did not select SAT operator (r=30), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 47
[DBG]  Random chance did not select SAT operator (r=79), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 47
[DBG]  Random chance did not select SAT operator (r=39), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 47
[DBG]  Random chance did not select SAT operator (r=69), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 47
[DBG]  Random chance did not select SAT operator (r=22), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 47
[DBG]  Using SAT operator (destroy+repair SAT).
[DBG]  ====================
[DBG]  SAT destroy operator called.
[DBG]  SAT heuristic: 2
[DBG]  key_agent_id: 28
[DBG]  key_agent_id global path length: 44
[DBG]  Submap content (global positions):
[DBG]  595 596 597 598 599 
[DBG]  627 628 629 630 631 
[DBG]  659 660 661 662 663 
[DBG]  691 692 693 694 695 
[DBG]  723 724 725 726 727 
[DBG]  Map content with agents and obstacles:
[DBG]  X A . X . 
[DBG]  . A A X . 
[DBG]  . . A X X 
[DBG]  . . X X X 
[DBG]  X . . A . 
[DBG]  content of the map structure that we pass to the SAT solver:
[DBG]  -1  1  1  -1  1  
[DBG]  1  1  1  -1  1  
[DBG]  1  1  1  -1  -1  
[DBG]  1  1  -1  -1  -1  
[DBG]  -1  1  1  1  1  
[DBG]  Identifying agents in a submap for rescheduling (when key_agent is there at the time 8):
[DBG]  Agent 28 found intervals in the sub-map:
[DBG]   [0..43]
[DBG]  Agent 28 (interval in submap: [0..43]) contains time 8, added to replan.
[DBG]  Agent 46 found intervals in the sub-map:
[DBG]   [4..9]
[DBG]  Agent 46 (interval in submap: [4..9]) contains time 8, added to replan.
[DBG]  Agent 70 found intervals in the sub-map:
[DBG]   [1..2] [7..10]
[DBG]  Agent 70 (interval in submap: [7..10]) contains time 8, added to replan.
[DBG]  Agent 89 found intervals in the sub-map:
[DBG]   [5..12]
[DBG]  Agent 89 (interval in submap: [5..12]) contains time 8, added to replan.
[DBG]  Agent 91 found intervals in the sub-map:
[DBG]   [5..10]
[DBG]  Agent 91 (interval in submap: [5..10]) contains time 8, added to replan.
[DBG]  Agent 28 | Start (global): 661 -> (local): (2, 2) at time 8 | Goal (global): 727 -> (local): (4, 4) at time 43
[DBG]  Agent 46 | Start (global): 629 -> (local): (1, 2) at time 8 | Goal (global): 597 -> (local): (0, 2) at time 9
[DBG]  Agent 70 | Start (global): 726 -> (local): (4, 3) at time 8 | Goal (global): 724 -> (local): (4, 1) at time 10
[DBG]  Agent 89 | Start (global): 596 -> (local): (0, 1) at time 8 | Goal (global): 724 -> (local): (4, 1) at time 12
[DBG]  Agent 91 | Start (global): 628 -> (local): (1, 1) at time 8 | Goal (global): 597 -> (local): (0, 2) at time 10
[DBG]  [REPAIR] SAT destroy operator called.
[DBG]  [REPAIR] SAT operator – launching subproblem FOR OPTIMIZATION.
[DBG]  Creating local paths (sx, sy) in the submap for T_sync = 8
[DBG]    Agent 28 (global paths from T=8 to 43) has local path: (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,1) (3,1) (4,1) (4,2) (4,3) (4,4) 
[DBG]    Agent 46 (global paths from T=8 to 9) has local path: (1,2) (0,2) 
[DBG]    Agent 70 (global paths from T=8 to 10) has local path: (4,3) (4,2) (4,1) 
[DBG]    Agent 89 (global paths from T=8 to 12) has local path: (0,1) (1,1) (2,1) (3,1) (4,1) 
[DBG]    Agent 91 (global paths from T=8 to 10) has local path: (1,1) (1,2) (0,2) 
[DBG]  Checking input data for SAT solver:
[DBG]    - Number of agents to replan: 5
[DBG]  Agent 28 has the original local path length: 36 => Start (2,2), Goal (4,4)
[DBG]  Agent 46 has the original local path length: 2 => Start (1,2), Goal (0,2)
[DBG]  Agent 70 has the original local path length: 3 => Start (4,3), Goal (4,1)
[DBG]  Agent 89 has the original local path length: 5 => Start (0,1), Goal (4,1)
[DBG]  Agent 91 has the original local path length: 3 => Start (1,1), Goal (0,2)
[DBG]  Start position: (2, 2), (1, 2), (4, 3), (0, 1), (1, 1), 
[DBG]  Goal position: (4, 4), (0, 2), (4, 1), (4, 1), (0, 2), 
[DBG]  SAT instance and solver created.
Currently solving
Instance name: scen
Map name: map
Encoding used: disappear_at_goal
SAT solver used: Kissat
Optimizing function: sum of costs
Number of agents: 5
Mks LB: 7
SoC LB: 20
Delta: 0
Remaining time: 300000 [ms]

Vertex conflict! Agents 1, 2, timestep 3, location 0
Swapping conflict! Agents 1, 2, timestep 3, edge (0,0)
Vertex conflict! Agents 1, 2, timestep 4, location 0
Swapping conflict! Agents 1, 2, timestep 4, edge (0,0)
Vertex conflict! Agents 1, 2, timestep 5, location 0
Swapping conflict! Agents 1, 2, timestep 5, edge (0,0)
Vertex conflict! Agents 1, 2, timestep 6, location 0
Vertex conflict! Agents 1, 3, timestep 5, location 0
Swapping conflict! Agents 1, 3, timestep 5, edge (0,0)
Vertex conflict! Agents 1, 3, timestep 6, location 0
Vertex conflict! Agents 1, 4, timestep 3, location 0
Swapping conflict! Agents 1, 4, timestep 3, edge (0,0)
Vertex conflict! Agents 1, 4, timestep 4, location 0
Swapping conflict! Agents 1, 4, timestep 4, edge (0,0)
Vertex conflict! Agents 1, 4, timestep 5, location 0
Swapping conflict! Agents 1, 4, timestep 5, edge (0,0)
Vertex conflict! Agents 1, 4, timestep 6, location 0
Vertex conflict! Agents 2, 3, timestep 5, location 0
Swapping conflict! Agents 2, 3, timestep 5, edge (0,0)
Vertex conflict! Agents 2, 3, timestep 6, location 0
Vertex conflict! Agents 2, 4, timestep 3, location 0
Swapping conflict! Agents 2, 4, timestep 3, edge (0,0)
Vertex conflict! Agents 2, 4, timestep 4, location 0
Swapping conflict! Agents 2, 4, timestep 4, edge (0,0)
Vertex conflict! Agents 2, 4, timestep 5, location 0
Swapping conflict! Agents 2, 4, timestep 5, edge (0,0)
Vertex conflict! Agents 2, 4, timestep 6, location 0
Vertex conflict! Agents 3, 4, timestep 5, location 0
Swapping conflict! Agents 3, 4, timestep 5, edge (0,0)
Vertex conflict! Agents 3, 4, timestep 6, location 0
Found plan [agents = 5] [timesteps = 7]
Agent #0 : 9 8 11 12 13 14 15 
Agent #1 : 5 1 0 0 0 0 0 
Agent #2 : 14 13 12 0 0 0 0 
Agent #3 : 0 4 8 11 12 0 0 
Agent #4 : 4 5 1 0 0 0 0 

[STAT] Solver returned: 0
[DBG]  Agent (index) 28 | New local path (submap idx):
[DBG]  9 8 11 12 13 14 15 
[DBG]  Agent (index) 46 | New local path (submap idx):
[DBG]  5 1 
[DBG]  Agent (index) 70 | New local path (submap idx):
[DBG]  14 13 12 
[DBG]  Agent (index) 89 | New local path (submap idx):
[DBG]  0 4 8 11 12 
[DBG]  Agent (index) 91 | New local path (submap idx):
[DBG]  4 5 1 
[DBG]  Update the agent path 28 | Original local length: 36 | New local length: 7
[DBG]  agent 28 t=0 => decoded (sx,sy)=(2,2) => global_id=661
[DBG]  agent 28 t=1 => decoded (sx,sy)=(2,1) => global_id=660
[DBG]  agent 28 t=2 => decoded (sx,sy)=(3,1) => global_id=692
[DBG]  agent 28 t=3 => decoded (sx,sy)=(4,1) => global_id=724
[DBG]  agent 28 t=4 => decoded (sx,sy)=(4,2) => global_id=725
[DBG]  agent 28 t=5 => decoded (sx,sy)=(4,3) => global_id=726
[DBG]  agent 28 t=6 => decoded (sx,sy)=(4,4) => global_id=727
[DBG]  Complete path of agent 28:
[DBG]    Original: 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 660 692 724 725 726 727 
[DBG]    New:     661 661 661 661 661 661 661 661 661 660 692 724 725 726 727 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 661 661 661 661 661 661 661 661 
[DBG]    Local path (in submap): 661 660 692 724 725 726 727 
[DBG]    Suffix (out of submap): 
[DBG]  Original agent path length 28 je: 44
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 0: 661, 661, 661, 661, 661, 661, 661, 661, 661, 660, 692, 724, 725, 726, 727, 
[DBG]  Path for agent 28 updated, resulting length: 15
[DBG]  Update the agent path 46 | Original local length: 2 | New local length: 2
[DBG]  agent 46 t=0 => decoded (sx,sy)=(1,2) => global_id=629
[DBG]  agent 46 t=1 => decoded (sx,sy)=(0,2) => global_id=597
[DBG]  Complete path of agent 46:
[DBG]    Original: 786 787 755 756 724 692 660 628 629 597 565 533 534 502 503 504 472 473 474 475 443 444 412 413 381 349 317 285 284 252 
[DBG]    New:     786 787 755 756 724 692 660 628 629 597 565 533 534 502 503 504 472 473 474 475 443 444 412 413 381 349 317 285 284 252 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 786 787 755 756 724 692 660 628 
[DBG]    Local path (in submap): 629 597 
[DBG]    Suffix (out of submap): 565 533 534 502 503 504 472 473 474 475 443 444 412 413 381 349 317 285 284 252 
[DBG]  Original agent path length 46 je: 30
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 1: 786, 787, 755, 756, 724, 692, 660, 628, 629, 597, 565, 533, 534, 502, 503, 504, 472, 473, 474, 475, 443, 444, 412, 413, 381, 349, 317, 285, 284, 252, 
[DBG]  Path for agent 46 updated, resulting length: 30
[DBG]  Update the agent path 70 | Original local length: 3 | New local length: 3
[DBG]  agent 70 t=0 => decoded (sx,sy)=(4,3) => global_id=726
[DBG]  agent 70 t=1 => decoded (sx,sy)=(4,2) => global_id=725
[DBG]  agent 70 t=2 => decoded (sx,sy)=(4,1) => global_id=724
[DBG]  Complete path of agent 70:
[DBG]    Original: 632 631 631 632 664 696 728 727 726 725 724 756 755 787 786 818 850 850 850 882 914 913 912 944 976 975 974 
[DBG]    New:     632 631 631 632 664 696 728 727 726 725 724 756 755 787 786 818 850 850 850 882 914 913 912 944 976 975 974 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 632 631 631 632 664 696 728 727 
[DBG]    Local path (in submap): 726 725 724 
[DBG]    Suffix (out of submap): 756 755 787 786 818 850 850 850 882 914 913 912 944 976 975 974 
[DBG]  Original agent path length 70 je: 27
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 2: 632, 631, 631, 632, 664, 696, 728, 727, 726, 725, 724, 756, 755, 787, 786, 818, 850, 850, 850, 882, 914, 913, 912, 944, 976, 975, 974, 
[DBG]  Path for agent 70 updated, resulting length: 27
[DBG]  Update the agent path 89 | Original local length: 5 | New local length: 5
[DBG]  agent 89 t=0 => decoded (sx,sy)=(0,1) => global_id=596
[DBG]  agent 89 t=1 => decoded (sx,sy)=(1,1) => global_id=628
[DBG]  agent 89 t=2 => decoded (sx,sy)=(2,1) => global_id=660
[DBG]  agent 89 t=3 => decoded (sx,sy)=(3,1) => global_id=692
[DBG]  agent 89 t=4 => decoded (sx,sy)=(4,1) => global_id=724
[DBG]  Complete path of agent 89:
[DBG]    Original: 437 469 501 533 565 597 596 596 596 628 660 692 724 756 755 787 819 851 883 884 885 886 918 950 982 983 1015 
[DBG]    New:     437 469 501 533 565 597 596 596 596 628 660 692 724 756 755 787 819 851 883 884 885 886 918 950 982 983 1015 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 437 469 501 533 565 597 596 596 
[DBG]    Local path (in submap): 596 628 660 692 724 
[DBG]    Suffix (out of submap): 756 755 787 819 851 883 884 885 886 918 950 982 983 1015 
[DBG]  Original agent path length 89 je: 27
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 3: 437, 469, 501, 533, 565, 597, 596, 596, 596, 628, 660, 692, 724, 756, 755, 787, 819, 851, 883, 884, 885, 886, 918, 950, 982, 983, 1015, 
[DBG]  Path for agent 89 updated, resulting length: 27
[DBG]  Update the agent path 91 | Original local length: 3 | New local length: 3
[DBG]  agent 91 t=0 => decoded (sx,sy)=(1,1) => global_id=628
[DBG]  agent 91 t=1 => decoded (sx,sy)=(1,2) => global_id=629
[DBG]  agent 91 t=2 => decoded (sx,sy)=(0,2) => global_id=597
[DBG]  Complete path of agent 91:
[DBG]    Original: 787 819 787 755 756 724 692 660 628 629 597 565 566 534 502 503 504 472 440 408 409 377 378 378 379 380 381 
[DBG]    New:     787 819 787 755 756 724 692 660 628 629 597 565 566 534 502 503 504 472 440 408 409 377 378 378 379 380 381 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 787 819 787 755 756 724 692 660 
[DBG]    Local path (in submap): 628 629 597 
[DBG]    Suffix (out of submap): 565 566 534 502 503 504 472 440 408 409 377 378 378 379 380 381 
[DBG]  Original agent path length 91 je: 27
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 4: 787, 819, 787, 755, 756, 724, 692, 660, 628, 629, 597, 565, 566, 534, 502, 503, 504, 472, 440, 408, 409, 377, 378, 378, 379, 380, 381, 
[DBG]  Path for agent 91 updated, resulting length: 27
[DBG]  Paths successfully updated.
[DBG]  (LNS.cpp) New path for agent 28: 
[DBG]  661, 661, 661, 661, 661, 661, 661, 661, 661, 660, 692, 724, 725, 726, 727, 
[DBG]  (LNS.cpp) New path for agent 46: 
[DBG]  786, 787, 755, 756, 724, 692, 660, 628, 629, 597, 565, 533, 534, 502, 503, 504, 472, 473, 474, 475, 443, 444, 412, 413, 381, 349, 317, 285, 284, 252, 
[DBG]  (LNS.cpp) New path for agent 70: 
[DBG]  632, 631, 631, 632, 664, 696, 728, 727, 726, 725, 724, 756, 755, 787, 786, 818, 850, 850, 850, 882, 914, 913, 912, 944, 976, 975, 974, 
[DBG]  (LNS.cpp) New path for agent 89: 
[DBG]  437, 469, 501, 533, 565, 597, 596, 596, 596, 628, 660, 692, 724, 756, 755, 787, 819, 851, 883, 884, 885, 886, 918, 950, 982, 983, 1015, 
[DBG]  (LNS.cpp) New path for agent 91: 
[DBG]  787, 819, 787, 755, 756, 724, 692, 660, 628, 629, 597, 565, 566, 534, 502, 503, 504, 472, 440, 408, 409, 377, 378, 378, 379, 380, 381, 
[DBG]  Delta value: 0.193333
[DBG]  Rewarding metric index = 0
[DBG]  component_weights = {0.30439, 0.446684, 0.0742469, 0.174679}
[DBG]  opSuccess value: 1
[STAT] neighbor.sum_of_costs before recomputation: 121
[STAT] neighbor.old_sum_of_costs before recomputation: 150
[STAT] sum_of_costs before recomputation: 4342
[DBG]  Validate solution immediately after SAT success.
[WARNING] Problem after SAT: Target conflict: agent 42 (len 43) traverses target of agent 28 (len 14) at location 727 at timestep 42
[DBG]  [DEBUG] Attempting immediate repair via init_lns because problem occurred after SAT (should be applied only for conflicts...).
[DBG]  [DEBUG] Passing 150 agents to init_lns (skip=true).
[DBG]  [DEBUG] path_table contents for selected agents (neighbor.agents):
[DBG]    Agent 28 => controlling path length=15
[DBG]    Agent 46 => controlling path length=30
[DBG]    Agent 70 => controlling path length=27
[DBG]    Agent 89 => controlling path length=27
[DBG]    Agent 91 => controlling path length=27
[DBG]  hodnota skip_initial_solution=1
[DBG]  We skip initialSolution => call buildCollisionData()
[DBG]  buildCollisionData() called – skip_initial_solution case.
[DBG]  Agents.size()=150, collision_graph.size()=150
[DBG]  agent 28 => updateCollidingPairs => foundCollision
[DBG]  agent 42 => updateCollidingPairs => foundCollision
[DBG]  Conflicting agent pairs:
[DBG]  agent 28 is in conflict with agent 42
[DBG]  buildCollisionData() => sum_of_costs=4313, num_of_colliding_pairs=1
[DBG]  buildCollisionData done => sum_of_costs=4313, num_of_colliding_pairs=1
[DBG]  sum_of_cost hodnota: 4313
[DBG]  After skip/init build => iteration_stats.back(): sum_of_costs=4313, collisions=1
[DEBUG] Using default neighbor generation strategy for conflicts: 2
[DEBUG] Using default neighbor generation strategy for conflicts: 0
	InitLNS(PP): runtime = 0.00281804, iterations = 3, colliding pairs = 0, initial colliding pairs = 1, solution cost = 4349, initial solution cost = 4313, failed iterations = 0
[DBG]  init_lns->sum_of_costs after init_lns->run: 4349
[DBG]  sum_of_costs after assignment from init_lns->run: 4349
[DBG]  Recomputing sum_of_cost by dividing neighbor.sum_of_costs and neighbor.old_sum_of_costs
[STAT] sum_of_costs after recomputation: 4349
[STAT] Iteration 48
[DBG]  Random chance did not select SAT operator (r=43), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 48
[DBG]  Using SAT operator (destroy+repair SAT).
[DBG]  ====================
[DBG]  SAT destroy operator called.
[DBG]  SAT heuristic: 2
[DBG]  key_agent_id: 28
[DBG]  key_agent_id global path length: 44
[DBG]  Submap content (global positions):
[DBG]  595 596 597 598 599 
[DBG]  627 628 629 630 631 
[DBG]  659 660 661 662 663 
[DBG]  691 692 693 694 695 
[DBG]  723 724 725 726 727 
[DBG]  Map content with agents and obstacles:
[DBG]  X . A X . 
[DBG]  . A . X . 
[DBG]  . . A X X 
[DBG]  . A X X X 
[DBG]  X . . . . 
[DBG]  content of the map structure that we pass to the SAT solver:
[DBG]  -1  1  1  -1  1  
[DBG]  1  1  1  -1  1  
[DBG]  1  1  1  -1  -1  
[DBG]  1  1  -1  -1  -1  
[DBG]  -1  1  1  1  1  
[DBG]  Identifying agents in a submap for rescheduling (when key_agent is there at the time 17):
[DBG]  Agent 28 found intervals in the sub-map:
[DBG]   [0..43]
[DBG]  Agent 28 (interval in submap: [0..43]) contains time 17, added to replan.
[DBG]  Agent 30 found intervals in the sub-map:
[DBG]   [16..21]
[DBG]  Agent 30 (interval in submap: [16..21]) contains time 17, added to replan.
[DBG]  Agent 61 found intervals in the sub-map:
[DBG]  
[DBG]  Agent 61 is not in sub-map at time 17 (intervals: 
[DBG]  )
[DBG]  Agent 74 found intervals in the sub-map:
[DBG]   [13..17]
[DBG]  Agent 74 (interval in submap: [13..17]) contains time 17, added to replan.
[DBG]  Agent 79 found intervals in the sub-map:
[DBG]   [18..22]
[DBG]  Agent 79 is not in sub-map at time 17 (intervals: 
[DBG]  [18..22] )
[DBG]  Agent 114 found intervals in the sub-map:
[DBG]   [15..19]
[DBG]  Agent 114 (interval in submap: [15..19]) contains time 17, added to replan.
[DBG]  Agent 28 | Start (global): 661 -> (local): (2, 2) at time 17 | Goal (global): 727 -> (local): (4, 4) at time 43
[DBG]  Agent 30 | Start (global): 692 -> (local): (3, 1) at time 17 | Goal (global): 597 -> (local): (0, 2) at time 21
[DBG]  Agent 74 | Start (global): 597 -> (local): (0, 2) at time 17 | Goal (global): 597 -> (local): (0, 2) at time 17
[DBG]  Agent 114 | Start (global): 628 -> (local): (1, 1) at time 17 | Goal (global): 597 -> (local): (0, 2) at time 19
[DBG]  [REPAIR] SAT destroy operator called.
[DBG]  [REPAIR] SAT operator – launching subproblem FOR OPTIMIZATION.
[DBG]  Creating local paths (sx, sy) in the submap for T_sync = 17
[DBG]    Agent 28 (global paths from T=17 to 43) has local path: (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,1) (3,1) (4,1) (4,2) (4,3) (4,4) 
[DBG]    Agent 30 (global paths from T=17 to 21) has local path: (3,1) (2,1) (1,1) (0,1) (0,2) 
[DBG]    Agent 74 (global paths from T=17 to 17) has local path: (0,2) 
[DBG]    Agent 114 (global paths from T=17 to 19) has local path: (1,1) (0,1) (0,2) 
[DBG]  Checking input data for SAT solver:
[DBG]    - Number of agents to replan: 4
[DBG]  Agent 28 has the original local path length: 27 => Start (2,2), Goal (4,4)
[DBG]  Agent 30 has the original local path length: 5 => Start (3,1), Goal (0,2)
[DBG]  Agent 74 has the original local path length: 1 => Start (0,2), Goal (0,2)
[DBG]  Agent 114 has the original local path length: 3 => Start (1,1), Goal (0,2)
[DBG]  Start position: (2, 2), (3, 1), (0, 2), (1, 1), 
[DBG]  Goal position: (4, 4), (0, 2), (0, 2), (0, 2), 
[DBG]  SAT instance and solver created.
Currently solving
Instance name: scen
Map name: map
Encoding used: disappear_at_goal
SAT solver used: Kissat
Optimizing function: sum of costs
Number of agents: 4
Mks LB: 7
SoC LB: 16
Delta: 0
Remaining time: 300000 [ms]

[STAT] Solver returned: -1
[DBG]  SAT solver failed.
[STAT] SAT solver failed to find a valid solution.
[DBG]  ====================
[DBG]  SAT destroy operator called.
[DBG]  SAT heuristic: 2
[DBG]  key_agent_id: 28
[DBG]  key_agent_id global path length: 44
[DBG]  Submap content (global positions):
[DBG]  595 596 597 598 599 
[DBG]  627 628 629 630 631 
[DBG]  659 660 661 662 663 
[DBG]  691 692 693 694 695 
[DBG]  723 724 725 726 727 
[DBG]  Map content with agents and obstacles:
[DBG]  X A . X . 
[DBG]  . A . X . 
[DBG]  . A A X X 
[DBG]  . . X X X 
[DBG]  X . . . A 
[DBG]  content of the map structure that we pass to the SAT solver:
[DBG]  -1  1  1  -1  1  
[DBG]  1  1  1  -1  1  
[DBG]  1  1  1  -1  -1  
[DBG]  1  1  -1  -1  -1  
[DBG]  -1  1  1  1  1  
[DBG]  Identifying agents in a submap for rescheduling (when key_agent is there at the time 7):
[DBG]  Agent 28 found intervals in the sub-map:
[DBG]   [0..43]
[DBG]  Agent 28 (interval in submap: [0..43]) contains time 7, added to replan.
[DBG]  Agent 46 found intervals in the sub-map:
[DBG]   [4..9]
[DBG]  Agent 46 (interval in submap: [4..9]) contains time 7, added to replan.
[DBG]  Agent 63 found intervals in the sub-map:
[DBG]  
[DBG]  Agent 63 is not in sub-map at time 7 (intervals: 
[DBG]  )
[DBG]  Agent 70 found intervals in the sub-map:
[DBG]   [1..2] [7..10]
[DBG]  Agent 70 (interval in submap: [7..10]) contains time 7, added to replan.
[DBG]  Agent 89 found intervals in the sub-map:
[DBG]   [5..12]
[DBG]  Agent 89 (interval in submap: [5..12]) contains time 7, added to replan.
[DBG]  Agent 91 found intervals in the sub-map:
[DBG]   [5..10]
[DBG]  Agent 91 (interval in submap: [5..10]) contains time 7, added to replan.
[DBG]  Agent 28 | Start (global): 661 -> (local): (2, 2) at time 7 | Goal (global): 727 -> (local): (4, 4) at time 43
[DBG]  Agent 46 | Start (global): 628 -> (local): (1, 1) at time 7 | Goal (global): 597 -> (local): (0, 2) at time 9
[DBG]  Agent 70 | Start (global): 727 -> (local): (4, 4) at time 7 | Goal (global): 724 -> (local): (4, 1) at time 10
[DBG]  Agent 89 | Start (global): 596 -> (local): (0, 1) at time 7 | Goal (global): 724 -> (local): (4, 1) at time 12
[DBG]  Agent 91 | Start (global): 660 -> (local): (2, 1) at time 7 | Goal (global): 597 -> (local): (0, 2) at time 10
[DBG]  [REPAIR] SAT destroy operator called.
[DBG]  [REPAIR] SAT operator – launching subproblem FOR OPTIMIZATION.
[DBG]  Creating local paths (sx, sy) in the submap for T_sync = 7
[DBG]    Agent 28 (global paths from T=7 to 43) has local path: (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,1) (3,1) (4,1) (4,2) (4,3) (4,4) 
[DBG]    Agent 46 (global paths from T=7 to 9) has local path: (1,1) (1,2) (0,2) 
[DBG]    Agent 70 (global paths from T=7 to 10) has local path: (4,4) (4,3) (4,2) (4,1) 
[DBG]    Agent 89 (global paths from T=7 to 12) has local path: (0,1) (0,1) (1,1) (2,1) (3,1) (4,1) 
[DBG]    Agent 91 (global paths from T=7 to 10) has local path: (2,1) (1,1) (1,2) (0,2) 
[DBG]  Checking input data for SAT solver:
[DBG]    - Number of agents to replan: 5
[DBG]  Agent 28 has the original local path length: 37 => Start (2,2), Goal (4,4)
[DBG]  Agent 46 has the original local path length: 3 => Start (1,1), Goal (0,2)
[DBG]  Agent 70 has the original local path length: 4 => Start (4,4), Goal (4,1)
[DBG]  Agent 89 has the original local path length: 6 => Start (0,1), Goal (4,1)
[DBG]  Agent 91 has the original local path length: 4 => Start (2,1), Goal (0,2)
[DBG]  Start position: (2, 2), (1, 1), (4, 4), (0, 1), (2, 1), 
[DBG]  Goal position: (4, 4), (0, 2), (4, 1), (4, 1), (0, 2), 
[DBG]  SAT instance and solver created.
Currently solving
Instance name: scen
Map name: map
Encoding used: disappear_at_goal
SAT solver used: Kissat
Optimizing function: sum of costs
Number of agents: 5
Mks LB: 7
SoC LB: 23
Delta: 0
Remaining time: 300000 [ms]

[STAT] Solver returned: -1
[DBG]  SAT solver failed.
[STAT] SAT solver failed to find a valid solution.
[DBG]  ====================
[DBG]  SAT destroy operator called.
[DBG]  SAT heuristic: 2
[DBG]  key_agent_id: 28
[DBG]  key_agent_id global path length: 44
[DBG]  Submap content (global positions):
[DBG]  595 596 597 598 599 
[DBG]  627 628 629 630 631 
[DBG]  659 660 661 662 663 
[DBG]  691 692 693 694 695 
[DBG]  723 724 725 726 727 
[DBG]  Map content with agents and obstacles:
[DBG]  X . . X . 
[DBG]  . . . X A 
[DBG]  . . A X X 
[DBG]  . A X X X 
[DBG]  X . . . . 
[DBG]  content of the map structure that we pass to the SAT solver:
[DBG]  -1  1  1  -1  1  
[DBG]  1  1  1  -1  1  
[DBG]  1  1  1  -1  -1  
[DBG]  1  1  -1  -1  -1  
[DBG]  -1  1  1  1  1  
[DBG]  Identifying agents in a submap for rescheduling (when key_agent is there at the time 2):
[DBG]  Agent 7 found intervals in the sub-map:
[DBG]  
[DBG]  Agent 7 is not in sub-map at time 2 (intervals: 
[DBG]  )
[DBG]  Agent 28 found intervals in the sub-map:
[DBG]   [0..43]
[DBG]  Agent 28 (interval in submap: [0..43]) contains time 2, added to replan.
[DBG]  Agent 70 found intervals in the sub-map:
[DBG]   [1..2] [7..10]
[DBG]  Agent 70 (interval in submap: [1..2]) contains time 2, added to replan.
[DBG]  Agent 108 found intervals in the sub-map:
[DBG]   [0..4]
[DBG]  Agent 108 (interval in submap: [0..4]) contains time 2, added to replan.
[DBG]  Agent 28 | Start (global): 661 -> (local): (2, 2) at time 2 | Goal (global): 727 -> (local): (4, 4) at time 43
[DBG]  Agent 70 | Start (global): 631 -> (local): (1, 4) at time 2 | Goal (global): 631 -> (local): (1, 4) at time 2
[DBG]  Agent 108 | Start (global): 692 -> (local): (3, 1) at time 2 | Goal (global): 725 -> (local): (4, 2) at time 4
[DBG]  [REPAIR] SAT destroy operator called.
[DBG]  [REPAIR] SAT operator – launching subproblem FOR OPTIMIZATION.
[DBG]  Creating local paths (sx, sy) in the submap for T_sync = 2
[DBG]    Agent 28 (global paths from T=2 to 43) has local path: (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,1) (3,1) (4,1) (4,2) (4,3) (4,4) 
[DBG]    Agent 70 (global paths from T=2 to 2) has local path: (1,4) 
[DBG]    Agent 108 (global paths from T=2 to 4) has local path: (3,1) (4,1) (4,2) 
[DBG]  Checking input data for SAT solver:
[DBG]    - Number of agents to replan: 3
[DBG]  Agent 28 has the original local path length: 42 => Start (2,2), Goal (4,4)
[DBG]  Agent 70 has the original local path length: 1 => Start (1,4), Goal (1,4)
[DBG]  Agent 108 has the original local path length: 3 => Start (3,1), Goal (4,2)
[DBG]  Start position: (2, 2), (1, 4), (3, 1), 
[DBG]  Goal position: (4, 4), (1, 4), (4, 2), 
[DBG]  SAT instance and solver created.
Currently solving
Instance name: scen
Map name: map
Encoding used: disappear_at_goal
SAT solver used: Kissat
Optimizing function: sum of costs
Number of agents: 3
Mks LB: 7
SoC LB: 11
Delta: 0
Remaining time: 300000 [ms]

Vertex conflict! Agents 1, 2, timestep 3, location 0
Swapping conflict! Agents 1, 2, timestep 3, edge (0,0)
Vertex conflict! Agents 1, 2, timestep 4, location 0
Swapping conflict! Agents 1, 2, timestep 4, edge (0,0)
Vertex conflict! Agents 1, 2, timestep 5, location 0
Swapping conflict! Agents 1, 2, timestep 5, edge (0,0)
Vertex conflict! Agents 1, 2, timestep 6, location 0
Found plan [agents = 3] [timesteps = 7]
Agent #0 : 9 8 11 12 13 14 15 
Agent #1 : 6 0 0 0 0 0 0 
Agent #2 : 11 12 13 0 0 0 0 

[STAT] Solver returned: 0
[DBG]  Agent (index) 28 | New local path (submap idx):
[DBG]  9 8 11 12 13 14 15 
[DBG]  Agent (index) 70 | New local path (submap idx):
[DBG]  6 
[DBG]  Agent (index) 108 | New local path (submap idx):
[DBG]  11 12 13 
[DBG]  Update the agent path 28 | Original local length: 42 | New local length: 7
[DBG]  agent 28 t=0 => decoded (sx,sy)=(2,2) => global_id=661
[DBG]  agent 28 t=1 => decoded (sx,sy)=(2,1) => global_id=660
[DBG]  agent 28 t=2 => decoded (sx,sy)=(3,1) => global_id=692
[DBG]  agent 28 t=3 => decoded (sx,sy)=(4,1) => global_id=724
[DBG]  agent 28 t=4 => decoded (sx,sy)=(4,2) => global_id=725
[DBG]  agent 28 t=5 => decoded (sx,sy)=(4,3) => global_id=726
[DBG]  agent 28 t=6 => decoded (sx,sy)=(4,4) => global_id=727
[DBG]  Complete path of agent 28:
[DBG]    Original: 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 660 692 724 725 726 727 
[DBG]    New:     661 661 661 660 692 724 725 726 727 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 661 661 
[DBG]    Local path (in submap): 661 660 692 724 725 726 727 
[DBG]    Suffix (out of submap): 
[DBG]  Original agent path length 28 je: 44
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 0: 661, 661, 661, 660, 692, 724, 725, 726, 727, 
[DBG]  Path for agent 28 updated, resulting length: 9
[DBG]  Update the agent path 70 | Original local length: 1 | New local length: 1
[DBG]  agent 70 t=0 => decoded (sx,sy)=(1,4) => global_id=631
[DBG]  Complete path of agent 70:
[DBG]    Original: 632 631 631 632 664 696 728 727 726 725 724 756 755 787 786 818 850 850 850 882 914 913 912 944 976 975 974 
[DBG]    New:     632 631 631 632 664 696 728 727 726 725 724 756 755 787 786 818 850 850 850 882 914 913 912 944 976 975 974 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 632 631 
[DBG]    Local path (in submap): 631 
[DBG]    Suffix (out of submap): 632 664 696 728 727 726 725 724 756 755 787 786 818 850 850 850 882 914 913 912 944 976 975 974 
[DBG]  Original agent path length 70 je: 27
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 1: 632, 631, 631, 632, 664, 696, 728, 727, 726, 725, 724, 756, 755, 787, 786, 818, 850, 850, 850, 882, 914, 913, 912, 944, 976, 975, 974, 
[DBG]  Path for agent 70 updated, resulting length: 27
[DBG]  Update the agent path 108 | Original local length: 3 | New local length: 3
[DBG]  agent 108 t=0 => decoded (sx,sy)=(3,1) => global_id=692
[DBG]  agent 108 t=1 => decoded (sx,sy)=(4,1) => global_id=724
[DBG]  agent 108 t=2 => decoded (sx,sy)=(4,2) => global_id=725
[DBG]  Complete path of agent 108:
[DBG]    Original: 628 660 692 724 725 757 756 788 820 821 822 854 886 887 888 920 952 953 954 955 956 957 989 1021 
[DBG]    New:     628 660 692 724 725 757 756 788 820 821 822 854 886 887 888 920 952 953 954 955 956 957 989 1021 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 628 660 
[DBG]    Local path (in submap): 692 724 725 
[DBG]    Suffix (out of submap): 757 756 788 820 821 822 854 886 887 888 920 952 953 954 955 956 957 989 1021 
[DBG]  Original agent path length 108 je: 24
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 2: 628, 660, 692, 724, 725, 757, 756, 788, 820, 821, 822, 854, 886, 887, 888, 920, 952, 953, 954, 955, 956, 957, 989, 1021, 
[DBG]  Path for agent 108 updated, resulting length: 24
[DBG]  Paths successfully updated.
[DBG]  (LNS.cpp) New path for agent 28: 
[DBG]  661, 661, 661, 660, 692, 724, 725, 726, 727, 
[DBG]  (LNS.cpp) New path for agent 70: 
[DBG]  632, 631, 631, 632, 664, 696, 728, 727, 726, 725, 724, 756, 755, 787, 786, 818, 850, 850, 850, 882, 914, 913, 912, 944, 976, 975, 974, 
[DBG]  (LNS.cpp) New path for agent 108: 
[DBG]  628, 660, 692, 724, 725, 757, 756, 788, 820, 821, 822, 854, 886, 887, 888, 920, 952, 953, 954, 955, 956, 957, 989, 1021, 
[DBG]  Delta value: 0.380435
[DBG]  Rewarding metric index = 2
[DBG]  component_weights = {0.294483, 0.432146, 0.104376, 0.168994}
[DBG]  opSuccess value: 1
[STAT] neighbor.sum_of_costs before recomputation: 57
[STAT] neighbor.old_sum_of_costs before recomputation: 92
[STAT] sum_of_costs before recomputation: 4349
[DBG]  Validate solution immediately after SAT success.
[WARNING] Problem after SAT: Target conflict: agent 42 (len 43) traverses target of agent 28 (len 8) at location 727 at timestep 42
[DBG]  [DEBUG] Attempting immediate repair via init_lns because problem occurred after SAT (should be applied only for conflicts...).
[DBG]  [DEBUG] Passing 150 agents to init_lns (skip=true).
[DBG]  [DEBUG] path_table contents for selected agents (neighbor.agents):
[DBG]    Agent 28 => controlling path length=9
[DBG]    Agent 70 => controlling path length=27
[DBG]    Agent 108 => controlling path length=24
[DBG]  hodnota skip_initial_solution=1
[DBG]  We skip initialSolution => call buildCollisionData()
[DBG]  buildCollisionData() called – skip_initial_solution case.
[DBG]  Agents.size()=150, collision_graph.size()=150
[DBG]  agent 28 => updateCollidingPairs => foundCollision
[DBG]  agent 42 => updateCollidingPairs => foundCollision
[DBG]  agent 46 => updateCollidingPairs => foundCollision
[DBG]  agent 70 => updateCollidingPairs => foundCollision
[DBG]  agent 91 => updateCollidingPairs => foundCollision
[DBG]  Conflicting agent pairs:
[DBG]  agent 28 is in conflict with agent 42
[DBG]  agent 28 is in conflict with agent 46
[DBG]  agent 28 is in conflict with agent 70
[DBG]  agent 28 is in conflict with agent 91
[DBG]  buildCollisionData() => sum_of_costs=4314, num_of_colliding_pairs=4
[DBG]  buildCollisionData done => sum_of_costs=4314, num_of_colliding_pairs=4
[DBG]  sum_of_cost hodnota: 4314
[DBG]  After skip/init build => iteration_stats.back(): sum_of_costs=4314, collisions=4
[DEBUG] Using default neighbor generation strategy for conflicts: 1
[DEBUG] Using default neighbor generation strategy for conflicts: 1
[DEBUG] Using default neighbor generation strategy for conflicts: 1
	InitLNS(PP): runtime = 0.00554517, iterations = 4, colliding pairs = 0, initial colliding pairs = 4, solution cost = 4353, initial solution cost = 4314, failed iterations = 0
[DBG]  init_lns->sum_of_costs after init_lns->run: 4353
[DBG]  sum_of_costs after assignment from init_lns->run: 4353
[DBG]  Recomputing sum_of_cost by dividing neighbor.sum_of_costs and neighbor.old_sum_of_costs
[STAT] sum_of_costs after recomputation: 4353
[STAT] Iteration 49
[DBG]  Random chance did not select SAT operator (r=36), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 49
[DBG]  Random chance did not select SAT operator (r=13), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 49
[DBG]  Random chance did not select SAT operator (r=21), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 49
[DBG]  Random chance did not select SAT operator (r=33), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 49
[DBG]  Random chance did not select SAT operator (r=87), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 49
[DBG]  Random chance did not select SAT operator (r=71), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 49
[DBG]  Using SAT operator (destroy+repair SAT).
[DBG]  ====================
[DBG]  SAT destroy operator called.
[DBG]  SAT heuristic: 2
[DBG]  key_agent_id: 28
[DBG]  key_agent_id global path length: 44
[DBG]  Submap content (global positions):
[DBG]  435 436 437 438 439 
[DBG]  467 468 469 470 471 
[DBG]  499 500 501 502 503 
[DBG]  531 532 533 534 535 
[DBG]  563 564 565 566 567 
[DBG]  Map content with agents and obstacles:
[DBG]  . X . . . 
[DBG]  . A . A X 
[DBG]  . X A . . 
[DBG]  . X . . X 
[DBG]  . X . . X 
[DBG]  content of the map structure that we pass to the SAT solver:
[DBG]  1  -1  1  1  1  
[DBG]  1  1  1  1  -1  
[DBG]  1  -1  1  1  1  
[DBG]  1  -1  1  1  -1  
[DBG]  1  -1  1  1  -1  
[DBG]  Identifying agents in a submap for rescheduling (when key_agent is there at the time 27):
[DBG]  Agent 4 found intervals in the sub-map:
[DBG]  
[DBG]  Agent 4 is not in sub-map at time 27 (intervals: 
[DBG]  )
[DBG]  Agent 26 found intervals in the sub-map:
[DBG]   [21..25]
[DBG]  Agent 26 is not in sub-map at time 27 (intervals: 
[DBG]  [21..25] )
[DBG]  Agent 28 found intervals in the sub-map:
[DBG]   [19..33]
[DBG]  Agent 28 (interval in submap: [19..33]) contains time 27, added to replan.
[DBG]  Agent 30 found intervals in the sub-map:
[DBG]   [22..26]
[DBG]  Agent 30 is not in sub-map at time 27 (intervals: 
[DBG]  [22..26] )
[DBG]  Agent 53 found intervals in the sub-map:
[DBG]   [16..17]
[DBG]  Agent 53 is not in sub-map at time 27 (intervals: 
[DBG]  [16..17] )
[DBG]  Agent 56 found intervals in the sub-map:
[DBG]   [28..34]
[DBG]  Agent 56 is not in sub-map at time 27 (intervals: 
[DBG]  [28..34] )
[DBG]  Agent 61 found intervals in the sub-map:
[DBG]   [25..29]
[DBG]  Agent 61 (interval in submap: [25..29]) contains time 27, added to replan.
[DBG]  Agent 62 found intervals in the sub-map:
[DBG]   [30..35]
[DBG]  Agent 62 is not in sub-map at time 27 (intervals: 
[DBG]  [30..35] )
[DBG]  Agent 74 found intervals in the sub-map:
[DBG]   [18..25]
[DBG]  Agent 74 is not in sub-map at time 27 (intervals: 
[DBG]  [18..25] )
[DBG]  Agent 79 found intervals in the sub-map:
[DBG]   [23..29]
[DBG]  Agent 79 (interval in submap: [23..29]) contains time 27, added to replan.
[DBG]  Agent 28 | Start (global): 501 -> (local): (2, 2) at time 27 | Goal (global): 565 -> (local): (4, 2) at time 33
[DBG]  Agent 61 | Start (global): 468 -> (local): (1, 1) at time 27 | Goal (global): 437 -> (local): (0, 2) at time 29
[DBG]  Agent 79 | Start (global): 470 -> (local): (1, 3) at time 27 | Goal (global): 439 -> (local): (0, 4) at time 29
[DBG]  [REPAIR] SAT destroy operator called.
[DBG]  [REPAIR] SAT operator – launching subproblem FOR OPTIMIZATION.
[DBG]  Creating local paths (sx, sy) in the submap for T_sync = 27
[DBG]    Agent 28 (global paths from T=27 to 33) has local path: (2,2) (2,2) (2,2) (2,2) (2,2) (3,2) (4,2) 
[DBG]    Agent 61 (global paths from T=27 to 29) has local path: (1,1) (1,2) (0,2) 
[DBG]    Agent 79 (global paths from T=27 to 29) has local path: (1,3) (0,3) (0,4) 
[DBG]  Checking input data for SAT solver:
[DBG]    - Number of agents to replan: 3
[DBG]  Agent 28 has the original local path length: 7 => Start (2,2), Goal (4,2)
[DBG]  Agent 61 has the original local path length: 3 => Start (1,1), Goal (0,2)
[DBG]  Agent 79 has the original local path length: 3 => Start (1,3), Goal (0,4)
[DBG]  Start position: (2, 2), (1, 1), (1, 3), 
[DBG]  Goal position: (4, 2), (0, 2), (0, 4), 
[DBG]  SAT instance and solver created.
Currently solving
Instance name: scen
Map name: map
Encoding used: disappear_at_goal
SAT solver used: Kissat
Optimizing function: sum of costs
Number of agents: 3
Mks LB: 3
SoC LB: 9
Delta: 0
Remaining time: 300000 [ms]

Found plan [agents = 3] [timesteps = 3]
Agent #0 : 9 13 16 
Agent #1 : 5 6 1 
Agent #2 : 7 2 3 

[STAT] Solver returned: 0
[DBG]  Agent (index) 28 | New local path (submap idx):
[DBG]  9 13 16 
[DBG]  Agent (index) 61 | New local path (submap idx):
[DBG]  5 6 1 
[DBG]  Agent (index) 79 | New local path (submap idx):
[DBG]  7 2 3 
[DBG]  Update the agent path 28 | Original local length: 7 | New local length: 3
[DBG]  agent 28 t=0 => decoded (sx,sy)=(2,2) => global_id=501
[DBG]  agent 28 t=1 => decoded (sx,sy)=(3,2) => global_id=533
[DBG]  agent 28 t=2 => decoded (sx,sy)=(4,2) => global_id=565
[DBG]  Complete path of agent 28:
[DBG]    Original: 661 661 660 628 628 628 628 628 628 628 628 629 629 629 629 629 629 629 597 565 566 534 502 470 469 501 501 501 501 501 501 501 533 565 597 596 628 660 660 692 724 725 726 727 
[DBG]    New:     661 661 660 628 628 628 628 628 628 628 628 629 629 629 629 629 629 629 597 565 566 534 502 470 469 501 501 501 533 565 597 596 628 660 660 692 724 725 726 727 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 661 661 660 628 628 628 628 628 628 628 628 629 629 629 629 629 629 629 597 565 566 534 502 470 469 501 501 
[DBG]    Local path (in submap): 501 533 565 597 596 628 660 
[DBG]    Suffix (out of submap): 660 692 724 725 726 727 
[DBG]  Original agent path length 28 je: 44
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 0: 661, 661, 660, 628, 628, 628, 628, 628, 628, 628, 628, 629, 629, 629, 629, 629, 629, 629, 597, 565, 566, 534, 502, 470, 469, 501, 501, 501, 533, 565, 597, 596, 628, 660, 660, 692, 724, 725, 726, 727, 
[DBG]  Path for agent 28 updated, resulting length: 40
[DBG]  Update the agent path 61 | Original local length: 3 | New local length: 3
[DBG]  agent 61 t=0 => decoded (sx,sy)=(1,1) => global_id=468
[DBG]  agent 61 t=1 => decoded (sx,sy)=(1,2) => global_id=469
[DBG]  agent 61 t=2 => decoded (sx,sy)=(0,2) => global_id=437
[DBG]  Complete path of agent 61:
[DBG]    Original: 813 813 813 813 813 812 780 779 747 715 683 684 685 686 687 688 689 657 625 593 561 529 530 498 498 499 467 468 469 437 405 406 407 408 409 377 345 313 
[DBG]    New:     813 813 813 813 813 812 780 779 747 715 683 684 685 686 687 688 689 657 625 593 561 529 530 498 498 499 467 468 469 437 405 406 407 408 409 377 345 313 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 813 813 813 813 813 812 780 779 747 715 683 684 685 686 687 688 689 657 625 593 561 529 530 498 498 499 467 
[DBG]    Local path (in submap): 468 469 437 
[DBG]    Suffix (out of submap): 405 406 407 408 409 377 345 313 
[DBG]  Original agent path length 61 je: 38
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 1: 813, 813, 813, 813, 813, 812, 780, 779, 747, 715, 683, 684, 685, 686, 687, 688, 689, 657, 625, 593, 561, 529, 530, 498, 498, 499, 467, 468, 469, 437, 405, 406, 407, 408, 409, 377, 345, 313, 
[DBG]  Path for agent 61 updated, resulting length: 38
[DBG]  Update the agent path 79 | Original local length: 3 | New local length: 3
[DBG]  agent 79 t=0 => decoded (sx,sy)=(1,3) => global_id=470
[DBG]  agent 79 t=1 => decoded (sx,sy)=(0,3) => global_id=438
[DBG]  agent 79 t=2 => decoded (sx,sy)=(0,4) => global_id=439
[DBG]  Complete path of agent 79:
[DBG]    Original: 1004 1005 973 941 942 910 878 846 847 815 783 784 752 720 688 689 657 658 659 660 628 596 597 565 566 534 502 470 438 439 440 408 409 409 377 345 313 281 249 217 185 153 121 122 123 
[DBG]    New:     1004 1005 973 941 942 910 878 846 847 815 783 784 752 720 688 689 657 658 659 660 628 596 597 565 566 534 502 470 438 439 440 408 409 409 377 345 313 281 249 217 185 153 121 122 123 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 1004 1005 973 941 942 910 878 846 847 815 783 784 752 720 688 689 657 658 659 660 628 596 597 565 566 534 502 
[DBG]    Local path (in submap): 470 438 439 
[DBG]    Suffix (out of submap): 440 408 409 409 377 345 313 281 249 217 185 153 121 122 123 
[DBG]  Original agent path length 79 je: 45
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 2: 1004, 1005, 973, 941, 942, 910, 878, 846, 847, 815, 783, 784, 752, 720, 688, 689, 657, 658, 659, 660, 628, 596, 597, 565, 566, 534, 502, 470, 438, 439, 440, 408, 409, 409, 377, 345, 313, 281, 249, 217, 185, 153, 121, 122, 123, 
[DBG]  Path for agent 79 updated, resulting length: 45
[DBG]  Paths successfully updated.
[DBG]  (LNS.cpp) New path for agent 28: 
[DBG]  661, 661, 660, 628, 628, 628, 628, 628, 628, 628, 628, 629, 629, 629, 629, 629, 629, 629, 597, 565, 566, 534, 502, 470, 469, 501, 501, 501, 533, 565, 597, 596, 628, 660, 660, 692, 724, 725, 726, 727, 
[DBG]  (LNS.cpp) New path for agent 61: 
[DBG]  813, 813, 813, 813, 813, 812, 780, 779, 747, 715, 683, 684, 685, 686, 687, 688, 689, 657, 625, 593, 561, 529, 530, 498, 498, 499, 467, 468, 469, 437, 405, 406, 407, 408, 409, 377, 345, 313, 
[DBG]  (LNS.cpp) New path for agent 79: 
[DBG]  1004, 1005, 973, 941, 942, 910, 878, 846, 847, 815, 783, 784, 752, 720, 688, 689, 657, 658, 659, 660, 628, 596, 597, 565, 566, 534, 502, 470, 438, 439, 440, 408, 409, 409, 377, 345, 313, 281, 249, 217, 185, 153, 121, 122, 123, 
[DBG]  Delta value: 0.0322581
[DBG]  Rewarding metric index = 1
[DBG]  component_weights = {0.283862, 0.452628, 0.100611, 0.162899}
[DBG]  opSuccess value: 1
[STAT] neighbor.sum_of_costs before recomputation: 120
[STAT] neighbor.old_sum_of_costs before recomputation: 124
[STAT] sum_of_costs before recomputation: 4353
[DBG]  Validate solution immediately after SAT success.
[WARNING] Problem after SAT: Target conflict: agent 42 (len 43) traverses target of agent 28 (len 39) at location 727 at timestep 42
[DBG]  [DEBUG] Attempting immediate repair via init_lns because problem occurred after SAT (should be applied only for conflicts...).
[DBG]  [DEBUG] Passing 150 agents to init_lns (skip=true).
[DBG]  [DEBUG] path_table contents for selected agents (neighbor.agents):
[DBG]    Agent 28 => controlling path length=40
[DBG]    Agent 61 => controlling path length=38
[DBG]    Agent 79 => controlling path length=45
[DBG]  hodnota skip_initial_solution=1
[DBG]  We skip initialSolution => call buildCollisionData()
[DBG]  buildCollisionData() called – skip_initial_solution case.
[DBG]  Agents.size()=150, collision_graph.size()=150
[DBG]  agent 28 => updateCollidingPairs => foundCollision
[DBG]  agent 42 => updateCollidingPairs => foundCollision
[DBG]  agent 53 => updateCollidingPairs => foundCollision
[DBG]  agent 62 => updateCollidingPairs => foundCollision
[DBG]  Conflicting agent pairs:
[DBG]  agent 28 is in conflict with agent 42
[DBG]  agent 28 is in conflict with agent 53
[DBG]  agent 28 is in conflict with agent 62
[DBG]  buildCollisionData() => sum_of_costs=4349, num_of_colliding_pairs=3
[DBG]  buildCollisionData done => sum_of_costs=4349, num_of_colliding_pairs=3
[DBG]  sum_of_cost hodnota: 4349
[DBG]  After skip/init build => iteration_stats.back(): sum_of_costs=4349, collisions=3
[DEBUG] Using default neighbor generation strategy for conflicts: 2
[DEBUG] Using default neighbor generation strategy for conflicts: 0
	InitLNS(PP): runtime = 0.00210942, iterations = 3, colliding pairs = 0, initial colliding pairs = 3, solution cost = 4346, initial solution cost = 4349, failed iterations = 0
[DBG]  init_lns->sum_of_costs after init_lns->run: 4346
[DBG]  sum_of_costs after assignment from init_lns->run: 4346
[DBG]  Recomputing sum_of_cost by dividing neighbor.sum_of_costs and neighbor.old_sum_of_costs
[STAT] sum_of_costs after recomputation: 4346
[STAT] Iteration 50
[DBG]  Random chance did not select SAT operator (r=13), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 50
[DBG]  Random chance did not select SAT operator (r=97), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 50
[DBG]  Random chance did not select SAT operator (r=89), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 50
[DBG]  Random chance did not select SAT operator (r=35), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 50
[DBG]  Random chance did not select SAT operator (r=30), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 50
[DBG]  Random chance did not select SAT operator (r=35), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 50
[DBG]  Random chance did not select SAT operator (r=48), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 50
[DBG]  Random chance did not select SAT operator (r=86), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 50
[DBG]  Random chance did not select SAT operator (r=76), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 50
[DBG]  Random chance did not select SAT operator (r=65), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 50
[DBG]  Random chance did not select SAT operator (r=97), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 50
[DBG]  Random chance did not select SAT operator (r=49), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 50
[DBG]  Random chance did not select SAT operator (r=78), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 50
[DBG]  Random chance did not select SAT operator (r=98), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 50
[DBG]  Using SAT operator (destroy+repair SAT).
[DBG]  ====================
[DBG]  SAT destroy operator called.
[DBG]  SAT heuristic: 2
[DBG]  key_agent_id: 28
[DBG]  key_agent_id global path length: 44
[DBG]  Submap content (global positions):
[DBG]  561 562 563 564 565 
[DBG]  593 594 595 596 597 
[DBG]  625 626 627 628 629 
[DBG]  657 658 659 660 661 
[DBG]  689 690 691 692 693 
[DBG]  Map content with agents and obstacles:
[DBG]  . X . X . 
[DBG]  . . X . . 
[DBG]  . X A . . 
[DBG]  A . A A . 
[DBG]  . X . . X 
[DBG]  content of the map structure that we pass to the SAT solver:
[DBG]  1  -1  1  -1  1  
[DBG]  1  1  -1  1  1  
[DBG]  1  -1  1  1  1  
[DBG]  1  1  1  1  1  
[DBG]  1  -1  1  1  -1  
[DBG]  Identifying agents in a submap for rescheduling (when key_agent is there at the time 33):
[DBG]  Agent 26 found intervals in the sub-map:
[DBG]   [25..30]
[DBG]  Agent 26 is not in sub-map at time 33 (intervals: 
[DBG]  [25..30] )
[DBG]  Agent 28 found intervals in the sub-map:
[DBG]   [0..39]
[DBG]  Agent 28 (interval in submap: [0..39]) contains time 33, added to replan.
[DBG]  Agent 53 found intervals in the sub-map:
[DBG]   [26..34]
[DBG]  Agent 53 (interval in submap: [26..34]) contains time 33, added to replan.
[DBG]  Agent 69 found intervals in the sub-map:
[DBG]   [30..37]
[DBG]  Agent 69 (interval in submap: [30..37]) contains time 33, added to replan.
[DBG]  Agent 148 found intervals in the sub-map:
[DBG]   [31..34]
[DBG]  Agent 148 (interval in submap: [31..34]) contains time 33, added to replan.
[DBG]  Agent 28 | Start (global): 627 -> (local): (2, 2) at time 33 | Goal (global): 692 -> (local): (4, 3) at time 39
[DBG]  Agent 53 | Start (global): 660 -> (local): (3, 3) at time 33 | Goal (global): 692 -> (local): (4, 3) at time 34
[DBG]  Agent 69 | Start (global): 657 -> (local): (3, 0) at time 33 | Goal (global): 692 -> (local): (4, 3) at time 37
[DBG]  Agent 148 | Start (global): 659 -> (local): (3, 2) at time 33 | Goal (global): 660 -> (local): (3, 3) at time 34
[DBG]  [REPAIR] SAT destroy operator called.
[DBG]  [REPAIR] SAT operator – launching subproblem FOR OPTIMIZATION.
[DBG]  Creating local paths (sx, sy) in the submap for T_sync = 33
[DBG]    Agent 28 (global paths from T=33 to 39) has local path: (2,2) (2,2) (2,2) (2,2) (3,2) (4,2) (4,3) 
[DBG]    Agent 53 (global paths from T=33 to 34) has local path: (3,3) (4,3) 
[DBG]    Agent 69 (global paths from T=33 to 37) has local path: (3,0) (3,1) (3,2) (4,2) (4,3) 
[DBG]    Agent 148 (global paths from T=33 to 34) has local path: (3,2) (3,3) 
[DBG]  Checking input data for SAT solver:
[DBG]    - Number of agents to replan: 4
[DBG]  Agent 28 has the original local path length: 7 => Start (2,2), Goal (4,3)
[DBG]  Agent 53 has the original local path length: 2 => Start (3,3), Goal (4,3)
[DBG]  Agent 69 has the original local path length: 5 => Start (3,0), Goal (4,3)
[DBG]  Agent 148 has the original local path length: 2 => Start (3,2), Goal (3,3)
[DBG]  Start position: (2, 2), (3, 3), (3, 0), (3, 2), 
[DBG]  Goal position: (4, 3), (4, 3), (4, 3), (3, 3), 
[DBG]  SAT instance and solver created.
Currently solving
Instance name: scen
Map name: map
Encoding used: disappear_at_goal
SAT solver used: Kissat
Optimizing function: sum of costs
Number of agents: 4
Mks LB: 5
SoC LB: 13
Delta: 0
Remaining time: 300000 [ms]

Vertex conflict! Agents 0, 1, timestep 4, location 0
Vertex conflict! Agents 0, 3, timestep 4, location 0
Vertex conflict! Agents 1, 3, timestep 2, location 0
Swapping conflict! Agents 1, 3, timestep 2, edge (0,0)
Vertex conflict! Agents 1, 3, timestep 3, location 0
Swapping conflict! Agents 1, 3, timestep 3, edge (0,0)
Vertex conflict! Agents 1, 3, timestep 4, location 0
Found plan [agents = 4] [timesteps = 5]
Agent #0 : 8 13 17 18 0 
Agent #1 : 14 18 0 0 0 
Agent #2 : 11 12 13 17 18 
Agent #3 : 13 14 0 0 0 

[STAT] Solver returned: 0
[DBG]  Agent (index) 28 | New local path (submap idx):
[DBG]  8 13 17 18 
[DBG]  Agent (index) 53 | New local path (submap idx):
[DBG]  14 18 
[DBG]  Agent (index) 69 | New local path (submap idx):
[DBG]  11 12 13 17 18 
[DBG]  Agent (index) 148 | New local path (submap idx):
[DBG]  13 14 
[DBG]  Update the agent path 28 | Original local length: 7 | New local length: 4
[DBG]  agent 28 t=0 => decoded (sx,sy)=(2,2) => global_id=627
[DBG]  agent 28 t=1 => decoded (sx,sy)=(3,2) => global_id=659
[DBG]  agent 28 t=2 => decoded (sx,sy)=(4,2) => global_id=691
[DBG]  agent 28 t=3 => decoded (sx,sy)=(4,3) => global_id=692
[DBG]  Complete path of agent 28:
[DBG]    Original: 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 660 659 627 627 627 627 627 659 691 692 724 725 726 727 
[DBG]    New:     661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 660 659 627 627 659 691 692 724 725 726 727 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 660 659 627 
[DBG]    Local path (in submap): 627 659 691 692 724 725 726 
[DBG]    Suffix (out of submap): 727 
[DBG]  Original agent path length 28 je: 44
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 0: 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 660, 659, 627, 627, 659, 691, 692, 724, 725, 726, 727, 
[DBG]  Path for agent 28 updated, resulting length: 41
[DBG]  Update the agent path 53 | Original local length: 2 | New local length: 2
[DBG]  agent 53 t=0 => decoded (sx,sy)=(3,3) => global_id=660
[DBG]  agent 53 t=1 => decoded (sx,sy)=(4,3) => global_id=692
[DBG]  Complete path of agent 53:
[DBG]    Original: 84 116 148 148 180 212 244 244 244 276 308 340 339 339 371 403 435 467 466 465 464 496 496 496 528 529 561 593 625 625 657 658 659 660 692 724 756 788 820 821 
[DBG]    New:     84 116 148 148 180 212 244 244 244 276 308 340 339 339 371 403 435 467 466 465 464 496 496 496 528 529 561 593 625 625 657 658 659 660 692 724 756 788 820 821 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 84 116 148 148 180 212 244 244 244 276 308 340 339 339 371 403 435 467 466 465 464 496 496 496 528 529 561 593 625 625 657 658 659 
[DBG]    Local path (in submap): 660 692 
[DBG]    Suffix (out of submap): 724 756 788 820 821 
[DBG]  Original agent path length 53 je: 40
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 1: 84, 116, 148, 148, 180, 212, 244, 244, 244, 276, 308, 340, 339, 339, 371, 403, 435, 467, 466, 465, 464, 496, 496, 496, 528, 529, 561, 593, 625, 625, 657, 658, 659, 660, 692, 724, 756, 788, 820, 821, 
[DBG]  Path for agent 53 updated, resulting length: 40
[DBG]  Update the agent path 69 | Original local length: 5 | New local length: 5
[DBG]  agent 69 t=0 => decoded (sx,sy)=(3,0) => global_id=657
[DBG]  agent 69 t=1 => decoded (sx,sy)=(3,1) => global_id=658
[DBG]  agent 69 t=2 => decoded (sx,sy)=(3,2) => global_id=659
[DBG]  agent 69 t=3 => decoded (sx,sy)=(4,2) => global_id=691
[DBG]  agent 69 t=4 => decoded (sx,sy)=(4,3) => global_id=692
[DBG]  Complete path of agent 69:
[DBG]    Original: 4 5 37 69 70 71 72 73 74 106 138 139 140 141 173 205 237 269 301 333 365 366 398 430 462 463 464 496 528 529 561 593 625 657 658 659 691 692 724 756 788 820 
[DBG]    New:     4 5 37 69 70 71 72 73 74 106 138 139 140 141 173 205 237 269 301 333 365 366 398 430 462 463 464 496 528 529 561 593 625 657 658 659 691 692 724 756 788 820 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 4 5 37 69 70 71 72 73 74 106 138 139 140 141 173 205 237 269 301 333 365 366 398 430 462 463 464 496 528 529 561 593 625 
[DBG]    Local path (in submap): 657 658 659 691 692 
[DBG]    Suffix (out of submap): 724 756 788 820 
[DBG]  Original agent path length 69 je: 42
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 2: 4, 5, 37, 69, 70, 71, 72, 73, 74, 106, 138, 139, 140, 141, 173, 205, 237, 269, 301, 333, 365, 366, 398, 430, 462, 463, 464, 496, 528, 529, 561, 593, 625, 657, 658, 659, 691, 692, 724, 756, 788, 820, 
[DBG]  Path for agent 69 updated, resulting length: 42
[DBG]  Update the agent path 148 | Original local length: 2 | New local length: 2
[DBG]  agent 148 t=0 => decoded (sx,sy)=(3,2) => global_id=659
[DBG]  agent 148 t=1 => decoded (sx,sy)=(3,3) => global_id=660
[DBG]  Complete path of agent 148:
[DBG]    Original: 776 776 776 776 776 744 744 744 776 808 808 808 808 808 776 777 745 713 714 715 683 684 685 717 718 719 720 688 656 656 656 657 658 659 660 
[DBG]    New:     776 776 776 776 776 744 744 744 776 808 808 808 808 808 776 777 745 713 714 715 683 684 685 717 718 719 720 688 656 656 656 657 658 659 660 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 776 776 776 776 776 744 744 744 776 808 808 808 808 808 776 777 745 713 714 715 683 684 685 717 718 719 720 688 656 656 656 657 658 
[DBG]    Local path (in submap): 659 660 
[DBG]    Suffix (out of submap): 
[DBG]  Original agent path length 148 je: 35
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 3: 776, 776, 776, 776, 776, 744, 744, 744, 776, 808, 808, 808, 808, 808, 776, 777, 745, 713, 714, 715, 683, 684, 685, 717, 718, 719, 720, 688, 656, 656, 656, 657, 658, 659, 660, 
[DBG]  Path for agent 148 updated, resulting length: 35
[DBG]  Paths successfully updated.
[DBG]  (LNS.cpp) New path for agent 28: 
[DBG]  661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 660, 659, 627, 627, 659, 691, 692, 724, 725, 726, 727, 
[DBG]  (LNS.cpp) New path for agent 53: 
[DBG]  84, 116, 148, 148, 180, 212, 244, 244, 244, 276, 308, 340, 339, 339, 371, 403, 435, 467, 466, 465, 464, 496, 496, 496, 528, 529, 561, 593, 625, 625, 657, 658, 659, 660, 692, 724, 756, 788, 820, 821, 
[DBG]  (LNS.cpp) New path for agent 69: 
[DBG]  4, 5, 37, 69, 70, 71, 72, 73, 74, 106, 138, 139, 140, 141, 173, 205, 237, 269, 301, 333, 365, 366, 398, 430, 462, 463, 464, 496, 528, 529, 561, 593, 625, 657, 658, 659, 691, 692, 724, 756, 788, 820, 
[DBG]  (LNS.cpp) New path for agent 148: 
[DBG]  776, 776, 776, 776, 776, 744, 744, 744, 776, 808, 808, 808, 808, 808, 776, 777, 745, 713, 714, 715, 683, 684, 685, 717, 718, 719, 720, 688, 656, 656, 656, 657, 658, 659, 660, 
[DBG]  Delta value: 0.0191083
[DBG]  Rewarding metric index = 1
[DBG]  component_weights = {0.274813, 0.470077, 0.0974042, 0.157706}
[DBG]  opSuccess value: 1
[STAT] neighbor.sum_of_costs before recomputation: 154
[STAT] neighbor.old_sum_of_costs before recomputation: 157
[STAT] sum_of_costs before recomputation: 4346
[DBG]  Validate solution immediately after SAT success.
[WARNING] Problem after SAT: Target conflict: agent 42 (len 43) traverses target of agent 28 (len 40) at location 727 at timestep 42
[DBG]  [DEBUG] Attempting immediate repair via init_lns because problem occurred after SAT (should be applied only for conflicts...).
[DBG]  [DEBUG] Passing 150 agents to init_lns (skip=true).
[DBG]  [DEBUG] path_table contents for selected agents (neighbor.agents):
[DBG]    Agent 28 => controlling path length=41
[DBG]    Agent 53 => controlling path length=40
[DBG]    Agent 69 => controlling path length=42
[DBG]    Agent 148 => controlling path length=35
[DBG]  hodnota skip_initial_solution=1
[DBG]  We skip initialSolution => call buildCollisionData()
[DBG]  buildCollisionData() called – skip_initial_solution case.
[DBG]  Agents.size()=150, collision_graph.size()=150
[DBG]  agent 28 => updateCollidingPairs => foundCollision
[DBG]  agent 42 => updateCollidingPairs => foundCollision
[DBG]  Conflicting agent pairs:
[DBG]  agent 28 is in conflict with agent 42
[DBG]  buildCollisionData() => sum_of_costs=4343, num_of_colliding_pairs=1
[DBG]  buildCollisionData done => sum_of_costs=4343, num_of_colliding_pairs=1
[DBG]  sum_of_cost hodnota: 4343
[DBG]  After skip/init build => iteration_stats.back(): sum_of_costs=4343, collisions=1
[DEBUG] Using default neighbor generation strategy for conflicts: 2
	InitLNS(PP): runtime = 0.000734459, iterations = 2, colliding pairs = 0, initial colliding pairs = 1, solution cost = 4350, initial solution cost = 4343, failed iterations = 0
[DBG]  init_lns->sum_of_costs after init_lns->run: 4350
[DBG]  sum_of_costs after assignment from init_lns->run: 4350
[DBG]  Recomputing sum_of_cost by dividing neighbor.sum_of_costs and neighbor.old_sum_of_costs
[STAT] sum_of_costs after recomputation: 4350
[STAT] Iteration 51
[DBG]  Using SAT operator (destroy+repair SAT).
[DBG]  ====================
[DBG]  SAT destroy operator called.
[DBG]  SAT heuristic: 2
[DBG]  key_agent_id: 28
[DBG]  key_agent_id global path length: 44
[DBG]  Submap content (global positions):
[DBG]  595 596 597 598 599 
[DBG]  627 628 629 630 631 
[DBG]  659 660 661 662 663 
[DBG]  691 692 693 694 695 
[DBG]  723 724 725 726 727 
[DBG]  Map content with agents and obstacles:
[DBG]  X . . X . 
[DBG]  . A A X . 
[DBG]  . . A X X 
[DBG]  . . X X X 
[DBG]  X . . . . 
[DBG]  content of the map structure that we pass to the SAT solver:
[DBG]  -1  1  1  -1  1  
[DBG]  1  1  1  -1  1  
[DBG]  1  1  1  -1  -1  
[DBG]  1  1  -1  -1  -1  
[DBG]  -1  1  1  1  1  
[DBG]  Identifying agents in a submap for rescheduling (when key_agent is there at the time 28):
[DBG]  Agent 26 found intervals in the sub-map:
[DBG]   [26..31]
[DBG]  Agent 26 (interval in submap: [26..31]) contains time 28, added to replan.
[DBG]  Agent 28 found intervals in the sub-map:
[DBG]   [0..43]
[DBG]  Agent 28 (interval in submap: [0..43]) contains time 28, added to replan.
[DBG]  Agent 62 found intervals in the sub-map:
[DBG]   [25..29]
[DBG]  Agent 62 (interval in submap: [25..29]) contains time 28, added to replan.
[DBG]  Agent 148 found intervals in the sub-map:
[DBG]   [33..34]
[DBG]  Agent 148 is not in sub-map at time 28 (intervals: 
[DBG]  [33..34] )
[DBG]  Agent 26 | Start (global): 628 -> (local): (1, 1) at time 28 | Goal (global): 724 -> (local): (4, 1) at time 31
[DBG]  Agent 28 | Start (global): 661 -> (local): (2, 2) at time 28 | Goal (global): 727 -> (local): (4, 4) at time 43
[DBG]  Agent 62 | Start (global): 629 -> (local): (1, 2) at time 28 | Goal (global): 597 -> (local): (0, 2) at time 29
[DBG]  [REPAIR] SAT destroy operator called.
[DBG]  [REPAIR] SAT operator – launching subproblem FOR OPTIMIZATION.
[DBG]  Creating local paths (sx, sy) in the submap for T_sync = 28
[DBG]    Agent 26 (global paths from T=28 to 31) has local path: (1,1) (2,1) (3,1) (4,1) 
[DBG]    Agent 28 (global paths from T=28 to 43) has local path: (2,2) (2,2) (2,1) (2,0) (1,0) (1,0) (1,0) (1,0) (1,0) (2,0) (3,0) (3,1) (4,1) (4,2) (4,3) (4,4) 
[DBG]    Agent 62 (global paths from T=28 to 29) has local path: (1,2) (0,2) 
[DBG]  Checking input data for SAT solver:
[DBG]    - Number of agents to replan: 3
[DBG]  Agent 26 has the original local path length: 4 => Start (1,1), Goal (4,1)
[DBG]  Agent 28 has the original local path length: 16 => Start (2,2), Goal (4,4)
[DBG]  Agent 62 has the original local path length: 2 => Start (1,2), Goal (0,2)
[DBG]  Start position: (1, 1), (2, 2), (1, 2), 
[DBG]  Goal position: (4, 1), (4, 4), (0, 2), 
[DBG]  SAT instance and solver created.
Currently solving
Instance name: scen
Map name: map
Encoding used: disappear_at_goal
SAT solver used: Kissat
Optimizing function: sum of costs
Number of agents: 3
Mks LB: 7
SoC LB: 13
Delta: 0
Remaining time: 300000 [ms]

[STAT] Solver returned: -1
[DBG]  SAT solver failed.
[STAT] SAT solver failed to find a valid solution.
[DBG]  ====================
[DBG]  SAT destroy operator called.
[DBG]  SAT heuristic: 2
[DBG]  key_agent_id: 28
[DBG]  key_agent_id global path length: 44
[DBG]  Submap content (global positions):
[DBG]  595 596 597 598 599 
[DBG]  627 628 629 630 631 
[DBG]  659 660 661 662 663 
[DBG]  691 692 693 694 695 
[DBG]  723 724 725 726 727 
[DBG]  Map content with agents and obstacles:
[DBG]  X A . X . 
[DBG]  . . . X . 
[DBG]  . . A X X 
[DBG]  . A X X X 
[DBG]  X . . A . 
[DBG]  content of the map structure that we pass to the SAT solver:
[DBG]  -1  1  1  -1  1  
[DBG]  1  1  1  -1  1  
[DBG]  1  1  1  -1  -1  
[DBG]  1  1  -1  -1  -1  
[DBG]  -1  1  1  1  1  
[DBG]  Identifying agents in a submap for rescheduling (when key_agent is there at the time 6):
[DBG]  Agent 28 found intervals in the sub-map:
[DBG]   [0..43]
[DBG]  Agent 28 (interval in submap: [0..43]) contains time 6, added to replan.
[DBG]  Agent 46 found intervals in the sub-map:
[DBG]   [4..7]
[DBG]  Agent 46 (interval in submap: [4..7]) contains time 6, added to replan.
[DBG]  Agent 89 found intervals in the sub-map:
[DBG]   [5..15]
[DBG]  Agent 89 (interval in submap: [5..15]) contains time 6, added to replan.
[DBG]  Agent 91 found intervals in the sub-map:
[DBG]   [5..10]
[DBG]  Agent 91 (interval in submap: [5..10]) contains time 6, added to replan.
[DBG]  Agent 28 | Start (global): 661 -> (local): (2, 2) at time 6 | Goal (global): 727 -> (local): (4, 4) at time 43
[DBG]  Agent 46 | Start (global): 726 -> (local): (4, 3) at time 6 | Goal (global): 727 -> (local): (4, 4) at time 7
[DBG]  Agent 89 | Start (global): 596 -> (local): (0, 1) at time 6 | Goal (global): 725 -> (local): (4, 2) at time 15
[DBG]  Agent 91 | Start (global): 692 -> (local): (3, 1) at time 6 | Goal (global): 597 -> (local): (0, 2) at time 10
[DBG]  [REPAIR] SAT destroy operator called.
[DBG]  [REPAIR] SAT operator – launching subproblem FOR OPTIMIZATION.
[DBG]  Creating local paths (sx, sy) in the submap for T_sync = 6
[DBG]    Agent 28 (global paths from T=6 to 43) has local path: (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,1) (2,0) (1,0) (1,0) (1,0) (1,0) (1,0) (2,0) (3,0) (3,1) (4,1) (4,2) (4,3) (4,4) 
[DBG]    Agent 46 (global paths from T=6 to 7) has local path: (4,3) (4,4) 
[DBG]    Agent 89 (global paths from T=6 to 15) has local path: (0,1) (0,1) (0,1) (0,1) (0,1) (1,1) (2,1) (3,1) (4,1) (4,2) 
[DBG]    Agent 91 (global paths from T=6 to 10) has local path: (3,1) (2,1) (1,1) (1,2) (0,2) 
[DBG]  Checking input data for SAT solver:
[DBG]    - Number of agents to replan: 4
[DBG]  Agent 28 has the original local path length: 38 => Start (2,2), Goal (4,4)
[DBG]  Agent 46 has the original local path length: 2 => Start (4,3), Goal (4,4)
[DBG]  Agent 89 has the original local path length: 10 => Start (0,1), Goal (4,2)
[DBG]  Agent 91 has the original local path length: 5 => Start (3,1), Goal (0,2)
[DBG]  Start position: (2, 2), (4, 3), (0, 1), (3, 1), 
[DBG]  Goal position: (4, 4), (4, 4), (4, 2), (0, 2), 
[DBG]  SAT instance and solver created.
Currently solving
Instance name: scen
Map name: map
Encoding used: disappear_at_goal
SAT solver used: Kissat
Optimizing function: sum of costs
Number of agents: 4
Mks LB: 7
SoC LB: 20
Delta: 0
Remaining time: 300000 [ms]

[STAT] Solver returned: -1
[DBG]  SAT solver failed.
[STAT] SAT solver failed to find a valid solution.
[DBG]  ====================
[DBG]  SAT destroy operator called.
[DBG]  SAT heuristic: 2
[DBG]  key_agent_id: 28
[DBG]  key_agent_id global path length: 44
[DBG]  Submap content (global positions):
[DBG]  595 596 597 598 599 
[DBG]  627 628 629 630 631 
[DBG]  659 660 661 662 663 
[DBG]  691 692 693 694 695 
[DBG]  723 724 725 726 727 
[DBG]  Map content with agents and obstacles:
[DBG]  X . . X . 
[DBG]  . A . X . 
[DBG]  . A A X X 
[DBG]  . . X X X 
[DBG]  X . . . . 
[DBG]  content of the map structure that we pass to the SAT solver:
[DBG]  -1  1  1  -1  1  
[DBG]  1  1  1  -1  1  
[DBG]  1  1  1  -1  -1  
[DBG]  1  1  -1  -1  -1  
[DBG]  -1  1  1  1  1  
[DBG]  Identifying agents in a submap for rescheduling (when key_agent is there at the time 12):
[DBG]  Agent 28 found intervals in the sub-map:
[DBG]   [0..43]
[DBG]  Agent 28 (interval in submap: [0..43]) contains time 12, added to replan.
[DBG]  Agent 74 found intervals in the sub-map:
[DBG]   [13..17]
[DBG]  Agent 74 is not in sub-map at time 12 (intervals: 
[DBG]  [13..17] )
[DBG]  Agent 86 found intervals in the sub-map:
[DBG]   [10..14]
[DBG]  Agent 86 (interval in submap: [10..14]) contains time 12, added to replan.
[DBG]  Agent 89 found intervals in the sub-map:
[DBG]   [5..15]
[DBG]  Agent 89 (interval in submap: [5..15]) contains time 12, added to replan.
[DBG]  Agent 28 | Start (global): 661 -> (local): (2, 2) at time 12 | Goal (global): 727 -> (local): (4, 4) at time 43
[DBG]  Agent 86 | Start (global): 628 -> (local): (1, 1) at time 12 | Goal (global): 597 -> (local): (0, 2) at time 14
[DBG]  Agent 89 | Start (global): 660 -> (local): (2, 1) at time 12 | Goal (global): 725 -> (local): (4, 2) at time 15
[DBG]  [REPAIR] SAT destroy operator called.
[DBG]  [REPAIR] SAT operator – launching subproblem FOR OPTIMIZATION.
[DBG]  Creating local paths (sx, sy) in the submap for T_sync = 12
[DBG]    Agent 28 (global paths from T=12 to 43) has local path: (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,1) (2,0) (1,0) (1,0) (1,0) (1,0) (1,0) (2,0) (3,0) (3,1) (4,1) (4,2) (4,3) (4,4) 
[DBG]    Agent 86 (global paths from T=12 to 14) has local path: (1,1) (0,1) (0,2) 
[DBG]    Agent 89 (global paths from T=12 to 15) has local path: (2,1) (3,1) (4,1) (4,2) 
[DBG]  Checking input data for SAT solver:
[DBG]    - Number of agents to replan: 3
[DBG]  Agent 28 has the original local path length: 32 => Start (2,2), Goal (4,4)
[DBG]  Agent 86 has the original local path length: 3 => Start (1,1), Goal (0,2)
[DBG]  Agent 89 has the original local path length: 4 => Start (2,1), Goal (4,2)
[DBG]  Start position: (2, 2), (1, 1), (2, 1), 
[DBG]  Goal position: (4, 4), (0, 2), (4, 2), 
[DBG]  SAT instance and solver created.
Currently solving
Instance name: scen
Map name: map
Encoding used: disappear_at_goal
SAT solver used: Kissat
Optimizing function: sum of costs
Number of agents: 3
Mks LB: 7
SoC LB: 14
Delta: 0
Remaining time: 300000 [ms]

Vertex conflict! Agents 1, 2, timestep 4, location 0
Swapping conflict! Agents 1, 2, timestep 4, edge (0,0)
Vertex conflict! Agents 1, 2, timestep 5, location 0
Swapping conflict! Agents 1, 2, timestep 5, edge (0,0)
Vertex conflict! Agents 1, 2, timestep 6, location 0
Found plan [agents = 3] [timesteps = 7]
Agent #0 : 9 8 11 12 13 14 15 
Agent #1 : 4 5 1 0 0 0 0 
Agent #2 : 8 11 12 13 0 0 0 

[STAT] Solver returned: 0
[DBG]  Agent (index) 28 | New local path (submap idx):
[DBG]  9 8 11 12 13 14 15 
[DBG]  Agent (index) 86 | New local path (submap idx):
[DBG]  4 5 1 
[DBG]  Agent (index) 89 | New local path (submap idx):
[DBG]  8 11 12 13 
[DBG]  Update the agent path 28 | Original local length: 32 | New local length: 7
[DBG]  agent 28 t=0 => decoded (sx,sy)=(2,2) => global_id=661
[DBG]  agent 28 t=1 => decoded (sx,sy)=(2,1) => global_id=660
[DBG]  agent 28 t=2 => decoded (sx,sy)=(3,1) => global_id=692
[DBG]  agent 28 t=3 => decoded (sx,sy)=(4,1) => global_id=724
[DBG]  agent 28 t=4 => decoded (sx,sy)=(4,2) => global_id=725
[DBG]  agent 28 t=5 => decoded (sx,sy)=(4,3) => global_id=726
[DBG]  agent 28 t=6 => decoded (sx,sy)=(4,4) => global_id=727
[DBG]  Complete path of agent 28:
[DBG]    Original: 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 660 659 627 627 627 627 627 659 691 692 724 725 726 727 
[DBG]    New:     661 661 661 661 661 661 661 661 661 661 661 661 661 660 692 724 725 726 727 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 661 661 661 661 661 661 661 661 661 661 661 661 
[DBG]    Local path (in submap): 661 660 692 724 725 726 727 
[DBG]    Suffix (out of submap): 
[DBG]  Original agent path length 28 je: 44
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 0: 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 660, 692, 724, 725, 726, 727, 
[DBG]  Path for agent 28 updated, resulting length: 19
[DBG]  Update the agent path 86 | Original local length: 3 | New local length: 3
[DBG]  agent 86 t=0 => decoded (sx,sy)=(1,1) => global_id=628
[DBG]  agent 86 t=1 => decoded (sx,sy)=(1,2) => global_id=629
[DBG]  agent 86 t=2 => decoded (sx,sy)=(0,2) => global_id=597
[DBG]  Complete path of agent 86:
[DBG]    Original: 781 782 750 718 686 654 655 656 657 658 659 627 628 596 597 565 533 534 534 502 503 504 505 506 538 539 540 541 
[DBG]    New:     781 782 750 718 686 654 655 656 657 658 659 627 628 629 597 565 533 534 534 502 503 504 505 506 538 539 540 541 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 781 782 750 718 686 654 655 656 657 658 659 627 
[DBG]    Local path (in submap): 628 629 597 
[DBG]    Suffix (out of submap): 565 533 534 534 502 503 504 505 506 538 539 540 541 
[DBG]  Original agent path length 86 je: 28
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 1: 781, 782, 750, 718, 686, 654, 655, 656, 657, 658, 659, 627, 628, 629, 597, 565, 533, 534, 534, 502, 503, 504, 505, 506, 538, 539, 540, 541, 
[DBG]  Path for agent 86 updated, resulting length: 28
[DBG]  Update the agent path 89 | Original local length: 4 | New local length: 4
[DBG]  agent 89 t=0 => decoded (sx,sy)=(2,1) => global_id=660
[DBG]  agent 89 t=1 => decoded (sx,sy)=(3,1) => global_id=692
[DBG]  agent 89 t=2 => decoded (sx,sy)=(4,1) => global_id=724
[DBG]  agent 89 t=3 => decoded (sx,sy)=(4,2) => global_id=725
[DBG]  Complete path of agent 89:
[DBG]    Original: 437 469 501 533 565 597 596 596 596 596 596 628 660 692 724 725 757 756 788 820 819 851 851 851 883 884 916 948 980 981 1013 1014 1015 
[DBG]    New:     437 469 501 533 565 597 596 596 596 596 596 628 660 692 724 725 757 756 788 820 819 851 851 851 883 884 916 948 980 981 1013 1014 1015 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 437 469 501 533 565 597 596 596 596 596 596 628 
[DBG]    Local path (in submap): 660 692 724 725 
[DBG]    Suffix (out of submap): 757 756 788 820 819 851 851 851 883 884 916 948 980 981 1013 1014 1015 
[DBG]  Original agent path length 89 je: 33
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 2: 437, 469, 501, 533, 565, 597, 596, 596, 596, 596, 596, 628, 660, 692, 724, 725, 757, 756, 788, 820, 819, 851, 851, 851, 883, 884, 916, 948, 980, 981, 1013, 1014, 1015, 
[DBG]  Path for agent 89 updated, resulting length: 33
[DBG]  Paths successfully updated.
[DBG]  (LNS.cpp) New path for agent 28: 
[DBG]  661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 660, 692, 724, 725, 726, 727, 
[DBG]  (LNS.cpp) New path for agent 86: 
[DBG]  781, 782, 750, 718, 686, 654, 655, 656, 657, 658, 659, 627, 628, 629, 597, 565, 533, 534, 534, 502, 503, 504, 505, 506, 538, 539, 540, 541, 
[DBG]  (LNS.cpp) New path for agent 89: 
[DBG]  437, 469, 501, 533, 565, 597, 596, 596, 596, 596, 596, 628, 660, 692, 724, 725, 757, 756, 788, 820, 819, 851, 851, 851, 883, 884, 916, 948, 980, 981, 1013, 1014, 1015, 
[DBG]  Delta value: 0.245098
[DBG]  Rewarding metric index = 1
[DBG]  component_weights = {0.239798, 0.537597, 0.0849935, 0.137612}
[DBG]  opSuccess value: 1
[STAT] neighbor.sum_of_costs before recomputation: 77
[STAT] neighbor.old_sum_of_costs before recomputation: 102
[STAT] sum_of_costs before recomputation: 4350
[DBG]  Validate solution immediately after SAT success.
[WARNING] Problem after SAT: Target conflict: agent 42 (len 43) traverses target of agent 28 (len 18) at location 727 at timestep 42
[DBG]  [DEBUG] Attempting immediate repair via init_lns because problem occurred after SAT (should be applied only for conflicts...).
[DBG]  [DEBUG] Passing 150 agents to init_lns (skip=true).
[DBG]  [DEBUG] path_table contents for selected agents (neighbor.agents):
[DBG]    Agent 28 => controlling path length=19
[DBG]    Agent 86 => controlling path length=28
[DBG]    Agent 89 => controlling path length=33
[DBG]  hodnota skip_initial_solution=1
[DBG]  We skip initialSolution => call buildCollisionData()
[DBG]  buildCollisionData() called – skip_initial_solution case.
[DBG]  Agents.size()=150, collision_graph.size()=150
[DBG]  agent 28 => updateCollidingPairs => foundCollision
[DBG]  agent 42 => updateCollidingPairs => foundCollision
[DBG]  Conflicting agent pairs:
[DBG]  agent 28 is in conflict with agent 42
[DBG]  buildCollisionData() => sum_of_costs=4325, num_of_colliding_pairs=1
[DBG]  buildCollisionData done => sum_of_costs=4325, num_of_colliding_pairs=1
[DBG]  sum_of_cost hodnota: 4325
[DBG]  After skip/init build => iteration_stats.back(): sum_of_costs=4325, collisions=1
[DEBUG] Using default neighbor generation strategy for conflicts: 2
	InitLNS(PP): runtime = 0.00152446, iterations = 2, colliding pairs = 0, initial colliding pairs = 1, solution cost = 4349, initial solution cost = 4325, failed iterations = 0
[DBG]  init_lns->sum_of_costs after init_lns->run: 4349
[DBG]  sum_of_costs after assignment from init_lns->run: 4349
[DBG]  Recomputing sum_of_cost by dividing neighbor.sum_of_costs and neighbor.old_sum_of_costs
[STAT] sum_of_costs after recomputation: 4349
[STAT] Iteration 52
[DBG]  Random chance did not select SAT operator (r=31), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 52
[DBG]  Random chance did not select SAT operator (r=78), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 52
[DBG]  Using SAT operator (destroy+repair SAT).
[DBG]  ====================
[DBG]  SAT destroy operator called.
[DBG]  SAT heuristic: 2
[DBG]  key_agent_id: 28
[DBG]  key_agent_id global path length: 44
[DBG]  Submap content (global positions):
[DBG]  595 596 597 598 599 
[DBG]  627 628 629 630 631 
[DBG]  659 660 661 662 663 
[DBG]  691 692 693 694 695 
[DBG]  723 724 725 726 727 
[DBG]  Map content with agents and obstacles:
[DBG]  X . . X A 
[DBG]  A . . X . 
[DBG]  . . A X X 
[DBG]  . . X X X 
[DBG]  X A . . . 
[DBG]  content of the map structure that we pass to the SAT solver:
[DBG]  -1  1  1  -1  1  
[DBG]  1  1  1  -1  1  
[DBG]  1  1  1  -1  -1  
[DBG]  1  1  -1  -1  -1  
[DBG]  -1  1  1  1  1  
[DBG]  Identifying agents in a submap for rescheduling (when key_agent is there at the time 24):
[DBG]  Agent 4 found intervals in the sub-map:
[DBG]  
[DBG]  Agent 4 is not in sub-map at time 24 (intervals: 
[DBG]  )
[DBG]  Agent 11 found intervals in the sub-map:
[DBG]   [24..27]
[DBG]  Agent 11 (interval in submap: [24..27]) contains time 24, added to replan.
[DBG]  Agent 28 found intervals in the sub-map:
[DBG]   [0..33] [41..43]
[DBG]  Agent 28 (interval in submap: [0..33]) contains time 24, added to replan.
[DBG]  Agent 30 found intervals in the sub-map:
[DBG]   [16..21]
[DBG]  Agent 30 is not in sub-map at time 24 (intervals: 
[DBG]  [16..21] )
[DBG]  Agent 56 found intervals in the sub-map:
[DBG]   [23..27]
[DBG]  Agent 56 (interval in submap: [23..27]) contains time 24, added to replan.
[DBG]  Agent 144 found intervals in the sub-map:
[DBG]   [24..25]
[DBG]  Agent 144 (interval in submap: [24..25]) contains time 24, added to replan.
[DBG]  Agent 11 | Start (global): 724 -> (local): (4, 1) at time 24 | Goal (global): 659 -> (local): (2, 0) at time 27
[DBG]  Agent 28 | Start (global): 661 -> (local): (2, 2) at time 24 | Goal (global): 725 -> (local): (4, 2) at time 33
[DBG]  Agent 56 | Start (global): 627 -> (local): (1, 0) at time 24 | Goal (global): 597 -> (local): (0, 2) at time 27
[DBG]  Agent 144 | Start (global): 599 -> (local): (0, 4) at time 24 | Goal (global): 631 -> (local): (1, 4) at time 25
[DBG]  [REPAIR] SAT destroy operator called.
[DBG]  [REPAIR] SAT operator – launching subproblem FOR OPTIMIZATION.
[DBG]  Creating local paths (sx, sy) in the submap for T_sync = 24
[DBG]    Agent 11 (global paths from T=24 to 27) has local path: (4,1) (3,1) (3,0) (2,0) 
[DBG]    Agent 28 (global paths from T=24 to 33) has local path: (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,1) (3,1) (4,1) (4,2) 
[DBG]    Agent 56 (global paths from T=24 to 27) has local path: (1,0) (1,1) (1,2) (0,2) 
[DBG]    Agent 144 (global paths from T=24 to 25) has local path: (0,4) (1,4) 
[DBG]  Checking input data for SAT solver:
[DBG]    - Number of agents to replan: 4
[DBG]  Agent 11 has the original local path length: 4 => Start (4,1), Goal (2,0)
[DBG]  Agent 28 has the original local path length: 10 => Start (2,2), Goal (4,2)
[DBG]  Agent 56 has the original local path length: 4 => Start (1,0), Goal (0,2)
[DBG]  Agent 144 has the original local path length: 2 => Start (0,4), Goal (1,4)
[DBG]  Start position: (4, 1), (2, 2), (1, 0), (0, 4), 
[DBG]  Goal position: (2, 0), (4, 2), (0, 2), (1, 4), 
[DBG]  SAT instance and solver created.
Currently solving
Instance name: scen
Map name: map
Encoding used: disappear_at_goal
SAT solver used: Kissat
Optimizing function: sum of costs
Number of agents: 4
Mks LB: 5
SoC LB: 15
Delta: 0
Remaining time: 300000 [ms]

Vertex conflict! Agents 0, 2, timestep 4, location 0
Vertex conflict! Agents 0, 3, timestep 4, location 0
Vertex conflict! Agents 2, 3, timestep 4, location 0
Found plan [agents = 4] [timesteps = 5]
Agent #0 : 12 11 10 7 0 
Agent #1 : 9 8 11 12 13 
Agent #2 : 3 4 5 1 0 
Agent #3 : 2 6 0 0 0 

[STAT] Solver returned: 0
[DBG]  Agent (index) 11 | New local path (submap idx):
[DBG]  12 11 10 7 
[DBG]  Agent (index) 28 | New local path (submap idx):
[DBG]  9 8 11 12 13 
[DBG]  Agent (index) 56 | New local path (submap idx):
[DBG]  3 4 5 1 
[DBG]  Agent (index) 144 | New local path (submap idx):
[DBG]  2 6 
[DBG]  Update the agent path 11 | Original local length: 4 | New local length: 4
[DBG]  agent 11 t=0 => decoded (sx,sy)=(4,1) => global_id=724
[DBG]  agent 11 t=1 => decoded (sx,sy)=(3,1) => global_id=692
[DBG]  agent 11 t=2 => decoded (sx,sy)=(3,0) => global_id=691
[DBG]  agent 11 t=3 => decoded (sx,sy)=(2,0) => global_id=659
[DBG]  Complete path of agent 11:
[DBG]    Original: 990 990 990 990 990 989 957 956 924 892 891 890 889 889 889 888 856 855 823 822 821 820 788 756 724 692 691 659 658 657 689 721 722 721 721 689 657 
[DBG]    New:     990 990 990 990 990 989 957 956 924 892 891 890 889 889 889 888 856 855 823 822 821 820 788 756 724 692 691 659 658 657 689 721 722 721 721 689 657 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 990 990 990 990 990 989 957 956 924 892 891 890 889 889 889 888 856 855 823 822 821 820 788 756 
[DBG]    Local path (in submap): 724 692 691 659 
[DBG]    Suffix (out of submap): 658 657 689 721 722 721 721 689 657 
[DBG]  Original agent path length 11 je: 37
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 0: 990, 990, 990, 990, 990, 989, 957, 956, 924, 892, 891, 890, 889, 889, 889, 888, 856, 855, 823, 822, 821, 820, 788, 756, 724, 692, 691, 659, 658, 657, 689, 721, 722, 721, 721, 689, 657, 
[DBG]  Path for agent 11 updated, resulting length: 37
[DBG]  Update the agent path 28 | Original local length: 10 | New local length: 5
[DBG]  agent 28 t=0 => decoded (sx,sy)=(2,2) => global_id=661
[DBG]  agent 28 t=1 => decoded (sx,sy)=(2,1) => global_id=660
[DBG]  agent 28 t=2 => decoded (sx,sy)=(3,1) => global_id=692
[DBG]  agent 28 t=3 => decoded (sx,sy)=(4,1) => global_id=724
[DBG]  agent 28 t=4 => decoded (sx,sy)=(4,2) => global_id=725
[DBG]  Complete path of agent 28:
[DBG]    Original: 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 660 692 724 725 757 757 757 757 757 757 757 725 726 727 
[DBG]    New:     661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 660 692 724 725 757 757 757 757 757 757 757 725 726 727 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 
[DBG]    Local path (in submap): 661 660 692 724 725 757 757 757 757 757 
[DBG]    Suffix (out of submap): 757 757 725 726 727 
[DBG]  Original agent path length 28 je: 44
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 1: 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 660, 692, 724, 725, 757, 757, 757, 757, 757, 757, 757, 725, 726, 727, 
[DBG]  Path for agent 28 updated, resulting length: 39
[DBG]  Update the agent path 56 | Original local length: 4 | New local length: 4
[DBG]  agent 56 t=0 => decoded (sx,sy)=(1,0) => global_id=627
[DBG]  agent 56 t=1 => decoded (sx,sy)=(1,1) => global_id=628
[DBG]  agent 56 t=2 => decoded (sx,sy)=(1,2) => global_id=629
[DBG]  agent 56 t=3 => decoded (sx,sy)=(0,2) => global_id=597
[DBG]  Complete path of agent 56:
[DBG]    Original: 805 773 741 709 710 678 646 647 648 649 650 651 683 684 685 686 654 622 623 655 656 657 658 659 627 628 629 597 565 566 534 502 470 438 439 407 408 409 377 378 379 380 412 413 414 415 383 351 319 287 255 
[DBG]    New:     805 773 741 709 710 678 646 647 648 649 650 651 683 684 685 686 654 622 623 655 656 657 658 659 627 628 629 597 565 566 534 502 470 438 439 407 408 409 377 378 379 380 412 413 414 415 383 351 319 287 255 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 805 773 741 709 710 678 646 647 648 649 650 651 683 684 685 686 654 622 623 655 656 657 658 659 
[DBG]    Local path (in submap): 627 628 629 597 
[DBG]    Suffix (out of submap): 565 566 534 502 470 438 439 407 408 409 377 378 379 380 412 413 414 415 383 351 319 287 255 
[DBG]  Original agent path length 56 je: 51
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 2: 805, 773, 741, 709, 710, 678, 646, 647, 648, 649, 650, 651, 683, 684, 685, 686, 654, 622, 623, 655, 656, 657, 658, 659, 627, 628, 629, 597, 565, 566, 534, 502, 470, 438, 439, 407, 408, 409, 377, 378, 379, 380, 412, 413, 414, 415, 383, 351, 319, 287, 255, 
[DBG]  Path for agent 56 updated, resulting length: 51
[DBG]  Update the agent path 144 | Original local length: 2 | New local length: 2
[DBG]  agent 144 t=0 => decoded (sx,sy)=(0,4) => global_id=599
[DBG]  agent 144 t=1 => decoded (sx,sy)=(1,4) => global_id=631
[DBG]  Complete path of agent 144:
[DBG]    Original: 121 153 185 217 249 281 313 345 345 377 377 376 408 409 441 473 474 506 538 570 569 569 601 600 599 631 
[DBG]    New:     121 153 185 217 249 281 313 345 345 377 377 376 408 409 441 473 474 506 538 570 569 569 601 600 599 631 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 121 153 185 217 249 281 313 345 345 377 377 376 408 409 441 473 474 506 538 570 569 569 601 600 
[DBG]    Local path (in submap): 599 631 
[DBG]    Suffix (out of submap): 
[DBG]  Original agent path length 144 je: 26
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 3: 121, 153, 185, 217, 249, 281, 313, 345, 345, 377, 377, 376, 408, 409, 441, 473, 474, 506, 538, 570, 569, 569, 601, 600, 599, 631, 
[DBG]  Path for agent 144 updated, resulting length: 26
[DBG]  Paths successfully updated.
[DBG]  (LNS.cpp) New path for agent 11: 
[DBG]  990, 990, 990, 990, 990, 989, 957, 956, 924, 892, 891, 890, 889, 889, 889, 888, 856, 855, 823, 822, 821, 820, 788, 756, 724, 692, 691, 659, 658, 657, 689, 721, 722, 721, 721, 689, 657, 
[DBG]  (LNS.cpp) New path for agent 28: 
[DBG]  661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 660, 692, 724, 725, 757, 757, 757, 757, 757, 757, 757, 725, 726, 727, 
[DBG]  (LNS.cpp) New path for agent 56: 
[DBG]  805, 773, 741, 709, 710, 678, 646, 647, 648, 649, 650, 651, 683, 684, 685, 686, 654, 622, 623, 655, 656, 657, 658, 659, 627, 628, 629, 597, 565, 566, 534, 502, 470, 438, 439, 407, 408, 409, 377, 378, 379, 380, 412, 413, 414, 415, 383, 351, 319, 287, 255, 
[DBG]  (LNS.cpp) New path for agent 144: 
[DBG]  121, 153, 185, 217, 249, 281, 313, 345, 345, 377, 377, 376, 408, 409, 441, 473, 474, 506, 538, 570, 569, 569, 601, 600, 599, 631, 
[DBG]  Delta value: 0.0324675
[DBG]  Rewarding metric index = 1
[DBG]  component_weights = {0.229106, 0.558214, 0.0812039, 0.131476}
[DBG]  opSuccess value: 1
[STAT] neighbor.sum_of_costs before recomputation: 149
[STAT] neighbor.old_sum_of_costs before recomputation: 154
[STAT] sum_of_costs before recomputation: 4349
[DBG]  Validate solution immediately after SAT success.
[WARNING] Problem after SAT: Target conflict: agent 42 (len 43) traverses target of agent 28 (len 38) at location 727 at timestep 42
[DBG]  [DEBUG] Attempting immediate repair via init_lns because problem occurred after SAT (should be applied only for conflicts...).
[DBG]  [DEBUG] Passing 150 agents to init_lns (skip=true).
[DBG]  [DEBUG] path_table contents for selected agents (neighbor.agents):
[DBG]    Agent 11 => controlling path length=37
[DBG]    Agent 28 => controlling path length=39
[DBG]    Agent 56 => controlling path length=51
[DBG]    Agent 144 => controlling path length=26
[DBG]  hodnota skip_initial_solution=1
[DBG]  We skip initialSolution => call buildCollisionData()
[DBG]  buildCollisionData() called – skip_initial_solution case.
[DBG]  Agents.size()=150, collision_graph.size()=150
[DBG]  agent 28 => updateCollidingPairs => foundCollision
[DBG]  agent 42 => updateCollidingPairs => foundCollision
[DBG]  Conflicting agent pairs:
[DBG]  agent 28 is in conflict with agent 42
[DBG]  buildCollisionData() => sum_of_costs=4344, num_of_colliding_pairs=1
[DBG]  buildCollisionData done => sum_of_costs=4344, num_of_colliding_pairs=1
[DBG]  sum_of_cost hodnota: 4344
[DBG]  After skip/init build => iteration_stats.back(): sum_of_costs=4344, collisions=1
[DEBUG] Using default neighbor generation strategy for conflicts: 1
[DEBUG] Using default neighbor generation strategy for conflicts: 2
[DEBUG] Using default neighbor generation strategy for conflicts: 0
	InitLNS(PP): runtime = 0.00535617, iterations = 4, colliding pairs = 0, initial colliding pairs = 1, solution cost = 4333, initial solution cost = 4344, failed iterations = 0
[DBG]  init_lns->sum_of_costs after init_lns->run: 4333
[DBG]  sum_of_costs after assignment from init_lns->run: 4333
[DBG]  Recomputing sum_of_cost by dividing neighbor.sum_of_costs and neighbor.old_sum_of_costs
[STAT] sum_of_costs after recomputation: 4333
[STAT] Iteration 53
[DBG]  Using SAT operator (destroy+repair SAT).
[DBG]  ====================
[DBG]  SAT destroy operator called.
[DBG]  SAT heuristic: 2
[DBG]  key_agent_id: 28
[DBG]  key_agent_id global path length: 44
[DBG]  Submap content (global positions):
[DBG]  562 563 564 565 566 
[DBG]  594 595 596 597 598 
[DBG]  626 627 628 629 630 
[DBG]  658 659 660 661 662 
[DBG]  690 691 692 693 694 
[DBG]  Map content with agents and obstacles:
[DBG]  X . X . . 
[DBG]  . X . A X 
[DBG]  X . A . X 
[DBG]  . . A . X 
[DBG]  X . . X X 
[DBG]  content of the map structure that we pass to the SAT solver:
[DBG]  -1  1  -1  1  1  
[DBG]  1  -1  1  1  -1  
[DBG]  -1  1  1  1  -1  
[DBG]  1  1  1  1  -1  
[DBG]  -1  1  1  -1  -1  
[DBG]  Identifying agents in a submap for rescheduling (when key_agent is there at the time 29):
[DBG]  Agent 26 found intervals in the sub-map:
[DBG]   [25..30]
[DBG]  Agent 26 (interval in submap: [25..30]) contains time 29, added to replan.
[DBG]  Agent 28 found intervals in the sub-map:
[DBG]   [0..9] [26..35]
[DBG]  Agent 28 (interval in submap: [26..35]) contains time 29, added to replan.
[DBG]  Agent 53 found intervals in the sub-map:
[DBG]   [31..34]
[DBG]  Agent 53 is not in sub-map at time 29 (intervals: 
[DBG]  [31..34] )
[DBG]  Agent 56 found intervals in the sub-map:
[DBG]  
[DBG]  Agent 56 is not in sub-map at time 29 (intervals: 
[DBG]  )
[DBG]  Agent 62 found intervals in the sub-map:
[DBG]   [24..30]
[DBG]  Agent 62 (interval in submap: [24..30]) contains time 29, added to replan.
[DBG]  Agent 148 found intervals in the sub-map:
[DBG]   [32..34]
[DBG]  Agent 148 is not in sub-map at time 29 (intervals: 
[DBG]  [32..34] )
[DBG]  Agent 26 | Start (global): 660 -> (local): (3, 2) at time 29 | Goal (global): 692 -> (local): (4, 2) at time 30
[DBG]  Agent 28 | Start (global): 628 -> (local): (2, 2) at time 29 | Goal (global): 692 -> (local): (4, 2) at time 35
[DBG]  Agent 62 | Start (global): 597 -> (local): (1, 3) at time 29 | Goal (global): 565 -> (local): (0, 3) at time 30
[DBG]  [REPAIR] SAT destroy operator called.
[DBG]  [REPAIR] SAT operator – launching subproblem FOR OPTIMIZATION.
[DBG]  Creating local paths (sx, sy) in the submap for T_sync = 29
[DBG]    Agent 26 (global paths from T=29 to 30) has local path: (3,2) (4,2) 
[DBG]    Agent 28 (global paths from T=29 to 35) has local path: (2,2) (3,2) (4,2) (4,1) (4,1) (4,1) (4,2) 
[DBG]    Agent 62 (global paths from T=29 to 30) has local path: (1,3) (0,3) 
[DBG]  Checking input data for SAT solver:
[DBG]    - Number of agents to replan: 3
[DBG]  Agent 26 has the original local path length: 2 => Start (3,2), Goal (4,2)
[DBG]  Agent 28 has the original local path length: 7 => Start (2,2), Goal (4,2)
[DBG]  Agent 62 has the original local path length: 2 => Start (1,3), Goal (0,3)
[DBG]  Start position: (3, 2), (2, 2), (1, 3), 
[DBG]  Goal position: (4, 2), (4, 2), (0, 3), 
[DBG]  SAT instance and solver created.
Currently solving
Instance name: scen
Map name: map
Encoding used: disappear_at_goal
SAT solver used: Kissat
Optimizing function: sum of costs
Number of agents: 3
Mks LB: 3
SoC LB: 7
Delta: 0
Remaining time: 300000 [ms]

Vertex conflict! Agents 0, 2, timestep 2, location 0
Found plan [agents = 3] [timesteps = 3]
Agent #0 : 11 14 0 
Agent #1 : 7 11 14 
Agent #2 : 5 1 0 

[STAT] Solver returned: 0
[DBG]  Agent (index) 26 | New local path (submap idx):
[DBG]  11 14 
[DBG]  Agent (index) 28 | New local path (submap idx):
[DBG]  7 11 14 
[DBG]  Agent (index) 62 | New local path (submap idx):
[DBG]  5 1 
[DBG]  Update the agent path 26 | Original local length: 2 | New local length: 2
[DBG]  agent 26 t=0 => decoded (sx,sy)=(3,2) => global_id=660
[DBG]  agent 26 t=1 => decoded (sx,sy)=(4,2) => global_id=692
[DBG]  Complete path of agent 26:
[DBG]    Original: 13 14 15 16 48 49 81 82 83 84 116 148 180 212 244 276 277 309 341 373 405 437 469 501 533 565 597 596 628 660 692 724 756 755 
[DBG]    New:     13 14 15 16 48 49 81 82 83 84 116 148 180 212 244 276 277 309 341 373 405 437 469 501 533 565 597 596 628 660 692 724 756 755 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 13 14 15 16 48 49 81 82 83 84 116 148 180 212 244 276 277 309 341 373 405 437 469 501 533 565 597 596 628 
[DBG]    Local path (in submap): 660 692 
[DBG]    Suffix (out of submap): 724 756 755 
[DBG]  Original agent path length 26 je: 34
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 0: 13, 14, 15, 16, 48, 49, 81, 82, 83, 84, 116, 148, 180, 212, 244, 276, 277, 309, 341, 373, 405, 437, 469, 501, 533, 565, 597, 596, 628, 660, 692, 724, 756, 755, 
[DBG]  Path for agent 26 updated, resulting length: 34
[DBG]  Update the agent path 28 | Original local length: 7 | New local length: 3
[DBG]  agent 28 t=0 => decoded (sx,sy)=(2,2) => global_id=628
[DBG]  agent 28 t=1 => decoded (sx,sy)=(3,2) => global_id=660
[DBG]  agent 28 t=2 => decoded (sx,sy)=(4,2) => global_id=692
[DBG]  Complete path of agent 28:
[DBG]    Original: 661 661 660 628 628 628 628 629 597 565 533 533 501 533 534 502 503 504 472 440 439 438 437 469 501 533 565 597 596 628 660 692 691 691 691 692 724 756 757 757 757 725 726 727 
[DBG]    New:     661 661 660 628 628 628 628 629 597 565 533 533 501 533 534 502 503 504 472 440 439 438 437 469 501 533 565 597 596 628 660 692 724 756 757 757 757 725 726 727 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 661 661 660 628 628 628 628 629 597 565 533 533 501 533 534 502 503 504 472 440 439 438 437 469 501 533 565 597 596 
[DBG]    Local path (in submap): 628 660 692 724 756 757 757 
[DBG]    Suffix (out of submap): 757 725 726 727 
[DBG]  Original agent path length 28 je: 44
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 1: 661, 661, 660, 628, 628, 628, 628, 629, 597, 565, 533, 533, 501, 533, 534, 502, 503, 504, 472, 440, 439, 438, 437, 469, 501, 533, 565, 597, 596, 628, 660, 692, 724, 756, 757, 757, 757, 725, 726, 727, 
[DBG]  Path for agent 28 updated, resulting length: 40
[DBG]  Update the agent path 62 | Original local length: 2 | New local length: 2
[DBG]  agent 62 t=0 => decoded (sx,sy)=(1,3) => global_id=597
[DBG]  agent 62 t=1 => decoded (sx,sy)=(0,3) => global_id=565
[DBG]  Complete path of agent 62:
[DBG]    Original: 753 753 753 753 753 753 752 720 720 720 719 719 751 750 751 719 719 720 720 719 687 655 656 657 658 659 627 628 629 597 565 533 534 502 470 438 406 
[DBG]    New:     753 753 753 753 753 753 752 720 720 720 719 719 751 750 751 719 719 720 720 719 687 655 656 657 658 659 627 628 629 597 565 533 534 502 470 438 406 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 753 753 753 753 753 753 752 720 720 720 719 719 751 750 751 719 719 720 720 719 687 655 656 657 658 659 627 628 629 
[DBG]    Local path (in submap): 597 565 
[DBG]    Suffix (out of submap): 533 534 502 470 438 406 
[DBG]  Original agent path length 62 je: 37
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 2: 753, 753, 753, 753, 753, 753, 752, 720, 720, 720, 719, 719, 751, 750, 751, 719, 719, 720, 720, 719, 687, 655, 656, 657, 658, 659, 627, 628, 629, 597, 565, 533, 534, 502, 470, 438, 406, 
[DBG]  Path for agent 62 updated, resulting length: 37
[DBG]  Paths successfully updated.
[DBG]  (LNS.cpp) New path for agent 26: 
[DBG]  13, 14, 15, 16, 48, 49, 81, 82, 83, 84, 116, 148, 180, 212, 244, 276, 277, 309, 341, 373, 405, 437, 469, 501, 533, 565, 597, 596, 628, 660, 692, 724, 756, 755, 
[DBG]  (LNS.cpp) New path for agent 28: 
[DBG]  661, 661, 660, 628, 628, 628, 628, 629, 597, 565, 533, 533, 501, 533, 534, 502, 503, 504, 472, 440, 439, 438, 437, 469, 501, 533, 565, 597, 596, 628, 660, 692, 724, 756, 757, 757, 757, 725, 726, 727, 
[DBG]  (LNS.cpp) New path for agent 62: 
[DBG]  753, 753, 753, 753, 753, 753, 752, 720, 720, 720, 719, 719, 751, 750, 751, 719, 719, 720, 720, 719, 687, 655, 656, 657, 658, 659, 627, 628, 629, 597, 565, 533, 534, 502, 470, 438, 406, 
[DBG]  Delta value: 0.0357143
[DBG]  Rewarding metric index = 2
[DBG]  component_weights = {0.22744, 0.554154, 0.0878866, 0.13052}
[DBG]  opSuccess value: 1
[STAT] neighbor.sum_of_costs before recomputation: 108
[STAT] neighbor.old_sum_of_costs before recomputation: 112
[STAT] sum_of_costs before recomputation: 4333
[DBG]  Validate solution immediately after SAT success.
[WARNING] Problem after SAT: Target conflict: agent 42 (len 43) traverses target of agent 28 (len 39) at location 727 at timestep 42
[DBG]  [DEBUG] Attempting immediate repair via init_lns because problem occurred after SAT (should be applied only for conflicts...).
[DBG]  [DEBUG] Passing 150 agents to init_lns (skip=true).
[DBG]  [DEBUG] path_table contents for selected agents (neighbor.agents):
[DBG]    Agent 26 => controlling path length=34
[DBG]    Agent 28 => controlling path length=40
[DBG]    Agent 62 => controlling path length=37
[DBG]  hodnota skip_initial_solution=1
[DBG]  We skip initialSolution => call buildCollisionData()
[DBG]  buildCollisionData() called – skip_initial_solution case.
[DBG]  Agents.size()=150, collision_graph.size()=150
[DBG]  agent 28 => updateCollidingPairs => foundCollision
[DBG]  agent 42 => updateCollidingPairs => foundCollision
[DBG]  Conflicting agent pairs:
[DBG]  agent 28 is in conflict with agent 42
[DBG]  buildCollisionData() => sum_of_costs=4329, num_of_colliding_pairs=1
[DBG]  buildCollisionData done => sum_of_costs=4329, num_of_colliding_pairs=1
[DBG]  sum_of_cost hodnota: 4329
[DBG]  After skip/init build => iteration_stats.back(): sum_of_costs=4329, collisions=1
[DEBUG] Using default neighbor generation strategy for conflicts: 0
	InitLNS(PP): runtime = 0.00133454, iterations = 2, colliding pairs = 0, initial colliding pairs = 1, solution cost = 4336, initial solution cost = 4329, failed iterations = 0
[DBG]  init_lns->sum_of_costs after init_lns->run: 4336
[DBG]  sum_of_costs after assignment from init_lns->run: 4336
[DBG]  Recomputing sum_of_cost by dividing neighbor.sum_of_costs and neighbor.old_sum_of_costs
[STAT] sum_of_costs after recomputation: 4336
[STAT] Iteration 54
[DBG]  Random chance did not select SAT operator (r=86), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 54
[DBG]  Random chance did not select SAT operator (r=96), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 54
[DBG]  Random chance did not select SAT operator (r=27), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 54
[DBG]  Random chance did not select SAT operator (r=18), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 54
[DBG]  Random chance did not select SAT operator (r=13), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 54
[DBG]  Random chance did not select SAT operator (r=38), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 54
[DBG]  Random chance did not select SAT operator (r=28), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 54
[DBG]  Random chance did not select SAT operator (r=69), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 54
[DBG]  Random chance did not select SAT operator (r=71), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 54
[DBG]  Random chance did not select SAT operator (r=44), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 54
[DBG]  Random chance did not select SAT operator (r=67), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 54
[DBG]  Using SAT operator (destroy+repair SAT).
[DBG]  ====================
[DBG]  SAT destroy operator called.
[DBG]  SAT heuristic: 2
[DBG]  key_agent_id: 28
[DBG]  key_agent_id global path length: 44
[DBG]  Submap content (global positions):
[DBG]  655 656 657 658 659 
[DBG]  687 688 689 690 691 
[DBG]  719 720 721 722 723 
[DBG]  751 752 753 754 755 
[DBG]  783 784 785 786 787 
[DBG]  Map content with agents and obstacles:
[DBG]  A A . A A 
[DBG]  . . . X . 
[DBG]  A . A A X 
[DBG]  A . . X . 
[DBG]  A . X . . 
[DBG]  content of the map structure that we pass to the SAT solver:
[DBG]  1  1  1  1  1  
[DBG]  1  1  1  -1  1  
[DBG]  1  1  1  1  -1  
[DBG]  1  1  1  -1  1  
[DBG]  1  1  -1  1  1  
[DBG]  Identifying agents in a submap for rescheduling (when key_agent is there at the time 32):
[DBG]  Agent 3 found intervals in the sub-map:
[DBG]   [31..33]
[DBG]  Agent 3 (interval in submap: [31..33]) contains time 32, added to replan.
[DBG]  Agent 11 found intervals in the sub-map:
[DBG]   [26..36]
[DBG]  Agent 11 (interval in submap: [26..36]) contains time 32, added to replan.
[DBG]  Agent 28 found intervals in the sub-map:
[DBG]   [4..38]
[DBG]  Agent 28 (interval in submap: [4..38]) contains time 32, added to replan.
[DBG]  Agent 42 found intervals in the sub-map:
[DBG]   [32..37]
[DBG]  Agent 42 (interval in submap: [32..37]) contains time 32, added to replan.
[DBG]  Agent 53 found intervals in the sub-map:
[DBG]   [30..32]
[DBG]  Agent 53 (interval in submap: [30..32]) contains time 32, added to replan.
[DBG]  Agent 57 found intervals in the sub-map:
[DBG]   [30..34]
[DBG]  Agent 57 (interval in submap: [30..34]) contains time 32, added to replan.
[DBG]  Agent 59 found intervals in the sub-map:
[DBG]   [30..32]
[DBG]  Agent 59 (interval in submap: [30..32]) contains time 32, added to replan.
[DBG]  Agent 69 found intervals in the sub-map:
[DBG]   [31..36]
[DBG]  Agent 69 (interval in submap: [31..36]) contains time 32, added to replan.
[DBG]  Agent 148 found intervals in the sub-map:
[DBG]   [27..33]
[DBG]  Agent 148 (interval in submap: [27..33]) contains time 32, added to replan.
[DBG]  Agent 3 | Start (global): 751 -> (local): (3, 0) at time 32 | Goal (global): 783 -> (local): (4, 0) at time 33
[DBG]  Agent 11 | Start (global): 722 -> (local): (2, 3) at time 32 | Goal (global): 657 -> (local): (0, 2) at time 36
[DBG]  Agent 28 | Start (global): 721 -> (local): (2, 2) at time 32 | Goal (global): 691 -> (local): (1, 4) at time 38
[DBG]  Agent 42 | Start (global): 655 -> (local): (0, 0) at time 32 | Goal (global): 691 -> (local): (1, 4) at time 37
[DBG]  Agent 53 | Start (global): 659 -> (local): (0, 4) at time 32 | Goal (global): 659 -> (local): (0, 4) at time 32
[DBG]  Agent 57 | Start (global): 719 -> (local): (2, 0) at time 32 | Goal (global): 783 -> (local): (4, 0) at time 34
[DBG]  Agent 59 | Start (global): 783 -> (local): (4, 0) at time 32 | Goal (global): 783 -> (local): (4, 0) at time 32
[DBG]  Agent 69 | Start (global): 656 -> (local): (0, 1) at time 32 | Goal (global): 691 -> (local): (1, 4) at time 36
[DBG]  Agent 148 | Start (global): 658 -> (local): (0, 3) at time 32 | Goal (global): 659 -> (local): (0, 4) at time 33
[DBG]  [REPAIR] SAT destroy operator called.
[DBG]  [REPAIR] SAT operator – launching subproblem FOR OPTIMIZATION.
[DBG]  Creating local paths (sx, sy) in the submap for T_sync = 32
[DBG]    Agent 3 (global paths from T=32 to 33) has local path: (3,0) (4,0) 
[DBG]    Agent 11 (global paths from T=32 to 36) has local path: (2,3) (2,2) (2,2) (1,2) (0,2) 
[DBG]    Agent 28 (global paths from T=32 to 38) has local path: (2,2) (1,2) (1,2) (0,2) (0,3) (0,4) (1,4) 
[DBG]    Agent 42 (global paths from T=32 to 37) has local path: (0,0) (0,1) (0,2) (0,3) (0,4) (1,4) 
[DBG]    Agent 53 (global paths from T=32 to 32) has local path: (0,4) 
[DBG]    Agent 57 (global paths from T=32 to 34) has local path: (2,0) (3,0) (4,0) 
[DBG]    Agent 59 (global paths from T=32 to 32) has local path: (4,0) 
[DBG]    Agent 69 (global paths from T=32 to 36) has local path: (0,1) (0,2) (0,3) (0,4) (1,4) 
[DBG]    Agent 148 (global paths from T=32 to 33) has local path: (0,3) (0,4) 
[DBG]  Checking input data for SAT solver:
[DBG]    - Number of agents to replan: 9
[DBG]  Agent 3 has the original local path length: 2 => Start (3,0), Goal (4,0)
[DBG]  Agent 11 has the original local path length: 5 => Start (2,3), Goal (0,2)
[DBG]  Agent 28 has the original local path length: 7 => Start (2,2), Goal (1,4)
[DBG]  Agent 42 has the original local path length: 6 => Start (0,0), Goal (1,4)
[DBG]  Agent 53 has the original local path length: 1 => Start (0,4), Goal (0,4)
[DBG]  Agent 57 has the original local path length: 3 => Start (2,0), Goal (4,0)
[DBG]  Agent 59 has the original local path length: 1 => Start (4,0), Goal (4,0)
[DBG]  Agent 69 has the original local path length: 5 => Start (0,1), Goal (1,4)
[DBG]  Agent 148 has the original local path length: 2 => Start (0,3), Goal (0,4)
[DBG]  Start position: (3, 0), (2, 3), (2, 2), (0, 0), (0, 4), (2, 0), (4, 0), (0, 1), (0, 3), 
[DBG]  Goal position: (4, 0), (0, 2), (1, 4), (1, 4), (0, 4), (4, 0), (4, 0), (1, 4), (0, 4), 
[DBG]  SAT instance and solver created.
Currently solving
Instance name: scen
Map name: map
Encoding used: disappear_at_goal
SAT solver used: Kissat
Optimizing function: sum of costs
Number of agents: 9
Mks LB: 6
SoC LB: 30
Delta: 0
Remaining time: 300000 [ms]

[STAT] Solver returned: -1
[DBG]  SAT solver failed.
[STAT] SAT solver failed to find a valid solution.
[DBG]  ====================
[DBG]  SAT destroy operator called.
[DBG]  SAT heuristic: 2
[DBG]  key_agent_id: 28
[DBG]  key_agent_id global path length: 44
[DBG]  Submap content (global positions):
[DBG]  593 594 595 596 597 
[DBG]  625 626 627 628 629 
[DBG]  657 658 659 660 661 
[DBG]  689 690 691 692 693 
[DBG]  721 722 723 724 725 
[DBG]  Map content with agents and obstacles:
[DBG]  A . X . A 
[DBG]  . X A . . 
[DBG]  . . A . . 
[DBG]  . X A . X 
[DBG]  . . X . . 
[DBG]  content of the map structure that we pass to the SAT solver:
[DBG]  1  1  -1  1  1  
[DBG]  1  -1  1  1  1  
[DBG]  1  1  1  1  1  
[DBG]  1  -1  1  1  -1  
[DBG]  1  1  -1  1  1  
[DBG]  Identifying agents in a submap for rescheduling (when key_agent is there at the time 26):
[DBG]  Agent 11 found intervals in the sub-map:
[DBG]   [24..36]
[DBG]  Agent 11 (interval in submap: [24..36]) contains time 26, added to replan.
[DBG]  Agent 26 found intervals in the sub-map:
[DBG]   [26..31]
[DBG]  Agent 26 (interval in submap: [26..31]) contains time 26, added to replan.
[DBG]  Agent 28 found intervals in the sub-map:
[DBG]   [0..30] [32..41]
[DBG]  Agent 28 (interval in submap: [0..30]) contains time 26, added to replan.
[DBG]  Agent 53 found intervals in the sub-map:
[DBG]   [27..35]
[DBG]  Agent 53 is not in sub-map at time 26 (intervals: 
[DBG]  [27..35] )
[DBG]  Agent 56 found intervals in the sub-map:
[DBG]  
[DBG]  Agent 56 is not in sub-map at time 26 (intervals: 
[DBG]  )
[DBG]  Agent 57 found intervals in the sub-map:
[DBG]   [26..26]
[DBG]  Agent 57 (interval in submap: [26..26]) contains time 26, added to replan.
[DBG]  Agent 62 found intervals in the sub-map:
[DBG]   [23..29]
[DBG]  Agent 62 (interval in submap: [23..29]) contains time 26, added to replan.
[DBG]  Agent 148 found intervals in the sub-map:
[DBG]   [31..34]
[DBG]  Agent 148 is not in sub-map at time 26 (intervals: 
[DBG]  [31..34] )
[DBG]  Agent 11 | Start (global): 691 -> (local): (3, 2) at time 26 | Goal (global): 657 -> (local): (2, 0) at time 36
[DBG]  Agent 26 | Start (global): 597 -> (local): (0, 4) at time 26 | Goal (global): 724 -> (local): (4, 3) at time 31
[DBG]  Agent 28 | Start (global): 659 -> (local): (2, 2) at time 26 | Goal (global): 721 -> (local): (4, 0) at time 30
[DBG]  Agent 57 | Start (global): 593 -> (local): (0, 0) at time 26 | Goal (global): 593 -> (local): (0, 0) at time 26
[DBG]  Agent 62 | Start (global): 627 -> (local): (1, 2) at time 26 | Goal (global): 597 -> (local): (0, 4) at time 29
[DBG]  [REPAIR] SAT destroy operator called.
[DBG]  [REPAIR] SAT operator – launching subproblem FOR OPTIMIZATION.
[DBG]  Creating local paths (sx, sy) in the submap for T_sync = 26
[DBG]    Agent 11 (global paths from T=26 to 36) has local path: (3,2) (2,2) (2,1) (2,0) (3,0) (4,0) (4,1) (4,0) (4,0) (3,0) (2,0) 
[DBG]    Agent 26 (global paths from T=26 to 31) has local path: (0,4) (0,3) (1,3) (2,3) (3,3) (4,3) 
[DBG]    Agent 28 (global paths from T=26 to 30) has local path: (2,2) (2,1) (2,0) (3,0) (4,0) 
[DBG]    Agent 57 (global paths from T=26 to 26) has local path: (0,0) 
[DBG]    Agent 62 (global paths from T=26 to 29) has local path: (1,2) (1,3) (1,4) (0,4) 
[DBG]  Checking input data for SAT solver:
[DBG]    - Number of agents to replan: 5
[DBG]  Agent 11 has the original local path length: 11 => Start (3,2), Goal (2,0)
[DBG]  Agent 26 has the original local path length: 6 => Start (0,4), Goal (4,3)
[DBG]  Agent 28 has the original local path length: 5 => Start (2,2), Goal (4,0)
[DBG]  Agent 57 has the original local path length: 1 => Start (0,0), Goal (0,0)
[DBG]  Agent 62 has the original local path length: 4 => Start (1,2), Goal (0,4)
[DBG]  Start position: (3, 2), (0, 4), (2, 2), (0, 0), (1, 2), 
[DBG]  Goal position: (2, 0), (4, 3), (4, 0), (0, 0), (0, 4), 
[DBG]  SAT instance and solver created.
Currently solving
Instance name: scen
Map name: map
Encoding used: disappear_at_goal
SAT solver used: Kissat
Optimizing function: sum of costs
Number of agents: 5
Mks LB: 6
SoC LB: 20
Delta: 0
Remaining time: 300000 [ms]

Vertex conflict! Agents 0, 2, timestep 5, location 0
Vertex conflict! Agents 0, 3, timestep 4, location 0
Swapping conflict! Agents 0, 3, timestep 4, edge (0,0)
Vertex conflict! Agents 0, 3, timestep 5, location 0
Vertex conflict! Agents 0, 4, timestep 4, location 0
Swapping conflict! Agents 0, 4, timestep 4, edge (0,0)
Vertex conflict! Agents 0, 4, timestep 5, location 0
Vertex conflict! Agents 2, 3, timestep 5, location 0
Vertex conflict! Agents 2, 4, timestep 5, location 0
Vertex conflict! Agents 3, 4, timestep 4, location 0
Swapping conflict! Agents 3, 4, timestep 4, edge (0,0)
Vertex conflict! Agents 3, 4, timestep 5, location 0
Found plan [agents = 5] [timesteps = 6]
Agent #0 : 14 10 9 8 0 0 
Agent #1 : 3 7 12 11 15 18 
Agent #2 : 10 9 8 13 16 0 
Agent #3 : 0 0 0 0 0 0 
Agent #4 : 5 6 7 3 0 0 

[STAT] Solver returned: 0
[DBG]  Agent (index) 11 | New local path (submap idx):
[DBG]  14 10 9 8 
[DBG]  Agent (index) 26 | New local path (submap idx):
[DBG]  3 7 12 11 15 18 
[DBG]  Agent (index) 28 | New local path (submap idx):
[DBG]  10 9 8 13 16 
[DBG]  Agent (index) 57 | New local path (submap idx):
[DBG]  0 
[DBG]  Agent (index) 62 | New local path (submap idx):
[DBG]  5 6 7 3 
[DBG]  Update the agent path 11 | Original local length: 11 | New local length: 4
[DBG]  agent 11 t=0 => decoded (sx,sy)=(3,2) => global_id=691
[DBG]  agent 11 t=1 => decoded (sx,sy)=(2,2) => global_id=659
[DBG]  agent 11 t=2 => decoded (sx,sy)=(2,1) => global_id=658
[DBG]  agent 11 t=3 => decoded (sx,sy)=(2,0) => global_id=657
[DBG]  Complete path of agent 11:
[DBG]    Original: 990 990 990 990 990 989 957 956 924 892 891 890 889 889 889 888 856 855 823 822 821 820 788 756 724 692 691 659 658 657 689 721 722 721 721 689 657 
[DBG]    New:     990 990 990 990 990 989 957 956 924 892 891 890 889 889 889 888 856 855 823 822 821 820 788 756 724 692 691 659 658 657 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 990 990 990 990 990 989 957 956 924 892 891 890 889 889 889 888 856 855 823 822 821 820 788 756 724 692 
[DBG]    Local path (in submap): 691 659 658 657 
[DBG]    Suffix (out of submap): 
[DBG]  Original agent path length 11 je: 37
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 0: 990, 990, 990, 990, 990, 989, 957, 956, 924, 892, 891, 890, 889, 889, 889, 888, 856, 855, 823, 822, 821, 820, 788, 756, 724, 692, 691, 659, 658, 657, 
[DBG]  Path for agent 11 updated, resulting length: 30
[DBG]  Update the agent path 26 | Original local length: 6 | New local length: 6
[DBG]  agent 26 t=0 => decoded (sx,sy)=(0,4) => global_id=597
[DBG]  agent 26 t=1 => decoded (sx,sy)=(1,4) => global_id=629
[DBG]  agent 26 t=2 => decoded (sx,sy)=(2,4) => global_id=661
[DBG]  agent 26 t=3 => decoded (sx,sy)=(2,3) => global_id=660
[DBG]  agent 26 t=4 => decoded (sx,sy)=(3,3) => global_id=692
[DBG]  agent 26 t=5 => decoded (sx,sy)=(4,3) => global_id=724
[DBG]  Complete path of agent 26:
[DBG]    Original: 13 14 15 16 48 49 81 82 83 84 116 148 180 212 244 276 277 309 341 373 405 437 469 501 533 565 597 596 628 660 692 724 756 755 
[DBG]    New:     13 14 15 16 48 49 81 82 83 84 116 148 180 212 244 276 277 309 341 373 405 437 469 501 533 565 597 629 661 660 692 724 756 755 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 13 14 15 16 48 49 81 82 83 84 116 148 180 212 244 276 277 309 341 373 405 437 469 501 533 565 
[DBG]    Local path (in submap): 597 629 661 660 692 724 
[DBG]    Suffix (out of submap): 756 755 
[DBG]  Original agent path length 26 je: 34
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 1: 13, 14, 15, 16, 48, 49, 81, 82, 83, 84, 116, 148, 180, 212, 244, 276, 277, 309, 341, 373, 405, 437, 469, 501, 533, 565, 597, 629, 661, 660, 692, 724, 756, 755, 
[DBG]  Path for agent 26 updated, resulting length: 34
[DBG]  Update the agent path 28 | Original local length: 5 | New local length: 5
[DBG]  agent 28 t=0 => decoded (sx,sy)=(2,2) => global_id=659
[DBG]  agent 28 t=1 => decoded (sx,sy)=(2,1) => global_id=658
[DBG]  agent 28 t=2 => decoded (sx,sy)=(2,0) => global_id=657
[DBG]  agent 28 t=3 => decoded (sx,sy)=(3,0) => global_id=689
[DBG]  agent 28 t=4 => decoded (sx,sy)=(4,0) => global_id=721
[DBG]  Complete path of agent 28:
[DBG]    Original: 661 661 660 692 691 691 691 691 691 691 691 691 691 691 691 691 691 691 691 691 691 691 691 691 691 691 659 658 657 689 721 753 721 689 689 657 658 659 691 692 724 725 726 727 
[DBG]    New:     661 661 660 692 691 691 691 691 691 691 691 691 691 691 691 691 691 691 691 691 691 691 691 691 691 691 659 658 657 689 721 753 721 689 689 657 658 659 691 692 724 725 726 727 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 661 661 660 692 691 691 691 691 691 691 691 691 691 691 691 691 691 691 691 691 691 691 691 691 691 691 
[DBG]    Local path (in submap): 659 658 657 689 721 
[DBG]    Suffix (out of submap): 753 721 689 689 657 658 659 691 692 724 725 726 727 
[DBG]  Original agent path length 28 je: 44
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 2: 661, 661, 660, 692, 691, 691, 691, 691, 691, 691, 691, 691, 691, 691, 691, 691, 691, 691, 691, 691, 691, 691, 691, 691, 691, 691, 659, 658, 657, 689, 721, 753, 721, 689, 689, 657, 658, 659, 691, 692, 724, 725, 726, 727, 
[DBG]  Path for agent 28 updated, resulting length: 44
[DBG]  Update the agent path 57 | Original local length: 1 | New local length: 1
[DBG]  agent 57 t=0 => decoded (sx,sy)=(0,0) => global_id=593
[DBG]  Complete path of agent 57:
[DBG]    Original: 185 184 183 215 247 279 278 277 276 308 340 339 371 371 403 435 467 466 465 464 496 528 528 528 529 561 593 592 591 623 655 687 719 751 783 815 847 848 880 912 944 976 977 
[DBG]    New:     185 184 183 215 247 279 278 277 276 308 340 339 371 371 403 435 467 466 465 464 496 528 528 528 529 561 593 592 591 623 655 687 719 751 783 815 847 848 880 912 944 976 977 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 185 184 183 215 247 279 278 277 276 308 340 339 371 371 403 435 467 466 465 464 496 528 528 528 529 561 
[DBG]    Local path (in submap): 593 
[DBG]    Suffix (out of submap): 592 591 623 655 687 719 751 783 815 847 848 880 912 944 976 977 
[DBG]  Original agent path length 57 je: 43
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 3: 185, 184, 183, 215, 247, 279, 278, 277, 276, 308, 340, 339, 371, 371, 403, 435, 467, 466, 465, 464, 496, 528, 528, 528, 529, 561, 593, 592, 591, 623, 655, 687, 719, 751, 783, 815, 847, 848, 880, 912, 944, 976, 977, 
[DBG]  Path for agent 57 updated, resulting length: 43
[DBG]  Update the agent path 62 | Original local length: 4 | New local length: 4
[DBG]  agent 62 t=0 => decoded (sx,sy)=(1,2) => global_id=627
[DBG]  agent 62 t=1 => decoded (sx,sy)=(1,3) => global_id=628
[DBG]  agent 62 t=2 => decoded (sx,sy)=(1,4) => global_id=629
[DBG]  agent 62 t=3 => decoded (sx,sy)=(0,4) => global_id=597
[DBG]  Complete path of agent 62:
[DBG]    Original: 753 753 753 753 753 753 752 720 720 720 719 719 751 750 751 719 719 720 720 719 687 655 656 657 658 659 627 628 629 597 565 533 534 502 470 438 406 
[DBG]    New:     753 753 753 753 753 753 752 720 720 720 719 719 751 750 751 719 719 720 720 719 687 655 656 657 658 659 627 628 629 597 565 533 534 502 470 438 406 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 753 753 753 753 753 753 752 720 720 720 719 719 751 750 751 719 719 720 720 719 687 655 656 657 658 659 
[DBG]    Local path (in submap): 627 628 629 597 
[DBG]    Suffix (out of submap): 565 533 534 502 470 438 406 
[DBG]  Original agent path length 62 je: 37
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 4: 753, 753, 753, 753, 753, 753, 752, 720, 720, 720, 719, 719, 751, 750, 751, 719, 719, 720, 720, 719, 687, 655, 656, 657, 658, 659, 627, 628, 629, 597, 565, 533, 534, 502, 470, 438, 406, 
[DBG]  Path for agent 62 updated, resulting length: 37
[DBG]  Paths successfully updated.
[DBG]  (LNS.cpp) New path for agent 11: 
[DBG]  990, 990, 990, 990, 990, 989, 957, 956, 924, 892, 891, 890, 889, 889, 889, 888, 856, 855, 823, 822, 821, 820, 788, 756, 724, 692, 691, 659, 658, 657, 
[DBG]  (LNS.cpp) New path for agent 26: 
[DBG]  13, 14, 15, 16, 48, 49, 81, 82, 83, 84, 116, 148, 180, 212, 244, 276, 277, 309, 341, 373, 405, 437, 469, 501, 533, 565, 597, 629, 661, 660, 692, 724, 756, 755, 
[DBG]  (LNS.cpp) New path for agent 28: 
[DBG]  661, 661, 660, 692, 691, 691, 691, 691, 691, 691, 691, 691, 691, 691, 691, 691, 691, 691, 691, 691, 691, 691, 691, 691, 691, 691, 659, 658, 657, 689, 721, 753, 721, 689, 689, 657, 658, 659, 691, 692, 724, 725, 726, 727, 
[DBG]  (LNS.cpp) New path for agent 57: 
[DBG]  185, 184, 183, 215, 247, 279, 278, 277, 276, 308, 340, 339, 371, 371, 403, 435, 467, 466, 465, 464, 496, 528, 528, 528, 529, 561, 593, 592, 591, 623, 655, 687, 719, 751, 783, 815, 847, 848, 880, 912, 944, 976, 977, 
[DBG]  (LNS.cpp) New path for agent 62: 
[DBG]  753, 753, 753, 753, 753, 753, 752, 720, 720, 720, 719, 719, 751, 750, 751, 719, 719, 720, 720, 719, 687, 655, 656, 657, 658, 659, 627, 628, 629, 597, 565, 533, 534, 502, 470, 438, 406, 
[DBG]  Delta value: 0.0368421
[DBG]  Rewarding metric index = 0
[DBG]  component_weights = {0.243175, 0.542867, 0.0860966, 0.127862}
[DBG]  opSuccess value: 1
[STAT] neighbor.sum_of_costs before recomputation: 183
[STAT] neighbor.old_sum_of_costs before recomputation: 190
[STAT] sum_of_costs before recomputation: 4336
[DBG]  Validate solution immediately after SAT success.
[WARNING] Problem after SAT: Target conflict: agent 28 (len 43) traverses target of agent 11 (len 29) at location 657 at timestep 35
[DBG]  [DEBUG] Attempting immediate repair via init_lns because problem occurred after SAT (should be applied only for conflicts...).
[DBG]  [DEBUG] Passing 150 agents to init_lns (skip=true).
[DBG]  [DEBUG] path_table contents for selected agents (neighbor.agents):
[DBG]    Agent 11 => controlling path length=30
[DBG]    Agent 26 => controlling path length=34
[DBG]    Agent 28 => controlling path length=44
[DBG]    Agent 57 => controlling path length=43
[DBG]    Agent 62 => controlling path length=37
[DBG]  hodnota skip_initial_solution=1
[DBG]  We skip initialSolution => call buildCollisionData()
[DBG]  buildCollisionData() called – skip_initial_solution case.
[DBG]  Agents.size()=150, collision_graph.size()=150
[DBG]  agent 11 => updateCollidingPairs => foundCollision
[DBG]  agent 28 => updateCollidingPairs => foundCollision
[DBG]  agent 42 => updateCollidingPairs => foundCollision
[DBG]  agent 53 => updateCollidingPairs => foundCollision
[DBG]  agent 69 => updateCollidingPairs => foundCollision
[DBG]  agent 148 => updateCollidingPairs => foundCollision
[DBG]  Conflicting agent pairs:
[DBG]  agent 11 is in conflict with agent 28
[DBG]  agent 11 is in conflict with agent 42
[DBG]  agent 11 is in conflict with agent 53
[DBG]  agent 11 is in conflict with agent 69
[DBG]  agent 11 is in conflict with agent 148
[DBG]  buildCollisionData() => sum_of_costs=4329, num_of_colliding_pairs=5
[DBG]  buildCollisionData done => sum_of_costs=4329, num_of_colliding_pairs=5
[DBG]  sum_of_cost hodnota: 4329
[DBG]  After skip/init build => iteration_stats.back(): sum_of_costs=4329, collisions=5
[DEBUG] Using default neighbor generation strategy for conflicts: 1
[DEBUG] Using default neighbor generation strategy for conflicts: 0
	InitLNS(PP): runtime = 0.00542542, iterations = 3, colliding pairs = 0, initial colliding pairs = 5, solution cost = 4369, initial solution cost = 4329, failed iterations = 0
[DBG]  init_lns->sum_of_costs after init_lns->run: 4369
[DBG]  sum_of_costs after assignment from init_lns->run: 4369
[DBG]  Recomputing sum_of_cost by dividing neighbor.sum_of_costs and neighbor.old_sum_of_costs
[STAT] sum_of_costs after recomputation: 4369
[STAT] Iteration 55
[DBG]  Random chance did not select SAT operator (r=48), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 55
[DBG]  Random chance did not select SAT operator (r=99), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 55
[DBG]  Random chance did not select SAT operator (r=99), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 55
[DBG]  Random chance did not select SAT operator (r=48), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 55
[DBG]  Using SAT operator (destroy+repair SAT).
[DBG]  ====================
[DBG]  SAT destroy operator called.
[DBG]  SAT heuristic: 2
[DBG]  key_agent_id: 28
[DBG]  key_agent_id global path length: 54
[DBG]  Submap content (global positions):
[DBG]  595 596 597 598 599 
[DBG]  627 628 629 630 631 
[DBG]  659 660 661 662 663 
[DBG]  691 692 693 694 695 
[DBG]  723 724 725 726 727 
[DBG]  Map content with agents and obstacles:
[DBG]  X . A X . 
[DBG]  . . . X . 
[DBG]  . . A X X 
[DBG]  . . X X X 
[DBG]  X . . . . 
[DBG]  content of the map structure that we pass to the SAT solver:
[DBG]  -1  1  1  -1  1  
[DBG]  1  1  1  -1  1  
[DBG]  1  1  1  -1  -1  
[DBG]  1  1  -1  -1  -1  
[DBG]  -1  1  1  1  1  
[DBG]  Identifying agents in a submap for rescheduling (when key_agent is there at the time 22):
[DBG]  Agent 28 found intervals in the sub-map:
[DBG]   [0..53]
[DBG]  Agent 28 (interval in submap: [0..53]) contains time 22, added to replan.
[DBG]  Agent 30 found intervals in the sub-map:
[DBG]   [16..21]
[DBG]  Agent 30 is not in sub-map at time 22 (intervals: 
[DBG]  [16..21] )
[DBG]  Agent 56 found intervals in the sub-map:
[DBG]  
[DBG]  Agent 56 is not in sub-map at time 22 (intervals: 
[DBG]  )
[DBG]  Agent 79 found intervals in the sub-map:
[DBG]   [18..22]
[DBG]  Agent 79 (interval in submap: [18..22]) contains time 22, added to replan.
[DBG]  Agent 28 | Start (global): 661 -> (local): (2, 2) at time 22 | Goal (global): 727 -> (local): (4, 4) at time 53
[DBG]  Agent 79 | Start (global): 597 -> (local): (0, 2) at time 22 | Goal (global): 597 -> (local): (0, 2) at time 22
[DBG]  [REPAIR] SAT destroy operator called.
[DBG]  [REPAIR] SAT operator – launching subproblem FOR OPTIMIZATION.
[DBG]  Creating local paths (sx, sy) in the submap for T_sync = 22
[DBG]    Agent 28 (global paths from T=22 to 53) has local path: (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (1,2) (1,2) (1,2) (1,2) (1,2) (1,2) (1,2) (1,2) (1,2) (1,1) (1,0) (2,0) (3,0) (3,1) (4,1) (4,1) (4,1) (4,1) (4,1) (4,1) (4,1) (4,1) (4,2) (4,3) (4,4) 
[DBG]    Agent 79 (global paths from T=22 to 22) has local path: (0,2) 
[DBG]  Checking input data for SAT solver:
[DBG]    - Number of agents to replan: 2
[DBG]  Agent 28 has the original local path length: 32 => Start (2,2), Goal (4,4)
[DBG]  Agent 79 has the original local path length: 1 => Start (0,2), Goal (0,2)
[DBG]  Start position: (2, 2), (0, 2), 
[DBG]  Goal position: (4, 4), (0, 2), 
[DBG]  SAT instance and solver created.
Currently solving
Instance name: scen
Map name: map
Encoding used: disappear_at_goal
SAT solver used: Kissat
Optimizing function: sum of costs
Number of agents: 2
Mks LB: 7
SoC LB: 8
Delta: 0
Remaining time: 300000 [ms]

Found plan [agents = 2] [timesteps = 7]
Agent #0 : 9 8 11 12 13 14 15 
Agent #1 : 1 0 0 0 0 0 0 

[STAT] Solver returned: 0
[DBG]  Agent (index) 28 | New local path (submap idx):
[DBG]  9 8 11 12 13 14 15 
[DBG]  Agent (index) 79 | New local path (submap idx):
[DBG]  1 
[DBG]  Update the agent path 28 | Original local length: 32 | New local length: 7
[DBG]  agent 28 t=0 => decoded (sx,sy)=(2,2) => global_id=661
[DBG]  agent 28 t=1 => decoded (sx,sy)=(2,1) => global_id=660
[DBG]  agent 28 t=2 => decoded (sx,sy)=(3,1) => global_id=692
[DBG]  agent 28 t=3 => decoded (sx,sy)=(4,1) => global_id=724
[DBG]  agent 28 t=4 => decoded (sx,sy)=(4,2) => global_id=725
[DBG]  agent 28 t=5 => decoded (sx,sy)=(4,3) => global_id=726
[DBG]  agent 28 t=6 => decoded (sx,sy)=(4,4) => global_id=727
[DBG]  Complete path of agent 28:
[DBG]    Original: 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 629 629 629 629 629 629 629 629 629 628 627 659 691 692 724 724 724 724 724 724 724 724 725 726 727 
[DBG]    New:     661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 660 692 724 725 726 727 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 
[DBG]    Local path (in submap): 661 660 692 724 725 726 727 
[DBG]    Suffix (out of submap): 
[DBG]  Original agent path length 28 je: 54
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 0: 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 660, 692, 724, 725, 726, 727, 
[DBG]  Path for agent 28 updated, resulting length: 29
[DBG]  Update the agent path 79 | Original local length: 1 | New local length: 1
[DBG]  agent 79 t=0 => decoded (sx,sy)=(0,2) => global_id=597
[DBG]  Complete path of agent 79:
[DBG]    Original: 1004 1005 973 941 942 910 878 846 847 815 783 784 752 720 688 689 657 658 659 660 628 596 597 565 566 534 502 470 438 439 440 408 409 409 377 345 313 281 249 217 185 153 121 122 123 
[DBG]    New:     1004 1005 973 941 942 910 878 846 847 815 783 784 752 720 688 689 657 658 659 660 628 596 597 565 566 534 502 470 438 439 440 408 409 409 377 345 313 281 249 217 185 153 121 122 123 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 1004 1005 973 941 942 910 878 846 847 815 783 784 752 720 688 689 657 658 659 660 628 596 
[DBG]    Local path (in submap): 597 
[DBG]    Suffix (out of submap): 565 566 534 502 470 438 439 440 408 409 409 377 345 313 281 249 217 185 153 121 122 123 
[DBG]  Original agent path length 79 je: 45
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 1: 1004, 1005, 973, 941, 942, 910, 878, 846, 847, 815, 783, 784, 752, 720, 688, 689, 657, 658, 659, 660, 628, 596, 597, 565, 566, 534, 502, 470, 438, 439, 440, 408, 409, 409, 377, 345, 313, 281, 249, 217, 185, 153, 121, 122, 123, 
[DBG]  Path for agent 79 updated, resulting length: 45
[DBG]  Paths successfully updated.
[DBG]  (LNS.cpp) New path for agent 28: 
[DBG]  661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 660, 692, 724, 725, 726, 727, 
[DBG]  (LNS.cpp) New path for agent 79: 
[DBG]  1004, 1005, 973, 941, 942, 910, 878, 846, 847, 815, 783, 784, 752, 720, 688, 689, 657, 658, 659, 660, 628, 596, 597, 565, 566, 534, 502, 470, 438, 439, 440, 408, 409, 409, 377, 345, 313, 281, 249, 217, 185, 153, 121, 122, 123, 
[DBG]  Delta value: 0.257732
[DBG]  Rewarding metric index = 1
[DBG]  component_weights = {0.206808, 0.611232, 0.0732208, 0.10874}
[DBG]  opSuccess value: 1
[STAT] neighbor.sum_of_costs before recomputation: 72
[STAT] neighbor.old_sum_of_costs before recomputation: 97
[STAT] sum_of_costs before recomputation: 4369
[DBG]  Validate solution immediately after SAT success.
[WARNING] Problem after SAT: Vertex conflict between agents 28 and 11 at location 692 at timestep 24
[DBG]  [DEBUG] Attempting immediate repair via init_lns because problem occurred after SAT (should be applied only for conflicts...).
[DBG]  [DEBUG] Passing 150 agents to init_lns (skip=true).
[DBG]  [DEBUG] path_table contents for selected agents (neighbor.agents):
[DBG]    Agent 28 => controlling path length=29
[DBG]    Agent 79 => controlling path length=45
[DBG]  hodnota skip_initial_solution=1
[DBG]  We skip initialSolution => call buildCollisionData()
[DBG]  buildCollisionData() called – skip_initial_solution case.
[DBG]  Agents.size()=150, collision_graph.size()=150
[DBG]  agent 11 => updateCollidingPairs => foundCollision
[DBG]  agent 28 => updateCollidingPairs => foundCollision
[DBG]  agent 42 => updateCollidingPairs => foundCollision
[DBG]  Conflicting agent pairs:
[DBG]  agent 11 is in conflict with agent 28
[DBG]  agent 28 is in conflict with agent 42
[DBG]  buildCollisionData() => sum_of_costs=4344, num_of_colliding_pairs=2
[DBG]  buildCollisionData done => sum_of_costs=4344, num_of_colliding_pairs=2
[DBG]  sum_of_cost hodnota: 4344
[DBG]  After skip/init build => iteration_stats.back(): sum_of_costs=4344, collisions=2
[DEBUG] Using default neighbor generation strategy for conflicts: 2
[DEBUG] Using default neighbor generation strategy for conflicts: 0
[DEBUG] Using default neighbor generation strategy for conflicts: 0
	InitLNS(PP): runtime = 0.001962, iterations = 4, colliding pairs = 0, initial colliding pairs = 2, solution cost = 4365, initial solution cost = 4344, failed iterations = 0
[DBG]  init_lns->sum_of_costs after init_lns->run: 4365
[DBG]  sum_of_costs after assignment from init_lns->run: 4365
[DBG]  Recomputing sum_of_cost by dividing neighbor.sum_of_costs and neighbor.old_sum_of_costs
[STAT] sum_of_costs after recomputation: 4365
[STAT] Iteration 56
[DBG]  Random chance did not select SAT operator (r=83), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 56
[DBG]  Random chance did not select SAT operator (r=43), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 56
[DBG]  Random chance did not select SAT operator (r=33), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 56
[DBG]  Using SAT operator (destroy+repair SAT).
[DBG]  ====================
[DBG]  SAT destroy operator called.
[DBG]  SAT heuristic: 2
[DBG]  key_agent_id: 28
[DBG]  key_agent_id global path length: 54
[DBG]  Submap content (global positions):
[DBG]  595 596 597 598 599 
[DBG]  627 628 629 630 631 
[DBG]  659 660 661 662 663 
[DBG]  691 692 693 694 695 
[DBG]  723 724 725 726 727 
[DBG]  Map content with agents and obstacles:
[DBG]  X . . X . 
[DBG]  . . . X . 
[DBG]  . A A X X 
[DBG]  . . X X X 
[DBG]  X . . . . 
[DBG]  content of the map structure that we pass to the SAT solver:
[DBG]  -1  1  1  -1  1  
[DBG]  1  1  1  -1  1  
[DBG]  1  1  1  -1  -1  
[DBG]  1  1  -1  -1  -1  
[DBG]  -1  1  1  1  1  
[DBG]  Identifying agents in a submap for rescheduling (when key_agent is there at the time 38):
[DBG]  Agent 28 found intervals in the sub-map:
[DBG]   [0..53]
[DBG]  Agent 28 (interval in submap: [0..53]) contains time 38, added to replan.
[DBG]  Agent 42 found intervals in the sub-map:
[DBG]   [50..52]
[DBG]  Agent 42 is not in sub-map at time 38 (intervals: 
[DBG]  [50..52] )
[DBG]  Agent 69 found intervals in the sub-map:
[DBG]   [35..42]
[DBG]  Agent 69 (interval in submap: [35..42]) contains time 38, added to replan.
[DBG]  Agent 148 found intervals in the sub-map:
[DBG]   [39..43]
[DBG]  Agent 148 is not in sub-map at time 38 (intervals: 
[DBG]  [39..43] )
[DBG]  Agent 28 | Start (global): 661 -> (local): (2, 2) at time 38 | Goal (global): 727 -> (local): (4, 4) at time 53
[DBG]  Agent 69 | Start (global): 660 -> (local): (2, 1) at time 38 | Goal (global): 724 -> (local): (4, 1) at time 42
[DBG]  [REPAIR] SAT destroy operator called.
[DBG]  [REPAIR] SAT operator – launching subproblem FOR OPTIMIZATION.
[DBG]  Creating local paths (sx, sy) in the submap for T_sync = 38
[DBG]    Agent 28 (global paths from T=38 to 53) has local path: (2,2) (2,1) (2,0) (3,0) (3,1) (4,1) (4,1) (4,1) (4,1) (4,1) (4,1) (4,1) (4,1) (4,2) (4,3) (4,4) 
[DBG]    Agent 69 (global paths from T=38 to 42) has local path: (2,1) (3,1) (3,0) (3,1) (4,1) 
[DBG]  Checking input data for SAT solver:
[DBG]    - Number of agents to replan: 2
[DBG]  Agent 28 has the original local path length: 16 => Start (2,2), Goal (4,4)
[DBG]  Agent 69 has the original local path length: 5 => Start (2,1), Goal (4,1)
[DBG]  Start position: (2, 2), (2, 1), 
[DBG]  Goal position: (4, 4), (4, 1), 
[DBG]  SAT instance and solver created.
Currently solving
Instance name: scen
Map name: map
Encoding used: disappear_at_goal
SAT solver used: Kissat
Optimizing function: sum of costs
Number of agents: 2
Mks LB: 7
SoC LB: 10
Delta: 0
Remaining time: 300000 [ms]

Found plan [agents = 2] [timesteps = 7]
Agent #0 : 9 8 11 12 13 14 15 
Agent #1 : 8 11 12 0 0 0 0 

[STAT] Solver returned: 0
[DBG]  Agent (index) 28 | New local path (submap idx):
[DBG]  9 8 11 12 13 14 15 
[DBG]  Agent (index) 69 | New local path (submap idx):
[DBG]  8 11 12 
[DBG]  Update the agent path 28 | Original local length: 16 | New local length: 7
[DBG]  agent 28 t=0 => decoded (sx,sy)=(2,2) => global_id=661
[DBG]  agent 28 t=1 => decoded (sx,sy)=(2,1) => global_id=660
[DBG]  agent 28 t=2 => decoded (sx,sy)=(3,1) => global_id=692
[DBG]  agent 28 t=3 => decoded (sx,sy)=(4,1) => global_id=724
[DBG]  agent 28 t=4 => decoded (sx,sy)=(4,2) => global_id=725
[DBG]  agent 28 t=5 => decoded (sx,sy)=(4,3) => global_id=726
[DBG]  agent 28 t=6 => decoded (sx,sy)=(4,4) => global_id=727
[DBG]  Complete path of agent 28:
[DBG]    Original: 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 660 659 691 692 724 724 724 724 724 724 724 724 725 726 727 
[DBG]    New:     661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 660 692 724 725 726 727 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 
[DBG]    Local path (in submap): 661 660 692 724 725 726 727 
[DBG]    Suffix (out of submap): 
[DBG]  Original agent path length 28 je: 54
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 0: 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 660, 692, 724, 725, 726, 727, 
[DBG]  Path for agent 28 updated, resulting length: 45
[DBG]  Update the agent path 69 | Original local length: 5 | New local length: 3
[DBG]  agent 69 t=0 => decoded (sx,sy)=(2,1) => global_id=660
[DBG]  agent 69 t=1 => decoded (sx,sy)=(3,1) => global_id=692
[DBG]  agent 69 t=2 => decoded (sx,sy)=(4,1) => global_id=724
[DBG]  Complete path of agent 69:
[DBG]    Original: 4 5 37 69 70 102 134 135 136 137 138 139 140 141 173 205 237 269 301 302 303 304 336 368 400 401 402 403 435 467 468 469 501 533 565 597 629 628 660 692 691 692 724 756 788 820 
[DBG]    New:     4 5 37 69 70 102 134 135 136 137 138 139 140 141 173 205 237 269 301 302 303 304 336 368 400 401 402 403 435 467 468 469 501 533 565 597 629 628 660 692 724 756 788 820 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 4 5 37 69 70 102 134 135 136 137 138 139 140 141 173 205 237 269 301 302 303 304 336 368 400 401 402 403 435 467 468 469 501 533 565 597 629 628 
[DBG]    Local path (in submap): 660 692 724 756 788 
[DBG]    Suffix (out of submap): 820 
[DBG]  Original agent path length 69 je: 46
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 1: 4, 5, 37, 69, 70, 102, 134, 135, 136, 137, 138, 139, 140, 141, 173, 205, 237, 269, 301, 302, 303, 304, 336, 368, 400, 401, 402, 403, 435, 467, 468, 469, 501, 533, 565, 597, 629, 628, 660, 692, 724, 756, 788, 820, 
[DBG]  Path for agent 69 updated, resulting length: 44
[DBG]  Paths successfully updated.
[DBG]  (LNS.cpp) New path for agent 28: 
[DBG]  661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 660, 692, 724, 725, 726, 727, 
[DBG]  (LNS.cpp) New path for agent 69: 
[DBG]  4, 5, 37, 69, 70, 102, 134, 135, 136, 137, 138, 139, 140, 141, 173, 205, 237, 269, 301, 302, 303, 304, 336, 368, 400, 401, 402, 403, 435, 467, 468, 469, 501, 533, 565, 597, 629, 628, 660, 692, 724, 756, 788, 820, 
[DBG]  Delta value: 0.112245
[DBG]  Rewarding metric index = 3
[DBG]  component_weights = {0.203037, 0.600088, 0.0718858, 0.12499}
[DBG]  opSuccess value: 1
[STAT] neighbor.sum_of_costs before recomputation: 87
[STAT] neighbor.old_sum_of_costs before recomputation: 98
[STAT] sum_of_costs before recomputation: 4365
[DBG]  Validate solution immediately after SAT success.
[WARNING] Problem after SAT: Target conflict: agent 42 (len 53) traverses target of agent 28 (len 44) at location 727 at timestep 52
[DBG]  [DEBUG] Attempting immediate repair via init_lns because problem occurred after SAT (should be applied only for conflicts...).
[DBG]  [DEBUG] Passing 150 agents to init_lns (skip=true).
[DBG]  [DEBUG] path_table contents for selected agents (neighbor.agents):
[DBG]    Agent 28 => controlling path length=45
[DBG]    Agent 69 => controlling path length=44
[DBG]  hodnota skip_initial_solution=1
[DBG]  We skip initialSolution => call buildCollisionData()
[DBG]  buildCollisionData() called – skip_initial_solution case.
[DBG]  Agents.size()=150, collision_graph.size()=150
[DBG]  agent 28 => updateCollidingPairs => foundCollision
[DBG]  agent 42 => updateCollidingPairs => foundCollision
[DBG]  agent 69 => updateCollidingPairs => foundCollision
[DBG]  agent 148 => updateCollidingPairs => foundCollision
[DBG]  Conflicting agent pairs:
[DBG]  agent 28 is in conflict with agent 42
[DBG]  agent 28 is in conflict with agent 148
[DBG]  agent 69 is in conflict with agent 148
[DBG]  buildCollisionData() => sum_of_costs=4354, num_of_colliding_pairs=3
[DBG]  buildCollisionData done => sum_of_costs=4354, num_of_colliding_pairs=3
[DBG]  sum_of_cost hodnota: 4354
[DBG]  After skip/init build => iteration_stats.back(): sum_of_costs=4354, collisions=3
[DEBUG] Using default neighbor generation strategy for conflicts: 0
[DEBUG] Using default neighbor generation strategy for conflicts: 1
	InitLNS(PP): runtime = 0.0025475, iterations = 3, colliding pairs = 0, initial colliding pairs = 3, solution cost = 4357, initial solution cost = 4354, failed iterations = 0
[DBG]  init_lns->sum_of_costs after init_lns->run: 4357
[DBG]  sum_of_costs after assignment from init_lns->run: 4357
[DBG]  Recomputing sum_of_cost by dividing neighbor.sum_of_costs and neighbor.old_sum_of_costs
[STAT] sum_of_costs after recomputation: 4357
[STAT] Iteration 57
[DBG]  Random chance did not select SAT operator (r=86), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 57
[DBG]  Random chance did not select SAT operator (r=36), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 57
[DBG]  Random chance did not select SAT operator (r=98), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 57
[DBG]  Random chance did not select SAT operator (r=44), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 57
[DBG]  Random chance did not select SAT operator (r=58), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 57
[DBG]  Random chance did not select SAT operator (r=20), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 57
[DBG]  Random chance did not select SAT operator (r=82), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 57
[DBG]  Random chance did not select SAT operator (r=26), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 57
[DBG]  Random chance did not select SAT operator (r=28), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 57
[DBG]  Random chance did not select SAT operator (r=57), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 57
[DBG]  Random chance did not select SAT operator (r=11), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 57
[DBG]  Random chance did not select SAT operator (r=74), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 57
[DBG]  Random chance did not select SAT operator (r=63), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 57
[DBG]  Random chance did not select SAT operator (r=37), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 57
[DBG]  Random chance did not select SAT operator (r=39), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 57
[DBG]  Random chance did not select SAT operator (r=24), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 57
[DBG]  Random chance did not select SAT operator (r=76), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 57
[DBG]  Random chance did not select SAT operator (r=12), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 57
[DBG]  Random chance did not select SAT operator (r=96), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 57
[DBG]  Random chance did not select SAT operator (r=62), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 57
[DBG]  Random chance did not select SAT operator (r=40), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 57
[DBG]  Random chance did not select SAT operator (r=85), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 57
[DBG]  Using SAT operator (destroy+repair SAT).
[DBG]  ====================
[DBG]  SAT destroy operator called.
[DBG]  SAT heuristic: 2
[DBG]  key_agent_id: 28
[DBG]  key_agent_id global path length: 54
[DBG]  Submap content (global positions):
[DBG]  595 596 597 598 599 
[DBG]  627 628 629 630 631 
[DBG]  659 660 661 662 663 
[DBG]  691 692 693 694 695 
[DBG]  723 724 725 726 727 
[DBG]  Map content with agents and obstacles:
[DBG]  X A . X . 
[DBG]  A A . X . 
[DBG]  . . A X X 
[DBG]  . . X X X 
[DBG]  X . . . . 
[DBG]  content of the map structure that we pass to the SAT solver:
[DBG]  -1  1  1  -1  1  
[DBG]  1  1  1  -1  1  
[DBG]  1  1  1  -1  -1  
[DBG]  1  1  -1  -1  -1  
[DBG]  -1  1  1  1  1  
[DBG]  Identifying agents in a submap for rescheduling (when key_agent is there at the time 20):
[DBG]  Agent 28 found intervals in the sub-map:
[DBG]   [0..53]
[DBG]  Agent 28 (interval in submap: [0..53]) contains time 20, added to replan.
[DBG]  Agent 30 found intervals in the sub-map:
[DBG]   [16..21]
[DBG]  Agent 30 (interval in submap: [16..21]) contains time 20, added to replan.
[DBG]  Agent 56 found intervals in the sub-map:
[DBG]  
[DBG]  Agent 56 is not in sub-map at time 20 (intervals: 
[DBG]  )
[DBG]  Agent 62 found intervals in the sub-map:
[DBG]   [16..23]
[DBG]  Agent 62 (interval in submap: [16..23]) contains time 20, added to replan.
[DBG]  Agent 74 found intervals in the sub-map:
[DBG]   [13..17]
[DBG]  Agent 74 is not in sub-map at time 20 (intervals: 
[DBG]  [13..17] )
[DBG]  Agent 79 found intervals in the sub-map:
[DBG]   [18..22]
[DBG]  Agent 79 (interval in submap: [18..22]) contains time 20, added to replan.
[DBG]  Agent 28 | Start (global): 661 -> (local): (2, 2) at time 20 | Goal (global): 727 -> (local): (4, 4) at time 53
[DBG]  Agent 30 | Start (global): 596 -> (local): (0, 1) at time 20 | Goal (global): 597 -> (local): (0, 2) at time 21
[DBG]  Agent 62 | Start (global): 627 -> (local): (1, 0) at time 20 | Goal (global): 597 -> (local): (0, 2) at time 23
[DBG]  Agent 79 | Start (global): 628 -> (local): (1, 1) at time 20 | Goal (global): 597 -> (local): (0, 2) at time 22
[DBG]  [REPAIR] SAT destroy operator called.
[DBG]  [REPAIR] SAT operator – launching subproblem FOR OPTIMIZATION.
[DBG]  Creating local paths (sx, sy) in the submap for T_sync = 20
[DBG]    Agent 28 (global paths from T=20 to 53) has local path: (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,1) (2,0) (3,0) (3,1) (4,1) (4,1) (4,1) (4,1) (4,1) (4,1) (4,1) (4,1) (4,2) (4,3) (4,4) 
[DBG]    Agent 30 (global paths from T=20 to 21) has local path: (0,1) (0,2) 
[DBG]    Agent 62 (global paths from T=20 to 23) has local path: (1,0) (1,1) (0,1) (0,2) 
[DBG]    Agent 79 (global paths from T=20 to 22) has local path: (1,1) (0,1) (0,2) 
[DBG]  Checking input data for SAT solver:
[DBG]    - Number of agents to replan: 4
[DBG]  Agent 28 has the original local path length: 34 => Start (2,2), Goal (4,4)
[DBG]  Agent 30 has the original local path length: 2 => Start (0,1), Goal (0,2)
[DBG]  Agent 62 has the original local path length: 4 => Start (1,0), Goal (0,2)
[DBG]  Agent 79 has the original local path length: 3 => Start (1,1), Goal (0,2)
[DBG]  Start position: (2, 2), (0, 1), (1, 0), (1, 1), 
[DBG]  Goal position: (4, 4), (0, 2), (0, 2), (0, 2), 
[DBG]  SAT instance and solver created.
Currently solving
Instance name: scen
Map name: map
Encoding used: disappear_at_goal
SAT solver used: Kissat
Optimizing function: sum of costs
Number of agents: 4
Mks LB: 7
SoC LB: 16
Delta: 0
Remaining time: 300000 [ms]

Vertex conflict! Agents 1, 2, timestep 4, location 0
Swapping conflict! Agents 1, 2, timestep 4, edge (0,0)
Vertex conflict! Agents 1, 2, timestep 5, location 0
Swapping conflict! Agents 1, 2, timestep 5, edge (0,0)
Vertex conflict! Agents 1, 2, timestep 6, location 0
Vertex conflict! Agents 1, 3, timestep 3, location 0
Swapping conflict! Agents 1, 3, timestep 3, edge (0,0)
Vertex conflict! Agents 1, 3, timestep 4, location 0
Swapping conflict! Agents 1, 3, timestep 4, edge (0,0)
Vertex conflict! Agents 1, 3, timestep 5, location 0
Swapping conflict! Agents 1, 3, timestep 5, edge (0,0)
Vertex conflict! Agents 1, 3, timestep 6, location 0
Vertex conflict! Agents 2, 3, timestep 4, location 0
Swapping conflict! Agents 2, 3, timestep 4, edge (0,0)
Vertex conflict! Agents 2, 3, timestep 5, location 0
Swapping conflict! Agents 2, 3, timestep 5, edge (0,0)
Vertex conflict! Agents 2, 3, timestep 6, location 0
Found plan [agents = 4] [timesteps = 7]
Agent #0 : 9 8 11 12 13 14 15 
Agent #1 : 0 1 0 0 0 0 0 
Agent #2 : 3 4 5 1 0 0 0 
Agent #3 : 4 5 1 0 0 0 0 

[STAT] Solver returned: 0
[DBG]  Agent (index) 28 | New local path (submap idx):
[DBG]  9 8 11 12 13 14 15 
[DBG]  Agent (index) 30 | New local path (submap idx):
[DBG]  0 1 
[DBG]  Agent (index) 62 | New local path (submap idx):
[DBG]  3 4 5 1 
[DBG]  Agent (index) 79 | New local path (submap idx):
[DBG]  4 5 1 
[DBG]  Update the agent path 28 | Original local length: 34 | New local length: 7
[DBG]  agent 28 t=0 => decoded (sx,sy)=(2,2) => global_id=661
[DBG]  agent 28 t=1 => decoded (sx,sy)=(2,1) => global_id=660
[DBG]  agent 28 t=2 => decoded (sx,sy)=(3,1) => global_id=692
[DBG]  agent 28 t=3 => decoded (sx,sy)=(4,1) => global_id=724
[DBG]  agent 28 t=4 => decoded (sx,sy)=(4,2) => global_id=725
[DBG]  agent 28 t=5 => decoded (sx,sy)=(4,3) => global_id=726
[DBG]  agent 28 t=6 => decoded (sx,sy)=(4,4) => global_id=727
[DBG]  Complete path of agent 28:
[DBG]    Original: 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 660 659 691 692 724 724 724 724 724 724 724 724 725 726 727 
[DBG]    New:     661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 660 692 724 725 726 727 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 
[DBG]    Local path (in submap): 661 660 692 724 725 726 727 
[DBG]    Suffix (out of submap): 
[DBG]  Original agent path length 28 je: 54
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 0: 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 660, 692, 724, 725, 726, 727, 
[DBG]  Path for agent 28 updated, resulting length: 27
[DBG]  Update the agent path 30 | Original local length: 2 | New local length: 2
[DBG]  agent 30 t=0 => decoded (sx,sy)=(0,1) => global_id=596
[DBG]  agent 30 t=1 => decoded (sx,sy)=(0,2) => global_id=597
[DBG]  Complete path of agent 30:
[DBG]    Original: 922 890 889 889 889 888 887 886 885 884 883 851 819 787 788 756 724 692 660 628 596 597 565 533 534 502 503 
[DBG]    New:     922 890 889 889 889 888 887 886 885 884 883 851 819 787 788 756 724 692 660 628 596 597 565 533 534 502 503 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 922 890 889 889 889 888 887 886 885 884 883 851 819 787 788 756 724 692 660 628 
[DBG]    Local path (in submap): 596 597 
[DBG]    Suffix (out of submap): 565 533 534 502 503 
[DBG]  Original agent path length 30 je: 27
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 1: 922, 890, 889, 889, 889, 888, 887, 886, 885, 884, 883, 851, 819, 787, 788, 756, 724, 692, 660, 628, 596, 597, 565, 533, 534, 502, 503, 
[DBG]  Path for agent 30 updated, resulting length: 27
[DBG]  Update the agent path 62 | Original local length: 4 | New local length: 4
[DBG]  agent 62 t=0 => decoded (sx,sy)=(1,0) => global_id=627
[DBG]  agent 62 t=1 => decoded (sx,sy)=(1,1) => global_id=628
[DBG]  agent 62 t=2 => decoded (sx,sy)=(1,2) => global_id=629
[DBG]  agent 62 t=3 => decoded (sx,sy)=(0,2) => global_id=597
[DBG]  Complete path of agent 62:
[DBG]    Original: 753 753 753 753 753 753 753 753 753 753 752 720 688 689 657 658 659 627 627 627 627 628 596 597 565 566 566 565 533 501 469 437 405 406 
[DBG]    New:     753 753 753 753 753 753 753 753 753 753 752 720 688 689 657 658 659 627 627 627 627 628 629 597 565 566 566 565 533 501 469 437 405 406 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 753 753 753 753 753 753 753 753 753 753 752 720 688 689 657 658 659 627 627 627 
[DBG]    Local path (in submap): 627 628 629 597 
[DBG]    Suffix (out of submap): 565 566 566 565 533 501 469 437 405 406 
[DBG]  Original agent path length 62 je: 34
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 2: 753, 753, 753, 753, 753, 753, 753, 753, 753, 753, 752, 720, 688, 689, 657, 658, 659, 627, 627, 627, 627, 628, 629, 597, 565, 566, 566, 565, 533, 501, 469, 437, 405, 406, 
[DBG]  Path for agent 62 updated, resulting length: 34
[DBG]  Update the agent path 79 | Original local length: 3 | New local length: 3
[DBG]  agent 79 t=0 => decoded (sx,sy)=(1,1) => global_id=628
[DBG]  agent 79 t=1 => decoded (sx,sy)=(1,2) => global_id=629
[DBG]  agent 79 t=2 => decoded (sx,sy)=(0,2) => global_id=597
[DBG]  Complete path of agent 79:
[DBG]    Original: 1004 1005 973 941 942 910 878 846 847 815 783 784 752 720 688 689 657 658 659 660 628 596 597 565 566 534 502 470 438 439 440 408 409 409 377 345 313 281 249 217 185 153 121 122 123 
[DBG]    New:     1004 1005 973 941 942 910 878 846 847 815 783 784 752 720 688 689 657 658 659 660 628 629 597 565 566 534 502 470 438 439 440 408 409 409 377 345 313 281 249 217 185 153 121 122 123 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 1004 1005 973 941 942 910 878 846 847 815 783 784 752 720 688 689 657 658 659 660 
[DBG]    Local path (in submap): 628 629 597 
[DBG]    Suffix (out of submap): 565 566 534 502 470 438 439 440 408 409 409 377 345 313 281 249 217 185 153 121 122 123 
[DBG]  Original agent path length 79 je: 45
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 3: 1004, 1005, 973, 941, 942, 910, 878, 846, 847, 815, 783, 784, 752, 720, 688, 689, 657, 658, 659, 660, 628, 629, 597, 565, 566, 534, 502, 470, 438, 439, 440, 408, 409, 409, 377, 345, 313, 281, 249, 217, 185, 153, 121, 122, 123, 
[DBG]  Path for agent 79 updated, resulting length: 45
[DBG]  Paths successfully updated.
[DBG]  (LNS.cpp) New path for agent 28: 
[DBG]  661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 660, 692, 724, 725, 726, 727, 
[DBG]  (LNS.cpp) New path for agent 30: 
[DBG]  922, 890, 889, 889, 889, 888, 887, 886, 885, 884, 883, 851, 819, 787, 788, 756, 724, 692, 660, 628, 596, 597, 565, 533, 534, 502, 503, 
[DBG]  (LNS.cpp) New path for agent 62: 
[DBG]  753, 753, 753, 753, 753, 753, 753, 753, 753, 753, 752, 720, 688, 689, 657, 658, 659, 627, 627, 627, 627, 628, 629, 597, 565, 566, 566, 565, 533, 501, 469, 437, 405, 406, 
[DBG]  (LNS.cpp) New path for agent 79: 
[DBG]  1004, 1005, 973, 941, 942, 910, 878, 846, 847, 815, 783, 784, 752, 720, 688, 689, 657, 658, 659, 660, 628, 629, 597, 565, 566, 534, 502, 470, 438, 439, 440, 408, 409, 409, 377, 345, 313, 281, 249, 217, 185, 153, 121, 122, 123, 
[DBG]  Delta value: 0.173077
[DBG]  Rewarding metric index = 1
[DBG]  component_weights = {0.17796, 0.64948, 0.0630073, 0.109553}
[DBG]  opSuccess value: 1
[STAT] neighbor.sum_of_costs before recomputation: 129
[STAT] neighbor.old_sum_of_costs before recomputation: 156
[STAT] sum_of_costs before recomputation: 4357
[DBG]  Validate solution immediately after SAT success.
[WARNING] Problem after SAT: Target conflict: agent 42 (len 53) traverses target of agent 28 (len 26) at location 727 at timestep 52
[DBG]  [DEBUG] Attempting immediate repair via init_lns because problem occurred after SAT (should be applied only for conflicts...).
[DBG]  [DEBUG] Passing 150 agents to init_lns (skip=true).
[DBG]  [DEBUG] path_table contents for selected agents (neighbor.agents):
[DBG]    Agent 28 => controlling path length=27
[DBG]    Agent 30 => controlling path length=27
[DBG]    Agent 62 => controlling path length=34
[DBG]    Agent 79 => controlling path length=45
[DBG]  hodnota skip_initial_solution=1
[DBG]  We skip initialSolution => call buildCollisionData()
[DBG]  buildCollisionData() called – skip_initial_solution case.
[DBG]  Agents.size()=150, collision_graph.size()=150
[DBG]  agent 28 => updateCollidingPairs => foundCollision
[DBG]  agent 42 => updateCollidingPairs => foundCollision
[DBG]  Conflicting agent pairs:
[DBG]  agent 28 is in conflict with agent 42
[DBG]  buildCollisionData() => sum_of_costs=4330, num_of_colliding_pairs=1
[DBG]  buildCollisionData done => sum_of_costs=4330, num_of_colliding_pairs=1
[DBG]  sum_of_cost hodnota: 4330
[DBG]  After skip/init build => iteration_stats.back(): sum_of_costs=4330, collisions=1
[DEBUG] Using default neighbor generation strategy for conflicts: 0
	InitLNS(PP): runtime = 0.000474666, iterations = 2, colliding pairs = 0, initial colliding pairs = 1, solution cost = 4357, initial solution cost = 4330, failed iterations = 0
[DBG]  init_lns->sum_of_costs after init_lns->run: 4357
[DBG]  sum_of_costs after assignment from init_lns->run: 4357
[DBG]  Recomputing sum_of_cost by dividing neighbor.sum_of_costs and neighbor.old_sum_of_costs
[STAT] sum_of_costs after recomputation: 4357
[STAT] Iteration 58
[DBG]  Random chance did not select SAT operator (r=72), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 58
[DBG]  Random chance did not select SAT operator (r=96), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 58
[DBG]  Random chance did not select SAT operator (r=81), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 58
[DBG]  Random chance did not select SAT operator (r=37), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 58
[DBG]  Random chance did not select SAT operator (r=33), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 58
[DBG]  Random chance did not select SAT operator (r=54), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 58
[DBG]  Random chance did not select SAT operator (r=25), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 58
[DBG]  Random chance did not select SAT operator (r=97), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 58
[DBG]  Random chance did not select SAT operator (r=90), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 58
[DBG]  Random chance did not select SAT operator (r=77), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 58
[DBG]  Using SAT operator (destroy+repair SAT).
[DBG]  ====================
[DBG]  SAT destroy operator called.
[DBG]  SAT heuristic: 2
[DBG]  key_agent_id: 28
[DBG]  key_agent_id global path length: 54
[DBG]  Submap content (global positions):
[DBG]  595 596 597 598 599 
[DBG]  627 628 629 630 631 
[DBG]  659 660 661 662 663 
[DBG]  691 692 693 694 695 
[DBG]  723 724 725 726 727 
[DBG]  Map content with agents and obstacles:
[DBG]  X . . X . 
[DBG]  . . . X A 
[DBG]  . . A X X 
[DBG]  . . X X X 
[DBG]  X . . . . 
[DBG]  content of the map structure that we pass to the SAT solver:
[DBG]  -1  1  1  -1  1  
[DBG]  1  1  1  -1  1  
[DBG]  1  1  1  -1  -1  
[DBG]  1  1  -1  -1  -1  
[DBG]  -1  1  1  1  1  
[DBG]  Identifying agents in a submap for rescheduling (when key_agent is there at the time 25):
[DBG]  Agent 11 found intervals in the sub-map:
[DBG]   [26..29]
[DBG]  Agent 11 is not in sub-map at time 25 (intervals: 
[DBG]  [26..29] )
[DBG]  Agent 28 found intervals in the sub-map:
[DBG]   [0..53]
[DBG]  Agent 28 (interval in submap: [0..53]) contains time 25, added to replan.
[DBG]  Agent 56 found intervals in the sub-map:
[DBG]  
[DBG]  Agent 56 is not in sub-map at time 25 (intervals: 
[DBG]  )
[DBG]  Agent 62 found intervals in the sub-map:
[DBG]   [16..23]
[DBG]  Agent 62 is not in sub-map at time 25 (intervals: 
[DBG]  [16..23] )
[DBG]  Agent 144 found intervals in the sub-map:
[DBG]   [24..25]
[DBG]  Agent 144 (interval in submap: [24..25]) contains time 25, added to replan.
[DBG]  Agent 28 | Start (global): 661 -> (local): (2, 2) at time 25 | Goal (global): 727 -> (local): (4, 4) at time 53
[DBG]  Agent 144 | Start (global): 631 -> (local): (1, 4) at time 25 | Goal (global): 631 -> (local): (1, 4) at time 25
[DBG]  [REPAIR] SAT destroy operator called.
[DBG]  [REPAIR] SAT operator – launching subproblem FOR OPTIMIZATION.
[DBG]  Creating local paths (sx, sy) in the submap for T_sync = 25
[DBG]    Agent 28 (global paths from T=25 to 53) has local path: (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,1) (3,1) (4,1) (4,1) (4,1) (4,1) (4,1) (4,1) (4,1) (4,1) (4,2) (4,3) (4,4) 
[DBG]    Agent 144 (global paths from T=25 to 25) has local path: (1,4) 
[DBG]  Checking input data for SAT solver:
[DBG]    - Number of agents to replan: 2
[DBG]  Agent 28 has the original local path length: 29 => Start (2,2), Goal (4,4)
[DBG]  Agent 144 has the original local path length: 1 => Start (1,4), Goal (1,4)
[DBG]  Start position: (2, 2), (1, 4), 
[DBG]  Goal position: (4, 4), (1, 4), 
[DBG]  SAT instance and solver created.
Currently solving
Instance name: scen
Map name: map
Encoding used: disappear_at_goal
SAT solver used: Kissat
Optimizing function: sum of costs
Number of agents: 2
Mks LB: 7
SoC LB: 8
Delta: 0
Remaining time: 300000 [ms]

Found plan [agents = 2] [timesteps = 7]
Agent #0 : 9 8 11 12 13 14 15 
Agent #1 : 6 0 0 0 0 0 0 

[STAT] Solver returned: 0
[DBG]  Agent (index) 28 | New local path (submap idx):
[DBG]  9 8 11 12 13 14 15 
[DBG]  Agent (index) 144 | New local path (submap idx):
[DBG]  6 
[DBG]  Update the agent path 28 | Original local length: 29 | New local length: 7
[DBG]  agent 28 t=0 => decoded (sx,sy)=(2,2) => global_id=661
[DBG]  agent 28 t=1 => decoded (sx,sy)=(2,1) => global_id=660
[DBG]  agent 28 t=2 => decoded (sx,sy)=(3,1) => global_id=692
[DBG]  agent 28 t=3 => decoded (sx,sy)=(4,1) => global_id=724
[DBG]  agent 28 t=4 => decoded (sx,sy)=(4,2) => global_id=725
[DBG]  agent 28 t=5 => decoded (sx,sy)=(4,3) => global_id=726
[DBG]  agent 28 t=6 => decoded (sx,sy)=(4,4) => global_id=727
[DBG]  Complete path of agent 28:
[DBG]    Original: 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 660 692 724 724 724 724 724 724 724 724 725 726 727 
[DBG]    New:     661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 660 692 724 725 726 727 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 
[DBG]    Local path (in submap): 661 660 692 724 725 726 727 
[DBG]    Suffix (out of submap): 
[DBG]  Original agent path length 28 je: 54
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 0: 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 660, 692, 724, 725, 726, 727, 
[DBG]  Path for agent 28 updated, resulting length: 32
[DBG]  Update the agent path 144 | Original local length: 1 | New local length: 1
[DBG]  agent 144 t=0 => decoded (sx,sy)=(1,4) => global_id=631
[DBG]  Complete path of agent 144:
[DBG]    Original: 121 153 185 217 249 281 313 345 345 377 377 376 408 409 441 473 474 506 538 570 569 569 601 600 599 631 
[DBG]    New:     121 153 185 217 249 281 313 345 345 377 377 376 408 409 441 473 474 506 538 570 569 569 601 600 599 631 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 121 153 185 217 249 281 313 345 345 377 377 376 408 409 441 473 474 506 538 570 569 569 601 600 599 
[DBG]    Local path (in submap): 631 
[DBG]    Suffix (out of submap): 
[DBG]  Original agent path length 144 je: 26
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 1: 121, 153, 185, 217, 249, 281, 313, 345, 345, 377, 377, 376, 408, 409, 441, 473, 474, 506, 538, 570, 569, 569, 601, 600, 599, 631, 
[DBG]  Path for agent 144 updated, resulting length: 26
[DBG]  Paths successfully updated.
[DBG]  (LNS.cpp) New path for agent 28: 
[DBG]  661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 660, 692, 724, 725, 726, 727, 
[DBG]  (LNS.cpp) New path for agent 144: 
[DBG]  121, 153, 185, 217, 249, 281, 313, 345, 345, 377, 377, 376, 408, 409, 441, 473, 474, 506, 538, 570, 569, 569, 601, 600, 599, 631, 
[DBG]  Delta value: 0.282051
[DBG]  Rewarding metric index = 1
[DBG]  component_weights = {0.145036, 0.71433, 0.0513502, 0.0892841}
[DBG]  opSuccess value: 1
[STAT] neighbor.sum_of_costs before recomputation: 56
[STAT] neighbor.old_sum_of_costs before recomputation: 78
[STAT] sum_of_costs before recomputation: 4357
[DBG]  Validate solution immediately after SAT success.
[WARNING] Problem after SAT: Vertex conflict between agents 28 and 11 at location 692 at timestep 27
[DBG]  [DEBUG] Attempting immediate repair via init_lns because problem occurred after SAT (should be applied only for conflicts...).
[DBG]  [DEBUG] Passing 150 agents to init_lns (skip=true).
[DBG]  [DEBUG] path_table contents for selected agents (neighbor.agents):
[DBG]    Agent 28 => controlling path length=32
[DBG]    Agent 144 => controlling path length=26
[DBG]  hodnota skip_initial_solution=1
[DBG]  We skip initialSolution => call buildCollisionData()
[DBG]  buildCollisionData() called – skip_initial_solution case.
[DBG]  Agents.size()=150, collision_graph.size()=150
[DBG]  agent 11 => updateCollidingPairs => foundCollision
[DBG]  agent 28 => updateCollidingPairs => foundCollision
[DBG]  agent 42 => updateCollidingPairs => foundCollision
[DBG]  Conflicting agent pairs:
[DBG]  agent 11 is in conflict with agent 28
[DBG]  agent 28 is in conflict with agent 42
[DBG]  buildCollisionData() => sum_of_costs=4335, num_of_colliding_pairs=2
[DBG]  buildCollisionData done => sum_of_costs=4335, num_of_colliding_pairs=2
[DBG]  sum_of_cost hodnota: 4335
[DBG]  After skip/init build => iteration_stats.back(): sum_of_costs=4335, collisions=2
[DEBUG] Using default neighbor generation strategy for conflicts: 2
[DEBUG] Using default neighbor generation strategy for conflicts: 0
	InitLNS(PP): runtime = 0.00211679, iterations = 3, colliding pairs = 0, initial colliding pairs = 2, solution cost = 4357, initial solution cost = 4335, failed iterations = 0
[DBG]  init_lns->sum_of_costs after init_lns->run: 4357
[DBG]  sum_of_costs after assignment from init_lns->run: 4357
[DBG]  Recomputing sum_of_cost by dividing neighbor.sum_of_costs and neighbor.old_sum_of_costs
[STAT] sum_of_costs after recomputation: 4357
[STAT] Iteration 59
[DBG]  Random chance did not select SAT operator (r=34), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 59
[DBG]  Random chance did not select SAT operator (r=39), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 59
[DBG]  Using SAT operator (destroy+repair SAT).
[DBG]  ====================
[DBG]  SAT destroy operator called.
[DBG]  SAT heuristic: 2
[DBG]  key_agent_id: 28
[DBG]  key_agent_id global path length: 54
[DBG]  Submap content (global positions):
[DBG]  658 659 660 661 662 
[DBG]  690 691 692 693 694 
[DBG]  722 723 724 725 726 
[DBG]  754 755 756 757 758 
[DBG]  786 787 788 789 790 
[DBG]  Map content with agents and obstacles:
[DBG]  . . A . X 
[DBG]  X . A X X 
[DBG]  . X A . . 
[DBG]  X . A . X 
[DBG]  . . . X . 
[DBG]  content of the map structure that we pass to the SAT solver:
[DBG]  1  1  1  1  -1  
[DBG]  -1  1  1  -1  -1  
[DBG]  1  -1  1  1  1  
[DBG]  -1  1  1  1  -1  
[DBG]  1  1  1  -1  1  
[DBG]  Identifying agents in a submap for rescheduling (when key_agent is there at the time 43):
[DBG]  Agent 28 found intervals in the sub-map:
[DBG]   [0..52]
[DBG]  Agent 28 (interval in submap: [0..52]) contains time 43, added to replan.
[DBG]  Agent 55 found intervals in the sub-map:
[DBG]   [42..43]
[DBG]  Agent 55 (interval in submap: [42..43]) contains time 43, added to replan.
[DBG]  Agent 69 found intervals in the sub-map:
[DBG]   [38..44]
[DBG]  Agent 69 (interval in submap: [38..44]) contains time 43, added to replan.
[DBG]  Agent 148 found intervals in the sub-map:
[DBG]   [26..27] [30..43]
[DBG]  Agent 148 (interval in submap: [30..43]) contains time 43, added to replan.
[DBG]  Agent 28 | Start (global): 724 -> (local): (2, 2) at time 43 | Goal (global): 726 -> (local): (2, 4) at time 52
[DBG]  Agent 55 | Start (global): 692 -> (local): (1, 2) at time 43 | Goal (global): 692 -> (local): (1, 2) at time 43
[DBG]  Agent 69 | Start (global): 756 -> (local): (3, 2) at time 43 | Goal (global): 788 -> (local): (4, 2) at time 44
[DBG]  Agent 148 | Start (global): 660 -> (local): (0, 2) at time 43 | Goal (global): 660 -> (local): (0, 2) at time 43
[DBG]  [REPAIR] SAT destroy operator called.
[DBG]  [REPAIR] SAT operator – launching subproblem FOR OPTIMIZATION.
[DBG]  Creating local paths (sx, sy) in the submap for T_sync = 43
[DBG]    Agent 28 (global paths from T=43 to 52) has local path: (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,3) (2,4) 
[DBG]    Agent 55 (global paths from T=43 to 43) has local path: (1,2) 
[DBG]    Agent 69 (global paths from T=43 to 44) has local path: (3,2) (4,2) 
[DBG]    Agent 148 (global paths from T=43 to 43) has local path: (0,2) 
[DBG]  Checking input data for SAT solver:
[DBG]    - Number of agents to replan: 4
[DBG]  Agent 28 has the original local path length: 10 => Start (2,2), Goal (2,4)
[DBG]  Agent 55 has the original local path length: 1 => Start (1,2), Goal (1,2)
[DBG]  Agent 69 has the original local path length: 2 => Start (3,2), Goal (4,2)
[DBG]  Agent 148 has the original local path length: 1 => Start (0,2), Goal (0,2)
[DBG]  Start position: (2, 2), (1, 2), (3, 2), (0, 2), 
[DBG]  Goal position: (2, 4), (1, 2), (4, 2), (0, 2), 
[DBG]  SAT instance and solver created.
Currently solving
Instance name: scen
Map name: map
Encoding used: disappear_at_goal
SAT solver used: Kissat
Optimizing function: sum of costs
Number of agents: 4
Mks LB: 3
SoC LB: 7
Delta: 0
Remaining time: 300000 [ms]

Vertex conflict! Agents 1, 2, timestep 2, location 0
Vertex conflict! Agents 1, 3, timestep 1, location 0
Swapping conflict! Agents 1, 3, timestep 1, edge (0,0)
Vertex conflict! Agents 1, 3, timestep 2, location 0
Vertex conflict! Agents 2, 3, timestep 2, location 0
Found plan [agents = 4] [timesteps = 3]
Agent #0 : 7 8 9 
Agent #1 : 5 0 0 
Agent #2 : 11 15 0 
Agent #3 : 2 0 0 

[STAT] Solver returned: 0
[DBG]  Agent (index) 28 | New local path (submap idx):
[DBG]  7 8 9 
[DBG]  Agent (index) 55 | New local path (submap idx):
[DBG]  5 
[DBG]  Agent (index) 69 | New local path (submap idx):
[DBG]  11 15 
[DBG]  Agent (index) 148 | New local path (submap idx):
[DBG]  2 
[DBG]  Update the agent path 28 | Original local length: 10 | New local length: 3
[DBG]  agent 28 t=0 => decoded (sx,sy)=(2,2) => global_id=724
[DBG]  agent 28 t=1 => decoded (sx,sy)=(2,3) => global_id=725
[DBG]  agent 28 t=2 => decoded (sx,sy)=(2,4) => global_id=726
[DBG]  Complete path of agent 28:
[DBG]    Original: 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 660 692 724 724 724 724 724 724 724 724 725 726 727 
[DBG]    New:     661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 660 692 724 725 726 727 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 660 692 
[DBG]    Local path (in submap): 724 725 726 727 
[DBG]    Suffix (out of submap): 
[DBG]  Original agent path length 28 je: 54
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 0: 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 660, 692, 724, 725, 726, 727, 
[DBG]  Path for agent 28 updated, resulting length: 47
[DBG]  Update the agent path 55 | Original local length: 1 | New local length: 1
[DBG]  agent 55 t=0 => decoded (sx,sy)=(1,2) => global_id=692
[DBG]  Complete path of agent 55:
[DBG]    Original: 34 2 3 4 5 6 7 8 40 41 41 73 105 106 107 108 109 141 173 205 237 269 301 333 365 366 367 368 400 401 433 465 466 467 468 469 501 533 565 597 596 628 660 692 
[DBG]    New:     34 2 3 4 5 6 7 8 40 41 41 73 105 106 107 108 109 141 173 205 237 269 301 333 365 366 367 368 400 401 433 465 466 467 468 469 501 533 565 597 596 628 660 692 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 34 2 3 4 5 6 7 8 40 41 41 73 105 106 107 108 109 141 173 205 237 269 301 333 365 366 367 368 400 401 433 465 466 467 468 469 501 533 565 597 596 628 660 
[DBG]    Local path (in submap): 692 
[DBG]    Suffix (out of submap): 
[DBG]  Original agent path length 55 je: 44
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 1: 34, 2, 3, 4, 5, 6, 7, 8, 40, 41, 41, 73, 105, 106, 107, 108, 109, 141, 173, 205, 237, 269, 301, 333, 365, 366, 367, 368, 400, 401, 433, 465, 466, 467, 468, 469, 501, 533, 565, 597, 596, 628, 660, 692, 
[DBG]  Path for agent 55 updated, resulting length: 44
[DBG]  Update the agent path 69 | Original local length: 2 | New local length: 2
[DBG]  agent 69 t=0 => decoded (sx,sy)=(3,2) => global_id=756
[DBG]  agent 69 t=1 => decoded (sx,sy)=(4,2) => global_id=788
[DBG]  Complete path of agent 69:
[DBG]    Original: 4 5 6 7 8 9 41 73 74 106 107 108 109 141 173 205 237 269 301 302 303 304 336 368 400 401 402 403 435 467 468 469 501 533 565 597 629 628 660 659 691 692 724 756 788 820 
[DBG]    New:     4 5 6 7 8 9 41 73 74 106 107 108 109 141 173 205 237 269 301 302 303 304 336 368 400 401 402 403 435 467 468 469 501 533 565 597 629 628 660 659 691 692 724 756 788 820 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 4 5 6 7 8 9 41 73 74 106 107 108 109 141 173 205 237 269 301 302 303 304 336 368 400 401 402 403 435 467 468 469 501 533 565 597 629 628 660 659 691 692 724 
[DBG]    Local path (in submap): 756 788 
[DBG]    Suffix (out of submap): 820 
[DBG]  Original agent path length 69 je: 46
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 2: 4, 5, 6, 7, 8, 9, 41, 73, 74, 106, 107, 108, 109, 141, 173, 205, 237, 269, 301, 302, 303, 304, 336, 368, 400, 401, 402, 403, 435, 467, 468, 469, 501, 533, 565, 597, 629, 628, 660, 659, 691, 692, 724, 756, 788, 820, 
[DBG]  Path for agent 69 updated, resulting length: 46
[DBG]  Update the agent path 148 | Original local length: 1 | New local length: 1
[DBG]  agent 148 t=0 => decoded (sx,sy)=(0,2) => global_id=660
[DBG]  Complete path of agent 148:
[DBG]    Original: 776 776 776 776 776 744 745 713 713 713 713 713 712 680 648 649 650 651 683 684 685 686 654 655 656 657 658 659 627 627 659 660 660 660 692 692 692 692 692 692 660 659 659 660 
[DBG]    New:     776 776 776 776 776 744 745 713 713 713 713 713 712 680 648 649 650 651 683 684 685 686 654 655 656 657 658 659 627 627 659 660 660 660 692 692 692 692 692 692 660 659 659 660 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 776 776 776 776 776 744 745 713 713 713 713 713 712 680 648 649 650 651 683 684 685 686 654 655 656 657 658 659 627 627 659 660 660 660 692 692 692 692 692 692 660 659 659 
[DBG]    Local path (in submap): 660 
[DBG]    Suffix (out of submap): 
[DBG]  Original agent path length 148 je: 44
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 3: 776, 776, 776, 776, 776, 744, 745, 713, 713, 713, 713, 713, 712, 680, 648, 649, 650, 651, 683, 684, 685, 686, 654, 655, 656, 657, 658, 659, 627, 627, 659, 660, 660, 660, 692, 692, 692, 692, 692, 692, 660, 659, 659, 660, 
[DBG]  Path for agent 148 updated, resulting length: 44
[DBG]  Paths successfully updated.
[DBG]  (LNS.cpp) New path for agent 28: 
[DBG]  661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 660, 692, 724, 725, 726, 727, 
[DBG]  (LNS.cpp) New path for agent 55: 
[DBG]  34, 2, 3, 4, 5, 6, 7, 8, 40, 41, 41, 73, 105, 106, 107, 108, 109, 141, 173, 205, 237, 269, 301, 333, 365, 366, 367, 368, 400, 401, 433, 465, 466, 467, 468, 469, 501, 533, 565, 597, 596, 628, 660, 692, 
[DBG]  (LNS.cpp) New path for agent 69: 
[DBG]  4, 5, 6, 7, 8, 9, 41, 73, 74, 106, 107, 108, 109, 141, 173, 205, 237, 269, 301, 302, 303, 304, 336, 368, 400, 401, 402, 403, 435, 467, 468, 469, 501, 533, 565, 597, 629, 628, 660, 659, 691, 692, 724, 756, 788, 820, 
[DBG]  (LNS.cpp) New path for agent 148: 
[DBG]  776, 776, 776, 776, 776, 744, 745, 713, 713, 713, 713, 713, 712, 680, 648, 649, 650, 651, 683, 684, 685, 686, 654, 655, 656, 657, 658, 659, 627, 627, 659, 660, 660, 660, 692, 692, 692, 692, 692, 692, 660, 659, 659, 660, 
[DBG]  Delta value: 0.0380435
[DBG]  Rewarding metric index = 1
[DBG]  component_weights = {0.13603, 0.732068, 0.0481618, 0.0837403}
[DBG]  opSuccess value: 1
[STAT] neighbor.sum_of_costs before recomputation: 177
[STAT] neighbor.old_sum_of_costs before recomputation: 184
[STAT] sum_of_costs before recomputation: 4357
[DBG]  Validate solution immediately after SAT success.
[WARNING] Problem after SAT: Target conflict: agent 42 (len 53) traverses target of agent 28 (len 46) at location 727 at timestep 52
[DBG]  [DEBUG] Attempting immediate repair via init_lns because problem occurred after SAT (should be applied only for conflicts...).
[DBG]  [DEBUG] Passing 150 agents to init_lns (skip=true).
[DBG]  [DEBUG] path_table contents for selected agents (neighbor.agents):
[DBG]    Agent 28 => controlling path length=47
[DBG]    Agent 55 => controlling path length=44
[DBG]    Agent 69 => controlling path length=46
[DBG]    Agent 148 => controlling path length=44
[DBG]  hodnota skip_initial_solution=1
[DBG]  We skip initialSolution => call buildCollisionData()
[DBG]  buildCollisionData() called – skip_initial_solution case.
[DBG]  Agents.size()=150, collision_graph.size()=150
[DBG]  agent 28 => updateCollidingPairs => foundCollision
[DBG]  agent 42 => updateCollidingPairs => foundCollision
[DBG]  Conflicting agent pairs:
[DBG]  agent 28 is in conflict with agent 42
[DBG]  buildCollisionData() => sum_of_costs=4350, num_of_colliding_pairs=1
[DBG]  buildCollisionData done => sum_of_costs=4350, num_of_colliding_pairs=1
[DBG]  sum_of_cost hodnota: 4350
[DBG]  After skip/init build => iteration_stats.back(): sum_of_costs=4350, collisions=1
[DEBUG] Using default neighbor generation strategy for conflicts: 2
[DEBUG] Using default neighbor generation strategy for conflicts: 1
	InitLNS(PP): runtime = 0.00458738, iterations = 3, colliding pairs = 0, initial colliding pairs = 1, solution cost = 4334, initial solution cost = 4350, failed iterations = 0
[DBG]  init_lns->sum_of_costs after init_lns->run: 4334
[DBG]  sum_of_costs after assignment from init_lns->run: 4334
[DBG]  Recomputing sum_of_cost by dividing neighbor.sum_of_costs and neighbor.old_sum_of_costs
[STAT] sum_of_costs after recomputation: 4334
[STAT] Iteration 60
[DBG]  Random chance did not select SAT operator (r=14), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 60
[DBG]  Random chance did not select SAT operator (r=51), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 60
[DBG]  Random chance did not select SAT operator (r=73), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 60
[DBG]  Random chance did not select SAT operator (r=22), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 60
[DBG]  Random chance did not select SAT operator (r=59), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 60
[DBG]  Using SAT operator (destroy+repair SAT).
[DBG]  ====================
[DBG]  SAT destroy operator called.
[DBG]  SAT heuristic: 2
[DBG]  key_agent_id: 28
[DBG]  key_agent_id global path length: 43
[DBG]  Submap content (global positions):
[DBG]  626 627 628 629 630 
[DBG]  658 659 660 661 662 
[DBG]  690 691 692 693 694 
[DBG]  722 723 724 725 726 
[DBG]  754 755 756 757 758 
[DBG]  Map content with agents and obstacles:
[DBG]  X . A A X 
[DBG]  A . . . X 
[DBG]  X . A X X 
[DBG]  . X . . . 
[DBG]  X . . . X 
[DBG]  content of the map structure that we pass to the SAT solver:
[DBG]  -1  1  1  1  -1  
[DBG]  1  1  1  1  -1  
[DBG]  -1  1  1  -1  -1  
[DBG]  1  -1  1  1  1  
[DBG]  -1  1  1  1  -1  
[DBG]  Identifying agents in a submap for rescheduling (when key_agent is there at the time 9):
[DBG]  Agent 28 found intervals in the sub-map:
[DBG]   [0..41]
[DBG]  Agent 28 (interval in submap: [0..41]) contains time 9, added to replan.
[DBG]  Agent 70 found intervals in the sub-map:
[DBG]  
[DBG]  Agent 70 is not in sub-map at time 9 (intervals: 
[DBG]  )
[DBG]  Agent 86 found intervals in the sub-map:
[DBG]   [9..13]
[DBG]  Agent 86 (interval in submap: [9..13]) contains time 9, added to replan.
[DBG]  Agent 89 found intervals in the sub-map:
[DBG]   [9..14]
[DBG]  Agent 89 (interval in submap: [9..14]) contains time 9, added to replan.
[DBG]  Agent 91 found intervals in the sub-map:
[DBG]   [1..9]
[DBG]  Agent 91 (interval in submap: [1..9]) contains time 9, added to replan.
[DBG]  Agent 28 | Start (global): 692 -> (local): (2, 2) at time 9 | Goal (global): 726 -> (local): (3, 4) at time 41
[DBG]  Agent 86 | Start (global): 658 -> (local): (1, 0) at time 9 | Goal (global): 629 -> (local): (0, 3) at time 13
[DBG]  Agent 89 | Start (global): 628 -> (local): (0, 2) at time 9 | Goal (global): 755 -> (local): (4, 1) at time 14
[DBG]  Agent 91 | Start (global): 629 -> (local): (0, 3) at time 9 | Goal (global): 629 -> (local): (0, 3) at time 9
[DBG]  [REPAIR] SAT destroy operator called.
[DBG]  [REPAIR] SAT operator – launching subproblem FOR OPTIMIZATION.
[DBG]  Creating local paths (sx, sy) in the submap for T_sync = 9
[DBG]    Agent 28 (global paths from T=9 to 41) has local path: (2,2) (3,2) (3,3) (4,3) (4,3) (4,3) (4,3) (4,3) (4,3) (4,3) (4,3) (4,3) (4,3) (4,3) (4,3) (4,3) (4,3) (4,3) (4,3) (4,3) (4,3) (4,3) (4,3) (4,3) (4,3) (4,3) (4,3) (4,3) (4,3) (4,3) (4,3) (3,3) (3,4) 
[DBG]    Agent 86 (global paths from T=9 to 13) has local path: (1,0) (1,1) (0,1) (0,2) (0,3) 
[DBG]    Agent 89 (global paths from T=9 to 14) has local path: (0,2) (1,2) (2,2) (3,2) (4,2) (4,1) 
[DBG]    Agent 91 (global paths from T=9 to 9) has local path: (0,3) 
[DBG]  Checking input data for SAT solver:
[DBG]    - Number of agents to replan: 4
[DBG]  Agent 28 has the original local path length: 33 => Start (2,2), Goal (3,4)
[DBG]  Agent 86 has the original local path length: 5 => Start (1,0), Goal (0,3)
[DBG]  Agent 89 has the original local path length: 6 => Start (0,2), Goal (4,1)
[DBG]  Agent 91 has the original local path length: 1 => Start (0,3), Goal (0,3)
[DBG]  Start position: (2, 2), (1, 0), (0, 2), (0, 3), 
[DBG]  Goal position: (3, 4), (0, 3), (4, 1), (0, 3), 
[DBG]  SAT instance and solver created.
Currently solving
Instance name: scen
Map name: map
Encoding used: disappear_at_goal
SAT solver used: Kissat
Optimizing function: sum of costs
Number of agents: 4
Mks LB: 6
SoC LB: 16
Delta: 0
Remaining time: 300000 [ms]

Vertex conflict! Agents 0, 1, timestep 5, location 0
Vertex conflict! Agents 0, 3, timestep 4, location 0
Swapping conflict! Agents 0, 3, timestep 4, edge (0,0)
Vertex conflict! Agents 0, 3, timestep 5, location 0
Vertex conflict! Agents 1, 3, timestep 5, location 0
Found plan [agents = 4] [timesteps = 6]
Agent #0 : 8 10 11 12 0 0 
Agent #1 : 3 4 5 6 2 0 
Agent #2 : 1 5 8 10 14 13 
Agent #3 : 2 0 0 0 0 0 

[STAT] Solver returned: 0
[DBG]  Agent (index) 28 | New local path (submap idx):
[DBG]  8 10 11 12 
[DBG]  Agent (index) 86 | New local path (submap idx):
[DBG]  3 4 5 6 2 
[DBG]  Agent (index) 89 | New local path (submap idx):
[DBG]  1 5 8 10 14 13 
[DBG]  Agent (index) 91 | New local path (submap idx):
[DBG]  2 
[DBG]  Update the agent path 28 | Original local length: 33 | New local length: 4
[DBG]  agent 28 t=0 => decoded (sx,sy)=(2,2) => global_id=692
[DBG]  agent 28 t=1 => decoded (sx,sy)=(3,2) => global_id=724
[DBG]  agent 28 t=2 => decoded (sx,sy)=(3,3) => global_id=725
[DBG]  agent 28 t=3 => decoded (sx,sy)=(3,4) => global_id=726
[DBG]  Complete path of agent 28:
[DBG]    Original: 661 661 660 659 659 659 659 659 660 692 724 725 757 757 757 757 757 757 757 757 757 757 757 757 757 757 757 757 757 757 757 757 757 757 757 757 757 757 757 757 725 726 727 
[DBG]    New:     661 661 660 659 659 659 659 659 660 692 724 725 726 727 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 661 661 660 659 659 659 659 659 660 
[DBG]    Local path (in submap): 692 724 725 726 727 
[DBG]    Suffix (out of submap): 
[DBG]  Original agent path length 28 je: 43
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 0: 661, 661, 660, 659, 659, 659, 659, 659, 660, 692, 724, 725, 726, 727, 
[DBG]  Path for agent 28 updated, resulting length: 14
[DBG]  Update the agent path 86 | Original local length: 5 | New local length: 5
[DBG]  agent 86 t=0 => decoded (sx,sy)=(1,0) => global_id=658
[DBG]  agent 86 t=1 => decoded (sx,sy)=(1,1) => global_id=659
[DBG]  agent 86 t=2 => decoded (sx,sy)=(1,2) => global_id=660
[DBG]  agent 86 t=3 => decoded (sx,sy)=(1,3) => global_id=661
[DBG]  agent 86 t=4 => decoded (sx,sy)=(0,3) => global_id=629
[DBG]  Complete path of agent 86:
[DBG]    Original: 781 782 750 718 686 654 655 656 657 658 659 627 628 629 597 565 533 534 534 502 503 504 505 506 538 539 540 541 
[DBG]    New:     781 782 750 718 686 654 655 656 657 658 659 660 661 629 597 565 533 534 534 502 503 504 505 506 538 539 540 541 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 781 782 750 718 686 654 655 656 657 
[DBG]    Local path (in submap): 658 659 660 661 629 
[DBG]    Suffix (out of submap): 597 565 533 534 534 502 503 504 505 506 538 539 540 541 
[DBG]  Original agent path length 86 je: 28
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 1: 781, 782, 750, 718, 686, 654, 655, 656, 657, 658, 659, 660, 661, 629, 597, 565, 533, 534, 534, 502, 503, 504, 505, 506, 538, 539, 540, 541, 
[DBG]  Path for agent 86 updated, resulting length: 28
[DBG]  Update the agent path 89 | Original local length: 6 | New local length: 6
[DBG]  agent 89 t=0 => decoded (sx,sy)=(0,2) => global_id=628
[DBG]  agent 89 t=1 => decoded (sx,sy)=(1,2) => global_id=660
[DBG]  agent 89 t=2 => decoded (sx,sy)=(2,2) => global_id=692
[DBG]  agent 89 t=3 => decoded (sx,sy)=(3,2) => global_id=724
[DBG]  agent 89 t=4 => decoded (sx,sy)=(4,2) => global_id=756
[DBG]  agent 89 t=5 => decoded (sx,sy)=(4,1) => global_id=755
[DBG]  Complete path of agent 89:
[DBG]    Original: 437 469 501 533 565 597 596 596 596 628 660 692 724 756 755 787 819 851 883 884 885 886 918 950 982 1014 1015 
[DBG]    New:     437 469 501 533 565 597 596 596 596 628 660 692 724 756 755 787 819 851 883 884 885 886 918 950 982 1014 1015 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 437 469 501 533 565 597 596 596 596 
[DBG]    Local path (in submap): 628 660 692 724 756 755 
[DBG]    Suffix (out of submap): 787 819 851 883 884 885 886 918 950 982 1014 1015 
[DBG]  Original agent path length 89 je: 27
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 2: 437, 469, 501, 533, 565, 597, 596, 596, 596, 628, 660, 692, 724, 756, 755, 787, 819, 851, 883, 884, 885, 886, 918, 950, 982, 1014, 1015, 
[DBG]  Path for agent 89 updated, resulting length: 27
[DBG]  Update the agent path 91 | Original local length: 1 | New local length: 1
[DBG]  agent 91 t=0 => decoded (sx,sy)=(0,3) => global_id=629
[DBG]  Complete path of agent 91:
[DBG]    Original: 787 755 756 757 756 724 692 660 661 629 597 565 566 534 502 503 504 472 440 408 409 377 378 378 379 380 381 
[DBG]    New:     787 755 756 757 756 724 692 660 661 629 597 565 566 534 502 503 504 472 440 408 409 377 378 378 379 380 381 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 787 755 756 757 756 724 692 660 661 
[DBG]    Local path (in submap): 629 
[DBG]    Suffix (out of submap): 597 565 566 534 502 503 504 472 440 408 409 377 378 378 379 380 381 
[DBG]  Original agent path length 91 je: 27
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 3: 787, 755, 756, 757, 756, 724, 692, 660, 661, 629, 597, 565, 566, 534, 502, 503, 504, 472, 440, 408, 409, 377, 378, 378, 379, 380, 381, 
[DBG]  Path for agent 91 updated, resulting length: 27
[DBG]  Paths successfully updated.
[DBG]  (LNS.cpp) New path for agent 28: 
[DBG]  661, 661, 660, 659, 659, 659, 659, 659, 660, 692, 724, 725, 726, 727, 
[DBG]  (LNS.cpp) New path for agent 86: 
[DBG]  781, 782, 750, 718, 686, 654, 655, 656, 657, 658, 659, 660, 661, 629, 597, 565, 533, 534, 534, 502, 503, 504, 505, 506, 538, 539, 540, 541, 
[DBG]  (LNS.cpp) New path for agent 89: 
[DBG]  437, 469, 501, 533, 565, 597, 596, 596, 596, 628, 660, 692, 724, 756, 755, 787, 819, 851, 883, 884, 885, 886, 918, 950, 982, 1014, 1015, 
[DBG]  (LNS.cpp) New path for agent 91: 
[DBG]  787, 755, 756, 757, 756, 724, 692, 660, 661, 629, 597, 565, 566, 534, 502, 503, 504, 472, 440, 408, 409, 377, 378, 378, 379, 380, 381, 
[DBG]  Delta value: 0.239669
[DBG]  Rewarding metric index = 1
[DBG]  component_weights = {0.111207, 0.780961, 0.039373, 0.068459}
[DBG]  opSuccess value: 1
[STAT] neighbor.sum_of_costs before recomputation: 92
[STAT] neighbor.old_sum_of_costs before recomputation: 121
[STAT] sum_of_costs before recomputation: 4334
[DBG]  Validate solution immediately after SAT success.
[WARNING] Problem after SAT: Target conflict: agent 42 (len 42) traverses target of agent 28 (len 13) at location 727 at timestep 41
[DBG]  [DEBUG] Attempting immediate repair via init_lns because problem occurred after SAT (should be applied only for conflicts...).
[DBG]  [DEBUG] Passing 150 agents to init_lns (skip=true).
[DBG]  [DEBUG] path_table contents for selected agents (neighbor.agents):
[DBG]    Agent 28 => controlling path length=14
[DBG]    Agent 86 => controlling path length=28
[DBG]    Agent 89 => controlling path length=27
[DBG]    Agent 91 => controlling path length=27
[DBG]  hodnota skip_initial_solution=1
[DBG]  We skip initialSolution => call buildCollisionData()
[DBG]  buildCollisionData() called – skip_initial_solution case.
[DBG]  Agents.size()=150, collision_graph.size()=150
[DBG]  agent 28 => updateCollidingPairs => foundCollision
[DBG]  agent 42 => updateCollidingPairs => foundCollision
[DBG]  Conflicting agent pairs:
[DBG]  agent 28 is in conflict with agent 42
[DBG]  buildCollisionData() => sum_of_costs=4305, num_of_colliding_pairs=1
[DBG]  buildCollisionData done => sum_of_costs=4305, num_of_colliding_pairs=1
[DBG]  sum_of_cost hodnota: 4305
[DBG]  After skip/init build => iteration_stats.back(): sum_of_costs=4305, collisions=1
[DEBUG] Using default neighbor generation strategy for conflicts: 1
	InitLNS(PP): runtime = 0.00153383, iterations = 2, colliding pairs = 0, initial colliding pairs = 1, solution cost = 4343, initial solution cost = 4305, failed iterations = 0
[DBG]  init_lns->sum_of_costs after init_lns->run: 4343
[DBG]  sum_of_costs after assignment from init_lns->run: 4343
[DBG]  Recomputing sum_of_cost by dividing neighbor.sum_of_costs and neighbor.old_sum_of_costs
[STAT] sum_of_costs after recomputation: 4343
[STAT] Iteration 61
[DBG]  Random chance did not select SAT operator (r=33), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 61
[DBG]  Random chance did not select SAT operator (r=71), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 61
[DBG]  Random chance did not select SAT operator (r=16), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 61
[DBG]  Using SAT operator (destroy+repair SAT).
[DBG]  ====================
[DBG]  SAT destroy operator called.
[DBG]  SAT heuristic: 2
[DBG]  key_agent_id: 28
[DBG]  key_agent_id global path length: 48
[DBG]  Submap content (global positions):
[DBG]  661 662 663 664 665 
[DBG]  693 694 695 696 697 
[DBG]  725 726 727 728 729 
[DBG]  757 758 759 760 761 
[DBG]  789 790 791 792 793 
[DBG]  Map content with agents and obstacles:
[DBG]  . X X . X 
[DBG]  X X X . . 
[DBG]  . . A . . 
[DBG]  . X A X . 
[DBG]  X . X . . 
[DBG]  content of the map structure that we pass to the SAT solver:
[DBG]  1  -1  -1  1  -1  
[DBG]  -1  -1  -1  1  1  
[DBG]  1  1  1  1  1  
[DBG]  1  -1  1  -1  1  
[DBG]  -1  1  -1  1  1  
[DBG]  Identifying agents in a submap for rescheduling (when key_agent is there at the time 47):
[DBG]  Agent 28 found intervals in the sub-map:
[DBG]   [0..1] [37..47]
[DBG]  Agent 28 (interval in submap: [37..47]) contains time 47, added to replan.
[DBG]  Agent 42 found intervals in the sub-map:
[DBG]   [36..36] [44..47]
[DBG]  Agent 42 (interval in submap: [44..47]) contains time 47, added to replan.
[DBG]  Agent 28 | Start (global): 727 -> (local): (2, 2) at time 47 | Goal (global): 727 -> (local): (2, 2) at time 47
[DBG]  Agent 42 | Start (global): 759 -> (local): (3, 2) at time 47 | Goal (global): 759 -> (local): (3, 2) at time 47
[DBG]  [REPAIR] SAT destroy operator called.
[DBG]  [REPAIR] SAT operator – launching subproblem FOR OPTIMIZATION.
[DBG]  Creating local paths (sx, sy) in the submap for T_sync = 47
[DBG]    Agent 28 (global paths from T=47 to 47) has local path: (2,2) 
[DBG]    Agent 42 (global paths from T=47 to 47) has local path: (3,2) 
[DBG]  Checking input data for SAT solver:
[DBG]    - Number of agents to replan: 2
[DBG]  Agent 28 has the original local path length: 1 => Start (2,2), Goal (2,2)
[DBG]  Agent 42 has the original local path length: 1 => Start (3,2), Goal (3,2)
[DBG]  Start position: (2, 2), (3, 2), 
[DBG]  Goal position: (2, 2), (3, 2), 
[DBG]  SAT instance and solver created.
Currently solving
Instance name: scen
Map name: map
Encoding used: disappear_at_goal
SAT solver used: Kissat
Optimizing function: sum of costs
Number of agents: 2
Mks LB: 1
SoC LB: 2
Delta: 0
Remaining time: 300000 [ms]

Found plan [agents = 2] [timesteps = 1]
Agent #0 : 6 
Agent #1 : 10 

[STAT] Solver returned: 0
[DBG]  Agent (index) 28 | New local path (submap idx):
[DBG]  6 
[DBG]  Agent (index) 42 | New local path (submap idx):
[DBG]  10 
[DBG]  Update the agent path 28 | Original local length: 1 | New local length: 1
[DBG]  agent 28 t=0 => decoded (sx,sy)=(2,2) => global_id=727
[DBG]  Complete path of agent 28:
[DBG]    Original: 661 661 660 692 691 691 691 691 691 691 691 691 691 691 691 691 691 691 692 692 692 660 660 660 660 660 660 660 692 691 659 660 659 659 660 692 724 725 757 757 757 757 757 757 757 725 726 727 
[DBG]    New:     661 661 660 692 691 691 691 691 691 691 691 691 691 691 691 691 691 691 692 692 692 660 660 660 660 660 660 660 692 691 659 660 659 659 660 692 724 725 757 757 757 757 757 757 757 725 726 727 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 661 661 660 692 691 691 691 691 691 691 691 691 691 691 691 691 691 691 692 692 692 660 660 660 660 660 660 660 692 691 659 660 659 659 660 692 724 725 757 757 757 757 757 757 757 725 726 
[DBG]    Local path (in submap): 727 
[DBG]    Suffix (out of submap): 
[DBG]  Original agent path length 28 je: 48
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 0: 661, 661, 660, 692, 691, 691, 691, 691, 691, 691, 691, 691, 691, 691, 691, 691, 691, 691, 692, 692, 692, 660, 660, 660, 660, 660, 660, 660, 692, 691, 659, 660, 659, 659, 660, 692, 724, 725, 757, 757, 757, 757, 757, 757, 757, 725, 726, 727, 
[DBG]  Path for agent 28 updated, resulting length: 48
[DBG]  Update the agent path 42 | Original local length: 1 | New local length: 1
[DBG]  agent 42 t=0 => decoded (sx,sy)=(3,2) => global_id=759
[DBG]  Complete path of agent 42:
[DBG]    Original: 224 256 288 289 321 353 354 354 355 387 388 389 390 422 423 424 425 426 427 428 429 430 431 432 433 465 466 467 468 468 469 501 533 565 597 629 661 660 659 659 659 691 692 724 725 726 727 759 
[DBG]    New:     224 256 288 289 321 353 354 354 355 387 388 389 390 422 423 424 425 426 427 428 429 430 431 432 433 465 466 467 468 468 469 501 533 565 597 629 661 660 659 659 659 691 692 724 725 726 727 759 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 224 256 288 289 321 353 354 354 355 387 388 389 390 422 423 424 425 426 427 428 429 430 431 432 433 465 466 467 468 468 469 501 533 565 597 629 661 660 659 659 659 691 692 724 725 726 727 
[DBG]    Local path (in submap): 759 
[DBG]    Suffix (out of submap): 
[DBG]  Original agent path length 42 je: 48
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 1: 224, 256, 288, 289, 321, 353, 354, 354, 355, 387, 388, 389, 390, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 465, 466, 467, 468, 468, 469, 501, 533, 565, 597, 629, 661, 660, 659, 659, 659, 691, 692, 724, 725, 726, 727, 759, 
[DBG]  Path for agent 42 updated, resulting length: 48
[DBG]  Paths successfully updated.
[DBG]  (LNS.cpp) New path for agent 28: 
[DBG]  661, 661, 660, 692, 691, 691, 691, 691, 691, 691, 691, 691, 691, 691, 691, 691, 691, 691, 692, 692, 692, 660, 660, 660, 660, 660, 660, 660, 692, 691, 659, 660, 659, 659, 660, 692, 724, 725, 757, 757, 757, 757, 757, 757, 757, 725, 726, 727, 
[DBG]  (LNS.cpp) New path for agent 42: 
[DBG]  224, 256, 288, 289, 321, 353, 354, 354, 355, 387, 388, 389, 390, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 465, 466, 467, 468, 468, 469, 501, 533, 565, 597, 629, 661, 660, 659, 659, 659, 691, 692, 724, 725, 726, 727, 759, 
[DBG]  Delta value: 0
[DBG]  Rewarding metric index = 1
[DBG]  component_weights = {0.106816, 0.789609, 0.0378186, 0.0657562}
[DBG]  opSuccess value: 1
[STAT] neighbor.sum_of_costs before recomputation: 94
[STAT] neighbor.old_sum_of_costs before recomputation: 94
[STAT] sum_of_costs before recomputation: 4343
[DBG]  Validate solution immediately after SAT success.
[DBG]  No problems after SAT replan.
[DBG]  Recomputing sum_of_cost by dividing neighbor.sum_of_costs and neighbor.old_sum_of_costs
[STAT] sum_of_costs after recomputation: 4343
[STAT] Iteration 62
[DBG]  Random chance did not select SAT operator (r=23), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 62
[DBG]  Random chance did not select SAT operator (r=74), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 62
[DBG]  Using SAT operator (destroy+repair SAT).
[DBG]  ====================
[DBG]  SAT destroy operator called.
[DBG]  SAT heuristic: 2
[DBG]  key_agent_id: 28
[DBG]  key_agent_id global path length: 48
[DBG]  Submap content (global positions):
[DBG]  660 661 662 663 664 
[DBG]  692 693 694 695 696 
[DBG]  724 725 726 727 728 
[DBG]  756 757 758 759 760 
[DBG]  788 789 790 791 792 
[DBG]  Map content with agents and obstacles:
[DBG]  . . X X . 
[DBG]  . X X X . 
[DBG]  . . A A . 
[DBG]  . . X . X 
[DBG]  . X . X . 
[DBG]  content of the map structure that we pass to the SAT solver:
[DBG]  1  1  -1  -1  1  
[DBG]  1  -1  -1  -1  1  
[DBG]  1  1  1  1  1  
[DBG]  1  1  -1  1  -1  
[DBG]  1  -1  1  -1  1  
[DBG]  Identifying agents in a submap for rescheduling (when key_agent is there at the time 46):
[DBG]  Agent 28 found intervals in the sub-map:
[DBG]   [0..3] [18..28] [31..31] [34..47]
[DBG]  Agent 28 (interval in submap: [34..47]) contains time 46, added to replan.
[DBG]  Agent 42 found intervals in the sub-map:
[DBG]   [36..37] [42..47]
[DBG]  Agent 42 (interval in submap: [42..47]) contains time 46, added to replan.
[DBG]  Agent 28 | Start (global): 726 -> (local): (2, 2) at time 46 | Goal (global): 727 -> (local): (2, 3) at time 47
[DBG]  Agent 42 | Start (global): 727 -> (local): (2, 3) at time 46 | Goal (global): 759 -> (local): (3, 3) at time 47
[DBG]  [REPAIR] SAT destroy operator called.
[DBG]  [REPAIR] SAT operator – launching subproblem FOR OPTIMIZATION.
[DBG]  Creating local paths (sx, sy) in the submap for T_sync = 46
[DBG]    Agent 28 (global paths from T=46 to 47) has local path: (2,2) (2,3) 
[DBG]    Agent 42 (global paths from T=46 to 47) has local path: (2,3) (3,3) 
[DBG]  Checking input data for SAT solver:
[DBG]    - Number of agents to replan: 2
[DBG]  Agent 28 has the original local path length: 2 => Start (2,2), Goal (2,3)
[DBG]  Agent 42 has the original local path length: 2 => Start (2,3), Goal (3,3)
[DBG]  Start position: (2, 2), (2, 3), 
[DBG]  Goal position: (2, 3), (3, 3), 
[DBG]  SAT instance and solver created.
Currently solving
Instance name: scen
Map name: map
Encoding used: disappear_at_goal
SAT solver used: Kissat
Optimizing function: sum of costs
Number of agents: 2
Mks LB: 2
SoC LB: 4
Delta: 0
Remaining time: 300000 [ms]

Found plan [agents = 2] [timesteps = 2]
Agent #0 : 7 8 
Agent #1 : 8 12 

[STAT] Solver returned: 0
[DBG]  Agent (index) 28 | New local path (submap idx):
[DBG]  7 8 
[DBG]  Agent (index) 42 | New local path (submap idx):
[DBG]  8 12 
[DBG]  Update the agent path 28 | Original local length: 2 | New local length: 2
[DBG]  agent 28 t=0 => decoded (sx,sy)=(2,2) => global_id=726
[DBG]  agent 28 t=1 => decoded (sx,sy)=(2,3) => global_id=727
[DBG]  Complete path of agent 28:
[DBG]    Original: 661 661 660 692 691 691 691 691 691 691 691 691 691 691 691 691 691 691 692 692 692 660 660 660 660 660 660 660 692 691 659 660 659 659 660 692 724 725 757 757 757 757 757 757 757 725 726 727 
[DBG]    New:     661 661 660 692 691 691 691 691 691 691 691 691 691 691 691 691 691 691 692 692 692 660 660 660 660 660 660 660 692 691 659 660 659 659 660 692 724 725 757 757 757 757 757 757 757 725 726 727 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 661 661 660 692 691 691 691 691 691 691 691 691 691 691 691 691 691 691 692 692 692 660 660 660 660 660 660 660 692 691 659 660 659 659 660 692 724 725 757 757 757 757 757 757 757 725 
[DBG]    Local path (in submap): 726 727 
[DBG]    Suffix (out of submap): 
[DBG]  Original agent path length 28 je: 48
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 0: 661, 661, 660, 692, 691, 691, 691, 691, 691, 691, 691, 691, 691, 691, 691, 691, 691, 691, 692, 692, 692, 660, 660, 660, 660, 660, 660, 660, 692, 691, 659, 660, 659, 659, 660, 692, 724, 725, 757, 757, 757, 757, 757, 757, 757, 725, 726, 727, 
[DBG]  Path for agent 28 updated, resulting length: 48
[DBG]  Update the agent path 42 | Original local length: 2 | New local length: 2
[DBG]  agent 42 t=0 => decoded (sx,sy)=(2,3) => global_id=727
[DBG]  agent 42 t=1 => decoded (sx,sy)=(3,3) => global_id=759
[DBG]  Complete path of agent 42:
[DBG]    Original: 224 256 288 289 321 353 354 354 355 387 388 389 390 422 423 424 425 426 427 428 429 430 431 432 433 465 466 467 468 468 469 501 533 565 597 629 661 660 659 659 659 691 692 724 725 726 727 759 
[DBG]    New:     224 256 288 289 321 353 354 354 355 387 388 389 390 422 423 424 425 426 427 428 429 430 431 432 433 465 466 467 468 468 469 501 533 565 597 629 661 660 659 659 659 691 692 724 725 726 727 759 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 224 256 288 289 321 353 354 354 355 387 388 389 390 422 423 424 425 426 427 428 429 430 431 432 433 465 466 467 468 468 469 501 533 565 597 629 661 660 659 659 659 691 692 724 725 726 
[DBG]    Local path (in submap): 727 759 
[DBG]    Suffix (out of submap): 
[DBG]  Original agent path length 42 je: 48
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 1: 224, 256, 288, 289, 321, 353, 354, 354, 355, 387, 388, 389, 390, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 465, 466, 467, 468, 468, 469, 501, 533, 565, 597, 629, 661, 660, 659, 659, 659, 691, 692, 724, 725, 726, 727, 759, 
[DBG]  Path for agent 42 updated, resulting length: 48
[DBG]  Paths successfully updated.
[DBG]  (LNS.cpp) New path for agent 28: 
[DBG]  661, 661, 660, 692, 691, 691, 691, 691, 691, 691, 691, 691, 691, 691, 691, 691, 691, 691, 692, 692, 692, 660, 660, 660, 660, 660, 660, 660, 692, 691, 659, 660, 659, 659, 660, 692, 724, 725, 757, 757, 757, 757, 757, 757, 757, 725, 726, 727, 
[DBG]  (LNS.cpp) New path for agent 42: 
[DBG]  224, 256, 288, 289, 321, 353, 354, 354, 355, 387, 388, 389, 390, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 465, 466, 467, 468, 468, 469, 501, 533, 565, 597, 629, 661, 660, 659, 659, 659, 691, 692, 724, 725, 726, 727, 759, 
[DBG]  Delta value: 0
[DBG]  Rewarding metric index = 1
[DBG]  component_weights = {0.102554, 0.798004, 0.0363096, 0.0631325}
[DBG]  opSuccess value: 1
[STAT] neighbor.sum_of_costs before recomputation: 94
[STAT] neighbor.old_sum_of_costs before recomputation: 94
[STAT] sum_of_costs before recomputation: 4343
[DBG]  Validate solution immediately after SAT success.
[DBG]  No problems after SAT replan.
[DBG]  Recomputing sum_of_cost by dividing neighbor.sum_of_costs and neighbor.old_sum_of_costs
[STAT] sum_of_costs after recomputation: 4343
[STAT] Iteration 63
[DBG]  Random chance did not select SAT operator (r=77), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 63
[DBG]  Random chance did not select SAT operator (r=64), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 63
[DBG]  Random chance did not select SAT operator (r=56), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 63
[DBG]  Random chance did not select SAT operator (r=94), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 63
[DBG]  Random chance did not select SAT operator (r=28), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 63
[DBG]  Random chance did not select SAT operator (r=64), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 63
[DBG]  Random chance did not select SAT operator (r=43), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 63
[DBG]  Random chance did not select SAT operator (r=48), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 63
[DBG]  Random chance did not select SAT operator (r=39), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 63
[DBG]  Random chance did not select SAT operator (r=82), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 63
[DBG]  Using SAT operator (destroy+repair SAT).
[DBG]  ====================
[DBG]  SAT destroy operator called.
[DBG]  SAT heuristic: 2
[DBG]  key_agent_id: 28
[DBG]  key_agent_id global path length: 48
[DBG]  Submap content (global positions):
[DBG]  625 626 627 628 629 
[DBG]  657 658 659 660 661 
[DBG]  689 690 691 692 693 
[DBG]  721 722 723 724 725 
[DBG]  753 754 755 756 757 
[DBG]  Map content with agents and obstacles:
[DBG]  . X . . . 
[DBG]  A A A . . 
[DBG]  A X A . X 
[DBG]  . . X . . 
[DBG]  . X . A . 
[DBG]  content of the map structure that we pass to the SAT solver:
[DBG]  1  -1  1  1  1  
[DBG]  1  1  1  1  1  
[DBG]  1  -1  1  1  -1  
[DBG]  1  1  -1  1  1  
[DBG]  1  -1  1  1  1  
[DBG]  Identifying agents in a submap for rescheduling (when key_agent is there at the time 15):
[DBG]  Agent 28 found intervals in the sub-map:
[DBG]   [0..45]
[DBG]  Agent 28 (interval in submap: [0..45]) contains time 15, added to replan.
[DBG]  Agent 30 found intervals in the sub-map:
[DBG]   [15..19]
[DBG]  Agent 30 (interval in submap: [15..19]) contains time 15, added to replan.
[DBG]  Agent 61 found intervals in the sub-map:
[DBG]   [16..18]
[DBG]  Agent 61 is not in sub-map at time 15 (intervals: 
[DBG]  [16..18] )
[DBG]  Agent 62 found intervals in the sub-map:
[DBG]   [0..21]
[DBG]  Agent 62 (interval in submap: [0..21]) contains time 15, added to replan.
[DBG]  Agent 63 found intervals in the sub-map:
[DBG]   [0..13]
[DBG]  Agent 63 is not in sub-map at time 15 (intervals: 
[DBG]  [0..13] )
[DBG]  Agent 74 found intervals in the sub-map:
[DBG]   [12..19]
[DBG]  Agent 74 (interval in submap: [12..19]) contains time 15, added to replan.
[DBG]  Agent 79 found intervals in the sub-map:
[DBG]   [15..21]
[DBG]  Agent 79 (interval in submap: [15..21]) contains time 15, added to replan.
[DBG]  Agent 89 found intervals in the sub-map:
[DBG]   [9..14]
[DBG]  Agent 89 is not in sub-map at time 15 (intervals: 
[DBG]  [9..14] )
[DBG]  Agent 114 found intervals in the sub-map:
[DBG]   [13..18]
[DBG]  Agent 114 (interval in submap: [13..18]) contains time 15, added to replan.
[DBG]  Agent 28 | Start (global): 691 -> (local): (2, 2) at time 15 | Goal (global): 725 -> (local): (3, 4) at time 45
[DBG]  Agent 30 | Start (global): 756 -> (local): (4, 3) at time 15 | Goal (global): 628 -> (local): (0, 3) at time 19
[DBG]  Agent 62 | Start (global): 657 -> (local): (1, 0) at time 15 | Goal (global): 628 -> (local): (0, 3) at time 21
[DBG]  Agent 74 | Start (global): 658 -> (local): (1, 1) at time 15 | Goal (global): 629 -> (local): (0, 4) at time 19
[DBG]  Agent 79 | Start (global): 689 -> (local): (2, 0) at time 15 | Goal (global): 629 -> (local): (0, 4) at time 21
[DBG]  Agent 114 | Start (global): 659 -> (local): (1, 2) at time 15 | Goal (global): 629 -> (local): (0, 4) at time 18
[DBG]  [REPAIR] SAT destroy operator called.
[DBG]  [REPAIR] SAT operator – launching subproblem FOR OPTIMIZATION.
[DBG]  Creating local paths (sx, sy) in the submap for T_sync = 15
[DBG]    Agent 28 (global paths from T=15 to 45) has local path: (2,2) (2,2) (2,2) (2,3) (2,3) (2,3) (1,3) (1,3) (1,3) (1,3) (1,3) (1,3) (1,3) (2,3) (2,2) (1,2) (1,3) (1,2) (1,2) (1,3) (2,3) (3,3) (3,4) (4,4) (4,4) (4,4) (4,4) (4,4) (4,4) (4,4) (3,4) 
[DBG]    Agent 30 (global paths from T=15 to 19) has local path: (4,3) (3,3) (2,3) (1,3) (0,3) 
[DBG]    Agent 62 (global paths from T=15 to 21) has local path: (1,0) (1,1) (1,2) (2,2) (1,2) (1,3) (0,3) 
[DBG]    Agent 74 (global paths from T=15 to 19) has local path: (1,1) (1,2) (1,3) (0,3) (0,4) 
[DBG]    Agent 79 (global paths from T=15 to 21) has local path: (2,0) (1,0) (1,1) (1,2) (1,3) (0,3) (0,4) 
[DBG]    Agent 114 (global paths from T=15 to 18) has local path: (1,2) (0,2) (0,3) (0,4) 
[DBG]  Checking input data for SAT solver:
[DBG]    - Number of agents to replan: 6
[DBG]  Agent 28 has the original local path length: 31 => Start (2,2), Goal (3,4)
[DBG]  Agent 30 has the original local path length: 5 => Start (4,3), Goal (0,3)
[DBG]  Agent 62 has the original local path length: 7 => Start (1,0), Goal (0,3)
[DBG]  Agent 74 has the original local path length: 5 => Start (1,1), Goal (0,4)
[DBG]  Agent 79 has the original local path length: 7 => Start (2,0), Goal (0,4)
[DBG]  Agent 114 has the original local path length: 4 => Start (1,2), Goal (0,4)
[DBG]  Start position: (2, 2), (4, 3), (1, 0), (1, 1), (2, 0), (1, 2), 
[DBG]  Goal position: (3, 4), (0, 3), (0, 3), (0, 4), (0, 4), (0, 4), 
[DBG]  SAT instance and solver created.
Currently solving
Instance name: scen
Map name: map
Encoding used: disappear_at_goal
SAT solver used: Kissat
Optimizing function: sum of costs
Number of agents: 6
Mks LB: 7
SoC LB: 30
Delta: 0
Remaining time: 300000 [ms]

[STAT] Solver returned: -1
[DBG]  SAT solver failed.
[STAT] SAT solver failed to find a valid solution.
[DBG]  ====================
[DBG]  SAT destroy operator called.
[DBG]  SAT heuristic: 2
[DBG]  key_agent_id: 28
[DBG]  key_agent_id global path length: 48
[DBG]  Submap content (global positions):
[DBG]  658 659 660 661 662 
[DBG]  690 691 692 693 694 
[DBG]  722 723 724 725 726 
[DBG]  754 755 756 757 758 
[DBG]  786 787 788 789 790 
[DBG]  Map content with agents and obstacles:
[DBG]  . . . A X 
[DBG]  X . . X X 
[DBG]  . X A . . 
[DBG]  X . A . X 
[DBG]  . . A X . 
[DBG]  content of the map structure that we pass to the SAT solver:
[DBG]  1  1  1  1  -1  
[DBG]  -1  1  1  -1  -1  
[DBG]  1  -1  1  1  1  
[DBG]  -1  1  1  1  -1  
[DBG]  1  1  1  -1  1  
[DBG]  Identifying agents in a submap for rescheduling (when key_agent is there at the time 36):
[DBG]  Agent 28 found intervals in the sub-map:
[DBG]   [0..46]
[DBG]  Agent 28 (interval in submap: [0..46]) contains time 36, added to replan.
[DBG]  Agent 42 found intervals in the sub-map:
[DBG]   [36..45]
[DBG]  Agent 42 (interval in submap: [36..45]) contains time 36, added to replan.
[DBG]  Agent 53 found intervals in the sub-map:
[DBG]   [31..36]
[DBG]  Agent 53 (interval in submap: [31..36]) contains time 36, added to replan.
[DBG]  Agent 69 found intervals in the sub-map:
[DBG]   [38..44]
[DBG]  Agent 69 is not in sub-map at time 36 (intervals: 
[DBG]  [38..44] )
[DBG]  Agent 148 found intervals in the sub-map:
[DBG]   [26..43]
[DBG]  Agent 148 (interval in submap: [26..43]) contains time 36, added to replan.
[DBG]  Agent 28 | Start (global): 724 -> (local): (2, 2) at time 36 | Goal (global): 726 -> (local): (2, 4) at time 46
[DBG]  Agent 42 | Start (global): 661 -> (local): (0, 3) at time 36 | Goal (global): 726 -> (local): (2, 4) at time 45
[DBG]  Agent 53 | Start (global): 788 -> (local): (4, 2) at time 36 | Goal (global): 788 -> (local): (4, 2) at time 36
[DBG]  Agent 148 | Start (global): 756 -> (local): (3, 2) at time 36 | Goal (global): 660 -> (local): (0, 2) at time 43
[DBG]  [REPAIR] SAT destroy operator called.
[DBG]  [REPAIR] SAT operator – launching subproblem FOR OPTIMIZATION.
[DBG]  Creating local paths (sx, sy) in the submap for T_sync = 36
[DBG]    Agent 28 (global paths from T=36 to 46) has local path: (2,2) (2,3) (3,3) (3,3) (3,3) (3,3) (3,3) (3,3) (3,3) (2,3) (2,4) 
[DBG]    Agent 42 (global paths from T=36 to 45) has local path: (0,3) (0,2) (0,1) (0,1) (0,1) (1,1) (1,2) (2,2) (2,3) (2,4) 
[DBG]    Agent 53 (global paths from T=36 to 36) has local path: (4,2) 
[DBG]    Agent 148 (global paths from T=36 to 43) has local path: (3,2) (3,2) (3,2) (2,2) (1,2) (0,2) (0,1) (0,2) 
[DBG]  Checking input data for SAT solver:
[DBG]    - Number of agents to replan: 4
[DBG]  Agent 28 has the original local path length: 11 => Start (2,2), Goal (2,4)
[DBG]  Agent 42 has the original local path length: 10 => Start (0,3), Goal (2,4)
[DBG]  Agent 53 has the original local path length: 1 => Start (4,2), Goal (4,2)
[DBG]  Agent 148 has the original local path length: 8 => Start (3,2), Goal (0,2)
[DBG]  Start position: (2, 2), (0, 3), (4, 2), (3, 2), 
[DBG]  Goal position: (2, 4), (2, 4), (4, 2), (0, 2), 
[DBG]  SAT instance and solver created.
Currently solving
Instance name: scen
Map name: map
Encoding used: disappear_at_goal
SAT solver used: Kissat
Optimizing function: sum of costs
Number of agents: 4
Mks LB: 6
SoC LB: 14
Delta: 0
Remaining time: 300000 [ms]

[STAT] Solver returned: -1
[DBG]  SAT solver failed.
[STAT] SAT solver failed to find a valid solution.
[DBG]  ====================
[DBG]  SAT destroy operator called.
[DBG]  SAT heuristic: 2
[DBG]  key_agent_id: 28
[DBG]  key_agent_id global path length: 48
[DBG]  Submap content (global positions):
[DBG]  691 692 693 694 695 
[DBG]  723 724 725 726 727 
[DBG]  755 756 757 758 759 
[DBG]  787 788 789 790 791 
[DBG]  819 820 821 822 823 
[DBG]  Map content with agents and obstacles:
[DBG]  . A X X X 
[DBG]  X A . . . 
[DBG]  . . A X . 
[DBG]  . . X . X 
[DBG]  . . . . . 
[DBG]  content of the map structure that we pass to the SAT solver:
[DBG]  1  1  -1  -1  -1  
[DBG]  -1  1  1  1  1  
[DBG]  1  1  1  -1  1  
[DBG]  1  1  -1  1  -1  
[DBG]  1  1  1  1  1  
[DBG]  Identifying agents in a submap for rescheduling (when key_agent is there at the time 39):
[DBG]  Agent 26 found intervals in the sub-map:
[DBG]   [30..33]
[DBG]  Agent 26 is not in sub-map at time 39 (intervals: 
[DBG]  [30..33] )
[DBG]  Agent 28 found intervals in the sub-map:
[DBG]   [3..20] [28..29] [35..47]
[DBG]  Agent 28 (interval in submap: [35..47]) contains time 39, added to replan.
[DBG]  Agent 42 found intervals in the sub-map:
[DBG]   [41..47]
[DBG]  Agent 42 is not in sub-map at time 39 (intervals: 
[DBG]  [41..47] )
[DBG]  Agent 53 found intervals in the sub-map:
[DBG]   [32..38]
[DBG]  Agent 53 is not in sub-map at time 39 (intervals: 
[DBG]  [32..38] )
[DBG]  Agent 69 found intervals in the sub-map:
[DBG]   [39..45]
[DBG]  Agent 69 (interval in submap: [39..45]) contains time 39, added to replan.
[DBG]  Agent 148 found intervals in the sub-map:
[DBG]   [29..31] [34..40]
[DBG]  Agent 148 (interval in submap: [34..40]) contains time 39, added to replan.
[DBG]  Agent 28 | Start (global): 757 -> (local): (2, 2) at time 39 | Goal (global): 727 -> (local): (1, 4) at time 47
[DBG]  Agent 69 | Start (global): 692 -> (local): (0, 1) at time 39 | Goal (global): 820 -> (local): (4, 1) at time 45
[DBG]  Agent 148 | Start (global): 724 -> (local): (1, 1) at time 39 | Goal (global): 692 -> (local): (0, 1) at time 40
[DBG]  [REPAIR] SAT destroy operator called.
[DBG]  [REPAIR] SAT operator – launching subproblem FOR OPTIMIZATION.
[DBG]  Creating local paths (sx, sy) in the submap for T_sync = 39
[DBG]    Agent 28 (global paths from T=39 to 47) has local path: (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (1,2) (1,3) (1,4) 
[DBG]    Agent 69 (global paths from T=39 to 45) has local path: (0,1) (0,0) (0,1) (1,1) (2,1) (3,1) (4,1) 
[DBG]    Agent 148 (global paths from T=39 to 40) has local path: (1,1) (0,1) 
[DBG]  Checking input data for SAT solver:
[DBG]    - Number of agents to replan: 3
[DBG]  Agent 28 has the original local path length: 9 => Start (2,2), Goal (1,4)
[DBG]  Agent 69 has the original local path length: 7 => Start (0,1), Goal (4,1)
[DBG]  Agent 148 has the original local path length: 2 => Start (1,1), Goal (0,1)
[DBG]  Start position: (2, 2), (0, 1), (1, 1), 
[DBG]  Goal position: (1, 4), (4, 1), (0, 1), 
[DBG]  SAT instance and solver created.
Currently solving
Instance name: scen
Map name: map
Encoding used: disappear_at_goal
SAT solver used: Kissat
Optimizing function: sum of costs
Number of agents: 3
Mks LB: 5
SoC LB: 11
Delta: 0
Remaining time: 300000 [ms]

[STAT] Solver returned: -1
[DBG]  SAT solver failed.
[STAT] SAT solver failed to find a valid solution.
[DBG]  ====================
[DBG]  SAT destroy operator called.
[DBG]  SAT heuristic: 2
[DBG]  key_agent_id: 28
[DBG]  key_agent_id global path length: 48
[DBG]  Submap content (global positions):
[DBG]  625 626 627 628 629 
[DBG]  657 658 659 660 661 
[DBG]  689 690 691 692 693 
[DBG]  721 722 723 724 725 
[DBG]  753 754 755 756 757 
[DBG]  Map content with agents and obstacles:
[DBG]  . X . . . 
[DBG]  . . . . . 
[DBG]  A X A . X 
[DBG]  . . X A A 
[DBG]  A X . A . 
[DBG]  content of the map structure that we pass to the SAT solver:
[DBG]  1  -1  1  1  1  
[DBG]  1  1  1  1  1  
[DBG]  1  -1  1  1  -1  
[DBG]  1  1  -1  1  1  
[DBG]  1  -1  1  1  1  
[DBG]  Identifying agents in a submap for rescheduling (when key_agent is there at the time 4):
[DBG]  Agent 19 found intervals in the sub-map:
[DBG]   [0..0]
[DBG]  Agent 19 is not in sub-map at time 4 (intervals: 
[DBG]  [0..0] )
[DBG]  Agent 28 found intervals in the sub-map:
[DBG]   [0..45]
[DBG]  Agent 28 (interval in submap: [0..45]) contains time 4, added to replan.
[DBG]  Agent 46 found intervals in the sub-map:
[DBG]   [2..5]
[DBG]  Agent 46 (interval in submap: [2..5]) contains time 4, added to replan.
[DBG]  Agent 62 found intervals in the sub-map:
[DBG]   [0..21]
[DBG]  Agent 62 (interval in submap: [0..21]) contains time 4, added to replan.
[DBG]  Agent 63 found intervals in the sub-map:
[DBG]   [0..13]
[DBG]  Agent 63 (interval in submap: [0..13]) contains time 4, added to replan.
[DBG]  Agent 74 found intervals in the sub-map:
[DBG]   [12..19]
[DBG]  Agent 74 is not in sub-map at time 4 (intervals: 
[DBG]  [12..19] )
[DBG]  Agent 91 found intervals in the sub-map:
[DBG]   [1..9]
[DBG]  Agent 91 (interval in submap: [1..9]) contains time 4, added to replan.
[DBG]  Agent 108 found intervals in the sub-map:
[DBG]   [0..6]
[DBG]  Agent 108 (interval in submap: [0..6]) contains time 4, added to replan.
[DBG]  Agent 28 | Start (global): 691 -> (local): (2, 2) at time 4 | Goal (global): 725 -> (local): (3, 4) at time 45
[DBG]  Agent 46 | Start (global): 724 -> (local): (3, 3) at time 4 | Goal (global): 725 -> (local): (3, 4) at time 5
[DBG]  Agent 62 | Start (global): 753 -> (local): (4, 0) at time 4 | Goal (global): 628 -> (local): (0, 3) at time 21
[DBG]  Agent 63 | Start (global): 689 -> (local): (2, 0) at time 4 | Goal (global): 625 -> (local): (0, 0) at time 13
[DBG]  Agent 91 | Start (global): 756 -> (local): (4, 3) at time 4 | Goal (global): 629 -> (local): (0, 4) at time 9
[DBG]  Agent 108 | Start (global): 725 -> (local): (3, 4) at time 4 | Goal (global): 756 -> (local): (4, 3) at time 6
[DBG]  [REPAIR] SAT destroy operator called.
[DBG]  [REPAIR] SAT operator – launching subproblem FOR OPTIMIZATION.
[DBG]  Creating local paths (sx, sy) in the submap for T_sync = 4
[DBG]    Agent 28 (global paths from T=4 to 45) has local path: (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,3) (2,3) (2,3) (1,3) (1,3) (1,3) (1,3) (1,3) (1,3) (1,3) (2,3) (2,2) (1,2) (1,3) (1,2) (1,2) (1,3) (2,3) (3,3) (3,4) (4,4) (4,4) (4,4) (4,4) (4,4) (4,4) (4,4) (3,4) 
[DBG]    Agent 46 (global paths from T=4 to 5) has local path: (3,3) (3,4) 
[DBG]    Agent 62 (global paths from T=4 to 21) has local path: (4,0) (4,0) (4,0) (4,0) (4,0) (4,0) (4,0) (4,0) (4,0) (3,0) (2,0) (1,0) (1,1) (1,2) (2,2) (1,2) (1,3) (0,3) 
[DBG]    Agent 63 (global paths from T=4 to 13) has local path: (2,0) (2,0) (2,0) (2,0) (2,0) (2,0) (2,0) (2,0) (1,0) (0,0) 
[DBG]    Agent 91 (global paths from T=4 to 9) has local path: (4,3) (3,3) (2,3) (1,3) (1,4) (0,4) 
[DBG]    Agent 108 (global paths from T=4 to 6) has local path: (3,4) (4,4) (4,3) 
[DBG]  Checking input data for SAT solver:
[DBG]    - Number of agents to replan: 6
[DBG]  Agent 28 has the original local path length: 42 => Start (2,2), Goal (3,4)
[DBG]  Agent 46 has the original local path length: 2 => Start (3,3), Goal (3,4)
[DBG]  Agent 62 has the original local path length: 18 => Start (4,0), Goal (0,3)
[DBG]  Agent 63 has the original local path length: 10 => Start (2,0), Goal (0,0)
[DBG]  Agent 91 has the original local path length: 6 => Start (4,3), Goal (0,4)
[DBG]  Agent 108 has the original local path length: 3 => Start (3,4), Goal (4,3)
[DBG]  Start position: (2, 2), (3, 3), (4, 0), (2, 0), (4, 3), (3, 4), 
[DBG]  Goal position: (3, 4), (3, 4), (0, 3), (0, 0), (0, 4), (4, 3), 
[DBG]  SAT instance and solver created.
Currently solving
Instance name: scen
Map name: map
Encoding used: disappear_at_goal
SAT solver used: Kissat
Optimizing function: sum of costs
Number of agents: 6
Mks LB: 8
SoC LB: 26
Delta: 0
Remaining time: 300000 [ms]

[STAT] Solver returned: -1
[DBG]  SAT solver failed.
[STAT] SAT solver failed to find a valid solution.
[DBG]  ====================
[DBG]  SAT destroy operator called.
[DBG]  SAT heuristic: 2
[DBG]  key_agent_id: 28
[DBG]  key_agent_id global path length: 48
[DBG]  Submap content (global positions):
[DBG]  659 660 661 662 663 
[DBG]  691 692 693 694 695 
[DBG]  723 724 725 726 727 
[DBG]  755 756 757 758 759 
[DBG]  787 788 789 790 791 
[DBG]  Map content with agents and obstacles:
[DBG]  . . . X X 
[DBG]  . . X X X 
[DBG]  X . A A . 
[DBG]  . . . X . 
[DBG]  . . X . X 
[DBG]  content of the map structure that we pass to the SAT solver:
[DBG]  1  1  1  -1  -1  
[DBG]  1  1  -1  -1  -1  
[DBG]  -1  1  1  1  1  
[DBG]  1  1  1  -1  1  
[DBG]  1  1  -1  1  -1  
[DBG]  Identifying agents in a submap for rescheduling (when key_agent is there at the time 45):
[DBG]  Agent 28 found intervals in the sub-map:
[DBG]   [0..47]
[DBG]  Agent 28 (interval in submap: [0..47]) contains time 45, added to replan.
[DBG]  Agent 42 found intervals in the sub-map:
[DBG]   [36..47]
[DBG]  Agent 42 (interval in submap: [36..47]) contains time 45, added to replan.
[DBG]  Agent 28 | Start (global): 725 -> (local): (2, 2) at time 45 | Goal (global): 727 -> (local): (2, 4) at time 47
[DBG]  Agent 42 | Start (global): 726 -> (local): (2, 3) at time 45 | Goal (global): 759 -> (local): (3, 4) at time 47
[DBG]  [REPAIR] SAT destroy operator called.
[DBG]  [REPAIR] SAT operator – launching subproblem FOR OPTIMIZATION.
[DBG]  Creating local paths (sx, sy) in the submap for T_sync = 45
[DBG]    Agent 28 (global paths from T=45 to 47) has local path: (2,2) (2,3) (2,4) 
[DBG]    Agent 42 (global paths from T=45 to 47) has local path: (2,3) (2,4) (3,4) 
[DBG]  Checking input data for SAT solver:
[DBG]    - Number of agents to replan: 2
[DBG]  Agent 28 has the original local path length: 3 => Start (2,2), Goal (2,4)
[DBG]  Agent 42 has the original local path length: 3 => Start (2,3), Goal (3,4)
[DBG]  Start position: (2, 2), (2, 3), 
[DBG]  Goal position: (2, 4), (3, 4), 
[DBG]  SAT instance and solver created.
Currently solving
Instance name: scen
Map name: map
Encoding used: disappear_at_goal
SAT solver used: Kissat
Optimizing function: sum of costs
Number of agents: 2
Mks LB: 3
SoC LB: 6
Delta: 0
Remaining time: 300000 [ms]

Found plan [agents = 2] [timesteps = 3]
Agent #0 : 6 7 8 
Agent #1 : 7 8 12 

[STAT] Solver returned: 0
[DBG]  Agent (index) 28 | New local path (submap idx):
[DBG]  6 7 8 
[DBG]  Agent (index) 42 | New local path (submap idx):
[DBG]  7 8 12 
[DBG]  Update the agent path 28 | Original local length: 3 | New local length: 3
[DBG]  agent 28 t=0 => decoded (sx,sy)=(2,2) => global_id=725
[DBG]  agent 28 t=1 => decoded (sx,sy)=(2,3) => global_id=726
[DBG]  agent 28 t=2 => decoded (sx,sy)=(2,4) => global_id=727
[DBG]  Complete path of agent 28:
[DBG]    Original: 661 661 660 692 691 691 691 691 691 691 691 691 691 691 691 691 691 691 692 692 692 660 660 660 660 660 660 660 692 691 659 660 659 659 660 692 724 725 757 757 757 757 757 757 757 725 726 727 
[DBG]    New:     661 661 660 692 691 691 691 691 691 691 691 691 691 691 691 691 691 691 692 692 692 660 660 660 660 660 660 660 692 691 659 660 659 659 660 692 724 725 757 757 757 757 757 757 757 725 726 727 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 661 661 660 692 691 691 691 691 691 691 691 691 691 691 691 691 691 691 692 692 692 660 660 660 660 660 660 660 692 691 659 660 659 659 660 692 724 725 757 757 757 757 757 757 757 
[DBG]    Local path (in submap): 725 726 727 
[DBG]    Suffix (out of submap): 
[DBG]  Original agent path length 28 je: 48
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 0: 661, 661, 660, 692, 691, 691, 691, 691, 691, 691, 691, 691, 691, 691, 691, 691, 691, 691, 692, 692, 692, 660, 660, 660, 660, 660, 660, 660, 692, 691, 659, 660, 659, 659, 660, 692, 724, 725, 757, 757, 757, 757, 757, 757, 757, 725, 726, 727, 
[DBG]  Path for agent 28 updated, resulting length: 48
[DBG]  Update the agent path 42 | Original local length: 3 | New local length: 3
[DBG]  agent 42 t=0 => decoded (sx,sy)=(2,3) => global_id=726
[DBG]  agent 42 t=1 => decoded (sx,sy)=(2,4) => global_id=727
[DBG]  agent 42 t=2 => decoded (sx,sy)=(3,4) => global_id=759
[DBG]  Complete path of agent 42:
[DBG]    Original: 224 256 288 289 321 353 354 354 355 387 388 389 390 422 423 424 425 426 427 428 429 430 431 432 433 465 466 467 468 468 469 501 533 565 597 629 661 660 659 659 659 691 692 724 725 726 727 759 
[DBG]    New:     224 256 288 289 321 353 354 354 355 387 388 389 390 422 423 424 425 426 427 428 429 430 431 432 433 465 466 467 468 468 469 501 533 565 597 629 661 660 659 659 659 691 692 724 725 726 727 759 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 224 256 288 289 321 353 354 354 355 387 388 389 390 422 423 424 425 426 427 428 429 430 431 432 433 465 466 467 468 468 469 501 533 565 597 629 661 660 659 659 659 691 692 724 725 
[DBG]    Local path (in submap): 726 727 759 
[DBG]    Suffix (out of submap): 
[DBG]  Original agent path length 42 je: 48
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 1: 224, 256, 288, 289, 321, 353, 354, 354, 355, 387, 388, 389, 390, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 465, 466, 467, 468, 468, 469, 501, 533, 565, 597, 629, 661, 660, 659, 659, 659, 691, 692, 724, 725, 726, 727, 759, 
[DBG]  Path for agent 42 updated, resulting length: 48
[DBG]  Paths successfully updated.
[DBG]  (LNS.cpp) New path for agent 28: 
[DBG]  661, 661, 660, 692, 691, 691, 691, 691, 691, 691, 691, 691, 691, 691, 691, 691, 691, 691, 692, 692, 692, 660, 660, 660, 660, 660, 660, 660, 692, 691, 659, 660, 659, 659, 660, 692, 724, 725, 757, 757, 757, 757, 757, 757, 757, 725, 726, 727, 
[DBG]  (LNS.cpp) New path for agent 42: 
[DBG]  224, 256, 288, 289, 321, 353, 354, 354, 355, 387, 388, 389, 390, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 465, 466, 467, 468, 468, 469, 501, 533, 565, 597, 629, 661, 660, 659, 659, 659, 691, 692, 724, 725, 726, 727, 759, 
[DBG]  Delta value: 0
[DBG]  Rewarding metric index = 1
[DBG]  component_weights = {0.0984205, 0.806146, 0.0348461, 0.0605878}
[DBG]  opSuccess value: 1
[STAT] neighbor.sum_of_costs before recomputation: 94
[STAT] neighbor.old_sum_of_costs before recomputation: 94
[STAT] sum_of_costs before recomputation: 4343
[DBG]  Validate solution immediately after SAT success.
[DBG]  No problems after SAT replan.
[DBG]  Recomputing sum_of_cost by dividing neighbor.sum_of_costs and neighbor.old_sum_of_costs
[STAT] sum_of_costs after recomputation: 4343
[STAT] Iteration 64
[DBG]  Random chance did not select SAT operator (r=71), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 64
[DBG]  Using SAT operator (destroy+repair SAT).
[DBG]  ====================
[DBG]  SAT destroy operator called.
[DBG]  SAT heuristic: 2
[DBG]  key_agent_id: 28
[DBG]  key_agent_id global path length: 48
[DBG]  Submap content (global positions):
[DBG]  691 692 693 694 695 
[DBG]  723 724 725 726 727 
[DBG]  755 756 757 758 759 
[DBG]  787 788 789 790 791 
[DBG]  819 820 821 822 823 
[DBG]  Map content with agents and obstacles:
[DBG]  A A X X X 
[DBG]  X . . . . 
[DBG]  . . A X . 
[DBG]  . . X . X 
[DBG]  . . . . . 
[DBG]  content of the map structure that we pass to the SAT solver:
[DBG]  1  1  -1  -1  -1  
[DBG]  -1  1  1  1  1  
[DBG]  1  1  1  -1  1  
[DBG]  1  1  -1  1  -1  
[DBG]  1  1  1  1  1  
[DBG]  Identifying agents in a submap for rescheduling (when key_agent is there at the time 41):
[DBG]  Agent 28 found intervals in the sub-map:
[DBG]   [3..20] [28..29] [35..47]
[DBG]  Agent 28 (interval in submap: [35..47]) contains time 41, added to replan.
[DBG]  Agent 42 found intervals in the sub-map:
[DBG]   [41..47]
[DBG]  Agent 42 (interval in submap: [41..47]) contains time 41, added to replan.
[DBG]  Agent 69 found intervals in the sub-map:
[DBG]   [39..45]
[DBG]  Agent 69 (interval in submap: [39..45]) contains time 41, added to replan.
[DBG]  Agent 28 | Start (global): 757 -> (local): (2, 2) at time 41 | Goal (global): 727 -> (local): (1, 4) at time 47
[DBG]  Agent 42 | Start (global): 691 -> (local): (0, 0) at time 41 | Goal (global): 759 -> (local): (2, 4) at time 47
[DBG]  Agent 69 | Start (global): 692 -> (local): (0, 1) at time 41 | Goal (global): 820 -> (local): (4, 1) at time 45
[DBG]  [REPAIR] SAT destroy operator called.
[DBG]  [REPAIR] SAT operator – launching subproblem FOR OPTIMIZATION.
[DBG]  Creating local paths (sx, sy) in the submap for T_sync = 41
[DBG]    Agent 28 (global paths from T=41 to 47) has local path: (2,2) (2,2) (2,2) (2,2) (1,2) (1,3) (1,4) 
[DBG]    Agent 42 (global paths from T=41 to 47) has local path: (0,0) (0,1) (1,1) (1,2) (1,3) (1,4) (2,4) 
[DBG]    Agent 69 (global paths from T=41 to 45) has local path: (0,1) (1,1) (2,1) (3,1) (4,1) 
[DBG]  Checking input data for SAT solver:
[DBG]    - Number of agents to replan: 3
[DBG]  Agent 28 has the original local path length: 7 => Start (2,2), Goal (1,4)
[DBG]  Agent 42 has the original local path length: 7 => Start (0,0), Goal (2,4)
[DBG]  Agent 69 has the original local path length: 5 => Start (0,1), Goal (4,1)
[DBG]  Start position: (2, 2), (0, 0), (0, 1), 
[DBG]  Goal position: (1, 4), (2, 4), (4, 1), 
[DBG]  SAT instance and solver created.
Currently solving
Instance name: scen
Map name: map
Encoding used: disappear_at_goal
SAT solver used: Kissat
Optimizing function: sum of costs
Number of agents: 3
Mks LB: 7
SoC LB: 16
Delta: 0
Remaining time: 300000 [ms]

Vertex conflict! Agents 0, 2, timestep 5, location 0
Swapping conflict! Agents 0, 2, timestep 5, edge (0,0)
Vertex conflict! Agents 0, 2, timestep 6, location 0
Found plan [agents = 3] [timesteps = 7]
Agent #0 : 8 3 4 5 0 0 0 
Agent #1 : 0 1 2 3 4 5 9 
Agent #2 : 1 2 7 11 14 0 0 

[STAT] Solver returned: 0
[DBG]  Agent (index) 28 | New local path (submap idx):
[DBG]  8 3 4 5 
[DBG]  Agent (index) 42 | New local path (submap idx):
[DBG]  0 1 2 3 4 5 9 
[DBG]  Agent (index) 69 | New local path (submap idx):
[DBG]  1 2 7 11 14 
[DBG]  Update the agent path 28 | Original local length: 7 | New local length: 4
[DBG]  agent 28 t=0 => decoded (sx,sy)=(2,2) => global_id=757
[DBG]  agent 28 t=1 => decoded (sx,sy)=(1,2) => global_id=725
[DBG]  agent 28 t=2 => decoded (sx,sy)=(1,3) => global_id=726
[DBG]  agent 28 t=3 => decoded (sx,sy)=(1,4) => global_id=727
[DBG]  Complete path of agent 28:
[DBG]    Original: 661 661 660 692 691 691 691 691 691 691 691 691 691 691 691 691 691 691 692 692 692 660 660 660 660 660 660 660 692 691 659 660 659 659 660 692 724 725 757 757 757 757 757 757 757 725 726 727 
[DBG]    New:     661 661 660 692 691 691 691 691 691 691 691 691 691 691 691 691 691 691 692 692 692 660 660 660 660 660 660 660 692 691 659 660 659 659 660 692 724 725 757 757 757 757 725 726 727 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 661 661 660 692 691 691 691 691 691 691 691 691 691 691 691 691 691 691 692 692 692 660 660 660 660 660 660 660 692 691 659 660 659 659 660 692 724 725 757 757 757 
[DBG]    Local path (in submap): 757 725 726 727 
[DBG]    Suffix (out of submap): 
[DBG]  Original agent path length 28 je: 48
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 0: 661, 661, 660, 692, 691, 691, 691, 691, 691, 691, 691, 691, 691, 691, 691, 691, 691, 691, 692, 692, 692, 660, 660, 660, 660, 660, 660, 660, 692, 691, 659, 660, 659, 659, 660, 692, 724, 725, 757, 757, 757, 757, 725, 726, 727, 
[DBG]  Path for agent 28 updated, resulting length: 45
[DBG]  Update the agent path 42 | Original local length: 7 | New local length: 7
[DBG]  agent 42 t=0 => decoded (sx,sy)=(0,0) => global_id=691
[DBG]  agent 42 t=1 => decoded (sx,sy)=(0,1) => global_id=692
[DBG]  agent 42 t=2 => decoded (sx,sy)=(1,1) => global_id=724
[DBG]  agent 42 t=3 => decoded (sx,sy)=(1,2) => global_id=725
[DBG]  agent 42 t=4 => decoded (sx,sy)=(1,3) => global_id=726
[DBG]  agent 42 t=5 => decoded (sx,sy)=(1,4) => global_id=727
[DBG]  agent 42 t=6 => decoded (sx,sy)=(2,4) => global_id=759
[DBG]  Complete path of agent 42:
[DBG]    Original: 224 256 288 289 321 353 354 354 355 387 388 389 390 422 423 424 425 426 427 428 429 430 431 432 433 465 466 467 468 468 469 501 533 565 597 629 661 660 659 659 659 691 692 724 725 726 727 759 
[DBG]    New:     224 256 288 289 321 353 354 354 355 387 388 389 390 422 423 424 425 426 427 428 429 430 431 432 433 465 466 467 468 468 469 501 533 565 597 629 661 660 659 659 659 691 692 724 725 726 727 759 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 224 256 288 289 321 353 354 354 355 387 388 389 390 422 423 424 425 426 427 428 429 430 431 432 433 465 466 467 468 468 469 501 533 565 597 629 661 660 659 659 659 
[DBG]    Local path (in submap): 691 692 724 725 726 727 759 
[DBG]    Suffix (out of submap): 
[DBG]  Original agent path length 42 je: 48
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 1: 224, 256, 288, 289, 321, 353, 354, 354, 355, 387, 388, 389, 390, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 465, 466, 467, 468, 468, 469, 501, 533, 565, 597, 629, 661, 660, 659, 659, 659, 691, 692, 724, 725, 726, 727, 759, 
[DBG]  Path for agent 42 updated, resulting length: 48
[DBG]  Update the agent path 69 | Original local length: 5 | New local length: 5
[DBG]  agent 69 t=0 => decoded (sx,sy)=(0,1) => global_id=692
[DBG]  agent 69 t=1 => decoded (sx,sy)=(1,1) => global_id=724
[DBG]  agent 69 t=2 => decoded (sx,sy)=(2,1) => global_id=756
[DBG]  agent 69 t=3 => decoded (sx,sy)=(3,1) => global_id=788
[DBG]  agent 69 t=4 => decoded (sx,sy)=(4,1) => global_id=820
[DBG]  Complete path of agent 69:
[DBG]    Original: 4 5 6 7 8 9 41 73 74 106 107 108 140 172 173 205 237 269 301 302 303 304 336 368 400 401 402 403 435 467 468 469 501 533 565 597 629 628 660 692 691 692 724 756 788 820 
[DBG]    New:     4 5 6 7 8 9 41 73 74 106 107 108 140 172 173 205 237 269 301 302 303 304 336 368 400 401 402 403 435 467 468 469 501 533 565 597 629 628 660 692 691 692 724 756 788 820 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 4 5 6 7 8 9 41 73 74 106 107 108 140 172 173 205 237 269 301 302 303 304 336 368 400 401 402 403 435 467 468 469 501 533 565 597 629 628 660 692 691 
[DBG]    Local path (in submap): 692 724 756 788 820 
[DBG]    Suffix (out of submap): 
[DBG]  Original agent path length 69 je: 46
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 2: 4, 5, 6, 7, 8, 9, 41, 73, 74, 106, 107, 108, 140, 172, 173, 205, 237, 269, 301, 302, 303, 304, 336, 368, 400, 401, 402, 403, 435, 467, 468, 469, 501, 533, 565, 597, 629, 628, 660, 692, 691, 692, 724, 756, 788, 820, 
[DBG]  Path for agent 69 updated, resulting length: 46
[DBG]  Paths successfully updated.
[DBG]  (LNS.cpp) New path for agent 28: 
[DBG]  661, 661, 660, 692, 691, 691, 691, 691, 691, 691, 691, 691, 691, 691, 691, 691, 691, 691, 692, 692, 692, 660, 660, 660, 660, 660, 660, 660, 692, 691, 659, 660, 659, 659, 660, 692, 724, 725, 757, 757, 757, 757, 725, 726, 727, 
[DBG]  (LNS.cpp) New path for agent 42: 
[DBG]  224, 256, 288, 289, 321, 353, 354, 354, 355, 387, 388, 389, 390, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 465, 466, 467, 468, 468, 469, 501, 533, 565, 597, 629, 661, 660, 659, 659, 659, 691, 692, 724, 725, 726, 727, 759, 
[DBG]  (LNS.cpp) New path for agent 69: 
[DBG]  4, 5, 6, 7, 8, 9, 41, 73, 74, 106, 107, 108, 140, 172, 173, 205, 237, 269, 301, 302, 303, 304, 336, 368, 400, 401, 402, 403, 435, 467, 468, 469, 501, 533, 565, 597, 629, 628, 660, 692, 691, 692, 724, 756, 788, 820, 
[DBG]  Delta value: 0.0215827
[DBG]  Rewarding metric index = 1
[DBG]  component_weights = {0.0927845, 0.817247, 0.0328506, 0.0571182}
[DBG]  opSuccess value: 1
[STAT] neighbor.sum_of_costs before recomputation: 136
[STAT] neighbor.old_sum_of_costs before recomputation: 139
[STAT] sum_of_costs before recomputation: 4343
[DBG]  Validate solution immediately after SAT success.
[WARNING] Problem after SAT: Target conflict: agent 42 (len 47) traverses target of agent 28 (len 44) at location 727 at timestep 46
[DBG]  [DEBUG] Attempting immediate repair via init_lns because problem occurred after SAT (should be applied only for conflicts...).
[DBG]  [DEBUG] Passing 150 agents to init_lns (skip=true).
[DBG]  [DEBUG] path_table contents for selected agents (neighbor.agents):
[DBG]    Agent 28 => controlling path length=45
[DBG]    Agent 42 => controlling path length=48
[DBG]    Agent 69 => controlling path length=46
[DBG]  hodnota skip_initial_solution=1
[DBG]  We skip initialSolution => call buildCollisionData()
[DBG]  buildCollisionData() called – skip_initial_solution case.
[DBG]  Agents.size()=150, collision_graph.size()=150
[DBG]  agent 28 => updateCollidingPairs => foundCollision
[DBG]  agent 42 => updateCollidingPairs => foundCollision
[DBG]  Conflicting agent pairs:
[DBG]  agent 28 is in conflict with agent 42
[DBG]  buildCollisionData() => sum_of_costs=4340, num_of_colliding_pairs=1
[DBG]  buildCollisionData done => sum_of_costs=4340, num_of_colliding_pairs=1
[DBG]  sum_of_cost hodnota: 4340
[DBG]  After skip/init build => iteration_stats.back(): sum_of_costs=4340, collisions=1
[DEBUG] Using default neighbor generation strategy for conflicts: 2
[DEBUG] Using default neighbor generation strategy for conflicts: 2
[DEBUG] Using default neighbor generation strategy for conflicts: 0
[DEBUG] Using default neighbor generation strategy for conflicts: 2
[DEBUG] Using default neighbor generation strategy for conflicts: 0
	InitLNS(PP): runtime = 0.00709292, iterations = 6, colliding pairs = 0, initial colliding pairs = 1, solution cost = 4380, initial solution cost = 4340, failed iterations = 0
[DBG]  init_lns->sum_of_costs after init_lns->run: 4380
[DBG]  sum_of_costs after assignment from init_lns->run: 4380
[DBG]  Recomputing sum_of_cost by dividing neighbor.sum_of_costs and neighbor.old_sum_of_costs
[STAT] sum_of_costs after recomputation: 4380
[STAT] Iteration 65
[DBG]  Random chance did not select SAT operator (r=13), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 65
[DBG]  Random chance did not select SAT operator (r=99), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 65
[DBG]  Random chance did not select SAT operator (r=29), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 65
[DBG]  Random chance did not select SAT operator (r=30), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 65
[DBG]  Random chance did not select SAT operator (r=74), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 65
[DBG]  Random chance did not select SAT operator (r=44), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 65
[DBG]  Random chance did not select SAT operator (r=69), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 65
[DBG]  Random chance did not select SAT operator (r=67), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 65
[DBG]  Random chance did not select SAT operator (r=20), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 65
[DBG]  Random chance did not select SAT operator (r=83), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 65
[DBG]  Random chance did not select SAT operator (r=31), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 65
[DBG]  Random chance did not select SAT operator (r=89), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 65
[DBG]  Random chance did not select SAT operator (r=75), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 65
[DBG]  Random chance did not select SAT operator (r=21), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 65
[DBG]  Random chance did not select SAT operator (r=61), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 65
[DBG]  Random chance did not select SAT operator (r=83), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 65
[DBG]  Random chance did not select SAT operator (r=62), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 65
[DBG]  Random chance did not select SAT operator (r=58), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 65
[DBG]  Random chance did not select SAT operator (r=66), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 65
[DBG]  Random chance did not select SAT operator (r=31), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 65
[DBG]  Random chance did not select SAT operator (r=64), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 65
[DBG]  Random chance did not select SAT operator (r=15), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 65
[DBG]  Random chance did not select SAT operator (r=64), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 65
[DBG]  Random chance did not select SAT operator (r=55), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 65
[DBG]  Random chance did not select SAT operator (r=45), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 65
[DBG]  Random chance did not select SAT operator (r=63), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 65
[DBG]  Using SAT operator (destroy+repair SAT).
[DBG]  ====================
[DBG]  SAT destroy operator called.
[DBG]  SAT heuristic: 2
[DBG]  key_agent_id: 28
[DBG]  key_agent_id global path length: 44
[DBG]  Submap content (global positions):
[DBG]  662 663 664 665 666 
[DBG]  694 695 696 697 698 
[DBG]  726 727 728 729 730 
[DBG]  758 759 760 761 762 
[DBG]  790 791 792 793 794 
[DBG]  Map content with agents and obstacles:
[DBG]  X X . X . 
[DBG]  X X . . X 
[DBG]  . . A A . 
[DBG]  X . X . X 
[DBG]  . X . . X 
[DBG]  content of the map structure that we pass to the SAT solver:
[DBG]  -1  -1  1  -1  1  
[DBG]  -1  -1  1  1  -1  
[DBG]  1  1  1  1  1  
[DBG]  -1  1  -1  1  -1  
[DBG]  1  -1  1  1  -1  
[DBG]  Identifying agents in a submap for rescheduling (when key_agent is there at the time 40):
[DBG]  Agent 1 found intervals in the sub-map:
[DBG]   [37..43]
[DBG]  Agent 1 (interval in submap: [37..43]) contains time 40, added to replan.
[DBG]  Agent 28 found intervals in the sub-map:
[DBG]   [37..43]
[DBG]  Agent 28 (interval in submap: [37..43]) contains time 40, added to replan.
[DBG]  Agent 42 found intervals in the sub-map:
[DBG]   [41..43]
[DBG]  Agent 42 is not in sub-map at time 40 (intervals: 
[DBG]  [41..43] )
[DBG]  Agent 1 | Start (global): 729 -> (local): (2, 3) at time 40 | Goal (global): 728 -> (local): (2, 2) at time 43
[DBG]  Agent 28 | Start (global): 728 -> (local): (2, 2) at time 40 | Goal (global): 727 -> (local): (2, 1) at time 43
[DBG]  [REPAIR] SAT destroy operator called.
[DBG]  [REPAIR] SAT operator – launching subproblem FOR OPTIMIZATION.
[DBG]  Creating local paths (sx, sy) in the submap for T_sync = 40
[DBG]    Agent 1 (global paths from T=40 to 43) has local path: (2,3) (2,3) (2,3) (2,2) 
[DBG]    Agent 28 (global paths from T=40 to 43) has local path: (2,2) (2,2) (2,2) (2,1) 
[DBG]  Checking input data for SAT solver:
[DBG]    - Number of agents to replan: 2
[DBG]  Agent 1 has the original local path length: 4 => Start (2,3), Goal (2,2)
[DBG]  Agent 28 has the original local path length: 4 => Start (2,2), Goal (2,1)
[DBG]  Start position: (2, 3), (2, 2), 
[DBG]  Goal position: (2, 2), (2, 1), 
[DBG]  SAT instance and solver created.
Currently solving
Instance name: scen
Map name: map
Encoding used: disappear_at_goal
SAT solver used: Kissat
Optimizing function: sum of costs
Number of agents: 2
Mks LB: 2
SoC LB: 4
Delta: 0
Remaining time: 300000 [ms]

Found plan [agents = 2] [timesteps = 2]
Agent #0 : 7 6 
Agent #1 : 6 5 

[STAT] Solver returned: 0
[DBG]  Agent (index) 1 | New local path (submap idx):
[DBG]  7 6 
[DBG]  Agent (index) 28 | New local path (submap idx):
[DBG]  6 5 
[DBG]  Update the agent path 1 | Original local length: 4 | New local length: 2
[DBG]  agent 1 t=0 => decoded (sx,sy)=(2,3) => global_id=729
[DBG]  agent 1 t=1 => decoded (sx,sy)=(2,2) => global_id=728
[DBG]  Complete path of agent 1:
[DBG]    Original: 949 949 949 949 949 949 949 949 949 949 949 949 949 949 949 949 949 949 949 949 949 949 949 949 949 949 949 949 949 949 917 885 886 887 855 823 824 792 793 761 729 729 729 728 
[DBG]    New:     949 949 949 949 949 949 949 949 949 949 949 949 949 949 949 949 949 949 949 949 949 949 949 949 949 949 949 949 949 949 917 885 886 887 855 823 824 792 793 761 729 728 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 949 949 949 949 949 949 949 949 949 949 949 949 949 949 949 949 949 949 949 949 949 949 949 949 949 949 949 949 949 949 917 885 886 887 855 823 824 792 793 761 
[DBG]    Local path (in submap): 729 728 
[DBG]    Suffix (out of submap): 
[DBG]  Original agent path length 1 je: 44
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 0: 949, 949, 949, 949, 949, 949, 949, 949, 949, 949, 949, 949, 949, 949, 949, 949, 949, 949, 949, 949, 949, 949, 949, 949, 949, 949, 949, 949, 949, 949, 917, 885, 886, 887, 855, 823, 824, 792, 793, 761, 729, 728, 
[DBG]  Path for agent 1 updated, resulting length: 42
[DBG]  Update the agent path 28 | Original local length: 4 | New local length: 2
[DBG]  agent 28 t=0 => decoded (sx,sy)=(2,2) => global_id=728
[DBG]  agent 28 t=1 => decoded (sx,sy)=(2,1) => global_id=727
[DBG]  Complete path of agent 28:
[DBG]    Original: 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 660 660 660 660 692 724 725 726 727 728 728 728 728 727 
[DBG]    New:     661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 660 660 660 660 692 724 725 726 727 728 728 727 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 660 660 660 660 692 724 725 726 727 728 
[DBG]    Local path (in submap): 728 727 
[DBG]    Suffix (out of submap): 
[DBG]  Original agent path length 28 je: 44
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 1: 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 660, 660, 660, 660, 692, 724, 725, 726, 727, 728, 728, 727, 
[DBG]  Path for agent 28 updated, resulting length: 42
[DBG]  Paths successfully updated.
[DBG]  (LNS.cpp) New path for agent 1: 
[DBG]  949, 949, 949, 949, 949, 949, 949, 949, 949, 949, 949, 949, 949, 949, 949, 949, 949, 949, 949, 949, 949, 949, 949, 949, 949, 949, 949, 949, 949, 949, 917, 885, 886, 887, 855, 823, 824, 792, 793, 761, 729, 728, 
[DBG]  (LNS.cpp) New path for agent 28: 
[DBG]  661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 660, 660, 660, 660, 692, 724, 725, 726, 727, 728, 728, 727, 
[DBG]  Delta value: 0.0465116
[DBG]  Rewarding metric index = 3
[DBG]  component_weights = {0.0922492, 0.812532, 0.0326611, 0.0625579}
[DBG]  opSuccess value: 1
[STAT] neighbor.sum_of_costs before recomputation: 82
[STAT] neighbor.old_sum_of_costs before recomputation: 86
[STAT] sum_of_costs before recomputation: 4380
[DBG]  Validate solution immediately after SAT success.
[WARNING] Problem after SAT: Target conflict: agent 42 (len 43) traverses target of agent 28 (len 41) at location 727 at timestep 42
[DBG]  [DEBUG] Attempting immediate repair via init_lns because problem occurred after SAT (should be applied only for conflicts...).
[DBG]  [DEBUG] Passing 150 agents to init_lns (skip=true).
[DBG]  [DEBUG] path_table contents for selected agents (neighbor.agents):
[DBG]    Agent 1 => controlling path length=42
[DBG]    Agent 28 => controlling path length=42
[DBG]  hodnota skip_initial_solution=1
[DBG]  We skip initialSolution => call buildCollisionData()
[DBG]  buildCollisionData() called – skip_initial_solution case.
[DBG]  Agents.size()=150, collision_graph.size()=150
[DBG]  agent 28 => updateCollidingPairs => foundCollision
[DBG]  agent 42 => updateCollidingPairs => foundCollision
[DBG]  Conflicting agent pairs:
[DBG]  agent 28 is in conflict with agent 42
[DBG]  buildCollisionData() => sum_of_costs=4376, num_of_colliding_pairs=1
[DBG]  buildCollisionData done => sum_of_costs=4376, num_of_colliding_pairs=1
[DBG]  sum_of_cost hodnota: 4376
[DBG]  After skip/init build => iteration_stats.back(): sum_of_costs=4376, collisions=1
[DEBUG] Using default neighbor generation strategy for conflicts: 2
[DEBUG] Using default neighbor generation strategy for conflicts: 1
[DEBUG] Using default neighbor generation strategy for conflicts: 2
[DEBUG] Using default neighbor generation strategy for conflicts: 2
[DEBUG] Using default neighbor generation strategy for conflicts: 0
[DEBUG] Using default neighbor generation strategy for conflicts: 2
[DEBUG] Using default neighbor generation strategy for conflicts: 1
	InitLNS(PP): runtime = 0.0118371, iterations = 8, colliding pairs = 0, initial colliding pairs = 1, solution cost = 4357, initial solution cost = 4376, failed iterations = 1
[DBG]  init_lns->sum_of_costs after init_lns->run: 4357
[DBG]  sum_of_costs after assignment from init_lns->run: 4357
[DBG]  Recomputing sum_of_cost by dividing neighbor.sum_of_costs and neighbor.old_sum_of_costs
[STAT] sum_of_costs after recomputation: 4357
[STAT] Iteration 66
[DBG]  Random chance did not select SAT operator (r=84), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 66
[DBG]  Random chance did not select SAT operator (r=67), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 66
[DBG]  Random chance did not select SAT operator (r=68), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 66
[DBG]  Random chance did not select SAT operator (r=77), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 66
[DBG]  Random chance did not select SAT operator (r=28), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 66
[DBG]  Random chance did not select SAT operator (r=97), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 66
[DBG]  Random chance did not select SAT operator (r=88), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 66
[DBG]  Random chance did not select SAT operator (r=62), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 66
[DBG]  Random chance did not select SAT operator (r=76), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 66
[DBG]  Random chance did not select SAT operator (r=86), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 66
[DBG]  Random chance did not select SAT operator (r=17), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 66
[DBG]  Random chance did not select SAT operator (r=38), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 66
[DBG]  Random chance did not select SAT operator (r=15), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 66
[DBG]  Random chance did not select SAT operator (r=16), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 66
[DBG]  Random chance did not select SAT operator (r=81), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 66
[DBG]  Random chance did not select SAT operator (r=29), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 66
[DBG]  Random chance did not select SAT operator (r=69), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 66
[DBG]  Random chance did not select SAT operator (r=21), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 66
[DBG]  Random chance did not select SAT operator (r=26), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 66
[DBG]  Random chance did not select SAT operator (r=56), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 66
[DBG]  Random chance did not select SAT operator (r=15), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 66
[DBG]  Using SAT operator (destroy+repair SAT).
[DBG]  ====================
[DBG]  SAT destroy operator called.
[DBG]  SAT heuristic: 2
[DBG]  key_agent_id: 28
[DBG]  key_agent_id global path length: 44
[DBG]  Submap content (global positions):
[DBG]  595 596 597 598 599 
[DBG]  627 628 629 630 631 
[DBG]  659 660 661 662 663 
[DBG]  691 692 693 694 695 
[DBG]  723 724 725 726 727 
[DBG]  Map content with agents and obstacles:
[DBG]  X . . X . 
[DBG]  . . . X A 
[DBG]  . A A X X 
[DBG]  . . X X X 
[DBG]  X . . . A 
[DBG]  content of the map structure that we pass to the SAT solver:
[DBG]  -1  1  1  -1  1  
[DBG]  1  1  1  -1  1  
[DBG]  1  1  1  -1  -1  
[DBG]  1  1  -1  -1  -1  
[DBG]  -1  1  1  1  1  
[DBG]  Identifying agents in a submap for rescheduling (when key_agent is there at the time 1):
[DBG]  Agent 7 found intervals in the sub-map:
[DBG]  
[DBG]  Agent 7 is not in sub-map at time 1 (intervals: 
[DBG]  )
[DBG]  Agent 12 found intervals in the sub-map:
[DBG]   [0..1]
[DBG]  Agent 12 (interval in submap: [0..1]) contains time 1, added to replan.
[DBG]  Agent 28 found intervals in the sub-map:
[DBG]   [0..11] [17..40] [43..43]
[DBG]  Agent 28 (interval in submap: [0..11]) contains time 1, added to replan.
[DBG]  Agent 70 found intervals in the sub-map:
[DBG]   [1..2]
[DBG]  Agent 70 (interval in submap: [1..2]) contains time 1, added to replan.
[DBG]  Agent 108 found intervals in the sub-map:
[DBG]   [0..4]
[DBG]  Agent 108 (interval in submap: [0..4]) contains time 1, added to replan.
[DBG]  Agent 12 | Start (global): 727 -> (local): (4, 4) at time 1 | Goal (global): 727 -> (local): (4, 4) at time 1
[DBG]  Agent 28 | Start (global): 661 -> (local): (2, 2) at time 1 | Goal (global): 597 -> (local): (0, 2) at time 11
[DBG]  Agent 70 | Start (global): 631 -> (local): (1, 4) at time 1 | Goal (global): 631 -> (local): (1, 4) at time 2
[DBG]  Agent 108 | Start (global): 660 -> (local): (2, 1) at time 1 | Goal (global): 725 -> (local): (4, 2) at time 4
[DBG]  [REPAIR] SAT destroy operator called.
[DBG]  [REPAIR] SAT operator – launching subproblem FOR OPTIMIZATION.
[DBG]  Creating local paths (sx, sy) in the submap for T_sync = 1
[DBG]    Agent 12 (global paths from T=1 to 1) has local path: (4,4) 
[DBG]    Agent 28 (global paths from T=1 to 11) has local path: (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (1,2) (0,2) 
[DBG]    Agent 70 (global paths from T=1 to 2) has local path: (1,4) (1,4) 
[DBG]    Agent 108 (global paths from T=1 to 4) has local path: (2,1) (3,1) (4,1) (4,2) 
[DBG]  Checking input data for SAT solver:
[DBG]    - Number of agents to replan: 4
[DBG]  Agent 12 has the original local path length: 1 => Start (4,4), Goal (4,4)
[DBG]  Agent 28 has the original local path length: 11 => Start (2,2), Goal (0,2)
[DBG]  Agent 70 has the original local path length: 2 => Start (1,4), Goal (1,4)
[DBG]  Agent 108 has the original local path length: 4 => Start (2,1), Goal (4,2)
[DBG]  Start position: (4, 4), (2, 2), (1, 4), (2, 1), 
[DBG]  Goal position: (4, 4), (0, 2), (1, 4), (4, 2), 
[DBG]  SAT instance and solver created.
Currently solving
Instance name: scen
Map name: map
Encoding used: disappear_at_goal
SAT solver used: Kissat
Optimizing function: sum of costs
Number of agents: 4
Mks LB: 4
SoC LB: 9
Delta: 0
Remaining time: 300000 [ms]

Vertex conflict! Agents 0, 1, timestep 3, location 0
Vertex conflict! Agents 0, 2, timestep 1, location 0
Swapping conflict! Agents 0, 2, timestep 1, edge (0,0)
Vertex conflict! Agents 0, 2, timestep 2, location 0
Swapping conflict! Agents 0, 2, timestep 2, edge (0,0)
Vertex conflict! Agents 0, 2, timestep 3, location 0
Vertex conflict! Agents 1, 2, timestep 3, location 0
Found plan [agents = 4] [timesteps = 4]
Agent #0 : 15 0 0 0 
Agent #1 : 9 5 1 0 
Agent #2 : 6 0 0 0 
Agent #3 : 8 11 12 13 

[STAT] Solver returned: 0
[DBG]  Agent (index) 12 | New local path (submap idx):
[DBG]  15 
[DBG]  Agent (index) 28 | New local path (submap idx):
[DBG]  9 5 1 
[DBG]  Agent (index) 70 | New local path (submap idx):
[DBG]  6 
[DBG]  Agent (index) 108 | New local path (submap idx):
[DBG]  8 11 12 13 
[DBG]  Update the agent path 12 | Original local length: 1 | New local length: 1
[DBG]  agent 12 t=0 => decoded (sx,sy)=(4,4) => global_id=727
[DBG]  Complete path of agent 12:
[DBG]    Original: 726 727 728 729 730 731 732 764 765 766 767 
[DBG]    New:     726 727 728 729 730 731 732 764 765 766 767 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 726 
[DBG]    Local path (in submap): 727 
[DBG]    Suffix (out of submap): 728 729 730 731 732 764 765 766 767 
[DBG]  Original agent path length 12 je: 11
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 0: 726, 727, 728, 729, 730, 731, 732, 764, 765, 766, 767, 
[DBG]  Path for agent 12 updated, resulting length: 11
[DBG]  Update the agent path 28 | Original local length: 11 | New local length: 3
[DBG]  agent 28 t=0 => decoded (sx,sy)=(2,2) => global_id=661
[DBG]  agent 28 t=1 => decoded (sx,sy)=(1,2) => global_id=629
[DBG]  agent 28 t=2 => decoded (sx,sy)=(0,2) => global_id=597
[DBG]  Complete path of agent 28:
[DBG]    Original: 661 661 661 661 661 661 661 661 661 661 629 597 565 566 566 566 565 597 629 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 660 692 724 725 726 727 728 728 727 
[DBG]    New:     661 661 629 597 565 566 566 566 565 597 629 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 660 692 724 725 726 727 728 728 727 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 661 
[DBG]    Local path (in submap): 661 629 597 565 566 566 566 565 597 629 661 
[DBG]    Suffix (out of submap): 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 660 692 724 725 726 727 728 728 727 
[DBG]  Original agent path length 28 je: 44
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 1: 661, 661, 629, 597, 565, 566, 566, 566, 565, 597, 629, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 660, 692, 724, 725, 726, 727, 728, 728, 727, 
[DBG]  Path for agent 28 updated, resulting length: 36
[DBG]  Update the agent path 70 | Original local length: 2 | New local length: 1
[DBG]  agent 70 t=0 => decoded (sx,sy)=(1,4) => global_id=631
[DBG]  Complete path of agent 70:
[DBG]    Original: 632 631 631 632 664 696 728 729 730 730 730 730 730 730 730 729 761 793 792 824 823 855 854 886 918 917 917 917 917 917 885 884 883 882 881 913 912 944 976 975 974 
[DBG]    New:     632 631 632 664 696 728 729 730 730 730 730 730 730 730 729 761 793 792 824 823 855 854 886 918 917 917 917 917 917 885 884 883 882 881 913 912 944 976 975 974 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 632 
[DBG]    Local path (in submap): 631 632 
[DBG]    Suffix (out of submap): 664 696 728 729 730 730 730 730 730 730 730 729 761 793 792 824 823 855 854 886 918 917 917 917 917 917 885 884 883 882 881 913 912 944 976 975 974 
[DBG]  Original agent path length 70 je: 41
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 2: 632, 631, 632, 664, 696, 728, 729, 730, 730, 730, 730, 730, 730, 730, 729, 761, 793, 792, 824, 823, 855, 854, 886, 918, 917, 917, 917, 917, 917, 885, 884, 883, 882, 881, 913, 912, 944, 976, 975, 974, 
[DBG]  Path for agent 70 updated, resulting length: 40
[DBG]  Update the agent path 108 | Original local length: 4 | New local length: 4
[DBG]  agent 108 t=0 => decoded (sx,sy)=(2,1) => global_id=660
[DBG]  agent 108 t=1 => decoded (sx,sy)=(3,1) => global_id=692
[DBG]  agent 108 t=2 => decoded (sx,sy)=(4,1) => global_id=724
[DBG]  agent 108 t=3 => decoded (sx,sy)=(4,2) => global_id=725
[DBG]  Complete path of agent 108:
[DBG]    Original: 628 660 692 724 725 757 756 788 820 821 822 854 886 887 919 920 952 953 954 955 956 957 989 1021 
[DBG]    New:     628 660 692 724 725 757 756 788 820 821 822 854 886 887 919 920 952 953 954 955 956 957 989 1021 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 628 
[DBG]    Local path (in submap): 660 692 724 725 
[DBG]    Suffix (out of submap): 757 756 788 820 821 822 854 886 887 919 920 952 953 954 955 956 957 989 1021 
[DBG]  Original agent path length 108 je: 24
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 3: 628, 660, 692, 724, 725, 757, 756, 788, 820, 821, 822, 854, 886, 887, 919, 920, 952, 953, 954, 955, 956, 957, 989, 1021, 
[DBG]  Path for agent 108 updated, resulting length: 24
[DBG]  Paths successfully updated.
[DBG]  (LNS.cpp) New path for agent 12: 
[DBG]  726, 727, 728, 729, 730, 731, 732, 764, 765, 766, 767, 
[DBG]  (LNS.cpp) New path for agent 28: 
[DBG]  661, 661, 629, 597, 565, 566, 566, 566, 565, 597, 629, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 660, 692, 724, 725, 726, 727, 728, 728, 727, 
[DBG]  (LNS.cpp) New path for agent 70: 
[DBG]  632, 631, 632, 664, 696, 728, 729, 730, 730, 730, 730, 730, 730, 730, 729, 761, 793, 792, 824, 823, 855, 854, 886, 918, 917, 917, 917, 917, 917, 885, 884, 883, 882, 881, 913, 912, 944, 976, 975, 974, 
[DBG]  (LNS.cpp) New path for agent 108: 
[DBG]  628, 660, 692, 724, 725, 757, 756, 788, 820, 821, 822, 854, 886, 887, 919, 920, 952, 953, 954, 955, 956, 957, 989, 1021, 
[DBG]  Delta value: 0.0775862
[DBG]  Rewarding metric index = 1
[DBG]  component_weights = {0.083173, 0.830976, 0.0294476, 0.056403}
[DBG]  opSuccess value: 1
[STAT] neighbor.sum_of_costs before recomputation: 107
[STAT] neighbor.old_sum_of_costs before recomputation: 116
[STAT] sum_of_costs before recomputation: 4357
[DBG]  Validate solution immediately after SAT success.
[WARNING] Problem after SAT: Vertex conflict between agents 70 and 0 at location 885 at timestep 29
[DBG]  [DEBUG] Attempting immediate repair via init_lns because problem occurred after SAT (should be applied only for conflicts...).
[DBG]  [DEBUG] Passing 150 agents to init_lns (skip=true).
[DBG]  [DEBUG] path_table contents for selected agents (neighbor.agents):
[DBG]    Agent 12 => controlling path length=11
[DBG]    Agent 28 => controlling path length=36
[DBG]    Agent 70 => controlling path length=40
[DBG]    Agent 108 => controlling path length=24
[DBG]  hodnota skip_initial_solution=1
[DBG]  We skip initialSolution => call buildCollisionData()
[DBG]  buildCollisionData() called – skip_initial_solution case.
[DBG]  Agents.size()=150, collision_graph.size()=150
[DBG]  agent 0 => updateCollidingPairs => foundCollision
[DBG]  agent 28 => updateCollidingPairs => foundCollision
[DBG]  agent 42 => updateCollidingPairs => foundCollision
[DBG]  agent 70 => updateCollidingPairs => foundCollision
[DBG]  agent 71 => updateCollidingPairs => foundCollision
[DBG]  agent 86 => updateCollidingPairs => foundCollision
[DBG]  agent 89 => updateCollidingPairs => foundCollision
[DBG]  agent 91 => updateCollidingPairs => foundCollision
[DBG]  agent 104 => updateCollidingPairs => foundCollision
[DBG]  agent 135 => updateCollidingPairs => foundCollision
[DBG]  agent 142 => updateCollidingPairs => foundCollision
[DBG]  Conflicting agent pairs:
[DBG]  agent 0 is in conflict with agent 70
[DBG]  agent 28 is in conflict with agent 42
[DBG]  agent 28 is in conflict with agent 86
[DBG]  agent 28 is in conflict with agent 89
[DBG]  agent 28 is in conflict with agent 91
[DBG]  agent 28 is in conflict with agent 104
[DBG]  agent 70 is in conflict with agent 71
[DBG]  agent 70 is in conflict with agent 135
[DBG]  agent 70 is in conflict with agent 142
[DBG]  buildCollisionData() => sum_of_costs=4348, num_of_colliding_pairs=9
[DBG]  buildCollisionData done => sum_of_costs=4348, num_of_colliding_pairs=9
[DBG]  sum_of_cost hodnota: 4348
[DBG]  After skip/init build => iteration_stats.back(): sum_of_costs=4348, collisions=9
[DEBUG] Using default neighbor generation strategy for conflicts: 0
[DEBUG] Using default neighbor generation strategy for conflicts: 1
	InitLNS(PP): runtime = 0.00217375, iterations = 3, colliding pairs = 0, initial colliding pairs = 9, solution cost = 4352, initial solution cost = 4348, failed iterations = 0
[DBG]  init_lns->sum_of_costs after init_lns->run: 4352
[DBG]  sum_of_costs after assignment from init_lns->run: 4352
[DBG]  Recomputing sum_of_cost by dividing neighbor.sum_of_costs and neighbor.old_sum_of_costs
[STAT] sum_of_costs after recomputation: 4352
[STAT] Iteration 67
[DBG]  Random chance did not select SAT operator (r=20), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 67
[DBG]  Random chance did not select SAT operator (r=52), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 67
[DBG]  Random chance did not select SAT operator (r=91), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 67
[DBG]  Using SAT operator (destroy+repair SAT).
[DBG]  ====================
[DBG]  SAT destroy operator called.
[DBG]  SAT heuristic: 2
[DBG]  key_agent_id: 28
[DBG]  key_agent_id global path length: 44
[DBG]  Submap content (global positions):
[DBG]  563 564 565 566 567 
[DBG]  595 596 597 598 599 
[DBG]  627 628 629 630 631 
[DBG]  659 660 661 662 663 
[DBG]  691 692 693 694 695 
[DBG]  Map content with agents and obstacles:
[DBG]  . X . . X 
[DBG]  X . A X . 
[DBG]  . . A X . 
[DBG]  . . . X X 
[DBG]  . . X X X 
[DBG]  content of the map structure that we pass to the SAT solver:
[DBG]  1  -1  1  1  -1  
[DBG]  -1  1  1  -1  1  
[DBG]  1  1  1  -1  1  
[DBG]  1  1  1  -1  -1  
[DBG]  1  1  -1  -1  -1  
[DBG]  Identifying agents in a submap for rescheduling (when key_agent is there at the time 14):
[DBG]  Agent 28 found intervals in the sub-map:
[DBG]   [0..36]
[DBG]  Agent 28 (interval in submap: [0..36]) contains time 14, added to replan.
[DBG]  Agent 46 found intervals in the sub-map:
[DBG]  
[DBG]  Agent 46 is not in sub-map at time 14 (intervals: 
[DBG]  )
[DBG]  Agent 74 found intervals in the sub-map:
[DBG]   [16..22]
[DBG]  Agent 74 is not in sub-map at time 14 (intervals: 
[DBG]  [16..22] )
[DBG]  Agent 86 found intervals in the sub-map:
[DBG]   [10..15]
[DBG]  Agent 86 (interval in submap: [10..15]) contains time 14, added to replan.
[DBG]  Agent 28 | Start (global): 629 -> (local): (2, 2) at time 14 | Goal (global): 692 -> (local): (4, 1) at time 36
[DBG]  Agent 86 | Start (global): 597 -> (local): (1, 2) at time 14 | Goal (global): 565 -> (local): (0, 2) at time 15
[DBG]  [REPAIR] SAT destroy operator called.
[DBG]  [REPAIR] SAT operator – launching subproblem FOR OPTIMIZATION.
[DBG]  Creating local paths (sx, sy) in the submap for T_sync = 14
[DBG]    Agent 28 (global paths from T=14 to 36) has local path: (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,1) (3,1) (4,1) 
[DBG]    Agent 86 (global paths from T=14 to 15) has local path: (1,2) (0,2) 
[DBG]  Checking input data for SAT solver:
[DBG]    - Number of agents to replan: 2
[DBG]  Agent 28 has the original local path length: 23 => Start (2,2), Goal (4,1)
[DBG]  Agent 86 has the original local path length: 2 => Start (1,2), Goal (0,2)
[DBG]  Start position: (2, 2), (1, 2), 
[DBG]  Goal position: (4, 1), (0, 2), 
[DBG]  SAT instance and solver created.
Currently solving
Instance name: scen
Map name: map
Encoding used: disappear_at_goal
SAT solver used: Kissat
Optimizing function: sum of costs
Number of agents: 2
Mks LB: 4
SoC LB: 6
Delta: 0
Remaining time: 300000 [ms]

Found plan [agents = 2] [timesteps = 4]
Agent #0 : 8 12 11 14 
Agent #1 : 4 1 0 0 

[STAT] Solver returned: 0
[DBG]  Agent (index) 28 | New local path (submap idx):
[DBG]  8 12 11 14 
[DBG]  Agent (index) 86 | New local path (submap idx):
[DBG]  4 1 
[DBG]  Update the agent path 28 | Original local length: 23 | New local length: 4
[DBG]  agent 28 t=0 => decoded (sx,sy)=(2,2) => global_id=629
[DBG]  agent 28 t=1 => decoded (sx,sy)=(3,2) => global_id=661
[DBG]  agent 28 t=2 => decoded (sx,sy)=(3,1) => global_id=660
[DBG]  agent 28 t=3 => decoded (sx,sy)=(4,1) => global_id=692
[DBG]  Complete path of agent 28:
[DBG]    Original: 661 661 661 661 661 661 661 661 661 661 629 628 628 628 629 629 629 629 629 629 629 629 629 629 629 629 629 629 629 629 629 629 629 629 628 660 692 724 725 726 727 728 728 727 
[DBG]    New:     661 661 661 661 661 661 661 661 661 661 629 628 628 628 629 661 660 692 724 725 726 727 728 728 727 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 661 661 661 661 661 661 661 661 661 661 629 628 628 628 
[DBG]    Local path (in submap): 629 661 660 692 724 725 726 727 728 728 727 
[DBG]    Suffix (out of submap): 
[DBG]  Original agent path length 28 je: 44
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 0: 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 629, 628, 628, 628, 629, 661, 660, 692, 724, 725, 726, 727, 728, 728, 727, 
[DBG]  Path for agent 28 updated, resulting length: 25
[DBG]  Update the agent path 86 | Original local length: 2 | New local length: 2
[DBG]  agent 86 t=0 => decoded (sx,sy)=(1,2) => global_id=597
[DBG]  agent 86 t=1 => decoded (sx,sy)=(0,2) => global_id=565
[DBG]  Complete path of agent 86:
[DBG]    Original: 781 782 783 751 719 687 655 656 657 658 659 660 661 629 597 565 533 501 501 502 503 504 505 506 538 539 540 541 
[DBG]    New:     781 782 783 751 719 687 655 656 657 658 659 660 661 629 597 565 533 501 501 502 503 504 505 506 538 539 540 541 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 781 782 783 751 719 687 655 656 657 658 659 660 661 629 
[DBG]    Local path (in submap): 597 565 
[DBG]    Suffix (out of submap): 533 501 501 502 503 504 505 506 538 539 540 541 
[DBG]  Original agent path length 86 je: 28
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 1: 781, 782, 783, 751, 719, 687, 655, 656, 657, 658, 659, 660, 661, 629, 597, 565, 533, 501, 501, 502, 503, 504, 505, 506, 538, 539, 540, 541, 
[DBG]  Path for agent 86 updated, resulting length: 28
[DBG]  Paths successfully updated.
[DBG]  (LNS.cpp) New path for agent 28: 
[DBG]  661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 629, 628, 628, 628, 629, 661, 660, 692, 724, 725, 726, 727, 728, 728, 727, 
[DBG]  (LNS.cpp) New path for agent 86: 
[DBG]  781, 782, 783, 751, 719, 687, 655, 656, 657, 658, 659, 660, 661, 629, 597, 565, 533, 501, 501, 502, 503, 504, 505, 506, 538, 539, 540, 541, 
[DBG]  Delta value: 0.271429
[DBG]  Rewarding metric index = 1
[DBG]  component_weights = {0.0649202, 0.86807, 0.0229852, 0.0440251}
[DBG]  opSuccess value: 1
[STAT] neighbor.sum_of_costs before recomputation: 51
[STAT] neighbor.old_sum_of_costs before recomputation: 70
[STAT] sum_of_costs before recomputation: 4352
[DBG]  Validate solution immediately after SAT success.
[WARNING] Problem after SAT: Vertex conflict between agents 28 and 30 at location 692 at timestep 17
[DBG]  [DEBUG] Attempting immediate repair via init_lns because problem occurred after SAT (should be applied only for conflicts...).
[DBG]  [DEBUG] Passing 150 agents to init_lns (skip=true).
[DBG]  [DEBUG] path_table contents for selected agents (neighbor.agents):
[DBG]    Agent 28 => controlling path length=25
[DBG]    Agent 86 => controlling path length=28
[DBG]  hodnota skip_initial_solution=1
[DBG]  We skip initialSolution => call buildCollisionData()
[DBG]  buildCollisionData() called – skip_initial_solution case.
[DBG]  Agents.size()=150, collision_graph.size()=150
[DBG]  agent 28 => updateCollidingPairs => foundCollision
[DBG]  agent 30 => updateCollidingPairs => foundCollision
[DBG]  agent 42 => updateCollidingPairs => foundCollision
[DBG]  Conflicting agent pairs:
[DBG]  agent 28 is in conflict with agent 30
[DBG]  agent 28 is in conflict with agent 42
[DBG]  buildCollisionData() => sum_of_costs=4333, num_of_colliding_pairs=2
[DBG]  buildCollisionData done => sum_of_costs=4333, num_of_colliding_pairs=2
[DBG]  sum_of_cost hodnota: 4333
[DBG]  After skip/init build => iteration_stats.back(): sum_of_costs=4333, collisions=2
[DEBUG] Using default neighbor generation strategy for conflicts: 1
[DEBUG] Using default neighbor generation strategy for conflicts: 2
[DEBUG] Using default neighbor generation strategy for conflicts: 0
	InitLNS(PP): runtime = 0.00513462, iterations = 4, colliding pairs = 0, initial colliding pairs = 2, solution cost = 4325, initial solution cost = 4333, failed iterations = 0
[DBG]  init_lns->sum_of_costs after init_lns->run: 4325
[DBG]  sum_of_costs after assignment from init_lns->run: 4325
[DBG]  Recomputing sum_of_cost by dividing neighbor.sum_of_costs and neighbor.old_sum_of_costs
[STAT] sum_of_costs after recomputation: 4325
[STAT] Iteration 68
[DBG]  Random chance did not select SAT operator (r=95), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 68
[DBG]  Random chance did not select SAT operator (r=33), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 68
[DBG]  Random chance did not select SAT operator (r=70), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 68
[DBG]  Random chance did not select SAT operator (r=27), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 68
[DBG]  Random chance did not select SAT operator (r=87), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 68
[DBG]  Random chance did not select SAT operator (r=22), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 68
[DBG]  Random chance did not select SAT operator (r=66), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 68
[DBG]  Using SAT operator (destroy+repair SAT).
[DBG]  ====================
[DBG]  SAT destroy operator called.
[DBG]  SAT heuristic: 2
[DBG]  key_agent_id: 28
[DBG]  key_agent_id global path length: 44
[DBG]  Submap content (global positions):
[DBG]  595 596 597 598 599 
[DBG]  627 628 629 630 631 
[DBG]  659 660 661 662 663 
[DBG]  691 692 693 694 695 
[DBG]  723 724 725 726 727 
[DBG]  Map content with agents and obstacles:
[DBG]  X A . X . 
[DBG]  . . . X . 
[DBG]  . . A X X 
[DBG]  . . X X X 
[DBG]  X . . . . 
[DBG]  content of the map structure that we pass to the SAT solver:
[DBG]  -1  1  1  -1  1  
[DBG]  1  1  1  -1  1  
[DBG]  1  1  1  -1  -1  
[DBG]  1  1  -1  -1  -1  
[DBG]  -1  1  1  1  1  
[DBG]  Identifying agents in a submap for rescheduling (when key_agent is there at the time 13):
[DBG]  Agent 28 found intervals in the sub-map:
[DBG]   [0..33] [41..43]
[DBG]  Agent 28 (interval in submap: [0..33]) contains time 13, added to replan.
[DBG]  Agent 46 found intervals in the sub-map:
[DBG]   [4..7]
[DBG]  Agent 46 is not in sub-map at time 13 (intervals: 
[DBG]  [4..7] )
[DBG]  Agent 74 found intervals in the sub-map:
[DBG]   [16..20]
[DBG]  Agent 74 is not in sub-map at time 13 (intervals: 
[DBG]  [16..20] )
[DBG]  Agent 86 found intervals in the sub-map:
[DBG]   [10..14]
[DBG]  Agent 86 (interval in submap: [10..14]) contains time 13, added to replan.
[DBG]  Agent 89 found intervals in the sub-map:
[DBG]   [5..12]
[DBG]  Agent 89 is not in sub-map at time 13 (intervals: 
[DBG]  [5..12] )
[DBG]  Agent 28 | Start (global): 661 -> (local): (2, 2) at time 13 | Goal (global): 724 -> (local): (4, 1) at time 33
[DBG]  Agent 86 | Start (global): 596 -> (local): (0, 1) at time 13 | Goal (global): 597 -> (local): (0, 2) at time 14
[DBG]  [REPAIR] SAT destroy operator called.
[DBG]  [REPAIR] SAT operator – launching subproblem FOR OPTIMIZATION.
[DBG]  Creating local paths (sx, sy) in the submap for T_sync = 13
[DBG]    Agent 28 (global paths from T=13 to 33) has local path: (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,1) (3,1) (4,1) 
[DBG]    Agent 86 (global paths from T=13 to 14) has local path: (0,1) (0,2) 
[DBG]  Checking input data for SAT solver:
[DBG]    - Number of agents to replan: 2
[DBG]  Agent 28 has the original local path length: 21 => Start (2,2), Goal (4,1)
[DBG]  Agent 86 has the original local path length: 2 => Start (0,1), Goal (0,2)
[DBG]  Start position: (2, 2), (0, 1), 
[DBG]  Goal position: (4, 1), (0, 2), 
[DBG]  SAT instance and solver created.
Currently solving
Instance name: scen
Map name: map
Encoding used: disappear_at_goal
SAT solver used: Kissat
Optimizing function: sum of costs
Number of agents: 2
Mks LB: 4
SoC LB: 6
Delta: 0
Remaining time: 300000 [ms]

Found plan [agents = 2] [timesteps = 4]
Agent #0 : 9 8 11 12 
Agent #1 : 0 1 0 0 

[STAT] Solver returned: 0
[DBG]  Agent (index) 28 | New local path (submap idx):
[DBG]  9 8 11 12 
[DBG]  Agent (index) 86 | New local path (submap idx):
[DBG]  0 1 
[DBG]  Update the agent path 28 | Original local length: 21 | New local length: 4
[DBG]  agent 28 t=0 => decoded (sx,sy)=(2,2) => global_id=661
[DBG]  agent 28 t=1 => decoded (sx,sy)=(2,1) => global_id=660
[DBG]  agent 28 t=2 => decoded (sx,sy)=(3,1) => global_id=692
[DBG]  agent 28 t=3 => decoded (sx,sy)=(4,1) => global_id=724
[DBG]  Complete path of agent 28:
[DBG]    Original: 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 660 692 724 756 757 757 757 757 757 757 725 726 727 
[DBG]    New:     661 661 661 661 661 661 661 661 661 661 661 661 661 661 660 692 724 756 757 757 757 757 757 757 725 726 727 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 661 661 661 661 661 661 661 661 661 661 661 661 661 
[DBG]    Local path (in submap): 661 660 692 724 756 757 757 757 757 757 757 725 726 727 
[DBG]    Suffix (out of submap): 
[DBG]  Original agent path length 28 je: 44
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 0: 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 660, 692, 724, 756, 757, 757, 757, 757, 757, 757, 725, 726, 727, 
[DBG]  Path for agent 28 updated, resulting length: 27
[DBG]  Update the agent path 86 | Original local length: 2 | New local length: 2
[DBG]  agent 86 t=0 => decoded (sx,sy)=(0,1) => global_id=596
[DBG]  agent 86 t=1 => decoded (sx,sy)=(0,2) => global_id=597
[DBG]  Complete path of agent 86:
[DBG]    Original: 781 782 783 751 719 687 688 656 657 658 659 627 628 596 597 565 533 534 534 502 503 504 505 506 538 539 540 541 
[DBG]    New:     781 782 783 751 719 687 688 656 657 658 659 627 628 596 597 565 533 534 534 502 503 504 505 506 538 539 540 541 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 781 782 783 751 719 687 688 656 657 658 659 627 628 
[DBG]    Local path (in submap): 596 597 
[DBG]    Suffix (out of submap): 565 533 534 534 502 503 504 505 506 538 539 540 541 
[DBG]  Original agent path length 86 je: 28
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 1: 781, 782, 783, 751, 719, 687, 688, 656, 657, 658, 659, 627, 628, 596, 597, 565, 533, 534, 534, 502, 503, 504, 505, 506, 538, 539, 540, 541, 
[DBG]  Path for agent 86 updated, resulting length: 28
[DBG]  Paths successfully updated.
[DBG]  (LNS.cpp) New path for agent 28: 
[DBG]  661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 660, 692, 724, 756, 757, 757, 757, 757, 757, 757, 725, 726, 727, 
[DBG]  (LNS.cpp) New path for agent 86: 
[DBG]  781, 782, 783, 751, 719, 687, 688, 656, 657, 658, 659, 627, 628, 596, 597, 565, 533, 534, 534, 502, 503, 504, 505, 506, 538, 539, 540, 541, 
[DBG]  Delta value: 0.242857
[DBG]  Rewarding metric index = 1
[DBG]  component_weights = {0.0512151, 0.895921, 0.0181328, 0.034731}
[DBG]  opSuccess value: 1
[STAT] neighbor.sum_of_costs before recomputation: 53
[STAT] neighbor.old_sum_of_costs before recomputation: 70
[STAT] sum_of_costs before recomputation: 4325
[DBG]  Validate solution immediately after SAT success.
[WARNING] Problem after SAT: Vertex conflict between agents 28 and 30 at location 724 at timestep 16
[DBG]  [DEBUG] Attempting immediate repair via init_lns because problem occurred after SAT (should be applied only for conflicts...).
[DBG]  [DEBUG] Passing 150 agents to init_lns (skip=true).
[DBG]  [DEBUG] path_table contents for selected agents (neighbor.agents):
[DBG]    Agent 28 => controlling path length=27
[DBG]    Agent 86 => controlling path length=28
[DBG]  hodnota skip_initial_solution=1
[DBG]  We skip initialSolution => call buildCollisionData()
[DBG]  buildCollisionData() called – skip_initial_solution case.
[DBG]  Agents.size()=150, collision_graph.size()=150
[DBG]  agent 28 => updateCollidingPairs => foundCollision
[DBG]  agent 30 => updateCollidingPairs => foundCollision
[DBG]  agent 42 => updateCollidingPairs => foundCollision
[DBG]  Conflicting agent pairs:
[DBG]  agent 28 is in conflict with agent 30
[DBG]  agent 28 is in conflict with agent 42
[DBG]  buildCollisionData() => sum_of_costs=4308, num_of_colliding_pairs=2
[DBG]  buildCollisionData done => sum_of_costs=4308, num_of_colliding_pairs=2
[DBG]  sum_of_cost hodnota: 4308
[DBG]  After skip/init build => iteration_stats.back(): sum_of_costs=4308, collisions=2
[DEBUG] Using default neighbor generation strategy for conflicts: 0
	InitLNS(PP): runtime = 0.00127821, iterations = 2, colliding pairs = 0, initial colliding pairs = 2, solution cost = 4354, initial solution cost = 4308, failed iterations = 0
[DBG]  init_lns->sum_of_costs after init_lns->run: 4354
[DBG]  sum_of_costs after assignment from init_lns->run: 4354
[DBG]  Recomputing sum_of_cost by dividing neighbor.sum_of_costs and neighbor.old_sum_of_costs
[STAT] sum_of_costs after recomputation: 4354
[STAT] Iteration 69
[DBG]  Random chance did not select SAT operator (r=52), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 69
[DBG]  Using SAT operator (destroy+repair SAT).
[DBG]  ====================
[DBG]  SAT destroy operator called.
[DBG]  SAT heuristic: 2
[DBG]  key_agent_id: 28
[DBG]  key_agent_id global path length: 44
[DBG]  Submap content (global positions):
[DBG]  594 595 596 597 598 
[DBG]  626 627 628 629 630 
[DBG]  658 659 660 661 662 
[DBG]  690 691 692 693 694 
[DBG]  722 723 724 725 726 
[DBG]  Map content with agents and obstacles:
[DBG]  . X A . X 
[DBG]  X . . . X 
[DBG]  . A A . X 
[DBG]  X . A X X 
[DBG]  . X A . . 
[DBG]  content of the map structure that we pass to the SAT solver:
[DBG]  1  -1  1  1  -1  
[DBG]  -1  1  1  1  -1  
[DBG]  1  1  1  1  -1  
[DBG]  -1  1  1  -1  -1  
[DBG]  1  -1  1  1  1  
[DBG]  Identifying agents in a submap for rescheduling (when key_agent is there at the time 31):
[DBG]  Agent 11 found intervals in the sub-map:
[DBG]   [28..32]
[DBG]  Agent 11 (interval in submap: [28..32]) contains time 31, added to replan.
[DBG]  Agent 26 found intervals in the sub-map:
[DBG]   [26..31]
[DBG]  Agent 26 (interval in submap: [26..31]) contains time 31, added to replan.
[DBG]  Agent 28 found intervals in the sub-map:
[DBG]   [0..35]
[DBG]  Agent 28 (interval in submap: [0..35]) contains time 31, added to replan.
[DBG]  Agent 30 found intervals in the sub-map:
[DBG]   [16..32]
[DBG]  Agent 30 (interval in submap: [16..32]) contains time 31, added to replan.
[DBG]  Agent 53 found intervals in the sub-map:
[DBG]   [27..32]
[DBG]  Agent 53 (interval in submap: [27..32]) contains time 31, added to replan.
[DBG]  Agent 11 | Start (global): 659 -> (local): (2, 1) at time 31 | Goal (global): 658 -> (local): (2, 0) at time 32
[DBG]  Agent 26 | Start (global): 724 -> (local): (4, 2) at time 31 | Goal (global): 724 -> (local): (4, 2) at time 31
[DBG]  Agent 28 | Start (global): 660 -> (local): (2, 2) at time 31 | Goal (global): 726 -> (local): (4, 4) at time 35
[DBG]  Agent 30 | Start (global): 596 -> (local): (0, 2) at time 31 | Goal (global): 597 -> (local): (0, 3) at time 32
[DBG]  Agent 53 | Start (global): 692 -> (local): (3, 2) at time 31 | Goal (global): 724 -> (local): (4, 2) at time 32
[DBG]  [REPAIR] SAT destroy operator called.
[DBG]  [REPAIR] SAT operator – launching subproblem FOR OPTIMIZATION.
[DBG]  Creating local paths (sx, sy) in the submap for T_sync = 31
[DBG]    Agent 11 (global paths from T=31 to 32) has local path: (2,1) (2,0) 
[DBG]    Agent 26 (global paths from T=31 to 31) has local path: (4,2) 
[DBG]    Agent 28 (global paths from T=31 to 35) has local path: (2,2) (3,2) (4,2) (4,3) (4,4) 
[DBG]    Agent 30 (global paths from T=31 to 32) has local path: (0,2) (0,3) 
[DBG]    Agent 53 (global paths from T=31 to 32) has local path: (3,2) (4,2) 
[DBG]  Checking input data for SAT solver:
[DBG]    - Number of agents to replan: 5
[DBG]  Agent 11 has the original local path length: 2 => Start (2,1), Goal (2,0)
[DBG]  Agent 26 has the original local path length: 1 => Start (4,2), Goal (4,2)
[DBG]  Agent 28 has the original local path length: 5 => Start (2,2), Goal (4,4)
[DBG]  Agent 30 has the original local path length: 2 => Start (0,2), Goal (0,3)
[DBG]  Agent 53 has the original local path length: 2 => Start (3,2), Goal (4,2)
[DBG]  Start position: (2, 1), (4, 2), (2, 2), (0, 2), (3, 2), 
[DBG]  Goal position: (2, 0), (4, 2), (4, 4), (0, 3), (4, 2), 
[DBG]  SAT instance and solver created.
Currently solving
Instance name: scen
Map name: map
Encoding used: disappear_at_goal
SAT solver used: Kissat
Optimizing function: sum of costs
Number of agents: 5
Mks LB: 5
SoC LB: 12
Delta: 0
Remaining time: 300000 [ms]

Vertex conflict! Agents 0, 1, timestep 2, location 0
Swapping conflict! Agents 0, 1, timestep 2, edge (0,0)
Vertex conflict! Agents 0, 1, timestep 3, location 0
Swapping conflict! Agents 0, 1, timestep 3, edge (0,0)
Vertex conflict! Agents 0, 1, timestep 4, location 0
Vertex conflict! Agents 0, 3, timestep 2, location 0
Swapping conflict! Agents 0, 3, timestep 2, edge (0,0)
Vertex conflict! Agents 0, 3, timestep 3, location 0
Swapping conflict! Agents 0, 3, timestep 3, edge (0,0)
Vertex conflict! Agents 0, 3, timestep 4, location 0
Vertex conflict! Agents 0, 4, timestep 2, location 0
Swapping conflict! Agents 0, 4, timestep 2, edge (0,0)
Vertex conflict! Agents 0, 4, timestep 3, location 0
Swapping conflict! Agents 0, 4, timestep 3, edge (0,0)
Vertex conflict! Agents 0, 4, timestep 4, location 0
Vertex conflict! Agents 1, 3, timestep 2, location 0
Swapping conflict! Agents 1, 3, timestep 2, edge (0,0)
Vertex conflict! Agents 1, 3, timestep 3, location 0
Swapping conflict! Agents 1, 3, timestep 3, edge (0,0)
Vertex conflict! Agents 1, 3, timestep 4, location 0
Vertex conflict! Agents 1, 4, timestep 2, location 0
Swapping conflict! Agents 1, 4, timestep 2, edge (0,0)
Vertex conflict! Agents 1, 4, timestep 3, location 0
Swapping conflict! Agents 1, 4, timestep 3, edge (0,0)
Vertex conflict! Agents 1, 4, timestep 4, location 0
Vertex conflict! Agents 3, 4, timestep 2, location 0
Swapping conflict! Agents 3, 4, timestep 2, edge (0,0)
Vertex conflict! Agents 3, 4, timestep 3, location 0
Swapping conflict! Agents 3, 4, timestep 3, edge (0,0)
Vertex conflict! Agents 3, 4, timestep 4, location 0
Found plan [agents = 5] [timesteps = 5]
Agent #0 : 7 6 0 0 0 
Agent #1 : 13 0 0 0 0 
Agent #2 : 8 11 13 14 15 
Agent #3 : 1 2 0 0 0 
Agent #4 : 11 13 0 0 0 

[STAT] Solver returned: 0
[DBG]  Agent (index) 11 | New local path (submap idx):
[DBG]  7 6 
[DBG]  Agent (index) 26 | New local path (submap idx):
[DBG]  13 
[DBG]  Agent (index) 28 | New local path (submap idx):
[DBG]  8 11 13 14 15 
[DBG]  Agent (index) 30 | New local path (submap idx):
[DBG]  1 2 
[DBG]  Agent (index) 53 | New local path (submap idx):
[DBG]  11 13 
[DBG]  Update the agent path 11 | Original local length: 2 | New local length: 2
[DBG]  agent 11 t=0 => decoded (sx,sy)=(2,1) => global_id=659
[DBG]  agent 11 t=1 => decoded (sx,sy)=(2,0) => global_id=658
[DBG]  Complete path of agent 11:
[DBG]    Original: 990 1022 990 989 957 956 955 923 922 921 920 952 984 983 982 981 949 917 916 916 884 883 851 851 819 787 755 756 724 692 691 659 658 657 625 625 625 657 
[DBG]    New:     990 1022 990 989 957 956 955 923 922 921 920 952 984 983 982 981 949 917 916 916 884 883 851 851 819 787 755 756 724 692 691 659 658 657 625 625 625 657 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 990 1022 990 989 957 956 955 923 922 921 920 952 984 983 982 981 949 917 916 916 884 883 851 851 819 787 755 756 724 692 691 
[DBG]    Local path (in submap): 659 658 
[DBG]    Suffix (out of submap): 657 625 625 625 657 
[DBG]  Original agent path length 11 je: 38
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 0: 990, 1022, 990, 989, 957, 956, 955, 923, 922, 921, 920, 952, 984, 983, 982, 981, 949, 917, 916, 916, 884, 883, 851, 851, 819, 787, 755, 756, 724, 692, 691, 659, 658, 657, 625, 625, 625, 657, 
[DBG]  Path for agent 11 updated, resulting length: 38
[DBG]  Update the agent path 26 | Original local length: 1 | New local length: 1
[DBG]  agent 26 t=0 => decoded (sx,sy)=(4,2) => global_id=724
[DBG]  Complete path of agent 26:
[DBG]    Original: 13 14 46 47 48 80 81 82 83 84 116 148 180 212 244 276 277 309 341 373 405 437 469 501 533 565 597 596 628 660 692 724 756 755 
[DBG]    New:     13 14 46 47 48 80 81 82 83 84 116 148 180 212 244 276 277 309 341 373 405 437 469 501 533 565 597 596 628 660 692 724 756 755 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 13 14 46 47 48 80 81 82 83 84 116 148 180 212 244 276 277 309 341 373 405 437 469 501 533 565 597 596 628 660 692 
[DBG]    Local path (in submap): 724 
[DBG]    Suffix (out of submap): 756 755 
[DBG]  Original agent path length 26 je: 34
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 1: 13, 14, 46, 47, 48, 80, 81, 82, 83, 84, 116, 148, 180, 212, 244, 276, 277, 309, 341, 373, 405, 437, 469, 501, 533, 565, 597, 596, 628, 660, 692, 724, 756, 755, 
[DBG]  Path for agent 26 updated, resulting length: 34
[DBG]  Update the agent path 28 | Original local length: 5 | New local length: 5
[DBG]  agent 28 t=0 => decoded (sx,sy)=(2,2) => global_id=660
[DBG]  agent 28 t=1 => decoded (sx,sy)=(3,2) => global_id=692
[DBG]  agent 28 t=2 => decoded (sx,sy)=(4,2) => global_id=724
[DBG]  agent 28 t=3 => decoded (sx,sy)=(4,3) => global_id=725
[DBG]  agent 28 t=4 => decoded (sx,sy)=(4,4) => global_id=726
[DBG]  Complete path of agent 28:
[DBG]    Original: 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 660 692 724 725 726 727 728 728 728 728 728 728 727 
[DBG]    New:     661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 660 692 724 725 726 727 728 728 728 728 728 728 727 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 
[DBG]    Local path (in submap): 660 692 724 725 726 
[DBG]    Suffix (out of submap): 727 728 728 728 728 728 728 727 
[DBG]  Original agent path length 28 je: 44
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 2: 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 660, 692, 724, 725, 726, 727, 728, 728, 728, 728, 728, 728, 727, 
[DBG]  Path for agent 28 updated, resulting length: 44
[DBG]  Update the agent path 30 | Original local length: 2 | New local length: 2
[DBG]  agent 30 t=0 => decoded (sx,sy)=(0,2) => global_id=596
[DBG]  agent 30 t=1 => decoded (sx,sy)=(0,3) => global_id=597
[DBG]  Complete path of agent 30:
[DBG]    Original: 922 922 922 922 922 890 858 857 856 824 823 822 821 820 788 756 724 692 660 628 627 627 627 627 627 627 627 627 627 627 628 596 597 565 566 534 502 503 
[DBG]    New:     922 922 922 922 922 890 858 857 856 824 823 822 821 820 788 756 724 692 660 628 627 627 627 627 627 627 627 627 627 627 628 596 597 565 566 534 502 503 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 922 922 922 922 922 890 858 857 856 824 823 822 821 820 788 756 724 692 660 628 627 627 627 627 627 627 627 627 627 627 628 
[DBG]    Local path (in submap): 596 597 
[DBG]    Suffix (out of submap): 565 566 534 502 503 
[DBG]  Original agent path length 30 je: 38
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 3: 922, 922, 922, 922, 922, 890, 858, 857, 856, 824, 823, 822, 821, 820, 788, 756, 724, 692, 660, 628, 627, 627, 627, 627, 627, 627, 627, 627, 627, 627, 628, 596, 597, 565, 566, 534, 502, 503, 
[DBG]  Path for agent 30 updated, resulting length: 38
[DBG]  Update the agent path 53 | Original local length: 2 | New local length: 2
[DBG]  agent 53 t=0 => decoded (sx,sy)=(3,2) => global_id=692
[DBG]  agent 53 t=1 => decoded (sx,sy)=(4,2) => global_id=724
[DBG]  Complete path of agent 53:
[DBG]    Original: 84 83 115 147 147 179 180 212 244 276 308 309 310 311 343 375 407 406 405 437 437 469 501 533 534 533 565 597 629 628 660 692 724 756 788 820 821 
[DBG]    New:     84 83 115 147 147 179 180 212 244 276 308 309 310 311 343 375 407 406 405 437 437 469 501 533 534 533 565 597 629 628 660 692 724 756 788 820 821 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 84 83 115 147 147 179 180 212 244 276 308 309 310 311 343 375 407 406 405 437 437 469 501 533 534 533 565 597 629 628 660 
[DBG]    Local path (in submap): 692 724 
[DBG]    Suffix (out of submap): 756 788 820 821 
[DBG]  Original agent path length 53 je: 37
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 4: 84, 83, 115, 147, 147, 179, 180, 212, 244, 276, 308, 309, 310, 311, 343, 375, 407, 406, 405, 437, 437, 469, 501, 533, 534, 533, 565, 597, 629, 628, 660, 692, 724, 756, 788, 820, 821, 
[DBG]  Path for agent 53 updated, resulting length: 37
[DBG]  Paths successfully updated.
[DBG]  (LNS.cpp) New path for agent 11: 
[DBG]  990, 1022, 990, 989, 957, 956, 955, 923, 922, 921, 920, 952, 984, 983, 982, 981, 949, 917, 916, 916, 884, 883, 851, 851, 819, 787, 755, 756, 724, 692, 691, 659, 658, 657, 625, 625, 625, 657, 
[DBG]  (LNS.cpp) New path for agent 26: 
[DBG]  13, 14, 46, 47, 48, 80, 81, 82, 83, 84, 116, 148, 180, 212, 244, 276, 277, 309, 341, 373, 405, 437, 469, 501, 533, 565, 597, 596, 628, 660, 692, 724, 756, 755, 
[DBG]  (LNS.cpp) New path for agent 28: 
[DBG]  661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 660, 692, 724, 725, 726, 727, 728, 728, 728, 728, 728, 728, 727, 
[DBG]  (LNS.cpp) New path for agent 30: 
[DBG]  922, 922, 922, 922, 922, 890, 858, 857, 856, 824, 823, 822, 821, 820, 788, 756, 724, 692, 660, 628, 627, 627, 627, 627, 627, 627, 627, 627, 627, 627, 628, 596, 597, 565, 566, 534, 502, 503, 
[DBG]  (LNS.cpp) New path for agent 53: 
[DBG]  84, 83, 115, 147, 147, 179, 180, 212, 244, 276, 308, 309, 310, 311, 343, 375, 407, 406, 405, 437, 437, 469, 501, 533, 534, 533, 565, 597, 629, 628, 660, 692, 724, 756, 788, 820, 821, 
[DBG]  Delta value: 0
[DBG]  Rewarding metric index = 1
[DBG]  component_weights = {0.0489088, 0.900608, 0.0173163, 0.0331671}
[DBG]  opSuccess value: 1
[STAT] neighbor.sum_of_costs before recomputation: 186
[STAT] neighbor.old_sum_of_costs before recomputation: 186
[STAT] sum_of_costs before recomputation: 4354
[DBG]  Validate solution immediately after SAT success.
[DBG]  No problems after SAT replan.
[DBG]  Recomputing sum_of_cost by dividing neighbor.sum_of_costs and neighbor.old_sum_of_costs
[STAT] sum_of_costs after recomputation: 4354
[STAT] Iteration 70
[DBG]  Random chance did not select SAT operator (r=58), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 70
[DBG]  Random chance did not select SAT operator (r=61), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 70
[DBG]  Random chance did not select SAT operator (r=18), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 70
[DBG]  Random chance did not select SAT operator (r=43), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 70
[DBG]  Random chance did not select SAT operator (r=36), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 70
[DBG]  Random chance did not select SAT operator (r=18), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 70
[DBG]  Random chance did not select SAT operator (r=58), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 70
[DBG]  Using SAT operator (destroy+repair SAT).
[DBG]  ====================
[DBG]  SAT destroy operator called.
[DBG]  SAT heuristic: 2
[DBG]  key_agent_id: 28
[DBG]  key_agent_id global path length: 44
[DBG]  Submap content (global positions):
[DBG]  595 596 597 598 599 
[DBG]  627 628 629 630 631 
[DBG]  659 660 661 662 663 
[DBG]  691 692 693 694 695 
[DBG]  723 724 725 726 727 
[DBG]  Map content with agents and obstacles:
[DBG]  X A . X . 
[DBG]  . A . X . 
[DBG]  A A A X X 
[DBG]  . . X X X 
[DBG]  X . . . . 
[DBG]  content of the map structure that we pass to the SAT solver:
[DBG]  -1  1  1  -1  1  
[DBG]  1  1  1  -1  1  
[DBG]  1  1  1  -1  -1  
[DBG]  1  1  -1  -1  -1  
[DBG]  -1  1  1  1  1  
[DBG]  Identifying agents in a submap for rescheduling (when key_agent is there at the time 18):
[DBG]  Agent 28 found intervals in the sub-map:
[DBG]   [0..36] [43..43]
[DBG]  Agent 28 (interval in submap: [0..36]) contains time 18, added to replan.
[DBG]  Agent 30 found intervals in the sub-map:
[DBG]   [16..32]
[DBG]  Agent 30 (interval in submap: [16..32]) contains time 18, added to replan.
[DBG]  Agent 62 found intervals in the sub-map:
[DBG]   [17..22]
[DBG]  Agent 62 (interval in submap: [17..22]) contains time 18, added to replan.
[DBG]  Agent 74 found intervals in the sub-map:
[DBG]   [16..20]
[DBG]  Agent 74 (interval in submap: [16..20]) contains time 18, added to replan.
[DBG]  Agent 114 found intervals in the sub-map:
[DBG]   [15..19]
[DBG]  Agent 114 (interval in submap: [15..19]) contains time 18, added to replan.
[DBG]  Agent 28 | Start (global): 661 -> (local): (2, 2) at time 18 | Goal (global): 727 -> (local): (4, 4) at time 36
[DBG]  Agent 30 | Start (global): 660 -> (local): (2, 1) at time 18 | Goal (global): 597 -> (local): (0, 2) at time 32
[DBG]  Agent 62 | Start (global): 659 -> (local): (2, 0) at time 18 | Goal (global): 597 -> (local): (0, 2) at time 22
[DBG]  Agent 74 | Start (global): 628 -> (local): (1, 1) at time 18 | Goal (global): 597 -> (local): (0, 2) at time 20
[DBG]  Agent 114 | Start (global): 596 -> (local): (0, 1) at time 18 | Goal (global): 597 -> (local): (0, 2) at time 19
[DBG]  [REPAIR] SAT destroy operator called.
[DBG]  [REPAIR] SAT operator – launching subproblem FOR OPTIMIZATION.
[DBG]  Creating local paths (sx, sy) in the submap for T_sync = 18
[DBG]    Agent 28 (global paths from T=18 to 36) has local path: (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,1) (3,1) (4,1) (4,2) (4,3) (4,4) 
[DBG]    Agent 30 (global paths from T=18 to 32) has local path: (2,1) (1,1) (1,0) (1,0) (1,0) (1,0) (1,0) (1,0) (1,0) (1,0) (1,0) (1,0) (1,1) (0,1) (0,2) 
[DBG]    Agent 62 (global paths from T=18 to 22) has local path: (2,0) (2,1) (1,1) (0,1) (0,2) 
[DBG]    Agent 74 (global paths from T=18 to 20) has local path: (1,1) (0,1) (0,2) 
[DBG]    Agent 114 (global paths from T=18 to 19) has local path: (0,1) (0,2) 
[DBG]  Checking input data for SAT solver:
[DBG]    - Number of agents to replan: 5
[DBG]  Agent 28 has the original local path length: 19 => Start (2,2), Goal (4,4)
[DBG]  Agent 30 has the original local path length: 15 => Start (2,1), Goal (0,2)
[DBG]  Agent 62 has the original local path length: 5 => Start (2,0), Goal (0,2)
[DBG]  Agent 74 has the original local path length: 3 => Start (1,1), Goal (0,2)
[DBG]  Agent 114 has the original local path length: 2 => Start (0,1), Goal (0,2)
[DBG]  Start position: (2, 2), (2, 1), (2, 0), (1, 1), (0, 1), 
[DBG]  Goal position: (4, 4), (0, 2), (0, 2), (0, 2), (0, 2), 
[DBG]  SAT instance and solver created.
Currently solving
Instance name: scen
Map name: map
Encoding used: disappear_at_goal
SAT solver used: Kissat
Optimizing function: sum of costs
Number of agents: 5
Mks LB: 7
SoC LB: 21
Delta: 0
Remaining time: 300000 [ms]

Vertex conflict! Agents 1, 2, timestep 5, location 0
Swapping conflict! Agents 1, 2, timestep 5, edge (0,0)
Vertex conflict! Agents 1, 2, timestep 6, location 0
Vertex conflict! Agents 1, 3, timestep 4, location 0
Swapping conflict! Agents 1, 3, timestep 4, edge (0,0)
Vertex conflict! Agents 1, 3, timestep 5, location 0
Swapping conflict! Agents 1, 3, timestep 5, edge (0,0)
Vertex conflict! Agents 1, 3, timestep 6, location 0
Vertex conflict! Agents 1, 4, timestep 4, location 0
Swapping conflict! Agents 1, 4, timestep 4, edge (0,0)
Vertex conflict! Agents 1, 4, timestep 5, location 0
Swapping conflict! Agents 1, 4, timestep 5, edge (0,0)
Vertex conflict! Agents 1, 4, timestep 6, location 0
Vertex conflict! Agents 2, 3, timestep 5, location 0
Swapping conflict! Agents 2, 3, timestep 5, edge (0,0)
Vertex conflict! Agents 2, 3, timestep 6, location 0
Vertex conflict! Agents 2, 4, timestep 5, location 0
Swapping conflict! Agents 2, 4, timestep 5, edge (0,0)
Vertex conflict! Agents 2, 4, timestep 6, location 0
Vertex conflict! Agents 3, 4, timestep 3, location 0
Swapping conflict! Agents 3, 4, timestep 3, edge (0,0)
Vertex conflict! Agents 3, 4, timestep 4, location 0
Swapping conflict! Agents 3, 4, timestep 4, edge (0,0)
Vertex conflict! Agents 3, 4, timestep 5, location 0
Swapping conflict! Agents 3, 4, timestep 5, edge (0,0)
Vertex conflict! Agents 3, 4, timestep 6, location 0
Found plan [agents = 5] [timesteps = 7]
Agent #0 : 9 8 11 12 13 14 15 
Agent #1 : 8 4 5 1 0 0 0 
Agent #2 : 7 3 4 5 1 0 0 
Agent #3 : 4 5 1 0 0 0 0 
Agent #4 : 0 1 0 0 0 0 0 

[STAT] Solver returned: 0
[DBG]  Agent (index) 28 | New local path (submap idx):
[DBG]  9 8 11 12 13 14 15 
[DBG]  Agent (index) 30 | New local path (submap idx):
[DBG]  8 4 5 1 
[DBG]  Agent (index) 62 | New local path (submap idx):
[DBG]  7 3 4 5 1 
[DBG]  Agent (index) 74 | New local path (submap idx):
[DBG]  4 5 1 
[DBG]  Agent (index) 114 | New local path (submap idx):
[DBG]  0 1 
[DBG]  Update the agent path 28 | Original local length: 19 | New local length: 7
[DBG]  agent 28 t=0 => decoded (sx,sy)=(2,2) => global_id=661
[DBG]  agent 28 t=1 => decoded (sx,sy)=(2,1) => global_id=660
[DBG]  agent 28 t=2 => decoded (sx,sy)=(3,1) => global_id=692
[DBG]  agent 28 t=3 => decoded (sx,sy)=(4,1) => global_id=724
[DBG]  agent 28 t=4 => decoded (sx,sy)=(4,2) => global_id=725
[DBG]  agent 28 t=5 => decoded (sx,sy)=(4,3) => global_id=726
[DBG]  agent 28 t=6 => decoded (sx,sy)=(4,4) => global_id=727
[DBG]  Complete path of agent 28:
[DBG]    Original: 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 660 692 724 725 726 727 728 728 728 728 728 728 727 
[DBG]    New:     661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 660 692 724 725 726 727 728 728 728 728 728 728 727 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 
[DBG]    Local path (in submap): 661 660 692 724 725 726 727 728 728 728 728 728 728 727 
[DBG]    Suffix (out of submap): 
[DBG]  Original agent path length 28 je: 44
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 0: 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 660, 692, 724, 725, 726, 727, 728, 728, 728, 728, 728, 728, 727, 
[DBG]  Path for agent 28 updated, resulting length: 32
[DBG]  Update the agent path 30 | Original local length: 15 | New local length: 4
[DBG]  agent 30 t=0 => decoded (sx,sy)=(2,1) => global_id=660
[DBG]  agent 30 t=1 => decoded (sx,sy)=(1,1) => global_id=628
[DBG]  agent 30 t=2 => decoded (sx,sy)=(1,2) => global_id=629
[DBG]  agent 30 t=3 => decoded (sx,sy)=(0,2) => global_id=597
[DBG]  Complete path of agent 30:
[DBG]    Original: 922 922 922 922 922 890 858 857 856 824 823 822 821 820 788 756 724 692 660 628 627 627 627 627 627 627 627 627 627 627 628 596 597 565 566 534 502 503 
[DBG]    New:     922 922 922 922 922 890 858 857 856 824 823 822 821 820 788 756 724 692 660 628 629 597 565 566 534 502 503 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 922 922 922 922 922 890 858 857 856 824 823 822 821 820 788 756 724 692 
[DBG]    Local path (in submap): 660 628 629 597 565 566 534 502 503 
[DBG]    Suffix (out of submap): 
[DBG]  Original agent path length 30 je: 38
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 1: 922, 922, 922, 922, 922, 890, 858, 857, 856, 824, 823, 822, 821, 820, 788, 756, 724, 692, 660, 628, 629, 597, 565, 566, 534, 502, 503, 
[DBG]  Path for agent 30 updated, resulting length: 27
[DBG]  Update the agent path 62 | Original local length: 5 | New local length: 5
[DBG]  agent 62 t=0 => decoded (sx,sy)=(2,0) => global_id=659
[DBG]  agent 62 t=1 => decoded (sx,sy)=(1,0) => global_id=627
[DBG]  agent 62 t=2 => decoded (sx,sy)=(1,1) => global_id=628
[DBG]  agent 62 t=3 => decoded (sx,sy)=(1,2) => global_id=629
[DBG]  agent 62 t=4 => decoded (sx,sy)=(0,2) => global_id=597
[DBG]  Complete path of agent 62:
[DBG]    Original: 753 753 753 753 753 753 753 753 753 753 753 752 720 688 689 657 658 659 659 660 628 596 597 565 566 534 533 501 501 469 437 438 406 
[DBG]    New:     753 753 753 753 753 753 753 753 753 753 753 752 720 688 689 657 658 659 659 627 628 629 597 565 566 534 533 501 501 469 437 438 406 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 753 753 753 753 753 753 753 753 753 753 753 752 720 688 689 657 658 659 
[DBG]    Local path (in submap): 659 627 628 629 597 
[DBG]    Suffix (out of submap): 565 566 534 533 501 501 469 437 438 406 
[DBG]  Original agent path length 62 je: 33
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 2: 753, 753, 753, 753, 753, 753, 753, 753, 753, 753, 753, 752, 720, 688, 689, 657, 658, 659, 659, 627, 628, 629, 597, 565, 566, 534, 533, 501, 501, 469, 437, 438, 406, 
[DBG]  Path for agent 62 updated, resulting length: 33
[DBG]  Update the agent path 74 | Original local length: 3 | New local length: 3
[DBG]  agent 74 t=0 => decoded (sx,sy)=(1,1) => global_id=628
[DBG]  agent 74 t=1 => decoded (sx,sy)=(1,2) => global_id=629
[DBG]  agent 74 t=2 => decoded (sx,sy)=(0,2) => global_id=597
[DBG]  Complete path of agent 74:
[DBG]    Original: 752 752 752 752 752 752 751 751 751 751 752 720 688 656 657 658 659 660 628 596 597 565 566 534 502 503 504 
[DBG]    New:     752 752 752 752 752 752 751 751 751 751 752 720 688 656 657 658 659 660 628 629 597 565 566 534 502 503 504 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 752 752 752 752 752 752 751 751 751 751 752 720 688 656 657 658 659 660 
[DBG]    Local path (in submap): 628 629 597 
[DBG]    Suffix (out of submap): 565 566 534 502 503 504 
[DBG]  Original agent path length 74 je: 27
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 3: 752, 752, 752, 752, 752, 752, 751, 751, 751, 751, 752, 720, 688, 656, 657, 658, 659, 660, 628, 629, 597, 565, 566, 534, 502, 503, 504, 
[DBG]  Path for agent 74 updated, resulting length: 27
[DBG]  Update the agent path 114 | Original local length: 2 | New local length: 2
[DBG]  agent 114 t=0 => decoded (sx,sy)=(0,1) => global_id=596
[DBG]  agent 114 t=1 => decoded (sx,sy)=(0,2) => global_id=597
[DBG]  Complete path of agent 114:
[DBG]    Original: 875 843 844 845 846 847 815 783 784 752 720 721 689 657 658 659 627 628 596 597 565 566 534 502 470 438 439 440 408 409 409 377 345 313 281 249 217 185 185 185 185 185 186 154 
[DBG]    New:     875 843 844 845 846 847 815 783 784 752 720 721 689 657 658 659 627 628 596 597 565 566 534 502 470 438 439 440 408 409 409 377 345 313 281 249 217 185 185 185 185 185 186 154 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 875 843 844 845 846 847 815 783 784 752 720 721 689 657 658 659 627 628 
[DBG]    Local path (in submap): 596 597 
[DBG]    Suffix (out of submap): 565 566 534 502 470 438 439 440 408 409 409 377 345 313 281 249 217 185 185 185 185 185 186 154 
[DBG]  Original agent path length 114 je: 44
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 4: 875, 843, 844, 845, 846, 847, 815, 783, 784, 752, 720, 721, 689, 657, 658, 659, 627, 628, 596, 597, 565, 566, 534, 502, 470, 438, 439, 440, 408, 409, 409, 377, 345, 313, 281, 249, 217, 185, 185, 185, 185, 185, 186, 154, 
[DBG]  Path for agent 114 updated, resulting length: 44
[DBG]  Paths successfully updated.
[DBG]  (LNS.cpp) New path for agent 28: 
[DBG]  661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 660, 692, 724, 725, 726, 727, 728, 728, 728, 728, 728, 728, 727, 
[DBG]  (LNS.cpp) New path for agent 30: 
[DBG]  922, 922, 922, 922, 922, 890, 858, 857, 856, 824, 823, 822, 821, 820, 788, 756, 724, 692, 660, 628, 629, 597, 565, 566, 534, 502, 503, 
[DBG]  (LNS.cpp) New path for agent 62: 
[DBG]  753, 753, 753, 753, 753, 753, 753, 753, 753, 753, 753, 752, 720, 688, 689, 657, 658, 659, 659, 627, 628, 629, 597, 565, 566, 534, 533, 501, 501, 469, 437, 438, 406, 
[DBG]  (LNS.cpp) New path for agent 74: 
[DBG]  752, 752, 752, 752, 752, 752, 751, 751, 751, 751, 752, 720, 688, 656, 657, 658, 659, 660, 628, 629, 597, 565, 566, 534, 502, 503, 504, 
[DBG]  (LNS.cpp) New path for agent 114: 
[DBG]  875, 843, 844, 845, 846, 847, 815, 783, 784, 752, 720, 721, 689, 657, 658, 659, 627, 628, 596, 597, 565, 566, 534, 502, 470, 438, 439, 440, 408, 409, 409, 377, 345, 313, 281, 249, 217, 185, 185, 185, 185, 185, 186, 154, 
[DBG]  Delta value: 0.127072
[DBG]  Rewarding metric index = 1
[DBG]  component_weights = {0.0418788, 0.914894, 0.0148273, 0.0283997}
[DBG]  opSuccess value: 1
[STAT] neighbor.sum_of_costs before recomputation: 158
[STAT] neighbor.old_sum_of_costs before recomputation: 181
[STAT] sum_of_costs before recomputation: 4354
[DBG]  Validate solution immediately after SAT success.
[WARNING] Problem after SAT: Target conflict: agent 42 (len 43) traverses target of agent 28 (len 31) at location 727 at timestep 42
[DBG]  [DEBUG] Attempting immediate repair via init_lns because problem occurred after SAT (should be applied only for conflicts...).
[DBG]  [DEBUG] Passing 150 agents to init_lns (skip=true).
[DBG]  [DEBUG] path_table contents for selected agents (neighbor.agents):
[DBG]    Agent 28 => controlling path length=32
[DBG]    Agent 30 => controlling path length=27
[DBG]    Agent 62 => controlling path length=33
[DBG]    Agent 74 => controlling path length=27
[DBG]    Agent 114 => controlling path length=44
[DBG]  hodnota skip_initial_solution=1
[DBG]  We skip initialSolution => call buildCollisionData()
[DBG]  buildCollisionData() called – skip_initial_solution case.
[DBG]  Agents.size()=150, collision_graph.size()=150
[DBG]  agent 28 => updateCollidingPairs => foundCollision
[DBG]  agent 30 => updateCollidingPairs => foundCollision
[DBG]  agent 42 => updateCollidingPairs => foundCollision
[DBG]  agent 53 => updateCollidingPairs => foundCollision
[DBG]  Conflicting agent pairs:
[DBG]  agent 28 is in conflict with agent 42
[DBG]  agent 30 is in conflict with agent 53
[DBG]  buildCollisionData() => sum_of_costs=4331, num_of_colliding_pairs=2
[DBG]  buildCollisionData done => sum_of_costs=4331, num_of_colliding_pairs=2
[DBG]  sum_of_cost hodnota: 4331
[DBG]  After skip/init build => iteration_stats.back(): sum_of_costs=4331, collisions=2
[DEBUG] Using default neighbor generation strategy for conflicts: 2
[DEBUG] Using default neighbor generation strategy for conflicts: 0
[DEBUG] Using default neighbor generation strategy for conflicts: 0
	InitLNS(PP): runtime = 0.00350721, iterations = 4, colliding pairs = 0, initial colliding pairs = 2, solution cost = 4326, initial solution cost = 4331, failed iterations = 0
[DBG]  init_lns->sum_of_costs after init_lns->run: 4326
[DBG]  sum_of_costs after assignment from init_lns->run: 4326
[DBG]  Recomputing sum_of_cost by dividing neighbor.sum_of_costs and neighbor.old_sum_of_costs
[STAT] sum_of_costs after recomputation: 4326
[STAT] Iteration 71
[DBG]  Using SAT operator (destroy+repair SAT).
[DBG]  ====================
[DBG]  SAT destroy operator called.
[DBG]  SAT heuristic: 2
[DBG]  key_agent_id: 28
[DBG]  key_agent_id global path length: 44
[DBG]  Submap content (global positions):
[DBG]  691 692 693 694 695 
[DBG]  723 724 725 726 727 
[DBG]  755 756 757 758 759 
[DBG]  787 788 789 790 791 
[DBG]  819 820 821 822 823 
[DBG]  Map content with agents and obstacles:
[DBG]  . . X X X 
[DBG]  X . . . . 
[DBG]  . . A X . 
[DBG]  . . X . X 
[DBG]  . . . . . 
[DBG]  content of the map structure that we pass to the SAT solver:
[DBG]  1  1  -1  -1  -1  
[DBG]  -1  1  1  1  1  
[DBG]  1  1  1  -1  1  
[DBG]  1  1  -1  1  -1  
[DBG]  1  1  1  1  1  
[DBG]  Identifying agents in a submap for rescheduling (when key_agent is there at the time 37):
[DBG]  Agent 28 found intervals in the sub-map:
[DBG]   [32..43]
[DBG]  Agent 28 (interval in submap: [32..43]) contains time 37, added to replan.
[DBG]  Agent 42 found intervals in the sub-map:
[DBG]   [38..43]
[DBG]  Agent 42 is not in sub-map at time 37 (intervals: 
[DBG]  [38..43] )
[DBG]  Agent 53 found intervals in the sub-map:
[DBG]   [31..36]
[DBG]  Agent 53 is not in sub-map at time 37 (intervals: 
[DBG]  [31..36] )
[DBG]  Agent 148 found intervals in the sub-map:
[DBG]  
[DBG]  Agent 148 is not in sub-map at time 37 (intervals: 
[DBG]  )
[DBG]  Agent 28 | Start (global): 757 -> (local): (2, 2) at time 37 | Goal (global): 727 -> (local): (1, 4) at time 43
[DBG]  [REPAIR] SAT destroy operator called.
[DBG]  [REPAIR] SAT operator – launching subproblem FOR OPTIMIZATION.
[DBG]  Creating local paths (sx, sy) in the submap for T_sync = 37
[DBG]    Agent 28 (global paths from T=37 to 43) has local path: (2,2) (2,2) (2,2) (2,2) (1,2) (1,3) (1,4) 
[DBG]  Checking input data for SAT solver:
[DBG]    - Number of agents to replan: 1
[DBG]  Agent 28 has the original local path length: 7 => Start (2,2), Goal (1,4)
[DBG]  Start position: (2, 2), 
[DBG]  Goal position: (1, 4), 
[DBG]  SAT instance and solver created.
Currently solving
Instance name: scen
Map name: map
Encoding used: disappear_at_goal
SAT solver used: Kissat
Optimizing function: sum of costs
Number of agents: 1
Mks LB: 4
SoC LB: 4
Delta: 0
Remaining time: 300000 [ms]

Found plan [agents = 1] [timesteps = 4]
Agent #0 : 8 3 4 5 

[STAT] Solver returned: 0
[DBG]  Agent (index) 28 | New local path (submap idx):
[DBG]  8 3 4 5 
[DBG]  Update the agent path 28 | Original local length: 7 | New local length: 4
[DBG]  agent 28 t=0 => decoded (sx,sy)=(2,2) => global_id=757
[DBG]  agent 28 t=1 => decoded (sx,sy)=(1,2) => global_id=725
[DBG]  agent 28 t=2 => decoded (sx,sy)=(1,3) => global_id=726
[DBG]  agent 28 t=3 => decoded (sx,sy)=(1,4) => global_id=727
[DBG]  Complete path of agent 28:
[DBG]    Original: 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 660 692 724 756 757 757 757 757 757 757 725 726 727 
[DBG]    New:     661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 660 692 724 756 757 757 757 725 726 727 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 660 692 724 756 757 757 
[DBG]    Local path (in submap): 757 725 726 727 
[DBG]    Suffix (out of submap): 
[DBG]  Original agent path length 28 je: 44
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 0: 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 660, 692, 724, 756, 757, 757, 757, 725, 726, 727, 
[DBG]  Path for agent 28 updated, resulting length: 41
[DBG]  Paths successfully updated.
[DBG]  (LNS.cpp) New path for agent 28: 
[DBG]  661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 660, 692, 724, 756, 757, 757, 757, 725, 726, 727, 
[DBG]  Delta value: 0.0697674
[DBG]  Rewarding metric index = 3
[DBG]  component_weights = {0.0417294, 0.91163, 0.0147744, 0.031866}
[DBG]  opSuccess value: 1
[STAT] neighbor.sum_of_costs before recomputation: 40
[STAT] neighbor.old_sum_of_costs before recomputation: 43
[STAT] sum_of_costs before recomputation: 4326
[DBG]  Validate solution immediately after SAT success.
[WARNING] Problem after SAT: Target conflict: agent 42 (len 43) traverses target of agent 28 (len 40) at location 727 at timestep 42
[DBG]  [DEBUG] Attempting immediate repair via init_lns because problem occurred after SAT (should be applied only for conflicts...).
[DBG]  [DEBUG] Passing 150 agents to init_lns (skip=true).
[DBG]  [DEBUG] path_table contents for selected agents (neighbor.agents):
[DBG]    Agent 28 => controlling path length=41
[DBG]  hodnota skip_initial_solution=1
[DBG]  We skip initialSolution => call buildCollisionData()
[DBG]  buildCollisionData() called – skip_initial_solution case.
[DBG]  Agents.size()=150, collision_graph.size()=150
[DBG]  agent 28 => updateCollidingPairs => foundCollision
[DBG]  agent 42 => updateCollidingPairs => foundCollision
[DBG]  Conflicting agent pairs:
[DBG]  agent 28 is in conflict with agent 42
[DBG]  buildCollisionData() => sum_of_costs=4323, num_of_colliding_pairs=1
[DBG]  buildCollisionData done => sum_of_costs=4323, num_of_colliding_pairs=1
[DBG]  sum_of_cost hodnota: 4323
[DBG]  After skip/init build => iteration_stats.back(): sum_of_costs=4323, collisions=1
[DEBUG] Using default neighbor generation strategy for conflicts: 0
	InitLNS(PP): runtime = 0.00052275, iterations = 2, colliding pairs = 0, initial colliding pairs = 1, solution cost = 4326, initial solution cost = 4323, failed iterations = 0
[DBG]  init_lns->sum_of_costs after init_lns->run: 4326
[DBG]  sum_of_costs after assignment from init_lns->run: 4326
[DBG]  Recomputing sum_of_cost by dividing neighbor.sum_of_costs and neighbor.old_sum_of_costs
[STAT] sum_of_costs after recomputation: 4326
[STAT] Iteration 72
[DBG]  Random chance did not select SAT operator (r=90), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 72
[DBG]  Random chance did not select SAT operator (r=57), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 72
[DBG]  Random chance did not select SAT operator (r=65), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 72
[DBG]  Random chance did not select SAT operator (r=40), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 72
[DBG]  Random chance did not select SAT operator (r=80), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 72
[DBG]  Random chance did not select SAT operator (r=44), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 72
[DBG]  Random chance did not select SAT operator (r=30), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 72
[DBG]  Random chance did not select SAT operator (r=53), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 72
[DBG]  Random chance did not select SAT operator (r=20), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 72
[DBG]  Random chance did not select SAT operator (r=50), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 72
[DBG]  Random chance did not select SAT operator (r=17), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 72
[DBG]  Random chance did not select SAT operator (r=31), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 72
[DBG]  Random chance did not select SAT operator (r=46), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 72
[DBG]  Random chance did not select SAT operator (r=21), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 72
[DBG]  Random chance did not select SAT operator (r=96), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 72
[DBG]  Random chance did not select SAT operator (r=74), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 72
[DBG]  Random chance did not select SAT operator (r=93), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 72
[DBG]  Using SAT operator (destroy+repair SAT).
[DBG]  ====================
[DBG]  SAT destroy operator called.
[DBG]  SAT heuristic: 2
[DBG]  key_agent_id: 28
[DBG]  key_agent_id global path length: 44
[DBG]  Submap content (global positions):
[DBG]  595 596 597 598 599 
[DBG]  627 628 629 630 631 
[DBG]  659 660 661 662 663 
[DBG]  691 692 693 694 695 
[DBG]  723 724 725 726 727 
[DBG]  Map content with agents and obstacles:
[DBG]  X . A X . 
[DBG]  . . . X . 
[DBG]  A A A X X 
[DBG]  . . X X X 
[DBG]  X . . . . 
[DBG]  content of the map structure that we pass to the SAT solver:
[DBG]  -1  1  1  -1  1  
[DBG]  1  1  1  -1  1  
[DBG]  1  1  1  -1  -1  
[DBG]  1  1  -1  -1  -1  
[DBG]  -1  1  1  1  1  
[DBG]  Identifying agents in a submap for rescheduling (when key_agent is there at the time 23):
[DBG]  Agent 0 found intervals in the sub-map:
[DBG]   [22..25]
[DBG]  Agent 0 (interval in submap: [22..25]) contains time 23, added to replan.
[DBG]  Agent 11 found intervals in the sub-map:
[DBG]   [19..23]
[DBG]  Agent 11 (interval in submap: [19..23]) contains time 23, added to replan.
[DBG]  Agent 28 found intervals in the sub-map:
[DBG]   [0..33] [41..43]
[DBG]  Agent 28 (interval in submap: [0..33]) contains time 23, added to replan.
[DBG]  Agent 56 found intervals in the sub-map:
[DBG]  
[DBG]  Agent 56 is not in sub-map at time 23 (intervals: 
[DBG]  )
[DBG]  Agent 79 found intervals in the sub-map:
[DBG]   [19..23]
[DBG]  Agent 79 (interval in submap: [19..23]) contains time 23, added to replan.
[DBG]  Agent 0 | Start (global): 660 -> (local): (2, 1) at time 23 | Goal (global): 724 -> (local): (4, 1) at time 25
[DBG]  Agent 11 | Start (global): 659 -> (local): (2, 0) at time 23 | Goal (global): 659 -> (local): (2, 0) at time 23
[DBG]  Agent 28 | Start (global): 661 -> (local): (2, 2) at time 23 | Goal (global): 724 -> (local): (4, 1) at time 33
[DBG]  Agent 79 | Start (global): 597 -> (local): (0, 2) at time 23 | Goal (global): 597 -> (local): (0, 2) at time 23
[DBG]  [REPAIR] SAT destroy operator called.
[DBG]  [REPAIR] SAT operator – launching subproblem FOR OPTIMIZATION.
[DBG]  Creating local paths (sx, sy) in the submap for T_sync = 23
[DBG]    Agent 0 (global paths from T=23 to 25) has local path: (2,1) (3,1) (4,1) 
[DBG]    Agent 11 (global paths from T=23 to 23) has local path: (2,0) 
[DBG]    Agent 28 (global paths from T=23 to 33) has local path: (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,1) (3,1) (4,1) 
[DBG]    Agent 79 (global paths from T=23 to 23) has local path: (0,2) 
[DBG]  Checking input data for SAT solver:
[DBG]    - Number of agents to replan: 4
[DBG]  Agent 0 has the original local path length: 3 => Start (2,1), Goal (4,1)
[DBG]  Agent 11 has the original local path length: 1 => Start (2,0), Goal (2,0)
[DBG]  Agent 28 has the original local path length: 11 => Start (2,2), Goal (4,1)
[DBG]  Agent 79 has the original local path length: 1 => Start (0,2), Goal (0,2)
[DBG]  Start position: (2, 1), (2, 0), (2, 2), (0, 2), 
[DBG]  Goal position: (4, 1), (2, 0), (4, 1), (0, 2), 
[DBG]  SAT instance and solver created.
Currently solving
Instance name: scen
Map name: map
Encoding used: disappear_at_goal
SAT solver used: Kissat
Optimizing function: sum of costs
Number of agents: 4
Mks LB: 4
SoC LB: 9
Delta: 0
Remaining time: 300000 [ms]

Vertex conflict! Agents 0, 1, timestep 3, location 0
Vertex conflict! Agents 0, 3, timestep 3, location 0
Vertex conflict! Agents 1, 3, timestep 1, location 0
Swapping conflict! Agents 1, 3, timestep 1, edge (0,0)
Vertex conflict! Agents 1, 3, timestep 2, location 0
Swapping conflict! Agents 1, 3, timestep 2, edge (0,0)
Vertex conflict! Agents 1, 3, timestep 3, location 0
Found plan [agents = 4] [timesteps = 4]
Agent #0 : 8 11 12 0 
Agent #1 : 7 0 0 0 
Agent #2 : 9 8 11 12 
Agent #3 : 1 0 0 0 

[STAT] Solver returned: 0
[DBG]  Agent (index) 0 | New local path (submap idx):
[DBG]  8 11 12 
[DBG]  Agent (index) 11 | New local path (submap idx):
[DBG]  7 
[DBG]  Agent (index) 28 | New local path (submap idx):
[DBG]  9 8 11 12 
[DBG]  Agent (index) 79 | New local path (submap idx):
[DBG]  1 
[DBG]  Update the agent path 0 | Original local length: 3 | New local length: 3
[DBG]  agent 0 t=0 => decoded (sx,sy)=(2,1) => global_id=660
[DBG]  agent 0 t=1 => decoded (sx,sy)=(3,1) => global_id=692
[DBG]  agent 0 t=2 => decoded (sx,sy)=(4,1) => global_id=724
[DBG]  Complete path of agent 0:
[DBG]    Original: 517 516 548 580 612 613 645 646 647 648 649 650 682 683 684 685 686 687 655 656 657 658 659 660 692 724 756 788 820 821 822 854 855 856 857 858 859 860 861 829 797 798 799 
[DBG]    New:     517 516 548 580 612 613 645 646 647 648 649 650 682 683 684 685 686 687 655 656 657 658 659 660 692 724 756 788 820 821 822 854 855 856 857 858 859 860 861 829 797 798 799 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 517 516 548 580 612 613 645 646 647 648 649 650 682 683 684 685 686 687 655 656 657 658 659 
[DBG]    Local path (in submap): 660 692 724 
[DBG]    Suffix (out of submap): 756 788 820 821 822 854 855 856 857 858 859 860 861 829 797 798 799 
[DBG]  Original agent path length 0 je: 43
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 0: 517, 516, 548, 580, 612, 613, 645, 646, 647, 648, 649, 650, 682, 683, 684, 685, 686, 687, 655, 656, 657, 658, 659, 660, 692, 724, 756, 788, 820, 821, 822, 854, 855, 856, 857, 858, 859, 860, 861, 829, 797, 798, 799, 
[DBG]  Path for agent 0 updated, resulting length: 43
[DBG]  Update the agent path 11 | Original local length: 1 | New local length: 1
[DBG]  agent 11 t=0 => decoded (sx,sy)=(2,0) => global_id=659
[DBG]  Complete path of agent 11:
[DBG]    Original: 990 989 957 956 955 954 922 921 889 889 857 856 824 823 822 821 820 788 756 724 692 691 691 659 658 658 658 658 658 658 658 658 657 625 625 625 625 657 
[DBG]    New:     990 989 957 956 955 954 922 921 889 889 857 856 824 823 822 821 820 788 756 724 692 691 691 659 658 658 658 658 658 658 658 658 657 625 625 625 625 657 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 990 989 957 956 955 954 922 921 889 889 857 856 824 823 822 821 820 788 756 724 692 691 691 
[DBG]    Local path (in submap): 659 
[DBG]    Suffix (out of submap): 658 658 658 658 658 658 658 658 657 625 625 625 625 657 
[DBG]  Original agent path length 11 je: 38
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 1: 990, 989, 957, 956, 955, 954, 922, 921, 889, 889, 857, 856, 824, 823, 822, 821, 820, 788, 756, 724, 692, 691, 691, 659, 658, 658, 658, 658, 658, 658, 658, 658, 657, 625, 625, 625, 625, 657, 
[DBG]  Path for agent 11 updated, resulting length: 38
[DBG]  Update the agent path 28 | Original local length: 11 | New local length: 4
[DBG]  agent 28 t=0 => decoded (sx,sy)=(2,2) => global_id=661
[DBG]  agent 28 t=1 => decoded (sx,sy)=(2,1) => global_id=660
[DBG]  agent 28 t=2 => decoded (sx,sy)=(3,1) => global_id=692
[DBG]  agent 28 t=3 => decoded (sx,sy)=(4,1) => global_id=724
[DBG]  Complete path of agent 28:
[DBG]    Original: 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 660 692 724 756 757 757 757 757 757 757 725 726 727 
[DBG]    New:     661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 660 692 724 756 757 757 757 757 757 757 725 726 727 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 
[DBG]    Local path (in submap): 661 660 692 724 756 757 757 757 757 757 757 
[DBG]    Suffix (out of submap): 725 726 727 
[DBG]  Original agent path length 28 je: 44
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 2: 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 660, 692, 724, 756, 757, 757, 757, 757, 757, 757, 725, 726, 727, 
[DBG]  Path for agent 28 updated, resulting length: 37
[DBG]  Update the agent path 79 | Original local length: 1 | New local length: 1
[DBG]  agent 79 t=0 => decoded (sx,sy)=(0,2) => global_id=597
[DBG]  Complete path of agent 79:
[DBG]    Original: 1004 1005 973 941 909 910 878 846 847 815 783 751 719 720 688 689 657 658 658 659 660 628 596 597 565 566 534 502 470 438 439 440 408 409 377 345 313 281 249 217 218 186 154 122 123 
[DBG]    New:     1004 1005 973 941 909 910 878 846 847 815 783 751 719 720 688 689 657 658 658 659 660 628 596 597 565 566 534 502 470 438 439 440 408 409 377 345 313 281 249 217 218 186 154 122 123 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 1004 1005 973 941 909 910 878 846 847 815 783 751 719 720 688 689 657 658 658 659 660 628 596 
[DBG]    Local path (in submap): 597 
[DBG]    Suffix (out of submap): 565 566 534 502 470 438 439 440 408 409 377 345 313 281 249 217 218 186 154 122 123 
[DBG]  Original agent path length 79 je: 45
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 3: 1004, 1005, 973, 941, 909, 910, 878, 846, 847, 815, 783, 751, 719, 720, 688, 689, 657, 658, 658, 659, 660, 628, 596, 597, 565, 566, 534, 502, 470, 438, 439, 440, 408, 409, 377, 345, 313, 281, 249, 217, 218, 186, 154, 122, 123, 
[DBG]  Path for agent 79 updated, resulting length: 45
[DBG]  Paths successfully updated.
[DBG]  (LNS.cpp) New path for agent 0: 
[DBG]  517, 516, 548, 580, 612, 613, 645, 646, 647, 648, 649, 650, 682, 683, 684, 685, 686, 687, 655, 656, 657, 658, 659, 660, 692, 724, 756, 788, 820, 821, 822, 854, 855, 856, 857, 858, 859, 860, 861, 829, 797, 798, 799, 
[DBG]  (LNS.cpp) New path for agent 11: 
[DBG]  990, 989, 957, 956, 955, 954, 922, 921, 889, 889, 857, 856, 824, 823, 822, 821, 820, 788, 756, 724, 692, 691, 691, 659, 658, 658, 658, 658, 658, 658, 658, 658, 657, 625, 625, 625, 625, 657, 
[DBG]  (LNS.cpp) New path for agent 28: 
[DBG]  661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 660, 692, 724, 756, 757, 757, 757, 757, 757, 757, 725, 726, 727, 
[DBG]  (LNS.cpp) New path for agent 79: 
[DBG]  1004, 1005, 973, 941, 909, 910, 878, 846, 847, 815, 783, 751, 719, 720, 688, 689, 657, 658, 658, 659, 660, 628, 596, 597, 565, 566, 534, 502, 470, 438, 439, 440, 408, 409, 377, 345, 313, 281, 249, 217, 218, 186, 154, 122, 123, 
[DBG]  Delta value: 0.0421687
[DBG]  Rewarding metric index = 1
[DBG]  component_weights = {0.0383385, 0.918811, 0.0135739, 0.0292766}
[DBG]  opSuccess value: 1
[STAT] neighbor.sum_of_costs before recomputation: 159
[STAT] neighbor.old_sum_of_costs before recomputation: 166
[STAT] sum_of_costs before recomputation: 4326
[DBG]  Validate solution immediately after SAT success.
[WARNING] Problem after SAT: Target conflict: agent 42 (len 43) traverses target of agent 28 (len 36) at location 727 at timestep 42
[DBG]  [DEBUG] Attempting immediate repair via init_lns because problem occurred after SAT (should be applied only for conflicts...).
[DBG]  [DEBUG] Passing 150 agents to init_lns (skip=true).
[DBG]  [DEBUG] path_table contents for selected agents (neighbor.agents):
[DBG]    Agent 0 => controlling path length=43
[DBG]    Agent 11 => controlling path length=38
[DBG]    Agent 28 => controlling path length=37
[DBG]    Agent 79 => controlling path length=45
[DBG]  hodnota skip_initial_solution=1
[DBG]  We skip initialSolution => call buildCollisionData()
[DBG]  buildCollisionData() called – skip_initial_solution case.
[DBG]  Agents.size()=150, collision_graph.size()=150
[DBG]  agent 28 => updateCollidingPairs => foundCollision
[DBG]  agent 42 => updateCollidingPairs => foundCollision
[DBG]  Conflicting agent pairs:
[DBG]  agent 28 is in conflict with agent 42
[DBG]  buildCollisionData() => sum_of_costs=4319, num_of_colliding_pairs=1
[DBG]  buildCollisionData done => sum_of_costs=4319, num_of_colliding_pairs=1
[DBG]  sum_of_cost hodnota: 4319
[DBG]  After skip/init build => iteration_stats.back(): sum_of_costs=4319, collisions=1
[DEBUG] Using default neighbor generation strategy for conflicts: 2
[DEBUG] Using default neighbor generation strategy for conflicts: 0
	InitLNS(PP): runtime = 0.00445475, iterations = 3, colliding pairs = 0, initial colliding pairs = 1, solution cost = 4354, initial solution cost = 4319, failed iterations = 0
[DBG]  init_lns->sum_of_costs after init_lns->run: 4354
[DBG]  sum_of_costs after assignment from init_lns->run: 4354
[DBG]  Recomputing sum_of_cost by dividing neighbor.sum_of_costs and neighbor.old_sum_of_costs
[STAT] sum_of_costs after recomputation: 4354
[STAT] Iteration 73
[DBG]  Random chance did not select SAT operator (r=40), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 73
[DBG]  Random chance did not select SAT operator (r=48), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 73
[DBG]  Random chance did not select SAT operator (r=33), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 73
[DBG]  Random chance did not select SAT operator (r=95), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 73
[DBG]  Random chance did not select SAT operator (r=74), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 73
[DBG]  Random chance did not select SAT operator (r=27), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 73
[DBG]  Random chance did not select SAT operator (r=62), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 73
[DBG]  Random chance did not select SAT operator (r=79), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 73
[DBG]  Random chance did not select SAT operator (r=17), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 73
[DBG]  Random chance did not select SAT operator (r=21), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 73
[DBG]  Random chance did not select SAT operator (r=28), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 73
[DBG]  Random chance did not select SAT operator (r=93), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 73
[DBG]  Random chance did not select SAT operator (r=72), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 73
[DBG]  Random chance did not select SAT operator (r=88), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 73
[DBG]  Random chance did not select SAT operator (r=44), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 73
[DBG]  Random chance did not select SAT operator (r=35), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 73
[DBG]  Random chance did not select SAT operator (r=56), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 73
[DBG]  Using SAT operator (destroy+repair SAT).
[DBG]  ====================
[DBG]  SAT destroy operator called.
[DBG]  SAT heuristic: 2
[DBG]  key_agent_id: 28
[DBG]  key_agent_id global path length: 44
[DBG]  Submap content (global positions):
[DBG]  595 596 597 598 599 
[DBG]  627 628 629 630 631 
[DBG]  659 660 661 662 663 
[DBG]  691 692 693 694 695 
[DBG]  723 724 725 726 727 
[DBG]  Map content with agents and obstacles:
[DBG]  X A . X . 
[DBG]  . A . X . 
[DBG]  . . A X X 
[DBG]  . . X X X 
[DBG]  X . . . A 
[DBG]  content of the map structure that we pass to the SAT solver:
[DBG]  -1  1  1  -1  1  
[DBG]  1  1  1  -1  1  
[DBG]  1  1  1  -1  -1  
[DBG]  1  1  -1  -1  -1  
[DBG]  -1  1  1  1  1  
[DBG]  Identifying agents in a submap for rescheduling (when key_agent is there at the time 8):
[DBG]  Agent 28 found intervals in the sub-map:
[DBG]   [0..36] [43..43]
[DBG]  Agent 28 (interval in submap: [0..36]) contains time 8, added to replan.
[DBG]  Agent 46 found intervals in the sub-map:
[DBG]   [4..7]
[DBG]  Agent 46 is not in sub-map at time 8 (intervals: 
[DBG]  [4..7] )
[DBG]  Agent 70 found intervals in the sub-map:
[DBG]   [1..1] [6..6] [8..10]
[DBG]  Agent 70 (interval in submap: [8..10]) contains time 8, added to replan.
[DBG]  Agent 89 found intervals in the sub-map:
[DBG]   [5..12]
[DBG]  Agent 89 (interval in submap: [5..12]) contains time 8, added to replan.
[DBG]  Agent 91 found intervals in the sub-map:
[DBG]   [5..10]
[DBG]  Agent 91 (interval in submap: [5..10]) contains time 8, added to replan.
[DBG]  Agent 28 | Start (global): 661 -> (local): (2, 2) at time 8 | Goal (global): 727 -> (local): (4, 4) at time 36
[DBG]  Agent 70 | Start (global): 727 -> (local): (4, 4) at time 8 | Goal (global): 725 -> (local): (4, 2) at time 10
[DBG]  Agent 89 | Start (global): 596 -> (local): (0, 1) at time 8 | Goal (global): 724 -> (local): (4, 1) at time 12
[DBG]  Agent 91 | Start (global): 628 -> (local): (1, 1) at time 8 | Goal (global): 597 -> (local): (0, 2) at time 10
[DBG]  [REPAIR] SAT destroy operator called.
[DBG]  [REPAIR] SAT operator – launching subproblem FOR OPTIMIZATION.
[DBG]  Creating local paths (sx, sy) in the submap for T_sync = 8
[DBG]    Agent 28 (global paths from T=8 to 36) has local path: (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,1) (3,1) (4,1) (4,2) (4,3) (4,4) 
[DBG]    Agent 70 (global paths from T=8 to 10) has local path: (4,4) (4,3) (4,2) 
[DBG]    Agent 89 (global paths from T=8 to 12) has local path: (0,1) (1,1) (2,1) (3,1) (4,1) 
[DBG]    Agent 91 (global paths from T=8 to 10) has local path: (1,1) (1,2) (0,2) 
[DBG]  Checking input data for SAT solver:
[DBG]    - Number of agents to replan: 4
[DBG]  Agent 28 has the original local path length: 29 => Start (2,2), Goal (4,4)
[DBG]  Agent 70 has the original local path length: 3 => Start (4,4), Goal (4,2)
[DBG]  Agent 89 has the original local path length: 5 => Start (0,1), Goal (4,1)
[DBG]  Agent 91 has the original local path length: 3 => Start (1,1), Goal (0,2)
[DBG]  Start position: (2, 2), (4, 4), (0, 1), (1, 1), 
[DBG]  Goal position: (4, 4), (4, 2), (4, 1), (0, 2), 
[DBG]  SAT instance and solver created.
Currently solving
Instance name: scen
Map name: map
Encoding used: disappear_at_goal
SAT solver used: Kissat
Optimizing function: sum of costs
Number of agents: 4
Mks LB: 7
SoC LB: 18
Delta: 0
Remaining time: 300000 [ms]

Vertex conflict! Agents 1, 2, timestep 5, location 0
Swapping conflict! Agents 1, 2, timestep 5, edge (0,0)
Vertex conflict! Agents 1, 2, timestep 6, location 0
Vertex conflict! Agents 1, 3, timestep 3, location 0
Swapping conflict! Agents 1, 3, timestep 3, edge (0,0)
Vertex conflict! Agents 1, 3, timestep 4, location 0
Swapping conflict! Agents 1, 3, timestep 4, edge (0,0)
Vertex conflict! Agents 1, 3, timestep 5, location 0
Swapping conflict! Agents 1, 3, timestep 5, edge (0,0)
Vertex conflict! Agents 1, 3, timestep 6, location 0
Vertex conflict! Agents 2, 3, timestep 5, location 0
Swapping conflict! Agents 2, 3, timestep 5, edge (0,0)
Vertex conflict! Agents 2, 3, timestep 6, location 0
Found plan [agents = 4] [timesteps = 7]
Agent #0 : 9 8 11 12 13 14 15 
Agent #1 : 15 14 13 0 0 0 0 
Agent #2 : 0 4 8 11 12 0 0 
Agent #3 : 4 5 1 0 0 0 0 

[STAT] Solver returned: 0
[DBG]  Agent (index) 28 | New local path (submap idx):
[DBG]  9 8 11 12 13 14 15 
[DBG]  Agent (index) 70 | New local path (submap idx):
[DBG]  15 14 13 
[DBG]  Agent (index) 89 | New local path (submap idx):
[DBG]  0 4 8 11 12 
[DBG]  Agent (index) 91 | New local path (submap idx):
[DBG]  4 5 1 
[DBG]  Update the agent path 28 | Original local length: 29 | New local length: 7
[DBG]  agent 28 t=0 => decoded (sx,sy)=(2,2) => global_id=661
[DBG]  agent 28 t=1 => decoded (sx,sy)=(2,1) => global_id=660
[DBG]  agent 28 t=2 => decoded (sx,sy)=(3,1) => global_id=692
[DBG]  agent 28 t=3 => decoded (sx,sy)=(4,1) => global_id=724
[DBG]  agent 28 t=4 => decoded (sx,sy)=(4,2) => global_id=725
[DBG]  agent 28 t=5 => decoded (sx,sy)=(4,3) => global_id=726
[DBG]  agent 28 t=6 => decoded (sx,sy)=(4,4) => global_id=727
[DBG]  Complete path of agent 28:
[DBG]    Original: 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 660 692 724 725 726 727 728 728 728 728 728 728 727 
[DBG]    New:     661 661 661 661 661 661 661 661 661 660 692 724 725 726 727 728 728 728 728 728 728 727 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 661 661 661 661 661 661 661 661 
[DBG]    Local path (in submap): 661 660 692 724 725 726 727 728 728 728 728 728 728 727 
[DBG]    Suffix (out of submap): 
[DBG]  Original agent path length 28 je: 44
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 0: 661, 661, 661, 661, 661, 661, 661, 661, 661, 660, 692, 724, 725, 726, 727, 728, 728, 728, 728, 728, 728, 727, 
[DBG]  Path for agent 28 updated, resulting length: 22
[DBG]  Update the agent path 70 | Original local length: 3 | New local length: 3
[DBG]  agent 70 t=0 => decoded (sx,sy)=(4,4) => global_id=727
[DBG]  agent 70 t=1 => decoded (sx,sy)=(4,3) => global_id=726
[DBG]  agent 70 t=2 => decoded (sx,sy)=(4,2) => global_id=725
[DBG]  Complete path of agent 70:
[DBG]    Original: 632 631 632 664 696 728 727 759 727 726 725 757 756 788 787 819 851 850 850 882 914 913 912 944 976 975 974 
[DBG]    New:     632 631 632 664 696 728 727 759 727 726 725 757 756 788 787 819 851 850 850 882 914 913 912 944 976 975 974 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 632 631 632 664 696 728 727 759 
[DBG]    Local path (in submap): 727 726 725 
[DBG]    Suffix (out of submap): 757 756 788 787 819 851 850 850 882 914 913 912 944 976 975 974 
[DBG]  Original agent path length 70 je: 27
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 1: 632, 631, 632, 664, 696, 728, 727, 759, 727, 726, 725, 757, 756, 788, 787, 819, 851, 850, 850, 882, 914, 913, 912, 944, 976, 975, 974, 
[DBG]  Path for agent 70 updated, resulting length: 27
[DBG]  Update the agent path 89 | Original local length: 5 | New local length: 5
[DBG]  agent 89 t=0 => decoded (sx,sy)=(0,1) => global_id=596
[DBG]  agent 89 t=1 => decoded (sx,sy)=(1,1) => global_id=628
[DBG]  agent 89 t=2 => decoded (sx,sy)=(2,1) => global_id=660
[DBG]  agent 89 t=3 => decoded (sx,sy)=(3,1) => global_id=692
[DBG]  agent 89 t=4 => decoded (sx,sy)=(4,1) => global_id=724
[DBG]  Complete path of agent 89:
[DBG]    Original: 437 469 501 533 565 597 596 596 596 628 660 692 724 756 755 787 819 851 883 884 885 886 918 950 982 983 1015 
[DBG]    New:     437 469 501 533 565 597 596 596 596 628 660 692 724 756 755 787 819 851 883 884 885 886 918 950 982 983 1015 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 437 469 501 533 565 597 596 596 
[DBG]    Local path (in submap): 596 628 660 692 724 
[DBG]    Suffix (out of submap): 756 755 787 819 851 883 884 885 886 918 950 982 983 1015 
[DBG]  Original agent path length 89 je: 27
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 2: 437, 469, 501, 533, 565, 597, 596, 596, 596, 628, 660, 692, 724, 756, 755, 787, 819, 851, 883, 884, 885, 886, 918, 950, 982, 983, 1015, 
[DBG]  Path for agent 89 updated, resulting length: 27
[DBG]  Update the agent path 91 | Original local length: 3 | New local length: 3
[DBG]  agent 91 t=0 => decoded (sx,sy)=(1,1) => global_id=628
[DBG]  agent 91 t=1 => decoded (sx,sy)=(1,2) => global_id=629
[DBG]  agent 91 t=2 => decoded (sx,sy)=(0,2) => global_id=597
[DBG]  Complete path of agent 91:
[DBG]    Original: 787 755 756 757 756 724 692 660 628 629 597 565 533 534 502 503 504 472 440 408 409 377 378 378 379 380 381 
[DBG]    New:     787 755 756 757 756 724 692 660 628 629 597 565 533 534 502 503 504 472 440 408 409 377 378 378 379 380 381 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 787 755 756 757 756 724 692 660 
[DBG]    Local path (in submap): 628 629 597 
[DBG]    Suffix (out of submap): 565 533 534 502 503 504 472 440 408 409 377 378 378 379 380 381 
[DBG]  Original agent path length 91 je: 27
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 3: 787, 755, 756, 757, 756, 724, 692, 660, 628, 629, 597, 565, 533, 534, 502, 503, 504, 472, 440, 408, 409, 377, 378, 378, 379, 380, 381, 
[DBG]  Path for agent 91 updated, resulting length: 27
[DBG]  Paths successfully updated.
[DBG]  (LNS.cpp) New path for agent 28: 
[DBG]  661, 661, 661, 661, 661, 661, 661, 661, 661, 660, 692, 724, 725, 726, 727, 728, 728, 728, 728, 728, 728, 727, 
[DBG]  (LNS.cpp) New path for agent 70: 
[DBG]  632, 631, 632, 664, 696, 728, 727, 759, 727, 726, 725, 757, 756, 788, 787, 819, 851, 850, 850, 882, 914, 913, 912, 944, 976, 975, 974, 
[DBG]  (LNS.cpp) New path for agent 89: 
[DBG]  437, 469, 501, 533, 565, 597, 596, 596, 596, 628, 660, 692, 724, 756, 755, 787, 819, 851, 883, 884, 885, 886, 918, 950, 982, 983, 1015, 
[DBG]  (LNS.cpp) New path for agent 91: 
[DBG]  787, 755, 756, 757, 756, 724, 692, 660, 628, 629, 597, 565, 533, 534, 502, 503, 504, 472, 440, 408, 409, 377, 378, 378, 379, 380, 381, 
[DBG]  Delta value: 0.181818
[DBG]  Rewarding metric index = 2
[DBG]  component_weights = {0.0382119, 0.915778, 0.0168304, 0.02918}
[DBG]  opSuccess value: 1
[STAT] neighbor.sum_of_costs before recomputation: 99
[STAT] neighbor.old_sum_of_costs before recomputation: 121
[STAT] sum_of_costs before recomputation: 4354
[DBG]  Validate solution immediately after SAT success.
[WARNING] Problem after SAT: Target conflict: agent 42 (len 43) traverses target of agent 28 (len 21) at location 727 at timestep 42
[DBG]  [DEBUG] Attempting immediate repair via init_lns because problem occurred after SAT (should be applied only for conflicts...).
[DBG]  [DEBUG] Passing 150 agents to init_lns (skip=true).
[DBG]  [DEBUG] path_table contents for selected agents (neighbor.agents):
[DBG]    Agent 28 => controlling path length=22
[DBG]    Agent 70 => controlling path length=27
[DBG]    Agent 89 => controlling path length=27
[DBG]    Agent 91 => controlling path length=27
[DBG]  hodnota skip_initial_solution=1
[DBG]  We skip initialSolution => call buildCollisionData()
[DBG]  buildCollisionData() called – skip_initial_solution case.
[DBG]  Agents.size()=150, collision_graph.size()=150
[DBG]  agent 28 => updateCollidingPairs => foundCollision
[DBG]  agent 42 => updateCollidingPairs => foundCollision
[DBG]  Conflicting agent pairs:
[DBG]  agent 28 is in conflict with agent 42
[DBG]  buildCollisionData() => sum_of_costs=4332, num_of_colliding_pairs=1
[DBG]  buildCollisionData done => sum_of_costs=4332, num_of_colliding_pairs=1
[DBG]  sum_of_cost hodnota: 4332
[DBG]  After skip/init build => iteration_stats.back(): sum_of_costs=4332, collisions=1
[DEBUG] Using default neighbor generation strategy for conflicts: 1
	InitLNS(PP): runtime = 0.00165221, iterations = 2, colliding pairs = 0, initial colliding pairs = 1, solution cost = 4354, initial solution cost = 4332, failed iterations = 0
[DBG]  init_lns->sum_of_costs after init_lns->run: 4354
[DBG]  sum_of_costs after assignment from init_lns->run: 4354
[DBG]  Recomputing sum_of_cost by dividing neighbor.sum_of_costs and neighbor.old_sum_of_costs
[STAT] sum_of_costs after recomputation: 4354
[STAT] Iteration 74
[DBG]  Random chance did not select SAT operator (r=72), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 74
[DBG]  Random chance did not select SAT operator (r=79), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 74
[DBG]  Random chance did not select SAT operator (r=13), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 74
[DBG]  Random chance did not select SAT operator (r=18), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 74
[DBG]  Random chance did not select SAT operator (r=49), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 74
[DBG]  Using SAT operator (destroy+repair SAT).
[DBG]  ====================
[DBG]  SAT destroy operator called.
[DBG]  SAT heuristic: 2
[DBG]  key_agent_id: 28
[DBG]  key_agent_id global path length: 44
[DBG]  Submap content (global positions):
[DBG]  595 596 597 598 599 
[DBG]  627 628 629 630 631 
[DBG]  659 660 661 662 663 
[DBG]  691 692 693 694 695 
[DBG]  723 724 725 726 727 
[DBG]  Map content with agents and obstacles:
[DBG]  X . . X . 
[DBG]  A . . X . 
[DBG]  . . A X X 
[DBG]  . A X X X 
[DBG]  X . . . . 
[DBG]  content of the map structure that we pass to the SAT solver:
[DBG]  -1  1  1  -1  1  
[DBG]  1  1  1  -1  1  
[DBG]  1  1  1  -1  -1  
[DBG]  1  1  -1  -1  -1  
[DBG]  -1  1  1  1  1  
[DBG]  Identifying agents in a submap for rescheduling (when key_agent is there at the time 11):
[DBG]  Agent 28 found intervals in the sub-map:
[DBG]   [0..33] [41..43]
[DBG]  Agent 28 (interval in submap: [0..33]) contains time 11, added to replan.
[DBG]  Agent 86 found intervals in the sub-map:
[DBG]   [10..14]
[DBG]  Agent 86 (interval in submap: [10..14]) contains time 11, added to replan.
[DBG]  Agent 89 found intervals in the sub-map:
[DBG]   [5..12]
[DBG]  Agent 89 (interval in submap: [5..12]) contains time 11, added to replan.
[DBG]  Agent 28 | Start (global): 661 -> (local): (2, 2) at time 11 | Goal (global): 724 -> (local): (4, 1) at time 33
[DBG]  Agent 86 | Start (global): 627 -> (local): (1, 0) at time 11 | Goal (global): 597 -> (local): (0, 2) at time 14
[DBG]  Agent 89 | Start (global): 692 -> (local): (3, 1) at time 11 | Goal (global): 724 -> (local): (4, 1) at time 12
[DBG]  [REPAIR] SAT destroy operator called.
[DBG]  [REPAIR] SAT operator – launching subproblem FOR OPTIMIZATION.
[DBG]  Creating local paths (sx, sy) in the submap for T_sync = 11
[DBG]    Agent 28 (global paths from T=11 to 33) has local path: (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,1) (3,1) (4,1) 
[DBG]    Agent 86 (global paths from T=11 to 14) has local path: (1,0) (1,1) (0,1) (0,2) 
[DBG]    Agent 89 (global paths from T=11 to 12) has local path: (3,1) (4,1) 
[DBG]  Checking input data for SAT solver:
[DBG]    - Number of agents to replan: 3
[DBG]  Agent 28 has the original local path length: 23 => Start (2,2), Goal (4,1)
[DBG]  Agent 86 has the original local path length: 4 => Start (1,0), Goal (0,2)
[DBG]  Agent 89 has the original local path length: 2 => Start (3,1), Goal (4,1)
[DBG]  Start position: (2, 2), (1, 0), (3, 1), 
[DBG]  Goal position: (4, 1), (0, 2), (4, 1), 
[DBG]  SAT instance and solver created.
Currently solving
Instance name: scen
Map name: map
Encoding used: disappear_at_goal
SAT solver used: Kissat
Optimizing function: sum of costs
Number of agents: 3
Mks LB: 4
SoC LB: 10
Delta: 0
Remaining time: 300000 [ms]

Found plan [agents = 3] [timesteps = 4]
Agent #0 : 9 8 11 12 
Agent #1 : 3 4 5 1 
Agent #2 : 11 12 0 0 

[STAT] Solver returned: 0
[DBG]  Agent (index) 28 | New local path (submap idx):
[DBG]  9 8 11 12 
[DBG]  Agent (index) 86 | New local path (submap idx):
[DBG]  3 4 5 1 
[DBG]  Agent (index) 89 | New local path (submap idx):
[DBG]  11 12 
[DBG]  Update the agent path 28 | Original local length: 23 | New local length: 4
[DBG]  agent 28 t=0 => decoded (sx,sy)=(2,2) => global_id=661
[DBG]  agent 28 t=1 => decoded (sx,sy)=(2,1) => global_id=660
[DBG]  agent 28 t=2 => decoded (sx,sy)=(3,1) => global_id=692
[DBG]  agent 28 t=3 => decoded (sx,sy)=(4,1) => global_id=724
[DBG]  Complete path of agent 28:
[DBG]    Original: 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 660 692 724 756 757 757 757 757 757 757 725 726 727 
[DBG]    New:     661 661 661 661 661 661 661 661 661 661 661 661 660 692 724 756 757 757 757 757 757 757 725 726 727 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 661 661 661 661 661 661 661 661 661 661 661 
[DBG]    Local path (in submap): 661 660 692 724 756 757 757 757 757 757 757 725 726 727 
[DBG]    Suffix (out of submap): 
[DBG]  Original agent path length 28 je: 44
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 0: 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 660, 692, 724, 756, 757, 757, 757, 757, 757, 757, 725, 726, 727, 
[DBG]  Path for agent 28 updated, resulting length: 25
[DBG]  Update the agent path 86 | Original local length: 4 | New local length: 4
[DBG]  agent 86 t=0 => decoded (sx,sy)=(1,0) => global_id=627
[DBG]  agent 86 t=1 => decoded (sx,sy)=(1,1) => global_id=628
[DBG]  agent 86 t=2 => decoded (sx,sy)=(1,2) => global_id=629
[DBG]  agent 86 t=3 => decoded (sx,sy)=(0,2) => global_id=597
[DBG]  Complete path of agent 86:
[DBG]    Original: 781 782 783 751 719 687 688 656 657 658 659 627 628 596 597 565 533 534 534 502 503 504 505 506 538 539 540 541 
[DBG]    New:     781 782 783 751 719 687 688 656 657 658 659 627 628 629 597 565 533 534 534 502 503 504 505 506 538 539 540 541 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 781 782 783 751 719 687 688 656 657 658 659 
[DBG]    Local path (in submap): 627 628 629 597 
[DBG]    Suffix (out of submap): 565 533 534 534 502 503 504 505 506 538 539 540 541 
[DBG]  Original agent path length 86 je: 28
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 1: 781, 782, 783, 751, 719, 687, 688, 656, 657, 658, 659, 627, 628, 629, 597, 565, 533, 534, 534, 502, 503, 504, 505, 506, 538, 539, 540, 541, 
[DBG]  Path for agent 86 updated, resulting length: 28
[DBG]  Update the agent path 89 | Original local length: 2 | New local length: 2
[DBG]  agent 89 t=0 => decoded (sx,sy)=(3,1) => global_id=692
[DBG]  agent 89 t=1 => decoded (sx,sy)=(4,1) => global_id=724
[DBG]  Complete path of agent 89:
[DBG]    Original: 437 469 501 533 565 597 596 596 596 628 660 692 724 756 755 787 819 851 883 884 885 886 918 950 982 983 1015 
[DBG]    New:     437 469 501 533 565 597 596 596 596 628 660 692 724 756 755 787 819 851 883 884 885 886 918 950 982 983 1015 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 437 469 501 533 565 597 596 596 596 628 660 
[DBG]    Local path (in submap): 692 724 
[DBG]    Suffix (out of submap): 756 755 787 819 851 883 884 885 886 918 950 982 983 1015 
[DBG]  Original agent path length 89 je: 27
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 2: 437, 469, 501, 533, 565, 597, 596, 596, 596, 628, 660, 692, 724, 756, 755, 787, 819, 851, 883, 884, 885, 886, 918, 950, 982, 983, 1015, 
[DBG]  Path for agent 89 updated, resulting length: 27
[DBG]  Paths successfully updated.
[DBG]  (LNS.cpp) New path for agent 28: 
[DBG]  661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 660, 692, 724, 756, 757, 757, 757, 757, 757, 757, 725, 726, 727, 
[DBG]  (LNS.cpp) New path for agent 86: 
[DBG]  781, 782, 783, 751, 719, 687, 688, 656, 657, 658, 659, 627, 628, 629, 597, 565, 533, 534, 534, 502, 503, 504, 505, 506, 538, 539, 540, 541, 
[DBG]  (LNS.cpp) New path for agent 89: 
[DBG]  437, 469, 501, 533, 565, 597, 596, 596, 596, 628, 660, 692, 724, 756, 755, 787, 819, 851, 883, 884, 885, 886, 918, 950, 982, 983, 1015, 
[DBG]  Delta value: 0.197917
[DBG]  Rewarding metric index = 1
[DBG]  component_weights = {0.0308413, 0.932023, 0.013584, 0.0235515}
[DBG]  opSuccess value: 1
[STAT] neighbor.sum_of_costs before recomputation: 77
[STAT] neighbor.old_sum_of_costs before recomputation: 96
[STAT] sum_of_costs before recomputation: 4354
[DBG]  Validate solution immediately after SAT success.
[WARNING] Problem after SAT: Target conflict: agent 42 (len 43) traverses target of agent 28 (len 24) at location 727 at timestep 42
[DBG]  [DEBUG] Attempting immediate repair via init_lns because problem occurred after SAT (should be applied only for conflicts...).
[DBG]  [DEBUG] Passing 150 agents to init_lns (skip=true).
[DBG]  [DEBUG] path_table contents for selected agents (neighbor.agents):
[DBG]    Agent 28 => controlling path length=25
[DBG]    Agent 86 => controlling path length=28
[DBG]    Agent 89 => controlling path length=27
[DBG]  hodnota skip_initial_solution=1
[DBG]  We skip initialSolution => call buildCollisionData()
[DBG]  buildCollisionData() called – skip_initial_solution case.
[DBG]  Agents.size()=150, collision_graph.size()=150
[DBG]  agent 28 => updateCollidingPairs => foundCollision
[DBG]  agent 42 => updateCollidingPairs => foundCollision
[DBG]  Conflicting agent pairs:
[DBG]  agent 28 is in conflict with agent 42
[DBG]  buildCollisionData() => sum_of_costs=4335, num_of_colliding_pairs=1
[DBG]  buildCollisionData done => sum_of_costs=4335, num_of_colliding_pairs=1
[DBG]  sum_of_cost hodnota: 4335
[DBG]  After skip/init build => iteration_stats.back(): sum_of_costs=4335, collisions=1
[DEBUG] Using default neighbor generation strategy for conflicts: 1
[DEBUG] Using default neighbor generation strategy for conflicts: 2
	InitLNS(PP): runtime = 0.00367625, iterations = 3, colliding pairs = 0, initial colliding pairs = 1, solution cost = 4347, initial solution cost = 4335, failed iterations = 0
[DBG]  init_lns->sum_of_costs after init_lns->run: 4347
[DBG]  sum_of_costs after assignment from init_lns->run: 4347
[DBG]  Recomputing sum_of_cost by dividing neighbor.sum_of_costs and neighbor.old_sum_of_costs
[STAT] sum_of_costs after recomputation: 4347
[STAT] Iteration 75
[DBG]  Using SAT operator (destroy+repair SAT).
[DBG]  ====================
[DBG]  SAT destroy operator called.
[DBG]  SAT heuristic: 2
[DBG]  key_agent_id: 28
[DBG]  key_agent_id global path length: 44
[DBG]  Submap content (global positions):
[DBG]  660 661 662 663 664 
[DBG]  692 693 694 695 696 
[DBG]  724 725 726 727 728 
[DBG]  756 757 758 759 760 
[DBG]  788 789 790 791 792 
[DBG]  Map content with agents and obstacles:
[DBG]  . . X X . 
[DBG]  . X X X . 
[DBG]  . . A A . 
[DBG]  . . X . X 
[DBG]  A X . X . 
[DBG]  content of the map structure that we pass to the SAT solver:
[DBG]  1  1  -1  -1  1  
[DBG]  1  -1  -1  -1  1  
[DBG]  1  1  1  1  1  
[DBG]  1  1  -1  1  -1  
[DBG]  1  -1  1  -1  1  
[DBG]  Identifying agents in a submap for rescheduling (when key_agent is there at the time 42):
[DBG]  Agent 28 found intervals in the sub-map:
[DBG]   [0..43]
[DBG]  Agent 28 (interval in submap: [0..43]) contains time 42, added to replan.
[DBG]  Agent 42 found intervals in the sub-map:
[DBG]   [38..43]
[DBG]  Agent 42 (interval in submap: [38..43]) contains time 42, added to replan.
[DBG]  Agent 55 found intervals in the sub-map:
[DBG]   [40..40]
[DBG]  Agent 55 is not in sub-map at time 42 (intervals: 
[DBG]  [40..40] )
[DBG]  Agent 69 found intervals in the sub-map:
[DBG]   [38..42]
[DBG]  Agent 69 (interval in submap: [38..42]) contains time 42, added to replan.
[DBG]  Agent 28 | Start (global): 726 -> (local): (2, 2) at time 42 | Goal (global): 727 -> (local): (2, 3) at time 43
[DBG]  Agent 42 | Start (global): 727 -> (local): (2, 3) at time 42 | Goal (global): 759 -> (local): (3, 3) at time 43
[DBG]  Agent 69 | Start (global): 788 -> (local): (4, 0) at time 42 | Goal (global): 788 -> (local): (4, 0) at time 42
[DBG]  [REPAIR] SAT destroy operator called.
[DBG]  [REPAIR] SAT operator – launching subproblem FOR OPTIMIZATION.
[DBG]  Creating local paths (sx, sy) in the submap for T_sync = 42
[DBG]    Agent 28 (global paths from T=42 to 43) has local path: (2,2) (2,3) 
[DBG]    Agent 42 (global paths from T=42 to 43) has local path: (2,3) (3,3) 
[DBG]    Agent 69 (global paths from T=42 to 42) has local path: (4,0) 
[DBG]  Checking input data for SAT solver:
[DBG]    - Number of agents to replan: 3
[DBG]  Agent 28 has the original local path length: 2 => Start (2,2), Goal (2,3)
[DBG]  Agent 42 has the original local path length: 2 => Start (2,3), Goal (3,3)
[DBG]  Agent 69 has the original local path length: 1 => Start (4,0), Goal (4,0)
[DBG]  Start position: (2, 2), (2, 3), (4, 0), 
[DBG]  Goal position: (2, 3), (3, 3), (4, 0), 
[DBG]  SAT instance and solver created.
Currently solving
Instance name: scen
Map name: map
Encoding used: disappear_at_goal
SAT solver used: Kissat
Optimizing function: sum of costs
Number of agents: 3
Mks LB: 2
SoC LB: 5
Delta: 0
Remaining time: 300000 [ms]

Found plan [agents = 3] [timesteps = 2]
Agent #0 : 7 8 
Agent #1 : 8 12 
Agent #2 : 13 0 

[STAT] Solver returned: 0
[DBG]  Agent (index) 28 | New local path (submap idx):
[DBG]  7 8 
[DBG]  Agent (index) 42 | New local path (submap idx):
[DBG]  8 12 
[DBG]  Agent (index) 69 | New local path (submap idx):
[DBG]  13 
[DBG]  Update the agent path 28 | Original local length: 2 | New local length: 2
[DBG]  agent 28 t=0 => decoded (sx,sy)=(2,2) => global_id=726
[DBG]  agent 28 t=1 => decoded (sx,sy)=(2,3) => global_id=727
[DBG]  Complete path of agent 28:
[DBG]    Original: 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 660 692 724 756 757 757 757 757 757 757 725 726 727 
[DBG]    New:     661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 660 692 724 756 757 757 757 757 757 757 725 726 727 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 660 692 724 756 757 757 757 757 757 757 725 
[DBG]    Local path (in submap): 726 727 
[DBG]    Suffix (out of submap): 
[DBG]  Original agent path length 28 je: 44
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 0: 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 660, 692, 724, 756, 757, 757, 757, 757, 757, 757, 725, 726, 727, 
[DBG]  Path for agent 28 updated, resulting length: 44
[DBG]  Update the agent path 42 | Original local length: 2 | New local length: 2
[DBG]  agent 42 t=0 => decoded (sx,sy)=(2,3) => global_id=727
[DBG]  agent 42 t=1 => decoded (sx,sy)=(3,3) => global_id=759
[DBG]  Complete path of agent 42:
[DBG]    Original: 224 192 193 194 226 227 228 260 261 293 325 357 389 390 391 423 424 424 424 425 426 427 428 460 492 524 556 588 589 590 591 623 655 656 657 658 659 691 692 724 725 726 727 759 
[DBG]    New:     224 192 193 194 226 227 228 260 261 293 325 357 389 390 391 423 424 424 424 425 426 427 428 460 492 524 556 588 589 590 591 623 655 656 657 658 659 691 692 724 725 726 727 759 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 224 192 193 194 226 227 228 260 261 293 325 357 389 390 391 423 424 424 424 425 426 427 428 460 492 524 556 588 589 590 591 623 655 656 657 658 659 691 692 724 725 726 
[DBG]    Local path (in submap): 727 759 
[DBG]    Suffix (out of submap): 
[DBG]  Original agent path length 42 je: 44
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 1: 224, 192, 193, 194, 226, 227, 228, 260, 261, 293, 325, 357, 389, 390, 391, 423, 424, 424, 424, 425, 426, 427, 428, 460, 492, 524, 556, 588, 589, 590, 591, 623, 655, 656, 657, 658, 659, 691, 692, 724, 725, 726, 727, 759, 
[DBG]  Path for agent 42 updated, resulting length: 44
[DBG]  Update the agent path 69 | Original local length: 1 | New local length: 1
[DBG]  agent 69 t=0 => decoded (sx,sy)=(4,0) => global_id=788
[DBG]  Complete path of agent 69:
[DBG]    Original: 4 5 37 69 70 71 72 73 74 106 107 108 109 141 173 205 206 207 239 271 303 335 367 368 400 401 433 465 466 467 468 469 501 533 565 597 629 628 660 692 724 756 788 820 
[DBG]    New:     4 5 37 69 70 71 72 73 74 106 107 108 109 141 173 205 206 207 239 271 303 335 367 368 400 401 433 465 466 467 468 469 501 533 565 597 629 628 660 692 724 756 788 820 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 4 5 37 69 70 71 72 73 74 106 107 108 109 141 173 205 206 207 239 271 303 335 367 368 400 401 433 465 466 467 468 469 501 533 565 597 629 628 660 692 724 756 
[DBG]    Local path (in submap): 788 
[DBG]    Suffix (out of submap): 820 
[DBG]  Original agent path length 69 je: 44
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 2: 4, 5, 37, 69, 70, 71, 72, 73, 74, 106, 107, 108, 109, 141, 173, 205, 206, 207, 239, 271, 303, 335, 367, 368, 400, 401, 433, 465, 466, 467, 468, 469, 501, 533, 565, 597, 629, 628, 660, 692, 724, 756, 788, 820, 
[DBG]  Path for agent 69 updated, resulting length: 44
[DBG]  Paths successfully updated.
[DBG]  (LNS.cpp) New path for agent 28: 
[DBG]  661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 660, 692, 724, 756, 757, 757, 757, 757, 757, 757, 725, 726, 727, 
[DBG]  (LNS.cpp) New path for agent 42: 
[DBG]  224, 192, 193, 194, 226, 227, 228, 260, 261, 293, 325, 357, 389, 390, 391, 423, 424, 424, 424, 425, 426, 427, 428, 460, 492, 524, 556, 588, 589, 590, 591, 623, 655, 656, 657, 658, 659, 691, 692, 724, 725, 726, 727, 759, 
[DBG]  (LNS.cpp) New path for agent 69: 
[DBG]  4, 5, 37, 69, 70, 71, 72, 73, 74, 106, 107, 108, 109, 141, 173, 205, 206, 207, 239, 271, 303, 335, 367, 368, 400, 401, 433, 465, 466, 467, 468, 469, 501, 533, 565, 597, 629, 628, 660, 692, 724, 756, 788, 820, 
[DBG]  Delta value: 0
[DBG]  Rewarding metric index = 1
[DBG]  component_weights = {0.0293992, 0.935202, 0.0129488, 0.0224502}
[DBG]  opSuccess value: 1
[STAT] neighbor.sum_of_costs before recomputation: 129
[STAT] neighbor.old_sum_of_costs before recomputation: 129
[STAT] sum_of_costs before recomputation: 4347
[DBG]  Validate solution immediately after SAT success.
[DBG]  No problems after SAT replan.
[DBG]  Recomputing sum_of_cost by dividing neighbor.sum_of_costs and neighbor.old_sum_of_costs
[STAT] sum_of_costs after recomputation: 4347
[STAT] Iteration 76
[DBG]  Random chance did not select SAT operator (r=44), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 76
[DBG]  Using SAT operator (destroy+repair SAT).
[DBG]  ====================
[DBG]  SAT destroy operator called.
[DBG]  SAT heuristic: 2
[DBG]  key_agent_id: 28
[DBG]  key_agent_id global path length: 44
[DBG]  Submap content (global positions):
[DBG]  595 596 597 598 599 
[DBG]  627 628 629 630 631 
[DBG]  659 660 661 662 663 
[DBG]  691 692 693 694 695 
[DBG]  723 724 725 726 727 
[DBG]  Map content with agents and obstacles:
[DBG]  X . . X . 
[DBG]  . . . X . 
[DBG]  . . A X X 
[DBG]  . . X X X 
[DBG]  X A . . . 
[DBG]  content of the map structure that we pass to the SAT solver:
[DBG]  -1  1  1  -1  1  
[DBG]  1  1  1  -1  1  
[DBG]  1  1  1  -1  -1  
[DBG]  1  1  -1  -1  -1  
[DBG]  -1  1  1  1  1  
[DBG]  Identifying agents in a submap for rescheduling (when key_agent is there at the time 3):
[DBG]  Agent 7 found intervals in the sub-map:
[DBG]  
[DBG]  Agent 7 is not in sub-map at time 3 (intervals: 
[DBG]  )
[DBG]  Agent 17 found intervals in the sub-map:
[DBG]  
[DBG]  Agent 17 is not in sub-map at time 3 (intervals: 
[DBG]  )
[DBG]  Agent 28 found intervals in the sub-map:
[DBG]   [0..33] [41..43]
[DBG]  Agent 28 (interval in submap: [0..33]) contains time 3, added to replan.
[DBG]  Agent 108 found intervals in the sub-map:
[DBG]   [0..4]
[DBG]  Agent 108 (interval in submap: [0..4]) contains time 3, added to replan.
[DBG]  Agent 28 | Start (global): 661 -> (local): (2, 2) at time 3 | Goal (global): 724 -> (local): (4, 1) at time 33
[DBG]  Agent 108 | Start (global): 724 -> (local): (4, 1) at time 3 | Goal (global): 725 -> (local): (4, 2) at time 4
[DBG]  [REPAIR] SAT destroy operator called.
[DBG]  [REPAIR] SAT operator – launching subproblem FOR OPTIMIZATION.
[DBG]  Creating local paths (sx, sy) in the submap for T_sync = 3
[DBG]    Agent 28 (global paths from T=3 to 33) has local path: (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,1) (3,1) (4,1) 
[DBG]    Agent 108 (global paths from T=3 to 4) has local path: (4,1) (4,2) 
[DBG]  Checking input data for SAT solver:
[DBG]    - Number of agents to replan: 2
[DBG]  Agent 28 has the original local path length: 31 => Start (2,2), Goal (4,1)
[DBG]  Agent 108 has the original local path length: 2 => Start (4,1), Goal (4,2)
[DBG]  Start position: (2, 2), (4, 1), 
[DBG]  Goal position: (4, 1), (4, 2), 
[DBG]  SAT instance and solver created.
Currently solving
Instance name: scen
Map name: map
Encoding used: disappear_at_goal
SAT solver used: Kissat
Optimizing function: sum of costs
Number of agents: 2
Mks LB: 4
SoC LB: 6
Delta: 0
Remaining time: 300000 [ms]

Found plan [agents = 2] [timesteps = 4]
Agent #0 : 9 8 11 12 
Agent #1 : 12 13 0 0 

[STAT] Solver returned: 0
[DBG]  Agent (index) 28 | New local path (submap idx):
[DBG]  9 8 11 12 
[DBG]  Agent (index) 108 | New local path (submap idx):
[DBG]  12 13 
[DBG]  Update the agent path 28 | Original local length: 31 | New local length: 4
[DBG]  agent 28 t=0 => decoded (sx,sy)=(2,2) => global_id=661
[DBG]  agent 28 t=1 => decoded (sx,sy)=(2,1) => global_id=660
[DBG]  agent 28 t=2 => decoded (sx,sy)=(3,1) => global_id=692
[DBG]  agent 28 t=3 => decoded (sx,sy)=(4,1) => global_id=724
[DBG]  Complete path of agent 28:
[DBG]    Original: 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 660 692 724 756 757 757 757 757 757 757 725 726 727 
[DBG]    New:     661 661 661 661 660 692 724 756 757 757 757 757 757 757 725 726 727 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 661 661 661 
[DBG]    Local path (in submap): 661 660 692 724 756 757 757 757 757 757 757 725 726 727 
[DBG]    Suffix (out of submap): 
[DBG]  Original agent path length 28 je: 44
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 0: 661, 661, 661, 661, 660, 692, 724, 756, 757, 757, 757, 757, 757, 757, 725, 726, 727, 
[DBG]  Path for agent 28 updated, resulting length: 17
[DBG]  Update the agent path 108 | Original local length: 2 | New local length: 2
[DBG]  agent 108 t=0 => decoded (sx,sy)=(4,1) => global_id=724
[DBG]  agent 108 t=1 => decoded (sx,sy)=(4,2) => global_id=725
[DBG]  Complete path of agent 108:
[DBG]    Original: 628 660 692 724 725 757 756 788 820 821 822 854 886 918 919 920 952 953 954 955 956 957 989 1021 
[DBG]    New:     628 660 692 724 725 757 756 788 820 821 822 854 886 918 919 920 952 953 954 955 956 957 989 1021 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 628 660 692 
[DBG]    Local path (in submap): 724 725 
[DBG]    Suffix (out of submap): 757 756 788 820 821 822 854 886 918 919 920 952 953 954 955 956 957 989 1021 
[DBG]  Original agent path length 108 je: 24
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 1: 628, 660, 692, 724, 725, 757, 756, 788, 820, 821, 822, 854, 886, 918, 919, 920, 952, 953, 954, 955, 956, 957, 989, 1021, 
[DBG]  Path for agent 108 updated, resulting length: 24
[DBG]  Paths successfully updated.
[DBG]  (LNS.cpp) New path for agent 28: 
[DBG]  661, 661, 661, 661, 660, 692, 724, 756, 757, 757, 757, 757, 757, 757, 725, 726, 727, 
[DBG]  (LNS.cpp) New path for agent 108: 
[DBG]  628, 660, 692, 724, 725, 757, 756, 788, 820, 821, 822, 854, 886, 918, 919, 920, 952, 953, 954, 955, 956, 957, 989, 1021, 
[DBG]  Delta value: 0.409091
[DBG]  Rewarding metric index = 1
[DBG]  component_weights = {0.0202482, 0.955371, 0.00891829, 0.0154622}
[DBG]  opSuccess value: 1
[STAT] neighbor.sum_of_costs before recomputation: 39
[STAT] neighbor.old_sum_of_costs before recomputation: 66
[STAT] sum_of_costs before recomputation: 4347
[DBG]  Validate solution immediately after SAT success.
[WARNING] Problem after SAT: Target conflict: agent 42 (len 43) traverses target of agent 28 (len 16) at location 727 at timestep 42
[DBG]  [DEBUG] Attempting immediate repair via init_lns because problem occurred after SAT (should be applied only for conflicts...).
[DBG]  [DEBUG] Passing 150 agents to init_lns (skip=true).
[DBG]  [DEBUG] path_table contents for selected agents (neighbor.agents):
[DBG]    Agent 28 => controlling path length=17
[DBG]    Agent 108 => controlling path length=24
[DBG]  hodnota skip_initial_solution=1
[DBG]  We skip initialSolution => call buildCollisionData()
[DBG]  buildCollisionData() called – skip_initial_solution case.
[DBG]  Agents.size()=150, collision_graph.size()=150
[DBG]  agent 28 => updateCollidingPairs => foundCollision
[DBG]  agent 42 => updateCollidingPairs => foundCollision
[DBG]  agent 70 => updateCollidingPairs => foundCollision
[DBG]  agent 91 => updateCollidingPairs => foundCollision
[DBG]  Conflicting agent pairs:
[DBG]  agent 28 is in conflict with agent 42
[DBG]  agent 28 is in conflict with agent 70
[DBG]  agent 28 is in conflict with agent 91
[DBG]  buildCollisionData() => sum_of_costs=4320, num_of_colliding_pairs=3
[DBG]  buildCollisionData done => sum_of_costs=4320, num_of_colliding_pairs=3
[DBG]  sum_of_cost hodnota: 4320
[DBG]  After skip/init build => iteration_stats.back(): sum_of_costs=4320, collisions=3
[DEBUG] Using default neighbor generation strategy for conflicts: 2
[DEBUG] Using default neighbor generation strategy for conflicts: 2
[DEBUG] Using default neighbor generation strategy for conflicts: 2
[DEBUG] Using default neighbor generation strategy for conflicts: 2
[DEBUG] Using default neighbor generation strategy for conflicts: 1
[DEBUG] Using default neighbor generation strategy for conflicts: 2
[DEBUG] Using default neighbor generation strategy for conflicts: 0
	InitLNS(PP): runtime = 0.00887125, iterations = 8, colliding pairs = 0, initial colliding pairs = 3, solution cost = 4340, initial solution cost = 4320, failed iterations = 0
[DBG]  init_lns->sum_of_costs after init_lns->run: 4340
[DBG]  sum_of_costs after assignment from init_lns->run: 4340
[DBG]  Recomputing sum_of_cost by dividing neighbor.sum_of_costs and neighbor.old_sum_of_costs
[STAT] sum_of_costs after recomputation: 4340
[STAT] Iteration 77
[DBG]  Random chance did not select SAT operator (r=97), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 77
[DBG]  Using SAT operator (destroy+repair SAT).
[DBG]  ====================
[DBG]  SAT destroy operator called.
[DBG]  SAT heuristic: 2
[DBG]  key_agent_id: 28
[DBG]  key_agent_id global path length: 44
[DBG]  Submap content (global positions):
[DBG]  595 596 597 598 599 
[DBG]  627 628 629 630 631 
[DBG]  659 660 661 662 663 
[DBG]  691 692 693 694 695 
[DBG]  723 724 725 726 727 
[DBG]  Map content with agents and obstacles:
[DBG]  X . A X . 
[DBG]  . . . X . 
[DBG]  . . A X X 
[DBG]  . . X X X 
[DBG]  X A . . . 
[DBG]  content of the map structure that we pass to the SAT solver:
[DBG]  -1  1  1  -1  1  
[DBG]  1  1  1  -1  1  
[DBG]  1  1  1  -1  -1  
[DBG]  1  1  -1  -1  -1  
[DBG]  -1  1  1  1  1  
[DBG]  Identifying agents in a submap for rescheduling (when key_agent is there at the time 5):
[DBG]  Agent 28 found intervals in the sub-map:
[DBG]   [0..34] [41..43]
[DBG]  Agent 28 (interval in submap: [0..34]) contains time 5, added to replan.
[DBG]  Agent 46 found intervals in the sub-map:
[DBG]   [5..10]
[DBG]  Agent 46 (interval in submap: [5..10]) contains time 5, added to replan.
[DBG]  Agent 89 found intervals in the sub-map:
[DBG]   [5..12]
[DBG]  Agent 89 (interval in submap: [5..12]) contains time 5, added to replan.
[DBG]  Agent 91 found intervals in the sub-map:
[DBG]   [6..13]
[DBG]  Agent 91 is not in sub-map at time 5 (intervals: 
[DBG]  [6..13] )
[DBG]  Agent 28 | Start (global): 661 -> (local): (2, 2) at time 5 | Goal (global): 725 -> (local): (4, 2) at time 34
[DBG]  Agent 46 | Start (global): 724 -> (local): (4, 1) at time 5 | Goal (global): 597 -> (local): (0, 2) at time 10
[DBG]  Agent 89 | Start (global): 597 -> (local): (0, 2) at time 5 | Goal (global): 724 -> (local): (4, 1) at time 12
[DBG]  [REPAIR] SAT destroy operator called.
[DBG]  [REPAIR] SAT operator – launching subproblem FOR OPTIMIZATION.
[DBG]  Creating local paths (sx, sy) in the submap for T_sync = 5
[DBG]    Agent 28 (global paths from T=5 to 34) has local path: (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,1) (3,1) (4,1) (4,2) 
[DBG]    Agent 46 (global paths from T=5 to 10) has local path: (4,1) (3,1) (2,1) (1,1) (1,2) (0,2) 
[DBG]    Agent 89 (global paths from T=5 to 12) has local path: (0,2) (0,1) (0,1) (0,1) (1,1) (2,1) (3,1) (4,1) 
[DBG]  Checking input data for SAT solver:
[DBG]    - Number of agents to replan: 3
[DBG]  Agent 28 has the original local path length: 30 => Start (2,2), Goal (4,2)
[DBG]  Agent 46 has the original local path length: 6 => Start (4,1), Goal (0,2)
[DBG]  Agent 89 has the original local path length: 8 => Start (0,2), Goal (4,1)
[DBG]  Start position: (2, 2), (4, 1), (0, 2), 
[DBG]  Goal position: (4, 2), (0, 2), (4, 1), 
[DBG]  SAT instance and solver created.
Currently solving
Instance name: scen
Map name: map
Encoding used: disappear_at_goal
SAT solver used: Kissat
Optimizing function: sum of costs
Number of agents: 3
Mks LB: 6
SoC LB: 17
Delta: 0
Remaining time: 300000 [ms]

[STAT] Solver returned: -1
[DBG]  SAT solver failed.
[STAT] SAT solver failed to find a valid solution.
[DBG]  ====================
[DBG]  SAT destroy operator called.
[DBG]  SAT heuristic: 2
[DBG]  key_agent_id: 28
[DBG]  key_agent_id global path length: 44
[DBG]  Submap content (global positions):
[DBG]  595 596 597 598 599 
[DBG]  627 628 629 630 631 
[DBG]  659 660 661 662 663 
[DBG]  691 692 693 694 695 
[DBG]  723 724 725 726 727 
[DBG]  Map content with agents and obstacles:
[DBG]  X . . X . 
[DBG]  . A A X . 
[DBG]  . . A X X 
[DBG]  . . X X X 
[DBG]  X . . . . 
[DBG]  content of the map structure that we pass to the SAT solver:
[DBG]  -1  1  1  -1  1  
[DBG]  1  1  1  -1  1  
[DBG]  1  1  1  -1  -1  
[DBG]  1  1  -1  -1  -1  
[DBG]  -1  1  1  1  1  
[DBG]  Identifying agents in a submap for rescheduling (when key_agent is there at the time 21):
[DBG]  Agent 11 found intervals in the sub-map:
[DBG]  
[DBG]  Agent 11 is not in sub-map at time 21 (intervals: 
[DBG]  )
[DBG]  Agent 28 found intervals in the sub-map:
[DBG]   [0..34] [41..43]
[DBG]  Agent 28 (interval in submap: [0..34]) contains time 21, added to replan.
[DBG]  Agent 30 found intervals in the sub-map:
[DBG]  
[DBG]  Agent 30 is not in sub-map at time 21 (intervals: 
[DBG]  )
[DBG]  Agent 56 found intervals in the sub-map:
[DBG]  
[DBG]  Agent 56 is not in sub-map at time 21 (intervals: 
[DBG]  )
[DBG]  Agent 62 found intervals in the sub-map:
[DBG]   [17..22]
[DBG]  Agent 62 (interval in submap: [17..22]) contains time 21, added to replan.
[DBG]  Agent 79 found intervals in the sub-map:
[DBG]   [19..23]
[DBG]  Agent 79 (interval in submap: [19..23]) contains time 21, added to replan.
[DBG]  Agent 28 | Start (global): 661 -> (local): (2, 2) at time 21 | Goal (global): 725 -> (local): (4, 2) at time 34
[DBG]  Agent 62 | Start (global): 629 -> (local): (1, 2) at time 21 | Goal (global): 597 -> (local): (0, 2) at time 22
[DBG]  Agent 79 | Start (global): 628 -> (local): (1, 1) at time 21 | Goal (global): 597 -> (local): (0, 2) at time 23
[DBG]  [REPAIR] SAT destroy operator called.
[DBG]  [REPAIR] SAT operator – launching subproblem FOR OPTIMIZATION.
[DBG]  Creating local paths (sx, sy) in the submap for T_sync = 21
[DBG]    Agent 28 (global paths from T=21 to 34) has local path: (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,1) (3,1) (4,1) (4,2) 
[DBG]    Agent 62 (global paths from T=21 to 22) has local path: (1,2) (0,2) 
[DBG]    Agent 79 (global paths from T=21 to 23) has local path: (1,1) (1,2) (0,2) 
[DBG]  Checking input data for SAT solver:
[DBG]    - Number of agents to replan: 3
[DBG]  Agent 28 has the original local path length: 14 => Start (2,2), Goal (4,2)
[DBG]  Agent 62 has the original local path length: 2 => Start (1,2), Goal (0,2)
[DBG]  Agent 79 has the original local path length: 3 => Start (1,1), Goal (0,2)
[DBG]  Start position: (2, 2), (1, 2), (1, 1), 
[DBG]  Goal position: (4, 2), (0, 2), (0, 2), 
[DBG]  SAT instance and solver created.
Currently solving
Instance name: scen
Map name: map
Encoding used: disappear_at_goal
SAT solver used: Kissat
Optimizing function: sum of costs
Number of agents: 3
Mks LB: 5
SoC LB: 10
Delta: 0
Remaining time: 300000 [ms]

Vertex conflict! Agents 1, 2, timestep 3, location 0
Swapping conflict! Agents 1, 2, timestep 3, edge (0,0)
Vertex conflict! Agents 1, 2, timestep 4, location 0
Found plan [agents = 3] [timesteps = 5]
Agent #0 : 9 8 11 12 13 
Agent #1 : 5 1 0 0 0 
Agent #2 : 4 5 1 0 0 

[STAT] Solver returned: 0
[DBG]  Agent (index) 28 | New local path (submap idx):
[DBG]  9 8 11 12 13 
[DBG]  Agent (index) 62 | New local path (submap idx):
[DBG]  5 1 
[DBG]  Agent (index) 79 | New local path (submap idx):
[DBG]  4 5 1 
[DBG]  Update the agent path 28 | Original local length: 14 | New local length: 5
[DBG]  agent 28 t=0 => decoded (sx,sy)=(2,2) => global_id=661
[DBG]  agent 28 t=1 => decoded (sx,sy)=(2,1) => global_id=660
[DBG]  agent 28 t=2 => decoded (sx,sy)=(3,1) => global_id=692
[DBG]  agent 28 t=3 => decoded (sx,sy)=(4,1) => global_id=724
[DBG]  agent 28 t=4 => decoded (sx,sy)=(4,2) => global_id=725
[DBG]  Complete path of agent 28:
[DBG]    Original: 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 660 692 724 725 757 757 757 757 757 757 725 726 727 
[DBG]    New:     661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 660 692 724 725 757 757 757 757 757 757 725 726 727 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 
[DBG]    Local path (in submap): 661 660 692 724 725 757 757 757 757 757 757 725 726 727 
[DBG]    Suffix (out of submap): 
[DBG]  Original agent path length 28 je: 44
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 0: 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 660, 692, 724, 725, 757, 757, 757, 757, 757, 757, 725, 726, 727, 
[DBG]  Path for agent 28 updated, resulting length: 35
[DBG]  Update the agent path 62 | Original local length: 2 | New local length: 2
[DBG]  agent 62 t=0 => decoded (sx,sy)=(1,2) => global_id=629
[DBG]  agent 62 t=1 => decoded (sx,sy)=(0,2) => global_id=597
[DBG]  Complete path of agent 62:
[DBG]    Original: 753 753 753 753 753 753 753 753 753 753 753 752 720 688 689 657 658 659 659 627 628 629 597 565 566 534 533 501 501 469 437 438 406 
[DBG]    New:     753 753 753 753 753 753 753 753 753 753 753 752 720 688 689 657 658 659 659 627 628 629 597 565 566 534 533 501 501 469 437 438 406 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 753 753 753 753 753 753 753 753 753 753 753 752 720 688 689 657 658 659 659 627 628 
[DBG]    Local path (in submap): 629 597 
[DBG]    Suffix (out of submap): 565 566 534 533 501 501 469 437 438 406 
[DBG]  Original agent path length 62 je: 33
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 1: 753, 753, 753, 753, 753, 753, 753, 753, 753, 753, 753, 752, 720, 688, 689, 657, 658, 659, 659, 627, 628, 629, 597, 565, 566, 534, 533, 501, 501, 469, 437, 438, 406, 
[DBG]  Path for agent 62 updated, resulting length: 33
[DBG]  Update the agent path 79 | Original local length: 3 | New local length: 3
[DBG]  agent 79 t=0 => decoded (sx,sy)=(1,1) => global_id=628
[DBG]  agent 79 t=1 => decoded (sx,sy)=(1,2) => global_id=629
[DBG]  agent 79 t=2 => decoded (sx,sy)=(0,2) => global_id=597
[DBG]  Complete path of agent 79:
[DBG]    Original: 1004 1005 973 941 942 910 878 846 814 815 783 784 752 753 721 689 657 658 658 659 660 628 629 597 565 566 534 502 470 438 439 440 408 376 344 345 313 281 249 217 185 153 121 122 123 
[DBG]    New:     1004 1005 973 941 942 910 878 846 814 815 783 784 752 753 721 689 657 658 658 659 660 628 629 597 565 566 534 502 470 438 439 440 408 376 344 345 313 281 249 217 185 153 121 122 123 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 1004 1005 973 941 942 910 878 846 814 815 783 784 752 753 721 689 657 658 658 659 660 
[DBG]    Local path (in submap): 628 629 597 
[DBG]    Suffix (out of submap): 565 566 534 502 470 438 439 440 408 376 344 345 313 281 249 217 185 153 121 122 123 
[DBG]  Original agent path length 79 je: 45
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 2: 1004, 1005, 973, 941, 942, 910, 878, 846, 814, 815, 783, 784, 752, 753, 721, 689, 657, 658, 658, 659, 660, 628, 629, 597, 565, 566, 534, 502, 470, 438, 439, 440, 408, 376, 344, 345, 313, 281, 249, 217, 185, 153, 121, 122, 123, 
[DBG]  Path for agent 79 updated, resulting length: 45
[DBG]  Paths successfully updated.
[DBG]  (LNS.cpp) New path for agent 28: 
[DBG]  661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 660, 692, 724, 725, 757, 757, 757, 757, 757, 757, 725, 726, 727, 
[DBG]  (LNS.cpp) New path for agent 62: 
[DBG]  753, 753, 753, 753, 753, 753, 753, 753, 753, 753, 753, 752, 720, 688, 689, 657, 658, 659, 659, 627, 628, 629, 597, 565, 566, 534, 533, 501, 501, 469, 437, 438, 406, 
[DBG]  (LNS.cpp) New path for agent 79: 
[DBG]  1004, 1005, 973, 941, 942, 910, 878, 846, 814, 815, 783, 784, 752, 753, 721, 689, 657, 658, 658, 659, 660, 628, 629, 597, 565, 566, 534, 502, 470, 438, 439, 440, 408, 376, 344, 345, 313, 281, 249, 217, 185, 153, 121, 122, 123, 
[DBG]  Delta value: 0.0756303
[DBG]  Rewarding metric index = 1
[DBG]  component_weights = {0.017977, 0.960377, 0.00791793, 0.0137278}
[DBG]  opSuccess value: 1
[STAT] neighbor.sum_of_costs before recomputation: 110
[STAT] neighbor.old_sum_of_costs before recomputation: 119
[STAT] sum_of_costs before recomputation: 4340
[DBG]  Validate solution immediately after SAT success.
[WARNING] Problem after SAT: Target conflict: agent 42 (len 43) traverses target of agent 28 (len 34) at location 727 at timestep 42
[DBG]  [DEBUG] Attempting immediate repair via init_lns because problem occurred after SAT (should be applied only for conflicts...).
[DBG]  [DEBUG] Passing 150 agents to init_lns (skip=true).
[DBG]  [DEBUG] path_table contents for selected agents (neighbor.agents):
[DBG]    Agent 28 => controlling path length=35
[DBG]    Agent 62 => controlling path length=33
[DBG]    Agent 79 => controlling path length=45
[DBG]  hodnota skip_initial_solution=1
[DBG]  We skip initialSolution => call buildCollisionData()
[DBG]  buildCollisionData() called – skip_initial_solution case.
[DBG]  Agents.size()=150, collision_graph.size()=150
[DBG]  agent 28 => updateCollidingPairs => foundCollision
[DBG]  agent 42 => updateCollidingPairs => foundCollision
[DBG]  Conflicting agent pairs:
[DBG]  agent 28 is in conflict with agent 42
[DBG]  buildCollisionData() => sum_of_costs=4331, num_of_colliding_pairs=1
[DBG]  buildCollisionData done => sum_of_costs=4331, num_of_colliding_pairs=1
[DBG]  sum_of_cost hodnota: 4331
[DBG]  After skip/init build => iteration_stats.back(): sum_of_costs=4331, collisions=1
[DEBUG] Using default neighbor generation strategy for conflicts: 2
[DEBUG] Using default neighbor generation strategy for conflicts: 1
	InitLNS(PP): runtime = 0.00176829, iterations = 3, colliding pairs = 0, initial colliding pairs = 1, solution cost = 4334, initial solution cost = 4331, failed iterations = 0
[DBG]  init_lns->sum_of_costs after init_lns->run: 4334
[DBG]  sum_of_costs after assignment from init_lns->run: 4334
[DBG]  Recomputing sum_of_cost by dividing neighbor.sum_of_costs and neighbor.old_sum_of_costs
[STAT] sum_of_costs after recomputation: 4334
[STAT] Iteration 78
[DBG]  Using SAT operator (destroy+repair SAT).
[DBG]  ====================
[DBG]  SAT destroy operator called.
[DBG]  SAT heuristic: 2
[DBG]  key_agent_id: 28
[DBG]  key_agent_id global path length: 44
[DBG]  Submap content (global positions):
[DBG]  595 596 597 598 599 
[DBG]  627 628 629 630 631 
[DBG]  659 660 661 662 663 
[DBG]  691 692 693 694 695 
[DBG]  723 724 725 726 727 
[DBG]  Map content with agents and obstacles:
[DBG]  X . . X . 
[DBG]  A . . X . 
[DBG]  . . A X X 
[DBG]  . A X X X 
[DBG]  X . . . . 
[DBG]  content of the map structure that we pass to the SAT solver:
[DBG]  -1  1  1  -1  1  
[DBG]  1  1  1  -1  1  
[DBG]  1  1  1  -1  -1  
[DBG]  1  1  -1  -1  -1  
[DBG]  -1  1  1  1  1  
[DBG]  Identifying agents in a submap for rescheduling (when key_agent is there at the time 10):
[DBG]  Agent 28 found intervals in the sub-map:
[DBG]   [0..33] [41..43]
[DBG]  Agent 28 (interval in submap: [0..33]) contains time 10, added to replan.
[DBG]  Agent 46 found intervals in the sub-map:
[DBG]   [4..9]
[DBG]  Agent 46 is not in sub-map at time 10 (intervals: 
[DBG]  [4..9] )
[DBG]  Agent 70 found intervals in the sub-map:
[DBG]   [6..9]
[DBG]  Agent 70 is not in sub-map at time 10 (intervals: 
[DBG]  [6..9] )
[DBG]  Agent 86 found intervals in the sub-map:
[DBG]  
[DBG]  Agent 86 is not in sub-map at time 10 (intervals: 
[DBG]  )
[DBG]  Agent 89 found intervals in the sub-map:
[DBG]   [5..11]
[DBG]  Agent 89 (interval in submap: [5..11]) contains time 10, added to replan.
[DBG]  Agent 91 found intervals in the sub-map:
[DBG]   [6..13]
[DBG]  Agent 91 (interval in submap: [6..13]) contains time 10, added to replan.
[DBG]  Agent 28 | Start (global): 661 -> (local): (2, 2) at time 10 | Goal (global): 724 -> (local): (4, 1) at time 33
[DBG]  Agent 89 | Start (global): 692 -> (local): (3, 1) at time 10 | Goal (global): 724 -> (local): (4, 1) at time 11
[DBG]  Agent 91 | Start (global): 627 -> (local): (1, 0) at time 10 | Goal (global): 597 -> (local): (0, 2) at time 13
[DBG]  [REPAIR] SAT destroy operator called.
[DBG]  [REPAIR] SAT operator – launching subproblem FOR OPTIMIZATION.
[DBG]  Creating local paths (sx, sy) in the submap for T_sync = 10
[DBG]    Agent 28 (global paths from T=10 to 33) has local path: (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,1) (3,1) (4,1) 
[DBG]    Agent 89 (global paths from T=10 to 11) has local path: (3,1) (4,1) 
[DBG]    Agent 91 (global paths from T=10 to 13) has local path: (1,0) (1,1) (1,2) (0,2) 
[DBG]  Checking input data for SAT solver:
[DBG]    - Number of agents to replan: 3
[DBG]  Agent 28 has the original local path length: 24 => Start (2,2), Goal (4,1)
[DBG]  Agent 89 has the original local path length: 2 => Start (3,1), Goal (4,1)
[DBG]  Agent 91 has the original local path length: 4 => Start (1,0), Goal (0,2)
[DBG]  Start position: (2, 2), (3, 1), (1, 0), 
[DBG]  Goal position: (4, 1), (4, 1), (0, 2), 
[DBG]  SAT instance and solver created.
Currently solving
Instance name: scen
Map name: map
Encoding used: disappear_at_goal
SAT solver used: Kissat
Optimizing function: sum of costs
Number of agents: 3
Mks LB: 4
SoC LB: 10
Delta: 0
Remaining time: 300000 [ms]

Found plan [agents = 3] [timesteps = 4]
Agent #0 : 9 8 11 12 
Agent #1 : 11 12 0 0 
Agent #2 : 3 4 5 1 

[STAT] Solver returned: 0
[DBG]  Agent (index) 28 | New local path (submap idx):
[DBG]  9 8 11 12 
[DBG]  Agent (index) 89 | New local path (submap idx):
[DBG]  11 12 
[DBG]  Agent (index) 91 | New local path (submap idx):
[DBG]  3 4 5 1 
[DBG]  Update the agent path 28 | Original local length: 24 | New local length: 4
[DBG]  agent 28 t=0 => decoded (sx,sy)=(2,2) => global_id=661
[DBG]  agent 28 t=1 => decoded (sx,sy)=(2,1) => global_id=660
[DBG]  agent 28 t=2 => decoded (sx,sy)=(3,1) => global_id=692
[DBG]  agent 28 t=3 => decoded (sx,sy)=(4,1) => global_id=724
[DBG]  Complete path of agent 28:
[DBG]    Original: 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 660 692 724 756 757 757 757 757 757 757 725 726 727 
[DBG]    New:     661 661 661 661 661 661 661 661 661 661 661 660 692 724 756 757 757 757 757 757 757 725 726 727 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 661 661 661 661 661 661 661 661 661 661 
[DBG]    Local path (in submap): 661 660 692 724 756 757 757 757 757 757 757 725 726 727 
[DBG]    Suffix (out of submap): 
[DBG]  Original agent path length 28 je: 44
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 0: 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 660, 692, 724, 756, 757, 757, 757, 757, 757, 757, 725, 726, 727, 
[DBG]  Path for agent 28 updated, resulting length: 24
[DBG]  Update the agent path 89 | Original local length: 2 | New local length: 2
[DBG]  agent 89 t=0 => decoded (sx,sy)=(3,1) => global_id=692
[DBG]  agent 89 t=1 => decoded (sx,sy)=(4,1) => global_id=724
[DBG]  Complete path of agent 89:
[DBG]    Original: 437 469 501 533 565 597 629 629 628 660 692 724 756 788 820 821 822 854 886 918 950 982 1014 1015 
[DBG]    New:     437 469 501 533 565 597 629 629 628 660 692 724 756 788 820 821 822 854 886 918 950 982 1014 1015 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 437 469 501 533 565 597 629 629 628 660 
[DBG]    Local path (in submap): 692 724 
[DBG]    Suffix (out of submap): 756 788 820 821 822 854 886 918 950 982 1014 1015 
[DBG]  Original agent path length 89 je: 24
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 1: 437, 469, 501, 533, 565, 597, 629, 629, 628, 660, 692, 724, 756, 788, 820, 821, 822, 854, 886, 918, 950, 982, 1014, 1015, 
[DBG]  Path for agent 89 updated, resulting length: 24
[DBG]  Update the agent path 91 | Original local length: 4 | New local length: 4
[DBG]  agent 91 t=0 => decoded (sx,sy)=(1,0) => global_id=627
[DBG]  agent 91 t=1 => decoded (sx,sy)=(1,1) => global_id=628
[DBG]  agent 91 t=2 => decoded (sx,sy)=(1,2) => global_id=629
[DBG]  agent 91 t=3 => decoded (sx,sy)=(0,2) => global_id=597
[DBG]  Complete path of agent 91:
[DBG]    Original: 787 755 756 757 757 756 724 692 660 659 627 628 629 597 565 533 534 502 503 504 472 473 474 475 443 411 412 413 381 
[DBG]    New:     787 755 756 757 757 756 724 692 660 659 627 628 629 597 565 533 534 502 503 504 472 473 474 475 443 411 412 413 381 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 787 755 756 757 757 756 724 692 660 659 
[DBG]    Local path (in submap): 627 628 629 597 
[DBG]    Suffix (out of submap): 565 533 534 502 503 504 472 473 474 475 443 411 412 413 381 
[DBG]  Original agent path length 91 je: 29
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 2: 787, 755, 756, 757, 757, 756, 724, 692, 660, 659, 627, 628, 629, 597, 565, 533, 534, 502, 503, 504, 472, 473, 474, 475, 443, 411, 412, 413, 381, 
[DBG]  Path for agent 91 updated, resulting length: 29
[DBG]  Paths successfully updated.
[DBG]  (LNS.cpp) New path for agent 28: 
[DBG]  661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 660, 692, 724, 756, 757, 757, 757, 757, 757, 757, 725, 726, 727, 
[DBG]  (LNS.cpp) New path for agent 89: 
[DBG]  437, 469, 501, 533, 565, 597, 629, 629, 628, 660, 692, 724, 756, 788, 820, 821, 822, 854, 886, 918, 950, 982, 1014, 1015, 
[DBG]  (LNS.cpp) New path for agent 91: 
[DBG]  787, 755, 756, 757, 757, 756, 724, 692, 660, 659, 627, 628, 629, 597, 565, 533, 534, 502, 503, 504, 472, 473, 474, 475, 443, 411, 412, 413, 381, 
[DBG]  Delta value: 0.212766
[DBG]  Rewarding metric index = 1
[DBG]  component_weights = {0.0142039, 0.968693, 0.00625609, 0.0108466}
[DBG]  opSuccess value: 1
[STAT] neighbor.sum_of_costs before recomputation: 74
[STAT] neighbor.old_sum_of_costs before recomputation: 94
[STAT] sum_of_costs before recomputation: 4334
[DBG]  Validate solution immediately after SAT success.
[WARNING] Problem after SAT: Target conflict: agent 42 (len 43) traverses target of agent 28 (len 23) at location 727 at timestep 42
[DBG]  [DEBUG] Attempting immediate repair via init_lns because problem occurred after SAT (should be applied only for conflicts...).
[DBG]  [DEBUG] Passing 150 agents to init_lns (skip=true).
[DBG]  [DEBUG] path_table contents for selected agents (neighbor.agents):
[DBG]    Agent 28 => controlling path length=24
[DBG]    Agent 89 => controlling path length=24
[DBG]    Agent 91 => controlling path length=29
[DBG]  hodnota skip_initial_solution=1
[DBG]  We skip initialSolution => call buildCollisionData()
[DBG]  buildCollisionData() called – skip_initial_solution case.
[DBG]  Agents.size()=150, collision_graph.size()=150
[DBG]  agent 28 => updateCollidingPairs => foundCollision
[DBG]  agent 42 => updateCollidingPairs => foundCollision
[DBG]  Conflicting agent pairs:
[DBG]  agent 28 is in conflict with agent 42
[DBG]  buildCollisionData() => sum_of_costs=4314, num_of_colliding_pairs=1
[DBG]  buildCollisionData done => sum_of_costs=4314, num_of_colliding_pairs=1
[DBG]  sum_of_cost hodnota: 4314
[DBG]  After skip/init build => iteration_stats.back(): sum_of_costs=4314, collisions=1
[DEBUG] Using default neighbor generation strategy for conflicts: 2
[DEBUG] Using default neighbor generation strategy for conflicts: 2
	InitLNS(PP): runtime = 0.00226071, iterations = 3, colliding pairs = 0, initial colliding pairs = 1, solution cost = 4320, initial solution cost = 4314, failed iterations = 0
[DBG]  init_lns->sum_of_costs after init_lns->run: 4320
[DBG]  sum_of_costs after assignment from init_lns->run: 4320
[DBG]  Recomputing sum_of_cost by dividing neighbor.sum_of_costs and neighbor.old_sum_of_costs
[STAT] sum_of_costs after recomputation: 4320
[STAT] Iteration 79
[DBG]  Random chance did not select SAT operator (r=11), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 79
[DBG]  Random chance did not select SAT operator (r=37), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 79
[DBG]  Random chance did not select SAT operator (r=58), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 79
[DBG]  Random chance did not select SAT operator (r=37), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 79
[DBG]  Random chance did not select SAT operator (r=97), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 79
[DBG]  Random chance did not select SAT operator (r=22), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 79
[DBG]  Random chance did not select SAT operator (r=41), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 79
[DBG]  Random chance did not select SAT operator (r=46), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 79
[DBG]  Random chance did not select SAT operator (r=69), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 79
[DBG]  Random chance did not select SAT operator (r=51), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 79
[DBG]  Random chance did not select SAT operator (r=72), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 79
[DBG]  Random chance did not select SAT operator (r=37), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 79
[DBG]  Random chance did not select SAT operator (r=24), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 79
[DBG]  Random chance did not select SAT operator (r=15), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 79
[DBG]  Using SAT operator (destroy+repair SAT).
[DBG]  ====================
[DBG]  SAT destroy operator called.
[DBG]  SAT heuristic: 2
[DBG]  key_agent_id: 28
[DBG]  key_agent_id global path length: 44
[DBG]  Submap content (global positions):
[DBG]  500 501 502 503 504 
[DBG]  532 533 534 535 536 
[DBG]  564 565 566 567 568 
[DBG]  596 597 598 599 600 
[DBG]  628 629 630 631 632 
[DBG]  Map content with agents and obstacles:
[DBG]  X . A A A 
[DBG]  X . A X X 
[DBG]  X . A X X 
[DBG]  . . X . . 
[DBG]  . . X . A 
[DBG]  content of the map structure that we pass to the SAT solver:
[DBG]  -1  1  1  1  1  
[DBG]  -1  1  1  -1  -1  
[DBG]  -1  1  1  -1  -1  
[DBG]  1  1  -1  1  1  
[DBG]  1  1  -1  1  1  
[DBG]  Identifying agents in a submap for rescheduling (when key_agent is there at the time 16):
[DBG]  Agent 10 found intervals in the sub-map:
[DBG]   [16..18]
[DBG]  Agent 10 (interval in submap: [16..18]) contains time 16, added to replan.
[DBG]  Agent 28 found intervals in the sub-map:
[DBG]   [8..9] [12..19] [24..35]
[DBG]  Agent 28 (interval in submap: [12..19]) contains time 16, added to replan.
[DBG]  Agent 30 found intervals in the sub-map:
[DBG]   [16..17] [26..27]
[DBG]  Agent 30 (interval in submap: [16..17]) contains time 16, added to replan.
[DBG]  Agent 46 found intervals in the sub-map:
[DBG]   [7..16]
[DBG]  Agent 46 (interval in submap: [7..16]) contains time 16, added to replan.
[DBG]  Agent 54 found intervals in the sub-map:
[DBG]   [15..17]
[DBG]  Agent 54 (interval in submap: [15..17]) contains time 16, added to replan.
[DBG]  Agent 61 found intervals in the sub-map:
[DBG]  
[DBG]  Agent 61 is not in sub-map at time 16 (intervals: 
[DBG]  )
[DBG]  Agent 74 found intervals in the sub-map:
[DBG]   [18..24] [30..30]
[DBG]  Agent 74 is not in sub-map at time 16 (intervals: 
[DBG]  [18..24] [30..30] )
[DBG]  Agent 86 found intervals in the sub-map:
[DBG]   [23..24]
[DBG]  Agent 86 is not in sub-map at time 16 (intervals: 
[DBG]  [23..24] )
[DBG]  Agent 91 found intervals in the sub-map:
[DBG]   [11..19]
[DBG]  Agent 91 (interval in submap: [11..19]) contains time 16, added to replan.
[DBG]  Agent 135 found intervals in the sub-map:
[DBG]   [7..8] [15..15]
[DBG]  Agent 135 is not in sub-map at time 16 (intervals: 
[DBG]  [7..8] [15..15] )
[DBG]  Agent 10 | Start (global): 502 -> (local): (0, 2) at time 16 | Goal (global): 504 -> (local): (0, 4) at time 18
[DBG]  Agent 28 | Start (global): 566 -> (local): (2, 2) at time 16 | Goal (global): 502 -> (local): (0, 2) at time 19
[DBG]  Agent 30 | Start (global): 632 -> (local): (4, 4) at time 16 | Goal (global): 600 -> (local): (3, 4) at time 17
[DBG]  Agent 46 | Start (global): 504 -> (local): (0, 4) at time 16 | Goal (global): 504 -> (local): (0, 4) at time 16
[DBG]  Agent 54 | Start (global): 503 -> (local): (0, 3) at time 16 | Goal (global): 504 -> (local): (0, 4) at time 17
[DBG]  Agent 91 | Start (global): 534 -> (local): (1, 2) at time 16 | Goal (global): 504 -> (local): (0, 4) at time 19
[DBG]  [REPAIR] SAT destroy operator called.
[DBG]  [REPAIR] SAT operator – launching subproblem FOR OPTIMIZATION.
[DBG]  Creating local paths (sx, sy) in the submap for T_sync = 16
[DBG]    Agent 10 (global paths from T=16 to 18) has local path: (0,2) (0,3) (0,4) 
[DBG]    Agent 28 (global paths from T=16 to 19) has local path: (2,2) (1,2) (1,2) (0,2) 
[DBG]    Agent 30 (global paths from T=16 to 17) has local path: (4,4) (3,4) 
[DBG]    Agent 46 (global paths from T=16 to 16) has local path: (0,4) 
[DBG]    Agent 54 (global paths from T=16 to 17) has local path: (0,3) (0,4) 
[DBG]    Agent 91 (global paths from T=16 to 19) has local path: (1,2) (0,2) (0,3) (0,4) 
[DBG]  Checking input data for SAT solver:
[DBG]    - Number of agents to replan: 6
[DBG]  Agent 10 has the original local path length: 3 => Start (0,2), Goal (0,4)
[DBG]  Agent 28 has the original local path length: 4 => Start (2,2), Goal (0,2)
[DBG]  Agent 30 has the original local path length: 2 => Start (4,4), Goal (3,4)
[DBG]  Agent 46 has the original local path length: 1 => Start (0,4), Goal (0,4)
[DBG]  Agent 54 has the original local path length: 2 => Start (0,3), Goal (0,4)
[DBG]  Agent 91 has the original local path length: 4 => Start (1,2), Goal (0,4)
[DBG]  Start position: (0, 2), (2, 2), (4, 4), (0, 4), (0, 3), (1, 2), 
[DBG]  Goal position: (0, 4), (0, 2), (3, 4), (0, 4), (0, 4), (0, 4), 
[DBG]  SAT instance and solver created.
Currently solving
Instance name: scen
Map name: map
Encoding used: disappear_at_goal
SAT solver used: Kissat
Optimizing function: sum of costs
Number of agents: 6
Mks LB: 4
SoC LB: 15
Delta: 0
Remaining time: 300000 [ms]

Vertex conflict! Agents 0, 1, timestep 3, location 0
Vertex conflict! Agents 0, 2, timestep 3, location 0
Vertex conflict! Agents 0, 3, timestep 3, location 0
Vertex conflict! Agents 0, 4, timestep 3, location 0
Vertex conflict! Agents 1, 2, timestep 3, location 0
Vertex conflict! Agents 1, 3, timestep 3, location 0
Vertex conflict! Agents 1, 4, timestep 3, location 0
Vertex conflict! Agents 2, 3, timestep 2, location 0
Swapping conflict! Agents 2, 3, timestep 2, edge (0,0)
Vertex conflict! Agents 2, 3, timestep 3, location 0
Vertex conflict! Agents 2, 4, timestep 2, location 0
Swapping conflict! Agents 2, 4, timestep 2, edge (0,0)
Vertex conflict! Agents 2, 4, timestep 3, location 0
Vertex conflict! Agents 3, 4, timestep 2, location 0
Swapping conflict! Agents 3, 4, timestep 2, edge (0,0)
Vertex conflict! Agents 3, 4, timestep 3, location 0
Found plan [agents = 6] [timesteps = 4]
Agent #0 : 1 2 3 0 
Agent #1 : 7 5 1 0 
Agent #2 : 15 11 0 0 
Agent #3 : 3 0 0 0 
Agent #4 : 2 3 0 0 
Agent #5 : 5 1 2 3 

[STAT] Solver returned: 0
[DBG]  Agent (index) 10 | New local path (submap idx):
[DBG]  1 2 3 
[DBG]  Agent (index) 28 | New local path (submap idx):
[DBG]  7 5 1 
[DBG]  Agent (index) 30 | New local path (submap idx):
[DBG]  15 11 
[DBG]  Agent (index) 46 | New local path (submap idx):
[DBG]  3 
[DBG]  Agent (index) 54 | New local path (submap idx):
[DBG]  2 3 
[DBG]  Agent (index) 91 | New local path (submap idx):
[DBG]  5 1 2 3 
[DBG]  Update the agent path 10 | Original local length: 3 | New local length: 3
[DBG]  agent 10 t=0 => decoded (sx,sy)=(0,2) => global_id=502
[DBG]  agent 10 t=1 => decoded (sx,sy)=(0,3) => global_id=503
[DBG]  agent 10 t=2 => decoded (sx,sy)=(0,4) => global_id=504
[DBG]  Complete path of agent 10:
[DBG]    Original: 588 589 590 591 592 560 528 496 464 465 466 466 467 468 469 470 502 503 504 505 473 474 475 476 
[DBG]    New:     588 589 590 591 592 560 528 496 464 465 466 466 467 468 469 470 502 503 504 505 473 474 475 476 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 588 589 590 591 592 560 528 496 464 465 466 466 467 468 469 470 
[DBG]    Local path (in submap): 502 503 504 
[DBG]    Suffix (out of submap): 505 473 474 475 476 
[DBG]  Original agent path length 10 je: 24
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 0: 588, 589, 590, 591, 592, 560, 528, 496, 464, 465, 466, 466, 467, 468, 469, 470, 502, 503, 504, 505, 473, 474, 475, 476, 
[DBG]  Path for agent 10 updated, resulting length: 24
[DBG]  Update the agent path 28 | Original local length: 4 | New local length: 3
[DBG]  agent 28 t=0 => decoded (sx,sy)=(2,2) => global_id=566
[DBG]  agent 28 t=1 => decoded (sx,sy)=(1,2) => global_id=534
[DBG]  agent 28 t=2 => decoded (sx,sy)=(0,2) => global_id=502
[DBG]  Complete path of agent 28:
[DBG]    Original: 661 661 661 661 661 661 661 660 628 628 660 660 628 629 597 565 566 534 534 502 470 470 470 469 501 501 501 501 501 502 534 566 565 597 629 628 660 692 724 756 757 725 726 727 
[DBG]    New:     661 661 661 661 661 661 661 660 628 628 660 660 628 629 597 565 566 534 502 470 470 470 469 501 501 501 501 501 502 534 566 565 597 629 628 660 692 724 756 757 725 726 727 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 661 661 661 661 661 661 661 660 628 628 660 660 628 629 597 565 
[DBG]    Local path (in submap): 566 534 502 470 
[DBG]    Suffix (out of submap): 470 470 469 501 501 501 501 501 502 534 566 565 597 629 628 660 692 724 756 757 725 726 727 
[DBG]  Original agent path length 28 je: 44
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 1: 661, 661, 661, 661, 661, 661, 661, 660, 628, 628, 660, 660, 628, 629, 597, 565, 566, 534, 502, 470, 470, 470, 469, 501, 501, 501, 501, 501, 502, 534, 566, 565, 597, 629, 628, 660, 692, 724, 756, 757, 725, 726, 727, 
[DBG]  Path for agent 28 updated, resulting length: 43
[DBG]  Update the agent path 30 | Original local length: 2 | New local length: 2
[DBG]  agent 30 t=0 => decoded (sx,sy)=(4,4) => global_id=632
[DBG]  agent 30 t=1 => decoded (sx,sy)=(3,4) => global_id=600
[DBG]  Complete path of agent 30:
[DBG]    Original: 922 921 920 888 887 855 855 856 824 792 793 761 729 728 696 664 632 600 601 601 602 570 538 506 505 505 504 503 
[DBG]    New:     922 921 920 888 887 855 855 856 824 792 793 761 729 728 696 664 632 600 601 601 602 570 538 506 505 505 504 503 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 922 921 920 888 887 855 855 856 824 792 793 761 729 728 696 664 
[DBG]    Local path (in submap): 632 600 
[DBG]    Suffix (out of submap): 601 601 602 570 538 506 505 505 504 503 
[DBG]  Original agent path length 30 je: 28
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 2: 922, 921, 920, 888, 887, 855, 855, 856, 824, 792, 793, 761, 729, 728, 696, 664, 632, 600, 601, 601, 602, 570, 538, 506, 505, 505, 504, 503, 
[DBG]  Path for agent 30 updated, resulting length: 28
[DBG]  Update the agent path 46 | Original local length: 1 | New local length: 1
[DBG]  agent 46 t=0 => decoded (sx,sy)=(0,4) => global_id=504
[DBG]  Complete path of agent 46:
[DBG]    Original: 786 787 755 756 724 692 660 628 596 597 565 566 534 502 503 503 504 472 440 408 376 377 378 378 379 380 348 349 317 285 284 252 
[DBG]    New:     786 787 755 756 724 692 660 628 596 597 565 566 534 502 503 503 504 472 440 408 376 377 378 378 379 380 348 349 317 285 284 252 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 786 787 755 756 724 692 660 628 596 597 565 566 534 502 503 503 
[DBG]    Local path (in submap): 504 
[DBG]    Suffix (out of submap): 472 440 408 376 377 378 378 379 380 348 349 317 285 284 252 
[DBG]  Original agent path length 46 je: 32
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 3: 786, 787, 755, 756, 724, 692, 660, 628, 596, 597, 565, 566, 534, 502, 503, 503, 504, 472, 440, 408, 376, 377, 378, 378, 379, 380, 348, 349, 317, 285, 284, 252, 
[DBG]  Path for agent 46 updated, resulting length: 32
[DBG]  Update the agent path 54 | Original local length: 2 | New local length: 2
[DBG]  agent 54 t=0 => decoded (sx,sy)=(0,3) => global_id=503
[DBG]  agent 54 t=1 => decoded (sx,sy)=(0,4) => global_id=504
[DBG]  Complete path of agent 54:
[DBG]    Original: 464 432 400 368 369 337 338 339 371 403 435 467 468 469 470 502 503 504 505 506 538 539 571 
[DBG]    New:     464 432 400 368 369 337 338 339 371 403 435 467 468 469 470 502 503 504 505 506 538 539 571 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 464 432 400 368 369 337 338 339 371 403 435 467 468 469 470 502 
[DBG]    Local path (in submap): 503 504 
[DBG]    Suffix (out of submap): 505 506 538 539 571 
[DBG]  Original agent path length 54 je: 23
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 4: 464, 432, 400, 368, 369, 337, 338, 339, 371, 403, 435, 467, 468, 469, 470, 502, 503, 504, 505, 506, 538, 539, 571, 
[DBG]  Path for agent 54 updated, resulting length: 23
[DBG]  Update the agent path 91 | Original local length: 4 | New local length: 4
[DBG]  agent 91 t=0 => decoded (sx,sy)=(1,2) => global_id=534
[DBG]  agent 91 t=1 => decoded (sx,sy)=(0,2) => global_id=502
[DBG]  agent 91 t=2 => decoded (sx,sy)=(0,3) => global_id=503
[DBG]  agent 91 t=3 => decoded (sx,sy)=(0,4) => global_id=504
[DBG]  Complete path of agent 91:
[DBG]    Original: 787 755 756 757 757 756 724 692 660 659 627 628 629 597 565 533 534 502 503 504 472 473 474 475 443 411 412 413 381 
[DBG]    New:     787 755 756 757 757 756 724 692 660 659 627 628 629 597 565 533 534 502 503 504 472 473 474 475 443 411 412 413 381 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 787 755 756 757 757 756 724 692 660 659 627 628 629 597 565 533 
[DBG]    Local path (in submap): 534 502 503 504 
[DBG]    Suffix (out of submap): 472 473 474 475 443 411 412 413 381 
[DBG]  Original agent path length 91 je: 29
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 5: 787, 755, 756, 757, 757, 756, 724, 692, 660, 659, 627, 628, 629, 597, 565, 533, 534, 502, 503, 504, 472, 473, 474, 475, 443, 411, 412, 413, 381, 
[DBG]  Path for agent 91 updated, resulting length: 29
[DBG]  Paths successfully updated.
[DBG]  (LNS.cpp) New path for agent 10: 
[DBG]  588, 589, 590, 591, 592, 560, 528, 496, 464, 465, 466, 466, 467, 468, 469, 470, 502, 503, 504, 505, 473, 474, 475, 476, 
[DBG]  (LNS.cpp) New path for agent 28: 
[DBG]  661, 661, 661, 661, 661, 661, 661, 660, 628, 628, 660, 660, 628, 629, 597, 565, 566, 534, 502, 470, 470, 470, 469, 501, 501, 501, 501, 501, 502, 534, 566, 565, 597, 629, 628, 660, 692, 724, 756, 757, 725, 726, 727, 
[DBG]  (LNS.cpp) New path for agent 30: 
[DBG]  922, 921, 920, 888, 887, 855, 855, 856, 824, 792, 793, 761, 729, 728, 696, 664, 632, 600, 601, 601, 602, 570, 538, 506, 505, 505, 504, 503, 
[DBG]  (LNS.cpp) New path for agent 46: 
[DBG]  786, 787, 755, 756, 724, 692, 660, 628, 596, 597, 565, 566, 534, 502, 503, 503, 504, 472, 440, 408, 376, 377, 378, 378, 379, 380, 348, 349, 317, 285, 284, 252, 
[DBG]  (LNS.cpp) New path for agent 54: 
[DBG]  464, 432, 400, 368, 369, 337, 338, 339, 371, 403, 435, 467, 468, 469, 470, 502, 503, 504, 505, 506, 538, 539, 571, 
[DBG]  (LNS.cpp) New path for agent 91: 
[DBG]  787, 755, 756, 757, 757, 756, 724, 692, 660, 659, 627, 628, 629, 597, 565, 533, 534, 502, 503, 504, 472, 473, 474, 475, 443, 411, 412, 413, 381, 
[DBG]  Delta value: 0.00574713
[DBG]  Rewarding metric index = 1
[DBG]  component_weights = {0.0134399, 0.970377, 0.00591959, 0.0102632}
[DBG]  opSuccess value: 1
[STAT] neighbor.sum_of_costs before recomputation: 173
[STAT] neighbor.old_sum_of_costs before recomputation: 174
[STAT] sum_of_costs before recomputation: 4320
[DBG]  Validate solution immediately after SAT success.
[WARNING] Problem after SAT: Vertex conflict between agents 26 and 28 at location 469 at timestep 22
[DBG]  [DEBUG] Attempting immediate repair via init_lns because problem occurred after SAT (should be applied only for conflicts...).
[DBG]  [DEBUG] Passing 150 agents to init_lns (skip=true).
[DBG]  [DEBUG] path_table contents for selected agents (neighbor.agents):
[DBG]    Agent 10 => controlling path length=24
[DBG]    Agent 28 => controlling path length=43
[DBG]    Agent 30 => controlling path length=28
[DBG]    Agent 46 => controlling path length=32
[DBG]    Agent 54 => controlling path length=23
[DBG]    Agent 91 => controlling path length=29
[DBG]  hodnota skip_initial_solution=1
[DBG]  We skip initialSolution => call buildCollisionData()
[DBG]  buildCollisionData() called – skip_initial_solution case.
[DBG]  Agents.size()=150, collision_graph.size()=150
[DBG]  agent 26 => updateCollidingPairs => foundCollision
[DBG]  agent 28 => updateCollidingPairs => foundCollision
[DBG]  agent 33 => updateCollidingPairs => foundCollision
[DBG]  agent 35 => updateCollidingPairs => foundCollision
[DBG]  agent 42 => updateCollidingPairs => foundCollision
[DBG]  agent 62 => updateCollidingPairs => foundCollision
[DBG]  Conflicting agent pairs:
[DBG]  agent 26 is in conflict with agent 28
[DBG]  agent 28 is in conflict with agent 33
[DBG]  agent 28 is in conflict with agent 35
[DBG]  agent 28 is in conflict with agent 42
[DBG]  agent 28 is in conflict with agent 62
[DBG]  buildCollisionData() => sum_of_costs=4319, num_of_colliding_pairs=5
[DBG]  buildCollisionData done => sum_of_costs=4319, num_of_colliding_pairs=5
[DBG]  sum_of_cost hodnota: 4319
[DBG]  After skip/init build => iteration_stats.back(): sum_of_costs=4319, collisions=5
[DEBUG] Using default neighbor generation strategy for conflicts: 0
[DEBUG] Using default neighbor generation strategy for conflicts: 1
	InitLNS(PP): runtime = 0.00221912, iterations = 3, colliding pairs = 0, initial colliding pairs = 5, solution cost = 4310, initial solution cost = 4319, failed iterations = 0
[DBG]  init_lns->sum_of_costs after init_lns->run: 4310
[DBG]  sum_of_costs after assignment from init_lns->run: 4310
[DBG]  Recomputing sum_of_cost by dividing neighbor.sum_of_costs and neighbor.old_sum_of_costs
[STAT] sum_of_costs after recomputation: 4310
[STAT] Iteration 80
[DBG]  Random chance did not select SAT operator (r=24), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 80
[DBG]  Random chance did not select SAT operator (r=89), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 80
[DBG]  Random chance did not select SAT operator (r=43), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 80
[DBG]  Random chance did not select SAT operator (r=88), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 80
[DBG]  Random chance did not select SAT operator (r=52), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 80
[DBG]  Random chance did not select SAT operator (r=40), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 80
[DBG]  Random chance did not select SAT operator (r=64), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 80
[DBG]  Random chance did not select SAT operator (r=93), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 80
[DBG]  Random chance did not select SAT operator (r=33), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 80
[DBG]  Random chance did not select SAT operator (r=31), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 80
[DBG]  Random chance did not select SAT operator (r=77), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 80
[DBG]  Random chance did not select SAT operator (r=88), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 80
[DBG]  Random chance did not select SAT operator (r=22), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 80
[DBG]  Random chance did not select SAT operator (r=77), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 80
[DBG]  Random chance did not select SAT operator (r=25), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 80
[DBG]  Random chance did not select SAT operator (r=69), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 80
[DBG]  Random chance did not select SAT operator (r=68), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 80
[DBG]  Using SAT operator (destroy+repair SAT).
[DBG]  ====================
[DBG]  SAT destroy operator called.
[DBG]  SAT heuristic: 2
[DBG]  key_agent_id: 28
[DBG]  key_agent_id global path length: 44
[DBG]  Submap content (global positions):
[DBG]  594 595 596 597 598 
[DBG]  626 627 628 629 630 
[DBG]  658 659 660 661 662 
[DBG]  690 691 692 693 694 
[DBG]  722 723 724 725 726 
[DBG]  Map content with agents and obstacles:
[DBG]  . X . A X 
[DBG]  X A . . X 
[DBG]  A . A . X 
[DBG]  X . A X X 
[DBG]  . X . . . 
[DBG]  content of the map structure that we pass to the SAT solver:
[DBG]  1  -1  1  1  -1  
[DBG]  -1  1  1  1  -1  
[DBG]  1  1  1  1  -1  
[DBG]  -1  1  1  -1  -1  
[DBG]  1  -1  1  1  1  
[DBG]  Identifying agents in a submap for rescheduling (when key_agent is there at the time 35):
[DBG]  Agent 26 found intervals in the sub-map:
[DBG]   [31..36]
[DBG]  Agent 26 (interval in submap: [31..36]) contains time 35, added to replan.
[DBG]  Agent 28 found intervals in the sub-map:
[DBG]   [0..38] [41..42]
[DBG]  Agent 28 (interval in submap: [0..38]) contains time 35, added to replan.
[DBG]  Agent 42 found intervals in the sub-map:
[DBG]   [35..41]
[DBG]  Agent 42 (interval in submap: [35..41]) contains time 35, added to replan.
[DBG]  Agent 69 found intervals in the sub-map:
[DBG]   [35..40]
[DBG]  Agent 69 (interval in submap: [35..40]) contains time 35, added to replan.
[DBG]  Agent 148 found intervals in the sub-map:
[DBG]   [33..39]
[DBG]  Agent 148 (interval in submap: [33..39]) contains time 35, added to replan.
[DBG]  Agent 26 | Start (global): 692 -> (local): (3, 2) at time 35 | Goal (global): 724 -> (local): (4, 2) at time 36
[DBG]  Agent 28 | Start (global): 660 -> (local): (2, 2) at time 35 | Goal (global): 725 -> (local): (4, 3) at time 38
[DBG]  Agent 42 | Start (global): 658 -> (local): (2, 0) at time 35 | Goal (global): 726 -> (local): (4, 4) at time 41
[DBG]  Agent 69 | Start (global): 597 -> (local): (0, 3) at time 35 | Goal (global): 724 -> (local): (4, 2) at time 40
[DBG]  Agent 148 | Start (global): 627 -> (local): (1, 1) at time 35 | Goal (global): 660 -> (local): (2, 2) at time 39
[DBG]  [REPAIR] SAT destroy operator called.
[DBG]  [REPAIR] SAT operator – launching subproblem FOR OPTIMIZATION.
[DBG]  Creating local paths (sx, sy) in the submap for T_sync = 35
[DBG]    Agent 26 (global paths from T=35 to 36) has local path: (3,2) (4,2) 
[DBG]    Agent 28 (global paths from T=35 to 38) has local path: (2,2) (3,2) (4,2) (4,3) 
[DBG]    Agent 42 (global paths from T=35 to 41) has local path: (2,0) (2,1) (3,1) (3,2) (4,2) (4,3) (4,4) 
[DBG]    Agent 69 (global paths from T=35 to 40) has local path: (0,3) (1,3) (1,2) (2,2) (3,2) (4,2) 
[DBG]    Agent 148 (global paths from T=35 to 39) has local path: (1,1) (1,1) (1,1) (1,2) (2,2) 
[DBG]  Checking input data for SAT solver:
[DBG]    - Number of agents to replan: 5
[DBG]  Agent 26 has the original local path length: 2 => Start (3,2), Goal (4,2)
[DBG]  Agent 28 has the original local path length: 4 => Start (2,2), Goal (4,3)
[DBG]  Agent 42 has the original local path length: 7 => Start (2,0), Goal (4,4)
[DBG]  Agent 69 has the original local path length: 6 => Start (0,3), Goal (4,2)
[DBG]  Agent 148 has the original local path length: 5 => Start (1,1), Goal (2,2)
[DBG]  Start position: (3, 2), (2, 2), (2, 0), (0, 3), (1, 1), 
[DBG]  Goal position: (4, 2), (4, 3), (4, 4), (4, 2), (2, 2), 
[DBG]  SAT instance and solver created.
Currently solving
Instance name: scen
Map name: map
Encoding used: disappear_at_goal
SAT solver used: Kissat
Optimizing function: sum of costs
Number of agents: 5
Mks LB: 7
SoC LB: 22
Delta: 0
Remaining time: 300000 [ms]

Vertex conflict! Agents 0, 1, timestep 4, location 0
Swapping conflict! Agents 0, 1, timestep 4, edge (0,0)
Vertex conflict! Agents 0, 1, timestep 5, location 0
Swapping conflict! Agents 0, 1, timestep 5, edge (0,0)
Vertex conflict! Agents 0, 1, timestep 6, location 0
Vertex conflict! Agents 0, 3, timestep 6, location 0
Vertex conflict! Agents 0, 4, timestep 3, location 0
Swapping conflict! Agents 0, 4, timestep 3, edge (0,0)
Vertex conflict! Agents 0, 4, timestep 4, location 0
Swapping conflict! Agents 0, 4, timestep 4, edge (0,0)
Vertex conflict! Agents 0, 4, timestep 5, location 0
Swapping conflict! Agents 0, 4, timestep 5, edge (0,0)
Vertex conflict! Agents 0, 4, timestep 6, location 0
Vertex conflict! Agents 1, 3, timestep 6, location 0
Vertex conflict! Agents 1, 4, timestep 4, location 0
Swapping conflict! Agents 1, 4, timestep 4, edge (0,0)
Vertex conflict! Agents 1, 4, timestep 5, location 0
Swapping conflict! Agents 1, 4, timestep 5, edge (0,0)
Vertex conflict! Agents 1, 4, timestep 6, location 0
Vertex conflict! Agents 3, 4, timestep 6, location 0
Found plan [agents = 5] [timesteps = 7]
Agent #0 : 11 13 0 0 0 0 0 
Agent #1 : 8 11 13 14 0 0 0 
Agent #2 : 6 7 10 11 13 14 15 
Agent #3 : 2 5 9 8 11 13 0 
Agent #4 : 3 4 8 0 0 0 0 

[STAT] Solver returned: 0
[DBG]  Agent (index) 26 | New local path (submap idx):
[DBG]  11 13 
[DBG]  Agent (index) 28 | New local path (submap idx):
[DBG]  8 11 13 14 
[DBG]  Agent (index) 42 | New local path (submap idx):
[DBG]  6 7 10 11 13 14 15 
[DBG]  Agent (index) 69 | New local path (submap idx):
[DBG]  2 5 9 8 11 13 
[DBG]  Agent (index) 148 | New local path (submap idx):
[DBG]  3 4 8 
[DBG]  Update the agent path 26 | Original local length: 2 | New local length: 2
[DBG]  agent 26 t=0 => decoded (sx,sy)=(3,2) => global_id=692
[DBG]  agent 26 t=1 => decoded (sx,sy)=(4,2) => global_id=724
[DBG]  Complete path of agent 26:
[DBG]    Original: 13 14 46 47 79 80 81 82 83 115 116 148 180 212 244 276 277 309 341 373 405 437 437 469 469 469 469 469 501 533 565 597 629 661 660 692 724 756 755 
[DBG]    New:     13 14 46 47 79 80 81 82 83 115 116 148 180 212 244 276 277 309 341 373 405 437 437 469 469 469 469 469 501 533 565 597 629 661 660 692 724 756 755 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 13 14 46 47 79 80 81 82 83 115 116 148 180 212 244 276 277 309 341 373 405 437 437 469 469 469 469 469 501 533 565 597 629 661 660 
[DBG]    Local path (in submap): 692 724 
[DBG]    Suffix (out of submap): 756 755 
[DBG]  Original agent path length 26 je: 39
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 0: 13, 14, 46, 47, 79, 80, 81, 82, 83, 115, 116, 148, 180, 212, 244, 276, 277, 309, 341, 373, 405, 437, 437, 469, 469, 469, 469, 469, 501, 533, 565, 597, 629, 661, 660, 692, 724, 756, 755, 
[DBG]  Path for agent 26 updated, resulting length: 39
[DBG]  Update the agent path 28 | Original local length: 4 | New local length: 4
[DBG]  agent 28 t=0 => decoded (sx,sy)=(2,2) => global_id=660
[DBG]  agent 28 t=1 => decoded (sx,sy)=(3,2) => global_id=692
[DBG]  agent 28 t=2 => decoded (sx,sy)=(4,2) => global_id=724
[DBG]  agent 28 t=3 => decoded (sx,sy)=(4,3) => global_id=725
[DBG]  Complete path of agent 28:
[DBG]    Original: 661 661 661 661 661 661 661 660 628 628 660 660 628 627 627 627 627 627 627 627 627 627 627 627 627 627 627 627 627 627 628 628 628 628 628 660 692 724 725 757 757 725 726 727 
[DBG]    New:     661 661 661 661 661 661 661 660 628 628 660 660 628 627 627 627 627 627 627 627 627 627 627 627 627 627 627 627 627 627 628 628 628 628 628 660 692 724 725 757 757 725 726 727 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 661 661 661 661 661 661 661 660 628 628 660 660 628 627 627 627 627 627 627 627 627 627 627 627 627 627 627 627 627 627 628 628 628 628 628 
[DBG]    Local path (in submap): 660 692 724 725 
[DBG]    Suffix (out of submap): 757 757 725 726 727 
[DBG]  Original agent path length 28 je: 44
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 1: 661, 661, 661, 661, 661, 661, 661, 660, 628, 628, 660, 660, 628, 627, 627, 627, 627, 627, 627, 627, 627, 627, 627, 627, 627, 627, 627, 627, 627, 627, 628, 628, 628, 628, 628, 660, 692, 724, 725, 757, 757, 725, 726, 727, 
[DBG]  Path for agent 28 updated, resulting length: 44
[DBG]  Update the agent path 42 | Original local length: 7 | New local length: 7
[DBG]  agent 42 t=0 => decoded (sx,sy)=(2,0) => global_id=658
[DBG]  agent 42 t=1 => decoded (sx,sy)=(2,1) => global_id=659
[DBG]  agent 42 t=2 => decoded (sx,sy)=(3,1) => global_id=691
[DBG]  agent 42 t=3 => decoded (sx,sy)=(3,2) => global_id=692
[DBG]  agent 42 t=4 => decoded (sx,sy)=(4,2) => global_id=724
[DBG]  agent 42 t=5 => decoded (sx,sy)=(4,3) => global_id=725
[DBG]  agent 42 t=6 => decoded (sx,sy)=(4,4) => global_id=726
[DBG]  Complete path of agent 42:
[DBG]    Original: 224 192 193 194 226 227 228 260 261 293 325 326 327 328 329 361 393 425 426 458 490 491 523 555 587 588 588 588 589 590 591 623 655 656 657 658 659 691 692 724 725 726 727 759 
[DBG]    New:     224 192 193 194 226 227 228 260 261 293 325 326 327 328 329 361 393 425 426 458 490 491 523 555 587 588 588 588 589 590 591 623 655 656 657 658 659 691 692 724 725 726 727 759 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 224 192 193 194 226 227 228 260 261 293 325 326 327 328 329 361 393 425 426 458 490 491 523 555 587 588 588 588 589 590 591 623 655 656 657 
[DBG]    Local path (in submap): 658 659 691 692 724 725 726 
[DBG]    Suffix (out of submap): 727 759 
[DBG]  Original agent path length 42 je: 44
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 2: 224, 192, 193, 194, 226, 227, 228, 260, 261, 293, 325, 326, 327, 328, 329, 361, 393, 425, 426, 458, 490, 491, 523, 555, 587, 588, 588, 588, 589, 590, 591, 623, 655, 656, 657, 658, 659, 691, 692, 724, 725, 726, 727, 759, 
[DBG]  Path for agent 42 updated, resulting length: 44
[DBG]  Update the agent path 69 | Original local length: 6 | New local length: 6
[DBG]  agent 69 t=0 => decoded (sx,sy)=(0,3) => global_id=597
[DBG]  agent 69 t=1 => decoded (sx,sy)=(1,3) => global_id=629
[DBG]  agent 69 t=2 => decoded (sx,sy)=(2,3) => global_id=661
[DBG]  agent 69 t=3 => decoded (sx,sy)=(2,2) => global_id=660
[DBG]  agent 69 t=4 => decoded (sx,sy)=(3,2) => global_id=692
[DBG]  agent 69 t=5 => decoded (sx,sy)=(4,2) => global_id=724
[DBG]  Complete path of agent 69:
[DBG]    Original: 4 5 37 69 70 71 72 73 74 106 107 108 109 141 173 205 206 207 239 271 303 335 367 368 400 401 433 465 466 467 468 469 501 533 565 597 629 628 660 692 724 756 788 820 
[DBG]    New:     4 5 37 69 70 71 72 73 74 106 107 108 109 141 173 205 206 207 239 271 303 335 367 368 400 401 433 465 466 467 468 469 501 533 565 597 629 661 660 692 724 756 788 820 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 4 5 37 69 70 71 72 73 74 106 107 108 109 141 173 205 206 207 239 271 303 335 367 368 400 401 433 465 466 467 468 469 501 533 565 
[DBG]    Local path (in submap): 597 629 661 660 692 724 
[DBG]    Suffix (out of submap): 756 788 820 
[DBG]  Original agent path length 69 je: 44
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 3: 4, 5, 37, 69, 70, 71, 72, 73, 74, 106, 107, 108, 109, 141, 173, 205, 206, 207, 239, 271, 303, 335, 367, 368, 400, 401, 433, 465, 466, 467, 468, 469, 501, 533, 565, 597, 629, 661, 660, 692, 724, 756, 788, 820, 
[DBG]  Path for agent 69 updated, resulting length: 44
[DBG]  Update the agent path 148 | Original local length: 5 | New local length: 3
[DBG]  agent 148 t=0 => decoded (sx,sy)=(1,1) => global_id=627
[DBG]  agent 148 t=1 => decoded (sx,sy)=(1,2) => global_id=628
[DBG]  agent 148 t=2 => decoded (sx,sy)=(2,2) => global_id=660
[DBG]  Complete path of agent 148:
[DBG]    Original: 776 776 776 776 776 744 744 744 744 744 745 713 712 680 648 649 650 650 650 682 714 715 683 684 685 717 718 718 719 720 688 689 657 658 659 627 627 627 628 660 
[DBG]    New:     776 776 776 776 776 744 744 744 744 744 745 713 712 680 648 649 650 650 650 682 714 715 683 684 685 717 718 718 719 720 688 689 657 658 659 627 628 660 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 776 776 776 776 776 744 744 744 744 744 745 713 712 680 648 649 650 650 650 682 714 715 683 684 685 717 718 718 719 720 688 689 657 658 659 
[DBG]    Local path (in submap): 627 628 660 
[DBG]    Suffix (out of submap): 
[DBG]  Original agent path length 148 je: 40
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 4: 776, 776, 776, 776, 776, 744, 744, 744, 744, 744, 745, 713, 712, 680, 648, 649, 650, 650, 650, 682, 714, 715, 683, 684, 685, 717, 718, 718, 719, 720, 688, 689, 657, 658, 659, 627, 628, 660, 
[DBG]  Path for agent 148 updated, resulting length: 38
[DBG]  Paths successfully updated.
[DBG]  (LNS.cpp) New path for agent 26: 
[DBG]  13, 14, 46, 47, 79, 80, 81, 82, 83, 115, 116, 148, 180, 212, 244, 276, 277, 309, 341, 373, 405, 437, 437, 469, 469, 469, 469, 469, 501, 533, 565, 597, 629, 661, 660, 692, 724, 756, 755, 
[DBG]  (LNS.cpp) New path for agent 28: 
[DBG]  661, 661, 661, 661, 661, 661, 661, 660, 628, 628, 660, 660, 628, 627, 627, 627, 627, 627, 627, 627, 627, 627, 627, 627, 627, 627, 627, 627, 627, 627, 628, 628, 628, 628, 628, 660, 692, 724, 725, 757, 757, 725, 726, 727, 
[DBG]  (LNS.cpp) New path for agent 42: 
[DBG]  224, 192, 193, 194, 226, 227, 228, 260, 261, 293, 325, 326, 327, 328, 329, 361, 393, 425, 426, 458, 490, 491, 523, 555, 587, 588, 588, 588, 589, 590, 591, 623, 655, 656, 657, 658, 659, 691, 692, 724, 725, 726, 727, 759, 
[DBG]  (LNS.cpp) New path for agent 69: 
[DBG]  4, 5, 37, 69, 70, 71, 72, 73, 74, 106, 107, 108, 109, 141, 173, 205, 206, 207, 239, 271, 303, 335, 367, 368, 400, 401, 433, 465, 466, 467, 468, 469, 501, 533, 565, 597, 629, 661, 660, 692, 724, 756, 788, 820, 
[DBG]  (LNS.cpp) New path for agent 148: 
[DBG]  776, 776, 776, 776, 776, 744, 744, 744, 744, 744, 745, 713, 712, 680, 648, 649, 650, 650, 650, 682, 714, 715, 683, 684, 685, 717, 718, 718, 719, 720, 688, 689, 657, 658, 659, 627, 628, 660, 
[DBG]  Delta value: 0.00970874
[DBG]  Rewarding metric index = 1
[DBG]  component_weights = {0.0126674, 0.97208, 0.00557931, 0.00967323}
[DBG]  opSuccess value: 1
[STAT] neighbor.sum_of_costs before recomputation: 204
[STAT] neighbor.old_sum_of_costs before recomputation: 206
[STAT] sum_of_costs before recomputation: 4310
[DBG]  Validate solution immediately after SAT success.
[WARNING] Problem after SAT: Target conflict: agent 69 (len 43) traverses target of agent 148 (len 37) at location 660 at timestep 38
[DBG]  [DEBUG] Attempting immediate repair via init_lns because problem occurred after SAT (should be applied only for conflicts...).
[DBG]  [DEBUG] Passing 150 agents to init_lns (skip=true).
[DBG]  [DEBUG] path_table contents for selected agents (neighbor.agents):
[DBG]    Agent 26 => controlling path length=39
[DBG]    Agent 28 => controlling path length=44
[DBG]    Agent 42 => controlling path length=44
[DBG]    Agent 69 => controlling path length=44
[DBG]    Agent 148 => controlling path length=38
[DBG]  hodnota skip_initial_solution=1
[DBG]  We skip initialSolution => call buildCollisionData()
[DBG]  buildCollisionData() called – skip_initial_solution case.
[DBG]  Agents.size()=150, collision_graph.size()=150
[DBG]  agent 69 => updateCollidingPairs => foundCollision
[DBG]  agent 148 => updateCollidingPairs => foundCollision
[DBG]  Conflicting agent pairs:
[DBG]  agent 69 is in conflict with agent 148
[DBG]  buildCollisionData() => sum_of_costs=4308, num_of_colliding_pairs=1
[DBG]  buildCollisionData done => sum_of_costs=4308, num_of_colliding_pairs=1
[DBG]  sum_of_cost hodnota: 4308
[DBG]  After skip/init build => iteration_stats.back(): sum_of_costs=4308, collisions=1
[DEBUG] Using default neighbor generation strategy for conflicts: 2
[DEBUG] Using default neighbor generation strategy for conflicts: 0
	InitLNS(PP): runtime = 0.00321888, iterations = 3, colliding pairs = 0, initial colliding pairs = 1, solution cost = 4319, initial solution cost = 4308, failed iterations = 0
[DBG]  init_lns->sum_of_costs after init_lns->run: 4319
[DBG]  sum_of_costs after assignment from init_lns->run: 4319
[DBG]  Recomputing sum_of_cost by dividing neighbor.sum_of_costs and neighbor.old_sum_of_costs
[STAT] sum_of_costs after recomputation: 4319
[STAT] Iteration 81
[DBG]  Random chance did not select SAT operator (r=36), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 81
[DBG]  Random chance did not select SAT operator (r=63), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 81
[DBG]  Random chance did not select SAT operator (r=41), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 81
[DBG]  Random chance did not select SAT operator (r=45), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 81
[DBG]  Random chance did not select SAT operator (r=96), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 81
[DBG]  Random chance did not select SAT operator (r=76), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 81
[DBG]  Random chance did not select SAT operator (r=60), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 81
[DBG]  Random chance did not select SAT operator (r=42), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 81
[DBG]  Random chance did not select SAT operator (r=60), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 81
[DBG]  Random chance did not select SAT operator (r=56), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 81
[DBG]  Random chance did not select SAT operator (r=26), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 81
[DBG]  Random chance did not select SAT operator (r=93), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 81
[DBG]  Random chance did not select SAT operator (r=48), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 81
[DBG]  Random chance did not select SAT operator (r=31), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 81
[DBG]  Using SAT operator (destroy+repair SAT).
[DBG]  ====================
[DBG]  SAT destroy operator called.
[DBG]  SAT heuristic: 2
[DBG]  key_agent_id: 28
[DBG]  key_agent_id global path length: 44
[DBG]  Submap content (global positions):
[DBG]  561 562 563 564 565 
[DBG]  593 594 595 596 597 
[DBG]  625 626 627 628 629 
[DBG]  657 658 659 660 661 
[DBG]  689 690 691 692 693 
[DBG]  Map content with agents and obstacles:
[DBG]  . X . X . 
[DBG]  A A X . A 
[DBG]  . X A . A 
[DBG]  . A . A . 
[DBG]  . X . . X 
[DBG]  content of the map structure that we pass to the SAT solver:
[DBG]  1  -1  1  -1  1  
[DBG]  1  1  -1  1  1  
[DBG]  1  -1  1  1  1  
[DBG]  1  1  1  1  1  
[DBG]  1  -1  1  1  -1  
[DBG]  Identifying agents in a submap for rescheduling (when key_agent is there at the time 19):
[DBG]  Agent 3 found intervals in the sub-map:
[DBG]   [17..22]
[DBG]  Agent 3 (interval in submap: [17..22]) contains time 19, added to replan.
[DBG]  Agent 28 found intervals in the sub-map:
[DBG]   [0..36]
[DBG]  Agent 28 (interval in submap: [0..36]) contains time 19, added to replan.
[DBG]  Agent 61 found intervals in the sub-map:
[DBG]   [16..20]
[DBG]  Agent 61 (interval in submap: [16..20]) contains time 19, added to replan.
[DBG]  Agent 62 found intervals in the sub-map:
[DBG]   [17..25]
[DBG]  Agent 62 (interval in submap: [17..25]) contains time 19, added to replan.
[DBG]  Agent 63 found intervals in the sub-map:
[DBG]   [0..14]
[DBG]  Agent 63 is not in sub-map at time 19 (intervals: 
[DBG]  [0..14] )
[DBG]  Agent 74 found intervals in the sub-map:
[DBG]   [13..21]
[DBG]  Agent 74 (interval in submap: [13..21]) contains time 19, added to replan.
[DBG]  Agent 79 found intervals in the sub-map:
[DBG]   [15..23]
[DBG]  Agent 79 (interval in submap: [15..23]) contains time 19, added to replan.
[DBG]  Agent 114 found intervals in the sub-map:
[DBG]   [12..20]
[DBG]  Agent 114 (interval in submap: [12..20]) contains time 19, added to replan.
[DBG]  Agent 3 | Start (global): 594 -> (local): (1, 1) at time 19 | Goal (global): 593 -> (local): (1, 0) at time 22
[DBG]  Agent 28 | Start (global): 627 -> (local): (2, 2) at time 19 | Goal (global): 692 -> (local): (4, 3) at time 36
[DBG]  Agent 61 | Start (global): 593 -> (local): (1, 0) at time 19 | Goal (global): 561 -> (local): (0, 0) at time 20
[DBG]  Agent 62 | Start (global): 658 -> (local): (3, 1) at time 19 | Goal (global): 565 -> (local): (0, 4) at time 25
[DBG]  Agent 74 | Start (global): 629 -> (local): (2, 4) at time 19 | Goal (global): 565 -> (local): (0, 4) at time 21
[DBG]  Agent 79 | Start (global): 660 -> (local): (3, 3) at time 19 | Goal (global): 565 -> (local): (0, 4) at time 23
[DBG]  Agent 114 | Start (global): 597 -> (local): (1, 4) at time 19 | Goal (global): 565 -> (local): (0, 4) at time 20
[DBG]  [REPAIR] SAT destroy operator called.
[DBG]  [REPAIR] SAT operator – launching subproblem FOR OPTIMIZATION.
[DBG]  Creating local paths (sx, sy) in the submap for T_sync = 19
[DBG]    Agent 3 (global paths from T=19 to 22) has local path: (1,1) (1,1) (1,1) (1,0) 
[DBG]    Agent 28 (global paths from T=19 to 36) has local path: (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,3) (2,3) (2,3) (2,3) (2,3) (3,3) (4,3) 
[DBG]    Agent 61 (global paths from T=19 to 20) has local path: (1,0) (0,0) 
[DBG]    Agent 62 (global paths from T=19 to 25) has local path: (3,1) (3,2) (3,3) (2,3) (1,3) (1,4) (0,4) 
[DBG]    Agent 74 (global paths from T=19 to 21) has local path: (2,4) (1,4) (0,4) 
[DBG]    Agent 79 (global paths from T=19 to 23) has local path: (3,3) (3,4) (2,4) (1,4) (0,4) 
[DBG]    Agent 114 (global paths from T=19 to 20) has local path: (1,4) (0,4) 
[DBG]  Checking input data for SAT solver:
[DBG]    - Number of agents to replan: 7
[DBG]  Agent 3 has the original local path length: 4 => Start (1,1), Goal (1,0)
[DBG]  Agent 28 has the original local path length: 18 => Start (2,2), Goal (4,3)
[DBG]  Agent 61 has the original local path length: 2 => Start (1,0), Goal (0,0)
[DBG]  Agent 62 has the original local path length: 7 => Start (3,1), Goal (0,4)
[DBG]  Agent 74 has the original local path length: 3 => Start (2,4), Goal (0,4)
[DBG]  Agent 79 has the original local path length: 5 => Start (3,3), Goal (0,4)
[DBG]  Agent 114 has the original local path length: 2 => Start (1,4), Goal (0,4)
[DBG]  Start position: (1, 1), (2, 2), (1, 0), (3, 1), (2, 4), (3, 3), (1, 4), 
[DBG]  Goal position: (1, 0), (4, 3), (0, 0), (0, 4), (0, 4), (0, 4), (0, 4), 
[DBG]  SAT instance and solver created.
Currently solving
Instance name: scen
Map name: map
Encoding used: disappear_at_goal
SAT solver used: Kissat
Optimizing function: sum of costs
Number of agents: 7
Mks LB: 7
SoC LB: 25
Delta: 0
Remaining time: 300000 [ms]

Vertex conflict! Agents 0, 1, timestep 4, location 0
Swapping conflict! Agents 0, 1, timestep 4, edge (0,0)
Vertex conflict! Agents 0, 1, timestep 5, location 0
Swapping conflict! Agents 0, 1, timestep 5, edge (0,0)
Vertex conflict! Agents 0, 1, timestep 6, location 0
Vertex conflict! Agents 0, 2, timestep 2, location 0
Swapping conflict! Agents 0, 2, timestep 2, edge (0,0)
Vertex conflict! Agents 0, 2, timestep 3, location 0
Swapping conflict! Agents 0, 2, timestep 3, edge (0,0)
Vertex conflict! Agents 0, 2, timestep 4, location 0
Swapping conflict! Agents 0, 2, timestep 4, edge (0,0)
Vertex conflict! Agents 0, 2, timestep 5, location 0
Swapping conflict! Agents 0, 2, timestep 5, edge (0,0)
Vertex conflict! Agents 0, 2, timestep 6, location 0
Vertex conflict! Agents 0, 4, timestep 3, location 0
Swapping conflict! Agents 0, 4, timestep 3, edge (0,0)
Vertex conflict! Agents 0, 4, timestep 4, location 0
Swapping conflict! Agents 0, 4, timestep 4, edge (0,0)
Vertex conflict! Agents 0, 4, timestep 5, location 0
Swapping conflict! Agents 0, 4, timestep 5, edge (0,0)
Vertex conflict! Agents 0, 4, timestep 6, location 0
Vertex conflict! Agents 0, 5, timestep 5, location 0
Swapping conflict! Agents 0, 5, timestep 5, edge (0,0)
Vertex conflict! Agents 0, 5, timestep 6, location 0
Vertex conflict! Agents 0, 6, timestep 2, location 0
Swapping conflict! Agents 0, 6, timestep 2, edge (0,0)
Vertex conflict! Agents 0, 6, timestep 3, location 0
Swapping conflict! Agents 0, 6, timestep 3, edge (0,0)
Vertex conflict! Agents 0, 6, timestep 4, location 0
Swapping conflict! Agents 0, 6, timestep 4, edge (0,0)
Vertex conflict! Agents 0, 6, timestep 5, location 0
Swapping conflict! Agents 0, 6, timestep 5, edge (0,0)
Vertex conflict! Agents 0, 6, timestep 6, location 0
Vertex conflict! Agents 1, 2, timestep 4, location 0
Swapping conflict! Agents 1, 2, timestep 4, edge (0,0)
Vertex conflict! Agents 1, 2, timestep 5, location 0
Swapping conflict! Agents 1, 2, timestep 5, edge (0,0)
Vertex conflict! Agents 1, 2, timestep 6, location 0
Vertex conflict! Agents 1, 4, timestep 4, location 0
Swapping conflict! Agents 1, 4, timestep 4, edge (0,0)
Vertex conflict! Agents 1, 4, timestep 5, location 0
Swapping conflict! Agents 1, 4, timestep 5, edge (0,0)
Vertex conflict! Agents 1, 4, timestep 6, location 0
Vertex conflict! Agents 1, 5, timestep 5, location 0
Swapping conflict! Agents 1, 5, timestep 5, edge (0,0)
Vertex conflict! Agents 1, 5, timestep 6, location 0
Vertex conflict! Agents 1, 6, timestep 4, location 0
Swapping conflict! Agents 1, 6, timestep 4, edge (0,0)
Vertex conflict! Agents 1, 6, timestep 5, location 0
Swapping conflict! Agents 1, 6, timestep 5, edge (0,0)
Vertex conflict! Agents 1, 6, timestep 6, location 0
Vertex conflict! Agents 2, 4, timestep 3, location 0
Swapping conflict! Agents 2, 4, timestep 3, edge (0,0)
Vertex conflict! Agents 2, 4, timestep 4, location 0
Swapping conflict! Agents 2, 4, timestep 4, edge (0,0)
Vertex conflict! Agents 2, 4, timestep 5, location 0
Swapping conflict! Agents 2, 4, timestep 5, edge (0,0)
Vertex conflict! Agents 2, 4, timestep 6, location 0
Vertex conflict! Agents 2, 5, timestep 5, location 0
Swapping conflict! Agents 2, 5, timestep 5, edge (0,0)
Vertex conflict! Agents 2, 5, timestep 6, location 0
Vertex conflict! Agents 2, 6, timestep 2, location 0
Swapping conflict! Agents 2, 6, timestep 2, edge (0,0)
Vertex conflict! Agents 2, 6, timestep 3, location 0
Swapping conflict! Agents 2, 6, timestep 3, edge (0,0)
Vertex conflict! Agents 2, 6, timestep 4, location 0
Swapping conflict! Agents 2, 6, timestep 4, edge (0,0)
Vertex conflict! Agents 2, 6, timestep 5, location 0
Swapping conflict! Agents 2, 6, timestep 5, edge (0,0)
Vertex conflict! Agents 2, 6, timestep 6, location 0
Vertex conflict! Agents 4, 5, timestep 5, location 0
Swapping conflict! Agents 4, 5, timestep 5, edge (0,0)
Vertex conflict! Agents 4, 5, timestep 6, location 0
Vertex conflict! Agents 4, 6, timestep 3, location 0
Swapping conflict! Agents 4, 6, timestep 3, edge (0,0)
Vertex conflict! Agents 4, 6, timestep 4, location 0
Swapping conflict! Agents 4, 6, timestep 4, edge (0,0)
Vertex conflict! Agents 4, 6, timestep 5, location 0
Swapping conflict! Agents 4, 6, timestep 5, edge (0,0)
Vertex conflict! Agents 4, 6, timestep 6, location 0
Vertex conflict! Agents 5, 6, timestep 5, location 0
Swapping conflict! Agents 5, 6, timestep 5, edge (0,0)
Vertex conflict! Agents 5, 6, timestep 6, location 0
Found plan [agents = 7] [timesteps = 7]
Agent #0 : 4 3 0 0 0 0 0 
Agent #1 : 8 9 14 18 0 0 0 
Agent #2 : 3 0 0 0 0 0 0 
Agent #3 : 12 13 8 9 10 6 2 
Agent #4 : 10 6 2 0 0 0 0 
Agent #5 : 14 15 10 6 2 0 0 
Agent #6 : 6 2 0 0 0 0 0 

[STAT] Solver returned: 0
[DBG]  Agent (index) 3 | New local path (submap idx):
[DBG]  4 3 
[DBG]  Agent (index) 28 | New local path (submap idx):
[DBG]  8 9 14 18 
[DBG]  Agent (index) 61 | New local path (submap idx):
[DBG]  3 0 
[DBG]  Agent (index) 62 | New local path (submap idx):
[DBG]  12 13 8 9 10 6 2 
[DBG]  Agent (index) 74 | New local path (submap idx):
[DBG]  10 6 2 
[DBG]  Agent (index) 79 | New local path (submap idx):
[DBG]  14 15 10 6 2 
[DBG]  Agent (index) 114 | New local path (submap idx):
[DBG]  6 2 
[DBG]  Update the agent path 3 | Original local length: 4 | New local length: 2
[DBG]  agent 3 t=0 => decoded (sx,sy)=(1,1) => global_id=594
[DBG]  agent 3 t=1 => decoded (sx,sy)=(1,0) => global_id=593
[DBG]  Complete path of agent 3:
[DBG]    Original: 468 468 468 468 468 468 468 467 466 466 467 499 499 499 498 530 529 561 593 594 594 594 593 592 591 591 590 622 654 686 718 719 751 783 815 847 879 880 881 913 912 
[DBG]    New:     468 468 468 468 468 468 468 467 466 466 467 499 499 499 498 530 529 561 593 594 593 592 591 591 590 622 654 686 718 719 751 783 815 847 879 880 881 913 912 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 468 468 468 468 468 468 468 467 466 466 467 499 499 499 498 530 529 561 593 
[DBG]    Local path (in submap): 594 593 592 591 
[DBG]    Suffix (out of submap): 591 590 622 654 686 718 719 751 783 815 847 879 880 881 913 912 
[DBG]  Original agent path length 3 je: 41
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 0: 468, 468, 468, 468, 468, 468, 468, 467, 466, 466, 467, 499, 499, 499, 498, 530, 529, 561, 593, 594, 593, 592, 591, 591, 590, 622, 654, 686, 718, 719, 751, 783, 815, 847, 879, 880, 881, 913, 912, 
[DBG]  Path for agent 3 updated, resulting length: 39
[DBG]  Update the agent path 28 | Original local length: 18 | New local length: 4
[DBG]  agent 28 t=0 => decoded (sx,sy)=(2,2) => global_id=627
[DBG]  agent 28 t=1 => decoded (sx,sy)=(2,3) => global_id=628
[DBG]  agent 28 t=2 => decoded (sx,sy)=(3,3) => global_id=660
[DBG]  agent 28 t=3 => decoded (sx,sy)=(4,3) => global_id=692
[DBG]  Complete path of agent 28:
[DBG]    Original: 661 661 661 661 661 661 661 660 628 628 660 660 628 627 627 627 627 627 627 627 627 627 627 627 627 627 627 627 627 627 628 628 628 628 628 660 692 724 725 757 757 725 726 727 
[DBG]    New:     661 661 661 661 661 661 661 660 628 628 660 660 628 627 627 627 627 627 627 627 628 660 692 724 725 757 757 725 726 727 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 661 661 661 661 661 661 661 660 628 628 660 660 628 627 627 627 627 627 627 
[DBG]    Local path (in submap): 627 628 660 692 724 725 757 757 725 726 727 
[DBG]    Suffix (out of submap): 
[DBG]  Original agent path length 28 je: 44
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 1: 661, 661, 661, 661, 661, 661, 661, 660, 628, 628, 660, 660, 628, 627, 627, 627, 627, 627, 627, 627, 628, 660, 692, 724, 725, 757, 757, 725, 726, 727, 
[DBG]  Path for agent 28 updated, resulting length: 30
[DBG]  Update the agent path 61 | Original local length: 2 | New local length: 2
[DBG]  agent 61 t=0 => decoded (sx,sy)=(1,0) => global_id=593
[DBG]  agent 61 t=1 => decoded (sx,sy)=(0,0) => global_id=561
[DBG]  Complete path of agent 61:
[DBG]    Original: 813 813 813 813 813 813 813 813 813 814 782 750 751 752 753 721 689 657 625 593 561 529 530 498 498 499 467 435 403 404 405 406 407 375 376 377 345 313 
[DBG]    New:     813 813 813 813 813 813 813 813 813 814 782 750 751 752 753 721 689 657 625 593 561 529 530 498 498 499 467 435 403 404 405 406 407 375 376 377 345 313 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 813 813 813 813 813 813 813 813 813 814 782 750 751 752 753 721 689 657 625 
[DBG]    Local path (in submap): 593 561 
[DBG]    Suffix (out of submap): 529 530 498 498 499 467 435 403 404 405 406 407 375 376 377 345 313 
[DBG]  Original agent path length 61 je: 38
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 2: 813, 813, 813, 813, 813, 813, 813, 813, 813, 814, 782, 750, 751, 752, 753, 721, 689, 657, 625, 593, 561, 529, 530, 498, 498, 499, 467, 435, 403, 404, 405, 406, 407, 375, 376, 377, 345, 313, 
[DBG]  Path for agent 61 updated, resulting length: 38
[DBG]  Update the agent path 62 | Original local length: 7 | New local length: 7
[DBG]  agent 62 t=0 => decoded (sx,sy)=(3,1) => global_id=658
[DBG]  agent 62 t=1 => decoded (sx,sy)=(3,2) => global_id=659
[DBG]  agent 62 t=2 => decoded (sx,sy)=(2,2) => global_id=627
[DBG]  agent 62 t=3 => decoded (sx,sy)=(2,3) => global_id=628
[DBG]  agent 62 t=4 => decoded (sx,sy)=(2,4) => global_id=629
[DBG]  agent 62 t=5 => decoded (sx,sy)=(1,4) => global_id=597
[DBG]  agent 62 t=6 => decoded (sx,sy)=(0,4) => global_id=565
[DBG]  Complete path of agent 62:
[DBG]    Original: 753 753 753 753 753 753 753 753 753 753 753 753 753 721 722 722 721 689 657 658 659 660 628 596 597 565 566 534 502 470 438 438 406 
[DBG]    New:     753 753 753 753 753 753 753 753 753 753 753 753 753 721 722 722 721 689 657 658 659 627 628 629 597 565 566 534 502 470 438 438 406 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 753 753 753 753 753 753 753 753 753 753 753 753 753 721 722 722 721 689 657 
[DBG]    Local path (in submap): 658 659 627 628 629 597 565 
[DBG]    Suffix (out of submap): 566 534 502 470 438 438 406 
[DBG]  Original agent path length 62 je: 33
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 3: 753, 753, 753, 753, 753, 753, 753, 753, 753, 753, 753, 753, 753, 721, 722, 722, 721, 689, 657, 658, 659, 627, 628, 629, 597, 565, 566, 534, 502, 470, 438, 438, 406, 
[DBG]  Path for agent 62 updated, resulting length: 33
[DBG]  Update the agent path 74 | Original local length: 3 | New local length: 3
[DBG]  agent 74 t=0 => decoded (sx,sy)=(2,4) => global_id=629
[DBG]  agent 74 t=1 => decoded (sx,sy)=(1,4) => global_id=597
[DBG]  agent 74 t=2 => decoded (sx,sy)=(0,4) => global_id=565
[DBG]  Complete path of agent 74:
[DBG]    Original: 752 752 752 752 752 752 751 751 751 751 752 720 721 689 657 658 659 660 628 629 597 565 566 534 502 470 438 439 440 472 504 
[DBG]    New:     752 752 752 752 752 752 751 751 751 751 752 720 721 689 657 658 659 660 628 629 597 565 566 534 502 470 438 439 440 472 504 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 752 752 752 752 752 752 751 751 751 751 752 720 721 689 657 658 659 660 628 
[DBG]    Local path (in submap): 629 597 565 
[DBG]    Suffix (out of submap): 566 534 502 470 438 439 440 472 504 
[DBG]  Original agent path length 74 je: 31
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 4: 752, 752, 752, 752, 752, 752, 751, 751, 751, 751, 752, 720, 721, 689, 657, 658, 659, 660, 628, 629, 597, 565, 566, 534, 502, 470, 438, 439, 440, 472, 504, 
[DBG]  Path for agent 74 updated, resulting length: 31
[DBG]  Update the agent path 79 | Original local length: 5 | New local length: 5
[DBG]  agent 79 t=0 => decoded (sx,sy)=(3,3) => global_id=660
[DBG]  agent 79 t=1 => decoded (sx,sy)=(3,4) => global_id=661
[DBG]  agent 79 t=2 => decoded (sx,sy)=(2,4) => global_id=629
[DBG]  agent 79 t=3 => decoded (sx,sy)=(1,4) => global_id=597
[DBG]  agent 79 t=4 => decoded (sx,sy)=(0,4) => global_id=565
[DBG]  Complete path of agent 79:
[DBG]    Original: 1004 1005 973 941 909 877 845 846 814 782 750 718 719 720 688 689 657 658 659 660 661 629 597 565 533 501 502 470 438 439 440 408 409 409 377 345 313 281 249 217 185 153 121 122 123 
[DBG]    New:     1004 1005 973 941 909 877 845 846 814 782 750 718 719 720 688 689 657 658 659 660 661 629 597 565 533 501 502 470 438 439 440 408 409 409 377 345 313 281 249 217 185 153 121 122 123 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 1004 1005 973 941 909 877 845 846 814 782 750 718 719 720 688 689 657 658 659 
[DBG]    Local path (in submap): 660 661 629 597 565 
[DBG]    Suffix (out of submap): 533 501 502 470 438 439 440 408 409 409 377 345 313 281 249 217 185 153 121 122 123 
[DBG]  Original agent path length 79 je: 45
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 5: 1004, 1005, 973, 941, 909, 877, 845, 846, 814, 782, 750, 718, 719, 720, 688, 689, 657, 658, 659, 660, 661, 629, 597, 565, 533, 501, 502, 470, 438, 439, 440, 408, 409, 409, 377, 345, 313, 281, 249, 217, 185, 153, 121, 122, 123, 
[DBG]  Path for agent 79 updated, resulting length: 45
[DBG]  Update the agent path 114 | Original local length: 2 | New local length: 2
[DBG]  agent 114 t=0 => decoded (sx,sy)=(1,4) => global_id=597
[DBG]  agent 114 t=1 => decoded (sx,sy)=(0,4) => global_id=565
[DBG]  Complete path of agent 114:
[DBG]    Original: 875 843 811 812 780 781 782 783 784 752 720 721 689 657 658 659 660 628 596 597 565 533 534 502 503 504 472 440 408 376 344 312 312 313 281 249 217 185 153 154 
[DBG]    New:     875 843 811 812 780 781 782 783 784 752 720 721 689 657 658 659 660 628 596 597 565 533 534 502 503 504 472 440 408 376 344 312 312 313 281 249 217 185 153 154 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 875 843 811 812 780 781 782 783 784 752 720 721 689 657 658 659 660 628 596 
[DBG]    Local path (in submap): 597 565 
[DBG]    Suffix (out of submap): 533 534 502 503 504 472 440 408 376 344 312 312 313 281 249 217 185 153 154 
[DBG]  Original agent path length 114 je: 40
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 6: 875, 843, 811, 812, 780, 781, 782, 783, 784, 752, 720, 721, 689, 657, 658, 659, 660, 628, 596, 597, 565, 533, 534, 502, 503, 504, 472, 440, 408, 376, 344, 312, 312, 313, 281, 249, 217, 185, 153, 154, 
[DBG]  Path for agent 114 updated, resulting length: 40
[DBG]  Paths successfully updated.
[DBG]  (LNS.cpp) New path for agent 3: 
[DBG]  468, 468, 468, 468, 468, 468, 468, 467, 466, 466, 467, 499, 499, 499, 498, 530, 529, 561, 593, 594, 593, 592, 591, 591, 590, 622, 654, 686, 718, 719, 751, 783, 815, 847, 879, 880, 881, 913, 912, 
[DBG]  (LNS.cpp) New path for agent 28: 
[DBG]  661, 661, 661, 661, 661, 661, 661, 660, 628, 628, 660, 660, 628, 627, 627, 627, 627, 627, 627, 627, 628, 660, 692, 724, 725, 757, 757, 725, 726, 727, 
[DBG]  (LNS.cpp) New path for agent 61: 
[DBG]  813, 813, 813, 813, 813, 813, 813, 813, 813, 814, 782, 750, 751, 752, 753, 721, 689, 657, 625, 593, 561, 529, 530, 498, 498, 499, 467, 435, 403, 404, 405, 406, 407, 375, 376, 377, 345, 313, 
[DBG]  (LNS.cpp) New path for agent 62: 
[DBG]  753, 753, 753, 753, 753, 753, 753, 753, 753, 753, 753, 753, 753, 721, 722, 722, 721, 689, 657, 658, 659, 627, 628, 629, 597, 565, 566, 534, 502, 470, 438, 438, 406, 
[DBG]  (LNS.cpp) New path for agent 74: 
[DBG]  752, 752, 752, 752, 752, 752, 751, 751, 751, 751, 752, 720, 721, 689, 657, 658, 659, 660, 628, 629, 597, 565, 566, 534, 502, 470, 438, 439, 440, 472, 504, 
[DBG]  (LNS.cpp) New path for agent 79: 
[DBG]  1004, 1005, 973, 941, 909, 877, 845, 846, 814, 782, 750, 718, 719, 720, 688, 689, 657, 658, 659, 660, 661, 629, 597, 565, 533, 501, 502, 470, 438, 439, 440, 408, 409, 409, 377, 345, 313, 281, 249, 217, 185, 153, 121, 122, 123, 
[DBG]  (LNS.cpp) New path for agent 114: 
[DBG]  875, 843, 811, 812, 780, 781, 782, 783, 784, 752, 720, 721, 689, 657, 658, 659, 660, 628, 596, 597, 565, 533, 534, 502, 503, 504, 472, 440, 408, 376, 344, 312, 312, 313, 281, 249, 217, 185, 153, 154, 
[DBG]  Delta value: 0.0603774
[DBG]  Rewarding metric index = 1
[DBG]  component_weights = {0.0113819, 0.974913, 0.00501312, 0.00869158}
[DBG]  opSuccess value: 1
[STAT] neighbor.sum_of_costs before recomputation: 249
[STAT] neighbor.old_sum_of_costs before recomputation: 265
[STAT] sum_of_costs before recomputation: 4319
[DBG]  Validate solution immediately after SAT success.
[WARNING] Problem after SAT: Target conflict: agent 57 (len 42) traverses target of agent 3 (len 38) at location 912 at timestep 39
[DBG]  [DEBUG] Attempting immediate repair via init_lns because problem occurred after SAT (should be applied only for conflicts...).
[DBG]  [DEBUG] Passing 150 agents to init_lns (skip=true).
[DBG]  [DEBUG] path_table contents for selected agents (neighbor.agents):
[DBG]    Agent 3 => controlling path length=39
[DBG]    Agent 28 => controlling path length=30
[DBG]    Agent 61 => controlling path length=38
[DBG]    Agent 62 => controlling path length=33
[DBG]    Agent 74 => controlling path length=31
[DBG]    Agent 79 => controlling path length=45
[DBG]    Agent 114 => controlling path length=40
[DBG]  hodnota skip_initial_solution=1
[DBG]  We skip initialSolution => call buildCollisionData()
[DBG]  buildCollisionData() called – skip_initial_solution case.
[DBG]  Agents.size()=150, collision_graph.size()=150
[DBG]  agent 3 => updateCollidingPairs => foundCollision
[DBG]  agent 28 => updateCollidingPairs => foundCollision
[DBG]  agent 42 => updateCollidingPairs => foundCollision
[DBG]  agent 57 => updateCollidingPairs => foundCollision
[DBG]  agent 98 => updateCollidingPairs => foundCollision
[DBG]  agent 111 => updateCollidingPairs => foundCollision
[DBG]  Conflicting agent pairs:
[DBG]  agent 3 is in conflict with agent 57
[DBG]  agent 3 is in conflict with agent 98
[DBG]  agent 28 is in conflict with agent 42
[DBG]  agent 28 is in conflict with agent 111
[DBG]  buildCollisionData() => sum_of_costs=4303, num_of_colliding_pairs=4
[DBG]  buildCollisionData done => sum_of_costs=4303, num_of_colliding_pairs=4
[DBG]  sum_of_cost hodnota: 4303
[DBG]  After skip/init build => iteration_stats.back(): sum_of_costs=4303, collisions=4
[DEBUG] Using default neighbor generation strategy for conflicts: 2
[DEBUG] Using default neighbor generation strategy for conflicts: 0
[DEBUG] Using default neighbor generation strategy for conflicts: 2
[DEBUG] Using default neighbor generation strategy for conflicts: 1
[DEBUG] Using default neighbor generation strategy for conflicts: 2
[DEBUG] Using default neighbor generation strategy for conflicts: 1
[DEBUG] Using default neighbor generation strategy for conflicts: 2
[DEBUG] Using default neighbor generation strategy for conflicts: 2
[DEBUG] Using default neighbor generation strategy for conflicts: 1
[DEBUG] Using default neighbor generation strategy for conflicts: 1
	InitLNS(PP): runtime = 0.0168164, iterations = 11, colliding pairs = 0, initial colliding pairs = 4, solution cost = 4312, initial solution cost = 4303, failed iterations = 0
[DBG]  init_lns->sum_of_costs after init_lns->run: 4312
[DBG]  sum_of_costs after assignment from init_lns->run: 4312
[DBG]  Recomputing sum_of_cost by dividing neighbor.sum_of_costs and neighbor.old_sum_of_costs
[STAT] sum_of_costs after recomputation: 4312
[STAT] Iteration 82
[DBG]  Random chance did not select SAT operator (r=57), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 82
[DBG]  Random chance did not select SAT operator (r=52), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 82
[DBG]  Using SAT operator (destroy+repair SAT).
[DBG]  ====================
[DBG]  SAT destroy operator called.
[DBG]  SAT heuristic: 2
[DBG]  key_agent_id: 28
[DBG]  key_agent_id global path length: 44
[DBG]  Submap content (global positions):
[DBG]  595 596 597 598 599 
[DBG]  627 628 629 630 631 
[DBG]  659 660 661 662 663 
[DBG]  691 692 693 694 695 
[DBG]  723 724 725 726 727 
[DBG]  Map content with agents and obstacles:
[DBG]  X . . X . 
[DBG]  . . A X . 
[DBG]  . A A X X 
[DBG]  . . X X X 
[DBG]  X . . . . 
[DBG]  content of the map structure that we pass to the SAT solver:
[DBG]  -1  1  1  -1  1  
[DBG]  1  1  1  -1  1  
[DBG]  1  1  1  -1  -1  
[DBG]  1  1  -1  -1  -1  
[DBG]  -1  1  1  1  1  
[DBG]  Identifying agents in a submap for rescheduling (when key_agent is there at the time 30):
[DBG]  Agent 11 found intervals in the sub-map:
[DBG]  
[DBG]  Agent 11 is not in sub-map at time 30 (intervals: 
[DBG]  )
[DBG]  Agent 26 found intervals in the sub-map:
[DBG]   [31..36]
[DBG]  Agent 26 is not in sub-map at time 30 (intervals: 
[DBG]  [31..36] )
[DBG]  Agent 28 found intervals in the sub-map:
[DBG]   [0..43]
[DBG]  Agent 28 (interval in submap: [0..43]) contains time 30, added to replan.
[DBG]  Agent 45 found intervals in the sub-map:
[DBG]   [28..34]
[DBG]  Agent 45 (interval in submap: [28..34]) contains time 30, added to replan.
[DBG]  Agent 53 found intervals in the sub-map:
[DBG]   [27..32]
[DBG]  Agent 53 (interval in submap: [27..32]) contains time 30, added to replan.
[DBG]  Agent 28 | Start (global): 661 -> (local): (2, 2) at time 30 | Goal (global): 727 -> (local): (4, 4) at time 43
[DBG]  Agent 45 | Start (global): 629 -> (local): (1, 2) at time 30 | Goal (global): 724 -> (local): (4, 1) at time 34
[DBG]  Agent 53 | Start (global): 660 -> (local): (2, 1) at time 30 | Goal (global): 724 -> (local): (4, 1) at time 32
[DBG]  [REPAIR] SAT destroy operator called.
[DBG]  [REPAIR] SAT operator – launching subproblem FOR OPTIMIZATION.
[DBG]  Creating local paths (sx, sy) in the submap for T_sync = 30
[DBG]    Agent 28 (global paths from T=30 to 43) has local path: (2,2) (2,1) (1,1) (1,0) (1,0) (1,0) (1,0) (2,0) (3,0) (3,1) (4,1) (4,2) (4,3) (4,4) 
[DBG]    Agent 45 (global paths from T=30 to 34) has local path: (1,2) (2,2) (2,1) (3,1) (4,1) 
[DBG]    Agent 53 (global paths from T=30 to 32) has local path: (2,1) (3,1) (4,1) 
[DBG]  Checking input data for SAT solver:
[DBG]    - Number of agents to replan: 3
[DBG]  Agent 28 has the original local path length: 14 => Start (2,2), Goal (4,4)
[DBG]  Agent 45 has the original local path length: 5 => Start (1,2), Goal (4,1)
[DBG]  Agent 53 has the original local path length: 3 => Start (2,1), Goal (4,1)
[DBG]  Start position: (2, 2), (1, 2), (2, 1), 
[DBG]  Goal position: (4, 4), (4, 1), (4, 1), 
[DBG]  SAT instance and solver created.
Currently solving
Instance name: scen
Map name: map
Encoding used: disappear_at_goal
SAT solver used: Kissat
Optimizing function: sum of costs
Number of agents: 3
Mks LB: 7
SoC LB: 15
Delta: 0
Remaining time: 300000 [ms]

Vertex conflict! Agents 1, 2, timestep 5, location 0
Swapping conflict! Agents 1, 2, timestep 5, edge (0,0)
Vertex conflict! Agents 1, 2, timestep 6, location 0
Found plan [agents = 3] [timesteps = 7]
Agent #0 : 9 8 11 12 13 14 15 
Agent #1 : 5 9 8 11 12 0 0 
Agent #2 : 8 11 12 0 0 0 0 

[STAT] Solver returned: 0
[DBG]  Agent (index) 28 | New local path (submap idx):
[DBG]  9 8 11 12 13 14 15 
[DBG]  Agent (index) 45 | New local path (submap idx):
[DBG]  5 9 8 11 12 
[DBG]  Agent (index) 53 | New local path (submap idx):
[DBG]  8 11 12 
[DBG]  Update the agent path 28 | Original local length: 14 | New local length: 7
[DBG]  agent 28 t=0 => decoded (sx,sy)=(2,2) => global_id=661
[DBG]  agent 28 t=1 => decoded (sx,sy)=(2,1) => global_id=660
[DBG]  agent 28 t=2 => decoded (sx,sy)=(3,1) => global_id=692
[DBG]  agent 28 t=3 => decoded (sx,sy)=(4,1) => global_id=724
[DBG]  agent 28 t=4 => decoded (sx,sy)=(4,2) => global_id=725
[DBG]  agent 28 t=5 => decoded (sx,sy)=(4,3) => global_id=726
[DBG]  agent 28 t=6 => decoded (sx,sy)=(4,4) => global_id=727
[DBG]  Complete path of agent 28:
[DBG]    Original: 661 661 661 661 661 661 661 660 660 659 627 627 627 627 627 627 627 627 627 628 628 628 629 661 661 661 661 661 661 661 661 660 628 627 627 627 627 659 691 692 724 725 726 727 
[DBG]    New:     661 661 661 661 661 661 661 660 660 659 627 627 627 627 627 627 627 627 627 628 628 628 629 661 661 661 661 661 661 661 661 660 692 724 725 726 727 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 661 661 661 661 661 661 661 660 660 659 627 627 627 627 627 627 627 627 627 628 628 628 629 661 661 661 661 661 661 661 
[DBG]    Local path (in submap): 661 660 692 724 725 726 727 
[DBG]    Suffix (out of submap): 
[DBG]  Original agent path length 28 je: 44
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 0: 661, 661, 661, 661, 661, 661, 661, 660, 660, 659, 627, 627, 627, 627, 627, 627, 627, 627, 627, 628, 628, 628, 629, 661, 661, 661, 661, 661, 661, 661, 661, 660, 692, 724, 725, 726, 727, 
[DBG]  Path for agent 28 updated, resulting length: 37
[DBG]  Update the agent path 45 | Original local length: 5 | New local length: 5
[DBG]  agent 45 t=0 => decoded (sx,sy)=(1,2) => global_id=629
[DBG]  agent 45 t=1 => decoded (sx,sy)=(2,2) => global_id=661
[DBG]  agent 45 t=2 => decoded (sx,sy)=(2,1) => global_id=660
[DBG]  agent 45 t=3 => decoded (sx,sy)=(3,1) => global_id=692
[DBG]  agent 45 t=4 => decoded (sx,sy)=(4,1) => global_id=724
[DBG]  Complete path of agent 45:
[DBG]    Original: 153 185 217 249 281 313 345 377 409 441 440 439 407 406 406 438 406 406 438 470 502 502 501 501 502 534 533 565 597 629 629 661 660 692 724 756 755 787 786 818 850 849 
[DBG]    New:     153 185 217 249 281 313 345 377 409 441 440 439 407 406 406 438 406 406 438 470 502 502 501 501 502 534 533 565 597 629 629 661 660 692 724 756 755 787 786 818 850 849 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 153 185 217 249 281 313 345 377 409 441 440 439 407 406 406 438 406 406 438 470 502 502 501 501 502 534 533 565 597 629 
[DBG]    Local path (in submap): 629 661 660 692 724 
[DBG]    Suffix (out of submap): 756 755 787 786 818 850 849 
[DBG]  Original agent path length 45 je: 42
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 1: 153, 185, 217, 249, 281, 313, 345, 377, 409, 441, 440, 439, 407, 406, 406, 438, 406, 406, 438, 470, 502, 502, 501, 501, 502, 534, 533, 565, 597, 629, 629, 661, 660, 692, 724, 756, 755, 787, 786, 818, 850, 849, 
[DBG]  Path for agent 45 updated, resulting length: 42
[DBG]  Update the agent path 53 | Original local length: 3 | New local length: 3
[DBG]  agent 53 t=0 => decoded (sx,sy)=(2,1) => global_id=660
[DBG]  agent 53 t=1 => decoded (sx,sy)=(3,1) => global_id=692
[DBG]  agent 53 t=2 => decoded (sx,sy)=(4,1) => global_id=724
[DBG]  Complete path of agent 53:
[DBG]    Original: 84 116 148 148 180 212 244 276 276 308 340 340 340 341 373 373 373 405 405 437 469 501 533 534 534 533 565 597 596 628 660 692 724 756 788 820 821 
[DBG]    New:     84 116 148 148 180 212 244 276 276 308 340 340 340 341 373 373 373 405 405 437 469 501 533 534 534 533 565 597 596 628 660 692 724 756 788 820 821 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 84 116 148 148 180 212 244 276 276 308 340 340 340 341 373 373 373 405 405 437 469 501 533 534 534 533 565 597 596 628 
[DBG]    Local path (in submap): 660 692 724 
[DBG]    Suffix (out of submap): 756 788 820 821 
[DBG]  Original agent path length 53 je: 37
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 2: 84, 116, 148, 148, 180, 212, 244, 276, 276, 308, 340, 340, 340, 341, 373, 373, 373, 405, 405, 437, 469, 501, 533, 534, 534, 533, 565, 597, 596, 628, 660, 692, 724, 756, 788, 820, 821, 
[DBG]  Path for agent 53 updated, resulting length: 37
[DBG]  Paths successfully updated.
[DBG]  (LNS.cpp) New path for agent 28: 
[DBG]  661, 661, 661, 661, 661, 661, 661, 660, 660, 659, 627, 627, 627, 627, 627, 627, 627, 627, 627, 628, 628, 628, 629, 661, 661, 661, 661, 661, 661, 661, 661, 660, 692, 724, 725, 726, 727, 
[DBG]  (LNS.cpp) New path for agent 45: 
[DBG]  153, 185, 217, 249, 281, 313, 345, 377, 409, 441, 440, 439, 407, 406, 406, 438, 406, 406, 438, 470, 502, 502, 501, 501, 502, 534, 533, 565, 597, 629, 629, 661, 660, 692, 724, 756, 755, 787, 786, 818, 850, 849, 
[DBG]  (LNS.cpp) New path for agent 53: 
[DBG]  84, 116, 148, 148, 180, 212, 244, 276, 276, 308, 340, 340, 340, 341, 373, 373, 373, 405, 405, 437, 469, 501, 533, 534, 534, 533, 565, 597, 596, 628, 660, 692, 724, 756, 788, 820, 821, 
[DBG]  Delta value: 0.0583333
[DBG]  Rewarding metric index = 1
[DBG]  component_weights = {0.0102431, 0.977423, 0.00451155, 0.00782198}
[DBG]  opSuccess value: 1
[STAT] neighbor.sum_of_costs before recomputation: 113
[STAT] neighbor.old_sum_of_costs before recomputation: 120
[STAT] sum_of_costs before recomputation: 4312
[DBG]  Validate solution immediately after SAT success.
[WARNING] Problem after SAT: Target conflict: agent 42 (len 43) traverses target of agent 28 (len 36) at location 727 at timestep 42
[DBG]  [DEBUG] Attempting immediate repair via init_lns because problem occurred after SAT (should be applied only for conflicts...).
[DBG]  [DEBUG] Passing 150 agents to init_lns (skip=true).
[DBG]  [DEBUG] path_table contents for selected agents (neighbor.agents):
[DBG]    Agent 28 => controlling path length=37
[DBG]    Agent 45 => controlling path length=42
[DBG]    Agent 53 => controlling path length=37
[DBG]  hodnota skip_initial_solution=1
[DBG]  We skip initialSolution => call buildCollisionData()
[DBG]  buildCollisionData() called – skip_initial_solution case.
[DBG]  Agents.size()=150, collision_graph.size()=150
[DBG]  agent 28 => updateCollidingPairs => foundCollision
[DBG]  agent 42 => updateCollidingPairs => foundCollision
[DBG]  Conflicting agent pairs:
[DBG]  agent 28 is in conflict with agent 42
[DBG]  buildCollisionData() => sum_of_costs=4305, num_of_colliding_pairs=1
[DBG]  buildCollisionData done => sum_of_costs=4305, num_of_colliding_pairs=1
[DBG]  sum_of_cost hodnota: 4305
[DBG]  After skip/init build => iteration_stats.back(): sum_of_costs=4305, collisions=1
[DEBUG] Using default neighbor generation strategy for conflicts: 1
[DEBUG] Using default neighbor generation strategy for conflicts: 1
[DEBUG] Using default neighbor generation strategy for conflicts: 1
	InitLNS(PP): runtime = 0.00680913, iterations = 4, colliding pairs = 0, initial colliding pairs = 1, solution cost = 4339, initial solution cost = 4305, failed iterations = 0
[DBG]  init_lns->sum_of_costs after init_lns->run: 4339
[DBG]  sum_of_costs after assignment from init_lns->run: 4339
[DBG]  Recomputing sum_of_cost by dividing neighbor.sum_of_costs and neighbor.old_sum_of_costs
[STAT] sum_of_costs after recomputation: 4339
[STAT] Iteration 83
[DBG]  Random chance did not select SAT operator (r=31), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 83
[DBG]  Random chance did not select SAT operator (r=34), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 83
[DBG]  Random chance did not select SAT operator (r=48), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 83
[DBG]  Using SAT operator (destroy+repair SAT).
[DBG]  ====================
[DBG]  SAT destroy operator called.
[DBG]  SAT heuristic: 2
[DBG]  key_agent_id: 28
[DBG]  key_agent_id global path length: 44
[DBG]  Submap content (global positions):
[DBG]  530 531 532 533 534 
[DBG]  562 563 564 565 566 
[DBG]  594 595 596 597 598 
[DBG]  626 627 628 629 630 
[DBG]  658 659 660 661 662 
[DBG]  Map content with agents and obstacles:
[DBG]  . . X . . 
[DBG]  X . X . . 
[DBG]  . X A . X 
[DBG]  X . . . X 
[DBG]  . A A . X 
[DBG]  content of the map structure that we pass to the SAT solver:
[DBG]  1  1  -1  1  1  
[DBG]  -1  1  -1  1  1  
[DBG]  1  -1  1  1  -1  
[DBG]  -1  1  1  1  -1  
[DBG]  1  1  1  1  -1  
[DBG]  Identifying agents in a submap for rescheduling (when key_agent is there at the time 34):
[DBG]  Agent 26 found intervals in the sub-map:
[DBG]   [29..34]
[DBG]  Agent 26 (interval in submap: [29..34]) contains time 34, added to replan.
[DBG]  Agent 28 found intervals in the sub-map:
[DBG]   [0..18] [31..37]
[DBG]  Agent 28 (interval in submap: [31..37]) contains time 34, added to replan.
[DBG]  Agent 42 found intervals in the sub-map:
[DBG]   [35..36]
[DBG]  Agent 42 is not in sub-map at time 34 (intervals: 
[DBG]  [35..36] )
[DBG]  Agent 55 found intervals in the sub-map:
[DBG]   [35..41]
[DBG]  Agent 55 is not in sub-map at time 34 (intervals: 
[DBG]  [35..41] )
[DBG]  Agent 69 found intervals in the sub-map:
[DBG]  
[DBG]  Agent 69 is not in sub-map at time 34 (intervals: 
[DBG]  )
[DBG]  Agent 148 found intervals in the sub-map:
[DBG]   [31..35]
[DBG]  Agent 148 (interval in submap: [31..35]) contains time 34, added to replan.
[DBG]  Agent 26 | Start (global): 660 -> (local): (4, 2) at time 34 | Goal (global): 660 -> (local): (4, 2) at time 34
[DBG]  Agent 28 | Start (global): 596 -> (local): (2, 2) at time 34 | Goal (global): 659 -> (local): (4, 1) at time 37
[DBG]  Agent 148 | Start (global): 659 -> (local): (4, 1) at time 34 | Goal (global): 660 -> (local): (4, 2) at time 35
[DBG]  [REPAIR] SAT destroy operator called.
[DBG]  [REPAIR] SAT operator – launching subproblem FOR OPTIMIZATION.
[DBG]  Creating local paths (sx, sy) in the submap for T_sync = 34
[DBG]    Agent 26 (global paths from T=34 to 34) has local path: (4,2) 
[DBG]    Agent 28 (global paths from T=34 to 37) has local path: (2,2) (3,2) (3,1) (4,1) 
[DBG]    Agent 148 (global paths from T=34 to 35) has local path: (4,1) (4,2) 
[DBG]  Checking input data for SAT solver:
[DBG]    - Number of agents to replan: 3
[DBG]  Agent 26 has the original local path length: 1 => Start (4,2), Goal (4,2)
[DBG]  Agent 28 has the original local path length: 4 => Start (2,2), Goal (4,1)
[DBG]  Agent 148 has the original local path length: 2 => Start (4,1), Goal (4,2)
[DBG]  Start position: (4, 2), (2, 2), (4, 1), 
[DBG]  Goal position: (4, 2), (4, 1), (4, 2), 
[DBG]  SAT instance and solver created.
Currently solving
Instance name: scen
Map name: map
Encoding used: disappear_at_goal
SAT solver used: Kissat
Optimizing function: sum of costs
Number of agents: 3
Mks LB: 4
SoC LB: 7
Delta: 0
Remaining time: 300000 [ms]

Vertex conflict! Agents 0, 2, timestep 2, location 0
Swapping conflict! Agents 0, 2, timestep 2, edge (0,0)
Vertex conflict! Agents 0, 2, timestep 3, location 0
Found plan [agents = 3] [timesteps = 4]
Agent #0 : 15 0 0 0 
Agent #1 : 8 11 15 14 
Agent #2 : 14 15 0 0 

[STAT] Solver returned: 0
[DBG]  Agent (index) 26 | New local path (submap idx):
[DBG]  15 
[DBG]  Agent (index) 28 | New local path (submap idx):
[DBG]  8 11 15 14 
[DBG]  Agent (index) 148 | New local path (submap idx):
[DBG]  14 15 
[DBG]  Update the agent path 26 | Original local length: 1 | New local length: 1
[DBG]  agent 26 t=0 => decoded (sx,sy)=(4,2) => global_id=660
[DBG]  Complete path of agent 26:
[DBG]    Original: 13 14 46 47 79 80 81 82 83 115 116 148 180 212 244 276 277 309 341 373 405 437 437 469 469 469 469 469 501 533 565 597 629 661 660 692 724 756 755 
[DBG]    New:     13 14 46 47 79 80 81 82 83 115 116 148 180 212 244 276 277 309 341 373 405 437 437 469 469 469 469 469 501 533 565 597 629 661 660 692 724 756 755 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 13 14 46 47 79 80 81 82 83 115 116 148 180 212 244 276 277 309 341 373 405 437 437 469 469 469 469 469 501 533 565 597 629 661 
[DBG]    Local path (in submap): 660 
[DBG]    Suffix (out of submap): 692 724 756 755 
[DBG]  Original agent path length 26 je: 39
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 0: 13, 14, 46, 47, 79, 80, 81, 82, 83, 115, 116, 148, 180, 212, 244, 276, 277, 309, 341, 373, 405, 437, 437, 469, 469, 469, 469, 469, 501, 533, 565, 597, 629, 661, 660, 692, 724, 756, 755, 
[DBG]  Path for agent 26 updated, resulting length: 39
[DBG]  Update the agent path 28 | Original local length: 4 | New local length: 4
[DBG]  agent 28 t=0 => decoded (sx,sy)=(2,2) => global_id=596
[DBG]  agent 28 t=1 => decoded (sx,sy)=(3,2) => global_id=628
[DBG]  agent 28 t=2 => decoded (sx,sy)=(4,2) => global_id=660
[DBG]  agent 28 t=3 => decoded (sx,sy)=(4,1) => global_id=659
[DBG]  Complete path of agent 28:
[DBG]    Original: 661 661 661 661 661 661 661 661 661 661 661 661 629 597 565 566 566 534 534 502 503 504 472 440 439 407 406 438 437 469 501 533 565 597 596 628 627 659 691 692 724 725 726 727 
[DBG]    New:     661 661 661 661 661 661 661 661 661 661 661 661 629 597 565 566 566 534 534 502 503 504 472 440 439 407 406 438 437 469 501 533 565 597 596 628 660 659 691 692 724 725 726 727 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 661 661 661 661 661 661 661 661 661 661 661 661 629 597 565 566 566 534 534 502 503 504 472 440 439 407 406 438 437 469 501 533 565 597 
[DBG]    Local path (in submap): 596 628 660 659 
[DBG]    Suffix (out of submap): 691 692 724 725 726 727 
[DBG]  Original agent path length 28 je: 44
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 1: 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 629, 597, 565, 566, 566, 534, 534, 502, 503, 504, 472, 440, 439, 407, 406, 438, 437, 469, 501, 533, 565, 597, 596, 628, 660, 659, 691, 692, 724, 725, 726, 727, 
[DBG]  Path for agent 28 updated, resulting length: 44
[DBG]  Update the agent path 148 | Original local length: 2 | New local length: 2
[DBG]  agent 148 t=0 => decoded (sx,sy)=(4,1) => global_id=659
[DBG]  agent 148 t=1 => decoded (sx,sy)=(4,2) => global_id=660
[DBG]  Complete path of agent 148:
[DBG]    Original: 776 776 776 776 776 744 744 744 744 744 745 777 778 779 811 812 812 811 779 778 746 714 715 683 684 685 653 654 655 656 657 658 659 659 659 660 
[DBG]    New:     776 776 776 776 776 744 744 744 744 744 745 777 778 779 811 812 812 811 779 778 746 714 715 683 684 685 653 654 655 656 657 658 659 659 659 660 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 776 776 776 776 776 744 744 744 744 744 745 777 778 779 811 812 812 811 779 778 746 714 715 683 684 685 653 654 655 656 657 658 659 659 
[DBG]    Local path (in submap): 659 660 
[DBG]    Suffix (out of submap): 
[DBG]  Original agent path length 148 je: 36
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 2: 776, 776, 776, 776, 776, 744, 744, 744, 744, 744, 745, 777, 778, 779, 811, 812, 812, 811, 779, 778, 746, 714, 715, 683, 684, 685, 653, 654, 655, 656, 657, 658, 659, 659, 659, 660, 
[DBG]  Path for agent 148 updated, resulting length: 36
[DBG]  Paths successfully updated.
[DBG]  (LNS.cpp) New path for agent 26: 
[DBG]  13, 14, 46, 47, 79, 80, 81, 82, 83, 115, 116, 148, 180, 212, 244, 276, 277, 309, 341, 373, 405, 437, 437, 469, 469, 469, 469, 469, 501, 533, 565, 597, 629, 661, 660, 692, 724, 756, 755, 
[DBG]  (LNS.cpp) New path for agent 28: 
[DBG]  661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 629, 597, 565, 566, 566, 534, 534, 502, 503, 504, 472, 440, 439, 407, 406, 438, 437, 469, 501, 533, 565, 597, 596, 628, 660, 659, 691, 692, 724, 725, 726, 727, 
[DBG]  (LNS.cpp) New path for agent 148: 
[DBG]  776, 776, 776, 776, 776, 744, 744, 744, 744, 744, 745, 777, 778, 779, 811, 812, 812, 811, 779, 778, 746, 714, 715, 683, 684, 685, 653, 654, 655, 656, 657, 658, 659, 659, 659, 660, 
[DBG]  Delta value: 0
[DBG]  Rewarding metric index = 1
[DBG]  component_weights = {0.00974193, 0.978528, 0.00429082, 0.00743927}
[DBG]  opSuccess value: 1
[STAT] neighbor.sum_of_costs before recomputation: 116
[STAT] neighbor.old_sum_of_costs before recomputation: 116
[STAT] sum_of_costs before recomputation: 4339
[DBG]  Validate solution immediately after SAT success.
[WARNING] Problem after SAT: Target conflict: agent 28 (len 43) traverses target of agent 148 (len 35) at location 660 at timestep 36
[DBG]  [DEBUG] Attempting immediate repair via init_lns because problem occurred after SAT (should be applied only for conflicts...).
[DBG]  [DEBUG] Passing 150 agents to init_lns (skip=true).
[DBG]  [DEBUG] path_table contents for selected agents (neighbor.agents):
[DBG]    Agent 26 => controlling path length=39
[DBG]    Agent 28 => controlling path length=44
[DBG]    Agent 148 => controlling path length=36
[DBG]  hodnota skip_initial_solution=1
[DBG]  We skip initialSolution => call buildCollisionData()
[DBG]  buildCollisionData() called – skip_initial_solution case.
[DBG]  Agents.size()=150, collision_graph.size()=150
[DBG]  agent 28 => updateCollidingPairs => foundCollision
[DBG]  agent 148 => updateCollidingPairs => foundCollision
[DBG]  Conflicting agent pairs:
[DBG]  agent 28 is in conflict with agent 148
[DBG]  buildCollisionData() => sum_of_costs=4339, num_of_colliding_pairs=1
[DBG]  buildCollisionData done => sum_of_costs=4339, num_of_colliding_pairs=1
[DBG]  sum_of_cost hodnota: 4339
[DBG]  After skip/init build => iteration_stats.back(): sum_of_costs=4339, collisions=1
[DEBUG] Using default neighbor generation strategy for conflicts: 0
	InitLNS(PP): runtime = 0.00183733, iterations = 2, colliding pairs = 0, initial colliding pairs = 1, solution cost = 4333, initial solution cost = 4339, failed iterations = 0
[DBG]  init_lns->sum_of_costs after init_lns->run: 4333
[DBG]  sum_of_costs after assignment from init_lns->run: 4333
[DBG]  Recomputing sum_of_cost by dividing neighbor.sum_of_costs and neighbor.old_sum_of_costs
[STAT] sum_of_costs after recomputation: 4333
[STAT] Iteration 84
[DBG]  Random chance did not select SAT operator (r=25), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 84
[DBG]  Random chance did not select SAT operator (r=75), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 84
[DBG]  Random chance did not select SAT operator (r=75), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 84
[DBG]  Random chance did not select SAT operator (r=97), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 84
[DBG]  Random chance did not select SAT operator (r=83), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 84
[DBG]  Random chance did not select SAT operator (r=47), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 84
[DBG]  Random chance did not select SAT operator (r=55), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 84
[DBG]  Random chance did not select SAT operator (r=43), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 84
[DBG]  Random chance did not select SAT operator (r=11), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 84
[DBG]  Random chance did not select SAT operator (r=53), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 84
[DBG]  Random chance did not select SAT operator (r=26), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 84
[DBG]  Random chance did not select SAT operator (r=26), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 84
[DBG]  Random chance did not select SAT operator (r=74), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 84
[DBG]  Random chance did not select SAT operator (r=63), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 84
[DBG]  Random chance did not select SAT operator (r=11), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 84
[DBG]  Random chance did not select SAT operator (r=15), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 84
[DBG]  Random chance did not select SAT operator (r=23), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 84
[DBG]  Random chance did not select SAT operator (r=82), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 84
[DBG]  Random chance did not select SAT operator (r=60), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 84
[DBG]  Random chance did not select SAT operator (r=99), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 84
[DBG]  Random chance did not select SAT operator (r=73), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 84
[DBG]  Using SAT operator (destroy+repair SAT).
[DBG]  ====================
[DBG]  SAT destroy operator called.
[DBG]  SAT heuristic: 2
[DBG]  key_agent_id: 28
[DBG]  key_agent_id global path length: 44
[DBG]  Submap content (global positions):
[DBG]  595 596 597 598 599 
[DBG]  627 628 629 630 631 
[DBG]  659 660 661 662 663 
[DBG]  691 692 693 694 695 
[DBG]  723 724 725 726 727 
[DBG]  Map content with agents and obstacles:
[DBG]  X . A X . 
[DBG]  . . . X . 
[DBG]  A . A X X 
[DBG]  . . X X X 
[DBG]  X . . . . 
[DBG]  content of the map structure that we pass to the SAT solver:
[DBG]  -1  1  1  -1  1  
[DBG]  1  1  1  -1  1  
[DBG]  1  1  1  -1  -1  
[DBG]  1  1  -1  -1  -1  
[DBG]  -1  1  1  1  1  
[DBG]  Identifying agents in a submap for rescheduling (when key_agent is there at the time 20):
[DBG]  Agent 11 found intervals in the sub-map:
[DBG]  
[DBG]  Agent 11 is not in sub-map at time 20 (intervals: 
[DBG]  )
[DBG]  Agent 28 found intervals in the sub-map:
[DBG]   [0..43]
[DBG]  Agent 28 (interval in submap: [0..43]) contains time 20, added to replan.
[DBG]  Agent 30 found intervals in the sub-map:
[DBG]   [15..20]
[DBG]  Agent 30 (interval in submap: [15..20]) contains time 20, added to replan.
[DBG]  Agent 61 found intervals in the sub-map:
[DBG]  
[DBG]  Agent 61 is not in sub-map at time 20 (intervals: 
[DBG]  )
[DBG]  Agent 62 found intervals in the sub-map:
[DBG]   [20..24]
[DBG]  Agent 62 (interval in submap: [20..24]) contains time 20, added to replan.
[DBG]  Agent 79 found intervals in the sub-map:
[DBG]  
[DBG]  Agent 79 is not in sub-map at time 20 (intervals: 
[DBG]  )
[DBG]  Agent 28 | Start (global): 661 -> (local): (2, 2) at time 20 | Goal (global): 727 -> (local): (4, 4) at time 43
[DBG]  Agent 30 | Start (global): 597 -> (local): (0, 2) at time 20 | Goal (global): 597 -> (local): (0, 2) at time 20
[DBG]  Agent 62 | Start (global): 659 -> (local): (2, 0) at time 20 | Goal (global): 597 -> (local): (0, 2) at time 24
[DBG]  [REPAIR] SAT destroy operator called.
[DBG]  [REPAIR] SAT operator – launching subproblem FOR OPTIMIZATION.
[DBG]  Creating local paths (sx, sy) in the submap for T_sync = 20
[DBG]    Agent 28 (global paths from T=20 to 43) has local path: (2,2) (2,2) (2,2) (2,2) (2,1) (1,1) (1,0) (1,0) (1,0) (1,0) (1,0) (1,0) (1,0) (1,0) (1,0) (1,0) (1,0) (2,0) (3,0) (3,1) (4,1) (4,2) (4,3) (4,4) 
[DBG]    Agent 30 (global paths from T=20 to 20) has local path: (0,2) 
[DBG]    Agent 62 (global paths from T=20 to 24) has local path: (2,0) (1,0) (1,1) (0,1) (0,2) 
[DBG]  Checking input data for SAT solver:
[DBG]    - Number of agents to replan: 3
[DBG]  Agent 28 has the original local path length: 24 => Start (2,2), Goal (4,4)
[DBG]  Agent 30 has the original local path length: 1 => Start (0,2), Goal (0,2)
[DBG]  Agent 62 has the original local path length: 5 => Start (2,0), Goal (0,2)
[DBG]  Start position: (2, 2), (0, 2), (2, 0), 
[DBG]  Goal position: (4, 4), (0, 2), (0, 2), 
[DBG]  SAT instance and solver created.
Currently solving
Instance name: scen
Map name: map
Encoding used: disappear_at_goal
SAT solver used: Kissat
Optimizing function: sum of costs
Number of agents: 3
Mks LB: 7
SoC LB: 13
Delta: 0
Remaining time: 300000 [ms]

Vertex conflict! Agents 1, 2, timestep 5, location 0
Swapping conflict! Agents 1, 2, timestep 5, edge (0,0)
Vertex conflict! Agents 1, 2, timestep 6, location 0
Found plan [agents = 3] [timesteps = 7]
Agent #0 : 9 8 11 12 13 14 15 
Agent #1 : 1 0 0 0 0 0 0 
Agent #2 : 7 3 4 5 1 0 0 

[STAT] Solver returned: 0
[DBG]  Agent (index) 28 | New local path (submap idx):
[DBG]  9 8 11 12 13 14 15 
[DBG]  Agent (index) 30 | New local path (submap idx):
[DBG]  1 
[DBG]  Agent (index) 62 | New local path (submap idx):
[DBG]  7 3 4 5 1 
[DBG]  Update the agent path 28 | Original local length: 24 | New local length: 7
[DBG]  agent 28 t=0 => decoded (sx,sy)=(2,2) => global_id=661
[DBG]  agent 28 t=1 => decoded (sx,sy)=(2,1) => global_id=660
[DBG]  agent 28 t=2 => decoded (sx,sy)=(3,1) => global_id=692
[DBG]  agent 28 t=3 => decoded (sx,sy)=(4,1) => global_id=724
[DBG]  agent 28 t=4 => decoded (sx,sy)=(4,2) => global_id=725
[DBG]  agent 28 t=5 => decoded (sx,sy)=(4,3) => global_id=726
[DBG]  agent 28 t=6 => decoded (sx,sy)=(4,4) => global_id=727
[DBG]  Complete path of agent 28:
[DBG]    Original: 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 660 628 627 627 627 627 627 627 627 627 627 627 627 659 691 692 724 725 726 727 
[DBG]    New:     661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 660 692 724 725 726 727 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 
[DBG]    Local path (in submap): 661 660 692 724 725 726 727 
[DBG]    Suffix (out of submap): 
[DBG]  Original agent path length 28 je: 44
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 0: 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 660, 692, 724, 725, 726, 727, 
[DBG]  Path for agent 28 updated, resulting length: 27
[DBG]  Update the agent path 30 | Original local length: 1 | New local length: 1
[DBG]  agent 30 t=0 => decoded (sx,sy)=(0,2) => global_id=597
[DBG]  Complete path of agent 30:
[DBG]    Original: 922 890 889 888 887 886 885 885 884 883 851 819 787 788 756 724 692 660 628 629 597 565 565 533 501 502 503 
[DBG]    New:     922 890 889 888 887 886 885 885 884 883 851 819 787 788 756 724 692 660 628 629 597 565 565 533 501 502 503 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 922 890 889 888 887 886 885 885 884 883 851 819 787 788 756 724 692 660 628 629 
[DBG]    Local path (in submap): 597 
[DBG]    Suffix (out of submap): 565 565 533 501 502 503 
[DBG]  Original agent path length 30 je: 27
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 1: 922, 890, 889, 888, 887, 886, 885, 885, 884, 883, 851, 819, 787, 788, 756, 724, 692, 660, 628, 629, 597, 565, 565, 533, 501, 502, 503, 
[DBG]  Path for agent 30 updated, resulting length: 27
[DBG]  Update the agent path 62 | Original local length: 5 | New local length: 5
[DBG]  agent 62 t=0 => decoded (sx,sy)=(2,0) => global_id=659
[DBG]  agent 62 t=1 => decoded (sx,sy)=(1,0) => global_id=627
[DBG]  agent 62 t=2 => decoded (sx,sy)=(1,1) => global_id=628
[DBG]  agent 62 t=3 => decoded (sx,sy)=(1,2) => global_id=629
[DBG]  agent 62 t=4 => decoded (sx,sy)=(0,2) => global_id=597
[DBG]  Complete path of agent 62:
[DBG]    Original: 753 753 753 753 753 753 753 753 753 753 753 753 753 721 722 722 721 689 657 658 659 627 628 596 597 565 566 534 502 470 438 438 406 
[DBG]    New:     753 753 753 753 753 753 753 753 753 753 753 753 753 721 722 722 721 689 657 658 659 627 628 629 597 565 566 534 502 470 438 438 406 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 753 753 753 753 753 753 753 753 753 753 753 753 753 721 722 722 721 689 657 658 
[DBG]    Local path (in submap): 659 627 628 629 597 
[DBG]    Suffix (out of submap): 565 566 534 502 470 438 438 406 
[DBG]  Original agent path length 62 je: 33
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 2: 753, 753, 753, 753, 753, 753, 753, 753, 753, 753, 753, 753, 753, 721, 722, 722, 721, 689, 657, 658, 659, 627, 628, 629, 597, 565, 566, 534, 502, 470, 438, 438, 406, 
[DBG]  Path for agent 62 updated, resulting length: 33
[DBG]  Paths successfully updated.
[DBG]  (LNS.cpp) New path for agent 28: 
[DBG]  661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 660, 692, 724, 725, 726, 727, 
[DBG]  (LNS.cpp) New path for agent 30: 
[DBG]  922, 890, 889, 888, 887, 886, 885, 885, 884, 883, 851, 819, 787, 788, 756, 724, 692, 660, 628, 629, 597, 565, 565, 533, 501, 502, 503, 
[DBG]  (LNS.cpp) New path for agent 62: 
[DBG]  753, 753, 753, 753, 753, 753, 753, 753, 753, 753, 753, 753, 753, 721, 722, 722, 721, 689, 657, 658, 659, 627, 628, 629, 597, 565, 566, 534, 502, 470, 438, 438, 406, 
[DBG]  Delta value: 0.168317
[DBG]  Rewarding metric index = 1
[DBG]  component_weights = {0.00795342, 0.98247, 0.00350307, 0.00607351}
[DBG]  opSuccess value: 1
[STAT] neighbor.sum_of_costs before recomputation: 84
[STAT] neighbor.old_sum_of_costs before recomputation: 101
[STAT] sum_of_costs before recomputation: 4333
[DBG]  Validate solution immediately after SAT success.
[WARNING] Problem after SAT: Target conflict: agent 42 (len 43) traverses target of agent 28 (len 26) at location 727 at timestep 42
[DBG]  [DEBUG] Attempting immediate repair via init_lns because problem occurred after SAT (should be applied only for conflicts...).
[DBG]  [DEBUG] Passing 150 agents to init_lns (skip=true).
[DBG]  [DEBUG] path_table contents for selected agents (neighbor.agents):
[DBG]    Agent 28 => controlling path length=27
[DBG]    Agent 30 => controlling path length=27
[DBG]    Agent 62 => controlling path length=33
[DBG]  hodnota skip_initial_solution=1
[DBG]  We skip initialSolution => call buildCollisionData()
[DBG]  buildCollisionData() called – skip_initial_solution case.
[DBG]  Agents.size()=150, collision_graph.size()=150
[DBG]  agent 28 => updateCollidingPairs => foundCollision
[DBG]  agent 42 => updateCollidingPairs => foundCollision
[DBG]  Conflicting agent pairs:
[DBG]  agent 28 is in conflict with agent 42
[DBG]  buildCollisionData() => sum_of_costs=4316, num_of_colliding_pairs=1
[DBG]  buildCollisionData done => sum_of_costs=4316, num_of_colliding_pairs=1
[DBG]  sum_of_cost hodnota: 4316
[DBG]  After skip/init build => iteration_stats.back(): sum_of_costs=4316, collisions=1
[DEBUG] Using default neighbor generation strategy for conflicts: 1
	InitLNS(PP): runtime = 0.00153804, iterations = 2, colliding pairs = 0, initial colliding pairs = 1, solution cost = 4329, initial solution cost = 4316, failed iterations = 0
[DBG]  init_lns->sum_of_costs after init_lns->run: 4329
[DBG]  sum_of_costs after assignment from init_lns->run: 4329
[DBG]  Recomputing sum_of_cost by dividing neighbor.sum_of_costs and neighbor.old_sum_of_costs
[STAT] sum_of_costs after recomputation: 4329
[STAT] Iteration 85
[DBG]  Random chance did not select SAT operator (r=63), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 85
[DBG]  Random chance did not select SAT operator (r=20), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 85
[DBG]  Random chance did not select SAT operator (r=37), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 85
[DBG]  Random chance did not select SAT operator (r=97), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 85
[DBG]  Using SAT operator (destroy+repair SAT).
[DBG]  ====================
[DBG]  SAT destroy operator called.
[DBG]  SAT heuristic: 2
[DBG]  key_agent_id: 28
[DBG]  key_agent_id global path length: 44
[DBG]  Submap content (global positions):
[DBG]  595 596 597 598 599 
[DBG]  627 628 629 630 631 
[DBG]  659 660 661 662 663 
[DBG]  691 692 693 694 695 
[DBG]  723 724 725 726 727 
[DBG]  Map content with agents and obstacles:
[DBG]  X . . X . 
[DBG]  . A A X . 
[DBG]  . . A X X 
[DBG]  . . X X X 
[DBG]  X . . . . 
[DBG]  content of the map structure that we pass to the SAT solver:
[DBG]  -1  1  1  -1  1  
[DBG]  1  1  1  -1  1  
[DBG]  1  1  1  -1  -1  
[DBG]  1  1  -1  -1  -1  
[DBG]  -1  1  1  1  1  
[DBG]  Identifying agents in a submap for rescheduling (when key_agent is there at the time 11):
[DBG]  Agent 28 found intervals in the sub-map:
[DBG]   [0..43]
[DBG]  Agent 28 (interval in submap: [0..43]) contains time 11, added to replan.
[DBG]  Agent 46 found intervals in the sub-map:
[DBG]   [5..12]
[DBG]  Agent 46 (interval in submap: [5..12]) contains time 11, added to replan.
[DBG]  Agent 74 found intervals in the sub-map:
[DBG]   [6..18]
[DBG]  Agent 74 (interval in submap: [6..18]) contains time 11, added to replan.
[DBG]  Agent 86 found intervals in the sub-map:
[DBG]  
[DBG]  Agent 86 is not in sub-map at time 11 (intervals: 
[DBG]  )
[DBG]  Agent 89 found intervals in the sub-map:
[DBG]   [5..10]
[DBG]  Agent 89 is not in sub-map at time 11 (intervals: 
[DBG]  [5..10] )
[DBG]  Agent 91 found intervals in the sub-map:
[DBG]   [3..8]
[DBG]  Agent 91 is not in sub-map at time 11 (intervals: 
[DBG]  [3..8] )
[DBG]  Agent 137 found intervals in the sub-map:
[DBG]  
[DBG]  Agent 137 is not in sub-map at time 11 (intervals: 
[DBG]  )
[DBG]  Agent 28 | Start (global): 661 -> (local): (2, 2) at time 11 | Goal (global): 727 -> (local): (4, 4) at time 43
[DBG]  Agent 46 | Start (global): 629 -> (local): (1, 2) at time 11 | Goal (global): 597 -> (local): (0, 2) at time 12
[DBG]  Agent 74 | Start (global): 628 -> (local): (1, 1) at time 11 | Goal (global): 597 -> (local): (0, 2) at time 18
[DBG]  [REPAIR] SAT destroy operator called.
[DBG]  [REPAIR] SAT operator – launching subproblem FOR OPTIMIZATION.
[DBG]  Creating local paths (sx, sy) in the submap for T_sync = 11
[DBG]    Agent 28 (global paths from T=11 to 43) has local path: (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,1) (1,1) (1,0) (1,0) (1,0) (1,0) (1,0) (1,0) (1,0) (1,0) (1,0) (1,0) (1,0) (2,0) (3,0) (3,1) (4,1) (4,2) (4,3) (4,4) 
[DBG]    Agent 46 (global paths from T=11 to 12) has local path: (1,2) (0,2) 
[DBG]    Agent 74 (global paths from T=11 to 18) has local path: (1,1) (1,1) (1,1) (1,1) (1,1) (1,1) (1,2) (0,2) 
[DBG]  Checking input data for SAT solver:
[DBG]    - Number of agents to replan: 3
[DBG]  Agent 28 has the original local path length: 33 => Start (2,2), Goal (4,4)
[DBG]  Agent 46 has the original local path length: 2 => Start (1,2), Goal (0,2)
[DBG]  Agent 74 has the original local path length: 8 => Start (1,1), Goal (0,2)
[DBG]  Start position: (2, 2), (1, 2), (1, 1), 
[DBG]  Goal position: (4, 4), (0, 2), (0, 2), 
[DBG]  SAT instance and solver created.
Currently solving
Instance name: scen
Map name: map
Encoding used: disappear_at_goal
SAT solver used: Kissat
Optimizing function: sum of costs
Number of agents: 3
Mks LB: 7
SoC LB: 12
Delta: 0
Remaining time: 300000 [ms]

Vertex conflict! Agents 1, 2, timestep 3, location 0
Swapping conflict! Agents 1, 2, timestep 3, edge (0,0)
Vertex conflict! Agents 1, 2, timestep 4, location 0
Swapping conflict! Agents 1, 2, timestep 4, edge (0,0)
Vertex conflict! Agents 1, 2, timestep 5, location 0
Swapping conflict! Agents 1, 2, timestep 5, edge (0,0)
Vertex conflict! Agents 1, 2, timestep 6, location 0
Found plan [agents = 3] [timesteps = 7]
Agent #0 : 9 8 11 12 13 14 15 
Agent #1 : 5 1 0 0 0 0 0 
Agent #2 : 4 5 1 0 0 0 0 

[STAT] Solver returned: 0
[DBG]  Agent (index) 28 | New local path (submap idx):
[DBG]  9 8 11 12 13 14 15 
[DBG]  Agent (index) 46 | New local path (submap idx):
[DBG]  5 1 
[DBG]  Agent (index) 74 | New local path (submap idx):
[DBG]  4 5 1 
[DBG]  Update the agent path 28 | Original local length: 33 | New local length: 7
[DBG]  agent 28 t=0 => decoded (sx,sy)=(2,2) => global_id=661
[DBG]  agent 28 t=1 => decoded (sx,sy)=(2,1) => global_id=660
[DBG]  agent 28 t=2 => decoded (sx,sy)=(3,1) => global_id=692
[DBG]  agent 28 t=3 => decoded (sx,sy)=(4,1) => global_id=724
[DBG]  agent 28 t=4 => decoded (sx,sy)=(4,2) => global_id=725
[DBG]  agent 28 t=5 => decoded (sx,sy)=(4,3) => global_id=726
[DBG]  agent 28 t=6 => decoded (sx,sy)=(4,4) => global_id=727
[DBG]  Complete path of agent 28:
[DBG]    Original: 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 660 628 627 627 627 627 627 627 627 627 627 627 627 659 691 692 724 725 726 727 
[DBG]    New:     661 661 661 661 661 661 661 661 661 661 661 661 660 692 724 725 726 727 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 661 661 661 661 661 661 661 661 661 661 661 
[DBG]    Local path (in submap): 661 660 692 724 725 726 727 
[DBG]    Suffix (out of submap): 
[DBG]  Original agent path length 28 je: 44
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 0: 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 660, 692, 724, 725, 726, 727, 
[DBG]  Path for agent 28 updated, resulting length: 18
[DBG]  Update the agent path 46 | Original local length: 2 | New local length: 2
[DBG]  agent 46 t=0 => decoded (sx,sy)=(1,2) => global_id=629
[DBG]  agent 46 t=1 => decoded (sx,sy)=(0,2) => global_id=597
[DBG]  Complete path of agent 46:
[DBG]    Original: 786 787 755 756 756 724 692 660 659 627 628 629 597 565 566 534 534 502 503 504 505 506 507 508 509 477 445 413 381 349 317 285 284 252 
[DBG]    New:     786 787 755 756 756 724 692 660 659 627 628 629 597 565 566 534 534 502 503 504 505 506 507 508 509 477 445 413 381 349 317 285 284 252 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 786 787 755 756 756 724 692 660 659 627 628 
[DBG]    Local path (in submap): 629 597 
[DBG]    Suffix (out of submap): 565 566 534 534 502 503 504 505 506 507 508 509 477 445 413 381 349 317 285 284 252 
[DBG]  Original agent path length 46 je: 34
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 1: 786, 787, 755, 756, 756, 724, 692, 660, 659, 627, 628, 629, 597, 565, 566, 534, 534, 502, 503, 504, 505, 506, 507, 508, 509, 477, 445, 413, 381, 349, 317, 285, 284, 252, 
[DBG]  Path for agent 46 updated, resulting length: 34
[DBG]  Update the agent path 74 | Original local length: 8 | New local length: 3
[DBG]  agent 74 t=0 => decoded (sx,sy)=(1,1) => global_id=628
[DBG]  agent 74 t=1 => decoded (sx,sy)=(1,2) => global_id=629
[DBG]  agent 74 t=2 => decoded (sx,sy)=(0,2) => global_id=597
[DBG]  Complete path of agent 74:
[DBG]    Original: 752 720 688 656 657 658 659 627 628 628 660 628 628 628 628 628 628 629 597 565 566 534 502 503 504 472 472 504 
[DBG]    New:     752 720 688 656 657 658 659 627 628 628 660 628 629 597 565 566 534 502 503 504 472 472 504 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 752 720 688 656 657 658 659 627 628 628 660 
[DBG]    Local path (in submap): 628 629 597 565 566 534 502 503 
[DBG]    Suffix (out of submap): 504 472 472 504 
[DBG]  Original agent path length 74 je: 28
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 2: 752, 720, 688, 656, 657, 658, 659, 627, 628, 628, 660, 628, 629, 597, 565, 566, 534, 502, 503, 504, 472, 472, 504, 
[DBG]  Path for agent 74 updated, resulting length: 23
[DBG]  Paths successfully updated.
[DBG]  (LNS.cpp) New path for agent 28: 
[DBG]  661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 660, 692, 724, 725, 726, 727, 
[DBG]  (LNS.cpp) New path for agent 46: 
[DBG]  786, 787, 755, 756, 756, 724, 692, 660, 659, 627, 628, 629, 597, 565, 566, 534, 534, 502, 503, 504, 505, 506, 507, 508, 509, 477, 445, 413, 381, 349, 317, 285, 284, 252, 
[DBG]  (LNS.cpp) New path for agent 74: 
[DBG]  752, 720, 688, 656, 657, 658, 659, 627, 628, 628, 660, 628, 629, 597, 565, 566, 534, 502, 503, 504, 472, 472, 504, 
[DBG]  Delta value: 0.300971
[DBG]  Rewarding metric index = 1
[DBG]  component_weights = {0.00583537, 0.987138, 0.00257018, 0.00445609}
[DBG]  opSuccess value: 1
[STAT] neighbor.sum_of_costs before recomputation: 72
[STAT] neighbor.old_sum_of_costs before recomputation: 103
[STAT] sum_of_costs before recomputation: 4329
[DBG]  Validate solution immediately after SAT success.
[WARNING] Problem after SAT: Target conflict: agent 42 (len 43) traverses target of agent 28 (len 17) at location 727 at timestep 42
[DBG]  [DEBUG] Attempting immediate repair via init_lns because problem occurred after SAT (should be applied only for conflicts...).
[DBG]  [DEBUG] Passing 150 agents to init_lns (skip=true).
[DBG]  [DEBUG] path_table contents for selected agents (neighbor.agents):
[DBG]    Agent 28 => controlling path length=18
[DBG]    Agent 46 => controlling path length=34
[DBG]    Agent 74 => controlling path length=23
[DBG]  hodnota skip_initial_solution=1
[DBG]  We skip initialSolution => call buildCollisionData()
[DBG]  buildCollisionData() called – skip_initial_solution case.
[DBG]  Agents.size()=150, collision_graph.size()=150
[DBG]  agent 28 => updateCollidingPairs => foundCollision
[DBG]  agent 42 => updateCollidingPairs => foundCollision
[DBG]  agent 46 => updateCollidingPairs => foundCollision
[DBG]  agent 74 => updateCollidingPairs => foundCollision
[DBG]  Conflicting agent pairs:
[DBG]  agent 28 is in conflict with agent 42
[DBG]  agent 46 is in conflict with agent 74
[DBG]  buildCollisionData() => sum_of_costs=4298, num_of_colliding_pairs=2
[DBG]  buildCollisionData done => sum_of_costs=4298, num_of_colliding_pairs=2
[DBG]  sum_of_cost hodnota: 4298
[DBG]  After skip/init build => iteration_stats.back(): sum_of_costs=4298, collisions=2
[DEBUG] Using default neighbor generation strategy for conflicts: 0
[DEBUG] Using default neighbor generation strategy for conflicts: 0
	InitLNS(PP): runtime = 0.001733, iterations = 3, colliding pairs = 0, initial colliding pairs = 2, solution cost = 4313, initial solution cost = 4298, failed iterations = 0
[DBG]  init_lns->sum_of_costs after init_lns->run: 4313
[DBG]  sum_of_costs after assignment from init_lns->run: 4313
[DBG]  Recomputing sum_of_cost by dividing neighbor.sum_of_costs and neighbor.old_sum_of_costs
[STAT] sum_of_costs after recomputation: 4313
[STAT] Iteration 86
[DBG]  Random chance did not select SAT operator (r=10), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 86
[DBG]  Random chance did not select SAT operator (r=78), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 86
[DBG]  Random chance did not select SAT operator (r=18), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 86
[DBG]  Random chance did not select SAT operator (r=31), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 86
[DBG]  Random chance did not select SAT operator (r=89), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 86
[DBG]  Random chance did not select SAT operator (r=62), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 86
[DBG]  Random chance did not select SAT operator (r=65), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 86
[DBG]  Using SAT operator (destroy+repair SAT).
[DBG]  ====================
[DBG]  SAT destroy operator called.
[DBG]  SAT heuristic: 2
[DBG]  key_agent_id: 28
[DBG]  key_agent_id global path length: 44
[DBG]  Submap content (global positions):
[DBG]  595 596 597 598 599 
[DBG]  627 628 629 630 631 
[DBG]  659 660 661 662 663 
[DBG]  691 692 693 694 695 
[DBG]  723 724 725 726 727 
[DBG]  Map content with agents and obstacles:
[DBG]  X . . X . 
[DBG]  . . . X . 
[DBG]  . A A X X 
[DBG]  . A X X X 
[DBG]  X . . . . 
[DBG]  content of the map structure that we pass to the SAT solver:
[DBG]  -1  1  1  -1  1  
[DBG]  1  1  1  -1  1  
[DBG]  1  1  1  -1  -1  
[DBG]  1  1  -1  -1  -1  
[DBG]  -1  1  1  1  1  
[DBG]  Identifying agents in a submap for rescheduling (when key_agent is there at the time 16):
[DBG]  Agent 28 found intervals in the sub-map:
[DBG]   [0..43]
[DBG]  Agent 28 (interval in submap: [0..43]) contains time 16, added to replan.
[DBG]  Agent 30 found intervals in the sub-map:
[DBG]   [15..20]
[DBG]  Agent 30 (interval in submap: [15..20]) contains time 16, added to replan.
[DBG]  Agent 74 found intervals in the sub-map:
[DBG]   [9..13]
[DBG]  Agent 74 is not in sub-map at time 16 (intervals: 
[DBG]  [9..13] )
[DBG]  Agent 114 found intervals in the sub-map:
[DBG]   [15..19]
[DBG]  Agent 114 (interval in submap: [15..19]) contains time 16, added to replan.
[DBG]  Agent 28 | Start (global): 661 -> (local): (2, 2) at time 16 | Goal (global): 727 -> (local): (4, 4) at time 43
[DBG]  Agent 30 | Start (global): 692 -> (local): (3, 1) at time 16 | Goal (global): 597 -> (local): (0, 2) at time 20
[DBG]  Agent 114 | Start (global): 660 -> (local): (2, 1) at time 16 | Goal (global): 597 -> (local): (0, 2) at time 19
[DBG]  [REPAIR] SAT destroy operator called.
[DBG]  [REPAIR] SAT operator – launching subproblem FOR OPTIMIZATION.
[DBG]  Creating local paths (sx, sy) in the submap for T_sync = 16
[DBG]    Agent 28 (global paths from T=16 to 43) has local path: (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (1,2) (1,1) (1,0) (1,0) (1,0) (1,0) (1,0) (1,0) (1,0) (1,0) (1,0) (1,0) (1,0) (2,0) (3,0) (3,1) (4,1) (4,2) (4,3) (4,4) 
[DBG]    Agent 30 (global paths from T=16 to 20) has local path: (3,1) (2,1) (1,1) (1,2) (0,2) 
[DBG]    Agent 114 (global paths from T=16 to 19) has local path: (2,1) (1,1) (0,1) (0,2) 
[DBG]  Checking input data for SAT solver:
[DBG]    - Number of agents to replan: 3
[DBG]  Agent 28 has the original local path length: 28 => Start (2,2), Goal (4,4)
[DBG]  Agent 30 has the original local path length: 5 => Start (3,1), Goal (0,2)
[DBG]  Agent 114 has the original local path length: 4 => Start (2,1), Goal (0,2)
[DBG]  Start position: (2, 2), (3, 1), (2, 1), 
[DBG]  Goal position: (4, 4), (0, 2), (0, 2), 
[DBG]  SAT instance and solver created.
Currently solving
Instance name: scen
Map name: map
Encoding used: disappear_at_goal
SAT solver used: Kissat
Optimizing function: sum of costs
Number of agents: 3
Mks LB: 7
SoC LB: 16
Delta: 0
Remaining time: 300000 [ms]

[STAT] Solver returned: -1
[DBG]  SAT solver failed.
[STAT] SAT solver failed to find a valid solution.
[DBG]  ====================
[DBG]  SAT destroy operator called.
[DBG]  SAT heuristic: 2
[DBG]  key_agent_id: 28
[DBG]  key_agent_id global path length: 44
[DBG]  Submap content (global positions):
[DBG]  659 660 661 662 663 
[DBG]  691 692 693 694 695 
[DBG]  723 724 725 726 727 
[DBG]  755 756 757 758 759 
[DBG]  787 788 789 790 791 
[DBG]  Map content with agents and obstacles:
[DBG]  . A . X X 
[DBG]  . A X X X 
[DBG]  X . A A . 
[DBG]  . . . X . 
[DBG]  . . X . X 
[DBG]  content of the map structure that we pass to the SAT solver:
[DBG]  1  1  1  -1  -1  
[DBG]  1  1  -1  -1  -1  
[DBG]  -1  1  1  1  1  
[DBG]  1  1  1  -1  1  
[DBG]  1  1  -1  1  -1  
[DBG]  Identifying agents in a submap for rescheduling (when key_agent is there at the time 41):
[DBG]  Agent 28 found intervals in the sub-map:
[DBG]   [0..23] [37..43]
[DBG]  Agent 28 (interval in submap: [37..43]) contains time 41, added to replan.
[DBG]  Agent 42 found intervals in the sub-map:
[DBG]   [36..43]
[DBG]  Agent 42 (interval in submap: [36..43]) contains time 41, added to replan.
[DBG]  Agent 55 found intervals in the sub-map:
[DBG]   [40..41]
[DBG]  Agent 55 (interval in submap: [40..41]) contains time 41, added to replan.
[DBG]  Agent 69 found intervals in the sub-map:
[DBG]  
[DBG]  Agent 69 is not in sub-map at time 41 (intervals: 
[DBG]  )
[DBG]  Agent 148 found intervals in the sub-map:
[DBG]   [32..41]
[DBG]  Agent 148 (interval in submap: [32..41]) contains time 41, added to replan.
[DBG]  Agent 28 | Start (global): 725 -> (local): (2, 2) at time 41 | Goal (global): 727 -> (local): (2, 4) at time 43
[DBG]  Agent 42 | Start (global): 726 -> (local): (2, 3) at time 41 | Goal (global): 759 -> (local): (3, 4) at time 43
[DBG]  Agent 55 | Start (global): 692 -> (local): (1, 1) at time 41 | Goal (global): 692 -> (local): (1, 1) at time 41
[DBG]  Agent 148 | Start (global): 660 -> (local): (0, 1) at time 41 | Goal (global): 660 -> (local): (0, 1) at time 41
[DBG]  [REPAIR] SAT destroy operator called.
[DBG]  [REPAIR] SAT operator – launching subproblem FOR OPTIMIZATION.
[DBG]  Creating local paths (sx, sy) in the submap for T_sync = 41
[DBG]    Agent 28 (global paths from T=41 to 43) has local path: (2,2) (2,3) (2,4) 
[DBG]    Agent 42 (global paths from T=41 to 43) has local path: (2,3) (2,4) (3,4) 
[DBG]    Agent 55 (global paths from T=41 to 41) has local path: (1,1) 
[DBG]    Agent 148 (global paths from T=41 to 41) has local path: (0,1) 
[DBG]  Checking input data for SAT solver:
[DBG]    - Number of agents to replan: 4
[DBG]  Agent 28 has the original local path length: 3 => Start (2,2), Goal (2,4)
[DBG]  Agent 42 has the original local path length: 3 => Start (2,3), Goal (3,4)
[DBG]  Agent 55 has the original local path length: 1 => Start (1,1), Goal (1,1)
[DBG]  Agent 148 has the original local path length: 1 => Start (0,1), Goal (0,1)
[DBG]  Start position: (2, 2), (2, 3), (1, 1), (0, 1), 
[DBG]  Goal position: (2, 4), (3, 4), (1, 1), (0, 1), 
[DBG]  SAT instance and solver created.
Currently solving
Instance name: scen
Map name: map
Encoding used: disappear_at_goal
SAT solver used: Kissat
Optimizing function: sum of costs
Number of agents: 4
Mks LB: 3
SoC LB: 8
Delta: 0
Remaining time: 300000 [ms]

Vertex conflict! Agents 2, 3, timestep 1, location 0
Swapping conflict! Agents 2, 3, timestep 1, edge (0,0)
Vertex conflict! Agents 2, 3, timestep 2, location 0
Found plan [agents = 4] [timesteps = 3]
Agent #0 : 6 7 8 
Agent #1 : 7 8 12 
Agent #2 : 4 0 0 
Agent #3 : 1 0 0 

[STAT] Solver returned: 0
[DBG]  Agent (index) 28 | New local path (submap idx):
[DBG]  6 7 8 
[DBG]  Agent (index) 42 | New local path (submap idx):
[DBG]  7 8 12 
[DBG]  Agent (index) 55 | New local path (submap idx):
[DBG]  4 
[DBG]  Agent (index) 148 | New local path (submap idx):
[DBG]  1 
[DBG]  Update the agent path 28 | Original local length: 3 | New local length: 3
[DBG]  agent 28 t=0 => decoded (sx,sy)=(2,2) => global_id=725
[DBG]  agent 28 t=1 => decoded (sx,sy)=(2,3) => global_id=726
[DBG]  agent 28 t=2 => decoded (sx,sy)=(2,4) => global_id=727
[DBG]  Complete path of agent 28:
[DBG]    Original: 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 629 628 627 627 627 627 627 627 627 627 627 627 627 659 691 692 724 725 726 727 
[DBG]    New:     661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 629 628 627 627 627 627 627 627 627 627 627 627 627 659 691 692 724 725 726 727 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 629 628 627 627 627 627 627 627 627 627 627 627 627 659 691 692 724 
[DBG]    Local path (in submap): 725 726 727 
[DBG]    Suffix (out of submap): 
[DBG]  Original agent path length 28 je: 44
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 0: 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 629, 628, 627, 627, 627, 627, 627, 627, 627, 627, 627, 627, 627, 659, 691, 692, 724, 725, 726, 727, 
[DBG]  Path for agent 28 updated, resulting length: 44
[DBG]  Update the agent path 42 | Original local length: 3 | New local length: 3
[DBG]  agent 42 t=0 => decoded (sx,sy)=(2,3) => global_id=726
[DBG]  agent 42 t=1 => decoded (sx,sy)=(2,4) => global_id=727
[DBG]  agent 42 t=2 => decoded (sx,sy)=(3,4) => global_id=759
[DBG]  Complete path of agent 42:
[DBG]    Original: 224 256 257 289 321 353 354 354 355 387 419 420 421 422 423 424 425 426 458 458 490 491 523 555 587 588 589 590 622 623 655 655 655 656 657 658 659 660 692 724 725 726 727 759 
[DBG]    New:     224 256 257 289 321 353 354 354 355 387 419 420 421 422 423 424 425 426 458 458 490 491 523 555 587 588 589 590 622 623 655 655 655 656 657 658 659 660 692 724 725 726 727 759 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 224 256 257 289 321 353 354 354 355 387 419 420 421 422 423 424 425 426 458 458 490 491 523 555 587 588 589 590 622 623 655 655 655 656 657 658 659 660 692 724 725 
[DBG]    Local path (in submap): 726 727 759 
[DBG]    Suffix (out of submap): 
[DBG]  Original agent path length 42 je: 44
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 1: 224, 256, 257, 289, 321, 353, 354, 354, 355, 387, 419, 420, 421, 422, 423, 424, 425, 426, 458, 458, 490, 491, 523, 555, 587, 588, 589, 590, 622, 623, 655, 655, 655, 656, 657, 658, 659, 660, 692, 724, 725, 726, 727, 759, 
[DBG]  Path for agent 42 updated, resulting length: 44
[DBG]  Update the agent path 55 | Original local length: 1 | New local length: 1
[DBG]  agent 55 t=0 => decoded (sx,sy)=(1,1) => global_id=692
[DBG]  Complete path of agent 55:
[DBG]    Original: 34 35 35 67 68 69 70 71 72 73 105 137 138 139 140 141 173 205 237 269 301 333 365 366 367 368 400 432 464 465 466 467 468 469 501 533 565 597 596 628 660 692 
[DBG]    New:     34 35 35 67 68 69 70 71 72 73 105 137 138 139 140 141 173 205 237 269 301 333 365 366 367 368 400 432 464 465 466 467 468 469 501 533 565 597 596 628 660 692 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 34 35 35 67 68 69 70 71 72 73 105 137 138 139 140 141 173 205 237 269 301 333 365 366 367 368 400 432 464 465 466 467 468 469 501 533 565 597 596 628 660 
[DBG]    Local path (in submap): 692 
[DBG]    Suffix (out of submap): 
[DBG]  Original agent path length 55 je: 42
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 2: 34, 35, 35, 67, 68, 69, 70, 71, 72, 73, 105, 137, 138, 139, 140, 141, 173, 205, 237, 269, 301, 333, 365, 366, 367, 368, 400, 432, 464, 465, 466, 467, 468, 469, 501, 533, 565, 597, 596, 628, 660, 692, 
[DBG]  Path for agent 55 updated, resulting length: 42
[DBG]  Update the agent path 148 | Original local length: 1 | New local length: 1
[DBG]  agent 148 t=0 => decoded (sx,sy)=(0,1) => global_id=660
[DBG]  Complete path of agent 148:
[DBG]    Original: 776 808 808 808 808 808 776 776 776 777 778 746 747 748 748 780 780 780 779 778 746 714 715 683 684 685 653 654 655 656 657 658 659 660 661 661 661 661 661 661 661 660 
[DBG]    New:     776 808 808 808 808 808 776 776 776 777 778 746 747 748 748 780 780 780 779 778 746 714 715 683 684 685 653 654 655 656 657 658 659 660 661 661 661 661 661 661 661 660 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 776 808 808 808 808 808 776 776 776 777 778 746 747 748 748 780 780 780 779 778 746 714 715 683 684 685 653 654 655 656 657 658 659 660 661 661 661 661 661 661 661 
[DBG]    Local path (in submap): 660 
[DBG]    Suffix (out of submap): 
[DBG]  Original agent path length 148 je: 42
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 3: 776, 808, 808, 808, 808, 808, 776, 776, 776, 777, 778, 746, 747, 748, 748, 780, 780, 780, 779, 778, 746, 714, 715, 683, 684, 685, 653, 654, 655, 656, 657, 658, 659, 660, 661, 661, 661, 661, 661, 661, 661, 660, 
[DBG]  Path for agent 148 updated, resulting length: 42
[DBG]  Paths successfully updated.
[DBG]  (LNS.cpp) New path for agent 28: 
[DBG]  661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 629, 628, 627, 627, 627, 627, 627, 627, 627, 627, 627, 627, 627, 659, 691, 692, 724, 725, 726, 727, 
[DBG]  (LNS.cpp) New path for agent 42: 
[DBG]  224, 256, 257, 289, 321, 353, 354, 354, 355, 387, 419, 420, 421, 422, 423, 424, 425, 426, 458, 458, 490, 491, 523, 555, 587, 588, 589, 590, 622, 623, 655, 655, 655, 656, 657, 658, 659, 660, 692, 724, 725, 726, 727, 759, 
[DBG]  (LNS.cpp) New path for agent 55: 
[DBG]  34, 35, 35, 67, 68, 69, 70, 71, 72, 73, 105, 137, 138, 139, 140, 141, 173, 205, 237, 269, 301, 333, 365, 366, 367, 368, 400, 432, 464, 465, 466, 467, 468, 469, 501, 533, 565, 597, 596, 628, 660, 692, 
[DBG]  (LNS.cpp) New path for agent 148: 
[DBG]  776, 808, 808, 808, 808, 808, 776, 776, 776, 777, 778, 746, 747, 748, 748, 780, 780, 780, 779, 778, 746, 714, 715, 683, 684, 685, 653, 654, 655, 656, 657, 658, 659, 660, 661, 661, 661, 661, 661, 661, 661, 660, 
[DBG]  Delta value: 0
[DBG]  Rewarding metric index = 1
[DBG]  component_weights = {0.00554717, 0.987774, 0.00244324, 0.00423601}
[DBG]  opSuccess value: 1
[STAT] neighbor.sum_of_costs before recomputation: 168
[STAT] neighbor.old_sum_of_costs before recomputation: 168
[STAT] sum_of_costs before recomputation: 4313
[DBG]  Validate solution immediately after SAT success.
[DBG]  No problems after SAT replan.
[DBG]  Recomputing sum_of_cost by dividing neighbor.sum_of_costs and neighbor.old_sum_of_costs
[STAT] sum_of_costs after recomputation: 4313
[STAT] Iteration 87
[DBG]  Using SAT operator (destroy+repair SAT).
[DBG]  ====================
[DBG]  SAT destroy operator called.
[DBG]  SAT heuristic: 2
[DBG]  key_agent_id: 28
[DBG]  key_agent_id global path length: 44
[DBG]  Submap content (global positions):
[DBG]  561 562 563 564 565 
[DBG]  593 594 595 596 597 
[DBG]  625 626 627 628 629 
[DBG]  657 658 659 660 661 
[DBG]  689 690 691 692 693 
[DBG]  Map content with agents and obstacles:
[DBG]  A X . X . 
[DBG]  . . X . . 
[DBG]  . X A . . 
[DBG]  A A . A A 
[DBG]  . X . A X 
[DBG]  content of the map structure that we pass to the SAT solver:
[DBG]  1  -1  1  -1  1  
[DBG]  1  1  -1  1  1  
[DBG]  1  -1  1  1  1  
[DBG]  1  1  1  1  1  
[DBG]  1  -1  1  1  -1  
[DBG]  Identifying agents in a submap for rescheduling (when key_agent is there at the time 31):
[DBG]  Agent 11 found intervals in the sub-map:
[DBG]   [33..35]
[DBG]  Agent 11 is not in sub-map at time 31 (intervals: 
[DBG]  [33..35] )
[DBG]  Agent 26 found intervals in the sub-map:
[DBG]   [28..33]
[DBG]  Agent 26 (interval in submap: [28..33]) contains time 31, added to replan.
[DBG]  Agent 28 found intervals in the sub-map:
[DBG]   [0..39]
[DBG]  Agent 28 (interval in submap: [0..39]) contains time 31, added to replan.
[DBG]  Agent 45 found intervals in the sub-map:
[DBG]   [27..32]
[DBG]  Agent 45 (interval in submap: [27..32]) contains time 31, added to replan.
[DBG]  Agent 49 found intervals in the sub-map:
[DBG]   [20..31]
[DBG]  Agent 49 (interval in submap: [20..31]) contains time 31, added to replan.
[DBG]  Agent 53 found intervals in the sub-map:
[DBG]   [26..31]
[DBG]  Agent 53 (interval in submap: [26..31]) contains time 31, added to replan.
[DBG]  Agent 69 found intervals in the sub-map:
[DBG]  
[DBG]  Agent 69 is not in sub-map at time 31 (intervals: 
[DBG]  )
[DBG]  Agent 100 found intervals in the sub-map:
[DBG]   [28..31]
[DBG]  Agent 100 (interval in submap: [28..31]) contains time 31, added to replan.
[DBG]  Agent 148 found intervals in the sub-map:
[DBG]   [30..41]
[DBG]  Agent 148 (interval in submap: [30..41]) contains time 31, added to replan.
[DBG]  Agent 26 | Start (global): 661 -> (local): (3, 4) at time 31 | Goal (global): 692 -> (local): (4, 3) at time 33
[DBG]  Agent 28 | Start (global): 627 -> (local): (2, 2) at time 31 | Goal (global): 692 -> (local): (4, 3) at time 39
[DBG]  Agent 45 | Start (global): 660 -> (local): (3, 3) at time 31 | Goal (global): 692 -> (local): (4, 3) at time 32
[DBG]  Agent 49 | Start (global): 561 -> (local): (0, 0) at time 31 | Goal (global): 561 -> (local): (0, 0) at time 31
[DBG]  Agent 53 | Start (global): 692 -> (local): (4, 3) at time 31 | Goal (global): 692 -> (local): (4, 3) at time 31
[DBG]  Agent 100 | Start (global): 657 -> (local): (3, 0) at time 31 | Goal (global): 657 -> (local): (3, 0) at time 31
[DBG]  Agent 148 | Start (global): 658 -> (local): (3, 1) at time 31 | Goal (global): 660 -> (local): (3, 3) at time 41
[DBG]  [REPAIR] SAT destroy operator called.
[DBG]  [REPAIR] SAT operator – launching subproblem FOR OPTIMIZATION.
[DBG]  Creating local paths (sx, sy) in the submap for T_sync = 31
[DBG]    Agent 26 (global paths from T=31 to 33) has local path: (3,4) (3,3) (4,3) 
[DBG]    Agent 28 (global paths from T=31 to 39) has local path: (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (3,2) (4,2) (4,3) 
[DBG]    Agent 45 (global paths from T=31 to 32) has local path: (3,3) (4,3) 
[DBG]    Agent 49 (global paths from T=31 to 31) has local path: (0,0) 
[DBG]    Agent 53 (global paths from T=31 to 31) has local path: (4,3) 
[DBG]    Agent 100 (global paths from T=31 to 31) has local path: (3,0) 
[DBG]    Agent 148 (global paths from T=31 to 41) has local path: (3,1) (3,2) (3,3) (3,4) (3,4) (3,4) (3,4) (3,4) (3,4) (3,4) (3,3) 
[DBG]  Checking input data for SAT solver:
[DBG]    - Number of agents to replan: 7
[DBG]  Agent 26 has the original local path length: 3 => Start (3,4), Goal (4,3)
[DBG]  Agent 28 has the original local path length: 9 => Start (2,2), Goal (4,3)
[DBG]  Agent 45 has the original local path length: 2 => Start (3,3), Goal (4,3)
[DBG]  Agent 49 has the original local path length: 1 => Start (0,0), Goal (0,0)
[DBG]  Agent 53 has the original local path length: 1 => Start (4,3), Goal (4,3)
[DBG]  Agent 100 has the original local path length: 1 => Start (3,0), Goal (3,0)
[DBG]  Agent 148 has the original local path length: 11 => Start (3,1), Goal (3,3)
[DBG]  Start position: (3, 4), (2, 2), (3, 3), (0, 0), (4, 3), (3, 0), (3, 1), 
[DBG]  Goal position: (4, 3), (4, 3), (4, 3), (0, 0), (4, 3), (3, 0), (3, 3), 
[DBG]  SAT instance and solver created.
Currently solving
Instance name: scen
Map name: map
Encoding used: disappear_at_goal
SAT solver used: Kissat
Optimizing function: sum of costs
Number of agents: 7
Mks LB: 4
SoC LB: 15
Delta: 0
Remaining time: 300000 [ms]

[STAT] Solver returned: -1
[DBG]  SAT solver failed.
[STAT] SAT solver failed to find a valid solution.
[DBG]  ====================
[DBG]  SAT destroy operator called.
[DBG]  SAT heuristic: 2
[DBG]  key_agent_id: 28
[DBG]  key_agent_id global path length: 44
[DBG]  Submap content (global positions):
[DBG]  562 563 564 565 566 
[DBG]  594 595 596 597 598 
[DBG]  626 627 628 629 630 
[DBG]  658 659 660 661 662 
[DBG]  690 691 692 693 694 
[DBG]  Map content with agents and obstacles:
[DBG]  X . X A . 
[DBG]  A X . . X 
[DBG]  X . A . X 
[DBG]  . . . . X 
[DBG]  X . . X X 
[DBG]  content of the map structure that we pass to the SAT solver:
[DBG]  -1  1  -1  1  1  
[DBG]  1  -1  1  1  -1  
[DBG]  -1  1  1  1  -1  
[DBG]  1  1  1  1  -1  
[DBG]  -1  1  1  -1  -1  
[DBG]  Identifying agents in a submap for rescheduling (when key_agent is there at the time 25):
[DBG]  Agent 11 found intervals in the sub-map:
[DBG]  
[DBG]  Agent 11 is not in sub-map at time 25 (intervals: 
[DBG]  )
[DBG]  Agent 28 found intervals in the sub-map:
[DBG]   [0..39]
[DBG]  Agent 28 (interval in submap: [0..39]) contains time 25, added to replan.
[DBG]  Agent 49 found intervals in the sub-map:
[DBG]   [24..29]
[DBG]  Agent 49 (interval in submap: [24..29]) contains time 25, added to replan.
[DBG]  Agent 56 found intervals in the sub-map:
[DBG]  
[DBG]  Agent 56 is not in sub-map at time 25 (intervals: 
[DBG]  )
[DBG]  Agent 61 found intervals in the sub-map:
[DBG]  
[DBG]  Agent 61 is not in sub-map at time 25 (intervals: 
[DBG]  )
[DBG]  Agent 62 found intervals in the sub-map:
[DBG]   [19..26]
[DBG]  Agent 62 (interval in submap: [19..26]) contains time 25, added to replan.
[DBG]  Agent 28 | Start (global): 628 -> (local): (2, 2) at time 25 | Goal (global): 692 -> (local): (4, 2) at time 39
[DBG]  Agent 49 | Start (global): 594 -> (local): (1, 0) at time 25 | Goal (global): 594 -> (local): (1, 0) at time 29
[DBG]  Agent 62 | Start (global): 565 -> (local): (0, 3) at time 25 | Goal (global): 566 -> (local): (0, 4) at time 26
[DBG]  [REPAIR] SAT destroy operator called.
[DBG]  [REPAIR] SAT operator – launching subproblem FOR OPTIMIZATION.
[DBG]  Creating local paths (sx, sy) in the submap for T_sync = 25
[DBG]    Agent 28 (global paths from T=25 to 39) has local path: (2,2) (2,1) (2,1) (2,1) (2,1) (2,1) (2,1) (2,1) (2,1) (2,1) (2,1) (2,1) (3,1) (4,1) (4,2) 
[DBG]    Agent 49 (global paths from T=25 to 29) has local path: (1,0) (1,0) (1,0) (1,0) (1,0) 
[DBG]    Agent 62 (global paths from T=25 to 26) has local path: (0,3) (0,4) 
[DBG]  Checking input data for SAT solver:
[DBG]    - Number of agents to replan: 3
[DBG]  Agent 28 has the original local path length: 15 => Start (2,2), Goal (4,2)
[DBG]  Agent 49 has the original local path length: 5 => Start (1,0), Goal (1,0)
[DBG]  Agent 62 has the original local path length: 2 => Start (0,3), Goal (0,4)
[DBG]  Start position: (2, 2), (1, 0), (0, 3), 
[DBG]  Goal position: (4, 2), (1, 0), (0, 4), 
[DBG]  SAT instance and solver created.
Currently solving
Instance name: scen
Map name: map
Encoding used: disappear_at_goal
SAT solver used: Kissat
Optimizing function: sum of costs
Number of agents: 3
Mks LB: 3
SoC LB: 6
Delta: 0
Remaining time: 300000 [ms]

Vertex conflict! Agents 1, 2, timestep 2, location 0
Found plan [agents = 3] [timesteps = 3]
Agent #0 : 7 11 14 
Agent #1 : 3 0 0 
Agent #2 : 1 2 0 

[STAT] Solver returned: 0
[DBG]  Agent (index) 28 | New local path (submap idx):
[DBG]  7 11 14 
[DBG]  Agent (index) 49 | New local path (submap idx):
[DBG]  3 
[DBG]  Agent (index) 62 | New local path (submap idx):
[DBG]  1 2 
[DBG]  Update the agent path 28 | Original local length: 15 | New local length: 3
[DBG]  agent 28 t=0 => decoded (sx,sy)=(2,2) => global_id=628
[DBG]  agent 28 t=1 => decoded (sx,sy)=(3,2) => global_id=660
[DBG]  agent 28 t=2 => decoded (sx,sy)=(4,2) => global_id=692
[DBG]  Complete path of agent 28:
[DBG]    Original: 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 629 628 627 627 627 627 627 627 627 627 627 627 627 659 691 692 724 725 726 727 
[DBG]    New:     661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 629 628 660 692 724 725 726 727 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 629 
[DBG]    Local path (in submap): 628 660 692 724 725 726 727 
[DBG]    Suffix (out of submap): 
[DBG]  Original agent path length 28 je: 44
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 0: 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 629, 628, 660, 692, 724, 725, 726, 727, 
[DBG]  Path for agent 28 updated, resulting length: 32
[DBG]  Update the agent path 49 | Original local length: 5 | New local length: 1
[DBG]  agent 49 t=0 => decoded (sx,sy)=(1,0) => global_id=594
[DBG]  Complete path of agent 49:
[DBG]    Original: 984 983 982 981 980 948 916 884 883 851 850 849 848 847 815 783 751 752 753 721 689 657 625 593 594 594 594 594 594 594 593 561 529 528 496 464 432 400 368 
[DBG]    New:     984 983 982 981 980 948 916 884 883 851 850 849 848 847 815 783 751 752 753 721 689 657 625 593 594 594 593 561 529 528 496 464 432 400 368 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 984 983 982 981 980 948 916 884 883 851 850 849 848 847 815 783 751 752 753 721 689 657 625 593 594 
[DBG]    Local path (in submap): 594 593 561 529 528 
[DBG]    Suffix (out of submap): 496 464 432 400 368 
[DBG]  Original agent path length 49 je: 39
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 1: 984, 983, 982, 981, 980, 948, 916, 884, 883, 851, 850, 849, 848, 847, 815, 783, 751, 752, 753, 721, 689, 657, 625, 593, 594, 594, 593, 561, 529, 528, 496, 464, 432, 400, 368, 
[DBG]  Path for agent 49 updated, resulting length: 35
[DBG]  Update the agent path 62 | Original local length: 2 | New local length: 2
[DBG]  agent 62 t=0 => decoded (sx,sy)=(0,3) => global_id=565
[DBG]  agent 62 t=1 => decoded (sx,sy)=(0,4) => global_id=566
[DBG]  Complete path of agent 62:
[DBG]    Original: 753 753 753 753 753 753 753 753 753 753 753 753 753 721 722 722 721 689 657 658 659 627 628 629 597 565 566 534 502 470 438 438 406 
[DBG]    New:     753 753 753 753 753 753 753 753 753 753 753 753 753 721 722 722 721 689 657 658 659 627 628 629 597 565 566 534 502 470 438 438 406 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 753 753 753 753 753 753 753 753 753 753 753 753 753 721 722 722 721 689 657 658 659 627 628 629 597 
[DBG]    Local path (in submap): 565 566 
[DBG]    Suffix (out of submap): 534 502 470 438 438 406 
[DBG]  Original agent path length 62 je: 33
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 2: 753, 753, 753, 753, 753, 753, 753, 753, 753, 753, 753, 753, 753, 721, 722, 722, 721, 689, 657, 658, 659, 627, 628, 629, 597, 565, 566, 534, 502, 470, 438, 438, 406, 
[DBG]  Path for agent 62 updated, resulting length: 33
[DBG]  Paths successfully updated.
[DBG]  (LNS.cpp) New path for agent 28: 
[DBG]  661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 629, 628, 660, 692, 724, 725, 726, 727, 
[DBG]  (LNS.cpp) New path for agent 49: 
[DBG]  984, 983, 982, 981, 980, 948, 916, 884, 883, 851, 850, 849, 848, 847, 815, 783, 751, 752, 753, 721, 689, 657, 625, 593, 594, 594, 593, 561, 529, 528, 496, 464, 432, 400, 368, 
[DBG]  (LNS.cpp) New path for agent 62: 
[DBG]  753, 753, 753, 753, 753, 753, 753, 753, 753, 753, 753, 753, 753, 721, 722, 722, 721, 689, 657, 658, 659, 627, 628, 629, 597, 565, 566, 534, 502, 470, 438, 438, 406, 
[DBG]  Delta value: 0.141593
[DBG]  Rewarding metric index = 1
[DBG]  component_weights = {0.00462569, 0.989805, 0.00203738, 0.00353233}
[DBG]  opSuccess value: 1
[STAT] neighbor.sum_of_costs before recomputation: 97
[STAT] neighbor.old_sum_of_costs before recomputation: 113
[STAT] sum_of_costs before recomputation: 4313
[DBG]  Validate solution immediately after SAT success.
[WARNING] Problem after SAT: Vertex conflict between agents 49 and 3 at location 593 at timestep 26
[DBG]  [DEBUG] Attempting immediate repair via init_lns because problem occurred after SAT (should be applied only for conflicts...).
[DBG]  [DEBUG] Passing 150 agents to init_lns (skip=true).
[DBG]  [DEBUG] path_table contents for selected agents (neighbor.agents):
[DBG]    Agent 28 => controlling path length=32
[DBG]    Agent 49 => controlling path length=35
[DBG]    Agent 62 => controlling path length=33
[DBG]  hodnota skip_initial_solution=1
[DBG]  We skip initialSolution => call buildCollisionData()
[DBG]  buildCollisionData() called – skip_initial_solution case.
[DBG]  Agents.size()=150, collision_graph.size()=150
[DBG]  agent 3 => updateCollidingPairs => foundCollision
[DBG]  agent 28 => updateCollidingPairs => foundCollision
[DBG]  agent 42 => updateCollidingPairs => foundCollision
[DBG]  agent 44 => updateCollidingPairs => foundCollision
[DBG]  agent 49 => updateCollidingPairs => foundCollision
[DBG]  agent 100 => updateCollidingPairs => foundCollision
[DBG]  agent 135 => updateCollidingPairs => foundCollision
[DBG]  Conflicting agent pairs:
[DBG]  agent 3 is in conflict with agent 49
[DBG]  agent 28 is in conflict with agent 42
[DBG]  agent 44 is in conflict with agent 49
[DBG]  agent 49 is in conflict with agent 100
[DBG]  agent 49 is in conflict with agent 135
[DBG]  buildCollisionData() => sum_of_costs=4297, num_of_colliding_pairs=5
[DBG]  buildCollisionData done => sum_of_costs=4297, num_of_colliding_pairs=5
[DBG]  sum_of_cost hodnota: 4297
[DBG]  After skip/init build => iteration_stats.back(): sum_of_costs=4297, collisions=5
[DEBUG] Using default neighbor generation strategy for conflicts: 0
[DEBUG] Using default neighbor generation strategy for conflicts: 0
	InitLNS(PP): runtime = 0.00162367, iterations = 3, colliding pairs = 0, initial colliding pairs = 5, solution cost = 4310, initial solution cost = 4297, failed iterations = 0
[DBG]  init_lns->sum_of_costs after init_lns->run: 4310
[DBG]  sum_of_costs after assignment from init_lns->run: 4310
[DBG]  Recomputing sum_of_cost by dividing neighbor.sum_of_costs and neighbor.old_sum_of_costs
[STAT] sum_of_costs after recomputation: 4310
[STAT] Iteration 88
[DBG]  Random chance did not select SAT operator (r=31), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 88
[DBG]  Random chance did not select SAT operator (r=63), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 88
[DBG]  Random chance did not select SAT operator (r=79), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 88
[DBG]  Random chance did not select SAT operator (r=33), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 88
[DBG]  Random chance did not select SAT operator (r=49), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 88
[DBG]  Random chance did not select SAT operator (r=36), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 88
[DBG]  Random chance did not select SAT operator (r=39), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 88
[DBG]  Using SAT operator (destroy+repair SAT).
[DBG]  ====================
[DBG]  SAT destroy operator called.
[DBG]  SAT heuristic: 2
[DBG]  key_agent_id: 28
[DBG]  key_agent_id global path length: 44
[DBG]  Submap content (global positions):
[DBG]  595 596 597 598 599 
[DBG]  627 628 629 630 631 
[DBG]  659 660 661 662 663 
[DBG]  691 692 693 694 695 
[DBG]  723 724 725 726 727 
[DBG]  Map content with agents and obstacles:
[DBG]  X A . X . 
[DBG]  . A . X . 
[DBG]  . . A X X 
[DBG]  . A X X X 
[DBG]  X . . A . 
[DBG]  content of the map structure that we pass to the SAT solver:
[DBG]  -1  1  1  -1  1  
[DBG]  1  1  1  -1  1  
[DBG]  1  1  1  -1  -1  
[DBG]  1  1  -1  -1  -1  
[DBG]  -1  1  1  1  1  
[DBG]  Identifying agents in a submap for rescheduling (when key_agent is there at the time 7):
[DBG]  Agent 28 found intervals in the sub-map:
[DBG]   [0..43]
[DBG]  Agent 28 (interval in submap: [0..43]) contains time 7, added to replan.
[DBG]  Agent 46 found intervals in the sub-map:
[DBG]   [9..12]
[DBG]  Agent 46 is not in sub-map at time 7 (intervals: 
[DBG]  [9..12] )
[DBG]  Agent 63 found intervals in the sub-map:
[DBG]  
[DBG]  Agent 63 is not in sub-map at time 7 (intervals: 
[DBG]  )
[DBG]  Agent 70 found intervals in the sub-map:
[DBG]   [6..9]
[DBG]  Agent 70 (interval in submap: [6..9]) contains time 7, added to replan.
[DBG]  Agent 74 found intervals in the sub-map:
[DBG]   [9..13]
[DBG]  Agent 74 is not in sub-map at time 7 (intervals: 
[DBG]  [9..13] )
[DBG]  Agent 89 found intervals in the sub-map:
[DBG]   [5..10]
[DBG]  Agent 89 (interval in submap: [5..10]) contains time 7, added to replan.
[DBG]  Agent 91 found intervals in the sub-map:
[DBG]   [3..8]
[DBG]  Agent 91 (interval in submap: [3..8]) contains time 7, added to replan.
[DBG]  Agent 108 found intervals in the sub-map:
[DBG]   [0..8]
[DBG]  Agent 108 (interval in submap: [0..8]) contains time 7, added to replan.
[DBG]  Agent 135 found intervals in the sub-map:
[DBG]  
[DBG]  Agent 135 is not in sub-map at time 7 (intervals: 
[DBG]  )
[DBG]  Agent 28 | Start (global): 661 -> (local): (2, 2) at time 7 | Goal (global): 727 -> (local): (4, 4) at time 43
[DBG]  Agent 70 | Start (global): 726 -> (local): (4, 3) at time 7 | Goal (global): 724 -> (local): (4, 1) at time 9
[DBG]  Agent 89 | Start (global): 628 -> (local): (1, 1) at time 7 | Goal (global): 724 -> (local): (4, 1) at time 10
[DBG]  Agent 91 | Start (global): 596 -> (local): (0, 1) at time 7 | Goal (global): 597 -> (local): (0, 2) at time 8
[DBG]  Agent 108 | Start (global): 692 -> (local): (3, 1) at time 7 | Goal (global): 724 -> (local): (4, 1) at time 8
[DBG]  [REPAIR] SAT destroy operator called.
[DBG]  [REPAIR] SAT operator – launching subproblem FOR OPTIMIZATION.
[DBG]  Creating local paths (sx, sy) in the submap for T_sync = 7
[DBG]    Agent 28 (global paths from T=7 to 43) has local path: (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,1) (3,1) (4,1) (4,2) (4,3) (4,4) 
[DBG]    Agent 70 (global paths from T=7 to 9) has local path: (4,3) (4,2) (4,1) 
[DBG]    Agent 89 (global paths from T=7 to 10) has local path: (1,1) (2,1) (3,1) (4,1) 
[DBG]    Agent 91 (global paths from T=7 to 8) has local path: (0,1) (0,2) 
[DBG]    Agent 108 (global paths from T=7 to 8) has local path: (3,1) (4,1) 
[DBG]  Checking input data for SAT solver:
[DBG]    - Number of agents to replan: 5
[DBG]  Agent 28 has the original local path length: 37 => Start (2,2), Goal (4,4)
[DBG]  Agent 70 has the original local path length: 3 => Start (4,3), Goal (4,1)
[DBG]  Agent 89 has the original local path length: 4 => Start (1,1), Goal (4,1)
[DBG]  Agent 91 has the original local path length: 2 => Start (0,1), Goal (0,2)
[DBG]  Agent 108 has the original local path length: 2 => Start (3,1), Goal (4,1)
[DBG]  Start position: (2, 2), (4, 3), (1, 1), (0, 1), (3, 1), 
[DBG]  Goal position: (4, 4), (4, 1), (4, 1), (0, 2), (4, 1), 
[DBG]  SAT instance and solver created.
Currently solving
Instance name: scen
Map name: map
Encoding used: disappear_at_goal
SAT solver used: Kissat
Optimizing function: sum of costs
Number of agents: 5
Mks LB: 7
SoC LB: 18
Delta: 0
Remaining time: 300000 [ms]

[STAT] Solver returned: -1
[DBG]  SAT solver failed.
[STAT] SAT solver failed to find a valid solution.
[DBG]  ====================
[DBG]  SAT destroy operator called.
[DBG]  SAT heuristic: 2
[DBG]  key_agent_id: 28
[DBG]  key_agent_id global path length: 44
[DBG]  Submap content (global positions):
[DBG]  595 596 597 598 599 
[DBG]  627 628 629 630 631 
[DBG]  659 660 661 662 663 
[DBG]  691 692 693 694 695 
[DBG]  723 724 725 726 727 
[DBG]  Map content with agents and obstacles:
[DBG]  X . A X . 
[DBG]  . . A X . 
[DBG]  . . A X X 
[DBG]  . . X X X 
[DBG]  X . . . . 
[DBG]  content of the map structure that we pass to the SAT solver:
[DBG]  -1  1  1  -1  1  
[DBG]  1  1  1  -1  1  
[DBG]  1  1  1  -1  -1  
[DBG]  1  1  -1  -1  -1  
[DBG]  -1  1  1  1  1  
[DBG]  Identifying agents in a submap for rescheduling (when key_agent is there at the time 19):
[DBG]  Agent 11 found intervals in the sub-map:
[DBG]  
[DBG]  Agent 11 is not in sub-map at time 19 (intervals: 
[DBG]  )
[DBG]  Agent 28 found intervals in the sub-map:
[DBG]   [0..43]
[DBG]  Agent 28 (interval in submap: [0..43]) contains time 19, added to replan.
[DBG]  Agent 30 found intervals in the sub-map:
[DBG]   [15..20]
[DBG]  Agent 30 (interval in submap: [15..20]) contains time 19, added to replan.
[DBG]  Agent 79 found intervals in the sub-map:
[DBG]  
[DBG]  Agent 79 is not in sub-map at time 19 (intervals: 
[DBG]  )
[DBG]  Agent 114 found intervals in the sub-map:
[DBG]   [15..19]
[DBG]  Agent 114 (interval in submap: [15..19]) contains time 19, added to replan.
[DBG]  Agent 28 | Start (global): 661 -> (local): (2, 2) at time 19 | Goal (global): 727 -> (local): (4, 4) at time 43
[DBG]  Agent 30 | Start (global): 629 -> (local): (1, 2) at time 19 | Goal (global): 597 -> (local): (0, 2) at time 20
[DBG]  Agent 114 | Start (global): 597 -> (local): (0, 2) at time 19 | Goal (global): 597 -> (local): (0, 2) at time 19
[DBG]  [REPAIR] SAT destroy operator called.
[DBG]  [REPAIR] SAT operator – launching subproblem FOR OPTIMIZATION.
[DBG]  Creating local paths (sx, sy) in the submap for T_sync = 19
[DBG]    Agent 28 (global paths from T=19 to 43) has local path: (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,1) (3,1) (4,1) (4,2) (4,3) (4,4) 
[DBG]    Agent 30 (global paths from T=19 to 20) has local path: (1,2) (0,2) 
[DBG]    Agent 114 (global paths from T=19 to 19) has local path: (0,2) 
[DBG]  Checking input data for SAT solver:
[DBG]    - Number of agents to replan: 3
[DBG]  Agent 28 has the original local path length: 25 => Start (2,2), Goal (4,4)
[DBG]  Agent 30 has the original local path length: 2 => Start (1,2), Goal (0,2)
[DBG]  Agent 114 has the original local path length: 1 => Start (0,2), Goal (0,2)
[DBG]  Start position: (2, 2), (1, 2), (0, 2), 
[DBG]  Goal position: (4, 4), (0, 2), (0, 2), 
[DBG]  SAT instance and solver created.
Currently solving
Instance name: scen
Map name: map
Encoding used: disappear_at_goal
SAT solver used: Kissat
Optimizing function: sum of costs
Number of agents: 3
Mks LB: 7
SoC LB: 10
Delta: 0
Remaining time: 300000 [ms]

Vertex conflict! Agents 1, 2, timestep 2, location 0
Swapping conflict! Agents 1, 2, timestep 2, edge (0,0)
Vertex conflict! Agents 1, 2, timestep 3, location 0
Swapping conflict! Agents 1, 2, timestep 3, edge (0,0)
Vertex conflict! Agents 1, 2, timestep 4, location 0
Swapping conflict! Agents 1, 2, timestep 4, edge (0,0)
Vertex conflict! Agents 1, 2, timestep 5, location 0
Swapping conflict! Agents 1, 2, timestep 5, edge (0,0)
Vertex conflict! Agents 1, 2, timestep 6, location 0
Found plan [agents = 3] [timesteps = 7]
Agent #0 : 9 8 11 12 13 14 15 
Agent #1 : 5 1 0 0 0 0 0 
Agent #2 : 1 0 0 0 0 0 0 

[STAT] Solver returned: 0
[DBG]  Agent (index) 28 | New local path (submap idx):
[DBG]  9 8 11 12 13 14 15 
[DBG]  Agent (index) 30 | New local path (submap idx):
[DBG]  5 1 
[DBG]  Agent (index) 114 | New local path (submap idx):
[DBG]  1 
[DBG]  Update the agent path 28 | Original local length: 25 | New local length: 7
[DBG]  agent 28 t=0 => decoded (sx,sy)=(2,2) => global_id=661
[DBG]  agent 28 t=1 => decoded (sx,sy)=(2,1) => global_id=660
[DBG]  agent 28 t=2 => decoded (sx,sy)=(3,1) => global_id=692
[DBG]  agent 28 t=3 => decoded (sx,sy)=(4,1) => global_id=724
[DBG]  agent 28 t=4 => decoded (sx,sy)=(4,2) => global_id=725
[DBG]  agent 28 t=5 => decoded (sx,sy)=(4,3) => global_id=726
[DBG]  agent 28 t=6 => decoded (sx,sy)=(4,4) => global_id=727
[DBG]  Complete path of agent 28:
[DBG]    Original: 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 660 692 724 725 726 727 
[DBG]    New:     661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 660 692 724 725 726 727 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 
[DBG]    Local path (in submap): 661 660 692 724 725 726 727 
[DBG]    Suffix (out of submap): 
[DBG]  Original agent path length 28 je: 44
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 0: 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 660, 692, 724, 725, 726, 727, 
[DBG]  Path for agent 28 updated, resulting length: 26
[DBG]  Update the agent path 30 | Original local length: 2 | New local length: 2
[DBG]  agent 30 t=0 => decoded (sx,sy)=(1,2) => global_id=629
[DBG]  agent 30 t=1 => decoded (sx,sy)=(0,2) => global_id=597
[DBG]  Complete path of agent 30:
[DBG]    Original: 922 890 889 888 887 886 885 885 884 883 851 819 787 788 756 724 692 660 628 629 597 565 565 533 501 502 503 
[DBG]    New:     922 890 889 888 887 886 885 885 884 883 851 819 787 788 756 724 692 660 628 629 597 565 565 533 501 502 503 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 922 890 889 888 887 886 885 885 884 883 851 819 787 788 756 724 692 660 628 
[DBG]    Local path (in submap): 629 597 
[DBG]    Suffix (out of submap): 565 565 533 501 502 503 
[DBG]  Original agent path length 30 je: 27
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 1: 922, 890, 889, 888, 887, 886, 885, 885, 884, 883, 851, 819, 787, 788, 756, 724, 692, 660, 628, 629, 597, 565, 565, 533, 501, 502, 503, 
[DBG]  Path for agent 30 updated, resulting length: 27
[DBG]  Update the agent path 114 | Original local length: 1 | New local length: 1
[DBG]  agent 114 t=0 => decoded (sx,sy)=(0,2) => global_id=597
[DBG]  Complete path of agent 114:
[DBG]    Original: 875 843 844 812 813 814 782 750 718 719 687 688 689 657 658 659 660 628 596 597 565 533 534 502 470 438 439 407 375 343 344 312 312 313 281 249 217 218 186 154 
[DBG]    New:     875 843 844 812 813 814 782 750 718 719 687 688 689 657 658 659 660 628 596 597 565 533 534 502 470 438 439 407 375 343 344 312 312 313 281 249 217 218 186 154 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 875 843 844 812 813 814 782 750 718 719 687 688 689 657 658 659 660 628 596 
[DBG]    Local path (in submap): 597 
[DBG]    Suffix (out of submap): 565 533 534 502 470 438 439 407 375 343 344 312 312 313 281 249 217 218 186 154 
[DBG]  Original agent path length 114 je: 40
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 2: 875, 843, 844, 812, 813, 814, 782, 750, 718, 719, 687, 688, 689, 657, 658, 659, 660, 628, 596, 597, 565, 533, 534, 502, 470, 438, 439, 407, 375, 343, 344, 312, 312, 313, 281, 249, 217, 218, 186, 154, 
[DBG]  Path for agent 114 updated, resulting length: 40
[DBG]  Paths successfully updated.
[DBG]  (LNS.cpp) New path for agent 28: 
[DBG]  661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 660, 692, 724, 725, 726, 727, 
[DBG]  (LNS.cpp) New path for agent 30: 
[DBG]  922, 890, 889, 888, 887, 886, 885, 885, 884, 883, 851, 819, 787, 788, 756, 724, 692, 660, 628, 629, 597, 565, 565, 533, 501, 502, 503, 
[DBG]  (LNS.cpp) New path for agent 114: 
[DBG]  875, 843, 844, 812, 813, 814, 782, 750, 718, 719, 687, 688, 689, 657, 658, 659, 660, 628, 596, 597, 565, 533, 534, 502, 470, 438, 439, 407, 375, 343, 344, 312, 312, 313, 281, 249, 217, 218, 186, 154, 
[DBG]  Delta value: 0.166667
[DBG]  Rewarding metric index = 1
[DBG]  component_weights = {0.00377378, 0.991682, 0.00166215, 0.00288179}
[DBG]  opSuccess value: 1
[STAT] neighbor.sum_of_costs before recomputation: 90
[STAT] neighbor.old_sum_of_costs before recomputation: 108
[STAT] sum_of_costs before recomputation: 4310
[DBG]  Validate solution immediately after SAT success.
[WARNING] Problem after SAT: Target conflict: agent 42 (len 43) traverses target of agent 28 (len 25) at location 727 at timestep 42
[DBG]  [DEBUG] Attempting immediate repair via init_lns because problem occurred after SAT (should be applied only for conflicts...).
[DBG]  [DEBUG] Passing 150 agents to init_lns (skip=true).
[DBG]  [DEBUG] path_table contents for selected agents (neighbor.agents):
[DBG]    Agent 28 => controlling path length=26
[DBG]    Agent 30 => controlling path length=27
[DBG]    Agent 114 => controlling path length=40
[DBG]  hodnota skip_initial_solution=1
[DBG]  We skip initialSolution => call buildCollisionData()
[DBG]  buildCollisionData() called – skip_initial_solution case.
[DBG]  Agents.size()=150, collision_graph.size()=150
[DBG]  agent 28 => updateCollidingPairs => foundCollision
[DBG]  agent 42 => updateCollidingPairs => foundCollision
[DBG]  Conflicting agent pairs:
[DBG]  agent 28 is in conflict with agent 42
[DBG]  buildCollisionData() => sum_of_costs=4292, num_of_colliding_pairs=1
[DBG]  buildCollisionData done => sum_of_costs=4292, num_of_colliding_pairs=1
[DBG]  sum_of_cost hodnota: 4292
[DBG]  After skip/init build => iteration_stats.back(): sum_of_costs=4292, collisions=1
[DEBUG] Using default neighbor generation strategy for conflicts: 1
	InitLNS(PP): runtime = 0.00127004, iterations = 2, colliding pairs = 0, initial colliding pairs = 1, solution cost = 4307, initial solution cost = 4292, failed iterations = 0
[DBG]  init_lns->sum_of_costs after init_lns->run: 4307
[DBG]  sum_of_costs after assignment from init_lns->run: 4307
[DBG]  Recomputing sum_of_cost by dividing neighbor.sum_of_costs and neighbor.old_sum_of_costs
[STAT] sum_of_costs after recomputation: 4307
[STAT] Iteration 89
[DBG]  Random chance did not select SAT operator (r=15), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 89
[DBG]  Random chance did not select SAT operator (r=11), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 89
[DBG]  Using SAT operator (destroy+repair SAT).
[DBG]  ====================
[DBG]  SAT destroy operator called.
[DBG]  SAT heuristic: 2
[DBG]  key_agent_id: 28
[DBG]  key_agent_id global path length: 42
[DBG]  Submap content (global positions):
[DBG]  595 596 597 598 599 
[DBG]  627 628 629 630 631 
[DBG]  659 660 661 662 663 
[DBG]  691 692 693 694 695 
[DBG]  723 724 725 726 727 
[DBG]  Map content with agents and obstacles:
[DBG]  X . . X . 
[DBG]  . . . X . 
[DBG]  . . A X X 
[DBG]  . . X X X 
[DBG]  X . . . . 
[DBG]  content of the map structure that we pass to the SAT solver:
[DBG]  -1  1  1  -1  1  
[DBG]  1  1  1  -1  1  
[DBG]  1  1  1  -1  -1  
[DBG]  1  1  -1  -1  -1  
[DBG]  -1  1  1  1  1  
[DBG]  Identifying agents in a submap for rescheduling (when key_agent is there at the time 14):
[DBG]  Agent 28 found intervals in the sub-map:
[DBG]   [0..35] [38..41]
[DBG]  Agent 28 (interval in submap: [0..35]) contains time 14, added to replan.
[DBG]  Agent 86 found intervals in the sub-map:
[DBG]  
[DBG]  Agent 86 is not in sub-map at time 14 (intervals: 
[DBG]  )
[DBG]  Agent 28 | Start (global): 661 -> (local): (2, 2) at time 14 | Goal (global): 724 -> (local): (4, 1) at time 35
[DBG]  [REPAIR] SAT destroy operator called.
[DBG]  [REPAIR] SAT operator – launching subproblem FOR OPTIMIZATION.
[DBG]  Creating local paths (sx, sy) in the submap for T_sync = 14
[DBG]    Agent 28 (global paths from T=14 to 35) has local path: (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,1) (3,1) (4,1) 
[DBG]  Checking input data for SAT solver:
[DBG]    - Number of agents to replan: 1
[DBG]  Agent 28 has the original local path length: 22 => Start (2,2), Goal (4,1)
[DBG]  Start position: (2, 2), 
[DBG]  Goal position: (4, 1), 
[DBG]  SAT instance and solver created.
Currently solving
Instance name: scen
Map name: map
Encoding used: disappear_at_goal
SAT solver used: Kissat
Optimizing function: sum of costs
Number of agents: 1
Mks LB: 4
SoC LB: 4
Delta: 0
Remaining time: 300000 [ms]

Found plan [agents = 1] [timesteps = 4]
Agent #0 : 9 8 11 12 

[STAT] Solver returned: 0
[DBG]  Agent (index) 28 | New local path (submap idx):
[DBG]  9 8 11 12 
[DBG]  Update the agent path 28 | Original local length: 22 | New local length: 4
[DBG]  agent 28 t=0 => decoded (sx,sy)=(2,2) => global_id=661
[DBG]  agent 28 t=1 => decoded (sx,sy)=(2,1) => global_id=660
[DBG]  agent 28 t=2 => decoded (sx,sy)=(3,1) => global_id=692
[DBG]  agent 28 t=3 => decoded (sx,sy)=(4,1) => global_id=724
[DBG]  Complete path of agent 28:
[DBG]    Original: 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 660 692 724 756 756 724 725 726 727 
[DBG]    New:     661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 660 692 724 756 756 724 725 726 727 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 661 661 661 661 661 661 661 661 661 661 661 661 661 661 
[DBG]    Local path (in submap): 661 660 692 724 756 756 724 725 726 727 
[DBG]    Suffix (out of submap): 
[DBG]  Original agent path length 28 je: 42
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 0: 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 660, 692, 724, 756, 756, 724, 725, 726, 727, 
[DBG]  Path for agent 28 updated, resulting length: 24
[DBG]  Paths successfully updated.
[DBG]  (LNS.cpp) New path for agent 28: 
[DBG]  661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 660, 692, 724, 756, 756, 724, 725, 726, 727, 
[DBG]  Delta value: 0.439024
[DBG]  Rewarding metric index = 1
[DBG]  component_weights = {0.00249839, 0.994493, 0.00110041, 0.00190786}
[DBG]  opSuccess value: 1
[STAT] neighbor.sum_of_costs before recomputation: 23
[STAT] neighbor.old_sum_of_costs before recomputation: 41
[STAT] sum_of_costs before recomputation: 4307
[DBG]  Validate solution immediately after SAT success.
[WARNING] Problem after SAT: Vertex conflict between agents 28 and 30 at location 692 at timestep 16
[DBG]  [DEBUG] Attempting immediate repair via init_lns because problem occurred after SAT (should be applied only for conflicts...).
[DBG]  [DEBUG] Passing 150 agents to init_lns (skip=true).
[DBG]  [DEBUG] path_table contents for selected agents (neighbor.agents):
[DBG]    Agent 28 => controlling path length=24
[DBG]  hodnota skip_initial_solution=1
[DBG]  We skip initialSolution => call buildCollisionData()
[DBG]  buildCollisionData() called – skip_initial_solution case.
[DBG]  Agents.size()=150, collision_graph.size()=150
[DBG]  agent 28 => updateCollidingPairs => foundCollision
[DBG]  agent 30 => updateCollidingPairs => foundCollision
[DBG]  agent 42 => updateCollidingPairs => foundCollision
[DBG]  Conflicting agent pairs:
[DBG]  agent 28 is in conflict with agent 30
[DBG]  agent 28 is in conflict with agent 42
[DBG]  buildCollisionData() => sum_of_costs=4289, num_of_colliding_pairs=2
[DBG]  buildCollisionData done => sum_of_costs=4289, num_of_colliding_pairs=2
[DBG]  sum_of_cost hodnota: 4289
[DBG]  After skip/init build => iteration_stats.back(): sum_of_costs=4289, collisions=2
[DEBUG] Using default neighbor generation strategy for conflicts: 0
[DEBUG] Using default neighbor generation strategy for conflicts: 2
	InitLNS(PP): runtime = 0.00178708, iterations = 3, colliding pairs = 0, initial colliding pairs = 2, solution cost = 4302, initial solution cost = 4289, failed iterations = 0
[DBG]  init_lns->sum_of_costs after init_lns->run: 4302
[DBG]  sum_of_costs after assignment from init_lns->run: 4302
[DBG]  Recomputing sum_of_cost by dividing neighbor.sum_of_costs and neighbor.old_sum_of_costs
[STAT] sum_of_costs after recomputation: 4302
[STAT] Iteration 90
[DBG]  Random chance did not select SAT operator (r=61), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 90
[DBG]  Random chance did not select SAT operator (r=82), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 90
[DBG]  Random chance did not select SAT operator (r=56), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 90
[DBG]  Random chance did not select SAT operator (r=48), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 90
[DBG]  Random chance did not select SAT operator (r=98), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 90
[DBG]  Random chance did not select SAT operator (r=91), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 90
[DBG]  Random chance did not select SAT operator (r=76), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 90
[DBG]  Random chance did not select SAT operator (r=13), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 90
[DBG]  Random chance did not select SAT operator (r=88), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 90
[DBG]  Random chance did not select SAT operator (r=94), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 90
[DBG]  Random chance did not select SAT operator (r=33), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 90
[DBG]  Random chance did not select SAT operator (r=39), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 90
[DBG]  Random chance did not select SAT operator (r=72), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 90
[DBG]  Random chance did not select SAT operator (r=60), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 90
[DBG]  Random chance did not select SAT operator (r=44), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 90
[DBG]  Random chance did not select SAT operator (r=18), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 90
[DBG]  Using SAT operator (destroy+repair SAT).
[DBG]  ====================
[DBG]  SAT destroy operator called.
[DBG]  SAT heuristic: 2
[DBG]  key_agent_id: 28
[DBG]  key_agent_id global path length: 42
[DBG]  Submap content (global positions):
[DBG]  499 500 501 502 503 
[DBG]  531 532 533 534 535 
[DBG]  563 564 565 566 567 
[DBG]  595 596 597 598 599 
[DBG]  627 628 629 630 631 
[DBG]  Map content with agents and obstacles:
[DBG]  A X A . . 
[DBG]  A X A . X 
[DBG]  . X A A X 
[DBG]  X . . X . 
[DBG]  . A . X . 
[DBG]  content of the map structure that we pass to the SAT solver:
[DBG]  1  -1  1  1  1  
[DBG]  1  -1  1  1  -1  
[DBG]  1  -1  1  1  -1  
[DBG]  -1  1  1  -1  1  
[DBG]  1  1  1  -1  1  
[DBG]  Identifying agents in a submap for rescheduling (when key_agent is there at the time 21):
[DBG]  Agent 3 found intervals in the sub-map:
[DBG]   [14..22]
[DBG]  Agent 3 (interval in submap: [14..22]) contains time 21, added to replan.
[DBG]  Agent 28 found intervals in the sub-map:
[DBG]   [13..28]
[DBG]  Agent 28 (interval in submap: [13..28]) contains time 21, added to replan.
[DBG]  Agent 30 found intervals in the sub-map:
[DBG]   [21..29]
[DBG]  Agent 30 (interval in submap: [21..29]) contains time 21, added to replan.
[DBG]  Agent 45 found intervals in the sub-map:
[DBG]   [14..31]
[DBG]  Agent 45 (interval in submap: [14..31]) contains time 21, added to replan.
[DBG]  Agent 53 found intervals in the sub-map:
[DBG]   [21..29]
[DBG]  Agent 53 (interval in submap: [21..29]) contains time 21, added to replan.
[DBG]  Agent 61 found intervals in the sub-map:
[DBG]  
[DBG]  Agent 61 is not in sub-map at time 21 (intervals: 
[DBG]  )
[DBG]  Agent 62 found intervals in the sub-map:
[DBG]  
[DBG]  Agent 62 is not in sub-map at time 21 (intervals: 
[DBG]  )
[DBG]  Agent 74 found intervals in the sub-map:
[DBG]   [11..20]
[DBG]  Agent 74 is not in sub-map at time 21 (intervals: 
[DBG]  [11..20] )
[DBG]  Agent 79 found intervals in the sub-map:
[DBG]  
[DBG]  Agent 79 is not in sub-map at time 21 (intervals: 
[DBG]  )
[DBG]  Agent 81 found intervals in the sub-map:
[DBG]   [21..22]
[DBG]  Agent 81 (interval in submap: [21..22]) contains time 21, added to replan.
[DBG]  Agent 114 found intervals in the sub-map:
[DBG]   [18..23]
[DBG]  Agent 114 (interval in submap: [18..23]) contains time 21, added to replan.
[DBG]  Agent 3 | Start (global): 499 -> (local): (0, 0) at time 21 | Goal (global): 531 -> (local): (1, 0) at time 22
[DBG]  Agent 28 | Start (global): 565 -> (local): (2, 2) at time 21 | Goal (global): 628 -> (local): (4, 1) at time 28
[DBG]  Agent 30 | Start (global): 628 -> (local): (4, 1) at time 21 | Goal (global): 503 -> (local): (0, 4) at time 29
[DBG]  Agent 45 | Start (global): 566 -> (local): (2, 3) at time 21 | Goal (global): 628 -> (local): (4, 1) at time 31
[DBG]  Agent 53 | Start (global): 501 -> (local): (0, 2) at time 21 | Goal (global): 628 -> (local): (4, 1) at time 29
[DBG]  Agent 81 | Start (global): 531 -> (local): (1, 0) at time 21 | Goal (global): 563 -> (local): (2, 0) at time 22
[DBG]  Agent 114 | Start (global): 533 -> (local): (1, 2) at time 21 | Goal (global): 502 -> (local): (0, 3) at time 23
[DBG]  [REPAIR] SAT destroy operator called.
[DBG]  [REPAIR] SAT operator – launching subproblem FOR OPTIMIZATION.
[DBG]  Creating local paths (sx, sy) in the submap for T_sync = 21
[DBG]    Agent 3 (global paths from T=21 to 22) has local path: (0,0) (1,0) 
[DBG]    Agent 28 (global paths from T=21 to 28) has local path: (2,2) (2,2) (1,2) (1,2) (2,2) (3,2) (4,2) (4,1) 
[DBG]    Agent 30 (global paths from T=21 to 29) has local path: (4,1) (4,2) (3,2) (2,2) (2,3) (2,3) (1,3) (0,3) (0,4) 
[DBG]    Agent 45 (global paths from T=21 to 31) has local path: (2,3) (2,3) (2,3) (2,3) (1,3) (1,3) (1,2) (2,2) (3,2) (4,2) (4,1) 
[DBG]    Agent 53 (global paths from T=21 to 29) has local path: (0,2) (1,2) (1,3) (1,3) (1,2) (2,2) (3,2) (3,1) (4,1) 
[DBG]    Agent 81 (global paths from T=21 to 22) has local path: (1,0) (2,0) 
[DBG]    Agent 114 (global paths from T=21 to 23) has local path: (1,2) (1,3) (0,3) 
[DBG]  Checking input data for SAT solver:
[DBG]    - Number of agents to replan: 7
[DBG]  Agent 3 has the original local path length: 2 => Start (0,0), Goal (1,0)
[DBG]  Agent 28 has the original local path length: 8 => Start (2,2), Goal (4,1)
[DBG]  Agent 30 has the original local path length: 9 => Start (4,1), Goal (0,4)
[DBG]  Agent 45 has the original local path length: 11 => Start (2,3), Goal (4,1)
[DBG]  Agent 53 has the original local path length: 9 => Start (0,2), Goal (4,1)
[DBG]  Agent 81 has the original local path length: 2 => Start (1,0), Goal (2,0)
[DBG]  Agent 114 has the original local path length: 3 => Start (1,2), Goal (0,3)
[DBG]  Start position: (0, 0), (2, 2), (4, 1), (2, 3), (0, 2), (1, 0), (1, 2), 
[DBG]  Goal position: (1, 0), (4, 1), (0, 4), (4, 1), (4, 1), (2, 0), (0, 3), 
[DBG]  SAT instance and solver created.
Currently solving
Instance name: scen
Map name: map
Encoding used: disappear_at_goal
SAT solver used: Kissat
Optimizing function: sum of costs
Number of agents: 7
Mks LB: 8
SoC LB: 30
Delta: 0
Remaining time: 300000 [ms]

[STAT] Solver returned: -1
[DBG]  SAT solver failed.
[STAT] SAT solver failed to find a valid solution.
[DBG]  ====================
[DBG]  SAT destroy operator called.
[DBG]  SAT heuristic: 2
[DBG]  key_agent_id: 28
[DBG]  key_agent_id global path length: 42
[DBG]  Submap content (global positions):
[DBG]  691 692 693 694 695 
[DBG]  723 724 725 726 727 
[DBG]  755 756 757 758 759 
[DBG]  787 788 789 790 791 
[DBG]  819 820 821 822 823 
[DBG]  Map content with agents and obstacles:
[DBG]  . . X X X 
[DBG]  X A A . . 
[DBG]  . . A X . 
[DBG]  . . X . X 
[DBG]  A . . . . 
[DBG]  content of the map structure that we pass to the SAT solver:
[DBG]  1  1  -1  -1  -1  
[DBG]  -1  1  1  1  1  
[DBG]  1  1  1  -1  1  
[DBG]  1  1  -1  1  -1  
[DBG]  1  1  1  1  1  
[DBG]  Identifying agents in a submap for rescheduling (when key_agent is there at the time 38):
[DBG]  Agent 26 found intervals in the sub-map:
[DBG]   [32..35]
[DBG]  Agent 26 is not in sub-map at time 38 (intervals: 
[DBG]  [32..35] )
[DBG]  Agent 28 found intervals in the sub-map:
[DBG]   [30..41]
[DBG]  Agent 28 (interval in submap: [30..41]) contains time 38, added to replan.
[DBG]  Agent 42 found intervals in the sub-map:
[DBG]   [36..41]
[DBG]  Agent 42 (interval in submap: [36..41]) contains time 38, added to replan.
[DBG]  Agent 45 found intervals in the sub-map:
[DBG]   [33..38]
[DBG]  Agent 45 (interval in submap: [33..38]) contains time 38, added to replan.
[DBG]  Agent 53 found intervals in the sub-map:
[DBG]   [31..36]
[DBG]  Agent 53 is not in sub-map at time 38 (intervals: 
[DBG]  [31..36] )
[DBG]  Agent 28 | Start (global): 757 -> (local): (2, 2) at time 38 | Goal (global): 727 -> (local): (1, 4) at time 41
[DBG]  Agent 42 | Start (global): 725 -> (local): (1, 2) at time 38 | Goal (global): 759 -> (local): (2, 4) at time 41
[DBG]  Agent 45 | Start (global): 819 -> (local): (4, 0) at time 38 | Goal (global): 819 -> (local): (4, 0) at time 38
[DBG]  [REPAIR] SAT destroy operator called.
[DBG]  [REPAIR] SAT operator – launching subproblem FOR OPTIMIZATION.
[DBG]  Creating local paths (sx, sy) in the submap for T_sync = 38
[DBG]    Agent 28 (global paths from T=38 to 41) has local path: (2,2) (1,2) (1,3) (1,4) 
[DBG]    Agent 42 (global paths from T=38 to 41) has local path: (1,2) (1,3) (1,4) (2,4) 
[DBG]    Agent 45 (global paths from T=38 to 38) has local path: (4,0) 
[DBG]  Checking input data for SAT solver:
[DBG]    - Number of agents to replan: 3
[DBG]  Agent 28 has the original local path length: 4 => Start (2,2), Goal (1,4)
[DBG]  Agent 42 has the original local path length: 4 => Start (1,2), Goal (2,4)
[DBG]  Agent 45 has the original local path length: 1 => Start (4,0), Goal (4,0)
[DBG]  Start position: (2, 2), (1, 2), (4, 0), 
[DBG]  Goal position: (1, 4), (2, 4), (4, 0), 
[DBG]  SAT instance and solver created.
Currently solving
Instance name: scen
Map name: map
Encoding used: disappear_at_goal
SAT solver used: Kissat
Optimizing function: sum of costs
Number of agents: 3
Mks LB: 4
SoC LB: 9
Delta: 0
Remaining time: 300000 [ms]

Found plan [agents = 3] [timesteps = 4]
Agent #0 : 8 3 4 5 
Agent #1 : 3 4 5 9 
Agent #2 : 13 0 0 0 

[STAT] Solver returned: 0
[DBG]  Agent (index) 28 | New local path (submap idx):
[DBG]  8 3 4 5 
[DBG]  Agent (index) 42 | New local path (submap idx):
[DBG]  3 4 5 9 
[DBG]  Agent (index) 45 | New local path (submap idx):
[DBG]  13 
[DBG]  Update the agent path 28 | Original local length: 4 | New local length: 4
[DBG]  agent 28 t=0 => decoded (sx,sy)=(2,2) => global_id=757
[DBG]  agent 28 t=1 => decoded (sx,sy)=(1,2) => global_id=725
[DBG]  agent 28 t=2 => decoded (sx,sy)=(1,3) => global_id=726
[DBG]  agent 28 t=3 => decoded (sx,sy)=(1,4) => global_id=727
[DBG]  Complete path of agent 28:
[DBG]    Original: 661 661 661 661 661 661 661 661 661 661 661 661 661 629 628 628 628 628 628 629 597 565 565 533 533 565 597 629 628 660 692 724 756 757 757 757 757 757 757 725 726 727 
[DBG]    New:     661 661 661 661 661 661 661 661 661 661 661 661 661 629 628 628 628 628 628 629 597 565 565 533 533 565 597 629 628 660 692 724 756 757 757 757 757 757 757 725 726 727 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 661 661 661 661 661 661 661 661 661 661 661 661 661 629 628 628 628 628 628 629 597 565 565 533 533 565 597 629 628 660 692 724 756 757 757 757 757 757 
[DBG]    Local path (in submap): 757 725 726 727 
[DBG]    Suffix (out of submap): 
[DBG]  Original agent path length 28 je: 42
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 0: 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 629, 628, 628, 628, 628, 628, 629, 597, 565, 565, 533, 533, 565, 597, 629, 628, 660, 692, 724, 756, 757, 757, 757, 757, 757, 757, 725, 726, 727, 
[DBG]  Path for agent 28 updated, resulting length: 42
[DBG]  Update the agent path 42 | Original local length: 4 | New local length: 4
[DBG]  agent 42 t=0 => decoded (sx,sy)=(1,2) => global_id=725
[DBG]  agent 42 t=1 => decoded (sx,sy)=(1,3) => global_id=726
[DBG]  agent 42 t=2 => decoded (sx,sy)=(1,4) => global_id=727
[DBG]  agent 42 t=3 => decoded (sx,sy)=(2,4) => global_id=759
[DBG]  Complete path of agent 42:
[DBG]    Original: 224 256 257 289 321 353 354 355 387 419 420 421 422 423 424 425 457 458 459 460 428 429 430 431 432 464 496 528 529 561 593 625 657 658 659 660 692 724 725 726 727 759 
[DBG]    New:     224 256 257 289 321 353 354 355 387 419 420 421 422 423 424 425 457 458 459 460 428 429 430 431 432 464 496 528 529 561 593 625 657 658 659 660 692 724 725 726 727 759 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 224 256 257 289 321 353 354 355 387 419 420 421 422 423 424 425 457 458 459 460 428 429 430 431 432 464 496 528 529 561 593 625 657 658 659 660 692 724 
[DBG]    Local path (in submap): 725 726 727 759 
[DBG]    Suffix (out of submap): 
[DBG]  Original agent path length 42 je: 42
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 1: 224, 256, 257, 289, 321, 353, 354, 355, 387, 419, 420, 421, 422, 423, 424, 425, 457, 458, 459, 460, 428, 429, 430, 431, 432, 464, 496, 528, 529, 561, 593, 625, 657, 658, 659, 660, 692, 724, 725, 726, 727, 759, 
[DBG]  Path for agent 42 updated, resulting length: 42
[DBG]  Update the agent path 45 | Original local length: 1 | New local length: 1
[DBG]  agent 45 t=0 => decoded (sx,sy)=(4,0) => global_id=819
[DBG]  Complete path of agent 45:
[DBG]    Original: 153 185 217 249 281 313 345 377 409 441 440 439 438 470 502 534 533 565 566 566 566 566 566 566 566 534 534 533 565 597 629 628 660 692 724 756 788 787 819 818 817 849 
[DBG]    New:     153 185 217 249 281 313 345 377 409 441 440 439 438 470 502 534 533 565 566 566 566 566 566 566 566 534 534 533 565 597 629 628 660 692 724 756 788 787 819 818 817 849 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 153 185 217 249 281 313 345 377 409 441 440 439 438 470 502 534 533 565 566 566 566 566 566 566 566 534 534 533 565 597 629 628 660 692 724 756 788 787 
[DBG]    Local path (in submap): 819 
[DBG]    Suffix (out of submap): 818 817 849 
[DBG]  Original agent path length 45 je: 42
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 2: 153, 185, 217, 249, 281, 313, 345, 377, 409, 441, 440, 439, 438, 470, 502, 534, 533, 565, 566, 566, 566, 566, 566, 566, 566, 534, 534, 533, 565, 597, 629, 628, 660, 692, 724, 756, 788, 787, 819, 818, 817, 849, 
[DBG]  Path for agent 45 updated, resulting length: 42
[DBG]  Paths successfully updated.
[DBG]  (LNS.cpp) New path for agent 28: 
[DBG]  661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 629, 628, 628, 628, 628, 628, 629, 597, 565, 565, 533, 533, 565, 597, 629, 628, 660, 692, 724, 756, 757, 757, 757, 757, 757, 757, 725, 726, 727, 
[DBG]  (LNS.cpp) New path for agent 42: 
[DBG]  224, 256, 257, 289, 321, 353, 354, 355, 387, 419, 420, 421, 422, 423, 424, 425, 457, 458, 459, 460, 428, 429, 430, 431, 432, 464, 496, 528, 529, 561, 593, 625, 657, 658, 659, 660, 692, 724, 725, 726, 727, 759, 
[DBG]  (LNS.cpp) New path for agent 45: 
[DBG]  153, 185, 217, 249, 281, 313, 345, 377, 409, 441, 440, 439, 438, 470, 502, 534, 533, 565, 566, 566, 566, 566, 566, 566, 566, 534, 534, 533, 565, 597, 629, 628, 660, 692, 724, 756, 788, 787, 819, 818, 817, 849, 
[DBG]  Delta value: 0
[DBG]  Rewarding metric index = 1
[DBG]  component_weights = {0.00237413, 0.994767, 0.00104568, 0.00181297}
[DBG]  opSuccess value: 1
[STAT] neighbor.sum_of_costs before recomputation: 123
[STAT] neighbor.old_sum_of_costs before recomputation: 123
[STAT] sum_of_costs before recomputation: 4302
[DBG]  Validate solution immediately after SAT success.
[DBG]  No problems after SAT replan.
[DBG]  Recomputing sum_of_cost by dividing neighbor.sum_of_costs and neighbor.old_sum_of_costs
[STAT] sum_of_costs after recomputation: 4302
[STAT] Iteration 91
[DBG]  Random chance did not select SAT operator (r=93), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 91
[DBG]  Random chance did not select SAT operator (r=98), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 91
[DBG]  Random chance did not select SAT operator (r=42), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 91
[DBG]  Random chance did not select SAT operator (r=37), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 91
[DBG]  Random chance did not select SAT operator (r=27), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 91
[DBG]  Random chance did not select SAT operator (r=76), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 91
[DBG]  Random chance did not select SAT operator (r=88), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 91
[DBG]  Random chance did not select SAT operator (r=11), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 91
[DBG]  Random chance did not select SAT operator (r=42), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 91
[DBG]  Random chance did not select SAT operator (r=48), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 91
[DBG]  Random chance did not select SAT operator (r=83), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 91
[DBG]  Random chance did not select SAT operator (r=35), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 91
[DBG]  Random chance did not select SAT operator (r=73), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 91
[DBG]  Random chance did not select SAT operator (r=16), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 91
[DBG]  Random chance did not select SAT operator (r=51), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 91
[DBG]  Random chance did not select SAT operator (r=31), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 91
[DBG]  Random chance did not select SAT operator (r=66), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 91
[DBG]  Random chance did not select SAT operator (r=68), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 91
[DBG]  Random chance did not select SAT operator (r=56), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 91
[DBG]  Random chance did not select SAT operator (r=58), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 91
[DBG]  Random chance did not select SAT operator (r=61), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 91
[DBG]  Random chance did not select SAT operator (r=64), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 91
[DBG]  Random chance did not select SAT operator (r=40), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 91
[DBG]  Random chance did not select SAT operator (r=95), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 91
[DBG]  Random chance did not select SAT operator (r=57), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 91
[DBG]  Random chance did not select SAT operator (r=91), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 91
[DBG]  Random chance did not select SAT operator (r=31), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 91
[DBG]  Random chance did not select SAT operator (r=10), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 91
[DBG]  Random chance did not select SAT operator (r=24), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 91
[DBG]  Random chance did not select SAT operator (r=23), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 91
[DBG]  Random chance did not select SAT operator (r=47), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 91
[DBG]  Random chance did not select SAT operator (r=81), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 91
[DBG]  Random chance did not select SAT operator (r=12), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 91
[DBG]  Random chance did not select SAT operator (r=78), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 91
[DBG]  Random chance did not select SAT operator (r=72), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 91
[DBG]  Random chance did not select SAT operator (r=56), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 91
[DBG]  Using SAT operator (destroy+repair SAT).
[DBG]  ====================
[DBG]  SAT destroy operator called.
[DBG]  SAT heuristic: 2
[DBG]  key_agent_id: 28
[DBG]  key_agent_id global path length: 42
[DBG]  Submap content (global positions):
[DBG]  594 595 596 597 598 
[DBG]  626 627 628 629 630 
[DBG]  658 659 660 661 662 
[DBG]  690 691 692 693 694 
[DBG]  722 723 724 725 726 
[DBG]  Map content with agents and obstacles:
[DBG]  . X A A X 
[DBG]  X . A . X 
[DBG]  . . A . X 
[DBG]  X . . X X 
[DBG]  . X . . . 
[DBG]  content of the map structure that we pass to the SAT solver:
[DBG]  1  -1  1  1  -1  
[DBG]  -1  1  1  1  -1  
[DBG]  1  1  1  1  -1  
[DBG]  -1  1  1  -1  -1  
[DBG]  1  -1  1  1  1  
[DBG]  Identifying agents in a submap for rescheduling (when key_agent is there at the time 29):
[DBG]  Agent 11 found intervals in the sub-map:
[DBG]  
[DBG]  Agent 11 is not in sub-map at time 29 (intervals: 
[DBG]  )
[DBG]  Agent 26 found intervals in the sub-map:
[DBG]   [28..33]
[DBG]  Agent 26 (interval in submap: [28..33]) contains time 29, added to replan.
[DBG]  Agent 28 found intervals in the sub-map:
[DBG]   [0..20] [26..31] [39..40]
[DBG]  Agent 28 (interval in submap: [26..31]) contains time 29, added to replan.
[DBG]  Agent 45 found intervals in the sub-map:
[DBG]   [29..34]
[DBG]  Agent 45 (interval in submap: [29..34]) contains time 29, added to replan.
[DBG]  Agent 53 found intervals in the sub-map:
[DBG]   [27..32]
[DBG]  Agent 53 (interval in submap: [27..32]) contains time 29, added to replan.
[DBG]  Agent 26 | Start (global): 596 -> (local): (0, 2) at time 29 | Goal (global): 724 -> (local): (4, 2) at time 33
[DBG]  Agent 28 | Start (global): 660 -> (local): (2, 2) at time 29 | Goal (global): 724 -> (local): (4, 2) at time 31
[DBG]  Agent 45 | Start (global): 597 -> (local): (0, 3) at time 29 | Goal (global): 724 -> (local): (4, 2) at time 34
[DBG]  Agent 53 | Start (global): 628 -> (local): (1, 2) at time 29 | Goal (global): 724 -> (local): (4, 2) at time 32
[DBG]  [REPAIR] SAT destroy operator called.
[DBG]  [REPAIR] SAT operator – launching subproblem FOR OPTIMIZATION.
[DBG]  Creating local paths (sx, sy) in the submap for T_sync = 29
[DBG]    Agent 26 (global paths from T=29 to 33) has local path: (0,2) (1,2) (2,2) (3,2) (4,2) 
[DBG]    Agent 28 (global paths from T=29 to 31) has local path: (2,2) (3,2) (4,2) 
[DBG]    Agent 45 (global paths from T=29 to 34) has local path: (0,3) (1,3) (1,2) (2,2) (3,2) (4,2) 
[DBG]    Agent 53 (global paths from T=29 to 32) has local path: (1,2) (2,2) (3,2) (4,2) 
[DBG]  Checking input data for SAT solver:
[DBG]    - Number of agents to replan: 4
[DBG]  Agent 26 has the original local path length: 5 => Start (0,2), Goal (4,2)
[DBG]  Agent 28 has the original local path length: 3 => Start (2,2), Goal (4,2)
[DBG]  Agent 45 has the original local path length: 6 => Start (0,3), Goal (4,2)
[DBG]  Agent 53 has the original local path length: 4 => Start (1,2), Goal (4,2)
[DBG]  Start position: (0, 2), (2, 2), (0, 3), (1, 2), 
[DBG]  Goal position: (4, 2), (4, 2), (4, 2), (4, 2), 
[DBG]  SAT instance and solver created.
Currently solving
Instance name: scen
Map name: map
Encoding used: disappear_at_goal
SAT solver used: Kissat
Optimizing function: sum of costs
Number of agents: 4
Mks LB: 6
SoC LB: 18
Delta: 0
Remaining time: 300000 [ms]

Vertex conflict! Agents 0, 1, timestep 5, location 0
Vertex conflict! Agents 0, 3, timestep 5, location 0
Vertex conflict! Agents 1, 3, timestep 4, location 0
Swapping conflict! Agents 1, 3, timestep 4, edge (0,0)
Vertex conflict! Agents 1, 3, timestep 5, location 0
Found plan [agents = 4] [timesteps = 6]
Agent #0 : 1 4 8 11 13 0 
Agent #1 : 8 11 13 0 0 0 
Agent #2 : 2 5 9 8 11 13 
Agent #3 : 4 8 11 13 0 0 

[STAT] Solver returned: 0
[DBG]  Agent (index) 26 | New local path (submap idx):
[DBG]  1 4 8 11 13 
[DBG]  Agent (index) 28 | New local path (submap idx):
[DBG]  8 11 13 
[DBG]  Agent (index) 45 | New local path (submap idx):
[DBG]  2 5 9 8 11 13 
[DBG]  Agent (index) 53 | New local path (submap idx):
[DBG]  4 8 11 13 
[DBG]  Update the agent path 26 | Original local length: 5 | New local length: 5
[DBG]  agent 26 t=0 => decoded (sx,sy)=(0,2) => global_id=596
[DBG]  agent 26 t=1 => decoded (sx,sy)=(1,2) => global_id=628
[DBG]  agent 26 t=2 => decoded (sx,sy)=(2,2) => global_id=660
[DBG]  agent 26 t=3 => decoded (sx,sy)=(3,2) => global_id=692
[DBG]  agent 26 t=4 => decoded (sx,sy)=(4,2) => global_id=724
[DBG]  Complete path of agent 26:
[DBG]    Original: 13 14 15 47 79 80 81 82 83 115 116 148 180 212 244 276 277 309 341 373 405 437 469 469 469 501 533 565 597 596 628 660 692 724 756 755 
[DBG]    New:     13 14 15 47 79 80 81 82 83 115 116 148 180 212 244 276 277 309 341 373 405 437 469 469 469 501 533 565 597 596 628 660 692 724 756 755 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 13 14 15 47 79 80 81 82 83 115 116 148 180 212 244 276 277 309 341 373 405 437 469 469 469 501 533 565 597 
[DBG]    Local path (in submap): 596 628 660 692 724 
[DBG]    Suffix (out of submap): 756 755 
[DBG]  Original agent path length 26 je: 36
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 0: 13, 14, 15, 47, 79, 80, 81, 82, 83, 115, 116, 148, 180, 212, 244, 276, 277, 309, 341, 373, 405, 437, 469, 469, 469, 501, 533, 565, 597, 596, 628, 660, 692, 724, 756, 755, 
[DBG]  Path for agent 26 updated, resulting length: 36
[DBG]  Update the agent path 28 | Original local length: 3 | New local length: 3
[DBG]  agent 28 t=0 => decoded (sx,sy)=(2,2) => global_id=660
[DBG]  agent 28 t=1 => decoded (sx,sy)=(3,2) => global_id=692
[DBG]  agent 28 t=2 => decoded (sx,sy)=(4,2) => global_id=724
[DBG]  Complete path of agent 28:
[DBG]    Original: 661 661 661 661 661 661 661 661 661 661 661 661 661 629 628 628 628 628 628 629 597 565 565 533 533 565 597 629 628 660 692 724 756 757 757 757 757 757 757 725 726 727 
[DBG]    New:     661 661 661 661 661 661 661 661 661 661 661 661 661 629 628 628 628 628 628 629 597 565 565 533 533 565 597 629 628 660 692 724 756 757 757 757 757 757 757 725 726 727 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 661 661 661 661 661 661 661 661 661 661 661 661 661 629 628 628 628 628 628 629 597 565 565 533 533 565 597 629 628 
[DBG]    Local path (in submap): 660 692 724 
[DBG]    Suffix (out of submap): 756 757 757 757 757 757 757 725 726 727 
[DBG]  Original agent path length 28 je: 42
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 1: 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 629, 628, 628, 628, 628, 628, 629, 597, 565, 565, 533, 533, 565, 597, 629, 628, 660, 692, 724, 756, 757, 757, 757, 757, 757, 757, 725, 726, 727, 
[DBG]  Path for agent 28 updated, resulting length: 42
[DBG]  Update the agent path 45 | Original local length: 6 | New local length: 6
[DBG]  agent 45 t=0 => decoded (sx,sy)=(0,3) => global_id=597
[DBG]  agent 45 t=1 => decoded (sx,sy)=(1,3) => global_id=629
[DBG]  agent 45 t=2 => decoded (sx,sy)=(2,3) => global_id=661
[DBG]  agent 45 t=3 => decoded (sx,sy)=(2,2) => global_id=660
[DBG]  agent 45 t=4 => decoded (sx,sy)=(3,2) => global_id=692
[DBG]  agent 45 t=5 => decoded (sx,sy)=(4,2) => global_id=724
[DBG]  Complete path of agent 45:
[DBG]    Original: 153 185 217 249 281 313 345 377 409 441 440 439 438 470 502 534 533 565 566 566 566 566 566 566 566 534 534 533 565 597 629 628 660 692 724 756 788 787 819 818 817 849 
[DBG]    New:     153 185 217 249 281 313 345 377 409 441 440 439 438 470 502 534 533 565 566 566 566 566 566 566 566 534 534 533 565 597 629 661 660 692 724 756 788 787 819 818 817 849 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 153 185 217 249 281 313 345 377 409 441 440 439 438 470 502 534 533 565 566 566 566 566 566 566 566 534 534 533 565 
[DBG]    Local path (in submap): 597 629 661 660 692 724 
[DBG]    Suffix (out of submap): 756 788 787 819 818 817 849 
[DBG]  Original agent path length 45 je: 42
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 2: 153, 185, 217, 249, 281, 313, 345, 377, 409, 441, 440, 439, 438, 470, 502, 534, 533, 565, 566, 566, 566, 566, 566, 566, 566, 534, 534, 533, 565, 597, 629, 661, 660, 692, 724, 756, 788, 787, 819, 818, 817, 849, 
[DBG]  Path for agent 45 updated, resulting length: 42
[DBG]  Update the agent path 53 | Original local length: 4 | New local length: 4
[DBG]  agent 53 t=0 => decoded (sx,sy)=(1,2) => global_id=628
[DBG]  agent 53 t=1 => decoded (sx,sy)=(2,2) => global_id=660
[DBG]  agent 53 t=2 => decoded (sx,sy)=(3,2) => global_id=692
[DBG]  agent 53 t=3 => decoded (sx,sy)=(4,2) => global_id=724
[DBG]  Complete path of agent 53:
[DBG]    Original: 84 116 148 148 180 212 244 276 276 308 340 340 340 341 373 373 373 405 405 437 469 501 533 534 534 533 565 597 596 628 660 692 724 756 788 820 821 
[DBG]    New:     84 116 148 148 180 212 244 276 276 308 340 340 340 341 373 373 373 405 405 437 469 501 533 534 534 533 565 597 596 628 660 692 724 756 788 820 821 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 84 116 148 148 180 212 244 276 276 308 340 340 340 341 373 373 373 405 405 437 469 501 533 534 534 533 565 597 596 
[DBG]    Local path (in submap): 628 660 692 724 
[DBG]    Suffix (out of submap): 756 788 820 821 
[DBG]  Original agent path length 53 je: 37
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 3: 84, 116, 148, 148, 180, 212, 244, 276, 276, 308, 340, 340, 340, 341, 373, 373, 373, 405, 405, 437, 469, 501, 533, 534, 534, 533, 565, 597, 596, 628, 660, 692, 724, 756, 788, 820, 821, 
[DBG]  Path for agent 53 updated, resulting length: 37
[DBG]  Paths successfully updated.
[DBG]  (LNS.cpp) New path for agent 26: 
[DBG]  13, 14, 15, 47, 79, 80, 81, 82, 83, 115, 116, 148, 180, 212, 244, 276, 277, 309, 341, 373, 405, 437, 469, 469, 469, 501, 533, 565, 597, 596, 628, 660, 692, 724, 756, 755, 
[DBG]  (LNS.cpp) New path for agent 28: 
[DBG]  661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 629, 628, 628, 628, 628, 628, 629, 597, 565, 565, 533, 533, 565, 597, 629, 628, 660, 692, 724, 756, 757, 757, 757, 757, 757, 757, 725, 726, 727, 
[DBG]  (LNS.cpp) New path for agent 45: 
[DBG]  153, 185, 217, 249, 281, 313, 345, 377, 409, 441, 440, 439, 438, 470, 502, 534, 533, 565, 566, 566, 566, 566, 566, 566, 566, 534, 534, 533, 565, 597, 629, 661, 660, 692, 724, 756, 788, 787, 819, 818, 817, 849, 
[DBG]  (LNS.cpp) New path for agent 53: 
[DBG]  84, 116, 148, 148, 180, 212, 244, 276, 276, 308, 340, 340, 340, 341, 373, 373, 373, 405, 405, 437, 469, 501, 533, 534, 534, 533, 565, 597, 596, 628, 660, 692, 724, 756, 788, 820, 821, 
[DBG]  Delta value: 0
[DBG]  Rewarding metric index = 1
[DBG]  component_weights = {0.00225601, 0.995028, 0.000993656, 0.00172277}
[DBG]  opSuccess value: 1
[STAT] neighbor.sum_of_costs before recomputation: 153
[STAT] neighbor.old_sum_of_costs before recomputation: 153
[STAT] sum_of_costs before recomputation: 4302
[DBG]  Validate solution immediately after SAT success.
[DBG]  No problems after SAT replan.
[DBG]  Recomputing sum_of_cost by dividing neighbor.sum_of_costs and neighbor.old_sum_of_costs
[STAT] sum_of_costs after recomputation: 4302
[STAT] Iteration 92
[DBG]  Random chance did not select SAT operator (r=57), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 92
[DBG]  Random chance did not select SAT operator (r=39), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 92
[DBG]  Random chance did not select SAT operator (r=62), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 92
[DBG]  Random chance did not select SAT operator (r=15), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 92
[DBG]  Random chance did not select SAT operator (r=57), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 92
[DBG]  Random chance did not select SAT operator (r=44), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 92
[DBG]  Random chance did not select SAT operator (r=40), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 92
[DBG]  Random chance did not select SAT operator (r=25), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 92
[DBG]  Random chance did not select SAT operator (r=81), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 92
[DBG]  Random chance did not select SAT operator (r=89), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 92
[DBG]  Random chance did not select SAT operator (r=12), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 92
[DBG]  Random chance did not select SAT operator (r=79), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 92
[DBG]  Random chance did not select SAT operator (r=87), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 92
[DBG]  Random chance did not select SAT operator (r=51), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 92
[DBG]  Random chance did not select SAT operator (r=80), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 92
[DBG]  Using SAT operator (destroy+repair SAT).
[DBG]  ====================
[DBG]  SAT destroy operator called.
[DBG]  SAT heuristic: 2
[DBG]  key_agent_id: 28
[DBG]  key_agent_id global path length: 42
[DBG]  Submap content (global positions):
[DBG]  691 692 693 694 695 
[DBG]  723 724 725 726 727 
[DBG]  755 756 757 758 759 
[DBG]  787 788 789 790 791 
[DBG]  819 820 821 822 823 
[DBG]  Map content with agents and obstacles:
[DBG]  . A X X X 
[DBG]  X A . . . 
[DBG]  . A A X . 
[DBG]  A . X . X 
[DBG]  . . . . . 
[DBG]  content of the map structure that we pass to the SAT solver:
[DBG]  1  1  -1  -1  -1  
[DBG]  -1  1  1  1  1  
[DBG]  1  1  1  -1  1  
[DBG]  1  1  -1  1  -1  
[DBG]  1  1  1  1  1  
[DBG]  Identifying agents in a submap for rescheduling (when key_agent is there at the time 37):
[DBG]  Agent 28 found intervals in the sub-map:
[DBG]   [30..41]
[DBG]  Agent 28 (interval in submap: [30..41]) contains time 37, added to replan.
[DBG]  Agent 42 found intervals in the sub-map:
[DBG]   [36..41]
[DBG]  Agent 42 (interval in submap: [36..41]) contains time 37, added to replan.
[DBG]  Agent 45 found intervals in the sub-map:
[DBG]   [33..38]
[DBG]  Agent 45 (interval in submap: [33..38]) contains time 37, added to replan.
[DBG]  Agent 53 found intervals in the sub-map:
[DBG]   [31..36]
[DBG]  Agent 53 is not in sub-map at time 37 (intervals: 
[DBG]  [31..36] )
[DBG]  Agent 148 found intervals in the sub-map:
[DBG]   [33..37]
[DBG]  Agent 148 (interval in submap: [33..37]) contains time 37, added to replan.
[DBG]  Agent 28 | Start (global): 757 -> (local): (2, 2) at time 37 | Goal (global): 727 -> (local): (1, 4) at time 41
[DBG]  Agent 42 | Start (global): 724 -> (local): (1, 1) at time 37 | Goal (global): 759 -> (local): (2, 4) at time 41
[DBG]  Agent 45 | Start (global): 787 -> (local): (3, 0) at time 37 | Goal (global): 819 -> (local): (4, 0) at time 38
[DBG]  Agent 148 | Start (global): 692 -> (local): (0, 1) at time 37 | Goal (global): 692 -> (local): (0, 1) at time 37
[DBG]  [REPAIR] SAT destroy operator called.
[DBG]  [REPAIR] SAT operator – launching subproblem FOR OPTIMIZATION.
[DBG]  Creating local paths (sx, sy) in the submap for T_sync = 37
[DBG]    Agent 28 (global paths from T=37 to 41) has local path: (2,2) (2,2) (1,2) (1,3) (1,4) 
[DBG]    Agent 42 (global paths from T=37 to 41) has local path: (1,1) (1,2) (1,3) (1,4) (2,4) 
[DBG]    Agent 45 (global paths from T=37 to 38) has local path: (3,0) (4,0) 
[DBG]    Agent 148 (global paths from T=37 to 37) has local path: (0,1) 
[DBG]  Checking input data for SAT solver:
[DBG]    - Number of agents to replan: 4
[DBG]  Agent 28 has the original local path length: 5 => Start (2,2), Goal (1,4)
[DBG]  Agent 42 has the original local path length: 5 => Start (1,1), Goal (2,4)
[DBG]  Agent 45 has the original local path length: 2 => Start (3,0), Goal (4,0)
[DBG]  Agent 148 has the original local path length: 1 => Start (0,1), Goal (0,1)
[DBG]  Start position: (2, 2), (1, 1), (3, 0), (0, 1), 
[DBG]  Goal position: (1, 4), (2, 4), (4, 0), (0, 1), 
[DBG]  SAT instance and solver created.
Currently solving
Instance name: scen
Map name: map
Encoding used: disappear_at_goal
SAT solver used: Kissat
Optimizing function: sum of costs
Number of agents: 4
Mks LB: 5
SoC LB: 12
Delta: 0
Remaining time: 300000 [ms]

[STAT] Solver returned: -1
[DBG]  SAT solver failed.
[STAT] SAT solver failed to find a valid solution.
[DBG]  ====================
[DBG]  SAT destroy operator called.
[DBG]  SAT heuristic: 2
[DBG]  key_agent_id: 28
[DBG]  key_agent_id global path length: 42
[DBG]  Submap content (global positions):
[DBG]  595 596 597 598 599 
[DBG]  627 628 629 630 631 
[DBG]  659 660 661 662 663 
[DBG]  691 692 693 694 695 
[DBG]  723 724 725 726 727 
[DBG]  Map content with agents and obstacles:
[DBG]  X . . X . 
[DBG]  . . A X . 
[DBG]  . . A X X 
[DBG]  . . X X X 
[DBG]  X . . . A 
[DBG]  content of the map structure that we pass to the SAT solver:
[DBG]  -1  1  1  -1  1  
[DBG]  1  1  1  -1  1  
[DBG]  1  1  1  -1  -1  
[DBG]  1  1  -1  -1  -1  
[DBG]  -1  1  1  1  1  
[DBG]  Identifying agents in a submap for rescheduling (when key_agent is there at the time 12):
[DBG]  Agent 28 found intervals in the sub-map:
[DBG]   [0..20] [26..31] [39..41]
[DBG]  Agent 28 (interval in submap: [0..20]) contains time 12, added to replan.
[DBG]  Agent 46 found intervals in the sub-map:
[DBG]   [9..12]
[DBG]  Agent 46 (interval in submap: [9..12]) contains time 12, added to replan.
[DBG]  Agent 74 found intervals in the sub-map:
[DBG]   [9..13]
[DBG]  Agent 74 (interval in submap: [9..13]) contains time 12, added to replan.
[DBG]  Agent 89 found intervals in the sub-map:
[DBG]   [5..10]
[DBG]  Agent 89 is not in sub-map at time 12 (intervals: 
[DBG]  [5..10] )
[DBG]  Agent 28 | Start (global): 661 -> (local): (2, 2) at time 12 | Goal (global): 597 -> (local): (0, 2) at time 20
[DBG]  Agent 46 | Start (global): 727 -> (local): (4, 4) at time 12 | Goal (global): 727 -> (local): (4, 4) at time 12
[DBG]  Agent 74 | Start (global): 629 -> (local): (1, 2) at time 12 | Goal (global): 597 -> (local): (0, 2) at time 13
[DBG]  [REPAIR] SAT destroy operator called.
[DBG]  [REPAIR] SAT operator – launching subproblem FOR OPTIMIZATION.
[DBG]  Creating local paths (sx, sy) in the submap for T_sync = 12
[DBG]    Agent 28 (global paths from T=12 to 20) has local path: (2,2) (1,2) (1,1) (1,1) (1,1) (1,1) (1,1) (1,2) (0,2) 
[DBG]    Agent 46 (global paths from T=12 to 12) has local path: (4,4) 
[DBG]    Agent 74 (global paths from T=12 to 13) has local path: (1,2) (0,2) 
[DBG]  Checking input data for SAT solver:
[DBG]    - Number of agents to replan: 3
[DBG]  Agent 28 has the original local path length: 9 => Start (2,2), Goal (0,2)
[DBG]  Agent 46 has the original local path length: 1 => Start (4,4), Goal (4,4)
[DBG]  Agent 74 has the original local path length: 2 => Start (1,2), Goal (0,2)
[DBG]  Start position: (2, 2), (4, 4), (1, 2), 
[DBG]  Goal position: (0, 2), (4, 4), (0, 2), 
[DBG]  SAT instance and solver created.
Currently solving
Instance name: scen
Map name: map
Encoding used: disappear_at_goal
SAT solver used: Kissat
Optimizing function: sum of costs
Number of agents: 3
Mks LB: 3
SoC LB: 6
Delta: 0
Remaining time: 300000 [ms]

Vertex conflict! Agents 1, 2, timestep 2, location 0
Found plan [agents = 3] [timesteps = 3]
Agent #0 : 9 5 1 
Agent #1 : 15 0 0 
Agent #2 : 5 1 0 

[STAT] Solver returned: 0
[DBG]  Agent (index) 28 | New local path (submap idx):
[DBG]  9 5 1 
[DBG]  Agent (index) 46 | New local path (submap idx):
[DBG]  15 
[DBG]  Agent (index) 74 | New local path (submap idx):
[DBG]  5 1 
[DBG]  Update the agent path 28 | Original local length: 9 | New local length: 3
[DBG]  agent 28 t=0 => decoded (sx,sy)=(2,2) => global_id=661
[DBG]  agent 28 t=1 => decoded (sx,sy)=(1,2) => global_id=629
[DBG]  agent 28 t=2 => decoded (sx,sy)=(0,2) => global_id=597
[DBG]  Complete path of agent 28:
[DBG]    Original: 661 661 661 661 661 661 661 661 661 661 661 661 661 629 628 628 628 628 628 629 597 565 565 533 533 565 597 629 628 660 692 724 756 757 757 757 757 757 757 725 726 727 
[DBG]    New:     661 661 661 661 661 661 661 661 661 661 661 661 661 629 597 565 565 533 533 565 597 629 628 660 692 724 756 757 757 757 757 757 757 725 726 727 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 661 661 661 661 661 661 661 661 661 661 661 661 
[DBG]    Local path (in submap): 661 629 597 565 565 533 533 565 597 
[DBG]    Suffix (out of submap): 629 628 660 692 724 756 757 757 757 757 757 757 725 726 727 
[DBG]  Original agent path length 28 je: 42
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 0: 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 629, 597, 565, 565, 533, 533, 565, 597, 629, 628, 660, 692, 724, 756, 757, 757, 757, 757, 757, 757, 725, 726, 727, 
[DBG]  Path for agent 28 updated, resulting length: 36
[DBG]  Update the agent path 46 | Original local length: 1 | New local length: 1
[DBG]  agent 46 t=0 => decoded (sx,sy)=(4,4) => global_id=727
[DBG]  Complete path of agent 46:
[DBG]    Original: 786 787 755 756 757 757 757 757 757 725 726 727 727 728 696 664 632 600 601 601 602 570 538 506 474 474 475 443 411 412 380 348 349 317 285 284 252 
[DBG]    New:     786 787 755 756 757 757 757 757 757 725 726 727 727 728 696 664 632 600 601 601 602 570 538 506 474 474 475 443 411 412 380 348 349 317 285 284 252 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 786 787 755 756 757 757 757 757 757 725 726 727 
[DBG]    Local path (in submap): 727 
[DBG]    Suffix (out of submap): 728 696 664 632 600 601 601 602 570 538 506 474 474 475 443 411 412 380 348 349 317 285 284 252 
[DBG]  Original agent path length 46 je: 37
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 1: 786, 787, 755, 756, 757, 757, 757, 757, 757, 725, 726, 727, 727, 728, 696, 664, 632, 600, 601, 601, 602, 570, 538, 506, 474, 474, 475, 443, 411, 412, 380, 348, 349, 317, 285, 284, 252, 
[DBG]  Path for agent 46 updated, resulting length: 37
[DBG]  Update the agent path 74 | Original local length: 2 | New local length: 2
[DBG]  agent 74 t=0 => decoded (sx,sy)=(1,2) => global_id=629
[DBG]  agent 74 t=1 => decoded (sx,sy)=(0,2) => global_id=597
[DBG]  Complete path of agent 74:
[DBG]    Original: 752 752 751 719 687 655 656 657 658 659 660 628 629 597 565 566 534 534 534 502 503 504 
[DBG]    New:     752 752 751 719 687 655 656 657 658 659 660 628 629 597 565 566 534 534 534 502 503 504 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 752 752 751 719 687 655 656 657 658 659 660 628 
[DBG]    Local path (in submap): 629 597 
[DBG]    Suffix (out of submap): 565 566 534 534 534 502 503 504 
[DBG]  Original agent path length 74 je: 22
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 2: 752, 752, 751, 719, 687, 655, 656, 657, 658, 659, 660, 628, 629, 597, 565, 566, 534, 534, 534, 502, 503, 504, 
[DBG]  Path for agent 74 updated, resulting length: 22
[DBG]  Paths successfully updated.
[DBG]  (LNS.cpp) New path for agent 28: 
[DBG]  661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 629, 597, 565, 565, 533, 533, 565, 597, 629, 628, 660, 692, 724, 756, 757, 757, 757, 757, 757, 757, 725, 726, 727, 
[DBG]  (LNS.cpp) New path for agent 46: 
[DBG]  786, 787, 755, 756, 757, 757, 757, 757, 757, 725, 726, 727, 727, 728, 696, 664, 632, 600, 601, 601, 602, 570, 538, 506, 474, 474, 475, 443, 411, 412, 380, 348, 349, 317, 285, 284, 252, 
[DBG]  (LNS.cpp) New path for agent 74: 
[DBG]  752, 752, 751, 719, 687, 655, 656, 657, 658, 659, 660, 628, 629, 597, 565, 566, 534, 534, 534, 502, 503, 504, 
[DBG]  Delta value: 0.0612245
[DBG]  Rewarding metric index = 1
[DBG]  component_weights = {0.00202062, 0.995546, 0.000889977, 0.00154301}
[DBG]  opSuccess value: 1
[STAT] neighbor.sum_of_costs before recomputation: 92
[STAT] neighbor.old_sum_of_costs before recomputation: 98
[STAT] sum_of_costs before recomputation: 4302
[DBG]  Validate solution immediately after SAT success.
[WARNING] Problem after SAT: Vertex conflict between agents 28 and 0 at location 660 at timestep 23
[DBG]  [DEBUG] Attempting immediate repair via init_lns because problem occurred after SAT (should be applied only for conflicts...).
[DBG]  [DEBUG] Passing 150 agents to init_lns (skip=true).
[DBG]  [DEBUG] path_table contents for selected agents (neighbor.agents):
[DBG]    Agent 28 => controlling path length=36
[DBG]    Agent 46 => controlling path length=37
[DBG]    Agent 74 => controlling path length=22
[DBG]  hodnota skip_initial_solution=1
[DBG]  We skip initialSolution => call buildCollisionData()
[DBG]  buildCollisionData() called – skip_initial_solution case.
[DBG]  Agents.size()=150, collision_graph.size()=150
[DBG]  agent 0 => updateCollidingPairs => foundCollision
[DBG]  agent 28 => updateCollidingPairs => foundCollision
[DBG]  agent 30 => updateCollidingPairs => foundCollision
[DBG]  agent 42 => updateCollidingPairs => foundCollision
[DBG]  agent 45 => updateCollidingPairs => foundCollision
[DBG]  agent 114 => updateCollidingPairs => foundCollision
[DBG]  Conflicting agent pairs:
[DBG]  agent 0 is in conflict with agent 28
[DBG]  agent 28 is in conflict with agent 30
[DBG]  agent 28 is in conflict with agent 42
[DBG]  agent 28 is in conflict with agent 45
[DBG]  agent 28 is in conflict with agent 114
[DBG]  buildCollisionData() => sum_of_costs=4296, num_of_colliding_pairs=5
[DBG]  buildCollisionData done => sum_of_costs=4296, num_of_colliding_pairs=5
[DBG]  sum_of_cost hodnota: 4296
[DBG]  After skip/init build => iteration_stats.back(): sum_of_costs=4296, collisions=5
[DEBUG] Using default neighbor generation strategy for conflicts: 1
	InitLNS(PP): runtime = 0.00135954, iterations = 2, colliding pairs = 0, initial colliding pairs = 5, solution cost = 4289, initial solution cost = 4296, failed iterations = 0
[DBG]  init_lns->sum_of_costs after init_lns->run: 4289
[DBG]  sum_of_costs after assignment from init_lns->run: 4289
[DBG]  Recomputing sum_of_cost by dividing neighbor.sum_of_costs and neighbor.old_sum_of_costs
[STAT] sum_of_costs after recomputation: 4289
[STAT] Iteration 93
[DBG]  Random chance did not select SAT operator (r=76), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 93
[DBG]  Random chance did not select SAT operator (r=27), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 93
[DBG]  Random chance did not select SAT operator (r=78), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 93
[DBG]  Random chance did not select SAT operator (r=19), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 93
[DBG]  Random chance did not select SAT operator (r=95), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 93
[DBG]  Random chance did not select SAT operator (r=34), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 93
[DBG]  Random chance did not select SAT operator (r=63), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 93
[DBG]  Random chance did not select SAT operator (r=22), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 93
[DBG]  Random chance did not select SAT operator (r=79), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 93
[DBG]  Random chance did not select SAT operator (r=97), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 93
[DBG]  Random chance did not select SAT operator (r=90), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 93
[DBG]  Random chance did not select SAT operator (r=24), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 93
[DBG]  Using SAT operator (destroy+repair SAT).
[DBG]  ====================
[DBG]  SAT destroy operator called.
[DBG]  SAT heuristic: 2
[DBG]  key_agent_id: 28
[DBG]  key_agent_id global path length: 42
[DBG]  Submap content (global positions):
[DBG]  626 627 628 629 630 
[DBG]  658 659 660 661 662 
[DBG]  690 691 692 693 694 
[DBG]  722 723 724 725 726 
[DBG]  754 755 756 757 758 
[DBG]  Map content with agents and obstacles:
[DBG]  X . . . X 
[DBG]  . A A . X 
[DBG]  X . A X X 
[DBG]  . X A . . 
[DBG]  X . . . X 
[DBG]  content of the map structure that we pass to the SAT solver:
[DBG]  -1  1  1  1  -1  
[DBG]  1  1  1  1  -1  
[DBG]  -1  1  1  -1  -1  
[DBG]  1  -1  1  1  1  
[DBG]  -1  1  1  1  -1  
[DBG]  Identifying agents in a submap for rescheduling (when key_agent is there at the time 32):
[DBG]  Agent 11 found intervals in the sub-map:
[DBG]  
[DBG]  Agent 11 is not in sub-map at time 32 (intervals: 
[DBG]  )
[DBG]  Agent 26 found intervals in the sub-map:
[DBG]   [29..36]
[DBG]  Agent 26 (interval in submap: [29..36]) contains time 32, added to replan.
[DBG]  Agent 28 found intervals in the sub-map:
[DBG]   [0..40]
[DBG]  Agent 28 (interval in submap: [0..40]) contains time 32, added to replan.
[DBG]  Agent 53 found intervals in the sub-map:
[DBG]   [29..33]
[DBG]  Agent 53 (interval in submap: [29..33]) contains time 32, added to replan.
[DBG]  Agent 148 found intervals in the sub-map:
[DBG]   [31..41]
[DBG]  Agent 148 (interval in submap: [31..41]) contains time 32, added to replan.
[DBG]  Agent 26 | Start (global): 660 -> (local): (1, 2) at time 32 | Goal (global): 755 -> (local): (4, 1) at time 36
[DBG]  Agent 28 | Start (global): 692 -> (local): (2, 2) at time 32 | Goal (global): 726 -> (local): (3, 4) at time 40
[DBG]  Agent 53 | Start (global): 724 -> (local): (3, 2) at time 32 | Goal (global): 756 -> (local): (4, 2) at time 33
[DBG]  Agent 148 | Start (global): 659 -> (local): (1, 1) at time 32 | Goal (global): 660 -> (local): (1, 2) at time 41
[DBG]  [REPAIR] SAT destroy operator called.
[DBG]  [REPAIR] SAT operator – launching subproblem FOR OPTIMIZATION.
[DBG]  Creating local paths (sx, sy) in the submap for T_sync = 32
[DBG]    Agent 26 (global paths from T=32 to 36) has local path: (1,2) (2,2) (3,2) (4,2) (4,1) 
[DBG]    Agent 28 (global paths from T=32 to 40) has local path: (2,2) (3,2) (3,3) (4,3) (4,3) (4,3) (4,3) (3,3) (3,4) 
[DBG]    Agent 53 (global paths from T=32 to 33) has local path: (3,2) (4,2) 
[DBG]    Agent 148 (global paths from T=32 to 41) has local path: (1,1) (2,1) (2,1) (2,1) (2,1) (2,2) (1,2) (1,3) (1,3) (1,2) 
[DBG]  Checking input data for SAT solver:
[DBG]    - Number of agents to replan: 4
[DBG]  Agent 26 has the original local path length: 5 => Start (1,2), Goal (4,1)
[DBG]  Agent 28 has the original local path length: 9 => Start (2,2), Goal (3,4)
[DBG]  Agent 53 has the original local path length: 2 => Start (3,2), Goal (4,2)
[DBG]  Agent 148 has the original local path length: 10 => Start (1,1), Goal (1,2)
[DBG]  Start position: (1, 2), (2, 2), (3, 2), (1, 1), 
[DBG]  Goal position: (4, 1), (3, 4), (4, 2), (1, 2), 
[DBG]  SAT instance and solver created.
Currently solving
Instance name: scen
Map name: map
Encoding used: disappear_at_goal
SAT solver used: Kissat
Optimizing function: sum of costs
Number of agents: 4
Mks LB: 5
SoC LB: 13
Delta: 0
Remaining time: 300000 [ms]

Vertex conflict! Agents 1, 2, timestep 4, location 0
Vertex conflict! Agents 1, 3, timestep 4, location 0
Vertex conflict! Agents 2, 3, timestep 2, location 0
Swapping conflict! Agents 2, 3, timestep 2, edge (0,0)
Vertex conflict! Agents 2, 3, timestep 3, location 0
Swapping conflict! Agents 2, 3, timestep 3, edge (0,0)
Vertex conflict! Agents 2, 3, timestep 4, location 0
Found plan [agents = 4] [timesteps = 5]
Agent #0 : 5 8 10 14 13 
Agent #1 : 8 10 11 12 0 
Agent #2 : 10 14 0 0 0 
Agent #3 : 4 5 0 0 0 

[STAT] Solver returned: 0
[DBG]  Agent (index) 26 | New local path (submap idx):
[DBG]  5 8 10 14 13 
[DBG]  Agent (index) 28 | New local path (submap idx):
[DBG]  8 10 11 12 
[DBG]  Agent (index) 53 | New local path (submap idx):
[DBG]  10 14 
[DBG]  Agent (index) 148 | New local path (submap idx):
[DBG]  4 5 
[DBG]  Update the agent path 26 | Original local length: 5 | New local length: 5
[DBG]  agent 26 t=0 => decoded (sx,sy)=(1,2) => global_id=660
[DBG]  agent 26 t=1 => decoded (sx,sy)=(2,2) => global_id=692
[DBG]  agent 26 t=2 => decoded (sx,sy)=(3,2) => global_id=724
[DBG]  agent 26 t=3 => decoded (sx,sy)=(4,2) => global_id=756
[DBG]  agent 26 t=4 => decoded (sx,sy)=(4,1) => global_id=755
[DBG]  Complete path of agent 26:
[DBG]    Original: 13 14 46 47 48 80 81 82 83 115 147 148 180 212 244 276 277 309 341 373 405 437 469 469 469 501 533 565 597 629 628 628 660 692 724 756 755 
[DBG]    New:     13 14 46 47 48 80 81 82 83 115 147 148 180 212 244 276 277 309 341 373 405 437 469 469 469 501 533 565 597 629 628 628 660 692 724 756 755 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 13 14 46 47 48 80 81 82 83 115 147 148 180 212 244 276 277 309 341 373 405 437 469 469 469 501 533 565 597 629 628 628 
[DBG]    Local path (in submap): 660 692 724 756 755 
[DBG]    Suffix (out of submap): 
[DBG]  Original agent path length 26 je: 37
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 0: 13, 14, 46, 47, 48, 80, 81, 82, 83, 115, 147, 148, 180, 212, 244, 276, 277, 309, 341, 373, 405, 437, 469, 469, 469, 501, 533, 565, 597, 629, 628, 628, 660, 692, 724, 756, 755, 
[DBG]  Path for agent 26 updated, resulting length: 37
[DBG]  Update the agent path 28 | Original local length: 9 | New local length: 4
[DBG]  agent 28 t=0 => decoded (sx,sy)=(2,2) => global_id=692
[DBG]  agent 28 t=1 => decoded (sx,sy)=(3,2) => global_id=724
[DBG]  agent 28 t=2 => decoded (sx,sy)=(3,3) => global_id=725
[DBG]  agent 28 t=3 => decoded (sx,sy)=(3,4) => global_id=726
[DBG]  Complete path of agent 28:
[DBG]    Original: 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 660 692 724 725 757 757 757 757 725 726 727 
[DBG]    New:     661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 660 692 724 725 726 727 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 660 
[DBG]    Local path (in submap): 692 724 725 726 727 
[DBG]    Suffix (out of submap): 
[DBG]  Original agent path length 28 je: 42
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 1: 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 660, 692, 724, 725, 726, 727, 
[DBG]  Path for agent 28 updated, resulting length: 37
[DBG]  Update the agent path 53 | Original local length: 2 | New local length: 2
[DBG]  agent 53 t=0 => decoded (sx,sy)=(3,2) => global_id=724
[DBG]  agent 53 t=1 => decoded (sx,sy)=(4,2) => global_id=756
[DBG]  Complete path of agent 53:
[DBG]    Original: 84 116 148 148 180 212 244 276 276 308 340 340 340 341 373 373 373 405 405 437 469 501 533 534 534 533 565 597 596 628 660 692 724 756 788 820 821 
[DBG]    New:     84 116 148 148 180 212 244 276 276 308 340 340 340 341 373 373 373 405 405 437 469 501 533 534 534 533 565 597 596 628 660 692 724 756 788 820 821 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 84 116 148 148 180 212 244 276 276 308 340 340 340 341 373 373 373 405 405 437 469 501 533 534 534 533 565 597 596 628 660 692 
[DBG]    Local path (in submap): 724 756 
[DBG]    Suffix (out of submap): 788 820 821 
[DBG]  Original agent path length 53 je: 37
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 2: 84, 116, 148, 148, 180, 212, 244, 276, 276, 308, 340, 340, 340, 341, 373, 373, 373, 405, 405, 437, 469, 501, 533, 534, 534, 533, 565, 597, 596, 628, 660, 692, 724, 756, 788, 820, 821, 
[DBG]  Path for agent 53 updated, resulting length: 37
[DBG]  Update the agent path 148 | Original local length: 10 | New local length: 2
[DBG]  agent 148 t=0 => decoded (sx,sy)=(1,1) => global_id=659
[DBG]  agent 148 t=1 => decoded (sx,sy)=(1,2) => global_id=660
[DBG]  Complete path of agent 148:
[DBG]    Original: 776 775 774 773 773 773 773 773 773 773 741 773 774 775 807 808 809 810 811 779 747 715 683 684 685 653 654 654 655 656 657 658 659 691 691 691 691 692 660 661 661 660 
[DBG]    New:     776 775 774 773 773 773 773 773 773 773 741 773 774 775 807 808 809 810 811 779 747 715 683 684 685 653 654 654 655 656 657 658 659 660 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 776 775 774 773 773 773 773 773 773 773 741 773 774 775 807 808 809 810 811 779 747 715 683 684 685 653 654 654 655 656 657 658 
[DBG]    Local path (in submap): 659 660 
[DBG]    Suffix (out of submap): 
[DBG]  Original agent path length 148 je: 42
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 3: 776, 775, 774, 773, 773, 773, 773, 773, 773, 773, 741, 773, 774, 775, 807, 808, 809, 810, 811, 779, 747, 715, 683, 684, 685, 653, 654, 654, 655, 656, 657, 658, 659, 660, 
[DBG]  Path for agent 148 updated, resulting length: 34
[DBG]  Paths successfully updated.
[DBG]  (LNS.cpp) New path for agent 26: 
[DBG]  13, 14, 46, 47, 48, 80, 81, 82, 83, 115, 147, 148, 180, 212, 244, 276, 277, 309, 341, 373, 405, 437, 469, 469, 469, 501, 533, 565, 597, 629, 628, 628, 660, 692, 724, 756, 755, 
[DBG]  (LNS.cpp) New path for agent 28: 
[DBG]  661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 660, 692, 724, 725, 726, 727, 
[DBG]  (LNS.cpp) New path for agent 53: 
[DBG]  84, 116, 148, 148, 180, 212, 244, 276, 276, 308, 340, 340, 340, 341, 373, 373, 373, 405, 405, 437, 469, 501, 533, 534, 534, 533, 565, 597, 596, 628, 660, 692, 724, 756, 788, 820, 821, 
[DBG]  (LNS.cpp) New path for agent 148: 
[DBG]  776, 775, 774, 773, 773, 773, 773, 773, 773, 773, 741, 773, 774, 775, 807, 808, 809, 810, 811, 779, 747, 715, 683, 684, 685, 653, 654, 654, 655, 656, 657, 658, 659, 660, 
[DBG]  Delta value: 0.0844156
[DBG]  Rewarding metric index = 1
[DBG]  component_weights = {0.00177113, 0.996096, 0.000780093, 0.0013525}
[DBG]  opSuccess value: 1
[STAT] neighbor.sum_of_costs before recomputation: 141
[STAT] neighbor.old_sum_of_costs before recomputation: 154
[STAT] sum_of_costs before recomputation: 4289
[DBG]  Validate solution immediately after SAT success.
[WARNING] Problem after SAT: Target conflict: agent 42 (len 41) traverses target of agent 28 (len 36) at location 727 at timestep 40
[DBG]  [DEBUG] Attempting immediate repair via init_lns because problem occurred after SAT (should be applied only for conflicts...).
[DBG]  [DEBUG] Passing 150 agents to init_lns (skip=true).
[DBG]  [DEBUG] path_table contents for selected agents (neighbor.agents):
[DBG]    Agent 26 => controlling path length=37
[DBG]    Agent 28 => controlling path length=37
[DBG]    Agent 53 => controlling path length=37
[DBG]    Agent 148 => controlling path length=34
[DBG]  hodnota skip_initial_solution=1
[DBG]  We skip initialSolution => call buildCollisionData()
[DBG]  buildCollisionData() called – skip_initial_solution case.
[DBG]  Agents.size()=150, collision_graph.size()=150
[DBG]  agent 28 => updateCollidingPairs => foundCollision
[DBG]  agent 42 => updateCollidingPairs => foundCollision
[DBG]  agent 55 => updateCollidingPairs => foundCollision
[DBG]  agent 148 => updateCollidingPairs => foundCollision
[DBG]  Conflicting agent pairs:
[DBG]  agent 28 is in conflict with agent 42
[DBG]  agent 42 is in conflict with agent 148
[DBG]  agent 55 is in conflict with agent 148
[DBG]  buildCollisionData() => sum_of_costs=4276, num_of_colliding_pairs=3
[DBG]  buildCollisionData done => sum_of_costs=4276, num_of_colliding_pairs=3
[DBG]  sum_of_cost hodnota: 4276
[DBG]  After skip/init build => iteration_stats.back(): sum_of_costs=4276, collisions=3
[DEBUG] Using default neighbor generation strategy for conflicts: 0
	InitLNS(PP): runtime = 0.00120496, iterations = 2, colliding pairs = 0, initial colliding pairs = 3, solution cost = 4289, initial solution cost = 4276, failed iterations = 0
[DBG]  init_lns->sum_of_costs after init_lns->run: 4289
[DBG]  sum_of_costs after assignment from init_lns->run: 4289
[DBG]  Recomputing sum_of_cost by dividing neighbor.sum_of_costs and neighbor.old_sum_of_costs
[STAT] sum_of_costs after recomputation: 4289
[STAT] Iteration 94
[DBG]  Random chance did not select SAT operator (r=73), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 94
[DBG]  Random chance did not select SAT operator (r=95), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 94
[DBG]  Random chance did not select SAT operator (r=93), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 94
[DBG]  Random chance did not select SAT operator (r=76), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 94
[DBG]  Random chance did not select SAT operator (r=62), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 94
[DBG]  Random chance did not select SAT operator (r=79), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 94
[DBG]  Random chance did not select SAT operator (r=22), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 94
[DBG]  Random chance did not select SAT operator (r=76), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 94
[DBG]  Random chance did not select SAT operator (r=63), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 94
[DBG]  Random chance did not select SAT operator (r=78), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 94
[DBG]  Random chance did not select SAT operator (r=95), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 94
[DBG]  Random chance did not select SAT operator (r=98), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 94
[DBG]  Random chance did not select SAT operator (r=50), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 94
[DBG]  Using SAT operator (destroy+repair SAT).
[DBG]  ====================
[DBG]  SAT destroy operator called.
[DBG]  SAT heuristic: 2
[DBG]  key_agent_id: 28
[DBG]  key_agent_id global path length: 42
[DBG]  Submap content (global positions):
[DBG]  595 596 597 598 599 
[DBG]  627 628 629 630 631 
[DBG]  659 660 661 662 663 
[DBG]  691 692 693 694 695 
[DBG]  723 724 725 726 727 
[DBG]  Map content with agents and obstacles:
[DBG]  X . . X . 
[DBG]  . A . X . 
[DBG]  . A A X X 
[DBG]  . . X X X 
[DBG]  X . . . . 
[DBG]  content of the map structure that we pass to the SAT solver:
[DBG]  -1  1  1  -1  1  
[DBG]  1  1  1  -1  1  
[DBG]  1  1  1  -1  -1  
[DBG]  1  1  -1  -1  -1  
[DBG]  -1  1  1  1  1  
[DBG]  Identifying agents in a submap for rescheduling (when key_agent is there at the time 30):
[DBG]  Agent 11 found intervals in the sub-map:
[DBG]  
[DBG]  Agent 11 is not in sub-map at time 30 (intervals: 
[DBG]  )
[DBG]  Agent 26 found intervals in the sub-map:
[DBG]   [28..34]
[DBG]  Agent 26 (interval in submap: [28..34]) contains time 30, added to replan.
[DBG]  Agent 28 found intervals in the sub-map:
[DBG]   [0..36] [39..41]
[DBG]  Agent 28 (interval in submap: [0..36]) contains time 30, added to replan.
[DBG]  Agent 45 found intervals in the sub-map:
[DBG]   [18..23]
[DBG]  Agent 45 is not in sub-map at time 30 (intervals: 
[DBG]  [18..23] )
[DBG]  Agent 53 found intervals in the sub-map:
[DBG]   [27..32]
[DBG]  Agent 53 (interval in submap: [27..32]) contains time 30, added to replan.
[DBG]  Agent 26 | Start (global): 628 -> (local): (1, 1) at time 30 | Goal (global): 724 -> (local): (4, 1) at time 34
[DBG]  Agent 28 | Start (global): 661 -> (local): (2, 2) at time 30 | Goal (global): 724 -> (local): (4, 1) at time 36
[DBG]  Agent 53 | Start (global): 660 -> (local): (2, 1) at time 30 | Goal (global): 724 -> (local): (4, 1) at time 32
[DBG]  [REPAIR] SAT destroy operator called.
[DBG]  [REPAIR] SAT operator – launching subproblem FOR OPTIMIZATION.
[DBG]  Creating local paths (sx, sy) in the submap for T_sync = 30
[DBG]    Agent 26 (global paths from T=30 to 34) has local path: (1,1) (1,1) (2,1) (3,1) (4,1) 
[DBG]    Agent 28 (global paths from T=30 to 36) has local path: (2,2) (2,2) (2,2) (2,2) (2,1) (3,1) (4,1) 
[DBG]    Agent 53 (global paths from T=30 to 32) has local path: (2,1) (3,1) (4,1) 
[DBG]  Checking input data for SAT solver:
[DBG]    - Number of agents to replan: 3
[DBG]  Agent 26 has the original local path length: 5 => Start (1,1), Goal (4,1)
[DBG]  Agent 28 has the original local path length: 7 => Start (2,2), Goal (4,1)
[DBG]  Agent 53 has the original local path length: 3 => Start (2,1), Goal (4,1)
[DBG]  Start position: (1, 1), (2, 2), (2, 1), 
[DBG]  Goal position: (4, 1), (4, 1), (4, 1), 
[DBG]  SAT instance and solver created.
Currently solving
Instance name: scen
Map name: map
Encoding used: disappear_at_goal
SAT solver used: Kissat
Optimizing function: sum of costs
Number of agents: 3
Mks LB: 4
SoC LB: 11
Delta: 0
Remaining time: 300000 [ms]

[STAT] Solver returned: -1
[DBG]  SAT solver failed.
[STAT] SAT solver failed to find a valid solution.
[DBG]  ====================
[DBG]  SAT destroy operator called.
[DBG]  SAT heuristic: 2
[DBG]  key_agent_id: 28
[DBG]  key_agent_id global path length: 42
[DBG]  Submap content (global positions):
[DBG]  595 596 597 598 599 
[DBG]  627 628 629 630 631 
[DBG]  659 660 661 662 663 
[DBG]  691 692 693 694 695 
[DBG]  723 724 725 726 727 
[DBG]  Map content with agents and obstacles:
[DBG]  X . A X . 
[DBG]  . . . X . 
[DBG]  . A A X X 
[DBG]  . A X X X 
[DBG]  X . . . . 
[DBG]  content of the map structure that we pass to the SAT solver:
[DBG]  -1  1  1  -1  1  
[DBG]  1  1  1  -1  1  
[DBG]  1  1  1  -1  -1  
[DBG]  1  1  -1  -1  -1  
[DBG]  -1  1  1  1  1  
[DBG]  Identifying agents in a submap for rescheduling (when key_agent is there at the time 5):
[DBG]  Agent 28 found intervals in the sub-map:
[DBG]   [0..36] [39..41]
[DBG]  Agent 28 (interval in submap: [0..36]) contains time 5, added to replan.
[DBG]  Agent 46 found intervals in the sub-map:
[DBG]   [9..12]
[DBG]  Agent 46 is not in sub-map at time 5 (intervals: 
[DBG]  [9..12] )
[DBG]  Agent 89 found intervals in the sub-map:
[DBG]   [5..10]
[DBG]  Agent 89 (interval in submap: [5..10]) contains time 5, added to replan.
[DBG]  Agent 91 found intervals in the sub-map:
[DBG]   [3..8]
[DBG]  Agent 91 (interval in submap: [3..8]) contains time 5, added to replan.
[DBG]  Agent 108 found intervals in the sub-map:
[DBG]   [0..6]
[DBG]  Agent 108 (interval in submap: [0..6]) contains time 5, added to replan.
[DBG]  Agent 135 found intervals in the sub-map:
[DBG]  
[DBG]  Agent 135 is not in sub-map at time 5 (intervals: 
[DBG]  )
[DBG]  Agent 28 | Start (global): 661 -> (local): (2, 2) at time 5 | Goal (global): 724 -> (local): (4, 1) at time 36
[DBG]  Agent 89 | Start (global): 597 -> (local): (0, 2) at time 5 | Goal (global): 724 -> (local): (4, 1) at time 10
[DBG]  Agent 91 | Start (global): 660 -> (local): (2, 1) at time 5 | Goal (global): 597 -> (local): (0, 2) at time 8
[DBG]  Agent 108 | Start (global): 692 -> (local): (3, 1) at time 5 | Goal (global): 724 -> (local): (4, 1) at time 6
[DBG]  [REPAIR] SAT destroy operator called.
[DBG]  [REPAIR] SAT operator – launching subproblem FOR OPTIMIZATION.
[DBG]  Creating local paths (sx, sy) in the submap for T_sync = 5
[DBG]    Agent 28 (global paths from T=5 to 36) has local path: (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,1) (3,1) (4,1) 
[DBG]    Agent 89 (global paths from T=5 to 10) has local path: (0,2) (1,2) (1,1) (2,1) (3,1) (4,1) 
[DBG]    Agent 91 (global paths from T=5 to 8) has local path: (2,1) (1,1) (0,1) (0,2) 
[DBG]    Agent 108 (global paths from T=5 to 6) has local path: (3,1) (4,1) 
[DBG]  Checking input data for SAT solver:
[DBG]    - Number of agents to replan: 4
[DBG]  Agent 28 has the original local path length: 32 => Start (2,2), Goal (4,1)
[DBG]  Agent 89 has the original local path length: 6 => Start (0,2), Goal (4,1)
[DBG]  Agent 91 has the original local path length: 4 => Start (2,1), Goal (0,2)
[DBG]  Agent 108 has the original local path length: 2 => Start (3,1), Goal (4,1)
[DBG]  Start position: (2, 2), (0, 2), (2, 1), (3, 1), 
[DBG]  Goal position: (4, 1), (4, 1), (0, 2), (4, 1), 
[DBG]  SAT instance and solver created.
Currently solving
Instance name: scen
Map name: map
Encoding used: disappear_at_goal
SAT solver used: Kissat
Optimizing function: sum of costs
Number of agents: 4
Mks LB: 6
SoC LB: 16
Delta: 0
Remaining time: 300000 [ms]

Vertex conflict! Agents 0, 2, timestep 4, location 0
Swapping conflict! Agents 0, 2, timestep 4, edge (0,0)
Vertex conflict! Agents 0, 2, timestep 5, location 0
Vertex conflict! Agents 0, 3, timestep 4, location 0
Swapping conflict! Agents 0, 3, timestep 4, edge (0,0)
Vertex conflict! Agents 0, 3, timestep 5, location 0
Vertex conflict! Agents 2, 3, timestep 4, location 0
Swapping conflict! Agents 2, 3, timestep 4, edge (0,0)
Vertex conflict! Agents 2, 3, timestep 5, location 0
Found plan [agents = 4] [timesteps = 6]
Agent #0 : 9 8 11 12 0 0 
Agent #1 : 1 5 9 8 11 12 
Agent #2 : 8 4 5 1 0 0 
Agent #3 : 11 12 0 0 0 0 

[STAT] Solver returned: 0
[DBG]  Agent (index) 28 | New local path (submap idx):
[DBG]  9 8 11 12 
[DBG]  Agent (index) 89 | New local path (submap idx):
[DBG]  1 5 9 8 11 12 
[DBG]  Agent (index) 91 | New local path (submap idx):
[DBG]  8 4 5 1 
[DBG]  Agent (index) 108 | New local path (submap idx):
[DBG]  11 12 
[DBG]  Update the agent path 28 | Original local length: 32 | New local length: 4
[DBG]  agent 28 t=0 => decoded (sx,sy)=(2,2) => global_id=661
[DBG]  agent 28 t=1 => decoded (sx,sy)=(2,1) => global_id=660
[DBG]  agent 28 t=2 => decoded (sx,sy)=(3,1) => global_id=692
[DBG]  agent 28 t=3 => decoded (sx,sy)=(4,1) => global_id=724
[DBG]  Complete path of agent 28:
[DBG]    Original: 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 660 692 724 756 757 725 726 727 
[DBG]    New:     661 661 661 661 661 661 660 692 724 756 757 725 726 727 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 661 661 661 661 661 
[DBG]    Local path (in submap): 661 660 692 724 756 757 725 726 727 
[DBG]    Suffix (out of submap): 
[DBG]  Original agent path length 28 je: 42
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 0: 661, 661, 661, 661, 661, 661, 660, 692, 724, 756, 757, 725, 726, 727, 
[DBG]  Path for agent 28 updated, resulting length: 14
[DBG]  Update the agent path 89 | Original local length: 6 | New local length: 6
[DBG]  agent 89 t=0 => decoded (sx,sy)=(0,2) => global_id=597
[DBG]  agent 89 t=1 => decoded (sx,sy)=(1,2) => global_id=629
[DBG]  agent 89 t=2 => decoded (sx,sy)=(2,2) => global_id=661
[DBG]  agent 89 t=3 => decoded (sx,sy)=(2,1) => global_id=660
[DBG]  agent 89 t=4 => decoded (sx,sy)=(3,1) => global_id=692
[DBG]  agent 89 t=5 => decoded (sx,sy)=(4,1) => global_id=724
[DBG]  Complete path of agent 89:
[DBG]    Original: 437 469 501 533 565 597 629 628 660 692 724 756 788 820 821 822 854 886 918 950 982 983 1015 
[DBG]    New:     437 469 501 533 565 597 629 661 660 692 724 756 788 820 821 822 854 886 918 950 982 983 1015 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 437 469 501 533 565 
[DBG]    Local path (in submap): 597 629 661 660 692 724 
[DBG]    Suffix (out of submap): 756 788 820 821 822 854 886 918 950 982 983 1015 
[DBG]  Original agent path length 89 je: 23
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 1: 437, 469, 501, 533, 565, 597, 629, 661, 660, 692, 724, 756, 788, 820, 821, 822, 854, 886, 918, 950, 982, 983, 1015, 
[DBG]  Path for agent 89 updated, resulting length: 23
[DBG]  Update the agent path 91 | Original local length: 4 | New local length: 4
[DBG]  agent 91 t=0 => decoded (sx,sy)=(2,1) => global_id=660
[DBG]  agent 91 t=1 => decoded (sx,sy)=(1,1) => global_id=628
[DBG]  agent 91 t=2 => decoded (sx,sy)=(1,2) => global_id=629
[DBG]  agent 91 t=3 => decoded (sx,sy)=(0,2) => global_id=597
[DBG]  Complete path of agent 91:
[DBG]    Original: 787 755 756 724 692 660 628 596 597 565 533 533 501 502 503 503 504 472 440 408 376 377 378 378 379 380 412 412 413 381 
[DBG]    New:     787 755 756 724 692 660 628 629 597 565 533 533 501 502 503 503 504 472 440 408 376 377 378 378 379 380 412 412 413 381 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 787 755 756 724 692 
[DBG]    Local path (in submap): 660 628 629 597 
[DBG]    Suffix (out of submap): 565 533 533 501 502 503 503 504 472 440 408 376 377 378 378 379 380 412 412 413 381 
[DBG]  Original agent path length 91 je: 30
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 2: 787, 755, 756, 724, 692, 660, 628, 629, 597, 565, 533, 533, 501, 502, 503, 503, 504, 472, 440, 408, 376, 377, 378, 378, 379, 380, 412, 412, 413, 381, 
[DBG]  Path for agent 91 updated, resulting length: 30
[DBG]  Update the agent path 108 | Original local length: 2 | New local length: 2
[DBG]  agent 108 t=0 => decoded (sx,sy)=(3,1) => global_id=692
[DBG]  agent 108 t=1 => decoded (sx,sy)=(4,1) => global_id=724
[DBG]  Complete path of agent 108:
[DBG]    Original: 628 660 692 691 691 692 724 756 788 820 821 822 823 824 856 857 858 859 891 892 924 956 957 989 1021 
[DBG]    New:     628 660 692 691 691 692 724 756 788 820 821 822 823 824 856 857 858 859 891 892 924 956 957 989 1021 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 628 660 692 691 691 
[DBG]    Local path (in submap): 692 724 
[DBG]    Suffix (out of submap): 756 788 820 821 822 823 824 856 857 858 859 891 892 924 956 957 989 1021 
[DBG]  Original agent path length 108 je: 25
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 3: 628, 660, 692, 691, 691, 692, 724, 756, 788, 820, 821, 822, 823, 824, 856, 857, 858, 859, 891, 892, 924, 956, 957, 989, 1021, 
[DBG]  Path for agent 108 updated, resulting length: 25
[DBG]  Paths successfully updated.
[DBG]  (LNS.cpp) New path for agent 28: 
[DBG]  661, 661, 661, 661, 661, 661, 660, 692, 724, 756, 757, 725, 726, 727, 
[DBG]  (LNS.cpp) New path for agent 89: 
[DBG]  437, 469, 501, 533, 565, 597, 629, 661, 660, 692, 724, 756, 788, 820, 821, 822, 854, 886, 918, 950, 982, 983, 1015, 
[DBG]  (LNS.cpp) New path for agent 91: 
[DBG]  787, 755, 756, 724, 692, 660, 628, 629, 597, 565, 533, 533, 501, 502, 503, 503, 504, 472, 440, 408, 376, 377, 378, 378, 379, 380, 412, 412, 413, 381, 
[DBG]  (LNS.cpp) New path for agent 108: 
[DBG]  628, 660, 692, 691, 691, 692, 724, 756, 788, 820, 821, 822, 823, 824, 856, 857, 858, 859, 891, 892, 924, 956, 957, 989, 1021, 
[DBG]  Delta value: 0.241379
[DBG]  Rewarding metric index = 1
[DBG]  component_weights = {0.00135665, 0.99701, 0.000597536, 0.00103599}
[DBG]  opSuccess value: 1
[STAT] neighbor.sum_of_costs before recomputation: 88
[STAT] neighbor.old_sum_of_costs before recomputation: 116
[STAT] sum_of_costs before recomputation: 4289
[DBG]  Validate solution immediately after SAT success.
[WARNING] Problem after SAT: Target conflict: agent 42 (len 41) traverses target of agent 28 (len 13) at location 727 at timestep 40
[DBG]  [DEBUG] Attempting immediate repair via init_lns because problem occurred after SAT (should be applied only for conflicts...).
[DBG]  [DEBUG] Passing 150 agents to init_lns (skip=true).
[DBG]  [DEBUG] path_table contents for selected agents (neighbor.agents):
[DBG]    Agent 28 => controlling path length=14
[DBG]    Agent 89 => controlling path length=23
[DBG]    Agent 91 => controlling path length=30
[DBG]    Agent 108 => controlling path length=25
[DBG]  hodnota skip_initial_solution=1
[DBG]  We skip initialSolution => call buildCollisionData()
[DBG]  buildCollisionData() called – skip_initial_solution case.
[DBG]  Agents.size()=150, collision_graph.size()=150
[DBG]  agent 28 => updateCollidingPairs => foundCollision
[DBG]  agent 42 => updateCollidingPairs => foundCollision
[DBG]  Conflicting agent pairs:
[DBG]  agent 28 is in conflict with agent 42
[DBG]  buildCollisionData() => sum_of_costs=4261, num_of_colliding_pairs=1
[DBG]  buildCollisionData done => sum_of_costs=4261, num_of_colliding_pairs=1
[DBG]  sum_of_cost hodnota: 4261
[DBG]  After skip/init build => iteration_stats.back(): sum_of_costs=4261, collisions=1
[DEBUG] Using default neighbor generation strategy for conflicts: 0
	InitLNS(PP): runtime = 0.00122442, iterations = 2, colliding pairs = 0, initial colliding pairs = 1, solution cost = 4287, initial solution cost = 4261, failed iterations = 0
[DBG]  init_lns->sum_of_costs after init_lns->run: 4287
[DBG]  sum_of_costs after assignment from init_lns->run: 4287
[DBG]  Recomputing sum_of_cost by dividing neighbor.sum_of_costs and neighbor.old_sum_of_costs
[STAT] sum_of_costs after recomputation: 4287
[STAT] Iteration 95
[DBG]  Random chance did not select SAT operator (r=86), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 95
[DBG]  Random chance did not select SAT operator (r=47), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 95
[DBG]  Random chance did not select SAT operator (r=83), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 95
[DBG]  Random chance did not select SAT operator (r=53), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 95
[DBG]  Random chance did not select SAT operator (r=73), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 95
[DBG]  Random chance did not select SAT operator (r=72), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 95
[DBG]  Random chance did not select SAT operator (r=42), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 95
[DBG]  Using SAT operator (destroy+repair SAT).
[DBG]  ====================
[DBG]  SAT destroy operator called.
[DBG]  SAT heuristic: 2
[DBG]  key_agent_id: 28
[DBG]  key_agent_id global path length: 42
[DBG]  Submap content (global positions):
[DBG]  595 596 597 598 599 
[DBG]  627 628 629 630 631 
[DBG]  659 660 661 662 663 
[DBG]  691 692 693 694 695 
[DBG]  723 724 725 726 727 
[DBG]  Map content with agents and obstacles:
[DBG]  X . . X . 
[DBG]  . . . X . 
[DBG]  A . A X X 
[DBG]  . . X X X 
[DBG]  X A . . . 
[DBG]  content of the map structure that we pass to the SAT solver:
[DBG]  -1  1  1  -1  1  
[DBG]  1  1  1  -1  1  
[DBG]  1  1  1  -1  -1  
[DBG]  1  1  -1  -1  -1  
[DBG]  -1  1  1  1  1  
[DBG]  Identifying agents in a submap for rescheduling (when key_agent is there at the time 15):
[DBG]  Agent 28 found intervals in the sub-map:
[DBG]   [0..41]
[DBG]  Agent 28 (interval in submap: [0..41]) contains time 15, added to replan.
[DBG]  Agent 30 found intervals in the sub-map:
[DBG]   [15..20]
[DBG]  Agent 30 (interval in submap: [15..20]) contains time 15, added to replan.
[DBG]  Agent 86 found intervals in the sub-map:
[DBG]  
[DBG]  Agent 86 is not in sub-map at time 15 (intervals: 
[DBG]  )
[DBG]  Agent 114 found intervals in the sub-map:
[DBG]   [15..19]
[DBG]  Agent 114 (interval in submap: [15..19]) contains time 15, added to replan.
[DBG]  Agent 28 | Start (global): 661 -> (local): (2, 2) at time 15 | Goal (global): 727 -> (local): (4, 4) at time 41
[DBG]  Agent 30 | Start (global): 724 -> (local): (4, 1) at time 15 | Goal (global): 597 -> (local): (0, 2) at time 20
[DBG]  Agent 114 | Start (global): 659 -> (local): (2, 0) at time 15 | Goal (global): 597 -> (local): (0, 2) at time 19
[DBG]  [REPAIR] SAT destroy operator called.
[DBG]  [REPAIR] SAT operator – launching subproblem FOR OPTIMIZATION.
[DBG]  Creating local paths (sx, sy) in the submap for T_sync = 15
[DBG]    Agent 28 (global paths from T=15 to 41) has local path: (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,1) (3,1) (4,1) (4,2) (4,3) (4,4) 
[DBG]    Agent 30 (global paths from T=15 to 20) has local path: (4,1) (3,1) (2,1) (1,1) (1,2) (0,2) 
[DBG]    Agent 114 (global paths from T=15 to 19) has local path: (2,0) (1,0) (1,1) (1,2) (0,2) 
[DBG]  Checking input data for SAT solver:
[DBG]    - Number of agents to replan: 3
[DBG]  Agent 28 has the original local path length: 27 => Start (2,2), Goal (4,4)
[DBG]  Agent 30 has the original local path length: 6 => Start (4,1), Goal (0,2)
[DBG]  Agent 114 has the original local path length: 5 => Start (2,0), Goal (0,2)
[DBG]  Start position: (2, 2), (4, 1), (2, 0), 
[DBG]  Goal position: (4, 4), (0, 2), (0, 2), 
[DBG]  SAT instance and solver created.
Currently solving
Instance name: scen
Map name: map
Encoding used: disappear_at_goal
SAT solver used: Kissat
Optimizing function: sum of costs
Number of agents: 3
Mks LB: 7
SoC LB: 18
Delta: 0
Remaining time: 300000 [ms]

[STAT] Solver returned: -1
[DBG]  SAT solver failed.
[STAT] SAT solver failed to find a valid solution.
[DBG]  ====================
[DBG]  SAT destroy operator called.
[DBG]  SAT heuristic: 2
[DBG]  key_agent_id: 28
[DBG]  key_agent_id global path length: 42
[DBG]  Submap content (global positions):
[DBG]  595 596 597 598 599 
[DBG]  627 628 629 630 631 
[DBG]  659 660 661 662 663 
[DBG]  691 692 693 694 695 
[DBG]  723 724 725 726 727 
[DBG]  Map content with agents and obstacles:
[DBG]  X . A X . 
[DBG]  . . . X . 
[DBG]  . . A X X 
[DBG]  . . X X X 
[DBG]  X . . . . 
[DBG]  content of the map structure that we pass to the SAT solver:
[DBG]  -1  1  1  -1  1  
[DBG]  1  1  1  -1  1  
[DBG]  1  1  1  -1  -1  
[DBG]  1  1  -1  -1  -1  
[DBG]  -1  1  1  1  1  
[DBG]  Identifying agents in a submap for rescheduling (when key_agent is there at the time 13):
[DBG]  Agent 28 found intervals in the sub-map:
[DBG]   [0..41]
[DBG]  Agent 28 (interval in submap: [0..41]) contains time 13, added to replan.
[DBG]  Agent 74 found intervals in the sub-map:
[DBG]   [9..13]
[DBG]  Agent 74 (interval in submap: [9..13]) contains time 13, added to replan.
[DBG]  Agent 28 | Start (global): 661 -> (local): (2, 2) at time 13 | Goal (global): 727 -> (local): (4, 4) at time 41
[DBG]  Agent 74 | Start (global): 597 -> (local): (0, 2) at time 13 | Goal (global): 597 -> (local): (0, 2) at time 13
[DBG]  [REPAIR] SAT destroy operator called.
[DBG]  [REPAIR] SAT operator – launching subproblem FOR OPTIMIZATION.
[DBG]  Creating local paths (sx, sy) in the submap for T_sync = 13
[DBG]    Agent 28 (global paths from T=13 to 41) has local path: (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,1) (3,1) (4,1) (4,2) (4,3) (4,4) 
[DBG]    Agent 74 (global paths from T=13 to 13) has local path: (0,2) 
[DBG]  Checking input data for SAT solver:
[DBG]    - Number of agents to replan: 2
[DBG]  Agent 28 has the original local path length: 29 => Start (2,2), Goal (4,4)
[DBG]  Agent 74 has the original local path length: 1 => Start (0,2), Goal (0,2)
[DBG]  Start position: (2, 2), (0, 2), 
[DBG]  Goal position: (4, 4), (0, 2), 
[DBG]  SAT instance and solver created.
Currently solving
Instance name: scen
Map name: map
Encoding used: disappear_at_goal
SAT solver used: Kissat
Optimizing function: sum of costs
Number of agents: 2
Mks LB: 7
SoC LB: 8
Delta: 0
Remaining time: 300000 [ms]

Found plan [agents = 2] [timesteps = 7]
Agent #0 : 9 8 11 12 13 14 15 
Agent #1 : 1 0 0 0 0 0 0 

[STAT] Solver returned: 0
[DBG]  Agent (index) 28 | New local path (submap idx):
[DBG]  9 8 11 12 13 14 15 
[DBG]  Agent (index) 74 | New local path (submap idx):
[DBG]  1 
[DBG]  Update the agent path 28 | Original local length: 29 | New local length: 7
[DBG]  agent 28 t=0 => decoded (sx,sy)=(2,2) => global_id=661
[DBG]  agent 28 t=1 => decoded (sx,sy)=(2,1) => global_id=660
[DBG]  agent 28 t=2 => decoded (sx,sy)=(3,1) => global_id=692
[DBG]  agent 28 t=3 => decoded (sx,sy)=(4,1) => global_id=724
[DBG]  agent 28 t=4 => decoded (sx,sy)=(4,2) => global_id=725
[DBG]  agent 28 t=5 => decoded (sx,sy)=(4,3) => global_id=726
[DBG]  agent 28 t=6 => decoded (sx,sy)=(4,4) => global_id=727
[DBG]  Complete path of agent 28:
[DBG]    Original: 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 660 692 724 725 726 727 
[DBG]    New:     661 661 661 661 661 661 661 661 661 661 661 661 661 661 660 692 724 725 726 727 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 661 661 661 661 661 661 661 661 661 661 661 661 661 
[DBG]    Local path (in submap): 661 660 692 724 725 726 727 
[DBG]    Suffix (out of submap): 
[DBG]  Original agent path length 28 je: 42
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 0: 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 660, 692, 724, 725, 726, 727, 
[DBG]  Path for agent 28 updated, resulting length: 20
[DBG]  Update the agent path 74 | Original local length: 1 | New local length: 1
[DBG]  agent 74 t=0 => decoded (sx,sy)=(0,2) => global_id=597
[DBG]  Complete path of agent 74:
[DBG]    Original: 752 752 751 719 687 655 656 657 658 659 660 628 629 597 565 566 534 534 534 502 503 504 
[DBG]    New:     752 752 751 719 687 655 656 657 658 659 660 628 629 597 565 566 534 534 534 502 503 504 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 752 752 751 719 687 655 656 657 658 659 660 628 629 
[DBG]    Local path (in submap): 597 
[DBG]    Suffix (out of submap): 565 566 534 534 534 502 503 504 
[DBG]  Original agent path length 74 je: 22
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 1: 752, 752, 751, 719, 687, 655, 656, 657, 658, 659, 660, 628, 629, 597, 565, 566, 534, 534, 534, 502, 503, 504, 
[DBG]  Path for agent 74 updated, resulting length: 22
[DBG]  Paths successfully updated.
[DBG]  (LNS.cpp) New path for agent 28: 
[DBG]  661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 660, 692, 724, 725, 726, 727, 
[DBG]  (LNS.cpp) New path for agent 74: 
[DBG]  752, 752, 751, 719, 687, 655, 656, 657, 658, 659, 660, 628, 629, 597, 565, 566, 534, 534, 534, 502, 503, 504, 
[DBG]  Delta value: 0.354839
[DBG]  Rewarding metric index = 1
[DBG]  component_weights = {0.000952123, 0.997901, 0.000419361, 0.000727074}
[DBG]  opSuccess value: 1
[STAT] neighbor.sum_of_costs before recomputation: 40
[STAT] neighbor.old_sum_of_costs before recomputation: 62
[STAT] sum_of_costs before recomputation: 4287
[DBG]  Validate solution immediately after SAT success.
[WARNING] Problem after SAT: Edge conflict between agents 28 and 30 at edge (692,724) at timestep 16
[DBG]  [DEBUG] Attempting immediate repair via init_lns because problem occurred after SAT (should be applied only for conflicts...).
[DBG]  [DEBUG] Passing 150 agents to init_lns (skip=true).
[DBG]  [DEBUG] path_table contents for selected agents (neighbor.agents):
[DBG]    Agent 28 => controlling path length=20
[DBG]    Agent 74 => controlling path length=22
[DBG]  hodnota skip_initial_solution=1
[DBG]  We skip initialSolution => call buildCollisionData()
[DBG]  buildCollisionData() called – skip_initial_solution case.
[DBG]  Agents.size()=150, collision_graph.size()=150
[DBG]  agent 28 => updateCollidingPairs => foundCollision
[DBG]  agent 30 => updateCollidingPairs => foundCollision
[DBG]  agent 42 => updateCollidingPairs => foundCollision
[DBG]  Conflicting agent pairs:
[DBG]  agent 28 is in conflict with agent 30
[DBG]  agent 28 is in conflict with agent 42
[DBG]  buildCollisionData() => sum_of_costs=4265, num_of_colliding_pairs=2
[DBG]  buildCollisionData done => sum_of_costs=4265, num_of_colliding_pairs=2
[DBG]  sum_of_cost hodnota: 4265
[DBG]  After skip/init build => iteration_stats.back(): sum_of_costs=4265, collisions=2
[DEBUG] Using default neighbor generation strategy for conflicts: 1
[DEBUG] Using default neighbor generation strategy for conflicts: 0
	InitLNS(PP): runtime = 0.00399458, iterations = 3, colliding pairs = 0, initial colliding pairs = 2, solution cost = 4278, initial solution cost = 4265, failed iterations = 0
[DBG]  init_lns->sum_of_costs after init_lns->run: 4278
[DBG]  sum_of_costs after assignment from init_lns->run: 4278
[DBG]  Recomputing sum_of_cost by dividing neighbor.sum_of_costs and neighbor.old_sum_of_costs
[STAT] sum_of_costs after recomputation: 4278
[STAT] Iteration 96
[DBG]  Random chance did not select SAT operator (r=87), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 96
[DBG]  Random chance did not select SAT operator (r=52), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 96
[DBG]  Random chance did not select SAT operator (r=45), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 96
[DBG]  Using SAT operator (destroy+repair SAT).
[DBG]  ====================
[DBG]  SAT destroy operator called.
[DBG]  SAT heuristic: 2
[DBG]  key_agent_id: 28
[DBG]  key_agent_id global path length: 42
[DBG]  Submap content (global positions):
[DBG]  595 596 597 598 599 
[DBG]  627 628 629 630 631 
[DBG]  659 660 661 662 663 
[DBG]  691 692 693 694 695 
[DBG]  723 724 725 726 727 
[DBG]  Map content with agents and obstacles:
[DBG]  X . . X . 
[DBG]  . . . X . 
[DBG]  . A A X X 
[DBG]  . . X X X 
[DBG]  X . . . A 
[DBG]  content of the map structure that we pass to the SAT solver:
[DBG]  -1  1  1  -1  1  
[DBG]  1  1  1  -1  1  
[DBG]  1  1  1  -1  -1  
[DBG]  1  1  -1  -1  -1  
[DBG]  -1  1  1  1  1  
[DBG]  Identifying agents in a submap for rescheduling (when key_agent is there at the time 1):
[DBG]  Agent 7 found intervals in the sub-map:
[DBG]  
[DBG]  Agent 7 is not in sub-map at time 1 (intervals: 
[DBG]  )
[DBG]  Agent 12 found intervals in the sub-map:
[DBG]   [0..1]
[DBG]  Agent 12 (interval in submap: [0..1]) contains time 1, added to replan.
[DBG]  Agent 28 found intervals in the sub-map:
[DBG]   [0..35] [38..41]
[DBG]  Agent 28 (interval in submap: [0..35]) contains time 1, added to replan.
[DBG]  Agent 70 found intervals in the sub-map:
[DBG]   [6..9]
[DBG]  Agent 70 is not in sub-map at time 1 (intervals: 
[DBG]  [6..9] )
[DBG]  Agent 108 found intervals in the sub-map:
[DBG]   [0..6]
[DBG]  Agent 108 (interval in submap: [0..6]) contains time 1, added to replan.
[DBG]  Agent 12 | Start (global): 727 -> (local): (4, 4) at time 1 | Goal (global): 727 -> (local): (4, 4) at time 1
[DBG]  Agent 28 | Start (global): 661 -> (local): (2, 2) at time 1 | Goal (global): 724 -> (local): (4, 1) at time 35
[DBG]  Agent 108 | Start (global): 660 -> (local): (2, 1) at time 1 | Goal (global): 724 -> (local): (4, 1) at time 6
[DBG]  [REPAIR] SAT destroy operator called.
[DBG]  [REPAIR] SAT operator – launching subproblem FOR OPTIMIZATION.
[DBG]  Creating local paths (sx, sy) in the submap for T_sync = 1
[DBG]    Agent 12 (global paths from T=1 to 1) has local path: (4,4) 
[DBG]    Agent 28 (global paths from T=1 to 35) has local path: (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,1) (3,1) (4,1) 
[DBG]    Agent 108 (global paths from T=1 to 6) has local path: (2,1) (3,1) (3,0) (3,0) (3,1) (4,1) 
[DBG]  Checking input data for SAT solver:
[DBG]    - Number of agents to replan: 3
[DBG]  Agent 12 has the original local path length: 1 => Start (4,4), Goal (4,4)
[DBG]  Agent 28 has the original local path length: 35 => Start (2,2), Goal (4,1)
[DBG]  Agent 108 has the original local path length: 6 => Start (2,1), Goal (4,1)
[DBG]  Start position: (4, 4), (2, 2), (2, 1), 
[DBG]  Goal position: (4, 4), (4, 1), (4, 1), 
[DBG]  SAT instance and solver created.
Currently solving
Instance name: scen
Map name: map
Encoding used: disappear_at_goal
SAT solver used: Kissat
Optimizing function: sum of costs
Number of agents: 3
Mks LB: 4
SoC LB: 8
Delta: 0
Remaining time: 300000 [ms]

Vertex conflict! Agents 0, 2, timestep 3, location 0
Found plan [agents = 3] [timesteps = 4]
Agent #0 : 15 0 0 0 
Agent #1 : 9 8 11 12 
Agent #2 : 8 11 12 0 

[STAT] Solver returned: 0
[DBG]  Agent (index) 12 | New local path (submap idx):
[DBG]  15 
[DBG]  Agent (index) 28 | New local path (submap idx):
[DBG]  9 8 11 12 
[DBG]  Agent (index) 108 | New local path (submap idx):
[DBG]  8 11 12 
[DBG]  Update the agent path 12 | Original local length: 1 | New local length: 1
[DBG]  agent 12 t=0 => decoded (sx,sy)=(4,4) => global_id=727
[DBG]  Complete path of agent 12:
[DBG]    Original: 726 727 728 729 730 731 732 764 765 766 767 
[DBG]    New:     726 727 728 729 730 731 732 764 765 766 767 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 726 
[DBG]    Local path (in submap): 727 
[DBG]    Suffix (out of submap): 728 729 730 731 732 764 765 766 767 
[DBG]  Original agent path length 12 je: 11
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 0: 726, 727, 728, 729, 730, 731, 732, 764, 765, 766, 767, 
[DBG]  Path for agent 12 updated, resulting length: 11
[DBG]  Update the agent path 28 | Original local length: 35 | New local length: 4
[DBG]  agent 28 t=0 => decoded (sx,sy)=(2,2) => global_id=661
[DBG]  agent 28 t=1 => decoded (sx,sy)=(2,1) => global_id=660
[DBG]  agent 28 t=2 => decoded (sx,sy)=(3,1) => global_id=692
[DBG]  agent 28 t=3 => decoded (sx,sy)=(4,1) => global_id=724
[DBG]  Complete path of agent 28:
[DBG]    Original: 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 660 692 724 756 756 724 725 726 727 
[DBG]    New:     661 661 660 692 724 756 756 724 725 726 727 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 661 
[DBG]    Local path (in submap): 661 660 692 724 756 756 724 725 726 727 
[DBG]    Suffix (out of submap): 
[DBG]  Original agent path length 28 je: 42
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 1: 661, 661, 660, 692, 724, 756, 756, 724, 725, 726, 727, 
[DBG]  Path for agent 28 updated, resulting length: 11
[DBG]  Update the agent path 108 | Original local length: 6 | New local length: 3
[DBG]  agent 108 t=0 => decoded (sx,sy)=(2,1) => global_id=660
[DBG]  agent 108 t=1 => decoded (sx,sy)=(3,1) => global_id=692
[DBG]  agent 108 t=2 => decoded (sx,sy)=(4,1) => global_id=724
[DBG]  Complete path of agent 108:
[DBG]    Original: 628 660 692 691 691 692 724 756 788 820 821 822 823 824 856 857 858 859 891 892 924 956 957 989 1021 
[DBG]    New:     628 660 692 724 756 788 820 821 822 823 824 856 857 858 859 891 892 924 956 957 989 1021 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 628 
[DBG]    Local path (in submap): 660 692 724 756 788 820 
[DBG]    Suffix (out of submap): 821 822 823 824 856 857 858 859 891 892 924 956 957 989 1021 
[DBG]  Original agent path length 108 je: 25
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 2: 628, 660, 692, 724, 756, 788, 820, 821, 822, 823, 824, 856, 857, 858, 859, 891, 892, 924, 956, 957, 989, 1021, 
[DBG]  Path for agent 108 updated, resulting length: 22
[DBG]  Paths successfully updated.
[DBG]  (LNS.cpp) New path for agent 12: 
[DBG]  726, 727, 728, 729, 730, 731, 732, 764, 765, 766, 767, 
[DBG]  (LNS.cpp) New path for agent 28: 
[DBG]  661, 661, 660, 692, 724, 756, 756, 724, 725, 726, 727, 
[DBG]  (LNS.cpp) New path for agent 108: 
[DBG]  628, 660, 692, 724, 756, 788, 820, 821, 822, 823, 824, 856, 857, 858, 859, 891, 892, 924, 956, 957, 989, 1021, 
[DBG]  Delta value: 0.453333
[DBG]  Rewarding metric index = 1
[DBG]  component_weights = {0.000622827, 0.998627, 0.000274323, 0.000475612}
[DBG]  opSuccess value: 1
[STAT] neighbor.sum_of_costs before recomputation: 41
[STAT] neighbor.old_sum_of_costs before recomputation: 75
[STAT] sum_of_costs before recomputation: 4278
[DBG]  Validate solution immediately after SAT success.
[WARNING] Problem after SAT: Vertex conflict between agents 7 and 108 at location 788 at timestep 5
[DBG]  [DEBUG] Attempting immediate repair via init_lns because problem occurred after SAT (should be applied only for conflicts...).
[DBG]  [DEBUG] Passing 150 agents to init_lns (skip=true).
[DBG]  [DEBUG] path_table contents for selected agents (neighbor.agents):
[DBG]    Agent 12 => controlling path length=11
[DBG]    Agent 28 => controlling path length=11
[DBG]    Agent 108 => controlling path length=22
[DBG]  hodnota skip_initial_solution=1
[DBG]  We skip initialSolution => call buildCollisionData()
[DBG]  buildCollisionData() called – skip_initial_solution case.
[DBG]  Agents.size()=150, collision_graph.size()=150
[DBG]  agent 7 => updateCollidingPairs => foundCollision
[DBG]  agent 28 => updateCollidingPairs => foundCollision
[DBG]  agent 35 => updateCollidingPairs => foundCollision
[DBG]  agent 38 => updateCollidingPairs => foundCollision
[DBG]  agent 42 => updateCollidingPairs => foundCollision
[DBG]  agent 46 => updateCollidingPairs => foundCollision
[DBG]  agent 70 => updateCollidingPairs => foundCollision
[DBG]  agent 91 => updateCollidingPairs => foundCollision
[DBG]  agent 108 => updateCollidingPairs => foundCollision
[DBG]  agent 142 => updateCollidingPairs => foundCollision
[DBG]  Conflicting agent pairs:
[DBG]  agent 7 is in conflict with agent 108
[DBG]  agent 28 is in conflict with agent 42
[DBG]  agent 28 is in conflict with agent 46
[DBG]  agent 28 is in conflict with agent 70
[DBG]  agent 28 is in conflict with agent 91
[DBG]  agent 35 is in conflict with agent 108
[DBG]  agent 38 is in conflict with agent 108
[DBG]  agent 91 is in conflict with agent 108
[DBG]  agent 108 is in conflict with agent 142
[DBG]  buildCollisionData() => sum_of_costs=4244, num_of_colliding_pairs=9
[DBG]  buildCollisionData done => sum_of_costs=4244, num_of_colliding_pairs=9
[DBG]  sum_of_cost hodnota: 4244
[DBG]  After skip/init build => iteration_stats.back(): sum_of_costs=4244, collisions=9
[DEBUG] Using default neighbor generation strategy for conflicts: 1
[DEBUG] Using default neighbor generation strategy for conflicts: 1
[DEBUG] Using default neighbor generation strategy for conflicts: 0
	InitLNS(PP): runtime = 0.00637467, iterations = 4, colliding pairs = 0, initial colliding pairs = 9, solution cost = 4302, initial solution cost = 4244, failed iterations = 0
[DBG]  init_lns->sum_of_costs after init_lns->run: 4302
[DBG]  sum_of_costs after assignment from init_lns->run: 4302
[DBG]  Recomputing sum_of_cost by dividing neighbor.sum_of_costs and neighbor.old_sum_of_costs
[STAT] sum_of_costs after recomputation: 4302
[STAT] Iteration 97
[DBG]  Random chance did not select SAT operator (r=39), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 97
[DBG]  Random chance did not select SAT operator (r=54), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 97
[DBG]  Using SAT operator (destroy+repair SAT).
[DBG]  ====================
[DBG]  SAT destroy operator called.
[DBG]  SAT heuristic: 2
[DBG]  key_agent_id: 28
[DBG]  key_agent_id global path length: 57
[DBG]  Submap content (global positions):
[DBG]  658 659 660 661 662 
[DBG]  690 691 692 693 694 
[DBG]  722 723 724 725 726 
[DBG]  754 755 756 757 758 
[DBG]  786 787 788 789 790 
[DBG]  Map content with agents and obstacles:
[DBG]  . . . . X 
[DBG]  X . . X X 
[DBG]  . X A . . 
[DBG]  X . . . X 
[DBG]  A . . X . 
[DBG]  content of the map structure that we pass to the SAT solver:
[DBG]  1  1  1  1  -1  
[DBG]  -1  1  1  -1  -1  
[DBG]  1  -1  1  1  1  
[DBG]  -1  1  1  1  -1  
[DBG]  1  1  1  -1  1  
[DBG]  Identifying agents in a submap for rescheduling (when key_agent is there at the time 48):
[DBG]  Agent 28 found intervals in the sub-map:
[DBG]   [0..2] [7..55]
[DBG]  Agent 28 (interval in submap: [7..55]) contains time 48, added to replan.
[DBG]  Agent 42 found intervals in the sub-map:
[DBG]   [48..54]
[DBG]  Agent 42 (interval in submap: [48..54]) contains time 48, added to replan.
[DBG]  Agent 28 | Start (global): 724 -> (local): (2, 2) at time 48 | Goal (global): 726 -> (local): (2, 4) at time 55
[DBG]  Agent 42 | Start (global): 786 -> (local): (4, 0) at time 48 | Goal (global): 726 -> (local): (2, 4) at time 54
[DBG]  [REPAIR] SAT destroy operator called.
[DBG]  [REPAIR] SAT operator – launching subproblem FOR OPTIMIZATION.
[DBG]  Creating local paths (sx, sy) in the submap for T_sync = 48
[DBG]    Agent 28 (global paths from T=48 to 55) has local path: (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,3) (2,4) 
[DBG]    Agent 42 (global paths from T=48 to 54) has local path: (4,0) (4,1) (4,2) (3,2) (3,3) (2,3) (2,4) 
[DBG]  Checking input data for SAT solver:
[DBG]    - Number of agents to replan: 2
[DBG]  Agent 28 has the original local path length: 8 => Start (2,2), Goal (2,4)
[DBG]  Agent 42 has the original local path length: 7 => Start (4,0), Goal (2,4)
[DBG]  Start position: (2, 2), (4, 0), 
[DBG]  Goal position: (2, 4), (2, 4), 
[DBG]  SAT instance and solver created.
Currently solving
Instance name: scen
Map name: map
Encoding used: disappear_at_goal
SAT solver used: Kissat
Optimizing function: sum of costs
Number of agents: 2
Mks LB: 7
SoC LB: 10
Delta: 0
Remaining time: 300000 [ms]

Found plan [agents = 2] [timesteps = 7]
Agent #0 : 7 8 9 0 0 0 0 
Agent #1 : 13 14 15 11 12 8 9 

[STAT] Solver returned: 0
[DBG]  Agent (index) 28 | New local path (submap idx):
[DBG]  7 8 9 
[DBG]  Agent (index) 42 | New local path (submap idx):
[DBG]  13 14 15 11 12 8 9 
[DBG]  Update the agent path 28 | Original local length: 8 | New local length: 3
[DBG]  agent 28 t=0 => decoded (sx,sy)=(2,2) => global_id=724
[DBG]  agent 28 t=1 => decoded (sx,sy)=(2,3) => global_id=725
[DBG]  agent 28 t=2 => decoded (sx,sy)=(2,4) => global_id=726
[DBG]  Complete path of agent 28:
[DBG]    Original: 661 661 660 628 628 628 628 660 692 691 691 691 691 691 691 691 691 691 691 691 691 691 691 691 691 691 691 691 691 691 691 691 691 692 724 725 725 725 725 725 724 724 724 724 724 724 724 724 724 724 724 724 724 724 725 726 727 
[DBG]    New:     661 661 660 628 628 628 628 660 692 691 691 691 691 691 691 691 691 691 691 691 691 691 691 691 691 691 691 691 691 691 691 691 691 692 724 725 725 725 725 725 724 724 724 724 724 724 724 724 724 725 726 727 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 661 661 660 628 628 628 628 660 692 691 691 691 691 691 691 691 691 691 691 691 691 691 691 691 691 691 691 691 691 691 691 691 691 692 724 725 725 725 725 725 724 724 724 724 724 724 724 724 
[DBG]    Local path (in submap): 724 725 726 727 
[DBG]    Suffix (out of submap): 
[DBG]  Original agent path length 28 je: 57
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 0: 661, 661, 660, 628, 628, 628, 628, 660, 692, 691, 691, 691, 691, 691, 691, 691, 691, 691, 691, 691, 691, 691, 691, 691, 691, 691, 691, 691, 691, 691, 691, 691, 691, 692, 724, 725, 725, 725, 725, 725, 724, 724, 724, 724, 724, 724, 724, 724, 724, 725, 726, 727, 
[DBG]  Path for agent 28 updated, resulting length: 52
[DBG]  Update the agent path 42 | Original local length: 7 | New local length: 7
[DBG]  agent 42 t=0 => decoded (sx,sy)=(4,0) => global_id=786
[DBG]  agent 42 t=1 => decoded (sx,sy)=(4,1) => global_id=787
[DBG]  agent 42 t=2 => decoded (sx,sy)=(4,2) => global_id=788
[DBG]  agent 42 t=3 => decoded (sx,sy)=(3,2) => global_id=756
[DBG]  agent 42 t=4 => decoded (sx,sy)=(3,3) => global_id=757
[DBG]  agent 42 t=5 => decoded (sx,sy)=(2,3) => global_id=725
[DBG]  agent 42 t=6 => decoded (sx,sy)=(2,4) => global_id=726
[DBG]  Complete path of agent 42:
[DBG]    Original: 224 192 193 194 194 195 195 196 228 228 260 261 293 294 295 296 297 329 361 393 425 425 457 489 490 491 491 492 524 556 588 589 590 591 623 655 687 719 751 783 815 847 879 880 881 882 850 818 786 787 788 756 757 725 726 727 759 
[DBG]    New:     224 192 193 194 194 195 195 196 228 228 260 261 293 294 295 296 297 329 361 393 425 425 457 489 490 491 491 492 524 556 588 589 590 591 623 655 687 719 751 783 815 847 879 880 881 882 850 818 786 787 788 756 757 725 726 727 759 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 224 192 193 194 194 195 195 196 228 228 260 261 293 294 295 296 297 329 361 393 425 425 457 489 490 491 491 492 524 556 588 589 590 591 623 655 687 719 751 783 815 847 879 880 881 882 850 818 
[DBG]    Local path (in submap): 786 787 788 756 757 725 726 
[DBG]    Suffix (out of submap): 727 759 
[DBG]  Original agent path length 42 je: 57
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 1: 224, 192, 193, 194, 194, 195, 195, 196, 228, 228, 260, 261, 293, 294, 295, 296, 297, 329, 361, 393, 425, 425, 457, 489, 490, 491, 491, 492, 524, 556, 588, 589, 590, 591, 623, 655, 687, 719, 751, 783, 815, 847, 879, 880, 881, 882, 850, 818, 786, 787, 788, 756, 757, 725, 726, 727, 759, 
[DBG]  Path for agent 42 updated, resulting length: 57
[DBG]  Paths successfully updated.
[DBG]  (LNS.cpp) New path for agent 28: 
[DBG]  661, 661, 660, 628, 628, 628, 628, 660, 692, 691, 691, 691, 691, 691, 691, 691, 691, 691, 691, 691, 691, 691, 691, 691, 691, 691, 691, 691, 691, 691, 691, 691, 691, 692, 724, 725, 725, 725, 725, 725, 724, 724, 724, 724, 724, 724, 724, 724, 724, 725, 726, 727, 
[DBG]  (LNS.cpp) New path for agent 42: 
[DBG]  224, 192, 193, 194, 194, 195, 195, 196, 228, 228, 260, 261, 293, 294, 295, 296, 297, 329, 361, 393, 425, 425, 457, 489, 490, 491, 491, 492, 524, 556, 588, 589, 590, 591, 623, 655, 687, 719, 751, 783, 815, 847, 879, 880, 881, 882, 850, 818, 786, 787, 788, 756, 757, 725, 726, 727, 759, 
[DBG]  Delta value: 0.0446429
[DBG]  Rewarding metric index = 1
[DBG]  component_weights = {0.00056647, 0.998751, 0.000249501, 0.000432576}
[DBG]  opSuccess value: 1
[STAT] neighbor.sum_of_costs before recomputation: 107
[STAT] neighbor.old_sum_of_costs before recomputation: 112
[STAT] sum_of_costs before recomputation: 4302
[DBG]  Validate solution immediately after SAT success.
[WARNING] Problem after SAT: Target conflict: agent 42 (len 56) traverses target of agent 28 (len 51) at location 727 at timestep 55
[DBG]  [DEBUG] Attempting immediate repair via init_lns because problem occurred after SAT (should be applied only for conflicts...).
[DBG]  [DEBUG] Passing 150 agents to init_lns (skip=true).
[DBG]  [DEBUG] path_table contents for selected agents (neighbor.agents):
[DBG]    Agent 28 => controlling path length=52
[DBG]    Agent 42 => controlling path length=57
[DBG]  hodnota skip_initial_solution=1
[DBG]  We skip initialSolution => call buildCollisionData()
[DBG]  buildCollisionData() called – skip_initial_solution case.
[DBG]  Agents.size()=150, collision_graph.size()=150
[DBG]  agent 28 => updateCollidingPairs => foundCollision
[DBG]  agent 42 => updateCollidingPairs => foundCollision
[DBG]  Conflicting agent pairs:
[DBG]  agent 28 is in conflict with agent 42
[DBG]  buildCollisionData() => sum_of_costs=4297, num_of_colliding_pairs=1
[DBG]  buildCollisionData done => sum_of_costs=4297, num_of_colliding_pairs=1
[DBG]  sum_of_cost hodnota: 4297
[DBG]  After skip/init build => iteration_stats.back(): sum_of_costs=4297, collisions=1
[DEBUG] Using default neighbor generation strategy for conflicts: 0
	InitLNS(PP): runtime = 0.00129996, iterations = 2, colliding pairs = 0, initial colliding pairs = 1, solution cost = 4297, initial solution cost = 4297, failed iterations = 0
[DBG]  init_lns->sum_of_costs after init_lns->run: 4297
[DBG]  sum_of_costs after assignment from init_lns->run: 4297
[DBG]  Recomputing sum_of_cost by dividing neighbor.sum_of_costs and neighbor.old_sum_of_costs
[STAT] sum_of_costs after recomputation: 4297
[STAT] Iteration 98
[DBG]  Random chance did not select SAT operator (r=53), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 98
[DBG]  Random chance did not select SAT operator (r=14), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 98
[DBG]  Random chance did not select SAT operator (r=93), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 98
[DBG]  Random chance did not select SAT operator (r=52), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 98
[DBG]  Random chance did not select SAT operator (r=47), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 98
[DBG]  Random chance did not select SAT operator (r=36), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 98
[DBG]  Random chance did not select SAT operator (r=60), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 98
[DBG]  Random chance did not select SAT operator (r=38), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 98
[DBG]  Random chance did not select SAT operator (r=78), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 98
[DBG]  Using SAT operator (destroy+repair SAT).
[DBG]  ====================
[DBG]  SAT destroy operator called.
[DBG]  SAT heuristic: 2
[DBG]  key_agent_id: 28
[DBG]  key_agent_id global path length: 57
[DBG]  Submap content (global positions):
[DBG]  595 596 597 598 599 
[DBG]  627 628 629 630 631 
[DBG]  659 660 661 662 663 
[DBG]  691 692 693 694 695 
[DBG]  723 724 725 726 727 
[DBG]  Map content with agents and obstacles:
[DBG]  X . A X . 
[DBG]  . . . X A 
[DBG]  . . A X X 
[DBG]  . A X X X 
[DBG]  X . . . . 
[DBG]  content of the map structure that we pass to the SAT solver:
[DBG]  -1  1  1  -1  1  
[DBG]  1  1  1  -1  1  
[DBG]  1  1  1  -1  -1  
[DBG]  1  1  -1  -1  -1  
[DBG]  -1  1  1  1  1  
[DBG]  Identifying agents in a submap for rescheduling (when key_agent is there at the time 24):
[DBG]  Agent 0 found intervals in the sub-map:
[DBG]   [22..25]
[DBG]  Agent 0 (interval in submap: [22..25]) contains time 24, added to replan.
[DBG]  Agent 28 found intervals in the sub-map:
[DBG]   [0..56]
[DBG]  Agent 28 (interval in submap: [0..56]) contains time 24, added to replan.
[DBG]  Agent 53 found intervals in the sub-map:
[DBG]   [24..29]
[DBG]  Agent 53 (interval in submap: [24..29]) contains time 24, added to replan.
[DBG]  Agent 56 found intervals in the sub-map:
[DBG]  
[DBG]  Agent 56 is not in sub-map at time 24 (intervals: 
[DBG]  )
[DBG]  Agent 144 found intervals in the sub-map:
[DBG]   [23..24]
[DBG]  Agent 144 (interval in submap: [23..24]) contains time 24, added to replan.
[DBG]  Agent 0 | Start (global): 692 -> (local): (3, 1) at time 24 | Goal (global): 724 -> (local): (4, 1) at time 25
[DBG]  Agent 28 | Start (global): 661 -> (local): (2, 2) at time 24 | Goal (global): 727 -> (local): (4, 4) at time 56
[DBG]  Agent 53 | Start (global): 597 -> (local): (0, 2) at time 24 | Goal (global): 724 -> (local): (4, 1) at time 29
[DBG]  Agent 144 | Start (global): 631 -> (local): (1, 4) at time 24 | Goal (global): 631 -> (local): (1, 4) at time 24
[DBG]  [REPAIR] SAT destroy operator called.
[DBG]  [REPAIR] SAT operator – launching subproblem FOR OPTIMIZATION.
[DBG]  Creating local paths (sx, sy) in the submap for T_sync = 24
[DBG]    Agent 0 (global paths from T=24 to 25) has local path: (3,1) (4,1) 
[DBG]    Agent 28 (global paths from T=24 to 56) has local path: (2,2) (2,2) (2,2) (2,2) (2,1) (3,1) (3,0) (3,0) (3,0) (3,1) (4,1) (4,2) (4,2) (4,2) (4,2) (4,2) (4,1) (4,1) (4,1) (4,1) (4,1) (4,1) (4,1) (4,1) (4,1) (4,1) (4,1) (4,1) (4,1) (4,1) (4,2) (4,3) (4,4) 
[DBG]    Agent 53 (global paths from T=24 to 29) has local path: (0,2) (0,1) (1,1) (2,1) (3,1) (4,1) 
[DBG]    Agent 144 (global paths from T=24 to 24) has local path: (1,4) 
[DBG]  Checking input data for SAT solver:
[DBG]    - Number of agents to replan: 4
[DBG]  Agent 0 has the original local path length: 2 => Start (3,1), Goal (4,1)
[DBG]  Agent 28 has the original local path length: 33 => Start (2,2), Goal (4,4)
[DBG]  Agent 53 has the original local path length: 6 => Start (0,2), Goal (4,1)
[DBG]  Agent 144 has the original local path length: 1 => Start (1,4), Goal (1,4)
[DBG]  Start position: (3, 1), (2, 2), (0, 2), (1, 4), 
[DBG]  Goal position: (4, 1), (4, 4), (4, 1), (1, 4), 
[DBG]  SAT instance and solver created.
Currently solving
Instance name: scen
Map name: map
Encoding used: disappear_at_goal
SAT solver used: Kissat
Optimizing function: sum of costs
Number of agents: 4
Mks LB: 7
SoC LB: 16
Delta: 0
Remaining time: 300000 [ms]

Vertex conflict! Agents 0, 2, timestep 6, location 0
Vertex conflict! Agents 0, 3, timestep 2, location 0
Swapping conflict! Agents 0, 3, timestep 2, edge (0,0)
Vertex conflict! Agents 0, 3, timestep 3, location 0
Swapping conflict! Agents 0, 3, timestep 3, edge (0,0)
Vertex conflict! Agents 0, 3, timestep 4, location 0
Swapping conflict! Agents 0, 3, timestep 4, edge (0,0)
Vertex conflict! Agents 0, 3, timestep 5, location 0
Swapping conflict! Agents 0, 3, timestep 5, edge (0,0)
Vertex conflict! Agents 0, 3, timestep 6, location 0
Vertex conflict! Agents 2, 3, timestep 6, location 0
Found plan [agents = 4] [timesteps = 7]
Agent #0 : 11 12 0 0 0 0 0 
Agent #1 : 9 8 11 12 13 14 15 
Agent #2 : 1 5 9 8 11 12 0 
Agent #3 : 6 0 0 0 0 0 0 

[STAT] Solver returned: 0
[DBG]  Agent (index) 0 | New local path (submap idx):
[DBG]  11 12 
[DBG]  Agent (index) 28 | New local path (submap idx):
[DBG]  9 8 11 12 13 14 15 
[DBG]  Agent (index) 53 | New local path (submap idx):
[DBG]  1 5 9 8 11 12 
[DBG]  Agent (index) 144 | New local path (submap idx):
[DBG]  6 
[DBG]  Update the agent path 0 | Original local length: 2 | New local length: 2
[DBG]  agent 0 t=0 => decoded (sx,sy)=(3,1) => global_id=692
[DBG]  agent 0 t=1 => decoded (sx,sy)=(4,1) => global_id=724
[DBG]  Complete path of agent 0:
[DBG]    Original: 517 516 548 580 612 644 645 646 647 648 649 650 651 683 684 685 686 687 655 656 657 658 659 660 692 724 756 788 820 821 822 854 855 856 857 858 859 860 861 829 797 798 799 
[DBG]    New:     517 516 548 580 612 644 645 646 647 648 649 650 651 683 684 685 686 687 655 656 657 658 659 660 692 724 756 788 820 821 822 854 855 856 857 858 859 860 861 829 797 798 799 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 517 516 548 580 612 644 645 646 647 648 649 650 651 683 684 685 686 687 655 656 657 658 659 660 
[DBG]    Local path (in submap): 692 724 
[DBG]    Suffix (out of submap): 756 788 820 821 822 854 855 856 857 858 859 860 861 829 797 798 799 
[DBG]  Original agent path length 0 je: 43
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 0: 517, 516, 548, 580, 612, 644, 645, 646, 647, 648, 649, 650, 651, 683, 684, 685, 686, 687, 655, 656, 657, 658, 659, 660, 692, 724, 756, 788, 820, 821, 822, 854, 855, 856, 857, 858, 859, 860, 861, 829, 797, 798, 799, 
[DBG]  Path for agent 0 updated, resulting length: 43
[DBG]  Update the agent path 28 | Original local length: 33 | New local length: 7
[DBG]  agent 28 t=0 => decoded (sx,sy)=(2,2) => global_id=661
[DBG]  agent 28 t=1 => decoded (sx,sy)=(2,1) => global_id=660
[DBG]  agent 28 t=2 => decoded (sx,sy)=(3,1) => global_id=692
[DBG]  agent 28 t=3 => decoded (sx,sy)=(4,1) => global_id=724
[DBG]  agent 28 t=4 => decoded (sx,sy)=(4,2) => global_id=725
[DBG]  agent 28 t=5 => decoded (sx,sy)=(4,3) => global_id=726
[DBG]  agent 28 t=6 => decoded (sx,sy)=(4,4) => global_id=727
[DBG]  Complete path of agent 28:
[DBG]    Original: 661 661 660 628 628 628 628 660 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 660 692 691 691 691 692 724 725 725 725 725 725 724 724 724 724 724 724 724 724 724 724 724 724 724 724 725 726 727 
[DBG]    New:     661 661 660 628 628 628 628 660 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 660 692 724 725 726 727 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 661 661 660 628 628 628 628 660 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 
[DBG]    Local path (in submap): 661 660 692 724 725 726 727 
[DBG]    Suffix (out of submap): 
[DBG]  Original agent path length 28 je: 57
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 1: 661, 661, 660, 628, 628, 628, 628, 660, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 660, 692, 724, 725, 726, 727, 
[DBG]  Path for agent 28 updated, resulting length: 31
[DBG]  Update the agent path 53 | Original local length: 6 | New local length: 6
[DBG]  agent 53 t=0 => decoded (sx,sy)=(0,2) => global_id=597
[DBG]  agent 53 t=1 => decoded (sx,sy)=(1,2) => global_id=629
[DBG]  agent 53 t=2 => decoded (sx,sy)=(2,2) => global_id=661
[DBG]  agent 53 t=3 => decoded (sx,sy)=(2,1) => global_id=660
[DBG]  agent 53 t=4 => decoded (sx,sy)=(3,1) => global_id=692
[DBG]  agent 53 t=5 => decoded (sx,sy)=(4,1) => global_id=724
[DBG]  Complete path of agent 53:
[DBG]    Original: 84 116 148 149 150 151 183 215 247 279 311 343 375 407 406 438 470 502 501 533 534 566 566 565 597 596 628 660 692 724 756 788 820 821 
[DBG]    New:     84 116 148 149 150 151 183 215 247 279 311 343 375 407 406 438 470 502 501 533 534 566 566 565 597 629 661 660 692 724 756 788 820 821 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 84 116 148 149 150 151 183 215 247 279 311 343 375 407 406 438 470 502 501 533 534 566 566 565 
[DBG]    Local path (in submap): 597 629 661 660 692 724 
[DBG]    Suffix (out of submap): 756 788 820 821 
[DBG]  Original agent path length 53 je: 34
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 2: 84, 116, 148, 149, 150, 151, 183, 215, 247, 279, 311, 343, 375, 407, 406, 438, 470, 502, 501, 533, 534, 566, 566, 565, 597, 629, 661, 660, 692, 724, 756, 788, 820, 821, 
[DBG]  Path for agent 53 updated, resulting length: 34
[DBG]  Update the agent path 144 | Original local length: 1 | New local length: 1
[DBG]  agent 144 t=0 => decoded (sx,sy)=(1,4) => global_id=631
[DBG]  Complete path of agent 144:
[DBG]    Original: 121 153 185 217 249 281 313 345 377 409 408 440 441 473 474 474 474 506 538 570 569 601 600 599 631 
[DBG]    New:     121 153 185 217 249 281 313 345 377 409 408 440 441 473 474 474 474 506 538 570 569 601 600 599 631 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 121 153 185 217 249 281 313 345 377 409 408 440 441 473 474 474 474 506 538 570 569 601 600 599 
[DBG]    Local path (in submap): 631 
[DBG]    Suffix (out of submap): 
[DBG]  Original agent path length 144 je: 25
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 3: 121, 153, 185, 217, 249, 281, 313, 345, 377, 409, 408, 440, 441, 473, 474, 474, 474, 506, 538, 570, 569, 601, 600, 599, 631, 
[DBG]  Path for agent 144 updated, resulting length: 25
[DBG]  Paths successfully updated.
[DBG]  (LNS.cpp) New path for agent 0: 
[DBG]  517, 516, 548, 580, 612, 644, 645, 646, 647, 648, 649, 650, 651, 683, 684, 685, 686, 687, 655, 656, 657, 658, 659, 660, 692, 724, 756, 788, 820, 821, 822, 854, 855, 856, 857, 858, 859, 860, 861, 829, 797, 798, 799, 
[DBG]  (LNS.cpp) New path for agent 28: 
[DBG]  661, 661, 660, 628, 628, 628, 628, 660, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 660, 692, 724, 725, 726, 727, 
[DBG]  (LNS.cpp) New path for agent 53: 
[DBG]  84, 116, 148, 149, 150, 151, 183, 215, 247, 279, 311, 343, 375, 407, 406, 438, 470, 502, 501, 533, 534, 566, 566, 565, 597, 629, 661, 660, 692, 724, 756, 788, 820, 821, 
[DBG]  (LNS.cpp) New path for agent 144: 
[DBG]  121, 153, 185, 217, 249, 281, 313, 345, 377, 409, 408, 440, 441, 473, 474, 474, 474, 506, 538, 570, 569, 601, 600, 599, 631, 
[DBG]  Delta value: 0.167742
[DBG]  Rewarding metric index = 1
[DBG]  component_weights = {0.000460951, 0.998984, 0.000203025, 0.000351998}
[DBG]  opSuccess value: 1
[STAT] neighbor.sum_of_costs before recomputation: 129
[STAT] neighbor.old_sum_of_costs before recomputation: 155
[STAT] sum_of_costs before recomputation: 4297
[DBG]  Validate solution immediately after SAT success.
[WARNING] Problem after SAT: Target conflict: agent 42 (len 56) traverses target of agent 28 (len 30) at location 727 at timestep 55
[DBG]  [DEBUG] Attempting immediate repair via init_lns because problem occurred after SAT (should be applied only for conflicts...).
[DBG]  [DEBUG] Passing 150 agents to init_lns (skip=true).
[DBG]  [DEBUG] path_table contents for selected agents (neighbor.agents):
[DBG]    Agent 0 => controlling path length=43
[DBG]    Agent 28 => controlling path length=31
[DBG]    Agent 53 => controlling path length=34
[DBG]    Agent 144 => controlling path length=25
[DBG]  hodnota skip_initial_solution=1
[DBG]  We skip initialSolution => call buildCollisionData()
[DBG]  buildCollisionData() called – skip_initial_solution case.
[DBG]  Agents.size()=150, collision_graph.size()=150
[DBG]  agent 28 => updateCollidingPairs => foundCollision
[DBG]  agent 42 => updateCollidingPairs => foundCollision
[DBG]  Conflicting agent pairs:
[DBG]  agent 28 is in conflict with agent 42
[DBG]  buildCollisionData() => sum_of_costs=4271, num_of_colliding_pairs=1
[DBG]  buildCollisionData done => sum_of_costs=4271, num_of_colliding_pairs=1
[DBG]  sum_of_cost hodnota: 4271
[DBG]  After skip/init build => iteration_stats.back(): sum_of_costs=4271, collisions=1
[DEBUG] Using default neighbor generation strategy for conflicts: 2
[DEBUG] Using default neighbor generation strategy for conflicts: 0
	InitLNS(PP): runtime = 0.00307742, iterations = 3, colliding pairs = 0, initial colliding pairs = 1, solution cost = 4289, initial solution cost = 4271, failed iterations = 0
[DBG]  init_lns->sum_of_costs after init_lns->run: 4289
[DBG]  sum_of_costs after assignment from init_lns->run: 4289
[DBG]  Recomputing sum_of_cost by dividing neighbor.sum_of_costs and neighbor.old_sum_of_costs
[STAT] sum_of_costs after recomputation: 4289
[STAT] Iteration 99
[DBG]  Random chance did not select SAT operator (r=59), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 99
[DBG]  Using SAT operator (destroy+repair SAT).
[DBG]  ====================
[DBG]  SAT destroy operator called.
[DBG]  SAT heuristic: 2
[DBG]  key_agent_id: 28
[DBG]  key_agent_id global path length: 57
[DBG]  Submap content (global positions):
[DBG]  660 661 662 663 664 
[DBG]  692 693 694 695 696 
[DBG]  724 725 726 727 728 
[DBG]  756 757 758 759 760 
[DBG]  788 789 790 791 792 
[DBG]  Map content with agents and obstacles:
[DBG]  . . X X . 
[DBG]  . X X X . 
[DBG]  . . A A . 
[DBG]  . . X . X 
[DBG]  . X . X . 
[DBG]  content of the map structure that we pass to the SAT solver:
[DBG]  1  1  -1  -1  1  
[DBG]  1  -1  -1  -1  1  
[DBG]  1  1  1  1  1  
[DBG]  1  1  -1  1  -1  
[DBG]  1  -1  1  -1  1  
[DBG]  Identifying agents in a submap for rescheduling (when key_agent is there at the time 55):
[DBG]  Agent 28 found intervals in the sub-map:
[DBG]   [0..27] [39..56]
[DBG]  Agent 28 (interval in submap: [39..56]) contains time 55, added to replan.
[DBG]  Agent 42 found intervals in the sub-map:
[DBG]   [50..56]
[DBG]  Agent 42 (interval in submap: [50..56]) contains time 55, added to replan.
[DBG]  Agent 28 | Start (global): 726 -> (local): (2, 2) at time 55 | Goal (global): 727 -> (local): (2, 3) at time 56
[DBG]  Agent 42 | Start (global): 727 -> (local): (2, 3) at time 55 | Goal (global): 759 -> (local): (3, 3) at time 56
[DBG]  [REPAIR] SAT destroy operator called.
[DBG]  [REPAIR] SAT operator – launching subproblem FOR OPTIMIZATION.
[DBG]  Creating local paths (sx, sy) in the submap for T_sync = 55
[DBG]    Agent 28 (global paths from T=55 to 56) has local path: (2,2) (2,3) 
[DBG]    Agent 42 (global paths from T=55 to 56) has local path: (2,3) (3,3) 
[DBG]  Checking input data for SAT solver:
[DBG]    - Number of agents to replan: 2
[DBG]  Agent 28 has the original local path length: 2 => Start (2,2), Goal (2,3)
[DBG]  Agent 42 has the original local path length: 2 => Start (2,3), Goal (3,3)
[DBG]  Start position: (2, 2), (2, 3), 
[DBG]  Goal position: (2, 3), (3, 3), 
[DBG]  SAT instance and solver created.
Currently solving
Instance name: scen
Map name: map
Encoding used: disappear_at_goal
SAT solver used: Kissat
Optimizing function: sum of costs
Number of agents: 2
Mks LB: 2
SoC LB: 4
Delta: 0
Remaining time: 300000 [ms]

Found plan [agents = 2] [timesteps = 2]
Agent #0 : 7 8 
Agent #1 : 8 12 

[STAT] Solver returned: 0
[DBG]  Agent (index) 28 | New local path (submap idx):
[DBG]  7 8 
[DBG]  Agent (index) 42 | New local path (submap idx):
[DBG]  8 12 
[DBG]  Update the agent path 28 | Original local length: 2 | New local length: 2
[DBG]  agent 28 t=0 => decoded (sx,sy)=(2,2) => global_id=726
[DBG]  agent 28 t=1 => decoded (sx,sy)=(2,3) => global_id=727
[DBG]  Complete path of agent 28:
[DBG]    Original: 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 660 628 627 627 627 627 627 627 627 627 659 691 692 724 724 724 724 724 724 724 724 724 724 724 724 724 724 725 726 727 
[DBG]    New:     661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 660 628 627 627 627 627 627 627 627 627 659 691 692 724 724 724 724 724 724 724 724 724 724 724 724 724 724 725 726 727 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 660 628 627 627 627 627 627 627 627 627 659 691 692 724 724 724 724 724 724 724 724 724 724 724 724 724 724 725 
[DBG]    Local path (in submap): 726 727 
[DBG]    Suffix (out of submap): 
[DBG]  Original agent path length 28 je: 57
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 0: 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 660, 628, 627, 627, 627, 627, 627, 627, 627, 627, 659, 691, 692, 724, 724, 724, 724, 724, 724, 724, 724, 724, 724, 724, 724, 724, 724, 725, 726, 727, 
[DBG]  Path for agent 28 updated, resulting length: 57
[DBG]  Update the agent path 42 | Original local length: 2 | New local length: 2
[DBG]  agent 42 t=0 => decoded (sx,sy)=(2,3) => global_id=727
[DBG]  agent 42 t=1 => decoded (sx,sy)=(3,3) => global_id=759
[DBG]  Complete path of agent 42:
[DBG]    Original: 224 192 193 194 194 195 195 196 228 228 260 261 293 294 295 296 297 329 361 393 425 425 457 489 490 491 491 492 524 556 588 589 590 591 623 655 687 719 751 783 815 847 879 880 881 882 850 818 786 787 788 756 757 725 726 727 759 
[DBG]    New:     224 192 193 194 194 195 195 196 228 228 260 261 293 294 295 296 297 329 361 393 425 425 457 489 490 491 491 492 524 556 588 589 590 591 623 655 687 719 751 783 815 847 879 880 881 882 850 818 786 787 788 756 757 725 726 727 759 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 224 192 193 194 194 195 195 196 228 228 260 261 293 294 295 296 297 329 361 393 425 425 457 489 490 491 491 492 524 556 588 589 590 591 623 655 687 719 751 783 815 847 879 880 881 882 850 818 786 787 788 756 757 725 726 
[DBG]    Local path (in submap): 727 759 
[DBG]    Suffix (out of submap): 
[DBG]  Original agent path length 42 je: 57
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 1: 224, 192, 193, 194, 194, 195, 195, 196, 228, 228, 260, 261, 293, 294, 295, 296, 297, 329, 361, 393, 425, 425, 457, 489, 490, 491, 491, 492, 524, 556, 588, 589, 590, 591, 623, 655, 687, 719, 751, 783, 815, 847, 879, 880, 881, 882, 850, 818, 786, 787, 788, 756, 757, 725, 726, 727, 759, 
[DBG]  Path for agent 42 updated, resulting length: 57
[DBG]  Paths successfully updated.
[DBG]  (LNS.cpp) New path for agent 28: 
[DBG]  661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 660, 628, 627, 627, 627, 627, 627, 627, 627, 627, 659, 691, 692, 724, 724, 724, 724, 724, 724, 724, 724, 724, 724, 724, 724, 724, 724, 725, 726, 727, 
[DBG]  (LNS.cpp) New path for agent 42: 
[DBG]  224, 192, 193, 194, 194, 195, 195, 196, 228, 228, 260, 261, 293, 294, 295, 296, 297, 329, 361, 393, 425, 425, 457, 489, 490, 491, 491, 492, 524, 556, 588, 589, 590, 591, 623, 655, 687, 719, 751, 783, 815, 847, 879, 880, 881, 882, 850, 818, 786, 787, 788, 756, 757, 725, 726, 727, 759, 
[DBG]  Delta value: 0
[DBG]  Rewarding metric index = 1
[DBG]  component_weights = {0.000437926, 0.999035, 0.000192884, 0.000334415}
[DBG]  opSuccess value: 1
[STAT] neighbor.sum_of_costs before recomputation: 112
[STAT] neighbor.old_sum_of_costs before recomputation: 112
[STAT] sum_of_costs before recomputation: 4289
[DBG]  Validate solution immediately after SAT success.
[DBG]  No problems after SAT replan.
[DBG]  Recomputing sum_of_cost by dividing neighbor.sum_of_costs and neighbor.old_sum_of_costs
[STAT] sum_of_costs after recomputation: 4289
[STAT] Iteration 100
[DBG]  Random chance did not select SAT operator (r=53), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 100
[DBG]  Random chance did not select SAT operator (r=83), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 100
[DBG]  Random chance did not select SAT operator (r=60), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 100
[DBG]  Random chance did not select SAT operator (r=37), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 100
[DBG]  Random chance did not select SAT operator (r=69), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 100
[DBG]  Random chance did not select SAT operator (r=34), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 100
[DBG]  Random chance did not select SAT operator (r=89), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 100
[DBG]  Using SAT operator (destroy+repair SAT).
[DBG]  ====================
[DBG]  SAT destroy operator called.
[DBG]  SAT heuristic: 2
[DBG]  key_agent_id: 28
[DBG]  key_agent_id global path length: 57
[DBG]  Submap content (global positions):
[DBG]  658 659 660 661 662 
[DBG]  690 691 692 693 694 
[DBG]  722 723 724 725 726 
[DBG]  754 755 756 757 758 
[DBG]  786 787 788 789 790 
[DBG]  Map content with agents and obstacles:
[DBG]  . . . . X 
[DBG]  X . . X X 
[DBG]  . X A A . 
[DBG]  X . . . X 
[DBG]  . . . X . 
[DBG]  content of the map structure that we pass to the SAT solver:
[DBG]  1  1  1  1  -1  
[DBG]  -1  1  1  -1  -1  
[DBG]  1  -1  1  1  1  
[DBG]  -1  1  1  1  -1  
[DBG]  1  1  1  -1  1  
[DBG]  Identifying agents in a submap for rescheduling (when key_agent is there at the time 53):
[DBG]  Agent 28 found intervals in the sub-map:
[DBG]   [0..27] [37..55]
[DBG]  Agent 28 (interval in submap: [37..55]) contains time 53, added to replan.
[DBG]  Agent 42 found intervals in the sub-map:
[DBG]   [48..54]
[DBG]  Agent 42 (interval in submap: [48..54]) contains time 53, added to replan.
[DBG]  Agent 28 | Start (global): 724 -> (local): (2, 2) at time 53 | Goal (global): 726 -> (local): (2, 4) at time 55
[DBG]  Agent 42 | Start (global): 725 -> (local): (2, 3) at time 53 | Goal (global): 726 -> (local): (2, 4) at time 54
[DBG]  [REPAIR] SAT destroy operator called.
[DBG]  [REPAIR] SAT operator – launching subproblem FOR OPTIMIZATION.
[DBG]  Creating local paths (sx, sy) in the submap for T_sync = 53
[DBG]    Agent 28 (global paths from T=53 to 55) has local path: (2,2) (2,3) (2,4) 
[DBG]    Agent 42 (global paths from T=53 to 54) has local path: (2,3) (2,4) 
[DBG]  Checking input data for SAT solver:
[DBG]    - Number of agents to replan: 2
[DBG]  Agent 28 has the original local path length: 3 => Start (2,2), Goal (2,4)
[DBG]  Agent 42 has the original local path length: 2 => Start (2,3), Goal (2,4)
[DBG]  Start position: (2, 2), (2, 3), 
[DBG]  Goal position: (2, 4), (2, 4), 
[DBG]  SAT instance and solver created.
Currently solving
Instance name: scen
Map name: map
Encoding used: disappear_at_goal
SAT solver used: Kissat
Optimizing function: sum of costs
Number of agents: 2
Mks LB: 3
SoC LB: 5
Delta: 0
Remaining time: 300000 [ms]

Found plan [agents = 2] [timesteps = 3]
Agent #0 : 7 8 9 
Agent #1 : 8 9 0 

[STAT] Solver returned: 0
[DBG]  Agent (index) 28 | New local path (submap idx):
[DBG]  7 8 9 
[DBG]  Agent (index) 42 | New local path (submap idx):
[DBG]  8 9 
[DBG]  Update the agent path 28 | Original local length: 3 | New local length: 3
[DBG]  agent 28 t=0 => decoded (sx,sy)=(2,2) => global_id=724
[DBG]  agent 28 t=1 => decoded (sx,sy)=(2,3) => global_id=725
[DBG]  agent 28 t=2 => decoded (sx,sy)=(2,4) => global_id=726
[DBG]  Complete path of agent 28:
[DBG]    Original: 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 660 628 627 627 627 627 627 627 627 627 659 691 692 724 724 724 724 724 724 724 724 724 724 724 724 724 724 725 726 727 
[DBG]    New:     661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 660 628 627 627 627 627 627 627 627 627 659 691 692 724 724 724 724 724 724 724 724 724 724 724 724 724 724 725 726 727 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 660 628 627 627 627 627 627 627 627 627 659 691 692 724 724 724 724 724 724 724 724 724 724 724 724 724 
[DBG]    Local path (in submap): 724 725 726 
[DBG]    Suffix (out of submap): 727 
[DBG]  Original agent path length 28 je: 57
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 0: 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 660, 628, 627, 627, 627, 627, 627, 627, 627, 627, 659, 691, 692, 724, 724, 724, 724, 724, 724, 724, 724, 724, 724, 724, 724, 724, 724, 725, 726, 727, 
[DBG]  Path for agent 28 updated, resulting length: 57
[DBG]  Update the agent path 42 | Original local length: 2 | New local length: 2
[DBG]  agent 42 t=0 => decoded (sx,sy)=(2,3) => global_id=725
[DBG]  agent 42 t=1 => decoded (sx,sy)=(2,4) => global_id=726
[DBG]  Complete path of agent 42:
[DBG]    Original: 224 192 193 194 194 195 195 196 228 228 260 261 293 294 295 296 297 329 361 393 425 425 457 489 490 491 491 492 524 556 588 589 590 591 623 655 687 719 751 783 815 847 879 880 881 882 850 818 786 787 788 756 757 725 726 727 759 
[DBG]    New:     224 192 193 194 194 195 195 196 228 228 260 261 293 294 295 296 297 329 361 393 425 425 457 489 490 491 491 492 524 556 588 589 590 591 623 655 687 719 751 783 815 847 879 880 881 882 850 818 786 787 788 756 757 725 726 727 759 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 224 192 193 194 194 195 195 196 228 228 260 261 293 294 295 296 297 329 361 393 425 425 457 489 490 491 491 492 524 556 588 589 590 591 623 655 687 719 751 783 815 847 879 880 881 882 850 818 786 787 788 756 757 
[DBG]    Local path (in submap): 725 726 
[DBG]    Suffix (out of submap): 727 759 
[DBG]  Original agent path length 42 je: 57
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 1: 224, 192, 193, 194, 194, 195, 195, 196, 228, 228, 260, 261, 293, 294, 295, 296, 297, 329, 361, 393, 425, 425, 457, 489, 490, 491, 491, 492, 524, 556, 588, 589, 590, 591, 623, 655, 687, 719, 751, 783, 815, 847, 879, 880, 881, 882, 850, 818, 786, 787, 788, 756, 757, 725, 726, 727, 759, 
[DBG]  Path for agent 42 updated, resulting length: 57
[DBG]  Paths successfully updated.
[DBG]  (LNS.cpp) New path for agent 28: 
[DBG]  661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 660, 628, 627, 627, 627, 627, 627, 627, 627, 627, 659, 691, 692, 724, 724, 724, 724, 724, 724, 724, 724, 724, 724, 724, 724, 724, 724, 725, 726, 727, 
[DBG]  (LNS.cpp) New path for agent 42: 
[DBG]  224, 192, 193, 194, 194, 195, 195, 196, 228, 228, 260, 261, 293, 294, 295, 296, 297, 329, 361, 393, 425, 425, 457, 489, 490, 491, 491, 492, 524, 556, 588, 589, 590, 591, 623, 655, 687, 719, 751, 783, 815, 847, 879, 880, 881, 882, 850, 818, 786, 787, 788, 756, 757, 725, 726, 727, 759, 
[DBG]  Delta value: 0
[DBG]  Rewarding metric index = 1
[DBG]  component_weights = {0.00041605, 0.999083, 0.000183248, 0.00031771}
[DBG]  opSuccess value: 1
[STAT] neighbor.sum_of_costs before recomputation: 112
[STAT] neighbor.old_sum_of_costs before recomputation: 112
[STAT] sum_of_costs before recomputation: 4289
[DBG]  Validate solution immediately after SAT success.
[DBG]  No problems after SAT replan.
[DBG]  Recomputing sum_of_cost by dividing neighbor.sum_of_costs and neighbor.old_sum_of_costs
[STAT] sum_of_costs after recomputation: 4289
[STAT] Iteration 101
[DBG]  Using SAT operator (destroy+repair SAT).
[DBG]  ====================
[DBG]  SAT destroy operator called.
[DBG]  SAT heuristic: 2
[DBG]  key_agent_id: 28
[DBG]  key_agent_id global path length: 57
[DBG]  Submap content (global positions):
[DBG]  658 659 660 661 662 
[DBG]  690 691 692 693 694 
[DBG]  722 723 724 725 726 
[DBG]  754 755 756 757 758 
[DBG]  786 787 788 789 790 
[DBG]  Map content with agents and obstacles:
[DBG]  . . . . X 
[DBG]  X . . X X 
[DBG]  . X A . . 
[DBG]  X . . . X 
[DBG]  . . . X . 
[DBG]  content of the map structure that we pass to the SAT solver:
[DBG]  1  1  1  1  -1  
[DBG]  -1  1  1  -1  -1  
[DBG]  1  -1  1  1  1  
[DBG]  -1  1  1  1  -1  
[DBG]  1  1  1  -1  1  
[DBG]  Identifying agents in a submap for rescheduling (when key_agent is there at the time 44):
[DBG]  Agent 28 found intervals in the sub-map:
[DBG]   [0..27] [37..55]
[DBG]  Agent 28 (interval in submap: [37..55]) contains time 44, added to replan.
[DBG]  Agent 42 found intervals in the sub-map:
[DBG]   [48..54]
[DBG]  Agent 42 is not in sub-map at time 44 (intervals: 
[DBG]  [48..54] )
[DBG]  Agent 69 found intervals in the sub-map:
[DBG]   [35..41]
[DBG]  Agent 69 is not in sub-map at time 44 (intervals: 
[DBG]  [35..41] )
[DBG]  Agent 28 | Start (global): 724 -> (local): (2, 2) at time 44 | Goal (global): 726 -> (local): (2, 4) at time 55
[DBG]  [REPAIR] SAT destroy operator called.
[DBG]  [REPAIR] SAT operator – launching subproblem FOR OPTIMIZATION.
[DBG]  Creating local paths (sx, sy) in the submap for T_sync = 44
[DBG]    Agent 28 (global paths from T=44 to 55) has local path: (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,3) (2,4) 
[DBG]  Checking input data for SAT solver:
[DBG]    - Number of agents to replan: 1
[DBG]  Agent 28 has the original local path length: 12 => Start (2,2), Goal (2,4)
[DBG]  Start position: (2, 2), 
[DBG]  Goal position: (2, 4), 
[DBG]  SAT instance and solver created.
Currently solving
Instance name: scen
Map name: map
Encoding used: disappear_at_goal
SAT solver used: Kissat
Optimizing function: sum of costs
Number of agents: 1
Mks LB: 3
SoC LB: 3
Delta: 0
Remaining time: 300000 [ms]

Found plan [agents = 1] [timesteps = 3]
Agent #0 : 7 8 9 

[STAT] Solver returned: 0
[DBG]  Agent (index) 28 | New local path (submap idx):
[DBG]  7 8 9 
[DBG]  Update the agent path 28 | Original local length: 12 | New local length: 3
[DBG]  agent 28 t=0 => decoded (sx,sy)=(2,2) => global_id=724
[DBG]  agent 28 t=1 => decoded (sx,sy)=(2,3) => global_id=725
[DBG]  agent 28 t=2 => decoded (sx,sy)=(2,4) => global_id=726
[DBG]  Complete path of agent 28:
[DBG]    Original: 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 660 628 627 627 627 627 627 627 627 627 659 691 692 724 724 724 724 724 724 724 724 724 724 724 724 724 724 725 726 727 
[DBG]    New:     661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 660 628 627 627 627 627 627 627 627 627 659 691 692 724 724 724 724 724 725 726 727 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 660 628 627 627 627 627 627 627 627 627 659 691 692 724 724 724 724 
[DBG]    Local path (in submap): 724 725 726 727 
[DBG]    Suffix (out of submap): 
[DBG]  Original agent path length 28 je: 57
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 0: 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 660, 628, 627, 627, 627, 627, 627, 627, 627, 627, 659, 691, 692, 724, 724, 724, 724, 724, 725, 726, 727, 
[DBG]  Path for agent 28 updated, resulting length: 48
[DBG]  Paths successfully updated.
[DBG]  (LNS.cpp) New path for agent 28: 
[DBG]  661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 660, 628, 627, 627, 627, 627, 627, 627, 627, 627, 659, 691, 692, 724, 724, 724, 724, 724, 725, 726, 727, 
[DBG]  Delta value: 0.160714
[DBG]  Rewarding metric index = 1
[DBG]  component_weights = {0.000340577, 0.999249, 0.000150007, 0.000260077}
[DBG]  opSuccess value: 1
[STAT] neighbor.sum_of_costs before recomputation: 47
[STAT] neighbor.old_sum_of_costs before recomputation: 56
[STAT] sum_of_costs before recomputation: 4289
[DBG]  Validate solution immediately after SAT success.
[WARNING] Problem after SAT: Target conflict: agent 42 (len 56) traverses target of agent 28 (len 47) at location 727 at timestep 55
[DBG]  [DEBUG] Attempting immediate repair via init_lns because problem occurred after SAT (should be applied only for conflicts...).
[DBG]  [DEBUG] Passing 150 agents to init_lns (skip=true).
[DBG]  [DEBUG] path_table contents for selected agents (neighbor.agents):
[DBG]    Agent 28 => controlling path length=48
[DBG]  hodnota skip_initial_solution=1
[DBG]  We skip initialSolution => call buildCollisionData()
[DBG]  buildCollisionData() called – skip_initial_solution case.
[DBG]  Agents.size()=150, collision_graph.size()=150
[DBG]  agent 28 => updateCollidingPairs => foundCollision
[DBG]  agent 42 => updateCollidingPairs => foundCollision
[DBG]  Conflicting agent pairs:
[DBG]  agent 28 is in conflict with agent 42
[DBG]  buildCollisionData() => sum_of_costs=4280, num_of_colliding_pairs=1
[DBG]  buildCollisionData done => sum_of_costs=4280, num_of_colliding_pairs=1
[DBG]  sum_of_cost hodnota: 4280
[DBG]  After skip/init build => iteration_stats.back(): sum_of_costs=4280, collisions=1
[DEBUG] Using default neighbor generation strategy for conflicts: 1
	InitLNS(PP): runtime = 0.00300708, iterations = 2, colliding pairs = 0, initial colliding pairs = 1, solution cost = 4282, initial solution cost = 4280, failed iterations = 0
[DBG]  init_lns->sum_of_costs after init_lns->run: 4282
[DBG]  sum_of_costs after assignment from init_lns->run: 4282
[DBG]  Recomputing sum_of_cost by dividing neighbor.sum_of_costs and neighbor.old_sum_of_costs
[STAT] sum_of_costs after recomputation: 4282
[STAT] Iteration 102
[DBG]  Random chance did not select SAT operator (r=47), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 102
[DBG]  Random chance did not select SAT operator (r=23), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 102
[DBG]  Random chance did not select SAT operator (r=27), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 102
[DBG]  Random chance did not select SAT operator (r=79), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 102
[DBG]  Random chance did not select SAT operator (r=88), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 102
[DBG]  Random chance did not select SAT operator (r=38), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 102
[DBG]  Random chance did not select SAT operator (r=78), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 102
[DBG]  Random chance did not select SAT operator (r=59), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 102
[DBG]  Using SAT operator (destroy+repair SAT).
[DBG]  ====================
[DBG]  SAT destroy operator called.
[DBG]  SAT heuristic: 2
[DBG]  key_agent_id: 28
[DBG]  key_agent_id global path length: 50
[DBG]  Submap content (global positions):
[DBG]  658 659 660 661 662 
[DBG]  690 691 692 693 694 
[DBG]  722 723 724 725 726 
[DBG]  754 755 756 757 758 
[DBG]  786 787 788 789 790 
[DBG]  Map content with agents and obstacles:
[DBG]  . . . . X 
[DBG]  X . . X X 
[DBG]  . X A A . 
[DBG]  X . . . X 
[DBG]  . . . X . 
[DBG]  content of the map structure that we pass to the SAT solver:
[DBG]  1  1  1  1  -1  
[DBG]  -1  1  1  -1  -1  
[DBG]  1  -1  1  1  1  
[DBG]  -1  1  1  1  -1  
[DBG]  1  1  1  -1  1  
[DBG]  Identifying agents in a submap for rescheduling (when key_agent is there at the time 46):
[DBG]  Agent 28 found intervals in the sub-map:
[DBG]   [0..18] [22..48]
[DBG]  Agent 28 (interval in submap: [22..48]) contains time 46, added to replan.
[DBG]  Agent 42 found intervals in the sub-map:
[DBG]   [42..47]
[DBG]  Agent 42 (interval in submap: [42..47]) contains time 46, added to replan.
[DBG]  Agent 28 | Start (global): 724 -> (local): (2, 2) at time 46 | Goal (global): 726 -> (local): (2, 4) at time 48
[DBG]  Agent 42 | Start (global): 725 -> (local): (2, 3) at time 46 | Goal (global): 726 -> (local): (2, 4) at time 47
[DBG]  [REPAIR] SAT destroy operator called.
[DBG]  [REPAIR] SAT operator – launching subproblem FOR OPTIMIZATION.
[DBG]  Creating local paths (sx, sy) in the submap for T_sync = 46
[DBG]    Agent 28 (global paths from T=46 to 48) has local path: (2,2) (2,3) (2,4) 
[DBG]    Agent 42 (global paths from T=46 to 47) has local path: (2,3) (2,4) 
[DBG]  Checking input data for SAT solver:
[DBG]    - Number of agents to replan: 2
[DBG]  Agent 28 has the original local path length: 3 => Start (2,2), Goal (2,4)
[DBG]  Agent 42 has the original local path length: 2 => Start (2,3), Goal (2,4)
[DBG]  Start position: (2, 2), (2, 3), 
[DBG]  Goal position: (2, 4), (2, 4), 
[DBG]  SAT instance and solver created.
Currently solving
Instance name: scen
Map name: map
Encoding used: disappear_at_goal
SAT solver used: Kissat
Optimizing function: sum of costs
Number of agents: 2
Mks LB: 3
SoC LB: 5
Delta: 0
Remaining time: 300000 [ms]

Found plan [agents = 2] [timesteps = 3]
Agent #0 : 7 8 9 
Agent #1 : 8 9 0 

[STAT] Solver returned: 0
[DBG]  Agent (index) 28 | New local path (submap idx):
[DBG]  7 8 9 
[DBG]  Agent (index) 42 | New local path (submap idx):
[DBG]  8 9 
[DBG]  Update the agent path 28 | Original local length: 3 | New local length: 3
[DBG]  agent 28 t=0 => decoded (sx,sy)=(2,2) => global_id=724
[DBG]  agent 28 t=1 => decoded (sx,sy)=(2,3) => global_id=725
[DBG]  agent 28 t=2 => decoded (sx,sy)=(2,4) => global_id=726
[DBG]  Complete path of agent 28:
[DBG]    Original: 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 629 629 628 660 661 661 661 661 661 661 660 692 724 756 788 787 787 787 787 787 787 787 787 788 756 756 756 724 725 726 727 
[DBG]    New:     661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 629 629 628 660 661 661 661 661 661 661 660 692 724 756 788 787 787 787 787 787 787 787 787 788 756 756 756 724 725 726 727 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 629 629 628 660 661 661 661 661 661 661 660 692 724 756 788 787 787 787 787 787 787 787 787 788 756 756 756 
[DBG]    Local path (in submap): 724 725 726 
[DBG]    Suffix (out of submap): 727 
[DBG]  Original agent path length 28 je: 50
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 0: 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 629, 629, 628, 660, 661, 661, 661, 661, 661, 661, 660, 692, 724, 756, 788, 787, 787, 787, 787, 787, 787, 787, 787, 788, 756, 756, 756, 724, 725, 726, 727, 
[DBG]  Path for agent 28 updated, resulting length: 50
[DBG]  Update the agent path 42 | Original local length: 2 | New local length: 2
[DBG]  agent 42 t=0 => decoded (sx,sy)=(2,3) => global_id=725
[DBG]  agent 42 t=1 => decoded (sx,sy)=(2,4) => global_id=726
[DBG]  Complete path of agent 42:
[DBG]    Original: 224 192 193 194 194 195 195 196 228 228 260 261 293 325 357 389 390 422 423 424 425 426 426 427 428 429 430 462 463 464 465 466 467 468 469 501 533 565 597 629 628 627 659 691 692 724 725 726 727 759 
[DBG]    New:     224 192 193 194 194 195 195 196 228 228 260 261 293 325 357 389 390 422 423 424 425 426 426 427 428 429 430 462 463 464 465 466 467 468 469 501 533 565 597 629 628 627 659 691 692 724 725 726 727 759 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 224 192 193 194 194 195 195 196 228 228 260 261 293 325 357 389 390 422 423 424 425 426 426 427 428 429 430 462 463 464 465 466 467 468 469 501 533 565 597 629 628 627 659 691 692 724 
[DBG]    Local path (in submap): 725 726 
[DBG]    Suffix (out of submap): 727 759 
[DBG]  Original agent path length 42 je: 50
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 1: 224, 192, 193, 194, 194, 195, 195, 196, 228, 228, 260, 261, 293, 325, 357, 389, 390, 422, 423, 424, 425, 426, 426, 427, 428, 429, 430, 462, 463, 464, 465, 466, 467, 468, 469, 501, 533, 565, 597, 629, 628, 627, 659, 691, 692, 724, 725, 726, 727, 759, 
[DBG]  Path for agent 42 updated, resulting length: 50
[DBG]  Paths successfully updated.
[DBG]  (LNS.cpp) New path for agent 28: 
[DBG]  661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 629, 629, 628, 660, 661, 661, 661, 661, 661, 661, 660, 692, 724, 756, 788, 787, 787, 787, 787, 787, 787, 787, 787, 788, 756, 756, 756, 724, 725, 726, 727, 
[DBG]  (LNS.cpp) New path for agent 42: 
[DBG]  224, 192, 193, 194, 194, 195, 195, 196, 228, 228, 260, 261, 293, 325, 357, 389, 390, 422, 423, 424, 425, 426, 426, 427, 428, 429, 430, 462, 463, 464, 465, 466, 467, 468, 469, 501, 533, 565, 597, 629, 628, 627, 659, 691, 692, 724, 725, 726, 727, 759, 
[DBG]  Delta value: 0
[DBG]  Rewarding metric index = 1
[DBG]  component_weights = {0.000323561, 0.999287, 0.000142512, 0.000247082}
[DBG]  opSuccess value: 1
[STAT] neighbor.sum_of_costs before recomputation: 98
[STAT] neighbor.old_sum_of_costs before recomputation: 98
[STAT] sum_of_costs before recomputation: 4282
[DBG]  Validate solution immediately after SAT success.
[DBG]  No problems after SAT replan.
[DBG]  Recomputing sum_of_cost by dividing neighbor.sum_of_costs and neighbor.old_sum_of_costs
[STAT] sum_of_costs after recomputation: 4282
[STAT] Iteration 103
[DBG]  Random chance did not select SAT operator (r=56), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 103
[DBG]  Random chance did not select SAT operator (r=63), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 103
[DBG]  Random chance did not select SAT operator (r=45), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 103
[DBG]  Random chance did not select SAT operator (r=11), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 103
[DBG]  Random chance did not select SAT operator (r=93), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 103
[DBG]  Random chance did not select SAT operator (r=93), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 103
[DBG]  Random chance did not select SAT operator (r=51), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 103
[DBG]  Random chance did not select SAT operator (r=23), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 103
[DBG]  Random chance did not select SAT operator (r=35), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 103
[DBG]  Random chance did not select SAT operator (r=28), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 103
[DBG]  Random chance did not select SAT operator (r=27), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 103
[DBG]  Random chance did not select SAT operator (r=39), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 103
[DBG]  Random chance did not select SAT operator (r=29), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 103
[DBG]  Random chance did not select SAT operator (r=99), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 103
[DBG]  Random chance did not select SAT operator (r=46), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 103
[DBG]  Random chance did not select SAT operator (r=28), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 103
[DBG]  Random chance did not select SAT operator (r=92), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 103
[DBG]  Random chance did not select SAT operator (r=26), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 103
[DBG]  Random chance did not select SAT operator (r=98), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 103
[DBG]  Random chance did not select SAT operator (r=67), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 103
[DBG]  Random chance did not select SAT operator (r=56), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 103
[DBG]  Random chance did not select SAT operator (r=96), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 103
[DBG]  Random chance did not select SAT operator (r=83), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 103
[DBG]  Random chance did not select SAT operator (r=60), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 103
[DBG]  Random chance did not select SAT operator (r=49), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 103
[DBG]  Random chance did not select SAT operator (r=52), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 103
[DBG]  Random chance did not select SAT operator (r=14), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 103
[DBG]  Random chance did not select SAT operator (r=95), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 103
[DBG]  Random chance did not select SAT operator (r=55), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 103
[DBG]  Random chance did not select SAT operator (r=61), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 103
[DBG]  Random chance did not select SAT operator (r=73), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 103
[DBG]  Random chance did not select SAT operator (r=15), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 103
[DBG]  Random chance did not select SAT operator (r=92), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 103
[DBG]  Random chance did not select SAT operator (r=72), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 103
[DBG]  Random chance did not select SAT operator (r=90), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 103
[DBG]  Random chance did not select SAT operator (r=67), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 103
[DBG]  Random chance did not select SAT operator (r=39), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 103
[DBG]  Random chance did not select SAT operator (r=67), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 103
[DBG]  Random chance did not select SAT operator (r=65), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 103
[DBG]  Using SAT operator (destroy+repair SAT).
[DBG]  ====================
[DBG]  SAT destroy operator called.
[DBG]  SAT heuristic: 2
[DBG]  key_agent_id: 28
[DBG]  key_agent_id global path length: 50
[DBG]  Submap content (global positions):
[DBG]  595 596 597 598 599 
[DBG]  627 628 629 630 631 
[DBG]  659 660 661 662 663 
[DBG]  691 692 693 694 695 
[DBG]  723 724 725 726 727 
[DBG]  Map content with agents and obstacles:
[DBG]  X . A X . 
[DBG]  . . A X . 
[DBG]  A . A X X 
[DBG]  . A X X X 
[DBG]  X . . A . 
[DBG]  content of the map structure that we pass to the SAT solver:
[DBG]  -1  1  1  -1  1  
[DBG]  1  1  1  -1  1  
[DBG]  1  1  1  -1  -1  
[DBG]  1  1  -1  -1  -1  
[DBG]  -1  1  1  1  1  
[DBG]  Identifying agents in a submap for rescheduling (when key_agent is there at the time 18):
[DBG]  Agent 28 found intervals in the sub-map:
[DBG]   [0..31] [46..49]
[DBG]  Agent 28 (interval in submap: [0..31]) contains time 18, added to replan.
[DBG]  Agent 30 found intervals in the sub-map:
[DBG]   [17..22]
[DBG]  Agent 30 (interval in submap: [17..22]) contains time 18, added to replan.
[DBG]  Agent 45 found intervals in the sub-map:
[DBG]   [18..23]
[DBG]  Agent 45 (interval in submap: [18..23]) contains time 18, added to replan.
[DBG]  Agent 61 found intervals in the sub-map:
[DBG]  
[DBG]  Agent 61 is not in sub-map at time 18 (intervals: 
[DBG]  )
[DBG]  Agent 86 found intervals in the sub-map:
[DBG]   [17..19]
[DBG]  Agent 86 (interval in submap: [17..19]) contains time 18, added to replan.
[DBG]  Agent 101 found intervals in the sub-map:
[DBG]   [15..18]
[DBG]  Agent 101 (interval in submap: [15..18]) contains time 18, added to replan.
[DBG]  Agent 114 found intervals in the sub-map:
[DBG]   [15..19]
[DBG]  Agent 114 (interval in submap: [15..19]) contains time 18, added to replan.
[DBG]  Agent 28 | Start (global): 661 -> (local): (2, 2) at time 18 | Goal (global): 724 -> (local): (4, 1) at time 31
[DBG]  Agent 30 | Start (global): 692 -> (local): (3, 1) at time 18 | Goal (global): 597 -> (local): (0, 2) at time 22
[DBG]  Agent 45 | Start (global): 597 -> (local): (0, 2) at time 18 | Goal (global): 724 -> (local): (4, 1) at time 23
[DBG]  Agent 86 | Start (global): 726 -> (local): (4, 3) at time 18 | Goal (global): 727 -> (local): (4, 4) at time 19
[DBG]  Agent 101 | Start (global): 659 -> (local): (2, 0) at time 18 | Goal (global): 659 -> (local): (2, 0) at time 18
[DBG]  Agent 114 | Start (global): 629 -> (local): (1, 2) at time 18 | Goal (global): 597 -> (local): (0, 2) at time 19
[DBG]  [REPAIR] SAT destroy operator called.
[DBG]  [REPAIR] SAT operator – launching subproblem FOR OPTIMIZATION.
[DBG]  Creating local paths (sx, sy) in the submap for T_sync = 18
[DBG]    Agent 28 (global paths from T=18 to 31) has local path: (2,2) (1,2) (1,2) (1,1) (2,1) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,1) (3,1) (4,1) 
[DBG]    Agent 30 (global paths from T=18 to 22) has local path: (3,1) (2,1) (2,2) (1,2) (0,2) 
[DBG]    Agent 45 (global paths from T=18 to 23) has local path: (0,2) (0,1) (1,1) (2,1) (3,1) (4,1) 
[DBG]    Agent 86 (global paths from T=18 to 19) has local path: (4,3) (4,4) 
[DBG]    Agent 101 (global paths from T=18 to 18) has local path: (2,0) 
[DBG]    Agent 114 (global paths from T=18 to 19) has local path: (1,2) (0,2) 
[DBG]  Checking input data for SAT solver:
[DBG]    - Number of agents to replan: 6
[DBG]  Agent 28 has the original local path length: 14 => Start (2,2), Goal (4,1)
[DBG]  Agent 30 has the original local path length: 5 => Start (3,1), Goal (0,2)
[DBG]  Agent 45 has the original local path length: 6 => Start (0,2), Goal (4,1)
[DBG]  Agent 86 has the original local path length: 2 => Start (4,3), Goal (4,4)
[DBG]  Agent 101 has the original local path length: 1 => Start (2,0), Goal (2,0)
[DBG]  Agent 114 has the original local path length: 2 => Start (1,2), Goal (0,2)
[DBG]  Start position: (2, 2), (3, 1), (0, 2), (4, 3), (2, 0), (1, 2), 
[DBG]  Goal position: (4, 1), (0, 2), (4, 1), (4, 4), (2, 0), (0, 2), 
[DBG]  SAT instance and solver created.
Currently solving
Instance name: scen
Map name: map
Encoding used: disappear_at_goal
SAT solver used: Kissat
Optimizing function: sum of costs
Number of agents: 6
Mks LB: 6
SoC LB: 20
Delta: 0
Remaining time: 300000 [ms]

[STAT] Solver returned: -1
[DBG]  SAT solver failed.
[STAT] SAT solver failed to find a valid solution.
[DBG]  ====================
[DBG]  SAT destroy operator called.
[DBG]  SAT heuristic: 2
[DBG]  key_agent_id: 28
[DBG]  key_agent_id global path length: 50
[DBG]  Submap content (global positions):
[DBG]  721 722 723 724 725 
[DBG]  753 754 755 756 757 
[DBG]  785 786 787 788 789 
[DBG]  817 818 819 820 821 
[DBG]  849 850 851 852 853 
[DBG]  Map content with agents and obstacles:
[DBG]  . . X . . 
[DBG]  . X . A . 
[DBG]  X . A . X 
[DBG]  . . . . . 
[DBG]  . . . X X 
[DBG]  content of the map structure that we pass to the SAT solver:
[DBG]  1  1  -1  1  1  
[DBG]  1  -1  1  1  1  
[DBG]  -1  1  1  1  -1  
[DBG]  1  1  1  1  1  
[DBG]  1  1  1  -1  -1  
[DBG]  Identifying agents in a submap for rescheduling (when key_agent is there at the time 40):
[DBG]  Agent 28 found intervals in the sub-map:
[DBG]   [31..47]
[DBG]  Agent 28 (interval in submap: [31..47]) contains time 40, added to replan.
[DBG]  Agent 42 found intervals in the sub-map:
[DBG]   [45..46]
[DBG]  Agent 42 is not in sub-map at time 40 (intervals: 
[DBG]  [45..46] )
[DBG]  Agent 45 found intervals in the sub-map:
[DBG]   [23..30]
[DBG]  Agent 45 is not in sub-map at time 40 (intervals: 
[DBG]  [23..30] )
[DBG]  Agent 53 found intervals in the sub-map:
[DBG]   [30..34]
[DBG]  Agent 53 is not in sub-map at time 40 (intervals: 
[DBG]  [30..34] )
[DBG]  Agent 69 found intervals in the sub-map:
[DBG]   [39..42]
[DBG]  Agent 69 (interval in submap: [39..42]) contains time 40, added to replan.
[DBG]  Agent 28 | Start (global): 787 -> (local): (2, 2) at time 40 | Goal (global): 725 -> (local): (0, 4) at time 47
[DBG]  Agent 69 | Start (global): 756 -> (local): (1, 3) at time 40 | Goal (global): 820 -> (local): (3, 3) at time 42
[DBG]  [REPAIR] SAT destroy operator called.
[DBG]  [REPAIR] SAT operator – launching subproblem FOR OPTIMIZATION.
[DBG]  Creating local paths (sx, sy) in the submap for T_sync = 40
[DBG]    Agent 28 (global paths from T=40 to 47) has local path: (2,2) (2,2) (2,3) (1,3) (1,3) (1,3) (0,3) (0,4) 
[DBG]    Agent 69 (global paths from T=40 to 42) has local path: (1,3) (2,3) (3,3) 
[DBG]  Checking input data for SAT solver:
[DBG]    - Number of agents to replan: 2
[DBG]  Agent 28 has the original local path length: 8 => Start (2,2), Goal (0,4)
[DBG]  Agent 69 has the original local path length: 3 => Start (1,3), Goal (3,3)
[DBG]  Start position: (2, 2), (1, 3), 
[DBG]  Goal position: (0, 4), (3, 3), 
[DBG]  SAT instance and solver created.
Currently solving
Instance name: scen
Map name: map
Encoding used: disappear_at_goal
SAT solver used: Kissat
Optimizing function: sum of costs
Number of agents: 2
Mks LB: 5
SoC LB: 8
Delta: 0
Remaining time: 300000 [ms]

Found plan [agents = 2] [timesteps = 5]
Agent #0 : 9 5 6 7 3 
Agent #1 : 6 10 14 0 0 

[STAT] Solver returned: 0
[DBG]  Agent (index) 28 | New local path (submap idx):
[DBG]  9 5 6 7 3 
[DBG]  Agent (index) 69 | New local path (submap idx):
[DBG]  6 10 14 
[DBG]  Update the agent path 28 | Original local length: 8 | New local length: 5
[DBG]  agent 28 t=0 => decoded (sx,sy)=(2,2) => global_id=787
[DBG]  agent 28 t=1 => decoded (sx,sy)=(1,2) => global_id=755
[DBG]  agent 28 t=2 => decoded (sx,sy)=(1,3) => global_id=756
[DBG]  agent 28 t=3 => decoded (sx,sy)=(1,4) => global_id=757
[DBG]  agent 28 t=4 => decoded (sx,sy)=(0,4) => global_id=725
[DBG]  Complete path of agent 28:
[DBG]    Original: 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 629 629 628 660 661 661 661 661 661 661 660 692 724 756 788 787 787 787 787 787 787 787 787 788 756 756 756 724 725 726 727 
[DBG]    New:     661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 629 629 628 660 661 661 661 661 661 661 660 692 724 756 788 787 787 787 787 787 787 787 755 756 757 725 726 727 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 629 629 628 660 661 661 661 661 661 661 660 692 724 756 788 787 787 787 787 787 787 
[DBG]    Local path (in submap): 787 755 756 757 725 726 727 
[DBG]    Suffix (out of submap): 
[DBG]  Original agent path length 28 je: 50
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 0: 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 629, 629, 628, 660, 661, 661, 661, 661, 661, 661, 660, 692, 724, 756, 788, 787, 787, 787, 787, 787, 787, 787, 755, 756, 757, 725, 726, 727, 
[DBG]  Path for agent 28 updated, resulting length: 47
[DBG]  Update the agent path 69 | Original local length: 3 | New local length: 3
[DBG]  agent 69 t=0 => decoded (sx,sy)=(1,3) => global_id=756
[DBG]  agent 69 t=1 => decoded (sx,sy)=(2,3) => global_id=788
[DBG]  agent 69 t=2 => decoded (sx,sy)=(3,3) => global_id=820
[DBG]  Complete path of agent 69:
[DBG]    Original: 4 5 37 69 70 71 72 73 74 106 107 108 140 172 173 205 237 237 269 270 302 303 335 367 368 400 432 464 496 528 529 561 593 625 657 658 659 691 692 724 756 788 820 
[DBG]    New:     4 5 37 69 70 71 72 73 74 106 107 108 140 172 173 205 237 237 269 270 302 303 335 367 368 400 432 464 496 528 529 561 593 625 657 658 659 691 692 724 756 788 820 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 4 5 37 69 70 71 72 73 74 106 107 108 140 172 173 205 237 237 269 270 302 303 335 367 368 400 432 464 496 528 529 561 593 625 657 658 659 691 692 724 
[DBG]    Local path (in submap): 756 788 820 
[DBG]    Suffix (out of submap): 
[DBG]  Original agent path length 69 je: 43
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 1: 4, 5, 37, 69, 70, 71, 72, 73, 74, 106, 107, 108, 140, 172, 173, 205, 237, 237, 269, 270, 302, 303, 335, 367, 368, 400, 432, 464, 496, 528, 529, 561, 593, 625, 657, 658, 659, 691, 692, 724, 756, 788, 820, 
[DBG]  Path for agent 69 updated, resulting length: 43
[DBG]  Paths successfully updated.
[DBG]  (LNS.cpp) New path for agent 28: 
[DBG]  661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 629, 629, 628, 660, 661, 661, 661, 661, 661, 661, 660, 692, 724, 756, 788, 787, 787, 787, 787, 787, 787, 787, 755, 756, 757, 725, 726, 727, 
[DBG]  (LNS.cpp) New path for agent 69: 
[DBG]  4, 5, 37, 69, 70, 71, 72, 73, 74, 106, 107, 108, 140, 172, 173, 205, 237, 237, 269, 270, 302, 303, 335, 367, 368, 400, 432, 464, 496, 528, 529, 561, 593, 625, 657, 658, 659, 691, 692, 724, 756, 788, 820, 
[DBG]  Delta value: 0.032967
[DBG]  Rewarding metric index = 1
[DBG]  component_weights = {0.000297589, 0.999344, 0.000131073, 0.00022725}
[DBG]  opSuccess value: 1
[STAT] neighbor.sum_of_costs before recomputation: 88
[STAT] neighbor.old_sum_of_costs before recomputation: 91
[STAT] sum_of_costs before recomputation: 4282
[DBG]  Validate solution immediately after SAT success.
[WARNING] Problem after SAT: Target conflict: agent 28 (len 46) traverses target of agent 26 (len 35) at location 755 at timestep 41
[DBG]  [DEBUG] Attempting immediate repair via init_lns because problem occurred after SAT (should be applied only for conflicts...).
[DBG]  [DEBUG] Passing 150 agents to init_lns (skip=true).
[DBG]  [DEBUG] path_table contents for selected agents (neighbor.agents):
[DBG]    Agent 28 => controlling path length=47
[DBG]    Agent 69 => controlling path length=43
[DBG]  hodnota skip_initial_solution=1
[DBG]  We skip initialSolution => call buildCollisionData()
[DBG]  buildCollisionData() called – skip_initial_solution case.
[DBG]  Agents.size()=150, collision_graph.size()=150
[DBG]  agent 26 => updateCollidingPairs => foundCollision
[DBG]  agent 28 => updateCollidingPairs => foundCollision
[DBG]  agent 42 => updateCollidingPairs => foundCollision
[DBG]  Conflicting agent pairs:
[DBG]  agent 26 is in conflict with agent 28
[DBG]  agent 28 is in conflict with agent 42
[DBG]  buildCollisionData() => sum_of_costs=4279, num_of_colliding_pairs=2
[DBG]  buildCollisionData done => sum_of_costs=4279, num_of_colliding_pairs=2
[DBG]  sum_of_cost hodnota: 4279
[DBG]  After skip/init build => iteration_stats.back(): sum_of_costs=4279, collisions=2
[DEBUG] Using default neighbor generation strategy for conflicts: 2
	InitLNS(PP): runtime = 0.000892916, iterations = 2, colliding pairs = 0, initial colliding pairs = 2, solution cost = 4279, initial solution cost = 4279, failed iterations = 0
[DBG]  init_lns->sum_of_costs after init_lns->run: 4279
[DBG]  sum_of_costs after assignment from init_lns->run: 4279
[DBG]  Recomputing sum_of_cost by dividing neighbor.sum_of_costs and neighbor.old_sum_of_costs
[STAT] sum_of_costs after recomputation: 4279
[STAT] Iteration 104
[DBG]  Random chance did not select SAT operator (r=19), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 104
[DBG]  Random chance did not select SAT operator (r=52), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 104
[DBG]  Random chance did not select SAT operator (r=91), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 104
[DBG]  Random chance did not select SAT operator (r=58), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 104
[DBG]  Random chance did not select SAT operator (r=39), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 104
[DBG]  Using SAT operator (destroy+repair SAT).
[DBG]  ====================
[DBG]  SAT destroy operator called.
[DBG]  SAT heuristic: 2
[DBG]  key_agent_id: 28
[DBG]  key_agent_id global path length: 50
[DBG]  Submap content (global positions):
[DBG]  690 691 692 693 694 
[DBG]  722 723 724 725 726 
[DBG]  754 755 756 757 758 
[DBG]  786 787 788 789 790 
[DBG]  818 819 820 821 822 
[DBG]  Map content with agents and obstacles:
[DBG]  X . . X X 
[DBG]  . X . . . 
[DBG]  X A A . X 
[DBG]  . . . X . 
[DBG]  . . . . . 
[DBG]  content of the map structure that we pass to the SAT solver:
[DBG]  -1  1  1  -1  -1  
[DBG]  1  -1  1  1  1  
[DBG]  -1  1  1  1  -1  
[DBG]  1  1  1  -1  1  
[DBG]  1  1  1  1  1  
[DBG]  Identifying agents in a submap for rescheduling (when key_agent is there at the time 35):
[DBG]  Agent 26 found intervals in the sub-map:
[DBG]   [32..35]
[DBG]  Agent 26 (interval in submap: [32..35]) contains time 35, added to replan.
[DBG]  Agent 28 found intervals in the sub-map:
[DBG]   [24..48]
[DBG]  Agent 28 (interval in submap: [24..48]) contains time 35, added to replan.
[DBG]  Agent 53 found intervals in the sub-map:
[DBG]   [29..34]
[DBG]  Agent 53 is not in sub-map at time 35 (intervals: 
[DBG]  [29..34] )
[DBG]  Agent 26 | Start (global): 755 -> (local): (2, 1) at time 35 | Goal (global): 755 -> (local): (2, 1) at time 35
[DBG]  Agent 28 | Start (global): 756 -> (local): (2, 2) at time 35 | Goal (global): 726 -> (local): (1, 4) at time 48
[DBG]  [REPAIR] SAT destroy operator called.
[DBG]  [REPAIR] SAT operator – launching subproblem FOR OPTIMIZATION.
[DBG]  Creating local paths (sx, sy) in the submap for T_sync = 35
[DBG]    Agent 26 (global paths from T=35 to 35) has local path: (2,1) 
[DBG]    Agent 28 (global paths from T=35 to 48) has local path: (2,2) (3,2) (3,1) (3,1) (3,1) (3,1) (3,1) (3,2) (2,2) (2,2) (2,2) (1,2) (1,3) (1,4) 
[DBG]  Checking input data for SAT solver:
[DBG]    - Number of agents to replan: 2
[DBG]  Agent 26 has the original local path length: 1 => Start (2,1), Goal (2,1)
[DBG]  Agent 28 has the original local path length: 14 => Start (2,2), Goal (1,4)
[DBG]  Start position: (2, 1), (2, 2), 
[DBG]  Goal position: (2, 1), (1, 4), 
[DBG]  SAT instance and solver created.
Currently solving
Instance name: scen
Map name: map
Encoding used: disappear_at_goal
SAT solver used: Kissat
Optimizing function: sum of costs
Number of agents: 2
Mks LB: 4
SoC LB: 5
Delta: 0
Remaining time: 300000 [ms]

Found plan [agents = 2] [timesteps = 4]
Agent #0 : 6 0 0 0 
Agent #1 : 7 8 4 5 

[STAT] Solver returned: 0
[DBG]  Agent (index) 26 | New local path (submap idx):
[DBG]  6 
[DBG]  Agent (index) 28 | New local path (submap idx):
[DBG]  7 8 4 5 
[DBG]  Update the agent path 26 | Original local length: 1 | New local length: 1
[DBG]  agent 26 t=0 => decoded (sx,sy)=(2,1) => global_id=755
[DBG]  Complete path of agent 26:
[DBG]    Original: 13 14 15 47 48 49 81 82 83 84 116 148 180 212 244 276 277 309 341 373 405 437 469 469 469 501 533 565 597 596 628 660 692 724 756 755 
[DBG]    New:     13 14 15 47 48 49 81 82 83 84 116 148 180 212 244 276 277 309 341 373 405 437 469 469 469 501 533 565 597 596 628 660 692 724 756 755 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 13 14 15 47 48 49 81 82 83 84 116 148 180 212 244 276 277 309 341 373 405 437 469 469 469 501 533 565 597 596 628 660 692 724 756 
[DBG]    Local path (in submap): 755 
[DBG]    Suffix (out of submap): 
[DBG]  Original agent path length 26 je: 36
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 0: 13, 14, 15, 47, 48, 49, 81, 82, 83, 84, 116, 148, 180, 212, 244, 276, 277, 309, 341, 373, 405, 437, 469, 469, 469, 501, 533, 565, 597, 596, 628, 660, 692, 724, 756, 755, 
[DBG]  Path for agent 26 updated, resulting length: 36
[DBG]  Update the agent path 28 | Original local length: 14 | New local length: 4
[DBG]  agent 28 t=0 => decoded (sx,sy)=(2,2) => global_id=756
[DBG]  agent 28 t=1 => decoded (sx,sy)=(2,3) => global_id=757
[DBG]  agent 28 t=2 => decoded (sx,sy)=(1,3) => global_id=725
[DBG]  agent 28 t=3 => decoded (sx,sy)=(1,4) => global_id=726
[DBG]  Complete path of agent 28:
[DBG]    Original: 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 629 629 628 660 659 691 691 691 691 691 691 691 691 691 692 724 756 788 787 787 787 787 787 788 756 756 756 724 725 726 727 
[DBG]    New:     661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 629 629 628 660 659 691 691 691 691 691 691 691 691 691 692 724 756 757 725 726 727 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 629 629 628 660 659 691 691 691 691 691 691 691 691 691 692 724 
[DBG]    Local path (in submap): 756 757 725 726 727 
[DBG]    Suffix (out of submap): 
[DBG]  Original agent path length 28 je: 50
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 1: 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 629, 629, 628, 660, 659, 691, 691, 691, 691, 691, 691, 691, 691, 691, 692, 724, 756, 757, 725, 726, 727, 
[DBG]  Path for agent 28 updated, resulting length: 40
[DBG]  Paths successfully updated.
[DBG]  (LNS.cpp) New path for agent 26: 
[DBG]  13, 14, 15, 47, 48, 49, 81, 82, 83, 84, 116, 148, 180, 212, 244, 276, 277, 309, 341, 373, 405, 437, 469, 469, 469, 501, 533, 565, 597, 596, 628, 660, 692, 724, 756, 755, 
[DBG]  (LNS.cpp) New path for agent 28: 
[DBG]  661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 629, 629, 628, 660, 659, 691, 691, 691, 691, 691, 691, 691, 691, 691, 692, 724, 756, 757, 725, 726, 727, 
[DBG]  Delta value: 0.119048
[DBG]  Rewarding metric index = 1
[DBG]  component_weights = {0.00025266, 0.999443, 0.000111283, 0.00019294}
[DBG]  opSuccess value: 1
[STAT] neighbor.sum_of_costs before recomputation: 74
[STAT] neighbor.old_sum_of_costs before recomputation: 84
[STAT] sum_of_costs before recomputation: 4279
[DBG]  Validate solution immediately after SAT success.
[WARNING] Problem after SAT: Target conflict: agent 42 (len 49) traverses target of agent 28 (len 39) at location 727 at timestep 48
[DBG]  [DEBUG] Attempting immediate repair via init_lns because problem occurred after SAT (should be applied only for conflicts...).
[DBG]  [DEBUG] Passing 150 agents to init_lns (skip=true).
[DBG]  [DEBUG] path_table contents for selected agents (neighbor.agents):
[DBG]    Agent 26 => controlling path length=36
[DBG]    Agent 28 => controlling path length=40
[DBG]  hodnota skip_initial_solution=1
[DBG]  We skip initialSolution => call buildCollisionData()
[DBG]  buildCollisionData() called – skip_initial_solution case.
[DBG]  Agents.size()=150, collision_graph.size()=150
[DBG]  agent 28 => updateCollidingPairs => foundCollision
[DBG]  agent 42 => updateCollidingPairs => foundCollision
[DBG]  Conflicting agent pairs:
[DBG]  agent 28 is in conflict with agent 42
[DBG]  buildCollisionData() => sum_of_costs=4269, num_of_colliding_pairs=1
[DBG]  buildCollisionData done => sum_of_costs=4269, num_of_colliding_pairs=1
[DBG]  sum_of_cost hodnota: 4269
[DBG]  After skip/init build => iteration_stats.back(): sum_of_costs=4269, collisions=1
[DEBUG] Using default neighbor generation strategy for conflicts: 1
[DEBUG] Using default neighbor generation strategy for conflicts: 2
[DEBUG] Using default neighbor generation strategy for conflicts: 0
	InitLNS(PP): runtime = 0.00550079, iterations = 4, colliding pairs = 0, initial colliding pairs = 1, solution cost = 4300, initial solution cost = 4269, failed iterations = 0
[DBG]  init_lns->sum_of_costs after init_lns->run: 4300
[DBG]  sum_of_costs after assignment from init_lns->run: 4300
[DBG]  Recomputing sum_of_cost by dividing neighbor.sum_of_costs and neighbor.old_sum_of_costs
[STAT] sum_of_costs after recomputation: 4300
[STAT] Iteration 105
[DBG]  Random chance did not select SAT operator (r=77), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 105
[DBG]  Random chance did not select SAT operator (r=80), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 105
[DBG]  Random chance did not select SAT operator (r=37), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 105
[DBG]  Random chance did not select SAT operator (r=15), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 105
[DBG]  Random chance did not select SAT operator (r=73), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 105
[DBG]  Random chance did not select SAT operator (r=73), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 105
[DBG]  Random chance did not select SAT operator (r=61), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 105
[DBG]  Random chance did not select SAT operator (r=29), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 105
[DBG]  Random chance did not select SAT operator (r=70), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 105
[DBG]  Using SAT operator (destroy+repair SAT).
[DBG]  ====================
[DBG]  SAT destroy operator called.
[DBG]  SAT heuristic: 2
[DBG]  key_agent_id: 28
[DBG]  key_agent_id global path length: 43
[DBG]  Submap content (global positions):
[DBG]  595 596 597 598 599 
[DBG]  627 628 629 630 631 
[DBG]  659 660 661 662 663 
[DBG]  691 692 693 694 695 
[DBG]  723 724 725 726 727 
[DBG]  Map content with agents and obstacles:
[DBG]  X . A X . 
[DBG]  . . A X . 
[DBG]  . A A X X 
[DBG]  . . X X X 
[DBG]  X . . . . 
[DBG]  content of the map structure that we pass to the SAT solver:
[DBG]  -1  1  1  -1  1  
[DBG]  1  1  1  -1  1  
[DBG]  1  1  1  -1  -1  
[DBG]  1  1  -1  -1  -1  
[DBG]  -1  1  1  1  1  
[DBG]  Identifying agents in a submap for rescheduling (when key_agent is there at the time 28):
[DBG]  Agent 26 found intervals in the sub-map:
[DBG]   [28..33]
[DBG]  Agent 26 (interval in submap: [28..33]) contains time 28, added to replan.
[DBG]  Agent 28 found intervals in the sub-map:
[DBG]   [0..34] [40..42]
[DBG]  Agent 28 (interval in submap: [0..34]) contains time 28, added to replan.
[DBG]  Agent 30 found intervals in the sub-map:
[DBG]   [17..29]
[DBG]  Agent 30 (interval in submap: [17..29]) contains time 28, added to replan.
[DBG]  Agent 53 found intervals in the sub-map:
[DBG]   [25..30]
[DBG]  Agent 53 (interval in submap: [25..30]) contains time 28, added to replan.
[DBG]  Agent 148 found intervals in the sub-map:
[DBG]   [32..33]
[DBG]  Agent 148 is not in sub-map at time 28 (intervals: 
[DBG]  [32..33] )
[DBG]  Agent 26 | Start (global): 597 -> (local): (0, 2) at time 28 | Goal (global): 724 -> (local): (4, 1) at time 33
[DBG]  Agent 28 | Start (global): 661 -> (local): (2, 2) at time 28 | Goal (global): 724 -> (local): (4, 1) at time 34
[DBG]  Agent 30 | Start (global): 629 -> (local): (1, 2) at time 28 | Goal (global): 597 -> (local): (0, 2) at time 29
[DBG]  Agent 53 | Start (global): 660 -> (local): (2, 1) at time 28 | Goal (global): 724 -> (local): (4, 1) at time 30
[DBG]  [REPAIR] SAT destroy operator called.
[DBG]  [REPAIR] SAT operator – launching subproblem FOR OPTIMIZATION.
[DBG]  Creating local paths (sx, sy) in the submap for T_sync = 28
[DBG]    Agent 26 (global paths from T=28 to 33) has local path: (0,2) (0,1) (1,1) (2,1) (3,1) (4,1) 
[DBG]    Agent 28 (global paths from T=28 to 34) has local path: (2,2) (2,2) (2,2) (2,2) (2,1) (3,1) (4,1) 
[DBG]    Agent 30 (global paths from T=28 to 29) has local path: (1,2) (0,2) 
[DBG]    Agent 53 (global paths from T=28 to 30) has local path: (2,1) (3,1) (4,1) 
[DBG]  Checking input data for SAT solver:
[DBG]    - Number of agents to replan: 4
[DBG]  Agent 26 has the original local path length: 6 => Start (0,2), Goal (4,1)
[DBG]  Agent 28 has the original local path length: 7 => Start (2,2), Goal (4,1)
[DBG]  Agent 30 has the original local path length: 2 => Start (1,2), Goal (0,2)
[DBG]  Agent 53 has the original local path length: 3 => Start (2,1), Goal (4,1)
[DBG]  Start position: (0, 2), (2, 2), (1, 2), (2, 1), 
[DBG]  Goal position: (4, 1), (4, 1), (0, 2), (4, 1), 
[DBG]  SAT instance and solver created.
Currently solving
Instance name: scen
Map name: map
Encoding used: disappear_at_goal
SAT solver used: Kissat
Optimizing function: sum of costs
Number of agents: 4
Mks LB: 6
SoC LB: 15
Delta: 0
Remaining time: 300000 [ms]

Vertex conflict! Agents 1, 2, timestep 4, location 0
Swapping conflict! Agents 1, 2, timestep 4, edge (0,0)
Vertex conflict! Agents 1, 2, timestep 5, location 0
Vertex conflict! Agents 1, 3, timestep 4, location 0
Swapping conflict! Agents 1, 3, timestep 4, edge (0,0)
Vertex conflict! Agents 1, 3, timestep 5, location 0
Vertex conflict! Agents 2, 3, timestep 3, location 0
Swapping conflict! Agents 2, 3, timestep 3, edge (0,0)
Vertex conflict! Agents 2, 3, timestep 4, location 0
Swapping conflict! Agents 2, 3, timestep 4, edge (0,0)
Vertex conflict! Agents 2, 3, timestep 5, location 0
Found plan [agents = 4] [timesteps = 6]
Agent #0 : 1 0 4 8 11 12 
Agent #1 : 9 8 11 12 0 0 
Agent #2 : 5 1 0 0 0 0 
Agent #3 : 8 11 12 0 0 0 

[STAT] Solver returned: 0
[DBG]  Agent (index) 26 | New local path (submap idx):
[DBG]  1 0 4 8 11 12 
[DBG]  Agent (index) 28 | New local path (submap idx):
[DBG]  9 8 11 12 
[DBG]  Agent (index) 30 | New local path (submap idx):
[DBG]  5 1 
[DBG]  Agent (index) 53 | New local path (submap idx):
[DBG]  8 11 12 
[DBG]  Update the agent path 26 | Original local length: 6 | New local length: 6
[DBG]  agent 26 t=0 => decoded (sx,sy)=(0,2) => global_id=597
[DBG]  agent 26 t=1 => decoded (sx,sy)=(0,1) => global_id=596
[DBG]  agent 26 t=2 => decoded (sx,sy)=(1,1) => global_id=628
[DBG]  agent 26 t=3 => decoded (sx,sy)=(2,1) => global_id=660
[DBG]  agent 26 t=4 => decoded (sx,sy)=(3,1) => global_id=692
[DBG]  agent 26 t=5 => decoded (sx,sy)=(4,1) => global_id=724
[DBG]  Complete path of agent 26:
[DBG]    Original: 13 14 15 47 48 49 81 82 83 84 116 148 180 212 244 276 277 309 341 373 405 437 469 469 469 501 533 565 597 596 628 660 692 724 756 755 
[DBG]    New:     13 14 15 47 48 49 81 82 83 84 116 148 180 212 244 276 277 309 341 373 405 437 469 469 469 501 533 565 597 596 628 660 692 724 756 755 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 13 14 15 47 48 49 81 82 83 84 116 148 180 212 244 276 277 309 341 373 405 437 469 469 469 501 533 565 
[DBG]    Local path (in submap): 597 596 628 660 692 724 
[DBG]    Suffix (out of submap): 756 755 
[DBG]  Original agent path length 26 je: 36
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 0: 13, 14, 15, 47, 48, 49, 81, 82, 83, 84, 116, 148, 180, 212, 244, 276, 277, 309, 341, 373, 405, 437, 469, 469, 469, 501, 533, 565, 597, 596, 628, 660, 692, 724, 756, 755, 
[DBG]  Path for agent 26 updated, resulting length: 36
[DBG]  Update the agent path 28 | Original local length: 7 | New local length: 4
[DBG]  agent 28 t=0 => decoded (sx,sy)=(2,2) => global_id=661
[DBG]  agent 28 t=1 => decoded (sx,sy)=(2,1) => global_id=660
[DBG]  agent 28 t=2 => decoded (sx,sy)=(3,1) => global_id=692
[DBG]  agent 28 t=3 => decoded (sx,sy)=(4,1) => global_id=724
[DBG]  Complete path of agent 28:
[DBG]    Original: 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 660 692 724 756 757 757 757 757 725 726 727 
[DBG]    New:     661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 660 692 724 756 757 757 757 757 725 726 727 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 
[DBG]    Local path (in submap): 661 660 692 724 756 757 757 
[DBG]    Suffix (out of submap): 757 757 725 726 727 
[DBG]  Original agent path length 28 je: 43
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 1: 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 660, 692, 724, 756, 757, 757, 757, 757, 725, 726, 727, 
[DBG]  Path for agent 28 updated, resulting length: 40
[DBG]  Update the agent path 30 | Original local length: 2 | New local length: 2
[DBG]  agent 30 t=0 => decoded (sx,sy)=(1,2) => global_id=629
[DBG]  agent 30 t=1 => decoded (sx,sy)=(0,2) => global_id=597
[DBG]  Complete path of agent 30:
[DBG]    Original: 922 890 858 857 856 855 854 886 885 884 883 851 819 819 820 788 756 724 692 660 659 627 628 629 629 629 629 629 629 597 565 533 534 502 503 
[DBG]    New:     922 890 858 857 856 855 854 886 885 884 883 851 819 819 820 788 756 724 692 660 659 627 628 629 629 629 629 629 629 597 565 533 534 502 503 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 922 890 858 857 856 855 854 886 885 884 883 851 819 819 820 788 756 724 692 660 659 627 628 629 629 629 629 629 
[DBG]    Local path (in submap): 629 597 
[DBG]    Suffix (out of submap): 565 533 534 502 503 
[DBG]  Original agent path length 30 je: 35
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 2: 922, 890, 858, 857, 856, 855, 854, 886, 885, 884, 883, 851, 819, 819, 820, 788, 756, 724, 692, 660, 659, 627, 628, 629, 629, 629, 629, 629, 629, 597, 565, 533, 534, 502, 503, 
[DBG]  Path for agent 30 updated, resulting length: 35
[DBG]  Update the agent path 53 | Original local length: 3 | New local length: 3
[DBG]  agent 53 t=0 => decoded (sx,sy)=(2,1) => global_id=660
[DBG]  agent 53 t=1 => decoded (sx,sy)=(3,1) => global_id=692
[DBG]  agent 53 t=2 => decoded (sx,sy)=(4,1) => global_id=724
[DBG]  Complete path of agent 53:
[DBG]    Original: 84 116 148 149 150 151 183 215 247 279 311 343 375 407 406 438 470 502 501 533 534 566 566 566 565 597 596 628 660 692 724 756 788 820 821 
[DBG]    New:     84 116 148 149 150 151 183 215 247 279 311 343 375 407 406 438 470 502 501 533 534 566 566 566 565 597 596 628 660 692 724 756 788 820 821 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 84 116 148 149 150 151 183 215 247 279 311 343 375 407 406 438 470 502 501 533 534 566 566 566 565 597 596 628 
[DBG]    Local path (in submap): 660 692 724 
[DBG]    Suffix (out of submap): 756 788 820 821 
[DBG]  Original agent path length 53 je: 35
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 3: 84, 116, 148, 149, 150, 151, 183, 215, 247, 279, 311, 343, 375, 407, 406, 438, 470, 502, 501, 533, 534, 566, 566, 566, 565, 597, 596, 628, 660, 692, 724, 756, 788, 820, 821, 
[DBG]  Path for agent 53 updated, resulting length: 35
[DBG]  Paths successfully updated.
[DBG]  (LNS.cpp) New path for agent 26: 
[DBG]  13, 14, 15, 47, 48, 49, 81, 82, 83, 84, 116, 148, 180, 212, 244, 276, 277, 309, 341, 373, 405, 437, 469, 469, 469, 501, 533, 565, 597, 596, 628, 660, 692, 724, 756, 755, 
[DBG]  (LNS.cpp) New path for agent 28: 
[DBG]  661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 660, 692, 724, 756, 757, 757, 757, 757, 725, 726, 727, 
[DBG]  (LNS.cpp) New path for agent 30: 
[DBG]  922, 890, 858, 857, 856, 855, 854, 886, 885, 884, 883, 851, 819, 819, 820, 788, 756, 724, 692, 660, 659, 627, 628, 629, 629, 629, 629, 629, 629, 597, 565, 533, 534, 502, 503, 
[DBG]  (LNS.cpp) New path for agent 53: 
[DBG]  84, 116, 148, 149, 150, 151, 183, 215, 247, 279, 311, 343, 375, 407, 406, 438, 470, 502, 501, 533, 534, 566, 566, 566, 565, 597, 596, 628, 660, 692, 724, 756, 788, 820, 821, 
[DBG]  Delta value: 0.0206897
[DBG]  Rewarding metric index = 1
[DBG]  component_weights = {0.00023517, 0.999482, 0.00010358, 0.000179584}
[DBG]  opSuccess value: 1
[STAT] neighbor.sum_of_costs before recomputation: 142
[STAT] neighbor.old_sum_of_costs before recomputation: 145
[STAT] sum_of_costs before recomputation: 4300
[DBG]  Validate solution immediately after SAT success.
[WARNING] Problem after SAT: Target conflict: agent 42 (len 42) traverses target of agent 28 (len 39) at location 727 at timestep 41
[DBG]  [DEBUG] Attempting immediate repair via init_lns because problem occurred after SAT (should be applied only for conflicts...).
[DBG]  [DEBUG] Passing 150 agents to init_lns (skip=true).
[DBG]  [DEBUG] path_table contents for selected agents (neighbor.agents):
[DBG]    Agent 26 => controlling path length=36
[DBG]    Agent 28 => controlling path length=40
[DBG]    Agent 30 => controlling path length=35
[DBG]    Agent 53 => controlling path length=35
[DBG]  hodnota skip_initial_solution=1
[DBG]  We skip initialSolution => call buildCollisionData()
[DBG]  buildCollisionData() called – skip_initial_solution case.
[DBG]  Agents.size()=150, collision_graph.size()=150
[DBG]  agent 28 => updateCollidingPairs => foundCollision
[DBG]  agent 42 => updateCollidingPairs => foundCollision
[DBG]  Conflicting agent pairs:
[DBG]  agent 28 is in conflict with agent 42
[DBG]  buildCollisionData() => sum_of_costs=4297, num_of_colliding_pairs=1
[DBG]  buildCollisionData done => sum_of_costs=4297, num_of_colliding_pairs=1
[DBG]  sum_of_cost hodnota: 4297
[DBG]  After skip/init build => iteration_stats.back(): sum_of_costs=4297, collisions=1
[DEBUG] Using default neighbor generation strategy for conflicts: 0
	InitLNS(PP): runtime = 0.000483167, iterations = 2, colliding pairs = 0, initial colliding pairs = 1, solution cost = 4300, initial solution cost = 4297, failed iterations = 0
[DBG]  init_lns->sum_of_costs after init_lns->run: 4300
[DBG]  sum_of_costs after assignment from init_lns->run: 4300
[DBG]  Recomputing sum_of_cost by dividing neighbor.sum_of_costs and neighbor.old_sum_of_costs
[STAT] sum_of_costs after recomputation: 4300
[STAT] Iteration 106
[DBG]  Random chance did not select SAT operator (r=41), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 106
[DBG]  Random chance did not select SAT operator (r=26), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 106
[DBG]  Random chance did not select SAT operator (r=93), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 106
[DBG]  Random chance did not select SAT operator (r=88), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 106
[DBG]  Random chance did not select SAT operator (r=22), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 106
[DBG]  Using SAT operator (destroy+repair SAT).
[DBG]  ====================
[DBG]  SAT destroy operator called.
[DBG]  SAT heuristic: 2
[DBG]  key_agent_id: 28
[DBG]  key_agent_id global path length: 43
[DBG]  Submap content (global positions):
[DBG]  595 596 597 598 599 
[DBG]  627 628 629 630 631 
[DBG]  659 660 661 662 663 
[DBG]  691 692 693 694 695 
[DBG]  723 724 725 726 727 
[DBG]  Map content with agents and obstacles:
[DBG]  X . . X . 
[DBG]  . . . X . 
[DBG]  A A A X X 
[DBG]  . . X X X 
[DBG]  X . A . . 
[DBG]  content of the map structure that we pass to the SAT solver:
[DBG]  -1  1  1  -1  1  
[DBG]  1  1  1  -1  1  
[DBG]  1  1  1  -1  -1  
[DBG]  1  1  -1  -1  -1  
[DBG]  -1  1  1  1  1  
[DBG]  Identifying agents in a submap for rescheduling (when key_agent is there at the time 8):
[DBG]  Agent 28 found intervals in the sub-map:
[DBG]   [0..34] [40..42]
[DBG]  Agent 28 (interval in submap: [0..34]) contains time 8, added to replan.
[DBG]  Agent 46 found intervals in the sub-map:
[DBG]   [11..13]
[DBG]  Agent 46 is not in sub-map at time 8 (intervals: 
[DBG]  [11..13] )
[DBG]  Agent 70 found intervals in the sub-map:
[DBG]   [6..11]
[DBG]  Agent 70 (interval in submap: [6..11]) contains time 8, added to replan.
[DBG]  Agent 74 found intervals in the sub-map:
[DBG]   [9..13]
[DBG]  Agent 74 is not in sub-map at time 8 (intervals: 
[DBG]  [9..13] )
[DBG]  Agent 89 found intervals in the sub-map:
[DBG]   [5..10]
[DBG]  Agent 89 (interval in submap: [5..10]) contains time 8, added to replan.
[DBG]  Agent 91 found intervals in the sub-map:
[DBG]   [4..14]
[DBG]  Agent 91 (interval in submap: [4..14]) contains time 8, added to replan.
[DBG]  Agent 28 | Start (global): 661 -> (local): (2, 2) at time 8 | Goal (global): 724 -> (local): (4, 1) at time 34
[DBG]  Agent 70 | Start (global): 725 -> (local): (4, 2) at time 8 | Goal (global): 724 -> (local): (4, 1) at time 11
[DBG]  Agent 89 | Start (global): 660 -> (local): (2, 1) at time 8 | Goal (global): 724 -> (local): (4, 1) at time 10
[DBG]  Agent 91 | Start (global): 659 -> (local): (2, 0) at time 8 | Goal (global): 597 -> (local): (0, 2) at time 14
[DBG]  [REPAIR] SAT destroy operator called.
[DBG]  [REPAIR] SAT operator – launching subproblem FOR OPTIMIZATION.
[DBG]  Creating local paths (sx, sy) in the submap for T_sync = 8
[DBG]    Agent 28 (global paths from T=8 to 34) has local path: (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,1) (3,1) (4,1) 
[DBG]    Agent 70 (global paths from T=8 to 11) has local path: (4,2) (4,2) (4,2) (4,1) 
[DBG]    Agent 89 (global paths from T=8 to 10) has local path: (2,1) (3,1) (4,1) 
[DBG]    Agent 91 (global paths from T=8 to 14) has local path: (2,0) (2,1) (1,1) (0,1) (0,1) (0,1) (0,2) 
[DBG]  Checking input data for SAT solver:
[DBG]    - Number of agents to replan: 4
[DBG]  Agent 28 has the original local path length: 27 => Start (2,2), Goal (4,1)
[DBG]  Agent 70 has the original local path length: 4 => Start (4,2), Goal (4,1)
[DBG]  Agent 89 has the original local path length: 3 => Start (2,1), Goal (4,1)
[DBG]  Agent 91 has the original local path length: 7 => Start (2,0), Goal (0,2)
[DBG]  Start position: (2, 2), (4, 2), (2, 1), (2, 0), 
[DBG]  Goal position: (4, 1), (4, 1), (4, 1), (0, 2), 
[DBG]  SAT instance and solver created.
Currently solving
Instance name: scen
Map name: map
Encoding used: disappear_at_goal
SAT solver used: Kissat
Optimizing function: sum of costs
Number of agents: 4
Mks LB: 5
SoC LB: 14
Delta: 0
Remaining time: 300000 [ms]

Vertex conflict! Agents 0, 1, timestep 4, location 0
Vertex conflict! Agents 0, 2, timestep 4, location 0
Vertex conflict! Agents 1, 2, timestep 3, location 0
Swapping conflict! Agents 1, 2, timestep 3, edge (0,0)
Vertex conflict! Agents 1, 2, timestep 4, location 0
Found plan [agents = 4] [timesteps = 5]
Agent #0 : 9 8 11 12 0 
Agent #1 : 13 12 0 0 0 
Agent #2 : 8 11 12 0 0 
Agent #3 : 7 3 4 5 1 

[STAT] Solver returned: 0
[DBG]  Agent (index) 28 | New local path (submap idx):
[DBG]  9 8 11 12 
[DBG]  Agent (index) 70 | New local path (submap idx):
[DBG]  13 12 
[DBG]  Agent (index) 89 | New local path (submap idx):
[DBG]  8 11 12 
[DBG]  Agent (index) 91 | New local path (submap idx):
[DBG]  7 3 4 5 1 
[DBG]  Update the agent path 28 | Original local length: 27 | New local length: 4
[DBG]  agent 28 t=0 => decoded (sx,sy)=(2,2) => global_id=661
[DBG]  agent 28 t=1 => decoded (sx,sy)=(2,1) => global_id=660
[DBG]  agent 28 t=2 => decoded (sx,sy)=(3,1) => global_id=692
[DBG]  agent 28 t=3 => decoded (sx,sy)=(4,1) => global_id=724
[DBG]  Complete path of agent 28:
[DBG]    Original: 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 660 692 724 756 757 757 757 757 725 726 727 
[DBG]    New:     661 661 661 661 661 661 661 661 661 660 692 724 756 757 757 757 757 725 726 727 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 661 661 661 661 661 661 661 661 
[DBG]    Local path (in submap): 661 660 692 724 756 757 757 757 757 725 726 727 
[DBG]    Suffix (out of submap): 
[DBG]  Original agent path length 28 je: 43
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 0: 661, 661, 661, 661, 661, 661, 661, 661, 661, 660, 692, 724, 756, 757, 757, 757, 757, 725, 726, 727, 
[DBG]  Path for agent 28 updated, resulting length: 20
[DBG]  Update the agent path 70 | Original local length: 4 | New local length: 2
[DBG]  agent 70 t=0 => decoded (sx,sy)=(4,2) => global_id=725
[DBG]  agent 70 t=1 => decoded (sx,sy)=(4,1) => global_id=724
[DBG]  Complete path of agent 70:
[DBG]    Original: 632 600 632 664 696 728 727 726 725 725 725 724 756 755 787 819 818 817 849 849 849 881 880 912 944 976 975 974 
[DBG]    New:     632 600 632 664 696 728 727 726 725 724 756 755 787 819 818 817 849 849 849 881 880 912 944 976 975 974 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 632 600 632 664 696 728 727 726 
[DBG]    Local path (in submap): 725 724 756 755 
[DBG]    Suffix (out of submap): 787 819 818 817 849 849 849 881 880 912 944 976 975 974 
[DBG]  Original agent path length 70 je: 28
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 1: 632, 600, 632, 664, 696, 728, 727, 726, 725, 724, 756, 755, 787, 819, 818, 817, 849, 849, 849, 881, 880, 912, 944, 976, 975, 974, 
[DBG]  Path for agent 70 updated, resulting length: 26
[DBG]  Update the agent path 89 | Original local length: 3 | New local length: 3
[DBG]  agent 89 t=0 => decoded (sx,sy)=(2,1) => global_id=660
[DBG]  agent 89 t=1 => decoded (sx,sy)=(3,1) => global_id=692
[DBG]  agent 89 t=2 => decoded (sx,sy)=(4,1) => global_id=724
[DBG]  Complete path of agent 89:
[DBG]    Original: 437 469 501 533 565 597 596 628 660 692 724 756 788 820 821 822 854 886 918 950 982 983 1015 
[DBG]    New:     437 469 501 533 565 597 596 628 660 692 724 756 788 820 821 822 854 886 918 950 982 983 1015 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 437 469 501 533 565 597 596 628 
[DBG]    Local path (in submap): 660 692 724 
[DBG]    Suffix (out of submap): 756 788 820 821 822 854 886 918 950 982 983 1015 
[DBG]  Original agent path length 89 je: 23
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 2: 437, 469, 501, 533, 565, 597, 596, 628, 660, 692, 724, 756, 788, 820, 821, 822, 854, 886, 918, 950, 982, 983, 1015, 
[DBG]  Path for agent 89 updated, resulting length: 23
[DBG]  Update the agent path 91 | Original local length: 7 | New local length: 5
[DBG]  agent 91 t=0 => decoded (sx,sy)=(2,0) => global_id=659
[DBG]  agent 91 t=1 => decoded (sx,sy)=(1,0) => global_id=627
[DBG]  agent 91 t=2 => decoded (sx,sy)=(1,1) => global_id=628
[DBG]  agent 91 t=3 => decoded (sx,sy)=(1,2) => global_id=629
[DBG]  agent 91 t=4 => decoded (sx,sy)=(0,2) => global_id=597
[DBG]  Complete path of agent 91:
[DBG]    Original: 787 755 756 756 724 692 660 659 659 660 628 596 596 596 597 565 566 566 566 534 502 470 470 438 439 440 472 473 474 475 443 411 412 380 381 
[DBG]    New:     787 755 756 756 724 692 660 659 659 627 628 629 597 565 566 566 566 534 502 470 470 438 439 440 472 473 474 475 443 411 412 380 381 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 787 755 756 756 724 692 660 659 
[DBG]    Local path (in submap): 659 627 628 629 597 565 566 
[DBG]    Suffix (out of submap): 566 566 534 502 470 470 438 439 440 472 473 474 475 443 411 412 380 381 
[DBG]  Original agent path length 91 je: 35
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 3: 787, 755, 756, 756, 724, 692, 660, 659, 659, 627, 628, 629, 597, 565, 566, 566, 566, 534, 502, 470, 470, 438, 439, 440, 472, 473, 474, 475, 443, 411, 412, 380, 381, 
[DBG]  Path for agent 91 updated, resulting length: 33
[DBG]  Paths successfully updated.
[DBG]  (LNS.cpp) New path for agent 28: 
[DBG]  661, 661, 661, 661, 661, 661, 661, 661, 661, 660, 692, 724, 756, 757, 757, 757, 757, 725, 726, 727, 
[DBG]  (LNS.cpp) New path for agent 70: 
[DBG]  632, 600, 632, 664, 696, 728, 727, 726, 725, 724, 756, 755, 787, 819, 818, 817, 849, 849, 849, 881, 880, 912, 944, 976, 975, 974, 
[DBG]  (LNS.cpp) New path for agent 89: 
[DBG]  437, 469, 501, 533, 565, 597, 596, 628, 660, 692, 724, 756, 788, 820, 821, 822, 854, 886, 918, 950, 982, 983, 1015, 
[DBG]  (LNS.cpp) New path for agent 91: 
[DBG]  787, 755, 756, 756, 724, 692, 660, 659, 659, 627, 628, 629, 597, 565, 566, 566, 566, 534, 502, 470, 470, 438, 439, 440, 472, 473, 474, 475, 443, 411, 412, 380, 381, 
[DBG]  Delta value: 0.216
[DBG]  Rewarding metric index = 1
[DBG]  component_weights = {0.000183748, 0.999595, 8.09313e-05, 0.000140316}
[DBG]  opSuccess value: 1
[STAT] neighbor.sum_of_costs before recomputation: 98
[STAT] neighbor.old_sum_of_costs before recomputation: 125
[STAT] sum_of_costs before recomputation: 4300
[DBG]  Validate solution immediately after SAT success.
[WARNING] Problem after SAT: Vertex conflict between agents 70 and 4 at location 881 at timestep 19
[DBG]  [DEBUG] Attempting immediate repair via init_lns because problem occurred after SAT (should be applied only for conflicts...).
[DBG]  [DEBUG] Passing 150 agents to init_lns (skip=true).
[DBG]  [DEBUG] path_table contents for selected agents (neighbor.agents):
[DBG]    Agent 28 => controlling path length=20
[DBG]    Agent 70 => controlling path length=26
[DBG]    Agent 89 => controlling path length=23
[DBG]    Agent 91 => controlling path length=33
[DBG]  hodnota skip_initial_solution=1
[DBG]  We skip initialSolution => call buildCollisionData()
[DBG]  buildCollisionData() called – skip_initial_solution case.
[DBG]  Agents.size()=150, collision_graph.size()=150
[DBG]  agent 4 => updateCollidingPairs => foundCollision
[DBG]  agent 28 => updateCollidingPairs => foundCollision
[DBG]  agent 30 => updateCollidingPairs => foundCollision
[DBG]  agent 33 => updateCollidingPairs => foundCollision
[DBG]  agent 35 => updateCollidingPairs => foundCollision
[DBG]  agent 42 => updateCollidingPairs => foundCollision
[DBG]  agent 70 => updateCollidingPairs => foundCollision
[DBG]  agent 74 => updateCollidingPairs => foundCollision
[DBG]  agent 85 => updateCollidingPairs => foundCollision
[DBG]  agent 86 => updateCollidingPairs => foundCollision
[DBG]  agent 91 => updateCollidingPairs => foundCollision
[DBG]  agent 101 => updateCollidingPairs => foundCollision
[DBG]  agent 111 => updateCollidingPairs => foundCollision
[DBG]  agent 119 => updateCollidingPairs => foundCollision
[DBG]  agent 135 => updateCollidingPairs => foundCollision
[DBG]  Conflicting agent pairs:
[DBG]  agent 4 is in conflict with agent 70
[DBG]  agent 28 is in conflict with agent 42
[DBG]  agent 28 is in conflict with agent 86
[DBG]  agent 28 is in conflict with agent 111
[DBG]  agent 30 is in conflict with agent 70
[DBG]  agent 33 is in conflict with agent 91
[DBG]  agent 35 is in conflict with agent 70
[DBG]  agent 70 is in conflict with agent 85
[DBG]  agent 70 is in conflict with agent 101
[DBG]  agent 74 is in conflict with agent 91
[DBG]  agent 91 is in conflict with agent 119
[DBG]  agent 91 is in conflict with agent 135
[DBG]  buildCollisionData() => sum_of_costs=4273, num_of_colliding_pairs=12
[DBG]  buildCollisionData done => sum_of_costs=4273, num_of_colliding_pairs=12
[DBG]  sum_of_cost hodnota: 4273
[DBG]  After skip/init build => iteration_stats.back(): sum_of_costs=4273, collisions=12
[DEBUG] Using default neighbor generation strategy for conflicts: 1
[DEBUG] Using default neighbor generation strategy for conflicts: 0
[DEBUG] Using default neighbor generation strategy for conflicts: 2
	InitLNS(PP): runtime = 0.00562229, iterations = 4, colliding pairs = 0, initial colliding pairs = 12, solution cost = 4331, initial solution cost = 4273, failed iterations = 0
[DBG]  init_lns->sum_of_costs after init_lns->run: 4331
[DBG]  sum_of_costs after assignment from init_lns->run: 4331
[DBG]  Recomputing sum_of_cost by dividing neighbor.sum_of_costs and neighbor.old_sum_of_costs
[STAT] sum_of_costs after recomputation: 4331
[STAT] Iteration 107
[DBG]  Random chance did not select SAT operator (r=41), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 107
[DBG]  Random chance did not select SAT operator (r=92), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 107
[DBG]  Random chance did not select SAT operator (r=13), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 107
[DBG]  Random chance did not select SAT operator (r=46), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 107
[DBG]  Using SAT operator (destroy+repair SAT).
[DBG]  ====================
[DBG]  SAT destroy operator called.
[DBG]  SAT heuristic: 2
[DBG]  key_agent_id: 28
[DBG]  key_agent_id global path length: 43
[DBG]  Submap content (global positions):
[DBG]  595 596 597 598 599 
[DBG]  627 628 629 630 631 
[DBG]  659 660 661 662 663 
[DBG]  691 692 693 694 695 
[DBG]  723 724 725 726 727 
[DBG]  Map content with agents and obstacles:
[DBG]  X . . X . 
[DBG]  . . . X . 
[DBG]  . . A X X 
[DBG]  . . X X X 
[DBG]  X A . . . 
[DBG]  content of the map structure that we pass to the SAT solver:
[DBG]  -1  1  1  -1  1  
[DBG]  1  1  1  -1  1  
[DBG]  1  1  1  -1  -1  
[DBG]  1  1  -1  -1  -1  
[DBG]  -1  1  1  1  1  
[DBG]  Identifying agents in a submap for rescheduling (when key_agent is there at the time 3):
[DBG]  Agent 7 found intervals in the sub-map:
[DBG]  
[DBG]  Agent 7 is not in sub-map at time 3 (intervals: 
[DBG]  )
[DBG]  Agent 17 found intervals in the sub-map:
[DBG]  
[DBG]  Agent 17 is not in sub-map at time 3 (intervals: 
[DBG]  )
[DBG]  Agent 28 found intervals in the sub-map:
[DBG]   [0..34] [40..42]
[DBG]  Agent 28 (interval in submap: [0..34]) contains time 3, added to replan.
[DBG]  Agent 108 found intervals in the sub-map:
[DBG]   [0..5]
[DBG]  Agent 108 (interval in submap: [0..5]) contains time 3, added to replan.
[DBG]  Agent 28 | Start (global): 661 -> (local): (2, 2) at time 3 | Goal (global): 724 -> (local): (4, 1) at time 34
[DBG]  Agent 108 | Start (global): 724 -> (local): (4, 1) at time 3 | Goal (global): 724 -> (local): (4, 1) at time 5
[DBG]  [REPAIR] SAT destroy operator called.
[DBG]  [REPAIR] SAT operator – launching subproblem FOR OPTIMIZATION.
[DBG]  Creating local paths (sx, sy) in the submap for T_sync = 3
[DBG]    Agent 28 (global paths from T=3 to 34) has local path: (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,1) (3,1) (4,1) 
[DBG]    Agent 108 (global paths from T=3 to 5) has local path: (4,1) (4,2) (4,1) 
[DBG]  Checking input data for SAT solver:
[DBG]    - Number of agents to replan: 2
[DBG]  Agent 28 has the original local path length: 32 => Start (2,2), Goal (4,1)
[DBG]  Agent 108 has the original local path length: 3 => Start (4,1), Goal (4,1)
[DBG]  Start position: (2, 2), (4, 1), 
[DBG]  Goal position: (4, 1), (4, 1), 
[DBG]  SAT instance and solver created.
Currently solving
Instance name: scen
Map name: map
Encoding used: disappear_at_goal
SAT solver used: Kissat
Optimizing function: sum of costs
Number of agents: 2
Mks LB: 4
SoC LB: 5
Delta: 0
Remaining time: 300000 [ms]

Found plan [agents = 2] [timesteps = 4]
Agent #0 : 9 8 11 12 
Agent #1 : 12 0 0 0 

[STAT] Solver returned: 0
[DBG]  Agent (index) 28 | New local path (submap idx):
[DBG]  9 8 11 12 
[DBG]  Agent (index) 108 | New local path (submap idx):
[DBG]  12 
[DBG]  Update the agent path 28 | Original local length: 32 | New local length: 4
[DBG]  agent 28 t=0 => decoded (sx,sy)=(2,2) => global_id=661
[DBG]  agent 28 t=1 => decoded (sx,sy)=(2,1) => global_id=660
[DBG]  agent 28 t=2 => decoded (sx,sy)=(3,1) => global_id=692
[DBG]  agent 28 t=3 => decoded (sx,sy)=(4,1) => global_id=724
[DBG]  Complete path of agent 28:
[DBG]    Original: 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 660 692 724 756 757 757 757 757 725 726 727 
[DBG]    New:     661 661 661 661 660 692 724 756 757 757 757 757 725 726 727 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 661 661 661 
[DBG]    Local path (in submap): 661 660 692 724 756 757 757 757 757 725 726 727 
[DBG]    Suffix (out of submap): 
[DBG]  Original agent path length 28 je: 43
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 0: 661, 661, 661, 661, 660, 692, 724, 756, 757, 757, 757, 757, 725, 726, 727, 
[DBG]  Path for agent 28 updated, resulting length: 15
[DBG]  Update the agent path 108 | Original local length: 3 | New local length: 1
[DBG]  agent 108 t=0 => decoded (sx,sy)=(4,1) => global_id=724
[DBG]  Complete path of agent 108:
[DBG]    Original: 628 660 692 724 725 724 756 788 820 821 822 854 855 856 857 858 859 860 892 924 956 957 989 1021 
[DBG]    New:     628 660 692 724 756 788 820 821 822 854 855 856 857 858 859 860 892 924 956 957 989 1021 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 628 660 692 
[DBG]    Local path (in submap): 724 756 788 
[DBG]    Suffix (out of submap): 820 821 822 854 855 856 857 858 859 860 892 924 956 957 989 1021 
[DBG]  Original agent path length 108 je: 24
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 1: 628, 660, 692, 724, 756, 788, 820, 821, 822, 854, 855, 856, 857, 858, 859, 860, 892, 924, 956, 957, 989, 1021, 
[DBG]  Path for agent 108 updated, resulting length: 22
[DBG]  Paths successfully updated.
[DBG]  (LNS.cpp) New path for agent 28: 
[DBG]  661, 661, 661, 661, 660, 692, 724, 756, 757, 757, 757, 757, 725, 726, 727, 
[DBG]  (LNS.cpp) New path for agent 108: 
[DBG]  628, 660, 692, 724, 756, 788, 820, 821, 822, 854, 855, 856, 857, 858, 859, 860, 892, 924, 956, 957, 989, 1021, 
[DBG]  Delta value: 0.461538
[DBG]  Rewarding metric index = 1
[DBG]  component_weights = {0.000119453, 0.999737, 5.26128e-05, 9.12183e-05}
[DBG]  opSuccess value: 1
[STAT] neighbor.sum_of_costs before recomputation: 35
[STAT] neighbor.old_sum_of_costs before recomputation: 65
[STAT] sum_of_costs before recomputation: 4331
[DBG]  Validate solution immediately after SAT success.
[WARNING] Problem after SAT: Vertex conflict between agents 7 and 108 at location 788 at timestep 5
[DBG]  [DEBUG] Attempting immediate repair via init_lns because problem occurred after SAT (should be applied only for conflicts...).
[DBG]  [DEBUG] Passing 150 agents to init_lns (skip=true).
[DBG]  [DEBUG] path_table contents for selected agents (neighbor.agents):
[DBG]    Agent 28 => controlling path length=15
[DBG]    Agent 108 => controlling path length=22
[DBG]  hodnota skip_initial_solution=1
[DBG]  We skip initialSolution => call buildCollisionData()
[DBG]  buildCollisionData() called – skip_initial_solution case.
[DBG]  Agents.size()=150, collision_graph.size()=150
[DBG]  agent 7 => updateCollidingPairs => foundCollision
[DBG]  agent 28 => updateCollidingPairs => foundCollision
[DBG]  agent 35 => updateCollidingPairs => foundCollision
[DBG]  agent 38 => updateCollidingPairs => foundCollision
[DBG]  agent 42 => updateCollidingPairs => foundCollision
[DBG]  agent 46 => updateCollidingPairs => foundCollision
[DBG]  agent 86 => updateCollidingPairs => foundCollision
[DBG]  agent 91 => updateCollidingPairs => foundCollision
[DBG]  agent 108 => updateCollidingPairs => foundCollision
[DBG]  agent 135 => updateCollidingPairs => foundCollision
[DBG]  Conflicting agent pairs:
[DBG]  agent 7 is in conflict with agent 108
[DBG]  agent 28 is in conflict with agent 42
[DBG]  agent 28 is in conflict with agent 46
[DBG]  agent 28 is in conflict with agent 86
[DBG]  agent 28 is in conflict with agent 91
[DBG]  agent 35 is in conflict with agent 108
[DBG]  agent 38 is in conflict with agent 108
[DBG]  agent 46 is in conflict with agent 108
[DBG]  agent 91 is in conflict with agent 108
[DBG]  agent 108 is in conflict with agent 135
[DBG]  buildCollisionData() => sum_of_costs=4301, num_of_colliding_pairs=10
[DBG]  buildCollisionData done => sum_of_costs=4301, num_of_colliding_pairs=10
[DBG]  sum_of_cost hodnota: 4301
[DBG]  After skip/init build => iteration_stats.back(): sum_of_costs=4301, collisions=10
[DEBUG] Using default neighbor generation strategy for conflicts: 1
	InitLNS(PP): runtime = 0.000900958, iterations = 2, colliding pairs = 0, initial colliding pairs = 10, solution cost = 4337, initial solution cost = 4301, failed iterations = 0
[DBG]  init_lns->sum_of_costs after init_lns->run: 4337
[DBG]  sum_of_costs after assignment from init_lns->run: 4337
[DBG]  Recomputing sum_of_cost by dividing neighbor.sum_of_costs and neighbor.old_sum_of_costs
[STAT] sum_of_costs after recomputation: 4337
[STAT] Iteration 108
[DBG]  Random chance did not select SAT operator (r=19), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 108
[DBG]  Random chance did not select SAT operator (r=79), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 108
[DBG]  Random chance did not select SAT operator (r=32), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 108
[DBG]  Random chance did not select SAT operator (r=36), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 108
[DBG]  Random chance did not select SAT operator (r=47), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 108
[DBG]  Random chance did not select SAT operator (r=10), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 108
[DBG]  Random chance did not select SAT operator (r=69), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 108
[DBG]  Random chance did not select SAT operator (r=86), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 108
[DBG]  Random chance did not select SAT operator (r=79), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 108
[DBG]  Random chance did not select SAT operator (r=10), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 108
[DBG]  Random chance did not select SAT operator (r=53), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 108
[DBG]  Random chance did not select SAT operator (r=14), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 108
[DBG]  Random chance did not select SAT operator (r=14), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 108
[DBG]  Random chance did not select SAT operator (r=48), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 108
[DBG]  Random chance did not select SAT operator (r=92), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 108
[DBG]  Random chance did not select SAT operator (r=21), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 108
[DBG]  Random chance did not select SAT operator (r=41), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 108
[DBG]  Random chance did not select SAT operator (r=27), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 108
[DBG]  Using SAT operator (destroy+repair SAT).
[DBG]  ====================
[DBG]  SAT destroy operator called.
[DBG]  SAT heuristic: 2
[DBG]  key_agent_id: 28
[DBG]  key_agent_id global path length: 43
[DBG]  Submap content (global positions):
[DBG]  595 596 597 598 599 
[DBG]  627 628 629 630 631 
[DBG]  659 660 661 662 663 
[DBG]  691 692 693 694 695 
[DBG]  723 724 725 726 727 
[DBG]  Map content with agents and obstacles:
[DBG]  X . . X . 
[DBG]  A . . X . 
[DBG]  . . A X X 
[DBG]  . . X X X 
[DBG]  X A . . . 
[DBG]  content of the map structure that we pass to the SAT solver:
[DBG]  -1  1  1  -1  1  
[DBG]  1  1  1  -1  1  
[DBG]  1  1  1  -1  -1  
[DBG]  1  1  -1  -1  -1  
[DBG]  -1  1  1  1  1  
[DBG]  Identifying agents in a submap for rescheduling (when key_agent is there at the time 10):
[DBG]  Agent 28 found intervals in the sub-map:
[DBG]   [0..34] [40..42]
[DBG]  Agent 28 (interval in submap: [0..34]) contains time 10, added to replan.
[DBG]  Agent 46 found intervals in the sub-map:
[DBG]   [5..7]
[DBG]  Agent 46 is not in sub-map at time 10 (intervals: 
[DBG]  [5..7] )
[DBG]  Agent 74 found intervals in the sub-map:
[DBG]   [9..13]
[DBG]  Agent 74 (interval in submap: [9..13]) contains time 10, added to replan.
[DBG]  Agent 89 found intervals in the sub-map:
[DBG]   [5..10]
[DBG]  Agent 89 (interval in submap: [5..10]) contains time 10, added to replan.
[DBG]  Agent 91 found intervals in the sub-map:
[DBG]   [3..6]
[DBG]  Agent 91 is not in sub-map at time 10 (intervals: 
[DBG]  [3..6] )
[DBG]  Agent 135 found intervals in the sub-map:
[DBG]   [19..22]
[DBG]  Agent 135 is not in sub-map at time 10 (intervals: 
[DBG]  [19..22] )
[DBG]  Agent 28 | Start (global): 661 -> (local): (2, 2) at time 10 | Goal (global): 724 -> (local): (4, 1) at time 34
[DBG]  Agent 74 | Start (global): 627 -> (local): (1, 0) at time 10 | Goal (global): 597 -> (local): (0, 2) at time 13
[DBG]  Agent 89 | Start (global): 724 -> (local): (4, 1) at time 10 | Goal (global): 724 -> (local): (4, 1) at time 10
[DBG]  [REPAIR] SAT destroy operator called.
[DBG]  [REPAIR] SAT operator – launching subproblem FOR OPTIMIZATION.
[DBG]  Creating local paths (sx, sy) in the submap for T_sync = 10
[DBG]    Agent 28 (global paths from T=10 to 34) has local path: (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,1) (3,1) (4,1) 
[DBG]    Agent 74 (global paths from T=10 to 13) has local path: (1,0) (1,1) (0,1) (0,2) 
[DBG]    Agent 89 (global paths from T=10 to 10) has local path: (4,1) 
[DBG]  Checking input data for SAT solver:
[DBG]    - Number of agents to replan: 3
[DBG]  Agent 28 has the original local path length: 25 => Start (2,2), Goal (4,1)
[DBG]  Agent 74 has the original local path length: 4 => Start (1,0), Goal (0,2)
[DBG]  Agent 89 has the original local path length: 1 => Start (4,1), Goal (4,1)
[DBG]  Start position: (2, 2), (1, 0), (4, 1), 
[DBG]  Goal position: (4, 1), (0, 2), (4, 1), 
[DBG]  SAT instance and solver created.
Currently solving
Instance name: scen
Map name: map
Encoding used: disappear_at_goal
SAT solver used: Kissat
Optimizing function: sum of costs
Number of agents: 3
Mks LB: 4
SoC LB: 9
Delta: 0
Remaining time: 300000 [ms]

Found plan [agents = 3] [timesteps = 4]
Agent #0 : 9 8 11 12 
Agent #1 : 3 4 5 1 
Agent #2 : 12 0 0 0 

[STAT] Solver returned: 0
[DBG]  Agent (index) 28 | New local path (submap idx):
[DBG]  9 8 11 12 
[DBG]  Agent (index) 74 | New local path (submap idx):
[DBG]  3 4 5 1 
[DBG]  Agent (index) 89 | New local path (submap idx):
[DBG]  12 
[DBG]  Update the agent path 28 | Original local length: 25 | New local length: 4
[DBG]  agent 28 t=0 => decoded (sx,sy)=(2,2) => global_id=661
[DBG]  agent 28 t=1 => decoded (sx,sy)=(2,1) => global_id=660
[DBG]  agent 28 t=2 => decoded (sx,sy)=(3,1) => global_id=692
[DBG]  agent 28 t=3 => decoded (sx,sy)=(4,1) => global_id=724
[DBG]  Complete path of agent 28:
[DBG]    Original: 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 660 692 724 756 757 757 757 757 725 726 727 
[DBG]    New:     661 661 661 661 661 661 661 661 661 661 661 660 692 724 756 757 757 757 757 725 726 727 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 661 661 661 661 661 661 661 661 661 661 
[DBG]    Local path (in submap): 661 660 692 724 756 757 757 757 757 725 726 727 
[DBG]    Suffix (out of submap): 
[DBG]  Original agent path length 28 je: 43
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 0: 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 660, 692, 724, 756, 757, 757, 757, 757, 725, 726, 727, 
[DBG]  Path for agent 28 updated, resulting length: 22
[DBG]  Update the agent path 74 | Original local length: 4 | New local length: 4
[DBG]  agent 74 t=0 => decoded (sx,sy)=(1,0) => global_id=627
[DBG]  agent 74 t=1 => decoded (sx,sy)=(1,1) => global_id=628
[DBG]  agent 74 t=2 => decoded (sx,sy)=(1,2) => global_id=629
[DBG]  agent 74 t=3 => decoded (sx,sy)=(0,2) => global_id=597
[DBG]  Complete path of agent 74:
[DBG]    Original: 752 752 751 719 687 655 656 657 658 659 627 628 596 597 565 533 565 566 565 533 534 502 503 504 
[DBG]    New:     752 752 751 719 687 655 656 657 658 659 627 628 629 597 565 533 565 566 565 533 534 502 503 504 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 752 752 751 719 687 655 656 657 658 659 
[DBG]    Local path (in submap): 627 628 629 597 
[DBG]    Suffix (out of submap): 565 533 565 566 565 533 534 502 503 504 
[DBG]  Original agent path length 74 je: 24
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 1: 752, 752, 751, 719, 687, 655, 656, 657, 658, 659, 627, 628, 629, 597, 565, 533, 565, 566, 565, 533, 534, 502, 503, 504, 
[DBG]  Path for agent 74 updated, resulting length: 24
[DBG]  Update the agent path 89 | Original local length: 1 | New local length: 1
[DBG]  agent 89 t=0 => decoded (sx,sy)=(4,1) => global_id=724
[DBG]  Complete path of agent 89:
[DBG]    Original: 437 469 501 533 565 597 596 628 660 692 724 756 788 820 821 822 854 886 918 950 982 983 1015 
[DBG]    New:     437 469 501 533 565 597 596 628 660 692 724 756 788 820 821 822 854 886 918 950 982 983 1015 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 437 469 501 533 565 597 596 628 660 692 
[DBG]    Local path (in submap): 724 
[DBG]    Suffix (out of submap): 756 788 820 821 822 854 886 918 950 982 983 1015 
[DBG]  Original agent path length 89 je: 23
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 2: 437, 469, 501, 533, 565, 597, 596, 628, 660, 692, 724, 756, 788, 820, 821, 822, 854, 886, 918, 950, 982, 983, 1015, 
[DBG]  Path for agent 89 updated, resulting length: 23
[DBG]  Paths successfully updated.
[DBG]  (LNS.cpp) New path for agent 28: 
[DBG]  661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 660, 692, 724, 756, 757, 757, 757, 757, 725, 726, 727, 
[DBG]  (LNS.cpp) New path for agent 74: 
[DBG]  752, 752, 751, 719, 687, 655, 656, 657, 658, 659, 627, 628, 629, 597, 565, 533, 565, 566, 565, 533, 534, 502, 503, 504, 
[DBG]  (LNS.cpp) New path for agent 89: 
[DBG]  437, 469, 501, 533, 565, 597, 596, 628, 660, 692, 724, 756, 788, 820, 821, 822, 854, 886, 918, 950, 982, 983, 1015, 
[DBG]  Delta value: 0.241379
[DBG]  Rewarding metric index = 1
[DBG]  component_weights = {9.14203e-05, 0.999799, 4.02659e-05, 6.98117e-05}
[DBG]  opSuccess value: 1
[STAT] neighbor.sum_of_costs before recomputation: 66
[STAT] neighbor.old_sum_of_costs before recomputation: 87
[STAT] sum_of_costs before recomputation: 4337
[DBG]  Validate solution immediately after SAT success.
[WARNING] Problem after SAT: Target conflict: agent 42 (len 42) traverses target of agent 28 (len 21) at location 727 at timestep 41
[DBG]  [DEBUG] Attempting immediate repair via init_lns because problem occurred after SAT (should be applied only for conflicts...).
[DBG]  [DEBUG] Passing 150 agents to init_lns (skip=true).
[DBG]  [DEBUG] path_table contents for selected agents (neighbor.agents):
[DBG]    Agent 28 => controlling path length=22
[DBG]    Agent 74 => controlling path length=24
[DBG]    Agent 89 => controlling path length=23
[DBG]  hodnota skip_initial_solution=1
[DBG]  We skip initialSolution => call buildCollisionData()
[DBG]  buildCollisionData() called – skip_initial_solution case.
[DBG]  Agents.size()=150, collision_graph.size()=150
[DBG]  agent 28 => updateCollidingPairs => foundCollision
[DBG]  agent 42 => updateCollidingPairs => foundCollision
[DBG]  agent 101 => updateCollidingPairs => foundCollision
[DBG]  Conflicting agent pairs:
[DBG]  agent 28 is in conflict with agent 42
[DBG]  agent 28 is in conflict with agent 101
[DBG]  buildCollisionData() => sum_of_costs=4316, num_of_colliding_pairs=2
[DBG]  buildCollisionData done => sum_of_costs=4316, num_of_colliding_pairs=2
[DBG]  sum_of_cost hodnota: 4316
[DBG]  After skip/init build => iteration_stats.back(): sum_of_costs=4316, collisions=2
[DEBUG] Using default neighbor generation strategy for conflicts: 2
[DEBUG] Using default neighbor generation strategy for conflicts: 1
[DEBUG] Using default neighbor generation strategy for conflicts: 1
[DEBUG] Using default neighbor generation strategy for conflicts: 0
	InitLNS(PP): runtime = 0.00962496, iterations = 5, colliding pairs = 0, initial colliding pairs = 2, solution cost = 4356, initial solution cost = 4316, failed iterations = 0
[DBG]  init_lns->sum_of_costs after init_lns->run: 4356
[DBG]  sum_of_costs after assignment from init_lns->run: 4356
[DBG]  Recomputing sum_of_cost by dividing neighbor.sum_of_costs and neighbor.old_sum_of_costs
[STAT] sum_of_costs after recomputation: 4356
[STAT] Iteration 109
[DBG]  Random chance did not select SAT operator (r=26), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 109
[DBG]  Random chance did not select SAT operator (r=55), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 109
[DBG]  Random chance did not select SAT operator (r=79), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 109
[DBG]  Random chance did not select SAT operator (r=81), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 109
[DBG]  Random chance did not select SAT operator (r=11), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 109
[DBG]  Random chance did not select SAT operator (r=54), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 109
[DBG]  Random chance did not select SAT operator (r=90), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 109
[DBG]  Random chance did not select SAT operator (r=54), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 109
[DBG]  Random chance did not select SAT operator (r=38), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 109
[DBG]  Using SAT operator (destroy+repair SAT).
[DBG]  ====================
[DBG]  SAT destroy operator called.
[DBG]  SAT heuristic: 2
[DBG]  key_agent_id: 28
[DBG]  key_agent_id global path length: 50
[DBG]  Submap content (global positions):
[DBG]  595 596 597 598 599 
[DBG]  627 628 629 630 631 
[DBG]  659 660 661 662 663 
[DBG]  691 692 693 694 695 
[DBG]  723 724 725 726 727 
[DBG]  Map content with agents and obstacles:
[DBG]  X A . X . 
[DBG]  . . A X . 
[DBG]  . . A X X 
[DBG]  . A X X X 
[DBG]  X . . . . 
[DBG]  content of the map structure that we pass to the SAT solver:
[DBG]  -1  1  1  -1  1  
[DBG]  1  1  1  -1  1  
[DBG]  1  1  1  -1  -1  
[DBG]  1  1  -1  -1  -1  
[DBG]  -1  1  1  1  1  
[DBG]  Identifying agents in a submap for rescheduling (when key_agent is there at the time 22):
[DBG]  Agent 28 found intervals in the sub-map:
[DBG]   [0..41] [47..49]
[DBG]  Agent 28 (interval in submap: [0..41]) contains time 22, added to replan.
[DBG]  Agent 30 found intervals in the sub-map:
[DBG]   [16..23]
[DBG]  Agent 30 (interval in submap: [16..23]) contains time 22, added to replan.
[DBG]  Agent 45 found intervals in the sub-map:
[DBG]   [18..23]
[DBG]  Agent 45 (interval in submap: [18..23]) contains time 22, added to replan.
[DBG]  Agent 53 found intervals in the sub-map:
[DBG]   [21..26]
[DBG]  Agent 53 (interval in submap: [21..26]) contains time 22, added to replan.
[DBG]  Agent 135 found intervals in the sub-map:
[DBG]  
[DBG]  Agent 135 is not in sub-map at time 22 (intervals: 
[DBG]  )
[DBG]  Agent 28 | Start (global): 661 -> (local): (2, 2) at time 22 | Goal (global): 725 -> (local): (4, 2) at time 41
[DBG]  Agent 30 | Start (global): 629 -> (local): (1, 2) at time 22 | Goal (global): 597 -> (local): (0, 2) at time 23
[DBG]  Agent 45 | Start (global): 692 -> (local): (3, 1) at time 22 | Goal (global): 724 -> (local): (4, 1) at time 23
[DBG]  Agent 53 | Start (global): 596 -> (local): (0, 1) at time 22 | Goal (global): 724 -> (local): (4, 1) at time 26
[DBG]  [REPAIR] SAT destroy operator called.
[DBG]  [REPAIR] SAT operator – launching subproblem FOR OPTIMIZATION.
[DBG]  Creating local paths (sx, sy) in the submap for T_sync = 22
[DBG]    Agent 28 (global paths from T=22 to 41) has local path: (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,1) (2,1) (2,1) (2,1) (2,1) (2,1) (2,1) (3,1) (4,1) (4,2) 
[DBG]    Agent 30 (global paths from T=22 to 23) has local path: (1,2) (0,2) 
[DBG]    Agent 45 (global paths from T=22 to 23) has local path: (3,1) (4,1) 
[DBG]    Agent 53 (global paths from T=22 to 26) has local path: (0,1) (1,1) (2,1) (3,1) (4,1) 
[DBG]  Checking input data for SAT solver:
[DBG]    - Number of agents to replan: 4
[DBG]  Agent 28 has the original local path length: 20 => Start (2,2), Goal (4,2)
[DBG]  Agent 30 has the original local path length: 2 => Start (1,2), Goal (0,2)
[DBG]  Agent 45 has the original local path length: 2 => Start (3,1), Goal (4,1)
[DBG]  Agent 53 has the original local path length: 5 => Start (0,1), Goal (4,1)
[DBG]  Start position: (2, 2), (1, 2), (3, 1), (0, 1), 
[DBG]  Goal position: (4, 2), (0, 2), (4, 1), (4, 1), 
[DBG]  SAT instance and solver created.
Currently solving
Instance name: scen
Map name: map
Encoding used: disappear_at_goal
SAT solver used: Kissat
Optimizing function: sum of costs
Number of agents: 4
Mks LB: 5
SoC LB: 14
Delta: 0
Remaining time: 300000 [ms]

Vertex conflict! Agents 1, 2, timestep 2, location 0
Swapping conflict! Agents 1, 2, timestep 2, edge (0,0)
Vertex conflict! Agents 1, 2, timestep 3, location 0
Swapping conflict! Agents 1, 2, timestep 3, edge (0,0)
Vertex conflict! Agents 1, 2, timestep 4, location 0
Found plan [agents = 4] [timesteps = 5]
Agent #0 : 9 8 11 12 13 
Agent #1 : 5 1 0 0 0 
Agent #2 : 11 12 0 0 0 
Agent #3 : 0 4 8 11 12 

[STAT] Solver returned: 0
[DBG]  Agent (index) 28 | New local path (submap idx):
[DBG]  9 8 11 12 13 
[DBG]  Agent (index) 30 | New local path (submap idx):
[DBG]  5 1 
[DBG]  Agent (index) 45 | New local path (submap idx):
[DBG]  11 12 
[DBG]  Agent (index) 53 | New local path (submap idx):
[DBG]  0 4 8 11 12 
[DBG]  Update the agent path 28 | Original local length: 20 | New local length: 5
[DBG]  agent 28 t=0 => decoded (sx,sy)=(2,2) => global_id=661
[DBG]  agent 28 t=1 => decoded (sx,sy)=(2,1) => global_id=660
[DBG]  agent 28 t=2 => decoded (sx,sy)=(3,1) => global_id=692
[DBG]  agent 28 t=3 => decoded (sx,sy)=(4,1) => global_id=724
[DBG]  agent 28 t=4 => decoded (sx,sy)=(4,2) => global_id=725
[DBG]  Complete path of agent 28:
[DBG]    Original: 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 660 660 660 660 660 660 660 692 724 725 757 757 757 757 757 725 726 727 
[DBG]    New:     661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 660 692 724 725 757 757 757 757 757 725 726 727 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 
[DBG]    Local path (in submap): 661 660 692 724 725 757 757 757 757 757 725 726 727 
[DBG]    Suffix (out of submap): 
[DBG]  Original agent path length 28 je: 50
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 0: 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 660, 692, 724, 725, 757, 757, 757, 757, 757, 725, 726, 727, 
[DBG]  Path for agent 28 updated, resulting length: 35
[DBG]  Update the agent path 30 | Original local length: 2 | New local length: 2
[DBG]  agent 30 t=0 => decoded (sx,sy)=(1,2) => global_id=629
[DBG]  agent 30 t=1 => decoded (sx,sy)=(0,2) => global_id=597
[DBG]  Complete path of agent 30:
[DBG]    Original: 922 890 889 857 856 855 854 886 885 884 883 851 819 787 755 756 724 692 660 659 627 628 629 597 565 566 534 502 503 
[DBG]    New:     922 890 889 857 856 855 854 886 885 884 883 851 819 787 755 756 724 692 660 659 627 628 629 597 565 566 534 502 503 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 922 890 889 857 856 855 854 886 885 884 883 851 819 787 755 756 724 692 660 659 627 628 
[DBG]    Local path (in submap): 629 597 
[DBG]    Suffix (out of submap): 565 566 534 502 503 
[DBG]  Original agent path length 30 je: 29
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 1: 922, 890, 889, 857, 856, 855, 854, 886, 885, 884, 883, 851, 819, 787, 755, 756, 724, 692, 660, 659, 627, 628, 629, 597, 565, 566, 534, 502, 503, 
[DBG]  Path for agent 30 updated, resulting length: 29
[DBG]  Update the agent path 45 | Original local length: 2 | New local length: 2
[DBG]  agent 45 t=0 => decoded (sx,sy)=(3,1) => global_id=692
[DBG]  agent 45 t=1 => decoded (sx,sy)=(4,1) => global_id=724
[DBG]  Complete path of agent 45:
[DBG]    Original: 153 185 217 249 281 313 345 377 409 441 440 472 504 503 502 534 533 565 597 629 628 660 692 724 756 788 787 786 818 817 849 
[DBG]    New:     153 185 217 249 281 313 345 377 409 441 440 472 504 503 502 534 533 565 597 629 628 660 692 724 756 788 787 786 818 817 849 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 153 185 217 249 281 313 345 377 409 441 440 472 504 503 502 534 533 565 597 629 628 660 
[DBG]    Local path (in submap): 692 724 
[DBG]    Suffix (out of submap): 756 788 787 786 818 817 849 
[DBG]  Original agent path length 45 je: 31
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 2: 153, 185, 217, 249, 281, 313, 345, 377, 409, 441, 440, 472, 504, 503, 502, 534, 533, 565, 597, 629, 628, 660, 692, 724, 756, 788, 787, 786, 818, 817, 849, 
[DBG]  Path for agent 45 updated, resulting length: 31
[DBG]  Update the agent path 53 | Original local length: 5 | New local length: 5
[DBG]  agent 53 t=0 => decoded (sx,sy)=(0,1) => global_id=596
[DBG]  agent 53 t=1 => decoded (sx,sy)=(1,1) => global_id=628
[DBG]  agent 53 t=2 => decoded (sx,sy)=(2,1) => global_id=660
[DBG]  agent 53 t=3 => decoded (sx,sy)=(3,1) => global_id=692
[DBG]  agent 53 t=4 => decoded (sx,sy)=(4,1) => global_id=724
[DBG]  Complete path of agent 53:
[DBG]    Original: 84 116 117 149 150 151 183 215 247 279 311 343 375 407 406 438 470 502 534 566 565 597 596 628 660 692 724 756 788 820 821 
[DBG]    New:     84 116 117 149 150 151 183 215 247 279 311 343 375 407 406 438 470 502 534 566 565 597 596 628 660 692 724 756 788 820 821 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 84 116 117 149 150 151 183 215 247 279 311 343 375 407 406 438 470 502 534 566 565 597 
[DBG]    Local path (in submap): 596 628 660 692 724 
[DBG]    Suffix (out of submap): 756 788 820 821 
[DBG]  Original agent path length 53 je: 31
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 3: 84, 116, 117, 149, 150, 151, 183, 215, 247, 279, 311, 343, 375, 407, 406, 438, 470, 502, 534, 566, 565, 597, 596, 628, 660, 692, 724, 756, 788, 820, 821, 
[DBG]  Path for agent 53 updated, resulting length: 31
[DBG]  Paths successfully updated.
[DBG]  (LNS.cpp) New path for agent 28: 
[DBG]  661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 660, 692, 724, 725, 757, 757, 757, 757, 757, 725, 726, 727, 
[DBG]  (LNS.cpp) New path for agent 30: 
[DBG]  922, 890, 889, 857, 856, 855, 854, 886, 885, 884, 883, 851, 819, 787, 755, 756, 724, 692, 660, 659, 627, 628, 629, 597, 565, 566, 534, 502, 503, 
[DBG]  (LNS.cpp) New path for agent 45: 
[DBG]  153, 185, 217, 249, 281, 313, 345, 377, 409, 441, 440, 472, 504, 503, 502, 534, 533, 565, 597, 629, 628, 660, 692, 724, 756, 788, 787, 786, 818, 817, 849, 
[DBG]  (LNS.cpp) New path for agent 53: 
[DBG]  84, 116, 117, 149, 150, 151, 183, 215, 247, 279, 311, 343, 375, 407, 406, 438, 470, 502, 534, 566, 565, 597, 596, 628, 660, 692, 724, 756, 788, 820, 821, 
[DBG]  Delta value: 0.109489
[DBG]  Rewarding metric index = 1
[DBG]  component_weights = {7.82809e-05, 0.999827, 3.44787e-05, 5.9778e-05}
[DBG]  opSuccess value: 1
[STAT] neighbor.sum_of_costs before recomputation: 122
[STAT] neighbor.old_sum_of_costs before recomputation: 137
[STAT] sum_of_costs before recomputation: 4356
[DBG]  Validate solution immediately after SAT success.
[WARNING] Problem after SAT: Target conflict: agent 42 (len 49) traverses target of agent 28 (len 34) at location 727 at timestep 48
[DBG]  [DEBUG] Attempting immediate repair via init_lns because problem occurred after SAT (should be applied only for conflicts...).
[DBG]  [DEBUG] Passing 150 agents to init_lns (skip=true).
[DBG]  [DEBUG] path_table contents for selected agents (neighbor.agents):
[DBG]    Agent 28 => controlling path length=35
[DBG]    Agent 30 => controlling path length=29
[DBG]    Agent 45 => controlling path length=31
[DBG]    Agent 53 => controlling path length=31
[DBG]  hodnota skip_initial_solution=1
[DBG]  We skip initialSolution => call buildCollisionData()
[DBG]  buildCollisionData() called – skip_initial_solution case.
[DBG]  Agents.size()=150, collision_graph.size()=150
[DBG]  agent 28 => updateCollidingPairs => foundCollision
[DBG]  agent 42 => updateCollidingPairs => foundCollision
[DBG]  Conflicting agent pairs:
[DBG]  agent 28 is in conflict with agent 42
[DBG]  buildCollisionData() => sum_of_costs=4341, num_of_colliding_pairs=1
[DBG]  buildCollisionData done => sum_of_costs=4341, num_of_colliding_pairs=1
[DBG]  sum_of_cost hodnota: 4341
[DBG]  After skip/init build => iteration_stats.back(): sum_of_costs=4341, collisions=1
[DEBUG] Using default neighbor generation strategy for conflicts: 2
[DEBUG] Using default neighbor generation strategy for conflicts: 1
	InitLNS(PP): runtime = 0.00252117, iterations = 3, colliding pairs = 0, initial colliding pairs = 1, solution cost = 4337, initial solution cost = 4341, failed iterations = 0
[DBG]  init_lns->sum_of_costs after init_lns->run: 4337
[DBG]  sum_of_costs after assignment from init_lns->run: 4337
[DBG]  Recomputing sum_of_cost by dividing neighbor.sum_of_costs and neighbor.old_sum_of_costs
[STAT] sum_of_costs after recomputation: 4337
[STAT] Iteration 110
[DBG]  Random chance did not select SAT operator (r=84), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 110
[DBG]  Random chance did not select SAT operator (r=19), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 110
[DBG]  Using SAT operator (destroy+repair SAT).
[DBG]  ====================
[DBG]  SAT destroy operator called.
[DBG]  SAT heuristic: 2
[DBG]  key_agent_id: 28
[DBG]  key_agent_id global path length: 48
[DBG]  Submap content (global positions):
[DBG]  595 596 597 598 599 
[DBG]  627 628 629 630 631 
[DBG]  659 660 661 662 663 
[DBG]  691 692 693 694 695 
[DBG]  723 724 725 726 727 
[DBG]  Map content with agents and obstacles:
[DBG]  X . . X . 
[DBG]  . . . X . 
[DBG]  . . A X X 
[DBG]  . . X X X 
[DBG]  X A A . . 
[DBG]  content of the map structure that we pass to the SAT solver:
[DBG]  -1  1  1  -1  1  
[DBG]  1  1  1  -1  1  
[DBG]  1  1  1  -1  -1  
[DBG]  1  1  -1  -1  -1  
[DBG]  -1  1  1  1  1  
[DBG]  Identifying agents in a submap for rescheduling (when key_agent is there at the time 4):
[DBG]  Agent 28 found intervals in the sub-map:
[DBG]   [0..47]
[DBG]  Agent 28 (interval in submap: [0..47]) contains time 4, added to replan.
[DBG]  Agent 63 found intervals in the sub-map:
[DBG]  
[DBG]  Agent 63 is not in sub-map at time 4 (intervals: 
[DBG]  )
[DBG]  Agent 91 found intervals in the sub-map:
[DBG]   [3..6]
[DBG]  Agent 91 (interval in submap: [3..6]) contains time 4, added to replan.
[DBG]  Agent 108 found intervals in the sub-map:
[DBG]   [0..4]
[DBG]  Agent 108 (interval in submap: [0..4]) contains time 4, added to replan.
[DBG]  Agent 135 found intervals in the sub-map:
[DBG]  
[DBG]  Agent 135 is not in sub-map at time 4 (intervals: 
[DBG]  )
[DBG]  Agent 28 | Start (global): 661 -> (local): (2, 2) at time 4 | Goal (global): 727 -> (local): (4, 4) at time 47
[DBG]  Agent 91 | Start (global): 725 -> (local): (4, 2) at time 4 | Goal (global): 727 -> (local): (4, 4) at time 6
[DBG]  Agent 108 | Start (global): 724 -> (local): (4, 1) at time 4 | Goal (global): 724 -> (local): (4, 1) at time 4
[DBG]  [REPAIR] SAT destroy operator called.
[DBG]  [REPAIR] SAT operator – launching subproblem FOR OPTIMIZATION.
[DBG]  Creating local paths (sx, sy) in the submap for T_sync = 4
[DBG]    Agent 28 (global paths from T=4 to 47) has local path: (2,2) (2,2) (2,2) (2,2) (2,2) (2,1) (2,1) (2,1) (1,1) (1,0) (1,0) (1,0) (1,0) (1,0) (1,0) (1,0) (1,0) (1,0) (1,0) (1,0) (1,0) (1,0) (1,0) (1,0) (1,0) (1,1) (1,1) (1,1) (1,1) (1,1) (1,1) (1,1) (1,1) (1,1) (1,1) (1,1) (1,1) (1,1) (2,1) (3,1) (4,1) (4,2) (4,3) (4,4) 
[DBG]    Agent 91 (global paths from T=4 to 6) has local path: (4,2) (4,3) (4,4) 
[DBG]    Agent 108 (global paths from T=4 to 4) has local path: (4,1) 
[DBG]  Checking input data for SAT solver:
[DBG]    - Number of agents to replan: 3
[DBG]  Agent 28 has the original local path length: 44 => Start (2,2), Goal (4,4)
[DBG]  Agent 91 has the original local path length: 3 => Start (4,2), Goal (4,4)
[DBG]  Agent 108 has the original local path length: 1 => Start (4,1), Goal (4,1)
[DBG]  Start position: (2, 2), (4, 2), (4, 1), 
[DBG]  Goal position: (4, 4), (4, 4), (4, 1), 
[DBG]  SAT instance and solver created.
Currently solving
Instance name: scen
Map name: map
Encoding used: disappear_at_goal
SAT solver used: Kissat
Optimizing function: sum of costs
Number of agents: 3
Mks LB: 7
SoC LB: 11
Delta: 0
Remaining time: 300000 [ms]

Vertex conflict! Agents 1, 2, timestep 3, location 0
Swapping conflict! Agents 1, 2, timestep 3, edge (0,0)
Vertex conflict! Agents 1, 2, timestep 4, location 0
Swapping conflict! Agents 1, 2, timestep 4, edge (0,0)
Vertex conflict! Agents 1, 2, timestep 5, location 0
Swapping conflict! Agents 1, 2, timestep 5, edge (0,0)
Vertex conflict! Agents 1, 2, timestep 6, location 0
Found plan [agents = 3] [timesteps = 7]
Agent #0 : 9 8 11 12 13 14 15 
Agent #1 : 13 14 15 0 0 0 0 
Agent #2 : 12 0 0 0 0 0 0 

[STAT] Solver returned: 0
[DBG]  Agent (index) 28 | New local path (submap idx):
[DBG]  9 8 11 12 13 14 15 
[DBG]  Agent (index) 91 | New local path (submap idx):
[DBG]  13 14 15 
[DBG]  Agent (index) 108 | New local path (submap idx):
[DBG]  12 
[DBG]  Update the agent path 28 | Original local length: 44 | New local length: 7
[DBG]  agent 28 t=0 => decoded (sx,sy)=(2,2) => global_id=661
[DBG]  agent 28 t=1 => decoded (sx,sy)=(2,1) => global_id=660
[DBG]  agent 28 t=2 => decoded (sx,sy)=(3,1) => global_id=692
[DBG]  agent 28 t=3 => decoded (sx,sy)=(4,1) => global_id=724
[DBG]  agent 28 t=4 => decoded (sx,sy)=(4,2) => global_id=725
[DBG]  agent 28 t=5 => decoded (sx,sy)=(4,3) => global_id=726
[DBG]  agent 28 t=6 => decoded (sx,sy)=(4,4) => global_id=727
[DBG]  Complete path of agent 28:
[DBG]    Original: 661 661 661 661 661 661 661 661 661 660 660 660 628 627 627 627 627 627 627 627 627 627 627 627 627 627 627 627 627 628 628 628 628 628 628 628 628 628 628 628 628 628 660 692 724 725 726 727 
[DBG]    New:     661 661 661 661 661 660 692 724 725 726 727 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 661 661 661 661 
[DBG]    Local path (in submap): 661 660 692 724 725 726 727 
[DBG]    Suffix (out of submap): 
[DBG]  Original agent path length 28 je: 48
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 0: 661, 661, 661, 661, 661, 660, 692, 724, 725, 726, 727, 
[DBG]  Path for agent 28 updated, resulting length: 11
[DBG]  Update the agent path 91 | Original local length: 3 | New local length: 3
[DBG]  agent 91 t=0 => decoded (sx,sy)=(4,2) => global_id=725
[DBG]  agent 91 t=1 => decoded (sx,sy)=(4,3) => global_id=726
[DBG]  agent 91 t=2 => decoded (sx,sy)=(4,4) => global_id=727
[DBG]  Complete path of agent 91:
[DBG]    Original: 787 788 756 724 725 726 727 728 696 664 632 633 601 601 602 602 602 602 603 571 539 540 541 509 477 445 413 381 
[DBG]    New:     787 788 756 724 725 726 727 728 696 664 632 633 601 601 602 602 602 602 603 571 539 540 541 509 477 445 413 381 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 787 788 756 724 
[DBG]    Local path (in submap): 725 726 727 
[DBG]    Suffix (out of submap): 728 696 664 632 633 601 601 602 602 602 602 603 571 539 540 541 509 477 445 413 381 
[DBG]  Original agent path length 91 je: 28
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 1: 787, 788, 756, 724, 725, 726, 727, 728, 696, 664, 632, 633, 601, 601, 602, 602, 602, 602, 603, 571, 539, 540, 541, 509, 477, 445, 413, 381, 
[DBG]  Path for agent 91 updated, resulting length: 28
[DBG]  Update the agent path 108 | Original local length: 1 | New local length: 1
[DBG]  agent 108 t=0 => decoded (sx,sy)=(4,1) => global_id=724
[DBG]  Complete path of agent 108:
[DBG]    Original: 628 660 692 692 724 756 788 820 821 822 854 855 856 857 858 859 891 892 924 956 957 989 1021 
[DBG]    New:     628 660 692 692 724 756 788 820 821 822 854 855 856 857 858 859 891 892 924 956 957 989 1021 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 628 660 692 692 
[DBG]    Local path (in submap): 724 
[DBG]    Suffix (out of submap): 756 788 820 821 822 854 855 856 857 858 859 891 892 924 956 957 989 1021 
[DBG]  Original agent path length 108 je: 23
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 2: 628, 660, 692, 692, 724, 756, 788, 820, 821, 822, 854, 855, 856, 857, 858, 859, 891, 892, 924, 956, 957, 989, 1021, 
[DBG]  Path for agent 108 updated, resulting length: 23
[DBG]  Paths successfully updated.
[DBG]  (LNS.cpp) New path for agent 28: 
[DBG]  661, 661, 661, 661, 661, 660, 692, 724, 725, 726, 727, 
[DBG]  (LNS.cpp) New path for agent 91: 
[DBG]  787, 788, 756, 724, 725, 726, 727, 728, 696, 664, 632, 633, 601, 601, 602, 602, 602, 602, 603, 571, 539, 540, 541, 509, 477, 445, 413, 381, 
[DBG]  (LNS.cpp) New path for agent 108: 
[DBG]  628, 660, 692, 692, 724, 756, 788, 820, 821, 822, 854, 855, 856, 857, 858, 859, 891, 892, 924, 956, 957, 989, 1021, 
[DBG]  Delta value: 0.385417
[DBG]  Rewarding metric index = 1
[DBG]  component_weights = {5.36812e-05, 0.999882, 2.36438e-05, 4.09928e-05}
[DBG]  opSuccess value: 1
[STAT] neighbor.sum_of_costs before recomputation: 59
[STAT] neighbor.old_sum_of_costs before recomputation: 96
[STAT] sum_of_costs before recomputation: 4337
[DBG]  Validate solution immediately after SAT success.
[WARNING] Problem after SAT: Vertex conflict between agents 28 and 7 at location 724 at timestep 7
[DBG]  [DEBUG] Attempting immediate repair via init_lns because problem occurred after SAT (should be applied only for conflicts...).
[DBG]  [DEBUG] Passing 150 agents to init_lns (skip=true).
[DBG]  [DEBUG] path_table contents for selected agents (neighbor.agents):
[DBG]    Agent 28 => controlling path length=11
[DBG]    Agent 91 => controlling path length=28
[DBG]    Agent 108 => controlling path length=23
[DBG]  hodnota skip_initial_solution=1
[DBG]  We skip initialSolution => call buildCollisionData()
[DBG]  buildCollisionData() called – skip_initial_solution case.
[DBG]  Agents.size()=150, collision_graph.size()=150
[DBG]  agent 7 => updateCollidingPairs => foundCollision
[DBG]  agent 28 => updateCollidingPairs => foundCollision
[DBG]  agent 42 => updateCollidingPairs => foundCollision
[DBG]  agent 86 => updateCollidingPairs => foundCollision
[DBG]  Conflicting agent pairs:
[DBG]  agent 7 is in conflict with agent 28
[DBG]  agent 28 is in conflict with agent 42
[DBG]  agent 28 is in conflict with agent 86
[DBG]  buildCollisionData() => sum_of_costs=4300, num_of_colliding_pairs=3
[DBG]  buildCollisionData done => sum_of_costs=4300, num_of_colliding_pairs=3
[DBG]  sum_of_cost hodnota: 4300
[DBG]  After skip/init build => iteration_stats.back(): sum_of_costs=4300, collisions=3
[DEBUG] Using default neighbor generation strategy for conflicts: 0
	InitLNS(PP): runtime = 0.00181421, iterations = 2, colliding pairs = 0, initial colliding pairs = 3, solution cost = 4335, initial solution cost = 4300, failed iterations = 0
[DBG]  init_lns->sum_of_costs after init_lns->run: 4335
[DBG]  sum_of_costs after assignment from init_lns->run: 4335
[DBG]  Recomputing sum_of_cost by dividing neighbor.sum_of_costs and neighbor.old_sum_of_costs
[STAT] sum_of_costs after recomputation: 4335
[STAT] Iteration 111
[DBG]  Random chance did not select SAT operator (r=59), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 111
[DBG]  Using SAT operator (destroy+repair SAT).
[DBG]  ====================
[DBG]  SAT destroy operator called.
[DBG]  SAT heuristic: 2
[DBG]  key_agent_id: 28
[DBG]  key_agent_id global path length: 48
[DBG]  Submap content (global positions):
[DBG]  561 562 563 564 565 
[DBG]  593 594 595 596 597 
[DBG]  625 626 627 628 629 
[DBG]  657 658 659 660 661 
[DBG]  689 690 691 692 693 
[DBG]  Map content with agents and obstacles:
[DBG]  A X . X A 
[DBG]  A . X . . 
[DBG]  A X A . . 
[DBG]  A . . . . 
[DBG]  . X . . X 
[DBG]  content of the map structure that we pass to the SAT solver:
[DBG]  1  -1  1  -1  1  
[DBG]  1  1  -1  1  1  
[DBG]  1  -1  1  1  1  
[DBG]  1  1  1  1  1  
[DBG]  1  -1  1  1  -1  
[DBG]  Identifying agents in a submap for rescheduling (when key_agent is there at the time 27):
[DBG]  Agent 3 found intervals in the sub-map:
[DBG]   [25..29]
[DBG]  Agent 3 (interval in submap: [25..29]) contains time 27, added to replan.
[DBG]  Agent 26 found intervals in the sub-map:
[DBG]   [27..32]
[DBG]  Agent 26 (interval in submap: [27..32]) contains time 27, added to replan.
[DBG]  Agent 28 found intervals in the sub-map:
[DBG]   [0..39]
[DBG]  Agent 28 (interval in submap: [0..39]) contains time 27, added to replan.
[DBG]  Agent 30 found intervals in the sub-map:
[DBG]   [17..23]
[DBG]  Agent 30 is not in sub-map at time 27 (intervals: 
[DBG]  [17..23] )
[DBG]  Agent 44 found intervals in the sub-map:
[DBG]   [26..27]
[DBG]  Agent 44 (interval in submap: [26..27]) contains time 27, added to replan.
[DBG]  Agent 53 found intervals in the sub-map:
[DBG]   [20..25]
[DBG]  Agent 53 is not in sub-map at time 27 (intervals: 
[DBG]  [20..25] )
[DBG]  Agent 57 found intervals in the sub-map:
[DBG]   [24..28]
[DBG]  Agent 57 (interval in submap: [24..28]) contains time 27, added to replan.
[DBG]  Agent 135 found intervals in the sub-map:
[DBG]   [27..28]
[DBG]  Agent 135 (interval in submap: [27..28]) contains time 27, added to replan.
[DBG]  Agent 148 found intervals in the sub-map:
[DBG]   [32..43]
[DBG]  Agent 148 is not in sub-map at time 27 (intervals: 
[DBG]  [32..43] )
[DBG]  Agent 3 | Start (global): 625 -> (local): (2, 0) at time 27 | Goal (global): 689 -> (local): (4, 0) at time 29
[DBG]  Agent 26 | Start (global): 565 -> (local): (0, 4) at time 27 | Goal (global): 692 -> (local): (4, 3) at time 32
[DBG]  Agent 28 | Start (global): 627 -> (local): (2, 2) at time 27 | Goal (global): 692 -> (local): (4, 3) at time 39
[DBG]  Agent 44 | Start (global): 593 -> (local): (1, 0) at time 27 | Goal (global): 593 -> (local): (1, 0) at time 27
[DBG]  Agent 57 | Start (global): 657 -> (local): (3, 0) at time 27 | Goal (global): 689 -> (local): (4, 0) at time 28
[DBG]  Agent 135 | Start (global): 561 -> (local): (0, 0) at time 27 | Goal (global): 593 -> (local): (1, 0) at time 28
[DBG]  [REPAIR] SAT destroy operator called.
[DBG]  [REPAIR] SAT operator – launching subproblem FOR OPTIMIZATION.
[DBG]  Creating local paths (sx, sy) in the submap for T_sync = 27
[DBG]    Agent 3 (global paths from T=27 to 29) has local path: (2,0) (3,0) (4,0) 
[DBG]    Agent 26 (global paths from T=27 to 32) has local path: (0,4) (1,4) (2,4) (2,3) (3,3) (4,3) 
[DBG]    Agent 28 (global paths from T=27 to 39) has local path: (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (3,2) (3,3) (4,3) 
[DBG]    Agent 44 (global paths from T=27 to 27) has local path: (1,0) 
[DBG]    Agent 57 (global paths from T=27 to 28) has local path: (3,0) (4,0) 
[DBG]    Agent 135 (global paths from T=27 to 28) has local path: (0,0) (1,0) 
[DBG]  Checking input data for SAT solver:
[DBG]    - Number of agents to replan: 6
[DBG]  Agent 3 has the original local path length: 3 => Start (2,0), Goal (4,0)
[DBG]  Agent 26 has the original local path length: 6 => Start (0,4), Goal (4,3)
[DBG]  Agent 28 has the original local path length: 13 => Start (2,2), Goal (4,3)
[DBG]  Agent 44 has the original local path length: 1 => Start (1,0), Goal (1,0)
[DBG]  Agent 57 has the original local path length: 2 => Start (3,0), Goal (4,0)
[DBG]  Agent 135 has the original local path length: 2 => Start (0,0), Goal (1,0)
[DBG]  Start position: (2, 0), (0, 4), (2, 2), (1, 0), (3, 0), (0, 0), 
[DBG]  Goal position: (4, 0), (4, 3), (4, 3), (1, 0), (4, 0), (1, 0), 
[DBG]  SAT instance and solver created.
Currently solving
Instance name: scen
Map name: map
Encoding used: disappear_at_goal
SAT solver used: Kissat
Optimizing function: sum of costs
Number of agents: 6
Mks LB: 6
SoC LB: 18
Delta: 0
Remaining time: 300000 [ms]

Vertex conflict! Agents 0, 2, timestep 4, location 0
Swapping conflict! Agents 0, 2, timestep 4, edge (0,0)
Vertex conflict! Agents 0, 2, timestep 5, location 0
Vertex conflict! Agents 0, 3, timestep 3, location 0
Swapping conflict! Agents 0, 3, timestep 3, edge (0,0)
Vertex conflict! Agents 0, 3, timestep 4, location 0
Swapping conflict! Agents 0, 3, timestep 4, edge (0,0)
Vertex conflict! Agents 0, 3, timestep 5, location 0
Vertex conflict! Agents 0, 4, timestep 3, location 0
Swapping conflict! Agents 0, 4, timestep 3, edge (0,0)
Vertex conflict! Agents 0, 4, timestep 4, location 0
Swapping conflict! Agents 0, 4, timestep 4, edge (0,0)
Vertex conflict! Agents 0, 4, timestep 5, location 0
Vertex conflict! Agents 0, 5, timestep 3, location 0
Swapping conflict! Agents 0, 5, timestep 3, edge (0,0)
Vertex conflict! Agents 0, 5, timestep 4, location 0
Swapping conflict! Agents 0, 5, timestep 4, edge (0,0)
Vertex conflict! Agents 0, 5, timestep 5, location 0
Vertex conflict! Agents 2, 3, timestep 4, location 0
Swapping conflict! Agents 2, 3, timestep 4, edge (0,0)
Vertex conflict! Agents 2, 3, timestep 5, location 0
Vertex conflict! Agents 2, 4, timestep 4, location 0
Swapping conflict! Agents 2, 4, timestep 4, edge (0,0)
Vertex conflict! Agents 2, 4, timestep 5, location 0
Vertex conflict! Agents 2, 5, timestep 4, location 0
Swapping conflict! Agents 2, 5, timestep 4, edge (0,0)
Vertex conflict! Agents 2, 5, timestep 5, location 0
Vertex conflict! Agents 3, 4, timestep 2, location 0
Swapping conflict! Agents 3, 4, timestep 2, edge (0,0)
Vertex conflict! Agents 3, 4, timestep 3, location 0
Swapping conflict! Agents 3, 4, timestep 3, edge (0,0)
Vertex conflict! Agents 3, 4, timestep 4, location 0
Swapping conflict! Agents 3, 4, timestep 4, edge (0,0)
Vertex conflict! Agents 3, 4, timestep 5, location 0
Swapping conflict! Agents 3, 5, timestep 0, edge (3,0)
Vertex conflict! Agents 3, 5, timestep 2, location 0
Swapping conflict! Agents 3, 5, timestep 2, edge (0,0)
Vertex conflict! Agents 3, 5, timestep 3, location 0
Swapping conflict! Agents 3, 5, timestep 3, edge (0,0)
Vertex conflict! Agents 3, 5, timestep 4, location 0
Swapping conflict! Agents 3, 5, timestep 4, edge (0,0)
Vertex conflict! Agents 3, 5, timestep 5, location 0
Vertex conflict! Agents 4, 5, timestep 2, location 0
Swapping conflict! Agents 4, 5, timestep 2, edge (0,0)
Vertex conflict! Agents 4, 5, timestep 3, location 0
Swapping conflict! Agents 4, 5, timestep 3, edge (0,0)
Vertex conflict! Agents 4, 5, timestep 4, location 0
Swapping conflict! Agents 4, 5, timestep 4, edge (0,0)
Vertex conflict! Agents 4, 5, timestep 5, location 0
Found plan [agents = 6] [timesteps = 6]
Agent #0 : 7 11 16 0 0 0 
Agent #1 : 2 6 10 15 14 18 
Agent #2 : 8 13 17 18 0 0 
Agent #3 : 3 0 0 0 0 0 
Agent #4 : 11 16 0 0 0 0 
Agent #5 : 0 3 0 0 0 0 

[STAT] Solver returned: 0
[DBG]  Agent (index) 3 | New local path (submap idx):
[DBG]  7 11 16 
[DBG]  Agent (index) 26 | New local path (submap idx):
[DBG]  2 6 10 15 14 18 
[DBG]  Agent (index) 28 | New local path (submap idx):
[DBG]  8 13 17 18 
[DBG]  Agent (index) 44 | New local path (submap idx):
[DBG]  3 
[DBG]  Agent (index) 57 | New local path (submap idx):
[DBG]  11 16 
[DBG]  Agent (index) 135 | New local path (submap idx):
[DBG]  0 3 
[DBG]  Update the agent path 3 | Original local length: 3 | New local length: 3
[DBG]  agent 3 t=0 => decoded (sx,sy)=(2,0) => global_id=625
[DBG]  agent 3 t=1 => decoded (sx,sy)=(3,0) => global_id=657
[DBG]  agent 3 t=2 => decoded (sx,sy)=(4,0) => global_id=689
[DBG]  Complete path of agent 3:
[DBG]    Original: 468 468 468 468 468 468 468 467 466 466 466 466 466 467 499 499 499 499 499 499 499 499 531 530 529 561 593 625 657 689 721 753 752 784 783 815 847 848 880 912 
[DBG]    New:     468 468 468 468 468 468 468 467 466 466 466 466 466 467 499 499 499 499 499 499 499 499 531 530 529 561 593 625 657 689 721 753 752 784 783 815 847 848 880 912 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 468 468 468 468 468 468 468 467 466 466 466 466 466 467 499 499 499 499 499 499 499 499 531 530 529 561 593 
[DBG]    Local path (in submap): 625 657 689 
[DBG]    Suffix (out of submap): 721 753 752 784 783 815 847 848 880 912 
[DBG]  Original agent path length 3 je: 40
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 0: 468, 468, 468, 468, 468, 468, 468, 467, 466, 466, 466, 466, 466, 467, 499, 499, 499, 499, 499, 499, 499, 499, 531, 530, 529, 561, 593, 625, 657, 689, 721, 753, 752, 784, 783, 815, 847, 848, 880, 912, 
[DBG]  Path for agent 3 updated, resulting length: 40
[DBG]  Update the agent path 26 | Original local length: 6 | New local length: 6
[DBG]  agent 26 t=0 => decoded (sx,sy)=(0,4) => global_id=565
[DBG]  agent 26 t=1 => decoded (sx,sy)=(1,4) => global_id=597
[DBG]  agent 26 t=2 => decoded (sx,sy)=(2,4) => global_id=629
[DBG]  agent 26 t=3 => decoded (sx,sy)=(3,4) => global_id=661
[DBG]  agent 26 t=4 => decoded (sx,sy)=(3,3) => global_id=660
[DBG]  agent 26 t=5 => decoded (sx,sy)=(4,3) => global_id=692
[DBG]  Complete path of agent 26:
[DBG]    Original: 13 14 46 47 79 80 81 82 83 115 116 148 180 212 244 276 277 309 341 373 405 437 469 501 502 534 533 565 597 629 628 660 692 724 756 755 
[DBG]    New:     13 14 46 47 79 80 81 82 83 115 116 148 180 212 244 276 277 309 341 373 405 437 469 501 502 534 533 565 597 629 661 660 692 724 756 755 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 13 14 46 47 79 80 81 82 83 115 116 148 180 212 244 276 277 309 341 373 405 437 469 501 502 534 533 
[DBG]    Local path (in submap): 565 597 629 661 660 692 
[DBG]    Suffix (out of submap): 724 756 755 
[DBG]  Original agent path length 26 je: 36
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 1: 13, 14, 46, 47, 79, 80, 81, 82, 83, 115, 116, 148, 180, 212, 244, 276, 277, 309, 341, 373, 405, 437, 469, 501, 502, 534, 533, 565, 597, 629, 661, 660, 692, 724, 756, 755, 
[DBG]  Path for agent 26 updated, resulting length: 36
[DBG]  Update the agent path 28 | Original local length: 13 | New local length: 4
[DBG]  agent 28 t=0 => decoded (sx,sy)=(2,2) => global_id=627
[DBG]  agent 28 t=1 => decoded (sx,sy)=(3,2) => global_id=659
[DBG]  agent 28 t=2 => decoded (sx,sy)=(4,2) => global_id=691
[DBG]  agent 28 t=3 => decoded (sx,sy)=(4,3) => global_id=692
[DBG]  Complete path of agent 28:
[DBG]    Original: 661 661 661 661 661 661 661 661 661 660 660 660 628 627 627 627 627 627 627 627 627 627 627 627 627 627 627 627 627 627 627 627 627 627 627 627 627 659 660 692 724 756 756 756 724 725 726 727 
[DBG]    New:     661 661 661 661 661 661 661 661 661 660 660 660 628 627 627 627 627 627 627 627 627 627 627 627 627 627 627 627 659 691 692 724 756 756 756 724 725 726 727 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 661 661 661 661 661 661 661 661 661 660 660 660 628 627 627 627 627 627 627 627 627 627 627 627 627 627 627 
[DBG]    Local path (in submap): 627 659 691 692 724 756 756 756 724 725 726 727 
[DBG]    Suffix (out of submap): 
[DBG]  Original agent path length 28 je: 48
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 2: 661, 661, 661, 661, 661, 661, 661, 661, 661, 660, 660, 660, 628, 627, 627, 627, 627, 627, 627, 627, 627, 627, 627, 627, 627, 627, 627, 627, 659, 691, 692, 724, 756, 756, 756, 724, 725, 726, 727, 
[DBG]  Path for agent 28 updated, resulting length: 39
[DBG]  Update the agent path 44 | Original local length: 1 | New local length: 1
[DBG]  agent 44 t=0 => decoded (sx,sy)=(1,0) => global_id=593
[DBG]  Complete path of agent 44:
[DBG]    Original: 156 124 123 122 154 153 185 217 249 248 247 279 311 343 375 407 439 438 470 469 468 467 499 531 530 529 561 593 592 591 623 655 687 719 751 783 815 847 848 
[DBG]    New:     156 124 123 122 154 153 185 217 249 248 247 279 311 343 375 407 439 438 470 469 468 467 499 531 530 529 561 593 592 591 623 655 687 719 751 783 815 847 848 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 156 124 123 122 154 153 185 217 249 248 247 279 311 343 375 407 439 438 470 469 468 467 499 531 530 529 561 
[DBG]    Local path (in submap): 593 
[DBG]    Suffix (out of submap): 592 591 623 655 687 719 751 783 815 847 848 
[DBG]  Original agent path length 44 je: 39
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 3: 156, 124, 123, 122, 154, 153, 185, 217, 249, 248, 247, 279, 311, 343, 375, 407, 439, 438, 470, 469, 468, 467, 499, 531, 530, 529, 561, 593, 592, 591, 623, 655, 687, 719, 751, 783, 815, 847, 848, 
[DBG]  Path for agent 44 updated, resulting length: 39
[DBG]  Update the agent path 57 | Original local length: 2 | New local length: 2
[DBG]  agent 57 t=0 => decoded (sx,sy)=(3,0) => global_id=657
[DBG]  agent 57 t=1 => decoded (sx,sy)=(4,0) => global_id=689
[DBG]  Complete path of agent 57:
[DBG]    Original: 185 217 249 281 313 312 311 343 343 375 407 407 406 405 404 403 402 401 433 465 464 496 528 529 561 593 625 657 689 688 687 719 751 783 815 847 848 880 912 944 976 977 
[DBG]    New:     185 217 249 281 313 312 311 343 343 375 407 407 406 405 404 403 402 401 433 465 464 496 528 529 561 593 625 657 689 688 687 719 751 783 815 847 848 880 912 944 976 977 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 185 217 249 281 313 312 311 343 343 375 407 407 406 405 404 403 402 401 433 465 464 496 528 529 561 593 625 
[DBG]    Local path (in submap): 657 689 
[DBG]    Suffix (out of submap): 688 687 719 751 783 815 847 848 880 912 944 976 977 
[DBG]  Original agent path length 57 je: 42
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 4: 185, 217, 249, 281, 313, 312, 311, 343, 343, 375, 407, 407, 406, 405, 404, 403, 402, 401, 433, 465, 464, 496, 528, 529, 561, 593, 625, 657, 689, 688, 687, 719, 751, 783, 815, 847, 848, 880, 912, 944, 976, 977, 
[DBG]  Path for agent 57 updated, resulting length: 42
[DBG]  Update the agent path 135 | Original local length: 2 | New local length: 2
[DBG]  agent 135 t=0 => decoded (sx,sy)=(0,0) => global_id=561
[DBG]  agent 135 t=1 => decoded (sx,sy)=(1,0) => global_id=593
[DBG]  Complete path of agent 135:
[DBG]    Original: 696 664 632 600 600 600 600 601 602 570 538 506 505 504 472 440 440 439 438 470 469 468 467 499 498 530 529 561 593 592 591 590 589 588 556 524 523 522 521 520 519 487 486 485 484 483 482 450 449 448 416 384 
[DBG]    New:     696 664 632 600 600 600 600 601 602 570 538 506 505 504 472 440 440 439 438 470 469 468 467 499 498 530 529 561 593 592 591 590 589 588 556 524 523 522 521 520 519 487 486 485 484 483 482 450 449 448 416 384 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 696 664 632 600 600 600 600 601 602 570 538 506 505 504 472 440 440 439 438 470 469 468 467 499 498 530 529 
[DBG]    Local path (in submap): 561 593 
[DBG]    Suffix (out of submap): 592 591 590 589 588 556 524 523 522 521 520 519 487 486 485 484 483 482 450 449 448 416 384 
[DBG]  Original agent path length 135 je: 52
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 5: 696, 664, 632, 600, 600, 600, 600, 601, 602, 570, 538, 506, 505, 504, 472, 440, 440, 439, 438, 470, 469, 468, 467, 499, 498, 530, 529, 561, 593, 592, 591, 590, 589, 588, 556, 524, 523, 522, 521, 520, 519, 487, 486, 485, 484, 483, 482, 450, 449, 448, 416, 384, 
[DBG]  Path for agent 135 updated, resulting length: 52
[DBG]  Paths successfully updated.
[DBG]  (LNS.cpp) New path for agent 3: 
[DBG]  468, 468, 468, 468, 468, 468, 468, 467, 466, 466, 466, 466, 466, 467, 499, 499, 499, 499, 499, 499, 499, 499, 531, 530, 529, 561, 593, 625, 657, 689, 721, 753, 752, 784, 783, 815, 847, 848, 880, 912, 
[DBG]  (LNS.cpp) New path for agent 26: 
[DBG]  13, 14, 46, 47, 79, 80, 81, 82, 83, 115, 116, 148, 180, 212, 244, 276, 277, 309, 341, 373, 405, 437, 469, 501, 502, 534, 533, 565, 597, 629, 661, 660, 692, 724, 756, 755, 
[DBG]  (LNS.cpp) New path for agent 28: 
[DBG]  661, 661, 661, 661, 661, 661, 661, 661, 661, 660, 660, 660, 628, 627, 627, 627, 627, 627, 627, 627, 627, 627, 627, 627, 627, 627, 627, 627, 659, 691, 692, 724, 756, 756, 756, 724, 725, 726, 727, 
[DBG]  (LNS.cpp) New path for agent 44: 
[DBG]  156, 124, 123, 122, 154, 153, 185, 217, 249, 248, 247, 279, 311, 343, 375, 407, 439, 438, 470, 469, 468, 467, 499, 531, 530, 529, 561, 593, 592, 591, 623, 655, 687, 719, 751, 783, 815, 847, 848, 
[DBG]  (LNS.cpp) New path for agent 57: 
[DBG]  185, 217, 249, 281, 313, 312, 311, 343, 343, 375, 407, 407, 406, 405, 404, 403, 402, 401, 433, 465, 464, 496, 528, 529, 561, 593, 625, 657, 689, 688, 687, 719, 751, 783, 815, 847, 848, 880, 912, 944, 976, 977, 
[DBG]  (LNS.cpp) New path for agent 135: 
[DBG]  696, 664, 632, 600, 600, 600, 600, 601, 602, 570, 538, 506, 505, 504, 472, 440, 440, 439, 438, 470, 469, 468, 467, 499, 498, 530, 529, 561, 593, 592, 591, 590, 589, 588, 556, 524, 523, 522, 521, 520, 519, 487, 486, 485, 484, 483, 482, 450, 449, 448, 416, 384, 
[DBG]  Delta value: 0.0358566
[DBG]  Rewarding metric index = 1
[DBG]  component_weights = {4.92324e-05, 0.999891, 2.16843e-05, 3.75955e-05}
[DBG]  opSuccess value: 1
[STAT] neighbor.sum_of_costs before recomputation: 242
[STAT] neighbor.old_sum_of_costs before recomputation: 251
[STAT] sum_of_costs before recomputation: 4335
[DBG]  Validate solution immediately after SAT success.
[WARNING] Problem after SAT: Vertex conflict between agents 26 and 28 at location 756 at timestep 34
[DBG]  [DEBUG] Attempting immediate repair via init_lns because problem occurred after SAT (should be applied only for conflicts...).
[DBG]  [DEBUG] Passing 150 agents to init_lns (skip=true).
[DBG]  [DEBUG] path_table contents for selected agents (neighbor.agents):
[DBG]    Agent 3 => controlling path length=40
[DBG]    Agent 26 => controlling path length=36
[DBG]    Agent 28 => controlling path length=39
[DBG]    Agent 44 => controlling path length=39
[DBG]    Agent 57 => controlling path length=42
[DBG]    Agent 135 => controlling path length=52
[DBG]  hodnota skip_initial_solution=1
[DBG]  We skip initialSolution => call buildCollisionData()
[DBG]  buildCollisionData() called – skip_initial_solution case.
[DBG]  Agents.size()=150, collision_graph.size()=150
[DBG]  agent 26 => updateCollidingPairs => foundCollision
[DBG]  agent 28 => updateCollidingPairs => foundCollision
[DBG]  agent 42 => updateCollidingPairs => foundCollision
[DBG]  Conflicting agent pairs:
[DBG]  agent 26 is in conflict with agent 28
[DBG]  agent 28 is in conflict with agent 42
[DBG]  buildCollisionData() => sum_of_costs=4326, num_of_colliding_pairs=2
[DBG]  buildCollisionData done => sum_of_costs=4326, num_of_colliding_pairs=2
[DBG]  sum_of_cost hodnota: 4326
[DBG]  After skip/init build => iteration_stats.back(): sum_of_costs=4326, collisions=2
[DEBUG] Using default neighbor generation strategy for conflicts: 0
	InitLNS(PP): runtime = 0.00169563, iterations = 2, colliding pairs = 0, initial colliding pairs = 2, solution cost = 4350, initial solution cost = 4326, failed iterations = 0
[DBG]  init_lns->sum_of_costs after init_lns->run: 4350
[DBG]  sum_of_costs after assignment from init_lns->run: 4350
[DBG]  Recomputing sum_of_cost by dividing neighbor.sum_of_costs and neighbor.old_sum_of_costs
[STAT] sum_of_costs after recomputation: 4350
[STAT] Iteration 112
[DBG]  Random chance did not select SAT operator (r=97), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 112
[DBG]  Random chance did not select SAT operator (r=11), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 112
[DBG]  Random chance did not select SAT operator (r=15), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 112
[DBG]  Random chance did not select SAT operator (r=32), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 112
[DBG]  Random chance did not select SAT operator (r=58), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 112
[DBG]  Random chance did not select SAT operator (r=33), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 112
[DBG]  Random chance did not select SAT operator (r=71), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 112
[DBG]  Random chance did not select SAT operator (r=87), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 112
[DBG]  Random chance did not select SAT operator (r=78), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 112
[DBG]  Random chance did not select SAT operator (r=11), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 112
[DBG]  Random chance did not select SAT operator (r=74), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 112
[DBG]  Random chance did not select SAT operator (r=23), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 112
[DBG]  Random chance did not select SAT operator (r=33), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 112
[DBG]  Random chance did not select SAT operator (r=68), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 112
[DBG]  Using SAT operator (destroy+repair SAT).
[DBG]  ====================
[DBG]  SAT destroy operator called.
[DBG]  SAT heuristic: 2
[DBG]  key_agent_id: 28
[DBG]  key_agent_id global path length: 48
[DBG]  Submap content (global positions):
[DBG]  626 627 628 629 630 
[DBG]  658 659 660 661 662 
[DBG]  690 691 692 693 694 
[DBG]  722 723 724 725 726 
[DBG]  754 755 756 757 758 
[DBG]  Map content with agents and obstacles:
[DBG]  X . . . X 
[DBG]  . A . . X 
[DBG]  X . A X X 
[DBG]  . X A . . 
[DBG]  X . . . X 
[DBG]  content of the map structure that we pass to the SAT solver:
[DBG]  -1  1  1  1  -1  
[DBG]  1  1  1  1  -1  
[DBG]  -1  1  1  -1  -1  
[DBG]  1  -1  1  1  1  
[DBG]  -1  1  1  1  -1  
[DBG]  Identifying agents in a submap for rescheduling (when key_agent is there at the time 39):
[DBG]  Agent 26 found intervals in the sub-map:
[DBG]   [28..33]
[DBG]  Agent 26 is not in sub-map at time 39 (intervals: 
[DBG]  [28..33] )
[DBG]  Agent 28 found intervals in the sub-map:
[DBG]   [0..42]
[DBG]  Agent 28 (interval in submap: [0..42]) contains time 39, added to replan.
[DBG]  Agent 42 found intervals in the sub-map:
[DBG]   [40..45]
[DBG]  Agent 42 is not in sub-map at time 39 (intervals: 
[DBG]  [40..45] )
[DBG]  Agent 55 found intervals in the sub-map:
[DBG]   [36..43]
[DBG]  Agent 55 (interval in submap: [36..43]) contains time 39, added to replan.
[DBG]  Agent 69 found intervals in the sub-map:
[DBG]   [35..40]
[DBG]  Agent 69 (interval in submap: [35..40]) contains time 39, added to replan.
[DBG]  Agent 148 found intervals in the sub-map:
[DBG]   [41..43]
[DBG]  Agent 148 is not in sub-map at time 39 (intervals: 
[DBG]  [41..43] )
[DBG]  Agent 28 | Start (global): 692 -> (local): (2, 2) at time 39 | Goal (global): 726 -> (local): (3, 4) at time 42
[DBG]  Agent 55 | Start (global): 659 -> (local): (1, 1) at time 39 | Goal (global): 692 -> (local): (2, 2) at time 43
[DBG]  Agent 69 | Start (global): 724 -> (local): (3, 2) at time 39 | Goal (global): 756 -> (local): (4, 2) at time 40
[DBG]  [REPAIR] SAT destroy operator called.
[DBG]  [REPAIR] SAT operator – launching subproblem FOR OPTIMIZATION.
[DBG]  Creating local paths (sx, sy) in the submap for T_sync = 39
[DBG]    Agent 28 (global paths from T=39 to 42) has local path: (2,2) (3,2) (3,3) (3,4) 
[DBG]    Agent 55 (global paths from T=39 to 43) has local path: (1,1) (1,1) (1,1) (1,2) (2,2) 
[DBG]    Agent 69 (global paths from T=39 to 40) has local path: (3,2) (4,2) 
[DBG]  Checking input data for SAT solver:
[DBG]    - Number of agents to replan: 3
[DBG]  Agent 28 has the original local path length: 4 => Start (2,2), Goal (3,4)
[DBG]  Agent 55 has the original local path length: 5 => Start (1,1), Goal (2,2)
[DBG]  Agent 69 has the original local path length: 2 => Start (3,2), Goal (4,2)
[DBG]  Start position: (2, 2), (1, 1), (3, 2), 
[DBG]  Goal position: (3, 4), (2, 2), (4, 2), 
[DBG]  SAT instance and solver created.
Currently solving
Instance name: scen
Map name: map
Encoding used: disappear_at_goal
SAT solver used: Kissat
Optimizing function: sum of costs
Number of agents: 3
Mks LB: 4
SoC LB: 9
Delta: 0
Remaining time: 300000 [ms]

Vertex conflict! Agents 1, 2, timestep 3, location 0
Found plan [agents = 3] [timesteps = 4]
Agent #0 : 8 10 11 12 
Agent #1 : 4 7 8 0 
Agent #2 : 10 14 0 0 

[STAT] Solver returned: 0
[DBG]  Agent (index) 28 | New local path (submap idx):
[DBG]  8 10 11 12 
[DBG]  Agent (index) 55 | New local path (submap idx):
[DBG]  4 7 8 
[DBG]  Agent (index) 69 | New local path (submap idx):
[DBG]  10 14 
[DBG]  Update the agent path 28 | Original local length: 4 | New local length: 4
[DBG]  agent 28 t=0 => decoded (sx,sy)=(2,2) => global_id=692
[DBG]  agent 28 t=1 => decoded (sx,sy)=(3,2) => global_id=724
[DBG]  agent 28 t=2 => decoded (sx,sy)=(3,3) => global_id=725
[DBG]  agent 28 t=3 => decoded (sx,sy)=(3,4) => global_id=726
[DBG]  Complete path of agent 28:
[DBG]    Original: 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 660 660 660 660 660 660 660 660 660 692 724 725 726 727 728 728 728 727 
[DBG]    New:     661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 660 660 660 660 660 660 660 660 660 692 724 725 726 727 728 728 728 727 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 660 660 660 660 660 660 660 660 660 
[DBG]    Local path (in submap): 692 724 725 726 
[DBG]    Suffix (out of submap): 727 728 728 728 727 
[DBG]  Original agent path length 28 je: 48
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 0: 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 660, 660, 660, 660, 660, 660, 660, 660, 660, 692, 724, 725, 726, 727, 728, 728, 728, 727, 
[DBG]  Path for agent 28 updated, resulting length: 48
[DBG]  Update the agent path 55 | Original local length: 5 | New local length: 3
[DBG]  agent 55 t=0 => decoded (sx,sy)=(1,1) => global_id=659
[DBG]  agent 55 t=1 => decoded (sx,sy)=(2,1) => global_id=691
[DBG]  agent 55 t=2 => decoded (sx,sy)=(2,2) => global_id=692
[DBG]  Complete path of agent 55:
[DBG]    Original: 34 35 67 68 100 132 133 134 135 136 137 138 138 139 140 141 173 205 237 269 270 271 303 304 336 368 400 432 464 496 528 529 561 593 625 657 658 659 659 659 659 659 660 692 
[DBG]    New:     34 35 67 68 100 132 133 134 135 136 137 138 138 139 140 141 173 205 237 269 270 271 303 304 336 368 400 432 464 496 528 529 561 593 625 657 658 659 659 659 691 692 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 34 35 67 68 100 132 133 134 135 136 137 138 138 139 140 141 173 205 237 269 270 271 303 304 336 368 400 432 464 496 528 529 561 593 625 657 658 659 659 
[DBG]    Local path (in submap): 659 691 692 
[DBG]    Suffix (out of submap): 
[DBG]  Original agent path length 55 je: 44
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 1: 34, 35, 67, 68, 100, 132, 133, 134, 135, 136, 137, 138, 138, 139, 140, 141, 173, 205, 237, 269, 270, 271, 303, 304, 336, 368, 400, 432, 464, 496, 528, 529, 561, 593, 625, 657, 658, 659, 659, 659, 691, 692, 
[DBG]  Path for agent 55 updated, resulting length: 42
[DBG]  Update the agent path 69 | Original local length: 2 | New local length: 2
[DBG]  agent 69 t=0 => decoded (sx,sy)=(3,2) => global_id=724
[DBG]  agent 69 t=1 => decoded (sx,sy)=(4,2) => global_id=756
[DBG]  Complete path of agent 69:
[DBG]    Original: 4 5 6 7 8 40 41 42 74 106 107 108 140 141 173 205 237 237 269 270 302 303 304 336 368 400 432 464 496 528 529 561 593 625 657 658 659 691 692 724 756 788 820 
[DBG]    New:     4 5 6 7 8 40 41 42 74 106 107 108 140 141 173 205 237 237 269 270 302 303 304 336 368 400 432 464 496 528 529 561 593 625 657 658 659 691 692 724 756 788 820 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 4 5 6 7 8 40 41 42 74 106 107 108 140 141 173 205 237 237 269 270 302 303 304 336 368 400 432 464 496 528 529 561 593 625 657 658 659 691 692 
[DBG]    Local path (in submap): 724 756 
[DBG]    Suffix (out of submap): 788 820 
[DBG]  Original agent path length 69 je: 43
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 2: 4, 5, 6, 7, 8, 40, 41, 42, 74, 106, 107, 108, 140, 141, 173, 205, 237, 237, 269, 270, 302, 303, 304, 336, 368, 400, 432, 464, 496, 528, 529, 561, 593, 625, 657, 658, 659, 691, 692, 724, 756, 788, 820, 
[DBG]  Path for agent 69 updated, resulting length: 43
[DBG]  Paths successfully updated.
[DBG]  (LNS.cpp) New path for agent 28: 
[DBG]  661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 660, 660, 660, 660, 660, 660, 660, 660, 660, 692, 724, 725, 726, 727, 728, 728, 728, 727, 
[DBG]  (LNS.cpp) New path for agent 55: 
[DBG]  34, 35, 67, 68, 100, 132, 133, 134, 135, 136, 137, 138, 138, 139, 140, 141, 173, 205, 237, 269, 270, 271, 303, 304, 336, 368, 400, 432, 464, 496, 528, 529, 561, 593, 625, 657, 658, 659, 659, 659, 691, 692, 
[DBG]  (LNS.cpp) New path for agent 69: 
[DBG]  4, 5, 6, 7, 8, 40, 41, 42, 74, 106, 107, 108, 140, 141, 173, 205, 237, 237, 269, 270, 302, 303, 304, 336, 368, 400, 432, 464, 496, 528, 529, 561, 593, 625, 657, 658, 659, 691, 692, 724, 756, 788, 820, 
[DBG]  Delta value: 0.0151515
[DBG]  Rewarding metric index = 1
[DBG]  component_weights = {4.6073e-05, 0.999898, 2.02928e-05, 3.51829e-05}
[DBG]  opSuccess value: 1
[STAT] neighbor.sum_of_costs before recomputation: 130
[STAT] neighbor.old_sum_of_costs before recomputation: 132
[STAT] sum_of_costs before recomputation: 4350
[DBG]  Validate solution immediately after SAT success.
[WARNING] Problem after SAT: Target conflict: agent 42 (len 47) traverses target of agent 55 (len 41) at location 692 at timestep 42
[DBG]  [DEBUG] Attempting immediate repair via init_lns because problem occurred after SAT (should be applied only for conflicts...).
[DBG]  [DEBUG] Passing 150 agents to init_lns (skip=true).
[DBG]  [DEBUG] path_table contents for selected agents (neighbor.agents):
[DBG]    Agent 28 => controlling path length=48
[DBG]    Agent 55 => controlling path length=42
[DBG]    Agent 69 => controlling path length=43
[DBG]  hodnota skip_initial_solution=1
[DBG]  We skip initialSolution => call buildCollisionData()
[DBG]  buildCollisionData() called – skip_initial_solution case.
[DBG]  Agents.size()=150, collision_graph.size()=150
[DBG]  agent 42 => updateCollidingPairs => foundCollision
[DBG]  agent 55 => updateCollidingPairs => foundCollision
[DBG]  Conflicting agent pairs:
[DBG]  agent 42 is in conflict with agent 55
[DBG]  buildCollisionData() => sum_of_costs=4348, num_of_colliding_pairs=1
[DBG]  buildCollisionData done => sum_of_costs=4348, num_of_colliding_pairs=1
[DBG]  sum_of_cost hodnota: 4348
[DBG]  After skip/init build => iteration_stats.back(): sum_of_costs=4348, collisions=1
[DEBUG] Using default neighbor generation strategy for conflicts: 1
	InitLNS(PP): runtime = 0.00246908, iterations = 2, colliding pairs = 0, initial colliding pairs = 1, solution cost = 4349, initial solution cost = 4348, failed iterations = 0
[DBG]  init_lns->sum_of_costs after init_lns->run: 4349
[DBG]  sum_of_costs after assignment from init_lns->run: 4349
[DBG]  Recomputing sum_of_cost by dividing neighbor.sum_of_costs and neighbor.old_sum_of_costs
[STAT] sum_of_costs after recomputation: 4349
[STAT] Iteration 113
[DBG]  Random chance did not select SAT operator (r=63), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 113
[DBG]  Random chance did not select SAT operator (r=41), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 113
[DBG]  Random chance did not select SAT operator (r=77), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 113
[DBG]  Random chance did not select SAT operator (r=30), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 113
[DBG]  Random chance did not select SAT operator (r=35), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 113
[DBG]  Random chance did not select SAT operator (r=70), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 113
[DBG]  Using SAT operator (destroy+repair SAT).
[DBG]  ====================
[DBG]  SAT destroy operator called.
[DBG]  SAT heuristic: 2
[DBG]  key_agent_id: 28
[DBG]  key_agent_id global path length: 48
[DBG]  Submap content (global positions):
[DBG]  595 596 597 598 599 
[DBG]  627 628 629 630 631 
[DBG]  659 660 661 662 663 
[DBG]  691 692 693 694 695 
[DBG]  723 724 725 726 727 
[DBG]  Map content with agents and obstacles:
[DBG]  X . . X . 
[DBG]  . . . X . 
[DBG]  A . A X X 
[DBG]  . A X X X 
[DBG]  X . . A . 
[DBG]  content of the map structure that we pass to the SAT solver:
[DBG]  -1  1  1  -1  1  
[DBG]  1  1  1  -1  1  
[DBG]  1  1  1  -1  -1  
[DBG]  1  1  -1  -1  -1  
[DBG]  -1  1  1  1  1  
[DBG]  Identifying agents in a submap for rescheduling (when key_agent is there at the time 9):
[DBG]  Agent 7 found intervals in the sub-map:
[DBG]   [7..12]
[DBG]  Agent 7 (interval in submap: [7..12]) contains time 9, added to replan.
[DBG]  Agent 28 found intervals in the sub-map:
[DBG]   [0..43] [47..47]
[DBG]  Agent 28 (interval in submap: [0..43]) contains time 9, added to replan.
[DBG]  Agent 46 found intervals in the sub-map:
[DBG]   [5..7]
[DBG]  Agent 46 is not in sub-map at time 9 (intervals: 
[DBG]  [5..7] )
[DBG]  Agent 70 found intervals in the sub-map:
[DBG]   [16..21]
[DBG]  Agent 70 is not in sub-map at time 9 (intervals: 
[DBG]  [16..21] )
[DBG]  Agent 74 found intervals in the sub-map:
[DBG]   [9..13]
[DBG]  Agent 74 (interval in submap: [9..13]) contains time 9, added to replan.
[DBG]  Agent 89 found intervals in the sub-map:
[DBG]   [5..10]
[DBG]  Agent 89 (interval in submap: [5..10]) contains time 9, added to replan.
[DBG]  Agent 91 found intervals in the sub-map:
[DBG]   [3..6]
[DBG]  Agent 91 is not in sub-map at time 9 (intervals: 
[DBG]  [3..6] )
[DBG]  Agent 7 | Start (global): 726 -> (local): (4, 3) at time 9 | Goal (global): 727 -> (local): (4, 4) at time 12
[DBG]  Agent 28 | Start (global): 661 -> (local): (2, 2) at time 9 | Goal (global): 727 -> (local): (4, 4) at time 43
[DBG]  Agent 74 | Start (global): 659 -> (local): (2, 0) at time 9 | Goal (global): 597 -> (local): (0, 2) at time 13
[DBG]  Agent 89 | Start (global): 692 -> (local): (3, 1) at time 9 | Goal (global): 724 -> (local): (4, 1) at time 10
[DBG]  [REPAIR] SAT destroy operator called.
[DBG]  [REPAIR] SAT operator – launching subproblem FOR OPTIMIZATION.
[DBG]  Creating local paths (sx, sy) in the submap for T_sync = 9
[DBG]    Agent 7 (global paths from T=9 to 12) has local path: (4,3) (4,4) (4,4) (4,4) 
[DBG]    Agent 28 (global paths from T=9 to 43) has local path: (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,1) (2,1) (2,1) (2,1) (2,1) (2,1) (2,1) (2,1) (2,1) (3,1) (4,1) (4,2) (4,3) (4,4) 
[DBG]    Agent 74 (global paths from T=9 to 13) has local path: (2,0) (1,0) (1,1) (0,1) (0,2) 
[DBG]    Agent 89 (global paths from T=9 to 10) has local path: (3,1) (4,1) 
[DBG]  Checking input data for SAT solver:
[DBG]    - Number of agents to replan: 4
[DBG]  Agent 7 has the original local path length: 4 => Start (4,3), Goal (4,4)
[DBG]  Agent 28 has the original local path length: 35 => Start (2,2), Goal (4,4)
[DBG]  Agent 74 has the original local path length: 5 => Start (2,0), Goal (0,2)
[DBG]  Agent 89 has the original local path length: 2 => Start (3,1), Goal (4,1)
[DBG]  Start position: (4, 3), (2, 2), (2, 0), (3, 1), 
[DBG]  Goal position: (4, 4), (4, 4), (0, 2), (4, 1), 
[DBG]  SAT instance and solver created.
Currently solving
Instance name: scen
Map name: map
Encoding used: disappear_at_goal
SAT solver used: Kissat
Optimizing function: sum of costs
Number of agents: 4
Mks LB: 7
SoC LB: 16
Delta: 0
Remaining time: 300000 [ms]

Vertex conflict! Agents 0, 2, timestep 5, location 0
Swapping conflict! Agents 0, 2, timestep 5, edge (0,0)
Vertex conflict! Agents 0, 2, timestep 6, location 0
Vertex conflict! Agents 0, 3, timestep 2, location 0
Swapping conflict! Agents 0, 3, timestep 2, edge (0,0)
Vertex conflict! Agents 0, 3, timestep 3, location 0
Swapping conflict! Agents 0, 3, timestep 3, edge (0,0)
Vertex conflict! Agents 0, 3, timestep 4, location 0
Swapping conflict! Agents 0, 3, timestep 4, edge (0,0)
Vertex conflict! Agents 0, 3, timestep 5, location 0
Swapping conflict! Agents 0, 3, timestep 5, edge (0,0)
Vertex conflict! Agents 0, 3, timestep 6, location 0
Vertex conflict! Agents 2, 3, timestep 5, location 0
Swapping conflict! Agents 2, 3, timestep 5, edge (0,0)
Vertex conflict! Agents 2, 3, timestep 6, location 0
Found plan [agents = 4] [timesteps = 7]
Agent #0 : 14 15 0 0 0 0 0 
Agent #1 : 9 8 11 12 13 14 15 
Agent #2 : 7 3 4 5 1 0 0 
Agent #3 : 11 12 0 0 0 0 0 

[STAT] Solver returned: 0
[DBG]  Agent (index) 7 | New local path (submap idx):
[DBG]  14 15 
[DBG]  Agent (index) 28 | New local path (submap idx):
[DBG]  9 8 11 12 13 14 15 
[DBG]  Agent (index) 74 | New local path (submap idx):
[DBG]  7 3 4 5 1 
[DBG]  Agent (index) 89 | New local path (submap idx):
[DBG]  11 12 
[DBG]  Update the agent path 7 | Original local length: 4 | New local length: 2
[DBG]  agent 7 t=0 => decoded (sx,sy)=(4,3) => global_id=726
[DBG]  agent 7 t=1 => decoded (sx,sy)=(4,4) => global_id=727
[DBG]  Complete path of agent 7:
[DBG]    Original: 756 755 755 755 755 755 756 724 725 726 727 727 727 728 728 729 761 793 792 824 856 855 887 886 918 950 982 983 984 952 920 921 
[DBG]    New:     756 755 755 755 755 755 756 724 725 726 727 728 728 729 761 793 792 824 856 855 887 886 918 950 982 983 984 952 920 921 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 756 755 755 755 755 755 756 724 725 
[DBG]    Local path (in submap): 726 727 728 728 
[DBG]    Suffix (out of submap): 729 761 793 792 824 856 855 887 886 918 950 982 983 984 952 920 921 
[DBG]  Original agent path length 7 je: 32
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 0: 756, 755, 755, 755, 755, 755, 756, 724, 725, 726, 727, 728, 728, 729, 761, 793, 792, 824, 856, 855, 887, 886, 918, 950, 982, 983, 984, 952, 920, 921, 
[DBG]  Path for agent 7 updated, resulting length: 30
[DBG]  Update the agent path 28 | Original local length: 35 | New local length: 7
[DBG]  agent 28 t=0 => decoded (sx,sy)=(2,2) => global_id=661
[DBG]  agent 28 t=1 => decoded (sx,sy)=(2,1) => global_id=660
[DBG]  agent 28 t=2 => decoded (sx,sy)=(3,1) => global_id=692
[DBG]  agent 28 t=3 => decoded (sx,sy)=(4,1) => global_id=724
[DBG]  agent 28 t=4 => decoded (sx,sy)=(4,2) => global_id=725
[DBG]  agent 28 t=5 => decoded (sx,sy)=(4,3) => global_id=726
[DBG]  agent 28 t=6 => decoded (sx,sy)=(4,4) => global_id=727
[DBG]  Complete path of agent 28:
[DBG]    Original: 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 660 660 660 660 660 660 660 660 660 692 724 725 726 727 728 728 728 727 
[DBG]    New:     661 661 661 661 661 661 661 661 661 661 660 692 724 725 726 727 728 728 728 727 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 661 661 661 661 661 661 661 661 661 
[DBG]    Local path (in submap): 661 660 692 724 725 726 727 728 728 728 727 
[DBG]    Suffix (out of submap): 
[DBG]  Original agent path length 28 je: 48
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 1: 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 660, 692, 724, 725, 726, 727, 728, 728, 728, 727, 
[DBG]  Path for agent 28 updated, resulting length: 20
[DBG]  Update the agent path 74 | Original local length: 5 | New local length: 5
[DBG]  agent 74 t=0 => decoded (sx,sy)=(2,0) => global_id=659
[DBG]  agent 74 t=1 => decoded (sx,sy)=(1,0) => global_id=627
[DBG]  agent 74 t=2 => decoded (sx,sy)=(1,1) => global_id=628
[DBG]  agent 74 t=3 => decoded (sx,sy)=(1,2) => global_id=629
[DBG]  agent 74 t=4 => decoded (sx,sy)=(0,2) => global_id=597
[DBG]  Complete path of agent 74:
[DBG]    Original: 752 752 751 719 687 688 656 657 658 659 627 628 596 597 565 533 565 566 534 502 503 504 
[DBG]    New:     752 752 751 719 687 688 656 657 658 659 627 628 629 597 565 533 565 566 534 502 503 504 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 752 752 751 719 687 688 656 657 658 
[DBG]    Local path (in submap): 659 627 628 629 597 
[DBG]    Suffix (out of submap): 565 533 565 566 534 502 503 504 
[DBG]  Original agent path length 74 je: 22
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 2: 752, 752, 751, 719, 687, 688, 656, 657, 658, 659, 627, 628, 629, 597, 565, 533, 565, 566, 534, 502, 503, 504, 
[DBG]  Path for agent 74 updated, resulting length: 22
[DBG]  Update the agent path 89 | Original local length: 2 | New local length: 2
[DBG]  agent 89 t=0 => decoded (sx,sy)=(3,1) => global_id=692
[DBG]  agent 89 t=1 => decoded (sx,sy)=(4,1) => global_id=724
[DBG]  Complete path of agent 89:
[DBG]    Original: 437 469 501 533 565 597 629 628 660 692 724 756 788 820 821 822 854 886 918 950 982 1014 1015 
[DBG]    New:     437 469 501 533 565 597 629 628 660 692 724 756 788 820 821 822 854 886 918 950 982 1014 1015 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 437 469 501 533 565 597 629 628 660 
[DBG]    Local path (in submap): 692 724 
[DBG]    Suffix (out of submap): 756 788 820 821 822 854 886 918 950 982 1014 1015 
[DBG]  Original agent path length 89 je: 23
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 3: 437, 469, 501, 533, 565, 597, 629, 628, 660, 692, 724, 756, 788, 820, 821, 822, 854, 886, 918, 950, 982, 1014, 1015, 
[DBG]  Path for agent 89 updated, resulting length: 23
[DBG]  Paths successfully updated.
[DBG]  (LNS.cpp) New path for agent 7: 
[DBG]  756, 755, 755, 755, 755, 755, 756, 724, 725, 726, 727, 728, 728, 729, 761, 793, 792, 824, 856, 855, 887, 886, 918, 950, 982, 983, 984, 952, 920, 921, 
[DBG]  (LNS.cpp) New path for agent 28: 
[DBG]  661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 660, 692, 724, 725, 726, 727, 728, 728, 728, 727, 
[DBG]  (LNS.cpp) New path for agent 74: 
[DBG]  752, 752, 751, 719, 687, 688, 656, 657, 658, 659, 627, 628, 629, 597, 565, 533, 565, 566, 534, 502, 503, 504, 
[DBG]  (LNS.cpp) New path for agent 89: 
[DBG]  437, 469, 501, 533, 565, 597, 629, 628, 660, 692, 724, 756, 788, 820, 821, 822, 854, 886, 918, 950, 982, 1014, 1015, 
[DBG]  Delta value: 0.247934
[DBG]  Rewarding metric index = 1
[DBG]  component_weights = {3.50743e-05, 0.999923, 1.54484e-05, 2.67839e-05}
[DBG]  opSuccess value: 1
[STAT] neighbor.sum_of_costs before recomputation: 91
[STAT] neighbor.old_sum_of_costs before recomputation: 121
[STAT] sum_of_costs before recomputation: 4349
[DBG]  Validate solution immediately after SAT success.
[WARNING] Problem after SAT: Vertex conflict between agents 24 and 7 at location 728 at timestep 12
[DBG]  [DEBUG] Attempting immediate repair via init_lns because problem occurred after SAT (should be applied only for conflicts...).
[DBG]  [DEBUG] Passing 150 agents to init_lns (skip=true).
[DBG]  [DEBUG] path_table contents for selected agents (neighbor.agents):
[DBG]    Agent 7 => controlling path length=30
[DBG]    Agent 28 => controlling path length=20
[DBG]    Agent 74 => controlling path length=22
[DBG]    Agent 89 => controlling path length=23
[DBG]  hodnota skip_initial_solution=1
[DBG]  We skip initialSolution => call buildCollisionData()
[DBG]  buildCollisionData() called – skip_initial_solution case.
[DBG]  Agents.size()=150, collision_graph.size()=150
[DBG]  agent 7 => updateCollidingPairs => foundCollision
[DBG]  agent 11 => updateCollidingPairs => foundCollision
[DBG]  agent 24 => updateCollidingPairs => foundCollision
[DBG]  agent 28 => updateCollidingPairs => foundCollision
[DBG]  agent 39 => updateCollidingPairs => foundCollision
[DBG]  agent 42 => updateCollidingPairs => foundCollision
[DBG]  agent 86 => updateCollidingPairs => foundCollision
[DBG]  agent 142 => updateCollidingPairs => foundCollision
[DBG]  Conflicting agent pairs:
[DBG]  agent 7 is in conflict with agent 24
[DBG]  agent 7 is in conflict with agent 39
[DBG]  agent 7 is in conflict with agent 142
[DBG]  agent 11 is in conflict with agent 28
[DBG]  agent 28 is in conflict with agent 42
[DBG]  agent 28 is in conflict with agent 86
[DBG]  buildCollisionData() => sum_of_costs=4319, num_of_colliding_pairs=6
[DBG]  buildCollisionData done => sum_of_costs=4319, num_of_colliding_pairs=6
[DBG]  sum_of_cost hodnota: 4319
[DBG]  After skip/init build => iteration_stats.back(): sum_of_costs=4319, collisions=6
[DEBUG] Using default neighbor generation strategy for conflicts: 1
[DEBUG] Using default neighbor generation strategy for conflicts: 1
[DEBUG] Using default neighbor generation strategy for conflicts: 1
[DEBUG] Using default neighbor generation strategy for conflicts: 2
[DEBUG] Using default neighbor generation strategy for conflicts: 2
[DEBUG] Using default neighbor generation strategy for conflicts: 2
[DEBUG] Using default neighbor generation strategy for conflicts: 1
[DEBUG] Using default neighbor generation strategy for conflicts: 2
[DEBUG] Using default neighbor generation strategy for conflicts: 1
	InitLNS(PP): runtime = 0.0171015, iterations = 10, colliding pairs = 0, initial colliding pairs = 6, solution cost = 4351, initial solution cost = 4319, failed iterations = 0
[DBG]  init_lns->sum_of_costs after init_lns->run: 4351
[DBG]  sum_of_costs after assignment from init_lns->run: 4351
[DBG]  Recomputing sum_of_cost by dividing neighbor.sum_of_costs and neighbor.old_sum_of_costs
[STAT] sum_of_costs after recomputation: 4351
[STAT] Iteration 114
[DBG]  Random chance did not select SAT operator (r=56), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 114
[DBG]  Random chance did not select SAT operator (r=13), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 114
[DBG]  Random chance did not select SAT operator (r=59), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 114
[DBG]  Random chance did not select SAT operator (r=48), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 114
[DBG]  Random chance did not select SAT operator (r=36), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 114
[DBG]  Random chance did not select SAT operator (r=26), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 114
[DBG]  Random chance did not select SAT operator (r=53), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 114
[DBG]  Using SAT operator (destroy+repair SAT).
[DBG]  ====================
[DBG]  SAT destroy operator called.
[DBG]  SAT heuristic: 2
[DBG]  key_agent_id: 28
[DBG]  key_agent_id global path length: 62
[DBG]  Submap content (global positions):
[DBG]  658 659 660 661 662 
[DBG]  690 691 692 693 694 
[DBG]  722 723 724 725 726 
[DBG]  754 755 756 757 758 
[DBG]  786 787 788 789 790 
[DBG]  Map content with agents and obstacles:
[DBG]  . . . . X 
[DBG]  X . . X X 
[DBG]  . X A . . 
[DBG]  X . . A X 
[DBG]  . . . X . 
[DBG]  content of the map structure that we pass to the SAT solver:
[DBG]  1  1  1  1  -1  
[DBG]  -1  1  1  -1  -1  
[DBG]  1  -1  1  1  1  
[DBG]  -1  1  1  1  -1  
[DBG]  1  1  1  -1  1  
[DBG]  Identifying agents in a submap for rescheduling (when key_agent is there at the time 57):
[DBG]  Agent 28 found intervals in the sub-map:
[DBG]   [0..60]
[DBG]  Agent 28 (interval in submap: [0..60]) contains time 57, added to replan.
[DBG]  Agent 42 found intervals in the sub-map:
[DBG]   [55..59]
[DBG]  Agent 42 (interval in submap: [55..59]) contains time 57, added to replan.
[DBG]  Agent 28 | Start (global): 724 -> (local): (2, 2) at time 57 | Goal (global): 726 -> (local): (2, 4) at time 60
[DBG]  Agent 42 | Start (global): 757 -> (local): (3, 3) at time 57 | Goal (global): 726 -> (local): (2, 4) at time 59
[DBG]  [REPAIR] SAT destroy operator called.
[DBG]  [REPAIR] SAT operator – launching subproblem FOR OPTIMIZATION.
[DBG]  Creating local paths (sx, sy) in the submap for T_sync = 57
[DBG]    Agent 28 (global paths from T=57 to 60) has local path: (2,2) (2,2) (2,3) (2,4) 
[DBG]    Agent 42 (global paths from T=57 to 59) has local path: (3,3) (2,3) (2,4) 
[DBG]  Checking input data for SAT solver:
[DBG]    - Number of agents to replan: 2
[DBG]  Agent 28 has the original local path length: 4 => Start (2,2), Goal (2,4)
[DBG]  Agent 42 has the original local path length: 3 => Start (3,3), Goal (2,4)
[DBG]  Start position: (2, 2), (3, 3), 
[DBG]  Goal position: (2, 4), (2, 4), 
[DBG]  SAT instance and solver created.
Currently solving
Instance name: scen
Map name: map
Encoding used: disappear_at_goal
SAT solver used: Kissat
Optimizing function: sum of costs
Number of agents: 2
Mks LB: 3
SoC LB: 6
Delta: 0
Remaining time: 300000 [ms]

[STAT] Solver returned: -1
[DBG]  SAT solver failed.
[STAT] SAT solver failed to find a valid solution.
[DBG]  ====================
[DBG]  SAT destroy operator called.
[DBG]  SAT heuristic: 2
[DBG]  key_agent_id: 28
[DBG]  key_agent_id global path length: 62
[DBG]  Submap content (global positions):
[DBG]  658 659 660 661 662 
[DBG]  690 691 692 693 694 
[DBG]  722 723 724 725 726 
[DBG]  754 755 756 757 758 
[DBG]  786 787 788 789 790 
[DBG]  Map content with agents and obstacles:
[DBG]  . . . . X 
[DBG]  X . . X X 
[DBG]  . X A . . 
[DBG]  X . . . X 
[DBG]  . . . X . 
[DBG]  content of the map structure that we pass to the SAT solver:
[DBG]  1  1  1  1  -1  
[DBG]  -1  1  1  -1  -1  
[DBG]  1  -1  1  1  1  
[DBG]  -1  1  1  1  -1  
[DBG]  1  1  1  -1  1  
[DBG]  Identifying agents in a submap for rescheduling (when key_agent is there at the time 43):
[DBG]  Agent 28 found intervals in the sub-map:
[DBG]   [0..60]
[DBG]  Agent 28 (interval in submap: [0..60]) contains time 43, added to replan.
[DBG]  Agent 42 found intervals in the sub-map:
[DBG]   [55..59]
[DBG]  Agent 42 is not in sub-map at time 43 (intervals: 
[DBG]  [55..59] )
[DBG]  Agent 55 found intervals in the sub-map:
[DBG]   [35..38]
[DBG]  Agent 55 is not in sub-map at time 43 (intervals: 
[DBG]  [35..38] )
[DBG]  Agent 148 found intervals in the sub-map:
[DBG]   [27..30]
[DBG]  Agent 148 is not in sub-map at time 43 (intervals: 
[DBG]  [27..30] )
[DBG]  Agent 28 | Start (global): 724 -> (local): (2, 2) at time 43 | Goal (global): 726 -> (local): (2, 4) at time 60
[DBG]  [REPAIR] SAT destroy operator called.
[DBG]  [REPAIR] SAT operator – launching subproblem FOR OPTIMIZATION.
[DBG]  Creating local paths (sx, sy) in the submap for T_sync = 43
[DBG]    Agent 28 (global paths from T=43 to 60) has local path: (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,3) (2,4) 
[DBG]  Checking input data for SAT solver:
[DBG]    - Number of agents to replan: 1
[DBG]  Agent 28 has the original local path length: 18 => Start (2,2), Goal (2,4)
[DBG]  Start position: (2, 2), 
[DBG]  Goal position: (2, 4), 
[DBG]  SAT instance and solver created.
Currently solving
Instance name: scen
Map name: map
Encoding used: disappear_at_goal
SAT solver used: Kissat
Optimizing function: sum of costs
Number of agents: 1
Mks LB: 3
SoC LB: 3
Delta: 0
Remaining time: 300000 [ms]

Found plan [agents = 1] [timesteps = 3]
Agent #0 : 7 8 9 

[STAT] Solver returned: 0
[DBG]  Agent (index) 28 | New local path (submap idx):
[DBG]  7 8 9 
[DBG]  Update the agent path 28 | Original local length: 18 | New local length: 3
[DBG]  agent 28 t=0 => decoded (sx,sy)=(2,2) => global_id=724
[DBG]  agent 28 t=1 => decoded (sx,sy)=(2,3) => global_id=725
[DBG]  agent 28 t=2 => decoded (sx,sy)=(2,4) => global_id=726
[DBG]  Complete path of agent 28:
[DBG]    Original: 661 661 660 660 692 692 724 756 755 755 755 755 755 755 755 755 755 755 755 755 755 755 755 755 755 755 755 755 756 788 788 788 788 756 724 724 724 724 724 724 724 724 724 724 724 724 724 724 724 724 724 724 724 724 724 724 724 724 724 725 726 727 
[DBG]    New:     661 661 660 660 692 692 724 756 755 755 755 755 755 755 755 755 755 755 755 755 755 755 755 755 755 755 755 755 756 788 788 788 788 756 724 724 724 724 724 724 724 724 724 724 725 726 727 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 661 661 660 660 692 692 724 756 755 755 755 755 755 755 755 755 755 755 755 755 755 755 755 755 755 755 755 755 756 788 788 788 788 756 724 724 724 724 724 724 724 724 724 
[DBG]    Local path (in submap): 724 725 726 727 
[DBG]    Suffix (out of submap): 
[DBG]  Original agent path length 28 je: 62
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 0: 661, 661, 660, 660, 692, 692, 724, 756, 755, 755, 755, 755, 755, 755, 755, 755, 755, 755, 755, 755, 755, 755, 755, 755, 755, 755, 755, 755, 756, 788, 788, 788, 788, 756, 724, 724, 724, 724, 724, 724, 724, 724, 724, 724, 725, 726, 727, 
[DBG]  Path for agent 28 updated, resulting length: 47
[DBG]  Paths successfully updated.
[DBG]  (LNS.cpp) New path for agent 28: 
[DBG]  661, 661, 660, 660, 692, 692, 724, 756, 755, 755, 755, 755, 755, 755, 755, 755, 755, 755, 755, 755, 755, 755, 755, 755, 755, 755, 755, 755, 756, 788, 788, 788, 788, 756, 724, 724, 724, 724, 724, 724, 724, 724, 724, 724, 725, 726, 727, 
[DBG]  Delta value: 0.245902
[DBG]  Rewarding metric index = 1
[DBG]  component_weights = {2.67446e-05, 0.999941, 1.17796e-05, 2.04231e-05}
[DBG]  opSuccess value: 1
[STAT] neighbor.sum_of_costs before recomputation: 46
[STAT] neighbor.old_sum_of_costs before recomputation: 61
[STAT] sum_of_costs before recomputation: 4351
[DBG]  Validate solution immediately after SAT success.
[WARNING] Problem after SAT: Target conflict: agent 42 (len 61) traverses target of agent 28 (len 46) at location 727 at timestep 60
[DBG]  [DEBUG] Attempting immediate repair via init_lns because problem occurred after SAT (should be applied only for conflicts...).
[DBG]  [DEBUG] Passing 150 agents to init_lns (skip=true).
[DBG]  [DEBUG] path_table contents for selected agents (neighbor.agents):
[DBG]    Agent 28 => controlling path length=47
[DBG]  hodnota skip_initial_solution=1
[DBG]  We skip initialSolution => call buildCollisionData()
[DBG]  buildCollisionData() called – skip_initial_solution case.
[DBG]  Agents.size()=150, collision_graph.size()=150
[DBG]  agent 28 => updateCollidingPairs => foundCollision
[DBG]  agent 42 => updateCollidingPairs => foundCollision
[DBG]  Conflicting agent pairs:
[DBG]  agent 28 is in conflict with agent 42
[DBG]  buildCollisionData() => sum_of_costs=4336, num_of_colliding_pairs=1
[DBG]  buildCollisionData done => sum_of_costs=4336, num_of_colliding_pairs=1
[DBG]  sum_of_cost hodnota: 4336
[DBG]  After skip/init build => iteration_stats.back(): sum_of_costs=4336, collisions=1
[DEBUG] Using default neighbor generation strategy for conflicts: 2
	InitLNS(PP): runtime = 0.00111533, iterations = 2, colliding pairs = 0, initial colliding pairs = 1, solution cost = 4351, initial solution cost = 4336, failed iterations = 0
[DBG]  init_lns->sum_of_costs after init_lns->run: 4351
[DBG]  sum_of_costs after assignment from init_lns->run: 4351
[DBG]  Recomputing sum_of_cost by dividing neighbor.sum_of_costs and neighbor.old_sum_of_costs
[STAT] sum_of_costs after recomputation: 4351
[STAT] Iteration 115
[DBG]  Random chance did not select SAT operator (r=44), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 115
[DBG]  Random chance did not select SAT operator (r=34), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 115
[DBG]  Random chance did not select SAT operator (r=62), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 115
[DBG]  Random chance did not select SAT operator (r=80), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 115
[DBG]  Random chance did not select SAT operator (r=88), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 115
[DBG]  Random chance did not select SAT operator (r=78), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 115
[DBG]  Random chance did not select SAT operator (r=58), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 115
[DBG]  Random chance did not select SAT operator (r=23), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 115
[DBG]  Random chance did not select SAT operator (r=68), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 115
[DBG]  Random chance did not select SAT operator (r=26), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 115
[DBG]  Random chance did not select SAT operator (r=59), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 115
[DBG]  Using SAT operator (destroy+repair SAT).
[DBG]  ====================
[DBG]  SAT destroy operator called.
[DBG]  SAT heuristic: 2
[DBG]  key_agent_id: 28
[DBG]  key_agent_id global path length: 62
[DBG]  Submap content (global positions):
[DBG]  690 691 692 693 694 
[DBG]  722 723 724 725 726 
[DBG]  754 755 756 757 758 
[DBG]  786 787 788 789 790 
[DBG]  818 819 820 821 822 
[DBG]  Map content with agents and obstacles:
[DBG]  X . A X X 
[DBG]  . X . . . 
[DBG]  X A A . X 
[DBG]  . . . X . 
[DBG]  . . . . . 
[DBG]  content of the map structure that we pass to the SAT solver:
[DBG]  -1  1  1  -1  -1  
[DBG]  1  -1  1  1  1  
[DBG]  -1  1  1  1  -1  
[DBG]  1  1  1  -1  1  
[DBG]  1  1  1  1  1  
[DBG]  Identifying agents in a submap for rescheduling (when key_agent is there at the time 33):
[DBG]  Agent 1 found intervals in the sub-map:
[DBG]  
[DBG]  Agent 1 is not in sub-map at time 33 (intervals: 
[DBG]  )
[DBG]  Agent 26 found intervals in the sub-map:
[DBG]   [30..33]
[DBG]  Agent 26 (interval in submap: [30..33]) contains time 33, added to replan.
[DBG]  Agent 28 found intervals in the sub-map:
[DBG]   [4..60]
[DBG]  Agent 28 (interval in submap: [4..60]) contains time 33, added to replan.
[DBG]  Agent 53 found intervals in the sub-map:
[DBG]   [25..30]
[DBG]  Agent 53 is not in sub-map at time 33 (intervals: 
[DBG]  [25..30] )
[DBG]  Agent 148 found intervals in the sub-map:
[DBG]  
[DBG]  Agent 148 is not in sub-map at time 33 (intervals: 
[DBG]  )
[DBG]  Agent 26 | Start (global): 755 -> (local): (2, 1) at time 33 | Goal (global): 755 -> (local): (2, 1) at time 33
[DBG]  Agent 28 | Start (global): 756 -> (local): (2, 2) at time 33 | Goal (global): 726 -> (local): (1, 4) at time 60
[DBG]  [REPAIR] SAT destroy operator called.
[DBG]  [REPAIR] SAT operator – launching subproblem FOR OPTIMIZATION.
[DBG]  Creating local paths (sx, sy) in the submap for T_sync = 33
[DBG]    Agent 26 (global paths from T=33 to 33) has local path: (2,1) 
[DBG]    Agent 28 (global paths from T=33 to 60) has local path: (2,2) (1,2) (1,2) (1,2) (1,2) (1,2) (1,2) (1,2) (1,2) (1,2) (1,2) (1,2) (1,2) (1,2) (1,2) (1,2) (1,2) (1,2) (1,2) (1,2) (1,2) (1,2) (1,2) (1,2) (1,2) (1,2) (1,3) (1,4) 
[DBG]  Checking input data for SAT solver:
[DBG]    - Number of agents to replan: 2
[DBG]  Agent 26 has the original local path length: 1 => Start (2,1), Goal (2,1)
[DBG]  Agent 28 has the original local path length: 28 => Start (2,2), Goal (1,4)
[DBG]  Start position: (2, 1), (2, 2), 
[DBG]  Goal position: (2, 1), (1, 4), 
[DBG]  SAT instance and solver created.
Currently solving
Instance name: scen
Map name: map
Encoding used: disappear_at_goal
SAT solver used: Kissat
Optimizing function: sum of costs
Number of agents: 2
Mks LB: 4
SoC LB: 5
Delta: 0
Remaining time: 300000 [ms]

Found plan [agents = 2] [timesteps = 4]
Agent #0 : 6 0 0 0 
Agent #1 : 7 8 4 5 

[STAT] Solver returned: 0
[DBG]  Agent (index) 26 | New local path (submap idx):
[DBG]  6 
[DBG]  Agent (index) 28 | New local path (submap idx):
[DBG]  7 8 4 5 
[DBG]  Update the agent path 26 | Original local length: 1 | New local length: 1
[DBG]  agent 26 t=0 => decoded (sx,sy)=(2,1) => global_id=755
[DBG]  Complete path of agent 26:
[DBG]    Original: 13 14 46 47 48 80 81 82 83 84 116 148 180 212 244 276 277 309 341 373 405 437 469 501 533 565 597 596 628 660 692 724 756 755 
[DBG]    New:     13 14 46 47 48 80 81 82 83 84 116 148 180 212 244 276 277 309 341 373 405 437 469 501 533 565 597 596 628 660 692 724 756 755 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 13 14 46 47 48 80 81 82 83 84 116 148 180 212 244 276 277 309 341 373 405 437 469 501 533 565 597 596 628 660 692 724 756 
[DBG]    Local path (in submap): 755 
[DBG]    Suffix (out of submap): 
[DBG]  Original agent path length 26 je: 34
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 0: 13, 14, 46, 47, 48, 80, 81, 82, 83, 84, 116, 148, 180, 212, 244, 276, 277, 309, 341, 373, 405, 437, 469, 501, 533, 565, 597, 596, 628, 660, 692, 724, 756, 755, 
[DBG]  Path for agent 26 updated, resulting length: 34
[DBG]  Update the agent path 28 | Original local length: 28 | New local length: 4
[DBG]  agent 28 t=0 => decoded (sx,sy)=(2,2) => global_id=756
[DBG]  agent 28 t=1 => decoded (sx,sy)=(2,3) => global_id=757
[DBG]  agent 28 t=2 => decoded (sx,sy)=(1,3) => global_id=725
[DBG]  agent 28 t=3 => decoded (sx,sy)=(1,4) => global_id=726
[DBG]  Complete path of agent 28:
[DBG]    Original: 661 661 660 660 692 692 724 756 788 787 786 786 786 786 786 786 786 786 786 786 786 786 786 786 786 786 786 786 786 818 819 820 788 756 724 724 724 724 724 724 724 724 724 724 724 724 724 724 724 724 724 724 724 724 724 724 724 724 724 725 726 727 
[DBG]    New:     661 661 660 660 692 692 724 756 788 787 786 786 786 786 786 786 786 786 786 786 786 786 786 786 786 786 786 786 786 818 819 820 788 756 757 725 726 727 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 661 661 660 660 692 692 724 756 788 787 786 786 786 786 786 786 786 786 786 786 786 786 786 786 786 786 786 786 786 818 819 820 788 
[DBG]    Local path (in submap): 756 757 725 726 727 
[DBG]    Suffix (out of submap): 
[DBG]  Original agent path length 28 je: 62
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 1: 661, 661, 660, 660, 692, 692, 724, 756, 788, 787, 786, 786, 786, 786, 786, 786, 786, 786, 786, 786, 786, 786, 786, 786, 786, 786, 786, 786, 786, 818, 819, 820, 788, 756, 757, 725, 726, 727, 
[DBG]  Path for agent 28 updated, resulting length: 38
[DBG]  Paths successfully updated.
[DBG]  (LNS.cpp) New path for agent 26: 
[DBG]  13, 14, 46, 47, 48, 80, 81, 82, 83, 84, 116, 148, 180, 212, 244, 276, 277, 309, 341, 373, 405, 437, 469, 501, 533, 565, 597, 596, 628, 660, 692, 724, 756, 755, 
[DBG]  (LNS.cpp) New path for agent 28: 
[DBG]  661, 661, 660, 660, 692, 692, 724, 756, 788, 787, 786, 786, 786, 786, 786, 786, 786, 786, 786, 786, 786, 786, 786, 786, 786, 786, 786, 786, 786, 818, 819, 820, 788, 756, 757, 725, 726, 727, 
[DBG]  Delta value: 0.255319
[DBG]  Rewarding metric index = 1
[DBG]  component_weights = {2.02401e-05, 0.999955, 8.91471e-06, 1.5456e-05}
[DBG]  opSuccess value: 1
[STAT] neighbor.sum_of_costs before recomputation: 70
[STAT] neighbor.old_sum_of_costs before recomputation: 94
[STAT] sum_of_costs before recomputation: 4351
[DBG]  Validate solution immediately after SAT success.
[WARNING] Problem after SAT: Target conflict: agent 42 (len 61) traverses target of agent 28 (len 37) at location 727 at timestep 60
[DBG]  [DEBUG] Attempting immediate repair via init_lns because problem occurred after SAT (should be applied only for conflicts...).
[DBG]  [DEBUG] Passing 150 agents to init_lns (skip=true).
[DBG]  [DEBUG] path_table contents for selected agents (neighbor.agents):
[DBG]    Agent 26 => controlling path length=34
[DBG]    Agent 28 => controlling path length=38
[DBG]  hodnota skip_initial_solution=1
[DBG]  We skip initialSolution => call buildCollisionData()
[DBG]  buildCollisionData() called – skip_initial_solution case.
[DBG]  Agents.size()=150, collision_graph.size()=150
[DBG]  agent 28 => updateCollidingPairs => foundCollision
[DBG]  agent 42 => updateCollidingPairs => foundCollision
[DBG]  Conflicting agent pairs:
[DBG]  agent 28 is in conflict with agent 42
[DBG]  buildCollisionData() => sum_of_costs=4327, num_of_colliding_pairs=1
[DBG]  buildCollisionData done => sum_of_costs=4327, num_of_colliding_pairs=1
[DBG]  sum_of_cost hodnota: 4327
[DBG]  After skip/init build => iteration_stats.back(): sum_of_costs=4327, collisions=1
[DEBUG] Using default neighbor generation strategy for conflicts: 1
	InitLNS(PP): runtime = 0.00261904, iterations = 2, colliding pairs = 0, initial colliding pairs = 1, solution cost = 4389, initial solution cost = 4327, failed iterations = 0
[DBG]  init_lns->sum_of_costs after init_lns->run: 4389
[DBG]  sum_of_costs after assignment from init_lns->run: 4389
[DBG]  Recomputing sum_of_cost by dividing neighbor.sum_of_costs and neighbor.old_sum_of_costs
[STAT] sum_of_costs after recomputation: 4389
[STAT] Iteration 116
[DBG]  Random chance did not select SAT operator (r=52), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 116
[DBG]  Random chance did not select SAT operator (r=74), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 116
[DBG]  Random chance did not select SAT operator (r=72), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 116
[DBG]  Random chance did not select SAT operator (r=23), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 116
[DBG]  Using SAT operator (destroy+repair SAT).
[DBG]  ====================
[DBG]  SAT destroy operator called.
[DBG]  SAT heuristic: 2
[DBG]  key_agent_id: 28
[DBG]  key_agent_id global path length: 60
[DBG]  Submap content (global positions):
[DBG]  658 659 660 661 662 
[DBG]  690 691 692 693 694 
[DBG]  722 723 724 725 726 
[DBG]  754 755 756 757 758 
[DBG]  786 787 788 789 790 
[DBG]  Map content with agents and obstacles:
[DBG]  . . . . X 
[DBG]  X . . X X 
[DBG]  . X A . . 
[DBG]  X . . . X 
[DBG]  . . . X . 
[DBG]  content of the map structure that we pass to the SAT solver:
[DBG]  1  1  1  1  -1  
[DBG]  -1  1  1  -1  -1  
[DBG]  1  -1  1  1  1  
[DBG]  -1  1  1  1  -1  
[DBG]  1  1  1  -1  1  
[DBG]  Identifying agents in a submap for rescheduling (when key_agent is there at the time 51):
[DBG]  Agent 28 found intervals in the sub-map:
[DBG]   [0..58]
[DBG]  Agent 28 (interval in submap: [0..58]) contains time 51, added to replan.
[DBG]  Agent 42 found intervals in the sub-map:
[DBG]   [53..57]
[DBG]  Agent 42 is not in sub-map at time 51 (intervals: 
[DBG]  [53..57] )
[DBG]  Agent 28 | Start (global): 724 -> (local): (2, 2) at time 51 | Goal (global): 726 -> (local): (2, 4) at time 58
[DBG]  [REPAIR] SAT destroy operator called.
[DBG]  [REPAIR] SAT operator – launching subproblem FOR OPTIMIZATION.
[DBG]  Creating local paths (sx, sy) in the submap for T_sync = 51
[DBG]    Agent 28 (global paths from T=51 to 58) has local path: (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,3) (2,4) 
[DBG]  Checking input data for SAT solver:
[DBG]    - Number of agents to replan: 1
[DBG]  Agent 28 has the original local path length: 8 => Start (2,2), Goal (2,4)
[DBG]  Start position: (2, 2), 
[DBG]  Goal position: (2, 4), 
[DBG]  SAT instance and solver created.
Currently solving
Instance name: scen
Map name: map
Encoding used: disappear_at_goal
SAT solver used: Kissat
Optimizing function: sum of costs
Number of agents: 1
Mks LB: 3
SoC LB: 3
Delta: 0
Remaining time: 300000 [ms]

Found plan [agents = 1] [timesteps = 3]
Agent #0 : 7 8 9 

[STAT] Solver returned: 0
[DBG]  Agent (index) 28 | New local path (submap idx):
[DBG]  7 8 9 
[DBG]  Update the agent path 28 | Original local length: 8 | New local length: 3
[DBG]  agent 28 t=0 => decoded (sx,sy)=(2,2) => global_id=724
[DBG]  agent 28 t=1 => decoded (sx,sy)=(2,3) => global_id=725
[DBG]  agent 28 t=2 => decoded (sx,sy)=(2,4) => global_id=726
[DBG]  Complete path of agent 28:
[DBG]    Original: 661 661 660 660 692 692 724 725 725 725 725 725 725 725 725 725 725 725 725 725 725 725 725 725 725 725 725 725 725 725 725 725 725 725 725 725 725 725 725 724 724 724 724 724 724 724 724 724 724 724 724 724 724 724 724 724 724 725 726 727 
[DBG]    New:     661 661 660 660 692 692 724 725 725 725 725 725 725 725 725 725 725 725 725 725 725 725 725 725 725 725 725 725 725 725 725 725 725 725 725 725 725 725 725 724 724 724 724 724 724 724 724 724 724 724 724 724 725 726 727 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 661 661 660 660 692 692 724 725 725 725 725 725 725 725 725 725 725 725 725 725 725 725 725 725 725 725 725 725 725 725 725 725 725 725 725 725 725 725 725 724 724 724 724 724 724 724 724 724 724 724 724 
[DBG]    Local path (in submap): 724 725 726 727 
[DBG]    Suffix (out of submap): 
[DBG]  Original agent path length 28 je: 60
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 0: 661, 661, 660, 660, 692, 692, 724, 725, 725, 725, 725, 725, 725, 725, 725, 725, 725, 725, 725, 725, 725, 725, 725, 725, 725, 725, 725, 725, 725, 725, 725, 725, 725, 725, 725, 725, 725, 725, 725, 724, 724, 724, 724, 724, 724, 724, 724, 724, 724, 724, 724, 724, 725, 726, 727, 
[DBG]  Path for agent 28 updated, resulting length: 55
[DBG]  Paths successfully updated.
[DBG]  (LNS.cpp) New path for agent 28: 
[DBG]  661, 661, 660, 660, 692, 692, 724, 725, 725, 725, 725, 725, 725, 725, 725, 725, 725, 725, 725, 725, 725, 725, 725, 725, 725, 725, 725, 725, 725, 725, 725, 725, 725, 725, 725, 725, 725, 725, 725, 724, 724, 724, 724, 724, 724, 724, 724, 724, 724, 724, 724, 724, 725, 726, 727, 
[DBG]  Delta value: 0.0847458
[DBG]  Rewarding metric index = 1
[DBG]  component_weights = {1.7726e-05, 0.999961, 7.80738e-06, 1.35362e-05}
[DBG]  opSuccess value: 1
[STAT] neighbor.sum_of_costs before recomputation: 54
[STAT] neighbor.old_sum_of_costs before recomputation: 59
[STAT] sum_of_costs before recomputation: 4389
[DBG]  Validate solution immediately after SAT success.
[WARNING] Problem after SAT: Target conflict: agent 42 (len 59) traverses target of agent 28 (len 54) at location 727 at timestep 58
[DBG]  [DEBUG] Attempting immediate repair via init_lns because problem occurred after SAT (should be applied only for conflicts...).
[DBG]  [DEBUG] Passing 150 agents to init_lns (skip=true).
[DBG]  [DEBUG] path_table contents for selected agents (neighbor.agents):
[DBG]    Agent 28 => controlling path length=55
[DBG]  hodnota skip_initial_solution=1
[DBG]  We skip initialSolution => call buildCollisionData()
[DBG]  buildCollisionData() called – skip_initial_solution case.
[DBG]  Agents.size()=150, collision_graph.size()=150
[DBG]  agent 28 => updateCollidingPairs => foundCollision
[DBG]  agent 42 => updateCollidingPairs => foundCollision
[DBG]  Conflicting agent pairs:
[DBG]  agent 28 is in conflict with agent 42
[DBG]  buildCollisionData() => sum_of_costs=4384, num_of_colliding_pairs=1
[DBG]  buildCollisionData done => sum_of_costs=4384, num_of_colliding_pairs=1
[DBG]  sum_of_cost hodnota: 4384
[DBG]  After skip/init build => iteration_stats.back(): sum_of_costs=4384, collisions=1
[DEBUG] Using default neighbor generation strategy for conflicts: 1
[DEBUG] Using default neighbor generation strategy for conflicts: 1
[DEBUG] Using default neighbor generation strategy for conflicts: 2
[DEBUG] Using default neighbor generation strategy for conflicts: 0
	InitLNS(PP): runtime = 0.00965508, iterations = 5, colliding pairs = 0, initial colliding pairs = 1, solution cost = 4358, initial solution cost = 4384, failed iterations = 0
[DBG]  init_lns->sum_of_costs after init_lns->run: 4358
[DBG]  sum_of_costs after assignment from init_lns->run: 4358
[DBG]  Recomputing sum_of_cost by dividing neighbor.sum_of_costs and neighbor.old_sum_of_costs
[STAT] sum_of_costs after recomputation: 4358
[STAT] Iteration 117
[DBG]  Random chance did not select SAT operator (r=22), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 117
[DBG]  Random chance did not select SAT operator (r=82), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 117
[DBG]  Random chance did not select SAT operator (r=13), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 117
[DBG]  Random chance did not select SAT operator (r=92), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 117
[DBG]  Random chance did not select SAT operator (r=77), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 117
[DBG]  Random chance did not select SAT operator (r=23), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 117
[DBG]  Random chance did not select SAT operator (r=77), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 117
[DBG]  Using SAT operator (destroy+repair SAT).
[DBG]  ====================
[DBG]  SAT destroy operator called.
[DBG]  SAT heuristic: 2
[DBG]  key_agent_id: 28
[DBG]  key_agent_id global path length: 62
[DBG]  Submap content (global positions):
[DBG]  658 659 660 661 662 
[DBG]  690 691 692 693 694 
[DBG]  722 723 724 725 726 
[DBG]  754 755 756 757 758 
[DBG]  786 787 788 789 790 
[DBG]  Map content with agents and obstacles:
[DBG]  . . . . X 
[DBG]  X . . X X 
[DBG]  . X A . . 
[DBG]  X . . . X 
[DBG]  . . . X . 
[DBG]  content of the map structure that we pass to the SAT solver:
[DBG]  1  1  1  1  -1  
[DBG]  -1  1  1  -1  -1  
[DBG]  1  -1  1  1  1  
[DBG]  -1  1  1  1  -1  
[DBG]  1  1  1  -1  1  
[DBG]  Identifying agents in a submap for rescheduling (when key_agent is there at the time 52):
[DBG]  Agent 28 found intervals in the sub-map:
[DBG]   [0..22] [30..60]
[DBG]  Agent 28 (interval in submap: [30..60]) contains time 52, added to replan.
[DBG]  Agent 42 found intervals in the sub-map:
[DBG]   [55..59]
[DBG]  Agent 42 is not in sub-map at time 52 (intervals: 
[DBG]  [55..59] )
[DBG]  Agent 28 | Start (global): 724 -> (local): (2, 2) at time 52 | Goal (global): 726 -> (local): (2, 4) at time 60
[DBG]  [REPAIR] SAT destroy operator called.
[DBG]  [REPAIR] SAT operator – launching subproblem FOR OPTIMIZATION.
[DBG]  Creating local paths (sx, sy) in the submap for T_sync = 52
[DBG]    Agent 28 (global paths from T=52 to 60) has local path: (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,3) (2,4) 
[DBG]  Checking input data for SAT solver:
[DBG]    - Number of agents to replan: 1
[DBG]  Agent 28 has the original local path length: 9 => Start (2,2), Goal (2,4)
[DBG]  Start position: (2, 2), 
[DBG]  Goal position: (2, 4), 
[DBG]  SAT instance and solver created.
Currently solving
Instance name: scen
Map name: map
Encoding used: disappear_at_goal
SAT solver used: Kissat
Optimizing function: sum of costs
Number of agents: 1
Mks LB: 3
SoC LB: 3
Delta: 0
Remaining time: 300000 [ms]

Found plan [agents = 1] [timesteps = 3]
Agent #0 : 7 8 9 

[STAT] Solver returned: 0
[DBG]  Agent (index) 28 | New local path (submap idx):
[DBG]  7 8 9 
[DBG]  Update the agent path 28 | Original local length: 9 | New local length: 3
[DBG]  agent 28 t=0 => decoded (sx,sy)=(2,2) => global_id=724
[DBG]  agent 28 t=1 => decoded (sx,sy)=(2,3) => global_id=725
[DBG]  agent 28 t=2 => decoded (sx,sy)=(2,4) => global_id=726
[DBG]  Complete path of agent 28:
[DBG]    Original: 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 660 628 627 627 627 627 627 627 659 691 692 724 756 757 756 724 724 724 724 724 724 724 724 724 724 724 724 724 724 724 724 724 724 724 724 724 724 725 726 727 
[DBG]    New:     661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 660 628 627 627 627 627 627 627 659 691 692 724 756 757 756 724 724 724 724 724 724 724 724 724 724 724 724 724 724 724 724 725 726 727 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 660 628 627 627 627 627 627 627 659 691 692 724 756 757 756 724 724 724 724 724 724 724 724 724 724 724 724 724 724 724 
[DBG]    Local path (in submap): 724 725 726 727 
[DBG]    Suffix (out of submap): 
[DBG]  Original agent path length 28 je: 62
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 0: 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 660, 628, 627, 627, 627, 627, 627, 627, 659, 691, 692, 724, 756, 757, 756, 724, 724, 724, 724, 724, 724, 724, 724, 724, 724, 724, 724, 724, 724, 724, 724, 725, 726, 727, 
[DBG]  Path for agent 28 updated, resulting length: 56
[DBG]  Paths successfully updated.
[DBG]  (LNS.cpp) New path for agent 28: 
[DBG]  661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 660, 628, 627, 627, 627, 627, 627, 627, 659, 691, 692, 724, 756, 757, 756, 724, 724, 724, 724, 724, 724, 724, 724, 724, 724, 724, 724, 724, 724, 724, 724, 725, 726, 727, 
[DBG]  Delta value: 0.0983607
[DBG]  Rewarding metric index = 1
[DBG]  component_weights = {1.53317e-05, 0.999966, 6.75284e-06, 1.17078e-05}
[DBG]  opSuccess value: 1
[STAT] neighbor.sum_of_costs before recomputation: 55
[STAT] neighbor.old_sum_of_costs before recomputation: 61
[STAT] sum_of_costs before recomputation: 4358
[DBG]  Validate solution immediately after SAT success.
[WARNING] Problem after SAT: Target conflict: agent 42 (len 61) traverses target of agent 28 (len 55) at location 727 at timestep 60
[DBG]  [DEBUG] Attempting immediate repair via init_lns because problem occurred after SAT (should be applied only for conflicts...).
[DBG]  [DEBUG] Passing 150 agents to init_lns (skip=true).
[DBG]  [DEBUG] path_table contents for selected agents (neighbor.agents):
[DBG]    Agent 28 => controlling path length=56
[DBG]  hodnota skip_initial_solution=1
[DBG]  We skip initialSolution => call buildCollisionData()
[DBG]  buildCollisionData() called – skip_initial_solution case.
[DBG]  Agents.size()=150, collision_graph.size()=150
[DBG]  agent 28 => updateCollidingPairs => foundCollision
[DBG]  agent 42 => updateCollidingPairs => foundCollision
[DBG]  Conflicting agent pairs:
[DBG]  agent 28 is in conflict with agent 42
[DBG]  buildCollisionData() => sum_of_costs=4352, num_of_colliding_pairs=1
[DBG]  buildCollisionData done => sum_of_costs=4352, num_of_colliding_pairs=1
[DBG]  sum_of_cost hodnota: 4352
[DBG]  After skip/init build => iteration_stats.back(): sum_of_costs=4352, collisions=1
[DEBUG] Using default neighbor generation strategy for conflicts: 1
	InitLNS(PP): runtime = 0.00259621, iterations = 2, colliding pairs = 0, initial colliding pairs = 1, solution cost = 4336, initial solution cost = 4352, failed iterations = 0
[DBG]  init_lns->sum_of_costs after init_lns->run: 4336
[DBG]  sum_of_costs after assignment from init_lns->run: 4336
[DBG]  Recomputing sum_of_cost by dividing neighbor.sum_of_costs and neighbor.old_sum_of_costs
[STAT] sum_of_costs after recomputation: 4336
[STAT] Iteration 118
[DBG]  Random chance did not select SAT operator (r=79), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 118
[DBG]  Using SAT operator (destroy+repair SAT).
[DBG]  ====================
[DBG]  SAT destroy operator called.
[DBG]  SAT heuristic: 2
[DBG]  key_agent_id: 28
[DBG]  key_agent_id global path length: 62
[DBG]  Submap content (global positions):
[DBG]  691 692 693 694 695 
[DBG]  723 724 725 726 727 
[DBG]  755 756 757 758 759 
[DBG]  787 788 789 790 791 
[DBG]  819 820 821 822 823 
[DBG]  Map content with agents and obstacles:
[DBG]  . . X X X 
[DBG]  X . . . . 
[DBG]  . . A X . 
[DBG]  . . X . X 
[DBG]  . . . . . 
[DBG]  content of the map structure that we pass to the SAT solver:
[DBG]  1  1  -1  -1  -1  
[DBG]  -1  1  1  1  1  
[DBG]  1  1  1  -1  1  
[DBG]  1  1  -1  1  -1  
[DBG]  1  1  1  1  1  
[DBG]  Identifying agents in a submap for rescheduling (when key_agent is there at the time 47):
[DBG]  Agent 28 found intervals in the sub-map:
[DBG]   [31..61]
[DBG]  Agent 28 (interval in submap: [31..61]) contains time 47, added to replan.
[DBG]  Agent 42 found intervals in the sub-map:
[DBG]   [54..61]
[DBG]  Agent 42 is not in sub-map at time 47 (intervals: 
[DBG]  [54..61] )
[DBG]  Agent 28 | Start (global): 757 -> (local): (2, 2) at time 47 | Goal (global): 727 -> (local): (1, 4) at time 61
[DBG]  [REPAIR] SAT destroy operator called.
[DBG]  [REPAIR] SAT operator – launching subproblem FOR OPTIMIZATION.
[DBG]  Creating local paths (sx, sy) in the submap for T_sync = 47
[DBG]    Agent 28 (global paths from T=47 to 61) has local path: (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (1,2) (1,3) (1,4) 
[DBG]  Checking input data for SAT solver:
[DBG]    - Number of agents to replan: 1
[DBG]  Agent 28 has the original local path length: 15 => Start (2,2), Goal (1,4)
[DBG]  Start position: (2, 2), 
[DBG]  Goal position: (1, 4), 
[DBG]  SAT instance and solver created.
Currently solving
Instance name: scen
Map name: map
Encoding used: disappear_at_goal
SAT solver used: Kissat
Optimizing function: sum of costs
Number of agents: 1
Mks LB: 4
SoC LB: 4
Delta: 0
Remaining time: 300000 [ms]

Found plan [agents = 1] [timesteps = 4]
Agent #0 : 8 3 4 5 

[STAT] Solver returned: 0
[DBG]  Agent (index) 28 | New local path (submap idx):
[DBG]  8 3 4 5 
[DBG]  Update the agent path 28 | Original local length: 15 | New local length: 4
[DBG]  agent 28 t=0 => decoded (sx,sy)=(2,2) => global_id=757
[DBG]  agent 28 t=1 => decoded (sx,sy)=(1,2) => global_id=725
[DBG]  agent 28 t=2 => decoded (sx,sy)=(1,3) => global_id=726
[DBG]  agent 28 t=3 => decoded (sx,sy)=(1,4) => global_id=727
[DBG]  Complete path of agent 28:
[DBG]    Original: 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 660 628 627 627 627 627 627 627 659 691 692 724 756 757 757 757 757 757 757 757 757 757 757 757 757 757 757 757 757 757 757 757 757 757 757 757 757 725 726 727 
[DBG]    New:     661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 660 628 627 627 627 627 627 627 659 691 692 724 756 757 757 757 757 757 757 757 757 757 757 757 757 757 725 726 727 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 660 628 627 627 627 627 627 627 659 691 692 724 756 757 757 757 757 757 757 757 757 757 757 757 757 
[DBG]    Local path (in submap): 757 725 726 727 
[DBG]    Suffix (out of submap): 
[DBG]  Original agent path length 28 je: 62
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 0: 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 660, 628, 627, 627, 627, 627, 627, 627, 659, 691, 692, 724, 756, 757, 757, 757, 757, 757, 757, 757, 757, 757, 757, 757, 757, 757, 725, 726, 727, 
[DBG]  Path for agent 28 updated, resulting length: 51
[DBG]  Paths successfully updated.
[DBG]  (LNS.cpp) New path for agent 28: 
[DBG]  661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 660, 628, 627, 627, 627, 627, 627, 627, 659, 691, 692, 724, 756, 757, 757, 757, 757, 757, 757, 757, 757, 757, 757, 757, 757, 757, 725, 726, 727, 
[DBG]  Delta value: 0.180328
[DBG]  Rewarding metric index = 1
[DBG]  component_weights = {1.234e-05, 0.999973, 5.43513e-06, 9.42325e-06}
[DBG]  opSuccess value: 1
[STAT] neighbor.sum_of_costs before recomputation: 50
[STAT] neighbor.old_sum_of_costs before recomputation: 61
[STAT] sum_of_costs before recomputation: 4336
[DBG]  Validate solution immediately after SAT success.
[WARNING] Problem after SAT: Target conflict: agent 42 (len 61) traverses target of agent 28 (len 50) at location 727 at timestep 60
[DBG]  [DEBUG] Attempting immediate repair via init_lns because problem occurred after SAT (should be applied only for conflicts...).
[DBG]  [DEBUG] Passing 150 agents to init_lns (skip=true).
[DBG]  [DEBUG] path_table contents for selected agents (neighbor.agents):
[DBG]    Agent 28 => controlling path length=51
[DBG]  hodnota skip_initial_solution=1
[DBG]  We skip initialSolution => call buildCollisionData()
[DBG]  buildCollisionData() called – skip_initial_solution case.
[DBG]  Agents.size()=150, collision_graph.size()=150
[DBG]  agent 28 => updateCollidingPairs => foundCollision
[DBG]  agent 42 => updateCollidingPairs => foundCollision
[DBG]  Conflicting agent pairs:
[DBG]  agent 28 is in conflict with agent 42
[DBG]  buildCollisionData() => sum_of_costs=4325, num_of_colliding_pairs=1
[DBG]  buildCollisionData done => sum_of_costs=4325, num_of_colliding_pairs=1
[DBG]  sum_of_cost hodnota: 4325
[DBG]  After skip/init build => iteration_stats.back(): sum_of_costs=4325, collisions=1
[DEBUG] Using default neighbor generation strategy for conflicts: 2
[DEBUG] Using default neighbor generation strategy for conflicts: 0
	InitLNS(PP): runtime = 0.00279046, iterations = 3, colliding pairs = 0, initial colliding pairs = 1, solution cost = 4390, initial solution cost = 4325, failed iterations = 0
[DBG]  init_lns->sum_of_costs after init_lns->run: 4390
[DBG]  sum_of_costs after assignment from init_lns->run: 4390
[DBG]  Recomputing sum_of_cost by dividing neighbor.sum_of_costs and neighbor.old_sum_of_costs
[STAT] sum_of_costs after recomputation: 4390
[STAT] Iteration 119
[DBG]  Random chance did not select SAT operator (r=89), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 119
[DBG]  Random chance did not select SAT operator (r=96), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 119
[DBG]  Random chance did not select SAT operator (r=95), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 119
[DBG]  Random chance did not select SAT operator (r=52), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 119
[DBG]  Random chance did not select SAT operator (r=18), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 119
[DBG]  Random chance did not select SAT operator (r=83), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 119
[DBG]  Random chance did not select SAT operator (r=92), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 119
[DBG]  Random chance did not select SAT operator (r=37), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 119
[DBG]  Random chance did not select SAT operator (r=69), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 119
[DBG]  Using SAT operator (destroy+repair SAT).
[DBG]  ====================
[DBG]  SAT destroy operator called.
[DBG]  SAT heuristic: 2
[DBG]  key_agent_id: 28
[DBG]  key_agent_id global path length: 62
[DBG]  Submap content (global positions):
[DBG]  626 627 628 629 630 
[DBG]  658 659 660 661 662 
[DBG]  690 691 692 693 694 
[DBG]  722 723 724 725 726 
[DBG]  754 755 756 757 758 
[DBG]  Map content with agents and obstacles:
[DBG]  X . A . X 
[DBG]  . . . . X 
[DBG]  X . A X X 
[DBG]  . X . . . 
[DBG]  X . A . X 
[DBG]  content of the map structure that we pass to the SAT solver:
[DBG]  -1  1  1  1  -1  
[DBG]  1  1  1  1  -1  
[DBG]  -1  1  1  -1  -1  
[DBG]  1  -1  1  1  1  
[DBG]  -1  1  1  1  -1  
[DBG]  Identifying agents in a submap for rescheduling (when key_agent is there at the time 56):
[DBG]  Agent 28 found intervals in the sub-map:
[DBG]   [0..60]
[DBG]  Agent 28 (interval in submap: [0..60]) contains time 56, added to replan.
[DBG]  Agent 42 found intervals in the sub-map:
[DBG]   [56..59]
[DBG]  Agent 42 (interval in submap: [56..59]) contains time 56, added to replan.
[DBG]  Agent 55 found intervals in the sub-map:
[DBG]   [55..58]
[DBG]  Agent 55 (interval in submap: [55..58]) contains time 56, added to replan.
[DBG]  Agent 28 | Start (global): 692 -> (local): (2, 2) at time 56 | Goal (global): 726 -> (local): (3, 4) at time 60
[DBG]  Agent 42 | Start (global): 756 -> (local): (4, 2) at time 56 | Goal (global): 726 -> (local): (3, 4) at time 59
[DBG]  Agent 55 | Start (global): 628 -> (local): (0, 2) at time 56 | Goal (global): 692 -> (local): (2, 2) at time 58
[DBG]  [REPAIR] SAT destroy operator called.
[DBG]  [REPAIR] SAT operator – launching subproblem FOR OPTIMIZATION.
[DBG]  Creating local paths (sx, sy) in the submap for T_sync = 56
[DBG]    Agent 28 (global paths from T=56 to 60) has local path: (2,2) (2,2) (3,2) (3,3) (3,4) 
[DBG]    Agent 42 (global paths from T=56 to 59) has local path: (4,2) (3,2) (3,3) (3,4) 
[DBG]    Agent 55 (global paths from T=56 to 58) has local path: (0,2) (1,2) (2,2) 
[DBG]  Checking input data for SAT solver:
[DBG]    - Number of agents to replan: 3
[DBG]  Agent 28 has the original local path length: 5 => Start (2,2), Goal (3,4)
[DBG]  Agent 42 has the original local path length: 4 => Start (4,2), Goal (3,4)
[DBG]  Agent 55 has the original local path length: 3 => Start (0,2), Goal (2,2)
[DBG]  Start position: (2, 2), (4, 2), (0, 2), 
[DBG]  Goal position: (3, 4), (3, 4), (2, 2), 
[DBG]  SAT instance and solver created.
Currently solving
Instance name: scen
Map name: map
Encoding used: disappear_at_goal
SAT solver used: Kissat
Optimizing function: sum of costs
Number of agents: 3
Mks LB: 4
SoC LB: 11
Delta: 0
Remaining time: 300000 [ms]

[STAT] Solver returned: -1
[DBG]  SAT solver failed.
[STAT] SAT solver failed to find a valid solution.
[DBG]  ====================
[DBG]  SAT destroy operator called.
[DBG]  SAT heuristic: 2
[DBG]  key_agent_id: 28
[DBG]  key_agent_id global path length: 62
[DBG]  Submap content (global positions):
[DBG]  595 596 597 598 599 
[DBG]  627 628 629 630 631 
[DBG]  659 660 661 662 663 
[DBG]  691 692 693 694 695 
[DBG]  723 724 725 726 727 
[DBG]  Map content with agents and obstacles:
[DBG]  X . . X A 
[DBG]  . . A X . 
[DBG]  . . A X X 
[DBG]  . . X X X 
[DBG]  X . . A A 
[DBG]  content of the map structure that we pass to the SAT solver:
[DBG]  -1  1  1  -1  1  
[DBG]  1  1  1  -1  1  
[DBG]  1  1  1  -1  -1  
[DBG]  1  1  -1  -1  -1  
[DBG]  -1  1  1  1  1  
[DBG]  Identifying agents in a submap for rescheduling (when key_agent is there at the time 6):
[DBG]  Agent 17 found intervals in the sub-map:
[DBG]   [3..6]
[DBG]  Agent 17 (interval in submap: [3..6]) contains time 6, added to replan.
[DBG]  Agent 28 found intervals in the sub-map:
[DBG]   [0..61]
[DBG]  Agent 28 (interval in submap: [0..61]) contains time 6, added to replan.
[DBG]  Agent 46 found intervals in the sub-map:
[DBG]   [5..7]
[DBG]  Agent 46 (interval in submap: [5..7]) contains time 6, added to replan.
[DBG]  Agent 74 found intervals in the sub-map:
[DBG]   [15..19]
[DBG]  Agent 74 is not in sub-map at time 6 (intervals: 
[DBG]  [15..19] )
[DBG]  Agent 89 found intervals in the sub-map:
[DBG]   [5..10]
[DBG]  Agent 89 (interval in submap: [5..10]) contains time 6, added to replan.
[DBG]  Agent 91 found intervals in the sub-map:
[DBG]   [3..6]
[DBG]  Agent 91 (interval in submap: [3..6]) contains time 6, added to replan.
[DBG]  Agent 108 found intervals in the sub-map:
[DBG]   [0..4]
[DBG]  Agent 108 is not in sub-map at time 6 (intervals: 
[DBG]  [0..4] )
[DBG]  Agent 17 | Start (global): 599 -> (local): (0, 4) at time 6 | Goal (global): 599 -> (local): (0, 4) at time 6
[DBG]  Agent 28 | Start (global): 661 -> (local): (2, 2) at time 6 | Goal (global): 727 -> (local): (4, 4) at time 61
[DBG]  Agent 46 | Start (global): 726 -> (local): (4, 3) at time 6 | Goal (global): 727 -> (local): (4, 4) at time 7
[DBG]  Agent 89 | Start (global): 629 -> (local): (1, 2) at time 6 | Goal (global): 724 -> (local): (4, 1) at time 10
[DBG]  Agent 91 | Start (global): 727 -> (local): (4, 4) at time 6 | Goal (global): 727 -> (local): (4, 4) at time 6
[DBG]  [REPAIR] SAT destroy operator called.
[DBG]  [REPAIR] SAT operator – launching subproblem FOR OPTIMIZATION.
[DBG]  Creating local paths (sx, sy) in the submap for T_sync = 6
[DBG]    Agent 17 (global paths from T=6 to 6) has local path: (0,4) 
[DBG]    Agent 28 (global paths from T=6 to 61) has local path: (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,1) (2,1) (2,1) (2,1) (3,1) (3,1) (3,1) (3,1) (3,1) (3,1) (3,1) (3,1) (3,1) (3,1) (3,1) (3,1) (3,1) (3,1) (3,1) (3,1) (3,1) (3,1) (3,1) (3,1) (3,1) (3,1) (3,1) (3,1) (4,1) (4,2) (4,3) (4,4) 
[DBG]    Agent 46 (global paths from T=6 to 7) has local path: (4,3) (4,4) 
[DBG]    Agent 89 (global paths from T=6 to 10) has local path: (1,2) (1,1) (2,1) (3,1) (4,1) 
[DBG]    Agent 91 (global paths from T=6 to 6) has local path: (4,4) 
[DBG]  Checking input data for SAT solver:
[DBG]    - Number of agents to replan: 5
[DBG]  Agent 17 has the original local path length: 1 => Start (0,4), Goal (0,4)
[DBG]  Agent 28 has the original local path length: 56 => Start (2,2), Goal (4,4)
[DBG]  Agent 46 has the original local path length: 2 => Start (4,3), Goal (4,4)
[DBG]  Agent 89 has the original local path length: 5 => Start (1,2), Goal (4,1)
[DBG]  Agent 91 has the original local path length: 1 => Start (4,4), Goal (4,4)
[DBG]  Start position: (0, 4), (2, 2), (4, 3), (1, 2), (4, 4), 
[DBG]  Goal position: (0, 4), (4, 4), (4, 4), (4, 1), (4, 4), 
[DBG]  SAT instance and solver created.
Currently solving
Instance name: scen
Map name: map
Encoding used: disappear_at_goal
SAT solver used: Kissat
Optimizing function: sum of costs
Number of agents: 5
Mks LB: 7
SoC LB: 16
Delta: 0
Remaining time: 300000 [ms]

Vertex conflict! Agents 0, 2, timestep 2, location 0
Swapping conflict! Agents 0, 2, timestep 2, edge (0,0)
Vertex conflict! Agents 0, 2, timestep 3, location 0
Swapping conflict! Agents 0, 2, timestep 3, edge (0,0)
Vertex conflict! Agents 0, 2, timestep 4, location 0
Swapping conflict! Agents 0, 2, timestep 4, edge (0,0)
Vertex conflict! Agents 0, 2, timestep 5, location 0
Swapping conflict! Agents 0, 2, timestep 5, edge (0,0)
Vertex conflict! Agents 0, 2, timestep 6, location 0
Vertex conflict! Agents 0, 3, timestep 5, location 0
Swapping conflict! Agents 0, 3, timestep 5, edge (0,0)
Vertex conflict! Agents 0, 3, timestep 6, location 0
Vertex conflict! Agents 0, 4, timestep 1, location 0
Swapping conflict! Agents 0, 4, timestep 1, edge (0,0)
Vertex conflict! Agents 0, 4, timestep 2, location 0
Swapping conflict! Agents 0, 4, timestep 2, edge (0,0)
Vertex conflict! Agents 0, 4, timestep 3, location 0
Swapping conflict! Agents 0, 4, timestep 3, edge (0,0)
Vertex conflict! Agents 0, 4, timestep 4, location 0
Swapping conflict! Agents 0, 4, timestep 4, edge (0,0)
Vertex conflict! Agents 0, 4, timestep 5, location 0
Swapping conflict! Agents 0, 4, timestep 5, edge (0,0)
Vertex conflict! Agents 0, 4, timestep 6, location 0
Vertex conflict! Agents 2, 3, timestep 5, location 0
Swapping conflict! Agents 2, 3, timestep 5, edge (0,0)
Vertex conflict! Agents 2, 3, timestep 6, location 0
Vertex conflict! Agents 2, 4, timestep 2, location 0
Swapping conflict! Agents 2, 4, timestep 2, edge (0,0)
Vertex conflict! Agents 2, 4, timestep 3, location 0
Swapping conflict! Agents 2, 4, timestep 3, edge (0,0)
Vertex conflict! Agents 2, 4, timestep 4, location 0
Swapping conflict! Agents 2, 4, timestep 4, edge (0,0)
Vertex conflict! Agents 2, 4, timestep 5, location 0
Swapping conflict! Agents 2, 4, timestep 5, edge (0,0)
Vertex conflict! Agents 2, 4, timestep 6, location 0
Vertex conflict! Agents 3, 4, timestep 5, location 0
Swapping conflict! Agents 3, 4, timestep 5, edge (0,0)
Vertex conflict! Agents 3, 4, timestep 6, location 0
Found plan [agents = 5] [timesteps = 7]
Agent #0 : 2 0 0 0 0 0 0 
Agent #1 : 9 8 11 12 13 14 15 
Agent #2 : 14 15 0 0 0 0 0 
Agent #3 : 5 9 8 11 12 0 0 
Agent #4 : 15 0 0 0 0 0 0 

[STAT] Solver returned: 0
[DBG]  Agent (index) 17 | New local path (submap idx):
[DBG]  2 
[DBG]  Agent (index) 28 | New local path (submap idx):
[DBG]  9 8 11 12 13 14 15 
[DBG]  Agent (index) 46 | New local path (submap idx):
[DBG]  14 15 
[DBG]  Agent (index) 89 | New local path (submap idx):
[DBG]  5 9 8 11 12 
[DBG]  Agent (index) 91 | New local path (submap idx):
[DBG]  15 
[DBG]  Update the agent path 17 | Original local length: 1 | New local length: 1
[DBG]  agent 17 t=0 => decoded (sx,sy)=(0,4) => global_id=599
[DBG]  Complete path of agent 17:
[DBG]    Original: 664 632 600 599 599 599 599 600 601 569 570 571 571 571 571 571 572 
[DBG]    New:     664 632 600 599 599 599 599 600 601 569 570 571 571 571 571 571 572 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 664 632 600 599 599 599 
[DBG]    Local path (in submap): 599 
[DBG]    Suffix (out of submap): 600 601 569 570 571 571 571 571 571 572 
[DBG]  Original agent path length 17 je: 17
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 0: 664, 632, 600, 599, 599, 599, 599, 600, 601, 569, 570, 571, 571, 571, 571, 571, 572, 
[DBG]  Path for agent 17 updated, resulting length: 17
[DBG]  Update the agent path 28 | Original local length: 56 | New local length: 7
[DBG]  agent 28 t=0 => decoded (sx,sy)=(2,2) => global_id=661
[DBG]  agent 28 t=1 => decoded (sx,sy)=(2,1) => global_id=660
[DBG]  agent 28 t=2 => decoded (sx,sy)=(3,1) => global_id=692
[DBG]  agent 28 t=3 => decoded (sx,sy)=(4,1) => global_id=724
[DBG]  agent 28 t=4 => decoded (sx,sy)=(4,2) => global_id=725
[DBG]  agent 28 t=5 => decoded (sx,sy)=(4,3) => global_id=726
[DBG]  agent 28 t=6 => decoded (sx,sy)=(4,4) => global_id=727
[DBG]  Complete path of agent 28:
[DBG]    Original: 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 660 660 660 660 692 692 692 692 692 692 692 692 692 692 692 692 692 692 692 692 692 692 692 692 692 692 692 692 724 725 726 727 
[DBG]    New:     661 661 661 661 661 661 661 660 692 724 725 726 727 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 661 661 661 661 661 661 
[DBG]    Local path (in submap): 661 660 692 724 725 726 727 
[DBG]    Suffix (out of submap): 
[DBG]  Original agent path length 28 je: 62
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 1: 661, 661, 661, 661, 661, 661, 661, 660, 692, 724, 725, 726, 727, 
[DBG]  Path for agent 28 updated, resulting length: 13
[DBG]  Update the agent path 46 | Original local length: 2 | New local length: 2
[DBG]  agent 46 t=0 => decoded (sx,sy)=(4,3) => global_id=726
[DBG]  agent 46 t=1 => decoded (sx,sy)=(4,4) => global_id=727
[DBG]  Complete path of agent 46:
[DBG]    Original: 786 787 788 756 757 725 726 727 728 696 664 632 600 600 601 601 601 601 602 602 602 570 538 506 507 475 443 411 412 380 348 349 317 285 284 252 
[DBG]    New:     786 787 788 756 757 725 726 727 728 696 664 632 600 600 601 601 601 601 602 602 602 570 538 506 507 475 443 411 412 380 348 349 317 285 284 252 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 786 787 788 756 757 725 
[DBG]    Local path (in submap): 726 727 
[DBG]    Suffix (out of submap): 728 696 664 632 600 600 601 601 601 601 602 602 602 570 538 506 507 475 443 411 412 380 348 349 317 285 284 252 
[DBG]  Original agent path length 46 je: 36
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 2: 786, 787, 788, 756, 757, 725, 726, 727, 728, 696, 664, 632, 600, 600, 601, 601, 601, 601, 602, 602, 602, 570, 538, 506, 507, 475, 443, 411, 412, 380, 348, 349, 317, 285, 284, 252, 
[DBG]  Path for agent 46 updated, resulting length: 36
[DBG]  Update the agent path 89 | Original local length: 5 | New local length: 5
[DBG]  agent 89 t=0 => decoded (sx,sy)=(1,2) => global_id=629
[DBG]  agent 89 t=1 => decoded (sx,sy)=(2,2) => global_id=661
[DBG]  agent 89 t=2 => decoded (sx,sy)=(2,1) => global_id=660
[DBG]  agent 89 t=3 => decoded (sx,sy)=(3,1) => global_id=692
[DBG]  agent 89 t=4 => decoded (sx,sy)=(4,1) => global_id=724
[DBG]  Complete path of agent 89:
[DBG]    Original: 437 469 501 533 565 597 629 628 660 692 724 756 788 820 821 822 854 886 918 950 982 1014 1015 
[DBG]    New:     437 469 501 533 565 597 629 661 660 692 724 756 788 820 821 822 854 886 918 950 982 1014 1015 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 437 469 501 533 565 597 
[DBG]    Local path (in submap): 629 661 660 692 724 
[DBG]    Suffix (out of submap): 756 788 820 821 822 854 886 918 950 982 1014 1015 
[DBG]  Original agent path length 89 je: 23
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 3: 437, 469, 501, 533, 565, 597, 629, 661, 660, 692, 724, 756, 788, 820, 821, 822, 854, 886, 918, 950, 982, 1014, 1015, 
[DBG]  Path for agent 89 updated, resulting length: 23
[DBG]  Update the agent path 91 | Original local length: 1 | New local length: 1
[DBG]  agent 91 t=0 => decoded (sx,sy)=(4,4) => global_id=727
[DBG]  Complete path of agent 91:
[DBG]    Original: 787 788 756 724 725 726 727 728 696 664 632 633 601 601 602 602 602 602 603 571 539 540 541 509 477 445 413 381 
[DBG]    New:     787 788 756 724 725 726 727 728 696 664 632 633 601 601 602 602 602 602 603 571 539 540 541 509 477 445 413 381 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 787 788 756 724 725 726 
[DBG]    Local path (in submap): 727 
[DBG]    Suffix (out of submap): 728 696 664 632 633 601 601 602 602 602 602 603 571 539 540 541 509 477 445 413 381 
[DBG]  Original agent path length 91 je: 28
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 4: 787, 788, 756, 724, 725, 726, 727, 728, 696, 664, 632, 633, 601, 601, 602, 602, 602, 602, 603, 571, 539, 540, 541, 509, 477, 445, 413, 381, 
[DBG]  Path for agent 91 updated, resulting length: 28
[DBG]  Paths successfully updated.
[DBG]  (LNS.cpp) New path for agent 17: 
[DBG]  664, 632, 600, 599, 599, 599, 599, 600, 601, 569, 570, 571, 571, 571, 571, 571, 572, 
[DBG]  (LNS.cpp) New path for agent 28: 
[DBG]  661, 661, 661, 661, 661, 661, 661, 660, 692, 724, 725, 726, 727, 
[DBG]  (LNS.cpp) New path for agent 46: 
[DBG]  786, 787, 788, 756, 757, 725, 726, 727, 728, 696, 664, 632, 600, 600, 601, 601, 601, 601, 602, 602, 602, 570, 538, 506, 507, 475, 443, 411, 412, 380, 348, 349, 317, 285, 284, 252, 
[DBG]  (LNS.cpp) New path for agent 89: 
[DBG]  437, 469, 501, 533, 565, 597, 629, 661, 660, 692, 724, 756, 788, 820, 821, 822, 854, 886, 918, 950, 982, 1014, 1015, 
[DBG]  (LNS.cpp) New path for agent 91: 
[DBG]  787, 788, 756, 724, 725, 726, 727, 728, 696, 664, 632, 633, 601, 601, 602, 602, 602, 602, 603, 571, 539, 540, 541, 509, 477, 445, 413, 381, 
[DBG]  Delta value: 0.304348
[DBG]  Rewarding metric index = 1
[DBG]  component_weights = {8.9877e-06, 0.99998, 3.95862e-06, 6.86332e-06}
[DBG]  opSuccess value: 1
[STAT] neighbor.sum_of_costs before recomputation: 112
[STAT] neighbor.old_sum_of_costs before recomputation: 161
[STAT] sum_of_costs before recomputation: 4390
[DBG]  Validate solution immediately after SAT success.
[WARNING] Problem after SAT: Target conflict: agent 42 (len 61) traverses target of agent 28 (len 12) at location 727 at timestep 60
[DBG]  [DEBUG] Attempting immediate repair via init_lns because problem occurred after SAT (should be applied only for conflicts...).
[DBG]  [DEBUG] Passing 150 agents to init_lns (skip=true).
[DBG]  [DEBUG] path_table contents for selected agents (neighbor.agents):
[DBG]    Agent 17 => controlling path length=17
[DBG]    Agent 28 => controlling path length=13
[DBG]    Agent 46 => controlling path length=36
[DBG]    Agent 89 => controlling path length=23
[DBG]    Agent 91 => controlling path length=28
[DBG]  hodnota skip_initial_solution=1
[DBG]  We skip initialSolution => call buildCollisionData()
[DBG]  buildCollisionData() called – skip_initial_solution case.
[DBG]  Agents.size()=150, collision_graph.size()=150
[DBG]  agent 28 => updateCollidingPairs => foundCollision
[DBG]  agent 42 => updateCollidingPairs => foundCollision
[DBG]  Conflicting agent pairs:
[DBG]  agent 28 is in conflict with agent 42
[DBG]  buildCollisionData() => sum_of_costs=4341, num_of_colliding_pairs=1
[DBG]  buildCollisionData done => sum_of_costs=4341, num_of_colliding_pairs=1
[DBG]  sum_of_cost hodnota: 4341
[DBG]  After skip/init build => iteration_stats.back(): sum_of_costs=4341, collisions=1
[DEBUG] Using default neighbor generation strategy for conflicts: 0
	InitLNS(PP): runtime = 0.00121967, iterations = 2, colliding pairs = 0, initial colliding pairs = 1, solution cost = 4374, initial solution cost = 4341, failed iterations = 0
[DBG]  init_lns->sum_of_costs after init_lns->run: 4374
[DBG]  sum_of_costs after assignment from init_lns->run: 4374
[DBG]  Recomputing sum_of_cost by dividing neighbor.sum_of_costs and neighbor.old_sum_of_costs
[STAT] sum_of_costs after recomputation: 4374
[STAT] Iteration 120
[DBG]  Random chance did not select SAT operator (r=19), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 120
[DBG]  Random chance did not select SAT operator (r=80), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 120
[DBG]  Random chance did not select SAT operator (r=39), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 120
[DBG]  Random chance did not select SAT operator (r=97), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 120
[DBG]  Random chance did not select SAT operator (r=35), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 120
[DBG]  Random chance did not select SAT operator (r=33), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 120
[DBG]  Random chance did not select SAT operator (r=12), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 120
[DBG]  Random chance did not select SAT operator (r=48), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 120
[DBG]  Using SAT operator (destroy+repair SAT).
[DBG]  ====================
[DBG]  SAT destroy operator called.
[DBG]  SAT heuristic: 2
[DBG]  key_agent_id: 28
[DBG]  key_agent_id global path length: 62
[DBG]  Submap content (global positions):
[DBG]  594 595 596 597 598 
[DBG]  626 627 628 629 630 
[DBG]  658 659 660 661 662 
[DBG]  690 691 692 693 694 
[DBG]  722 723 724 725 726 
[DBG]  Map content with agents and obstacles:
[DBG]  . X . . X 
[DBG]  X . . . X 
[DBG]  . A A . X 
[DBG]  X . . X X 
[DBG]  . X . . . 
[DBG]  content of the map structure that we pass to the SAT solver:
[DBG]  1  -1  1  1  -1  
[DBG]  -1  1  1  1  -1  
[DBG]  1  1  1  1  -1  
[DBG]  -1  1  1  -1  -1  
[DBG]  1  -1  1  1  1  
[DBG]  Identifying agents in a submap for rescheduling (when key_agent is there at the time 36):
[DBG]  Agent 28 found intervals in the sub-map:
[DBG]   [0..60]
[DBG]  Agent 28 (interval in submap: [0..60]) contains time 36, added to replan.
[DBG]  Agent 44 found intervals in the sub-map:
[DBG]   [27..34]
[DBG]  Agent 44 is not in sub-map at time 36 (intervals: 
[DBG]  [27..34] )
[DBG]  Agent 45 found intervals in the sub-map:
[DBG]   [18..23]
[DBG]  Agent 45 is not in sub-map at time 36 (intervals: 
[DBG]  [18..23] )
[DBG]  Agent 55 found intervals in the sub-map:
[DBG]   [54..58]
[DBG]  Agent 55 is not in sub-map at time 36 (intervals: 
[DBG]  [54..58] )
[DBG]  Agent 69 found intervals in the sub-map:
[DBG]   [35..39]
[DBG]  Agent 69 (interval in submap: [35..39]) contains time 36, added to replan.
[DBG]  Agent 28 | Start (global): 660 -> (local): (2, 2) at time 36 | Goal (global): 726 -> (local): (4, 4) at time 60
[DBG]  Agent 69 | Start (global): 659 -> (local): (2, 1) at time 36 | Goal (global): 724 -> (local): (4, 2) at time 39
[DBG]  [REPAIR] SAT destroy operator called.
[DBG]  [REPAIR] SAT operator – launching subproblem FOR OPTIMIZATION.
[DBG]  Creating local paths (sx, sy) in the submap for T_sync = 36
[DBG]    Agent 28 (global paths from T=36 to 60) has local path: (2,2) (2,2) (2,2) (3,2) (3,2) (3,2) (3,2) (3,2) (3,2) (3,2) (3,2) (3,2) (3,2) (3,2) (3,2) (3,2) (3,2) (3,2) (3,2) (3,2) (3,2) (3,2) (4,2) (4,3) (4,4) 
[DBG]    Agent 69 (global paths from T=36 to 39) has local path: (2,1) (3,1) (3,2) (4,2) 
[DBG]  Checking input data for SAT solver:
[DBG]    - Number of agents to replan: 2
[DBG]  Agent 28 has the original local path length: 25 => Start (2,2), Goal (4,4)
[DBG]  Agent 69 has the original local path length: 4 => Start (2,1), Goal (4,2)
[DBG]  Start position: (2, 2), (2, 1), 
[DBG]  Goal position: (4, 4), (4, 2), 
[DBG]  SAT instance and solver created.
Currently solving
Instance name: scen
Map name: map
Encoding used: disappear_at_goal
SAT solver used: Kissat
Optimizing function: sum of costs
Number of agents: 2
Mks LB: 5
SoC LB: 9
Delta: 0
Remaining time: 300000 [ms]

Found plan [agents = 2] [timesteps = 5]
Agent #0 : 8 11 13 14 15 
Agent #1 : 7 10 11 13 0 

[STAT] Solver returned: 0
[DBG]  Agent (index) 28 | New local path (submap idx):
[DBG]  8 11 13 14 15 
[DBG]  Agent (index) 69 | New local path (submap idx):
[DBG]  7 10 11 13 
[DBG]  Update the agent path 28 | Original local length: 25 | New local length: 5
[DBG]  agent 28 t=0 => decoded (sx,sy)=(2,2) => global_id=660
[DBG]  agent 28 t=1 => decoded (sx,sy)=(3,2) => global_id=692
[DBG]  agent 28 t=2 => decoded (sx,sy)=(4,2) => global_id=724
[DBG]  agent 28 t=3 => decoded (sx,sy)=(4,3) => global_id=725
[DBG]  agent 28 t=4 => decoded (sx,sy)=(4,4) => global_id=726
[DBG]  Complete path of agent 28:
[DBG]    Original: 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 660 660 660 660 660 660 660 660 660 692 692 692 692 692 692 692 692 692 692 692 692 692 692 692 692 692 692 692 724 725 726 727 
[DBG]    New:     661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 660 660 660 660 660 660 660 692 724 725 726 727 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 660 660 660 660 660 660 
[DBG]    Local path (in submap): 660 692 724 725 726 727 
[DBG]    Suffix (out of submap): 
[DBG]  Original agent path length 28 je: 62
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 0: 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 660, 660, 660, 660, 660, 660, 660, 692, 724, 725, 726, 727, 
[DBG]  Path for agent 28 updated, resulting length: 42
[DBG]  Update the agent path 69 | Original local length: 4 | New local length: 4
[DBG]  agent 69 t=0 => decoded (sx,sy)=(2,1) => global_id=659
[DBG]  agent 69 t=1 => decoded (sx,sy)=(3,1) => global_id=691
[DBG]  agent 69 t=2 => decoded (sx,sy)=(3,2) => global_id=692
[DBG]  agent 69 t=3 => decoded (sx,sy)=(4,2) => global_id=724
[DBG]  Complete path of agent 69:
[DBG]    Original: 4 5 37 69 70 102 134 135 136 137 138 139 140 172 204 205 237 237 269 270 302 303 304 336 368 400 432 464 496 528 529 561 593 625 657 658 659 691 692 724 756 788 820 
[DBG]    New:     4 5 37 69 70 102 134 135 136 137 138 139 140 172 204 205 237 237 269 270 302 303 304 336 368 400 432 464 496 528 529 561 593 625 657 658 659 691 692 724 756 788 820 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 4 5 37 69 70 102 134 135 136 137 138 139 140 172 204 205 237 237 269 270 302 303 304 336 368 400 432 464 496 528 529 561 593 625 657 658 
[DBG]    Local path (in submap): 659 691 692 724 
[DBG]    Suffix (out of submap): 756 788 820 
[DBG]  Original agent path length 69 je: 43
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 1: 4, 5, 37, 69, 70, 102, 134, 135, 136, 137, 138, 139, 140, 172, 204, 205, 237, 237, 269, 270, 302, 303, 304, 336, 368, 400, 432, 464, 496, 528, 529, 561, 593, 625, 657, 658, 659, 691, 692, 724, 756, 788, 820, 
[DBG]  Path for agent 69 updated, resulting length: 43
[DBG]  Paths successfully updated.
[DBG]  (LNS.cpp) New path for agent 28: 
[DBG]  661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 660, 660, 660, 660, 660, 660, 660, 692, 724, 725, 726, 727, 
[DBG]  (LNS.cpp) New path for agent 69: 
[DBG]  4, 5, 37, 69, 70, 102, 134, 135, 136, 137, 138, 139, 140, 172, 204, 205, 237, 237, 269, 270, 302, 303, 304, 336, 368, 400, 432, 464, 496, 528, 529, 561, 593, 625, 657, 658, 659, 691, 692, 724, 756, 788, 820, 
[DBG]  Delta value: 0.194175
[DBG]  Rewarding metric index = 1
[DBG]  component_weights = {7.15e-06, 0.999984, 3.14921e-06, 5.45999e-06}
[DBG]  opSuccess value: 1
[STAT] neighbor.sum_of_costs before recomputation: 83
[STAT] neighbor.old_sum_of_costs before recomputation: 103
[STAT] sum_of_costs before recomputation: 4374
[DBG]  Validate solution immediately after SAT success.
[WARNING] Problem after SAT: Target conflict: agent 42 (len 61) traverses target of agent 28 (len 41) at location 727 at timestep 60
[DBG]  [DEBUG] Attempting immediate repair via init_lns because problem occurred after SAT (should be applied only for conflicts...).
[DBG]  [DEBUG] Passing 150 agents to init_lns (skip=true).
[DBG]  [DEBUG] path_table contents for selected agents (neighbor.agents):
[DBG]    Agent 28 => controlling path length=42
[DBG]    Agent 69 => controlling path length=43
[DBG]  hodnota skip_initial_solution=1
[DBG]  We skip initialSolution => call buildCollisionData()
[DBG]  buildCollisionData() called – skip_initial_solution case.
[DBG]  Agents.size()=150, collision_graph.size()=150
[DBG]  agent 28 => updateCollidingPairs => foundCollision
[DBG]  agent 42 => updateCollidingPairs => foundCollision
[DBG]  Conflicting agent pairs:
[DBG]  agent 28 is in conflict with agent 42
[DBG]  buildCollisionData() => sum_of_costs=4354, num_of_colliding_pairs=1
[DBG]  buildCollisionData done => sum_of_costs=4354, num_of_colliding_pairs=1
[DBG]  sum_of_cost hodnota: 4354
[DBG]  After skip/init build => iteration_stats.back(): sum_of_costs=4354, collisions=1
[DEBUG] Using default neighbor generation strategy for conflicts: 1
	InitLNS(PP): runtime = 0.00189846, iterations = 2, colliding pairs = 0, initial colliding pairs = 1, solution cost = 4347, initial solution cost = 4354, failed iterations = 0
[DBG]  init_lns->sum_of_costs after init_lns->run: 4347
[DBG]  sum_of_costs after assignment from init_lns->run: 4347
[DBG]  Recomputing sum_of_cost by dividing neighbor.sum_of_costs and neighbor.old_sum_of_costs
[STAT] sum_of_costs after recomputation: 4347
[STAT] Iteration 121
[DBG]  Random chance did not select SAT operator (r=49), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 121
[DBG]  Random chance did not select SAT operator (r=28), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 121
[DBG]  Random chance did not select SAT operator (r=50), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 121
[DBG]  Random chance did not select SAT operator (r=31), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 121
[DBG]  Random chance did not select SAT operator (r=22), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 121
[DBG]  Random chance did not select SAT operator (r=60), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 121
[DBG]  Random chance did not select SAT operator (r=48), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 121
[DBG]  Random chance did not select SAT operator (r=18), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 121
[DBG]  Random chance did not select SAT operator (r=70), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 121
[DBG]  Random chance did not select SAT operator (r=41), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 121
[DBG]  Random chance did not select SAT operator (r=22), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 121
[DBG]  Using SAT operator (destroy+repair SAT).
[DBG]  ====================
[DBG]  SAT destroy operator called.
[DBG]  SAT heuristic: 2
[DBG]  key_agent_id: 28
[DBG]  key_agent_id global path length: 58
[DBG]  Submap content (global positions):
[DBG]  595 596 597 598 599 
[DBG]  627 628 629 630 631 
[DBG]  659 660 661 662 663 
[DBG]  691 692 693 694 695 
[DBG]  723 724 725 726 727 
[DBG]  Map content with agents and obstacles:
[DBG]  X . . X . 
[DBG]  . . . X . 
[DBG]  . . A X X 
[DBG]  . A X X X 
[DBG]  X . . . . 
[DBG]  content of the map structure that we pass to the SAT solver:
[DBG]  -1  1  1  -1  1  
[DBG]  1  1  1  -1  1  
[DBG]  1  1  1  -1  -1  
[DBG]  1  1  -1  -1  -1  
[DBG]  -1  1  1  1  1  
[DBG]  Identifying agents in a submap for rescheduling (when key_agent is there at the time 2):
[DBG]  Agent 7 found intervals in the sub-map:
[DBG]  
[DBG]  Agent 7 is not in sub-map at time 2 (intervals: 
[DBG]  )
[DBG]  Agent 28 found intervals in the sub-map:
[DBG]   [0..35] [54..57]
[DBG]  Agent 28 (interval in submap: [0..35]) contains time 2, added to replan.
[DBG]  Agent 108 found intervals in the sub-map:
[DBG]   [0..4]
[DBG]  Agent 108 (interval in submap: [0..4]) contains time 2, added to replan.
[DBG]  Agent 28 | Start (global): 661 -> (local): (2, 2) at time 2 | Goal (global): 724 -> (local): (4, 1) at time 35
[DBG]  Agent 108 | Start (global): 692 -> (local): (3, 1) at time 2 | Goal (global): 724 -> (local): (4, 1) at time 4
[DBG]  [REPAIR] SAT destroy operator called.
[DBG]  [REPAIR] SAT operator – launching subproblem FOR OPTIMIZATION.
[DBG]  Creating local paths (sx, sy) in the submap for T_sync = 2
[DBG]    Agent 28 (global paths from T=2 to 35) has local path: (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,1) (2,1) (2,1) (2,1) (3,1) (4,1) 
[DBG]    Agent 108 (global paths from T=2 to 4) has local path: (3,1) (3,1) (4,1) 
[DBG]  Checking input data for SAT solver:
[DBG]    - Number of agents to replan: 2
[DBG]  Agent 28 has the original local path length: 34 => Start (2,2), Goal (4,1)
[DBG]  Agent 108 has the original local path length: 3 => Start (3,1), Goal (4,1)
[DBG]  Start position: (2, 2), (3, 1), 
[DBG]  Goal position: (4, 1), (4, 1), 
[DBG]  SAT instance and solver created.
Currently solving
Instance name: scen
Map name: map
Encoding used: disappear_at_goal
SAT solver used: Kissat
Optimizing function: sum of costs
Number of agents: 2
Mks LB: 4
SoC LB: 6
Delta: 0
Remaining time: 300000 [ms]

Found plan [agents = 2] [timesteps = 4]
Agent #0 : 9 8 11 12 
Agent #1 : 11 12 0 0 

[STAT] Solver returned: 0
[DBG]  Agent (index) 28 | New local path (submap idx):
[DBG]  9 8 11 12 
[DBG]  Agent (index) 108 | New local path (submap idx):
[DBG]  11 12 
[DBG]  Update the agent path 28 | Original local length: 34 | New local length: 4
[DBG]  agent 28 t=0 => decoded (sx,sy)=(2,2) => global_id=661
[DBG]  agent 28 t=1 => decoded (sx,sy)=(2,1) => global_id=660
[DBG]  agent 28 t=2 => decoded (sx,sy)=(3,1) => global_id=692
[DBG]  agent 28 t=3 => decoded (sx,sy)=(4,1) => global_id=724
[DBG]  Complete path of agent 28:
[DBG]    Original: 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 660 660 660 660 692 724 756 788 787 786 818 850 882 914 914 914 914 882 850 818 786 787 788 756 724 725 726 727 
[DBG]    New:     661 661 661 660 692 724 756 788 787 786 818 850 882 914 914 914 914 882 850 818 786 787 788 756 724 725 726 727 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 661 661 
[DBG]    Local path (in submap): 661 660 692 724 756 788 787 786 818 850 882 914 914 914 914 882 850 818 786 787 788 756 724 725 726 727 
[DBG]    Suffix (out of submap): 
[DBG]  Original agent path length 28 je: 58
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 0: 661, 661, 661, 660, 692, 724, 756, 788, 787, 786, 818, 850, 882, 914, 914, 914, 914, 882, 850, 818, 786, 787, 788, 756, 724, 725, 726, 727, 
[DBG]  Path for agent 28 updated, resulting length: 28
[DBG]  Update the agent path 108 | Original local length: 3 | New local length: 2
[DBG]  agent 108 t=0 => decoded (sx,sy)=(3,1) => global_id=692
[DBG]  agent 108 t=1 => decoded (sx,sy)=(4,1) => global_id=724
[DBG]  Complete path of agent 108:
[DBG]    Original: 628 660 692 692 724 756 756 788 820 821 822 823 824 856 888 920 952 953 954 955 956 988 989 1021 
[DBG]    New:     628 660 692 724 756 756 788 820 821 822 823 824 856 888 920 952 953 954 955 956 988 989 1021 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 628 660 
[DBG]    Local path (in submap): 692 724 756 
[DBG]    Suffix (out of submap): 756 788 820 821 822 823 824 856 888 920 952 953 954 955 956 988 989 1021 
[DBG]  Original agent path length 108 je: 24
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 1: 628, 660, 692, 724, 756, 756, 788, 820, 821, 822, 823, 824, 856, 888, 920, 952, 953, 954, 955, 956, 988, 989, 1021, 
[DBG]  Path for agent 108 updated, resulting length: 23
[DBG]  Paths successfully updated.
[DBG]  (LNS.cpp) New path for agent 28: 
[DBG]  661, 661, 661, 660, 692, 724, 756, 788, 787, 786, 818, 850, 882, 914, 914, 914, 914, 882, 850, 818, 786, 787, 788, 756, 724, 725, 726, 727, 
[DBG]  (LNS.cpp) New path for agent 108: 
[DBG]  628, 660, 692, 724, 756, 756, 788, 820, 821, 822, 823, 824, 856, 888, 920, 952, 953, 954, 955, 956, 988, 989, 1021, 
[DBG]  Delta value: 0.3875
[DBG]  Rewarding metric index = 1
[DBG]  component_weights = {4.89552e-06, 0.999989, 2.15622e-06, 3.73839e-06}
[DBG]  opSuccess value: 1
[STAT] neighbor.sum_of_costs before recomputation: 49
[STAT] neighbor.old_sum_of_costs before recomputation: 80
[STAT] sum_of_costs before recomputation: 4347
[DBG]  Validate solution immediately after SAT success.
[WARNING] Problem after SAT: Vertex conflict between agents 1 and 108 at location 823 at timestep 10
[DBG]  [DEBUG] Attempting immediate repair via init_lns because problem occurred after SAT (should be applied only for conflicts...).
[DBG]  [DEBUG] Passing 150 agents to init_lns (skip=true).
[DBG]  [DEBUG] path_table contents for selected agents (neighbor.agents):
[DBG]    Agent 28 => controlling path length=28
[DBG]    Agent 108 => controlling path length=23
[DBG]  hodnota skip_initial_solution=1
[DBG]  We skip initialSolution => call buildCollisionData()
[DBG]  buildCollisionData() called – skip_initial_solution case.
[DBG]  Agents.size()=150, collision_graph.size()=150
[DBG]  agent 1 => updateCollidingPairs => foundCollision
[DBG]  agent 7 => updateCollidingPairs => foundCollision
[DBG]  agent 11 => updateCollidingPairs => foundCollision
[DBG]  agent 14 => updateCollidingPairs => foundCollision
[DBG]  agent 28 => updateCollidingPairs => foundCollision
[DBG]  agent 39 => updateCollidingPairs => foundCollision
[DBG]  agent 42 => updateCollidingPairs => foundCollision
[DBG]  agent 45 => updateCollidingPairs => foundCollision
[DBG]  agent 85 => updateCollidingPairs => foundCollision
[DBG]  agent 86 => updateCollidingPairs => foundCollision
[DBG]  agent 91 => updateCollidingPairs => foundCollision
[DBG]  agent 108 => updateCollidingPairs => foundCollision
[DBG]  agent 109 => updateCollidingPairs => foundCollision
[DBG]  Conflicting agent pairs:
[DBG]  agent 1 is in conflict with agent 108
[DBG]  agent 7 is in conflict with agent 108
[DBG]  agent 11 is in conflict with agent 108
[DBG]  agent 14 is in conflict with agent 28
[DBG]  agent 28 is in conflict with agent 39
[DBG]  agent 28 is in conflict with agent 42
[DBG]  agent 28 is in conflict with agent 45
[DBG]  agent 28 is in conflict with agent 85
[DBG]  agent 28 is in conflict with agent 86
[DBG]  agent 28 is in conflict with agent 109
[DBG]  agent 91 is in conflict with agent 108
[DBG]  buildCollisionData() => sum_of_costs=4316, num_of_colliding_pairs=11
[DBG]  buildCollisionData done => sum_of_costs=4316, num_of_colliding_pairs=11
[DBG]  sum_of_cost hodnota: 4316
[DBG]  After skip/init build => iteration_stats.back(): sum_of_costs=4316, collisions=11
[DEBUG] Using default neighbor generation strategy for conflicts: 1
[DEBUG] Using default neighbor generation strategy for conflicts: 1
	InitLNS(PP): runtime = 0.00274904, iterations = 3, colliding pairs = 0, initial colliding pairs = 11, solution cost = 4354, initial solution cost = 4316, failed iterations = 0
[DBG]  init_lns->sum_of_costs after init_lns->run: 4354
[DBG]  sum_of_costs after assignment from init_lns->run: 4354
[DBG]  Recomputing sum_of_cost by dividing neighbor.sum_of_costs and neighbor.old_sum_of_costs
[STAT] sum_of_costs after recomputation: 4354
[STAT] Iteration 122
[DBG]  Random chance did not select SAT operator (r=11), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 122
[DBG]  Random chance did not select SAT operator (r=44), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 122
[DBG]  Random chance did not select SAT operator (r=17), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 122
[DBG]  Random chance did not select SAT operator (r=85), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 122
[DBG]  Using SAT operator (destroy+repair SAT).
[DBG]  ====================
[DBG]  SAT destroy operator called.
[DBG]  SAT heuristic: 2
[DBG]  key_agent_id: 28
[DBG]  key_agent_id global path length: 58
[DBG]  Submap content (global positions):
[DBG]  817 818 819 820 821 
[DBG]  849 850 851 852 853 
[DBG]  881 882 883 884 885 
[DBG]  913 914 915 916 917 
[DBG]  945 946 947 948 949 
[DBG]  Map content with agents and obstacles:
[DBG]  . . . . . 
[DBG]  . . . X X 
[DBG]  A . A . . 
[DBG]  . . X . . 
[DBG]  X . X . . 
[DBG]  content of the map structure that we pass to the SAT solver:
[DBG]  1  1  1  1  1  
[DBG]  1  1  1  -1  -1  
[DBG]  1  1  1  1  1  
[DBG]  1  1  -1  1  1  
[DBG]  -1  1  -1  1  1  
[DBG]  Identifying agents in a submap for rescheduling (when key_agent is there at the time 45):
[DBG]  Agent 28 found intervals in the sub-map:
[DBG]   [38..50]
[DBG]  Agent 28 (interval in submap: [38..50]) contains time 45, added to replan.
[DBG]  Agent 42 found intervals in the sub-map:
[DBG]   [45..49]
[DBG]  Agent 42 (interval in submap: [45..49]) contains time 45, added to replan.
[DBG]  Agent 45 found intervals in the sub-map:
[DBG]   [28..30]
[DBG]  Agent 45 is not in sub-map at time 45 (intervals: 
[DBG]  [28..30] )
[DBG]  Agent 59 found intervals in the sub-map:
[DBG]   [36..41]
[DBG]  Agent 59 is not in sub-map at time 45 (intervals: 
[DBG]  [36..41] )
[DBG]  Agent 69 found intervals in the sub-map:
[DBG]   [42..42]
[DBG]  Agent 69 is not in sub-map at time 45 (intervals: 
[DBG]  [42..42] )
[DBG]  Agent 28 | Start (global): 883 -> (local): (2, 2) at time 45 | Goal (global): 819 -> (local): (0, 2) at time 50
[DBG]  Agent 42 | Start (global): 881 -> (local): (2, 0) at time 45 | Goal (global): 819 -> (local): (0, 2) at time 49
[DBG]  [REPAIR] SAT destroy operator called.
[DBG]  [REPAIR] SAT operator – launching subproblem FOR OPTIMIZATION.
[DBG]  Creating local paths (sx, sy) in the submap for T_sync = 45
[DBG]    Agent 28 (global paths from T=45 to 50) has local path: (2,2) (2,2) (2,2) (2,2) (1,2) (0,2) 
[DBG]    Agent 42 (global paths from T=45 to 49) has local path: (2,0) (2,1) (1,1) (1,2) (0,2) 
[DBG]  Checking input data for SAT solver:
[DBG]    - Number of agents to replan: 2
[DBG]  Agent 28 has the original local path length: 6 => Start (2,2), Goal (0,2)
[DBG]  Agent 42 has the original local path length: 5 => Start (2,0), Goal (0,2)
[DBG]  Start position: (2, 2), (2, 0), 
[DBG]  Goal position: (0, 2), (0, 2), 
[DBG]  SAT instance and solver created.
Currently solving
Instance name: scen
Map name: map
Encoding used: disappear_at_goal
SAT solver used: Kissat
Optimizing function: sum of costs
Number of agents: 2
Mks LB: 5
SoC LB: 8
Delta: 0
Remaining time: 300000 [ms]

Found plan [agents = 2] [timesteps = 5]
Agent #0 : 10 7 2 0 0 
Agent #1 : 8 9 10 7 2 

[STAT] Solver returned: 0
[DBG]  Agent (index) 28 | New local path (submap idx):
[DBG]  10 7 2 
[DBG]  Agent (index) 42 | New local path (submap idx):
[DBG]  8 9 10 7 2 
[DBG]  Update the agent path 28 | Original local length: 6 | New local length: 3
[DBG]  agent 28 t=0 => decoded (sx,sy)=(2,2) => global_id=883
[DBG]  agent 28 t=1 => decoded (sx,sy)=(1,2) => global_id=851
[DBG]  agent 28 t=2 => decoded (sx,sy)=(0,2) => global_id=819
[DBG]  Complete path of agent 28:
[DBG]    Original: 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 660 660 660 660 692 724 756 788 820 819 851 883 883 883 883 883 883 883 883 851 819 787 788 756 757 725 726 727 
[DBG]    New:     661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 660 660 660 660 692 724 756 788 820 819 851 883 883 883 883 883 851 819 787 788 756 757 725 726 727 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 660 660 660 660 692 724 756 788 820 819 851 883 883 883 883 
[DBG]    Local path (in submap): 883 851 819 787 788 756 
[DBG]    Suffix (out of submap): 757 725 726 727 
[DBG]  Original agent path length 28 je: 58
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 0: 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 660, 660, 660, 660, 692, 724, 756, 788, 820, 819, 851, 883, 883, 883, 883, 883, 851, 819, 787, 788, 756, 757, 725, 726, 727, 
[DBG]  Path for agent 28 updated, resulting length: 55
[DBG]  Update the agent path 42 | Original local length: 5 | New local length: 5
[DBG]  agent 42 t=0 => decoded (sx,sy)=(2,0) => global_id=881
[DBG]  agent 42 t=1 => decoded (sx,sy)=(2,1) => global_id=882
[DBG]  agent 42 t=2 => decoded (sx,sy)=(2,2) => global_id=883
[DBG]  agent 42 t=3 => decoded (sx,sy)=(1,2) => global_id=851
[DBG]  agent 42 t=4 => decoded (sx,sy)=(0,2) => global_id=819
[DBG]  Complete path of agent 42:
[DBG]    Original: 224 224 224 256 288 289 321 353 352 384 416 448 480 481 482 483 484 516 548 580 581 613 645 677 678 710 742 774 806 807 808 808 809 841 873 874 875 876 877 878 879 847 848 848 880 881 882 850 851 819 787 788 756 757 725 726 727 759 
[DBG]    New:     224 224 224 256 288 289 321 353 352 384 416 448 480 481 482 483 484 516 548 580 581 613 645 677 678 710 742 774 806 807 808 808 809 841 873 874 875 876 877 878 879 847 848 848 880 881 882 883 851 819 787 788 756 757 725 726 727 759 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 224 224 224 256 288 289 321 353 352 384 416 448 480 481 482 483 484 516 548 580 581 613 645 677 678 710 742 774 806 807 808 808 809 841 873 874 875 876 877 878 879 847 848 848 880 
[DBG]    Local path (in submap): 881 882 883 851 819 
[DBG]    Suffix (out of submap): 787 788 756 757 725 726 727 759 
[DBG]  Original agent path length 42 je: 58
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 1: 224, 224, 224, 256, 288, 289, 321, 353, 352, 384, 416, 448, 480, 481, 482, 483, 484, 516, 548, 580, 581, 613, 645, 677, 678, 710, 742, 774, 806, 807, 808, 808, 809, 841, 873, 874, 875, 876, 877, 878, 879, 847, 848, 848, 880, 881, 882, 883, 851, 819, 787, 788, 756, 757, 725, 726, 727, 759, 
[DBG]  Path for agent 42 updated, resulting length: 58
[DBG]  Paths successfully updated.
[DBG]  (LNS.cpp) New path for agent 28: 
[DBG]  661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 660, 660, 660, 660, 692, 724, 756, 788, 820, 819, 851, 883, 883, 883, 883, 883, 851, 819, 787, 788, 756, 757, 725, 726, 727, 
[DBG]  (LNS.cpp) New path for agent 42: 
[DBG]  224, 224, 224, 256, 288, 289, 321, 353, 352, 384, 416, 448, 480, 481, 482, 483, 484, 516, 548, 580, 581, 613, 645, 677, 678, 710, 742, 774, 806, 807, 808, 808, 809, 841, 873, 874, 875, 876, 877, 878, 879, 847, 848, 848, 880, 881, 882, 883, 851, 819, 787, 788, 756, 757, 725, 726, 727, 759, 
[DBG]  Delta value: 0.0263158
[DBG]  Rewarding metric index = 1
[DBG]  component_weights = {4.5315e-06, 0.99999, 1.99589e-06, 3.46041e-06}
[DBG]  opSuccess value: 1
[STAT] neighbor.sum_of_costs before recomputation: 111
[STAT] neighbor.old_sum_of_costs before recomputation: 114
[STAT] sum_of_costs before recomputation: 4354
[DBG]  Validate solution immediately after SAT success.
[WARNING] Problem after SAT: Target conflict: agent 42 (len 57) traverses target of agent 28 (len 54) at location 727 at timestep 56
[DBG]  [DEBUG] Attempting immediate repair via init_lns because problem occurred after SAT (should be applied only for conflicts...).
[DBG]  [DEBUG] Passing 150 agents to init_lns (skip=true).
[DBG]  [DEBUG] path_table contents for selected agents (neighbor.agents):
[DBG]    Agent 28 => controlling path length=55
[DBG]    Agent 42 => controlling path length=58
[DBG]  hodnota skip_initial_solution=1
[DBG]  We skip initialSolution => call buildCollisionData()
[DBG]  buildCollisionData() called – skip_initial_solution case.
[DBG]  Agents.size()=150, collision_graph.size()=150
[DBG]  agent 28 => updateCollidingPairs => foundCollision
[DBG]  agent 42 => updateCollidingPairs => foundCollision
[DBG]  Conflicting agent pairs:
[DBG]  agent 28 is in conflict with agent 42
[DBG]  buildCollisionData() => sum_of_costs=4351, num_of_colliding_pairs=1
[DBG]  buildCollisionData done => sum_of_costs=4351, num_of_colliding_pairs=1
[DBG]  sum_of_cost hodnota: 4351
[DBG]  After skip/init build => iteration_stats.back(): sum_of_costs=4351, collisions=1
[DEBUG] Using default neighbor generation strategy for conflicts: 2
	InitLNS(PP): runtime = 0.00127633, iterations = 2, colliding pairs = 0, initial colliding pairs = 1, solution cost = 4348, initial solution cost = 4351, failed iterations = 0
[DBG]  init_lns->sum_of_costs after init_lns->run: 4348
[DBG]  sum_of_costs after assignment from init_lns->run: 4348
[DBG]  Recomputing sum_of_cost by dividing neighbor.sum_of_costs and neighbor.old_sum_of_costs
[STAT] sum_of_costs after recomputation: 4348
[STAT] Iteration 123
[DBG]  Random chance did not select SAT operator (r=31), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 123
[DBG]  Random chance did not select SAT operator (r=22), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 123
[DBG]  Random chance did not select SAT operator (r=34), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 123
[DBG]  Random chance did not select SAT operator (r=31), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 123
[DBG]  Using SAT operator (destroy+repair SAT).
[DBG]  ====================
[DBG]  SAT destroy operator called.
[DBG]  SAT heuristic: 2
[DBG]  key_agent_id: 28
[DBG]  key_agent_id global path length: 58
[DBG]  Submap content (global positions):
[DBG]  595 596 597 598 599 
[DBG]  627 628 629 630 631 
[DBG]  659 660 661 662 663 
[DBG]  691 692 693 694 695 
[DBG]  723 724 725 726 727 
[DBG]  Map content with agents and obstacles:
[DBG]  X . . X . 
[DBG]  . . A X . 
[DBG]  . . A X X 
[DBG]  . . X X X 
[DBG]  X A A . . 
[DBG]  content of the map structure that we pass to the SAT solver:
[DBG]  -1  1  1  -1  1  
[DBG]  1  1  1  -1  1  
[DBG]  1  1  1  -1  -1  
[DBG]  1  1  -1  -1  -1  
[DBG]  -1  1  1  1  1  
[DBG]  Identifying agents in a submap for rescheduling (when key_agent is there at the time 23):
[DBG]  Agent 11 found intervals in the sub-map:
[DBG]   [21..27]
[DBG]  Agent 11 (interval in submap: [21..27]) contains time 23, added to replan.
[DBG]  Agent 28 found intervals in the sub-map:
[DBG]   [0..57]
[DBG]  Agent 28 (interval in submap: [0..57]) contains time 23, added to replan.
[DBG]  Agent 30 found intervals in the sub-map:
[DBG]   [16..21]
[DBG]  Agent 30 is not in sub-map at time 23 (intervals: 
[DBG]  [16..21] )
[DBG]  Agent 45 found intervals in the sub-map:
[DBG]   [18..23]
[DBG]  Agent 45 (interval in submap: [18..23]) contains time 23, added to replan.
[DBG]  Agent 53 found intervals in the sub-map:
[DBG]   [22..27]
[DBG]  Agent 53 (interval in submap: [22..27]) contains time 23, added to replan.
[DBG]  Agent 144 found intervals in the sub-map:
[DBG]   [24..24]
[DBG]  Agent 144 is not in sub-map at time 23 (intervals: 
[DBG]  [24..24] )
[DBG]  Agent 11 | Start (global): 725 -> (local): (4, 2) at time 23 | Goal (global): 659 -> (local): (2, 0) at time 27
[DBG]  Agent 28 | Start (global): 661 -> (local): (2, 2) at time 23 | Goal (global): 727 -> (local): (4, 4) at time 57
[DBG]  Agent 45 | Start (global): 724 -> (local): (4, 1) at time 23 | Goal (global): 724 -> (local): (4, 1) at time 23
[DBG]  Agent 53 | Start (global): 629 -> (local): (1, 2) at time 23 | Goal (global): 724 -> (local): (4, 1) at time 27
[DBG]  [REPAIR] SAT destroy operator called.
[DBG]  [REPAIR] SAT operator – launching subproblem FOR OPTIMIZATION.
[DBG]  Creating local paths (sx, sy) in the submap for T_sync = 23
[DBG]    Agent 11 (global paths from T=23 to 27) has local path: (4,2) (4,1) (3,1) (3,0) (2,0) 
[DBG]    Agent 28 (global paths from T=23 to 57) has local path: (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,1) (2,1) (2,1) (2,1) (3,1) (4,1) (4,2) (4,2) (4,2) (4,2) (4,1) (4,1) (4,1) (4,1) (4,1) (4,1) (4,1) (4,1) (4,1) (4,1) (4,1) (4,1) (4,1) (4,1) (4,1) (4,2) (4,3) (4,4) 
[DBG]    Agent 45 (global paths from T=23 to 23) has local path: (4,1) 
[DBG]    Agent 53 (global paths from T=23 to 27) has local path: (1,2) (1,1) (2,1) (3,1) (4,1) 
[DBG]  Checking input data for SAT solver:
[DBG]    - Number of agents to replan: 4
[DBG]  Agent 11 has the original local path length: 5 => Start (4,2), Goal (2,0)
[DBG]  Agent 28 has the original local path length: 35 => Start (2,2), Goal (4,4)
[DBG]  Agent 45 has the original local path length: 1 => Start (4,1), Goal (4,1)
[DBG]  Agent 53 has the original local path length: 5 => Start (1,2), Goal (4,1)
[DBG]  Start position: (4, 2), (2, 2), (4, 1), (1, 2), 
[DBG]  Goal position: (2, 0), (4, 4), (4, 1), (4, 1), 
[DBG]  SAT instance and solver created.
Currently solving
Instance name: scen
Map name: map
Encoding used: disappear_at_goal
SAT solver used: Kissat
Optimizing function: sum of costs
Number of agents: 4
Mks LB: 7
SoC LB: 18
Delta: 0
Remaining time: 300000 [ms]

[STAT] Solver returned: -1
[DBG]  SAT solver failed.
[STAT] SAT solver failed to find a valid solution.
[DBG]  ====================
[DBG]  SAT destroy operator called.
[DBG]  SAT heuristic: 2
[DBG]  key_agent_id: 28
[DBG]  key_agent_id global path length: 58
[DBG]  Submap content (global positions):
[DBG]  658 659 660 661 662 
[DBG]  690 691 692 693 694 
[DBG]  722 723 724 725 726 
[DBG]  754 755 756 757 758 
[DBG]  786 787 788 789 790 
[DBG]  Map content with agents and obstacles:
[DBG]  . . . . X 
[DBG]  X . . X X 
[DBG]  . X A . . 
[DBG]  X . . . X 
[DBG]  . A . X . 
[DBG]  content of the map structure that we pass to the SAT solver:
[DBG]  1  1  1  1  -1  
[DBG]  -1  1  1  -1  -1  
[DBG]  1  -1  1  1  1  
[DBG]  -1  1  1  1  -1  
[DBG]  1  1  1  -1  1  
[DBG]  Identifying agents in a submap for rescheduling (when key_agent is there at the time 50):
[DBG]  Agent 28 found intervals in the sub-map:
[DBG]   [0..56]
[DBG]  Agent 28 (interval in submap: [0..56]) contains time 50, added to replan.
[DBG]  Agent 42 found intervals in the sub-map:
[DBG]   [50..55]
[DBG]  Agent 42 (interval in submap: [50..55]) contains time 50, added to replan.
[DBG]  Agent 28 | Start (global): 724 -> (local): (2, 2) at time 50 | Goal (global): 726 -> (local): (2, 4) at time 56
[DBG]  Agent 42 | Start (global): 787 -> (local): (4, 1) at time 50 | Goal (global): 726 -> (local): (2, 4) at time 55
[DBG]  [REPAIR] SAT destroy operator called.
[DBG]  [REPAIR] SAT operator – launching subproblem FOR OPTIMIZATION.
[DBG]  Creating local paths (sx, sy) in the submap for T_sync = 50
[DBG]    Agent 28 (global paths from T=50 to 56) has local path: (2,2) (2,2) (2,2) (2,2) (2,2) (2,3) (2,4) 
[DBG]    Agent 42 (global paths from T=50 to 55) has local path: (4,1) (4,2) (3,2) (3,3) (2,3) (2,4) 
[DBG]  Checking input data for SAT solver:
[DBG]    - Number of agents to replan: 2
[DBG]  Agent 28 has the original local path length: 7 => Start (2,2), Goal (2,4)
[DBG]  Agent 42 has the original local path length: 6 => Start (4,1), Goal (2,4)
[DBG]  Start position: (2, 2), (4, 1), 
[DBG]  Goal position: (2, 4), (2, 4), 
[DBG]  SAT instance and solver created.
Currently solving
Instance name: scen
Map name: map
Encoding used: disappear_at_goal
SAT solver used: Kissat
Optimizing function: sum of costs
Number of agents: 2
Mks LB: 6
SoC LB: 9
Delta: 0
Remaining time: 300000 [ms]

Found plan [agents = 2] [timesteps = 6]
Agent #0 : 7 8 9 0 0 0 
Agent #1 : 14 15 11 12 8 9 

[STAT] Solver returned: 0
[DBG]  Agent (index) 28 | New local path (submap idx):
[DBG]  7 8 9 
[DBG]  Agent (index) 42 | New local path (submap idx):
[DBG]  14 15 11 12 8 9 
[DBG]  Update the agent path 28 | Original local length: 7 | New local length: 3
[DBG]  agent 28 t=0 => decoded (sx,sy)=(2,2) => global_id=724
[DBG]  agent 28 t=1 => decoded (sx,sy)=(2,3) => global_id=725
[DBG]  agent 28 t=2 => decoded (sx,sy)=(2,4) => global_id=726
[DBG]  Complete path of agent 28:
[DBG]    Original: 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 660 660 660 660 692 724 725 725 725 725 724 724 724 724 724 724 724 724 724 724 724 724 724 724 724 725 726 727 
[DBG]    New:     661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 660 660 660 660 692 724 725 725 725 725 724 724 724 724 724 724 724 724 724 724 724 725 726 727 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 660 660 660 660 692 724 725 725 725 725 724 724 724 724 724 724 724 724 724 724 
[DBG]    Local path (in submap): 724 725 726 727 
[DBG]    Suffix (out of submap): 
[DBG]  Original agent path length 28 je: 58
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 0: 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 660, 660, 660, 660, 692, 724, 725, 725, 725, 725, 724, 724, 724, 724, 724, 724, 724, 724, 724, 724, 724, 725, 726, 727, 
[DBG]  Path for agent 28 updated, resulting length: 54
[DBG]  Update the agent path 42 | Original local length: 6 | New local length: 6
[DBG]  agent 42 t=0 => decoded (sx,sy)=(4,1) => global_id=787
[DBG]  agent 42 t=1 => decoded (sx,sy)=(4,2) => global_id=788
[DBG]  agent 42 t=2 => decoded (sx,sy)=(3,2) => global_id=756
[DBG]  agent 42 t=3 => decoded (sx,sy)=(3,3) => global_id=757
[DBG]  agent 42 t=4 => decoded (sx,sy)=(2,3) => global_id=725
[DBG]  agent 42 t=5 => decoded (sx,sy)=(2,4) => global_id=726
[DBG]  Complete path of agent 42:
[DBG]    Original: 224 224 224 256 288 289 321 353 352 384 416 448 480 481 482 483 484 516 548 580 581 613 645 677 678 710 742 774 806 807 808 808 809 841 873 874 875 876 877 878 879 847 848 848 880 881 882 883 851 819 787 788 756 757 725 726 727 759 
[DBG]    New:     224 224 224 256 288 289 321 353 352 384 416 448 480 481 482 483 484 516 548 580 581 613 645 677 678 710 742 774 806 807 808 808 809 841 873 874 875 876 877 878 879 847 848 848 880 881 882 883 851 819 787 788 756 757 725 726 727 759 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 224 224 224 256 288 289 321 353 352 384 416 448 480 481 482 483 484 516 548 580 581 613 645 677 678 710 742 774 806 807 808 808 809 841 873 874 875 876 877 878 879 847 848 848 880 881 882 883 851 819 
[DBG]    Local path (in submap): 787 788 756 757 725 726 
[DBG]    Suffix (out of submap): 727 759 
[DBG]  Original agent path length 42 je: 58
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 1: 224, 224, 224, 256, 288, 289, 321, 353, 352, 384, 416, 448, 480, 481, 482, 483, 484, 516, 548, 580, 581, 613, 645, 677, 678, 710, 742, 774, 806, 807, 808, 808, 809, 841, 873, 874, 875, 876, 877, 878, 879, 847, 848, 848, 880, 881, 882, 883, 851, 819, 787, 788, 756, 757, 725, 726, 727, 759, 
[DBG]  Path for agent 42 updated, resulting length: 58
[DBG]  Paths successfully updated.
[DBG]  (LNS.cpp) New path for agent 28: 
[DBG]  661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 660, 660, 660, 660, 692, 724, 725, 725, 725, 725, 724, 724, 724, 724, 724, 724, 724, 724, 724, 724, 724, 725, 726, 727, 
[DBG]  (LNS.cpp) New path for agent 42: 
[DBG]  224, 224, 224, 256, 288, 289, 321, 353, 352, 384, 416, 448, 480, 481, 482, 483, 484, 516, 548, 580, 581, 613, 645, 677, 678, 710, 742, 774, 806, 807, 808, 808, 809, 841, 873, 874, 875, 876, 877, 878, 879, 847, 848, 848, 880, 881, 882, 883, 851, 819, 787, 788, 756, 757, 725, 726, 727, 759, 
[DBG]  Delta value: 0.0350877
[DBG]  Rewarding metric index = 1
[DBG]  component_weights = {4.159e-06, 0.999991, 1.83182e-06, 3.17595e-06}
[DBG]  opSuccess value: 1
[STAT] neighbor.sum_of_costs before recomputation: 110
[STAT] neighbor.old_sum_of_costs before recomputation: 114
[STAT] sum_of_costs before recomputation: 4348
[DBG]  Validate solution immediately after SAT success.
[WARNING] Problem after SAT: Target conflict: agent 42 (len 57) traverses target of agent 28 (len 53) at location 727 at timestep 56
[DBG]  [DEBUG] Attempting immediate repair via init_lns because problem occurred after SAT (should be applied only for conflicts...).
[DBG]  [DEBUG] Passing 150 agents to init_lns (skip=true).
[DBG]  [DEBUG] path_table contents for selected agents (neighbor.agents):
[DBG]    Agent 28 => controlling path length=54
[DBG]    Agent 42 => controlling path length=58
[DBG]  hodnota skip_initial_solution=1
[DBG]  We skip initialSolution => call buildCollisionData()
[DBG]  buildCollisionData() called – skip_initial_solution case.
[DBG]  Agents.size()=150, collision_graph.size()=150
[DBG]  agent 28 => updateCollidingPairs => foundCollision
[DBG]  agent 42 => updateCollidingPairs => foundCollision
[DBG]  Conflicting agent pairs:
[DBG]  agent 28 is in conflict with agent 42
[DBG]  buildCollisionData() => sum_of_costs=4344, num_of_colliding_pairs=1
[DBG]  buildCollisionData done => sum_of_costs=4344, num_of_colliding_pairs=1
[DBG]  sum_of_cost hodnota: 4344
[DBG]  After skip/init build => iteration_stats.back(): sum_of_costs=4344, collisions=1
[DEBUG] Using default neighbor generation strategy for conflicts: 2
[DEBUG] Using default neighbor generation strategy for conflicts: 2
[DEBUG] Using default neighbor generation strategy for conflicts: 0
	InitLNS(PP): runtime = 0.00176854, iterations = 4, colliding pairs = 0, initial colliding pairs = 1, solution cost = 4341, initial solution cost = 4344, failed iterations = 0
[DBG]  init_lns->sum_of_costs after init_lns->run: 4341
[DBG]  sum_of_costs after assignment from init_lns->run: 4341
[DBG]  Recomputing sum_of_cost by dividing neighbor.sum_of_costs and neighbor.old_sum_of_costs
[STAT] sum_of_costs after recomputation: 4341
[STAT] Iteration 124
[DBG]  Random chance did not select SAT operator (r=89), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 124
[DBG]  Random chance did not select SAT operator (r=65), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 124
[DBG]  Random chance did not select SAT operator (r=76), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 124
[DBG]  Random chance did not select SAT operator (r=59), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 124
[DBG]  Random chance did not select SAT operator (r=67), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 124
[DBG]  Random chance did not select SAT operator (r=83), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 124
[DBG]  Random chance did not select SAT operator (r=31), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 124
[DBG]  Random chance did not select SAT operator (r=11), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 124
[DBG]  Random chance did not select SAT operator (r=69), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 124
[DBG]  Random chance did not select SAT operator (r=20), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 124
[DBG]  Random chance did not select SAT operator (r=50), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 124
[DBG]  Random chance did not select SAT operator (r=81), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 124
[DBG]  Random chance did not select SAT operator (r=12), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 124
[DBG]  Using SAT operator (destroy+repair SAT).
[DBG]  ====================
[DBG]  SAT destroy operator called.
[DBG]  SAT heuristic: 2
[DBG]  key_agent_id: 28
[DBG]  key_agent_id global path length: 58
[DBG]  Submap content (global positions):
[DBG]  595 596 597 598 599 
[DBG]  627 628 629 630 631 
[DBG]  659 660 661 662 663 
[DBG]  691 692 693 694 695 
[DBG]  723 724 725 726 727 
[DBG]  Map content with agents and obstacles:
[DBG]  X . A X . 
[DBG]  . . . X . 
[DBG]  . . A X X 
[DBG]  A A X X X 
[DBG]  X . . . . 
[DBG]  content of the map structure that we pass to the SAT solver:
[DBG]  -1  1  1  -1  1  
[DBG]  1  1  1  -1  1  
[DBG]  1  1  1  -1  -1  
[DBG]  1  1  -1  -1  -1  
[DBG]  -1  1  1  1  1  
[DBG]  Identifying agents in a submap for rescheduling (when key_agent is there at the time 26):
[DBG]  Agent 11 found intervals in the sub-map:
[DBG]   [21..27]
[DBG]  Agent 11 (interval in submap: [21..27]) contains time 26, added to replan.
[DBG]  Agent 26 found intervals in the sub-map:
[DBG]   [26..31]
[DBG]  Agent 26 (interval in submap: [26..31]) contains time 26, added to replan.
[DBG]  Agent 28 found intervals in the sub-map:
[DBG]   [0..57]
[DBG]  Agent 28 (interval in submap: [0..57]) contains time 26, added to replan.
[DBG]  Agent 30 found intervals in the sub-map:
[DBG]   [16..21]
[DBG]  Agent 30 is not in sub-map at time 26 (intervals: 
[DBG]  [16..21] )
[DBG]  Agent 53 found intervals in the sub-map:
[DBG]   [22..27]
[DBG]  Agent 53 (interval in submap: [22..27]) contains time 26, added to replan.
[DBG]  Agent 11 | Start (global): 691 -> (local): (3, 0) at time 26 | Goal (global): 659 -> (local): (2, 0) at time 27
[DBG]  Agent 26 | Start (global): 597 -> (local): (0, 2) at time 26 | Goal (global): 724 -> (local): (4, 1) at time 31
[DBG]  Agent 28 | Start (global): 661 -> (local): (2, 2) at time 26 | Goal (global): 727 -> (local): (4, 4) at time 57
[DBG]  Agent 53 | Start (global): 692 -> (local): (3, 1) at time 26 | Goal (global): 724 -> (local): (4, 1) at time 27
[DBG]  [REPAIR] SAT destroy operator called.
[DBG]  [REPAIR] SAT operator – launching subproblem FOR OPTIMIZATION.
[DBG]  Creating local paths (sx, sy) in the submap for T_sync = 26
[DBG]    Agent 11 (global paths from T=26 to 27) has local path: (3,0) (2,0) 
[DBG]    Agent 26 (global paths from T=26 to 31) has local path: (0,2) (0,1) (1,1) (2,1) (3,1) (4,1) 
[DBG]    Agent 28 (global paths from T=26 to 57) has local path: (2,2) (2,2) (2,2) (2,2) (2,1) (2,1) (2,1) (2,1) (3,1) (4,1) (4,2) (4,2) (4,2) (4,2) (4,1) (4,1) (4,1) (4,1) (4,1) (4,1) (4,1) (4,1) (4,1) (4,1) (4,1) (4,1) (4,1) (4,1) (4,1) (4,2) (4,3) (4,4) 
[DBG]    Agent 53 (global paths from T=26 to 27) has local path: (3,1) (4,1) 
[DBG]  Checking input data for SAT solver:
[DBG]    - Number of agents to replan: 4
[DBG]  Agent 11 has the original local path length: 2 => Start (3,0), Goal (2,0)
[DBG]  Agent 26 has the original local path length: 6 => Start (0,2), Goal (4,1)
[DBG]  Agent 28 has the original local path length: 32 => Start (2,2), Goal (4,4)
[DBG]  Agent 53 has the original local path length: 2 => Start (3,1), Goal (4,1)
[DBG]  Start position: (3, 0), (0, 2), (2, 2), (3, 1), 
[DBG]  Goal position: (2, 0), (4, 1), (4, 4), (4, 1), 
[DBG]  SAT instance and solver created.
Currently solving
Instance name: scen
Map name: map
Encoding used: disappear_at_goal
SAT solver used: Kissat
Optimizing function: sum of costs
Number of agents: 4
Mks LB: 7
SoC LB: 17
Delta: 0
Remaining time: 300000 [ms]

Vertex conflict! Agents 0, 1, timestep 6, location 0
Vertex conflict! Agents 0, 3, timestep 2, location 0
Swapping conflict! Agents 0, 3, timestep 2, edge (0,0)
Vertex conflict! Agents 0, 3, timestep 3, location 0
Swapping conflict! Agents 0, 3, timestep 3, edge (0,0)
Vertex conflict! Agents 0, 3, timestep 4, location 0
Swapping conflict! Agents 0, 3, timestep 4, edge (0,0)
Vertex conflict! Agents 0, 3, timestep 5, location 0
Swapping conflict! Agents 0, 3, timestep 5, edge (0,0)
Vertex conflict! Agents 0, 3, timestep 6, location 0
Vertex conflict! Agents 1, 3, timestep 6, location 0
Found plan [agents = 4] [timesteps = 7]
Agent #0 : 10 7 0 0 0 0 0 
Agent #1 : 1 5 9 8 11 12 0 
Agent #2 : 9 8 11 12 13 14 15 
Agent #3 : 11 12 0 0 0 0 0 

[STAT] Solver returned: 0
[DBG]  Agent (index) 11 | New local path (submap idx):
[DBG]  10 7 
[DBG]  Agent (index) 26 | New local path (submap idx):
[DBG]  1 5 9 8 11 12 
[DBG]  Agent (index) 28 | New local path (submap idx):
[DBG]  9 8 11 12 13 14 15 
[DBG]  Agent (index) 53 | New local path (submap idx):
[DBG]  11 12 
[DBG]  Update the agent path 11 | Original local length: 2 | New local length: 2
[DBG]  agent 11 t=0 => decoded (sx,sy)=(3,0) => global_id=691
[DBG]  agent 11 t=1 => decoded (sx,sy)=(2,0) => global_id=659
[DBG]  Complete path of agent 11:
[DBG]    Original: 990 1022 990 989 988 956 956 956 924 892 893 861 829 797 765 733 732 731 730 729 728 727 726 725 724 692 691 659 658 658 658 658 657 656 656 656 657 
[DBG]    New:     990 1022 990 989 988 956 956 956 924 892 893 861 829 797 765 733 732 731 730 729 728 727 726 725 724 692 691 659 658 658 658 658 657 656 656 656 657 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 990 1022 990 989 988 956 956 956 924 892 893 861 829 797 765 733 732 731 730 729 728 727 726 725 724 692 
[DBG]    Local path (in submap): 691 659 
[DBG]    Suffix (out of submap): 658 658 658 658 657 656 656 656 657 
[DBG]  Original agent path length 11 je: 37
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 0: 990, 1022, 990, 989, 988, 956, 956, 956, 924, 892, 893, 861, 829, 797, 765, 733, 732, 731, 730, 729, 728, 727, 726, 725, 724, 692, 691, 659, 658, 658, 658, 658, 657, 656, 656, 656, 657, 
[DBG]  Path for agent 11 updated, resulting length: 37
[DBG]  Update the agent path 26 | Original local length: 6 | New local length: 6
[DBG]  agent 26 t=0 => decoded (sx,sy)=(0,2) => global_id=597
[DBG]  agent 26 t=1 => decoded (sx,sy)=(1,2) => global_id=629
[DBG]  agent 26 t=2 => decoded (sx,sy)=(2,2) => global_id=661
[DBG]  agent 26 t=3 => decoded (sx,sy)=(2,1) => global_id=660
[DBG]  agent 26 t=4 => decoded (sx,sy)=(3,1) => global_id=692
[DBG]  agent 26 t=5 => decoded (sx,sy)=(4,1) => global_id=724
[DBG]  Complete path of agent 26:
[DBG]    Original: 13 14 46 47 48 80 81 82 83 84 116 148 180 212 244 276 277 309 341 373 405 437 469 501 533 565 597 596 628 660 692 724 756 755 
[DBG]    New:     13 14 46 47 48 80 81 82 83 84 116 148 180 212 244 276 277 309 341 373 405 437 469 501 533 565 597 629 661 660 692 724 756 755 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 13 14 46 47 48 80 81 82 83 84 116 148 180 212 244 276 277 309 341 373 405 437 469 501 533 565 
[DBG]    Local path (in submap): 597 629 661 660 692 724 
[DBG]    Suffix (out of submap): 756 755 
[DBG]  Original agent path length 26 je: 34
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 1: 13, 14, 46, 47, 48, 80, 81, 82, 83, 84, 116, 148, 180, 212, 244, 276, 277, 309, 341, 373, 405, 437, 469, 501, 533, 565, 597, 629, 661, 660, 692, 724, 756, 755, 
[DBG]  Path for agent 26 updated, resulting length: 34
[DBG]  Update the agent path 28 | Original local length: 32 | New local length: 7
[DBG]  agent 28 t=0 => decoded (sx,sy)=(2,2) => global_id=661
[DBG]  agent 28 t=1 => decoded (sx,sy)=(2,1) => global_id=660
[DBG]  agent 28 t=2 => decoded (sx,sy)=(3,1) => global_id=692
[DBG]  agent 28 t=3 => decoded (sx,sy)=(4,1) => global_id=724
[DBG]  agent 28 t=4 => decoded (sx,sy)=(4,2) => global_id=725
[DBG]  agent 28 t=5 => decoded (sx,sy)=(4,3) => global_id=726
[DBG]  agent 28 t=6 => decoded (sx,sy)=(4,4) => global_id=727
[DBG]  Complete path of agent 28:
[DBG]    Original: 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 660 660 660 660 692 724 725 725 725 725 724 724 724 724 724 724 724 724 724 724 724 724 724 724 724 725 726 727 
[DBG]    New:     661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 660 692 724 725 726 727 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 
[DBG]    Local path (in submap): 661 660 692 724 725 726 727 
[DBG]    Suffix (out of submap): 
[DBG]  Original agent path length 28 je: 58
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 2: 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 660, 692, 724, 725, 726, 727, 
[DBG]  Path for agent 28 updated, resulting length: 33
[DBG]  Update the agent path 53 | Original local length: 2 | New local length: 2
[DBG]  agent 53 t=0 => decoded (sx,sy)=(3,1) => global_id=692
[DBG]  agent 53 t=1 => decoded (sx,sy)=(4,1) => global_id=724
[DBG]  Complete path of agent 53:
[DBG]    Original: 84 116 148 148 180 212 244 276 308 340 341 373 373 373 373 405 437 437 469 501 533 565 597 629 628 660 692 724 756 788 820 821 
[DBG]    New:     84 116 148 148 180 212 244 276 308 340 341 373 373 373 373 405 437 437 469 501 533 565 597 629 628 660 692 724 756 788 820 821 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 84 116 148 148 180 212 244 276 308 340 341 373 373 373 373 405 437 437 469 501 533 565 597 629 628 660 
[DBG]    Local path (in submap): 692 724 
[DBG]    Suffix (out of submap): 756 788 820 821 
[DBG]  Original agent path length 53 je: 32
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 3: 84, 116, 148, 148, 180, 212, 244, 276, 308, 340, 341, 373, 373, 373, 373, 405, 437, 437, 469, 501, 533, 565, 597, 629, 628, 660, 692, 724, 756, 788, 820, 821, 
[DBG]  Path for agent 53 updated, resulting length: 32
[DBG]  Paths successfully updated.
[DBG]  (LNS.cpp) New path for agent 11: 
[DBG]  990, 1022, 990, 989, 988, 956, 956, 956, 924, 892, 893, 861, 829, 797, 765, 733, 732, 731, 730, 729, 728, 727, 726, 725, 724, 692, 691, 659, 658, 658, 658, 658, 657, 656, 656, 656, 657, 
[DBG]  (LNS.cpp) New path for agent 26: 
[DBG]  13, 14, 46, 47, 48, 80, 81, 82, 83, 84, 116, 148, 180, 212, 244, 276, 277, 309, 341, 373, 405, 437, 469, 501, 533, 565, 597, 629, 661, 660, 692, 724, 756, 755, 
[DBG]  (LNS.cpp) New path for agent 28: 
[DBG]  661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 660, 692, 724, 725, 726, 727, 
[DBG]  (LNS.cpp) New path for agent 53: 
[DBG]  84, 116, 148, 148, 180, 212, 244, 276, 308, 340, 341, 373, 373, 373, 373, 405, 437, 437, 469, 501, 533, 565, 597, 629, 628, 660, 692, 724, 756, 788, 820, 821, 
[DBG]  Delta value: 0.159236
[DBG]  Rewarding metric index = 1
[DBG]  component_weights = {3.40833e-06, 0.999992, 1.50119e-06, 2.60272e-06}
[DBG]  opSuccess value: 1
[STAT] neighbor.sum_of_costs before recomputation: 132
[STAT] neighbor.old_sum_of_costs before recomputation: 157
[STAT] sum_of_costs before recomputation: 4341
[DBG]  Validate solution immediately after SAT success.
[WARNING] Problem after SAT: Target conflict: agent 42 (len 57) traverses target of agent 28 (len 32) at location 727 at timestep 56
[DBG]  [DEBUG] Attempting immediate repair via init_lns because problem occurred after SAT (should be applied only for conflicts...).
[DBG]  [DEBUG] Passing 150 agents to init_lns (skip=true).
[DBG]  [DEBUG] path_table contents for selected agents (neighbor.agents):
[DBG]    Agent 11 => controlling path length=37
[DBG]    Agent 26 => controlling path length=34
[DBG]    Agent 28 => controlling path length=33
[DBG]    Agent 53 => controlling path length=32
[DBG]  hodnota skip_initial_solution=1
[DBG]  We skip initialSolution => call buildCollisionData()
[DBG]  buildCollisionData() called – skip_initial_solution case.
[DBG]  Agents.size()=150, collision_graph.size()=150
[DBG]  agent 28 => updateCollidingPairs => foundCollision
[DBG]  agent 42 => updateCollidingPairs => foundCollision
[DBG]  Conflicting agent pairs:
[DBG]  agent 28 is in conflict with agent 42
[DBG]  buildCollisionData() => sum_of_costs=4316, num_of_colliding_pairs=1
[DBG]  buildCollisionData done => sum_of_costs=4316, num_of_colliding_pairs=1
[DBG]  sum_of_cost hodnota: 4316
[DBG]  After skip/init build => iteration_stats.back(): sum_of_costs=4316, collisions=1
[DEBUG] Using default neighbor generation strategy for conflicts: 0
	InitLNS(PP): runtime = 0.000920042, iterations = 2, colliding pairs = 0, initial colliding pairs = 1, solution cost = 4312, initial solution cost = 4316, failed iterations = 0
[DBG]  init_lns->sum_of_costs after init_lns->run: 4312
[DBG]  sum_of_costs after assignment from init_lns->run: 4312
[DBG]  Recomputing sum_of_cost by dividing neighbor.sum_of_costs and neighbor.old_sum_of_costs
[STAT] sum_of_costs after recomputation: 4312
[STAT] Iteration 125
[DBG]  Random chance did not select SAT operator (r=67), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 125
[DBG]  Random chance did not select SAT operator (r=25), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 125
[DBG]  Random chance did not select SAT operator (r=25), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 125
[DBG]  Random chance did not select SAT operator (r=19), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 125
[DBG]  Using SAT operator (destroy+repair SAT).
[DBG]  ====================
[DBG]  SAT destroy operator called.
[DBG]  SAT heuristic: 2
[DBG]  key_agent_id: 28
[DBG]  key_agent_id global path length: 58
[DBG]  Submap content (global positions):
[DBG]  658 659 660 661 662 
[DBG]  690 691 692 693 694 
[DBG]  722 723 724 725 726 
[DBG]  754 755 756 757 758 
[DBG]  786 787 788 789 790 
[DBG]  Map content with agents and obstacles:
[DBG]  . . . . X 
[DBG]  X . . X X 
[DBG]  . X A A . 
[DBG]  X . . . X 
[DBG]  . . . X . 
[DBG]  content of the map structure that we pass to the SAT solver:
[DBG]  1  1  1  1  -1  
[DBG]  -1  1  1  -1  -1  
[DBG]  1  -1  1  1  1  
[DBG]  -1  1  1  1  -1  
[DBG]  1  1  1  -1  1  
[DBG]  Identifying agents in a submap for rescheduling (when key_agent is there at the time 54):
[DBG]  Agent 28 found intervals in the sub-map:
[DBG]   [0..56]
[DBG]  Agent 28 (interval in submap: [0..56]) contains time 54, added to replan.
[DBG]  Agent 42 found intervals in the sub-map:
[DBG]   [50..55]
[DBG]  Agent 42 (interval in submap: [50..55]) contains time 54, added to replan.
[DBG]  Agent 28 | Start (global): 724 -> (local): (2, 2) at time 54 | Goal (global): 726 -> (local): (2, 4) at time 56
[DBG]  Agent 42 | Start (global): 725 -> (local): (2, 3) at time 54 | Goal (global): 726 -> (local): (2, 4) at time 55
[DBG]  [REPAIR] SAT destroy operator called.
[DBG]  [REPAIR] SAT operator – launching subproblem FOR OPTIMIZATION.
[DBG]  Creating local paths (sx, sy) in the submap for T_sync = 54
[DBG]    Agent 28 (global paths from T=54 to 56) has local path: (2,2) (2,3) (2,4) 
[DBG]    Agent 42 (global paths from T=54 to 55) has local path: (2,3) (2,4) 
[DBG]  Checking input data for SAT solver:
[DBG]    - Number of agents to replan: 2
[DBG]  Agent 28 has the original local path length: 3 => Start (2,2), Goal (2,4)
[DBG]  Agent 42 has the original local path length: 2 => Start (2,3), Goal (2,4)
[DBG]  Start position: (2, 2), (2, 3), 
[DBG]  Goal position: (2, 4), (2, 4), 
[DBG]  SAT instance and solver created.
Currently solving
Instance name: scen
Map name: map
Encoding used: disappear_at_goal
SAT solver used: Kissat
Optimizing function: sum of costs
Number of agents: 2
Mks LB: 3
SoC LB: 5
Delta: 0
Remaining time: 300000 [ms]

Found plan [agents = 2] [timesteps = 3]
Agent #0 : 7 8 9 
Agent #1 : 8 9 0 

[STAT] Solver returned: 0
[DBG]  Agent (index) 28 | New local path (submap idx):
[DBG]  7 8 9 
[DBG]  Agent (index) 42 | New local path (submap idx):
[DBG]  8 9 
[DBG]  Update the agent path 28 | Original local length: 3 | New local length: 3
[DBG]  agent 28 t=0 => decoded (sx,sy)=(2,2) => global_id=724
[DBG]  agent 28 t=1 => decoded (sx,sy)=(2,3) => global_id=725
[DBG]  agent 28 t=2 => decoded (sx,sy)=(2,4) => global_id=726
[DBG]  Complete path of agent 28:
[DBG]    Original: 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 660 692 724 756 755 787 787 787 787 787 787 787 787 787 788 756 724 724 724 724 724 724 724 724 724 724 724 725 726 727 
[DBG]    New:     661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 660 692 724 756 755 787 787 787 787 787 787 787 787 787 788 756 724 724 724 724 724 724 724 724 724 724 724 725 726 727 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 660 692 724 756 755 787 787 787 787 787 787 787 787 787 788 756 724 724 724 724 724 724 724 724 724 724 
[DBG]    Local path (in submap): 724 725 726 
[DBG]    Suffix (out of submap): 727 
[DBG]  Original agent path length 28 je: 58
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 0: 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 660, 692, 724, 756, 755, 787, 787, 787, 787, 787, 787, 787, 787, 787, 788, 756, 724, 724, 724, 724, 724, 724, 724, 724, 724, 724, 724, 725, 726, 727, 
[DBG]  Path for agent 28 updated, resulting length: 58
[DBG]  Update the agent path 42 | Original local length: 2 | New local length: 2
[DBG]  agent 42 t=0 => decoded (sx,sy)=(2,3) => global_id=725
[DBG]  agent 42 t=1 => decoded (sx,sy)=(2,4) => global_id=726
[DBG]  Complete path of agent 42:
[DBG]    Original: 224 224 224 256 288 289 321 353 352 384 416 448 480 481 482 483 484 516 548 580 581 613 645 677 678 710 742 774 806 807 808 808 809 841 873 874 875 876 877 878 879 847 848 848 880 881 882 883 851 819 787 788 756 757 725 726 727 759 
[DBG]    New:     224 224 224 256 288 289 321 353 352 384 416 448 480 481 482 483 484 516 548 580 581 613 645 677 678 710 742 774 806 807 808 808 809 841 873 874 875 876 877 878 879 847 848 848 880 881 882 883 851 819 787 788 756 757 725 726 727 759 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 224 224 224 256 288 289 321 353 352 384 416 448 480 481 482 483 484 516 548 580 581 613 645 677 678 710 742 774 806 807 808 808 809 841 873 874 875 876 877 878 879 847 848 848 880 881 882 883 851 819 787 788 756 757 
[DBG]    Local path (in submap): 725 726 
[DBG]    Suffix (out of submap): 727 759 
[DBG]  Original agent path length 42 je: 58
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 1: 224, 224, 224, 256, 288, 289, 321, 353, 352, 384, 416, 448, 480, 481, 482, 483, 484, 516, 548, 580, 581, 613, 645, 677, 678, 710, 742, 774, 806, 807, 808, 808, 809, 841, 873, 874, 875, 876, 877, 878, 879, 847, 848, 848, 880, 881, 882, 883, 851, 819, 787, 788, 756, 757, 725, 726, 727, 759, 
[DBG]  Path for agent 42 updated, resulting length: 58
[DBG]  Paths successfully updated.
[DBG]  (LNS.cpp) New path for agent 28: 
[DBG]  661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 660, 692, 724, 756, 755, 787, 787, 787, 787, 787, 787, 787, 787, 787, 788, 756, 724, 724, 724, 724, 724, 724, 724, 724, 724, 724, 724, 725, 726, 727, 
[DBG]  (LNS.cpp) New path for agent 42: 
[DBG]  224, 224, 224, 256, 288, 289, 321, 353, 352, 384, 416, 448, 480, 481, 482, 483, 484, 516, 548, 580, 581, 613, 645, 677, 678, 710, 742, 774, 806, 807, 808, 808, 809, 841, 873, 874, 875, 876, 877, 878, 879, 847, 848, 848, 880, 881, 882, 883, 851, 819, 787, 788, 756, 757, 725, 726, 727, 759, 
[DBG]  Delta value: 0
[DBG]  Rewarding metric index = 1
[DBG]  component_weights = {3.23791e-06, 0.999993, 1.42613e-06, 2.47258e-06}
[DBG]  opSuccess value: 1
[STAT] neighbor.sum_of_costs before recomputation: 114
[STAT] neighbor.old_sum_of_costs before recomputation: 114
[STAT] sum_of_costs before recomputation: 4312
[DBG]  Validate solution immediately after SAT success.
[DBG]  No problems after SAT replan.
[DBG]  Recomputing sum_of_cost by dividing neighbor.sum_of_costs and neighbor.old_sum_of_costs
[STAT] sum_of_costs after recomputation: 4312
[STAT] Iteration 126
[DBG]  Random chance did not select SAT operator (r=91), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 126
[DBG]  Random chance did not select SAT operator (r=94), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 126
[DBG]  Random chance did not select SAT operator (r=27), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 126
[DBG]  Random chance did not select SAT operator (r=54), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 126
[DBG]  Random chance did not select SAT operator (r=84), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 126
[DBG]  Random chance did not select SAT operator (r=67), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 126
[DBG]  Random chance did not select SAT operator (r=38), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 126
[DBG]  Random chance did not select SAT operator (r=88), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 126
[DBG]  Random chance did not select SAT operator (r=78), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 126
[DBG]  Random chance did not select SAT operator (r=16), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 126
[DBG]  Random chance did not select SAT operator (r=23), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 126
[DBG]  Using SAT operator (destroy+repair SAT).
[DBG]  ====================
[DBG]  SAT destroy operator called.
[DBG]  SAT heuristic: 2
[DBG]  key_agent_id: 28
[DBG]  key_agent_id global path length: 58
[DBG]  Submap content (global positions):
[DBG]  721 722 723 724 725 
[DBG]  753 754 755 756 757 
[DBG]  785 786 787 788 789 
[DBG]  817 818 819 820 821 
[DBG]  849 850 851 852 853 
[DBG]  Map content with agents and obstacles:
[DBG]  . . X A . 
[DBG]  . X . . . 
[DBG]  X . A . X 
[DBG]  . . . . . 
[DBG]  . . . X X 
[DBG]  content of the map structure that we pass to the SAT solver:
[DBG]  1  1  -1  1  1  
[DBG]  1  -1  1  1  1  
[DBG]  -1  1  1  1  -1  
[DBG]  1  1  1  1  1  
[DBG]  1  1  1  -1  -1  
[DBG]  Identifying agents in a submap for rescheduling (when key_agent is there at the time 34):
[DBG]  Agent 11 found intervals in the sub-map:
[DBG]   [23..24]
[DBG]  Agent 11 is not in sub-map at time 34 (intervals: 
[DBG]  [23..24] )
[DBG]  Agent 26 found intervals in the sub-map:
[DBG]   [31..33]
[DBG]  Agent 26 is not in sub-map at time 34 (intervals: 
[DBG]  [31..33] )
[DBG]  Agent 28 found intervals in the sub-map:
[DBG]   [30..55]
[DBG]  Agent 28 (interval in submap: [30..55]) contains time 34, added to replan.
[DBG]  Agent 44 found intervals in the sub-map:
[DBG]   [34..40]
[DBG]  Agent 44 (interval in submap: [34..40]) contains time 34, added to replan.
[DBG]  Agent 53 found intervals in the sub-map:
[DBG]   [27..31]
[DBG]  Agent 53 is not in sub-map at time 34 (intervals: 
[DBG]  [27..31] )
[DBG]  Agent 148 found intervals in the sub-map:
[DBG]  
[DBG]  Agent 148 is not in sub-map at time 34 (intervals: 
[DBG]  )
[DBG]  Agent 28 | Start (global): 787 -> (local): (2, 2) at time 34 | Goal (global): 725 -> (local): (0, 4) at time 55
[DBG]  Agent 44 | Start (global): 724 -> (local): (0, 3) at time 34 | Goal (global): 850 -> (local): (4, 1) at time 40
[DBG]  [REPAIR] SAT destroy operator called.
[DBG]  [REPAIR] SAT operator – launching subproblem FOR OPTIMIZATION.
[DBG]  Creating local paths (sx, sy) in the submap for T_sync = 34
[DBG]    Agent 28 (global paths from T=34 to 55) has local path: (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,3) (1,3) (0,3) (0,3) (0,3) (0,3) (0,3) (0,3) (0,3) (0,3) (0,3) (0,3) (0,3) (0,4) 
[DBG]    Agent 44 (global paths from T=34 to 40) has local path: (0,3) (1,3) (2,3) (3,3) (3,2) (3,1) (4,1) 
[DBG]  Checking input data for SAT solver:
[DBG]    - Number of agents to replan: 2
[DBG]  Agent 28 has the original local path length: 22 => Start (2,2), Goal (0,4)
[DBG]  Agent 44 has the original local path length: 7 => Start (0,3), Goal (4,1)
[DBG]  Start position: (2, 2), (0, 3), 
[DBG]  Goal position: (0, 4), (4, 1), 
[DBG]  SAT instance and solver created.
Currently solving
Instance name: scen
Map name: map
Encoding used: disappear_at_goal
SAT solver used: Kissat
Optimizing function: sum of costs
Number of agents: 2
Mks LB: 7
SoC LB: 12
Delta: 0
Remaining time: 300000 [ms]

Found plan [agents = 2] [timesteps = 7]
Agent #0 : 9 10 6 7 3 0 0 
Agent #1 : 2 6 5 9 13 18 17 

[STAT] Solver returned: 0
[DBG]  Agent (index) 28 | New local path (submap idx):
[DBG]  9 10 6 7 3 
[DBG]  Agent (index) 44 | New local path (submap idx):
[DBG]  2 6 5 9 13 18 17 
[DBG]  Update the agent path 28 | Original local length: 22 | New local length: 5
[DBG]  agent 28 t=0 => decoded (sx,sy)=(2,2) => global_id=787
[DBG]  agent 28 t=1 => decoded (sx,sy)=(2,3) => global_id=788
[DBG]  agent 28 t=2 => decoded (sx,sy)=(1,3) => global_id=756
[DBG]  agent 28 t=3 => decoded (sx,sy)=(1,4) => global_id=757
[DBG]  agent 28 t=4 => decoded (sx,sy)=(0,4) => global_id=725
[DBG]  Complete path of agent 28:
[DBG]    Original: 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 660 692 724 756 755 787 787 787 787 787 787 787 787 787 788 756 724 724 724 724 724 724 724 724 724 724 724 725 726 727 
[DBG]    New:     661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 660 692 724 756 755 787 787 788 756 757 725 726 727 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 660 692 724 756 755 787 
[DBG]    Local path (in submap): 787 788 756 757 725 726 727 
[DBG]    Suffix (out of submap): 
[DBG]  Original agent path length 28 je: 58
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 0: 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 660, 692, 724, 756, 755, 787, 787, 788, 756, 757, 725, 726, 727, 
[DBG]  Path for agent 28 updated, resulting length: 41
[DBG]  Update the agent path 44 | Original local length: 7 | New local length: 7
[DBG]  agent 44 t=0 => decoded (sx,sy)=(0,3) => global_id=724
[DBG]  agent 44 t=1 => decoded (sx,sy)=(1,3) => global_id=756
[DBG]  agent 44 t=2 => decoded (sx,sy)=(1,2) => global_id=755
[DBG]  agent 44 t=3 => decoded (sx,sy)=(2,2) => global_id=787
[DBG]  agent 44 t=4 => decoded (sx,sy)=(3,2) => global_id=819
[DBG]  agent 44 t=5 => decoded (sx,sy)=(4,2) => global_id=851
[DBG]  agent 44 t=6 => decoded (sx,sy)=(4,1) => global_id=850
[DBG]  Complete path of agent 44:
[DBG]    Original: 156 188 189 221 222 254 286 318 350 350 349 348 347 379 378 377 409 408 407 439 438 438 437 469 501 533 565 597 596 628 627 659 691 692 724 756 788 820 819 818 850 882 881 880 879 878 846 846 847 848 
[DBG]    New:     156 188 189 221 222 254 286 318 350 350 349 348 347 379 378 377 409 408 407 439 438 438 437 469 501 533 565 597 596 628 627 659 691 692 724 756 755 787 819 851 850 882 881 880 879 878 846 846 847 848 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 156 188 189 221 222 254 286 318 350 350 349 348 347 379 378 377 409 408 407 439 438 438 437 469 501 533 565 597 596 628 627 659 691 692 
[DBG]    Local path (in submap): 724 756 755 787 819 851 850 
[DBG]    Suffix (out of submap): 882 881 880 879 878 846 846 847 848 
[DBG]  Original agent path length 44 je: 50
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 1: 156, 188, 189, 221, 222, 254, 286, 318, 350, 350, 349, 348, 347, 379, 378, 377, 409, 408, 407, 439, 438, 438, 437, 469, 501, 533, 565, 597, 596, 628, 627, 659, 691, 692, 724, 756, 755, 787, 819, 851, 850, 882, 881, 880, 879, 878, 846, 846, 847, 848, 
[DBG]  Path for agent 44 updated, resulting length: 50
[DBG]  Paths successfully updated.
[DBG]  (LNS.cpp) New path for agent 28: 
[DBG]  661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 660, 692, 724, 756, 755, 787, 787, 788, 756, 757, 725, 726, 727, 
[DBG]  (LNS.cpp) New path for agent 44: 
[DBG]  156, 188, 189, 221, 222, 254, 286, 318, 350, 350, 349, 348, 347, 379, 378, 377, 409, 408, 407, 439, 438, 438, 437, 469, 501, 533, 565, 597, 596, 628, 627, 659, 691, 692, 724, 756, 755, 787, 819, 851, 850, 882, 881, 880, 879, 878, 846, 846, 847, 848, 
[DBG]  Delta value: 0.160377
[DBG]  Rewarding metric index = 1
[DBG]  component_weights = {2.65088e-06, 0.999994, 1.16758e-06, 2.0243e-06}
[DBG]  opSuccess value: 1
[STAT] neighbor.sum_of_costs before recomputation: 89
[STAT] neighbor.old_sum_of_costs before recomputation: 106
[STAT] sum_of_costs before recomputation: 4312
[DBG]  Validate solution immediately after SAT success.
[WARNING] Problem after SAT: Target conflict: agent 44 (len 49) traverses target of agent 26 (len 33) at location 755 at timestep 36
[DBG]  [DEBUG] Attempting immediate repair via init_lns because problem occurred after SAT (should be applied only for conflicts...).
[DBG]  [DEBUG] Passing 150 agents to init_lns (skip=true).
[DBG]  [DEBUG] path_table contents for selected agents (neighbor.agents):
[DBG]    Agent 28 => controlling path length=41
[DBG]    Agent 44 => controlling path length=50
[DBG]  hodnota skip_initial_solution=1
[DBG]  We skip initialSolution => call buildCollisionData()
[DBG]  buildCollisionData() called – skip_initial_solution case.
[DBG]  Agents.size()=150, collision_graph.size()=150
[DBG]  agent 26 => updateCollidingPairs => foundCollision
[DBG]  agent 28 => updateCollidingPairs => foundCollision
[DBG]  agent 42 => updateCollidingPairs => foundCollision
[DBG]  agent 44 => updateCollidingPairs => foundCollision
[DBG]  Conflicting agent pairs:
[DBG]  agent 26 is in conflict with agent 44
[DBG]  agent 28 is in conflict with agent 42
[DBG]  buildCollisionData() => sum_of_costs=4295, num_of_colliding_pairs=2
[DBG]  buildCollisionData done => sum_of_costs=4295, num_of_colliding_pairs=2
[DBG]  sum_of_cost hodnota: 4295
[DBG]  After skip/init build => iteration_stats.back(): sum_of_costs=4295, collisions=2
[DEBUG] Using default neighbor generation strategy for conflicts: 1
[DEBUG] Using default neighbor generation strategy for conflicts: 2
[DEBUG] Using default neighbor generation strategy for conflicts: 1
[DEBUG] Using default neighbor generation strategy for conflicts: 1
	InitLNS(PP): runtime = 0.00826433, iterations = 5, colliding pairs = 0, initial colliding pairs = 2, solution cost = 4279, initial solution cost = 4295, failed iterations = 0
[DBG]  init_lns->sum_of_costs after init_lns->run: 4279
[DBG]  sum_of_costs after assignment from init_lns->run: 4279
[DBG]  Recomputing sum_of_cost by dividing neighbor.sum_of_costs and neighbor.old_sum_of_costs
[STAT] sum_of_costs after recomputation: 4279
[STAT] Iteration 127
[DBG]  Random chance did not select SAT operator (r=27), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 127
[DBG]  Random chance did not select SAT operator (r=66), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 127
[DBG]  Random chance did not select SAT operator (r=14), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 127
[DBG]  Random chance did not select SAT operator (r=45), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 127
[DBG]  Random chance did not select SAT operator (r=15), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 127
[DBG]  Random chance did not select SAT operator (r=41), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 127
[DBG]  Random chance did not select SAT operator (r=97), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 127
[DBG]  Using SAT operator (destroy+repair SAT).
[DBG]  ====================
[DBG]  SAT destroy operator called.
[DBG]  SAT heuristic: 2
[DBG]  key_agent_id: 28
[DBG]  key_agent_id global path length: 44
[DBG]  Submap content (global positions):
[DBG]  660 661 662 663 664 
[DBG]  692 693 694 695 696 
[DBG]  724 725 726 727 728 
[DBG]  756 757 758 759 760 
[DBG]  788 789 790 791 792 
[DBG]  Map content with agents and obstacles:
[DBG]  . . X X . 
[DBG]  . X X X . 
[DBG]  . . A A . 
[DBG]  . . X . X 
[DBG]  . X . X . 
[DBG]  content of the map structure that we pass to the SAT solver:
[DBG]  1  1  -1  -1  1  
[DBG]  1  -1  -1  -1  1  
[DBG]  1  1  1  1  1  
[DBG]  1  1  -1  1  -1  
[DBG]  1  -1  1  -1  1  
[DBG]  Identifying agents in a submap for rescheduling (when key_agent is there at the time 42):
[DBG]  Agent 28 found intervals in the sub-map:
[DBG]   [0..9] [18..18] [26..29] [31..43]
[DBG]  Agent 28 (interval in submap: [31..43]) contains time 42, added to replan.
[DBG]  Agent 42 found intervals in the sub-map:
[DBG]   [38..43]
[DBG]  Agent 42 (interval in submap: [38..43]) contains time 42, added to replan.
[DBG]  Agent 55 found intervals in the sub-map:
[DBG]   [44..44]
[DBG]  Agent 55 is not in sub-map at time 42 (intervals: 
[DBG]  [44..44] )
[DBG]  Agent 28 | Start (global): 726 -> (local): (2, 2) at time 42 | Goal (global): 727 -> (local): (2, 3) at time 43
[DBG]  Agent 42 | Start (global): 727 -> (local): (2, 3) at time 42 | Goal (global): 759 -> (local): (3, 3) at time 43
[DBG]  [REPAIR] SAT destroy operator called.
[DBG]  [REPAIR] SAT operator – launching subproblem FOR OPTIMIZATION.
[DBG]  Creating local paths (sx, sy) in the submap for T_sync = 42
[DBG]    Agent 28 (global paths from T=42 to 43) has local path: (2,2) (2,3) 
[DBG]    Agent 42 (global paths from T=42 to 43) has local path: (2,3) (3,3) 
[DBG]  Checking input data for SAT solver:
[DBG]    - Number of agents to replan: 2
[DBG]  Agent 28 has the original local path length: 2 => Start (2,2), Goal (2,3)
[DBG]  Agent 42 has the original local path length: 2 => Start (2,3), Goal (3,3)
[DBG]  Start position: (2, 2), (2, 3), 
[DBG]  Goal position: (2, 3), (3, 3), 
[DBG]  SAT instance and solver created.
Currently solving
Instance name: scen
Map name: map
Encoding used: disappear_at_goal
SAT solver used: Kissat
Optimizing function: sum of costs
Number of agents: 2
Mks LB: 2
SoC LB: 4
Delta: 0
Remaining time: 300000 [ms]

Found plan [agents = 2] [timesteps = 2]
Agent #0 : 7 8 
Agent #1 : 8 12 

[STAT] Solver returned: 0
[DBG]  Agent (index) 28 | New local path (submap idx):
[DBG]  7 8 
[DBG]  Agent (index) 42 | New local path (submap idx):
[DBG]  8 12 
[DBG]  Update the agent path 28 | Original local length: 2 | New local length: 2
[DBG]  agent 28 t=0 => decoded (sx,sy)=(2,2) => global_id=726
[DBG]  agent 28 t=1 => decoded (sx,sy)=(2,3) => global_id=727
[DBG]  Complete path of agent 28:
[DBG]    Original: 661 661 661 661 661 661 661 661 661 660 628 627 659 691 691 691 691 659 660 659 691 691 659 659 659 659 660 692 692 692 691 692 724 725 757 757 757 757 757 757 757 725 726 727 
[DBG]    New:     661 661 661 661 661 661 661 661 661 660 628 627 659 691 691 691 691 659 660 659 691 691 659 659 659 659 660 692 692 692 691 692 724 725 757 757 757 757 757 757 757 725 726 727 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 661 661 661 661 661 661 661 661 661 660 628 627 659 691 691 691 691 659 660 659 691 691 659 659 659 659 660 692 692 692 691 692 724 725 757 757 757 757 757 757 757 725 
[DBG]    Local path (in submap): 726 727 
[DBG]    Suffix (out of submap): 
[DBG]  Original agent path length 28 je: 44
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 0: 661, 661, 661, 661, 661, 661, 661, 661, 661, 660, 628, 627, 659, 691, 691, 691, 691, 659, 660, 659, 691, 691, 659, 659, 659, 659, 660, 692, 692, 692, 691, 692, 724, 725, 757, 757, 757, 757, 757, 757, 757, 725, 726, 727, 
[DBG]  Path for agent 28 updated, resulting length: 44
[DBG]  Update the agent path 42 | Original local length: 2 | New local length: 2
[DBG]  agent 42 t=0 => decoded (sx,sy)=(2,3) => global_id=727
[DBG]  agent 42 t=1 => decoded (sx,sy)=(3,3) => global_id=759
[DBG]  Complete path of agent 42:
[DBG]    Original: 224 256 257 289 321 353 354 355 356 388 420 421 422 423 424 424 425 426 426 427 395 427 428 429 430 431 463 464 496 528 529 561 593 625 657 658 659 691 692 724 725 726 727 759 
[DBG]    New:     224 256 257 289 321 353 354 355 356 388 420 421 422 423 424 424 425 426 426 427 395 427 428 429 430 431 463 464 496 528 529 561 593 625 657 658 659 691 692 724 725 726 727 759 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 224 256 257 289 321 353 354 355 356 388 420 421 422 423 424 424 425 426 426 427 395 427 428 429 430 431 463 464 496 528 529 561 593 625 657 658 659 691 692 724 725 726 
[DBG]    Local path (in submap): 727 759 
[DBG]    Suffix (out of submap): 
[DBG]  Original agent path length 42 je: 44
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 1: 224, 256, 257, 289, 321, 353, 354, 355, 356, 388, 420, 421, 422, 423, 424, 424, 425, 426, 426, 427, 395, 427, 428, 429, 430, 431, 463, 464, 496, 528, 529, 561, 593, 625, 657, 658, 659, 691, 692, 724, 725, 726, 727, 759, 
[DBG]  Path for agent 42 updated, resulting length: 44
[DBG]  Paths successfully updated.
[DBG]  (LNS.cpp) New path for agent 28: 
[DBG]  661, 661, 661, 661, 661, 661, 661, 661, 661, 660, 628, 627, 659, 691, 691, 691, 691, 659, 660, 659, 691, 691, 659, 659, 659, 659, 660, 692, 692, 692, 691, 692, 724, 725, 757, 757, 757, 757, 757, 757, 757, 725, 726, 727, 
[DBG]  (LNS.cpp) New path for agent 42: 
[DBG]  224, 256, 257, 289, 321, 353, 354, 355, 356, 388, 420, 421, 422, 423, 424, 424, 425, 426, 426, 427, 395, 427, 428, 429, 430, 431, 463, 464, 496, 528, 529, 561, 593, 625, 657, 658, 659, 691, 692, 724, 725, 726, 727, 759, 
[DBG]  Delta value: 0
[DBG]  Rewarding metric index = 1
[DBG]  component_weights = {2.51834e-06, 0.999994, 1.1092e-06, 1.92309e-06}
[DBG]  opSuccess value: 1
[STAT] neighbor.sum_of_costs before recomputation: 86
[STAT] neighbor.old_sum_of_costs before recomputation: 86
[STAT] sum_of_costs before recomputation: 4279
[DBG]  Validate solution immediately after SAT success.
[DBG]  No problems after SAT replan.
[DBG]  Recomputing sum_of_cost by dividing neighbor.sum_of_costs and neighbor.old_sum_of_costs
[STAT] sum_of_costs after recomputation: 4279
[STAT] Iteration 128
[DBG]  Random chance did not select SAT operator (r=67), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 128
[DBG]  Random chance did not select SAT operator (r=41), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 128
[DBG]  Random chance did not select SAT operator (r=13), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 128
[DBG]  Random chance did not select SAT operator (r=54), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 128
[DBG]  Random chance did not select SAT operator (r=88), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 128
[DBG]  Random chance did not select SAT operator (r=86), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 128
[DBG]  Random chance did not select SAT operator (r=15), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 128
[DBG]  Random chance did not select SAT operator (r=47), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 128
[DBG]  Random chance did not select SAT operator (r=68), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 128
[DBG]  Random chance did not select SAT operator (r=87), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 128
[DBG]  Random chance did not select SAT operator (r=10), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 128
[DBG]  Random chance did not select SAT operator (r=12), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 128
[DBG]  Random chance did not select SAT operator (r=26), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 128
[DBG]  Random chance did not select SAT operator (r=86), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 128
[DBG]  Random chance did not select SAT operator (r=56), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 128
[DBG]  Random chance did not select SAT operator (r=53), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 128
[DBG]  Random chance did not select SAT operator (r=36), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 128
[DBG]  Random chance did not select SAT operator (r=94), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 128
[DBG]  Random chance did not select SAT operator (r=79), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 128
[DBG]  Random chance did not select SAT operator (r=53), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 128
[DBG]  Random chance did not select SAT operator (r=19), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 128
[DBG]  Random chance did not select SAT operator (r=45), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 128
[DBG]  Random chance did not select SAT operator (r=21), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 128
[DBG]  Random chance did not select SAT operator (r=93), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 128
[DBG]  Random chance did not select SAT operator (r=24), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 128
[DBG]  Random chance did not select SAT operator (r=51), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 128
[DBG]  Random chance did not select SAT operator (r=18), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 128
[DBG]  Using SAT operator (destroy+repair SAT).
[DBG]  ====================
[DBG]  SAT destroy operator called.
[DBG]  SAT heuristic: 2
[DBG]  key_agent_id: 28
[DBG]  key_agent_id global path length: 44
[DBG]  Submap content (global positions):
[DBG]  593 594 595 596 597 
[DBG]  625 626 627 628 629 
[DBG]  657 658 659 660 661 
[DBG]  689 690 691 692 693 
[DBG]  721 722 723 724 725 
[DBG]  Map content with agents and obstacles:
[DBG]  A . X A . 
[DBG]  A X . A . 
[DBG]  . A A . . 
[DBG]  . X A . X 
[DBG]  . . X . . 
[DBG]  content of the map structure that we pass to the SAT solver:
[DBG]  1  1  -1  1  1  
[DBG]  1  -1  1  1  1  
[DBG]  1  1  1  1  1  
[DBG]  1  -1  1  1  -1  
[DBG]  1  1  -1  1  1  
[DBG]  Identifying agents in a submap for rescheduling (when key_agent is there at the time 17):
[DBG]  Agent 28 found intervals in the sub-map:
[DBG]   [0..33] [41..41]
[DBG]  Agent 28 (interval in submap: [0..33]) contains time 17, added to replan.
[DBG]  Agent 30 found intervals in the sub-map:
[DBG]  
[DBG]  Agent 30 is not in sub-map at time 17 (intervals: 
[DBG]  )
[DBG]  Agent 61 found intervals in the sub-map:
[DBG]   [17..17]
[DBG]  Agent 61 (interval in submap: [17..17]) contains time 17, added to replan.
[DBG]  Agent 62 found intervals in the sub-map:
[DBG]   [6..13]
[DBG]  Agent 62 is not in sub-map at time 17 (intervals: 
[DBG]  [6..13] )
[DBG]  Agent 70 found intervals in the sub-map:
[DBG]   [16..25]
[DBG]  Agent 70 (interval in submap: [16..25]) contains time 17, added to replan.
[DBG]  Agent 74 found intervals in the sub-map:
[DBG]   [13..19]
[DBG]  Agent 74 (interval in submap: [13..19]) contains time 17, added to replan.
[DBG]  Agent 79 found intervals in the sub-map:
[DBG]   [14..19]
[DBG]  Agent 79 (interval in submap: [14..19]) contains time 17, added to replan.
[DBG]  Agent 101 found intervals in the sub-map:
[DBG]   [15..20]
[DBG]  Agent 101 (interval in submap: [15..20]) contains time 17, added to replan.
[DBG]  Agent 137 found intervals in the sub-map:
[DBG]   [9..19]
[DBG]  Agent 137 (interval in submap: [9..19]) contains time 17, added to replan.
[DBG]  Agent 28 | Start (global): 659 -> (local): (2, 2) at time 17 | Goal (global): 725 -> (local): (4, 4) at time 33
[DBG]  Agent 61 | Start (global): 593 -> (local): (0, 0) at time 17 | Goal (global): 593 -> (local): (0, 0) at time 17
[DBG]  Agent 70 | Start (global): 596 -> (local): (0, 3) at time 17 | Goal (global): 721 -> (local): (4, 0) at time 25
[DBG]  Agent 74 | Start (global): 628 -> (local): (1, 3) at time 17 | Goal (global): 597 -> (local): (0, 4) at time 19
[DBG]  Agent 79 | Start (global): 625 -> (local): (1, 0) at time 17 | Goal (global): 593 -> (local): (0, 0) at time 19
[DBG]  Agent 101 | Start (global): 691 -> (local): (3, 2) at time 17 | Goal (global): 657 -> (local): (2, 0) at time 20
[DBG]  Agent 137 | Start (global): 658 -> (local): (2, 1) at time 17 | Goal (global): 689 -> (local): (3, 0) at time 19
[DBG]  [REPAIR] SAT destroy operator called.
[DBG]  [REPAIR] SAT operator – launching subproblem FOR OPTIMIZATION.
[DBG]  Creating local paths (sx, sy) in the submap for T_sync = 17
[DBG]    Agent 28 (global paths from T=17 to 33) has local path: (2,2) (2,3) (2,2) (3,2) (3,2) (2,2) (2,2) (2,2) (2,2) (2,3) (3,3) (3,3) (3,3) (3,2) (3,3) (4,3) (4,4) 
[DBG]    Agent 61 (global paths from T=17 to 17) has local path: (0,0) 
[DBG]    Agent 70 (global paths from T=17 to 25) has local path: (0,3) (1,3) (1,3) (2,3) (2,2) (2,1) (2,0) (3,0) (4,0) 
[DBG]    Agent 74 (global paths from T=17 to 19) has local path: (1,3) (1,4) (0,4) 
[DBG]    Agent 79 (global paths from T=17 to 19) has local path: (1,0) (0,0) (0,0) 
[DBG]    Agent 101 (global paths from T=17 to 20) has local path: (3,2) (2,2) (2,1) (2,0) 
[DBG]    Agent 137 (global paths from T=17 to 19) has local path: (2,1) (2,0) (3,0) 
[DBG]  Checking input data for SAT solver:
[DBG]    - Number of agents to replan: 7
[DBG]  Agent 28 has the original local path length: 17 => Start (2,2), Goal (4,4)
[DBG]  Agent 61 has the original local path length: 1 => Start (0,0), Goal (0,0)
[DBG]  Agent 70 has the original local path length: 9 => Start (0,3), Goal (4,0)
[DBG]  Agent 74 has the original local path length: 3 => Start (1,3), Goal (0,4)
[DBG]  Agent 79 has the original local path length: 3 => Start (1,0), Goal (0,0)
[DBG]  Agent 101 has the original local path length: 4 => Start (3,2), Goal (2,0)
[DBG]  Agent 137 has the original local path length: 3 => Start (2,1), Goal (3,0)
[DBG]  Start position: (2, 2), (0, 0), (0, 3), (1, 3), (1, 0), (3, 2), (2, 1), 
[DBG]  Goal position: (4, 4), (0, 0), (4, 0), (0, 4), (0, 0), (2, 0), (3, 0), 
[DBG]  SAT instance and solver created.
Currently solving
Instance name: scen
Map name: map
Encoding used: disappear_at_goal
SAT solver used: Kissat
Optimizing function: sum of costs
Number of agents: 7
Mks LB: 8
SoC LB: 26
Delta: 0
Remaining time: 300000 [ms]

Vertex conflict! Agents 0, 1, timestep 5, location 0
Swapping conflict! Agents 0, 1, timestep 5, edge (0,0)
Vertex conflict! Agents 0, 1, timestep 6, location 0
Swapping conflict! Agents 0, 1, timestep 6, edge (0,0)
Vertex conflict! Agents 0, 1, timestep 7, location 0
Vertex conflict! Agents 0, 3, timestep 5, location 0
Swapping conflict! Agents 0, 3, timestep 5, edge (0,0)
Vertex conflict! Agents 0, 3, timestep 6, location 0
Swapping conflict! Agents 0, 3, timestep 6, edge (0,0)
Vertex conflict! Agents 0, 3, timestep 7, location 0
Vertex conflict! Agents 0, 4, timestep 5, location 0
Swapping conflict! Agents 0, 4, timestep 5, edge (0,0)
Vertex conflict! Agents 0, 4, timestep 6, location 0
Swapping conflict! Agents 0, 4, timestep 6, edge (0,0)
Vertex conflict! Agents 0, 4, timestep 7, location 0
Vertex conflict! Agents 0, 5, timestep 5, location 0
Swapping conflict! Agents 0, 5, timestep 5, edge (0,0)
Vertex conflict! Agents 0, 5, timestep 6, location 0
Swapping conflict! Agents 0, 5, timestep 6, edge (0,0)
Vertex conflict! Agents 0, 5, timestep 7, location 0
Vertex conflict! Agents 0, 6, timestep 5, location 0
Swapping conflict! Agents 0, 6, timestep 5, edge (0,0)
Vertex conflict! Agents 0, 6, timestep 6, location 0
Swapping conflict! Agents 0, 6, timestep 6, edge (0,0)
Vertex conflict! Agents 0, 6, timestep 7, location 0
Vertex conflict! Agents 1, 3, timestep 3, location 0
Swapping conflict! Agents 1, 3, timestep 3, edge (0,0)
Vertex conflict! Agents 1, 3, timestep 4, location 0
Swapping conflict! Agents 1, 3, timestep 4, edge (0,0)
Vertex conflict! Agents 1, 3, timestep 5, location 0
Swapping conflict! Agents 1, 3, timestep 5, edge (0,0)
Vertex conflict! Agents 1, 3, timestep 6, location 0
Swapping conflict! Agents 1, 3, timestep 6, edge (0,0)
Vertex conflict! Agents 1, 3, timestep 7, location 0
Vertex conflict! Agents 1, 4, timestep 1, location 0
Swapping conflict! Agents 1, 4, timestep 1, edge (0,0)
Vertex conflict! Agents 1, 4, timestep 2, location 0
Swapping conflict! Agents 1, 4, timestep 2, edge (0,0)
Vertex conflict! Agents 1, 4, timestep 3, location 0
Swapping conflict! Agents 1, 4, timestep 3, edge (0,0)
Vertex conflict! Agents 1, 4, timestep 4, location 0
Swapping conflict! Agents 1, 4, timestep 4, edge (0,0)
Vertex conflict! Agents 1, 4, timestep 5, location 0
Swapping conflict! Agents 1, 4, timestep 5, edge (0,0)
Vertex conflict! Agents 1, 4, timestep 6, location 0
Swapping conflict! Agents 1, 4, timestep 6, edge (0,0)
Vertex conflict! Agents 1, 4, timestep 7, location 0
Vertex conflict! Agents 1, 5, timestep 4, location 0
Swapping conflict! Agents 1, 5, timestep 4, edge (0,0)
Vertex conflict! Agents 1, 5, timestep 5, location 0
Swapping conflict! Agents 1, 5, timestep 5, edge (0,0)
Vertex conflict! Agents 1, 5, timestep 6, location 0
Swapping conflict! Agents 1, 5, timestep 6, edge (0,0)
Vertex conflict! Agents 1, 5, timestep 7, location 0
Vertex conflict! Agents 1, 6, timestep 3, location 0
Swapping conflict! Agents 1, 6, timestep 3, edge (0,0)
Vertex conflict! Agents 1, 6, timestep 4, location 0
Swapping conflict! Agents 1, 6, timestep 4, edge (0,0)
Vertex conflict! Agents 1, 6, timestep 5, location 0
Swapping conflict! Agents 1, 6, timestep 5, edge (0,0)
Vertex conflict! Agents 1, 6, timestep 6, location 0
Swapping conflict! Agents 1, 6, timestep 6, edge (0,0)
Vertex conflict! Agents 1, 6, timestep 7, location 0
Vertex conflict! Agents 3, 4, timestep 3, location 0
Swapping conflict! Agents 3, 4, timestep 3, edge (0,0)
Vertex conflict! Agents 3, 4, timestep 4, location 0
Swapping conflict! Agents 3, 4, timestep 4, edge (0,0)
Vertex conflict! Agents 3, 4, timestep 5, location 0
Swapping conflict! Agents 3, 4, timestep 5, edge (0,0)
Vertex conflict! Agents 3, 4, timestep 6, location 0
Swapping conflict! Agents 3, 4, timestep 6, edge (0,0)
Vertex conflict! Agents 3, 4, timestep 7, location 0
Vertex conflict! Agents 3, 5, timestep 4, location 0
Swapping conflict! Agents 3, 5, timestep 4, edge (0,0)
Vertex conflict! Agents 3, 5, timestep 5, location 0
Swapping conflict! Agents 3, 5, timestep 5, edge (0,0)
Vertex conflict! Agents 3, 5, timestep 6, location 0
Swapping conflict! Agents 3, 5, timestep 6, edge (0,0)
Vertex conflict! Agents 3, 5, timestep 7, location 0
Vertex conflict! Agents 3, 6, timestep 3, location 0
Swapping conflict! Agents 3, 6, timestep 3, edge (0,0)
Vertex conflict! Agents 3, 6, timestep 4, location 0
Swapping conflict! Agents 3, 6, timestep 4, edge (0,0)
Vertex conflict! Agents 3, 6, timestep 5, location 0
Swapping conflict! Agents 3, 6, timestep 5, edge (0,0)
Vertex conflict! Agents 3, 6, timestep 6, location 0
Swapping conflict! Agents 3, 6, timestep 6, edge (0,0)
Vertex conflict! Agents 3, 6, timestep 7, location 0
Vertex conflict! Agents 4, 5, timestep 4, location 0
Swapping conflict! Agents 4, 5, timestep 4, edge (0,0)
Vertex conflict! Agents 4, 5, timestep 5, location 0
Swapping conflict! Agents 4, 5, timestep 5, edge (0,0)
Vertex conflict! Agents 4, 5, timestep 6, location 0
Swapping conflict! Agents 4, 5, timestep 6, edge (0,0)
Vertex conflict! Agents 4, 5, timestep 7, location 0
Vertex conflict! Agents 4, 6, timestep 3, location 0
Swapping conflict! Agents 4, 6, timestep 3, edge (0,0)
Vertex conflict! Agents 4, 6, timestep 4, location 0
Swapping conflict! Agents 4, 6, timestep 4, edge (0,0)
Vertex conflict! Agents 4, 6, timestep 5, location 0
Swapping conflict! Agents 4, 6, timestep 5, edge (0,0)
Vertex conflict! Agents 4, 6, timestep 6, location 0
Swapping conflict! Agents 4, 6, timestep 6, edge (0,0)
Vertex conflict! Agents 4, 6, timestep 7, location 0
Vertex conflict! Agents 5, 6, timestep 4, location 0
Swapping conflict! Agents 5, 6, timestep 4, edge (0,0)
Vertex conflict! Agents 5, 6, timestep 5, location 0
Swapping conflict! Agents 5, 6, timestep 5, edge (0,0)
Vertex conflict! Agents 5, 6, timestep 6, location 0
Swapping conflict! Agents 5, 6, timestep 6, edge (0,0)
Vertex conflict! Agents 5, 6, timestep 7, location 0
Found plan [agents = 7] [timesteps = 8]
Agent #0 : 10 11 15 18 19 0 0 0 
Agent #1 : 0 0 0 0 0 0 0 0 
Agent #2 : 2 6 11 10 9 8 13 16 
Agent #3 : 6 7 3 0 0 0 0 0 
Agent #4 : 4 0 0 0 0 0 0 0 
Agent #5 : 14 10 9 8 0 0 0 0 
Agent #6 : 9 8 13 0 0 0 0 0 

[STAT] Solver returned: 0
[DBG]  Agent (index) 28 | New local path (submap idx):
[DBG]  10 11 15 18 19 
[DBG]  Agent (index) 61 | New local path (submap idx):
[DBG]  0 
[DBG]  Agent (index) 70 | New local path (submap idx):
[DBG]  2 6 11 10 9 8 13 16 
[DBG]  Agent (index) 74 | New local path (submap idx):
[DBG]  6 7 3 
[DBG]  Agent (index) 79 | New local path (submap idx):
[DBG]  4 0 
[DBG]  Agent (index) 101 | New local path (submap idx):
[DBG]  14 10 9 8 
[DBG]  Agent (index) 137 | New local path (submap idx):
[DBG]  9 8 13 
[DBG]  Update the agent path 28 | Original local length: 17 | New local length: 5
[DBG]  agent 28 t=0 => decoded (sx,sy)=(2,2) => global_id=659
[DBG]  agent 28 t=1 => decoded (sx,sy)=(2,3) => global_id=660
[DBG]  agent 28 t=2 => decoded (sx,sy)=(3,3) => global_id=692
[DBG]  agent 28 t=3 => decoded (sx,sy)=(4,3) => global_id=724
[DBG]  agent 28 t=4 => decoded (sx,sy)=(4,4) => global_id=725
[DBG]  Complete path of agent 28:
[DBG]    Original: 661 661 661 661 661 661 661 661 661 660 628 627 659 691 691 691 691 659 660 659 691 691 659 659 659 659 660 692 692 692 691 692 724 725 757 757 757 757 757 757 757 725 726 727 
[DBG]    New:     661 661 661 661 661 661 661 661 661 660 628 627 659 691 691 691 691 659 660 692 724 725 757 757 757 757 757 757 757 725 726 727 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 661 661 661 661 661 661 661 661 661 660 628 627 659 691 691 691 691 
[DBG]    Local path (in submap): 659 660 692 724 725 757 757 757 757 757 757 757 725 726 727 
[DBG]    Suffix (out of submap): 
[DBG]  Original agent path length 28 je: 44
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 0: 661, 661, 661, 661, 661, 661, 661, 661, 661, 660, 628, 627, 659, 691, 691, 691, 691, 659, 660, 692, 724, 725, 757, 757, 757, 757, 757, 757, 757, 725, 726, 727, 
[DBG]  Path for agent 28 updated, resulting length: 32
[DBG]  Update the agent path 61 | Original local length: 1 | New local length: 1
[DBG]  agent 61 t=0 => decoded (sx,sy)=(0,0) => global_id=593
[DBG]  Complete path of agent 61:
[DBG]    Original: 813 813 813 814 782 783 751 751 751 719 719 687 655 623 623 591 592 593 561 561 529 530 498 466 467 468 469 437 438 439 440 408 409 377 345 313 
[DBG]    New:     813 813 813 814 782 783 751 751 751 719 719 687 655 623 623 591 592 593 561 561 529 530 498 466 467 468 469 437 438 439 440 408 409 377 345 313 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 813 813 813 814 782 783 751 751 751 719 719 687 655 623 623 591 592 
[DBG]    Local path (in submap): 593 
[DBG]    Suffix (out of submap): 561 561 529 530 498 466 467 468 469 437 438 439 440 408 409 377 345 313 
[DBG]  Original agent path length 61 je: 36
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 1: 813, 813, 813, 814, 782, 783, 751, 751, 751, 719, 719, 687, 655, 623, 623, 591, 592, 593, 561, 561, 529, 530, 498, 466, 467, 468, 469, 437, 438, 439, 440, 408, 409, 377, 345, 313, 
[DBG]  Path for agent 61 updated, resulting length: 36
[DBG]  Update the agent path 70 | Original local length: 9 | New local length: 8
[DBG]  agent 70 t=0 => decoded (sx,sy)=(0,3) => global_id=596
[DBG]  agent 70 t=1 => decoded (sx,sy)=(1,3) => global_id=628
[DBG]  agent 70 t=2 => decoded (sx,sy)=(2,3) => global_id=660
[DBG]  agent 70 t=3 => decoded (sx,sy)=(2,2) => global_id=659
[DBG]  agent 70 t=4 => decoded (sx,sy)=(2,1) => global_id=658
[DBG]  agent 70 t=5 => decoded (sx,sy)=(2,0) => global_id=657
[DBG]  agent 70 t=6 => decoded (sx,sy)=(3,0) => global_id=689
[DBG]  agent 70 t=7 => decoded (sx,sy)=(4,0) => global_id=721
[DBG]  Complete path of agent 70:
[DBG]    Original: 632 600 601 569 569 569 570 538 506 505 504 503 502 534 566 565 597 596 628 628 660 659 658 657 689 721 753 752 752 751 783 815 847 879 878 877 909 941 942 974 
[DBG]    New:     632 600 601 569 569 569 570 538 506 505 504 503 502 534 566 565 597 596 628 660 659 658 657 689 721 753 752 752 751 783 815 847 879 878 877 909 941 942 974 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 632 600 601 569 569 569 570 538 506 505 504 503 502 534 566 565 597 
[DBG]    Local path (in submap): 596 628 660 659 658 657 689 721 753 
[DBG]    Suffix (out of submap): 752 752 751 783 815 847 879 878 877 909 941 942 974 
[DBG]  Original agent path length 70 je: 40
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 2: 632, 600, 601, 569, 569, 569, 570, 538, 506, 505, 504, 503, 502, 534, 566, 565, 597, 596, 628, 660, 659, 658, 657, 689, 721, 753, 752, 752, 751, 783, 815, 847, 879, 878, 877, 909, 941, 942, 974, 
[DBG]  Path for agent 70 updated, resulting length: 39
[DBG]  Update the agent path 74 | Original local length: 3 | New local length: 3
[DBG]  agent 74 t=0 => decoded (sx,sy)=(1,3) => global_id=628
[DBG]  agent 74 t=1 => decoded (sx,sy)=(1,4) => global_id=629
[DBG]  agent 74 t=2 => decoded (sx,sy)=(0,4) => global_id=597
[DBG]  Complete path of agent 74:
[DBG]    Original: 752 752 751 719 719 719 720 720 719 687 687 688 656 657 658 659 660 628 629 597 565 566 534 502 470 438 439 440 472 472 472 504 
[DBG]    New:     752 752 751 719 719 719 720 720 719 687 687 688 656 657 658 659 660 628 629 597 565 566 534 502 470 438 439 440 472 472 472 504 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 752 752 751 719 719 719 720 720 719 687 687 688 656 657 658 659 660 
[DBG]    Local path (in submap): 628 629 597 
[DBG]    Suffix (out of submap): 565 566 534 502 470 438 439 440 472 472 472 504 
[DBG]  Original agent path length 74 je: 32
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 3: 752, 752, 751, 719, 719, 719, 720, 720, 719, 687, 687, 688, 656, 657, 658, 659, 660, 628, 629, 597, 565, 566, 534, 502, 470, 438, 439, 440, 472, 472, 472, 504, 
[DBG]  Path for agent 74 updated, resulting length: 32
[DBG]  Update the agent path 79 | Original local length: 3 | New local length: 2
[DBG]  agent 79 t=0 => decoded (sx,sy)=(1,0) => global_id=625
[DBG]  agent 79 t=1 => decoded (sx,sy)=(0,0) => global_id=593
[DBG]  Complete path of agent 79:
[DBG]    Original: 1004 1005 973 941 942 910 878 846 847 815 783 784 752 720 721 689 657 625 593 593 561 529 530 498 466 467 467 435 403 402 401 400 368 336 335 303 271 239 240 208 176 177 178 179 147 148 149 150 151 119 120 121 122 123 
[DBG]    New:     1004 1005 973 941 942 910 878 846 847 815 783 784 752 720 721 689 657 625 593 561 529 530 498 466 467 467 435 403 402 401 400 368 336 335 303 271 239 240 208 176 177 178 179 147 148 149 150 151 119 120 121 122 123 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 1004 1005 973 941 942 910 878 846 847 815 783 784 752 720 721 689 657 
[DBG]    Local path (in submap): 625 593 561 
[DBG]    Suffix (out of submap): 529 530 498 466 467 467 435 403 402 401 400 368 336 335 303 271 239 240 208 176 177 178 179 147 148 149 150 151 119 120 121 122 123 
[DBG]  Original agent path length 79 je: 54
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 4: 1004, 1005, 973, 941, 942, 910, 878, 846, 847, 815, 783, 784, 752, 720, 721, 689, 657, 625, 593, 561, 529, 530, 498, 466, 467, 467, 435, 403, 402, 401, 400, 368, 336, 335, 303, 271, 239, 240, 208, 176, 177, 178, 179, 147, 148, 149, 150, 151, 119, 120, 121, 122, 123, 
[DBG]  Path for agent 79 updated, resulting length: 53
[DBG]  Update the agent path 101 | Original local length: 4 | New local length: 4
[DBG]  agent 101 t=0 => decoded (sx,sy)=(3,2) => global_id=691
[DBG]  agent 101 t=1 => decoded (sx,sy)=(2,2) => global_id=659
[DBG]  agent 101 t=2 => decoded (sx,sy)=(2,1) => global_id=658
[DBG]  agent 101 t=3 => decoded (sx,sy)=(2,0) => global_id=657
[DBG]  Complete path of agent 101:
[DBG]    Original: 985 953 952 920 919 918 886 885 884 883 851 819 787 755 756 724 692 691 659 658 657 656 655 655 654 622 590 589 588 556 556 524 492 460 428 427 395 363 331 299 300 268 236 204 172 140 139 138 106 105 104 136 168 
[DBG]    New:     985 953 952 920 919 918 886 885 884 883 851 819 787 755 756 724 692 691 659 658 657 656 655 655 654 622 590 589 588 556 556 524 492 460 428 427 395 363 331 299 300 268 236 204 172 140 139 138 106 105 104 136 168 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 985 953 952 920 919 918 886 885 884 883 851 819 787 755 756 724 692 
[DBG]    Local path (in submap): 691 659 658 657 
[DBG]    Suffix (out of submap): 656 655 655 654 622 590 589 588 556 556 524 492 460 428 427 395 363 331 299 300 268 236 204 172 140 139 138 106 105 104 136 168 
[DBG]  Original agent path length 101 je: 53
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 5: 985, 953, 952, 920, 919, 918, 886, 885, 884, 883, 851, 819, 787, 755, 756, 724, 692, 691, 659, 658, 657, 656, 655, 655, 654, 622, 590, 589, 588, 556, 556, 524, 492, 460, 428, 427, 395, 363, 331, 299, 300, 268, 236, 204, 172, 140, 139, 138, 106, 105, 104, 136, 168, 
[DBG]  Path for agent 101 updated, resulting length: 53
[DBG]  Update the agent path 137 | Original local length: 3 | New local length: 3
[DBG]  agent 137 t=0 => decoded (sx,sy)=(2,1) => global_id=658
[DBG]  agent 137 t=1 => decoded (sx,sy)=(2,0) => global_id=657
[DBG]  agent 137 t=2 => decoded (sx,sy)=(3,0) => global_id=689
[DBG]  Complete path of agent 137:
[DBG]    Original: 538 506 505 504 503 502 534 533 565 597 596 628 627 627 627 627 659 658 657 689 688 687 686 718 750 782 781 780 780 779 778 778 777 809 808 807 806 805 804 803 802 801 800 832 864 865 897 898 930 931 932 
[DBG]    New:     538 506 505 504 503 502 534 533 565 597 596 628 627 627 627 627 659 658 657 689 688 687 686 718 750 782 781 780 780 779 778 778 777 809 808 807 806 805 804 803 802 801 800 832 864 865 897 898 930 931 932 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 538 506 505 504 503 502 534 533 565 597 596 628 627 627 627 627 659 
[DBG]    Local path (in submap): 658 657 689 
[DBG]    Suffix (out of submap): 688 687 686 718 750 782 781 780 780 779 778 778 777 809 808 807 806 805 804 803 802 801 800 832 864 865 897 898 930 931 932 
[DBG]  Original agent path length 137 je: 51
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 6: 538, 506, 505, 504, 503, 502, 534, 533, 565, 597, 596, 628, 627, 627, 627, 627, 659, 658, 657, 689, 688, 687, 686, 718, 750, 782, 781, 780, 780, 779, 778, 778, 777, 809, 808, 807, 806, 805, 804, 803, 802, 801, 800, 832, 864, 865, 897, 898, 930, 931, 932, 
[DBG]  Path for agent 137 updated, resulting length: 51
[DBG]  Paths successfully updated.
[DBG]  (LNS.cpp) New path for agent 28: 
[DBG]  661, 661, 661, 661, 661, 661, 661, 661, 661, 660, 628, 627, 659, 691, 691, 691, 691, 659, 660, 692, 724, 725, 757, 757, 757, 757, 757, 757, 757, 725, 726, 727, 
[DBG]  (LNS.cpp) New path for agent 61: 
[DBG]  813, 813, 813, 814, 782, 783, 751, 751, 751, 719, 719, 687, 655, 623, 623, 591, 592, 593, 561, 561, 529, 530, 498, 466, 467, 468, 469, 437, 438, 439, 440, 408, 409, 377, 345, 313, 
[DBG]  (LNS.cpp) New path for agent 70: 
[DBG]  632, 600, 601, 569, 569, 569, 570, 538, 506, 505, 504, 503, 502, 534, 566, 565, 597, 596, 628, 660, 659, 658, 657, 689, 721, 753, 752, 752, 751, 783, 815, 847, 879, 878, 877, 909, 941, 942, 974, 
[DBG]  (LNS.cpp) New path for agent 74: 
[DBG]  752, 752, 751, 719, 719, 719, 720, 720, 719, 687, 687, 688, 656, 657, 658, 659, 660, 628, 629, 597, 565, 566, 534, 502, 470, 438, 439, 440, 472, 472, 472, 504, 
[DBG]  (LNS.cpp) New path for agent 79: 
[DBG]  1004, 1005, 973, 941, 942, 910, 878, 846, 847, 815, 783, 784, 752, 720, 721, 689, 657, 625, 593, 561, 529, 530, 498, 466, 467, 467, 435, 403, 402, 401, 400, 368, 336, 335, 303, 271, 239, 240, 208, 176, 177, 178, 179, 147, 148, 149, 150, 151, 119, 120, 121, 122, 123, 
[DBG]  (LNS.cpp) New path for agent 101: 
[DBG]  985, 953, 952, 920, 919, 918, 886, 885, 884, 883, 851, 819, 787, 755, 756, 724, 692, 691, 659, 658, 657, 656, 655, 655, 654, 622, 590, 589, 588, 556, 556, 524, 492, 460, 428, 427, 395, 363, 331, 299, 300, 268, 236, 204, 172, 140, 139, 138, 106, 105, 104, 136, 168, 
[DBG]  (LNS.cpp) New path for agent 137: 
[DBG]  538, 506, 505, 504, 503, 502, 534, 533, 565, 597, 596, 628, 627, 627, 627, 627, 659, 658, 657, 689, 688, 687, 686, 718, 750, 782, 781, 780, 780, 779, 778, 778, 777, 809, 808, 807, 806, 805, 804, 803, 802, 801, 800, 832, 864, 865, 897, 898, 930, 931, 932, 
[DBG]  Delta value: 0.0462046
[DBG]  Rewarding metric index = 1
[DBG]  component_weights = {2.28676e-06, 0.999995, 1.0072e-06, 1.74625e-06}
[DBG]  opSuccess value: 1
[STAT] neighbor.sum_of_costs before recomputation: 289
[STAT] neighbor.old_sum_of_costs before recomputation: 303
[STAT] sum_of_costs before recomputation: 4279
[DBG]  Validate solution immediately after SAT success.
[WARNING] Problem after SAT: Target conflict: agent 42 (len 43) traverses target of agent 28 (len 31) at location 727 at timestep 42
[DBG]  [DEBUG] Attempting immediate repair via init_lns because problem occurred after SAT (should be applied only for conflicts...).
[DBG]  [DEBUG] Passing 150 agents to init_lns (skip=true).
[DBG]  [DEBUG] path_table contents for selected agents (neighbor.agents):
[DBG]    Agent 28 => controlling path length=32
[DBG]    Agent 61 => controlling path length=36
[DBG]    Agent 70 => controlling path length=39
[DBG]    Agent 74 => controlling path length=32
[DBG]    Agent 79 => controlling path length=53
[DBG]    Agent 101 => controlling path length=53
[DBG]    Agent 137 => controlling path length=51
[DBG]  hodnota skip_initial_solution=1
[DBG]  We skip initialSolution => call buildCollisionData()
[DBG]  buildCollisionData() called – skip_initial_solution case.
[DBG]  Agents.size()=150, collision_graph.size()=150
[DBG]  agent 28 => updateCollidingPairs => foundCollision
[DBG]  agent 42 => updateCollidingPairs => foundCollision
[DBG]  agent 61 => updateCollidingPairs => foundCollision
[DBG]  agent 70 => updateCollidingPairs => foundCollision
[DBG]  agent 79 => updateCollidingPairs => foundCollision
[DBG]  agent 83 => updateCollidingPairs => foundCollision
[DBG]  Conflicting agent pairs:
[DBG]  agent 28 is in conflict with agent 42
[DBG]  agent 61 is in conflict with agent 79
[DBG]  agent 70 is in conflict with agent 83
[DBG]  buildCollisionData() => sum_of_costs=4265, num_of_colliding_pairs=3
[DBG]  buildCollisionData done => sum_of_costs=4265, num_of_colliding_pairs=3
[DBG]  sum_of_cost hodnota: 4265
[DBG]  After skip/init build => iteration_stats.back(): sum_of_costs=4265, collisions=3
[DEBUG] Using default neighbor generation strategy for conflicts: 0
[DEBUG] Using default neighbor generation strategy for conflicts: 0
[DEBUG] Using default neighbor generation strategy for conflicts: 2
[DEBUG] Using default neighbor generation strategy for conflicts: 2
[DEBUG] Using default neighbor generation strategy for conflicts: 1
	InitLNS(PP): runtime = 0.00930683, iterations = 6, colliding pairs = 0, initial colliding pairs = 3, solution cost = 4308, initial solution cost = 4265, failed iterations = 0
[DBG]  init_lns->sum_of_costs after init_lns->run: 4308
[DBG]  sum_of_costs after assignment from init_lns->run: 4308
[DBG]  Recomputing sum_of_cost by dividing neighbor.sum_of_costs and neighbor.old_sum_of_costs
[STAT] sum_of_costs after recomputation: 4308
[STAT] Iteration 129
[DBG]  Random chance did not select SAT operator (r=62), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 129
[DBG]  Random chance did not select SAT operator (r=88), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 129
[DBG]  Random chance did not select SAT operator (r=40), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 129
[DBG]  Random chance did not select SAT operator (r=61), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 129
[DBG]  Random chance did not select SAT operator (r=53), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 129
[DBG]  Random chance did not select SAT operator (r=35), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 129
[DBG]  Random chance did not select SAT operator (r=32), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 129
[DBG]  Random chance did not select SAT operator (r=89), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 129
[DBG]  Using SAT operator (destroy+repair SAT).
[DBG]  ====================
[DBG]  SAT destroy operator called.
[DBG]  SAT heuristic: 2
[DBG]  key_agent_id: 28
[DBG]  key_agent_id global path length: 44
[DBG]  Submap content (global positions):
[DBG]  690 691 692 693 694 
[DBG]  722 723 724 725 726 
[DBG]  754 755 756 757 758 
[DBG]  786 787 788 789 790 
[DBG]  818 819 820 821 822 
[DBG]  Map content with agents and obstacles:
[DBG]  X . A X X 
[DBG]  . X . . . 
[DBG]  X . A . X 
[DBG]  . . . X . 
[DBG]  . . . . . 
[DBG]  content of the map structure that we pass to the SAT solver:
[DBG]  -1  1  1  -1  -1  
[DBG]  1  -1  1  1  1  
[DBG]  -1  1  1  1  -1  
[DBG]  1  1  1  -1  1  
[DBG]  1  1  1  1  1  
[DBG]  Identifying agents in a submap for rescheduling (when key_agent is there at the time 38):
[DBG]  Agent 26 found intervals in the sub-map:
[DBG]   [30..33]
[DBG]  Agent 26 is not in sub-map at time 38 (intervals: 
[DBG]  [30..33] )
[DBG]  Agent 28 found intervals in the sub-map:
[DBG]   [29..42]
[DBG]  Agent 28 (interval in submap: [29..42]) contains time 38, added to replan.
[DBG]  Agent 42 found intervals in the sub-map:
[DBG]   [37..41]
[DBG]  Agent 42 (interval in submap: [37..41]) contains time 38, added to replan.
[DBG]  Agent 44 found intervals in the sub-map:
[DBG]  
[DBG]  Agent 44 is not in sub-map at time 38 (intervals: 
[DBG]  )
[DBG]  Agent 45 found intervals in the sub-map:
[DBG]   [22..28]
[DBG]  Agent 45 is not in sub-map at time 38 (intervals: 
[DBG]  [22..28] )
[DBG]  Agent 53 found intervals in the sub-map:
[DBG]   [26..31]
[DBG]  Agent 53 is not in sub-map at time 38 (intervals: 
[DBG]  [26..31] )
[DBG]  Agent 55 found intervals in the sub-map:
[DBG]   [43..44]
[DBG]  Agent 55 is not in sub-map at time 38 (intervals: 
[DBG]  [43..44] )
[DBG]  Agent 28 | Start (global): 756 -> (local): (2, 2) at time 38 | Goal (global): 726 -> (local): (1, 4) at time 42
[DBG]  Agent 42 | Start (global): 692 -> (local): (0, 2) at time 38 | Goal (global): 726 -> (local): (1, 4) at time 41
[DBG]  [REPAIR] SAT destroy operator called.
[DBG]  [REPAIR] SAT operator – launching subproblem FOR OPTIMIZATION.
[DBG]  Creating local paths (sx, sy) in the submap for T_sync = 38
[DBG]    Agent 28 (global paths from T=38 to 42) has local path: (2,2) (2,2) (1,2) (1,3) (1,4) 
[DBG]    Agent 42 (global paths from T=38 to 41) has local path: (0,2) (1,2) (1,3) (1,4) 
[DBG]  Checking input data for SAT solver:
[DBG]    - Number of agents to replan: 2
[DBG]  Agent 28 has the original local path length: 5 => Start (2,2), Goal (1,4)
[DBG]  Agent 42 has the original local path length: 4 => Start (0,2), Goal (1,4)
[DBG]  Start position: (2, 2), (0, 2), 
[DBG]  Goal position: (1, 4), (1, 4), 
[DBG]  SAT instance and solver created.
Currently solving
Instance name: scen
Map name: map
Encoding used: disappear_at_goal
SAT solver used: Kissat
Optimizing function: sum of costs
Number of agents: 2
Mks LB: 4
SoC LB: 8
Delta: 0
Remaining time: 300000 [ms]

[STAT] Solver returned: -1
[DBG]  SAT solver failed.
[STAT] SAT solver failed to find a valid solution.
[DBG]  ====================
[DBG]  SAT destroy operator called.
[DBG]  SAT heuristic: 2
[DBG]  key_agent_id: 28
[DBG]  key_agent_id global path length: 44
[DBG]  Submap content (global positions):
[DBG]  595 596 597 598 599 
[DBG]  627 628 629 630 631 
[DBG]  659 660 661 662 663 
[DBG]  691 692 693 694 695 
[DBG]  723 724 725 726 727 
[DBG]  Map content with agents and obstacles:
[DBG]  X A . X A 
[DBG]  A A . X . 
[DBG]  . . A X X 
[DBG]  A . X X X 
[DBG]  X . . . . 
[DBG]  content of the map structure that we pass to the SAT solver:
[DBG]  -1  1  1  -1  1  
[DBG]  1  1  1  -1  1  
[DBG]  1  1  1  -1  -1  
[DBG]  1  1  -1  -1  -1  
[DBG]  -1  1  1  1  1  
[DBG]  Identifying agents in a submap for rescheduling (when key_agent is there at the time 17):
[DBG]  Agent 28 found intervals in the sub-map:
[DBG]   [0..30] [40..43]
[DBG]  Agent 28 (interval in submap: [0..30]) contains time 17, added to replan.
[DBG]  Agent 30 found intervals in the sub-map:
[DBG]   [16..21]
[DBG]  Agent 30 (interval in submap: [16..21]) contains time 17, added to replan.
[DBG]  Agent 62 found intervals in the sub-map:
[DBG]   [14..23]
[DBG]  Agent 62 (interval in submap: [14..23]) contains time 17, added to replan.
[DBG]  Agent 70 found intervals in the sub-map:
[DBG]   [16..20]
[DBG]  Agent 70 (interval in submap: [16..20]) contains time 17, added to replan.
[DBG]  Agent 74 found intervals in the sub-map:
[DBG]   [15..19]
[DBG]  Agent 74 (interval in submap: [15..19]) contains time 17, added to replan.
[DBG]  Agent 86 found intervals in the sub-map:
[DBG]  
[DBG]  Agent 86 is not in sub-map at time 17 (intervals: 
[DBG]  )
[DBG]  Agent 101 found intervals in the sub-map:
[DBG]   [15..18]
[DBG]  Agent 101 (interval in submap: [15..18]) contains time 17, added to replan.
[DBG]  Agent 28 | Start (global): 661 -> (local): (2, 2) at time 17 | Goal (global): 724 -> (local): (4, 1) at time 30
[DBG]  Agent 30 | Start (global): 599 -> (local): (0, 4) at time 17 | Goal (global): 599 -> (local): (0, 4) at time 21
[DBG]  Agent 62 | Start (global): 627 -> (local): (1, 0) at time 17 | Goal (global): 597 -> (local): (0, 2) at time 23
[DBG]  Agent 70 | Start (global): 596 -> (local): (0, 1) at time 17 | Goal (global): 659 -> (local): (2, 0) at time 20
[DBG]  Agent 74 | Start (global): 628 -> (local): (1, 1) at time 17 | Goal (global): 597 -> (local): (0, 2) at time 19
[DBG]  Agent 101 | Start (global): 691 -> (local): (3, 0) at time 17 | Goal (global): 659 -> (local): (2, 0) at time 18
[DBG]  [REPAIR] SAT destroy operator called.
[DBG]  [REPAIR] SAT operator – launching subproblem FOR OPTIMIZATION.
[DBG]  Creating local paths (sx, sy) in the submap for T_sync = 17
[DBG]    Agent 28 (global paths from T=17 to 30) has local path: (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,1) (3,1) (4,1) 
[DBG]    Agent 30 (global paths from T=17 to 21) has local path: (0,4) (0,4) (0,4) (0,4) (0,4) 
[DBG]    Agent 62 (global paths from T=17 to 23) has local path: (1,0) (1,0) (1,0) (1,0) (1,1) (0,1) (0,2) 
[DBG]    Agent 70 (global paths from T=17 to 20) has local path: (0,1) (1,1) (2,1) (2,0) 
[DBG]    Agent 74 (global paths from T=17 to 19) has local path: (1,1) (1,2) (0,2) 
[DBG]    Agent 101 (global paths from T=17 to 18) has local path: (3,0) (2,0) 
[DBG]  Checking input data for SAT solver:
[DBG]    - Number of agents to replan: 6
[DBG]  Agent 28 has the original local path length: 14 => Start (2,2), Goal (4,1)
[DBG]  Agent 30 has the original local path length: 5 => Start (0,4), Goal (0,4)
[DBG]  Agent 62 has the original local path length: 7 => Start (1,0), Goal (0,2)
[DBG]  Agent 70 has the original local path length: 4 => Start (0,1), Goal (2,0)
[DBG]  Agent 74 has the original local path length: 3 => Start (1,1), Goal (0,2)
[DBG]  Agent 101 has the original local path length: 2 => Start (3,0), Goal (2,0)
[DBG]  Start position: (2, 2), (0, 4), (1, 0), (0, 1), (1, 1), (3, 0), 
[DBG]  Goal position: (4, 1), (0, 4), (0, 2), (2, 0), (0, 2), (2, 0), 
[DBG]  SAT instance and solver created.
Currently solving
Instance name: scen
Map name: map
Encoding used: disappear_at_goal
SAT solver used: Kissat
Optimizing function: sum of costs
Number of agents: 6
Mks LB: 4
SoC LB: 18
Delta: 0
Remaining time: 300000 [ms]

[STAT] Solver returned: -1
[DBG]  SAT solver failed.
[STAT] SAT solver failed to find a valid solution.
[DBG]  ====================
[DBG]  SAT destroy operator called.
[DBG]  SAT heuristic: 2
[DBG]  key_agent_id: 28
[DBG]  key_agent_id global path length: 44
[DBG]  Submap content (global positions):
[DBG]  595 596 597 598 599 
[DBG]  627 628 629 630 631 
[DBG]  659 660 661 662 663 
[DBG]  691 692 693 694 695 
[DBG]  723 724 725 726 727 
[DBG]  Map content with agents and obstacles:
[DBG]  X . . X . 
[DBG]  . . . X . 
[DBG]  . A A X X 
[DBG]  . . X X X 
[DBG]  X . . . A 
[DBG]  content of the map structure that we pass to the SAT solver:
[DBG]  -1  1  1  -1  1  
[DBG]  1  1  1  -1  1  
[DBG]  1  1  1  -1  -1  
[DBG]  1  1  -1  -1  -1  
[DBG]  -1  1  1  1  1  
[DBG]  Identifying agents in a submap for rescheduling (when key_agent is there at the time 1):
[DBG]  Agent 7 found intervals in the sub-map:
[DBG]   [2..4]
[DBG]  Agent 7 is not in sub-map at time 1 (intervals: 
[DBG]  [2..4] )
[DBG]  Agent 12 found intervals in the sub-map:
[DBG]   [0..1]
[DBG]  Agent 12 (interval in submap: [0..1]) contains time 1, added to replan.
[DBG]  Agent 28 found intervals in the sub-map:
[DBG]   [0..30] [40..43]
[DBG]  Agent 28 (interval in submap: [0..30]) contains time 1, added to replan.
[DBG]  Agent 70 found intervals in the sub-map:
[DBG]   [16..20]
[DBG]  Agent 70 is not in sub-map at time 1 (intervals: 
[DBG]  [16..20] )
[DBG]  Agent 108 found intervals in the sub-map:
[DBG]   [0..3]
[DBG]  Agent 108 (interval in submap: [0..3]) contains time 1, added to replan.
[DBG]  Agent 12 | Start (global): 727 -> (local): (4, 4) at time 1 | Goal (global): 727 -> (local): (4, 4) at time 1
[DBG]  Agent 28 | Start (global): 661 -> (local): (2, 2) at time 1 | Goal (global): 724 -> (local): (4, 1) at time 30
[DBG]  Agent 108 | Start (global): 660 -> (local): (2, 1) at time 1 | Goal (global): 724 -> (local): (4, 1) at time 3
[DBG]  [REPAIR] SAT destroy operator called.
[DBG]  [REPAIR] SAT operator – launching subproblem FOR OPTIMIZATION.
[DBG]  Creating local paths (sx, sy) in the submap for T_sync = 1
[DBG]    Agent 12 (global paths from T=1 to 1) has local path: (4,4) 
[DBG]    Agent 28 (global paths from T=1 to 30) has local path: (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,1) (3,1) (4,1) 
[DBG]    Agent 108 (global paths from T=1 to 3) has local path: (2,1) (3,1) (4,1) 
[DBG]  Checking input data for SAT solver:
[DBG]    - Number of agents to replan: 3
[DBG]  Agent 12 has the original local path length: 1 => Start (4,4), Goal (4,4)
[DBG]  Agent 28 has the original local path length: 30 => Start (2,2), Goal (4,1)
[DBG]  Agent 108 has the original local path length: 3 => Start (2,1), Goal (4,1)
[DBG]  Start position: (4, 4), (2, 2), (2, 1), 
[DBG]  Goal position: (4, 4), (4, 1), (4, 1), 
[DBG]  SAT instance and solver created.
Currently solving
Instance name: scen
Map name: map
Encoding used: disappear_at_goal
SAT solver used: Kissat
Optimizing function: sum of costs
Number of agents: 3
Mks LB: 4
SoC LB: 8
Delta: 0
Remaining time: 300000 [ms]

Vertex conflict! Agents 0, 2, timestep 3, location 0
Found plan [agents = 3] [timesteps = 4]
Agent #0 : 15 0 0 0 
Agent #1 : 9 8 11 12 
Agent #2 : 8 11 12 0 

[STAT] Solver returned: 0
[DBG]  Agent (index) 12 | New local path (submap idx):
[DBG]  15 
[DBG]  Agent (index) 28 | New local path (submap idx):
[DBG]  9 8 11 12 
[DBG]  Agent (index) 108 | New local path (submap idx):
[DBG]  8 11 12 
[DBG]  Update the agent path 12 | Original local length: 1 | New local length: 1
[DBG]  agent 12 t=0 => decoded (sx,sy)=(4,4) => global_id=727
[DBG]  Complete path of agent 12:
[DBG]    Original: 726 727 728 729 730 731 732 764 765 766 767 
[DBG]    New:     726 727 728 729 730 731 732 764 765 766 767 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 726 
[DBG]    Local path (in submap): 727 
[DBG]    Suffix (out of submap): 728 729 730 731 732 764 765 766 767 
[DBG]  Original agent path length 12 je: 11
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 0: 726, 727, 728, 729, 730, 731, 732, 764, 765, 766, 767, 
[DBG]  Path for agent 12 updated, resulting length: 11
[DBG]  Update the agent path 28 | Original local length: 30 | New local length: 4
[DBG]  agent 28 t=0 => decoded (sx,sy)=(2,2) => global_id=661
[DBG]  agent 28 t=1 => decoded (sx,sy)=(2,1) => global_id=660
[DBG]  agent 28 t=2 => decoded (sx,sy)=(3,1) => global_id=692
[DBG]  agent 28 t=3 => decoded (sx,sy)=(4,1) => global_id=724
[DBG]  Complete path of agent 28:
[DBG]    Original: 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 660 692 724 756 788 756 756 756 756 756 756 756 724 725 726 727 
[DBG]    New:     661 661 660 692 724 756 788 756 756 756 756 756 756 756 724 725 726 727 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 661 
[DBG]    Local path (in submap): 661 660 692 724 756 788 756 756 756 756 756 756 756 724 725 726 727 
[DBG]    Suffix (out of submap): 
[DBG]  Original agent path length 28 je: 44
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 1: 661, 661, 660, 692, 724, 756, 788, 756, 756, 756, 756, 756, 756, 756, 724, 725, 726, 727, 
[DBG]  Path for agent 28 updated, resulting length: 18
[DBG]  Update the agent path 108 | Original local length: 3 | New local length: 3
[DBG]  agent 108 t=0 => decoded (sx,sy)=(2,1) => global_id=660
[DBG]  agent 108 t=1 => decoded (sx,sy)=(3,1) => global_id=692
[DBG]  agent 108 t=2 => decoded (sx,sy)=(4,1) => global_id=724
[DBG]  Complete path of agent 108:
[DBG]    Original: 628 660 692 724 756 788 788 820 821 822 854 855 887 888 920 921 922 954 955 956 957 989 1021 
[DBG]    New:     628 660 692 724 756 788 788 820 821 822 854 855 887 888 920 921 922 954 955 956 957 989 1021 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 628 
[DBG]    Local path (in submap): 660 692 724 
[DBG]    Suffix (out of submap): 756 788 788 820 821 822 854 855 887 888 920 921 922 954 955 956 957 989 1021 
[DBG]  Original agent path length 108 je: 23
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 2: 628, 660, 692, 724, 756, 788, 788, 820, 821, 822, 854, 855, 887, 888, 920, 921, 922, 954, 955, 956, 957, 989, 1021, 
[DBG]  Path for agent 108 updated, resulting length: 23
[DBG]  Paths successfully updated.
[DBG]  (LNS.cpp) New path for agent 12: 
[DBG]  726, 727, 728, 729, 730, 731, 732, 764, 765, 766, 767, 
[DBG]  (LNS.cpp) New path for agent 28: 
[DBG]  661, 661, 660, 692, 724, 756, 788, 756, 756, 756, 756, 756, 756, 756, 724, 725, 726, 727, 
[DBG]  (LNS.cpp) New path for agent 108: 
[DBG]  628, 660, 692, 724, 756, 788, 788, 820, 821, 822, 854, 855, 887, 888, 920, 921, 922, 954, 955, 956, 957, 989, 1021, 
[DBG]  Delta value: 0.346667
[DBG]  Rewarding metric index = 1
[DBG]  component_weights = {1.61319e-06, 0.999996, 7.10526e-07, 1.23189e-06}
[DBG]  opSuccess value: 1
[STAT] neighbor.sum_of_costs before recomputation: 49
[STAT] neighbor.old_sum_of_costs before recomputation: 75
[STAT] sum_of_costs before recomputation: 4308
[DBG]  Validate solution immediately after SAT success.
[WARNING] Problem after SAT: Vertex conflict between agents 7 and 28 at location 724 at timestep 4
[DBG]  [DEBUG] Attempting immediate repair via init_lns because problem occurred after SAT (should be applied only for conflicts...).
[DBG]  [DEBUG] Passing 150 agents to init_lns (skip=true).
[DBG]  [DEBUG] path_table contents for selected agents (neighbor.agents):
[DBG]    Agent 12 => controlling path length=11
[DBG]    Agent 28 => controlling path length=18
[DBG]    Agent 108 => controlling path length=23
[DBG]  hodnota skip_initial_solution=1
[DBG]  We skip initialSolution => call buildCollisionData()
[DBG]  buildCollisionData() called – skip_initial_solution case.
[DBG]  Agents.size()=150, collision_graph.size()=150
[DBG]  agent 7 => updateCollidingPairs => foundCollision
[DBG]  agent 11 => updateCollidingPairs => foundCollision
[DBG]  agent 28 => updateCollidingPairs => foundCollision
[DBG]  agent 42 => updateCollidingPairs => foundCollision
[DBG]  agent 89 => updateCollidingPairs => foundCollision
[DBG]  agent 108 => updateCollidingPairs => foundCollision
[DBG]  Conflicting agent pairs:
[DBG]  agent 7 is in conflict with agent 28
[DBG]  agent 11 is in conflict with agent 28
[DBG]  agent 28 is in conflict with agent 42
[DBG]  agent 28 is in conflict with agent 89
[DBG]  agent 28 is in conflict with agent 108
[DBG]  buildCollisionData() => sum_of_costs=4282, num_of_colliding_pairs=5
[DBG]  buildCollisionData done => sum_of_costs=4282, num_of_colliding_pairs=5
[DBG]  sum_of_cost hodnota: 4282
[DBG]  After skip/init build => iteration_stats.back(): sum_of_costs=4282, collisions=5
[DEBUG] Using default neighbor generation strategy for conflicts: 2
[DEBUG] Using default neighbor generation strategy for conflicts: 1
[DEBUG] Using default neighbor generation strategy for conflicts: 0
	InitLNS(PP): runtime = 0.00521921, iterations = 4, colliding pairs = 0, initial colliding pairs = 5, solution cost = 4295, initial solution cost = 4282, failed iterations = 0
[DBG]  init_lns->sum_of_costs after init_lns->run: 4295
[DBG]  sum_of_costs after assignment from init_lns->run: 4295
[DBG]  Recomputing sum_of_cost by dividing neighbor.sum_of_costs and neighbor.old_sum_of_costs
[STAT] sum_of_costs after recomputation: 4295
[STAT] Iteration 130
[DBG]  Random chance did not select SAT operator (r=59), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 130
[DBG]  Using SAT operator (destroy+repair SAT).
[DBG]  ====================
[DBG]  SAT destroy operator called.
[DBG]  SAT heuristic: 2
[DBG]  key_agent_id: 28
[DBG]  key_agent_id global path length: 44
[DBG]  Submap content (global positions):
[DBG]  691 692 693 694 695 
[DBG]  723 724 725 726 727 
[DBG]  755 756 757 758 759 
[DBG]  787 788 789 790 791 
[DBG]  819 820 821 822 823 
[DBG]  Map content with agents and obstacles:
[DBG]  . . X X X 
[DBG]  X . . . . 
[DBG]  . . A X . 
[DBG]  . . X . X 
[DBG]  . . . . . 
[DBG]  content of the map structure that we pass to the SAT solver:
[DBG]  1  1  -1  -1  -1  
[DBG]  -1  1  1  1  1  
[DBG]  1  1  1  -1  1  
[DBG]  1  1  -1  1  -1  
[DBG]  1  1  1  1  1  
[DBG]  Identifying agents in a submap for rescheduling (when key_agent is there at the time 34):
[DBG]  Agent 1 found intervals in the sub-map:
[DBG]   [7..7]
[DBG]  Agent 1 is not in sub-map at time 34 (intervals: 
[DBG]  [7..7] )
[DBG]  Agent 26 found intervals in the sub-map:
[DBG]   [30..33]
[DBG]  Agent 26 is not in sub-map at time 34 (intervals: 
[DBG]  [30..33] )
[DBG]  Agent 28 found intervals in the sub-map:
[DBG]   [29..43]
[DBG]  Agent 28 (interval in submap: [29..43]) contains time 34, added to replan.
[DBG]  Agent 44 found intervals in the sub-map:
[DBG]  
[DBG]  Agent 44 is not in sub-map at time 34 (intervals: 
[DBG]  )
[DBG]  Agent 53 found intervals in the sub-map:
[DBG]   [26..31]
[DBG]  Agent 53 is not in sub-map at time 34 (intervals: 
[DBG]  [26..31] )
[DBG]  Agent 28 | Start (global): 757 -> (local): (2, 2) at time 34 | Goal (global): 727 -> (local): (1, 4) at time 43
[DBG]  [REPAIR] SAT destroy operator called.
[DBG]  [REPAIR] SAT operator – launching subproblem FOR OPTIMIZATION.
[DBG]  Creating local paths (sx, sy) in the submap for T_sync = 34
[DBG]    Agent 28 (global paths from T=34 to 43) has local path: (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (1,2) (1,3) (1,4) 
[DBG]  Checking input data for SAT solver:
[DBG]    - Number of agents to replan: 1
[DBG]  Agent 28 has the original local path length: 10 => Start (2,2), Goal (1,4)
[DBG]  Start position: (2, 2), 
[DBG]  Goal position: (1, 4), 
[DBG]  SAT instance and solver created.
Currently solving
Instance name: scen
Map name: map
Encoding used: disappear_at_goal
SAT solver used: Kissat
Optimizing function: sum of costs
Number of agents: 1
Mks LB: 4
SoC LB: 4
Delta: 0
Remaining time: 300000 [ms]

Found plan [agents = 1] [timesteps = 4]
Agent #0 : 8 3 4 5 

[STAT] Solver returned: 0
[DBG]  Agent (index) 28 | New local path (submap idx):
[DBG]  8 3 4 5 
[DBG]  Update the agent path 28 | Original local length: 10 | New local length: 4
[DBG]  agent 28 t=0 => decoded (sx,sy)=(2,2) => global_id=757
[DBG]  agent 28 t=1 => decoded (sx,sy)=(1,2) => global_id=725
[DBG]  agent 28 t=2 => decoded (sx,sy)=(1,3) => global_id=726
[DBG]  agent 28 t=3 => decoded (sx,sy)=(1,4) => global_id=727
[DBG]  Complete path of agent 28:
[DBG]    Original: 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 660 692 724 725 757 757 757 757 757 757 757 757 757 725 726 727 
[DBG]    New:     661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 660 692 724 725 757 757 757 725 726 727 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 660 692 724 725 757 757 
[DBG]    Local path (in submap): 757 725 726 727 
[DBG]    Suffix (out of submap): 
[DBG]  Original agent path length 28 je: 44
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 0: 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 660, 692, 724, 725, 757, 757, 757, 725, 726, 727, 
[DBG]  Path for agent 28 updated, resulting length: 38
[DBG]  Paths successfully updated.
[DBG]  (LNS.cpp) New path for agent 28: 
[DBG]  661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 660, 692, 724, 725, 757, 757, 757, 725, 726, 727, 
[DBG]  Delta value: 0.139535
[DBG]  Rewarding metric index = 1
[DBG]  component_weights = {1.34487e-06, 0.999997, 5.92347e-07, 1.02699e-06}
[DBG]  opSuccess value: 1
[STAT] neighbor.sum_of_costs before recomputation: 37
[STAT] neighbor.old_sum_of_costs before recomputation: 43
[STAT] sum_of_costs before recomputation: 4295
[DBG]  Validate solution immediately after SAT success.
[WARNING] Problem after SAT: Target conflict: agent 42 (len 43) traverses target of agent 28 (len 37) at location 727 at timestep 42
[DBG]  [DEBUG] Attempting immediate repair via init_lns because problem occurred after SAT (should be applied only for conflicts...).
[DBG]  [DEBUG] Passing 150 agents to init_lns (skip=true).
[DBG]  [DEBUG] path_table contents for selected agents (neighbor.agents):
[DBG]    Agent 28 => controlling path length=38
[DBG]  hodnota skip_initial_solution=1
[DBG]  We skip initialSolution => call buildCollisionData()
[DBG]  buildCollisionData() called – skip_initial_solution case.
[DBG]  Agents.size()=150, collision_graph.size()=150
[DBG]  agent 28 => updateCollidingPairs => foundCollision
[DBG]  agent 42 => updateCollidingPairs => foundCollision
[DBG]  Conflicting agent pairs:
[DBG]  agent 28 is in conflict with agent 42
[DBG]  buildCollisionData() => sum_of_costs=4289, num_of_colliding_pairs=1
[DBG]  buildCollisionData done => sum_of_costs=4289, num_of_colliding_pairs=1
[DBG]  sum_of_cost hodnota: 4289
[DBG]  After skip/init build => iteration_stats.back(): sum_of_costs=4289, collisions=1
[DEBUG] Using default neighbor generation strategy for conflicts: 2
[DEBUG] Using default neighbor generation strategy for conflicts: 1
[DEBUG] Using default neighbor generation strategy for conflicts: 2
[DEBUG] Using default neighbor generation strategy for conflicts: 1
[DEBUG] Using default neighbor generation strategy for conflicts: 1
	InitLNS(PP): runtime = 0.00841887, iterations = 6, colliding pairs = 0, initial colliding pairs = 1, solution cost = 4312, initial solution cost = 4289, failed iterations = 0
[DBG]  init_lns->sum_of_costs after init_lns->run: 4312
[DBG]  sum_of_costs after assignment from init_lns->run: 4312
[DBG]  Recomputing sum_of_cost by dividing neighbor.sum_of_costs and neighbor.old_sum_of_costs
[STAT] sum_of_costs after recomputation: 4312
[STAT] Iteration 131
[DBG]  Random chance did not select SAT operator (r=78), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 131
[DBG]  Random chance did not select SAT operator (r=73), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 131
[DBG]  Random chance did not select SAT operator (r=12), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 131
[DBG]  Random chance did not select SAT operator (r=79), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 131
[DBG]  Random chance did not select SAT operator (r=20), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 131
[DBG]  Random chance did not select SAT operator (r=94), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 131
[DBG]  Random chance did not select SAT operator (r=62), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 131
[DBG]  Using SAT operator (destroy+repair SAT).
[DBG]  ====================
[DBG]  SAT destroy operator called.
[DBG]  SAT heuristic: 2
[DBG]  key_agent_id: 28
[DBG]  key_agent_id global path length: 53
[DBG]  Submap content (global positions):
[DBG]  659 660 661 662 663 
[DBG]  691 692 693 694 695 
[DBG]  723 724 725 726 727 
[DBG]  755 756 757 758 759 
[DBG]  787 788 789 790 791 
[DBG]  Map content with agents and obstacles:
[DBG]  . . . X X 
[DBG]  . . X X X 
[DBG]  X . A A . 
[DBG]  . . . X . 
[DBG]  . . X . X 
[DBG]  content of the map structure that we pass to the SAT solver:
[DBG]  1  1  1  -1  -1  
[DBG]  1  1  -1  -1  -1  
[DBG]  -1  1  1  1  1  
[DBG]  1  1  1  -1  1  
[DBG]  1  1  -1  1  -1  
[DBG]  Identifying agents in a submap for rescheduling (when key_agent is there at the time 50):
[DBG]  Agent 28 found intervals in the sub-map:
[DBG]   [0..11] [30..52]
[DBG]  Agent 28 (interval in submap: [30..52]) contains time 50, added to replan.
[DBG]  Agent 42 found intervals in the sub-map:
[DBG]   [45..52]
[DBG]  Agent 42 (interval in submap: [45..52]) contains time 50, added to replan.
[DBG]  Agent 28 | Start (global): 725 -> (local): (2, 2) at time 50 | Goal (global): 727 -> (local): (2, 4) at time 52
[DBG]  Agent 42 | Start (global): 726 -> (local): (2, 3) at time 50 | Goal (global): 759 -> (local): (3, 4) at time 52
[DBG]  [REPAIR] SAT destroy operator called.
[DBG]  [REPAIR] SAT operator – launching subproblem FOR OPTIMIZATION.
[DBG]  Creating local paths (sx, sy) in the submap for T_sync = 50
[DBG]    Agent 28 (global paths from T=50 to 52) has local path: (2,2) (2,3) (2,4) 
[DBG]    Agent 42 (global paths from T=50 to 52) has local path: (2,3) (2,4) (3,4) 
[DBG]  Checking input data for SAT solver:
[DBG]    - Number of agents to replan: 2
[DBG]  Agent 28 has the original local path length: 3 => Start (2,2), Goal (2,4)
[DBG]  Agent 42 has the original local path length: 3 => Start (2,3), Goal (3,4)
[DBG]  Start position: (2, 2), (2, 3), 
[DBG]  Goal position: (2, 4), (3, 4), 
[DBG]  SAT instance and solver created.
Currently solving
Instance name: scen
Map name: map
Encoding used: disappear_at_goal
SAT solver used: Kissat
Optimizing function: sum of costs
Number of agents: 2
Mks LB: 3
SoC LB: 6
Delta: 0
Remaining time: 300000 [ms]

Found plan [agents = 2] [timesteps = 3]
Agent #0 : 6 7 8 
Agent #1 : 7 8 12 

[STAT] Solver returned: 0
[DBG]  Agent (index) 28 | New local path (submap idx):
[DBG]  6 7 8 
[DBG]  Agent (index) 42 | New local path (submap idx):
[DBG]  7 8 12 
[DBG]  Update the agent path 28 | Original local length: 3 | New local length: 3
[DBG]  agent 28 t=0 => decoded (sx,sy)=(2,2) => global_id=725
[DBG]  agent 28 t=1 => decoded (sx,sy)=(2,3) => global_id=726
[DBG]  agent 28 t=2 => decoded (sx,sy)=(2,4) => global_id=727
[DBG]  Complete path of agent 28:
[DBG]    Original: 661 660 660 659 659 659 659 659 660 660 660 660 628 628 628 628 627 627 627 627 627 627 627 627 627 627 627 627 627 627 659 691 692 724 725 757 757 757 757 757 757 757 757 757 757 757 757 757 757 757 725 726 727 
[DBG]    New:     661 660 660 659 659 659 659 659 660 660 660 660 628 628 628 628 627 627 627 627 627 627 627 627 627 627 627 627 627 627 659 691 692 724 725 757 757 757 757 757 757 757 757 757 757 757 757 757 757 757 725 726 727 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 661 660 660 659 659 659 659 659 660 660 660 660 628 628 628 628 627 627 627 627 627 627 627 627 627 627 627 627 627 627 659 691 692 724 725 757 757 757 757 757 757 757 757 757 757 757 757 757 757 757 
[DBG]    Local path (in submap): 725 726 727 
[DBG]    Suffix (out of submap): 
[DBG]  Original agent path length 28 je: 53
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 0: 661, 660, 660, 659, 659, 659, 659, 659, 660, 660, 660, 660, 628, 628, 628, 628, 627, 627, 627, 627, 627, 627, 627, 627, 627, 627, 627, 627, 627, 627, 659, 691, 692, 724, 725, 757, 757, 757, 757, 757, 757, 757, 757, 757, 757, 757, 757, 757, 757, 757, 725, 726, 727, 
[DBG]  Path for agent 28 updated, resulting length: 53
[DBG]  Update the agent path 42 | Original local length: 3 | New local length: 3
[DBG]  agent 42 t=0 => decoded (sx,sy)=(2,3) => global_id=726
[DBG]  agent 42 t=1 => decoded (sx,sy)=(2,4) => global_id=727
[DBG]  agent 42 t=2 => decoded (sx,sy)=(3,4) => global_id=759
[DBG]  Complete path of agent 42:
[DBG]    Original: 224 256 257 289 321 353 354 355 387 419 418 450 482 483 484 516 548 580 581 613 645 677 678 710 742 774 806 807 808 809 841 841 873 874 875 876 877 878 879 880 881 882 883 851 819 787 788 756 724 725 726 727 759 
[DBG]    New:     224 256 257 289 321 353 354 355 387 419 418 450 482 483 484 516 548 580 581 613 645 677 678 710 742 774 806 807 808 809 841 841 873 874 875 876 877 878 879 880 881 882 883 851 819 787 788 756 724 725 726 727 759 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 224 256 257 289 321 353 354 355 387 419 418 450 482 483 484 516 548 580 581 613 645 677 678 710 742 774 806 807 808 809 841 841 873 874 875 876 877 878 879 880 881 882 883 851 819 787 788 756 724 725 
[DBG]    Local path (in submap): 726 727 759 
[DBG]    Suffix (out of submap): 
[DBG]  Original agent path length 42 je: 53
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 1: 224, 256, 257, 289, 321, 353, 354, 355, 387, 419, 418, 450, 482, 483, 484, 516, 548, 580, 581, 613, 645, 677, 678, 710, 742, 774, 806, 807, 808, 809, 841, 841, 873, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 851, 819, 787, 788, 756, 724, 725, 726, 727, 759, 
[DBG]  Path for agent 42 updated, resulting length: 53
[DBG]  Paths successfully updated.
[DBG]  (LNS.cpp) New path for agent 28: 
[DBG]  661, 660, 660, 659, 659, 659, 659, 659, 660, 660, 660, 660, 628, 628, 628, 628, 627, 627, 627, 627, 627, 627, 627, 627, 627, 627, 627, 627, 627, 627, 659, 691, 692, 724, 725, 757, 757, 757, 757, 757, 757, 757, 757, 757, 757, 757, 757, 757, 757, 757, 725, 726, 727, 
[DBG]  (LNS.cpp) New path for agent 42: 
[DBG]  224, 256, 257, 289, 321, 353, 354, 355, 387, 419, 418, 450, 482, 483, 484, 516, 548, 580, 581, 613, 645, 677, 678, 710, 742, 774, 806, 807, 808, 809, 841, 841, 873, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 851, 819, 787, 788, 756, 724, 725, 726, 727, 759, 
[DBG]  Delta value: 0
[DBG]  Rewarding metric index = 1
[DBG]  component_weights = {1.27763e-06, 0.999997, 5.6273e-07, 9.75642e-07}
[DBG]  opSuccess value: 1
[STAT] neighbor.sum_of_costs before recomputation: 104
[STAT] neighbor.old_sum_of_costs before recomputation: 104
[STAT] sum_of_costs before recomputation: 4312
[DBG]  Validate solution immediately after SAT success.
[DBG]  No problems after SAT replan.
[DBG]  Recomputing sum_of_cost by dividing neighbor.sum_of_costs and neighbor.old_sum_of_costs
[STAT] sum_of_costs after recomputation: 4312
[STAT] Iteration 132
[DBG]  Using SAT operator (destroy+repair SAT).
[DBG]  ====================
[DBG]  SAT destroy operator called.
[DBG]  SAT heuristic: 2
[DBG]  key_agent_id: 28
[DBG]  key_agent_id global path length: 53
[DBG]  Submap content (global positions):
[DBG]  658 659 660 661 662 
[DBG]  690 691 692 693 694 
[DBG]  722 723 724 725 726 
[DBG]  754 755 756 757 758 
[DBG]  786 787 788 789 790 
[DBG]  Map content with agents and obstacles:
[DBG]  . . . . X 
[DBG]  X . . X X 
[DBG]  . X A . . 
[DBG]  X A . . X 
[DBG]  . . . X . 
[DBG]  content of the map structure that we pass to the SAT solver:
[DBG]  1  1  1  1  -1  
[DBG]  -1  1  1  -1  -1  
[DBG]  1  -1  1  1  1  
[DBG]  -1  1  1  1  -1  
[DBG]  1  1  1  -1  1  
[DBG]  Identifying agents in a submap for rescheduling (when key_agent is there at the time 33):
[DBG]  Agent 26 found intervals in the sub-map:
[DBG]   [29..33]
[DBG]  Agent 26 (interval in submap: [29..33]) contains time 33, added to replan.
[DBG]  Agent 28 found intervals in the sub-map:
[DBG]   [0..11] [30..51]
[DBG]  Agent 28 (interval in submap: [30..51]) contains time 33, added to replan.
[DBG]  Agent 44 found intervals in the sub-map:
[DBG]  
[DBG]  Agent 44 is not in sub-map at time 33 (intervals: 
[DBG]  )
[DBG]  Agent 148 found intervals in the sub-map:
[DBG]   [25..30]
[DBG]  Agent 148 is not in sub-map at time 33 (intervals: 
[DBG]  [25..30] )
[DBG]  Agent 26 | Start (global): 755 -> (local): (3, 1) at time 33 | Goal (global): 755 -> (local): (3, 1) at time 33
[DBG]  Agent 28 | Start (global): 724 -> (local): (2, 2) at time 33 | Goal (global): 726 -> (local): (2, 4) at time 51
[DBG]  [REPAIR] SAT destroy operator called.
[DBG]  [REPAIR] SAT operator – launching subproblem FOR OPTIMIZATION.
[DBG]  Creating local paths (sx, sy) in the submap for T_sync = 33
[DBG]    Agent 26 (global paths from T=33 to 33) has local path: (3,1) 
[DBG]    Agent 28 (global paths from T=33 to 51) has local path: (2,2) (2,3) (3,3) (3,3) (3,3) (3,3) (3,3) (3,3) (3,3) (3,3) (3,3) (3,3) (3,3) (3,3) (3,3) (3,3) (3,3) (2,3) (2,4) 
[DBG]  Checking input data for SAT solver:
[DBG]    - Number of agents to replan: 2
[DBG]  Agent 26 has the original local path length: 1 => Start (3,1), Goal (3,1)
[DBG]  Agent 28 has the original local path length: 19 => Start (2,2), Goal (2,4)
[DBG]  Start position: (3, 1), (2, 2), 
[DBG]  Goal position: (3, 1), (2, 4), 
[DBG]  SAT instance and solver created.
Currently solving
Instance name: scen
Map name: map
Encoding used: disappear_at_goal
SAT solver used: Kissat
Optimizing function: sum of costs
Number of agents: 2
Mks LB: 3
SoC LB: 4
Delta: 0
Remaining time: 300000 [ms]

Found plan [agents = 2] [timesteps = 3]
Agent #0 : 10 0 0 
Agent #1 : 7 8 9 

[STAT] Solver returned: 0
[DBG]  Agent (index) 26 | New local path (submap idx):
[DBG]  10 
[DBG]  Agent (index) 28 | New local path (submap idx):
[DBG]  7 8 9 
[DBG]  Update the agent path 26 | Original local length: 1 | New local length: 1
[DBG]  agent 26 t=0 => decoded (sx,sy)=(3,1) => global_id=755
[DBG]  Complete path of agent 26:
[DBG]    Original: 13 14 15 47 48 80 81 82 83 84 116 148 180 212 244 276 308 309 341 373 405 437 469 501 533 565 597 629 628 660 692 724 756 755 
[DBG]    New:     13 14 15 47 48 80 81 82 83 84 116 148 180 212 244 276 308 309 341 373 405 437 469 501 533 565 597 629 628 660 692 724 756 755 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 13 14 15 47 48 80 81 82 83 84 116 148 180 212 244 276 308 309 341 373 405 437 469 501 533 565 597 629 628 660 692 724 756 
[DBG]    Local path (in submap): 755 
[DBG]    Suffix (out of submap): 
[DBG]  Original agent path length 26 je: 34
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 0: 13, 14, 15, 47, 48, 80, 81, 82, 83, 84, 116, 148, 180, 212, 244, 276, 308, 309, 341, 373, 405, 437, 469, 501, 533, 565, 597, 629, 628, 660, 692, 724, 756, 755, 
[DBG]  Path for agent 26 updated, resulting length: 34
[DBG]  Update the agent path 28 | Original local length: 19 | New local length: 3
[DBG]  agent 28 t=0 => decoded (sx,sy)=(2,2) => global_id=724
[DBG]  agent 28 t=1 => decoded (sx,sy)=(2,3) => global_id=725
[DBG]  agent 28 t=2 => decoded (sx,sy)=(2,4) => global_id=726
[DBG]  Complete path of agent 28:
[DBG]    Original: 661 660 660 659 659 659 659 659 660 660 660 660 628 628 628 628 627 627 627 627 627 627 627 627 627 627 627 627 627 627 659 691 692 724 725 757 757 757 757 757 757 757 757 757 757 757 757 757 757 757 725 726 727 
[DBG]    New:     661 660 660 659 659 659 659 659 660 660 660 660 628 628 628 628 627 627 627 627 627 627 627 627 627 627 627 627 627 627 659 691 692 724 725 726 727 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 661 660 660 659 659 659 659 659 660 660 660 660 628 628 628 628 627 627 627 627 627 627 627 627 627 627 627 627 627 627 659 691 692 
[DBG]    Local path (in submap): 724 725 726 727 
[DBG]    Suffix (out of submap): 
[DBG]  Original agent path length 28 je: 53
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 1: 661, 660, 660, 659, 659, 659, 659, 659, 660, 660, 660, 660, 628, 628, 628, 628, 627, 627, 627, 627, 627, 627, 627, 627, 627, 627, 627, 627, 627, 627, 659, 691, 692, 724, 725, 726, 727, 
[DBG]  Path for agent 28 updated, resulting length: 37
[DBG]  Paths successfully updated.
[DBG]  (LNS.cpp) New path for agent 26: 
[DBG]  13, 14, 15, 47, 48, 80, 81, 82, 83, 84, 116, 148, 180, 212, 244, 276, 308, 309, 341, 373, 405, 437, 469, 501, 533, 565, 597, 629, 628, 660, 692, 724, 756, 755, 
[DBG]  (LNS.cpp) New path for agent 28: 
[DBG]  661, 660, 660, 659, 659, 659, 659, 659, 660, 660, 660, 660, 628, 628, 628, 628, 627, 627, 627, 627, 627, 627, 627, 627, 627, 627, 627, 627, 627, 627, 659, 691, 692, 724, 725, 726, 727, 
[DBG]  Delta value: 0.188235
[DBG]  Rewarding metric index = 1
[DBG]  component_weights = {1.02147e-06, 0.999998, 4.49905e-07, 7.80031e-07}
[DBG]  opSuccess value: 1
[STAT] neighbor.sum_of_costs before recomputation: 69
[STAT] neighbor.old_sum_of_costs before recomputation: 85
[STAT] sum_of_costs before recomputation: 4312
[DBG]  Validate solution immediately after SAT success.
[WARNING] Problem after SAT: Target conflict: agent 42 (len 52) traverses target of agent 28 (len 36) at location 727 at timestep 51
[DBG]  [DEBUG] Attempting immediate repair via init_lns because problem occurred after SAT (should be applied only for conflicts...).
[DBG]  [DEBUG] Passing 150 agents to init_lns (skip=true).
[DBG]  [DEBUG] path_table contents for selected agents (neighbor.agents):
[DBG]    Agent 26 => controlling path length=34
[DBG]    Agent 28 => controlling path length=37
[DBG]  hodnota skip_initial_solution=1
[DBG]  We skip initialSolution => call buildCollisionData()
[DBG]  buildCollisionData() called – skip_initial_solution case.
[DBG]  Agents.size()=150, collision_graph.size()=150
[DBG]  agent 28 => updateCollidingPairs => foundCollision
[DBG]  agent 42 => updateCollidingPairs => foundCollision
[DBG]  Conflicting agent pairs:
[DBG]  agent 28 is in conflict with agent 42
[DBG]  buildCollisionData() => sum_of_costs=4296, num_of_colliding_pairs=1
[DBG]  buildCollisionData done => sum_of_costs=4296, num_of_colliding_pairs=1
[DBG]  sum_of_cost hodnota: 4296
[DBG]  After skip/init build => iteration_stats.back(): sum_of_costs=4296, collisions=1
[DEBUG] Using default neighbor generation strategy for conflicts: 1
	InitLNS(PP): runtime = 0.00206817, iterations = 2, colliding pairs = 0, initial colliding pairs = 1, solution cost = 4307, initial solution cost = 4296, failed iterations = 0
[DBG]  init_lns->sum_of_costs after init_lns->run: 4307
[DBG]  sum_of_costs after assignment from init_lns->run: 4307
[DBG]  Recomputing sum_of_cost by dividing neighbor.sum_of_costs and neighbor.old_sum_of_costs
[STAT] sum_of_costs after recomputation: 4307
[STAT] Iteration 133
[DBG]  Random chance did not select SAT operator (r=10), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 133
[DBG]  Random chance did not select SAT operator (r=61), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 133
[DBG]  Using SAT operator (destroy+repair SAT).
[DBG]  ====================
[DBG]  SAT destroy operator called.
[DBG]  SAT heuristic: 2
[DBG]  key_agent_id: 28
[DBG]  key_agent_id global path length: 53
[DBG]  Submap content (global positions):
[DBG]  593 594 595 596 597 
[DBG]  625 626 627 628 629 
[DBG]  657 658 659 660 661 
[DBG]  689 690 691 692 693 
[DBG]  721 722 723 724 725 
[DBG]  Map content with agents and obstacles:
[DBG]  . . X . . 
[DBG]  A X . . . 
[DBG]  . . A . . 
[DBG]  . X A . X 
[DBG]  . . X . A 
[DBG]  content of the map structure that we pass to the SAT solver:
[DBG]  1  1  -1  1  1  
[DBG]  1  -1  1  1  1  
[DBG]  1  1  1  1  1  
[DBG]  1  -1  1  1  -1  
[DBG]  1  1  -1  1  1  
[DBG]  Identifying agents in a submap for rescheduling (when key_agent is there at the time 4):
[DBG]  Agent 19 found intervals in the sub-map:
[DBG]   [0..7]
[DBG]  Agent 19 (interval in submap: [0..7]) contains time 4, added to replan.
[DBG]  Agent 28 found intervals in the sub-map:
[DBG]   [0..32] [49..50]
[DBG]  Agent 28 (interval in submap: [0..32]) contains time 4, added to replan.
[DBG]  Agent 62 found intervals in the sub-map:
[DBG]   [11..20]
[DBG]  Agent 62 is not in sub-map at time 4 (intervals: 
[DBG]  [11..20] )
[DBG]  Agent 63 found intervals in the sub-map:
[DBG]   [0..1]
[DBG]  Agent 63 is not in sub-map at time 4 (intervals: 
[DBG]  [0..1] )
[DBG]  Agent 74 found intervals in the sub-map:
[DBG]   [11..19]
[DBG]  Agent 74 is not in sub-map at time 4 (intervals: 
[DBG]  [11..19] )
[DBG]  Agent 91 found intervals in the sub-map:
[DBG]   [4..4]
[DBG]  Agent 91 (interval in submap: [4..4]) contains time 4, added to replan.
[DBG]  Agent 108 found intervals in the sub-map:
[DBG]   [0..8]
[DBG]  Agent 108 (interval in submap: [0..8]) contains time 4, added to replan.
[DBG]  Agent 19 | Start (global): 625 -> (local): (1, 0) at time 4 | Goal (global): 657 -> (local): (2, 0) at time 7
[DBG]  Agent 28 | Start (global): 659 -> (local): (2, 2) at time 4 | Goal (global): 724 -> (local): (4, 3) at time 32
[DBG]  Agent 91 | Start (global): 725 -> (local): (4, 4) at time 4 | Goal (global): 725 -> (local): (4, 4) at time 4
[DBG]  Agent 108 | Start (global): 691 -> (local): (3, 2) at time 4 | Goal (global): 724 -> (local): (4, 3) at time 8
[DBG]  [REPAIR] SAT destroy operator called.
[DBG]  [REPAIR] SAT operator – launching subproblem FOR OPTIMIZATION.
[DBG]  Creating local paths (sx, sy) in the submap for T_sync = 4
[DBG]    Agent 19 (global paths from T=4 to 7) has local path: (1,0) (1,0) (1,0) (2,0) 
[DBG]    Agent 28 (global paths from T=4 to 32) has local path: (2,2) (2,2) (2,2) (2,2) (2,3) (2,3) (2,3) (2,3) (3,3) (4,3) (4,4) (4,4) (4,4) (4,4) (4,4) (4,4) (4,4) (4,4) (4,4) (4,4) (4,4) (4,4) (4,4) (4,4) (4,4) (4,4) (4,4) (4,4) (4,3) 
[DBG]    Agent 91 (global paths from T=4 to 4) has local path: (4,4) 
[DBG]    Agent 108 (global paths from T=4 to 8) has local path: (3,2) (3,2) (3,2) (3,3) (4,3) 
[DBG]  Checking input data for SAT solver:
[DBG]    - Number of agents to replan: 4
[DBG]  Agent 19 has the original local path length: 4 => Start (1,0), Goal (2,0)
[DBG]  Agent 28 has the original local path length: 29 => Start (2,2), Goal (4,3)
[DBG]  Agent 91 has the original local path length: 1 => Start (4,4), Goal (4,4)
[DBG]  Agent 108 has the original local path length: 5 => Start (3,2), Goal (4,3)
[DBG]  Start position: (1, 0), (2, 2), (4, 4), (3, 2), 
[DBG]  Goal position: (2, 0), (4, 3), (4, 4), (4, 3), 
[DBG]  SAT instance and solver created.
Currently solving
Instance name: scen
Map name: map
Encoding used: disappear_at_goal
SAT solver used: Kissat
Optimizing function: sum of costs
Number of agents: 4
Mks LB: 4
SoC LB: 10
Delta: 0
Remaining time: 300000 [ms]

Vertex conflict! Agents 0, 2, timestep 2, location 0
Swapping conflict! Agents 0, 2, timestep 2, edge (0,0)
Vertex conflict! Agents 0, 2, timestep 3, location 0
Vertex conflict! Agents 0, 3, timestep 3, location 0
Vertex conflict! Agents 2, 3, timestep 3, location 0
Found plan [agents = 4] [timesteps = 4]
Agent #0 : 4 8 0 0 
Agent #1 : 10 14 15 18 
Agent #2 : 19 0 0 0 
Agent #3 : 14 15 18 0 

[STAT] Solver returned: 0
[DBG]  Agent (index) 19 | New local path (submap idx):
[DBG]  4 8 
[DBG]  Agent (index) 28 | New local path (submap idx):
[DBG]  10 14 15 18 
[DBG]  Agent (index) 91 | New local path (submap idx):
[DBG]  19 
[DBG]  Agent (index) 108 | New local path (submap idx):
[DBG]  14 15 18 
[DBG]  Update the agent path 19 | Original local length: 4 | New local length: 2
[DBG]  agent 19 t=0 => decoded (sx,sy)=(1,0) => global_id=625
[DBG]  agent 19 t=1 => decoded (sx,sy)=(2,0) => global_id=657
[DBG]  Complete path of agent 19:
[DBG]    Original: 625 625 625 625 625 625 625 657 656 655 623 591 590 589 588 620 619 651 650 649 648 616 648 649 617 649 650 682 683 
[DBG]    New:     625 625 625 625 625 657 656 655 623 591 590 589 588 620 619 651 650 649 648 616 648 649 617 649 650 682 683 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 625 625 625 625 
[DBG]    Local path (in submap): 625 657 656 655 
[DBG]    Suffix (out of submap): 623 591 590 589 588 620 619 651 650 649 648 616 648 649 617 649 650 682 683 
[DBG]  Original agent path length 19 je: 29
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 0: 625, 625, 625, 625, 625, 657, 656, 655, 623, 591, 590, 589, 588, 620, 619, 651, 650, 649, 648, 616, 648, 649, 617, 649, 650, 682, 683, 
[DBG]  Path for agent 19 updated, resulting length: 27
[DBG]  Update the agent path 28 | Original local length: 29 | New local length: 4
[DBG]  agent 28 t=0 => decoded (sx,sy)=(2,2) => global_id=659
[DBG]  agent 28 t=1 => decoded (sx,sy)=(3,2) => global_id=691
[DBG]  agent 28 t=2 => decoded (sx,sy)=(3,3) => global_id=692
[DBG]  agent 28 t=3 => decoded (sx,sy)=(4,3) => global_id=724
[DBG]  Complete path of agent 28:
[DBG]    Original: 661 660 660 659 659 659 659 659 660 660 660 660 692 724 725 725 725 725 725 725 725 725 725 725 725 725 725 725 725 725 725 725 724 756 788 820 820 820 820 820 820 820 820 820 820 820 820 788 756 724 725 726 727 
[DBG]    New:     661 660 660 659 659 691 692 724 756 788 820 820 820 820 820 820 820 820 820 820 820 820 788 756 724 725 726 727 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 661 660 660 659 
[DBG]    Local path (in submap): 659 691 692 724 756 788 820 820 820 820 820 820 820 820 820 820 820 820 788 756 724 725 726 727 
[DBG]    Suffix (out of submap): 
[DBG]  Original agent path length 28 je: 53
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 1: 661, 660, 660, 659, 659, 691, 692, 724, 756, 788, 820, 820, 820, 820, 820, 820, 820, 820, 820, 820, 820, 820, 788, 756, 724, 725, 726, 727, 
[DBG]  Path for agent 28 updated, resulting length: 28
[DBG]  Update the agent path 91 | Original local length: 1 | New local length: 1
[DBG]  agent 91 t=0 => decoded (sx,sy)=(4,4) => global_id=725
[DBG]  Complete path of agent 91:
[DBG]    Original: 787 755 756 757 725 726 727 728 696 664 632 600 601 601 602 602 602 602 603 571 539 540 541 509 477 445 413 381 
[DBG]    New:     787 755 756 757 725 726 727 728 696 664 632 600 601 601 602 602 602 602 603 571 539 540 541 509 477 445 413 381 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 787 755 756 757 
[DBG]    Local path (in submap): 725 
[DBG]    Suffix (out of submap): 726 727 728 696 664 632 600 601 601 602 602 602 602 603 571 539 540 541 509 477 445 413 381 
[DBG]  Original agent path length 91 je: 28
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 2: 787, 755, 756, 757, 725, 726, 727, 728, 696, 664, 632, 600, 601, 601, 602, 602, 602, 602, 603, 571, 539, 540, 541, 509, 477, 445, 413, 381, 
[DBG]  Path for agent 91 updated, resulting length: 28
[DBG]  Update the agent path 108 | Original local length: 5 | New local length: 3
[DBG]  agent 108 t=0 => decoded (sx,sy)=(3,2) => global_id=691
[DBG]  agent 108 t=1 => decoded (sx,sy)=(3,3) => global_id=692
[DBG]  agent 108 t=2 => decoded (sx,sy)=(4,3) => global_id=724
[DBG]  Complete path of agent 108:
[DBG]    Original: 628 627 659 691 691 691 691 692 724 756 788 820 821 822 854 855 887 919 920 952 953 954 955 956 988 989 1021 
[DBG]    New:     628 627 659 691 691 692 724 756 788 820 821 822 854 855 887 919 920 952 953 954 955 956 988 989 1021 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 628 627 659 691 
[DBG]    Local path (in submap): 691 692 724 756 788 
[DBG]    Suffix (out of submap): 820 821 822 854 855 887 919 920 952 953 954 955 956 988 989 1021 
[DBG]  Original agent path length 108 je: 27
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 3: 628, 627, 659, 691, 691, 692, 724, 756, 788, 820, 821, 822, 854, 855, 887, 919, 920, 952, 953, 954, 955, 956, 988, 989, 1021, 
[DBG]  Path for agent 108 updated, resulting length: 25
[DBG]  Paths successfully updated.
[DBG]  (LNS.cpp) New path for agent 19: 
[DBG]  625, 625, 625, 625, 625, 657, 656, 655, 623, 591, 590, 589, 588, 620, 619, 651, 650, 649, 648, 616, 648, 649, 617, 649, 650, 682, 683, 
[DBG]  (LNS.cpp) New path for agent 28: 
[DBG]  661, 660, 660, 659, 659, 691, 692, 724, 756, 788, 820, 820, 820, 820, 820, 820, 820, 820, 820, 820, 820, 820, 788, 756, 724, 725, 726, 727, 
[DBG]  (LNS.cpp) New path for agent 91: 
[DBG]  787, 755, 756, 757, 725, 726, 727, 728, 696, 664, 632, 600, 601, 601, 602, 602, 602, 602, 603, 571, 539, 540, 541, 509, 477, 445, 413, 381, 
[DBG]  (LNS.cpp) New path for agent 108: 
[DBG]  628, 627, 659, 691, 691, 692, 724, 756, 788, 820, 821, 822, 854, 855, 887, 919, 920, 952, 953, 954, 955, 956, 988, 989, 1021, 
[DBG]  Delta value: 0.218045
[DBG]  Rewarding metric index = 1
[DBG]  component_weights = {7.96685e-07, 0.999998, 3.50899e-07, 6.08376e-07}
[DBG]  opSuccess value: 1
[STAT] neighbor.sum_of_costs before recomputation: 104
[STAT] neighbor.old_sum_of_costs before recomputation: 133
[STAT] sum_of_costs before recomputation: 4307
[DBG]  Validate solution immediately after SAT success.
[WARNING] Problem after SAT: Vertex conflict between agents 108 and 11 at location 919 at timestep 15
[DBG]  [DEBUG] Attempting immediate repair via init_lns because problem occurred after SAT (should be applied only for conflicts...).
[DBG]  [DEBUG] Passing 150 agents to init_lns (skip=true).
[DBG]  [DEBUG] path_table contents for selected agents (neighbor.agents):
[DBG]    Agent 19 => controlling path length=27
[DBG]    Agent 28 => controlling path length=28
[DBG]    Agent 91 => controlling path length=28
[DBG]    Agent 108 => controlling path length=25
[DBG]  hodnota skip_initial_solution=1
[DBG]  We skip initialSolution => call buildCollisionData()
[DBG]  buildCollisionData() called – skip_initial_solution case.
[DBG]  Agents.size()=150, collision_graph.size()=150
[DBG]  agent 11 => updateCollidingPairs => foundCollision
[DBG]  agent 19 => updateCollidingPairs => foundCollision
[DBG]  agent 28 => updateCollidingPairs => foundCollision
[DBG]  agent 35 => updateCollidingPairs => foundCollision
[DBG]  agent 42 => updateCollidingPairs => foundCollision
[DBG]  agent 45 => updateCollidingPairs => foundCollision
[DBG]  agent 46 => updateCollidingPairs => foundCollision
[DBG]  agent 85 => updateCollidingPairs => foundCollision
[DBG]  agent 86 => updateCollidingPairs => foundCollision
[DBG]  agent 89 => updateCollidingPairs => foundCollision
[DBG]  agent 96 => updateCollidingPairs => foundCollision
[DBG]  agent 106 => updateCollidingPairs => foundCollision
[DBG]  agent 108 => updateCollidingPairs => foundCollision
[DBG]  agent 118 => updateCollidingPairs => foundCollision
[DBG]  Conflicting agent pairs:
[DBG]  agent 11 is in conflict with agent 108
[DBG]  agent 19 is in conflict with agent 106
[DBG]  agent 19 is in conflict with agent 118
[DBG]  agent 28 is in conflict with agent 42
[DBG]  agent 28 is in conflict with agent 45
[DBG]  agent 28 is in conflict with agent 46
[DBG]  agent 28 is in conflict with agent 85
[DBG]  agent 28 is in conflict with agent 86
[DBG]  agent 28 is in conflict with agent 89
[DBG]  agent 28 is in conflict with agent 96
[DBG]  agent 35 is in conflict with agent 108
[DBG]  agent 46 is in conflict with agent 108
[DBG]  buildCollisionData() => sum_of_costs=4278, num_of_colliding_pairs=12
[DBG]  buildCollisionData done => sum_of_costs=4278, num_of_colliding_pairs=12
[DBG]  sum_of_cost hodnota: 4278
[DBG]  After skip/init build => iteration_stats.back(): sum_of_costs=4278, collisions=12
[DEBUG] Using default neighbor generation strategy for conflicts: 1
[DEBUG] Using default neighbor generation strategy for conflicts: 1
[DEBUG] Using default neighbor generation strategy for conflicts: 1
[DEBUG] Using default neighbor generation strategy for conflicts: 1
	InitLNS(PP): runtime = 0.00842992, iterations = 5, colliding pairs = 0, initial colliding pairs = 12, solution cost = 4287, initial solution cost = 4278, failed iterations = 0
[DBG]  init_lns->sum_of_costs after init_lns->run: 4287
[DBG]  sum_of_costs after assignment from init_lns->run: 4287
[DBG]  Recomputing sum_of_cost by dividing neighbor.sum_of_costs and neighbor.old_sum_of_costs
[STAT] sum_of_costs after recomputation: 4287
[STAT] Iteration 134
[DBG]  Random chance did not select SAT operator (r=90), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 134
[DBG]  Random chance did not select SAT operator (r=26), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 134
[DBG]  Random chance did not select SAT operator (r=79), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 134
[DBG]  Random chance did not select SAT operator (r=98), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 134
[DBG]  Random chance did not select SAT operator (r=12), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 134
[DBG]  Random chance did not select SAT operator (r=85), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 134
[DBG]  Random chance did not select SAT operator (r=75), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 134
[DBG]  Using SAT operator (destroy+repair SAT).
[DBG]  ====================
[DBG]  SAT destroy operator called.
[DBG]  SAT heuristic: 2
[DBG]  key_agent_id: 28
[DBG]  key_agent_id global path length: 52
[DBG]  Submap content (global positions):
[DBG]  563 564 565 566 567 
[DBG]  595 596 597 598 599 
[DBG]  627 628 629 630 631 
[DBG]  659 660 661 662 663 
[DBG]  691 692 693 694 695 
[DBG]  Map content with agents and obstacles:
[DBG]  . X . . X 
[DBG]  X A A X . 
[DBG]  . . A X . 
[DBG]  . . . X X 
[DBG]  . . X X X 
[DBG]  content of the map structure that we pass to the SAT solver:
[DBG]  1  -1  1  1  -1  
[DBG]  -1  1  1  -1  1  
[DBG]  1  1  1  -1  1  
[DBG]  1  1  1  -1  -1  
[DBG]  1  1  -1  -1  -1  
[DBG]  Identifying agents in a submap for rescheduling (when key_agent is there at the time 10):
[DBG]  Agent 28 found intervals in the sub-map:
[DBG]   [0..29]
[DBG]  Agent 28 (interval in submap: [0..29]) contains time 10, added to replan.
[DBG]  Agent 46 found intervals in the sub-map:
[DBG]   [6..11]
[DBG]  Agent 46 (interval in submap: [6..11]) contains time 10, added to replan.
[DBG]  Agent 74 found intervals in the sub-map:
[DBG]   [15..21]
[DBG]  Agent 74 is not in sub-map at time 10 (intervals: 
[DBG]  [15..21] )
[DBG]  Agent 89 found intervals in the sub-map:
[DBG]   [4..9]
[DBG]  Agent 89 is not in sub-map at time 10 (intervals: 
[DBG]  [4..9] )
[DBG]  Agent 91 found intervals in the sub-map:
[DBG]  
[DBG]  Agent 91 is not in sub-map at time 10 (intervals: 
[DBG]  )
[DBG]  Agent 135 found intervals in the sub-map:
[DBG]  
[DBG]  Agent 135 is not in sub-map at time 10 (intervals: 
[DBG]  )
[DBG]  Agent 137 found intervals in the sub-map:
[DBG]   [8..16]
[DBG]  Agent 137 (interval in submap: [8..16]) contains time 10, added to replan.
[DBG]  Agent 28 | Start (global): 629 -> (local): (2, 2) at time 10 | Goal (global): 692 -> (local): (4, 1) at time 29
[DBG]  Agent 46 | Start (global): 597 -> (local): (1, 2) at time 10 | Goal (global): 565 -> (local): (0, 2) at time 11
[DBG]  Agent 137 | Start (global): 596 -> (local): (1, 1) at time 10 | Goal (global): 659 -> (local): (3, 0) at time 16
[DBG]  [REPAIR] SAT destroy operator called.
[DBG]  [REPAIR] SAT operator – launching subproblem FOR OPTIMIZATION.
[DBG]  Creating local paths (sx, sy) in the submap for T_sync = 10
[DBG]    Agent 28 (global paths from T=10 to 29) has local path: (2,2) (2,2) (2,1) (1,1) (1,1) (1,1) (1,1) (1,1) (1,1) (1,1) (1,1) (1,2) (2,2) (2,2) (2,2) (2,2) (2,1) (2,1) (3,1) (4,1) 
[DBG]    Agent 46 (global paths from T=10 to 11) has local path: (1,2) (0,2) 
[DBG]    Agent 137 (global paths from T=10 to 16) has local path: (1,1) (2,1) (2,0) (2,0) (2,0) (2,0) (3,0) 
[DBG]  Checking input data for SAT solver:
[DBG]    - Number of agents to replan: 3
[DBG]  Agent 28 has the original local path length: 20 => Start (2,2), Goal (4,1)
[DBG]  Agent 46 has the original local path length: 2 => Start (1,2), Goal (0,2)
[DBG]  Agent 137 has the original local path length: 7 => Start (1,1), Goal (3,0)
[DBG]  Start position: (2, 2), (1, 2), (1, 1), 
[DBG]  Goal position: (4, 1), (0, 2), (3, 0), 
[DBG]  SAT instance and solver created.
Currently solving
Instance name: scen
Map name: map
Encoding used: disappear_at_goal
SAT solver used: Kissat
Optimizing function: sum of costs
Number of agents: 3
Mks LB: 4
SoC LB: 10
Delta: 0
Remaining time: 300000 [ms]

Found plan [agents = 3] [timesteps = 4]
Agent #0 : 8 12 11 14 
Agent #1 : 4 1 0 0 
Agent #2 : 3 7 6 10 

[STAT] Solver returned: 0
[DBG]  Agent (index) 28 | New local path (submap idx):
[DBG]  8 12 11 14 
[DBG]  Agent (index) 46 | New local path (submap idx):
[DBG]  4 1 
[DBG]  Agent (index) 137 | New local path (submap idx):
[DBG]  3 7 6 10 
[DBG]  Update the agent path 28 | Original local length: 20 | New local length: 4
[DBG]  agent 28 t=0 => decoded (sx,sy)=(2,2) => global_id=629
[DBG]  agent 28 t=1 => decoded (sx,sy)=(3,2) => global_id=661
[DBG]  agent 28 t=2 => decoded (sx,sy)=(3,1) => global_id=660
[DBG]  agent 28 t=3 => decoded (sx,sy)=(4,1) => global_id=692
[DBG]  Complete path of agent 28:
[DBG]    Original: 661 661 660 628 627 627 627 627 628 628 629 629 628 596 596 596 596 596 596 596 596 597 629 629 629 629 628 628 660 692 724 725 757 757 757 757 757 757 757 757 757 757 757 757 757 757 757 757 757 725 726 727 
[DBG]    New:     661 661 660 628 627 627 627 627 628 628 629 661 660 692 724 725 757 757 757 757 757 757 757 757 757 757 757 757 757 757 757 757 757 725 726 727 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 661 661 660 628 627 627 627 627 628 628 
[DBG]    Local path (in submap): 629 661 660 692 724 725 757 757 757 757 757 757 757 757 757 757 757 757 757 757 
[DBG]    Suffix (out of submap): 757 757 757 725 726 727 
[DBG]  Original agent path length 28 je: 52
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 0: 661, 661, 660, 628, 627, 627, 627, 627, 628, 628, 629, 661, 660, 692, 724, 725, 757, 757, 757, 757, 757, 757, 757, 757, 757, 757, 757, 757, 757, 757, 757, 757, 757, 725, 726, 727, 
[DBG]  Path for agent 28 updated, resulting length: 36
[DBG]  Update the agent path 46 | Original local length: 2 | New local length: 2
[DBG]  agent 46 t=0 => decoded (sx,sy)=(1,2) => global_id=597
[DBG]  agent 46 t=1 => decoded (sx,sy)=(0,2) => global_id=565
[DBG]  Complete path of agent 46:
[DBG]    Original: 786 787 788 788 756 724 692 660 661 629 597 565 533 534 502 503 504 472 473 474 475 443 444 445 413 381 349 317 285 284 252 
[DBG]    New:     786 787 788 788 756 724 692 660 661 629 597 565 533 534 502 503 504 472 473 474 475 443 444 445 413 381 349 317 285 284 252 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 786 787 788 788 756 724 692 660 661 629 
[DBG]    Local path (in submap): 597 565 
[DBG]    Suffix (out of submap): 533 534 502 503 504 472 473 474 475 443 444 445 413 381 349 317 285 284 252 
[DBG]  Original agent path length 46 je: 31
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 1: 786, 787, 788, 788, 756, 724, 692, 660, 661, 629, 597, 565, 533, 534, 502, 503, 504, 472, 473, 474, 475, 443, 444, 445, 413, 381, 349, 317, 285, 284, 252, 
[DBG]  Path for agent 46 updated, resulting length: 31
[DBG]  Update the agent path 137 | Original local length: 7 | New local length: 4
[DBG]  agent 137 t=0 => decoded (sx,sy)=(1,1) => global_id=596
[DBG]  agent 137 t=1 => decoded (sx,sy)=(2,1) => global_id=628
[DBG]  agent 137 t=2 => decoded (sx,sy)=(2,0) => global_id=627
[DBG]  agent 137 t=3 => decoded (sx,sy)=(3,0) => global_id=659
[DBG]  Complete path of agent 137:
[DBG]    Original: 538 506 505 504 503 502 534 533 565 597 596 628 627 627 627 627 659 658 657 689 721 753 752 751 783 782 781 780 780 779 778 777 809 808 807 806 805 804 803 802 801 800 832 864 865 897 929 930 931 932 
[DBG]    New:     538 506 505 504 503 502 534 533 565 597 596 628 627 659 658 657 689 721 753 752 751 783 782 781 780 780 779 778 777 809 808 807 806 805 804 803 802 801 800 832 864 865 897 929 930 931 932 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 538 506 505 504 503 502 534 533 565 597 
[DBG]    Local path (in submap): 596 628 627 659 658 657 689 
[DBG]    Suffix (out of submap): 721 753 752 751 783 782 781 780 780 779 778 777 809 808 807 806 805 804 803 802 801 800 832 864 865 897 929 930 931 932 
[DBG]  Original agent path length 137 je: 50
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 2: 538, 506, 505, 504, 503, 502, 534, 533, 565, 597, 596, 628, 627, 659, 658, 657, 689, 721, 753, 752, 751, 783, 782, 781, 780, 780, 779, 778, 777, 809, 808, 807, 806, 805, 804, 803, 802, 801, 800, 832, 864, 865, 897, 929, 930, 931, 932, 
[DBG]  Path for agent 137 updated, resulting length: 47
[DBG]  Paths successfully updated.
[DBG]  (LNS.cpp) New path for agent 28: 
[DBG]  661, 661, 660, 628, 627, 627, 627, 627, 628, 628, 629, 661, 660, 692, 724, 725, 757, 757, 757, 757, 757, 757, 757, 757, 757, 757, 757, 757, 757, 757, 757, 757, 757, 725, 726, 727, 
[DBG]  (LNS.cpp) New path for agent 46: 
[DBG]  786, 787, 788, 788, 756, 724, 692, 660, 661, 629, 597, 565, 533, 534, 502, 503, 504, 472, 473, 474, 475, 443, 444, 445, 413, 381, 349, 317, 285, 284, 252, 
[DBG]  (LNS.cpp) New path for agent 137: 
[DBG]  538, 506, 505, 504, 503, 502, 534, 533, 565, 597, 596, 628, 627, 659, 658, 657, 689, 721, 753, 752, 751, 783, 782, 781, 780, 780, 779, 778, 777, 809, 808, 807, 806, 805, 804, 803, 802, 801, 800, 832, 864, 865, 897, 929, 930, 931, 932, 
[DBG]  Delta value: 0.146154
[DBG]  Rewarding metric index = 1
[DBG]  component_weights = {6.6034e-07, 0.999999, 2.90846e-07, 5.04258e-07}
[DBG]  opSuccess value: 1
[STAT] neighbor.sum_of_costs before recomputation: 111
[STAT] neighbor.old_sum_of_costs before recomputation: 130
[STAT] sum_of_costs before recomputation: 4287
[DBG]  Validate solution immediately after SAT success.
[WARNING] Problem after SAT: Target conflict: agent 42 (len 51) traverses target of agent 28 (len 35) at location 727 at timestep 50
[DBG]  [DEBUG] Attempting immediate repair via init_lns because problem occurred after SAT (should be applied only for conflicts...).
[DBG]  [DEBUG] Passing 150 agents to init_lns (skip=true).
[DBG]  [DEBUG] path_table contents for selected agents (neighbor.agents):
[DBG]    Agent 28 => controlling path length=36
[DBG]    Agent 46 => controlling path length=31
[DBG]    Agent 137 => controlling path length=47
[DBG]  hodnota skip_initial_solution=1
[DBG]  We skip initialSolution => call buildCollisionData()
[DBG]  buildCollisionData() called – skip_initial_solution case.
[DBG]  Agents.size()=150, collision_graph.size()=150
[DBG]  agent 28 => updateCollidingPairs => foundCollision
[DBG]  agent 42 => updateCollidingPairs => foundCollision
[DBG]  agent 71 => updateCollidingPairs => foundCollision
[DBG]  agent 74 => updateCollidingPairs => foundCollision
[DBG]  agent 86 => updateCollidingPairs => foundCollision
[DBG]  agent 137 => updateCollidingPairs => foundCollision
[DBG]  agent 148 => updateCollidingPairs => foundCollision
[DBG]  Conflicting agent pairs:
[DBG]  agent 28 is in conflict with agent 42
[DBG]  agent 28 is in conflict with agent 86
[DBG]  agent 42 is in conflict with agent 137
[DBG]  agent 71 is in conflict with agent 137
[DBG]  agent 74 is in conflict with agent 137
[DBG]  agent 137 is in conflict with agent 148
[DBG]  buildCollisionData() => sum_of_costs=4268, num_of_colliding_pairs=6
[DBG]  buildCollisionData done => sum_of_costs=4268, num_of_colliding_pairs=6
[DBG]  sum_of_cost hodnota: 4268
[DBG]  After skip/init build => iteration_stats.back(): sum_of_costs=4268, collisions=6
[DEBUG] Using default neighbor generation strategy for conflicts: 0
[DEBUG] Using default neighbor generation strategy for conflicts: 0
	InitLNS(PP): runtime = 0.00318633, iterations = 3, colliding pairs = 0, initial colliding pairs = 6, solution cost = 4281, initial solution cost = 4268, failed iterations = 0
[DBG]  init_lns->sum_of_costs after init_lns->run: 4281
[DBG]  sum_of_costs after assignment from init_lns->run: 4281
[DBG]  Recomputing sum_of_cost by dividing neighbor.sum_of_costs and neighbor.old_sum_of_costs
[STAT] sum_of_costs after recomputation: 4281
[STAT] Iteration 135
[DBG]  Random chance did not select SAT operator (r=61), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 135
[DBG]  Random chance did not select SAT operator (r=14), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 135
[DBG]  Random chance did not select SAT operator (r=25), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 135
[DBG]  Random chance did not select SAT operator (r=16), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 135
[DBG]  Random chance did not select SAT operator (r=88), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 135
[DBG]  Random chance did not select SAT operator (r=24), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 135
[DBG]  Random chance did not select SAT operator (r=75), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 135
[DBG]  Using SAT operator (destroy+repair SAT).
[DBG]  ====================
[DBG]  SAT destroy operator called.
[DBG]  SAT heuristic: 2
[DBG]  key_agent_id: 28
[DBG]  key_agent_id global path length: 52
[DBG]  Submap content (global positions):
[DBG]  720 721 722 723 724 
[DBG]  752 753 754 755 756 
[DBG]  784 785 786 787 788 
[DBG]  816 817 818 819 820 
[DBG]  848 849 850 851 852 
[DBG]  Map content with agents and obstacles:
[DBG]  . . . X . 
[DBG]  A . X . . 
[DBG]  . X A . . 
[DBG]  X . . . . 
[DBG]  A . . . X 
[DBG]  content of the map structure that we pass to the SAT solver:
[DBG]  1  1  1  -1  1  
[DBG]  1  1  -1  1  1  
[DBG]  1  -1  1  1  1  
[DBG]  -1  1  1  1  1  
[DBG]  1  1  1  1  -1  
[DBG]  Identifying agents in a submap for rescheduling (when key_agent is there at the time 35):
[DBG]  Agent 3 found intervals in the sub-map:
[DBG]   [34..36]
[DBG]  Agent 3 (interval in submap: [34..36]) contains time 35, added to replan.
[DBG]  Agent 11 found intervals in the sub-map:
[DBG]   [23..25] [30..32]
[DBG]  Agent 11 is not in sub-map at time 35 (intervals: 
[DBG]  [23..25] [30..32] )
[DBG]  Agent 26 found intervals in the sub-map:
[DBG]   [31..33]
[DBG]  Agent 26 is not in sub-map at time 35 (intervals: 
[DBG]  [31..33] )
[DBG]  Agent 28 found intervals in the sub-map:
[DBG]   [29..48]
[DBG]  Agent 28 (interval in submap: [29..48]) contains time 35, added to replan.
[DBG]  Agent 57 found intervals in the sub-map:
[DBG]   [35..35]
[DBG]  Agent 57 (interval in submap: [35..35]) contains time 35, added to replan.
[DBG]  Agent 100 found intervals in the sub-map:
[DBG]  
[DBG]  Agent 100 is not in sub-map at time 35 (intervals: 
[DBG]  )
[DBG]  Agent 3 | Start (global): 752 -> (local): (1, 0) at time 35 | Goal (global): 784 -> (local): (2, 0) at time 36
[DBG]  Agent 28 | Start (global): 786 -> (local): (2, 2) at time 35 | Goal (global): 724 -> (local): (0, 4) at time 48
[DBG]  Agent 57 | Start (global): 848 -> (local): (4, 0) at time 35 | Goal (global): 848 -> (local): (4, 0) at time 35
[DBG]  [REPAIR] SAT destroy operator called.
[DBG]  [REPAIR] SAT operator – launching subproblem FOR OPTIMIZATION.
[DBG]  Creating local paths (sx, sy) in the submap for T_sync = 35
[DBG]    Agent 3 (global paths from T=35 to 36) has local path: (1,0) (2,0) 
[DBG]    Agent 28 (global paths from T=35 to 48) has local path: (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,3) (2,4) (1,4) (0,4) 
[DBG]    Agent 57 (global paths from T=35 to 35) has local path: (4,0) 
[DBG]  Checking input data for SAT solver:
[DBG]    - Number of agents to replan: 3
[DBG]  Agent 3 has the original local path length: 2 => Start (1,0), Goal (2,0)
[DBG]  Agent 28 has the original local path length: 14 => Start (2,2), Goal (0,4)
[DBG]  Agent 57 has the original local path length: 1 => Start (4,0), Goal (4,0)
[DBG]  Start position: (1, 0), (2, 2), (4, 0), 
[DBG]  Goal position: (2, 0), (0, 4), (4, 0), 
[DBG]  SAT instance and solver created.
Currently solving
Instance name: scen
Map name: map
Encoding used: disappear_at_goal
SAT solver used: Kissat
Optimizing function: sum of costs
Number of agents: 3
Mks LB: 5
SoC LB: 8
Delta: 0
Remaining time: 300000 [ms]

Vertex conflict! Agents 0, 2, timestep 2, location 0
Swapping conflict! Agents 0, 2, timestep 2, edge (0,0)
Vertex conflict! Agents 0, 2, timestep 3, location 0
Swapping conflict! Agents 0, 2, timestep 3, edge (0,0)
Vertex conflict! Agents 0, 2, timestep 4, location 0
Found plan [agents = 3] [timesteps = 5]
Agent #0 : 4 8 0 0 0 
Agent #1 : 9 10 11 7 3 
Agent #2 : 16 0 0 0 0 

[STAT] Solver returned: 0
[DBG]  Agent (index) 3 | New local path (submap idx):
[DBG]  4 8 
[DBG]  Agent (index) 28 | New local path (submap idx):
[DBG]  9 10 11 7 3 
[DBG]  Agent (index) 57 | New local path (submap idx):
[DBG]  16 
[DBG]  Update the agent path 3 | Original local length: 2 | New local length: 2
[DBG]  agent 3 t=0 => decoded (sx,sy)=(1,0) => global_id=752
[DBG]  agent 3 t=1 => decoded (sx,sy)=(2,0) => global_id=784
[DBG]  Complete path of agent 3:
[DBG]    Original: 468 468 468 468 468 468 468 467 435 435 435 435 435 467 468 469 470 502 534 502 501 469 468 467 499 531 530 529 561 593 625 657 689 688 720 752 784 783 815 847 879 880 912 
[DBG]    New:     468 468 468 468 468 468 468 467 435 435 435 435 435 467 468 469 470 502 534 502 501 469 468 467 499 531 530 529 561 593 625 657 689 688 720 752 784 783 815 847 879 880 912 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 468 468 468 468 468 468 468 467 435 435 435 435 435 467 468 469 470 502 534 502 501 469 468 467 499 531 530 529 561 593 625 657 689 688 720 
[DBG]    Local path (in submap): 752 784 
[DBG]    Suffix (out of submap): 783 815 847 879 880 912 
[DBG]  Original agent path length 3 je: 43
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 0: 468, 468, 468, 468, 468, 468, 468, 467, 435, 435, 435, 435, 435, 467, 468, 469, 470, 502, 534, 502, 501, 469, 468, 467, 499, 531, 530, 529, 561, 593, 625, 657, 689, 688, 720, 752, 784, 783, 815, 847, 879, 880, 912, 
[DBG]  Path for agent 3 updated, resulting length: 43
[DBG]  Update the agent path 28 | Original local length: 14 | New local length: 5
[DBG]  agent 28 t=0 => decoded (sx,sy)=(2,2) => global_id=786
[DBG]  agent 28 t=1 => decoded (sx,sy)=(2,3) => global_id=787
[DBG]  agent 28 t=2 => decoded (sx,sy)=(2,4) => global_id=788
[DBG]  agent 28 t=3 => decoded (sx,sy)=(1,4) => global_id=756
[DBG]  agent 28 t=4 => decoded (sx,sy)=(0,4) => global_id=724
[DBG]  Complete path of agent 28:
[DBG]    Original: 661 661 660 659 659 659 659 659 659 660 660 660 628 596 596 596 596 596 596 596 596 597 629 629 629 629 628 660 692 724 756 755 787 786 786 786 786 786 786 786 786 786 786 786 786 787 788 756 724 725 726 727 
[DBG]    New:     661 661 660 659 659 659 659 659 659 660 660 660 628 596 596 596 596 596 596 596 596 597 629 629 629 629 628 660 692 724 756 755 787 786 786 786 787 788 756 724 725 726 727 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 661 661 660 659 659 659 659 659 659 660 660 660 628 596 596 596 596 596 596 596 596 597 629 629 629 629 628 660 692 724 756 755 787 786 786 
[DBG]    Local path (in submap): 786 787 788 756 724 725 726 727 
[DBG]    Suffix (out of submap): 
[DBG]  Original agent path length 28 je: 52
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 1: 661, 661, 660, 659, 659, 659, 659, 659, 659, 660, 660, 660, 628, 596, 596, 596, 596, 596, 596, 596, 596, 597, 629, 629, 629, 629, 628, 660, 692, 724, 756, 755, 787, 786, 786, 786, 787, 788, 756, 724, 725, 726, 727, 
[DBG]  Path for agent 28 updated, resulting length: 43
[DBG]  Update the agent path 57 | Original local length: 1 | New local length: 1
[DBG]  agent 57 t=0 => decoded (sx,sy)=(4,0) => global_id=848
[DBG]  Complete path of agent 57:
[DBG]    Original: 185 217 216 215 247 279 278 310 309 341 373 373 405 404 403 402 401 433 465 464 496 528 529 561 593 625 657 656 655 687 719 751 783 815 847 848 880 912 944 976 977 
[DBG]    New:     185 217 216 215 247 279 278 310 309 341 373 373 405 404 403 402 401 433 465 464 496 528 529 561 593 625 657 656 655 687 719 751 783 815 847 848 880 912 944 976 977 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 185 217 216 215 247 279 278 310 309 341 373 373 405 404 403 402 401 433 465 464 496 528 529 561 593 625 657 656 655 687 719 751 783 815 847 
[DBG]    Local path (in submap): 848 
[DBG]    Suffix (out of submap): 880 912 944 976 977 
[DBG]  Original agent path length 57 je: 41
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 2: 185, 217, 216, 215, 247, 279, 278, 310, 309, 341, 373, 373, 405, 404, 403, 402, 401, 433, 465, 464, 496, 528, 529, 561, 593, 625, 657, 656, 655, 687, 719, 751, 783, 815, 847, 848, 880, 912, 944, 976, 977, 
[DBG]  Path for agent 57 updated, resulting length: 41
[DBG]  Paths successfully updated.
[DBG]  (LNS.cpp) New path for agent 3: 
[DBG]  468, 468, 468, 468, 468, 468, 468, 467, 435, 435, 435, 435, 435, 467, 468, 469, 470, 502, 534, 502, 501, 469, 468, 467, 499, 531, 530, 529, 561, 593, 625, 657, 689, 688, 720, 752, 784, 783, 815, 847, 879, 880, 912, 
[DBG]  (LNS.cpp) New path for agent 28: 
[DBG]  661, 661, 660, 659, 659, 659, 659, 659, 659, 660, 660, 660, 628, 596, 596, 596, 596, 596, 596, 596, 596, 597, 629, 629, 629, 629, 628, 660, 692, 724, 756, 755, 787, 786, 786, 786, 787, 788, 756, 724, 725, 726, 727, 
[DBG]  (LNS.cpp) New path for agent 57: 
[DBG]  185, 217, 216, 215, 247, 279, 278, 310, 309, 341, 373, 373, 405, 404, 403, 402, 401, 433, 465, 464, 496, 528, 529, 561, 593, 625, 657, 656, 655, 687, 719, 751, 783, 815, 847, 848, 880, 912, 944, 976, 977, 
[DBG]  Delta value: 0.0676692
[DBG]  Rewarding metric index = 1
[DBG]  component_weights = {5.87563e-07, 0.999999, 2.58791e-07, 4.48683e-07}
[DBG]  opSuccess value: 1
[STAT] neighbor.sum_of_costs before recomputation: 124
[STAT] neighbor.old_sum_of_costs before recomputation: 133
[STAT] sum_of_costs before recomputation: 4281
[DBG]  Validate solution immediately after SAT success.
[WARNING] Problem after SAT: Target conflict: agent 42 (len 51) traverses target of agent 28 (len 42) at location 727 at timestep 50
[DBG]  [DEBUG] Attempting immediate repair via init_lns because problem occurred after SAT (should be applied only for conflicts...).
[DBG]  [DEBUG] Passing 150 agents to init_lns (skip=true).
[DBG]  [DEBUG] path_table contents for selected agents (neighbor.agents):
[DBG]    Agent 3 => controlling path length=43
[DBG]    Agent 28 => controlling path length=43
[DBG]    Agent 57 => controlling path length=41
[DBG]  hodnota skip_initial_solution=1
[DBG]  We skip initialSolution => call buildCollisionData()
[DBG]  buildCollisionData() called – skip_initial_solution case.
[DBG]  Agents.size()=150, collision_graph.size()=150
[DBG]  agent 28 => updateCollidingPairs => foundCollision
[DBG]  agent 42 => updateCollidingPairs => foundCollision
[DBG]  Conflicting agent pairs:
[DBG]  agent 28 is in conflict with agent 42
[DBG]  buildCollisionData() => sum_of_costs=4272, num_of_colliding_pairs=1
[DBG]  buildCollisionData done => sum_of_costs=4272, num_of_colliding_pairs=1
[DBG]  sum_of_cost hodnota: 4272
[DBG]  After skip/init build => iteration_stats.back(): sum_of_costs=4272, collisions=1
[DEBUG] Using default neighbor generation strategy for conflicts: 1
[DEBUG] Using default neighbor generation strategy for conflicts: 0
	InitLNS(PP): runtime = 0.006122, iterations = 3, colliding pairs = 0, initial colliding pairs = 1, solution cost = 4324, initial solution cost = 4272, failed iterations = 0
[DBG]  init_lns->sum_of_costs after init_lns->run: 4324
[DBG]  sum_of_costs after assignment from init_lns->run: 4324
[DBG]  Recomputing sum_of_cost by dividing neighbor.sum_of_costs and neighbor.old_sum_of_costs
[STAT] sum_of_costs after recomputation: 4324
[STAT] Iteration 136
[DBG]  Random chance did not select SAT operator (r=47), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 136
[DBG]  Using SAT operator (destroy+repair SAT).
[DBG]  ====================
[DBG]  SAT destroy operator called.
[DBG]  SAT heuristic: 2
[DBG]  key_agent_id: 28
[DBG]  key_agent_id global path length: 53
[DBG]  Submap content (global positions):
[DBG]  530 531 532 533 534 
[DBG]  562 563 564 565 566 
[DBG]  594 595 596 597 598 
[DBG]  626 627 628 629 630 
[DBG]  658 659 660 661 662 
[DBG]  Map content with agents and obstacles:
[DBG]  . . X A A 
[DBG]  X . X . A 
[DBG]  . X A . X 
[DBG]  X . A A X 
[DBG]  A A A . X 
[DBG]  content of the map structure that we pass to the SAT solver:
[DBG]  1  1  -1  1  1  
[DBG]  -1  1  -1  1  1  
[DBG]  1  -1  1  1  -1  
[DBG]  -1  1  1  1  -1  
[DBG]  1  1  1  1  -1  
[DBG]  Identifying agents in a submap for rescheduling (when key_agent is there at the time 18):
[DBG]  Agent 3 found intervals in the sub-map:
[DBG]   [18..18] [25..26]
[DBG]  Agent 3 (interval in submap: [18..18]) contains time 18, added to replan.
[DBG]  Agent 28 found intervals in the sub-map:
[DBG]   [0..32]
[DBG]  Agent 28 (interval in submap: [0..32]) contains time 18, added to replan.
[DBG]  Agent 45 found intervals in the sub-map:
[DBG]  
[DBG]  Agent 45 is not in sub-map at time 18 (intervals: 
[DBG]  )
[DBG]  Agent 46 found intervals in the sub-map:
[DBG]   [7..19]
[DBG]  Agent 46 (interval in submap: [7..19]) contains time 18, added to replan.
[DBG]  Agent 57 found intervals in the sub-map:
[DBG]  
[DBG]  Agent 57 is not in sub-map at time 18 (intervals: 
[DBG]  )
[DBG]  Agent 61 found intervals in the sub-map:
[DBG]   [17..17]
[DBG]  Agent 61 is not in sub-map at time 18 (intervals: 
[DBG]  [17..17] )
[DBG]  Agent 62 found intervals in the sub-map:
[DBG]   [11..25]
[DBG]  Agent 62 (interval in submap: [11..25]) contains time 18, added to replan.
[DBG]  Agent 74 found intervals in the sub-map:
[DBG]   [14..22]
[DBG]  Agent 74 (interval in submap: [14..22]) contains time 18, added to replan.
[DBG]  Agent 86 found intervals in the sub-map:
[DBG]   [9..20]
[DBG]  Agent 86 (interval in submap: [9..20]) contains time 18, added to replan.
[DBG]  Agent 101 found intervals in the sub-map:
[DBG]   [17..19]
[DBG]  Agent 101 (interval in submap: [17..19]) contains time 18, added to replan.
[DBG]  Agent 119 found intervals in the sub-map:
[DBG]   [18..20]
[DBG]  Agent 119 (interval in submap: [18..20]) contains time 18, added to replan.
[DBG]  Agent 137 found intervals in the sub-map:
[DBG]   [17..18]
[DBG]  Agent 137 (interval in submap: [17..18]) contains time 18, added to replan.
[DBG]  Agent 3 | Start (global): 534 -> (local): (0, 4) at time 18 | Goal (global): 534 -> (local): (0, 4) at time 18
[DBG]  Agent 28 | Start (global): 596 -> (local): (2, 2) at time 18 | Goal (global): 660 -> (local): (4, 2) at time 32
[DBG]  Agent 46 | Start (global): 533 -> (local): (0, 3) at time 18 | Goal (global): 534 -> (local): (0, 4) at time 19
[DBG]  Agent 62 | Start (global): 628 -> (local): (3, 2) at time 18 | Goal (global): 533 -> (local): (0, 3) at time 25
[DBG]  Agent 74 | Start (global): 629 -> (local): (3, 3) at time 18 | Goal (global): 534 -> (local): (0, 4) at time 22
[DBG]  Agent 86 | Start (global): 566 -> (local): (1, 4) at time 18 | Goal (global): 534 -> (local): (0, 4) at time 20
[DBG]  Agent 101 | Start (global): 659 -> (local): (4, 1) at time 18 | Goal (global): 658 -> (local): (4, 0) at time 19
[DBG]  Agent 119 | Start (global): 660 -> (local): (4, 2) at time 18 | Goal (global): 658 -> (local): (4, 0) at time 20
[DBG]  Agent 137 | Start (global): 658 -> (local): (4, 0) at time 18 | Goal (global): 658 -> (local): (4, 0) at time 18
[DBG]  [REPAIR] SAT destroy operator called.
[DBG]  [REPAIR] SAT operator – launching subproblem FOR OPTIMIZATION.
[DBG]  Creating local paths (sx, sy) in the submap for T_sync = 18
[DBG]    Agent 3 (global paths from T=18 to 18) has local path: (0,4) 
[DBG]    Agent 28 (global paths from T=18 to 32) has local path: (2,2) (2,2) (2,2) (2,3) (3,3) (3,3) (3,3) (3,3) (3,2) (3,2) (3,2) (3,2) (3,2) (3,2) (4,2) 
[DBG]    Agent 46 (global paths from T=18 to 19) has local path: (0,3) (0,4) 
[DBG]    Agent 62 (global paths from T=18 to 25) has local path: (3,2) (3,3) (2,3) (1,3) (1,4) (0,4) (0,4) (0,3) 
[DBG]    Agent 74 (global paths from T=18 to 22) has local path: (3,3) (2,3) (1,3) (1,4) (0,4) 
[DBG]    Agent 86 (global paths from T=18 to 20) has local path: (1,4) (1,4) (0,4) 
[DBG]    Agent 101 (global paths from T=18 to 19) has local path: (4,1) (4,0) 
[DBG]    Agent 119 (global paths from T=18 to 20) has local path: (4,2) (4,1) (4,0) 
[DBG]    Agent 137 (global paths from T=18 to 18) has local path: (4,0) 
[DBG]  Checking input data for SAT solver:
[DBG]    - Number of agents to replan: 9
[DBG]  Agent 3 has the original local path length: 1 => Start (0,4), Goal (0,4)
[DBG]  Agent 28 has the original local path length: 15 => Start (2,2), Goal (4,2)
[DBG]  Agent 46 has the original local path length: 2 => Start (0,3), Goal (0,4)
[DBG]  Agent 62 has the original local path length: 8 => Start (3,2), Goal (0,3)
[DBG]  Agent 74 has the original local path length: 5 => Start (3,3), Goal (0,4)
[DBG]  Agent 86 has the original local path length: 3 => Start (1,4), Goal (0,4)
[DBG]  Agent 101 has the original local path length: 2 => Start (4,1), Goal (4,0)
[DBG]  Agent 119 has the original local path length: 3 => Start (4,2), Goal (4,0)
[DBG]  Agent 137 has the original local path length: 1 => Start (4,0), Goal (4,0)
[DBG]  Start position: (0, 4), (2, 2), (0, 3), (3, 2), (3, 3), (1, 4), (4, 1), (4, 2), (4, 0), 
[DBG]  Goal position: (0, 4), (4, 2), (0, 4), (0, 3), (0, 4), (0, 4), (4, 0), (4, 0), (4, 0), 
[DBG]  SAT instance and solver created.
Currently solving
Instance name: scen
Map name: map
Encoding used: disappear_at_goal
SAT solver used: Kissat
Optimizing function: sum of costs
Number of agents: 9
Mks LB: 5
SoC LB: 24
Delta: 0
Remaining time: 300000 [ms]

[STAT] Solver returned: -1
[DBG]  SAT solver failed.
[STAT] SAT solver failed to find a valid solution.
[DBG]  ====================
[DBG]  SAT destroy operator called.
[DBG]  SAT heuristic: 2
[DBG]  key_agent_id: 28
[DBG]  key_agent_id global path length: 53
[DBG]  Submap content (global positions):
[DBG]  595 596 597 598 599 
[DBG]  627 628 629 630 631 
[DBG]  659 660 661 662 663 
[DBG]  691 692 693 694 695 
[DBG]  723 724 725 726 727 
[DBG]  Map content with agents and obstacles:
[DBG]  X . . X . 
[DBG]  . A A X . 
[DBG]  . . A X X 
[DBG]  A . X X X 
[DBG]  X A . A . 
[DBG]  content of the map structure that we pass to the SAT solver:
[DBG]  -1  1  1  -1  1  
[DBG]  1  1  1  -1  1  
[DBG]  1  1  1  -1  -1  
[DBG]  1  1  -1  -1  -1  
[DBG]  -1  1  1  1  1  
[DBG]  Identifying agents in a submap for rescheduling (when key_agent is there at the time 14):
[DBG]  Agent 28 found intervals in the sub-map:
[DBG]   [0..34] [49..52]
[DBG]  Agent 28 (interval in submap: [0..34]) contains time 14, added to replan.
[DBG]  Agent 62 found intervals in the sub-map:
[DBG]   [12..20]
[DBG]  Agent 62 (interval in submap: [12..20]) contains time 14, added to replan.
[DBG]  Agent 86 found intervals in the sub-map:
[DBG]   [11..15]
[DBG]  Agent 86 (interval in submap: [11..15]) contains time 14, added to replan.
[DBG]  Agent 119 found intervals in the sub-map:
[DBG]   [13..19]
[DBG]  Agent 119 (interval in submap: [13..19]) contains time 14, added to replan.
[DBG]  Agent 135 found intervals in the sub-map:
[DBG]   [4..4] [7..16]
[DBG]  Agent 135 (interval in submap: [7..16]) contains time 14, added to replan.
[DBG]  Agent 137 found intervals in the sub-map:
[DBG]   [11..17]
[DBG]  Agent 137 (interval in submap: [11..17]) contains time 14, added to replan.
[DBG]  Agent 28 | Start (global): 661 -> (local): (2, 2) at time 14 | Goal (global): 724 -> (local): (4, 1) at time 34
[DBG]  Agent 62 | Start (global): 628 -> (local): (1, 1) at time 14 | Goal (global): 597 -> (local): (0, 2) at time 20
[DBG]  Agent 86 | Start (global): 629 -> (local): (1, 2) at time 14 | Goal (global): 597 -> (local): (0, 2) at time 15
[DBG]  Agent 119 | Start (global): 726 -> (local): (4, 3) at time 14 | Goal (global): 659 -> (local): (2, 0) at time 19
[DBG]  Agent 135 | Start (global): 691 -> (local): (3, 0) at time 14 | Goal (global): 659 -> (local): (2, 0) at time 16
[DBG]  Agent 137 | Start (global): 724 -> (local): (4, 1) at time 14 | Goal (global): 659 -> (local): (2, 0) at time 17
[DBG]  [REPAIR] SAT destroy operator called.
[DBG]  [REPAIR] SAT operator – launching subproblem FOR OPTIMIZATION.
[DBG]  Creating local paths (sx, sy) in the submap for T_sync = 14
[DBG]    Agent 28 (global paths from T=14 to 34) has local path: (2,2) (1,2) (1,1) (0,1) (0,1) (0,1) (0,1) (0,2) (1,2) (1,2) (1,2) (1,2) (1,1) (1,1) (1,1) (1,1) (1,1) (1,1) (2,1) (3,1) (4,1) 
[DBG]    Agent 62 (global paths from T=14 to 20) has local path: (1,1) (1,1) (1,0) (1,0) (1,1) (1,2) (0,2) 
[DBG]    Agent 86 (global paths from T=14 to 15) has local path: (1,2) (0,2) 
[DBG]    Agent 119 (global paths from T=14 to 19) has local path: (4,3) (4,2) (4,1) (3,1) (2,1) (2,0) 
[DBG]    Agent 135 (global paths from T=14 to 16) has local path: (3,0) (3,0) (2,0) 
[DBG]    Agent 137 (global paths from T=14 to 17) has local path: (4,1) (3,1) (3,0) (2,0) 
[DBG]  Checking input data for SAT solver:
[DBG]    - Number of agents to replan: 6
[DBG]  Agent 28 has the original local path length: 21 => Start (2,2), Goal (4,1)
[DBG]  Agent 62 has the original local path length: 7 => Start (1,1), Goal (0,2)
[DBG]  Agent 86 has the original local path length: 2 => Start (1,2), Goal (0,2)
[DBG]  Agent 119 has the original local path length: 6 => Start (4,3), Goal (2,0)
[DBG]  Agent 135 has the original local path length: 3 => Start (3,0), Goal (2,0)
[DBG]  Agent 137 has the original local path length: 4 => Start (4,1), Goal (2,0)
[DBG]  Start position: (2, 2), (1, 1), (1, 2), (4, 3), (3, 0), (4, 1), 
[DBG]  Goal position: (4, 1), (0, 2), (0, 2), (2, 0), (2, 0), (2, 0), 
[DBG]  SAT instance and solver created.
Currently solving
Instance name: scen
Map name: map
Encoding used: disappear_at_goal
SAT solver used: Kissat
Optimizing function: sum of costs
Number of agents: 6
Mks LB: 6
SoC LB: 21
Delta: 0
Remaining time: 300000 [ms]

[STAT] Solver returned: -1
[DBG]  SAT solver failed.
[STAT] SAT solver failed to find a valid solution.
[DBG]  ====================
[DBG]  SAT destroy operator called.
[DBG]  SAT heuristic: 2
[DBG]  key_agent_id: 28
[DBG]  key_agent_id global path length: 53
[DBG]  Submap content (global positions):
[DBG]  563 564 565 566 567 
[DBG]  595 596 597 598 599 
[DBG]  627 628 629 630 631 
[DBG]  659 660 661 662 663 
[DBG]  691 692 693 694 695 
[DBG]  Map content with agents and obstacles:
[DBG]  . X . . X 
[DBG]  X . A X . 
[DBG]  . . A X . 
[DBG]  . . . X X 
[DBG]  . . X X X 
[DBG]  content of the map structure that we pass to the SAT solver:
[DBG]  1  -1  1  1  -1  
[DBG]  -1  1  1  -1  1  
[DBG]  1  1  1  -1  1  
[DBG]  1  1  1  -1  -1  
[DBG]  1  1  -1  -1  -1  
[DBG]  Identifying agents in a submap for rescheduling (when key_agent is there at the time 23):
[DBG]  Agent 28 found intervals in the sub-map:
[DBG]   [0..33]
[DBG]  Agent 28 (interval in submap: [0..33]) contains time 23, added to replan.
[DBG]  Agent 30 found intervals in the sub-map:
[DBG]   [16..21]
[DBG]  Agent 30 is not in sub-map at time 23 (intervals: 
[DBG]  [16..21] )
[DBG]  Agent 53 found intervals in the sub-map:
[DBG]   [22..27]
[DBG]  Agent 53 (interval in submap: [22..27]) contains time 23, added to replan.
[DBG]  Agent 144 found intervals in the sub-map:
[DBG]   [24..24]
[DBG]  Agent 144 is not in sub-map at time 23 (intervals: 
[DBG]  [24..24] )
[DBG]  Agent 28 | Start (global): 629 -> (local): (2, 2) at time 23 | Goal (global): 692 -> (local): (4, 1) at time 33
[DBG]  Agent 53 | Start (global): 597 -> (local): (1, 2) at time 23 | Goal (global): 692 -> (local): (4, 1) at time 27
[DBG]  [REPAIR] SAT destroy operator called.
[DBG]  [REPAIR] SAT operator – launching subproblem FOR OPTIMIZATION.
[DBG]  Creating local paths (sx, sy) in the submap for T_sync = 23
[DBG]    Agent 28 (global paths from T=23 to 33) has local path: (2,2) (2,2) (2,2) (2,1) (2,1) (2,1) (2,1) (2,1) (2,1) (3,1) (4,1) 
[DBG]    Agent 53 (global paths from T=23 to 27) has local path: (1,2) (1,1) (2,1) (3,1) (4,1) 
[DBG]  Checking input data for SAT solver:
[DBG]    - Number of agents to replan: 2
[DBG]  Agent 28 has the original local path length: 11 => Start (2,2), Goal (4,1)
[DBG]  Agent 53 has the original local path length: 5 => Start (1,2), Goal (4,1)
[DBG]  Start position: (2, 2), (1, 2), 
[DBG]  Goal position: (4, 1), (4, 1), 
[DBG]  SAT instance and solver created.
Currently solving
Instance name: scen
Map name: map
Encoding used: disappear_at_goal
SAT solver used: Kissat
Optimizing function: sum of costs
Number of agents: 2
Mks LB: 5
SoC LB: 9
Delta: 0
Remaining time: 300000 [ms]

Found plan [agents = 2] [timesteps = 5]
Agent #0 : 8 12 11 14 0 
Agent #1 : 4 8 12 11 14 

[STAT] Solver returned: 0
[DBG]  Agent (index) 28 | New local path (submap idx):
[DBG]  8 12 11 14 
[DBG]  Agent (index) 53 | New local path (submap idx):
[DBG]  4 8 12 11 14 
[DBG]  Update the agent path 28 | Original local length: 11 | New local length: 4
[DBG]  agent 28 t=0 => decoded (sx,sy)=(2,2) => global_id=629
[DBG]  agent 28 t=1 => decoded (sx,sy)=(3,2) => global_id=661
[DBG]  agent 28 t=2 => decoded (sx,sy)=(3,1) => global_id=660
[DBG]  agent 28 t=3 => decoded (sx,sy)=(4,1) => global_id=692
[DBG]  Complete path of agent 28:
[DBG]    Original: 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 629 628 596 596 596 596 597 629 629 629 629 628 628 628 628 628 628 660 692 724 756 755 755 755 755 755 755 755 755 755 755 755 755 756 724 725 726 727 
[DBG]    New:     661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 629 628 596 596 596 596 597 629 629 661 660 692 724 756 755 755 755 755 755 755 755 755 755 755 755 755 756 724 725 726 727 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 629 628 596 596 596 596 597 629 
[DBG]    Local path (in submap): 629 661 660 692 724 756 755 755 755 755 755 
[DBG]    Suffix (out of submap): 755 755 755 755 755 755 755 756 724 725 726 727 
[DBG]  Original agent path length 28 je: 53
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 0: 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 629, 628, 596, 596, 596, 596, 597, 629, 629, 661, 660, 692, 724, 756, 755, 755, 755, 755, 755, 755, 755, 755, 755, 755, 755, 755, 756, 724, 725, 726, 727, 
[DBG]  Path for agent 28 updated, resulting length: 46
[DBG]  Update the agent path 53 | Original local length: 5 | New local length: 5
[DBG]  agent 53 t=0 => decoded (sx,sy)=(1,2) => global_id=597
[DBG]  agent 53 t=1 => decoded (sx,sy)=(2,2) => global_id=629
[DBG]  agent 53 t=2 => decoded (sx,sy)=(3,2) => global_id=661
[DBG]  agent 53 t=3 => decoded (sx,sy)=(3,1) => global_id=660
[DBG]  agent 53 t=4 => decoded (sx,sy)=(4,1) => global_id=692
[DBG]  Complete path of agent 53:
[DBG]    Original: 84 116 148 148 180 212 244 276 277 309 341 341 373 373 373 405 437 437 469 501 533 533 565 597 596 628 660 692 724 756 788 820 821 
[DBG]    New:     84 116 148 148 180 212 244 276 277 309 341 341 373 373 373 405 437 437 469 501 533 533 565 597 629 661 660 692 724 756 788 820 821 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 84 116 148 148 180 212 244 276 277 309 341 341 373 373 373 405 437 437 469 501 533 533 565 
[DBG]    Local path (in submap): 597 629 661 660 692 
[DBG]    Suffix (out of submap): 724 756 788 820 821 
[DBG]  Original agent path length 53 je: 33
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 1: 84, 116, 148, 148, 180, 212, 244, 276, 277, 309, 341, 341, 373, 373, 373, 405, 437, 437, 469, 501, 533, 533, 565, 597, 629, 661, 660, 692, 724, 756, 788, 820, 821, 
[DBG]  Path for agent 53 updated, resulting length: 33
[DBG]  Paths successfully updated.
[DBG]  (LNS.cpp) New path for agent 28: 
[DBG]  661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 629, 628, 596, 596, 596, 596, 597, 629, 629, 661, 660, 692, 724, 756, 755, 755, 755, 755, 755, 755, 755, 755, 755, 755, 755, 755, 756, 724, 725, 726, 727, 
[DBG]  (LNS.cpp) New path for agent 53: 
[DBG]  84, 116, 148, 148, 180, 212, 244, 276, 277, 309, 341, 341, 373, 373, 373, 405, 437, 437, 469, 501, 533, 533, 565, 597, 629, 661, 660, 692, 724, 756, 788, 820, 821, 
[DBG]  Delta value: 0.0833333
[DBG]  Rewarding metric index = 1
[DBG]  component_weights = {5.15248e-07, 0.999999, 2.2694e-07, 3.93461e-07}
[DBG]  opSuccess value: 1
[STAT] neighbor.sum_of_costs before recomputation: 77
[STAT] neighbor.old_sum_of_costs before recomputation: 84
[STAT] sum_of_costs before recomputation: 4324
[DBG]  Validate solution immediately after SAT success.
[WARNING] Problem after SAT: Vertex conflict between agents 28 and 26 at location 756 at timestep 41
[DBG]  [DEBUG] Attempting immediate repair via init_lns because problem occurred after SAT (should be applied only for conflicts...).
[DBG]  [DEBUG] Passing 150 agents to init_lns (skip=true).
[DBG]  [DEBUG] path_table contents for selected agents (neighbor.agents):
[DBG]    Agent 28 => controlling path length=46
[DBG]    Agent 53 => controlling path length=33
[DBG]  hodnota skip_initial_solution=1
[DBG]  We skip initialSolution => call buildCollisionData()
[DBG]  buildCollisionData() called – skip_initial_solution case.
[DBG]  Agents.size()=150, collision_graph.size()=150
[DBG]  agent 26 => updateCollidingPairs => foundCollision
[DBG]  agent 28 => updateCollidingPairs => foundCollision
[DBG]  agent 42 => updateCollidingPairs => foundCollision
[DBG]  Conflicting agent pairs:
[DBG]  agent 26 is in conflict with agent 28
[DBG]  agent 28 is in conflict with agent 42
[DBG]  buildCollisionData() => sum_of_costs=4317, num_of_colliding_pairs=2
[DBG]  buildCollisionData done => sum_of_costs=4317, num_of_colliding_pairs=2
[DBG]  sum_of_cost hodnota: 4317
[DBG]  After skip/init build => iteration_stats.back(): sum_of_costs=4317, collisions=2
[DEBUG] Using default neighbor generation strategy for conflicts: 1
	InitLNS(PP): runtime = 0.00355217, iterations = 2, colliding pairs = 0, initial colliding pairs = 2, solution cost = 4360, initial solution cost = 4317, failed iterations = 0
[DBG]  init_lns->sum_of_costs after init_lns->run: 4360
[DBG]  sum_of_costs after assignment from init_lns->run: 4360
[DBG]  Recomputing sum_of_cost by dividing neighbor.sum_of_costs and neighbor.old_sum_of_costs
[STAT] sum_of_costs after recomputation: 4360
[STAT] Iteration 137
[DBG]  Random chance did not select SAT operator (r=74), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 137
[DBG]  Random chance did not select SAT operator (r=14), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 137
[DBG]  Random chance did not select SAT operator (r=36), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 137
[DBG]  Random chance did not select SAT operator (r=66), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 137
[DBG]  Random chance did not select SAT operator (r=83), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 137
[DBG]  Random chance did not select SAT operator (r=66), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 137
[DBG]  Random chance did not select SAT operator (r=38), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 137
[DBG]  Random chance did not select SAT operator (r=66), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 137
[DBG]  Random chance did not select SAT operator (r=90), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 137
[DBG]  Random chance did not select SAT operator (r=43), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 137
[DBG]  Random chance did not select SAT operator (r=53), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 137
[DBG]  Random chance did not select SAT operator (r=75), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 137
[DBG]  Random chance did not select SAT operator (r=82), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 137
[DBG]  Using SAT operator (destroy+repair SAT).
[DBG]  ====================
[DBG]  SAT destroy operator called.
[DBG]  SAT heuristic: 2
[DBG]  key_agent_id: 28
[DBG]  key_agent_id global path length: 62
[DBG]  Submap content (global positions):
[DBG]  595 596 597 598 599 
[DBG]  627 628 629 630 631 
[DBG]  659 660 661 662 663 
[DBG]  691 692 693 694 695 
[DBG]  723 724 725 726 727 
[DBG]  Map content with agents and obstacles:
[DBG]  X . . X . 
[DBG]  . . . X . 
[DBG]  . . A X X 
[DBG]  . A X X X 
[DBG]  X A . . . 
[DBG]  content of the map structure that we pass to the SAT solver:
[DBG]  -1  1  1  -1  1  
[DBG]  1  1  1  -1  1  
[DBG]  1  1  1  -1  -1  
[DBG]  1  1  -1  -1  -1  
[DBG]  -1  1  1  1  1  
[DBG]  Identifying agents in a submap for rescheduling (when key_agent is there at the time 2):
[DBG]  Agent 7 found intervals in the sub-map:
[DBG]   [1..2]
[DBG]  Agent 7 (interval in submap: [1..2]) contains time 2, added to replan.
[DBG]  Agent 28 found intervals in the sub-map:
[DBG]   [0..61]
[DBG]  Agent 28 (interval in submap: [0..61]) contains time 2, added to replan.
[DBG]  Agent 108 found intervals in the sub-map:
[DBG]   [0..6]
[DBG]  Agent 108 (interval in submap: [0..6]) contains time 2, added to replan.
[DBG]  Agent 7 | Start (global): 724 -> (local): (4, 1) at time 2 | Goal (global): 724 -> (local): (4, 1) at time 2
[DBG]  Agent 28 | Start (global): 661 -> (local): (2, 2) at time 2 | Goal (global): 727 -> (local): (4, 4) at time 61
[DBG]  Agent 108 | Start (global): 692 -> (local): (3, 1) at time 2 | Goal (global): 724 -> (local): (4, 1) at time 6
[DBG]  [REPAIR] SAT destroy operator called.
[DBG]  [REPAIR] SAT operator – launching subproblem FOR OPTIMIZATION.
[DBG]  Creating local paths (sx, sy) in the submap for T_sync = 2
[DBG]    Agent 7 (global paths from T=2 to 2) has local path: (4,1) 
[DBG]    Agent 28 (global paths from T=2 to 61) has local path: (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (1,2) (1,1) (0,1) (0,1) (0,1) (0,1) (0,1) (0,1) (0,1) (0,2) (1,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,1) (3,1) (4,1) (4,1) (4,1) (4,1) (4,1) (4,1) (4,1) (4,1) (4,1) (4,1) (4,1) (4,1) (4,1) (4,1) (4,1) (4,1) (4,1) (4,1) (4,1) (4,1) (4,1) (4,1) (4,1) (4,1) (4,1) (4,2) (4,3) (4,4) 
[DBG]    Agent 108 (global paths from T=2 to 6) has local path: (3,1) (4,1) (4,1) (4,2) (4,1) 
[DBG]  Checking input data for SAT solver:
[DBG]    - Number of agents to replan: 3
[DBG]  Agent 7 has the original local path length: 1 => Start (4,1), Goal (4,1)
[DBG]  Agent 28 has the original local path length: 60 => Start (2,2), Goal (4,4)
[DBG]  Agent 108 has the original local path length: 5 => Start (3,1), Goal (4,1)
[DBG]  Start position: (4, 1), (2, 2), (3, 1), 
[DBG]  Goal position: (4, 1), (4, 4), (4, 1), 
[DBG]  SAT instance and solver created.
Currently solving
Instance name: scen
Map name: map
Encoding used: disappear_at_goal
SAT solver used: Kissat
Optimizing function: sum of costs
Number of agents: 3
Mks LB: 7
SoC LB: 10
Delta: 0
Remaining time: 300000 [ms]

Vertex conflict! Agents 0, 2, timestep 2, location 0
Swapping conflict! Agents 0, 2, timestep 2, edge (0,0)
Vertex conflict! Agents 0, 2, timestep 3, location 0
Swapping conflict! Agents 0, 2, timestep 3, edge (0,0)
Vertex conflict! Agents 0, 2, timestep 4, location 0
Swapping conflict! Agents 0, 2, timestep 4, edge (0,0)
Vertex conflict! Agents 0, 2, timestep 5, location 0
Swapping conflict! Agents 0, 2, timestep 5, edge (0,0)
Vertex conflict! Agents 0, 2, timestep 6, location 0
Found plan [agents = 3] [timesteps = 7]
Agent #0 : 12 0 0 0 0 0 0 
Agent #1 : 9 8 11 12 13 14 15 
Agent #2 : 11 12 0 0 0 0 0 

[STAT] Solver returned: 0
[DBG]  Agent (index) 7 | New local path (submap idx):
[DBG]  12 
[DBG]  Agent (index) 28 | New local path (submap idx):
[DBG]  9 8 11 12 13 14 15 
[DBG]  Agent (index) 108 | New local path (submap idx):
[DBG]  11 12 
[DBG]  Update the agent path 7 | Original local length: 1 | New local length: 1
[DBG]  agent 7 t=0 => decoded (sx,sy)=(4,1) => global_id=724
[DBG]  Complete path of agent 7:
[DBG]    Original: 756 724 724 756 755 756 756 788 820 821 822 823 824 856 857 889 921 
[DBG]    New:     756 724 724 756 755 756 756 788 820 821 822 823 824 856 857 889 921 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 756 724 
[DBG]    Local path (in submap): 724 
[DBG]    Suffix (out of submap): 756 755 756 756 788 820 821 822 823 824 856 857 889 921 
[DBG]  Original agent path length 7 je: 17
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 0: 756, 724, 724, 756, 755, 756, 756, 788, 820, 821, 822, 823, 824, 856, 857, 889, 921, 
[DBG]  Path for agent 7 updated, resulting length: 17
[DBG]  Update the agent path 28 | Original local length: 60 | New local length: 7
[DBG]  agent 28 t=0 => decoded (sx,sy)=(2,2) => global_id=661
[DBG]  agent 28 t=1 => decoded (sx,sy)=(2,1) => global_id=660
[DBG]  agent 28 t=2 => decoded (sx,sy)=(3,1) => global_id=692
[DBG]  agent 28 t=3 => decoded (sx,sy)=(4,1) => global_id=724
[DBG]  agent 28 t=4 => decoded (sx,sy)=(4,2) => global_id=725
[DBG]  agent 28 t=5 => decoded (sx,sy)=(4,3) => global_id=726
[DBG]  agent 28 t=6 => decoded (sx,sy)=(4,4) => global_id=727
[DBG]  Complete path of agent 28:
[DBG]    Original: 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 629 628 596 596 596 596 596 596 596 597 629 661 661 661 661 661 661 660 692 724 724 724 724 724 724 724 724 724 724 724 724 724 724 724 724 724 724 724 724 724 724 724 724 724 725 726 727 
[DBG]    New:     661 661 661 660 692 724 725 726 727 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 661 661 
[DBG]    Local path (in submap): 661 660 692 724 725 726 727 
[DBG]    Suffix (out of submap): 
[DBG]  Original agent path length 28 je: 62
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 1: 661, 661, 661, 660, 692, 724, 725, 726, 727, 
[DBG]  Path for agent 28 updated, resulting length: 9
[DBG]  Update the agent path 108 | Original local length: 5 | New local length: 2
[DBG]  agent 108 t=0 => decoded (sx,sy)=(3,1) => global_id=692
[DBG]  agent 108 t=1 => decoded (sx,sy)=(4,1) => global_id=724
[DBG]  Complete path of agent 108:
[DBG]    Original: 628 660 692 724 724 725 724 756 788 820 821 822 823 824 856 857 858 859 860 892 924 956 957 989 1021 
[DBG]    New:     628 660 692 724 756 788 820 821 822 823 824 856 857 858 859 860 892 924 956 957 989 1021 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 628 660 
[DBG]    Local path (in submap): 692 724 756 788 820 
[DBG]    Suffix (out of submap): 821 822 823 824 856 857 858 859 860 892 924 956 957 989 1021 
[DBG]  Original agent path length 108 je: 25
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 2: 628, 660, 692, 724, 756, 788, 820, 821, 822, 823, 824, 856, 857, 858, 859, 860, 892, 924, 956, 957, 989, 1021, 
[DBG]  Path for agent 108 updated, resulting length: 22
[DBG]  Paths successfully updated.
[DBG]  (LNS.cpp) New path for agent 7: 
[DBG]  756, 724, 724, 756, 755, 756, 756, 788, 820, 821, 822, 823, 824, 856, 857, 889, 921, 
[DBG]  (LNS.cpp) New path for agent 28: 
[DBG]  661, 661, 661, 660, 692, 724, 725, 726, 727, 
[DBG]  (LNS.cpp) New path for agent 108: 
[DBG]  628, 660, 692, 724, 756, 788, 820, 821, 822, 823, 824, 856, 857, 858, 859, 860, 892, 924, 956, 957, 989, 1021, 
[DBG]  Delta value: 0.554455
[DBG]  Rewarding metric index = 1
[DBG]  component_weights = {3.14892e-07, 0.999999, 1.38694e-07, 2.40462e-07}
[DBG]  opSuccess value: 1
[STAT] neighbor.sum_of_costs before recomputation: 45
[STAT] neighbor.old_sum_of_costs before recomputation: 101
[STAT] sum_of_costs before recomputation: 4360
[DBG]  Validate solution immediately after SAT success.
[WARNING] Problem after SAT: Target conflict: agent 11 (len 37) traverses target of agent 28 (len 8) at location 727 at timestep 23
[DBG]  [DEBUG] Attempting immediate repair via init_lns because problem occurred after SAT (should be applied only for conflicts...).
[DBG]  [DEBUG] Passing 150 agents to init_lns (skip=true).
[DBG]  [DEBUG] path_table contents for selected agents (neighbor.agents):
[DBG]    Agent 7 => controlling path length=17
[DBG]    Agent 28 => controlling path length=9
[DBG]    Agent 108 => controlling path length=22
[DBG]  hodnota skip_initial_solution=1
[DBG]  We skip initialSolution => call buildCollisionData()
[DBG]  buildCollisionData() called – skip_initial_solution case.
[DBG]  Agents.size()=150, collision_graph.size()=150
[DBG]  agent 11 => updateCollidingPairs => foundCollision
[DBG]  agent 24 => updateCollidingPairs => foundCollision
[DBG]  agent 28 => updateCollidingPairs => foundCollision
[DBG]  agent 35 => updateCollidingPairs => foundCollision
[DBG]  agent 38 => updateCollidingPairs => foundCollision
[DBG]  agent 42 => updateCollidingPairs => foundCollision
[DBG]  agent 46 => updateCollidingPairs => foundCollision
[DBG]  agent 70 => updateCollidingPairs => foundCollision
[DBG]  agent 108 => updateCollidingPairs => foundCollision
[DBG]  agent 119 => updateCollidingPairs => foundCollision
[DBG]  agent 135 => updateCollidingPairs => foundCollision
[DBG]  agent 137 => updateCollidingPairs => foundCollision
[DBG]  Conflicting agent pairs:
[DBG]  agent 11 is in conflict with agent 28
[DBG]  agent 24 is in conflict with agent 108
[DBG]  agent 28 is in conflict with agent 42
[DBG]  agent 28 is in conflict with agent 46
[DBG]  agent 28 is in conflict with agent 70
[DBG]  agent 28 is in conflict with agent 119
[DBG]  agent 28 is in conflict with agent 135
[DBG]  agent 28 is in conflict with agent 137
[DBG]  agent 35 is in conflict with agent 108
[DBG]  agent 38 is in conflict with agent 108
[DBG]  agent 46 is in conflict with agent 108
[DBG]  buildCollisionData() => sum_of_costs=4304, num_of_colliding_pairs=11
[DBG]  buildCollisionData done => sum_of_costs=4304, num_of_colliding_pairs=11
[DBG]  sum_of_cost hodnota: 4304
[DBG]  After skip/init build => iteration_stats.back(): sum_of_costs=4304, collisions=11
[DEBUG] Using default neighbor generation strategy for conflicts: 2
[DEBUG] Using default neighbor generation strategy for conflicts: 0
[DEBUG] Using default neighbor generation strategy for conflicts: 0
[DEBUG] Using default neighbor generation strategy for conflicts: 1
[DEBUG] Using default neighbor generation strategy for conflicts: 0
	InitLNS(PP): runtime = 0.00841946, iterations = 6, colliding pairs = 0, initial colliding pairs = 11, solution cost = 4368, initial solution cost = 4304, failed iterations = 0
[DBG]  init_lns->sum_of_costs after init_lns->run: 4368
[DBG]  sum_of_costs after assignment from init_lns->run: 4368
[DBG]  Recomputing sum_of_cost by dividing neighbor.sum_of_costs and neighbor.old_sum_of_costs
[STAT] sum_of_costs after recomputation: 4368
[STAT] Iteration 138
[DBG]  Random chance did not select SAT operator (r=90), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 138
[DBG]  Random chance did not select SAT operator (r=23), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 138
[DBG]  Random chance did not select SAT operator (r=50), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 138
[DBG]  Random chance did not select SAT operator (r=41), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 138
[DBG]  Random chance did not select SAT operator (r=62), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 138
[DBG]  Random chance did not select SAT operator (r=95), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 138
[DBG]  Random chance did not select SAT operator (r=99), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 138
[DBG]  Random chance did not select SAT operator (r=31), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 138
[DBG]  Random chance did not select SAT operator (r=45), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 138
[DBG]  Random chance did not select SAT operator (r=51), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 138
[DBG]  Random chance did not select SAT operator (r=69), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 138
[DBG]  Using SAT operator (destroy+repair SAT).
[DBG]  ====================
[DBG]  SAT destroy operator called.
[DBG]  SAT heuristic: 2
[DBG]  key_agent_id: 28
[DBG]  key_agent_id global path length: 57
[DBG]  Submap content (global positions):
[DBG]  595 596 597 598 599 
[DBG]  627 628 629 630 631 
[DBG]  659 660 661 662 663 
[DBG]  691 692 693 694 695 
[DBG]  723 724 725 726 727 
[DBG]  Map content with agents and obstacles:
[DBG]  X . . X . 
[DBG]  . A . X . 
[DBG]  . A A X X 
[DBG]  . A X X X 
[DBG]  X . . A . 
[DBG]  content of the map structure that we pass to the SAT solver:
[DBG]  -1  1  1  -1  1  
[DBG]  1  1  1  -1  1  
[DBG]  1  1  1  -1  -1  
[DBG]  1  1  -1  -1  -1  
[DBG]  -1  1  1  1  1  
[DBG]  Identifying agents in a submap for rescheduling (when key_agent is there at the time 12):
[DBG]  Agent 28 found intervals in the sub-map:
[DBG]   [0..56]
[DBG]  Agent 28 (interval in submap: [0..56]) contains time 12, added to replan.
[DBG]  Agent 46 found intervals in the sub-map:
[DBG]   [5..10]
[DBG]  Agent 46 is not in sub-map at time 12 (intervals: 
[DBG]  [5..10] )
[DBG]  Agent 62 found intervals in the sub-map:
[DBG]   [14..20]
[DBG]  Agent 62 is not in sub-map at time 12 (intervals: 
[DBG]  [14..20] )
[DBG]  Agent 70 found intervals in the sub-map:
[DBG]   [11..13]
[DBG]  Agent 70 (interval in submap: [11..13]) contains time 12, added to replan.
[DBG]  Agent 86 found intervals in the sub-map:
[DBG]   [10..14]
[DBG]  Agent 86 (interval in submap: [10..14]) contains time 12, added to replan.
[DBG]  Agent 89 found intervals in the sub-map:
[DBG]   [5..15]
[DBG]  Agent 89 (interval in submap: [5..15]) contains time 12, added to replan.
[DBG]  Agent 135 found intervals in the sub-map:
[DBG]   [4..4] [7..16]
[DBG]  Agent 135 (interval in submap: [7..16]) contains time 12, added to replan.
[DBG]  Agent 137 found intervals in the sub-map:
[DBG]  
[DBG]  Agent 137 is not in sub-map at time 12 (intervals: 
[DBG]  )
[DBG]  Agent 28 | Start (global): 661 -> (local): (2, 2) at time 12 | Goal (global): 727 -> (local): (4, 4) at time 56
[DBG]  Agent 70 | Start (global): 726 -> (local): (4, 3) at time 12 | Goal (global): 725 -> (local): (4, 2) at time 13
[DBG]  Agent 86 | Start (global): 628 -> (local): (1, 1) at time 12 | Goal (global): 597 -> (local): (0, 2) at time 14
[DBG]  Agent 89 | Start (global): 660 -> (local): (2, 1) at time 12 | Goal (global): 725 -> (local): (4, 2) at time 15
[DBG]  Agent 135 | Start (global): 692 -> (local): (3, 1) at time 12 | Goal (global): 659 -> (local): (2, 0) at time 16
[DBG]  [REPAIR] SAT destroy operator called.
[DBG]  [REPAIR] SAT operator – launching subproblem FOR OPTIMIZATION.
[DBG]  Creating local paths (sx, sy) in the submap for T_sync = 12
[DBG]    Agent 28 (global paths from T=12 to 56) has local path: (2,2) (2,2) (1,2) (1,1) (0,1) (0,1) (0,1) (0,1) (0,1) (0,1) (0,1) (0,1) (0,2) (1,2) (2,2) (2,1) (2,0) (2,0) (2,0) (3,0) (3,1) (4,1) (4,1) (4,1) (4,1) (4,1) (4,1) (4,1) (4,1) (4,1) (4,1) (4,1) (4,1) (4,1) (4,1) (4,1) (4,1) (4,1) (4,1) (4,1) (4,1) (4,1) (4,2) (4,3) (4,4) 
[DBG]    Agent 70 (global paths from T=12 to 13) has local path: (4,3) (4,2) 
[DBG]    Agent 86 (global paths from T=12 to 14) has local path: (1,1) (1,2) (0,2) 
[DBG]    Agent 89 (global paths from T=12 to 15) has local path: (2,1) (3,1) (4,1) (4,2) 
[DBG]    Agent 135 (global paths from T=12 to 16) has local path: (3,1) (3,0) (3,0) (3,0) (2,0) 
[DBG]  Checking input data for SAT solver:
[DBG]    - Number of agents to replan: 5
[DBG]  Agent 28 has the original local path length: 45 => Start (2,2), Goal (4,4)
[DBG]  Agent 70 has the original local path length: 2 => Start (4,3), Goal (4,2)
[DBG]  Agent 86 has the original local path length: 3 => Start (1,1), Goal (0,2)
[DBG]  Agent 89 has the original local path length: 4 => Start (2,1), Goal (4,2)
[DBG]  Agent 135 has the original local path length: 5 => Start (3,1), Goal (2,0)
[DBG]  Start position: (2, 2), (4, 3), (1, 1), (2, 1), (3, 1), 
[DBG]  Goal position: (4, 4), (4, 2), (0, 2), (4, 2), (2, 0), 
[DBG]  SAT instance and solver created.
Currently solving
Instance name: scen
Map name: map
Encoding used: disappear_at_goal
SAT solver used: Kissat
Optimizing function: sum of costs
Number of agents: 5
Mks LB: 7
SoC LB: 19
Delta: 0
Remaining time: 300000 [ms]

Vertex conflict! Agents 1, 2, timestep 3, location 0
Swapping conflict! Agents 1, 2, timestep 3, edge (0,0)
Vertex conflict! Agents 1, 2, timestep 4, location 0
Swapping conflict! Agents 1, 2, timestep 4, edge (0,0)
Vertex conflict! Agents 1, 2, timestep 5, location 0
Swapping conflict! Agents 1, 2, timestep 5, edge (0,0)
Vertex conflict! Agents 1, 2, timestep 6, location 0
Vertex conflict! Agents 1, 3, timestep 4, location 0
Swapping conflict! Agents 1, 3, timestep 4, edge (0,0)
Vertex conflict! Agents 1, 3, timestep 5, location 0
Swapping conflict! Agents 1, 3, timestep 5, edge (0,0)
Vertex conflict! Agents 1, 3, timestep 6, location 0
Vertex conflict! Agents 1, 4, timestep 3, location 0
Swapping conflict! Agents 1, 4, timestep 3, edge (0,0)
Vertex conflict! Agents 1, 4, timestep 4, location 0
Swapping conflict! Agents 1, 4, timestep 4, edge (0,0)
Vertex conflict! Agents 1, 4, timestep 5, location 0
Swapping conflict! Agents 1, 4, timestep 5, edge (0,0)
Vertex conflict! Agents 1, 4, timestep 6, location 0
Vertex conflict! Agents 2, 3, timestep 4, location 0
Swapping conflict! Agents 2, 3, timestep 4, edge (0,0)
Vertex conflict! Agents 2, 3, timestep 5, location 0
Swapping conflict! Agents 2, 3, timestep 5, edge (0,0)
Vertex conflict! Agents 2, 3, timestep 6, location 0
Vertex conflict! Agents 2, 4, timestep 3, location 0
Swapping conflict! Agents 2, 4, timestep 3, edge (0,0)
Vertex conflict! Agents 2, 4, timestep 4, location 0
Swapping conflict! Agents 2, 4, timestep 4, edge (0,0)
Vertex conflict! Agents 2, 4, timestep 5, location 0
Swapping conflict! Agents 2, 4, timestep 5, edge (0,0)
Vertex conflict! Agents 2, 4, timestep 6, location 0
Vertex conflict! Agents 3, 4, timestep 4, location 0
Swapping conflict! Agents 3, 4, timestep 4, edge (0,0)
Vertex conflict! Agents 3, 4, timestep 5, location 0
Swapping conflict! Agents 3, 4, timestep 5, edge (0,0)
Vertex conflict! Agents 3, 4, timestep 6, location 0
Found plan [agents = 5] [timesteps = 7]
Agent #0 : 9 8 11 12 13 14 15 
Agent #1 : 14 13 0 0 0 0 0 
Agent #2 : 4 5 1 0 0 0 0 
Agent #3 : 8 11 12 13 0 0 0 
Agent #4 : 11 10 7 0 0 0 0 

[STAT] Solver returned: 0
[DBG]  Agent (index) 28 | New local path (submap idx):
[DBG]  9 8 11 12 13 14 15 
[DBG]  Agent (index) 70 | New local path (submap idx):
[DBG]  14 13 
[DBG]  Agent (index) 86 | New local path (submap idx):
[DBG]  4 5 1 
[DBG]  Agent (index) 89 | New local path (submap idx):
[DBG]  8 11 12 13 
[DBG]  Agent (index) 135 | New local path (submap idx):
[DBG]  11 10 7 
[DBG]  Update the agent path 28 | Original local length: 45 | New local length: 7
[DBG]  agent 28 t=0 => decoded (sx,sy)=(2,2) => global_id=661
[DBG]  agent 28 t=1 => decoded (sx,sy)=(2,1) => global_id=660
[DBG]  agent 28 t=2 => decoded (sx,sy)=(3,1) => global_id=692
[DBG]  agent 28 t=3 => decoded (sx,sy)=(4,1) => global_id=724
[DBG]  agent 28 t=4 => decoded (sx,sy)=(4,2) => global_id=725
[DBG]  agent 28 t=5 => decoded (sx,sy)=(4,3) => global_id=726
[DBG]  agent 28 t=6 => decoded (sx,sy)=(4,4) => global_id=727
[DBG]  Complete path of agent 28:
[DBG]    Original: 661 661 661 661 661 661 661 661 661 661 661 661 661 661 629 628 596 596 596 596 596 596 596 596 597 629 661 660 659 659 659 691 692 724 724 724 724 724 724 724 724 724 724 724 724 724 724 724 724 724 724 724 724 724 725 726 727 
[DBG]    New:     661 661 661 661 661 661 661 661 661 661 661 661 661 660 692 724 725 726 727 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 661 661 661 661 661 661 661 661 661 661 661 661 
[DBG]    Local path (in submap): 661 660 692 724 725 726 727 
[DBG]    Suffix (out of submap): 
[DBG]  Original agent path length 28 je: 57
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 0: 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 660, 692, 724, 725, 726, 727, 
[DBG]  Path for agent 28 updated, resulting length: 19
[DBG]  Update the agent path 70 | Original local length: 2 | New local length: 2
[DBG]  agent 70 t=0 => decoded (sx,sy)=(4,3) => global_id=726
[DBG]  agent 70 t=1 => decoded (sx,sy)=(4,2) => global_id=725
[DBG]  Complete path of agent 70:
[DBG]    Original: 632 600 601 600 632 664 696 697 697 696 728 727 726 725 757 756 788 787 819 851 850 849 848 880 912 944 976 975 974 
[DBG]    New:     632 600 601 600 632 664 696 697 697 696 728 727 726 725 757 756 788 787 819 851 850 849 848 880 912 944 976 975 974 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 632 600 601 600 632 664 696 697 697 696 728 727 
[DBG]    Local path (in submap): 726 725 
[DBG]    Suffix (out of submap): 757 756 788 787 819 851 850 849 848 880 912 944 976 975 974 
[DBG]  Original agent path length 70 je: 29
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 1: 632, 600, 601, 600, 632, 664, 696, 697, 697, 696, 728, 727, 726, 725, 757, 756, 788, 787, 819, 851, 850, 849, 848, 880, 912, 944, 976, 975, 974, 
[DBG]  Path for agent 70 updated, resulting length: 29
[DBG]  Update the agent path 86 | Original local length: 3 | New local length: 3
[DBG]  agent 86 t=0 => decoded (sx,sy)=(1,1) => global_id=628
[DBG]  agent 86 t=1 => decoded (sx,sy)=(1,2) => global_id=629
[DBG]  agent 86 t=2 => decoded (sx,sy)=(0,2) => global_id=597
[DBG]  Complete path of agent 86:
[DBG]    Original: 781 782 783 751 719 687 655 656 657 658 659 660 628 629 597 565 533 533 533 534 502 503 504 505 473 474 475 443 444 445 477 509 541 
[DBG]    New:     781 782 783 751 719 687 655 656 657 658 659 660 628 629 597 565 533 533 533 534 502 503 504 505 473 474 475 443 444 445 477 509 541 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 781 782 783 751 719 687 655 656 657 658 659 660 
[DBG]    Local path (in submap): 628 629 597 
[DBG]    Suffix (out of submap): 565 533 533 533 534 502 503 504 505 473 474 475 443 444 445 477 509 541 
[DBG]  Original agent path length 86 je: 33
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 2: 781, 782, 783, 751, 719, 687, 655, 656, 657, 658, 659, 660, 628, 629, 597, 565, 533, 533, 533, 534, 502, 503, 504, 505, 473, 474, 475, 443, 444, 445, 477, 509, 541, 
[DBG]  Path for agent 86 updated, resulting length: 33
[DBG]  Update the agent path 89 | Original local length: 4 | New local length: 4
[DBG]  agent 89 t=0 => decoded (sx,sy)=(2,1) => global_id=660
[DBG]  agent 89 t=1 => decoded (sx,sy)=(3,1) => global_id=692
[DBG]  agent 89 t=2 => decoded (sx,sy)=(4,1) => global_id=724
[DBG]  agent 89 t=3 => decoded (sx,sy)=(4,2) => global_id=725
[DBG]  Complete path of agent 89:
[DBG]    Original: 437 469 501 533 565 597 629 629 629 628 660 692 660 692 724 725 757 756 788 820 821 822 854 886 918 950 982 1014 1015 
[DBG]    New:     437 469 501 533 565 597 629 629 629 628 660 692 660 692 724 725 757 756 788 820 821 822 854 886 918 950 982 1014 1015 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 437 469 501 533 565 597 629 629 629 628 660 692 
[DBG]    Local path (in submap): 660 692 724 725 
[DBG]    Suffix (out of submap): 757 756 788 820 821 822 854 886 918 950 982 1014 1015 
[DBG]  Original agent path length 89 je: 29
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 3: 437, 469, 501, 533, 565, 597, 629, 629, 629, 628, 660, 692, 660, 692, 724, 725, 757, 756, 788, 820, 821, 822, 854, 886, 918, 950, 982, 1014, 1015, 
[DBG]  Path for agent 89 updated, resulting length: 29
[DBG]  Update the agent path 135 | Original local length: 5 | New local length: 3
[DBG]  agent 135 t=0 => decoded (sx,sy)=(3,1) => global_id=692
[DBG]  agent 135 t=1 => decoded (sx,sy)=(3,0) => global_id=691
[DBG]  agent 135 t=2 => decoded (sx,sy)=(2,0) => global_id=659
[DBG]  Complete path of agent 135:
[DBG]    Original: 696 696 696 728 727 759 759 727 726 725 725 724 692 691 691 691 659 658 657 625 593 592 591 590 589 588 556 524 523 522 490 458 457 425 393 361 360 359 358 357 356 355 354 353 352 384 
[DBG]    New:     696 696 696 728 727 759 759 727 726 725 725 724 692 691 659 658 657 625 593 592 591 590 589 588 556 524 523 522 490 458 457 425 393 361 360 359 358 357 356 355 354 353 352 384 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 696 696 696 728 727 759 759 727 726 725 725 724 
[DBG]    Local path (in submap): 692 691 659 658 657 
[DBG]    Suffix (out of submap): 625 593 592 591 590 589 588 556 524 523 522 490 458 457 425 393 361 360 359 358 357 356 355 354 353 352 384 
[DBG]  Original agent path length 135 je: 46
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 4: 696, 696, 696, 728, 727, 759, 759, 727, 726, 725, 725, 724, 692, 691, 659, 658, 657, 625, 593, 592, 591, 590, 589, 588, 556, 524, 523, 522, 490, 458, 457, 425, 393, 361, 360, 359, 358, 357, 356, 355, 354, 353, 352, 384, 
[DBG]  Path for agent 135 updated, resulting length: 44
[DBG]  Paths successfully updated.
[DBG]  (LNS.cpp) New path for agent 28: 
[DBG]  661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 660, 692, 724, 725, 726, 727, 
[DBG]  (LNS.cpp) New path for agent 70: 
[DBG]  632, 600, 601, 600, 632, 664, 696, 697, 697, 696, 728, 727, 726, 725, 757, 756, 788, 787, 819, 851, 850, 849, 848, 880, 912, 944, 976, 975, 974, 
[DBG]  (LNS.cpp) New path for agent 86: 
[DBG]  781, 782, 783, 751, 719, 687, 655, 656, 657, 658, 659, 660, 628, 629, 597, 565, 533, 533, 533, 534, 502, 503, 504, 505, 473, 474, 475, 443, 444, 445, 477, 509, 541, 
[DBG]  (LNS.cpp) New path for agent 89: 
[DBG]  437, 469, 501, 533, 565, 597, 629, 629, 629, 628, 660, 692, 660, 692, 724, 725, 757, 756, 788, 820, 821, 822, 854, 886, 918, 950, 982, 1014, 1015, 
[DBG]  (LNS.cpp) New path for agent 135: 
[DBG]  696, 696, 696, 728, 727, 759, 759, 727, 726, 725, 725, 724, 692, 691, 659, 658, 657, 625, 593, 592, 591, 590, 589, 588, 556, 524, 523, 522, 490, 458, 457, 425, 393, 361, 360, 359, 358, 357, 356, 355, 354, 353, 352, 384, 
[DBG]  Delta value: 0.21164
[DBG]  Rewarding metric index = 1
[DBG]  component_weights = {2.46895e-07, 0.999999, 1.08744e-07, 1.88537e-07}
[DBG]  opSuccess value: 1
[STAT] neighbor.sum_of_costs before recomputation: 149
[STAT] neighbor.old_sum_of_costs before recomputation: 189
[STAT] sum_of_costs before recomputation: 4368
[DBG]  Validate solution immediately after SAT success.
[WARNING] Problem after SAT: Target conflict: agent 11 (len 37) traverses target of agent 28 (len 18) at location 727 at timestep 23
[DBG]  [DEBUG] Attempting immediate repair via init_lns because problem occurred after SAT (should be applied only for conflicts...).
[DBG]  [DEBUG] Passing 150 agents to init_lns (skip=true).
[DBG]  [DEBUG] path_table contents for selected agents (neighbor.agents):
[DBG]    Agent 28 => controlling path length=19
[DBG]    Agent 70 => controlling path length=29
[DBG]    Agent 86 => controlling path length=33
[DBG]    Agent 89 => controlling path length=29
[DBG]    Agent 135 => controlling path length=44
[DBG]  hodnota skip_initial_solution=1
[DBG]  We skip initialSolution => call buildCollisionData()
[DBG]  buildCollisionData() called – skip_initial_solution case.
[DBG]  Agents.size()=150, collision_graph.size()=150
[DBG]  agent 11 => updateCollidingPairs => foundCollision
[DBG]  agent 28 => updateCollidingPairs => foundCollision
[DBG]  agent 42 => updateCollidingPairs => foundCollision
[DBG]  agent 62 => updateCollidingPairs => foundCollision
[DBG]  agent 74 => updateCollidingPairs => foundCollision
[DBG]  agent 79 => updateCollidingPairs => foundCollision
[DBG]  agent 101 => updateCollidingPairs => foundCollision
[DBG]  agent 119 => updateCollidingPairs => foundCollision
[DBG]  agent 135 => updateCollidingPairs => foundCollision
[DBG]  agent 137 => updateCollidingPairs => foundCollision
[DBG]  Conflicting agent pairs:
[DBG]  agent 11 is in conflict with agent 28
[DBG]  agent 28 is in conflict with agent 42
[DBG]  agent 28 is in conflict with agent 101
[DBG]  agent 28 is in conflict with agent 119
[DBG]  agent 42 is in conflict with agent 135
[DBG]  agent 62 is in conflict with agent 135
[DBG]  agent 74 is in conflict with agent 135
[DBG]  agent 79 is in conflict with agent 135
[DBG]  agent 135 is in conflict with agent 137
[DBG]  buildCollisionData() => sum_of_costs=4328, num_of_colliding_pairs=9
[DBG]  buildCollisionData done => sum_of_costs=4328, num_of_colliding_pairs=9
[DBG]  sum_of_cost hodnota: 4328
[DBG]  After skip/init build => iteration_stats.back(): sum_of_costs=4328, collisions=9
[DEBUG] Using default neighbor generation strategy for conflicts: 2
[DEBUG] Using default neighbor generation strategy for conflicts: 0
[DEBUG] Using default neighbor generation strategy for conflicts: 1
	InitLNS(PP): runtime = 0.00421871, iterations = 4, colliding pairs = 0, initial colliding pairs = 9, solution cost = 4358, initial solution cost = 4328, failed iterations = 0
[DBG]  init_lns->sum_of_costs after init_lns->run: 4358
[DBG]  sum_of_costs after assignment from init_lns->run: 4358
[DBG]  Recomputing sum_of_cost by dividing neighbor.sum_of_costs and neighbor.old_sum_of_costs
[STAT] sum_of_costs after recomputation: 4358
[STAT] Iteration 139
[DBG]  Random chance did not select SAT operator (r=14), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 139
[DBG]  Using SAT operator (destroy+repair SAT).
[DBG]  ====================
[DBG]  SAT destroy operator called.
[DBG]  SAT heuristic: 2
[DBG]  key_agent_id: 28
[DBG]  key_agent_id global path length: 46
[DBG]  Submap content (global positions):
[DBG]  658 659 660 661 662 
[DBG]  690 691 692 693 694 
[DBG]  722 723 724 725 726 
[DBG]  754 755 756 757 758 
[DBG]  786 787 788 789 790 
[DBG]  Map content with agents and obstacles:
[DBG]  . . . . X 
[DBG]  X A . X X 
[DBG]  . X A . . 
[DBG]  X . A . X 
[DBG]  . . . X . 
[DBG]  content of the map structure that we pass to the SAT solver:
[DBG]  1  1  1  1  -1  
[DBG]  -1  1  1  -1  -1  
[DBG]  1  -1  1  1  1  
[DBG]  -1  1  1  1  -1  
[DBG]  1  1  1  -1  1  
[DBG]  Identifying agents in a submap for rescheduling (when key_agent is there at the time 29):
[DBG]  Agent 11 found intervals in the sub-map:
[DBG]   [38..38]
[DBG]  Agent 11 is not in sub-map at time 29 (intervals: 
[DBG]  [38..38] )
[DBG]  Agent 26 found intervals in the sub-map:
[DBG]   [54..56]
[DBG]  Agent 26 is not in sub-map at time 29 (intervals: 
[DBG]  [54..56] )
[DBG]  Agent 28 found intervals in the sub-map:
[DBG]   [0..13] [26..44]
[DBG]  Agent 28 (interval in submap: [26..44]) contains time 29, added to replan.
[DBG]  Agent 53 found intervals in the sub-map:
[DBG]   [25..30]
[DBG]  Agent 53 (interval in submap: [25..30]) contains time 29, added to replan.
[DBG]  Agent 148 found intervals in the sub-map:
[DBG]   [26..32]
[DBG]  Agent 148 (interval in submap: [26..32]) contains time 29, added to replan.
[DBG]  Agent 28 | Start (global): 724 -> (local): (2, 2) at time 29 | Goal (global): 726 -> (local): (2, 4) at time 44
[DBG]  Agent 53 | Start (global): 756 -> (local): (3, 2) at time 29 | Goal (global): 788 -> (local): (4, 2) at time 30
[DBG]  Agent 148 | Start (global): 691 -> (local): (1, 1) at time 29 | Goal (global): 660 -> (local): (0, 2) at time 32
[DBG]  [REPAIR] SAT destroy operator called.
[DBG]  [REPAIR] SAT operator – launching subproblem FOR OPTIMIZATION.
[DBG]  Creating local paths (sx, sy) in the submap for T_sync = 29
[DBG]    Agent 28 (global paths from T=29 to 44) has local path: (2,2) (3,2) (3,2) (3,2) (3,2) (3,2) (3,2) (3,2) (3,2) (3,2) (3,2) (3,2) (3,2) (2,2) (2,3) (2,4) 
[DBG]    Agent 53 (global paths from T=29 to 30) has local path: (3,2) (4,2) 
[DBG]    Agent 148 (global paths from T=29 to 32) has local path: (1,1) (1,1) (1,2) (0,2) 
[DBG]  Checking input data for SAT solver:
[DBG]    - Number of agents to replan: 3
[DBG]  Agent 28 has the original local path length: 16 => Start (2,2), Goal (2,4)
[DBG]  Agent 53 has the original local path length: 2 => Start (3,2), Goal (4,2)
[DBG]  Agent 148 has the original local path length: 4 => Start (1,1), Goal (0,2)
[DBG]  Start position: (2, 2), (3, 2), (1, 1), 
[DBG]  Goal position: (2, 4), (4, 2), (0, 2), 
[DBG]  SAT instance and solver created.
Currently solving
Instance name: scen
Map name: map
Encoding used: disappear_at_goal
SAT solver used: Kissat
Optimizing function: sum of costs
Number of agents: 3
Mks LB: 3
SoC LB: 8
Delta: 0
Remaining time: 300000 [ms]

Found plan [agents = 3] [timesteps = 3]
Agent #0 : 7 8 9 
Agent #1 : 11 15 0 
Agent #2 : 4 5 2 

[STAT] Solver returned: 0
[DBG]  Agent (index) 28 | New local path (submap idx):
[DBG]  7 8 9 
[DBG]  Agent (index) 53 | New local path (submap idx):
[DBG]  11 15 
[DBG]  Agent (index) 148 | New local path (submap idx):
[DBG]  4 5 2 
[DBG]  Update the agent path 28 | Original local length: 16 | New local length: 3
[DBG]  agent 28 t=0 => decoded (sx,sy)=(2,2) => global_id=724
[DBG]  agent 28 t=1 => decoded (sx,sy)=(2,3) => global_id=725
[DBG]  agent 28 t=2 => decoded (sx,sy)=(2,4) => global_id=726
[DBG]  Complete path of agent 28:
[DBG]    Original: 661 661 661 661 661 661 661 661 661 661 661 661 661 661 629 597 596 596 596 596 596 596 596 596 597 629 661 660 692 724 756 756 756 756 756 756 756 756 756 756 756 756 724 725 726 727 
[DBG]    New:     661 661 661 661 661 661 661 661 661 661 661 661 661 661 629 597 596 596 596 596 596 596 596 596 597 629 661 660 692 724 725 726 727 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 661 661 661 661 661 661 661 661 661 661 661 661 661 661 629 597 596 596 596 596 596 596 596 596 597 629 661 660 692 
[DBG]    Local path (in submap): 724 725 726 727 
[DBG]    Suffix (out of submap): 
[DBG]  Original agent path length 28 je: 46
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 0: 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 629, 597, 596, 596, 596, 596, 596, 596, 596, 596, 597, 629, 661, 660, 692, 724, 725, 726, 727, 
[DBG]  Path for agent 28 updated, resulting length: 33
[DBG]  Update the agent path 53 | Original local length: 2 | New local length: 2
[DBG]  agent 53 t=0 => decoded (sx,sy)=(3,2) => global_id=756
[DBG]  agent 53 t=1 => decoded (sx,sy)=(4,2) => global_id=788
[DBG]  Complete path of agent 53:
[DBG]    Original: 84 116 148 148 180 212 244 276 277 309 341 341 373 373 373 405 437 437 469 501 533 533 565 597 629 661 660 692 724 756 788 820 821 
[DBG]    New:     84 116 148 148 180 212 244 276 277 309 341 341 373 373 373 405 437 437 469 501 533 533 565 597 629 661 660 692 724 756 788 820 821 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 84 116 148 148 180 212 244 276 277 309 341 341 373 373 373 405 437 437 469 501 533 533 565 597 629 661 660 692 724 
[DBG]    Local path (in submap): 756 788 
[DBG]    Suffix (out of submap): 820 821 
[DBG]  Original agent path length 53 je: 33
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 1: 84, 116, 148, 148, 180, 212, 244, 276, 277, 309, 341, 341, 373, 373, 373, 405, 437, 437, 469, 501, 533, 533, 565, 597, 629, 661, 660, 692, 724, 756, 788, 820, 821, 
[DBG]  Path for agent 53 updated, resulting length: 33
[DBG]  Update the agent path 148 | Original local length: 4 | New local length: 3
[DBG]  agent 148 t=0 => decoded (sx,sy)=(1,1) => global_id=691
[DBG]  agent 148 t=1 => decoded (sx,sy)=(1,2) => global_id=692
[DBG]  agent 148 t=2 => decoded (sx,sy)=(0,2) => global_id=660
[DBG]  Complete path of agent 148:
[DBG]    Original: 776 808 808 808 808 808 808 807 806 774 775 776 777 777 778 779 780 781 782 750 718 686 687 688 656 657 658 659 691 691 691 692 660 
[DBG]    New:     776 808 808 808 808 808 808 807 806 774 775 776 777 777 778 779 780 781 782 750 718 686 687 688 656 657 658 659 691 691 692 660 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 776 808 808 808 808 808 808 807 806 774 775 776 777 777 778 779 780 781 782 750 718 686 687 688 656 657 658 659 691 
[DBG]    Local path (in submap): 691 692 660 
[DBG]    Suffix (out of submap): 
[DBG]  Original agent path length 148 je: 33
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 2: 776, 808, 808, 808, 808, 808, 808, 807, 806, 774, 775, 776, 777, 777, 778, 779, 780, 781, 782, 750, 718, 686, 687, 688, 656, 657, 658, 659, 691, 691, 692, 660, 
[DBG]  Path for agent 148 updated, resulting length: 32
[DBG]  Paths successfully updated.
[DBG]  (LNS.cpp) New path for agent 28: 
[DBG]  661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 629, 597, 596, 596, 596, 596, 596, 596, 596, 596, 597, 629, 661, 660, 692, 724, 725, 726, 727, 
[DBG]  (LNS.cpp) New path for agent 53: 
[DBG]  84, 116, 148, 148, 180, 212, 244, 276, 277, 309, 341, 341, 373, 373, 373, 405, 437, 437, 469, 501, 533, 533, 565, 597, 629, 661, 660, 692, 724, 756, 788, 820, 821, 
[DBG]  (LNS.cpp) New path for agent 148: 
[DBG]  776, 808, 808, 808, 808, 808, 808, 807, 806, 774, 775, 776, 777, 777, 778, 779, 780, 781, 782, 750, 718, 686, 687, 688, 656, 657, 658, 659, 691, 691, 692, 660, 
[DBG]  Delta value: 0.12844
[DBG]  Rewarding metric index = 1
[DBG]  component_weights = {2.07853e-07, 1, 9.15486e-08, 1.58724e-07}
[DBG]  opSuccess value: 1
[STAT] neighbor.sum_of_costs before recomputation: 95
[STAT] neighbor.old_sum_of_costs before recomputation: 109
[STAT] sum_of_costs before recomputation: 4358
[DBG]  Validate solution immediately after SAT success.
[WARNING] Problem after SAT: Target conflict: agent 42 (len 45) traverses target of agent 28 (len 32) at location 727 at timestep 44
[DBG]  [DEBUG] Attempting immediate repair via init_lns because problem occurred after SAT (should be applied only for conflicts...).
[DBG]  [DEBUG] Passing 150 agents to init_lns (skip=true).
[DBG]  [DEBUG] path_table contents for selected agents (neighbor.agents):
[DBG]    Agent 28 => controlling path length=33
[DBG]    Agent 53 => controlling path length=33
[DBG]    Agent 148 => controlling path length=32
[DBG]  hodnota skip_initial_solution=1
[DBG]  We skip initialSolution => call buildCollisionData()
[DBG]  buildCollisionData() called – skip_initial_solution case.
[DBG]  Agents.size()=150, collision_graph.size()=150
[DBG]  agent 28 => updateCollidingPairs => foundCollision
[DBG]  agent 42 => updateCollidingPairs => foundCollision
[DBG]  Conflicting agent pairs:
[DBG]  agent 28 is in conflict with agent 42
[DBG]  buildCollisionData() => sum_of_costs=4344, num_of_colliding_pairs=1
[DBG]  buildCollisionData done => sum_of_costs=4344, num_of_colliding_pairs=1
[DBG]  sum_of_cost hodnota: 4344
[DBG]  After skip/init build => iteration_stats.back(): sum_of_costs=4344, collisions=1
[DEBUG] Using default neighbor generation strategy for conflicts: 1
[DEBUG] Using default neighbor generation strategy for conflicts: 0
	InitLNS(PP): runtime = 0.00327592, iterations = 3, colliding pairs = 0, initial colliding pairs = 1, solution cost = 4343, initial solution cost = 4344, failed iterations = 0
[DBG]  init_lns->sum_of_costs after init_lns->run: 4343
[DBG]  sum_of_costs after assignment from init_lns->run: 4343
[DBG]  Recomputing sum_of_cost by dividing neighbor.sum_of_costs and neighbor.old_sum_of_costs
[STAT] sum_of_costs after recomputation: 4343
[STAT] Iteration 140
[DBG]  Random chance did not select SAT operator (r=15), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 140
[DBG]  Random chance did not select SAT operator (r=31), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 140
[DBG]  Random chance did not select SAT operator (r=34), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 140
[DBG]  Using SAT operator (destroy+repair SAT).
[DBG]  ====================
[DBG]  SAT destroy operator called.
[DBG]  SAT heuristic: 2
[DBG]  key_agent_id: 28
[DBG]  key_agent_id global path length: 44
[DBG]  Submap content (global positions):
[DBG]  563 564 565 566 567 
[DBG]  595 596 597 598 599 
[DBG]  627 628 629 630 631 
[DBG]  659 660 661 662 663 
[DBG]  691 692 693 694 695 
[DBG]  Map content with agents and obstacles:
[DBG]  . X . . X 
[DBG]  X . A X A 
[DBG]  . . A X . 
[DBG]  . . . X X 
[DBG]  A . X X X 
[DBG]  content of the map structure that we pass to the SAT solver:
[DBG]  1  -1  1  1  -1  
[DBG]  -1  1  1  -1  1  
[DBG]  1  1  1  -1  1  
[DBG]  1  1  1  -1  -1  
[DBG]  1  1  -1  -1  -1  
[DBG]  Identifying agents in a submap for rescheduling (when key_agent is there at the time 19):
[DBG]  Agent 28 found intervals in the sub-map:
[DBG]   [0..39]
[DBG]  Agent 28 (interval in submap: [0..39]) contains time 19, added to replan.
[DBG]  Agent 30 found intervals in the sub-map:
[DBG]   [16..21]
[DBG]  Agent 30 (interval in submap: [16..21]) contains time 19, added to replan.
[DBG]  Agent 70 found intervals in the sub-map:
[DBG]  
[DBG]  Agent 70 is not in sub-map at time 19 (intervals: 
[DBG]  )
[DBG]  Agent 74 found intervals in the sub-map:
[DBG]   [15..23]
[DBG]  Agent 74 (interval in submap: [15..23]) contains time 19, added to replan.
[DBG]  Agent 86 found intervals in the sub-map:
[DBG]   [10..15]
[DBG]  Agent 86 is not in sub-map at time 19 (intervals: 
[DBG]  [10..15] )
[DBG]  Agent 119 found intervals in the sub-map:
[DBG]   [18..20]
[DBG]  Agent 119 (interval in submap: [18..20]) contains time 19, added to replan.
[DBG]  Agent 28 | Start (global): 629 -> (local): (2, 2) at time 19 | Goal (global): 692 -> (local): (4, 1) at time 39
[DBG]  Agent 30 | Start (global): 599 -> (local): (1, 4) at time 19 | Goal (global): 599 -> (local): (1, 4) at time 21
[DBG]  Agent 74 | Start (global): 597 -> (local): (1, 2) at time 19 | Goal (global): 565 -> (local): (0, 2) at time 23
[DBG]  Agent 119 | Start (global): 691 -> (local): (4, 0) at time 19 | Goal (global): 659 -> (local): (3, 0) at time 20
[DBG]  [REPAIR] SAT destroy operator called.
[DBG]  [REPAIR] SAT operator – launching subproblem FOR OPTIMIZATION.
[DBG]  Creating local paths (sx, sy) in the submap for T_sync = 19
[DBG]    Agent 28 (global paths from T=19 to 39) has local path: (2,2) (2,1) (2,0) (2,0) (2,0) (2,0) (2,0) (2,0) (2,0) (2,0) (2,0) (2,0) (2,0) (2,0) (2,0) (2,0) (2,0) (2,0) (3,0) (4,0) (4,1) 
[DBG]    Agent 30 (global paths from T=19 to 21) has local path: (1,4) (1,4) (1,4) 
[DBG]    Agent 74 (global paths from T=19 to 23) has local path: (1,2) (0,2) (0,3) (0,3) (0,2) 
[DBG]    Agent 119 (global paths from T=19 to 20) has local path: (4,0) (3,0) 
[DBG]  Checking input data for SAT solver:
[DBG]    - Number of agents to replan: 4
[DBG]  Agent 28 has the original local path length: 21 => Start (2,2), Goal (4,1)
[DBG]  Agent 30 has the original local path length: 3 => Start (1,4), Goal (1,4)
[DBG]  Agent 74 has the original local path length: 5 => Start (1,2), Goal (0,2)
[DBG]  Agent 119 has the original local path length: 2 => Start (4,0), Goal (3,0)
[DBG]  Start position: (2, 2), (1, 4), (1, 2), (4, 0), 
[DBG]  Goal position: (4, 1), (1, 4), (0, 2), (3, 0), 
[DBG]  SAT instance and solver created.
Currently solving
Instance name: scen
Map name: map
Encoding used: disappear_at_goal
SAT solver used: Kissat
Optimizing function: sum of costs
Number of agents: 4
Mks LB: 4
SoC LB: 9
Delta: 0
Remaining time: 300000 [ms]

Vertex conflict! Agents 1, 2, timestep 2, location 0
Swapping conflict! Agents 1, 2, timestep 2, edge (0,0)
Vertex conflict! Agents 1, 2, timestep 3, location 0
Vertex conflict! Agents 1, 3, timestep 2, location 0
Swapping conflict! Agents 1, 3, timestep 2, edge (0,0)
Vertex conflict! Agents 1, 3, timestep 3, location 0
Vertex conflict! Agents 2, 3, timestep 2, location 0
Swapping conflict! Agents 2, 3, timestep 2, edge (0,0)
Vertex conflict! Agents 2, 3, timestep 3, location 0
Found plan [agents = 4] [timesteps = 4]
Agent #0 : 8 12 11 14 
Agent #1 : 5 0 0 0 
Agent #2 : 4 1 0 0 
Agent #3 : 13 10 0 0 

[STAT] Solver returned: 0
[DBG]  Agent (index) 28 | New local path (submap idx):
[DBG]  8 12 11 14 
[DBG]  Agent (index) 30 | New local path (submap idx):
[DBG]  5 
[DBG]  Agent (index) 74 | New local path (submap idx):
[DBG]  4 1 
[DBG]  Agent (index) 119 | New local path (submap idx):
[DBG]  13 10 
[DBG]  Update the agent path 28 | Original local length: 21 | New local length: 4
[DBG]  agent 28 t=0 => decoded (sx,sy)=(2,2) => global_id=629
[DBG]  agent 28 t=1 => decoded (sx,sy)=(3,2) => global_id=661
[DBG]  agent 28 t=2 => decoded (sx,sy)=(3,1) => global_id=660
[DBG]  agent 28 t=3 => decoded (sx,sy)=(4,1) => global_id=692
[DBG]  Complete path of agent 28:
[DBG]    Original: 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 629 628 627 627 627 627 627 627 627 627 627 627 627 627 627 627 627 627 659 691 692 724 725 726 727 
[DBG]    New:     661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 629 661 660 692 724 725 726 727 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 
[DBG]    Local path (in submap): 629 661 660 692 724 725 726 727 
[DBG]    Suffix (out of submap): 
[DBG]  Original agent path length 28 je: 44
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 0: 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 629, 661, 660, 692, 724, 725, 726, 727, 
[DBG]  Path for agent 28 updated, resulting length: 27
[DBG]  Update the agent path 30 | Original local length: 3 | New local length: 1
[DBG]  agent 30 t=0 => decoded (sx,sy)=(1,4) => global_id=599
[DBG]  Complete path of agent 30:
[DBG]    Original: 922 890 858 857 856 856 824 792 793 761 729 728 696 664 632 600 599 599 599 599 599 599 600 601 569 569 570 538 506 505 504 503 
[DBG]    New:     922 890 858 857 856 856 824 792 793 761 729 728 696 664 632 600 599 599 599 599 600 601 569 569 570 538 506 505 504 503 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 922 890 858 857 856 856 824 792 793 761 729 728 696 664 632 600 599 599 599 
[DBG]    Local path (in submap): 599 600 601 
[DBG]    Suffix (out of submap): 569 569 570 538 506 505 504 503 
[DBG]  Original agent path length 30 je: 32
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 1: 922, 890, 858, 857, 856, 856, 824, 792, 793, 761, 729, 728, 696, 664, 632, 600, 599, 599, 599, 599, 600, 601, 569, 569, 570, 538, 506, 505, 504, 503, 
[DBG]  Path for agent 30 updated, resulting length: 30
[DBG]  Update the agent path 74 | Original local length: 5 | New local length: 2
[DBG]  agent 74 t=0 => decoded (sx,sy)=(1,2) => global_id=597
[DBG]  agent 74 t=1 => decoded (sx,sy)=(0,2) => global_id=565
[DBG]  Complete path of agent 74:
[DBG]    Original: 752 784 784 784 784 784 784 752 751 719 687 688 689 657 658 659 627 628 629 597 565 566 566 565 533 501 502 503 504 472 472 504 
[DBG]    New:     752 784 784 784 784 784 784 752 751 719 687 688 689 657 658 659 627 628 629 597 565 533 501 502 503 504 472 472 504 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 752 784 784 784 784 784 784 752 751 719 687 688 689 657 658 659 627 628 629 
[DBG]    Local path (in submap): 597 565 533 501 502 
[DBG]    Suffix (out of submap): 503 504 472 472 504 
[DBG]  Original agent path length 74 je: 32
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 2: 752, 784, 784, 784, 784, 784, 784, 752, 751, 719, 687, 688, 689, 657, 658, 659, 627, 628, 629, 597, 565, 533, 501, 502, 503, 504, 472, 472, 504, 
[DBG]  Path for agent 74 updated, resulting length: 29
[DBG]  Update the agent path 119 | Original local length: 2 | New local length: 2
[DBG]  agent 119 t=0 => decoded (sx,sy)=(4,0) => global_id=691
[DBG]  agent 119 t=1 => decoded (sx,sy)=(3,0) => global_id=659
[DBG]  Complete path of agent 119:
[DBG]    Original: 861 861 861 862 861 829 797 765 733 732 731 730 729 728 727 726 725 724 692 691 659 658 657 656 655 623 591 590 558 526 494 462 430 429 428 427 395 363 331 299 300 268 236 204 172 140 
[DBG]    New:     861 861 861 862 861 829 797 765 733 732 731 730 729 728 727 726 725 724 692 691 659 658 657 656 655 623 591 590 558 526 494 462 430 429 428 427 395 363 331 299 300 268 236 204 172 140 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 861 861 861 862 861 829 797 765 733 732 731 730 729 728 727 726 725 724 692 
[DBG]    Local path (in submap): 691 659 
[DBG]    Suffix (out of submap): 658 657 656 655 623 591 590 558 526 494 462 430 429 428 427 395 363 331 299 300 268 236 204 172 140 
[DBG]  Original agent path length 119 je: 46
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 3: 861, 861, 861, 862, 861, 829, 797, 765, 733, 732, 731, 730, 729, 728, 727, 726, 725, 724, 692, 691, 659, 658, 657, 656, 655, 623, 591, 590, 558, 526, 494, 462, 430, 429, 428, 427, 395, 363, 331, 299, 300, 268, 236, 204, 172, 140, 
[DBG]  Path for agent 119 updated, resulting length: 46
[DBG]  Paths successfully updated.
[DBG]  (LNS.cpp) New path for agent 28: 
[DBG]  661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 629, 661, 660, 692, 724, 725, 726, 727, 
[DBG]  (LNS.cpp) New path for agent 30: 
[DBG]  922, 890, 858, 857, 856, 856, 824, 792, 793, 761, 729, 728, 696, 664, 632, 600, 599, 599, 599, 599, 600, 601, 569, 569, 570, 538, 506, 505, 504, 503, 
[DBG]  (LNS.cpp) New path for agent 74: 
[DBG]  752, 784, 784, 784, 784, 784, 784, 752, 751, 719, 687, 688, 689, 657, 658, 659, 627, 628, 629, 597, 565, 533, 501, 502, 503, 504, 472, 472, 504, 
[DBG]  (LNS.cpp) New path for agent 119: 
[DBG]  861, 861, 861, 862, 861, 829, 797, 765, 733, 732, 731, 730, 729, 728, 727, 726, 725, 724, 692, 691, 659, 658, 657, 656, 655, 623, 591, 590, 558, 526, 494, 462, 430, 429, 428, 427, 395, 363, 331, 299, 300, 268, 236, 204, 172, 140, 
[DBG]  Delta value: 0.146667
[DBG]  Rewarding metric index = 1
[DBG]  component_weights = {1.72204e-07, 1, 7.58469e-08, 1.31501e-07}
[DBG]  opSuccess value: 1
[STAT] neighbor.sum_of_costs before recomputation: 128
[STAT] neighbor.old_sum_of_costs before recomputation: 150
[STAT] sum_of_costs before recomputation: 4343
[DBG]  Validate solution immediately after SAT success.
[WARNING] Problem after SAT: Vertex conflict between agents 24 and 30 at location 600 at timestep 20
[DBG]  [DEBUG] Attempting immediate repair via init_lns because problem occurred after SAT (should be applied only for conflicts...).
[DBG]  [DEBUG] Passing 150 agents to init_lns (skip=true).
[DBG]  [DEBUG] path_table contents for selected agents (neighbor.agents):
[DBG]    Agent 28 => controlling path length=27
[DBG]    Agent 30 => controlling path length=30
[DBG]    Agent 74 => controlling path length=29
[DBG]    Agent 119 => controlling path length=46
[DBG]  hodnota skip_initial_solution=1
[DBG]  We skip initialSolution => call buildCollisionData()
[DBG]  buildCollisionData() called – skip_initial_solution case.
[DBG]  Agents.size()=150, collision_graph.size()=150
[DBG]  agent 24 => updateCollidingPairs => foundCollision
[DBG]  agent 28 => updateCollidingPairs => foundCollision
[DBG]  agent 30 => updateCollidingPairs => foundCollision
[DBG]  agent 42 => updateCollidingPairs => foundCollision
[DBG]  agent 53 => updateCollidingPairs => foundCollision
[DBG]  agent 74 => updateCollidingPairs => foundCollision
[DBG]  agent 144 => updateCollidingPairs => foundCollision
[DBG]  Conflicting agent pairs:
[DBG]  agent 24 is in conflict with agent 30
[DBG]  agent 28 is in conflict with agent 42
[DBG]  agent 30 is in conflict with agent 74
[DBG]  agent 30 is in conflict with agent 144
[DBG]  agent 53 is in conflict with agent 74
[DBG]  buildCollisionData() => sum_of_costs=4321, num_of_colliding_pairs=5
[DBG]  buildCollisionData done => sum_of_costs=4321, num_of_colliding_pairs=5
[DBG]  sum_of_cost hodnota: 4321
[DBG]  After skip/init build => iteration_stats.back(): sum_of_costs=4321, collisions=5
[DEBUG] Using default neighbor generation strategy for conflicts: 2
[DEBUG] Using default neighbor generation strategy for conflicts: 1
[DEBUG] Using default neighbor generation strategy for conflicts: 1
	InitLNS(PP): runtime = 0.00352896, iterations = 4, colliding pairs = 0, initial colliding pairs = 5, solution cost = 4324, initial solution cost = 4321, failed iterations = 0
[DBG]  init_lns->sum_of_costs after init_lns->run: 4324
[DBG]  sum_of_costs after assignment from init_lns->run: 4324
[DBG]  Recomputing sum_of_cost by dividing neighbor.sum_of_costs and neighbor.old_sum_of_costs
[STAT] sum_of_costs after recomputation: 4324
[STAT] Iteration 141
[DBG]  Random chance did not select SAT operator (r=61), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 141
[DBG]  Random chance did not select SAT operator (r=36), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 141
[DBG]  Random chance did not select SAT operator (r=58), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 141
[DBG]  Using SAT operator (destroy+repair SAT).
[DBG]  ====================
[DBG]  SAT destroy operator called.
[DBG]  SAT heuristic: 2
[DBG]  key_agent_id: 28
[DBG]  key_agent_id global path length: 44
[DBG]  Submap content (global positions):
[DBG]  595 596 597 598 599 
[DBG]  627 628 629 630 631 
[DBG]  659 660 661 662 663 
[DBG]  691 692 693 694 695 
[DBG]  723 724 725 726 727 
[DBG]  Map content with agents and obstacles:
[DBG]  X A . X . 
[DBG]  . . . X A 
[DBG]  . . A X X 
[DBG]  . . X X X 
[DBG]  X . . . . 
[DBG]  content of the map structure that we pass to the SAT solver:
[DBG]  -1  1  1  -1  1  
[DBG]  1  1  1  -1  1  
[DBG]  1  1  1  -1  -1  
[DBG]  1  1  -1  -1  -1  
[DBG]  -1  1  1  1  1  
[DBG]  Identifying agents in a submap for rescheduling (when key_agent is there at the time 21):
[DBG]  Agent 11 found intervals in the sub-map:
[DBG]  
[DBG]  Agent 11 is not in sub-map at time 21 (intervals: 
[DBG]  )
[DBG]  Agent 28 found intervals in the sub-map:
[DBG]   [0..43]
[DBG]  Agent 28 (interval in submap: [0..43]) contains time 21, added to replan.
[DBG]  Agent 30 found intervals in the sub-map:
[DBG]  
[DBG]  Agent 30 is not in sub-map at time 21 (intervals: 
[DBG]  )
[DBG]  Agent 62 found intervals in the sub-map:
[DBG]  
[DBG]  Agent 62 is not in sub-map at time 21 (intervals: 
[DBG]  )
[DBG]  Agent 100 found intervals in the sub-map:
[DBG]   [20..25]
[DBG]  Agent 100 (interval in submap: [20..25]) contains time 21, added to replan.
[DBG]  Agent 144 found intervals in the sub-map:
[DBG]   [21..21]
[DBG]  Agent 144 (interval in submap: [21..21]) contains time 21, added to replan.
[DBG]  Agent 28 | Start (global): 661 -> (local): (2, 2) at time 21 | Goal (global): 727 -> (local): (4, 4) at time 43
[DBG]  Agent 100 | Start (global): 596 -> (local): (0, 1) at time 21 | Goal (global): 724 -> (local): (4, 1) at time 25
[DBG]  Agent 144 | Start (global): 631 -> (local): (1, 4) at time 21 | Goal (global): 631 -> (local): (1, 4) at time 21
[DBG]  [REPAIR] SAT destroy operator called.
[DBG]  [REPAIR] SAT operator – launching subproblem FOR OPTIMIZATION.
[DBG]  Creating local paths (sx, sy) in the submap for T_sync = 21
[DBG]    Agent 28 (global paths from T=21 to 43) has local path: (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (1,2) (1,1) (1,0) (2,0) (3,0) (3,1) (4,1) (4,2) (4,3) (4,4) 
[DBG]    Agent 100 (global paths from T=21 to 25) has local path: (0,1) (1,1) (2,1) (3,1) (4,1) 
[DBG]    Agent 144 (global paths from T=21 to 21) has local path: (1,4) 
[DBG]  Checking input data for SAT solver:
[DBG]    - Number of agents to replan: 3
[DBG]  Agent 28 has the original local path length: 23 => Start (2,2), Goal (4,4)
[DBG]  Agent 100 has the original local path length: 5 => Start (0,1), Goal (4,1)
[DBG]  Agent 144 has the original local path length: 1 => Start (1,4), Goal (1,4)
[DBG]  Start position: (2, 2), (0, 1), (1, 4), 
[DBG]  Goal position: (4, 4), (4, 1), (1, 4), 
[DBG]  SAT instance and solver created.
Currently solving
Instance name: scen
Map name: map
Encoding used: disappear_at_goal
SAT solver used: Kissat
Optimizing function: sum of costs
Number of agents: 3
Mks LB: 7
SoC LB: 13
Delta: 0
Remaining time: 300000 [ms]

Vertex conflict! Agents 1, 2, timestep 5, location 0
Swapping conflict! Agents 1, 2, timestep 5, edge (0,0)
Vertex conflict! Agents 1, 2, timestep 6, location 0
Found plan [agents = 3] [timesteps = 7]
Agent #0 : 9 8 11 12 13 14 15 
Agent #1 : 0 4 8 11 12 0 0 
Agent #2 : 6 0 0 0 0 0 0 

[STAT] Solver returned: 0
[DBG]  Agent (index) 28 | New local path (submap idx):
[DBG]  9 8 11 12 13 14 15 
[DBG]  Agent (index) 100 | New local path (submap idx):
[DBG]  0 4 8 11 12 
[DBG]  Agent (index) 144 | New local path (submap idx):
[DBG]  6 
[DBG]  Update the agent path 28 | Original local length: 23 | New local length: 7
[DBG]  agent 28 t=0 => decoded (sx,sy)=(2,2) => global_id=661
[DBG]  agent 28 t=1 => decoded (sx,sy)=(2,1) => global_id=660
[DBG]  agent 28 t=2 => decoded (sx,sy)=(3,1) => global_id=692
[DBG]  agent 28 t=3 => decoded (sx,sy)=(4,1) => global_id=724
[DBG]  agent 28 t=4 => decoded (sx,sy)=(4,2) => global_id=725
[DBG]  agent 28 t=5 => decoded (sx,sy)=(4,3) => global_id=726
[DBG]  agent 28 t=6 => decoded (sx,sy)=(4,4) => global_id=727
[DBG]  Complete path of agent 28:
[DBG]    Original: 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 629 628 627 659 691 692 724 725 726 727 
[DBG]    New:     661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 660 692 724 725 726 727 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 
[DBG]    Local path (in submap): 661 660 692 724 725 726 727 
[DBG]    Suffix (out of submap): 
[DBG]  Original agent path length 28 je: 44
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 0: 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 660, 692, 724, 725, 726, 727, 
[DBG]  Path for agent 28 updated, resulting length: 28
[DBG]  Update the agent path 100 | Original local length: 5 | New local length: 5
[DBG]  agent 100 t=0 => decoded (sx,sy)=(0,1) => global_id=596
[DBG]  agent 100 t=1 => decoded (sx,sy)=(1,1) => global_id=628
[DBG]  agent 100 t=2 => decoded (sx,sy)=(2,1) => global_id=660
[DBG]  agent 100 t=3 => decoded (sx,sy)=(3,1) => global_id=692
[DBG]  agent 100 t=4 => decoded (sx,sy)=(4,1) => global_id=724
[DBG]  Complete path of agent 100:
[DBG]    Original: 287 286 285 317 349 381 380 379 378 377 409 408 407 439 438 470 502 534 566 565 597 596 628 660 692 724 756 755 787 786 818 850 882 881 880 879 878 846 878 877 909 941 973 1005 1004 1003 
[DBG]    New:     287 286 285 317 349 381 380 379 378 377 409 408 407 439 438 470 502 534 566 565 597 596 628 660 692 724 756 755 787 786 818 850 882 881 880 879 878 846 878 877 909 941 973 1005 1004 1003 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 287 286 285 317 349 381 380 379 378 377 409 408 407 439 438 470 502 534 566 565 597 
[DBG]    Local path (in submap): 596 628 660 692 724 
[DBG]    Suffix (out of submap): 756 755 787 786 818 850 882 881 880 879 878 846 878 877 909 941 973 1005 1004 1003 
[DBG]  Original agent path length 100 je: 46
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 1: 287, 286, 285, 317, 349, 381, 380, 379, 378, 377, 409, 408, 407, 439, 438, 470, 502, 534, 566, 565, 597, 596, 628, 660, 692, 724, 756, 755, 787, 786, 818, 850, 882, 881, 880, 879, 878, 846, 878, 877, 909, 941, 973, 1005, 1004, 1003, 
[DBG]  Path for agent 100 updated, resulting length: 46
[DBG]  Update the agent path 144 | Original local length: 1 | New local length: 1
[DBG]  agent 144 t=0 => decoded (sx,sy)=(1,4) => global_id=631
[DBG]  Complete path of agent 144:
[DBG]    Original: 121 153 185 217 249 281 313 345 377 409 441 441 473 474 506 538 570 602 601 600 632 631 
[DBG]    New:     121 153 185 217 249 281 313 345 377 409 441 441 473 474 506 538 570 602 601 600 632 631 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 121 153 185 217 249 281 313 345 377 409 441 441 473 474 506 538 570 602 601 600 632 
[DBG]    Local path (in submap): 631 
[DBG]    Suffix (out of submap): 
[DBG]  Original agent path length 144 je: 22
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 2: 121, 153, 185, 217, 249, 281, 313, 345, 377, 409, 441, 441, 473, 474, 506, 538, 570, 602, 601, 600, 632, 631, 
[DBG]  Path for agent 144 updated, resulting length: 22
[DBG]  Paths successfully updated.
[DBG]  (LNS.cpp) New path for agent 28: 
[DBG]  661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 660, 692, 724, 725, 726, 727, 
[DBG]  (LNS.cpp) New path for agent 100: 
[DBG]  287, 286, 285, 317, 349, 381, 380, 379, 378, 377, 409, 408, 407, 439, 438, 470, 502, 534, 566, 565, 597, 596, 628, 660, 692, 724, 756, 755, 787, 786, 818, 850, 882, 881, 880, 879, 878, 846, 878, 877, 909, 941, 973, 1005, 1004, 1003, 
[DBG]  (LNS.cpp) New path for agent 144: 
[DBG]  121, 153, 185, 217, 249, 281, 313, 345, 377, 409, 441, 441, 473, 474, 506, 538, 570, 602, 601, 600, 632, 631, 
[DBG]  Delta value: 0.146789
[DBG]  Rewarding metric index = 1
[DBG]  component_weights = {1.42654e-07, 1, 6.28316e-08, 1.08935e-07}
[DBG]  opSuccess value: 1
[STAT] neighbor.sum_of_costs before recomputation: 93
[STAT] neighbor.old_sum_of_costs before recomputation: 109
[STAT] sum_of_costs before recomputation: 4324
[DBG]  Validate solution immediately after SAT success.
[WARNING] Problem after SAT: Target conflict: agent 42 (len 43) traverses target of agent 28 (len 27) at location 727 at timestep 42
[DBG]  [DEBUG] Attempting immediate repair via init_lns because problem occurred after SAT (should be applied only for conflicts...).
[DBG]  [DEBUG] Passing 150 agents to init_lns (skip=true).
[DBG]  [DEBUG] path_table contents for selected agents (neighbor.agents):
[DBG]    Agent 28 => controlling path length=28
[DBG]    Agent 100 => controlling path length=46
[DBG]    Agent 144 => controlling path length=22
[DBG]  hodnota skip_initial_solution=1
[DBG]  We skip initialSolution => call buildCollisionData()
[DBG]  buildCollisionData() called – skip_initial_solution case.
[DBG]  Agents.size()=150, collision_graph.size()=150
[DBG]  agent 28 => updateCollidingPairs => foundCollision
[DBG]  agent 42 => updateCollidingPairs => foundCollision
[DBG]  Conflicting agent pairs:
[DBG]  agent 28 is in conflict with agent 42
[DBG]  buildCollisionData() => sum_of_costs=4308, num_of_colliding_pairs=1
[DBG]  buildCollisionData done => sum_of_costs=4308, num_of_colliding_pairs=1
[DBG]  sum_of_cost hodnota: 4308
[DBG]  After skip/init build => iteration_stats.back(): sum_of_costs=4308, collisions=1
[DEBUG] Using default neighbor generation strategy for conflicts: 2
[DEBUG] Using default neighbor generation strategy for conflicts: 2
	InitLNS(PP): runtime = 0.0019385, iterations = 3, colliding pairs = 0, initial colliding pairs = 1, solution cost = 4333, initial solution cost = 4308, failed iterations = 0
[DBG]  init_lns->sum_of_costs after init_lns->run: 4333
[DBG]  sum_of_costs after assignment from init_lns->run: 4333
[DBG]  Recomputing sum_of_cost by dividing neighbor.sum_of_costs and neighbor.old_sum_of_costs
[STAT] sum_of_costs after recomputation: 4333
[STAT] Iteration 142
[DBG]  Random chance did not select SAT operator (r=79), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 142
[DBG]  Random chance did not select SAT operator (r=45), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 142
[DBG]  Random chance did not select SAT operator (r=74), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 142
[DBG]  Random chance did not select SAT operator (r=63), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 142
[DBG]  Random chance did not select SAT operator (r=96), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 142
[DBG]  Random chance did not select SAT operator (r=26), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 142
[DBG]  Random chance did not select SAT operator (r=16), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 142
[DBG]  Random chance did not select SAT operator (r=24), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 142
[DBG]  Random chance did not select SAT operator (r=83), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 142
[DBG]  Using SAT operator (destroy+repair SAT).
[DBG]  ====================
[DBG]  SAT destroy operator called.
[DBG]  SAT heuristic: 2
[DBG]  key_agent_id: 141
[DBG]  key_agent_id global path length: 27
[DBG]  Submap content (global positions):
[DBG]  13 14 15 16 17 
[DBG]  45 46 47 48 49 
[DBG]  77 78 79 80 81 
[DBG]  109 110 111 112 113 
[DBG]  141 142 143 144 145 
[DBG]  Map content with agents and obstacles:
[DBG]  . . . . X 
[DBG]  . . . . . 
[DBG]  . X A . . 
[DBG]  . . . . . 
[DBG]  . X X A X 
[DBG]  content of the map structure that we pass to the SAT solver:
[DBG]  1  1  1  1  -1  
[DBG]  1  1  1  1  1  
[DBG]  1  -1  1  1  1  
[DBG]  1  1  1  1  1  
[DBG]  1  -1  -1  1  -1  
[DBG]  Identifying agents in a submap for rescheduling (when key_agent is there at the time 9):
[DBG]  Agent 26 found intervals in the sub-map:
[DBG]   [0..6]
[DBG]  Agent 26 is not in sub-map at time 9 (intervals: 
[DBG]  [0..6] )
[DBG]  Agent 40 found intervals in the sub-map:
[DBG]   [20..31]
[DBG]  Agent 40 is not in sub-map at time 9 (intervals: 
[DBG]  [20..31] )
[DBG]  Agent 117 found intervals in the sub-map:
[DBG]   [9..13]
[DBG]  Agent 117 (interval in submap: [9..13]) contains time 9, added to replan.
[DBG]  Agent 141 found intervals in the sub-map:
[DBG]   [0..21]
[DBG]  Agent 141 (interval in submap: [0..21]) contains time 9, added to replan.
[DBG]  Agent 117 | Start (global): 144 -> (local): (4, 3) at time 9 | Goal (global): 109 -> (local): (3, 0) at time 13
[DBG]  Agent 141 | Start (global): 79 -> (local): (2, 2) at time 9 | Goal (global): 141 -> (local): (4, 0) at time 21
[DBG]  [REPAIR] SAT destroy operator called.
[DBG]  [REPAIR] SAT operator – launching subproblem FOR OPTIMIZATION.
[DBG]  Creating local paths (sx, sy) in the submap for T_sync = 9
[DBG]    Agent 117 (global paths from T=9 to 13) has local path: (4,3) (3,3) (3,2) (3,1) (3,0) 
[DBG]    Agent 141 (global paths from T=9 to 21) has local path: (2,2) (2,2) (2,2) (3,2) (3,1) (3,0) (4,0) (4,0) (4,0) (4,0) (4,0) (4,0) (4,0) 
[DBG]  Checking input data for SAT solver:
[DBG]    - Number of agents to replan: 2
[DBG]  Agent 117 has the original local path length: 5 => Start (4,3), Goal (3,0)
[DBG]  Agent 141 has the original local path length: 13 => Start (2,2), Goal (4,0)
[DBG]  Start position: (4, 3), (2, 2), 
[DBG]  Goal position: (3, 0), (4, 0), 
[DBG]  SAT instance and solver created.
Currently solving
Instance name: scen
Map name: map
Encoding used: disappear_at_goal
SAT solver used: Kissat
Optimizing function: sum of costs
Number of agents: 2
Mks LB: 5
SoC LB: 10
Delta: 0
Remaining time: 300000 [ms]

Found plan [agents = 2] [timesteps = 5]
Agent #0 : 19 16 15 14 13 
Agent #1 : 10 15 14 13 18 

[STAT] Solver returned: 0
[DBG]  Agent (index) 117 | New local path (submap idx):
[DBG]  19 16 15 14 13 
[DBG]  Agent (index) 141 | New local path (submap idx):
[DBG]  10 15 14 13 18 
[DBG]  Update the agent path 117 | Original local length: 5 | New local length: 5
[DBG]  agent 117 t=0 => decoded (sx,sy)=(4,3) => global_id=144
[DBG]  agent 117 t=1 => decoded (sx,sy)=(3,3) => global_id=112
[DBG]  agent 117 t=2 => decoded (sx,sy)=(3,2) => global_id=111
[DBG]  agent 117 t=3 => decoded (sx,sy)=(3,1) => global_id=110
[DBG]  agent 117 t=4 => decoded (sx,sy)=(3,0) => global_id=109
[DBG]  Complete path of agent 117:
[DBG]    Original: 214 213 212 180 179 178 177 177 176 144 112 111 110 109 108 76 75 43 42 41 9 8 7 6 5 4 3 2 1 0 
[DBG]    New:     214 213 212 180 179 178 177 177 176 144 112 111 110 109 108 76 75 43 42 41 9 8 7 6 5 4 3 2 1 0 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 214 213 212 180 179 178 177 177 176 
[DBG]    Local path (in submap): 144 112 111 110 109 
[DBG]    Suffix (out of submap): 108 76 75 43 42 41 9 8 7 6 5 4 3 2 1 0 
[DBG]  Original agent path length 117 je: 30
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 0: 214, 213, 212, 180, 179, 178, 177, 177, 176, 144, 112, 111, 110, 109, 108, 76, 75, 43, 42, 41, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 
[DBG]  Path for agent 117 updated, resulting length: 30
[DBG]  Update the agent path 141 | Original local length: 13 | New local length: 5
[DBG]  agent 141 t=0 => decoded (sx,sy)=(2,2) => global_id=79
[DBG]  agent 141 t=1 => decoded (sx,sy)=(3,2) => global_id=111
[DBG]  agent 141 t=2 => decoded (sx,sy)=(3,1) => global_id=110
[DBG]  agent 141 t=3 => decoded (sx,sy)=(3,0) => global_id=109
[DBG]  agent 141 t=4 => decoded (sx,sy)=(4,0) => global_id=141
[DBG]  Complete path of agent 141:
[DBG]    Original: 46 46 46 46 47 79 79 79 79 79 79 79 111 110 109 141 141 141 141 141 141 141 140 108 76 76 44 
[DBG]    New:     46 46 46 46 47 79 79 79 79 79 111 110 109 141 140 108 76 76 44 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 46 46 46 46 47 79 79 79 79 
[DBG]    Local path (in submap): 79 111 110 109 141 140 108 76 76 44 
[DBG]    Suffix (out of submap): 
[DBG]  Original agent path length 141 je: 27
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 1: 46, 46, 46, 46, 47, 79, 79, 79, 79, 79, 111, 110, 109, 141, 140, 108, 76, 76, 44, 
[DBG]  Path for agent 141 updated, resulting length: 19
[DBG]  Paths successfully updated.
[DBG]  (LNS.cpp) New path for agent 117: 
[DBG]  214, 213, 212, 180, 179, 178, 177, 177, 176, 144, 112, 111, 110, 109, 108, 76, 75, 43, 42, 41, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 
[DBG]  (LNS.cpp) New path for agent 141: 
[DBG]  46, 46, 46, 46, 47, 79, 79, 79, 79, 79, 111, 110, 109, 141, 140, 108, 76, 76, 44, 
[DBG]  Delta value: 0.145455
[DBG]  Rewarding metric index = 1
[DBG]  component_weights = {1.18312e-07, 1, 5.21103e-08, 9.03472e-08}
[DBG]  opSuccess value: 1
[STAT] neighbor.sum_of_costs before recomputation: 47
[STAT] neighbor.old_sum_of_costs before recomputation: 55
[STAT] sum_of_costs before recomputation: 4333
[DBG]  Validate solution immediately after SAT success.
[WARNING] Problem after SAT: Vertex conflict between agents 141 and 55 at location 140 at timestep 14
[DBG]  [DEBUG] Attempting immediate repair via init_lns because problem occurred after SAT (should be applied only for conflicts...).
[DBG]  [DEBUG] Passing 150 agents to init_lns (skip=true).
[DBG]  [DEBUG] path_table contents for selected agents (neighbor.agents):
[DBG]    Agent 117 => controlling path length=30
[DBG]    Agent 141 => controlling path length=19
[DBG]  hodnota skip_initial_solution=1
[DBG]  We skip initialSolution => call buildCollisionData()
[DBG]  buildCollisionData() called – skip_initial_solution case.
[DBG]  Agents.size()=150, collision_graph.size()=150
[DBG]  agent 55 => updateCollidingPairs => foundCollision
[DBG]  agent 69 => updateCollidingPairs => foundCollision
[DBG]  agent 139 => updateCollidingPairs => foundCollision
[DBG]  agent 141 => updateCollidingPairs => foundCollision
[DBG]  Conflicting agent pairs:
[DBG]  agent 55 is in conflict with agent 141
[DBG]  agent 69 is in conflict with agent 141
[DBG]  agent 139 is in conflict with agent 141
[DBG]  buildCollisionData() => sum_of_costs=4325, num_of_colliding_pairs=3
[DBG]  buildCollisionData done => sum_of_costs=4325, num_of_colliding_pairs=3
[DBG]  sum_of_cost hodnota: 4325
[DBG]  After skip/init build => iteration_stats.back(): sum_of_costs=4325, collisions=3
[DEBUG] Using default neighbor generation strategy for conflicts: 1
	InitLNS(PP): runtime = 0.00169387, iterations = 2, colliding pairs = 0, initial colliding pairs = 3, solution cost = 4327, initial solution cost = 4325, failed iterations = 0
[DBG]  init_lns->sum_of_costs after init_lns->run: 4327
[DBG]  sum_of_costs after assignment from init_lns->run: 4327
[DBG]  Recomputing sum_of_cost by dividing neighbor.sum_of_costs and neighbor.old_sum_of_costs
[STAT] sum_of_costs after recomputation: 4327
[STAT] Iteration 143
[DBG]  Using SAT operator (destroy+repair SAT).
[DBG]  ====================
[DBG]  SAT destroy operator called.
[DBG]  SAT heuristic: 2
[DBG]  key_agent_id: 141
[DBG]  key_agent_id global path length: 27
[DBG]  Submap content (global positions):
[DBG]  -1 -1 -1 -1 -1 
[DBG]  -1 -1 -1 -1 -1 
[DBG]  13 14 15 16 17 
[DBG]  45 46 47 48 49 
[DBG]  77 78 79 80 81 
[DBG]  Map content with agents and obstacles:
[DBG]  X X X X X 
[DBG]  X X X X X 
[DBG]  . . A . X 
[DBG]  . . . . . 
[DBG]  . X . . . 
[DBG]  content of the map structure that we pass to the SAT solver:
[DBG]  1  1  1  1  1  
[DBG]  1  1  1  1  1  
[DBG]  1  1  1  1  -1  
[DBG]  1  1  1  1  1  
[DBG]  1  -1  1  1  1  
[DBG]  Identifying agents in a submap for rescheduling (when key_agent is there at the time 13):
[DBG]  Agent 26 found intervals in the sub-map:
[DBG]   [0..6]
[DBG]  Agent 26 is not in sub-map at time 13 (intervals: 
[DBG]  [0..6] )
[DBG]  Agent 141 found intervals in the sub-map:
[DBG]   [0..25]
[DBG]  Agent 141 (interval in submap: [0..25]) contains time 13, added to replan.
[DBG]  Agent 141 | Start (global): 15 -> (local): (2, 2) at time 13 | Goal (global): 45 -> (local): (3, 0) at time 25
[DBG]  [REPAIR] SAT destroy operator called.
[DBG]  [REPAIR] SAT operator – launching subproblem FOR OPTIMIZATION.
[DBG]  Creating local paths (sx, sy) in the submap for T_sync = 13
[DBG]    Agent 141 (global paths from T=13 to 25) has local path: (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (3,2) (3,1) (3,0) 
[DBG]  Checking input data for SAT solver:
[DBG]    - Number of agents to replan: 1
[DBG]  Agent 141 has the original local path length: 13 => Start (2,2), Goal (3,0)
[DBG]  Start position: (2, 2), 
[DBG]  Goal position: (3, 0), 
[DBG]  SAT instance and solver created.
Currently solving
Instance name: scen
Map name: map
Encoding used: disappear_at_goal
SAT solver used: Kissat
Optimizing function: sum of costs
Number of agents: 1
Mks LB: 4
SoC LB: 4
Delta: 0
Remaining time: 300000 [ms]

Found plan [agents = 1] [timesteps = 4]
Agent #0 : 12 16 15 14 

[STAT] Solver returned: 0
[DBG]  Agent (index) 141 | New local path (submap idx):
[DBG]  12 16 15 14 
[DBG]  Update the agent path 141 | Original local length: 13 | New local length: 4
[DBG]  agent 141 t=0 => decoded (sx,sy)=(2,2) => global_id=15
[DBG]  agent 141 t=1 => decoded (sx,sy)=(3,2) => global_id=47
[DBG]  agent 141 t=2 => decoded (sx,sy)=(3,1) => global_id=46
[DBG]  agent 141 t=3 => decoded (sx,sy)=(3,0) => global_id=45
[DBG]  Complete path of agent 141:
[DBG]    Original: 46 46 46 46 47 15 15 15 15 15 15 15 15 15 15 15 15 15 15 15 15 15 15 47 46 45 44 
[DBG]    New:     46 46 46 46 47 15 15 15 15 15 15 15 15 15 47 46 45 44 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 46 46 46 46 47 15 15 15 15 15 15 15 15 
[DBG]    Local path (in submap): 15 47 46 45 44 
[DBG]    Suffix (out of submap): 
[DBG]  Original agent path length 141 je: 27
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 0: 46, 46, 46, 46, 47, 15, 15, 15, 15, 15, 15, 15, 15, 15, 47, 46, 45, 44, 
[DBG]  Path for agent 141 updated, resulting length: 18
[DBG]  Paths successfully updated.
[DBG]  (LNS.cpp) New path for agent 141: 
[DBG]  46, 46, 46, 46, 47, 15, 15, 15, 15, 15, 15, 15, 15, 15, 47, 46, 45, 44, 
[DBG]  Delta value: 0.346154
[DBG]  Rewarding metric index = 1
[DBG]  component_weights = {8.34945e-08, 1, 3.6775e-08, 6.37593e-08}
[DBG]  opSuccess value: 1
[STAT] neighbor.sum_of_costs before recomputation: 17
[STAT] neighbor.old_sum_of_costs before recomputation: 26
[STAT] sum_of_costs before recomputation: 4327
[DBG]  Validate solution immediately after SAT success.
[WARNING] Problem after SAT: Target conflict: agent 139 (len 35) traverses target of agent 141 (len 17) at location 44 at timestep 25
[DBG]  [DEBUG] Attempting immediate repair via init_lns because problem occurred after SAT (should be applied only for conflicts...).
[DBG]  [DEBUG] Passing 150 agents to init_lns (skip=true).
[DBG]  [DEBUG] path_table contents for selected agents (neighbor.agents):
[DBG]    Agent 141 => controlling path length=18
[DBG]  hodnota skip_initial_solution=1
[DBG]  We skip initialSolution => call buildCollisionData()
[DBG]  buildCollisionData() called – skip_initial_solution case.
[DBG]  Agents.size()=150, collision_graph.size()=150
[DBG]  agent 139 => updateCollidingPairs => foundCollision
[DBG]  agent 141 => updateCollidingPairs => foundCollision
[DBG]  Conflicting agent pairs:
[DBG]  agent 139 is in conflict with agent 141
[DBG]  buildCollisionData() => sum_of_costs=4318, num_of_colliding_pairs=1
[DBG]  buildCollisionData done => sum_of_costs=4318, num_of_colliding_pairs=1
[DBG]  sum_of_cost hodnota: 4318
[DBG]  After skip/init build => iteration_stats.back(): sum_of_costs=4318, collisions=1
[DEBUG] Using default neighbor generation strategy for conflicts: 0
	InitLNS(PP): runtime = 0.00127942, iterations = 2, colliding pairs = 0, initial colliding pairs = 1, solution cost = 4338, initial solution cost = 4318, failed iterations = 0
[DBG]  init_lns->sum_of_costs after init_lns->run: 4338
[DBG]  sum_of_costs after assignment from init_lns->run: 4338
[DBG]  Recomputing sum_of_cost by dividing neighbor.sum_of_costs and neighbor.old_sum_of_costs
[STAT] sum_of_costs after recomputation: 4338
[STAT] Iteration 144
[DBG]  Random chance did not select SAT operator (r=84), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 144
[DBG]  Random chance did not select SAT operator (r=85), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 144
[DBG]  Random chance did not select SAT operator (r=54), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 144
[DBG]  Random chance did not select SAT operator (r=33), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 144
[DBG]  Random chance did not select SAT operator (r=22), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 144
[DBG]  Random chance did not select SAT operator (r=54), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 144
[DBG]  Random chance did not select SAT operator (r=92), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 144
[DBG]  Random chance did not select SAT operator (r=26), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 144
[DBG]  Random chance did not select SAT operator (r=15), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 144
[DBG]  Random chance did not select SAT operator (r=36), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 144
[DBG]  Random chance did not select SAT operator (r=77), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 144
[DBG]  Random chance did not select SAT operator (r=62), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 144
[DBG]  Random chance did not select SAT operator (r=13), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 144
[DBG]  Random chance did not select SAT operator (r=83), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 144
[DBG]  Random chance did not select SAT operator (r=51), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 144
[DBG]  Using SAT operator (destroy+repair SAT).
[DBG]  ====================
[DBG]  SAT destroy operator called.
[DBG]  SAT heuristic: 2
[DBG]  key_agent_id: 141
[DBG]  key_agent_id global path length: 27
[DBG]  Submap content (global positions):
[DBG]  -1 -1 -1 -1 -1 
[DBG]  15 16 17 18 19 
[DBG]  47 48 49 50 51 
[DBG]  79 80 81 82 83 
[DBG]  111 112 113 114 115 
[DBG]  Map content with agents and obstacles:
[DBG]  X X X X X 
[DBG]  . . X . . 
[DBG]  . . A . X 
[DBG]  . . A . A 
[DBG]  . . . X . 
[DBG]  content of the map structure that we pass to the SAT solver:
[DBG]  1  1  1  1  1  
[DBG]  1  1  -1  1  1  
[DBG]  1  1  1  1  -1  
[DBG]  1  1  1  1  1  
[DBG]  1  1  1  -1  1  
[DBG]  Identifying agents in a submap for rescheduling (when key_agent is there at the time 6):
[DBG]  Agent 26 found intervals in the sub-map:
[DBG]   [2..8]
[DBG]  Agent 26 (interval in submap: [2..8]) contains time 6, added to replan.
[DBG]  Agent 126 found intervals in the sub-map:
[DBG]   [0..6]
[DBG]  Agent 126 (interval in submap: [0..6]) contains time 6, added to replan.
[DBG]  Agent 141 found intervals in the sub-map:
[DBG]   [4..10]
[DBG]  Agent 141 (interval in submap: [4..10]) contains time 6, added to replan.
[DBG]  Agent 26 | Start (global): 81 -> (local): (3, 2) at time 6 | Goal (global): 83 -> (local): (3, 4) at time 8
[DBG]  Agent 126 | Start (global): 83 -> (local): (3, 4) at time 6 | Goal (global): 83 -> (local): (3, 4) at time 6
[DBG]  Agent 141 | Start (global): 49 -> (local): (2, 2) at time 6 | Goal (global): 115 -> (local): (4, 4) at time 10
[DBG]  [REPAIR] SAT destroy operator called.
[DBG]  [REPAIR] SAT operator – launching subproblem FOR OPTIMIZATION.
[DBG]  Creating local paths (sx, sy) in the submap for T_sync = 6
[DBG]    Agent 26 (global paths from T=6 to 8) has local path: (3,2) (3,3) (3,4) 
[DBG]    Agent 126 (global paths from T=6 to 6) has local path: (3,4) 
[DBG]    Agent 141 (global paths from T=6 to 10) has local path: (2,2) (2,3) (3,3) (3,4) (4,4) 
[DBG]  Checking input data for SAT solver:
[DBG]    - Number of agents to replan: 3
[DBG]  Agent 26 has the original local path length: 3 => Start (3,2), Goal (3,4)
[DBG]  Agent 126 has the original local path length: 1 => Start (3,4), Goal (3,4)
[DBG]  Agent 141 has the original local path length: 5 => Start (2,2), Goal (4,4)
[DBG]  Start position: (3, 2), (3, 4), (2, 2), 
[DBG]  Goal position: (3, 4), (3, 4), (4, 4), 
[DBG]  SAT instance and solver created.
Currently solving
Instance name: scen
Map name: map
Encoding used: disappear_at_goal
SAT solver used: Kissat
Optimizing function: sum of costs
Number of agents: 3
Mks LB: 5
SoC LB: 9
Delta: 0
Remaining time: 300000 [ms]

Vertex conflict! Agents 0, 1, timestep 3, location 0
Swapping conflict! Agents 0, 1, timestep 3, edge (0,0)
Vertex conflict! Agents 0, 1, timestep 4, location 0
Found plan [agents = 3] [timesteps = 5]
Agent #0 : 15 16 17 0 0 
Agent #1 : 17 0 0 0 0 
Agent #2 : 11 15 16 17 21 

[STAT] Solver returned: 0
[DBG]  Agent (index) 26 | New local path (submap idx):
[DBG]  15 16 17 
[DBG]  Agent (index) 126 | New local path (submap idx):
[DBG]  17 
[DBG]  Agent (index) 141 | New local path (submap idx):
[DBG]  11 15 16 17 21 
[DBG]  Update the agent path 26 | Original local length: 3 | New local length: 3
[DBG]  agent 26 t=0 => decoded (sx,sy)=(3,2) => global_id=81
[DBG]  agent 26 t=1 => decoded (sx,sy)=(3,3) => global_id=82
[DBG]  agent 26 t=2 => decoded (sx,sy)=(3,4) => global_id=83
[DBG]  Complete path of agent 26:
[DBG]    Original: 13 14 15 47 48 49 81 82 83 84 116 148 180 212 244 276 277 309 341 373 405 437 469 501 533 565 597 629 628 660 660 659 691 692 724 756 755 
[DBG]    New:     13 14 15 47 48 49 81 82 83 84 116 148 180 212 244 276 277 309 341 373 405 437 469 501 533 565 597 629 628 660 660 659 691 692 724 756 755 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 13 14 15 47 48 49 
[DBG]    Local path (in submap): 81 82 83 
[DBG]    Suffix (out of submap): 84 116 148 180 212 244 276 277 309 341 373 405 437 469 501 533 565 597 629 628 660 660 659 691 692 724 756 755 
[DBG]  Original agent path length 26 je: 37
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 0: 13, 14, 15, 47, 48, 49, 81, 82, 83, 84, 116, 148, 180, 212, 244, 276, 277, 309, 341, 373, 405, 437, 469, 501, 533, 565, 597, 629, 628, 660, 660, 659, 691, 692, 724, 756, 755, 
[DBG]  Path for agent 26 updated, resulting length: 37
[DBG]  Update the agent path 126 | Original local length: 1 | New local length: 1
[DBG]  agent 126 t=0 => decoded (sx,sy)=(3,4) => global_id=83
[DBG]  Complete path of agent 126:
[DBG]    Original: 15 16 48 80 81 82 83 84 85 86 54 55 56 24 25 26 27 28 29 
[DBG]    New:     15 16 48 80 81 82 83 84 85 86 54 55 56 24 25 26 27 28 29 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 15 16 48 80 81 82 
[DBG]    Local path (in submap): 83 
[DBG]    Suffix (out of submap): 84 85 86 54 55 56 24 25 26 27 28 29 
[DBG]  Original agent path length 126 je: 19
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 1: 15, 16, 48, 80, 81, 82, 83, 84, 85, 86, 54, 55, 56, 24, 25, 26, 27, 28, 29, 
[DBG]  Path for agent 126 updated, resulting length: 19
[DBG]  Update the agent path 141 | Original local length: 5 | New local length: 5
[DBG]  agent 141 t=0 => decoded (sx,sy)=(2,2) => global_id=49
[DBG]  agent 141 t=1 => decoded (sx,sy)=(3,2) => global_id=81
[DBG]  agent 141 t=2 => decoded (sx,sy)=(3,3) => global_id=82
[DBG]  agent 141 t=3 => decoded (sx,sy)=(3,4) => global_id=83
[DBG]  agent 141 t=4 => decoded (sx,sy)=(4,4) => global_id=115
[DBG]  Complete path of agent 141:
[DBG]    Original: 46 46 46 46 47 48 49 50 82 83 115 147 179 178 210 209 208 207 206 205 204 172 140 108 76 76 44 
[DBG]    New:     46 46 46 46 47 48 49 81 82 83 115 147 179 178 210 209 208 207 206 205 204 172 140 108 76 76 44 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 46 46 46 46 47 48 
[DBG]    Local path (in submap): 49 81 82 83 115 
[DBG]    Suffix (out of submap): 147 179 178 210 209 208 207 206 205 204 172 140 108 76 76 44 
[DBG]  Original agent path length 141 je: 27
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 2: 46, 46, 46, 46, 47, 48, 49, 81, 82, 83, 115, 147, 179, 178, 210, 209, 208, 207, 206, 205, 204, 172, 140, 108, 76, 76, 44, 
[DBG]  Path for agent 141 updated, resulting length: 27
[DBG]  Paths successfully updated.
[DBG]  (LNS.cpp) New path for agent 26: 
[DBG]  13, 14, 15, 47, 48, 49, 81, 82, 83, 84, 116, 148, 180, 212, 244, 276, 277, 309, 341, 373, 405, 437, 469, 501, 533, 565, 597, 629, 628, 660, 660, 659, 691, 692, 724, 756, 755, 
[DBG]  (LNS.cpp) New path for agent 126: 
[DBG]  15, 16, 48, 80, 81, 82, 83, 84, 85, 86, 54, 55, 56, 24, 25, 26, 27, 28, 29, 
[DBG]  (LNS.cpp) New path for agent 141: 
[DBG]  46, 46, 46, 46, 47, 48, 49, 81, 82, 83, 115, 147, 179, 178, 210, 209, 208, 207, 206, 205, 204, 172, 140, 108, 76, 76, 44, 
[DBG]  Delta value: 0
[DBG]  Rewarding metric index = 1
[DBG]  component_weights = {7.93198e-08, 1, 3.49363e-08, 6.05713e-08}
[DBG]  opSuccess value: 1
[STAT] neighbor.sum_of_costs before recomputation: 80
[STAT] neighbor.old_sum_of_costs before recomputation: 80
[STAT] sum_of_costs before recomputation: 4338
[DBG]  Validate solution immediately after SAT success.
[DBG]  No problems after SAT replan.
[DBG]  Recomputing sum_of_cost by dividing neighbor.sum_of_costs and neighbor.old_sum_of_costs
[STAT] sum_of_costs after recomputation: 4338
[STAT] Iteration 145
[DBG]  Random chance did not select SAT operator (r=36), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 145
[DBG]  Random chance did not select SAT operator (r=58), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 145
[DBG]  Random chance did not select SAT operator (r=29), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 145
[DBG]  Random chance did not select SAT operator (r=51), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 145
[DBG]  Random chance did not select SAT operator (r=26), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 145
[DBG]  Random chance did not select SAT operator (r=55), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 145
[DBG]  Random chance did not select SAT operator (r=36), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 145
[DBG]  Random chance did not select SAT operator (r=11), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 145
[DBG]  Random chance did not select SAT operator (r=62), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 145
[DBG]  Random chance did not select SAT operator (r=94), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 145
[DBG]  Random chance did not select SAT operator (r=10), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 145
[DBG]  Random chance did not select SAT operator (r=97), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 145
[DBG]  Using SAT operator (destroy+repair SAT).
[DBG]  ====================
[DBG]  SAT destroy operator called.
[DBG]  SAT heuristic: 2
[DBG]  key_agent_id: 141
[DBG]  key_agent_id global path length: 27
[DBG]  Submap content (global positions):
[DBG]  74 75 76 77 78 
[DBG]  106 107 108 109 110 
[DBG]  138 139 140 141 142 
[DBG]  170 171 172 173 174 
[DBG]  202 203 204 205 206 
[DBG]  Map content with agents and obstacles:
[DBG]  . . . . X 
[DBG]  . . . . . 
[DBG]  . A A . X 
[DBG]  . X . . X 
[DBG]  X . A . A 
[DBG]  content of the map structure that we pass to the SAT solver:
[DBG]  1  1  1  1  -1  
[DBG]  1  1  1  1  1  
[DBG]  1  1  1  1  -1  
[DBG]  1  -1  1  1  -1  
[DBG]  -1  1  1  1  1  
[DBG]  Identifying agents in a submap for rescheduling (when key_agent is there at the time 22):
[DBG]  Agent 15 found intervals in the sub-map:
[DBG]   [15..20]
[DBG]  Agent 15 is not in sub-map at time 22 (intervals: 
[DBG]  [15..20] )
[DBG]  Agent 34 found intervals in the sub-map:
[DBG]   [22..23]
[DBG]  Agent 34 (interval in submap: [22..23]) contains time 22, added to replan.
[DBG]  Agent 115 found intervals in the sub-map:
[DBG]   [16..21]
[DBG]  Agent 115 is not in sub-map at time 22 (intervals: 
[DBG]  [16..21] )
[DBG]  Agent 116 found intervals in the sub-map:
[DBG]   [19..23]
[DBG]  Agent 116 (interval in submap: [19..23]) contains time 22, added to replan.
[DBG]  Agent 141 found intervals in the sub-map:
[DBG]   [18..25]
[DBG]  Agent 141 (interval in submap: [18..25]) contains time 22, added to replan.
[DBG]  Agent 146 found intervals in the sub-map:
[DBG]   [22..27]
[DBG]  Agent 146 (interval in submap: [22..27]) contains time 22, added to replan.
[DBG]  Agent 34 | Start (global): 206 -> (local): (4, 4) at time 22 | Goal (global): 205 -> (local): (4, 3) at time 23
[DBG]  Agent 116 | Start (global): 139 -> (local): (2, 1) at time 22 | Goal (global): 138 -> (local): (2, 0) at time 23
[DBG]  Agent 141 | Start (global): 140 -> (local): (2, 2) at time 22 | Goal (global): 76 -> (local): (0, 2) at time 25
[DBG]  Agent 146 | Start (global): 204 -> (local): (4, 2) at time 22 | Goal (global): 110 -> (local): (1, 4) at time 27
[DBG]  [REPAIR] SAT destroy operator called.
[DBG]  [REPAIR] SAT operator – launching subproblem FOR OPTIMIZATION.
[DBG]  Creating local paths (sx, sy) in the submap for T_sync = 22
[DBG]    Agent 34 (global paths from T=22 to 23) has local path: (4,4) (4,3) 
[DBG]    Agent 116 (global paths from T=22 to 23) has local path: (2,1) (2,0) 
[DBG]    Agent 141 (global paths from T=22 to 25) has local path: (2,2) (1,2) (0,2) (0,2) 
[DBG]    Agent 146 (global paths from T=22 to 27) has local path: (4,2) (3,2) (3,3) (2,3) (1,3) (1,4) 
[DBG]  Checking input data for SAT solver:
[DBG]    - Number of agents to replan: 4
[DBG]  Agent 34 has the original local path length: 2 => Start (4,4), Goal (4,3)
[DBG]  Agent 116 has the original local path length: 2 => Start (2,1), Goal (2,0)
[DBG]  Agent 141 has the original local path length: 4 => Start (2,2), Goal (0,2)
[DBG]  Agent 146 has the original local path length: 6 => Start (4,2), Goal (1,4)
[DBG]  Start position: (4, 4), (2, 1), (2, 2), (4, 2), 
[DBG]  Goal position: (4, 3), (2, 0), (0, 2), (1, 4), 
[DBG]  SAT instance and solver created.
Currently solving
Instance name: scen
Map name: map
Encoding used: disappear_at_goal
SAT solver used: Kissat
Optimizing function: sum of costs
Number of agents: 4
Mks LB: 6
SoC LB: 13
Delta: 0
Remaining time: 300000 [ms]

Vertex conflict! Agents 0, 1, timestep 2, location 0
Swapping conflict! Agents 0, 1, timestep 2, edge (0,0)
Vertex conflict! Agents 0, 1, timestep 3, location 0
Swapping conflict! Agents 0, 1, timestep 3, edge (0,0)
Vertex conflict! Agents 0, 1, timestep 4, location 0
Swapping conflict! Agents 0, 1, timestep 4, edge (0,0)
Vertex conflict! Agents 0, 1, timestep 5, location 0
Vertex conflict! Agents 0, 2, timestep 3, location 0
Swapping conflict! Agents 0, 2, timestep 3, edge (0,0)
Vertex conflict! Agents 0, 2, timestep 4, location 0
Swapping conflict! Agents 0, 2, timestep 4, edge (0,0)
Vertex conflict! Agents 0, 2, timestep 5, location 0
Vertex conflict! Agents 1, 2, timestep 3, location 0
Swapping conflict! Agents 1, 2, timestep 3, edge (0,0)
Vertex conflict! Agents 1, 2, timestep 4, location 0
Swapping conflict! Agents 1, 2, timestep 4, edge (0,0)
Vertex conflict! Agents 1, 2, timestep 5, location 0
Found plan [agents = 4] [timesteps = 6]
Agent #0 : 19 18 0 0 0 0 
Agent #1 : 10 9 0 0 0 0 
Agent #2 : 11 6 2 0 0 0 
Agent #3 : 17 14 15 12 7 8 

[STAT] Solver returned: 0
[DBG]  Agent (index) 34 | New local path (submap idx):
[DBG]  19 18 
[DBG]  Agent (index) 116 | New local path (submap idx):
[DBG]  10 9 
[DBG]  Agent (index) 141 | New local path (submap idx):
[DBG]  11 6 2 
[DBG]  Agent (index) 146 | New local path (submap idx):
[DBG]  17 14 15 12 7 8 
[DBG]  Update the agent path 34 | Original local length: 2 | New local length: 2
[DBG]  agent 34 t=0 => decoded (sx,sy)=(4,4) => global_id=206
[DBG]  agent 34 t=1 => decoded (sx,sy)=(4,3) => global_id=205
[DBG]  Complete path of agent 34:
[DBG]    Original: 63 62 61 60 59 58 90 122 121 120 119 118 117 116 115 147 179 178 210 209 208 207 206 205 237 269 301 
[DBG]    New:     63 62 61 60 59 58 90 122 121 120 119 118 117 116 115 147 179 178 210 209 208 207 206 205 237 269 301 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 63 62 61 60 59 58 90 122 121 120 119 118 117 116 115 147 179 178 210 209 208 207 
[DBG]    Local path (in submap): 206 205 
[DBG]    Suffix (out of submap): 237 269 301 
[DBG]  Original agent path length 34 je: 27
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 0: 63, 62, 61, 60, 59, 58, 90, 122, 121, 120, 119, 118, 117, 116, 115, 147, 179, 178, 210, 209, 208, 207, 206, 205, 237, 269, 301, 
[DBG]  Path for agent 34 updated, resulting length: 27
[DBG]  Update the agent path 116 | Original local length: 2 | New local length: 2
[DBG]  agent 116 t=0 => decoded (sx,sy)=(2,1) => global_id=139
[DBG]  agent 116 t=1 => decoded (sx,sy)=(2,0) => global_id=138
[DBG]  Complete path of agent 116:
[DBG]    Original: 549 550 551 519 487 455 423 424 424 425 393 361 329 330 298 266 234 235 236 204 172 140 139 138 137 
[DBG]    New:     549 550 551 519 487 455 423 424 424 425 393 361 329 330 298 266 234 235 236 204 172 140 139 138 137 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 549 550 551 519 487 455 423 424 424 425 393 361 329 330 298 266 234 235 236 204 172 140 
[DBG]    Local path (in submap): 139 138 
[DBG]    Suffix (out of submap): 137 
[DBG]  Original agent path length 116 je: 25
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 1: 549, 550, 551, 519, 487, 455, 423, 424, 424, 425, 393, 361, 329, 330, 298, 266, 234, 235, 236, 204, 172, 140, 139, 138, 137, 
[DBG]  Path for agent 116 updated, resulting length: 25
[DBG]  Update the agent path 141 | Original local length: 4 | New local length: 3
[DBG]  agent 141 t=0 => decoded (sx,sy)=(2,2) => global_id=140
[DBG]  agent 141 t=1 => decoded (sx,sy)=(1,2) => global_id=108
[DBG]  agent 141 t=2 => decoded (sx,sy)=(0,2) => global_id=76
[DBG]  Complete path of agent 141:
[DBG]    Original: 46 46 46 46 47 48 49 81 82 83 115 147 179 178 210 209 208 207 206 205 204 172 140 108 76 76 44 
[DBG]    New:     46 46 46 46 47 48 49 81 82 83 115 147 179 178 210 209 208 207 206 205 204 172 140 108 76 44 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 46 46 46 46 47 48 49 81 82 83 115 147 179 178 210 209 208 207 206 205 204 172 
[DBG]    Local path (in submap): 140 108 76 44 
[DBG]    Suffix (out of submap): 
[DBG]  Original agent path length 141 je: 27
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 2: 46, 46, 46, 46, 47, 48, 49, 81, 82, 83, 115, 147, 179, 178, 210, 209, 208, 207, 206, 205, 204, 172, 140, 108, 76, 44, 
[DBG]  Path for agent 141 updated, resulting length: 26
[DBG]  Update the agent path 146 | Original local length: 6 | New local length: 6
[DBG]  agent 146 t=0 => decoded (sx,sy)=(4,2) => global_id=204
[DBG]  agent 146 t=1 => decoded (sx,sy)=(3,2) => global_id=172
[DBG]  agent 146 t=2 => decoded (sx,sy)=(3,3) => global_id=173
[DBG]  agent 146 t=3 => decoded (sx,sy)=(2,3) => global_id=141
[DBG]  agent 146 t=4 => decoded (sx,sy)=(1,3) => global_id=109
[DBG]  agent 146 t=5 => decoded (sx,sy)=(1,4) => global_id=110
[DBG]  Complete path of agent 146:
[DBG]    Original: 512 480 448 416 384 352 353 354 355 356 324 325 293 294 295 296 297 298 266 234 235 236 204 172 173 141 109 110 111 79 80 48 49 50 18 19 
[DBG]    New:     512 480 448 416 384 352 353 354 355 356 324 325 293 294 295 296 297 298 266 234 235 236 204 172 173 141 109 110 111 79 80 48 49 50 18 19 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 512 480 448 416 384 352 353 354 355 356 324 325 293 294 295 296 297 298 266 234 235 236 
[DBG]    Local path (in submap): 204 172 173 141 109 110 
[DBG]    Suffix (out of submap): 111 79 80 48 49 50 18 19 
[DBG]  Original agent path length 146 je: 36
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 3: 512, 480, 448, 416, 384, 352, 353, 354, 355, 356, 324, 325, 293, 294, 295, 296, 297, 298, 266, 234, 235, 236, 204, 172, 173, 141, 109, 110, 111, 79, 80, 48, 49, 50, 18, 19, 
[DBG]  Path for agent 146 updated, resulting length: 36
[DBG]  Paths successfully updated.
[DBG]  (LNS.cpp) New path for agent 34: 
[DBG]  63, 62, 61, 60, 59, 58, 90, 122, 121, 120, 119, 118, 117, 116, 115, 147, 179, 178, 210, 209, 208, 207, 206, 205, 237, 269, 301, 
[DBG]  (LNS.cpp) New path for agent 116: 
[DBG]  549, 550, 551, 519, 487, 455, 423, 424, 424, 425, 393, 361, 329, 330, 298, 266, 234, 235, 236, 204, 172, 140, 139, 138, 137, 
[DBG]  (LNS.cpp) New path for agent 141: 
[DBG]  46, 46, 46, 46, 47, 48, 49, 81, 82, 83, 115, 147, 179, 178, 210, 209, 208, 207, 206, 205, 204, 172, 140, 108, 76, 44, 
[DBG]  (LNS.cpp) New path for agent 146: 
[DBG]  512, 480, 448, 416, 384, 352, 353, 354, 355, 356, 324, 325, 293, 294, 295, 296, 297, 298, 266, 234, 235, 236, 204, 172, 173, 141, 109, 110, 111, 79, 80, 48, 49, 50, 18, 19, 
[DBG]  Delta value: 0.00900901
[DBG]  Rewarding metric index = 1
[DBG]  component_weights = {7.4681e-08, 1, 3.28931e-08, 5.7029e-08}
[DBG]  opSuccess value: 1
[STAT] neighbor.sum_of_costs before recomputation: 110
[STAT] neighbor.old_sum_of_costs before recomputation: 111
[STAT] sum_of_costs before recomputation: 4338
[DBG]  Validate solution immediately after SAT success.
[WARNING] Problem after SAT: Vertex conflict between agents 141 and 139 at location 44 at timestep 25
[DBG]  [DEBUG] Attempting immediate repair via init_lns because problem occurred after SAT (should be applied only for conflicts...).
[DBG]  [DEBUG] Passing 150 agents to init_lns (skip=true).
[DBG]  [DEBUG] path_table contents for selected agents (neighbor.agents):
[DBG]    Agent 34 => controlling path length=27
[DBG]    Agent 116 => controlling path length=25
[DBG]    Agent 141 => controlling path length=26
[DBG]    Agent 146 => controlling path length=36
[DBG]  hodnota skip_initial_solution=1
[DBG]  We skip initialSolution => call buildCollisionData()
[DBG]  buildCollisionData() called – skip_initial_solution case.
[DBG]  Agents.size()=150, collision_graph.size()=150
[DBG]  agent 139 => updateCollidingPairs => foundCollision
[DBG]  agent 141 => updateCollidingPairs => foundCollision
[DBG]  Conflicting agent pairs:
[DBG]  agent 139 is in conflict with agent 141
[DBG]  buildCollisionData() => sum_of_costs=4337, num_of_colliding_pairs=1
[DBG]  buildCollisionData done => sum_of_costs=4337, num_of_colliding_pairs=1
[DBG]  sum_of_cost hodnota: 4337
[DBG]  After skip/init build => iteration_stats.back(): sum_of_costs=4337, collisions=1
[DEBUG] Using default neighbor generation strategy for conflicts: 2
[DEBUG] Using default neighbor generation strategy for conflicts: 0
	InitLNS(PP): runtime = 0.00222979, iterations = 3, colliding pairs = 0, initial colliding pairs = 1, solution cost = 4305, initial solution cost = 4337, failed iterations = 0
[DBG]  init_lns->sum_of_costs after init_lns->run: 4305
[DBG]  sum_of_costs after assignment from init_lns->run: 4305
[DBG]  Recomputing sum_of_cost by dividing neighbor.sum_of_costs and neighbor.old_sum_of_costs
[STAT] sum_of_costs after recomputation: 4305
[STAT] Iteration 146
[DBG]  Using SAT operator (destroy+repair SAT).
[DBG]  ====================
[DBG]  SAT destroy operator called.
[DBG]  SAT heuristic: 2
[DBG]  key_agent_id: 28
[DBG]  key_agent_id global path length: 44
[DBG]  Submap content (global positions):
[DBG]  595 596 597 598 599 
[DBG]  627 628 629 630 631 
[DBG]  659 660 661 662 663 
[DBG]  691 692 693 694 695 
[DBG]  723 724 725 726 727 
[DBG]  Map content with agents and obstacles:
[DBG]  X . . X A 
[DBG]  . . . X . 
[DBG]  . . A X X 
[DBG]  . . X X X 
[DBG]  X A . . . 
[DBG]  content of the map structure that we pass to the SAT solver:
[DBG]  -1  1  1  -1  1  
[DBG]  1  1  1  -1  1  
[DBG]  1  1  1  -1  -1  
[DBG]  1  1  -1  -1  -1  
[DBG]  -1  1  1  1  1  
[DBG]  Identifying agents in a submap for rescheduling (when key_agent is there at the time 3):
[DBG]  Agent 7 found intervals in the sub-map:
[DBG]   [1..2]
[DBG]  Agent 7 is not in sub-map at time 3 (intervals: 
[DBG]  [1..2] )
[DBG]  Agent 17 found intervals in the sub-map:
[DBG]   [3..6]
[DBG]  Agent 17 (interval in submap: [3..6]) contains time 3, added to replan.
[DBG]  Agent 28 found intervals in the sub-map:
[DBG]   [0..43]
[DBG]  Agent 28 (interval in submap: [0..43]) contains time 3, added to replan.
[DBG]  Agent 108 found intervals in the sub-map:
[DBG]   [0..5]
[DBG]  Agent 108 (interval in submap: [0..5]) contains time 3, added to replan.
[DBG]  Agent 17 | Start (global): 599 -> (local): (0, 4) at time 3 | Goal (global): 599 -> (local): (0, 4) at time 6
[DBG]  Agent 28 | Start (global): 661 -> (local): (2, 2) at time 3 | Goal (global): 727 -> (local): (4, 4) at time 43
[DBG]  Agent 108 | Start (global): 724 -> (local): (4, 1) at time 3 | Goal (global): 725 -> (local): (4, 2) at time 5
[DBG]  [REPAIR] SAT destroy operator called.
[DBG]  [REPAIR] SAT operator – launching subproblem FOR OPTIMIZATION.
[DBG]  Creating local paths (sx, sy) in the submap for T_sync = 3
[DBG]    Agent 17 (global paths from T=3 to 6) has local path: (0,4) (0,4) (0,4) (0,4) 
[DBG]    Agent 28 (global paths from T=3 to 43) has local path: (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,1) (1,1) (0,1) (0,2) (1,2) (1,2) (0,2) (0,1) (0,1) (1,1) (1,0) (1,0) (1,0) (2,0) (3,0) (3,1) (4,1) (4,2) (4,3) (4,4) 
[DBG]    Agent 108 (global paths from T=3 to 5) has local path: (4,1) (4,1) (4,2) 
[DBG]  Checking input data for SAT solver:
[DBG]    - Number of agents to replan: 3
[DBG]  Agent 17 has the original local path length: 4 => Start (0,4), Goal (0,4)
[DBG]  Agent 28 has the original local path length: 41 => Start (2,2), Goal (4,4)
[DBG]  Agent 108 has the original local path length: 3 => Start (4,1), Goal (4,2)
[DBG]  Start position: (0, 4), (2, 2), (4, 1), 
[DBG]  Goal position: (0, 4), (4, 4), (4, 2), 
[DBG]  SAT instance and solver created.
Currently solving
Instance name: scen
Map name: map
Encoding used: disappear_at_goal
SAT solver used: Kissat
Optimizing function: sum of costs
Number of agents: 3
Mks LB: 7
SoC LB: 10
Delta: 0
Remaining time: 300000 [ms]

Vertex conflict! Agents 0, 2, timestep 2, location 0
Swapping conflict! Agents 0, 2, timestep 2, edge (0,0)
Vertex conflict! Agents 0, 2, timestep 3, location 0
Swapping conflict! Agents 0, 2, timestep 3, edge (0,0)
Vertex conflict! Agents 0, 2, timestep 4, location 0
Swapping conflict! Agents 0, 2, timestep 4, edge (0,0)
Vertex conflict! Agents 0, 2, timestep 5, location 0
Swapping conflict! Agents 0, 2, timestep 5, edge (0,0)
Vertex conflict! Agents 0, 2, timestep 6, location 0
Found plan [agents = 3] [timesteps = 7]
Agent #0 : 2 0 0 0 0 0 0 
Agent #1 : 9 8 11 12 13 14 15 
Agent #2 : 12 13 0 0 0 0 0 

[STAT] Solver returned: 0
[DBG]  Agent (index) 17 | New local path (submap idx):
[DBG]  2 
[DBG]  Agent (index) 28 | New local path (submap idx):
[DBG]  9 8 11 12 13 14 15 
[DBG]  Agent (index) 108 | New local path (submap idx):
[DBG]  12 13 
[DBG]  Update the agent path 17 | Original local length: 4 | New local length: 1
[DBG]  agent 17 t=0 => decoded (sx,sy)=(0,4) => global_id=599
[DBG]  Complete path of agent 17:
[DBG]    Original: 664 632 600 599 599 599 599 600 601 569 570 571 571 571 571 571 572 
[DBG]    New:     664 632 600 599 600 601 569 570 571 571 571 571 571 572 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 664 632 600 
[DBG]    Local path (in submap): 599 600 601 569 
[DBG]    Suffix (out of submap): 570 571 571 571 571 571 572 
[DBG]  Original agent path length 17 je: 17
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 0: 664, 632, 600, 599, 600, 601, 569, 570, 571, 571, 571, 571, 571, 572, 
[DBG]  Path for agent 17 updated, resulting length: 14
[DBG]  Update the agent path 28 | Original local length: 41 | New local length: 7
[DBG]  agent 28 t=0 => decoded (sx,sy)=(2,2) => global_id=661
[DBG]  agent 28 t=1 => decoded (sx,sy)=(2,1) => global_id=660
[DBG]  agent 28 t=2 => decoded (sx,sy)=(3,1) => global_id=692
[DBG]  agent 28 t=3 => decoded (sx,sy)=(4,1) => global_id=724
[DBG]  agent 28 t=4 => decoded (sx,sy)=(4,2) => global_id=725
[DBG]  agent 28 t=5 => decoded (sx,sy)=(4,3) => global_id=726
[DBG]  agent 28 t=6 => decoded (sx,sy)=(4,4) => global_id=727
[DBG]  Complete path of agent 28:
[DBG]    Original: 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 660 628 596 597 629 629 597 596 596 628 627 627 627 659 691 692 724 725 726 727 
[DBG]    New:     661 661 661 661 660 692 724 725 726 727 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 661 661 661 
[DBG]    Local path (in submap): 661 660 692 724 725 726 727 
[DBG]    Suffix (out of submap): 
[DBG]  Original agent path length 28 je: 44
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 1: 661, 661, 661, 661, 660, 692, 724, 725, 726, 727, 
[DBG]  Path for agent 28 updated, resulting length: 10
[DBG]  Update the agent path 108 | Original local length: 3 | New local length: 2
[DBG]  agent 108 t=0 => decoded (sx,sy)=(4,1) => global_id=724
[DBG]  agent 108 t=1 => decoded (sx,sy)=(4,2) => global_id=725
[DBG]  Complete path of agent 108:
[DBG]    Original: 628 660 692 724 724 725 757 756 788 820 821 822 823 855 887 919 920 952 953 954 955 956 988 989 1021 
[DBG]    New:     628 660 692 724 725 757 756 788 820 821 822 823 855 887 919 920 952 953 954 955 956 988 989 1021 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 628 660 692 
[DBG]    Local path (in submap): 724 725 757 
[DBG]    Suffix (out of submap): 756 788 820 821 822 823 855 887 919 920 952 953 954 955 956 988 989 1021 
[DBG]  Original agent path length 108 je: 25
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 2: 628, 660, 692, 724, 725, 757, 756, 788, 820, 821, 822, 823, 855, 887, 919, 920, 952, 953, 954, 955, 956, 988, 989, 1021, 
[DBG]  Path for agent 108 updated, resulting length: 24
[DBG]  Paths successfully updated.
[DBG]  (LNS.cpp) New path for agent 17: 
[DBG]  664, 632, 600, 599, 600, 601, 569, 570, 571, 571, 571, 571, 571, 572, 
[DBG]  (LNS.cpp) New path for agent 28: 
[DBG]  661, 661, 661, 661, 660, 692, 724, 725, 726, 727, 
[DBG]  (LNS.cpp) New path for agent 108: 
[DBG]  628, 660, 692, 724, 725, 757, 756, 788, 820, 821, 822, 823, 855, 887, 919, 920, 952, 953, 954, 955, 956, 988, 989, 1021, 
[DBG]  Delta value: 0.457831
[DBG]  Rewarding metric index = 1
[DBG]  component_weights = {4.86661e-08, 1, 2.14349e-08, 3.71631e-08}
[DBG]  opSuccess value: 1
[STAT] neighbor.sum_of_costs before recomputation: 45
[STAT] neighbor.old_sum_of_costs before recomputation: 83
[STAT] sum_of_costs before recomputation: 4305
[DBG]  Validate solution immediately after SAT success.
[WARNING] Problem after SAT: Vertex conflict between agents 7 and 108 at location 756 at timestep 6
[DBG]  [DEBUG] Attempting immediate repair via init_lns because problem occurred after SAT (should be applied only for conflicts...).
[DBG]  [DEBUG] Passing 150 agents to init_lns (skip=true).
[DBG]  [DEBUG] path_table contents for selected agents (neighbor.agents):
[DBG]    Agent 17 => controlling path length=14
[DBG]    Agent 28 => controlling path length=10
[DBG]    Agent 108 => controlling path length=24
[DBG]  hodnota skip_initial_solution=1
[DBG]  We skip initialSolution => call buildCollisionData()
[DBG]  buildCollisionData() called – skip_initial_solution case.
[DBG]  Agents.size()=150, collision_graph.size()=150
[DBG]  agent 7 => updateCollidingPairs => foundCollision
[DBG]  agent 17 => updateCollidingPairs => foundCollision
[DBG]  agent 25 => updateCollidingPairs => foundCollision
[DBG]  agent 28 => updateCollidingPairs => foundCollision
[DBG]  agent 42 => updateCollidingPairs => foundCollision
[DBG]  agent 46 => updateCollidingPairs => foundCollision
[DBG]  agent 64 => updateCollidingPairs => foundCollision
[DBG]  agent 70 => updateCollidingPairs => foundCollision
[DBG]  agent 91 => updateCollidingPairs => foundCollision
[DBG]  agent 108 => updateCollidingPairs => foundCollision
[DBG]  agent 119 => updateCollidingPairs => foundCollision
[DBG]  agent 135 => updateCollidingPairs => foundCollision
[DBG]  Conflicting agent pairs:
[DBG]  agent 7 is in conflict with agent 108
[DBG]  agent 17 is in conflict with agent 25
[DBG]  agent 17 is in conflict with agent 64
[DBG]  agent 28 is in conflict with agent 42
[DBG]  agent 28 is in conflict with agent 46
[DBG]  agent 28 is in conflict with agent 70
[DBG]  agent 28 is in conflict with agent 119
[DBG]  agent 28 is in conflict with agent 135
[DBG]  agent 91 is in conflict with agent 108
[DBG]  buildCollisionData() => sum_of_costs=4267, num_of_colliding_pairs=9
[DBG]  buildCollisionData done => sum_of_costs=4267, num_of_colliding_pairs=9
[DBG]  sum_of_cost hodnota: 4267
[DBG]  After skip/init build => iteration_stats.back(): sum_of_costs=4267, collisions=9
[DEBUG] Using default neighbor generation strategy for conflicts: 1
[DEBUG] Using default neighbor generation strategy for conflicts: 0
[DEBUG] Using default neighbor generation strategy for conflicts: 0
	InitLNS(PP): runtime = 0.00487221, iterations = 4, colliding pairs = 0, initial colliding pairs = 9, solution cost = 4333, initial solution cost = 4267, failed iterations = 0
[DBG]  init_lns->sum_of_costs after init_lns->run: 4333
[DBG]  sum_of_costs after assignment from init_lns->run: 4333
[DBG]  Recomputing sum_of_cost by dividing neighbor.sum_of_costs and neighbor.old_sum_of_costs
[STAT] sum_of_costs after recomputation: 4333
[STAT] Iteration 147
[DBG]  Random chance did not select SAT operator (r=12), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 147
[DBG]  Random chance did not select SAT operator (r=59), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 147
[DBG]  Random chance did not select SAT operator (r=40), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 147
[DBG]  Random chance did not select SAT operator (r=61), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 147
[DBG]  Random chance did not select SAT operator (r=56), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 147
[DBG]  Random chance did not select SAT operator (r=43), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 147
[DBG]  Random chance did not select SAT operator (r=32), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 147
[DBG]  Random chance did not select SAT operator (r=28), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 147
[DBG]  Random chance did not select SAT operator (r=94), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 147
[DBG]  Random chance did not select SAT operator (r=72), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 147
[DBG]  Using SAT operator (destroy+repair SAT).
[DBG]  ====================
[DBG]  SAT destroy operator called.
[DBG]  SAT heuristic: 2
[DBG]  key_agent_id: 28
[DBG]  key_agent_id global path length: 44
[DBG]  Submap content (global positions):
[DBG]  594 595 596 597 598 
[DBG]  626 627 628 629 630 
[DBG]  658 659 660 661 662 
[DBG]  690 691 692 693 694 
[DBG]  722 723 724 725 726 
[DBG]  Map content with agents and obstacles:
[DBG]  . X . . X 
[DBG]  X . . . X 
[DBG]  . . A . X 
[DBG]  X . A X X 
[DBG]  . X A . A 
[DBG]  content of the map structure that we pass to the SAT solver:
[DBG]  1  -1  1  1  -1  
[DBG]  -1  1  1  1  -1  
[DBG]  1  1  1  1  -1  
[DBG]  -1  1  1  -1  -1  
[DBG]  1  -1  1  1  1  
[DBG]  Identifying agents in a submap for rescheduling (when key_agent is there at the time 5):
[DBG]  Agent 28 found intervals in the sub-map:
[DBG]   [0..26]
[DBG]  Agent 28 (interval in submap: [0..26]) contains time 5, added to replan.
[DBG]  Agent 46 found intervals in the sub-map:
[DBG]   [5..7]
[DBG]  Agent 46 (interval in submap: [5..7]) contains time 5, added to replan.
[DBG]  Agent 62 found intervals in the sub-map:
[DBG]  
[DBG]  Agent 62 is not in sub-map at time 5 (intervals: 
[DBG]  )
[DBG]  Agent 74 found intervals in the sub-map:
[DBG]   [25..35]
[DBG]  Agent 74 is not in sub-map at time 5 (intervals: 
[DBG]  [25..35] )
[DBG]  Agent 89 found intervals in the sub-map:
[DBG]   [7..12]
[DBG]  Agent 89 is not in sub-map at time 5 (intervals: 
[DBG]  [7..12] )
[DBG]  Agent 91 found intervals in the sub-map:
[DBG]   [4..5]
[DBG]  Agent 91 (interval in submap: [4..5]) contains time 5, added to replan.
[DBG]  Agent 108 found intervals in the sub-map:
[DBG]   [0..6]
[DBG]  Agent 108 (interval in submap: [0..6]) contains time 5, added to replan.
[DBG]  Agent 28 | Start (global): 660 -> (local): (2, 2) at time 5 | Goal (global): 724 -> (local): (4, 2) at time 26
[DBG]  Agent 46 | Start (global): 724 -> (local): (4, 2) at time 5 | Goal (global): 726 -> (local): (4, 4) at time 7
[DBG]  Agent 91 | Start (global): 726 -> (local): (4, 4) at time 5 | Goal (global): 726 -> (local): (4, 4) at time 5
[DBG]  Agent 108 | Start (global): 692 -> (local): (3, 2) at time 5 | Goal (global): 724 -> (local): (4, 2) at time 6
[DBG]  [REPAIR] SAT destroy operator called.
[DBG]  [REPAIR] SAT operator – launching subproblem FOR OPTIMIZATION.
[DBG]  Creating local paths (sx, sy) in the submap for T_sync = 5
[DBG]    Agent 28 (global paths from T=5 to 26) has local path: (2,2) (3,2) (4,2) (4,2) (4,2) (4,2) (4,2) (4,3) (4,3) (4,3) (4,3) (4,3) (4,3) (4,3) (4,3) (4,3) (4,3) (4,3) (4,3) (4,3) (4,3) (4,2) 
[DBG]    Agent 46 (global paths from T=5 to 7) has local path: (4,2) (4,3) (4,4) 
[DBG]    Agent 91 (global paths from T=5 to 5) has local path: (4,4) 
[DBG]    Agent 108 (global paths from T=5 to 6) has local path: (3,2) (4,2) 
[DBG]  Checking input data for SAT solver:
[DBG]    - Number of agents to replan: 4
[DBG]  Agent 28 has the original local path length: 22 => Start (2,2), Goal (4,2)
[DBG]  Agent 46 has the original local path length: 3 => Start (4,2), Goal (4,4)
[DBG]  Agent 91 has the original local path length: 1 => Start (4,4), Goal (4,4)
[DBG]  Agent 108 has the original local path length: 2 => Start (3,2), Goal (4,2)
[DBG]  Start position: (2, 2), (4, 2), (4, 4), (3, 2), 
[DBG]  Goal position: (4, 2), (4, 4), (4, 4), (4, 2), 
[DBG]  SAT instance and solver created.
Currently solving
Instance name: scen
Map name: map
Encoding used: disappear_at_goal
SAT solver used: Kissat
Optimizing function: sum of costs
Number of agents: 4
Mks LB: 3
SoC LB: 9
Delta: 0
Remaining time: 300000 [ms]

Vertex conflict! Agents 2, 3, timestep 2, location 0
Found plan [agents = 4] [timesteps = 3]
Agent #0 : 8 11 13 
Agent #1 : 13 14 15 
Agent #2 : 15 0 0 
Agent #3 : 11 13 0 

[STAT] Solver returned: 0
[DBG]  Agent (index) 28 | New local path (submap idx):
[DBG]  8 11 13 
[DBG]  Agent (index) 46 | New local path (submap idx):
[DBG]  13 14 15 
[DBG]  Agent (index) 91 | New local path (submap idx):
[DBG]  15 
[DBG]  Agent (index) 108 | New local path (submap idx):
[DBG]  11 13 
[DBG]  Update the agent path 28 | Original local length: 22 | New local length: 3
[DBG]  agent 28 t=0 => decoded (sx,sy)=(2,2) => global_id=660
[DBG]  agent 28 t=1 => decoded (sx,sy)=(3,2) => global_id=692
[DBG]  agent 28 t=2 => decoded (sx,sy)=(4,2) => global_id=724
[DBG]  Complete path of agent 28:
[DBG]    Original: 661 661 661 661 660 660 692 724 724 724 724 724 725 725 725 725 725 725 725 725 725 725 725 725 725 725 724 756 788 820 821 822 854 855 856 824 792 793 761 729 728 728 728 727 
[DBG]    New:     661 661 661 661 660 660 692 724 756 788 820 821 822 854 855 856 824 792 793 761 729 728 728 728 727 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 661 661 661 661 660 
[DBG]    Local path (in submap): 660 692 724 756 788 820 821 822 854 855 856 824 792 793 761 729 728 728 728 727 
[DBG]    Suffix (out of submap): 
[DBG]  Original agent path length 28 je: 44
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 0: 661, 661, 661, 661, 660, 660, 692, 724, 756, 788, 820, 821, 822, 854, 855, 856, 824, 792, 793, 761, 729, 728, 728, 728, 727, 
[DBG]  Path for agent 28 updated, resulting length: 25
[DBG]  Update the agent path 46 | Original local length: 3 | New local length: 3
[DBG]  agent 46 t=0 => decoded (sx,sy)=(4,2) => global_id=724
[DBG]  agent 46 t=1 => decoded (sx,sy)=(4,3) => global_id=725
[DBG]  agent 46 t=2 => decoded (sx,sy)=(4,4) => global_id=726
[DBG]  Complete path of agent 46:
[DBG]    Original: 786 787 788 788 756 724 725 726 727 728 696 664 632 600 601 602 603 604 572 540 508 476 444 412 380 348 349 317 285 284 252 
[DBG]    New:     786 787 788 788 756 724 725 726 727 728 696 664 632 600 601 602 603 604 572 540 508 476 444 412 380 348 349 317 285 284 252 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 786 787 788 788 756 
[DBG]    Local path (in submap): 724 725 726 
[DBG]    Suffix (out of submap): 727 728 696 664 632 600 601 602 603 604 572 540 508 476 444 412 380 348 349 317 285 284 252 
[DBG]  Original agent path length 46 je: 31
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 1: 786, 787, 788, 788, 756, 724, 725, 726, 727, 728, 696, 664, 632, 600, 601, 602, 603, 604, 572, 540, 508, 476, 444, 412, 380, 348, 349, 317, 285, 284, 252, 
[DBG]  Path for agent 46 updated, resulting length: 31
[DBG]  Update the agent path 91 | Original local length: 1 | New local length: 1
[DBG]  agent 91 t=0 => decoded (sx,sy)=(4,4) => global_id=726
[DBG]  Complete path of agent 91:
[DBG]    Original: 787 788 756 757 725 726 727 728 696 664 632 633 601 602 602 603 571 539 540 508 476 477 445 413 381 
[DBG]    New:     787 788 756 757 725 726 727 728 696 664 632 633 601 602 602 603 571 539 540 508 476 477 445 413 381 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 787 788 756 757 725 
[DBG]    Local path (in submap): 726 
[DBG]    Suffix (out of submap): 727 728 696 664 632 633 601 602 602 603 571 539 540 508 476 477 445 413 381 
[DBG]  Original agent path length 91 je: 25
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 2: 787, 788, 756, 757, 725, 726, 727, 728, 696, 664, 632, 633, 601, 602, 602, 603, 571, 539, 540, 508, 476, 477, 445, 413, 381, 
[DBG]  Path for agent 91 updated, resulting length: 25
[DBG]  Update the agent path 108 | Original local length: 2 | New local length: 2
[DBG]  agent 108 t=0 => decoded (sx,sy)=(3,2) => global_id=692
[DBG]  agent 108 t=1 => decoded (sx,sy)=(4,2) => global_id=724
[DBG]  Complete path of agent 108:
[DBG]    Original: 628 628 628 660 692 692 724 756 788 820 821 822 823 855 887 919 920 952 953 954 955 956 957 989 1021 
[DBG]    New:     628 628 628 660 692 692 724 756 788 820 821 822 823 855 887 919 920 952 953 954 955 956 957 989 1021 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 628 628 628 660 692 
[DBG]    Local path (in submap): 692 724 
[DBG]    Suffix (out of submap): 756 788 820 821 822 823 855 887 919 920 952 953 954 955 956 957 989 1021 
[DBG]  Original agent path length 108 je: 25
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 3: 628, 628, 628, 660, 692, 692, 724, 756, 788, 820, 821, 822, 823, 855, 887, 919, 920, 952, 953, 954, 955, 956, 957, 989, 1021, 
[DBG]  Path for agent 108 updated, resulting length: 25
[DBG]  Paths successfully updated.
[DBG]  (LNS.cpp) New path for agent 28: 
[DBG]  661, 661, 661, 661, 660, 660, 692, 724, 756, 788, 820, 821, 822, 854, 855, 856, 824, 792, 793, 761, 729, 728, 728, 728, 727, 
[DBG]  (LNS.cpp) New path for agent 46: 
[DBG]  786, 787, 788, 788, 756, 724, 725, 726, 727, 728, 696, 664, 632, 600, 601, 602, 603, 604, 572, 540, 508, 476, 444, 412, 380, 348, 349, 317, 285, 284, 252, 
[DBG]  (LNS.cpp) New path for agent 91: 
[DBG]  787, 788, 756, 757, 725, 726, 727, 728, 696, 664, 632, 633, 601, 602, 602, 603, 571, 539, 540, 508, 476, 477, 445, 413, 381, 
[DBG]  (LNS.cpp) New path for agent 108: 
[DBG]  628, 628, 628, 660, 692, 692, 724, 756, 788, 820, 821, 822, 823, 855, 887, 919, 920, 952, 953, 954, 955, 956, 957, 989, 1021, 
[DBG]  Delta value: 0.157025
[DBG]  Rewarding metric index = 1
[DBG]  component_weights = {3.99583e-08, 1, 1.75996e-08, 3.05136e-08}
[DBG]  opSuccess value: 1
[STAT] neighbor.sum_of_costs before recomputation: 102
[STAT] neighbor.old_sum_of_costs before recomputation: 121
[STAT] sum_of_costs before recomputation: 4333
[DBG]  Validate solution immediately after SAT success.
[WARNING] Problem after SAT: Target conflict: agent 42 (len 43) traverses target of agent 28 (len 24) at location 727 at timestep 42
[DBG]  [DEBUG] Attempting immediate repair via init_lns because problem occurred after SAT (should be applied only for conflicts...).
[DBG]  [DEBUG] Passing 150 agents to init_lns (skip=true).
[DBG]  [DEBUG] path_table contents for selected agents (neighbor.agents):
[DBG]    Agent 28 => controlling path length=25
[DBG]    Agent 46 => controlling path length=31
[DBG]    Agent 91 => controlling path length=25
[DBG]    Agent 108 => controlling path length=25
[DBG]  hodnota skip_initial_solution=1
[DBG]  We skip initialSolution => call buildCollisionData()
[DBG]  buildCollisionData() called – skip_initial_solution case.
[DBG]  Agents.size()=150, collision_graph.size()=150
[DBG]  agent 28 => updateCollidingPairs => foundCollision
[DBG]  agent 42 => updateCollidingPairs => foundCollision
[DBG]  agent 119 => updateCollidingPairs => foundCollision
[DBG]  Conflicting agent pairs:
[DBG]  agent 28 is in conflict with agent 42
[DBG]  agent 28 is in conflict with agent 119
[DBG]  buildCollisionData() => sum_of_costs=4314, num_of_colliding_pairs=2
[DBG]  buildCollisionData done => sum_of_costs=4314, num_of_colliding_pairs=2
[DBG]  sum_of_cost hodnota: 4314
[DBG]  After skip/init build => iteration_stats.back(): sum_of_costs=4314, collisions=2
[DEBUG] Using default neighbor generation strategy for conflicts: 1
	InitLNS(PP): runtime = 0.00178704, iterations = 2, colliding pairs = 0, initial colliding pairs = 2, solution cost = 4333, initial solution cost = 4314, failed iterations = 0
[DBG]  init_lns->sum_of_costs after init_lns->run: 4333
[DBG]  sum_of_costs after assignment from init_lns->run: 4333
[DBG]  Recomputing sum_of_cost by dividing neighbor.sum_of_costs and neighbor.old_sum_of_costs
[STAT] sum_of_costs after recomputation: 4333
[STAT] Iteration 148
[DBG]  Random chance did not select SAT operator (r=12), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 148
[DBG]  Random chance did not select SAT operator (r=73), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 148
[DBG]  Random chance did not select SAT operator (r=47), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 148
[DBG]  Random chance did not select SAT operator (r=83), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 148
[DBG]  Random chance did not select SAT operator (r=89), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 148
[DBG]  Random chance did not select SAT operator (r=43), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 148
[DBG]  Using SAT operator (destroy+repair SAT).
[DBG]  ====================
[DBG]  SAT destroy operator called.
[DBG]  SAT heuristic: 2
[DBG]  key_agent_id: 28
[DBG]  key_agent_id global path length: 44
[DBG]  Submap content (global positions):
[DBG]  659 660 661 662 663 
[DBG]  691 692 693 694 695 
[DBG]  723 724 725 726 727 
[DBG]  755 756 757 758 759 
[DBG]  787 788 789 790 791 
[DBG]  Map content with agents and obstacles:
[DBG]  . . . X X 
[DBG]  . A X X X 
[DBG]  X A A . . 
[DBG]  . A . X . 
[DBG]  . . X . X 
[DBG]  content of the map structure that we pass to the SAT solver:
[DBG]  1  1  1  -1  -1  
[DBG]  1  1  -1  -1  -1  
[DBG]  -1  1  1  1  1  
[DBG]  1  1  1  -1  1  
[DBG]  1  1  -1  1  -1  
[DBG]  Identifying agents in a submap for rescheduling (when key_agent is there at the time 16):
[DBG]  Agent 28 found intervals in the sub-map:
[DBG]   [0..28] [43..43]
[DBG]  Agent 28 (interval in submap: [0..28]) contains time 16, added to replan.
[DBG]  Agent 70 found intervals in the sub-map:
[DBG]  
[DBG]  Agent 70 is not in sub-map at time 16 (intervals: 
[DBG]  )
[DBG]  Agent 74 found intervals in the sub-map:
[DBG]   [26..26]
[DBG]  Agent 74 is not in sub-map at time 16 (intervals: 
[DBG]  [26..26] )
[DBG]  Agent 86 found intervals in the sub-map:
[DBG]   [10..10]
[DBG]  Agent 86 is not in sub-map at time 16 (intervals: 
[DBG]  [10..10] )
[DBG]  Agent 89 found intervals in the sub-map:
[DBG]   [9..15]
[DBG]  Agent 89 is not in sub-map at time 16 (intervals: 
[DBG]  [9..15] )
[DBG]  Agent 101 found intervals in the sub-map:
[DBG]   [12..18]
[DBG]  Agent 101 (interval in submap: [12..18]) contains time 16, added to replan.
[DBG]  Agent 119 found intervals in the sub-map:
[DBG]   [15..20]
[DBG]  Agent 119 (interval in submap: [15..20]) contains time 16, added to replan.
[DBG]  Agent 135 found intervals in the sub-map:
[DBG]   [4..19]
[DBG]  Agent 135 (interval in submap: [4..19]) contains time 16, added to replan.
[DBG]  Agent 137 found intervals in the sub-map:
[DBG]   [12..13]
[DBG]  Agent 137 is not in sub-map at time 16 (intervals: 
[DBG]  [12..13] )
[DBG]  Agent 28 | Start (global): 725 -> (local): (2, 2) at time 16 | Goal (global): 788 -> (local): (4, 1) at time 28
[DBG]  Agent 101 | Start (global): 692 -> (local): (1, 1) at time 16 | Goal (global): 659 -> (local): (0, 0) at time 18
[DBG]  Agent 119 | Start (global): 756 -> (local): (3, 1) at time 16 | Goal (global): 659 -> (local): (0, 0) at time 20
[DBG]  Agent 135 | Start (global): 724 -> (local): (2, 1) at time 16 | Goal (global): 659 -> (local): (0, 0) at time 19
[DBG]  [REPAIR] SAT destroy operator called.
[DBG]  [REPAIR] SAT operator – launching subproblem FOR OPTIMIZATION.
[DBG]  Creating local paths (sx, sy) in the submap for T_sync = 16
[DBG]    Agent 28 (global paths from T=16 to 28) has local path: (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,1) (3,1) (4,1) 
[DBG]    Agent 101 (global paths from T=16 to 18) has local path: (1,1) (1,0) (0,0) 
[DBG]    Agent 119 (global paths from T=16 to 20) has local path: (3,1) (2,1) (1,1) (1,0) (0,0) 
[DBG]    Agent 135 (global paths from T=16 to 19) has local path: (2,1) (1,1) (0,1) (0,0) 
[DBG]  Checking input data for SAT solver:
[DBG]    - Number of agents to replan: 4
[DBG]  Agent 28 has the original local path length: 13 => Start (2,2), Goal (4,1)
[DBG]  Agent 101 has the original local path length: 3 => Start (1,1), Goal (0,0)
[DBG]  Agent 119 has the original local path length: 5 => Start (3,1), Goal (0,0)
[DBG]  Agent 135 has the original local path length: 4 => Start (2,1), Goal (0,0)
[DBG]  Start position: (2, 2), (1, 1), (3, 1), (2, 1), 
[DBG]  Goal position: (4, 1), (0, 0), (0, 0), (0, 0), 
[DBG]  SAT instance and solver created.
Currently solving
Instance name: scen
Map name: map
Encoding used: disappear_at_goal
SAT solver used: Kissat
Optimizing function: sum of costs
Number of agents: 4
Mks LB: 5
SoC LB: 16
Delta: 0
Remaining time: 300000 [ms]

Vertex conflict! Agents 0, 1, timestep 4, location 0
Vertex conflict! Agents 0, 2, timestep 4, location 0
Vertex conflict! Agents 0, 3, timestep 4, location 0
Vertex conflict! Agents 1, 2, timestep 4, location 0
Vertex conflict! Agents 1, 3, timestep 3, location 0
Swapping conflict! Agents 1, 3, timestep 3, edge (0,0)
Vertex conflict! Agents 1, 3, timestep 4, location 0
Vertex conflict! Agents 2, 3, timestep 4, location 0
Found plan [agents = 4] [timesteps = 5]
Agent #0 : 6 11 10 14 0 
Agent #1 : 4 3 0 0 0 
Agent #2 : 10 5 4 3 0 
Agent #3 : 5 4 3 0 0 

[STAT] Solver returned: 0
[DBG]  Agent (index) 28 | New local path (submap idx):
[DBG]  6 11 10 14 
[DBG]  Agent (index) 101 | New local path (submap idx):
[DBG]  4 3 0 
[DBG]  Agent (index) 119 | New local path (submap idx):
[DBG]  10 5 4 3 0 
[DBG]  Agent (index) 135 | New local path (submap idx):
[DBG]  5 4 3 0 
[DBG]  Update the agent path 28 | Original local length: 13 | New local length: 4
[DBG]  agent 28 t=0 => decoded (sx,sy)=(2,2) => global_id=725
[DBG]  agent 28 t=1 => decoded (sx,sy)=(3,2) => global_id=757
[DBG]  agent 28 t=2 => decoded (sx,sy)=(3,1) => global_id=756
[DBG]  agent 28 t=3 => decoded (sx,sy)=(4,1) => global_id=788
[DBG]  Complete path of agent 28:
[DBG]    Original: 661 661 661 661 660 660 692 724 724 724 724 724 725 725 725 725 725 725 725 725 725 725 725 725 725 725 724 756 788 820 821 822 823 824 792 793 761 729 728 728 728 728 728 727 
[DBG]    New:     661 661 661 661 660 660 692 724 724 724 724 724 725 725 725 725 725 757 756 788 820 821 822 823 824 792 793 761 729 728 728 728 728 728 727 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 661 661 661 661 660 660 692 724 724 724 724 724 725 725 725 725 
[DBG]    Local path (in submap): 725 757 756 788 820 821 822 823 824 792 793 761 729 
[DBG]    Suffix (out of submap): 728 728 728 728 728 727 
[DBG]  Original agent path length 28 je: 44
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 0: 661, 661, 661, 661, 660, 660, 692, 724, 724, 724, 724, 724, 725, 725, 725, 725, 725, 757, 756, 788, 820, 821, 822, 823, 824, 792, 793, 761, 729, 728, 728, 728, 728, 728, 727, 
[DBG]  Path for agent 28 updated, resulting length: 35
[DBG]  Update the agent path 101 | Original local length: 3 | New local length: 3
[DBG]  agent 101 t=0 => decoded (sx,sy)=(1,1) => global_id=692
[DBG]  agent 101 t=1 => decoded (sx,sy)=(1,0) => global_id=691
[DBG]  agent 101 t=2 => decoded (sx,sy)=(0,0) => global_id=659
[DBG]  Complete path of agent 101:
[DBG]    Original: 985 984 983 982 950 918 886 885 884 883 851 819 787 788 756 724 692 691 659 658 657 656 655 623 591 590 589 588 556 556 524 492 460 428 427 395 363 331 299 300 268 236 204 172 140 139 138 106 105 104 136 168 
[DBG]    New:     985 984 983 982 950 918 886 885 884 883 851 819 787 788 756 724 692 691 659 658 657 656 655 623 591 590 589 588 556 556 524 492 460 428 427 395 363 331 299 300 268 236 204 172 140 139 138 106 105 104 136 168 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 985 984 983 982 950 918 886 885 884 883 851 819 787 788 756 724 
[DBG]    Local path (in submap): 692 691 659 
[DBG]    Suffix (out of submap): 658 657 656 655 623 591 590 589 588 556 556 524 492 460 428 427 395 363 331 299 300 268 236 204 172 140 139 138 106 105 104 136 168 
[DBG]  Original agent path length 101 je: 52
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 1: 985, 984, 983, 982, 950, 918, 886, 885, 884, 883, 851, 819, 787, 788, 756, 724, 692, 691, 659, 658, 657, 656, 655, 623, 591, 590, 589, 588, 556, 556, 524, 492, 460, 428, 427, 395, 363, 331, 299, 300, 268, 236, 204, 172, 140, 139, 138, 106, 105, 104, 136, 168, 
[DBG]  Path for agent 101 updated, resulting length: 52
[DBG]  Update the agent path 119 | Original local length: 5 | New local length: 5
[DBG]  agent 119 t=0 => decoded (sx,sy)=(3,1) => global_id=756
[DBG]  agent 119 t=1 => decoded (sx,sy)=(2,1) => global_id=724
[DBG]  agent 119 t=2 => decoded (sx,sy)=(1,1) => global_id=692
[DBG]  agent 119 t=3 => decoded (sx,sy)=(1,0) => global_id=691
[DBG]  agent 119 t=4 => decoded (sx,sy)=(0,0) => global_id=659
[DBG]  Complete path of agent 119:
[DBG]    Original: 861 893 892 891 891 890 889 888 856 855 854 854 822 821 820 788 756 724 692 691 659 658 657 656 655 623 622 590 558 526 494 462 430 429 428 427 395 363 331 299 300 268 236 204 172 140 
[DBG]    New:     861 893 892 891 891 890 889 888 856 855 854 854 822 821 820 788 756 724 692 691 659 658 657 656 655 623 622 590 558 526 494 462 430 429 428 427 395 363 331 299 300 268 236 204 172 140 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 861 893 892 891 891 890 889 888 856 855 854 854 822 821 820 788 
[DBG]    Local path (in submap): 756 724 692 691 659 
[DBG]    Suffix (out of submap): 658 657 656 655 623 622 590 558 526 494 462 430 429 428 427 395 363 331 299 300 268 236 204 172 140 
[DBG]  Original agent path length 119 je: 46
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 2: 861, 893, 892, 891, 891, 890, 889, 888, 856, 855, 854, 854, 822, 821, 820, 788, 756, 724, 692, 691, 659, 658, 657, 656, 655, 623, 622, 590, 558, 526, 494, 462, 430, 429, 428, 427, 395, 363, 331, 299, 300, 268, 236, 204, 172, 140, 
[DBG]  Path for agent 119 updated, resulting length: 46
[DBG]  Update the agent path 135 | Original local length: 4 | New local length: 4
[DBG]  agent 135 t=0 => decoded (sx,sy)=(2,1) => global_id=724
[DBG]  agent 135 t=1 => decoded (sx,sy)=(1,1) => global_id=692
[DBG]  agent 135 t=2 => decoded (sx,sy)=(1,0) => global_id=691
[DBG]  agent 135 t=3 => decoded (sx,sy)=(0,0) => global_id=659
[DBG]  Complete path of agent 135:
[DBG]    Original: 696 696 696 728 727 759 759 759 759 727 726 725 757 757 757 756 724 692 660 659 658 657 656 655 654 622 590 589 588 588 556 524 523 522 521 520 519 487 486 485 484 483 482 450 449 448 416 384 
[DBG]    New:     696 696 696 728 727 759 759 759 759 727 726 725 757 757 757 756 724 692 691 659 658 657 656 655 654 622 590 589 588 588 556 524 523 522 521 520 519 487 486 485 484 483 482 450 449 448 416 384 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 696 696 696 728 727 759 759 759 759 727 726 725 757 757 757 756 
[DBG]    Local path (in submap): 724 692 691 659 
[DBG]    Suffix (out of submap): 658 657 656 655 654 622 590 589 588 588 556 524 523 522 521 520 519 487 486 485 484 483 482 450 449 448 416 384 
[DBG]  Original agent path length 135 je: 48
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 3: 696, 696, 696, 728, 727, 759, 759, 759, 759, 727, 726, 725, 757, 757, 757, 756, 724, 692, 691, 659, 658, 657, 656, 655, 654, 622, 590, 589, 588, 588, 556, 524, 523, 522, 521, 520, 519, 487, 486, 485, 484, 483, 482, 450, 449, 448, 416, 384, 
[DBG]  Path for agent 135 updated, resulting length: 48
[DBG]  Paths successfully updated.
[DBG]  (LNS.cpp) New path for agent 28: 
[DBG]  661, 661, 661, 661, 660, 660, 692, 724, 724, 724, 724, 724, 725, 725, 725, 725, 725, 757, 756, 788, 820, 821, 822, 823, 824, 792, 793, 761, 729, 728, 728, 728, 728, 728, 727, 
[DBG]  (LNS.cpp) New path for agent 101: 
[DBG]  985, 984, 983, 982, 950, 918, 886, 885, 884, 883, 851, 819, 787, 788, 756, 724, 692, 691, 659, 658, 657, 656, 655, 623, 591, 590, 589, 588, 556, 556, 524, 492, 460, 428, 427, 395, 363, 331, 299, 300, 268, 236, 204, 172, 140, 139, 138, 106, 105, 104, 136, 168, 
[DBG]  (LNS.cpp) New path for agent 119: 
[DBG]  861, 893, 892, 891, 891, 890, 889, 888, 856, 855, 854, 854, 822, 821, 820, 788, 756, 724, 692, 691, 659, 658, 657, 656, 655, 623, 622, 590, 558, 526, 494, 462, 430, 429, 428, 427, 395, 363, 331, 299, 300, 268, 236, 204, 172, 140, 
[DBG]  (LNS.cpp) New path for agent 135: 
[DBG]  696, 696, 696, 728, 727, 759, 759, 759, 759, 727, 726, 725, 757, 757, 757, 756, 724, 692, 691, 659, 658, 657, 656, 655, 654, 622, 590, 589, 588, 588, 556, 524, 523, 522, 521, 520, 519, 487, 486, 485, 484, 483, 482, 450, 449, 448, 416, 384, 
[DBG]  Delta value: 0.0483871
[DBG]  Rewarding metric index = 1
[DBG]  component_weights = {3.62084e-08, 1, 1.59479e-08, 2.765e-08}
[DBG]  opSuccess value: 1
[STAT] neighbor.sum_of_costs before recomputation: 177
[STAT] neighbor.old_sum_of_costs before recomputation: 186
[STAT] sum_of_costs before recomputation: 4333
[DBG]  Validate solution immediately after SAT success.
[WARNING] Problem after SAT: Target conflict: agent 42 (len 43) traverses target of agent 28 (len 34) at location 727 at timestep 42
[DBG]  [DEBUG] Attempting immediate repair via init_lns because problem occurred after SAT (should be applied only for conflicts...).
[DBG]  [DEBUG] Passing 150 agents to init_lns (skip=true).
[DBG]  [DEBUG] path_table contents for selected agents (neighbor.agents):
[DBG]    Agent 28 => controlling path length=35
[DBG]    Agent 101 => controlling path length=52
[DBG]    Agent 119 => controlling path length=46
[DBG]    Agent 135 => controlling path length=48
[DBG]  hodnota skip_initial_solution=1
[DBG]  We skip initialSolution => call buildCollisionData()
[DBG]  buildCollisionData() called – skip_initial_solution case.
[DBG]  Agents.size()=150, collision_graph.size()=150
[DBG]  agent 28 => updateCollidingPairs => foundCollision
[DBG]  agent 42 => updateCollidingPairs => foundCollision
[DBG]  agent 96 => updateCollidingPairs => foundCollision
[DBG]  Conflicting agent pairs:
[DBG]  agent 28 is in conflict with agent 42
[DBG]  agent 28 is in conflict with agent 96
[DBG]  buildCollisionData() => sum_of_costs=4324, num_of_colliding_pairs=2
[DBG]  buildCollisionData done => sum_of_costs=4324, num_of_colliding_pairs=2
[DBG]  sum_of_cost hodnota: 4324
[DBG]  After skip/init build => iteration_stats.back(): sum_of_costs=4324, collisions=2
[DEBUG] Using default neighbor generation strategy for conflicts: 0
	InitLNS(PP): runtime = 0.00121438, iterations = 2, colliding pairs = 0, initial colliding pairs = 2, solution cost = 4305, initial solution cost = 4324, failed iterations = 0
[DBG]  init_lns->sum_of_costs after init_lns->run: 4305
[DBG]  sum_of_costs after assignment from init_lns->run: 4305
[DBG]  Recomputing sum_of_cost by dividing neighbor.sum_of_costs and neighbor.old_sum_of_costs
[STAT] sum_of_costs after recomputation: 4305
[STAT] Iteration 149
[DBG]  Random chance did not select SAT operator (r=45), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 149
[DBG]  Random chance did not select SAT operator (r=77), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 149
[DBG]  Random chance did not select SAT operator (r=79), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 149
[DBG]  Random chance did not select SAT operator (r=95), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 149
[DBG]  Random chance did not select SAT operator (r=97), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 149
[DBG]  Random chance did not select SAT operator (r=29), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 149
[DBG]  Random chance did not select SAT operator (r=67), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 149
[DBG]  Using SAT operator (destroy+repair SAT).
[DBG]  ====================
[DBG]  SAT destroy operator called.
[DBG]  SAT heuristic: 2
[DBG]  key_agent_id: 28
[DBG]  key_agent_id global path length: 44
[DBG]  Submap content (global positions):
[DBG]  595 596 597 598 599 
[DBG]  627 628 629 630 631 
[DBG]  659 660 661 662 663 
[DBG]  691 692 693 694 695 
[DBG]  723 724 725 726 727 
[DBG]  Map content with agents and obstacles:
[DBG]  X . A X . 
[DBG]  . A . X . 
[DBG]  . . A X X 
[DBG]  . . X X X 
[DBG]  X . . . A 
[DBG]  content of the map structure that we pass to the SAT solver:
[DBG]  -1  1  1  -1  1  
[DBG]  1  1  1  -1  1  
[DBG]  1  1  1  -1  -1  
[DBG]  1  1  -1  -1  -1  
[DBG]  -1  1  1  1  1  
[DBG]  Identifying agents in a submap for rescheduling (when key_agent is there at the time 9):
[DBG]  Agent 7 found intervals in the sub-map:
[DBG]   [1..2]
[DBG]  Agent 7 is not in sub-map at time 9 (intervals: 
[DBG]  [1..2] )
[DBG]  Agent 28 found intervals in the sub-map:
[DBG]   [0..31] [41..43]
[DBG]  Agent 28 (interval in submap: [0..31]) contains time 9, added to replan.
[DBG]  Agent 46 found intervals in the sub-map:
[DBG]   [5..8]
[DBG]  Agent 46 is not in sub-map at time 9 (intervals: 
[DBG]  [5..8] )
[DBG]  Agent 89 found intervals in the sub-map:
[DBG]   [7..12]
[DBG]  Agent 89 (interval in submap: [7..12]) contains time 9, added to replan.
[DBG]  Agent 135 found intervals in the sub-map:
[DBG]   [4..4] [9..11] [16..19]
[DBG]  Agent 135 (interval in submap: [9..11]) contains time 9, added to replan.
[DBG]  Agent 137 found intervals in the sub-map:
[DBG]   [9..13]
[DBG]  Agent 137 (interval in submap: [9..13]) contains time 9, added to replan.
[DBG]  Agent 28 | Start (global): 661 -> (local): (2, 2) at time 9 | Goal (global): 724 -> (local): (4, 1) at time 31
[DBG]  Agent 89 | Start (global): 628 -> (local): (1, 1) at time 9 | Goal (global): 724 -> (local): (4, 1) at time 12
[DBG]  Agent 135 | Start (global): 727 -> (local): (4, 4) at time 9 | Goal (global): 725 -> (local): (4, 2) at time 11
[DBG]  Agent 137 | Start (global): 597 -> (local): (0, 2) at time 9 | Goal (global): 659 -> (local): (2, 0) at time 13
[DBG]  [REPAIR] SAT destroy operator called.
[DBG]  [REPAIR] SAT operator – launching subproblem FOR OPTIMIZATION.
[DBG]  Creating local paths (sx, sy) in the submap for T_sync = 9
[DBG]    Agent 28 (global paths from T=9 to 31) has local path: (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,1) (3,1) (3,0) (3,0) (3,1) (4,1) 
[DBG]    Agent 89 (global paths from T=9 to 12) has local path: (1,1) (2,1) (3,1) (4,1) 
[DBG]    Agent 135 (global paths from T=9 to 11) has local path: (4,4) (4,3) (4,2) 
[DBG]    Agent 137 (global paths from T=9 to 13) has local path: (0,2) (1,2) (1,1) (2,1) (2,0) 
[DBG]  Checking input data for SAT solver:
[DBG]    - Number of agents to replan: 4
[DBG]  Agent 28 has the original local path length: 23 => Start (2,2), Goal (4,1)
[DBG]  Agent 89 has the original local path length: 4 => Start (1,1), Goal (4,1)
[DBG]  Agent 135 has the original local path length: 3 => Start (4,4), Goal (4,2)
[DBG]  Agent 137 has the original local path length: 5 => Start (0,2), Goal (2,0)
[DBG]  Start position: (2, 2), (1, 1), (4, 4), (0, 2), 
[DBG]  Goal position: (4, 1), (4, 1), (4, 2), (2, 0), 
[DBG]  SAT instance and solver created.
Currently solving
Instance name: scen
Map name: map
Encoding used: disappear_at_goal
SAT solver used: Kissat
Optimizing function: sum of costs
Number of agents: 4
Mks LB: 5
SoC LB: 16
Delta: 0
Remaining time: 300000 [ms]

[STAT] Solver returned: -1
[DBG]  SAT solver failed.
[STAT] SAT solver failed to find a valid solution.
[DBG]  ====================
[DBG]  SAT destroy operator called.
[DBG]  SAT heuristic: 2
[DBG]  key_agent_id: 28
[DBG]  key_agent_id global path length: 44
[DBG]  Submap content (global positions):
[DBG]  595 596 597 598 599 
[DBG]  627 628 629 630 631 
[DBG]  659 660 661 662 663 
[DBG]  691 692 693 694 695 
[DBG]  723 724 725 726 727 
[DBG]  Map content with agents and obstacles:
[DBG]  X A . X . 
[DBG]  . . . X . 
[DBG]  . . A X X 
[DBG]  . . X X X 
[DBG]  X . . . A 
[DBG]  content of the map structure that we pass to the SAT solver:
[DBG]  -1  1  1  -1  1  
[DBG]  1  1  1  -1  1  
[DBG]  1  1  1  -1  -1  
[DBG]  1  1  -1  -1  -1  
[DBG]  -1  1  1  1  1  
[DBG]  Identifying agents in a submap for rescheduling (when key_agent is there at the time 8):
[DBG]  Agent 28 found intervals in the sub-map:
[DBG]   [0..31] [41..43]
[DBG]  Agent 28 (interval in submap: [0..31]) contains time 8, added to replan.
[DBG]  Agent 46 found intervals in the sub-map:
[DBG]   [5..8]
[DBG]  Agent 46 (interval in submap: [5..8]) contains time 8, added to replan.
[DBG]  Agent 89 found intervals in the sub-map:
[DBG]   [7..12]
[DBG]  Agent 89 (interval in submap: [7..12]) contains time 8, added to replan.
[DBG]  Agent 91 found intervals in the sub-map:
[DBG]   [4..6]
[DBG]  Agent 91 is not in sub-map at time 8 (intervals: 
[DBG]  [4..6] )
[DBG]  Agent 28 | Start (global): 661 -> (local): (2, 2) at time 8 | Goal (global): 724 -> (local): (4, 1) at time 31
[DBG]  Agent 46 | Start (global): 727 -> (local): (4, 4) at time 8 | Goal (global): 727 -> (local): (4, 4) at time 8
[DBG]  Agent 89 | Start (global): 596 -> (local): (0, 1) at time 8 | Goal (global): 724 -> (local): (4, 1) at time 12
[DBG]  [REPAIR] SAT destroy operator called.
[DBG]  [REPAIR] SAT operator – launching subproblem FOR OPTIMIZATION.
[DBG]  Creating local paths (sx, sy) in the submap for T_sync = 8
[DBG]    Agent 28 (global paths from T=8 to 31) has local path: (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,1) (3,1) (3,0) (3,0) (3,1) (4,1) 
[DBG]    Agent 46 (global paths from T=8 to 8) has local path: (4,4) 
[DBG]    Agent 89 (global paths from T=8 to 12) has local path: (0,1) (1,1) (2,1) (3,1) (4,1) 
[DBG]  Checking input data for SAT solver:
[DBG]    - Number of agents to replan: 3
[DBG]  Agent 28 has the original local path length: 24 => Start (2,2), Goal (4,1)
[DBG]  Agent 46 has the original local path length: 1 => Start (4,4), Goal (4,4)
[DBG]  Agent 89 has the original local path length: 5 => Start (0,1), Goal (4,1)
[DBG]  Start position: (2, 2), (4, 4), (0, 1), 
[DBG]  Goal position: (4, 1), (4, 4), (4, 1), 
[DBG]  SAT instance and solver created.
Currently solving
Instance name: scen
Map name: map
Encoding used: disappear_at_goal
SAT solver used: Kissat
Optimizing function: sum of costs
Number of agents: 3
Mks LB: 5
SoC LB: 10
Delta: 0
Remaining time: 300000 [ms]

Vertex conflict! Agents 0, 1, timestep 4, location 0
Found plan [agents = 3] [timesteps = 5]
Agent #0 : 9 8 11 12 0 
Agent #1 : 15 0 0 0 0 
Agent #2 : 0 4 8 11 12 

[STAT] Solver returned: 0
[DBG]  Agent (index) 28 | New local path (submap idx):
[DBG]  9 8 11 12 
[DBG]  Agent (index) 46 | New local path (submap idx):
[DBG]  15 
[DBG]  Agent (index) 89 | New local path (submap idx):
[DBG]  0 4 8 11 12 
[DBG]  Update the agent path 28 | Original local length: 24 | New local length: 4
[DBG]  agent 28 t=0 => decoded (sx,sy)=(2,2) => global_id=661
[DBG]  agent 28 t=1 => decoded (sx,sy)=(2,1) => global_id=660
[DBG]  agent 28 t=2 => decoded (sx,sy)=(3,1) => global_id=692
[DBG]  agent 28 t=3 => decoded (sx,sy)=(4,1) => global_id=724
[DBG]  Complete path of agent 28:
[DBG]    Original: 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 660 692 691 691 692 724 756 757 757 757 757 757 757 757 757 725 726 727 
[DBG]    New:     661 661 661 661 661 661 661 661 661 660 692 724 756 757 757 757 757 757 757 757 757 725 726 727 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 661 661 661 661 661 661 661 661 
[DBG]    Local path (in submap): 661 660 692 724 756 757 757 757 757 757 757 757 757 725 726 727 
[DBG]    Suffix (out of submap): 
[DBG]  Original agent path length 28 je: 44
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 0: 661, 661, 661, 661, 661, 661, 661, 661, 661, 660, 692, 724, 756, 757, 757, 757, 757, 757, 757, 757, 757, 725, 726, 727, 
[DBG]  Path for agent 28 updated, resulting length: 24
[DBG]  Update the agent path 46 | Original local length: 1 | New local length: 1
[DBG]  agent 46 t=0 => decoded (sx,sy)=(4,4) => global_id=727
[DBG]  Complete path of agent 46:
[DBG]    Original: 786 787 788 788 756 724 725 726 727 728 696 664 632 600 601 602 603 604 572 540 508 476 444 412 380 348 349 317 285 284 252 
[DBG]    New:     786 787 788 788 756 724 725 726 727 728 696 664 632 600 601 602 603 604 572 540 508 476 444 412 380 348 349 317 285 284 252 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 786 787 788 788 756 724 725 726 
[DBG]    Local path (in submap): 727 
[DBG]    Suffix (out of submap): 728 696 664 632 600 601 602 603 604 572 540 508 476 444 412 380 348 349 317 285 284 252 
[DBG]  Original agent path length 46 je: 31
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 1: 786, 787, 788, 788, 756, 724, 725, 726, 727, 728, 696, 664, 632, 600, 601, 602, 603, 604, 572, 540, 508, 476, 444, 412, 380, 348, 349, 317, 285, 284, 252, 
[DBG]  Path for agent 46 updated, resulting length: 31
[DBG]  Update the agent path 89 | Original local length: 5 | New local length: 5
[DBG]  agent 89 t=0 => decoded (sx,sy)=(0,1) => global_id=596
[DBG]  agent 89 t=1 => decoded (sx,sy)=(1,1) => global_id=628
[DBG]  agent 89 t=2 => decoded (sx,sy)=(2,1) => global_id=660
[DBG]  agent 89 t=3 => decoded (sx,sy)=(3,1) => global_id=692
[DBG]  agent 89 t=4 => decoded (sx,sy)=(4,1) => global_id=724
[DBG]  Complete path of agent 89:
[DBG]    Original: 437 469 501 502 534 533 565 597 596 628 660 692 724 756 755 787 788 820 821 822 854 886 918 950 982 983 1015 
[DBG]    New:     437 469 501 502 534 533 565 597 596 628 660 692 724 756 755 787 788 820 821 822 854 886 918 950 982 983 1015 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 437 469 501 502 534 533 565 597 
[DBG]    Local path (in submap): 596 628 660 692 724 
[DBG]    Suffix (out of submap): 756 755 787 788 820 821 822 854 886 918 950 982 983 1015 
[DBG]  Original agent path length 89 je: 27
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 2: 437, 469, 501, 502, 534, 533, 565, 597, 596, 628, 660, 692, 724, 756, 755, 787, 788, 820, 821, 822, 854, 886, 918, 950, 982, 983, 1015, 
[DBG]  Path for agent 89 updated, resulting length: 27
[DBG]  Paths successfully updated.
[DBG]  (LNS.cpp) New path for agent 28: 
[DBG]  661, 661, 661, 661, 661, 661, 661, 661, 661, 660, 692, 724, 756, 757, 757, 757, 757, 757, 757, 757, 757, 725, 726, 727, 
[DBG]  (LNS.cpp) New path for agent 46: 
[DBG]  786, 787, 788, 788, 756, 724, 725, 726, 727, 728, 696, 664, 632, 600, 601, 602, 603, 604, 572, 540, 508, 476, 444, 412, 380, 348, 349, 317, 285, 284, 252, 
[DBG]  (LNS.cpp) New path for agent 89: 
[DBG]  437, 469, 501, 502, 534, 533, 565, 597, 596, 628, 660, 692, 724, 756, 755, 787, 788, 820, 821, 822, 854, 886, 918, 950, 982, 983, 1015, 
[DBG]  Delta value: 0.20202
[DBG]  Rewarding metric index = 1
[DBG]  component_weights = {2.86168e-08, 1, 1.26042e-08, 2.18528e-08}
[DBG]  opSuccess value: 1
[STAT] neighbor.sum_of_costs before recomputation: 79
[STAT] neighbor.old_sum_of_costs before recomputation: 99
[STAT] sum_of_costs before recomputation: 4305
[DBG]  Validate solution immediately after SAT success.
[WARNING] Problem after SAT: Target conflict: agent 42 (len 43) traverses target of agent 28 (len 23) at location 727 at timestep 42
[DBG]  [DEBUG] Attempting immediate repair via init_lns because problem occurred after SAT (should be applied only for conflicts...).
[DBG]  [DEBUG] Passing 150 agents to init_lns (skip=true).
[DBG]  [DEBUG] path_table contents for selected agents (neighbor.agents):
[DBG]    Agent 28 => controlling path length=24
[DBG]    Agent 46 => controlling path length=31
[DBG]    Agent 89 => controlling path length=27
[DBG]  hodnota skip_initial_solution=1
[DBG]  We skip initialSolution => call buildCollisionData()
[DBG]  buildCollisionData() called – skip_initial_solution case.
[DBG]  Agents.size()=150, collision_graph.size()=150
[DBG]  agent 28 => updateCollidingPairs => foundCollision
[DBG]  agent 42 => updateCollidingPairs => foundCollision
[DBG]  agent 135 => updateCollidingPairs => foundCollision
[DBG]  Conflicting agent pairs:
[DBG]  agent 28 is in conflict with agent 42
[DBG]  agent 28 is in conflict with agent 135
[DBG]  buildCollisionData() => sum_of_costs=4285, num_of_colliding_pairs=2
[DBG]  buildCollisionData done => sum_of_costs=4285, num_of_colliding_pairs=2
[DBG]  sum_of_cost hodnota: 4285
[DBG]  After skip/init build => iteration_stats.back(): sum_of_costs=4285, collisions=2
[DEBUG] Using default neighbor generation strategy for conflicts: 2
[DEBUG] Using default neighbor generation strategy for conflicts: 2
[DEBUG] Using default neighbor generation strategy for conflicts: 1
	InitLNS(PP): runtime = 0.00546683, iterations = 4, colliding pairs = 0, initial colliding pairs = 2, solution cost = 4300, initial solution cost = 4285, failed iterations = 0
[DBG]  init_lns->sum_of_costs after init_lns->run: 4300
[DBG]  sum_of_costs after assignment from init_lns->run: 4300
[DBG]  Recomputing sum_of_cost by dividing neighbor.sum_of_costs and neighbor.old_sum_of_costs
[STAT] sum_of_costs after recomputation: 4300
[STAT] Iteration 150
[DBG]  Random chance did not select SAT operator (r=47), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 150
[DBG]  Random chance did not select SAT operator (r=25), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 150
[DBG]  Random chance did not select SAT operator (r=80), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 150
[DBG]  Random chance did not select SAT operator (r=86), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 150
[DBG]  Random chance did not select SAT operator (r=66), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 150
[DBG]  Random chance did not select SAT operator (r=39), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 150
[DBG]  Random chance did not select SAT operator (r=11), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 150
[DBG]  Random chance did not select SAT operator (r=35), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 150
[DBG]  Random chance did not select SAT operator (r=71), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 150
[DBG]  Random chance did not select SAT operator (r=53), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 150
[DBG]  Random chance did not select SAT operator (r=19), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 150
[DBG]  Random chance did not select SAT operator (r=69), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 150
[DBG]  Using SAT operator (destroy+repair SAT).
[DBG]  ====================
[DBG]  SAT destroy operator called.
[DBG]  SAT heuristic: 2
[DBG]  key_agent_id: 28
[DBG]  key_agent_id global path length: 44
[DBG]  Submap content (global positions):
[DBG]  595 596 597 598 599 
[DBG]  627 628 629 630 631 
[DBG]  659 660 661 662 663 
[DBG]  691 692 693 694 695 
[DBG]  723 724 725 726 727 
[DBG]  Map content with agents and obstacles:
[DBG]  X . A X . 
[DBG]  . . . X . 
[DBG]  . A A X X 
[DBG]  . A X X X 
[DBG]  X A . . . 
[DBG]  content of the map structure that we pass to the SAT solver:
[DBG]  -1  1  1  -1  1  
[DBG]  1  1  1  -1  1  
[DBG]  1  1  1  -1  -1  
[DBG]  1  1  -1  -1  -1  
[DBG]  -1  1  1  1  1  
[DBG]  Identifying agents in a submap for rescheduling (when key_agent is there at the time 25):
[DBG]  Agent 3 found intervals in the sub-map:
[DBG]   [25..30]
[DBG]  Agent 3 (interval in submap: [25..30]) contains time 25, added to replan.
[DBG]  Agent 28 found intervals in the sub-map:
[DBG]   [0..43]
[DBG]  Agent 28 (interval in submap: [0..43]) contains time 25, added to replan.
[DBG]  Agent 45 found intervals in the sub-map:
[DBG]   [21..26]
[DBG]  Agent 45 (interval in submap: [21..26]) contains time 25, added to replan.
[DBG]  Agent 53 found intervals in the sub-map:
[DBG]   [22..27]
[DBG]  Agent 53 (interval in submap: [22..27]) contains time 25, added to replan.
[DBG]  Agent 74 found intervals in the sub-map:
[DBG]   [26..35]
[DBG]  Agent 74 is not in sub-map at time 25 (intervals: 
[DBG]  [26..35] )
[DBG]  Agent 100 found intervals in the sub-map:
[DBG]   [20..25]
[DBG]  Agent 100 (interval in submap: [20..25]) contains time 25, added to replan.
[DBG]  Agent 144 found intervals in the sub-map:
[DBG]   [21..21]
[DBG]  Agent 144 is not in sub-map at time 25 (intervals: 
[DBG]  [21..21] )
[DBG]  Agent 3 | Start (global): 597 -> (local): (0, 2) at time 25 | Goal (global): 724 -> (local): (4, 1) at time 30
[DBG]  Agent 28 | Start (global): 661 -> (local): (2, 2) at time 25 | Goal (global): 727 -> (local): (4, 4) at time 43
[DBG]  Agent 45 | Start (global): 692 -> (local): (3, 1) at time 25 | Goal (global): 724 -> (local): (4, 1) at time 26
[DBG]  Agent 53 | Start (global): 660 -> (local): (2, 1) at time 25 | Goal (global): 724 -> (local): (4, 1) at time 27
[DBG]  Agent 100 | Start (global): 724 -> (local): (4, 1) at time 25 | Goal (global): 724 -> (local): (4, 1) at time 25
[DBG]  [REPAIR] SAT destroy operator called.
[DBG]  [REPAIR] SAT operator – launching subproblem FOR OPTIMIZATION.
[DBG]  Creating local paths (sx, sy) in the submap for T_sync = 25
[DBG]    Agent 3 (global paths from T=25 to 30) has local path: (0,2) (0,1) (1,1) (2,1) (3,1) (4,1) 
[DBG]    Agent 28 (global paths from T=25 to 43) has local path: (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (1,2) (1,1) (1,0) (2,0) (3,0) (3,1) (4,1) (4,2) (4,3) (4,4) 
[DBG]    Agent 45 (global paths from T=25 to 26) has local path: (3,1) (4,1) 
[DBG]    Agent 53 (global paths from T=25 to 27) has local path: (2,1) (3,1) (4,1) 
[DBG]    Agent 100 (global paths from T=25 to 25) has local path: (4,1) 
[DBG]  Checking input data for SAT solver:
[DBG]    - Number of agents to replan: 5
[DBG]  Agent 3 has the original local path length: 6 => Start (0,2), Goal (4,1)
[DBG]  Agent 28 has the original local path length: 19 => Start (2,2), Goal (4,4)
[DBG]  Agent 45 has the original local path length: 2 => Start (3,1), Goal (4,1)
[DBG]  Agent 53 has the original local path length: 3 => Start (2,1), Goal (4,1)
[DBG]  Agent 100 has the original local path length: 1 => Start (4,1), Goal (4,1)
[DBG]  Start position: (0, 2), (2, 2), (3, 1), (2, 1), (4, 1), 
[DBG]  Goal position: (4, 1), (4, 4), (4, 1), (4, 1), (4, 1), 
[DBG]  SAT instance and solver created.
Currently solving
Instance name: scen
Map name: map
Encoding used: disappear_at_goal
SAT solver used: Kissat
Optimizing function: sum of costs
Number of agents: 5
Mks LB: 7
SoC LB: 19
Delta: 0
Remaining time: 300000 [ms]

Vertex conflict! Agents 0, 2, timestep 6, location 0
Vertex conflict! Agents 0, 3, timestep 6, location 0
Vertex conflict! Agents 0, 4, timestep 6, location 0
Vertex conflict! Agents 2, 3, timestep 3, location 0
Swapping conflict! Agents 2, 3, timestep 3, edge (0,0)
Vertex conflict! Agents 2, 3, timestep 4, location 0
Swapping conflict! Agents 2, 3, timestep 4, edge (0,0)
Vertex conflict! Agents 2, 3, timestep 5, location 0
Swapping conflict! Agents 2, 3, timestep 5, edge (0,0)
Vertex conflict! Agents 2, 3, timestep 6, location 0
Vertex conflict! Agents 2, 4, timestep 2, location 0
Swapping conflict! Agents 2, 4, timestep 2, edge (0,0)
Vertex conflict! Agents 2, 4, timestep 3, location 0
Swapping conflict! Agents 2, 4, timestep 3, edge (0,0)
Vertex conflict! Agents 2, 4, timestep 4, location 0
Swapping conflict! Agents 2, 4, timestep 4, edge (0,0)
Vertex conflict! Agents 2, 4, timestep 5, location 0
Swapping conflict! Agents 2, 4, timestep 5, edge (0,0)
Vertex conflict! Agents 2, 4, timestep 6, location 0
Vertex conflict! Agents 3, 4, timestep 3, location 0
Swapping conflict! Agents 3, 4, timestep 3, edge (0,0)
Vertex conflict! Agents 3, 4, timestep 4, location 0
Swapping conflict! Agents 3, 4, timestep 4, edge (0,0)
Vertex conflict! Agents 3, 4, timestep 5, location 0
Swapping conflict! Agents 3, 4, timestep 5, edge (0,0)
Vertex conflict! Agents 3, 4, timestep 6, location 0
Found plan [agents = 5] [timesteps = 7]
Agent #0 : 1 5 9 8 11 12 0 
Agent #1 : 9 8 11 12 13 14 15 
Agent #2 : 11 12 0 0 0 0 0 
Agent #3 : 8 11 12 0 0 0 0 
Agent #4 : 12 0 0 0 0 0 0 

[STAT] Solver returned: 0
[DBG]  Agent (index) 3 | New local path (submap idx):
[DBG]  1 5 9 8 11 12 
[DBG]  Agent (index) 28 | New local path (submap idx):
[DBG]  9 8 11 12 13 14 15 
[DBG]  Agent (index) 45 | New local path (submap idx):
[DBG]  11 12 
[DBG]  Agent (index) 53 | New local path (submap idx):
[DBG]  8 11 12 
[DBG]  Agent (index) 100 | New local path (submap idx):
[DBG]  12 
[DBG]  Update the agent path 3 | Original local length: 6 | New local length: 6
[DBG]  agent 3 t=0 => decoded (sx,sy)=(0,2) => global_id=597
[DBG]  agent 3 t=1 => decoded (sx,sy)=(1,2) => global_id=629
[DBG]  agent 3 t=2 => decoded (sx,sy)=(2,2) => global_id=661
[DBG]  agent 3 t=3 => decoded (sx,sy)=(2,1) => global_id=660
[DBG]  agent 3 t=4 => decoded (sx,sy)=(3,1) => global_id=692
[DBG]  agent 3 t=5 => decoded (sx,sy)=(4,1) => global_id=724
[DBG]  Complete path of agent 3:
[DBG]    Original: 468 468 468 468 468 468 468 467 499 499 467 466 467 468 469 469 470 438 438 438 437 469 501 533 565 597 596 628 660 692 724 756 755 787 819 851 883 882 881 913 912 
[DBG]    New:     468 468 468 468 468 468 468 467 499 499 467 466 467 468 469 469 470 438 438 438 437 469 501 533 565 597 629 661 660 692 724 756 755 787 819 851 883 882 881 913 912 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 468 468 468 468 468 468 468 467 499 499 467 466 467 468 469 469 470 438 438 438 437 469 501 533 565 
[DBG]    Local path (in submap): 597 629 661 660 692 724 
[DBG]    Suffix (out of submap): 756 755 787 819 851 883 882 881 913 912 
[DBG]  Original agent path length 3 je: 41
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 0: 468, 468, 468, 468, 468, 468, 468, 467, 499, 499, 467, 466, 467, 468, 469, 469, 470, 438, 438, 438, 437, 469, 501, 533, 565, 597, 629, 661, 660, 692, 724, 756, 755, 787, 819, 851, 883, 882, 881, 913, 912, 
[DBG]  Path for agent 3 updated, resulting length: 41
[DBG]  Update the agent path 28 | Original local length: 19 | New local length: 7
[DBG]  agent 28 t=0 => decoded (sx,sy)=(2,2) => global_id=661
[DBG]  agent 28 t=1 => decoded (sx,sy)=(2,1) => global_id=660
[DBG]  agent 28 t=2 => decoded (sx,sy)=(3,1) => global_id=692
[DBG]  agent 28 t=3 => decoded (sx,sy)=(4,1) => global_id=724
[DBG]  agent 28 t=4 => decoded (sx,sy)=(4,2) => global_id=725
[DBG]  agent 28 t=5 => decoded (sx,sy)=(4,3) => global_id=726
[DBG]  agent 28 t=6 => decoded (sx,sy)=(4,4) => global_id=727
[DBG]  Complete path of agent 28:
[DBG]    Original: 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 629 628 627 659 691 692 724 725 726 727 
[DBG]    New:     661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 660 692 724 725 726 727 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 
[DBG]    Local path (in submap): 661 660 692 724 725 726 727 
[DBG]    Suffix (out of submap): 
[DBG]  Original agent path length 28 je: 44
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 1: 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 660, 692, 724, 725, 726, 727, 
[DBG]  Path for agent 28 updated, resulting length: 32
[DBG]  Update the agent path 45 | Original local length: 2 | New local length: 2
[DBG]  agent 45 t=0 => decoded (sx,sy)=(3,1) => global_id=692
[DBG]  agent 45 t=1 => decoded (sx,sy)=(4,1) => global_id=724
[DBG]  Complete path of agent 45:
[DBG]    Original: 153 185 217 249 281 313 345 344 343 375 407 439 438 470 502 503 503 502 501 533 565 597 596 628 660 692 724 756 755 787 819 851 850 849 
[DBG]    New:     153 185 217 249 281 313 345 344 343 375 407 439 438 470 502 503 503 502 501 533 565 597 596 628 660 692 724 756 755 787 819 851 850 849 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 153 185 217 249 281 313 345 344 343 375 407 439 438 470 502 503 503 502 501 533 565 597 596 628 660 
[DBG]    Local path (in submap): 692 724 
[DBG]    Suffix (out of submap): 756 755 787 819 851 850 849 
[DBG]  Original agent path length 45 je: 34
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 2: 153, 185, 217, 249, 281, 313, 345, 344, 343, 375, 407, 439, 438, 470, 502, 503, 503, 502, 501, 533, 565, 597, 596, 628, 660, 692, 724, 756, 755, 787, 819, 851, 850, 849, 
[DBG]  Path for agent 45 updated, resulting length: 34
[DBG]  Update the agent path 53 | Original local length: 3 | New local length: 3
[DBG]  agent 53 t=0 => decoded (sx,sy)=(2,1) => global_id=660
[DBG]  agent 53 t=1 => decoded (sx,sy)=(3,1) => global_id=692
[DBG]  agent 53 t=2 => decoded (sx,sy)=(4,1) => global_id=724
[DBG]  Complete path of agent 53:
[DBG]    Original: 84 83 115 147 147 179 180 212 244 276 308 308 340 341 373 373 405 437 469 501 533 565 597 596 628 660 692 724 756 788 820 821 
[DBG]    New:     84 83 115 147 147 179 180 212 244 276 308 308 340 341 373 373 405 437 469 501 533 565 597 596 628 660 692 724 756 788 820 821 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 84 83 115 147 147 179 180 212 244 276 308 308 340 341 373 373 405 437 469 501 533 565 597 596 628 
[DBG]    Local path (in submap): 660 692 724 
[DBG]    Suffix (out of submap): 756 788 820 821 
[DBG]  Original agent path length 53 je: 32
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 3: 84, 83, 115, 147, 147, 179, 180, 212, 244, 276, 308, 308, 340, 341, 373, 373, 405, 437, 469, 501, 533, 565, 597, 596, 628, 660, 692, 724, 756, 788, 820, 821, 
[DBG]  Path for agent 53 updated, resulting length: 32
[DBG]  Update the agent path 100 | Original local length: 1 | New local length: 1
[DBG]  agent 100 t=0 => decoded (sx,sy)=(4,1) => global_id=724
[DBG]  Complete path of agent 100:
[DBG]    Original: 287 319 351 350 349 381 380 379 378 377 409 408 440 439 438 470 502 501 533 565 597 596 628 660 692 724 756 788 820 819 818 817 849 848 880 912 944 976 975 974 973 1005 1004 1003 
[DBG]    New:     287 319 351 350 349 381 380 379 378 377 409 408 440 439 438 470 502 501 533 565 597 596 628 660 692 724 756 788 820 819 818 817 849 848 880 912 944 976 975 974 973 1005 1004 1003 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 287 319 351 350 349 381 380 379 378 377 409 408 440 439 438 470 502 501 533 565 597 596 628 660 692 
[DBG]    Local path (in submap): 724 
[DBG]    Suffix (out of submap): 756 788 820 819 818 817 849 848 880 912 944 976 975 974 973 1005 1004 1003 
[DBG]  Original agent path length 100 je: 44
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 4: 287, 319, 351, 350, 349, 381, 380, 379, 378, 377, 409, 408, 440, 439, 438, 470, 502, 501, 533, 565, 597, 596, 628, 660, 692, 724, 756, 788, 820, 819, 818, 817, 849, 848, 880, 912, 944, 976, 975, 974, 973, 1005, 1004, 1003, 
[DBG]  Path for agent 100 updated, resulting length: 44
[DBG]  Paths successfully updated.
[DBG]  (LNS.cpp) New path for agent 3: 
[DBG]  468, 468, 468, 468, 468, 468, 468, 467, 499, 499, 467, 466, 467, 468, 469, 469, 470, 438, 438, 438, 437, 469, 501, 533, 565, 597, 629, 661, 660, 692, 724, 756, 755, 787, 819, 851, 883, 882, 881, 913, 912, 
[DBG]  (LNS.cpp) New path for agent 28: 
[DBG]  661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 660, 692, 724, 725, 726, 727, 
[DBG]  (LNS.cpp) New path for agent 45: 
[DBG]  153, 185, 217, 249, 281, 313, 345, 344, 343, 375, 407, 439, 438, 470, 502, 503, 503, 502, 501, 533, 565, 597, 596, 628, 660, 692, 724, 756, 755, 787, 819, 851, 850, 849, 
[DBG]  (LNS.cpp) New path for agent 53: 
[DBG]  84, 83, 115, 147, 147, 179, 180, 212, 244, 276, 308, 308, 340, 341, 373, 373, 405, 437, 469, 501, 533, 565, 597, 596, 628, 660, 692, 724, 756, 788, 820, 821, 
[DBG]  (LNS.cpp) New path for agent 100: 
[DBG]  287, 319, 351, 350, 349, 381, 380, 379, 378, 377, 409, 408, 440, 439, 438, 470, 502, 501, 533, 565, 597, 596, 628, 660, 692, 724, 756, 788, 820, 819, 818, 817, 849, 848, 880, 912, 944, 976, 975, 974, 973, 1005, 1004, 1003, 
[DBG]  Delta value: 0.0631579
[DBG]  Rewarding metric index = 1
[DBG]  component_weights = {2.5571e-08, 1, 1.12627e-08, 1.95269e-08}
[DBG]  opSuccess value: 1
[STAT] neighbor.sum_of_costs before recomputation: 178
[STAT] neighbor.old_sum_of_costs before recomputation: 190
[STAT] sum_of_costs before recomputation: 4300
[DBG]  Validate solution immediately after SAT success.
[WARNING] Problem after SAT: Target conflict: agent 42 (len 43) traverses target of agent 28 (len 31) at location 727 at timestep 42
[DBG]  [DEBUG] Attempting immediate repair via init_lns because problem occurred after SAT (should be applied only for conflicts...).
[DBG]  [DEBUG] Passing 150 agents to init_lns (skip=true).
[DBG]  [DEBUG] path_table contents for selected agents (neighbor.agents):
[DBG]    Agent 3 => controlling path length=41
[DBG]    Agent 28 => controlling path length=32
[DBG]    Agent 45 => controlling path length=34
[DBG]    Agent 53 => controlling path length=32
[DBG]    Agent 100 => controlling path length=44
[DBG]  hodnota skip_initial_solution=1
[DBG]  We skip initialSolution => call buildCollisionData()
[DBG]  buildCollisionData() called – skip_initial_solution case.
[DBG]  Agents.size()=150, collision_graph.size()=150
[DBG]  agent 28 => updateCollidingPairs => foundCollision
[DBG]  agent 42 => updateCollidingPairs => foundCollision
[DBG]  Conflicting agent pairs:
[DBG]  agent 28 is in conflict with agent 42
[DBG]  buildCollisionData() => sum_of_costs=4288, num_of_colliding_pairs=1
[DBG]  buildCollisionData done => sum_of_costs=4288, num_of_colliding_pairs=1
[DBG]  sum_of_cost hodnota: 4288
[DBG]  After skip/init build => iteration_stats.back(): sum_of_costs=4288, collisions=1
[DEBUG] Using default neighbor generation strategy for conflicts: 2
[DEBUG] Using default neighbor generation strategy for conflicts: 1
[DEBUG] Using default neighbor generation strategy for conflicts: 1
	InitLNS(PP): runtime = 0.00493017, iterations = 4, colliding pairs = 0, initial colliding pairs = 1, solution cost = 4291, initial solution cost = 4288, failed iterations = 0
[DBG]  init_lns->sum_of_costs after init_lns->run: 4291
[DBG]  sum_of_costs after assignment from init_lns->run: 4291
[DBG]  Recomputing sum_of_cost by dividing neighbor.sum_of_costs and neighbor.old_sum_of_costs
[STAT] sum_of_costs after recomputation: 4291
[STAT] Iteration 151
[DBG]  Using SAT operator (destroy+repair SAT).
[DBG]  ====================
[DBG]  SAT destroy operator called.
[DBG]  SAT heuristic: 2
[DBG]  key_agent_id: 28
[DBG]  key_agent_id global path length: 44
[DBG]  Submap content (global positions):
[DBG]  658 659 660 661 662 
[DBG]  690 691 692 693 694 
[DBG]  722 723 724 725 726 
[DBG]  754 755 756 757 758 
[DBG]  786 787 788 789 790 
[DBG]  Map content with agents and obstacles:
[DBG]  . . . . X 
[DBG]  X . . X X 
[DBG]  . X A . . 
[DBG]  X A A . X 
[DBG]  . . . X . 
[DBG]  content of the map structure that we pass to the SAT solver:
[DBG]  1  1  1  1  -1  
[DBG]  -1  1  1  -1  -1  
[DBG]  1  -1  1  1  1  
[DBG]  -1  1  1  1  -1  
[DBG]  1  1  1  -1  1  
[DBG]  Identifying agents in a submap for rescheduling (when key_agent is there at the time 32):
[DBG]  Agent 3 found intervals in the sub-map:
[DBG]   [27..33]
[DBG]  Agent 3 (interval in submap: [27..33]) contains time 32, added to replan.
[DBG]  Agent 11 found intervals in the sub-map:
[DBG]   [38..38]
[DBG]  Agent 11 is not in sub-map at time 32 (intervals: 
[DBG]  [38..38] )
[DBG]  Agent 26 found intervals in the sub-map:
[DBG]   [29..33]
[DBG]  Agent 26 (interval in submap: [29..33]) contains time 32, added to replan.
[DBG]  Agent 28 found intervals in the sub-map:
[DBG]   [0..42]
[DBG]  Agent 28 (interval in submap: [0..42]) contains time 32, added to replan.
[DBG]  Agent 3 | Start (global): 755 -> (local): (3, 1) at time 32 | Goal (global): 787 -> (local): (4, 1) at time 33
[DBG]  Agent 26 | Start (global): 756 -> (local): (3, 2) at time 32 | Goal (global): 755 -> (local): (3, 1) at time 33
[DBG]  Agent 28 | Start (global): 724 -> (local): (2, 2) at time 32 | Goal (global): 726 -> (local): (2, 4) at time 42
[DBG]  [REPAIR] SAT destroy operator called.
[DBG]  [REPAIR] SAT operator – launching subproblem FOR OPTIMIZATION.
[DBG]  Creating local paths (sx, sy) in the submap for T_sync = 32
[DBG]    Agent 3 (global paths from T=32 to 33) has local path: (3,1) (4,1) 
[DBG]    Agent 26 (global paths from T=32 to 33) has local path: (3,2) (3,1) 
[DBG]    Agent 28 (global paths from T=32 to 42) has local path: (2,2) (3,2) (3,2) (3,2) (3,2) (3,2) (3,2) (3,2) (2,2) (2,3) (2,4) 
[DBG]  Checking input data for SAT solver:
[DBG]    - Number of agents to replan: 3
[DBG]  Agent 3 has the original local path length: 2 => Start (3,1), Goal (4,1)
[DBG]  Agent 26 has the original local path length: 2 => Start (3,2), Goal (3,1)
[DBG]  Agent 28 has the original local path length: 11 => Start (2,2), Goal (2,4)
[DBG]  Start position: (3, 1), (3, 2), (2, 2), 
[DBG]  Goal position: (4, 1), (3, 1), (2, 4), 
[DBG]  SAT instance and solver created.
Currently solving
Instance name: scen
Map name: map
Encoding used: disappear_at_goal
SAT solver used: Kissat
Optimizing function: sum of costs
Number of agents: 3
Mks LB: 3
SoC LB: 7
Delta: 0
Remaining time: 300000 [ms]

Vertex conflict! Agents 0, 1, timestep 2, location 0
Found plan [agents = 3] [timesteps = 3]
Agent #0 : 10 14 0 
Agent #1 : 11 10 0 
Agent #2 : 7 8 9 

[STAT] Solver returned: 0
[DBG]  Agent (index) 3 | New local path (submap idx):
[DBG]  10 14 
[DBG]  Agent (index) 26 | New local path (submap idx):
[DBG]  11 10 
[DBG]  Agent (index) 28 | New local path (submap idx):
[DBG]  7 8 9 
[DBG]  Update the agent path 3 | Original local length: 2 | New local length: 2
[DBG]  agent 3 t=0 => decoded (sx,sy)=(3,1) => global_id=755
[DBG]  agent 3 t=1 => decoded (sx,sy)=(4,1) => global_id=787
[DBG]  Complete path of agent 3:
[DBG]    Original: 468 468 468 468 468 468 468 467 499 499 467 466 467 468 469 469 470 438 438 438 437 469 501 533 565 597 629 661 660 692 724 756 755 787 819 851 883 882 881 913 912 
[DBG]    New:     468 468 468 468 468 468 468 467 499 499 467 466 467 468 469 469 470 438 438 438 437 469 501 533 565 597 629 661 660 692 724 756 755 787 819 851 883 882 881 913 912 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 468 468 468 468 468 468 468 467 499 499 467 466 467 468 469 469 470 438 438 438 437 469 501 533 565 597 629 661 660 692 724 756 
[DBG]    Local path (in submap): 755 787 
[DBG]    Suffix (out of submap): 819 851 883 882 881 913 912 
[DBG]  Original agent path length 3 je: 41
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 0: 468, 468, 468, 468, 468, 468, 468, 467, 499, 499, 467, 466, 467, 468, 469, 469, 470, 438, 438, 438, 437, 469, 501, 533, 565, 597, 629, 661, 660, 692, 724, 756, 755, 787, 819, 851, 883, 882, 881, 913, 912, 
[DBG]  Path for agent 3 updated, resulting length: 41
[DBG]  Update the agent path 26 | Original local length: 2 | New local length: 2
[DBG]  agent 26 t=0 => decoded (sx,sy)=(3,2) => global_id=756
[DBG]  agent 26 t=1 => decoded (sx,sy)=(3,1) => global_id=755
[DBG]  Complete path of agent 26:
[DBG]    Original: 13 14 46 47 79 80 81 82 83 115 147 179 180 212 244 276 308 340 341 373 405 437 469 501 533 565 597 629 628 660 692 724 756 755 
[DBG]    New:     13 14 46 47 79 80 81 82 83 115 147 179 180 212 244 276 308 340 341 373 405 437 469 501 533 565 597 629 628 660 692 724 756 755 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 13 14 46 47 79 80 81 82 83 115 147 179 180 212 244 276 308 340 341 373 405 437 469 501 533 565 597 629 628 660 692 724 
[DBG]    Local path (in submap): 756 755 
[DBG]    Suffix (out of submap): 
[DBG]  Original agent path length 26 je: 34
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 1: 13, 14, 46, 47, 79, 80, 81, 82, 83, 115, 147, 179, 180, 212, 244, 276, 308, 340, 341, 373, 405, 437, 469, 501, 533, 565, 597, 629, 628, 660, 692, 724, 756, 755, 
[DBG]  Path for agent 26 updated, resulting length: 34
[DBG]  Update the agent path 28 | Original local length: 11 | New local length: 3
[DBG]  agent 28 t=0 => decoded (sx,sy)=(2,2) => global_id=724
[DBG]  agent 28 t=1 => decoded (sx,sy)=(2,3) => global_id=725
[DBG]  agent 28 t=2 => decoded (sx,sy)=(2,4) => global_id=726
[DBG]  Complete path of agent 28:
[DBG]    Original: 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 660 692 692 691 691 692 724 756 756 756 756 756 756 756 724 725 726 727 
[DBG]    New:     661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 660 692 692 691 691 692 724 725 726 727 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 660 692 692 691 691 692 
[DBG]    Local path (in submap): 724 725 726 727 
[DBG]    Suffix (out of submap): 
[DBG]  Original agent path length 28 je: 44
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 2: 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 660, 692, 692, 691, 691, 692, 724, 725, 726, 727, 
[DBG]  Path for agent 28 updated, resulting length: 36
[DBG]  Paths successfully updated.
[DBG]  (LNS.cpp) New path for agent 3: 
[DBG]  468, 468, 468, 468, 468, 468, 468, 467, 499, 499, 467, 466, 467, 468, 469, 469, 470, 438, 438, 438, 437, 469, 501, 533, 565, 597, 629, 661, 660, 692, 724, 756, 755, 787, 819, 851, 883, 882, 881, 913, 912, 
[DBG]  (LNS.cpp) New path for agent 26: 
[DBG]  13, 14, 46, 47, 79, 80, 81, 82, 83, 115, 147, 179, 180, 212, 244, 276, 308, 340, 341, 373, 405, 437, 469, 501, 533, 565, 597, 629, 628, 660, 692, 724, 756, 755, 
[DBG]  (LNS.cpp) New path for agent 28: 
[DBG]  661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 660, 692, 692, 691, 691, 692, 724, 725, 726, 727, 
[DBG]  Delta value: 0.0689655
[DBG]  Rewarding metric index = 1
[DBG]  component_weights = {2.27252e-08, 1, 1.00093e-08, 1.73537e-08}
[DBG]  opSuccess value: 1
[STAT] neighbor.sum_of_costs before recomputation: 108
[STAT] neighbor.old_sum_of_costs before recomputation: 116
[STAT] sum_of_costs before recomputation: 4291
[DBG]  Validate solution immediately after SAT success.
[WARNING] Problem after SAT: Target conflict: agent 42 (len 43) traverses target of agent 28 (len 35) at location 727 at timestep 42
[DBG]  [DEBUG] Attempting immediate repair via init_lns because problem occurred after SAT (should be applied only for conflicts...).
[DBG]  [DEBUG] Passing 150 agents to init_lns (skip=true).
[DBG]  [DEBUG] path_table contents for selected agents (neighbor.agents):
[DBG]    Agent 3 => controlling path length=41
[DBG]    Agent 26 => controlling path length=34
[DBG]    Agent 28 => controlling path length=36
[DBG]  hodnota skip_initial_solution=1
[DBG]  We skip initialSolution => call buildCollisionData()
[DBG]  buildCollisionData() called – skip_initial_solution case.
[DBG]  Agents.size()=150, collision_graph.size()=150
[DBG]  agent 28 => updateCollidingPairs => foundCollision
[DBG]  agent 42 => updateCollidingPairs => foundCollision
[DBG]  Conflicting agent pairs:
[DBG]  agent 28 is in conflict with agent 42
[DBG]  buildCollisionData() => sum_of_costs=4283, num_of_colliding_pairs=1
[DBG]  buildCollisionData done => sum_of_costs=4283, num_of_colliding_pairs=1
[DBG]  sum_of_cost hodnota: 4283
[DBG]  After skip/init build => iteration_stats.back(): sum_of_costs=4283, collisions=1
[DEBUG] Using default neighbor generation strategy for conflicts: 2
[DEBUG] Using default neighbor generation strategy for conflicts: 0
	InitLNS(PP): runtime = 0.00222092, iterations = 3, colliding pairs = 0, initial colliding pairs = 1, solution cost = 4284, initial solution cost = 4283, failed iterations = 0
[DBG]  init_lns->sum_of_costs after init_lns->run: 4284
[DBG]  sum_of_costs after assignment from init_lns->run: 4284
[DBG]  Recomputing sum_of_cost by dividing neighbor.sum_of_costs and neighbor.old_sum_of_costs
[STAT] sum_of_costs after recomputation: 4284
[STAT] Iteration 152
[DBG]  Random chance did not select SAT operator (r=86), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 152
[DBG]  Using SAT operator (destroy+repair SAT).
[DBG]  ====================
[DBG]  SAT destroy operator called.
[DBG]  SAT heuristic: 2
[DBG]  key_agent_id: 28
[DBG]  key_agent_id global path length: 44
[DBG]  Submap content (global positions):
[DBG]  595 596 597 598 599 
[DBG]  627 628 629 630 631 
[DBG]  659 660 661 662 663 
[DBG]  691 692 693 694 695 
[DBG]  723 724 725 726 727 
[DBG]  Map content with agents and obstacles:
[DBG]  X . . X . 
[DBG]  A A . X . 
[DBG]  . . A X X 
[DBG]  . . X X X 
[DBG]  X . A . . 
[DBG]  content of the map structure that we pass to the SAT solver:
[DBG]  -1  1  1  -1  1  
[DBG]  1  1  1  -1  1  
[DBG]  1  1  1  -1  -1  
[DBG]  1  1  -1  -1  -1  
[DBG]  -1  1  1  1  1  
[DBG]  Identifying agents in a submap for rescheduling (when key_agent is there at the time 11):
[DBG]  Agent 28 found intervals in the sub-map:
[DBG]   [0..33] [41..43]
[DBG]  Agent 28 (interval in submap: [0..33]) contains time 11, added to replan.
[DBG]  Agent 46 found intervals in the sub-map:
[DBG]   [5..8]
[DBG]  Agent 46 is not in sub-map at time 11 (intervals: 
[DBG]  [5..8] )
[DBG]  Agent 70 found intervals in the sub-map:
[DBG]  
[DBG]  Agent 70 is not in sub-map at time 11 (intervals: 
[DBG]  )
[DBG]  Agent 86 found intervals in the sub-map:
[DBG]   [10..14]
[DBG]  Agent 86 (interval in submap: [10..14]) contains time 11, added to replan.
[DBG]  Agent 89 found intervals in the sub-map:
[DBG]   [5..10]
[DBG]  Agent 89 is not in sub-map at time 11 (intervals: 
[DBG]  [5..10] )
[DBG]  Agent 135 found intervals in the sub-map:
[DBG]   [4..4] [9..11] [16..19]
[DBG]  Agent 135 (interval in submap: [9..11]) contains time 11, added to replan.
[DBG]  Agent 137 found intervals in the sub-map:
[DBG]   [9..13]
[DBG]  Agent 137 (interval in submap: [9..13]) contains time 11, added to replan.
[DBG]  Agent 28 | Start (global): 661 -> (local): (2, 2) at time 11 | Goal (global): 725 -> (local): (4, 2) at time 33
[DBG]  Agent 86 | Start (global): 627 -> (local): (1, 0) at time 11 | Goal (global): 597 -> (local): (0, 2) at time 14
[DBG]  Agent 135 | Start (global): 725 -> (local): (4, 2) at time 11 | Goal (global): 725 -> (local): (4, 2) at time 11
[DBG]  Agent 137 | Start (global): 628 -> (local): (1, 1) at time 11 | Goal (global): 659 -> (local): (2, 0) at time 13
[DBG]  [REPAIR] SAT destroy operator called.
[DBG]  [REPAIR] SAT operator – launching subproblem FOR OPTIMIZATION.
[DBG]  Creating local paths (sx, sy) in the submap for T_sync = 11
[DBG]    Agent 28 (global paths from T=11 to 33) has local path: (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,1) (3,1) (4,1) (4,2) 
[DBG]    Agent 86 (global paths from T=11 to 14) has local path: (1,0) (1,1) (0,1) (0,2) 
[DBG]    Agent 135 (global paths from T=11 to 11) has local path: (4,2) 
[DBG]    Agent 137 (global paths from T=11 to 13) has local path: (1,1) (2,1) (2,0) 
[DBG]  Checking input data for SAT solver:
[DBG]    - Number of agents to replan: 4
[DBG]  Agent 28 has the original local path length: 23 => Start (2,2), Goal (4,2)
[DBG]  Agent 86 has the original local path length: 4 => Start (1,0), Goal (0,2)
[DBG]  Agent 135 has the original local path length: 1 => Start (4,2), Goal (4,2)
[DBG]  Agent 137 has the original local path length: 3 => Start (1,1), Goal (2,0)
[DBG]  Start position: (2, 2), (1, 0), (4, 2), (1, 1), 
[DBG]  Goal position: (4, 2), (0, 2), (4, 2), (2, 0), 
[DBG]  SAT instance and solver created.
Currently solving
Instance name: scen
Map name: map
Encoding used: disappear_at_goal
SAT solver used: Kissat
Optimizing function: sum of costs
Number of agents: 4
Mks LB: 5
SoC LB: 13
Delta: 0
Remaining time: 300000 [ms]

[STAT] Solver returned: -1
[DBG]  SAT solver failed.
[STAT] SAT solver failed to find a valid solution.
[DBG]  ====================
[DBG]  SAT destroy operator called.
[DBG]  SAT heuristic: 2
[DBG]  key_agent_id: 28
[DBG]  key_agent_id global path length: 44
[DBG]  Submap content (global positions):
[DBG]  595 596 597 598 599 
[DBG]  627 628 629 630 631 
[DBG]  659 660 661 662 663 
[DBG]  691 692 693 694 695 
[DBG]  723 724 725 726 727 
[DBG]  Map content with agents and obstacles:
[DBG]  X . . X . 
[DBG]  A A . X . 
[DBG]  . . A X X 
[DBG]  A A X X X 
[DBG]  X . . . . 
[DBG]  content of the map structure that we pass to the SAT solver:
[DBG]  -1  1  1  -1  1  
[DBG]  1  1  1  -1  1  
[DBG]  1  1  1  -1  -1  
[DBG]  1  1  -1  -1  -1  
[DBG]  -1  1  1  1  1  
[DBG]  Identifying agents in a submap for rescheduling (when key_agent is there at the time 28):
[DBG]  Agent 3 found intervals in the sub-map:
[DBG]   [24..29]
[DBG]  Agent 3 (interval in submap: [24..29]) contains time 28, added to replan.
[DBG]  Agent 11 found intervals in the sub-map:
[DBG]  
[DBG]  Agent 11 is not in sub-map at time 28 (intervals: 
[DBG]  )
[DBG]  Agent 26 found intervals in the sub-map:
[DBG]   [26..31]
[DBG]  Agent 26 (interval in submap: [26..31]) contains time 28, added to replan.
[DBG]  Agent 28 found intervals in the sub-map:
[DBG]   [0..33] [41..43]
[DBG]  Agent 28 (interval in submap: [0..33]) contains time 28, added to replan.
[DBG]  Agent 74 found intervals in the sub-map:
[DBG]   [26..35]
[DBG]  Agent 74 (interval in submap: [26..35]) contains time 28, added to replan.
[DBG]  Agent 148 found intervals in the sub-map:
[DBG]   [27..31]
[DBG]  Agent 148 (interval in submap: [27..31]) contains time 28, added to replan.
[DBG]  Agent 3 | Start (global): 692 -> (local): (3, 1) at time 28 | Goal (global): 724 -> (local): (4, 1) at time 29
[DBG]  Agent 26 | Start (global): 628 -> (local): (1, 1) at time 28 | Goal (global): 724 -> (local): (4, 1) at time 31
[DBG]  Agent 28 | Start (global): 661 -> (local): (2, 2) at time 28 | Goal (global): 725 -> (local): (4, 2) at time 33
[DBG]  Agent 74 | Start (global): 691 -> (local): (3, 0) at time 28 | Goal (global): 597 -> (local): (0, 2) at time 35
[DBG]  Agent 148 | Start (global): 627 -> (local): (1, 0) at time 28 | Goal (global): 660 -> (local): (2, 1) at time 31
[DBG]  [REPAIR] SAT destroy operator called.
[DBG]  [REPAIR] SAT operator – launching subproblem FOR OPTIMIZATION.
[DBG]  Creating local paths (sx, sy) in the submap for T_sync = 28
[DBG]    Agent 3 (global paths from T=28 to 29) has local path: (3,1) (4,1) 
[DBG]    Agent 26 (global paths from T=28 to 31) has local path: (1,1) (2,1) (3,1) (4,1) 
[DBG]    Agent 28 (global paths from T=28 to 33) has local path: (2,2) (2,2) (2,1) (3,1) (4,1) (4,2) 
[DBG]    Agent 74 (global paths from T=28 to 35) has local path: (3,0) (2,0) (1,0) (1,1) (0,1) (0,1) (0,1) (0,2) 
[DBG]    Agent 148 (global paths from T=28 to 31) has local path: (1,0) (1,1) (1,1) (2,1) 
[DBG]  Checking input data for SAT solver:
[DBG]    - Number of agents to replan: 5
[DBG]  Agent 3 has the original local path length: 2 => Start (3,1), Goal (4,1)
[DBG]  Agent 26 has the original local path length: 4 => Start (1,1), Goal (4,1)
[DBG]  Agent 28 has the original local path length: 6 => Start (2,2), Goal (4,2)
[DBG]  Agent 74 has the original local path length: 8 => Start (3,0), Goal (0,2)
[DBG]  Agent 148 has the original local path length: 4 => Start (1,0), Goal (2,1)
[DBG]  Start position: (3, 1), (1, 1), (2, 2), (3, 0), (1, 0), 
[DBG]  Goal position: (4, 1), (4, 1), (4, 2), (0, 2), (2, 1), 
[DBG]  SAT instance and solver created.
Currently solving
Instance name: scen
Map name: map
Encoding used: disappear_at_goal
SAT solver used: Kissat
Optimizing function: sum of costs
Number of agents: 5
Mks LB: 6
SoC LB: 20
Delta: 0
Remaining time: 300000 [ms]

[STAT] Solver returned: -1
[DBG]  SAT solver failed.
[STAT] SAT solver failed to find a valid solution.
[DBG]  ====================
[DBG]  SAT destroy operator called.
[DBG]  SAT heuristic: 2
[DBG]  key_agent_id: 28
[DBG]  key_agent_id global path length: 44
[DBG]  Submap content (global positions):
[DBG]  595 596 597 598 599 
[DBG]  627 628 629 630 631 
[DBG]  659 660 661 662 663 
[DBG]  691 692 693 694 695 
[DBG]  723 724 725 726 727 
[DBG]  Map content with agents and obstacles:
[DBG]  X A A X . 
[DBG]  . A . X . 
[DBG]  . . A X X 
[DBG]  . . X X X 
[DBG]  X . . . . 
[DBG]  content of the map structure that we pass to the SAT solver:
[DBG]  -1  1  1  -1  1  
[DBG]  1  1  1  -1  1  
[DBG]  1  1  1  -1  -1  
[DBG]  1  1  -1  -1  -1  
[DBG]  -1  1  1  1  1  
[DBG]  Identifying agents in a submap for rescheduling (when key_agent is there at the time 22):
[DBG]  Agent 28 found intervals in the sub-map:
[DBG]   [0..33] [41..43]
[DBG]  Agent 28 (interval in submap: [0..33]) contains time 22, added to replan.
[DBG]  Agent 45 found intervals in the sub-map:
[DBG]   [21..26]
[DBG]  Agent 45 (interval in submap: [21..26]) contains time 22, added to replan.
[DBG]  Agent 53 found intervals in the sub-map:
[DBG]   [22..27]
[DBG]  Agent 53 (interval in submap: [22..27]) contains time 22, added to replan.
[DBG]  Agent 100 found intervals in the sub-map:
[DBG]   [20..25]
[DBG]  Agent 100 (interval in submap: [20..25]) contains time 22, added to replan.
[DBG]  Agent 28 | Start (global): 661 -> (local): (2, 2) at time 22 | Goal (global): 725 -> (local): (4, 2) at time 33
[DBG]  Agent 45 | Start (global): 596 -> (local): (0, 1) at time 22 | Goal (global): 724 -> (local): (4, 1) at time 26
[DBG]  Agent 53 | Start (global): 597 -> (local): (0, 2) at time 22 | Goal (global): 724 -> (local): (4, 1) at time 27
[DBG]  Agent 100 | Start (global): 628 -> (local): (1, 1) at time 22 | Goal (global): 724 -> (local): (4, 1) at time 25
[DBG]  [REPAIR] SAT destroy operator called.
[DBG]  [REPAIR] SAT operator – launching subproblem FOR OPTIMIZATION.
[DBG]  Creating local paths (sx, sy) in the submap for T_sync = 22
[DBG]    Agent 28 (global paths from T=22 to 33) has local path: (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,1) (3,1) (4,1) (4,2) 
[DBG]    Agent 45 (global paths from T=22 to 26) has local path: (0,1) (1,1) (2,1) (3,1) (4,1) 
[DBG]    Agent 53 (global paths from T=22 to 27) has local path: (0,2) (0,1) (1,1) (2,1) (3,1) (4,1) 
[DBG]    Agent 100 (global paths from T=22 to 25) has local path: (1,1) (2,1) (3,1) (4,1) 
[DBG]  Checking input data for SAT solver:
[DBG]    - Number of agents to replan: 4
[DBG]  Agent 28 has the original local path length: 12 => Start (2,2), Goal (4,2)
[DBG]  Agent 45 has the original local path length: 5 => Start (0,1), Goal (4,1)
[DBG]  Agent 53 has the original local path length: 6 => Start (0,2), Goal (4,1)
[DBG]  Agent 100 has the original local path length: 4 => Start (1,1), Goal (4,1)
[DBG]  Start position: (2, 2), (0, 1), (0, 2), (1, 1), 
[DBG]  Goal position: (4, 2), (4, 1), (4, 1), (4, 1), 
[DBG]  SAT instance and solver created.
Currently solving
Instance name: scen
Map name: map
Encoding used: disappear_at_goal
SAT solver used: Kissat
Optimizing function: sum of costs
Number of agents: 4
Mks LB: 6
SoC LB: 20
Delta: 0
Remaining time: 300000 [ms]

[STAT] Solver returned: -1
[DBG]  SAT solver failed.
[STAT] SAT solver failed to find a valid solution.
[DBG]  ====================
[DBG]  SAT destroy operator called.
[DBG]  SAT heuristic: 2
[DBG]  key_agent_id: 28
[DBG]  key_agent_id global path length: 44
[DBG]  Submap content (global positions):
[DBG]  595 596 597 598 599 
[DBG]  627 628 629 630 631 
[DBG]  659 660 661 662 663 
[DBG]  691 692 693 694 695 
[DBG]  723 724 725 726 727 
[DBG]  Map content with agents and obstacles:
[DBG]  X . . X . 
[DBG]  . . A X . 
[DBG]  A A A X X 
[DBG]  A . X X X 
[DBG]  X A . . . 
[DBG]  content of the map structure that we pass to the SAT solver:
[DBG]  -1  1  1  -1  1  
[DBG]  1  1  1  -1  1  
[DBG]  1  1  1  -1  -1  
[DBG]  1  1  -1  -1  -1  
[DBG]  -1  1  1  1  1  
[DBG]  Identifying agents in a submap for rescheduling (when key_agent is there at the time 27):
[DBG]  Agent 3 found intervals in the sub-map:
[DBG]   [24..29]
[DBG]  Agent 3 (interval in submap: [24..29]) contains time 27, added to replan.
[DBG]  Agent 11 found intervals in the sub-map:
[DBG]  
[DBG]  Agent 11 is not in sub-map at time 27 (intervals: 
[DBG]  )
[DBG]  Agent 26 found intervals in the sub-map:
[DBG]   [26..31]
[DBG]  Agent 26 (interval in submap: [26..31]) contains time 27, added to replan.
[DBG]  Agent 28 found intervals in the sub-map:
[DBG]   [0..33] [41..43]
[DBG]  Agent 28 (interval in submap: [0..33]) contains time 27, added to replan.
[DBG]  Agent 53 found intervals in the sub-map:
[DBG]   [22..27]
[DBG]  Agent 53 (interval in submap: [22..27]) contains time 27, added to replan.
[DBG]  Agent 74 found intervals in the sub-map:
[DBG]   [26..35]
[DBG]  Agent 74 (interval in submap: [26..35]) contains time 27, added to replan.
[DBG]  Agent 148 found intervals in the sub-map:
[DBG]   [27..31]
[DBG]  Agent 148 (interval in submap: [27..31]) contains time 27, added to replan.
[DBG]  Agent 3 | Start (global): 660 -> (local): (2, 1) at time 27 | Goal (global): 724 -> (local): (4, 1) at time 29
[DBG]  Agent 26 | Start (global): 629 -> (local): (1, 2) at time 27 | Goal (global): 724 -> (local): (4, 1) at time 31
[DBG]  Agent 28 | Start (global): 661 -> (local): (2, 2) at time 27 | Goal (global): 725 -> (local): (4, 2) at time 33
[DBG]  Agent 53 | Start (global): 724 -> (local): (4, 1) at time 27 | Goal (global): 724 -> (local): (4, 1) at time 27
[DBG]  Agent 74 | Start (global): 691 -> (local): (3, 0) at time 27 | Goal (global): 597 -> (local): (0, 2) at time 35
[DBG]  Agent 148 | Start (global): 659 -> (local): (2, 0) at time 27 | Goal (global): 660 -> (local): (2, 1) at time 31
[DBG]  [REPAIR] SAT destroy operator called.
[DBG]  [REPAIR] SAT operator – launching subproblem FOR OPTIMIZATION.
[DBG]  Creating local paths (sx, sy) in the submap for T_sync = 27
[DBG]    Agent 3 (global paths from T=27 to 29) has local path: (2,1) (3,1) (4,1) 
[DBG]    Agent 26 (global paths from T=27 to 31) has local path: (1,2) (1,1) (2,1) (3,1) (4,1) 
[DBG]    Agent 28 (global paths from T=27 to 33) has local path: (2,2) (2,2) (2,2) (2,1) (3,1) (4,1) (4,2) 
[DBG]    Agent 53 (global paths from T=27 to 27) has local path: (4,1) 
[DBG]    Agent 74 (global paths from T=27 to 35) has local path: (3,0) (3,0) (2,0) (1,0) (1,1) (0,1) (0,1) (0,1) (0,2) 
[DBG]    Agent 148 (global paths from T=27 to 31) has local path: (2,0) (1,0) (1,1) (1,1) (2,1) 
[DBG]  Checking input data for SAT solver:
[DBG]    - Number of agents to replan: 6
[DBG]  Agent 3 has the original local path length: 3 => Start (2,1), Goal (4,1)
[DBG]  Agent 26 has the original local path length: 5 => Start (1,2), Goal (4,1)
[DBG]  Agent 28 has the original local path length: 7 => Start (2,2), Goal (4,2)
[DBG]  Agent 53 has the original local path length: 1 => Start (4,1), Goal (4,1)
[DBG]  Agent 74 has the original local path length: 9 => Start (3,0), Goal (0,2)
[DBG]  Agent 148 has the original local path length: 5 => Start (2,0), Goal (2,1)
[DBG]  Start position: (2, 1), (1, 2), (2, 2), (4, 1), (3, 0), (2, 0), 
[DBG]  Goal position: (4, 1), (4, 1), (4, 2), (4, 1), (0, 2), (2, 1), 
[DBG]  SAT instance and solver created.
Currently solving
Instance name: scen
Map name: map
Encoding used: disappear_at_goal
SAT solver used: Kissat
Optimizing function: sum of costs
Number of agents: 6
Mks LB: 6
SoC LB: 22
Delta: 0
Remaining time: 300000 [ms]

[STAT] Solver returned: -1
[DBG]  SAT solver failed.
[STAT] SAT solver failed to find a valid solution.
[DBG]  ====================
[DBG]  SAT destroy operator called.
[DBG]  SAT heuristic: 2
[DBG]  key_agent_id: 28
[DBG]  key_agent_id global path length: 44
[DBG]  Submap content (global positions):
[DBG]  691 692 693 694 695 
[DBG]  723 724 725 726 727 
[DBG]  755 756 757 758 759 
[DBG]  787 788 789 790 791 
[DBG]  819 820 821 822 823 
[DBG]  Map content with agents and obstacles:
[DBG]  A A X X X 
[DBG]  X . A . . 
[DBG]  . . A X . 
[DBG]  . . X . X 
[DBG]  . . . . . 
[DBG]  content of the map structure that we pass to the SAT solver:
[DBG]  1  1  -1  -1  -1  
[DBG]  -1  1  1  1  1  
[DBG]  1  1  1  -1  1  
[DBG]  1  1  -1  1  -1  
[DBG]  1  1  1  1  1  
[DBG]  Identifying agents in a submap for rescheduling (when key_agent is there at the time 40):
[DBG]  Agent 28 found intervals in the sub-map:
[DBG]   [31..43]
[DBG]  Agent 28 (interval in submap: [31..43]) contains time 40, added to replan.
[DBG]  Agent 42 found intervals in the sub-map:
[DBG]   [37..43]
[DBG]  Agent 42 (interval in submap: [37..43]) contains time 40, added to replan.
[DBG]  Agent 44 found intervals in the sub-map:
[DBG]  
[DBG]  Agent 44 is not in sub-map at time 40 (intervals: 
[DBG]  )
[DBG]  Agent 45 found intervals in the sub-map:
[DBG]   [25..30]
[DBG]  Agent 45 is not in sub-map at time 40 (intervals: 
[DBG]  [25..30] )
[DBG]  Agent 53 found intervals in the sub-map:
[DBG]   [26..31]
[DBG]  Agent 53 is not in sub-map at time 40 (intervals: 
[DBG]  [26..31] )
[DBG]  Agent 55 found intervals in the sub-map:
[DBG]   [39..41]
[DBG]  Agent 55 (interval in submap: [39..41]) contains time 40, added to replan.
[DBG]  Agent 69 found intervals in the sub-map:
[DBG]   [38..44]
[DBG]  Agent 69 (interval in submap: [38..44]) contains time 40, added to replan.
[DBG]  Agent 28 | Start (global): 757 -> (local): (2, 2) at time 40 | Goal (global): 727 -> (local): (1, 4) at time 43
[DBG]  Agent 42 | Start (global): 725 -> (local): (1, 2) at time 40 | Goal (global): 759 -> (local): (2, 4) at time 43
[DBG]  Agent 55 | Start (global): 691 -> (local): (0, 0) at time 40 | Goal (global): 692 -> (local): (0, 1) at time 41
[DBG]  Agent 69 | Start (global): 692 -> (local): (0, 1) at time 40 | Goal (global): 820 -> (local): (4, 1) at time 44
[DBG]  [REPAIR] SAT destroy operator called.
[DBG]  [REPAIR] SAT operator – launching subproblem FOR OPTIMIZATION.
[DBG]  Creating local paths (sx, sy) in the submap for T_sync = 40
[DBG]    Agent 28 (global paths from T=40 to 43) has local path: (2,2) (1,2) (1,3) (1,4) 
[DBG]    Agent 42 (global paths from T=40 to 43) has local path: (1,2) (1,3) (1,4) (2,4) 
[DBG]    Agent 55 (global paths from T=40 to 41) has local path: (0,0) (0,1) 
[DBG]    Agent 69 (global paths from T=40 to 44) has local path: (0,1) (1,1) (2,1) (3,1) (4,1) 
[DBG]  Checking input data for SAT solver:
[DBG]    - Number of agents to replan: 4
[DBG]  Agent 28 has the original local path length: 4 => Start (2,2), Goal (1,4)
[DBG]  Agent 42 has the original local path length: 4 => Start (1,2), Goal (2,4)
[DBG]  Agent 55 has the original local path length: 2 => Start (0,0), Goal (0,1)
[DBG]  Agent 69 has the original local path length: 5 => Start (0,1), Goal (4,1)
[DBG]  Start position: (2, 2), (1, 2), (0, 0), (0, 1), 
[DBG]  Goal position: (1, 4), (2, 4), (0, 1), (4, 1), 
[DBG]  SAT instance and solver created.
Currently solving
Instance name: scen
Map name: map
Encoding used: disappear_at_goal
SAT solver used: Kissat
Optimizing function: sum of costs
Number of agents: 4
Mks LB: 5
SoC LB: 15
Delta: 0
Remaining time: 300000 [ms]

Vertex conflict! Agents 0, 1, timestep 4, location 0
Vertex conflict! Agents 0, 2, timestep 4, location 0
Vertex conflict! Agents 1, 2, timestep 4, location 0
Found plan [agents = 4] [timesteps = 5]
Agent #0 : 8 3 4 5 0 
Agent #1 : 3 4 5 9 0 
Agent #2 : 0 1 0 0 0 
Agent #3 : 1 2 7 11 14 

[STAT] Solver returned: 0
[DBG]  Agent (index) 28 | New local path (submap idx):
[DBG]  8 3 4 5 
[DBG]  Agent (index) 42 | New local path (submap idx):
[DBG]  3 4 5 9 
[DBG]  Agent (index) 55 | New local path (submap idx):
[DBG]  0 1 
[DBG]  Agent (index) 69 | New local path (submap idx):
[DBG]  1 2 7 11 14 
[DBG]  Update the agent path 28 | Original local length: 4 | New local length: 4
[DBG]  agent 28 t=0 => decoded (sx,sy)=(2,2) => global_id=757
[DBG]  agent 28 t=1 => decoded (sx,sy)=(1,2) => global_id=725
[DBG]  agent 28 t=2 => decoded (sx,sy)=(1,3) => global_id=726
[DBG]  agent 28 t=3 => decoded (sx,sy)=(1,4) => global_id=727
[DBG]  Complete path of agent 28:
[DBG]    Original: 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 660 692 724 725 757 757 757 757 757 757 757 725 726 727 
[DBG]    New:     661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 660 692 724 725 757 757 757 757 757 757 757 725 726 727 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 660 692 724 725 757 757 757 757 757 757 
[DBG]    Local path (in submap): 757 725 726 727 
[DBG]    Suffix (out of submap): 
[DBG]  Original agent path length 28 je: 44
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 0: 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 660, 692, 724, 725, 757, 757, 757, 757, 757, 757, 757, 725, 726, 727, 
[DBG]  Path for agent 28 updated, resulting length: 44
[DBG]  Update the agent path 42 | Original local length: 4 | New local length: 4
[DBG]  agent 42 t=0 => decoded (sx,sy)=(1,2) => global_id=725
[DBG]  agent 42 t=1 => decoded (sx,sy)=(1,3) => global_id=726
[DBG]  agent 42 t=2 => decoded (sx,sy)=(1,4) => global_id=727
[DBG]  agent 42 t=3 => decoded (sx,sy)=(2,4) => global_id=759
[DBG]  Complete path of agent 42:
[DBG]    Original: 224 192 193 194 226 258 258 259 291 323 355 387 388 389 390 390 391 423 424 425 426 427 428 429 430 431 463 464 496 528 529 561 593 625 657 658 659 691 692 724 725 726 727 759 
[DBG]    New:     224 192 193 194 226 258 258 259 291 323 355 387 388 389 390 390 391 423 424 425 426 427 428 429 430 431 463 464 496 528 529 561 593 625 657 658 659 691 692 724 725 726 727 759 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 224 192 193 194 226 258 258 259 291 323 355 387 388 389 390 390 391 423 424 425 426 427 428 429 430 431 463 464 496 528 529 561 593 625 657 658 659 691 692 724 
[DBG]    Local path (in submap): 725 726 727 759 
[DBG]    Suffix (out of submap): 
[DBG]  Original agent path length 42 je: 44
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 1: 224, 192, 193, 194, 226, 258, 258, 259, 291, 323, 355, 387, 388, 389, 390, 390, 391, 423, 424, 425, 426, 427, 428, 429, 430, 431, 463, 464, 496, 528, 529, 561, 593, 625, 657, 658, 659, 691, 692, 724, 725, 726, 727, 759, 
[DBG]  Path for agent 42 updated, resulting length: 44
[DBG]  Update the agent path 55 | Original local length: 2 | New local length: 2
[DBG]  agent 55 t=0 => decoded (sx,sy)=(0,0) => global_id=691
[DBG]  agent 55 t=1 => decoded (sx,sy)=(0,1) => global_id=692
[DBG]  Complete path of agent 55:
[DBG]    Original: 34 35 67 68 69 70 102 134 135 136 137 138 139 140 172 173 205 205 237 269 270 302 303 304 336 368 400 400 432 464 496 528 529 561 593 625 657 658 659 691 691 692 
[DBG]    New:     34 35 67 68 69 70 102 134 135 136 137 138 139 140 172 173 205 205 237 269 270 302 303 304 336 368 400 400 432 464 496 528 529 561 593 625 657 658 659 691 691 692 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 34 35 67 68 69 70 102 134 135 136 137 138 139 140 172 173 205 205 237 269 270 302 303 304 336 368 400 400 432 464 496 528 529 561 593 625 657 658 659 691 
[DBG]    Local path (in submap): 691 692 
[DBG]    Suffix (out of submap): 
[DBG]  Original agent path length 55 je: 42
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 2: 34, 35, 67, 68, 69, 70, 102, 134, 135, 136, 137, 138, 139, 140, 172, 173, 205, 205, 237, 269, 270, 302, 303, 304, 336, 368, 400, 400, 432, 464, 496, 528, 529, 561, 593, 625, 657, 658, 659, 691, 691, 692, 
[DBG]  Path for agent 55 updated, resulting length: 42
[DBG]  Update the agent path 69 | Original local length: 5 | New local length: 5
[DBG]  agent 69 t=0 => decoded (sx,sy)=(0,1) => global_id=692
[DBG]  agent 69 t=1 => decoded (sx,sy)=(1,1) => global_id=724
[DBG]  agent 69 t=2 => decoded (sx,sy)=(2,1) => global_id=756
[DBG]  agent 69 t=3 => decoded (sx,sy)=(3,1) => global_id=788
[DBG]  agent 69 t=4 => decoded (sx,sy)=(4,1) => global_id=820
[DBG]  Complete path of agent 69:
[DBG]    Original: 4 5 6 7 8 9 41 42 43 75 76 77 109 141 173 205 237 237 269 270 302 303 335 336 368 400 432 432 464 496 528 529 561 593 625 657 658 659 691 692 692 724 756 788 820 
[DBG]    New:     4 5 6 7 8 9 41 42 43 75 76 77 109 141 173 205 237 237 269 270 302 303 335 336 368 400 432 432 464 496 528 529 561 593 625 657 658 659 691 692 692 724 756 788 820 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 4 5 6 7 8 9 41 42 43 75 76 77 109 141 173 205 237 237 269 270 302 303 335 336 368 400 432 432 464 496 528 529 561 593 625 657 658 659 691 692 
[DBG]    Local path (in submap): 692 724 756 788 820 
[DBG]    Suffix (out of submap): 
[DBG]  Original agent path length 69 je: 45
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 3: 4, 5, 6, 7, 8, 9, 41, 42, 43, 75, 76, 77, 109, 141, 173, 205, 237, 237, 269, 270, 302, 303, 335, 336, 368, 400, 432, 432, 464, 496, 528, 529, 561, 593, 625, 657, 658, 659, 691, 692, 692, 724, 756, 788, 820, 
[DBG]  Path for agent 69 updated, resulting length: 45
[DBG]  Paths successfully updated.
[DBG]  (LNS.cpp) New path for agent 28: 
[DBG]  661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 660, 692, 724, 725, 757, 757, 757, 757, 757, 757, 757, 725, 726, 727, 
[DBG]  (LNS.cpp) New path for agent 42: 
[DBG]  224, 192, 193, 194, 226, 258, 258, 259, 291, 323, 355, 387, 388, 389, 390, 390, 391, 423, 424, 425, 426, 427, 428, 429, 430, 431, 463, 464, 496, 528, 529, 561, 593, 625, 657, 658, 659, 691, 692, 724, 725, 726, 727, 759, 
[DBG]  (LNS.cpp) New path for agent 55: 
[DBG]  34, 35, 67, 68, 69, 70, 102, 134, 135, 136, 137, 138, 139, 140, 172, 173, 205, 205, 237, 269, 270, 302, 303, 304, 336, 368, 400, 400, 432, 464, 496, 528, 529, 561, 593, 625, 657, 658, 659, 691, 691, 692, 
[DBG]  (LNS.cpp) New path for agent 69: 
[DBG]  4, 5, 6, 7, 8, 9, 41, 42, 43, 75, 76, 77, 109, 141, 173, 205, 237, 237, 269, 270, 302, 303, 335, 336, 368, 400, 432, 432, 464, 496, 528, 529, 561, 593, 625, 657, 658, 659, 691, 692, 692, 724, 756, 788, 820, 
[DBG]  Delta value: 0
[DBG]  Rewarding metric index = 1
[DBG]  component_weights = {2.15889e-08, 1, 9.50879e-09, 1.6486e-08}
[DBG]  opSuccess value: 1
[STAT] neighbor.sum_of_costs before recomputation: 171
[STAT] neighbor.old_sum_of_costs before recomputation: 171
[STAT] sum_of_costs before recomputation: 4284
[DBG]  Validate solution immediately after SAT success.
[DBG]  No problems after SAT replan.
[DBG]  Recomputing sum_of_cost by dividing neighbor.sum_of_costs and neighbor.old_sum_of_costs
[STAT] sum_of_costs after recomputation: 4284
[STAT] Iteration 153
[DBG]  Random chance did not select SAT operator (r=48), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 153
[DBG]  Random chance did not select SAT operator (r=69), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 153
[DBG]  Random chance did not select SAT operator (r=21), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 153
[DBG]  Random chance did not select SAT operator (r=56), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 153
[DBG]  Random chance did not select SAT operator (r=21), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 153
[DBG]  Random chance did not select SAT operator (r=34), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 153
[DBG]  Random chance did not select SAT operator (r=49), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 153
[DBG]  Random chance did not select SAT operator (r=64), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 153
[DBG]  Random chance did not select SAT operator (r=68), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 153
[DBG]  Random chance did not select SAT operator (r=41), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 153
[DBG]  Random chance did not select SAT operator (r=42), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 153
[DBG]  Random chance did not select SAT operator (r=29), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 153
[DBG]  Random chance did not select SAT operator (r=87), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 153
[DBG]  Random chance did not select SAT operator (r=88), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 153
[DBG]  Random chance did not select SAT operator (r=18), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 153
[DBG]  Random chance did not select SAT operator (r=75), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 153
[DBG]  Random chance did not select SAT operator (r=41), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 153
[DBG]  Random chance did not select SAT operator (r=54), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 153
[DBG]  Using SAT operator (destroy+repair SAT).
[DBG]  ====================
[DBG]  SAT destroy operator called.
[DBG]  SAT heuristic: 2
[DBG]  key_agent_id: 28
[DBG]  key_agent_id global path length: 44
[DBG]  Submap content (global positions):
[DBG]  594 595 596 597 598 
[DBG]  626 627 628 629 630 
[DBG]  658 659 660 661 662 
[DBG]  690 691 692 693 694 
[DBG]  722 723 724 725 726 
[DBG]  Map content with agents and obstacles:
[DBG]  . X . . X 
[DBG]  X A A . X 
[DBG]  . A A . X 
[DBG]  X . A X X 
[DBG]  . X . . . 
[DBG]  content of the map structure that we pass to the SAT solver:
[DBG]  1  -1  1  1  -1  
[DBG]  -1  1  1  1  -1  
[DBG]  1  1  1  1  -1  
[DBG]  -1  1  1  -1  -1  
[DBG]  1  -1  1  1  1  
[DBG]  Identifying agents in a submap for rescheduling (when key_agent is there at the time 30):
[DBG]  Agent 3 found intervals in the sub-map:
[DBG]   [24..29]
[DBG]  Agent 3 is not in sub-map at time 30 (intervals: 
[DBG]  [24..29] )
[DBG]  Agent 26 found intervals in the sub-map:
[DBG]   [26..31]
[DBG]  Agent 26 (interval in submap: [26..31]) contains time 30, added to replan.
[DBG]  Agent 28 found intervals in the sub-map:
[DBG]   [0..33] [41..42]
[DBG]  Agent 28 (interval in submap: [0..33]) contains time 30, added to replan.
[DBG]  Agent 44 found intervals in the sub-map:
[DBG]  
[DBG]  Agent 44 is not in sub-map at time 30 (intervals: 
[DBG]  )
[DBG]  Agent 74 found intervals in the sub-map:
[DBG]   [25..35]
[DBG]  Agent 74 (interval in submap: [25..35]) contains time 30, added to replan.
[DBG]  Agent 109 found intervals in the sub-map:
[DBG]   [29..34]
[DBG]  Agent 109 (interval in submap: [29..34]) contains time 30, added to replan.
[DBG]  Agent 148 found intervals in the sub-map:
[DBG]   [26..31]
[DBG]  Agent 148 (interval in submap: [26..31]) contains time 30, added to replan.
[DBG]  Agent 26 | Start (global): 692 -> (local): (3, 2) at time 30 | Goal (global): 724 -> (local): (4, 2) at time 31
[DBG]  Agent 28 | Start (global): 660 -> (local): (2, 2) at time 30 | Goal (global): 725 -> (local): (4, 3) at time 33
[DBG]  Agent 74 | Start (global): 627 -> (local): (1, 1) at time 30 | Goal (global): 597 -> (local): (0, 3) at time 35
[DBG]  Agent 109 | Start (global): 659 -> (local): (2, 1) at time 30 | Goal (global): 597 -> (local): (0, 3) at time 34
[DBG]  Agent 148 | Start (global): 628 -> (local): (1, 2) at time 30 | Goal (global): 660 -> (local): (2, 2) at time 31
[DBG]  [REPAIR] SAT destroy operator called.
[DBG]  [REPAIR] SAT operator – launching subproblem FOR OPTIMIZATION.
[DBG]  Creating local paths (sx, sy) in the submap for T_sync = 30
[DBG]    Agent 26 (global paths from T=30 to 31) has local path: (3,2) (4,2) 
[DBG]    Agent 28 (global paths from T=30 to 33) has local path: (2,2) (3,2) (4,2) (4,3) 
[DBG]    Agent 74 (global paths from T=30 to 35) has local path: (1,1) (1,2) (0,2) (0,2) (0,2) (0,3) 
[DBG]    Agent 109 (global paths from T=30 to 34) has local path: (2,1) (1,1) (1,2) (1,3) (0,3) 
[DBG]    Agent 148 (global paths from T=30 to 31) has local path: (1,2) (2,2) 
[DBG]  Checking input data for SAT solver:
[DBG]    - Number of agents to replan: 5
[DBG]  Agent 26 has the original local path length: 2 => Start (3,2), Goal (4,2)
[DBG]  Agent 28 has the original local path length: 4 => Start (2,2), Goal (4,3)
[DBG]  Agent 74 has the original local path length: 6 => Start (1,1), Goal (0,3)
[DBG]  Agent 109 has the original local path length: 5 => Start (2,1), Goal (0,3)
[DBG]  Agent 148 has the original local path length: 2 => Start (1,2), Goal (2,2)
[DBG]  Start position: (3, 2), (2, 2), (1, 1), (2, 1), (1, 2), 
[DBG]  Goal position: (4, 2), (4, 3), (0, 3), (0, 3), (2, 2), 
[DBG]  SAT instance and solver created.
Currently solving
Instance name: scen
Map name: map
Encoding used: disappear_at_goal
SAT solver used: Kissat
Optimizing function: sum of costs
Number of agents: 5
Mks LB: 5
SoC LB: 17
Delta: 0
Remaining time: 300000 [ms]

Vertex conflict! Agents 0, 1, timestep 4, location 0
Vertex conflict! Agents 0, 2, timestep 4, location 0
Vertex conflict! Agents 0, 4, timestep 2, location 0
Swapping conflict! Agents 0, 4, timestep 2, edge (0,0)
Vertex conflict! Agents 0, 4, timestep 3, location 0
Swapping conflict! Agents 0, 4, timestep 3, edge (0,0)
Vertex conflict! Agents 0, 4, timestep 4, location 0
Vertex conflict! Agents 1, 2, timestep 4, location 0
Vertex conflict! Agents 1, 4, timestep 4, location 0
Vertex conflict! Agents 2, 4, timestep 4, location 0
Found plan [agents = 5] [timesteps = 5]
Agent #0 : 11 13 0 0 0 
Agent #1 : 8 11 13 14 0 
Agent #2 : 3 4 5 2 0 
Agent #3 : 7 3 4 5 2 
Agent #4 : 4 8 0 0 0 

[STAT] Solver returned: 0
[DBG]  Agent (index) 26 | New local path (submap idx):
[DBG]  11 13 
[DBG]  Agent (index) 28 | New local path (submap idx):
[DBG]  8 11 13 14 
[DBG]  Agent (index) 74 | New local path (submap idx):
[DBG]  3 4 5 2 
[DBG]  Agent (index) 109 | New local path (submap idx):
[DBG]  7 3 4 5 2 
[DBG]  Agent (index) 148 | New local path (submap idx):
[DBG]  4 8 
[DBG]  Update the agent path 26 | Original local length: 2 | New local length: 2
[DBG]  agent 26 t=0 => decoded (sx,sy)=(3,2) => global_id=692
[DBG]  agent 26 t=1 => decoded (sx,sy)=(4,2) => global_id=724
[DBG]  Complete path of agent 26:
[DBG]    Original: 13 14 46 47 79 80 81 82 83 115 147 179 180 212 244 276 308 340 341 373 405 437 469 501 533 565 597 629 628 660 692 724 756 755 
[DBG]    New:     13 14 46 47 79 80 81 82 83 115 147 179 180 212 244 276 308 340 341 373 405 437 469 501 533 565 597 629 628 660 692 724 756 755 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 13 14 46 47 79 80 81 82 83 115 147 179 180 212 244 276 308 340 341 373 405 437 469 501 533 565 597 629 628 660 
[DBG]    Local path (in submap): 692 724 
[DBG]    Suffix (out of submap): 756 755 
[DBG]  Original agent path length 26 je: 34
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 0: 13, 14, 46, 47, 79, 80, 81, 82, 83, 115, 147, 179, 180, 212, 244, 276, 308, 340, 341, 373, 405, 437, 469, 501, 533, 565, 597, 629, 628, 660, 692, 724, 756, 755, 
[DBG]  Path for agent 26 updated, resulting length: 34
[DBG]  Update the agent path 28 | Original local length: 4 | New local length: 4
[DBG]  agent 28 t=0 => decoded (sx,sy)=(2,2) => global_id=660
[DBG]  agent 28 t=1 => decoded (sx,sy)=(3,2) => global_id=692
[DBG]  agent 28 t=2 => decoded (sx,sy)=(4,2) => global_id=724
[DBG]  agent 28 t=3 => decoded (sx,sy)=(4,3) => global_id=725
[DBG]  Complete path of agent 28:
[DBG]    Original: 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 660 692 724 725 757 757 757 757 757 757 757 725 726 727 
[DBG]    New:     661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 660 692 724 725 757 757 757 757 757 757 757 725 726 727 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 
[DBG]    Local path (in submap): 660 692 724 725 
[DBG]    Suffix (out of submap): 757 757 757 757 757 757 757 725 726 727 
[DBG]  Original agent path length 28 je: 44
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 1: 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 660, 692, 724, 725, 757, 757, 757, 757, 757, 757, 757, 725, 726, 727, 
[DBG]  Path for agent 28 updated, resulting length: 44
[DBG]  Update the agent path 74 | Original local length: 6 | New local length: 4
[DBG]  agent 74 t=0 => decoded (sx,sy)=(1,1) => global_id=627
[DBG]  agent 74 t=1 => decoded (sx,sy)=(1,2) => global_id=628
[DBG]  agent 74 t=2 => decoded (sx,sy)=(1,3) => global_id=629
[DBG]  agent 74 t=3 => decoded (sx,sy)=(0,3) => global_id=597
[DBG]  Complete path of agent 74:
[DBG]    Original: 752 720 720 720 720 720 720 720 720 720 720 720 720 720 720 720 720 720 719 718 686 687 688 689 657 658 659 691 691 659 627 628 596 596 596 597 565 566 534 502 503 504 
[DBG]    New:     752 720 720 720 720 720 720 720 720 720 720 720 720 720 720 720 720 720 719 718 686 687 688 689 657 658 659 691 691 659 627 628 629 597 565 566 534 502 503 504 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 752 720 720 720 720 720 720 720 720 720 720 720 720 720 720 720 720 720 719 718 686 687 688 689 657 658 659 691 691 659 
[DBG]    Local path (in submap): 627 628 629 597 565 566 
[DBG]    Suffix (out of submap): 534 502 503 504 
[DBG]  Original agent path length 74 je: 42
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 2: 752, 720, 720, 720, 720, 720, 720, 720, 720, 720, 720, 720, 720, 720, 720, 720, 720, 720, 719, 718, 686, 687, 688, 689, 657, 658, 659, 691, 691, 659, 627, 628, 629, 597, 565, 566, 534, 502, 503, 504, 
[DBG]  Path for agent 74 updated, resulting length: 40
[DBG]  Update the agent path 109 | Original local length: 5 | New local length: 5
[DBG]  agent 109 t=0 => decoded (sx,sy)=(2,1) => global_id=659
[DBG]  agent 109 t=1 => decoded (sx,sy)=(1,1) => global_id=627
[DBG]  agent 109 t=2 => decoded (sx,sy)=(1,2) => global_id=628
[DBG]  agent 109 t=3 => decoded (sx,sy)=(1,3) => global_id=629
[DBG]  agent 109 t=4 => decoded (sx,sy)=(0,3) => global_id=597
[DBG]  Complete path of agent 109:
[DBG]    Original: 882 850 851 819 819 819 819 851 850 849 848 847 815 783 751 719 687 686 686 687 719 751 751 719 687 688 689 689 657 658 659 627 628 629 597 565 566 534 502 503 504 472 473 474 475 443 444 445 413 414 415 
[DBG]    New:     882 850 851 819 819 819 819 851 850 849 848 847 815 783 751 719 687 686 686 687 719 751 751 719 687 688 689 689 657 658 659 627 628 629 597 565 566 534 502 503 504 472 473 474 475 443 444 445 413 414 415 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 882 850 851 819 819 819 819 851 850 849 848 847 815 783 751 719 687 686 686 687 719 751 751 719 687 688 689 689 657 658 
[DBG]    Local path (in submap): 659 627 628 629 597 
[DBG]    Suffix (out of submap): 565 566 534 502 503 504 472 473 474 475 443 444 445 413 414 415 
[DBG]  Original agent path length 109 je: 51
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 3: 882, 850, 851, 819, 819, 819, 819, 851, 850, 849, 848, 847, 815, 783, 751, 719, 687, 686, 686, 687, 719, 751, 751, 719, 687, 688, 689, 689, 657, 658, 659, 627, 628, 629, 597, 565, 566, 534, 502, 503, 504, 472, 473, 474, 475, 443, 444, 445, 413, 414, 415, 
[DBG]  Path for agent 109 updated, resulting length: 51
[DBG]  Update the agent path 148 | Original local length: 2 | New local length: 2
[DBG]  agent 148 t=0 => decoded (sx,sy)=(1,2) => global_id=628
[DBG]  agent 148 t=1 => decoded (sx,sy)=(2,2) => global_id=660
[DBG]  Complete path of agent 148:
[DBG]    Original: 776 744 744 744 712 713 714 714 715 715 715 715 714 746 778 779 780 781 782 783 784 752 720 688 656 657 658 659 627 628 628 660 
[DBG]    New:     776 744 744 744 712 713 714 714 715 715 715 715 714 746 778 779 780 781 782 783 784 752 720 688 656 657 658 659 627 628 628 660 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 776 744 744 744 712 713 714 714 715 715 715 715 714 746 778 779 780 781 782 783 784 752 720 688 656 657 658 659 627 628 
[DBG]    Local path (in submap): 628 660 
[DBG]    Suffix (out of submap): 
[DBG]  Original agent path length 148 je: 32
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 4: 776, 744, 744, 744, 712, 713, 714, 714, 715, 715, 715, 715, 714, 746, 778, 779, 780, 781, 782, 783, 784, 752, 720, 688, 656, 657, 658, 659, 627, 628, 628, 660, 
[DBG]  Path for agent 148 updated, resulting length: 32
[DBG]  Paths successfully updated.
[DBG]  (LNS.cpp) New path for agent 26: 
[DBG]  13, 14, 46, 47, 79, 80, 81, 82, 83, 115, 147, 179, 180, 212, 244, 276, 308, 340, 341, 373, 405, 437, 469, 501, 533, 565, 597, 629, 628, 660, 692, 724, 756, 755, 
[DBG]  (LNS.cpp) New path for agent 28: 
[DBG]  661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 660, 692, 724, 725, 757, 757, 757, 757, 757, 757, 757, 725, 726, 727, 
[DBG]  (LNS.cpp) New path for agent 74: 
[DBG]  752, 720, 720, 720, 720, 720, 720, 720, 720, 720, 720, 720, 720, 720, 720, 720, 720, 720, 719, 718, 686, 687, 688, 689, 657, 658, 659, 691, 691, 659, 627, 628, 629, 597, 565, 566, 534, 502, 503, 504, 
[DBG]  (LNS.cpp) New path for agent 109: 
[DBG]  882, 850, 851, 819, 819, 819, 819, 851, 850, 849, 848, 847, 815, 783, 751, 719, 687, 686, 686, 687, 719, 751, 751, 719, 687, 688, 689, 689, 657, 658, 659, 627, 628, 629, 597, 565, 566, 534, 502, 503, 504, 472, 473, 474, 475, 443, 444, 445, 413, 414, 415, 
[DBG]  (LNS.cpp) New path for agent 148: 
[DBG]  776, 744, 744, 744, 712, 713, 714, 714, 715, 715, 715, 715, 714, 746, 778, 779, 780, 781, 782, 783, 784, 752, 720, 688, 656, 657, 658, 659, 627, 628, 628, 660, 
[DBG]  Delta value: 0.010101
[DBG]  Rewarding metric index = 1
[DBG]  component_weights = {2.03044e-08, 1, 8.94302e-09, 1.55051e-08}
[DBG]  opSuccess value: 1
[STAT] neighbor.sum_of_costs before recomputation: 196
[STAT] neighbor.old_sum_of_costs before recomputation: 198
[STAT] sum_of_costs before recomputation: 4284
[DBG]  Validate solution immediately after SAT success.
[WARNING] Problem after SAT: Vertex conflict between agents 74 and 30 at location 502 at timestep 37
[DBG]  [DEBUG] Attempting immediate repair via init_lns because problem occurred after SAT (should be applied only for conflicts...).
[DBG]  [DEBUG] Passing 150 agents to init_lns (skip=true).
[DBG]  [DEBUG] path_table contents for selected agents (neighbor.agents):
[DBG]    Agent 26 => controlling path length=34
[DBG]    Agent 28 => controlling path length=44
[DBG]    Agent 74 => controlling path length=40
[DBG]    Agent 109 => controlling path length=51
[DBG]    Agent 148 => controlling path length=32
[DBG]  hodnota skip_initial_solution=1
[DBG]  We skip initialSolution => call buildCollisionData()
[DBG]  buildCollisionData() called – skip_initial_solution case.
[DBG]  Agents.size()=150, collision_graph.size()=150
[DBG]  agent 30 => updateCollidingPairs => foundCollision
[DBG]  agent 74 => updateCollidingPairs => foundCollision
[DBG]  agent 109 => updateCollidingPairs => foundCollision
[DBG]  Conflicting agent pairs:
[DBG]  agent 30 is in conflict with agent 74
[DBG]  agent 74 is in conflict with agent 109
[DBG]  buildCollisionData() => sum_of_costs=4282, num_of_colliding_pairs=2
[DBG]  buildCollisionData done => sum_of_costs=4282, num_of_colliding_pairs=2
[DBG]  sum_of_cost hodnota: 4282
[DBG]  After skip/init build => iteration_stats.back(): sum_of_costs=4282, collisions=2
[DEBUG] Using default neighbor generation strategy for conflicts: 0
	InitLNS(PP): runtime = 0.00149275, iterations = 2, colliding pairs = 0, initial colliding pairs = 2, solution cost = 4280, initial solution cost = 4282, failed iterations = 0
[DBG]  init_lns->sum_of_costs after init_lns->run: 4280
[DBG]  sum_of_costs after assignment from init_lns->run: 4280
[DBG]  Recomputing sum_of_cost by dividing neighbor.sum_of_costs and neighbor.old_sum_of_costs
[STAT] sum_of_costs after recomputation: 4280
[STAT] Iteration 154
[DBG]  Random chance did not select SAT operator (r=42), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 154
[DBG]  Random chance did not select SAT operator (r=91), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 154
[DBG]  Random chance did not select SAT operator (r=80), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 154
[DBG]  Using SAT operator (destroy+repair SAT).
[DBG]  ====================
[DBG]  SAT destroy operator called.
[DBG]  SAT heuristic: 2
[DBG]  key_agent_id: 28
[DBG]  key_agent_id global path length: 44
[DBG]  Submap content (global positions):
[DBG]  626 627 628 629 630 
[DBG]  658 659 660 661 662 
[DBG]  690 691 692 693 694 
[DBG]  722 723 724 725 726 
[DBG]  754 755 756 757 758 
[DBG]  Map content with agents and obstacles:
[DBG]  X A . . X 
[DBG]  . . A . X 
[DBG]  X . A X X 
[DBG]  . X A . . 
[DBG]  X . . . X 
[DBG]  content of the map structure that we pass to the SAT solver:
[DBG]  -1  1  1  1  -1  
[DBG]  1  1  1  1  -1  
[DBG]  -1  1  1  -1  -1  
[DBG]  1  -1  1  1  1  
[DBG]  -1  1  1  1  -1  
[DBG]  Identifying agents in a submap for rescheduling (when key_agent is there at the time 31):
[DBG]  Agent 3 found intervals in the sub-map:
[DBG]   [25..30]
[DBG]  Agent 3 is not in sub-map at time 31 (intervals: 
[DBG]  [25..30] )
[DBG]  Agent 11 found intervals in the sub-map:
[DBG]  
[DBG]  Agent 11 is not in sub-map at time 31 (intervals: 
[DBG]  )
[DBG]  Agent 26 found intervals in the sub-map:
[DBG]   [27..33]
[DBG]  Agent 26 (interval in submap: [27..33]) contains time 31, added to replan.
[DBG]  Agent 28 found intervals in the sub-map:
[DBG]   [0..42]
[DBG]  Agent 28 (interval in submap: [0..42]) contains time 31, added to replan.
[DBG]  Agent 74 found intervals in the sub-map:
[DBG]   [26..30]
[DBG]  Agent 74 is not in sub-map at time 31 (intervals: 
[DBG]  [26..30] )
[DBG]  Agent 109 found intervals in the sub-map:
[DBG]   [29..33]
[DBG]  Agent 109 (interval in submap: [29..33]) contains time 31, added to replan.
[DBG]  Agent 148 found intervals in the sub-map:
[DBG]   [25..31]
[DBG]  Agent 148 (interval in submap: [25..31]) contains time 31, added to replan.
[DBG]  Agent 26 | Start (global): 724 -> (local): (3, 2) at time 31 | Goal (global): 755 -> (local): (4, 1) at time 33
[DBG]  Agent 28 | Start (global): 692 -> (local): (2, 2) at time 31 | Goal (global): 726 -> (local): (3, 4) at time 42
[DBG]  Agent 109 | Start (global): 627 -> (local): (0, 1) at time 31 | Goal (global): 629 -> (local): (0, 3) at time 33
[DBG]  Agent 148 | Start (global): 660 -> (local): (1, 2) at time 31 | Goal (global): 660 -> (local): (1, 2) at time 31
[DBG]  [REPAIR] SAT destroy operator called.
[DBG]  [REPAIR] SAT operator – launching subproblem FOR OPTIMIZATION.
[DBG]  Creating local paths (sx, sy) in the submap for T_sync = 31
[DBG]    Agent 26 (global paths from T=31 to 33) has local path: (3,2) (4,2) (4,1) 
[DBG]    Agent 28 (global paths from T=31 to 42) has local path: (2,2) (3,2) (3,3) (4,3) (4,3) (4,3) (4,3) (4,3) (4,3) (4,3) (3,3) (3,4) 
[DBG]    Agent 109 (global paths from T=31 to 33) has local path: (0,1) (0,2) (0,3) 
[DBG]    Agent 148 (global paths from T=31 to 31) has local path: (1,2) 
[DBG]  Checking input data for SAT solver:
[DBG]    - Number of agents to replan: 4
[DBG]  Agent 26 has the original local path length: 3 => Start (3,2), Goal (4,1)
[DBG]  Agent 28 has the original local path length: 12 => Start (2,2), Goal (3,4)
[DBG]  Agent 109 has the original local path length: 3 => Start (0,1), Goal (0,3)
[DBG]  Agent 148 has the original local path length: 1 => Start (1,2), Goal (1,2)
[DBG]  Start position: (3, 2), (2, 2), (0, 1), (1, 2), 
[DBG]  Goal position: (4, 1), (3, 4), (0, 3), (1, 2), 
[DBG]  SAT instance and solver created.
Currently solving
Instance name: scen
Map name: map
Encoding used: disappear_at_goal
SAT solver used: Kissat
Optimizing function: sum of costs
Number of agents: 4
Mks LB: 4
SoC LB: 11
Delta: 0
Remaining time: 300000 [ms]

Vertex conflict! Agents 0, 2, timestep 3, location 0
Vertex conflict! Agents 0, 3, timestep 3, location 0
Vertex conflict! Agents 2, 3, timestep 3, location 0
Found plan [agents = 4] [timesteps = 4]
Agent #0 : 10 14 13 0 
Agent #1 : 8 10 11 12 
Agent #2 : 0 1 2 0 
Agent #3 : 5 0 0 0 

[STAT] Solver returned: 0
[DBG]  Agent (index) 26 | New local path (submap idx):
[DBG]  10 14 13 
[DBG]  Agent (index) 28 | New local path (submap idx):
[DBG]  8 10 11 12 
[DBG]  Agent (index) 109 | New local path (submap idx):
[DBG]  0 1 2 
[DBG]  Agent (index) 148 | New local path (submap idx):
[DBG]  5 
[DBG]  Update the agent path 26 | Original local length: 3 | New local length: 3
[DBG]  agent 26 t=0 => decoded (sx,sy)=(3,2) => global_id=724
[DBG]  agent 26 t=1 => decoded (sx,sy)=(4,2) => global_id=756
[DBG]  agent 26 t=2 => decoded (sx,sy)=(4,1) => global_id=755
[DBG]  Complete path of agent 26:
[DBG]    Original: 13 14 46 47 79 80 81 82 83 115 147 179 180 212 244 276 308 340 341 373 405 437 469 501 533 565 597 629 628 660 692 724 756 755 
[DBG]    New:     13 14 46 47 79 80 81 82 83 115 147 179 180 212 244 276 308 340 341 373 405 437 469 501 533 565 597 629 628 660 692 724 756 755 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 13 14 46 47 79 80 81 82 83 115 147 179 180 212 244 276 308 340 341 373 405 437 469 501 533 565 597 629 628 660 692 
[DBG]    Local path (in submap): 724 756 755 
[DBG]    Suffix (out of submap): 
[DBG]  Original agent path length 26 je: 34
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 0: 13, 14, 46, 47, 79, 80, 81, 82, 83, 115, 147, 179, 180, 212, 244, 276, 308, 340, 341, 373, 405, 437, 469, 501, 533, 565, 597, 629, 628, 660, 692, 724, 756, 755, 
[DBG]  Path for agent 26 updated, resulting length: 34
[DBG]  Update the agent path 28 | Original local length: 12 | New local length: 4
[DBG]  agent 28 t=0 => decoded (sx,sy)=(2,2) => global_id=692
[DBG]  agent 28 t=1 => decoded (sx,sy)=(3,2) => global_id=724
[DBG]  agent 28 t=2 => decoded (sx,sy)=(3,3) => global_id=725
[DBG]  agent 28 t=3 => decoded (sx,sy)=(3,4) => global_id=726
[DBG]  Complete path of agent 28:
[DBG]    Original: 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 660 692 724 725 757 757 757 757 757 757 757 725 726 727 
[DBG]    New:     661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 660 692 724 725 726 727 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 660 
[DBG]    Local path (in submap): 692 724 725 726 727 
[DBG]    Suffix (out of submap): 
[DBG]  Original agent path length 28 je: 44
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 1: 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 660, 692, 724, 725, 726, 727, 
[DBG]  Path for agent 28 updated, resulting length: 36
[DBG]  Update the agent path 109 | Original local length: 3 | New local length: 3
[DBG]  agent 109 t=0 => decoded (sx,sy)=(0,1) => global_id=627
[DBG]  agent 109 t=1 => decoded (sx,sy)=(0,2) => global_id=628
[DBG]  agent 109 t=2 => decoded (sx,sy)=(0,3) => global_id=629
[DBG]  Complete path of agent 109:
[DBG]    Original: 882 850 851 819 819 819 819 851 850 849 848 847 815 783 751 719 687 686 686 687 719 751 751 719 687 688 689 689 657 658 659 627 628 629 597 565 566 534 502 503 504 472 473 474 475 443 444 445 413 414 415 
[DBG]    New:     882 850 851 819 819 819 819 851 850 849 848 847 815 783 751 719 687 686 686 687 719 751 751 719 687 688 689 689 657 658 659 627 628 629 597 565 566 534 502 503 504 472 473 474 475 443 444 445 413 414 415 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 882 850 851 819 819 819 819 851 850 849 848 847 815 783 751 719 687 686 686 687 719 751 751 719 687 688 689 689 657 658 659 
[DBG]    Local path (in submap): 627 628 629 
[DBG]    Suffix (out of submap): 597 565 566 534 502 503 504 472 473 474 475 443 444 445 413 414 415 
[DBG]  Original agent path length 109 je: 51
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 2: 882, 850, 851, 819, 819, 819, 819, 851, 850, 849, 848, 847, 815, 783, 751, 719, 687, 686, 686, 687, 719, 751, 751, 719, 687, 688, 689, 689, 657, 658, 659, 627, 628, 629, 597, 565, 566, 534, 502, 503, 504, 472, 473, 474, 475, 443, 444, 445, 413, 414, 415, 
[DBG]  Path for agent 109 updated, resulting length: 51
[DBG]  Update the agent path 148 | Original local length: 1 | New local length: 1
[DBG]  agent 148 t=0 => decoded (sx,sy)=(1,2) => global_id=660
[DBG]  Complete path of agent 148:
[DBG]    Original: 776 808 808 808 808 808 808 809 810 811 779 780 781 813 781 782 750 718 719 751 752 753 721 689 657 658 659 691 659 627 628 660 
[DBG]    New:     776 808 808 808 808 808 808 809 810 811 779 780 781 813 781 782 750 718 719 751 752 753 721 689 657 658 659 691 659 627 628 660 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 776 808 808 808 808 808 808 809 810 811 779 780 781 813 781 782 750 718 719 751 752 753 721 689 657 658 659 691 659 627 628 
[DBG]    Local path (in submap): 660 
[DBG]    Suffix (out of submap): 
[DBG]  Original agent path length 148 je: 32
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 3: 776, 808, 808, 808, 808, 808, 808, 809, 810, 811, 779, 780, 781, 813, 781, 782, 750, 718, 719, 751, 752, 753, 721, 689, 657, 658, 659, 691, 659, 627, 628, 660, 
[DBG]  Path for agent 148 updated, resulting length: 32
[DBG]  Paths successfully updated.
[DBG]  (LNS.cpp) New path for agent 26: 
[DBG]  13, 14, 46, 47, 79, 80, 81, 82, 83, 115, 147, 179, 180, 212, 244, 276, 308, 340, 341, 373, 405, 437, 469, 501, 533, 565, 597, 629, 628, 660, 692, 724, 756, 755, 
[DBG]  (LNS.cpp) New path for agent 28: 
[DBG]  661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 660, 692, 724, 725, 726, 727, 
[DBG]  (LNS.cpp) New path for agent 109: 
[DBG]  882, 850, 851, 819, 819, 819, 819, 851, 850, 849, 848, 847, 815, 783, 751, 719, 687, 686, 686, 687, 719, 751, 751, 719, 687, 688, 689, 689, 657, 658, 659, 627, 628, 629, 597, 565, 566, 534, 502, 503, 504, 472, 473, 474, 475, 443, 444, 445, 413, 414, 415, 
[DBG]  (LNS.cpp) New path for agent 148: 
[DBG]  776, 808, 808, 808, 808, 808, 808, 809, 810, 811, 779, 780, 781, 813, 781, 782, 750, 718, 719, 751, 752, 753, 721, 689, 657, 658, 659, 691, 659, 627, 628, 660, 
[DBG]  Delta value: 0.0509554
[DBG]  Rewarding metric index = 1
[DBG]  component_weights = {1.83539e-08, 1, 8.08395e-09, 1.40157e-08}
[DBG]  opSuccess value: 1
[STAT] neighbor.sum_of_costs before recomputation: 149
[STAT] neighbor.old_sum_of_costs before recomputation: 157
[STAT] sum_of_costs before recomputation: 4280
[DBG]  Validate solution immediately after SAT success.
[WARNING] Problem after SAT: Target conflict: agent 42 (len 43) traverses target of agent 28 (len 35) at location 727 at timestep 42
[DBG]  [DEBUG] Attempting immediate repair via init_lns because problem occurred after SAT (should be applied only for conflicts...).
[DBG]  [DEBUG] Passing 150 agents to init_lns (skip=true).
[DBG]  [DEBUG] path_table contents for selected agents (neighbor.agents):
[DBG]    Agent 26 => controlling path length=34
[DBG]    Agent 28 => controlling path length=36
[DBG]    Agent 109 => controlling path length=51
[DBG]    Agent 148 => controlling path length=32
[DBG]  hodnota skip_initial_solution=1
[DBG]  We skip initialSolution => call buildCollisionData()
[DBG]  buildCollisionData() called – skip_initial_solution case.
[DBG]  Agents.size()=150, collision_graph.size()=150
[DBG]  agent 28 => updateCollidingPairs => foundCollision
[DBG]  agent 42 => updateCollidingPairs => foundCollision
[DBG]  Conflicting agent pairs:
[DBG]  agent 28 is in conflict with agent 42
[DBG]  buildCollisionData() => sum_of_costs=4272, num_of_colliding_pairs=1
[DBG]  buildCollisionData done => sum_of_costs=4272, num_of_colliding_pairs=1
[DBG]  sum_of_cost hodnota: 4272
[DBG]  After skip/init build => iteration_stats.back(): sum_of_costs=4272, collisions=1
[DEBUG] Using default neighbor generation strategy for conflicts: 1
	InitLNS(PP): runtime = 0.001901, iterations = 2, colliding pairs = 0, initial colliding pairs = 1, solution cost = 4281, initial solution cost = 4272, failed iterations = 0
[DBG]  init_lns->sum_of_costs after init_lns->run: 4281
[DBG]  sum_of_costs after assignment from init_lns->run: 4281
[DBG]  Recomputing sum_of_cost by dividing neighbor.sum_of_costs and neighbor.old_sum_of_costs
[STAT] sum_of_costs after recomputation: 4281
[STAT] Iteration 155
[DBG]  Random chance did not select SAT operator (r=68), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 155
[DBG]  Random chance did not select SAT operator (r=25), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 155
[DBG]  Random chance did not select SAT operator (r=16), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 155
[DBG]  Random chance did not select SAT operator (r=23), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 155
[DBG]  Random chance did not select SAT operator (r=95), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 155
[DBG]  Random chance did not select SAT operator (r=95), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 155
[DBG]  Random chance did not select SAT operator (r=24), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 155
[DBG]  Random chance did not select SAT operator (r=17), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 155
[DBG]  Random chance did not select SAT operator (r=98), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 155
[DBG]  Random chance did not select SAT operator (r=78), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 155
[DBG]  Random chance did not select SAT operator (r=52), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 155
[DBG]  Random chance did not select SAT operator (r=71), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 155
[DBG]  Random chance did not select SAT operator (r=45), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 155
[DBG]  Random chance did not select SAT operator (r=21), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 155
[DBG]  Random chance did not select SAT operator (r=56), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 155
[DBG]  Random chance did not select SAT operator (r=45), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 155
[DBG]  Random chance did not select SAT operator (r=77), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 155
[DBG]  Random chance did not select SAT operator (r=42), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 155
[DBG]  Random chance did not select SAT operator (r=67), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 155
[DBG]  Random chance did not select SAT operator (r=62), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 155
[DBG]  Random chance did not select SAT operator (r=74), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 155
[DBG]  Random chance did not select SAT operator (r=65), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 155
[DBG]  Using SAT operator (destroy+repair SAT).
[DBG]  ====================
[DBG]  SAT destroy operator called.
[DBG]  SAT heuristic: 2
[DBG]  key_agent_id: 28
[DBG]  key_agent_id global path length: 43
[DBG]  Submap content (global positions):
[DBG]  594 595 596 597 598 
[DBG]  626 627 628 629 630 
[DBG]  658 659 660 661 662 
[DBG]  690 691 692 693 694 
[DBG]  722 723 724 725 726 
[DBG]  Map content with agents and obstacles:
[DBG]  . X A . X 
[DBG]  X . . . X 
[DBG]  . A A . X 
[DBG]  X . . X X 
[DBG]  . X . . . 
[DBG]  content of the map structure that we pass to the SAT solver:
[DBG]  1  -1  1  1  -1  
[DBG]  -1  1  1  1  -1  
[DBG]  1  1  1  1  -1  
[DBG]  -1  1  1  -1  -1  
[DBG]  1  -1  1  1  1  
[DBG]  Identifying agents in a submap for rescheduling (when key_agent is there at the time 13):
[DBG]  Agent 28 found intervals in the sub-map:
[DBG]   [0..41]
[DBG]  Agent 28 (interval in submap: [0..41]) contains time 13, added to replan.
[DBG]  Agent 62 found intervals in the sub-map:
[DBG]  
[DBG]  Agent 62 is not in sub-map at time 13 (intervals: 
[DBG]  )
[DBG]  Agent 86 found intervals in the sub-map:
[DBG]   [9..14]
[DBG]  Agent 86 (interval in submap: [9..14]) contains time 13, added to replan.
[DBG]  Agent 89 found intervals in the sub-map:
[DBG]   [5..10]
[DBG]  Agent 89 is not in sub-map at time 13 (intervals: 
[DBG]  [5..10] )
[DBG]  Agent 135 found intervals in the sub-map:
[DBG]   [10..11] [16..20]
[DBG]  Agent 135 is not in sub-map at time 13 (intervals: 
[DBG]  [10..11] [16..20] )
[DBG]  Agent 137 found intervals in the sub-map:
[DBG]   [9..14]
[DBG]  Agent 137 (interval in submap: [9..14]) contains time 13, added to replan.
[DBG]  Agent 28 | Start (global): 660 -> (local): (2, 2) at time 13 | Goal (global): 726 -> (local): (4, 4) at time 41
[DBG]  Agent 86 | Start (global): 596 -> (local): (0, 2) at time 13 | Goal (global): 597 -> (local): (0, 3) at time 14
[DBG]  Agent 137 | Start (global): 659 -> (local): (2, 1) at time 13 | Goal (global): 658 -> (local): (2, 0) at time 14
[DBG]  [REPAIR] SAT destroy operator called.
[DBG]  [REPAIR] SAT operator – launching subproblem FOR OPTIMIZATION.
[DBG]  Creating local paths (sx, sy) in the submap for T_sync = 13
[DBG]    Agent 28 (global paths from T=13 to 41) has local path: (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,1) (2,1) (2,1) (2,1) (2,1) (2,2) (2,3) (2,3) (2,3) (2,3) (1,3) (0,3) (0,2) (1,2) (1,1) (2,1) (3,1) (3,2) (4,2) (4,3) (4,4) 
[DBG]    Agent 86 (global paths from T=13 to 14) has local path: (0,2) (0,3) 
[DBG]    Agent 137 (global paths from T=13 to 14) has local path: (2,1) (2,0) 
[DBG]  Checking input data for SAT solver:
[DBG]    - Number of agents to replan: 3
[DBG]  Agent 28 has the original local path length: 29 => Start (2,2), Goal (4,4)
[DBG]  Agent 86 has the original local path length: 2 => Start (0,2), Goal (0,3)
[DBG]  Agent 137 has the original local path length: 2 => Start (2,1), Goal (2,0)
[DBG]  Start position: (2, 2), (0, 2), (2, 1), 
[DBG]  Goal position: (4, 4), (0, 3), (2, 0), 
[DBG]  SAT instance and solver created.
Currently solving
Instance name: scen
Map name: map
Encoding used: disappear_at_goal
SAT solver used: Kissat
Optimizing function: sum of costs
Number of agents: 3
Mks LB: 5
SoC LB: 9
Delta: 0
Remaining time: 300000 [ms]

Vertex conflict! Agents 1, 2, timestep 2, location 0
Swapping conflict! Agents 1, 2, timestep 2, edge (0,0)
Vertex conflict! Agents 1, 2, timestep 3, location 0
Swapping conflict! Agents 1, 2, timestep 3, edge (0,0)
Vertex conflict! Agents 1, 2, timestep 4, location 0
Found plan [agents = 3] [timesteps = 5]
Agent #0 : 8 11 13 14 15 
Agent #1 : 1 2 0 0 0 
Agent #2 : 7 6 0 0 0 

[STAT] Solver returned: 0
[DBG]  Agent (index) 28 | New local path (submap idx):
[DBG]  8 11 13 14 15 
[DBG]  Agent (index) 86 | New local path (submap idx):
[DBG]  1 2 
[DBG]  Agent (index) 137 | New local path (submap idx):
[DBG]  7 6 
[DBG]  Update the agent path 28 | Original local length: 29 | New local length: 5
[DBG]  agent 28 t=0 => decoded (sx,sy)=(2,2) => global_id=660
[DBG]  agent 28 t=1 => decoded (sx,sy)=(3,2) => global_id=692
[DBG]  agent 28 t=2 => decoded (sx,sy)=(4,2) => global_id=724
[DBG]  agent 28 t=3 => decoded (sx,sy)=(4,3) => global_id=725
[DBG]  agent 28 t=4 => decoded (sx,sy)=(4,4) => global_id=726
[DBG]  Complete path of agent 28:
[DBG]    Original: 661 661 661 661 661 661 661 661 661 661 661 661 661 660 660 660 660 660 660 660 660 659 659 659 659 659 660 661 661 661 661 629 597 596 628 627 659 691 692 724 725 726 727 
[DBG]    New:     661 661 661 661 661 661 661 661 661 661 661 661 661 660 692 724 725 726 727 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 661 661 661 661 661 661 661 661 661 661 661 661 661 
[DBG]    Local path (in submap): 660 692 724 725 726 727 
[DBG]    Suffix (out of submap): 
[DBG]  Original agent path length 28 je: 43
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 0: 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 660, 692, 724, 725, 726, 727, 
[DBG]  Path for agent 28 updated, resulting length: 19
[DBG]  Update the agent path 86 | Original local length: 2 | New local length: 2
[DBG]  agent 86 t=0 => decoded (sx,sy)=(0,2) => global_id=596
[DBG]  agent 86 t=1 => decoded (sx,sy)=(0,3) => global_id=597
[DBG]  Complete path of agent 86:
[DBG]    Original: 781 782 750 751 719 687 655 656 657 658 659 627 628 596 597 565 533 534 534 502 503 504 505 505 505 505 505 506 538 539 540 541 
[DBG]    New:     781 782 750 751 719 687 655 656 657 658 659 627 628 596 597 565 533 534 534 502 503 504 505 505 505 505 505 506 538 539 540 541 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 781 782 750 751 719 687 655 656 657 658 659 627 628 
[DBG]    Local path (in submap): 596 597 
[DBG]    Suffix (out of submap): 565 533 534 534 502 503 504 505 505 505 505 505 506 538 539 540 541 
[DBG]  Original agent path length 86 je: 32
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 1: 781, 782, 750, 751, 719, 687, 655, 656, 657, 658, 659, 627, 628, 596, 597, 565, 533, 534, 534, 502, 503, 504, 505, 505, 505, 505, 505, 506, 538, 539, 540, 541, 
[DBG]  Path for agent 86 updated, resulting length: 32
[DBG]  Update the agent path 137 | Original local length: 2 | New local length: 2
[DBG]  agent 137 t=0 => decoded (sx,sy)=(2,1) => global_id=659
[DBG]  agent 137 t=1 => decoded (sx,sy)=(2,0) => global_id=658
[DBG]  Complete path of agent 137:
[DBG]    Original: 538 506 505 504 503 502 501 533 565 597 596 628 660 659 658 657 656 688 687 719 751 750 782 781 780 779 778 778 777 777 809 808 807 806 805 804 803 802 801 800 832 864 865 897 929 930 931 932 
[DBG]    New:     538 506 505 504 503 502 501 533 565 597 596 628 660 659 658 657 656 688 687 719 751 750 782 781 780 779 778 778 777 777 809 808 807 806 805 804 803 802 801 800 832 864 865 897 929 930 931 932 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 538 506 505 504 503 502 501 533 565 597 596 628 660 
[DBG]    Local path (in submap): 659 658 
[DBG]    Suffix (out of submap): 657 656 688 687 719 751 750 782 781 780 779 778 778 777 777 809 808 807 806 805 804 803 802 801 800 832 864 865 897 929 930 931 932 
[DBG]  Original agent path length 137 je: 48
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 2: 538, 506, 505, 504, 503, 502, 501, 533, 565, 597, 596, 628, 660, 659, 658, 657, 656, 688, 687, 719, 751, 750, 782, 781, 780, 779, 778, 778, 777, 777, 809, 808, 807, 806, 805, 804, 803, 802, 801, 800, 832, 864, 865, 897, 929, 930, 931, 932, 
[DBG]  Path for agent 137 updated, resulting length: 48
[DBG]  Paths successfully updated.
[DBG]  (LNS.cpp) New path for agent 28: 
[DBG]  661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 660, 692, 724, 725, 726, 727, 
[DBG]  (LNS.cpp) New path for agent 86: 
[DBG]  781, 782, 750, 751, 719, 687, 655, 656, 657, 658, 659, 627, 628, 596, 597, 565, 533, 534, 534, 502, 503, 504, 505, 505, 505, 505, 505, 506, 538, 539, 540, 541, 
[DBG]  (LNS.cpp) New path for agent 137: 
[DBG]  538, 506, 505, 504, 503, 502, 501, 533, 565, 597, 596, 628, 660, 659, 658, 657, 656, 688, 687, 719, 751, 750, 782, 781, 780, 779, 778, 778, 777, 777, 809, 808, 807, 806, 805, 804, 803, 802, 801, 800, 832, 864, 865, 897, 929, 930, 931, 932, 
[DBG]  Delta value: 0.2
[DBG]  Rewarding metric index = 1
[DBG]  component_weights = {1.45302e-08, 1, 6.39979e-09, 1.10957e-08}
[DBG]  opSuccess value: 1
[STAT] neighbor.sum_of_costs before recomputation: 96
[STAT] neighbor.old_sum_of_costs before recomputation: 120
[STAT] sum_of_costs before recomputation: 4281
[DBG]  Validate solution immediately after SAT success.
[WARNING] Problem after SAT: Target conflict: agent 42 (len 42) traverses target of agent 28 (len 18) at location 727 at timestep 41
[DBG]  [DEBUG] Attempting immediate repair via init_lns because problem occurred after SAT (should be applied only for conflicts...).
[DBG]  [DEBUG] Passing 150 agents to init_lns (skip=true).
[DBG]  [DEBUG] path_table contents for selected agents (neighbor.agents):
[DBG]    Agent 28 => controlling path length=19
[DBG]    Agent 86 => controlling path length=32
[DBG]    Agent 137 => controlling path length=48
[DBG]  hodnota skip_initial_solution=1
[DBG]  We skip initialSolution => call buildCollisionData()
[DBG]  buildCollisionData() called – skip_initial_solution case.
[DBG]  Agents.size()=150, collision_graph.size()=150
[DBG]  agent 28 => updateCollidingPairs => foundCollision
[DBG]  agent 42 => updateCollidingPairs => foundCollision
[DBG]  agent 101 => updateCollidingPairs => foundCollision
[DBG]  Conflicting agent pairs:
[DBG]  agent 28 is in conflict with agent 42
[DBG]  agent 28 is in conflict with agent 101
[DBG]  buildCollisionData() => sum_of_costs=4257, num_of_colliding_pairs=2
[DBG]  buildCollisionData done => sum_of_costs=4257, num_of_colliding_pairs=2
[DBG]  sum_of_cost hodnota: 4257
[DBG]  After skip/init build => iteration_stats.back(): sum_of_costs=4257, collisions=2
[DEBUG] Using default neighbor generation strategy for conflicts: 2
	InitLNS(PP): runtime = 0.000953375, iterations = 2, colliding pairs = 0, initial colliding pairs = 2, solution cost = 4283, initial solution cost = 4257, failed iterations = 0
[DBG]  init_lns->sum_of_costs after init_lns->run: 4283
[DBG]  sum_of_costs after assignment from init_lns->run: 4283
[DBG]  Recomputing sum_of_cost by dividing neighbor.sum_of_costs and neighbor.old_sum_of_costs
[STAT] sum_of_costs after recomputation: 4283
[STAT] Iteration 156
[DBG]  Random chance did not select SAT operator (r=15), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 156
[DBG]  Random chance did not select SAT operator (r=57), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 156
[DBG]  Random chance did not select SAT operator (r=48), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 156
[DBG]  Random chance did not select SAT operator (r=51), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 156
[DBG]  Random chance did not select SAT operator (r=66), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 156
[DBG]  Random chance did not select SAT operator (r=78), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 156
[DBG]  Using SAT operator (destroy+repair SAT).
[DBG]  ====================
[DBG]  SAT destroy operator called.
[DBG]  SAT heuristic: 2
[DBG]  key_agent_id: 28
[DBG]  key_agent_id global path length: 43
[DBG]  Submap content (global positions):
[DBG]  593 594 595 596 597 
[DBG]  625 626 627 628 629 
[DBG]  657 658 659 660 661 
[DBG]  689 690 691 692 693 
[DBG]  721 722 723 724 725 
[DBG]  Map content with agents and obstacles:
[DBG]  A . X . A 
[DBG]  . X . A . 
[DBG]  A . A A . 
[DBG]  A X . A X 
[DBG]  . . X . . 
[DBG]  content of the map structure that we pass to the SAT solver:
[DBG]  1  1  -1  1  1  
[DBG]  1  -1  1  1  1  
[DBG]  1  1  1  1  1  
[DBG]  1  -1  1  1  -1  
[DBG]  1  1  -1  1  1  
[DBG]  Identifying agents in a submap for rescheduling (when key_agent is there at the time 24):
[DBG]  Agent 3 found intervals in the sub-map:
[DBG]   [24..29]
[DBG]  Agent 3 (interval in submap: [24..29]) contains time 24, added to replan.
[DBG]  Agent 28 found intervals in the sub-map:
[DBG]   [0..33] [40..40]
[DBG]  Agent 28 (interval in submap: [0..33]) contains time 24, added to replan.
[DBG]  Agent 45 found intervals in the sub-map:
[DBG]   [21..26]
[DBG]  Agent 45 (interval in submap: [21..26]) contains time 24, added to replan.
[DBG]  Agent 49 found intervals in the sub-map:
[DBG]  
[DBG]  Agent 49 is not in sub-map at time 24 (intervals: 
[DBG]  )
[DBG]  Agent 53 found intervals in the sub-map:
[DBG]   [22..27]
[DBG]  Agent 53 (interval in submap: [22..27]) contains time 24, added to replan.
[DBG]  Agent 57 found intervals in the sub-map:
[DBG]   [24..26]
[DBG]  Agent 57 (interval in submap: [24..26]) contains time 24, added to replan.
[DBG]  Agent 70 found intervals in the sub-map:
[DBG]   [13..18]
[DBG]  Agent 70 is not in sub-map at time 24 (intervals: 
[DBG]  [13..18] )
[DBG]  Agent 74 found intervals in the sub-map:
[DBG]   [24..31]
[DBG]  Agent 74 (interval in submap: [24..31]) contains time 24, added to replan.
[DBG]  Agent 100 found intervals in the sub-map:
[DBG]   [20..25]
[DBG]  Agent 100 (interval in submap: [20..25]) contains time 24, added to replan.
[DBG]  Agent 148 found intervals in the sub-map:
[DBG]   [22..31]
[DBG]  Agent 148 (interval in submap: [22..31]) contains time 24, added to replan.
[DBG]  Agent 3 | Start (global): 597 -> (local): (0, 4) at time 24 | Goal (global): 724 -> (local): (4, 3) at time 29
[DBG]  Agent 28 | Start (global): 659 -> (local): (2, 2) at time 24 | Goal (global): 725 -> (local): (4, 4) at time 33
[DBG]  Agent 45 | Start (global): 660 -> (local): (2, 3) at time 24 | Goal (global): 724 -> (local): (4, 3) at time 26
[DBG]  Agent 53 | Start (global): 628 -> (local): (1, 3) at time 24 | Goal (global): 724 -> (local): (4, 3) at time 27
[DBG]  Agent 57 | Start (global): 593 -> (local): (0, 0) at time 24 | Goal (global): 657 -> (local): (2, 0) at time 26
[DBG]  Agent 74 | Start (global): 689 -> (local): (3, 0) at time 24 | Goal (global): 597 -> (local): (0, 4) at time 31
[DBG]  Agent 100 | Start (global): 692 -> (local): (3, 3) at time 24 | Goal (global): 724 -> (local): (4, 3) at time 25
[DBG]  Agent 148 | Start (global): 657 -> (local): (2, 0) at time 24 | Goal (global): 660 -> (local): (2, 3) at time 31
[DBG]  [REPAIR] SAT destroy operator called.
[DBG]  [REPAIR] SAT operator – launching subproblem FOR OPTIMIZATION.
[DBG]  Creating local paths (sx, sy) in the submap for T_sync = 24
[DBG]    Agent 3 (global paths from T=24 to 29) has local path: (0,4) (1,4) (1,3) (2,3) (3,3) (4,3) 
[DBG]    Agent 28 (global paths from T=24 to 33) has local path: (2,2) (2,2) (2,3) (3,3) (3,2) (3,2) (3,2) (3,3) (4,3) (4,4) 
[DBG]    Agent 45 (global paths from T=24 to 26) has local path: (2,3) (3,3) (4,3) 
[DBG]    Agent 53 (global paths from T=24 to 27) has local path: (1,3) (2,3) (3,3) (4,3) 
[DBG]    Agent 57 (global paths from T=24 to 26) has local path: (0,0) (1,0) (2,0) 
[DBG]    Agent 74 (global paths from T=24 to 31) has local path: (3,0) (2,0) (2,1) (2,2) (1,2) (1,3) (1,4) (0,4) 
[DBG]    Agent 100 (global paths from T=24 to 25) has local path: (3,3) (4,3) 
[DBG]    Agent 148 (global paths from T=24 to 31) has local path: (2,0) (2,1) (2,2) (3,2) (2,2) (1,2) (1,3) (2,3) 
[DBG]  Checking input data for SAT solver:
[DBG]    - Number of agents to replan: 8
[DBG]  Agent 3 has the original local path length: 6 => Start (0,4), Goal (4,3)
[DBG]  Agent 28 has the original local path length: 10 => Start (2,2), Goal (4,4)
[DBG]  Agent 45 has the original local path length: 3 => Start (2,3), Goal (4,3)
[DBG]  Agent 53 has the original local path length: 4 => Start (1,3), Goal (4,3)
[DBG]  Agent 57 has the original local path length: 3 => Start (0,0), Goal (2,0)
[DBG]  Agent 74 has the original local path length: 8 => Start (3,0), Goal (0,4)
[DBG]  Agent 100 has the original local path length: 2 => Start (3,3), Goal (4,3)
[DBG]  Agent 148 has the original local path length: 8 => Start (2,0), Goal (2,3)
[DBG]  Start position: (0, 4), (2, 2), (2, 3), (1, 3), (0, 0), (3, 0), (3, 3), (2, 0), 
[DBG]  Goal position: (4, 3), (4, 4), (4, 3), (4, 3), (2, 0), (0, 4), (4, 3), (2, 3), 
[DBG]  SAT instance and solver created.
Currently solving
Instance name: scen
Map name: map
Encoding used: disappear_at_goal
SAT solver used: Kissat
Optimizing function: sum of costs
Number of agents: 8
Mks LB: 8
SoC LB: 35
Delta: 0
Remaining time: 300000 [ms]

[STAT] Solver returned: -1
[DBG]  SAT solver failed.
[STAT] SAT solver failed to find a valid solution.
[DBG]  ====================
[DBG]  SAT destroy operator called.
[DBG]  SAT heuristic: 2
[DBG]  key_agent_id: 28
[DBG]  key_agent_id global path length: 43
[DBG]  Submap content (global positions):
[DBG]  595 596 597 598 599 
[DBG]  627 628 629 630 631 
[DBG]  659 660 661 662 663 
[DBG]  691 692 693 694 695 
[DBG]  723 724 725 726 727 
[DBG]  Map content with agents and obstacles:
[DBG]  X . . X . 
[DBG]  . . A X . 
[DBG]  . . A X X 
[DBG]  . . X X X 
[DBG]  X A A . A 
[DBG]  content of the map structure that we pass to the SAT solver:
[DBG]  -1  1  1  -1  1  
[DBG]  1  1  1  -1  1  
[DBG]  1  1  1  -1  -1  
[DBG]  1  1  -1  -1  -1  
[DBG]  -1  1  1  1  1  
[DBG]  Identifying agents in a submap for rescheduling (when key_agent is there at the time 6):
[DBG]  Agent 28 found intervals in the sub-map:
[DBG]   [0..33] [40..42]
[DBG]  Agent 28 (interval in submap: [0..33]) contains time 6, added to replan.
[DBG]  Agent 46 found intervals in the sub-map:
[DBG]   [5..8]
[DBG]  Agent 46 (interval in submap: [5..8]) contains time 6, added to replan.
[DBG]  Agent 89 found intervals in the sub-map:
[DBG]   [5..10]
[DBG]  Agent 89 (interval in submap: [5..10]) contains time 6, added to replan.
[DBG]  Agent 91 found intervals in the sub-map:
[DBG]   [4..6]
[DBG]  Agent 91 (interval in submap: [4..6]) contains time 6, added to replan.
[DBG]  Agent 108 found intervals in the sub-map:
[DBG]   [0..6]
[DBG]  Agent 108 (interval in submap: [0..6]) contains time 6, added to replan.
[DBG]  Agent 28 | Start (global): 661 -> (local): (2, 2) at time 6 | Goal (global): 725 -> (local): (4, 2) at time 33
[DBG]  Agent 46 | Start (global): 725 -> (local): (4, 2) at time 6 | Goal (global): 727 -> (local): (4, 4) at time 8
[DBG]  Agent 89 | Start (global): 629 -> (local): (1, 2) at time 6 | Goal (global): 724 -> (local): (4, 1) at time 10
[DBG]  Agent 91 | Start (global): 727 -> (local): (4, 4) at time 6 | Goal (global): 727 -> (local): (4, 4) at time 6
[DBG]  Agent 108 | Start (global): 724 -> (local): (4, 1) at time 6 | Goal (global): 724 -> (local): (4, 1) at time 6
[DBG]  [REPAIR] SAT destroy operator called.
[DBG]  [REPAIR] SAT operator – launching subproblem FOR OPTIMIZATION.
[DBG]  Creating local paths (sx, sy) in the submap for T_sync = 6
[DBG]    Agent 28 (global paths from T=6 to 33) has local path: (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,1) (2,1) (2,1) (2,1) (2,1) (2,1) (2,1) (2,1) (2,0) (2,0) (2,0) (2,0) (2,0) (2,1) (3,1) (3,0) (3,0) (3,0) (3,1) (4,1) (4,2) 
[DBG]    Agent 46 (global paths from T=6 to 8) has local path: (4,2) (4,3) (4,4) 
[DBG]    Agent 89 (global paths from T=6 to 10) has local path: (1,2) (1,1) (2,1) (3,1) (4,1) 
[DBG]    Agent 91 (global paths from T=6 to 6) has local path: (4,4) 
[DBG]    Agent 108 (global paths from T=6 to 6) has local path: (4,1) 
[DBG]  Checking input data for SAT solver:
[DBG]    - Number of agents to replan: 5
[DBG]  Agent 28 has the original local path length: 28 => Start (2,2), Goal (4,2)
[DBG]  Agent 46 has the original local path length: 3 => Start (4,2), Goal (4,4)
[DBG]  Agent 89 has the original local path length: 5 => Start (1,2), Goal (4,1)
[DBG]  Agent 91 has the original local path length: 1 => Start (4,4), Goal (4,4)
[DBG]  Agent 108 has the original local path length: 1 => Start (4,1), Goal (4,1)
[DBG]  Start position: (2, 2), (4, 2), (1, 2), (4, 4), (4, 1), 
[DBG]  Goal position: (4, 2), (4, 4), (4, 1), (4, 4), (4, 1), 
[DBG]  SAT instance and solver created.
Currently solving
Instance name: scen
Map name: map
Encoding used: disappear_at_goal
SAT solver used: Kissat
Optimizing function: sum of costs
Number of agents: 5
Mks LB: 5
SoC LB: 15
Delta: 0
Remaining time: 300000 [ms]

Vertex conflict! Agents 1, 3, timestep 3, location 0
Swapping conflict! Agents 1, 3, timestep 3, edge (0,0)
Vertex conflict! Agents 1, 3, timestep 4, location 0
Vertex conflict! Agents 1, 4, timestep 3, location 0
Swapping conflict! Agents 1, 4, timestep 3, edge (0,0)
Vertex conflict! Agents 1, 4, timestep 4, location 0
Vertex conflict! Agents 3, 4, timestep 1, location 0
Swapping conflict! Agents 3, 4, timestep 1, edge (0,0)
Vertex conflict! Agents 3, 4, timestep 2, location 0
Swapping conflict! Agents 3, 4, timestep 2, edge (0,0)
Vertex conflict! Agents 3, 4, timestep 3, location 0
Swapping conflict! Agents 3, 4, timestep 3, edge (0,0)
Vertex conflict! Agents 3, 4, timestep 4, location 0
Found plan [agents = 5] [timesteps = 5]
Agent #0 : 9 8 11 12 13 
Agent #1 : 13 14 15 0 0 
Agent #2 : 5 9 8 11 12 
Agent #3 : 15 0 0 0 0 
Agent #4 : 12 0 0 0 0 

[STAT] Solver returned: 0
[DBG]  Agent (index) 28 | New local path (submap idx):
[DBG]  9 8 11 12 13 
[DBG]  Agent (index) 46 | New local path (submap idx):
[DBG]  13 14 15 
[DBG]  Agent (index) 89 | New local path (submap idx):
[DBG]  5 9 8 11 12 
[DBG]  Agent (index) 91 | New local path (submap idx):
[DBG]  15 
[DBG]  Agent (index) 108 | New local path (submap idx):
[DBG]  12 
[DBG]  Update the agent path 28 | Original local length: 28 | New local length: 5
[DBG]  agent 28 t=0 => decoded (sx,sy)=(2,2) => global_id=661
[DBG]  agent 28 t=1 => decoded (sx,sy)=(2,1) => global_id=660
[DBG]  agent 28 t=2 => decoded (sx,sy)=(3,1) => global_id=692
[DBG]  agent 28 t=3 => decoded (sx,sy)=(4,1) => global_id=724
[DBG]  agent 28 t=4 => decoded (sx,sy)=(4,2) => global_id=725
[DBG]  Complete path of agent 28:
[DBG]    Original: 661 661 661 661 661 661 661 661 661 661 661 661 661 660 660 660 660 660 660 660 660 659 659 659 659 659 660 692 691 691 691 692 724 725 757 757 757 757 757 757 725 726 727 
[DBG]    New:     661 661 661 661 661 661 661 660 692 724 725 757 757 757 757 757 757 725 726 727 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 661 661 661 661 661 661 
[DBG]    Local path (in submap): 661 660 692 724 725 757 757 757 757 757 757 725 726 727 
[DBG]    Suffix (out of submap): 
[DBG]  Original agent path length 28 je: 43
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 0: 661, 661, 661, 661, 661, 661, 661, 660, 692, 724, 725, 757, 757, 757, 757, 757, 757, 725, 726, 727, 
[DBG]  Path for agent 28 updated, resulting length: 20
[DBG]  Update the agent path 46 | Original local length: 3 | New local length: 3
[DBG]  agent 46 t=0 => decoded (sx,sy)=(4,2) => global_id=725
[DBG]  agent 46 t=1 => decoded (sx,sy)=(4,3) => global_id=726
[DBG]  agent 46 t=2 => decoded (sx,sy)=(4,4) => global_id=727
[DBG]  Complete path of agent 46:
[DBG]    Original: 786 787 788 788 756 724 725 726 727 728 696 664 632 600 601 602 603 604 572 540 508 476 444 412 380 348 349 317 285 284 252 
[DBG]    New:     786 787 788 788 756 724 725 726 727 728 696 664 632 600 601 602 603 604 572 540 508 476 444 412 380 348 349 317 285 284 252 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 786 787 788 788 756 724 
[DBG]    Local path (in submap): 725 726 727 
[DBG]    Suffix (out of submap): 728 696 664 632 600 601 602 603 604 572 540 508 476 444 412 380 348 349 317 285 284 252 
[DBG]  Original agent path length 46 je: 31
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 1: 786, 787, 788, 788, 756, 724, 725, 726, 727, 728, 696, 664, 632, 600, 601, 602, 603, 604, 572, 540, 508, 476, 444, 412, 380, 348, 349, 317, 285, 284, 252, 
[DBG]  Path for agent 46 updated, resulting length: 31
[DBG]  Update the agent path 89 | Original local length: 5 | New local length: 5
[DBG]  agent 89 t=0 => decoded (sx,sy)=(1,2) => global_id=629
[DBG]  agent 89 t=1 => decoded (sx,sy)=(2,2) => global_id=661
[DBG]  agent 89 t=2 => decoded (sx,sy)=(2,1) => global_id=660
[DBG]  agent 89 t=3 => decoded (sx,sy)=(3,1) => global_id=692
[DBG]  agent 89 t=4 => decoded (sx,sy)=(4,1) => global_id=724
[DBG]  Complete path of agent 89:
[DBG]    Original: 437 469 501 533 565 597 629 628 660 692 724 756 788 820 819 820 821 822 854 854 886 918 950 982 983 1015 
[DBG]    New:     437 469 501 533 565 597 629 661 660 692 724 756 788 820 819 820 821 822 854 854 886 918 950 982 983 1015 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 437 469 501 533 565 597 
[DBG]    Local path (in submap): 629 661 660 692 724 
[DBG]    Suffix (out of submap): 756 788 820 819 820 821 822 854 854 886 918 950 982 983 1015 
[DBG]  Original agent path length 89 je: 26
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 2: 437, 469, 501, 533, 565, 597, 629, 661, 660, 692, 724, 756, 788, 820, 819, 820, 821, 822, 854, 854, 886, 918, 950, 982, 983, 1015, 
[DBG]  Path for agent 89 updated, resulting length: 26
[DBG]  Update the agent path 91 | Original local length: 1 | New local length: 1
[DBG]  agent 91 t=0 => decoded (sx,sy)=(4,4) => global_id=727
[DBG]  Complete path of agent 91:
[DBG]    Original: 787 755 756 757 725 726 727 728 696 664 632 633 601 569 570 571 572 540 541 509 477 445 413 413 381 
[DBG]    New:     787 755 756 757 725 726 727 728 696 664 632 633 601 569 570 571 572 540 541 509 477 445 413 413 381 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 787 755 756 757 725 726 
[DBG]    Local path (in submap): 727 
[DBG]    Suffix (out of submap): 728 696 664 632 633 601 569 570 571 572 540 541 509 477 445 413 413 381 
[DBG]  Original agent path length 91 je: 25
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 3: 787, 755, 756, 757, 725, 726, 727, 728, 696, 664, 632, 633, 601, 569, 570, 571, 572, 540, 541, 509, 477, 445, 413, 413, 381, 
[DBG]  Path for agent 91 updated, resulting length: 25
[DBG]  Update the agent path 108 | Original local length: 1 | New local length: 1
[DBG]  agent 108 t=0 => decoded (sx,sy)=(4,1) => global_id=724
[DBG]  Complete path of agent 108:
[DBG]    Original: 628 660 692 692 692 692 724 756 788 820 821 822 823 824 856 888 920 952 953 954 955 956 988 989 1021 
[DBG]    New:     628 660 692 692 692 692 724 756 788 820 821 822 823 824 856 888 920 952 953 954 955 956 988 989 1021 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 628 660 692 692 692 692 
[DBG]    Local path (in submap): 724 
[DBG]    Suffix (out of submap): 756 788 820 821 822 823 824 856 888 920 952 953 954 955 956 988 989 1021 
[DBG]  Original agent path length 108 je: 25
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 4: 628, 660, 692, 692, 692, 692, 724, 756, 788, 820, 821, 822, 823, 824, 856, 888, 920, 952, 953, 954, 955, 956, 988, 989, 1021, 
[DBG]  Path for agent 108 updated, resulting length: 25
[DBG]  Paths successfully updated.
[DBG]  (LNS.cpp) New path for agent 28: 
[DBG]  661, 661, 661, 661, 661, 661, 661, 660, 692, 724, 725, 757, 757, 757, 757, 757, 757, 725, 726, 727, 
[DBG]  (LNS.cpp) New path for agent 46: 
[DBG]  786, 787, 788, 788, 756, 724, 725, 726, 727, 728, 696, 664, 632, 600, 601, 602, 603, 604, 572, 540, 508, 476, 444, 412, 380, 348, 349, 317, 285, 284, 252, 
[DBG]  (LNS.cpp) New path for agent 89: 
[DBG]  437, 469, 501, 533, 565, 597, 629, 661, 660, 692, 724, 756, 788, 820, 819, 820, 821, 822, 854, 854, 886, 918, 950, 982, 983, 1015, 
[DBG]  (LNS.cpp) New path for agent 91: 
[DBG]  787, 755, 756, 757, 725, 726, 727, 728, 696, 664, 632, 633, 601, 569, 570, 571, 572, 540, 541, 509, 477, 445, 413, 413, 381, 
[DBG]  (LNS.cpp) New path for agent 108: 
[DBG]  628, 660, 692, 692, 692, 692, 724, 756, 788, 820, 821, 822, 823, 824, 856, 888, 920, 952, 953, 954, 955, 956, 988, 989, 1021, 
[DBG]  Delta value: 0.158621
[DBG]  Rewarding metric index = 1
[DBG]  component_weights = {1.19139e-08, 1, 5.24745e-09, 9.09785e-09}
[DBG]  opSuccess value: 1
[STAT] neighbor.sum_of_costs before recomputation: 122
[STAT] neighbor.old_sum_of_costs before recomputation: 145
[STAT] sum_of_costs before recomputation: 4283
[DBG]  Validate solution immediately after SAT success.
[WARNING] Problem after SAT: Target conflict: agent 42 (len 42) traverses target of agent 28 (len 19) at location 727 at timestep 41
[DBG]  [DEBUG] Attempting immediate repair via init_lns because problem occurred after SAT (should be applied only for conflicts...).
[DBG]  [DEBUG] Passing 150 agents to init_lns (skip=true).
[DBG]  [DEBUG] path_table contents for selected agents (neighbor.agents):
[DBG]    Agent 28 => controlling path length=20
[DBG]    Agent 46 => controlling path length=31
[DBG]    Agent 89 => controlling path length=26
[DBG]    Agent 91 => controlling path length=25
[DBG]    Agent 108 => controlling path length=25
[DBG]  hodnota skip_initial_solution=1
[DBG]  We skip initialSolution => call buildCollisionData()
[DBG]  buildCollisionData() called – skip_initial_solution case.
[DBG]  Agents.size()=150, collision_graph.size()=150
[DBG]  agent 28 => updateCollidingPairs => foundCollision
[DBG]  agent 42 => updateCollidingPairs => foundCollision
[DBG]  agent 70 => updateCollidingPairs => foundCollision
[DBG]  agent 135 => updateCollidingPairs => foundCollision
[DBG]  Conflicting agent pairs:
[DBG]  agent 28 is in conflict with agent 42
[DBG]  agent 28 is in conflict with agent 70
[DBG]  agent 28 is in conflict with agent 135
[DBG]  buildCollisionData() => sum_of_costs=4260, num_of_colliding_pairs=3
[DBG]  buildCollisionData done => sum_of_costs=4260, num_of_colliding_pairs=3
[DBG]  sum_of_cost hodnota: 4260
[DBG]  After skip/init build => iteration_stats.back(): sum_of_costs=4260, collisions=3
[DEBUG] Using default neighbor generation strategy for conflicts: 1
	InitLNS(PP): runtime = 0.00175992, iterations = 2, colliding pairs = 0, initial colliding pairs = 3, solution cost = 4288, initial solution cost = 4260, failed iterations = 0
[DBG]  init_lns->sum_of_costs after init_lns->run: 4288
[DBG]  sum_of_costs after assignment from init_lns->run: 4288
[DBG]  Recomputing sum_of_cost by dividing neighbor.sum_of_costs and neighbor.old_sum_of_costs
[STAT] sum_of_costs after recomputation: 4288
[STAT] Iteration 157
[DBG]  Random chance did not select SAT operator (r=87), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 157
[DBG]  Random chance did not select SAT operator (r=49), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 157
[DBG]  Random chance did not select SAT operator (r=73), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 157
[DBG]  Random chance did not select SAT operator (r=20), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 157
[DBG]  Random chance did not select SAT operator (r=46), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 157
[DBG]  Random chance did not select SAT operator (r=74), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 157
[DBG]  Random chance did not select SAT operator (r=14), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 157
[DBG]  Random chance did not select SAT operator (r=78), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 157
[DBG]  Random chance did not select SAT operator (r=67), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 157
[DBG]  Random chance did not select SAT operator (r=37), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 157
[DBG]  Random chance did not select SAT operator (r=51), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 157
[DBG]  Random chance did not select SAT operator (r=29), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 157
[DBG]  Using SAT operator (destroy+repair SAT).
[DBG]  ====================
[DBG]  SAT destroy operator called.
[DBG]  SAT heuristic: 2
[DBG]  key_agent_id: 28
[DBG]  key_agent_id global path length: 43
[DBG]  Submap content (global positions):
[DBG]  689 690 691 692 693 
[DBG]  721 722 723 724 725 
[DBG]  753 754 755 756 757 
[DBG]  785 786 787 788 789 
[DBG]  817 818 819 820 821 
[DBG]  Map content with agents and obstacles:
[DBG]  . X . . X 
[DBG]  . . X . . 
[DBG]  . X A . . 
[DBG]  X . . . X 
[DBG]  A . A A . 
[DBG]  content of the map structure that we pass to the SAT solver:
[DBG]  1  -1  1  1  -1  
[DBG]  1  1  -1  1  1  
[DBG]  1  -1  1  1  1  
[DBG]  -1  1  1  1  -1  
[DBG]  1  1  1  1  1  
[DBG]  Identifying agents in a submap for rescheduling (when key_agent is there at the time 20):
[DBG]  Agent 11 found intervals in the sub-map:
[DBG]   [35..36]
[DBG]  Agent 11 is not in sub-map at time 20 (intervals: 
[DBG]  [35..36] )
[DBG]  Agent 28 found intervals in the sub-map:
[DBG]   [6..40]
[DBG]  Agent 28 (interval in submap: [6..40]) contains time 20, added to replan.
[DBG]  Agent 85 found intervals in the sub-map:
[DBG]   [18..22]
[DBG]  Agent 85 (interval in submap: [18..22]) contains time 20, added to replan.
[DBG]  Agent 89 found intervals in the sub-map:
[DBG]   [9..16]
[DBG]  Agent 89 is not in sub-map at time 20 (intervals: 
[DBG]  [9..16] )
[DBG]  Agent 96 found intervals in the sub-map:
[DBG]   [18..21]
[DBG]  Agent 96 (interval in submap: [18..21]) contains time 20, added to replan.
[DBG]  Agent 109 found intervals in the sub-map:
[DBG]   [3..6] [26..27]
[DBG]  Agent 109 is not in sub-map at time 20 (intervals: 
[DBG]  [3..6] [26..27] )
[DBG]  Agent 111 found intervals in the sub-map:
[DBG]   [20..24]
[DBG]  Agent 111 (interval in submap: [20..24]) contains time 20, added to replan.
[DBG]  Agent 135 found intervals in the sub-map:
[DBG]   [11..13]
[DBG]  Agent 135 is not in sub-map at time 20 (intervals: 
[DBG]  [11..13] )
[DBG]  Agent 137 found intervals in the sub-map:
[DBG]  
[DBG]  Agent 137 is not in sub-map at time 20 (intervals: 
[DBG]  )
[DBG]  Agent 28 | Start (global): 755 -> (local): (2, 2) at time 20 | Goal (global): 725 -> (local): (1, 4) at time 40
[DBG]  Agent 85 | Start (global): 819 -> (local): (4, 2) at time 20 | Goal (global): 821 -> (local): (4, 4) at time 22
[DBG]  Agent 96 | Start (global): 820 -> (local): (4, 3) at time 20 | Goal (global): 821 -> (local): (4, 4) at time 21
[DBG]  Agent 111 | Start (global): 817 -> (local): (4, 0) at time 20 | Goal (global): 821 -> (local): (4, 4) at time 24
[DBG]  [REPAIR] SAT destroy operator called.
[DBG]  [REPAIR] SAT operator – launching subproblem FOR OPTIMIZATION.
[DBG]  Creating local paths (sx, sy) in the submap for T_sync = 20
[DBG]    Agent 28 (global paths from T=20 to 40) has local path: (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (3,2) (3,3) (3,3) (2,3) (2,3) (2,3) (2,3) (2,3) (2,3) (1,3) (1,4) 
[DBG]    Agent 85 (global paths from T=20 to 22) has local path: (4,2) (4,3) (4,4) 
[DBG]    Agent 96 (global paths from T=20 to 21) has local path: (4,3) (4,4) 
[DBG]    Agent 111 (global paths from T=20 to 24) has local path: (4,0) (4,1) (4,2) (4,3) (4,4) 
[DBG]  Checking input data for SAT solver:
[DBG]    - Number of agents to replan: 4
[DBG]  Agent 28 has the original local path length: 21 => Start (2,2), Goal (1,4)
[DBG]  Agent 85 has the original local path length: 3 => Start (4,2), Goal (4,4)
[DBG]  Agent 96 has the original local path length: 2 => Start (4,3), Goal (4,4)
[DBG]  Agent 111 has the original local path length: 5 => Start (4,0), Goal (4,4)
[DBG]  Start position: (2, 2), (4, 2), (4, 3), (4, 0), 
[DBG]  Goal position: (1, 4), (4, 4), (4, 4), (4, 4), 
[DBG]  SAT instance and solver created.
Currently solving
Instance name: scen
Map name: map
Encoding used: disappear_at_goal
SAT solver used: Kissat
Optimizing function: sum of costs
Number of agents: 4
Mks LB: 5
SoC LB: 14
Delta: 0
Remaining time: 300000 [ms]

Vertex conflict! Agents 0, 1, timestep 4, location 0
Vertex conflict! Agents 0, 2, timestep 4, location 0
Vertex conflict! Agents 1, 2, timestep 3, location 0
Swapping conflict! Agents 1, 2, timestep 3, edge (0,0)
Vertex conflict! Agents 1, 2, timestep 4, location 0
Found plan [agents = 4] [timesteps = 5]
Agent #0 : 8 9 10 6 0 
Agent #1 : 16 17 18 0 0 
Agent #2 : 17 18 0 0 0 
Agent #3 : 14 15 16 17 18 

[STAT] Solver returned: 0
[DBG]  Agent (index) 28 | New local path (submap idx):
[DBG]  8 9 10 6 
[DBG]  Agent (index) 85 | New local path (submap idx):
[DBG]  16 17 18 
[DBG]  Agent (index) 96 | New local path (submap idx):
[DBG]  17 18 
[DBG]  Agent (index) 111 | New local path (submap idx):
[DBG]  14 15 16 17 18 
[DBG]  Update the agent path 28 | Original local length: 21 | New local length: 4
[DBG]  agent 28 t=0 => decoded (sx,sy)=(2,2) => global_id=755
[DBG]  agent 28 t=1 => decoded (sx,sy)=(2,3) => global_id=756
[DBG]  agent 28 t=2 => decoded (sx,sy)=(2,4) => global_id=757
[DBG]  agent 28 t=3 => decoded (sx,sy)=(1,4) => global_id=725
[DBG]  Complete path of agent 28:
[DBG]    Original: 661 661 660 660 660 660 692 724 756 755 755 755 755 755 755 755 755 755 755 755 755 755 755 755 755 755 755 755 755 755 787 788 788 756 756 756 756 756 756 724 725 726 727 
[DBG]    New:     661 661 660 660 660 660 692 724 756 755 755 755 755 755 755 755 755 755 755 755 755 756 757 725 726 727 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 661 661 660 660 660 660 692 724 756 755 755 755 755 755 755 755 755 755 755 755 
[DBG]    Local path (in submap): 755 756 757 725 726 727 
[DBG]    Suffix (out of submap): 
[DBG]  Original agent path length 28 je: 43
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 0: 661, 661, 660, 660, 660, 660, 692, 724, 756, 755, 755, 755, 755, 755, 755, 755, 755, 755, 755, 755, 755, 756, 757, 725, 726, 727, 
[DBG]  Path for agent 28 updated, resulting length: 26
[DBG]  Update the agent path 85 | Original local length: 3 | New local length: 3
[DBG]  agent 85 t=0 => decoded (sx,sy)=(4,2) => global_id=819
[DBG]  agent 85 t=1 => decoded (sx,sy)=(4,3) => global_id=820
[DBG]  agent 85 t=2 => decoded (sx,sy)=(4,4) => global_id=821
[DBG]  Complete path of agent 85:
[DBG]    Original: 709 741 742 774 775 776 776 777 809 810 811 812 813 845 846 847 848 849 817 818 819 820 821 822 790 
[DBG]    New:     709 741 742 774 775 776 776 777 809 810 811 812 813 845 846 847 848 849 817 818 819 820 821 822 790 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 709 741 742 774 775 776 776 777 809 810 811 812 813 845 846 847 848 849 817 818 
[DBG]    Local path (in submap): 819 820 821 
[DBG]    Suffix (out of submap): 822 790 
[DBG]  Original agent path length 85 je: 25
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 1: 709, 741, 742, 774, 775, 776, 776, 777, 809, 810, 811, 812, 813, 845, 846, 847, 848, 849, 817, 818, 819, 820, 821, 822, 790, 
[DBG]  Path for agent 85 updated, resulting length: 25
[DBG]  Update the agent path 96 | Original local length: 2 | New local length: 2
[DBG]  agent 96 t=0 => decoded (sx,sy)=(4,3) => global_id=820
[DBG]  agent 96 t=1 => decoded (sx,sy)=(4,4) => global_id=821
[DBG]  Complete path of agent 96:
[DBG]    Original: 647 648 680 712 713 714 746 778 779 780 781 813 845 846 847 848 849 850 818 819 820 821 822 823 855 856 857 858 826 827 
[DBG]    New:     647 648 680 712 713 714 746 778 779 780 781 813 845 846 847 848 849 850 818 819 820 821 822 823 855 856 857 858 826 827 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 647 648 680 712 713 714 746 778 779 780 781 813 845 846 847 848 849 850 818 819 
[DBG]    Local path (in submap): 820 821 
[DBG]    Suffix (out of submap): 822 823 855 856 857 858 826 827 
[DBG]  Original agent path length 96 je: 30
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 2: 647, 648, 680, 712, 713, 714, 746, 778, 779, 780, 781, 813, 845, 846, 847, 848, 849, 850, 818, 819, 820, 821, 822, 823, 855, 856, 857, 858, 826, 827, 
[DBG]  Path for agent 96 updated, resulting length: 30
[DBG]  Update the agent path 111 | Original local length: 5 | New local length: 5
[DBG]  agent 111 t=0 => decoded (sx,sy)=(4,0) => global_id=817
[DBG]  agent 111 t=1 => decoded (sx,sy)=(4,1) => global_id=818
[DBG]  agent 111 t=2 => decoded (sx,sy)=(4,2) => global_id=819
[DBG]  agent 111 t=3 => decoded (sx,sy)=(4,3) => global_id=820
[DBG]  agent 111 t=4 => decoded (sx,sy)=(4,4) => global_id=821
[DBG]  Complete path of agent 111:
[DBG]    Original: 964 996 997 998 999 1000 1001 1002 1003 1004 1005 1006 974 975 976 944 912 880 848 849 817 818 819 820 821 822 823 824 792 793 761 729 697 696 664 632 600 601 569 570 538 539 540 
[DBG]    New:     964 996 997 998 999 1000 1001 1002 1003 1004 1005 1006 974 975 976 944 912 880 848 849 817 818 819 820 821 822 823 824 792 793 761 729 697 696 664 632 600 601 569 570 538 539 540 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 964 996 997 998 999 1000 1001 1002 1003 1004 1005 1006 974 975 976 944 912 880 848 849 
[DBG]    Local path (in submap): 817 818 819 820 821 
[DBG]    Suffix (out of submap): 822 823 824 792 793 761 729 697 696 664 632 600 601 569 570 538 539 540 
[DBG]  Original agent path length 111 je: 43
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 3: 964, 996, 997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 974, 975, 976, 944, 912, 880, 848, 849, 817, 818, 819, 820, 821, 822, 823, 824, 792, 793, 761, 729, 697, 696, 664, 632, 600, 601, 569, 570, 538, 539, 540, 
[DBG]  Path for agent 111 updated, resulting length: 43
[DBG]  Paths successfully updated.
[DBG]  (LNS.cpp) New path for agent 28: 
[DBG]  661, 661, 660, 660, 660, 660, 692, 724, 756, 755, 755, 755, 755, 755, 755, 755, 755, 755, 755, 755, 755, 756, 757, 725, 726, 727, 
[DBG]  (LNS.cpp) New path for agent 85: 
[DBG]  709, 741, 742, 774, 775, 776, 776, 777, 809, 810, 811, 812, 813, 845, 846, 847, 848, 849, 817, 818, 819, 820, 821, 822, 790, 
[DBG]  (LNS.cpp) New path for agent 96: 
[DBG]  647, 648, 680, 712, 713, 714, 746, 778, 779, 780, 781, 813, 845, 846, 847, 848, 849, 850, 818, 819, 820, 821, 822, 823, 855, 856, 857, 858, 826, 827, 
[DBG]  (LNS.cpp) New path for agent 111: 
[DBG]  964, 996, 997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 974, 975, 976, 944, 912, 880, 848, 849, 817, 818, 819, 820, 821, 822, 823, 824, 792, 793, 761, 729, 697, 696, 664, 632, 600, 601, 569, 570, 538, 539, 540, 
[DBG]  Delta value: 0.124088
[DBG]  Rewarding metric index = 1
[DBG]  component_weights = {1.00688e-08, 1, 4.43478e-09, 7.68887e-09}
[DBG]  opSuccess value: 1
[STAT] neighbor.sum_of_costs before recomputation: 120
[STAT] neighbor.old_sum_of_costs before recomputation: 137
[STAT] sum_of_costs before recomputation: 4288
[DBG]  Validate solution immediately after SAT success.
[WARNING] Problem after SAT: Target conflict: agent 42 (len 42) traverses target of agent 28 (len 25) at location 727 at timestep 41
[DBG]  [DEBUG] Attempting immediate repair via init_lns because problem occurred after SAT (should be applied only for conflicts...).
[DBG]  [DEBUG] Passing 150 agents to init_lns (skip=true).
[DBG]  [DEBUG] path_table contents for selected agents (neighbor.agents):
[DBG]    Agent 28 => controlling path length=26
[DBG]    Agent 85 => controlling path length=25
[DBG]    Agent 96 => controlling path length=30
[DBG]    Agent 111 => controlling path length=43
[DBG]  hodnota skip_initial_solution=1
[DBG]  We skip initialSolution => call buildCollisionData()
[DBG]  buildCollisionData() called – skip_initial_solution case.
[DBG]  Agents.size()=150, collision_graph.size()=150
[DBG]  agent 28 => updateCollidingPairs => foundCollision
[DBG]  agent 42 => updateCollidingPairs => foundCollision
[DBG]  Conflicting agent pairs:
[DBG]  agent 28 is in conflict with agent 42
[DBG]  buildCollisionData() => sum_of_costs=4271, num_of_colliding_pairs=1
[DBG]  buildCollisionData done => sum_of_costs=4271, num_of_colliding_pairs=1
[DBG]  sum_of_cost hodnota: 4271
[DBG]  After skip/init build => iteration_stats.back(): sum_of_costs=4271, collisions=1
[DEBUG] Using default neighbor generation strategy for conflicts: 1
	InitLNS(PP): runtime = 0.00112904, iterations = 2, colliding pairs = 0, initial colliding pairs = 1, solution cost = 4281, initial solution cost = 4271, failed iterations = 0
[DBG]  init_lns->sum_of_costs after init_lns->run: 4281
[DBG]  sum_of_costs after assignment from init_lns->run: 4281
[DBG]  Recomputing sum_of_cost by dividing neighbor.sum_of_costs and neighbor.old_sum_of_costs
[STAT] sum_of_costs after recomputation: 4281
[STAT] Iteration 158
[DBG]  Random chance did not select SAT operator (r=53), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 158
[DBG]  Random chance did not select SAT operator (r=95), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 158
[DBG]  Random chance did not select SAT operator (r=59), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 158
[DBG]  Random chance did not select SAT operator (r=87), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 158
[DBG]  Random chance did not select SAT operator (r=29), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 158
[DBG]  Using SAT operator (destroy+repair SAT).
[DBG]  ====================
[DBG]  SAT destroy operator called.
[DBG]  SAT heuristic: 2
[DBG]  key_agent_id: 28
[DBG]  key_agent_id global path length: 43
[DBG]  Submap content (global positions):
[DBG]  658 659 660 661 662 
[DBG]  690 691 692 693 694 
[DBG]  722 723 724 725 726 
[DBG]  754 755 756 757 758 
[DBG]  786 787 788 789 790 
[DBG]  Map content with agents and obstacles:
[DBG]  . . . . X 
[DBG]  X A A X X 
[DBG]  . X A A . 
[DBG]  X . . . X 
[DBG]  . . . X . 
[DBG]  content of the map structure that we pass to the SAT solver:
[DBG]  1  1  1  1  -1  
[DBG]  -1  1  1  -1  -1  
[DBG]  1  -1  1  1  1  
[DBG]  -1  1  1  1  -1  
[DBG]  1  1  1  -1  1  
[DBG]  Identifying agents in a submap for rescheduling (when key_agent is there at the time 39):
[DBG]  Agent 28 found intervals in the sub-map:
[DBG]   [0..31] [36..41]
[DBG]  Agent 28 (interval in submap: [36..41]) contains time 39, added to replan.
[DBG]  Agent 42 found intervals in the sub-map:
[DBG]   [34..40]
[DBG]  Agent 42 (interval in submap: [34..40]) contains time 39, added to replan.
[DBG]  Agent 55 found intervals in the sub-map:
[DBG]   [37..41]
[DBG]  Agent 55 (interval in submap: [37..41]) contains time 39, added to replan.
[DBG]  Agent 69 found intervals in the sub-map:
[DBG]   [36..42]
[DBG]  Agent 69 (interval in submap: [36..42]) contains time 39, added to replan.
[DBG]  Agent 148 found intervals in the sub-map:
[DBG]   [25..28] [31..31]
[DBG]  Agent 148 is not in sub-map at time 39 (intervals: 
[DBG]  [25..28] [31..31] )
[DBG]  Agent 28 | Start (global): 724 -> (local): (2, 2) at time 39 | Goal (global): 726 -> (local): (2, 4) at time 41
[DBG]  Agent 42 | Start (global): 725 -> (local): (2, 3) at time 39 | Goal (global): 726 -> (local): (2, 4) at time 40
[DBG]  Agent 55 | Start (global): 691 -> (local): (1, 1) at time 39 | Goal (global): 692 -> (local): (1, 2) at time 41
[DBG]  Agent 69 | Start (global): 692 -> (local): (1, 2) at time 39 | Goal (global): 788 -> (local): (4, 2) at time 42
[DBG]  [REPAIR] SAT destroy operator called.
[DBG]  [REPAIR] SAT operator – launching subproblem FOR OPTIMIZATION.
[DBG]  Creating local paths (sx, sy) in the submap for T_sync = 39
[DBG]    Agent 28 (global paths from T=39 to 41) has local path: (2,2) (2,3) (2,4) 
[DBG]    Agent 42 (global paths from T=39 to 40) has local path: (2,3) (2,4) 
[DBG]    Agent 55 (global paths from T=39 to 41) has local path: (1,1) (1,1) (1,2) 
[DBG]    Agent 69 (global paths from T=39 to 42) has local path: (1,2) (2,2) (3,2) (4,2) 
[DBG]  Checking input data for SAT solver:
[DBG]    - Number of agents to replan: 4
[DBG]  Agent 28 has the original local path length: 3 => Start (2,2), Goal (2,4)
[DBG]  Agent 42 has the original local path length: 2 => Start (2,3), Goal (2,4)
[DBG]  Agent 55 has the original local path length: 3 => Start (1,1), Goal (1,2)
[DBG]  Agent 69 has the original local path length: 4 => Start (1,2), Goal (4,2)
[DBG]  Start position: (2, 2), (2, 3), (1, 1), (1, 2), 
[DBG]  Goal position: (2, 4), (2, 4), (1, 2), (4, 2), 
[DBG]  SAT instance and solver created.
Currently solving
Instance name: scen
Map name: map
Encoding used: disappear_at_goal
SAT solver used: Kissat
Optimizing function: sum of costs
Number of agents: 4
Mks LB: 4
SoC LB: 11
Delta: 0
Remaining time: 300000 [ms]

Vertex conflict! Agents 0, 1, timestep 3, location 0
Vertex conflict! Agents 0, 2, timestep 3, location 0
Vertex conflict! Agents 1, 2, timestep 2, location 0
Swapping conflict! Agents 1, 2, timestep 2, edge (0,0)
Vertex conflict! Agents 1, 2, timestep 3, location 0
Found plan [agents = 4] [timesteps = 4]
Agent #0 : 7 8 9 0 
Agent #1 : 8 9 0 0 
Agent #2 : 4 5 0 0 
Agent #3 : 5 7 11 15 

[STAT] Solver returned: 0
[DBG]  Agent (index) 28 | New local path (submap idx):
[DBG]  7 8 9 
[DBG]  Agent (index) 42 | New local path (submap idx):
[DBG]  8 9 
[DBG]  Agent (index) 55 | New local path (submap idx):
[DBG]  4 5 
[DBG]  Agent (index) 69 | New local path (submap idx):
[DBG]  5 7 11 15 
[DBG]  Update the agent path 28 | Original local length: 3 | New local length: 3
[DBG]  agent 28 t=0 => decoded (sx,sy)=(2,2) => global_id=724
[DBG]  agent 28 t=1 => decoded (sx,sy)=(2,3) => global_id=725
[DBG]  agent 28 t=2 => decoded (sx,sy)=(2,4) => global_id=726
[DBG]  Complete path of agent 28:
[DBG]    Original: 661 661 660 660 660 660 692 724 725 725 725 724 692 660 661 660 660 660 660 660 659 659 659 659 659 659 660 692 691 691 691 659 627 627 627 627 659 691 692 724 725 726 727 
[DBG]    New:     661 661 660 660 660 660 692 724 725 725 725 724 692 660 661 660 660 660 660 660 659 659 659 659 659 659 660 692 691 691 691 659 627 627 627 627 659 691 692 724 725 726 727 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 661 661 660 660 660 660 692 724 725 725 725 724 692 660 661 660 660 660 660 660 659 659 659 659 659 659 660 692 691 691 691 659 627 627 627 627 659 691 692 
[DBG]    Local path (in submap): 724 725 726 
[DBG]    Suffix (out of submap): 727 
[DBG]  Original agent path length 28 je: 43
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 0: 661, 661, 660, 660, 660, 660, 692, 724, 725, 725, 725, 724, 692, 660, 661, 660, 660, 660, 660, 660, 659, 659, 659, 659, 659, 659, 660, 692, 691, 691, 691, 659, 627, 627, 627, 627, 659, 691, 692, 724, 725, 726, 727, 
[DBG]  Path for agent 28 updated, resulting length: 43
[DBG]  Update the agent path 42 | Original local length: 2 | New local length: 2
[DBG]  agent 42 t=0 => decoded (sx,sy)=(2,3) => global_id=725
[DBG]  agent 42 t=1 => decoded (sx,sy)=(2,4) => global_id=726
[DBG]  Complete path of agent 42:
[DBG]    Original: 224 192 193 194 226 258 258 259 260 261 293 294 326 358 390 422 423 424 425 426 427 428 429 430 431 432 464 496 528 529 561 593 625 657 658 659 691 692 724 725 726 727 759 
[DBG]    New:     224 192 193 194 226 258 258 259 260 261 293 294 326 358 390 422 423 424 425 426 427 428 429 430 431 432 464 496 528 529 561 593 625 657 658 659 691 692 724 725 726 727 759 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 224 192 193 194 226 258 258 259 260 261 293 294 326 358 390 422 423 424 425 426 427 428 429 430 431 432 464 496 528 529 561 593 625 657 658 659 691 692 724 
[DBG]    Local path (in submap): 725 726 
[DBG]    Suffix (out of submap): 727 759 
[DBG]  Original agent path length 42 je: 43
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 1: 224, 192, 193, 194, 226, 258, 258, 259, 260, 261, 293, 294, 326, 358, 390, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 464, 496, 528, 529, 561, 593, 625, 657, 658, 659, 691, 692, 724, 725, 726, 727, 759, 
[DBG]  Path for agent 42 updated, resulting length: 43
[DBG]  Update the agent path 55 | Original local length: 3 | New local length: 2
[DBG]  agent 55 t=0 => decoded (sx,sy)=(1,1) => global_id=691
[DBG]  agent 55 t=1 => decoded (sx,sy)=(1,2) => global_id=692
[DBG]  Complete path of agent 55:
[DBG]    Original: 34 35 67 68 69 70 102 134 135 136 137 138 139 140 172 173 205 205 237 269 270 302 303 304 336 368 400 400 432 464 496 528 529 561 593 625 657 658 659 691 691 692 
[DBG]    New:     34 35 67 68 69 70 102 134 135 136 137 138 139 140 172 173 205 205 237 269 270 302 303 304 336 368 400 400 432 464 496 528 529 561 593 625 657 658 659 691 692 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 34 35 67 68 69 70 102 134 135 136 137 138 139 140 172 173 205 205 237 269 270 302 303 304 336 368 400 400 432 464 496 528 529 561 593 625 657 658 659 
[DBG]    Local path (in submap): 691 692 
[DBG]    Suffix (out of submap): 
[DBG]  Original agent path length 55 je: 42
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 2: 34, 35, 67, 68, 69, 70, 102, 134, 135, 136, 137, 138, 139, 140, 172, 173, 205, 205, 237, 269, 270, 302, 303, 304, 336, 368, 400, 400, 432, 464, 496, 528, 529, 561, 593, 625, 657, 658, 659, 691, 692, 
[DBG]  Path for agent 55 updated, resulting length: 41
[DBG]  Update the agent path 69 | Original local length: 4 | New local length: 4
[DBG]  agent 69 t=0 => decoded (sx,sy)=(1,2) => global_id=692
[DBG]  agent 69 t=1 => decoded (sx,sy)=(2,2) => global_id=724
[DBG]  agent 69 t=2 => decoded (sx,sy)=(3,2) => global_id=756
[DBG]  agent 69 t=3 => decoded (sx,sy)=(4,2) => global_id=788
[DBG]  Complete path of agent 69:
[DBG]    Original: 4 5 6 7 8 9 41 73 105 137 138 139 140 172 173 205 237 237 269 301 333 365 366 367 368 400 432 432 464 496 528 529 561 593 625 657 658 659 691 692 724 756 788 820 
[DBG]    New:     4 5 6 7 8 9 41 73 105 137 138 139 140 172 173 205 237 237 269 301 333 365 366 367 368 400 432 432 464 496 528 529 561 593 625 657 658 659 691 692 724 756 788 820 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 4 5 6 7 8 9 41 73 105 137 138 139 140 172 173 205 237 237 269 301 333 365 366 367 368 400 432 432 464 496 528 529 561 593 625 657 658 659 691 
[DBG]    Local path (in submap): 692 724 756 788 
[DBG]    Suffix (out of submap): 820 
[DBG]  Original agent path length 69 je: 44
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 3: 4, 5, 6, 7, 8, 9, 41, 73, 105, 137, 138, 139, 140, 172, 173, 205, 237, 237, 269, 301, 333, 365, 366, 367, 368, 400, 432, 432, 464, 496, 528, 529, 561, 593, 625, 657, 658, 659, 691, 692, 724, 756, 788, 820, 
[DBG]  Path for agent 69 updated, resulting length: 44
[DBG]  Paths successfully updated.
[DBG]  (LNS.cpp) New path for agent 28: 
[DBG]  661, 661, 660, 660, 660, 660, 692, 724, 725, 725, 725, 724, 692, 660, 661, 660, 660, 660, 660, 660, 659, 659, 659, 659, 659, 659, 660, 692, 691, 691, 691, 659, 627, 627, 627, 627, 659, 691, 692, 724, 725, 726, 727, 
[DBG]  (LNS.cpp) New path for agent 42: 
[DBG]  224, 192, 193, 194, 226, 258, 258, 259, 260, 261, 293, 294, 326, 358, 390, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 464, 496, 528, 529, 561, 593, 625, 657, 658, 659, 691, 692, 724, 725, 726, 727, 759, 
[DBG]  (LNS.cpp) New path for agent 55: 
[DBG]  34, 35, 67, 68, 69, 70, 102, 134, 135, 136, 137, 138, 139, 140, 172, 173, 205, 205, 237, 269, 270, 302, 303, 304, 336, 368, 400, 400, 432, 464, 496, 528, 529, 561, 593, 625, 657, 658, 659, 691, 692, 
[DBG]  (LNS.cpp) New path for agent 69: 
[DBG]  4, 5, 6, 7, 8, 9, 41, 73, 105, 137, 138, 139, 140, 172, 173, 205, 237, 237, 269, 301, 333, 365, 366, 367, 368, 400, 432, 432, 464, 496, 528, 529, 561, 593, 625, 657, 658, 659, 691, 692, 724, 756, 788, 820, 
[DBG]  Delta value: 0.00595238
[DBG]  Rewarding metric index = 1
[DBG]  component_weights = {9.50874e-09, 1, 4.18811e-09, 7.2612e-09}
[DBG]  opSuccess value: 1
[STAT] neighbor.sum_of_costs before recomputation: 167
[STAT] neighbor.old_sum_of_costs before recomputation: 168
[STAT] sum_of_costs before recomputation: 4281
[DBG]  Validate solution immediately after SAT success.
[DBG]  No problems after SAT replan.
[DBG]  Recomputing sum_of_cost by dividing neighbor.sum_of_costs and neighbor.old_sum_of_costs
[STAT] sum_of_costs after recomputation: 4280
[STAT] Iteration 159
[DBG]  Random chance did not select SAT operator (r=84), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 159
[DBG]  Random chance did not select SAT operator (r=52), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 159
[DBG]  Random chance did not select SAT operator (r=91), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 159
[DBG]  Random chance did not select SAT operator (r=81), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 159
[DBG]  Random chance did not select SAT operator (r=71), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 159
[DBG]  Random chance did not select SAT operator (r=14), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 159
[DBG]  Random chance did not select SAT operator (r=40), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 159
[DBG]  Random chance did not select SAT operator (r=75), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 159
[DBG]  Random chance did not select SAT operator (r=90), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 159
[DBG]  Random chance did not select SAT operator (r=84), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 159
[DBG]  Random chance did not select SAT operator (r=44), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 159
[DBG]  Random chance did not select SAT operator (r=99), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 159
[DBG]  Random chance did not select SAT operator (r=47), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 159
[DBG]  Random chance did not select SAT operator (r=91), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 159
[DBG]  Random chance did not select SAT operator (r=76), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 159
[DBG]  Random chance did not select SAT operator (r=72), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 159
[DBG]  Random chance did not select SAT operator (r=25), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 159
[DBG]  Random chance did not select SAT operator (r=42), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 159
[DBG]  Using SAT operator (destroy+repair SAT).
[DBG]  ====================
[DBG]  SAT destroy operator called.
[DBG]  SAT heuristic: 2
[DBG]  key_agent_id: 28
[DBG]  key_agent_id global path length: 43
[DBG]  Submap content (global positions):
[DBG]  661 662 663 664 665 
[DBG]  693 694 695 696 697 
[DBG]  725 726 727 728 729 
[DBG]  757 758 759 760 761 
[DBG]  789 790 791 792 793 
[DBG]  Map content with agents and obstacles:
[DBG]  . X X . X 
[DBG]  X X X . . 
[DBG]  . . A . . 
[DBG]  . X A X . 
[DBG]  X . X . . 
[DBG]  content of the map structure that we pass to the SAT solver:
[DBG]  1  -1  -1  1  -1  
[DBG]  -1  -1  -1  1  1  
[DBG]  1  1  1  1  1  
[DBG]  1  -1  1  -1  1  
[DBG]  -1  1  -1  1  1  
[DBG]  Identifying agents in a submap for rescheduling (when key_agent is there at the time 42):
[DBG]  Agent 1 found intervals in the sub-map:
[DBG]   [10..15]
[DBG]  Agent 1 is not in sub-map at time 42 (intervals: 
[DBG]  [10..15] )
[DBG]  Agent 28 found intervals in the sub-map:
[DBG]   [0..1] [8..10] [14..14] [40..42]
[DBG]  Agent 28 (interval in submap: [40..42]) contains time 42, added to replan.
[DBG]  Agent 42 found intervals in the sub-map:
[DBG]   [39..42]
[DBG]  Agent 42 (interval in submap: [39..42]) contains time 42, added to replan.
[DBG]  Agent 28 | Start (global): 727 -> (local): (2, 2) at time 42 | Goal (global): 727 -> (local): (2, 2) at time 42
[DBG]  Agent 42 | Start (global): 759 -> (local): (3, 2) at time 42 | Goal (global): 759 -> (local): (3, 2) at time 42
[DBG]  [REPAIR] SAT destroy operator called.
[DBG]  [REPAIR] SAT operator – launching subproblem FOR OPTIMIZATION.
[DBG]  Creating local paths (sx, sy) in the submap for T_sync = 42
[DBG]    Agent 28 (global paths from T=42 to 42) has local path: (2,2) 
[DBG]    Agent 42 (global paths from T=42 to 42) has local path: (3,2) 
[DBG]  Checking input data for SAT solver:
[DBG]    - Number of agents to replan: 2
[DBG]  Agent 28 has the original local path length: 1 => Start (2,2), Goal (2,2)
[DBG]  Agent 42 has the original local path length: 1 => Start (3,2), Goal (3,2)
[DBG]  Start position: (2, 2), (3, 2), 
[DBG]  Goal position: (2, 2), (3, 2), 
[DBG]  SAT instance and solver created.
Currently solving
Instance name: scen
Map name: map
Encoding used: disappear_at_goal
SAT solver used: Kissat
Optimizing function: sum of costs
Number of agents: 2
Mks LB: 1
SoC LB: 2
Delta: 0
Remaining time: 300000 [ms]

Found plan [agents = 2] [timesteps = 1]
Agent #0 : 6 
Agent #1 : 10 

[STAT] Solver returned: 0
[DBG]  Agent (index) 28 | New local path (submap idx):
[DBG]  6 
[DBG]  Agent (index) 42 | New local path (submap idx):
[DBG]  10 
[DBG]  Update the agent path 28 | Original local length: 1 | New local length: 1
[DBG]  agent 28 t=0 => decoded (sx,sy)=(2,2) => global_id=727
[DBG]  Complete path of agent 28:
[DBG]    Original: 661 661 660 660 660 660 692 724 725 725 725 724 692 660 661 660 660 660 660 660 659 659 659 659 659 659 660 692 691 691 691 659 627 627 627 627 659 691 692 724 725 726 727 
[DBG]    New:     661 661 660 660 660 660 692 724 725 725 725 724 692 660 661 660 660 660 660 660 659 659 659 659 659 659 660 692 691 691 691 659 627 627 627 627 659 691 692 724 725 726 727 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 661 661 660 660 660 660 692 724 725 725 725 724 692 660 661 660 660 660 660 660 659 659 659 659 659 659 660 692 691 691 691 659 627 627 627 627 659 691 692 724 725 726 
[DBG]    Local path (in submap): 727 
[DBG]    Suffix (out of submap): 
[DBG]  Original agent path length 28 je: 43
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 0: 661, 661, 660, 660, 660, 660, 692, 724, 725, 725, 725, 724, 692, 660, 661, 660, 660, 660, 660, 660, 659, 659, 659, 659, 659, 659, 660, 692, 691, 691, 691, 659, 627, 627, 627, 627, 659, 691, 692, 724, 725, 726, 727, 
[DBG]  Path for agent 28 updated, resulting length: 43
[DBG]  Update the agent path 42 | Original local length: 1 | New local length: 1
[DBG]  agent 42 t=0 => decoded (sx,sy)=(3,2) => global_id=759
[DBG]  Complete path of agent 42:
[DBG]    Original: 224 192 193 194 226 258 258 259 260 261 293 294 326 358 390 422 423 424 425 426 427 428 429 430 431 432 464 496 528 529 561 593 625 657 658 659 691 692 724 725 726 727 759 
[DBG]    New:     224 192 193 194 226 258 258 259 260 261 293 294 326 358 390 422 423 424 425 426 427 428 429 430 431 432 464 496 528 529 561 593 625 657 658 659 691 692 724 725 726 727 759 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 224 192 193 194 226 258 258 259 260 261 293 294 326 358 390 422 423 424 425 426 427 428 429 430 431 432 464 496 528 529 561 593 625 657 658 659 691 692 724 725 726 727 
[DBG]    Local path (in submap): 759 
[DBG]    Suffix (out of submap): 
[DBG]  Original agent path length 42 je: 43
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 1: 224, 192, 193, 194, 226, 258, 258, 259, 260, 261, 293, 294, 326, 358, 390, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 464, 496, 528, 529, 561, 593, 625, 657, 658, 659, 691, 692, 724, 725, 726, 727, 759, 
[DBG]  Path for agent 42 updated, resulting length: 43
[DBG]  Paths successfully updated.
[DBG]  (LNS.cpp) New path for agent 28: 
[DBG]  661, 661, 660, 660, 660, 660, 692, 724, 725, 725, 725, 724, 692, 660, 661, 660, 660, 660, 660, 660, 659, 659, 659, 659, 659, 659, 660, 692, 691, 691, 691, 659, 627, 627, 627, 627, 659, 691, 692, 724, 725, 726, 727, 
[DBG]  (LNS.cpp) New path for agent 42: 
[DBG]  224, 192, 193, 194, 226, 258, 258, 259, 260, 261, 293, 294, 326, 358, 390, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 464, 496, 528, 529, 561, 593, 625, 657, 658, 659, 691, 692, 724, 725, 726, 727, 759, 
[DBG]  Delta value: 0
[DBG]  Rewarding metric index = 1
[DBG]  component_weights = {9.0333e-09, 1, 3.9787e-09, 6.89814e-09}
[DBG]  opSuccess value: 1
[STAT] neighbor.sum_of_costs before recomputation: 84
[STAT] neighbor.old_sum_of_costs before recomputation: 84
[STAT] sum_of_costs before recomputation: 4280
[DBG]  Validate solution immediately after SAT success.
[DBG]  No problems after SAT replan.
[DBG]  Recomputing sum_of_cost by dividing neighbor.sum_of_costs and neighbor.old_sum_of_costs
[STAT] sum_of_costs after recomputation: 4280
[STAT] Iteration 160
[DBG]  Random chance did not select SAT operator (r=70), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 160
[DBG]  Random chance did not select SAT operator (r=81), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 160
[DBG]  Random chance did not select SAT operator (r=84), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 160
[DBG]  Random chance did not select SAT operator (r=97), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 160
[DBG]  Random chance did not select SAT operator (r=20), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 160
[DBG]  Random chance did not select SAT operator (r=63), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 160
[DBG]  Random chance did not select SAT operator (r=77), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 160
[DBG]  Using SAT operator (destroy+repair SAT).
[DBG]  ====================
[DBG]  SAT destroy operator called.
[DBG]  SAT heuristic: 2
[DBG]  key_agent_id: 28
[DBG]  key_agent_id global path length: 43
[DBG]  Submap content (global positions):
[DBG]  593 594 595 596 597 
[DBG]  625 626 627 628 629 
[DBG]  657 658 659 660 661 
[DBG]  689 690 691 692 693 
[DBG]  721 722 723 724 725 
[DBG]  Map content with agents and obstacles:
[DBG]  . . X . . 
[DBG]  . X . . . 
[DBG]  A A A . . 
[DBG]  A X A . X 
[DBG]  . . X . . 
[DBG]  content of the map structure that we pass to the SAT solver:
[DBG]  1  1  -1  1  1  
[DBG]  1  -1  1  1  1  
[DBG]  1  1  1  1  1  
[DBG]  1  -1  1  1  -1  
[DBG]  1  1  -1  1  1  
[DBG]  Identifying agents in a submap for rescheduling (when key_agent is there at the time 36):
[DBG]  Agent 11 found intervals in the sub-map:
[DBG]   [35..37]
[DBG]  Agent 11 (interval in submap: [35..37]) contains time 36, added to replan.
[DBG]  Agent 26 found intervals in the sub-map:
[DBG]   [26..31]
[DBG]  Agent 26 is not in sub-map at time 36 (intervals: 
[DBG]  [26..31] )
[DBG]  Agent 28 found intervals in the sub-map:
[DBG]   [0..40]
[DBG]  Agent 28 (interval in submap: [0..40]) contains time 36, added to replan.
[DBG]  Agent 42 found intervals in the sub-map:
[DBG]   [31..39]
[DBG]  Agent 42 (interval in submap: [31..39]) contains time 36, added to replan.
[DBG]  Agent 55 found intervals in the sub-map:
[DBG]   [34..40]
[DBG]  Agent 55 (interval in submap: [34..40]) contains time 36, added to replan.
[DBG]  Agent 69 found intervals in the sub-map:
[DBG]   [33..40]
[DBG]  Agent 69 (interval in submap: [33..40]) contains time 36, added to replan.
[DBG]  Agent 11 | Start (global): 689 -> (local): (3, 0) at time 36 | Goal (global): 657 -> (local): (2, 0) at time 37
[DBG]  Agent 28 | Start (global): 659 -> (local): (2, 2) at time 36 | Goal (global): 725 -> (local): (4, 4) at time 40
[DBG]  Agent 42 | Start (global): 691 -> (local): (3, 2) at time 36 | Goal (global): 725 -> (local): (4, 4) at time 39
[DBG]  Agent 55 | Start (global): 657 -> (local): (2, 0) at time 36 | Goal (global): 692 -> (local): (3, 3) at time 40
[DBG]  Agent 69 | Start (global): 658 -> (local): (2, 1) at time 36 | Goal (global): 724 -> (local): (4, 3) at time 40
[DBG]  [REPAIR] SAT destroy operator called.
[DBG]  [REPAIR] SAT operator – launching subproblem FOR OPTIMIZATION.
[DBG]  Creating local paths (sx, sy) in the submap for T_sync = 36
[DBG]    Agent 11 (global paths from T=36 to 37) has local path: (3,0) (2,0) 
[DBG]    Agent 28 (global paths from T=36 to 40) has local path: (2,2) (3,2) (3,3) (4,3) (4,4) 
[DBG]    Agent 42 (global paths from T=36 to 39) has local path: (3,2) (3,3) (4,3) (4,4) 
[DBG]    Agent 55 (global paths from T=36 to 40) has local path: (2,0) (2,1) (2,2) (3,2) (3,3) 
[DBG]    Agent 69 (global paths from T=36 to 40) has local path: (2,1) (2,2) (3,2) (3,3) (4,3) 
[DBG]  Checking input data for SAT solver:
[DBG]    - Number of agents to replan: 5
[DBG]  Agent 11 has the original local path length: 2 => Start (3,0), Goal (2,0)
[DBG]  Agent 28 has the original local path length: 5 => Start (2,2), Goal (4,4)
[DBG]  Agent 42 has the original local path length: 4 => Start (3,2), Goal (4,4)
[DBG]  Agent 55 has the original local path length: 5 => Start (2,0), Goal (3,3)
[DBG]  Agent 69 has the original local path length: 5 => Start (2,1), Goal (4,3)
[DBG]  Start position: (3, 0), (2, 2), (3, 2), (2, 0), (2, 1), 
[DBG]  Goal position: (2, 0), (4, 4), (4, 4), (3, 3), (4, 3), 
[DBG]  SAT instance and solver created.
Currently solving
Instance name: scen
Map name: map
Encoding used: disappear_at_goal
SAT solver used: Kissat
Optimizing function: sum of costs
Number of agents: 5
Mks LB: 5
SoC LB: 21
Delta: 0
Remaining time: 300000 [ms]

Vertex conflict! Agents 0, 2, timestep 4, location 0
Found plan [agents = 5] [timesteps = 5]
Agent #0 : 13 8 0 0 0 
Agent #1 : 10 14 15 18 19 
Agent #2 : 14 15 18 19 0 
Agent #3 : 8 9 10 14 15 
Agent #4 : 9 10 14 15 18 

[STAT] Solver returned: 0
[DBG]  Agent (index) 11 | New local path (submap idx):
[DBG]  13 8 
[DBG]  Agent (index) 28 | New local path (submap idx):
[DBG]  10 14 15 18 19 
[DBG]  Agent (index) 42 | New local path (submap idx):
[DBG]  14 15 18 19 
[DBG]  Agent (index) 55 | New local path (submap idx):
[DBG]  8 9 10 14 15 
[DBG]  Agent (index) 69 | New local path (submap idx):
[DBG]  9 10 14 15 18 
[DBG]  Update the agent path 11 | Original local length: 2 | New local length: 2
[DBG]  agent 11 t=0 => decoded (sx,sy)=(3,0) => global_id=689
[DBG]  agent 11 t=1 => decoded (sx,sy)=(2,0) => global_id=657
[DBG]  Complete path of agent 11:
[DBG]    Original: 990 1022 990 989 957 956 956 956 956 956 924 892 860 859 858 857 889 888 887 886 885 884 883 851 850 849 848 847 846 814 782 783 784 752 720 721 689 657 
[DBG]    New:     990 1022 990 989 957 956 956 956 956 956 924 892 860 859 858 857 889 888 887 886 885 884 883 851 850 849 848 847 846 814 782 783 784 752 720 721 689 657 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 990 1022 990 989 957 956 956 956 956 956 924 892 860 859 858 857 889 888 887 886 885 884 883 851 850 849 848 847 846 814 782 783 784 752 720 721 
[DBG]    Local path (in submap): 689 657 
[DBG]    Suffix (out of submap): 
[DBG]  Original agent path length 11 je: 38
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 0: 990, 1022, 990, 989, 957, 956, 956, 956, 956, 956, 924, 892, 860, 859, 858, 857, 889, 888, 887, 886, 885, 884, 883, 851, 850, 849, 848, 847, 846, 814, 782, 783, 784, 752, 720, 721, 689, 657, 
[DBG]  Path for agent 11 updated, resulting length: 38
[DBG]  Update the agent path 28 | Original local length: 5 | New local length: 5
[DBG]  agent 28 t=0 => decoded (sx,sy)=(2,2) => global_id=659
[DBG]  agent 28 t=1 => decoded (sx,sy)=(3,2) => global_id=691
[DBG]  agent 28 t=2 => decoded (sx,sy)=(3,3) => global_id=692
[DBG]  agent 28 t=3 => decoded (sx,sy)=(4,3) => global_id=724
[DBG]  agent 28 t=4 => decoded (sx,sy)=(4,4) => global_id=725
[DBG]  Complete path of agent 28:
[DBG]    Original: 661 661 660 660 660 660 692 724 725 725 725 724 692 660 661 660 660 660 660 660 659 659 659 659 659 659 660 692 691 691 691 659 627 627 627 627 659 691 692 724 725 726 727 
[DBG]    New:     661 661 660 660 660 660 692 724 725 725 725 724 692 660 661 660 660 660 660 660 659 659 659 659 659 659 660 692 691 691 691 659 627 627 627 627 659 691 692 724 725 726 727 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 661 661 660 660 660 660 692 724 725 725 725 724 692 660 661 660 660 660 660 660 659 659 659 659 659 659 660 692 691 691 691 659 627 627 627 627 
[DBG]    Local path (in submap): 659 691 692 724 725 
[DBG]    Suffix (out of submap): 726 727 
[DBG]  Original agent path length 28 je: 43
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 1: 661, 661, 660, 660, 660, 660, 692, 724, 725, 725, 725, 724, 692, 660, 661, 660, 660, 660, 660, 660, 659, 659, 659, 659, 659, 659, 660, 692, 691, 691, 691, 659, 627, 627, 627, 627, 659, 691, 692, 724, 725, 726, 727, 
[DBG]  Path for agent 28 updated, resulting length: 43
[DBG]  Update the agent path 42 | Original local length: 4 | New local length: 4
[DBG]  agent 42 t=0 => decoded (sx,sy)=(3,2) => global_id=691
[DBG]  agent 42 t=1 => decoded (sx,sy)=(3,3) => global_id=692
[DBG]  agent 42 t=2 => decoded (sx,sy)=(4,3) => global_id=724
[DBG]  agent 42 t=3 => decoded (sx,sy)=(4,4) => global_id=725
[DBG]  Complete path of agent 42:
[DBG]    Original: 224 192 193 194 226 258 258 259 260 261 293 294 326 358 390 422 423 424 425 426 427 428 429 430 431 432 464 496 528 529 561 593 625 657 658 659 691 692 724 725 726 727 759 
[DBG]    New:     224 192 193 194 226 258 258 259 260 261 293 294 326 358 390 422 423 424 425 426 427 428 429 430 431 432 464 496 528 529 561 593 625 657 658 659 691 692 724 725 726 727 759 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 224 192 193 194 226 258 258 259 260 261 293 294 326 358 390 422 423 424 425 426 427 428 429 430 431 432 464 496 528 529 561 593 625 657 658 659 
[DBG]    Local path (in submap): 691 692 724 725 
[DBG]    Suffix (out of submap): 726 727 759 
[DBG]  Original agent path length 42 je: 43
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 2: 224, 192, 193, 194, 226, 258, 258, 259, 260, 261, 293, 294, 326, 358, 390, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 464, 496, 528, 529, 561, 593, 625, 657, 658, 659, 691, 692, 724, 725, 726, 727, 759, 
[DBG]  Path for agent 42 updated, resulting length: 43
[DBG]  Update the agent path 55 | Original local length: 5 | New local length: 5
[DBG]  agent 55 t=0 => decoded (sx,sy)=(2,0) => global_id=657
[DBG]  agent 55 t=1 => decoded (sx,sy)=(2,1) => global_id=658
[DBG]  agent 55 t=2 => decoded (sx,sy)=(2,2) => global_id=659
[DBG]  agent 55 t=3 => decoded (sx,sy)=(3,2) => global_id=691
[DBG]  agent 55 t=4 => decoded (sx,sy)=(3,3) => global_id=692
[DBG]  Complete path of agent 55:
[DBG]    Original: 34 35 67 68 69 70 102 134 135 136 137 138 139 140 172 173 205 205 237 269 270 302 303 304 336 368 400 400 432 464 496 528 529 561 593 625 657 658 659 691 692 
[DBG]    New:     34 35 67 68 69 70 102 134 135 136 137 138 139 140 172 173 205 205 237 269 270 302 303 304 336 368 400 400 432 464 496 528 529 561 593 625 657 658 659 691 692 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 34 35 67 68 69 70 102 134 135 136 137 138 139 140 172 173 205 205 237 269 270 302 303 304 336 368 400 400 432 464 496 528 529 561 593 625 
[DBG]    Local path (in submap): 657 658 659 691 692 
[DBG]    Suffix (out of submap): 
[DBG]  Original agent path length 55 je: 41
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 3: 34, 35, 67, 68, 69, 70, 102, 134, 135, 136, 137, 138, 139, 140, 172, 173, 205, 205, 237, 269, 270, 302, 303, 304, 336, 368, 400, 400, 432, 464, 496, 528, 529, 561, 593, 625, 657, 658, 659, 691, 692, 
[DBG]  Path for agent 55 updated, resulting length: 41
[DBG]  Update the agent path 69 | Original local length: 5 | New local length: 5
[DBG]  agent 69 t=0 => decoded (sx,sy)=(2,1) => global_id=658
[DBG]  agent 69 t=1 => decoded (sx,sy)=(2,2) => global_id=659
[DBG]  agent 69 t=2 => decoded (sx,sy)=(3,2) => global_id=691
[DBG]  agent 69 t=3 => decoded (sx,sy)=(3,3) => global_id=692
[DBG]  agent 69 t=4 => decoded (sx,sy)=(4,3) => global_id=724
[DBG]  Complete path of agent 69:
[DBG]    Original: 4 5 6 7 8 9 41 73 105 137 138 139 140 172 173 205 237 237 269 301 333 365 366 367 368 400 432 432 464 496 528 529 561 593 625 657 658 659 691 692 724 756 788 820 
[DBG]    New:     4 5 6 7 8 9 41 73 105 137 138 139 140 172 173 205 237 237 269 301 333 365 366 367 368 400 432 432 464 496 528 529 561 593 625 657 658 659 691 692 724 756 788 820 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 4 5 6 7 8 9 41 73 105 137 138 139 140 172 173 205 237 237 269 301 333 365 366 367 368 400 432 432 464 496 528 529 561 593 625 657 
[DBG]    Local path (in submap): 658 659 691 692 724 
[DBG]    Suffix (out of submap): 756 788 820 
[DBG]  Original agent path length 69 je: 44
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 4: 4, 5, 6, 7, 8, 9, 41, 73, 105, 137, 138, 139, 140, 172, 173, 205, 237, 237, 269, 301, 333, 365, 366, 367, 368, 400, 432, 432, 464, 496, 528, 529, 561, 593, 625, 657, 658, 659, 691, 692, 724, 756, 788, 820, 
[DBG]  Path for agent 69 updated, resulting length: 44
[DBG]  Paths successfully updated.
[DBG]  (LNS.cpp) New path for agent 11: 
[DBG]  990, 1022, 990, 989, 957, 956, 956, 956, 956, 956, 924, 892, 860, 859, 858, 857, 889, 888, 887, 886, 885, 884, 883, 851, 850, 849, 848, 847, 846, 814, 782, 783, 784, 752, 720, 721, 689, 657, 
[DBG]  (LNS.cpp) New path for agent 28: 
[DBG]  661, 661, 660, 660, 660, 660, 692, 724, 725, 725, 725, 724, 692, 660, 661, 660, 660, 660, 660, 660, 659, 659, 659, 659, 659, 659, 660, 692, 691, 691, 691, 659, 627, 627, 627, 627, 659, 691, 692, 724, 725, 726, 727, 
[DBG]  (LNS.cpp) New path for agent 42: 
[DBG]  224, 192, 193, 194, 226, 258, 258, 259, 260, 261, 293, 294, 326, 358, 390, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 464, 496, 528, 529, 561, 593, 625, 657, 658, 659, 691, 692, 724, 725, 726, 727, 759, 
[DBG]  (LNS.cpp) New path for agent 55: 
[DBG]  34, 35, 67, 68, 69, 70, 102, 134, 135, 136, 137, 138, 139, 140, 172, 173, 205, 205, 237, 269, 270, 302, 303, 304, 336, 368, 400, 400, 432, 464, 496, 528, 529, 561, 593, 625, 657, 658, 659, 691, 692, 
[DBG]  (LNS.cpp) New path for agent 69: 
[DBG]  4, 5, 6, 7, 8, 9, 41, 73, 105, 137, 138, 139, 140, 172, 173, 205, 237, 237, 269, 301, 333, 365, 366, 367, 368, 400, 432, 432, 464, 496, 528, 529, 561, 593, 625, 657, 658, 659, 691, 692, 724, 756, 788, 820, 
[DBG]  Delta value: 0
[DBG]  Rewarding metric index = 1
[DBG]  component_weights = {8.58164e-09, 1, 3.77977e-09, 6.55324e-09}
[DBG]  opSuccess value: 1
[STAT] neighbor.sum_of_costs before recomputation: 204
[STAT] neighbor.old_sum_of_costs before recomputation: 204
[STAT] sum_of_costs before recomputation: 4280
[DBG]  Validate solution immediately after SAT success.
[DBG]  No problems after SAT replan.
[DBG]  Recomputing sum_of_cost by dividing neighbor.sum_of_costs and neighbor.old_sum_of_costs
[STAT] sum_of_costs after recomputation: 4280
[STAT] Iteration 161
[DBG]  Random chance did not select SAT operator (r=86), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 161
[DBG]  Random chance did not select SAT operator (r=90), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 161
[DBG]  Random chance did not select SAT operator (r=47), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 161
[DBG]  Random chance did not select SAT operator (r=33), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 161
[DBG]  Random chance did not select SAT operator (r=74), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 161
[DBG]  Random chance did not select SAT operator (r=52), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 161
[DBG]  Random chance did not select SAT operator (r=23), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 161
[DBG]  Random chance did not select SAT operator (r=83), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 161
[DBG]  Random chance did not select SAT operator (r=73), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 161
[DBG]  Random chance did not select SAT operator (r=18), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 161
[DBG]  Random chance did not select SAT operator (r=45), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 161
[DBG]  Random chance did not select SAT operator (r=67), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 161
[DBG]  Using SAT operator (destroy+repair SAT).
[DBG]  ====================
[DBG]  SAT destroy operator called.
[DBG]  SAT heuristic: 2
[DBG]  key_agent_id: 28
[DBG]  key_agent_id global path length: 43
[DBG]  Submap content (global positions):
[DBG]  658 659 660 661 662 
[DBG]  690 691 692 693 694 
[DBG]  722 723 724 725 726 
[DBG]  754 755 756 757 758 
[DBG]  786 787 788 789 790 
[DBG]  Map content with agents and obstacles:
[DBG]  . . . A X 
[DBG]  X . . X X 
[DBG]  . X A . A 
[DBG]  X . A . X 
[DBG]  . . A X . 
[DBG]  content of the map structure that we pass to the SAT solver:
[DBG]  1  1  1  1  -1  
[DBG]  -1  1  1  -1  -1  
[DBG]  1  -1  1  1  1  
[DBG]  -1  1  1  1  -1  
[DBG]  1  1  1  -1  1  
[DBG]  Identifying agents in a submap for rescheduling (when key_agent is there at the time 7):
[DBG]  Agent 1 found intervals in the sub-map:
[DBG]  
[DBG]  Agent 1 is not in sub-map at time 7 (intervals: 
[DBG]  )
[DBG]  Agent 7 found intervals in the sub-map:
[DBG]   [0..7]
[DBG]  Agent 7 (interval in submap: [0..7]) contains time 7, added to replan.
[DBG]  Agent 28 found intervals in the sub-map:
[DBG]   [0..31] [36..41]
[DBG]  Agent 28 (interval in submap: [0..31]) contains time 7, added to replan.
[DBG]  Agent 46 found intervals in the sub-map:
[DBG]   [0..7]
[DBG]  Agent 46 (interval in submap: [0..7]) contains time 7, added to replan.
[DBG]  Agent 62 found intervals in the sub-map:
[DBG]  
[DBG]  Agent 62 is not in sub-map at time 7 (intervals: 
[DBG]  )
[DBG]  Agent 89 found intervals in the sub-map:
[DBG]   [7..12]
[DBG]  Agent 89 (interval in submap: [7..12]) contains time 7, added to replan.
[DBG]  Agent 91 found intervals in the sub-map:
[DBG]   [0..5]
[DBG]  Agent 91 is not in sub-map at time 7 (intervals: 
[DBG]  [0..5] )
[DBG]  Agent 108 found intervals in the sub-map:
[DBG]   [1..8]
[DBG]  Agent 108 (interval in submap: [1..8]) contains time 7, added to replan.
[DBG]  Agent 7 | Start (global): 788 -> (local): (4, 2) at time 7 | Goal (global): 788 -> (local): (4, 2) at time 7
[DBG]  Agent 28 | Start (global): 724 -> (local): (2, 2) at time 7 | Goal (global): 659 -> (local): (0, 1) at time 31
[DBG]  Agent 46 | Start (global): 726 -> (local): (2, 4) at time 7 | Goal (global): 726 -> (local): (2, 4) at time 7
[DBG]  Agent 89 | Start (global): 661 -> (local): (0, 3) at time 7 | Goal (global): 788 -> (local): (4, 2) at time 12
[DBG]  Agent 108 | Start (global): 756 -> (local): (3, 2) at time 7 | Goal (global): 788 -> (local): (4, 2) at time 8
[DBG]  [REPAIR] SAT destroy operator called.
[DBG]  [REPAIR] SAT operator – launching subproblem FOR OPTIMIZATION.
[DBG]  Creating local paths (sx, sy) in the submap for T_sync = 7
[DBG]    Agent 7 (global paths from T=7 to 7) has local path: (4,2) 
[DBG]    Agent 28 (global paths from T=7 to 31) has local path: (2,2) (2,3) (2,3) (2,3) (2,2) (1,2) (0,2) (0,3) (0,2) (0,2) (0,2) (0,2) (0,2) (0,1) (0,1) (0,1) (0,1) (0,1) (0,1) (0,2) (1,2) (1,1) (1,1) (1,1) (0,1) 
[DBG]    Agent 46 (global paths from T=7 to 7) has local path: (2,4) 
[DBG]    Agent 89 (global paths from T=7 to 12) has local path: (0,3) (0,2) (1,2) (2,2) (3,2) (4,2) 
[DBG]    Agent 108 (global paths from T=7 to 8) has local path: (3,2) (4,2) 
[DBG]  Checking input data for SAT solver:
[DBG]    - Number of agents to replan: 5
[DBG]  Agent 7 has the original local path length: 1 => Start (4,2), Goal (4,2)
[DBG]  Agent 28 has the original local path length: 25 => Start (2,2), Goal (0,1)
[DBG]  Agent 46 has the original local path length: 1 => Start (2,4), Goal (2,4)
[DBG]  Agent 89 has the original local path length: 6 => Start (0,3), Goal (4,2)
[DBG]  Agent 108 has the original local path length: 2 => Start (3,2), Goal (4,2)
[DBG]  Start position: (4, 2), (2, 2), (2, 4), (0, 3), (3, 2), 
[DBG]  Goal position: (4, 2), (0, 1), (2, 4), (4, 2), (4, 2), 
[DBG]  SAT instance and solver created.
Currently solving
Instance name: scen
Map name: map
Encoding used: disappear_at_goal
SAT solver used: Kissat
Optimizing function: sum of costs
Number of agents: 5
Mks LB: 6
SoC LB: 14
Delta: 0
Remaining time: 300000 [ms]

Vertex conflict! Agents 0, 1, timestep 4, location 0
Swapping conflict! Agents 0, 1, timestep 4, edge (0,0)
Vertex conflict! Agents 0, 1, timestep 5, location 0
Vertex conflict! Agents 0, 2, timestep 1, location 0
Swapping conflict! Agents 0, 2, timestep 1, edge (0,0)
Vertex conflict! Agents 0, 2, timestep 2, location 0
Swapping conflict! Agents 0, 2, timestep 2, edge (0,0)
Vertex conflict! Agents 0, 2, timestep 3, location 0
Swapping conflict! Agents 0, 2, timestep 3, edge (0,0)
Vertex conflict! Agents 0, 2, timestep 4, location 0
Swapping conflict! Agents 0, 2, timestep 4, edge (0,0)
Vertex conflict! Agents 0, 2, timestep 5, location 0
Vertex conflict! Agents 0, 4, timestep 2, location 0
Swapping conflict! Agents 0, 4, timestep 2, edge (0,0)
Vertex conflict! Agents 0, 4, timestep 3, location 0
Swapping conflict! Agents 0, 4, timestep 3, edge (0,0)
Vertex conflict! Agents 0, 4, timestep 4, location 0
Swapping conflict! Agents 0, 4, timestep 4, edge (0,0)
Vertex conflict! Agents 0, 4, timestep 5, location 0
Vertex conflict! Agents 1, 2, timestep 4, location 0
Swapping conflict! Agents 1, 2, timestep 4, edge (0,0)
Vertex conflict! Agents 1, 2, timestep 5, location 0
Vertex conflict! Agents 1, 4, timestep 4, location 0
Swapping conflict! Agents 1, 4, timestep 4, edge (0,0)
Vertex conflict! Agents 1, 4, timestep 5, location 0
Vertex conflict! Agents 2, 4, timestep 2, location 0
Swapping conflict! Agents 2, 4, timestep 2, edge (0,0)
Vertex conflict! Agents 2, 4, timestep 3, location 0
Swapping conflict! Agents 2, 4, timestep 3, edge (0,0)
Vertex conflict! Agents 2, 4, timestep 4, location 0
Swapping conflict! Agents 2, 4, timestep 4, edge (0,0)
Vertex conflict! Agents 2, 4, timestep 5, location 0
Found plan [agents = 5] [timesteps = 6]
Agent #0 : 15 0 0 0 0 0 
Agent #1 : 7 5 4 1 0 0 
Agent #2 : 9 0 0 0 0 0 
Agent #3 : 3 2 5 7 11 15 
Agent #4 : 11 15 0 0 0 0 

[STAT] Solver returned: 0
[DBG]  Agent (index) 7 | New local path (submap idx):
[DBG]  15 
[DBG]  Agent (index) 28 | New local path (submap idx):
[DBG]  7 5 4 1 
[DBG]  Agent (index) 46 | New local path (submap idx):
[DBG]  9 
[DBG]  Agent (index) 89 | New local path (submap idx):
[DBG]  3 2 5 7 11 15 
[DBG]  Agent (index) 108 | New local path (submap idx):
[DBG]  11 15 
[DBG]  Update the agent path 7 | Original local length: 1 | New local length: 1
[DBG]  agent 7 t=0 => decoded (sx,sy)=(4,2) => global_id=788
[DBG]  Complete path of agent 7:
[DBG]    Original: 756 724 724 756 755 756 756 788 820 821 822 823 824 856 857 889 921 
[DBG]    New:     756 724 724 756 755 756 756 788 820 821 822 823 824 856 857 889 921 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 756 724 724 756 755 756 756 
[DBG]    Local path (in submap): 788 
[DBG]    Suffix (out of submap): 820 821 822 823 824 856 857 889 921 
[DBG]  Original agent path length 7 je: 17
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 0: 756, 724, 724, 756, 755, 756, 756, 788, 820, 821, 822, 823, 824, 856, 857, 889, 921, 
[DBG]  Path for agent 7 updated, resulting length: 17
[DBG]  Update the agent path 28 | Original local length: 25 | New local length: 4
[DBG]  agent 28 t=0 => decoded (sx,sy)=(2,2) => global_id=724
[DBG]  agent 28 t=1 => decoded (sx,sy)=(1,2) => global_id=692
[DBG]  agent 28 t=2 => decoded (sx,sy)=(1,1) => global_id=691
[DBG]  agent 28 t=3 => decoded (sx,sy)=(0,1) => global_id=659
[DBG]  Complete path of agent 28:
[DBG]    Original: 661 661 660 660 660 660 692 724 725 725 725 724 692 660 661 660 660 660 660 660 659 659 659 659 659 659 660 692 691 691 691 659 627 627 627 627 659 691 692 724 725 726 727 
[DBG]    New:     661 661 660 660 660 660 692 724 692 691 659 627 627 627 627 659 691 692 724 725 726 727 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 661 661 660 660 660 660 692 
[DBG]    Local path (in submap): 724 692 691 659 627 627 627 627 659 691 692 724 725 726 727 
[DBG]    Suffix (out of submap): 
[DBG]  Original agent path length 28 je: 43
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 1: 661, 661, 660, 660, 660, 660, 692, 724, 692, 691, 659, 627, 627, 627, 627, 659, 691, 692, 724, 725, 726, 727, 
[DBG]  Path for agent 28 updated, resulting length: 22
[DBG]  Update the agent path 46 | Original local length: 1 | New local length: 1
[DBG]  agent 46 t=0 => decoded (sx,sy)=(2,4) => global_id=726
[DBG]  Complete path of agent 46:
[DBG]    Original: 786 787 788 788 756 724 725 726 727 728 696 664 632 600 601 602 603 604 572 540 508 476 444 412 380 348 349 317 285 284 252 
[DBG]    New:     786 787 788 788 756 724 725 726 727 728 696 664 632 600 601 602 603 604 572 540 508 476 444 412 380 348 349 317 285 284 252 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 786 787 788 788 756 724 725 
[DBG]    Local path (in submap): 726 
[DBG]    Suffix (out of submap): 727 728 696 664 632 600 601 602 603 604 572 540 508 476 444 412 380 348 349 317 285 284 252 
[DBG]  Original agent path length 46 je: 31
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 2: 786, 787, 788, 788, 756, 724, 725, 726, 727, 728, 696, 664, 632, 600, 601, 602, 603, 604, 572, 540, 508, 476, 444, 412, 380, 348, 349, 317, 285, 284, 252, 
[DBG]  Path for agent 46 updated, resulting length: 31
[DBG]  Update the agent path 89 | Original local length: 6 | New local length: 6
[DBG]  agent 89 t=0 => decoded (sx,sy)=(0,3) => global_id=661
[DBG]  agent 89 t=1 => decoded (sx,sy)=(0,2) => global_id=660
[DBG]  agent 89 t=2 => decoded (sx,sy)=(1,2) => global_id=692
[DBG]  agent 89 t=3 => decoded (sx,sy)=(2,2) => global_id=724
[DBG]  agent 89 t=4 => decoded (sx,sy)=(3,2) => global_id=756
[DBG]  agent 89 t=5 => decoded (sx,sy)=(4,2) => global_id=788
[DBG]  Complete path of agent 89:
[DBG]    Original: 437 469 501 533 565 597 629 661 660 692 724 756 788 820 819 820 821 822 854 854 886 918 950 982 983 1015 
[DBG]    New:     437 469 501 533 565 597 629 661 660 692 724 756 788 820 819 820 821 822 854 854 886 918 950 982 983 1015 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 437 469 501 533 565 597 629 
[DBG]    Local path (in submap): 661 660 692 724 756 788 
[DBG]    Suffix (out of submap): 820 819 820 821 822 854 854 886 918 950 982 983 1015 
[DBG]  Original agent path length 89 je: 26
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 3: 437, 469, 501, 533, 565, 597, 629, 661, 660, 692, 724, 756, 788, 820, 819, 820, 821, 822, 854, 854, 886, 918, 950, 982, 983, 1015, 
[DBG]  Path for agent 89 updated, resulting length: 26
[DBG]  Update the agent path 108 | Original local length: 2 | New local length: 2
[DBG]  agent 108 t=0 => decoded (sx,sy)=(3,2) => global_id=756
[DBG]  agent 108 t=1 => decoded (sx,sy)=(4,2) => global_id=788
[DBG]  Complete path of agent 108:
[DBG]    Original: 628 660 692 692 692 692 724 756 788 820 821 822 823 824 856 888 920 952 953 954 955 956 988 989 1021 
[DBG]    New:     628 660 692 692 692 692 724 756 788 820 821 822 823 824 856 888 920 952 953 954 955 956 988 989 1021 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 628 660 692 692 692 692 724 
[DBG]    Local path (in submap): 756 788 
[DBG]    Suffix (out of submap): 820 821 822 823 824 856 888 920 952 953 954 955 956 988 989 1021 
[DBG]  Original agent path length 108 je: 25
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 4: 628, 660, 692, 692, 692, 692, 724, 756, 788, 820, 821, 822, 823, 824, 856, 888, 920, 952, 953, 954, 955, 956, 988, 989, 1021, 
[DBG]  Path for agent 108 updated, resulting length: 25
[DBG]  Paths successfully updated.
[DBG]  (LNS.cpp) New path for agent 7: 
[DBG]  756, 724, 724, 756, 755, 756, 756, 788, 820, 821, 822, 823, 824, 856, 857, 889, 921, 
[DBG]  (LNS.cpp) New path for agent 28: 
[DBG]  661, 661, 660, 660, 660, 660, 692, 724, 692, 691, 659, 627, 627, 627, 627, 659, 691, 692, 724, 725, 726, 727, 
[DBG]  (LNS.cpp) New path for agent 46: 
[DBG]  786, 787, 788, 788, 756, 724, 725, 726, 727, 728, 696, 664, 632, 600, 601, 602, 603, 604, 572, 540, 508, 476, 444, 412, 380, 348, 349, 317, 285, 284, 252, 
[DBG]  (LNS.cpp) New path for agent 89: 
[DBG]  437, 469, 501, 533, 565, 597, 629, 661, 660, 692, 724, 756, 788, 820, 819, 820, 821, 822, 854, 854, 886, 918, 950, 982, 983, 1015, 
[DBG]  (LNS.cpp) New path for agent 108: 
[DBG]  628, 660, 692, 692, 692, 692, 724, 756, 788, 820, 821, 822, 823, 824, 856, 888, 920, 952, 953, 954, 955, 956, 988, 989, 1021, 
[DBG]  Delta value: 0.153285
[DBG]  Rewarding metric index = 1
[DBG]  component_weights = {7.06899e-09, 1, 3.11352e-09, 5.39812e-09}
[DBG]  opSuccess value: 1
[STAT] neighbor.sum_of_costs before recomputation: 116
[STAT] neighbor.old_sum_of_costs before recomputation: 137
[STAT] sum_of_costs before recomputation: 4280
[DBG]  Validate solution immediately after SAT success.
[WARNING] Problem after SAT: Target conflict: agent 42 (len 42) traverses target of agent 28 (len 21) at location 727 at timestep 41
[DBG]  [DEBUG] Attempting immediate repair via init_lns because problem occurred after SAT (should be applied only for conflicts...).
[DBG]  [DEBUG] Passing 150 agents to init_lns (skip=true).
[DBG]  [DEBUG] path_table contents for selected agents (neighbor.agents):
[DBG]    Agent 7 => controlling path length=17
[DBG]    Agent 28 => controlling path length=22
[DBG]    Agent 46 => controlling path length=31
[DBG]    Agent 89 => controlling path length=26
[DBG]    Agent 108 => controlling path length=25
[DBG]  hodnota skip_initial_solution=1
[DBG]  We skip initialSolution => call buildCollisionData()
[DBG]  buildCollisionData() called – skip_initial_solution case.
[DBG]  Agents.size()=150, collision_graph.size()=150
[DBG]  agent 28 => updateCollidingPairs => foundCollision
[DBG]  agent 42 => updateCollidingPairs => foundCollision
[DBG]  agent 70 => updateCollidingPairs => foundCollision
[DBG]  agent 86 => updateCollidingPairs => foundCollision
[DBG]  agent 101 => updateCollidingPairs => foundCollision
[DBG]  agent 135 => updateCollidingPairs => foundCollision
[DBG]  Conflicting agent pairs:
[DBG]  agent 28 is in conflict with agent 42
[DBG]  agent 28 is in conflict with agent 70
[DBG]  agent 28 is in conflict with agent 86
[DBG]  agent 28 is in conflict with agent 101
[DBG]  agent 28 is in conflict with agent 135
[DBG]  buildCollisionData() => sum_of_costs=4259, num_of_colliding_pairs=5
[DBG]  buildCollisionData done => sum_of_costs=4259, num_of_colliding_pairs=5
[DBG]  sum_of_cost hodnota: 4259
[DBG]  After skip/init build => iteration_stats.back(): sum_of_costs=4259, collisions=5
[DEBUG] Using default neighbor generation strategy for conflicts: 0
[DEBUG] Using default neighbor generation strategy for conflicts: 2
[DEBUG] Using default neighbor generation strategy for conflicts: 1
[DEBUG] Using default neighbor generation strategy for conflicts: 2
[DEBUG] Using default neighbor generation strategy for conflicts: 0
	InitLNS(PP): runtime = 0.00704371, iterations = 6, colliding pairs = 0, initial colliding pairs = 5, solution cost = 4301, initial solution cost = 4259, failed iterations = 0
[DBG]  init_lns->sum_of_costs after init_lns->run: 4301
[DBG]  sum_of_costs after assignment from init_lns->run: 4301
[DBG]  Recomputing sum_of_cost by dividing neighbor.sum_of_costs and neighbor.old_sum_of_costs
[STAT] sum_of_costs after recomputation: 4301
[STAT] Iteration 162
[DBG]  Random chance did not select SAT operator (r=31), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 162
[DBG]  Random chance did not select SAT operator (r=52), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 162
[DBG]  Random chance did not select SAT operator (r=90), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 162
[DBG]  Random chance did not select SAT operator (r=63), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 162
[DBG]  Random chance did not select SAT operator (r=64), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 162
[DBG]  Using SAT operator (destroy+repair SAT).
[DBG]  ====================
[DBG]  SAT destroy operator called.
[DBG]  SAT heuristic: 2
[DBG]  key_agent_id: 120
[DBG]  key_agent_id global path length: 46
[DBG]  Submap content (global positions):
[DBG]  -1 -1 -1 -1 -1 
[DBG]  6 7 8 9 10 
[DBG]  38 39 40 41 42 
[DBG]  70 71 72 73 74 
[DBG]  102 103 104 105 106 
[DBG]  Map content with agents and obstacles:
[DBG]  X X X X X 
[DBG]  . . . . X 
[DBG]  X X A . . 
[DBG]  . . . . . 
[DBG]  . X . . . 
[DBG]  content of the map structure that we pass to the SAT solver:
[DBG]  1  1  1  1  1  
[DBG]  1  1  1  1  -1  
[DBG]  -1  -1  1  1  1  
[DBG]  1  1  1  1  1  
[DBG]  1  -1  1  1  1  
[DBG]  Identifying agents in a submap for rescheduling (when key_agent is there at the time 17):
[DBG]  Agent 15 found intervals in the sub-map:
[DBG]  
[DBG]  Agent 15 is not in sub-map at time 17 (intervals: 
[DBG]  )
[DBG]  Agent 40 found intervals in the sub-map:
[DBG]   [35..40]
[DBG]  Agent 40 is not in sub-map at time 17 (intervals: 
[DBG]  [35..40] )
[DBG]  Agent 117 found intervals in the sub-map:
[DBG]   [18..23]
[DBG]  Agent 117 is not in sub-map at time 17 (intervals: 
[DBG]  [18..23] )
[DBG]  Agent 120 found intervals in the sub-map:
[DBG]   [7..24]
[DBG]  Agent 120 (interval in submap: [7..24]) contains time 17, added to replan.
[DBG]  Agent 120 | Start (global): 40 -> (local): (2, 2) at time 17 | Goal (global): 6 -> (local): (1, 0) at time 24
[DBG]  [REPAIR] SAT destroy operator called.
[DBG]  [REPAIR] SAT operator – launching subproblem FOR OPTIMIZATION.
[DBG]  Creating local paths (sx, sy) in the submap for T_sync = 17
[DBG]    Agent 120 (global paths from T=17 to 24) has local path: (2,2) (2,2) (2,2) (2,2) (2,2) (1,2) (1,1) (1,0) 
[DBG]  Checking input data for SAT solver:
[DBG]    - Number of agents to replan: 1
[DBG]  Agent 120 has the original local path length: 8 => Start (2,2), Goal (1,0)
[DBG]  Start position: (2, 2), 
[DBG]  Goal position: (1, 0), 
[DBG]  SAT instance and solver created.
Currently solving
Instance name: scen
Map name: map
Encoding used: disappear_at_goal
SAT solver used: Kissat
Optimizing function: sum of costs
Number of agents: 1
Mks LB: 4
SoC LB: 4
Delta: 0
Remaining time: 300000 [ms]

Found plan [agents = 1] [timesteps = 4]
Agent #0 : 9 7 6 5 

[STAT] Solver returned: 0
[DBG]  Agent (index) 120 | New local path (submap idx):
[DBG]  9 7 6 5 
[DBG]  Update the agent path 120 | Original local length: 8 | New local length: 4
[DBG]  agent 120 t=0 => decoded (sx,sy)=(2,2) => global_id=40
[DBG]  agent 120 t=1 => decoded (sx,sy)=(1,2) => global_id=8
[DBG]  agent 120 t=2 => decoded (sx,sy)=(1,1) => global_id=7
[DBG]  agent 120 t=3 => decoded (sx,sy)=(1,0) => global_id=6
[DBG]  Complete path of agent 120:
[DBG]    Original: 203 204 172 140 139 107 75 74 73 72 40 40 40 40 40 40 40 40 40 40 40 40 8 7 6 5 4 3 35 34 66 98 99 131 132 133 134 135 136 168 200 199 199 199 199 200 
[DBG]    New:     203 204 172 140 139 107 75 74 73 72 40 40 40 40 40 40 40 40 8 7 6 5 4 3 35 34 66 98 99 131 132 133 134 135 136 168 200 199 199 199 199 200 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 203 204 172 140 139 107 75 74 73 72 40 40 40 40 40 40 40 
[DBG]    Local path (in submap): 40 8 7 6 5 4 3 35 
[DBG]    Suffix (out of submap): 34 66 98 99 131 132 133 134 135 136 168 200 199 199 199 199 200 
[DBG]  Original agent path length 120 je: 46
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 0: 203, 204, 172, 140, 139, 107, 75, 74, 73, 72, 40, 40, 40, 40, 40, 40, 40, 40, 8, 7, 6, 5, 4, 3, 35, 34, 66, 98, 99, 131, 132, 133, 134, 135, 136, 168, 200, 199, 199, 199, 199, 200, 
[DBG]  Path for agent 120 updated, resulting length: 42
[DBG]  Paths successfully updated.
[DBG]  (LNS.cpp) New path for agent 120: 
[DBG]  203, 204, 172, 140, 139, 107, 75, 74, 73, 72, 40, 40, 40, 40, 40, 40, 40, 40, 8, 7, 6, 5, 4, 3, 35, 34, 66, 98, 99, 131, 132, 133, 134, 135, 136, 168, 200, 199, 199, 199, 199, 200, 
[DBG]  Delta value: 0.0888889
[DBG]  Rewarding metric index = 1
[DBG]  component_weights = {6.16733e-09, 1, 2.71639e-09, 4.70959e-09}
[DBG]  opSuccess value: 1
[STAT] neighbor.sum_of_costs before recomputation: 41
[STAT] neighbor.old_sum_of_costs before recomputation: 45
[STAT] sum_of_costs before recomputation: 4301
[DBG]  Validate solution immediately after SAT success.
[WARNING] Problem after SAT: Target conflict: agent 101 (len 45) traverses target of agent 120 (len 41) at location 200 at timestep 44
[DBG]  [DEBUG] Attempting immediate repair via init_lns because problem occurred after SAT (should be applied only for conflicts...).
[DBG]  [DEBUG] Passing 150 agents to init_lns (skip=true).
[DBG]  [DEBUG] path_table contents for selected agents (neighbor.agents):
[DBG]    Agent 120 => controlling path length=42
[DBG]  hodnota skip_initial_solution=1
[DBG]  We skip initialSolution => call buildCollisionData()
[DBG]  buildCollisionData() called – skip_initial_solution case.
[DBG]  Agents.size()=150, collision_graph.size()=150
[DBG]  agent 101 => updateCollidingPairs => foundCollision
[DBG]  agent 120 => updateCollidingPairs => foundCollision
[DBG]  Conflicting agent pairs:
[DBG]  agent 101 is in conflict with agent 120
[DBG]  buildCollisionData() => sum_of_costs=4297, num_of_colliding_pairs=1
[DBG]  buildCollisionData done => sum_of_costs=4297, num_of_colliding_pairs=1
[DBG]  sum_of_cost hodnota: 4297
[DBG]  After skip/init build => iteration_stats.back(): sum_of_costs=4297, collisions=1
[DEBUG] Using default neighbor generation strategy for conflicts: 2
[DEBUG] Using default neighbor generation strategy for conflicts: 0
	InitLNS(PP): runtime = 0.00213925, iterations = 3, colliding pairs = 0, initial colliding pairs = 1, solution cost = 4282, initial solution cost = 4297, failed iterations = 0
[DBG]  init_lns->sum_of_costs after init_lns->run: 4282
[DBG]  sum_of_costs after assignment from init_lns->run: 4282
[DBG]  Recomputing sum_of_cost by dividing neighbor.sum_of_costs and neighbor.old_sum_of_costs
[STAT] sum_of_costs after recomputation: 4282
[STAT] Iteration 163
[DBG]  Random chance did not select SAT operator (r=23), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 163
[DBG]  Random chance did not select SAT operator (r=76), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 163
[DBG]  Random chance did not select SAT operator (r=45), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 163
[DBG]  Random chance did not select SAT operator (r=60), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 163
[DBG]  Random chance did not select SAT operator (r=58), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 163
[DBG]  Random chance did not select SAT operator (r=72), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 163
[DBG]  Random chance did not select SAT operator (r=31), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 163
[DBG]  Random chance did not select SAT operator (r=44), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 163
[DBG]  Random chance did not select SAT operator (r=65), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 163
[DBG]  Random chance did not select SAT operator (r=30), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 163
[DBG]  Random chance did not select SAT operator (r=42), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 163
[DBG]  Using SAT operator (destroy+repair SAT).
[DBG]  ====================
[DBG]  SAT destroy operator called.
[DBG]  SAT heuristic: 2
[DBG]  key_agent_id: 28
[DBG]  key_agent_id global path length: 44
[DBG]  Submap content (global positions):
[DBG]  530 531 532 533 534 
[DBG]  562 563 564 565 566 
[DBG]  594 595 596 597 598 
[DBG]  626 627 628 629 630 
[DBG]  658 659 660 661 662 
[DBG]  Map content with agents and obstacles:
[DBG]  . . X . . 
[DBG]  X . X . . 
[DBG]  . X A A X 
[DBG]  X A A . X 
[DBG]  A . A . X 
[DBG]  content of the map structure that we pass to the SAT solver:
[DBG]  1  1  -1  1  1  
[DBG]  -1  1  -1  1  1  
[DBG]  1  -1  1  1  -1  
[DBG]  -1  1  1  1  -1  
[DBG]  1  1  1  1  -1  
[DBG]  Identifying agents in a submap for rescheduling (when key_agent is there at the time 26):
[DBG]  Agent 3 found intervals in the sub-map:
[DBG]   [21..26]
[DBG]  Agent 3 (interval in submap: [21..26]) contains time 26, added to replan.
[DBG]  Agent 26 found intervals in the sub-map:
[DBG]   [24..29]
[DBG]  Agent 26 (interval in submap: [24..29]) contains time 26, added to replan.
[DBG]  Agent 28 found intervals in the sub-map:
[DBG]   [0..35]
[DBG]  Agent 28 (interval in submap: [0..35]) contains time 26, added to replan.
[DBG]  Agent 30 found intervals in the sub-map:
[DBG]  
[DBG]  Agent 30 is not in sub-map at time 26 (intervals: 
[DBG]  )
[DBG]  Agent 44 found intervals in the sub-map:
[DBG]   [22..27]
[DBG]  Agent 44 (interval in submap: [22..27]) contains time 26, added to replan.
[DBG]  Agent 62 found intervals in the sub-map:
[DBG]   [21..21]
[DBG]  Agent 62 is not in sub-map at time 26 (intervals: 
[DBG]  [21..21] )
[DBG]  Agent 74 found intervals in the sub-map:
[DBG]   [26..36]
[DBG]  Agent 74 (interval in submap: [26..36]) contains time 26, added to replan.
[DBG]  Agent 148 found intervals in the sub-map:
[DBG]   [24..30]
[DBG]  Agent 148 (interval in submap: [24..30]) contains time 26, added to replan.
[DBG]  Agent 3 | Start (global): 660 -> (local): (4, 2) at time 26 | Goal (global): 660 -> (local): (4, 2) at time 26
[DBG]  Agent 26 | Start (global): 597 -> (local): (2, 3) at time 26 | Goal (global): 660 -> (local): (4, 2) at time 29
[DBG]  Agent 28 | Start (global): 596 -> (local): (2, 2) at time 26 | Goal (global): 659 -> (local): (4, 1) at time 35
[DBG]  Agent 44 | Start (global): 628 -> (local): (3, 2) at time 26 | Goal (global): 660 -> (local): (4, 2) at time 27
[DBG]  Agent 74 | Start (global): 658 -> (local): (4, 0) at time 26 | Goal (global): 534 -> (local): (0, 4) at time 36
[DBG]  Agent 148 | Start (global): 627 -> (local): (3, 1) at time 26 | Goal (global): 660 -> (local): (4, 2) at time 30
[DBG]  [REPAIR] SAT destroy operator called.
[DBG]  [REPAIR] SAT operator – launching subproblem FOR OPTIMIZATION.
[DBG]  Creating local paths (sx, sy) in the submap for T_sync = 26
[DBG]    Agent 3 (global paths from T=26 to 26) has local path: (4,2) 
[DBG]    Agent 26 (global paths from T=26 to 29) has local path: (2,3) (3,3) (3,2) (4,2) 
[DBG]    Agent 28 (global paths from T=26 to 35) has local path: (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (3,2) (3,1) (4,1) 
[DBG]    Agent 44 (global paths from T=26 to 27) has local path: (3,2) (4,2) 
[DBG]    Agent 74 (global paths from T=26 to 36) has local path: (4,0) (4,1) (3,1) (3,2) (3,3) (2,3) (1,3) (1,4) (0,4) (0,4) (0,4) 
[DBG]    Agent 148 (global paths from T=26 to 30) has local path: (3,1) (3,2) (4,2) (4,1) (4,2) 
[DBG]  Checking input data for SAT solver:
[DBG]    - Number of agents to replan: 6
[DBG]  Agent 3 has the original local path length: 1 => Start (4,2), Goal (4,2)
[DBG]  Agent 26 has the original local path length: 4 => Start (2,3), Goal (4,2)
[DBG]  Agent 28 has the original local path length: 10 => Start (2,2), Goal (4,1)
[DBG]  Agent 44 has the original local path length: 2 => Start (3,2), Goal (4,2)
[DBG]  Agent 74 has the original local path length: 11 => Start (4,0), Goal (0,4)
[DBG]  Agent 148 has the original local path length: 5 => Start (3,1), Goal (4,2)
[DBG]  Start position: (4, 2), (2, 3), (2, 2), (3, 2), (4, 0), (3, 1), 
[DBG]  Goal position: (4, 2), (4, 2), (4, 1), (4, 2), (0, 4), (4, 2), 
[DBG]  SAT instance and solver created.
Currently solving
Instance name: scen
Map name: map
Encoding used: disappear_at_goal
SAT solver used: Kissat
Optimizing function: sum of costs
Number of agents: 6
Mks LB: 9
SoC LB: 23
Delta: 0
Remaining time: 300000 [ms]

[STAT] Solver returned: -1
[DBG]  SAT solver failed.
[STAT] SAT solver failed to find a valid solution.
[DBG]  ====================
[DBG]  SAT destroy operator called.
[DBG]  SAT heuristic: 2
[DBG]  key_agent_id: 28
[DBG]  key_agent_id global path length: 44
[DBG]  Submap content (global positions):
[DBG]  661 662 663 664 665 
[DBG]  693 694 695 696 697 
[DBG]  725 726 727 728 729 
[DBG]  757 758 759 760 761 
[DBG]  789 790 791 792 793 
[DBG]  Map content with agents and obstacles:
[DBG]  . X X . X 
[DBG]  X X X . . 
[DBG]  . . A . . 
[DBG]  . X A X . 
[DBG]  X . X . . 
[DBG]  content of the map structure that we pass to the SAT solver:
[DBG]  1  -1  -1  1  -1  
[DBG]  -1  -1  -1  1  1  
[DBG]  1  1  1  1  1  
[DBG]  1  -1  1  -1  1  
[DBG]  -1  1  -1  1  1  
[DBG]  Identifying agents in a submap for rescheduling (when key_agent is there at the time 43):
[DBG]  Agent 1 found intervals in the sub-map:
[DBG]   [10..15]
[DBG]  Agent 1 is not in sub-map at time 43 (intervals: 
[DBG]  [10..15] )
[DBG]  Agent 28 found intervals in the sub-map:
[DBG]   [0..17] [40..43]
[DBG]  Agent 28 (interval in submap: [40..43]) contains time 43, added to replan.
[DBG]  Agent 42 found intervals in the sub-map:
[DBG]   [40..43]
[DBG]  Agent 42 (interval in submap: [40..43]) contains time 43, added to replan.
[DBG]  Agent 28 | Start (global): 727 -> (local): (2, 2) at time 43 | Goal (global): 727 -> (local): (2, 2) at time 43
[DBG]  Agent 42 | Start (global): 759 -> (local): (3, 2) at time 43 | Goal (global): 759 -> (local): (3, 2) at time 43
[DBG]  [REPAIR] SAT destroy operator called.
[DBG]  [REPAIR] SAT operator – launching subproblem FOR OPTIMIZATION.
[DBG]  Creating local paths (sx, sy) in the submap for T_sync = 43
[DBG]    Agent 28 (global paths from T=43 to 43) has local path: (2,2) 
[DBG]    Agent 42 (global paths from T=43 to 43) has local path: (3,2) 
[DBG]  Checking input data for SAT solver:
[DBG]    - Number of agents to replan: 2
[DBG]  Agent 28 has the original local path length: 1 => Start (2,2), Goal (2,2)
[DBG]  Agent 42 has the original local path length: 1 => Start (3,2), Goal (3,2)
[DBG]  Start position: (2, 2), (3, 2), 
[DBG]  Goal position: (2, 2), (3, 2), 
[DBG]  SAT instance and solver created.
Currently solving
Instance name: scen
Map name: map
Encoding used: disappear_at_goal
SAT solver used: Kissat
Optimizing function: sum of costs
Number of agents: 2
Mks LB: 1
SoC LB: 2
Delta: 0
Remaining time: 300000 [ms]

Found plan [agents = 2] [timesteps = 1]
Agent #0 : 6 
Agent #1 : 10 

[STAT] Solver returned: 0
[DBG]  Agent (index) 28 | New local path (submap idx):
[DBG]  6 
[DBG]  Agent (index) 42 | New local path (submap idx):
[DBG]  10 
[DBG]  Update the agent path 28 | Original local length: 1 | New local length: 1
[DBG]  agent 28 t=0 => decoded (sx,sy)=(2,2) => global_id=727
[DBG]  Complete path of agent 28:
[DBG]    Original: 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 660 628 627 627 627 628 629 597 596 596 596 596 596 596 596 628 627 659 691 692 724 756 757 725 726 727 
[DBG]    New:     661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 660 628 627 627 627 628 629 597 596 596 596 596 596 596 596 628 627 659 691 692 724 756 757 725 726 727 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 660 628 627 627 627 628 629 597 596 596 596 596 596 596 596 628 627 659 691 692 724 756 757 725 726 
[DBG]    Local path (in submap): 727 
[DBG]    Suffix (out of submap): 
[DBG]  Original agent path length 28 je: 44
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 0: 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 660, 628, 627, 627, 627, 628, 629, 597, 596, 596, 596, 596, 596, 596, 596, 628, 627, 659, 691, 692, 724, 756, 757, 725, 726, 727, 
[DBG]  Path for agent 28 updated, resulting length: 44
[DBG]  Update the agent path 42 | Original local length: 1 | New local length: 1
[DBG]  agent 42 t=0 => decoded (sx,sy)=(3,2) => global_id=759
[DBG]  Complete path of agent 42:
[DBG]    Original: 224 192 193 194 226 258 258 259 291 323 355 387 419 420 421 422 422 423 424 425 426 427 428 429 430 431 463 464 496 528 529 561 593 625 657 658 659 691 692 724 725 726 727 759 
[DBG]    New:     224 192 193 194 226 258 258 259 291 323 355 387 419 420 421 422 422 423 424 425 426 427 428 429 430 431 463 464 496 528 529 561 593 625 657 658 659 691 692 724 725 726 727 759 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 224 192 193 194 226 258 258 259 291 323 355 387 419 420 421 422 422 423 424 425 426 427 428 429 430 431 463 464 496 528 529 561 593 625 657 658 659 691 692 724 725 726 727 
[DBG]    Local path (in submap): 759 
[DBG]    Suffix (out of submap): 
[DBG]  Original agent path length 42 je: 44
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 1: 224, 192, 193, 194, 226, 258, 258, 259, 291, 323, 355, 387, 419, 420, 421, 422, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 463, 464, 496, 528, 529, 561, 593, 625, 657, 658, 659, 691, 692, 724, 725, 726, 727, 759, 
[DBG]  Path for agent 42 updated, resulting length: 44
[DBG]  Paths successfully updated.
[DBG]  (LNS.cpp) New path for agent 28: 
[DBG]  661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 660, 628, 627, 627, 627, 628, 629, 597, 596, 596, 596, 596, 596, 596, 596, 628, 627, 659, 691, 692, 724, 756, 757, 725, 726, 727, 
[DBG]  (LNS.cpp) New path for agent 42: 
[DBG]  224, 192, 193, 194, 226, 258, 258, 259, 291, 323, 355, 387, 419, 420, 421, 422, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 463, 464, 496, 528, 529, 561, 593, 625, 657, 658, 659, 691, 692, 724, 725, 726, 727, 759, 
[DBG]  Delta value: 0
[DBG]  Rewarding metric index = 1
[DBG]  component_weights = {5.85896e-09, 1, 2.58057e-09, 4.47411e-09}
[DBG]  opSuccess value: 1
[STAT] neighbor.sum_of_costs before recomputation: 86
[STAT] neighbor.old_sum_of_costs before recomputation: 86
[STAT] sum_of_costs before recomputation: 4282
[DBG]  Validate solution immediately after SAT success.
[DBG]  No problems after SAT replan.
[DBG]  Recomputing sum_of_cost by dividing neighbor.sum_of_costs and neighbor.old_sum_of_costs
[STAT] sum_of_costs after recomputation: 4282
[STAT] Iteration 164
[DBG]  Using SAT operator (destroy+repair SAT).
[DBG]  ====================
[DBG]  SAT destroy operator called.
[DBG]  SAT heuristic: 2
[DBG]  key_agent_id: 28
[DBG]  key_agent_id global path length: 44
[DBG]  Submap content (global positions):
[DBG]  595 596 597 598 599 
[DBG]  627 628 629 630 631 
[DBG]  659 660 661 662 663 
[DBG]  691 692 693 694 695 
[DBG]  723 724 725 726 727 
[DBG]  Map content with agents and obstacles:
[DBG]  X . . X . 
[DBG]  . . . X . 
[DBG]  A . A X X 
[DBG]  . . X X X 
[DBG]  X A . . . 
[DBG]  content of the map structure that we pass to the SAT solver:
[DBG]  -1  1  1  -1  1  
[DBG]  1  1  1  -1  1  
[DBG]  1  1  1  -1  -1  
[DBG]  1  1  -1  -1  -1  
[DBG]  -1  1  1  1  1  
[DBG]  Identifying agents in a submap for rescheduling (when key_agent is there at the time 15):
[DBG]  Agent 28 found intervals in the sub-map:
[DBG]   [0..38] [41..43]
[DBG]  Agent 28 (interval in submap: [0..38]) contains time 15, added to replan.
[DBG]  Agent 62 found intervals in the sub-map:
[DBG]  
[DBG]  Agent 62 is not in sub-map at time 15 (intervals: 
[DBG]  )
[DBG]  Agent 70 found intervals in the sub-map:
[DBG]  
[DBG]  Agent 70 is not in sub-map at time 15 (intervals: 
[DBG]  )
[DBG]  Agent 101 found intervals in the sub-map:
[DBG]   [15..18]
[DBG]  Agent 101 (interval in submap: [15..18]) contains time 15, added to replan.
[DBG]  Agent 119 found intervals in the sub-map:
[DBG]  
[DBG]  Agent 119 is not in sub-map at time 15 (intervals: 
[DBG]  )
[DBG]  Agent 135 found intervals in the sub-map:
[DBG]   [4..4] [9..15]
[DBG]  Agent 135 (interval in submap: [9..15]) contains time 15, added to replan.
[DBG]  Agent 137 found intervals in the sub-map:
[DBG]   [9..13]
[DBG]  Agent 137 is not in sub-map at time 15 (intervals: 
[DBG]  [9..13] )
[DBG]  Agent 28 | Start (global): 661 -> (local): (2, 2) at time 15 | Goal (global): 724 -> (local): (4, 1) at time 38
[DBG]  Agent 101 | Start (global): 724 -> (local): (4, 1) at time 15 | Goal (global): 659 -> (local): (2, 0) at time 18
[DBG]  Agent 135 | Start (global): 659 -> (local): (2, 0) at time 15 | Goal (global): 659 -> (local): (2, 0) at time 15
[DBG]  [REPAIR] SAT destroy operator called.
[DBG]  [REPAIR] SAT operator – launching subproblem FOR OPTIMIZATION.
[DBG]  Creating local paths (sx, sy) in the submap for T_sync = 15
[DBG]    Agent 28 (global paths from T=15 to 38) has local path: (2,2) (2,2) (2,2) (2,1) (1,1) (1,0) (1,0) (1,0) (1,1) (1,2) (0,2) (0,1) (0,1) (0,1) (0,1) (0,1) (0,1) (0,1) (1,1) (1,0) (2,0) (3,0) (3,1) (4,1) 
[DBG]    Agent 101 (global paths from T=15 to 18) has local path: (4,1) (3,1) (2,1) (2,0) 
[DBG]    Agent 135 (global paths from T=15 to 15) has local path: (2,0) 
[DBG]  Checking input data for SAT solver:
[DBG]    - Number of agents to replan: 3
[DBG]  Agent 28 has the original local path length: 24 => Start (2,2), Goal (4,1)
[DBG]  Agent 101 has the original local path length: 4 => Start (4,1), Goal (2,0)
[DBG]  Agent 135 has the original local path length: 1 => Start (2,0), Goal (2,0)
[DBG]  Start position: (2, 2), (4, 1), (2, 0), 
[DBG]  Goal position: (4, 1), (2, 0), (2, 0), 
[DBG]  SAT instance and solver created.
Currently solving
Instance name: scen
Map name: map
Encoding used: disappear_at_goal
SAT solver used: Kissat
Optimizing function: sum of costs
Number of agents: 3
Mks LB: 4
SoC LB: 9
Delta: 0
Remaining time: 300000 [ms]

Found plan [agents = 3] [timesteps = 4]
Agent #0 : 9 8 11 12 
Agent #1 : 12 11 10 7 
Agent #2 : 7 0 0 0 

[STAT] Solver returned: 0
[DBG]  Agent (index) 28 | New local path (submap idx):
[DBG]  9 8 11 12 
[DBG]  Agent (index) 101 | New local path (submap idx):
[DBG]  12 11 10 7 
[DBG]  Agent (index) 135 | New local path (submap idx):
[DBG]  7 
[DBG]  Update the agent path 28 | Original local length: 24 | New local length: 4
[DBG]  agent 28 t=0 => decoded (sx,sy)=(2,2) => global_id=661
[DBG]  agent 28 t=1 => decoded (sx,sy)=(2,1) => global_id=660
[DBG]  agent 28 t=2 => decoded (sx,sy)=(3,1) => global_id=692
[DBG]  agent 28 t=3 => decoded (sx,sy)=(4,1) => global_id=724
[DBG]  Complete path of agent 28:
[DBG]    Original: 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 660 628 627 627 627 628 629 597 596 596 596 596 596 596 596 628 627 659 691 692 724 756 757 725 726 727 
[DBG]    New:     661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 660 692 724 756 757 725 726 727 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 
[DBG]    Local path (in submap): 661 660 692 724 756 757 725 726 727 
[DBG]    Suffix (out of submap): 
[DBG]  Original agent path length 28 je: 44
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 0: 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 660, 692, 724, 756, 757, 725, 726, 727, 
[DBG]  Path for agent 28 updated, resulting length: 24
[DBG]  Update the agent path 101 | Original local length: 4 | New local length: 4
[DBG]  agent 101 t=0 => decoded (sx,sy)=(4,1) => global_id=724
[DBG]  agent 101 t=1 => decoded (sx,sy)=(3,1) => global_id=692
[DBG]  agent 101 t=2 => decoded (sx,sy)=(3,0) => global_id=691
[DBG]  agent 101 t=3 => decoded (sx,sy)=(2,0) => global_id=659
[DBG]  Complete path of agent 101:
[DBG]    Original: 985 953 952 920 919 887 886 885 884 883 851 819 787 755 756 724 692 660 659 658 657 625 593 592 591 590 589 588 556 556 524 492 460 428 427 395 363 331 299 267 235 236 204 172 140 139 138 106 105 104 136 168 
[DBG]    New:     985 953 952 920 919 887 886 885 884 883 851 819 787 755 756 724 692 691 659 658 657 625 593 592 591 590 589 588 556 556 524 492 460 428 427 395 363 331 299 267 235 236 204 172 140 139 138 106 105 104 136 168 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 985 953 952 920 919 887 886 885 884 883 851 819 787 755 756 
[DBG]    Local path (in submap): 724 692 691 659 
[DBG]    Suffix (out of submap): 658 657 625 593 592 591 590 589 588 556 556 524 492 460 428 427 395 363 331 299 267 235 236 204 172 140 139 138 106 105 104 136 168 
[DBG]  Original agent path length 101 je: 52
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 1: 985, 953, 952, 920, 919, 887, 886, 885, 884, 883, 851, 819, 787, 755, 756, 724, 692, 691, 659, 658, 657, 625, 593, 592, 591, 590, 589, 588, 556, 556, 524, 492, 460, 428, 427, 395, 363, 331, 299, 267, 235, 236, 204, 172, 140, 139, 138, 106, 105, 104, 136, 168, 
[DBG]  Path for agent 101 updated, resulting length: 52
[DBG]  Update the agent path 135 | Original local length: 1 | New local length: 1
[DBG]  agent 135 t=0 => decoded (sx,sy)=(2,0) => global_id=659
[DBG]  Complete path of agent 135:
[DBG]    Original: 696 696 696 728 727 759 759 759 759 727 726 725 724 692 691 659 658 657 625 593 592 591 591 590 589 588 556 524 523 491 490 489 457 425 393 361 360 359 358 357 356 355 354 353 385 384 
[DBG]    New:     696 696 696 728 727 759 759 759 759 727 726 725 724 692 691 659 658 657 625 593 592 591 591 590 589 588 556 524 523 491 490 489 457 425 393 361 360 359 358 357 356 355 354 353 385 384 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 696 696 696 728 727 759 759 759 759 727 726 725 724 692 691 
[DBG]    Local path (in submap): 659 
[DBG]    Suffix (out of submap): 658 657 625 593 592 591 591 590 589 588 556 524 523 491 490 489 457 425 393 361 360 359 358 357 356 355 354 353 385 384 
[DBG]  Original agent path length 135 je: 46
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 2: 696, 696, 696, 728, 727, 759, 759, 759, 759, 727, 726, 725, 724, 692, 691, 659, 658, 657, 625, 593, 592, 591, 591, 590, 589, 588, 556, 524, 523, 491, 490, 489, 457, 425, 393, 361, 360, 359, 358, 357, 356, 355, 354, 353, 385, 384, 
[DBG]  Path for agent 135 updated, resulting length: 46
[DBG]  Paths successfully updated.
[DBG]  (LNS.cpp) New path for agent 28: 
[DBG]  661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 660, 692, 724, 756, 757, 725, 726, 727, 
[DBG]  (LNS.cpp) New path for agent 101: 
[DBG]  985, 953, 952, 920, 919, 887, 886, 885, 884, 883, 851, 819, 787, 755, 756, 724, 692, 691, 659, 658, 657, 625, 593, 592, 591, 590, 589, 588, 556, 556, 524, 492, 460, 428, 427, 395, 363, 331, 299, 267, 235, 236, 204, 172, 140, 139, 138, 106, 105, 104, 136, 168, 
[DBG]  (LNS.cpp) New path for agent 135: 
[DBG]  696, 696, 696, 728, 727, 759, 759, 759, 759, 727, 726, 725, 724, 692, 691, 659, 658, 657, 625, 593, 592, 591, 591, 590, 589, 588, 556, 524, 523, 491, 490, 489, 457, 425, 393, 361, 360, 359, 358, 357, 356, 355, 354, 353, 385, 384, 
[DBG]  Delta value: 0.143885
[DBG]  Rewarding metric index = 1
[DBG]  component_weights = {4.86589e-09, 1, 2.14317e-09, 3.71576e-09}
[DBG]  opSuccess value: 1
[STAT] neighbor.sum_of_costs before recomputation: 119
[STAT] neighbor.old_sum_of_costs before recomputation: 139
[STAT] sum_of_costs before recomputation: 4282
[DBG]  Validate solution immediately after SAT success.
[WARNING] Problem after SAT: Target conflict: agent 42 (len 43) traverses target of agent 28 (len 23) at location 727 at timestep 42
[DBG]  [DEBUG] Attempting immediate repair via init_lns because problem occurred after SAT (should be applied only for conflicts...).
[DBG]  [DEBUG] Passing 150 agents to init_lns (skip=true).
[DBG]  [DEBUG] path_table contents for selected agents (neighbor.agents):
[DBG]    Agent 28 => controlling path length=24
[DBG]    Agent 101 => controlling path length=52
[DBG]    Agent 135 => controlling path length=46
[DBG]  hodnota skip_initial_solution=1
[DBG]  We skip initialSolution => call buildCollisionData()
[DBG]  buildCollisionData() called – skip_initial_solution case.
[DBG]  Agents.size()=150, collision_graph.size()=150
[DBG]  agent 28 => updateCollidingPairs => foundCollision
[DBG]  agent 42 => updateCollidingPairs => foundCollision
[DBG]  Conflicting agent pairs:
[DBG]  agent 28 is in conflict with agent 42
[DBG]  buildCollisionData() => sum_of_costs=4262, num_of_colliding_pairs=1
[DBG]  buildCollisionData done => sum_of_costs=4262, num_of_colliding_pairs=1
[DBG]  sum_of_cost hodnota: 4262
[DBG]  After skip/init build => iteration_stats.back(): sum_of_costs=4262, collisions=1
[DEBUG] Using default neighbor generation strategy for conflicts: 0
	InitLNS(PP): runtime = 0.000980583, iterations = 2, colliding pairs = 0, initial colliding pairs = 1, solution cost = 4319, initial solution cost = 4262, failed iterations = 0
[DBG]  init_lns->sum_of_costs after init_lns->run: 4319
[DBG]  sum_of_costs after assignment from init_lns->run: 4319
[DBG]  Recomputing sum_of_cost by dividing neighbor.sum_of_costs and neighbor.old_sum_of_costs
[STAT] sum_of_costs after recomputation: 4319
[STAT] Iteration 165
[DBG]  Random chance did not select SAT operator (r=55), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 165
[DBG]  Random chance did not select SAT operator (r=38), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 165
[DBG]  Random chance did not select SAT operator (r=80), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 165
[DBG]  Using SAT operator (destroy+repair SAT).
[DBG]  ====================
[DBG]  SAT destroy operator called.
[DBG]  SAT heuristic: 2
[DBG]  key_agent_id: 28
[DBG]  key_agent_id global path length: 44
[DBG]  Submap content (global positions):
[DBG]  662 663 664 665 666 
[DBG]  694 695 696 697 698 
[DBG]  726 727 728 729 730 
[DBG]  758 759 760 761 762 
[DBG]  790 791 792 793 794 
[DBG]  Map content with agents and obstacles:
[DBG]  X X . X . 
[DBG]  X X . . X 
[DBG]  A . A A . 
[DBG]  X . X . X 
[DBG]  . X . . X 
[DBG]  content of the map structure that we pass to the SAT solver:
[DBG]  -1  -1  1  -1  1  
[DBG]  -1  -1  1  1  -1  
[DBG]  1  1  1  1  1  
[DBG]  -1  1  -1  1  -1  
[DBG]  1  -1  1  1  -1  
[DBG]  Identifying agents in a submap for rescheduling (when key_agent is there at the time 41):
[DBG]  Agent 1 found intervals in the sub-map:
[DBG]   [38..43]
[DBG]  Agent 1 (interval in submap: [38..43]) contains time 41, added to replan.
[DBG]  Agent 28 found intervals in the sub-map:
[DBG]   [34..43]
[DBG]  Agent 28 (interval in submap: [34..43]) contains time 41, added to replan.
[DBG]  Agent 42 found intervals in the sub-map:
[DBG]   [41..43]
[DBG]  Agent 42 (interval in submap: [41..43]) contains time 41, added to replan.
[DBG]  Agent 1 | Start (global): 729 -> (local): (2, 3) at time 41 | Goal (global): 728 -> (local): (2, 2) at time 43
[DBG]  Agent 28 | Start (global): 728 -> (local): (2, 2) at time 41 | Goal (global): 727 -> (local): (2, 1) at time 43
[DBG]  Agent 42 | Start (global): 726 -> (local): (2, 0) at time 41 | Goal (global): 759 -> (local): (3, 1) at time 43
[DBG]  [REPAIR] SAT destroy operator called.
[DBG]  [REPAIR] SAT operator – launching subproblem FOR OPTIMIZATION.
[DBG]  Creating local paths (sx, sy) in the submap for T_sync = 41
[DBG]    Agent 1 (global paths from T=41 to 43) has local path: (2,3) (2,3) (2,2) 
[DBG]    Agent 28 (global paths from T=41 to 43) has local path: (2,2) (2,2) (2,1) 
[DBG]    Agent 42 (global paths from T=41 to 43) has local path: (2,0) (2,1) (3,1) 
[DBG]  Checking input data for SAT solver:
[DBG]    - Number of agents to replan: 3
[DBG]  Agent 1 has the original local path length: 3 => Start (2,3), Goal (2,2)
[DBG]  Agent 28 has the original local path length: 3 => Start (2,2), Goal (2,1)
[DBG]  Agent 42 has the original local path length: 3 => Start (2,0), Goal (3,1)
[DBG]  Start position: (2, 3), (2, 2), (2, 0), 
[DBG]  Goal position: (2, 2), (2, 1), (3, 1), 
[DBG]  SAT instance and solver created.
Currently solving
Instance name: scen
Map name: map
Encoding used: disappear_at_goal
SAT solver used: Kissat
Optimizing function: sum of costs
Number of agents: 3
Mks LB: 3
SoC LB: 7
Delta: 0
Remaining time: 300000 [ms]

[STAT] Solver returned: -1
[DBG]  SAT solver failed.
[STAT] SAT solver failed to find a valid solution.
[DBG]  ====================
[DBG]  SAT destroy operator called.
[DBG]  SAT heuristic: 2
[DBG]  key_agent_id: 28
[DBG]  key_agent_id global path length: 44
[DBG]  Submap content (global positions):
[DBG]  662 663 664 665 666 
[DBG]  694 695 696 697 698 
[DBG]  726 727 728 729 730 
[DBG]  758 759 760 761 762 
[DBG]  790 791 792 793 794 
[DBG]  Map content with agents and obstacles:
[DBG]  X X . X . 
[DBG]  X X . . X 
[DBG]  . . A . . 
[DBG]  X . X . X 
[DBG]  . X . . X 
[DBG]  content of the map structure that we pass to the SAT solver:
[DBG]  -1  -1  1  -1  1  
[DBG]  -1  -1  1  1  -1  
[DBG]  1  1  1  1  1  
[DBG]  -1  1  -1  1  -1  
[DBG]  1  -1  1  1  -1  
[DBG]  Identifying agents in a submap for rescheduling (when key_agent is there at the time 37):
[DBG]  Agent 1 found intervals in the sub-map:
[DBG]   [38..43]
[DBG]  Agent 1 is not in sub-map at time 37 (intervals: 
[DBG]  [38..43] )
[DBG]  Agent 28 found intervals in the sub-map:
[DBG]   [34..43]
[DBG]  Agent 28 (interval in submap: [34..43]) contains time 37, added to replan.
[DBG]  Agent 109 found intervals in the sub-map:
[DBG]  
[DBG]  Agent 109 is not in sub-map at time 37 (intervals: 
[DBG]  )
[DBG]  Agent 111 found intervals in the sub-map:
[DBG]   [28..34]
[DBG]  Agent 111 is not in sub-map at time 37 (intervals: 
[DBG]  [28..34] )
[DBG]  Agent 28 | Start (global): 728 -> (local): (2, 2) at time 37 | Goal (global): 727 -> (local): (2, 1) at time 43
[DBG]  [REPAIR] SAT destroy operator called.
[DBG]  [REPAIR] SAT operator – launching subproblem FOR OPTIMIZATION.
[DBG]  Creating local paths (sx, sy) in the submap for T_sync = 37
[DBG]    Agent 28 (global paths from T=37 to 43) has local path: (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,1) 
[DBG]  Checking input data for SAT solver:
[DBG]    - Number of agents to replan: 1
[DBG]  Agent 28 has the original local path length: 7 => Start (2,2), Goal (2,1)
[DBG]  Start position: (2, 2), 
[DBG]  Goal position: (2, 1), 
[DBG]  SAT instance and solver created.
Currently solving
Instance name: scen
Map name: map
Encoding used: disappear_at_goal
SAT solver used: Kissat
Optimizing function: sum of costs
Number of agents: 1
Mks LB: 2
SoC LB: 2
Delta: 0
Remaining time: 300000 [ms]

Found plan [agents = 1] [timesteps = 2]
Agent #0 : 6 5 

[STAT] Solver returned: 0
[DBG]  Agent (index) 28 | New local path (submap idx):
[DBG]  6 5 
[DBG]  Update the agent path 28 | Original local length: 7 | New local length: 2
[DBG]  agent 28 t=0 => decoded (sx,sy)=(2,2) => global_id=728
[DBG]  agent 28 t=1 => decoded (sx,sy)=(2,1) => global_id=727
[DBG]  Complete path of agent 28:
[DBG]    Original: 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 660 692 724 725 726 727 728 728 728 728 728 728 728 727 
[DBG]    New:     661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 660 692 724 725 726 727 728 728 727 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 660 692 724 725 726 727 728 
[DBG]    Local path (in submap): 728 727 
[DBG]    Suffix (out of submap): 
[DBG]  Original agent path length 28 je: 44
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 0: 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 660, 692, 724, 725, 726, 727, 728, 728, 727, 
[DBG]  Path for agent 28 updated, resulting length: 39
[DBG]  Paths successfully updated.
[DBG]  (LNS.cpp) New path for agent 28: 
[DBG]  661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 660, 692, 724, 725, 726, 727, 728, 728, 727, 
[DBG]  Delta value: 0.116279
[DBG]  Rewarding metric index = 1
[DBG]  component_weights = {4.14107e-09, 1, 1.82393e-09, 3.16227e-09}
[DBG]  opSuccess value: 1
[STAT] neighbor.sum_of_costs before recomputation: 38
[STAT] neighbor.old_sum_of_costs before recomputation: 43
[STAT] sum_of_costs before recomputation: 4319
[DBG]  Validate solution immediately after SAT success.
[WARNING] Problem after SAT: Target conflict: agent 42 (len 43) traverses target of agent 28 (len 38) at location 727 at timestep 42
[DBG]  [DEBUG] Attempting immediate repair via init_lns because problem occurred after SAT (should be applied only for conflicts...).
[DBG]  [DEBUG] Passing 150 agents to init_lns (skip=true).
[DBG]  [DEBUG] path_table contents for selected agents (neighbor.agents):
[DBG]    Agent 28 => controlling path length=39
[DBG]  hodnota skip_initial_solution=1
[DBG]  We skip initialSolution => call buildCollisionData()
[DBG]  buildCollisionData() called – skip_initial_solution case.
[DBG]  Agents.size()=150, collision_graph.size()=150
[DBG]  agent 28 => updateCollidingPairs => foundCollision
[DBG]  agent 42 => updateCollidingPairs => foundCollision
[DBG]  Conflicting agent pairs:
[DBG]  agent 28 is in conflict with agent 42
[DBG]  buildCollisionData() => sum_of_costs=4314, num_of_colliding_pairs=1
[DBG]  buildCollisionData done => sum_of_costs=4314, num_of_colliding_pairs=1
[DBG]  sum_of_cost hodnota: 4314
[DBG]  After skip/init build => iteration_stats.back(): sum_of_costs=4314, collisions=1
[DEBUG] Using default neighbor generation strategy for conflicts: 0
	InitLNS(PP): runtime = 0.00118033, iterations = 2, colliding pairs = 0, initial colliding pairs = 1, solution cost = 4289, initial solution cost = 4314, failed iterations = 0
[DBG]  init_lns->sum_of_costs after init_lns->run: 4289
[DBG]  sum_of_costs after assignment from init_lns->run: 4289
[DBG]  Recomputing sum_of_cost by dividing neighbor.sum_of_costs and neighbor.old_sum_of_costs
[STAT] sum_of_costs after recomputation: 4289
[STAT] Iteration 166
[DBG]  Using SAT operator (destroy+repair SAT).
[DBG]  ====================
[DBG]  SAT destroy operator called.
[DBG]  SAT heuristic: 2
[DBG]  key_agent_id: 28
[DBG]  key_agent_id global path length: 44
[DBG]  Submap content (global positions):
[DBG]  595 596 597 598 599 
[DBG]  627 628 629 630 631 
[DBG]  659 660 661 662 663 
[DBG]  691 692 693 694 695 
[DBG]  723 724 725 726 727 
[DBG]  Map content with agents and obstacles:
[DBG]  X . . X . 
[DBG]  . . . X . 
[DBG]  . . A X X 
[DBG]  . A X X X 
[DBG]  X . . . . 
[DBG]  content of the map structure that we pass to the SAT solver:
[DBG]  -1  1  1  -1  1  
[DBG]  1  1  1  -1  1  
[DBG]  1  1  1  -1  -1  
[DBG]  1  1  -1  -1  -1  
[DBG]  -1  1  1  1  1  
[DBG]  Identifying agents in a submap for rescheduling (when key_agent is there at the time 16):
[DBG]  Agent 28 found intervals in the sub-map:
[DBG]   [0..32] [41..43]
[DBG]  Agent 28 (interval in submap: [0..32]) contains time 16, added to replan.
[DBG]  Agent 30 found intervals in the sub-map:
[DBG]  
[DBG]  Agent 30 is not in sub-map at time 16 (intervals: 
[DBG]  )
[DBG]  Agent 62 found intervals in the sub-map:
[DBG]  
[DBG]  Agent 62 is not in sub-map at time 16 (intervals: 
[DBG]  )
[DBG]  Agent 70 found intervals in the sub-map:
[DBG]  
[DBG]  Agent 70 is not in sub-map at time 16 (intervals: 
[DBG]  )
[DBG]  Agent 74 found intervals in the sub-map:
[DBG]   [27..31]
[DBG]  Agent 74 is not in sub-map at time 16 (intervals: 
[DBG]  [27..31] )
[DBG]  Agent 86 found intervals in the sub-map:
[DBG]   [10..14]
[DBG]  Agent 86 is not in sub-map at time 16 (intervals: 
[DBG]  [10..14] )
[DBG]  Agent 101 found intervals in the sub-map:
[DBG]   [15..18]
[DBG]  Agent 101 (interval in submap: [15..18]) contains time 16, added to replan.
[DBG]  Agent 137 found intervals in the sub-map:
[DBG]   [9..13]
[DBG]  Agent 137 is not in sub-map at time 16 (intervals: 
[DBG]  [9..13] )
[DBG]  Agent 28 | Start (global): 661 -> (local): (2, 2) at time 16 | Goal (global): 724 -> (local): (4, 1) at time 32
[DBG]  Agent 101 | Start (global): 692 -> (local): (3, 1) at time 16 | Goal (global): 659 -> (local): (2, 0) at time 18
[DBG]  [REPAIR] SAT destroy operator called.
[DBG]  [REPAIR] SAT operator – launching subproblem FOR OPTIMIZATION.
[DBG]  Creating local paths (sx, sy) in the submap for T_sync = 16
[DBG]    Agent 28 (global paths from T=16 to 32) has local path: (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,1) (3,1) (4,1) 
[DBG]    Agent 101 (global paths from T=16 to 18) has local path: (3,1) (3,0) (2,0) 
[DBG]  Checking input data for SAT solver:
[DBG]    - Number of agents to replan: 2
[DBG]  Agent 28 has the original local path length: 17 => Start (2,2), Goal (4,1)
[DBG]  Agent 101 has the original local path length: 3 => Start (3,1), Goal (2,0)
[DBG]  Start position: (2, 2), (3, 1), 
[DBG]  Goal position: (4, 1), (2, 0), 
[DBG]  SAT instance and solver created.
Currently solving
Instance name: scen
Map name: map
Encoding used: disappear_at_goal
SAT solver used: Kissat
Optimizing function: sum of costs
Number of agents: 2
Mks LB: 4
SoC LB: 7
Delta: 0
Remaining time: 300000 [ms]

Found plan [agents = 2] [timesteps = 4]
Agent #0 : 9 8 11 12 
Agent #1 : 11 10 7 0 

[STAT] Solver returned: 0
[DBG]  Agent (index) 28 | New local path (submap idx):
[DBG]  9 8 11 12 
[DBG]  Agent (index) 101 | New local path (submap idx):
[DBG]  11 10 7 
[DBG]  Update the agent path 28 | Original local length: 17 | New local length: 4
[DBG]  agent 28 t=0 => decoded (sx,sy)=(2,2) => global_id=661
[DBG]  agent 28 t=1 => decoded (sx,sy)=(2,1) => global_id=660
[DBG]  agent 28 t=2 => decoded (sx,sy)=(3,1) => global_id=692
[DBG]  agent 28 t=3 => decoded (sx,sy)=(4,1) => global_id=724
[DBG]  Complete path of agent 28:
[DBG]    Original: 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 660 692 724 756 757 757 757 757 757 757 757 725 726 727 
[DBG]    New:     661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 660 692 724 756 757 757 757 757 757 757 757 725 726 727 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 
[DBG]    Local path (in submap): 661 660 692 724 756 757 757 757 757 757 757 757 725 726 727 
[DBG]    Suffix (out of submap): 
[DBG]  Original agent path length 28 je: 44
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 0: 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 660, 692, 724, 756, 757, 757, 757, 757, 757, 757, 757, 725, 726, 727, 
[DBG]  Path for agent 28 updated, resulting length: 31
[DBG]  Update the agent path 101 | Original local length: 3 | New local length: 3
[DBG]  agent 101 t=0 => decoded (sx,sy)=(3,1) => global_id=692
[DBG]  agent 101 t=1 => decoded (sx,sy)=(3,0) => global_id=691
[DBG]  agent 101 t=2 => decoded (sx,sy)=(2,0) => global_id=659
[DBG]  Complete path of agent 101:
[DBG]    Original: 985 953 952 920 919 887 886 885 884 883 851 819 787 755 756 724 692 691 659 658 657 625 593 592 591 590 589 588 556 556 524 492 460 428 427 395 363 331 299 267 235 236 204 172 140 139 138 106 105 104 136 168 
[DBG]    New:     985 953 952 920 919 887 886 885 884 883 851 819 787 755 756 724 692 691 659 658 657 625 593 592 591 590 589 588 556 556 524 492 460 428 427 395 363 331 299 267 235 236 204 172 140 139 138 106 105 104 136 168 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 985 953 952 920 919 887 886 885 884 883 851 819 787 755 756 724 
[DBG]    Local path (in submap): 692 691 659 
[DBG]    Suffix (out of submap): 658 657 625 593 592 591 590 589 588 556 556 524 492 460 428 427 395 363 331 299 267 235 236 204 172 140 139 138 106 105 104 136 168 
[DBG]  Original agent path length 101 je: 52
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 1: 985, 953, 952, 920, 919, 887, 886, 885, 884, 883, 851, 819, 787, 755, 756, 724, 692, 691, 659, 658, 657, 625, 593, 592, 591, 590, 589, 588, 556, 556, 524, 492, 460, 428, 427, 395, 363, 331, 299, 267, 235, 236, 204, 172, 140, 139, 138, 106, 105, 104, 136, 168, 
[DBG]  Path for agent 101 updated, resulting length: 52
[DBG]  Paths successfully updated.
[DBG]  (LNS.cpp) New path for agent 28: 
[DBG]  661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 660, 692, 724, 756, 757, 757, 757, 757, 757, 757, 757, 725, 726, 727, 
[DBG]  (LNS.cpp) New path for agent 101: 
[DBG]  985, 953, 952, 920, 919, 887, 886, 885, 884, 883, 851, 819, 787, 755, 756, 724, 692, 691, 659, 658, 657, 625, 593, 592, 591, 590, 589, 588, 556, 556, 524, 492, 460, 428, 427, 395, 363, 331, 299, 267, 235, 236, 204, 172, 140, 139, 138, 106, 105, 104, 136, 168, 
[DBG]  Delta value: 0.138298
[DBG]  Rewarding metric index = 1
[DBG]  component_weights = {3.45606e-09, 1, 1.52221e-09, 2.63916e-09}
[DBG]  opSuccess value: 1
[STAT] neighbor.sum_of_costs before recomputation: 81
[STAT] neighbor.old_sum_of_costs before recomputation: 94
[STAT] sum_of_costs before recomputation: 4289
[DBG]  Validate solution immediately after SAT success.
[WARNING] Problem after SAT: Target conflict: agent 42 (len 43) traverses target of agent 28 (len 30) at location 727 at timestep 42
[DBG]  [DEBUG] Attempting immediate repair via init_lns because problem occurred after SAT (should be applied only for conflicts...).
[DBG]  [DEBUG] Passing 150 agents to init_lns (skip=true).
[DBG]  [DEBUG] path_table contents for selected agents (neighbor.agents):
[DBG]    Agent 28 => controlling path length=31
[DBG]    Agent 101 => controlling path length=52
[DBG]  hodnota skip_initial_solution=1
[DBG]  We skip initialSolution => call buildCollisionData()
[DBG]  buildCollisionData() called – skip_initial_solution case.
[DBG]  Agents.size()=150, collision_graph.size()=150
[DBG]  agent 28 => updateCollidingPairs => foundCollision
[DBG]  agent 42 => updateCollidingPairs => foundCollision
[DBG]  Conflicting agent pairs:
[DBG]  agent 28 is in conflict with agent 42
[DBG]  buildCollisionData() => sum_of_costs=4276, num_of_colliding_pairs=1
[DBG]  buildCollisionData done => sum_of_costs=4276, num_of_colliding_pairs=1
[DBG]  sum_of_cost hodnota: 4276
[DBG]  After skip/init build => iteration_stats.back(): sum_of_costs=4276, collisions=1
[DEBUG] Using default neighbor generation strategy for conflicts: 0
	InitLNS(PP): runtime = 0.000536125, iterations = 2, colliding pairs = 0, initial colliding pairs = 1, solution cost = 4289, initial solution cost = 4276, failed iterations = 0
[DBG]  init_lns->sum_of_costs after init_lns->run: 4289
[DBG]  sum_of_costs after assignment from init_lns->run: 4289
[DBG]  Recomputing sum_of_cost by dividing neighbor.sum_of_costs and neighbor.old_sum_of_costs
[STAT] sum_of_costs after recomputation: 4289
[STAT] Iteration 167
[DBG]  Random chance did not select SAT operator (r=78), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 167
[DBG]  Random chance did not select SAT operator (r=15), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 167
[DBG]  Random chance did not select SAT operator (r=42), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 167
[DBG]  Random chance did not select SAT operator (r=27), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 167
[DBG]  Using SAT operator (destroy+repair SAT).
[DBG]  ====================
[DBG]  SAT destroy operator called.
[DBG]  SAT heuristic: 2
[DBG]  key_agent_id: 28
[DBG]  key_agent_id global path length: 44
[DBG]  Submap content (global positions):
[DBG]  595 596 597 598 599 
[DBG]  627 628 629 630 631 
[DBG]  659 660 661 662 663 
[DBG]  691 692 693 694 695 
[DBG]  723 724 725 726 727 
[DBG]  Map content with agents and obstacles:
[DBG]  X . . X . 
[DBG]  . A . X . 
[DBG]  . A A X X 
[DBG]  . . X X X 
[DBG]  X A . . . 
[DBG]  content of the map structure that we pass to the SAT solver:
[DBG]  -1  1  1  -1  1  
[DBG]  1  1  1  -1  1  
[DBG]  1  1  1  -1  -1  
[DBG]  1  1  -1  -1  -1  
[DBG]  -1  1  1  1  1  
[DBG]  Identifying agents in a submap for rescheduling (when key_agent is there at the time 29):
[DBG]  Agent 3 found intervals in the sub-map:
[DBG]   [23..28]
[DBG]  Agent 3 is not in sub-map at time 29 (intervals: 
[DBG]  [23..28] )
[DBG]  Agent 26 found intervals in the sub-map:
[DBG]   [26..31]
[DBG]  Agent 26 (interval in submap: [26..31]) contains time 29, added to replan.
[DBG]  Agent 28 found intervals in the sub-map:
[DBG]   [0..39] [41..43]
[DBG]  Agent 28 (interval in submap: [0..39]) contains time 29, added to replan.
[DBG]  Agent 44 found intervals in the sub-map:
[DBG]   [24..29]
[DBG]  Agent 44 (interval in submap: [24..29]) contains time 29, added to replan.
[DBG]  Agent 74 found intervals in the sub-map:
[DBG]   [27..31]
[DBG]  Agent 74 (interval in submap: [27..31]) contains time 29, added to replan.
[DBG]  Agent 148 found intervals in the sub-map:
[DBG]   [35..39]
[DBG]  Agent 148 is not in sub-map at time 29 (intervals: 
[DBG]  [35..39] )
[DBG]  Agent 26 | Start (global): 660 -> (local): (2, 1) at time 29 | Goal (global): 724 -> (local): (4, 1) at time 31
[DBG]  Agent 28 | Start (global): 661 -> (local): (2, 2) at time 29 | Goal (global): 725 -> (local): (4, 2) at time 39
[DBG]  Agent 44 | Start (global): 724 -> (local): (4, 1) at time 29 | Goal (global): 724 -> (local): (4, 1) at time 29
[DBG]  Agent 74 | Start (global): 628 -> (local): (1, 1) at time 29 | Goal (global): 597 -> (local): (0, 2) at time 31
[DBG]  [REPAIR] SAT destroy operator called.
[DBG]  [REPAIR] SAT operator – launching subproblem FOR OPTIMIZATION.
[DBG]  Creating local paths (sx, sy) in the submap for T_sync = 29
[DBG]    Agent 26 (global paths from T=29 to 31) has local path: (2,1) (3,1) (4,1) 
[DBG]    Agent 28 (global paths from T=29 to 39) has local path: (2,2) (2,1) (2,0) (3,0) (3,0) (3,0) (3,0) (3,0) (3,1) (4,1) (4,2) 
[DBG]    Agent 44 (global paths from T=29 to 29) has local path: (4,1) 
[DBG]    Agent 74 (global paths from T=29 to 31) has local path: (1,1) (1,2) (0,2) 
[DBG]  Checking input data for SAT solver:
[DBG]    - Number of agents to replan: 4
[DBG]  Agent 26 has the original local path length: 3 => Start (2,1), Goal (4,1)
[DBG]  Agent 28 has the original local path length: 11 => Start (2,2), Goal (4,2)
[DBG]  Agent 44 has the original local path length: 1 => Start (4,1), Goal (4,1)
[DBG]  Agent 74 has the original local path length: 3 => Start (1,1), Goal (0,2)
[DBG]  Start position: (2, 1), (2, 2), (4, 1), (1, 1), 
[DBG]  Goal position: (4, 1), (4, 2), (4, 1), (0, 2), 
[DBG]  SAT instance and solver created.
Currently solving
Instance name: scen
Map name: map
Encoding used: disappear_at_goal
SAT solver used: Kissat
Optimizing function: sum of costs
Number of agents: 4
Mks LB: 5
SoC LB: 12
Delta: 0
Remaining time: 300000 [ms]

Vertex conflict! Agents 0, 2, timestep 3, location 0
Swapping conflict! Agents 0, 2, timestep 3, edge (0,0)
Vertex conflict! Agents 0, 2, timestep 4, location 0
Vertex conflict! Agents 0, 3, timestep 3, location 0
Swapping conflict! Agents 0, 3, timestep 3, edge (0,0)
Vertex conflict! Agents 0, 3, timestep 4, location 0
Vertex conflict! Agents 2, 3, timestep 3, location 0
Swapping conflict! Agents 2, 3, timestep 3, edge (0,0)
Vertex conflict! Agents 2, 3, timestep 4, location 0
Found plan [agents = 4] [timesteps = 5]
Agent #0 : 8 11 12 0 0 
Agent #1 : 9 8 11 12 13 
Agent #2 : 12 0 0 0 0 
Agent #3 : 4 5 1 0 0 

[STAT] Solver returned: 0
[DBG]  Agent (index) 26 | New local path (submap idx):
[DBG]  8 11 12 
[DBG]  Agent (index) 28 | New local path (submap idx):
[DBG]  9 8 11 12 13 
[DBG]  Agent (index) 44 | New local path (submap idx):
[DBG]  12 
[DBG]  Agent (index) 74 | New local path (submap idx):
[DBG]  4 5 1 
[DBG]  Update the agent path 26 | Original local length: 3 | New local length: 3
[DBG]  agent 26 t=0 => decoded (sx,sy)=(2,1) => global_id=660
[DBG]  agent 26 t=1 => decoded (sx,sy)=(3,1) => global_id=692
[DBG]  agent 26 t=2 => decoded (sx,sy)=(4,1) => global_id=724
[DBG]  Complete path of agent 26:
[DBG]    Original: 13 14 46 47 79 80 81 82 83 115 147 179 180 212 244 276 308 340 341 373 405 437 469 501 533 565 597 629 628 660 692 724 756 755 
[DBG]    New:     13 14 46 47 79 80 81 82 83 115 147 179 180 212 244 276 308 340 341 373 405 437 469 501 533 565 597 629 628 660 692 724 756 755 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 13 14 46 47 79 80 81 82 83 115 147 179 180 212 244 276 308 340 341 373 405 437 469 501 533 565 597 629 628 
[DBG]    Local path (in submap): 660 692 724 
[DBG]    Suffix (out of submap): 756 755 
[DBG]  Original agent path length 26 je: 34
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 0: 13, 14, 46, 47, 79, 80, 81, 82, 83, 115, 147, 179, 180, 212, 244, 276, 308, 340, 341, 373, 405, 437, 469, 501, 533, 565, 597, 629, 628, 660, 692, 724, 756, 755, 
[DBG]  Path for agent 26 updated, resulting length: 34
[DBG]  Update the agent path 28 | Original local length: 11 | New local length: 5
[DBG]  agent 28 t=0 => decoded (sx,sy)=(2,2) => global_id=661
[DBG]  agent 28 t=1 => decoded (sx,sy)=(2,1) => global_id=660
[DBG]  agent 28 t=2 => decoded (sx,sy)=(3,1) => global_id=692
[DBG]  agent 28 t=3 => decoded (sx,sy)=(4,1) => global_id=724
[DBG]  agent 28 t=4 => decoded (sx,sy)=(4,2) => global_id=725
[DBG]  Complete path of agent 28:
[DBG]    Original: 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 660 659 691 691 691 691 691 692 724 725 757 725 726 727 
[DBG]    New:     661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 660 692 724 725 757 725 726 727 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 
[DBG]    Local path (in submap): 661 660 692 724 725 757 725 726 727 
[DBG]    Suffix (out of submap): 
[DBG]  Original agent path length 28 je: 44
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 1: 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 660, 692, 724, 725, 757, 725, 726, 727, 
[DBG]  Path for agent 28 updated, resulting length: 38
[DBG]  Update the agent path 44 | Original local length: 1 | New local length: 1
[DBG]  agent 44 t=0 => decoded (sx,sy)=(4,1) => global_id=724
[DBG]  Complete path of agent 44:
[DBG]    Original: 156 124 124 123 122 154 153 185 184 183 215 247 279 278 277 309 341 373 405 437 469 501 533 565 597 596 628 660 692 724 756 788 820 819 818 850 882 881 880 848 
[DBG]    New:     156 124 124 123 122 154 153 185 184 183 215 247 279 278 277 309 341 373 405 437 469 501 533 565 597 596 628 660 692 724 756 788 820 819 818 850 882 881 880 848 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 156 124 124 123 122 154 153 185 184 183 215 247 279 278 277 309 341 373 405 437 469 501 533 565 597 596 628 660 692 
[DBG]    Local path (in submap): 724 
[DBG]    Suffix (out of submap): 756 788 820 819 818 850 882 881 880 848 
[DBG]  Original agent path length 44 je: 40
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 2: 156, 124, 124, 123, 122, 154, 153, 185, 184, 183, 215, 247, 279, 278, 277, 309, 341, 373, 405, 437, 469, 501, 533, 565, 597, 596, 628, 660, 692, 724, 756, 788, 820, 819, 818, 850, 882, 881, 880, 848, 
[DBG]  Path for agent 44 updated, resulting length: 40
[DBG]  Update the agent path 74 | Original local length: 3 | New local length: 3
[DBG]  agent 74 t=0 => decoded (sx,sy)=(1,1) => global_id=628
[DBG]  agent 74 t=1 => decoded (sx,sy)=(1,2) => global_id=629
[DBG]  agent 74 t=2 => decoded (sx,sy)=(0,2) => global_id=597
[DBG]  Complete path of agent 74:
[DBG]    Original: 752 752 752 752 752 752 752 752 752 752 752 752 752 752 752 751 751 751 750 718 718 719 687 688 689 657 658 659 627 628 629 597 565 566 534 534 534 502 503 504 505 504 
[DBG]    New:     752 752 752 752 752 752 752 752 752 752 752 752 752 752 752 751 751 751 750 718 718 719 687 688 689 657 658 659 627 628 629 597 565 566 534 534 534 502 503 504 505 504 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 752 752 752 752 752 752 752 752 752 752 752 752 752 752 752 751 751 751 750 718 718 719 687 688 689 657 658 659 627 
[DBG]    Local path (in submap): 628 629 597 
[DBG]    Suffix (out of submap): 565 566 534 534 534 502 503 504 505 504 
[DBG]  Original agent path length 74 je: 42
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 3: 752, 752, 752, 752, 752, 752, 752, 752, 752, 752, 752, 752, 752, 752, 752, 751, 751, 751, 750, 718, 718, 719, 687, 688, 689, 657, 658, 659, 627, 628, 629, 597, 565, 566, 534, 534, 534, 502, 503, 504, 505, 504, 
[DBG]  Path for agent 74 updated, resulting length: 42
[DBG]  Paths successfully updated.
[DBG]  (LNS.cpp) New path for agent 26: 
[DBG]  13, 14, 46, 47, 79, 80, 81, 82, 83, 115, 147, 179, 180, 212, 244, 276, 308, 340, 341, 373, 405, 437, 469, 501, 533, 565, 597, 629, 628, 660, 692, 724, 756, 755, 
[DBG]  (LNS.cpp) New path for agent 28: 
[DBG]  661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 660, 692, 724, 725, 757, 725, 726, 727, 
[DBG]  (LNS.cpp) New path for agent 44: 
[DBG]  156, 124, 124, 123, 122, 154, 153, 185, 184, 183, 215, 247, 279, 278, 277, 309, 341, 373, 405, 437, 469, 501, 533, 565, 597, 596, 628, 660, 692, 724, 756, 788, 820, 819, 818, 850, 882, 881, 880, 848, 
[DBG]  (LNS.cpp) New path for agent 74: 
[DBG]  752, 752, 752, 752, 752, 752, 752, 752, 752, 752, 752, 752, 752, 752, 752, 751, 751, 751, 750, 718, 718, 719, 687, 688, 689, 657, 658, 659, 627, 628, 629, 597, 565, 566, 534, 534, 534, 502, 503, 504, 505, 504, 
[DBG]  Delta value: 0.0384615
[DBG]  Rewarding metric index = 1
[DBG]  component_weights = {3.16165e-09, 1, 1.39254e-09, 2.41435e-09}
[DBG]  opSuccess value: 1
[STAT] neighbor.sum_of_costs before recomputation: 150
[STAT] neighbor.old_sum_of_costs before recomputation: 156
[STAT] sum_of_costs before recomputation: 4289
[DBG]  Validate solution immediately after SAT success.
[WARNING] Problem after SAT: Target conflict: agent 42 (len 43) traverses target of agent 28 (len 37) at location 727 at timestep 42
[DBG]  [DEBUG] Attempting immediate repair via init_lns because problem occurred after SAT (should be applied only for conflicts...).
[DBG]  [DEBUG] Passing 150 agents to init_lns (skip=true).
[DBG]  [DEBUG] path_table contents for selected agents (neighbor.agents):
[DBG]    Agent 26 => controlling path length=34
[DBG]    Agent 28 => controlling path length=38
[DBG]    Agent 44 => controlling path length=40
[DBG]    Agent 74 => controlling path length=42
[DBG]  hodnota skip_initial_solution=1
[DBG]  We skip initialSolution => call buildCollisionData()
[DBG]  buildCollisionData() called – skip_initial_solution case.
[DBG]  Agents.size()=150, collision_graph.size()=150
[DBG]  agent 28 => updateCollidingPairs => foundCollision
[DBG]  agent 42 => updateCollidingPairs => foundCollision
[DBG]  Conflicting agent pairs:
[DBG]  agent 28 is in conflict with agent 42
[DBG]  buildCollisionData() => sum_of_costs=4283, num_of_colliding_pairs=1
[DBG]  buildCollisionData done => sum_of_costs=4283, num_of_colliding_pairs=1
[DBG]  sum_of_cost hodnota: 4283
[DBG]  After skip/init build => iteration_stats.back(): sum_of_costs=4283, collisions=1
[DEBUG] Using default neighbor generation strategy for conflicts: 2
[DEBUG] Using default neighbor generation strategy for conflicts: 0
	InitLNS(PP): runtime = 0.00281079, iterations = 3, colliding pairs = 0, initial colliding pairs = 1, solution cost = 4289, initial solution cost = 4283, failed iterations = 0
[DBG]  init_lns->sum_of_costs after init_lns->run: 4289
[DBG]  sum_of_costs after assignment from init_lns->run: 4289
[DBG]  Recomputing sum_of_cost by dividing neighbor.sum_of_costs and neighbor.old_sum_of_costs
[STAT] sum_of_costs after recomputation: 4289
[STAT] Iteration 168
[DBG]  Random chance did not select SAT operator (r=78), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 168
[DBG]  Random chance did not select SAT operator (r=11), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 168
[DBG]  Random chance did not select SAT operator (r=25), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 168
[DBG]  Random chance did not select SAT operator (r=56), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 168
[DBG]  Random chance did not select SAT operator (r=50), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 168
[DBG]  Using SAT operator (destroy+repair SAT).
[DBG]  ====================
[DBG]  SAT destroy operator called.
[DBG]  SAT heuristic: 2
[DBG]  key_agent_id: 28
[DBG]  key_agent_id global path length: 44
[DBG]  Submap content (global positions):
[DBG]  595 596 597 598 599 
[DBG]  627 628 629 630 631 
[DBG]  659 660 661 662 663 
[DBG]  691 692 693 694 695 
[DBG]  723 724 725 726 727 
[DBG]  Map content with agents and obstacles:
[DBG]  X . A X . 
[DBG]  . A . X . 
[DBG]  . A A X X 
[DBG]  . A X X X 
[DBG]  X A . . . 
[DBG]  content of the map structure that we pass to the SAT solver:
[DBG]  -1  1  1  -1  1  
[DBG]  1  1  1  -1  1  
[DBG]  1  1  1  -1  -1  
[DBG]  1  1  -1  -1  -1  
[DBG]  -1  1  1  1  1  
[DBG]  Identifying agents in a submap for rescheduling (when key_agent is there at the time 26):
[DBG]  Agent 3 found intervals in the sub-map:
[DBG]   [23..28]
[DBG]  Agent 3 (interval in submap: [23..28]) contains time 26, added to replan.
[DBG]  Agent 11 found intervals in the sub-map:
[DBG]  
[DBG]  Agent 11 is not in sub-map at time 26 (intervals: 
[DBG]  )
[DBG]  Agent 26 found intervals in the sub-map:
[DBG]   [26..31]
[DBG]  Agent 26 (interval in submap: [26..31]) contains time 26, added to replan.
[DBG]  Agent 28 found intervals in the sub-map:
[DBG]   [0..39] [41..43]
[DBG]  Agent 28 (interval in submap: [0..39]) contains time 26, added to replan.
[DBG]  Agent 44 found intervals in the sub-map:
[DBG]   [24..29]
[DBG]  Agent 44 (interval in submap: [24..29]) contains time 26, added to replan.
[DBG]  Agent 45 found intervals in the sub-map:
[DBG]   [21..26]
[DBG]  Agent 45 (interval in submap: [21..26]) contains time 26, added to replan.
[DBG]  Agent 53 found intervals in the sub-map:
[DBG]   [22..27]
[DBG]  Agent 53 (interval in submap: [22..27]) contains time 26, added to replan.
[DBG]  Agent 148 found intervals in the sub-map:
[DBG]   [35..39]
[DBG]  Agent 148 is not in sub-map at time 26 (intervals: 
[DBG]  [35..39] )
[DBG]  Agent 3 | Start (global): 660 -> (local): (2, 1) at time 26 | Goal (global): 724 -> (local): (4, 1) at time 28
[DBG]  Agent 26 | Start (global): 597 -> (local): (0, 2) at time 26 | Goal (global): 724 -> (local): (4, 1) at time 31
[DBG]  Agent 28 | Start (global): 661 -> (local): (2, 2) at time 26 | Goal (global): 725 -> (local): (4, 2) at time 39
[DBG]  Agent 44 | Start (global): 628 -> (local): (1, 1) at time 26 | Goal (global): 724 -> (local): (4, 1) at time 29
[DBG]  Agent 45 | Start (global): 724 -> (local): (4, 1) at time 26 | Goal (global): 724 -> (local): (4, 1) at time 26
[DBG]  Agent 53 | Start (global): 692 -> (local): (3, 1) at time 26 | Goal (global): 724 -> (local): (4, 1) at time 27
[DBG]  [REPAIR] SAT destroy operator called.
[DBG]  [REPAIR] SAT operator – launching subproblem FOR OPTIMIZATION.
[DBG]  Creating local paths (sx, sy) in the submap for T_sync = 26
[DBG]    Agent 3 (global paths from T=26 to 28) has local path: (2,1) (3,1) (4,1) 
[DBG]    Agent 26 (global paths from T=26 to 31) has local path: (0,2) (1,2) (1,1) (2,1) (3,1) (4,1) 
[DBG]    Agent 28 (global paths from T=26 to 39) has local path: (2,2) (2,2) (2,2) (2,2) (2,1) (2,0) (3,0) (3,0) (3,0) (3,0) (3,0) (3,1) (4,1) (4,2) 
[DBG]    Agent 44 (global paths from T=26 to 29) has local path: (1,1) (2,1) (3,1) (4,1) 
[DBG]    Agent 45 (global paths from T=26 to 26) has local path: (4,1) 
[DBG]    Agent 53 (global paths from T=26 to 27) has local path: (3,1) (4,1) 
[DBG]  Checking input data for SAT solver:
[DBG]    - Number of agents to replan: 6
[DBG]  Agent 3 has the original local path length: 3 => Start (2,1), Goal (4,1)
[DBG]  Agent 26 has the original local path length: 6 => Start (0,2), Goal (4,1)
[DBG]  Agent 28 has the original local path length: 14 => Start (2,2), Goal (4,2)
[DBG]  Agent 44 has the original local path length: 4 => Start (1,1), Goal (4,1)
[DBG]  Agent 45 has the original local path length: 1 => Start (4,1), Goal (4,1)
[DBG]  Agent 53 has the original local path length: 2 => Start (3,1), Goal (4,1)
[DBG]  Start position: (2, 1), (0, 2), (2, 2), (1, 1), (4, 1), (3, 1), 
[DBG]  Goal position: (4, 1), (4, 1), (4, 2), (4, 1), (4, 1), (4, 1), 
[DBG]  SAT instance and solver created.
Currently solving
Instance name: scen
Map name: map
Encoding used: disappear_at_goal
SAT solver used: Kissat
Optimizing function: sum of costs
Number of agents: 6
Mks LB: 6
SoC LB: 21
Delta: 0
Remaining time: 300000 [ms]

[STAT] Solver returned: -1
[DBG]  SAT solver failed.
[STAT] SAT solver failed to find a valid solution.
[DBG]  ====================
[DBG]  SAT destroy operator called.
[DBG]  SAT heuristic: 2
[DBG]  key_agent_id: 28
[DBG]  key_agent_id global path length: 44
[DBG]  Submap content (global positions):
[DBG]  593 594 595 596 597 
[DBG]  625 626 627 628 629 
[DBG]  657 658 659 660 661 
[DBG]  689 690 691 692 693 
[DBG]  721 722 723 724 725 
[DBG]  Map content with agents and obstacles:
[DBG]  A . X . A 
[DBG]  . X A . . 
[DBG]  . . A . . 
[DBG]  . X . . X 
[DBG]  . . X A . 
[DBG]  content of the map structure that we pass to the SAT solver:
[DBG]  1  1  -1  1  1  
[DBG]  1  -1  1  1  1  
[DBG]  1  1  1  1  1  
[DBG]  1  -1  1  1  -1  
[DBG]  1  1  -1  1  1  
[DBG]  Identifying agents in a submap for rescheduling (when key_agent is there at the time 31):
[DBG]  Agent 3 found intervals in the sub-map:
[DBG]   [23..28]
[DBG]  Agent 3 is not in sub-map at time 31 (intervals: 
[DBG]  [23..28] )
[DBG]  Agent 26 found intervals in the sub-map:
[DBG]   [26..31]
[DBG]  Agent 26 (interval in submap: [26..31]) contains time 31, added to replan.
[DBG]  Agent 28 found intervals in the sub-map:
[DBG]   [0..39] [41..41]
[DBG]  Agent 28 (interval in submap: [0..39]) contains time 31, added to replan.
[DBG]  Agent 42 found intervals in the sub-map:
[DBG]   [32..40]
[DBG]  Agent 42 is not in sub-map at time 31 (intervals: 
[DBG]  [32..40] )
[DBG]  Agent 44 found intervals in the sub-map:
[DBG]   [24..29]
[DBG]  Agent 44 is not in sub-map at time 31 (intervals: 
[DBG]  [24..29] )
[DBG]  Agent 65 found intervals in the sub-map:
[DBG]   [31..31]
[DBG]  Agent 65 (interval in submap: [31..31]) contains time 31, added to replan.
[DBG]  Agent 74 found intervals in the sub-map:
[DBG]   [24..31]
[DBG]  Agent 74 (interval in submap: [24..31]) contains time 31, added to replan.
[DBG]  Agent 109 found intervals in the sub-map:
[DBG]   [26..34]
[DBG]  Agent 109 (interval in submap: [26..34]) contains time 31, added to replan.
[DBG]  Agent 148 found intervals in the sub-map:
[DBG]   [35..39]
[DBG]  Agent 148 is not in sub-map at time 31 (intervals: 
[DBG]  [35..39] )
[DBG]  Agent 26 | Start (global): 724 -> (local): (4, 3) at time 31 | Goal (global): 724 -> (local): (4, 3) at time 31
[DBG]  Agent 28 | Start (global): 659 -> (local): (2, 2) at time 31 | Goal (global): 725 -> (local): (4, 4) at time 39
[DBG]  Agent 65 | Start (global): 593 -> (local): (0, 0) at time 31 | Goal (global): 593 -> (local): (0, 0) at time 31
[DBG]  Agent 74 | Start (global): 597 -> (local): (0, 4) at time 31 | Goal (global): 597 -> (local): (0, 4) at time 31
[DBG]  Agent 109 | Start (global): 627 -> (local): (1, 2) at time 31 | Goal (global): 597 -> (local): (0, 4) at time 34
[DBG]  [REPAIR] SAT destroy operator called.
[DBG]  [REPAIR] SAT operator – launching subproblem FOR OPTIMIZATION.
[DBG]  Creating local paths (sx, sy) in the submap for T_sync = 31
[DBG]    Agent 26 (global paths from T=31 to 31) has local path: (4,3) 
[DBG]    Agent 28 (global paths from T=31 to 39) has local path: (2,2) (3,2) (3,2) (3,2) (3,2) (3,2) (3,3) (4,3) (4,4) 
[DBG]    Agent 65 (global paths from T=31 to 31) has local path: (0,0) 
[DBG]    Agent 74 (global paths from T=31 to 31) has local path: (0,4) 
[DBG]    Agent 109 (global paths from T=31 to 34) has local path: (1,2) (1,3) (1,4) (0,4) 
[DBG]  Checking input data for SAT solver:
[DBG]    - Number of agents to replan: 5
[DBG]  Agent 26 has the original local path length: 1 => Start (4,3), Goal (4,3)
[DBG]  Agent 28 has the original local path length: 9 => Start (2,2), Goal (4,4)
[DBG]  Agent 65 has the original local path length: 1 => Start (0,0), Goal (0,0)
[DBG]  Agent 74 has the original local path length: 1 => Start (0,4), Goal (0,4)
[DBG]  Agent 109 has the original local path length: 4 => Start (1,2), Goal (0,4)
[DBG]  Start position: (4, 3), (2, 2), (0, 0), (0, 4), (1, 2), 
[DBG]  Goal position: (4, 3), (4, 4), (0, 0), (0, 4), (0, 4), 
[DBG]  SAT instance and solver created.
Currently solving
Instance name: scen
Map name: map
Encoding used: disappear_at_goal
SAT solver used: Kissat
Optimizing function: sum of costs
Number of agents: 5
Mks LB: 5
SoC LB: 12
Delta: 0
Remaining time: 300000 [ms]

Vertex conflict! Agents 0, 2, timestep 1, location 0
Swapping conflict! Agents 0, 2, timestep 1, edge (0,0)
Vertex conflict! Agents 0, 2, timestep 2, location 0
Swapping conflict! Agents 0, 2, timestep 2, edge (0,0)
Vertex conflict! Agents 0, 2, timestep 3, location 0
Swapping conflict! Agents 0, 2, timestep 3, edge (0,0)
Vertex conflict! Agents 0, 2, timestep 4, location 0
Vertex conflict! Agents 0, 3, timestep 1, location 0
Swapping conflict! Agents 0, 3, timestep 1, edge (0,0)
Vertex conflict! Agents 0, 3, timestep 2, location 0
Swapping conflict! Agents 0, 3, timestep 2, edge (0,0)
Vertex conflict! Agents 0, 3, timestep 3, location 0
Swapping conflict! Agents 0, 3, timestep 3, edge (0,0)
Vertex conflict! Agents 0, 3, timestep 4, location 0
Vertex conflict! Agents 0, 4, timestep 4, location 0
Vertex conflict! Agents 2, 3, timestep 1, location 0
Swapping conflict! Agents 2, 3, timestep 1, edge (0,0)
Vertex conflict! Agents 2, 3, timestep 2, location 0
Swapping conflict! Agents 2, 3, timestep 2, edge (0,0)
Vertex conflict! Agents 2, 3, timestep 3, location 0
Swapping conflict! Agents 2, 3, timestep 3, edge (0,0)
Vertex conflict! Agents 2, 3, timestep 4, location 0
Vertex conflict! Agents 2, 4, timestep 4, location 0
Vertex conflict! Agents 3, 4, timestep 4, location 0
Found plan [agents = 5] [timesteps = 5]
Agent #0 : 18 0 0 0 0 
Agent #1 : 10 14 15 18 19 
Agent #2 : 0 0 0 0 0 
Agent #3 : 3 0 0 0 0 
Agent #4 : 5 6 7 3 0 

[STAT] Solver returned: 0
[DBG]  Agent (index) 26 | New local path (submap idx):
[DBG]  18 
[DBG]  Agent (index) 28 | New local path (submap idx):
[DBG]  10 14 15 18 19 
[DBG]  Agent (index) 65 | New local path (submap idx):
[DBG]  0 
[DBG]  Agent (index) 74 | New local path (submap idx):
[DBG]  3 
[DBG]  Agent (index) 109 | New local path (submap idx):
[DBG]  5 6 7 3 
[DBG]  Update the agent path 26 | Original local length: 1 | New local length: 1
[DBG]  agent 26 t=0 => decoded (sx,sy)=(4,3) => global_id=724
[DBG]  Complete path of agent 26:
[DBG]    Original: 13 14 46 47 79 80 81 82 83 115 147 179 180 212 244 276 308 340 341 373 405 437 469 501 533 565 597 629 628 660 692 724 756 755 
[DBG]    New:     13 14 46 47 79 80 81 82 83 115 147 179 180 212 244 276 308 340 341 373 405 437 469 501 533 565 597 629 628 660 692 724 756 755 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 13 14 46 47 79 80 81 82 83 115 147 179 180 212 244 276 308 340 341 373 405 437 469 501 533 565 597 629 628 660 692 
[DBG]    Local path (in submap): 724 
[DBG]    Suffix (out of submap): 756 755 
[DBG]  Original agent path length 26 je: 34
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 0: 13, 14, 46, 47, 79, 80, 81, 82, 83, 115, 147, 179, 180, 212, 244, 276, 308, 340, 341, 373, 405, 437, 469, 501, 533, 565, 597, 629, 628, 660, 692, 724, 756, 755, 
[DBG]  Path for agent 26 updated, resulting length: 34
[DBG]  Update the agent path 28 | Original local length: 9 | New local length: 5
[DBG]  agent 28 t=0 => decoded (sx,sy)=(2,2) => global_id=659
[DBG]  agent 28 t=1 => decoded (sx,sy)=(3,2) => global_id=691
[DBG]  agent 28 t=2 => decoded (sx,sy)=(3,3) => global_id=692
[DBG]  agent 28 t=3 => decoded (sx,sy)=(4,3) => global_id=724
[DBG]  agent 28 t=4 => decoded (sx,sy)=(4,4) => global_id=725
[DBG]  Complete path of agent 28:
[DBG]    Original: 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 660 659 691 691 691 691 691 692 724 725 757 725 726 727 
[DBG]    New:     661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 660 659 691 692 724 725 757 725 726 727 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 660 
[DBG]    Local path (in submap): 659 691 692 724 725 757 725 726 727 
[DBG]    Suffix (out of submap): 
[DBG]  Original agent path length 28 je: 44
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 1: 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 660, 659, 691, 692, 724, 725, 757, 725, 726, 727, 
[DBG]  Path for agent 28 updated, resulting length: 40
[DBG]  Update the agent path 65 | Original local length: 1 | New local length: 1
[DBG]  agent 65 t=0 => decoded (sx,sy)=(0,0) => global_id=593
[DBG]  Complete path of agent 65:
[DBG]    Original: 66 98 99 100 132 164 196 228 260 261 293 294 326 358 359 391 423 424 425 426 427 428 429 430 431 463 464 496 528 529 561 593 592 591 623 622 654 686 718 750 782 781 780 812 811 843 
[DBG]    New:     66 98 99 100 132 164 196 228 260 261 293 294 326 358 359 391 423 424 425 426 427 428 429 430 431 463 464 496 528 529 561 593 592 591 623 622 654 686 718 750 782 781 780 812 811 843 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 66 98 99 100 132 164 196 228 260 261 293 294 326 358 359 391 423 424 425 426 427 428 429 430 431 463 464 496 528 529 561 
[DBG]    Local path (in submap): 593 
[DBG]    Suffix (out of submap): 592 591 623 622 654 686 718 750 782 781 780 812 811 843 
[DBG]  Original agent path length 65 je: 46
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 2: 66, 98, 99, 100, 132, 164, 196, 228, 260, 261, 293, 294, 326, 358, 359, 391, 423, 424, 425, 426, 427, 428, 429, 430, 431, 463, 464, 496, 528, 529, 561, 593, 592, 591, 623, 622, 654, 686, 718, 750, 782, 781, 780, 812, 811, 843, 
[DBG]  Path for agent 65 updated, resulting length: 46
[DBG]  Update the agent path 74 | Original local length: 1 | New local length: 1
[DBG]  agent 74 t=0 => decoded (sx,sy)=(0,4) => global_id=597
[DBG]  Complete path of agent 74:
[DBG]    Original: 752 752 752 752 752 752 752 752 752 752 752 752 752 752 752 751 751 751 750 718 718 719 687 688 689 657 658 659 627 628 629 597 565 566 534 534 534 502 503 504 505 504 
[DBG]    New:     752 752 752 752 752 752 752 752 752 752 752 752 752 752 752 751 751 751 750 718 718 719 687 688 689 657 658 659 627 628 629 597 565 566 534 534 534 502 503 504 505 504 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 752 752 752 752 752 752 752 752 752 752 752 752 752 752 752 751 751 751 750 718 718 719 687 688 689 657 658 659 627 628 629 
[DBG]    Local path (in submap): 597 
[DBG]    Suffix (out of submap): 565 566 534 534 534 502 503 504 505 504 
[DBG]  Original agent path length 74 je: 42
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 3: 752, 752, 752, 752, 752, 752, 752, 752, 752, 752, 752, 752, 752, 752, 752, 751, 751, 751, 750, 718, 718, 719, 687, 688, 689, 657, 658, 659, 627, 628, 629, 597, 565, 566, 534, 534, 534, 502, 503, 504, 505, 504, 
[DBG]  Path for agent 74 updated, resulting length: 42
[DBG]  Update the agent path 109 | Original local length: 4 | New local length: 4
[DBG]  agent 109 t=0 => decoded (sx,sy)=(1,2) => global_id=627
[DBG]  agent 109 t=1 => decoded (sx,sy)=(1,3) => global_id=628
[DBG]  agent 109 t=2 => decoded (sx,sy)=(1,4) => global_id=629
[DBG]  agent 109 t=3 => decoded (sx,sy)=(0,4) => global_id=597
[DBG]  Complete path of agent 109:
[DBG]    Original: 882 850 851 819 819 819 819 851 850 849 848 847 815 783 751 719 687 686 686 687 719 751 751 719 687 688 689 689 657 658 659 627 628 629 597 565 566 534 502 503 504 472 473 474 475 443 444 445 413 414 415 
[DBG]    New:     882 850 851 819 819 819 819 851 850 849 848 847 815 783 751 719 687 686 686 687 719 751 751 719 687 688 689 689 657 658 659 627 628 629 597 565 566 534 502 503 504 472 473 474 475 443 444 445 413 414 415 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 882 850 851 819 819 819 819 851 850 849 848 847 815 783 751 719 687 686 686 687 719 751 751 719 687 688 689 689 657 658 659 
[DBG]    Local path (in submap): 627 628 629 597 
[DBG]    Suffix (out of submap): 565 566 534 502 503 504 472 473 474 475 443 444 445 413 414 415 
[DBG]  Original agent path length 109 je: 51
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 4: 882, 850, 851, 819, 819, 819, 819, 851, 850, 849, 848, 847, 815, 783, 751, 719, 687, 686, 686, 687, 719, 751, 751, 719, 687, 688, 689, 689, 657, 658, 659, 627, 628, 629, 597, 565, 566, 534, 502, 503, 504, 472, 473, 474, 475, 443, 444, 445, 413, 414, 415, 
[DBG]  Path for agent 109 updated, resulting length: 51
[DBG]  Paths successfully updated.
[DBG]  (LNS.cpp) New path for agent 26: 
[DBG]  13, 14, 46, 47, 79, 80, 81, 82, 83, 115, 147, 179, 180, 212, 244, 276, 308, 340, 341, 373, 405, 437, 469, 501, 533, 565, 597, 629, 628, 660, 692, 724, 756, 755, 
[DBG]  (LNS.cpp) New path for agent 28: 
[DBG]  661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 660, 659, 691, 692, 724, 725, 757, 725, 726, 727, 
[DBG]  (LNS.cpp) New path for agent 65: 
[DBG]  66, 98, 99, 100, 132, 164, 196, 228, 260, 261, 293, 294, 326, 358, 359, 391, 423, 424, 425, 426, 427, 428, 429, 430, 431, 463, 464, 496, 528, 529, 561, 593, 592, 591, 623, 622, 654, 686, 718, 750, 782, 781, 780, 812, 811, 843, 
[DBG]  (LNS.cpp) New path for agent 74: 
[DBG]  752, 752, 752, 752, 752, 752, 752, 752, 752, 752, 752, 752, 752, 752, 752, 751, 751, 751, 750, 718, 718, 719, 687, 688, 689, 657, 658, 659, 627, 628, 629, 597, 565, 566, 534, 534, 534, 502, 503, 504, 505, 504, 
[DBG]  (LNS.cpp) New path for agent 109: 
[DBG]  882, 850, 851, 819, 819, 819, 819, 851, 850, 849, 848, 847, 815, 783, 751, 719, 687, 686, 686, 687, 719, 751, 751, 719, 687, 688, 689, 689, 657, 658, 659, 627, 628, 629, 597, 565, 566, 534, 502, 503, 504, 472, 473, 474, 475, 443, 444, 445, 413, 414, 415, 
[DBG]  Delta value: 0.0188679
[DBG]  Rewarding metric index = 1
[DBG]  component_weights = {2.94795e-09, 1, 1.29842e-09, 2.25115e-09}
[DBG]  opSuccess value: 1
[STAT] neighbor.sum_of_costs before recomputation: 208
[STAT] neighbor.old_sum_of_costs before recomputation: 212
[STAT] sum_of_costs before recomputation: 4289
[DBG]  Validate solution immediately after SAT success.
[WARNING] Problem after SAT: Target conflict: agent 42 (len 43) traverses target of agent 28 (len 39) at location 727 at timestep 42
[DBG]  [DEBUG] Attempting immediate repair via init_lns because problem occurred after SAT (should be applied only for conflicts...).
[DBG]  [DEBUG] Passing 150 agents to init_lns (skip=true).
[DBG]  [DEBUG] path_table contents for selected agents (neighbor.agents):
[DBG]    Agent 26 => controlling path length=34
[DBG]    Agent 28 => controlling path length=40
[DBG]    Agent 65 => controlling path length=46
[DBG]    Agent 74 => controlling path length=42
[DBG]    Agent 109 => controlling path length=51
[DBG]  hodnota skip_initial_solution=1
[DBG]  We skip initialSolution => call buildCollisionData()
[DBG]  buildCollisionData() called – skip_initial_solution case.
[DBG]  Agents.size()=150, collision_graph.size()=150
[DBG]  agent 28 => updateCollidingPairs => foundCollision
[DBG]  agent 42 => updateCollidingPairs => foundCollision
[DBG]  Conflicting agent pairs:
[DBG]  agent 28 is in conflict with agent 42
[DBG]  buildCollisionData() => sum_of_costs=4285, num_of_colliding_pairs=1
[DBG]  buildCollisionData done => sum_of_costs=4285, num_of_colliding_pairs=1
[DBG]  sum_of_cost hodnota: 4285
[DBG]  After skip/init build => iteration_stats.back(): sum_of_costs=4285, collisions=1
[DEBUG] Using default neighbor generation strategy for conflicts: 0
	InitLNS(PP): runtime = 0.0005165, iterations = 2, colliding pairs = 0, initial colliding pairs = 1, solution cost = 4289, initial solution cost = 4285, failed iterations = 0
[DBG]  init_lns->sum_of_costs after init_lns->run: 4289
[DBG]  sum_of_costs after assignment from init_lns->run: 4289
[DBG]  Recomputing sum_of_cost by dividing neighbor.sum_of_costs and neighbor.old_sum_of_costs
[STAT] sum_of_costs after recomputation: 4289
[STAT] Iteration 169
[DBG]  Random chance did not select SAT operator (r=34), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 169
[DBG]  Random chance did not select SAT operator (r=95), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 169
[DBG]  Random chance did not select SAT operator (r=23), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 169
[DBG]  Random chance did not select SAT operator (r=89), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 169
[DBG]  Random chance did not select SAT operator (r=16), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 169
[DBG]  Random chance did not select SAT operator (r=95), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 169
[DBG]  Random chance did not select SAT operator (r=56), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 169
[DBG]  Random chance did not select SAT operator (r=83), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 169
[DBG]  Random chance did not select SAT operator (r=46), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 169
[DBG]  Random chance did not select SAT operator (r=45), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 169
[DBG]  Using SAT operator (destroy+repair SAT).
[DBG]  ====================
[DBG]  SAT destroy operator called.
[DBG]  SAT heuristic: 2
[DBG]  key_agent_id: 28
[DBG]  key_agent_id global path length: 44
[DBG]  Submap content (global positions):
[DBG]  595 596 597 598 599 
[DBG]  627 628 629 630 631 
[DBG]  659 660 661 662 663 
[DBG]  691 692 693 694 695 
[DBG]  723 724 725 726 727 
[DBG]  Map content with agents and obstacles:
[DBG]  X . . X . 
[DBG]  . . A X . 
[DBG]  A . A X X 
[DBG]  . A X X X 
[DBG]  X . . . . 
[DBG]  content of the map structure that we pass to the SAT solver:
[DBG]  -1  1  1  -1  1  
[DBG]  1  1  1  -1  1  
[DBG]  1  1  1  -1  -1  
[DBG]  1  1  -1  -1  -1  
[DBG]  -1  1  1  1  1  
[DBG]  Identifying agents in a submap for rescheduling (when key_agent is there at the time 13):
[DBG]  Agent 28 found intervals in the sub-map:
[DBG]   [0..38] [41..43]
[DBG]  Agent 28 (interval in submap: [0..38]) contains time 13, added to replan.
[DBG]  Agent 62 found intervals in the sub-map:
[DBG]  
[DBG]  Agent 62 is not in sub-map at time 13 (intervals: 
[DBG]  )
[DBG]  Agent 70 found intervals in the sub-map:
[DBG]  
[DBG]  Agent 70 is not in sub-map at time 13 (intervals: 
[DBG]  )
[DBG]  Agent 86 found intervals in the sub-map:
[DBG]   [10..14]
[DBG]  Agent 86 (interval in submap: [10..14]) contains time 13, added to replan.
[DBG]  Agent 119 found intervals in the sub-map:
[DBG]  
[DBG]  Agent 119 is not in sub-map at time 13 (intervals: 
[DBG]  )
[DBG]  Agent 135 found intervals in the sub-map:
[DBG]   [4..4] [9..15]
[DBG]  Agent 135 (interval in submap: [9..15]) contains time 13, added to replan.
[DBG]  Agent 137 found intervals in the sub-map:
[DBG]   [9..13]
[DBG]  Agent 137 (interval in submap: [9..13]) contains time 13, added to replan.
[DBG]  Agent 28 | Start (global): 661 -> (local): (2, 2) at time 13 | Goal (global): 724 -> (local): (4, 1) at time 38
[DBG]  Agent 86 | Start (global): 629 -> (local): (1, 2) at time 13 | Goal (global): 597 -> (local): (0, 2) at time 14
[DBG]  Agent 135 | Start (global): 692 -> (local): (3, 1) at time 13 | Goal (global): 659 -> (local): (2, 0) at time 15
[DBG]  Agent 137 | Start (global): 659 -> (local): (2, 0) at time 13 | Goal (global): 659 -> (local): (2, 0) at time 13
[DBG]  [REPAIR] SAT destroy operator called.
[DBG]  [REPAIR] SAT operator – launching subproblem FOR OPTIMIZATION.
[DBG]  Creating local paths (sx, sy) in the submap for T_sync = 13
[DBG]    Agent 28 (global paths from T=13 to 38) has local path: (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,1) (3,1) (3,0) (3,0) (3,0) (3,0) (3,0) (3,1) (4,1) 
[DBG]    Agent 86 (global paths from T=13 to 14) has local path: (1,2) (0,2) 
[DBG]    Agent 135 (global paths from T=13 to 15) has local path: (3,1) (3,0) (2,0) 
[DBG]    Agent 137 (global paths from T=13 to 13) has local path: (2,0) 
[DBG]  Checking input data for SAT solver:
[DBG]    - Number of agents to replan: 4
[DBG]  Agent 28 has the original local path length: 26 => Start (2,2), Goal (4,1)
[DBG]  Agent 86 has the original local path length: 2 => Start (1,2), Goal (0,2)
[DBG]  Agent 135 has the original local path length: 3 => Start (3,1), Goal (2,0)
[DBG]  Agent 137 has the original local path length: 1 => Start (2,0), Goal (2,0)
[DBG]  Start position: (2, 2), (1, 2), (3, 1), (2, 0), 
[DBG]  Goal position: (4, 1), (0, 2), (2, 0), (2, 0), 
[DBG]  SAT instance and solver created.
Currently solving
Instance name: scen
Map name: map
Encoding used: disappear_at_goal
SAT solver used: Kissat
Optimizing function: sum of costs
Number of agents: 4
Mks LB: 4
SoC LB: 10
Delta: 0
Remaining time: 300000 [ms]

Vertex conflict! Agents 1, 2, timestep 3, location 0
Vertex conflict! Agents 1, 3, timestep 2, location 0
Swapping conflict! Agents 1, 3, timestep 2, edge (0,0)
Vertex conflict! Agents 1, 3, timestep 3, location 0
Vertex conflict! Agents 2, 3, timestep 3, location 0
Found plan [agents = 4] [timesteps = 4]
Agent #0 : 9 8 11 12 
Agent #1 : 5 1 0 0 
Agent #2 : 11 10 7 0 
Agent #3 : 7 0 0 0 

[STAT] Solver returned: 0
[DBG]  Agent (index) 28 | New local path (submap idx):
[DBG]  9 8 11 12 
[DBG]  Agent (index) 86 | New local path (submap idx):
[DBG]  5 1 
[DBG]  Agent (index) 135 | New local path (submap idx):
[DBG]  11 10 7 
[DBG]  Agent (index) 137 | New local path (submap idx):
[DBG]  7 
[DBG]  Update the agent path 28 | Original local length: 26 | New local length: 4
[DBG]  agent 28 t=0 => decoded (sx,sy)=(2,2) => global_id=661
[DBG]  agent 28 t=1 => decoded (sx,sy)=(2,1) => global_id=660
[DBG]  agent 28 t=2 => decoded (sx,sy)=(3,1) => global_id=692
[DBG]  agent 28 t=3 => decoded (sx,sy)=(4,1) => global_id=724
[DBG]  Complete path of agent 28:
[DBG]    Original: 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 660 692 691 691 691 691 691 692 724 756 757 725 726 727 
[DBG]    New:     661 661 661 661 661 661 661 661 661 661 661 661 661 661 660 692 724 756 757 725 726 727 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 661 661 661 661 661 661 661 661 661 661 661 661 661 
[DBG]    Local path (in submap): 661 660 692 724 756 757 725 726 727 
[DBG]    Suffix (out of submap): 
[DBG]  Original agent path length 28 je: 44
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 0: 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 660, 692, 724, 756, 757, 725, 726, 727, 
[DBG]  Path for agent 28 updated, resulting length: 22
[DBG]  Update the agent path 86 | Original local length: 2 | New local length: 2
[DBG]  agent 86 t=0 => decoded (sx,sy)=(1,2) => global_id=629
[DBG]  agent 86 t=1 => decoded (sx,sy)=(0,2) => global_id=597
[DBG]  Complete path of agent 86:
[DBG]    Original: 781 782 750 718 686 687 688 689 657 658 659 627 628 629 597 565 566 566 566 534 502 503 504 505 505 505 506 538 539 540 541 
[DBG]    New:     781 782 750 718 686 687 688 689 657 658 659 627 628 629 597 565 566 566 566 534 502 503 504 505 505 505 506 538 539 540 541 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 781 782 750 718 686 687 688 689 657 658 659 627 628 
[DBG]    Local path (in submap): 629 597 
[DBG]    Suffix (out of submap): 565 566 566 566 534 502 503 504 505 505 505 506 538 539 540 541 
[DBG]  Original agent path length 86 je: 31
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 1: 781, 782, 750, 718, 686, 687, 688, 689, 657, 658, 659, 627, 628, 629, 597, 565, 566, 566, 566, 534, 502, 503, 504, 505, 505, 505, 506, 538, 539, 540, 541, 
[DBG]  Path for agent 86 updated, resulting length: 31
[DBG]  Update the agent path 135 | Original local length: 3 | New local length: 3
[DBG]  agent 135 t=0 => decoded (sx,sy)=(3,1) => global_id=692
[DBG]  agent 135 t=1 => decoded (sx,sy)=(3,0) => global_id=691
[DBG]  agent 135 t=2 => decoded (sx,sy)=(2,0) => global_id=659
[DBG]  Complete path of agent 135:
[DBG]    Original: 696 696 696 728 727 759 759 759 759 727 726 725 724 692 691 659 658 657 625 593 592 591 591 590 589 588 556 524 523 491 490 489 457 425 393 361 360 359 358 357 356 355 354 353 385 384 
[DBG]    New:     696 696 696 728 727 759 759 759 759 727 726 725 724 692 691 659 658 657 625 593 592 591 591 590 589 588 556 524 523 491 490 489 457 425 393 361 360 359 358 357 356 355 354 353 385 384 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 696 696 696 728 727 759 759 759 759 727 726 725 724 
[DBG]    Local path (in submap): 692 691 659 
[DBG]    Suffix (out of submap): 658 657 625 593 592 591 591 590 589 588 556 524 523 491 490 489 457 425 393 361 360 359 358 357 356 355 354 353 385 384 
[DBG]  Original agent path length 135 je: 46
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 2: 696, 696, 696, 728, 727, 759, 759, 759, 759, 727, 726, 725, 724, 692, 691, 659, 658, 657, 625, 593, 592, 591, 591, 590, 589, 588, 556, 524, 523, 491, 490, 489, 457, 425, 393, 361, 360, 359, 358, 357, 356, 355, 354, 353, 385, 384, 
[DBG]  Path for agent 135 updated, resulting length: 46
[DBG]  Update the agent path 137 | Original local length: 1 | New local length: 1
[DBG]  agent 137 t=0 => decoded (sx,sy)=(2,0) => global_id=659
[DBG]  Complete path of agent 137:
[DBG]    Original: 538 506 505 504 503 502 501 533 565 597 596 628 660 659 658 657 656 688 687 719 751 750 782 781 780 779 778 778 777 777 809 808 807 806 805 804 803 802 801 800 832 864 865 897 929 930 931 932 
[DBG]    New:     538 506 505 504 503 502 501 533 565 597 596 628 660 659 658 657 656 688 687 719 751 750 782 781 780 779 778 778 777 777 809 808 807 806 805 804 803 802 801 800 832 864 865 897 929 930 931 932 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 538 506 505 504 503 502 501 533 565 597 596 628 660 
[DBG]    Local path (in submap): 659 
[DBG]    Suffix (out of submap): 658 657 656 688 687 719 751 750 782 781 780 779 778 778 777 777 809 808 807 806 805 804 803 802 801 800 832 864 865 897 929 930 931 932 
[DBG]  Original agent path length 137 je: 48
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 3: 538, 506, 505, 504, 503, 502, 501, 533, 565, 597, 596, 628, 660, 659, 658, 657, 656, 688, 687, 719, 751, 750, 782, 781, 780, 779, 778, 778, 777, 777, 809, 808, 807, 806, 805, 804, 803, 802, 801, 800, 832, 864, 865, 897, 929, 930, 931, 932, 
[DBG]  Path for agent 137 updated, resulting length: 48
[DBG]  Paths successfully updated.
[DBG]  (LNS.cpp) New path for agent 28: 
[DBG]  661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 660, 692, 724, 756, 757, 725, 726, 727, 
[DBG]  (LNS.cpp) New path for agent 86: 
[DBG]  781, 782, 750, 718, 686, 687, 688, 689, 657, 658, 659, 627, 628, 629, 597, 565, 566, 566, 566, 534, 502, 503, 504, 505, 505, 505, 506, 538, 539, 540, 541, 
[DBG]  (LNS.cpp) New path for agent 135: 
[DBG]  696, 696, 696, 728, 727, 759, 759, 759, 759, 727, 726, 725, 724, 692, 691, 659, 658, 657, 625, 593, 592, 591, 591, 590, 589, 588, 556, 524, 523, 491, 490, 489, 457, 425, 393, 361, 360, 359, 358, 357, 356, 355, 354, 353, 385, 384, 
[DBG]  (LNS.cpp) New path for agent 137: 
[DBG]  538, 506, 505, 504, 503, 502, 501, 533, 565, 597, 596, 628, 660, 659, 658, 657, 656, 688, 687, 719, 751, 750, 782, 781, 780, 779, 778, 778, 777, 777, 809, 808, 807, 806, 805, 804, 803, 802, 801, 800, 832, 864, 865, 897, 929, 930, 931, 932, 
[DBG]  Delta value: 0.133333
[DBG]  Rewarding metric index = 1
[DBG]  component_weights = {2.47107e-09, 1, 1.08838e-09, 1.887e-09}
[DBG]  opSuccess value: 1
[STAT] neighbor.sum_of_costs before recomputation: 143
[STAT] neighbor.old_sum_of_costs before recomputation: 165
[STAT] sum_of_costs before recomputation: 4289
[DBG]  Validate solution immediately after SAT success.
[WARNING] Problem after SAT: Target conflict: agent 42 (len 43) traverses target of agent 28 (len 21) at location 727 at timestep 42
[DBG]  [DEBUG] Attempting immediate repair via init_lns because problem occurred after SAT (should be applied only for conflicts...).
[DBG]  [DEBUG] Passing 150 agents to init_lns (skip=true).
[DBG]  [DEBUG] path_table contents for selected agents (neighbor.agents):
[DBG]    Agent 28 => controlling path length=22
[DBG]    Agent 86 => controlling path length=31
[DBG]    Agent 135 => controlling path length=46
[DBG]    Agent 137 => controlling path length=48
[DBG]  hodnota skip_initial_solution=1
[DBG]  We skip initialSolution => call buildCollisionData()
[DBG]  buildCollisionData() called – skip_initial_solution case.
[DBG]  Agents.size()=150, collision_graph.size()=150
[DBG]  agent 28 => updateCollidingPairs => foundCollision
[DBG]  agent 42 => updateCollidingPairs => foundCollision
[DBG]  agent 101 => updateCollidingPairs => foundCollision
[DBG]  Conflicting agent pairs:
[DBG]  agent 28 is in conflict with agent 42
[DBG]  agent 28 is in conflict with agent 101
[DBG]  buildCollisionData() => sum_of_costs=4267, num_of_colliding_pairs=2
[DBG]  buildCollisionData done => sum_of_costs=4267, num_of_colliding_pairs=2
[DBG]  sum_of_cost hodnota: 4267
[DBG]  After skip/init build => iteration_stats.back(): sum_of_costs=4267, collisions=2
[DEBUG] Using default neighbor generation strategy for conflicts: 0
	InitLNS(PP): runtime = 0.000432875, iterations = 2, colliding pairs = 0, initial colliding pairs = 2, solution cost = 4289, initial solution cost = 4267, failed iterations = 0
[DBG]  init_lns->sum_of_costs after init_lns->run: 4289
[DBG]  sum_of_costs after assignment from init_lns->run: 4289
[DBG]  Recomputing sum_of_cost by dividing neighbor.sum_of_costs and neighbor.old_sum_of_costs
[STAT] sum_of_costs after recomputation: 4289
[STAT] Iteration 170
[DBG]  Random chance did not select SAT operator (r=47), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 170
[DBG]  Random chance did not select SAT operator (r=46), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 170
[DBG]  Random chance did not select SAT operator (r=75), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 170
[DBG]  Random chance did not select SAT operator (r=18), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 170
[DBG]  Random chance did not select SAT operator (r=17), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 170
[DBG]  Using SAT operator (destroy+repair SAT).
[DBG]  ====================
[DBG]  SAT destroy operator called.
[DBG]  SAT heuristic: 2
[DBG]  key_agent_id: 28
[DBG]  key_agent_id global path length: 44
[DBG]  Submap content (global positions):
[DBG]  595 596 597 598 599 
[DBG]  627 628 629 630 631 
[DBG]  659 660 661 662 663 
[DBG]  691 692 693 694 695 
[DBG]  723 724 725 726 727 
[DBG]  Map content with agents and obstacles:
[DBG]  X . . X . 
[DBG]  . . A X . 
[DBG]  . . A X X 
[DBG]  . . X X X 
[DBG]  X A A . A 
[DBG]  content of the map structure that we pass to the SAT solver:
[DBG]  -1  1  1  -1  1  
[DBG]  1  1  1  -1  1  
[DBG]  1  1  1  -1  -1  
[DBG]  1  1  -1  -1  -1  
[DBG]  -1  1  1  1  1  
[DBG]  Identifying agents in a submap for rescheduling (when key_agent is there at the time 6):
[DBG]  Agent 28 found intervals in the sub-map:
[DBG]   [0..38] [41..43]
[DBG]  Agent 28 (interval in submap: [0..38]) contains time 6, added to replan.
[DBG]  Agent 46 found intervals in the sub-map:
[DBG]   [5..8]
[DBG]  Agent 46 (interval in submap: [5..8]) contains time 6, added to replan.
[DBG]  Agent 89 found intervals in the sub-map:
[DBG]   [5..10]
[DBG]  Agent 89 (interval in submap: [5..10]) contains time 6, added to replan.
[DBG]  Agent 91 found intervals in the sub-map:
[DBG]   [4..6]
[DBG]  Agent 91 (interval in submap: [4..6]) contains time 6, added to replan.
[DBG]  Agent 108 found intervals in the sub-map:
[DBG]   [0..6]
[DBG]  Agent 108 (interval in submap: [0..6]) contains time 6, added to replan.
[DBG]  Agent 28 | Start (global): 661 -> (local): (2, 2) at time 6 | Goal (global): 724 -> (local): (4, 1) at time 38
[DBG]  Agent 46 | Start (global): 725 -> (local): (4, 2) at time 6 | Goal (global): 727 -> (local): (4, 4) at time 8
[DBG]  Agent 89 | Start (global): 629 -> (local): (1, 2) at time 6 | Goal (global): 724 -> (local): (4, 1) at time 10
[DBG]  Agent 91 | Start (global): 727 -> (local): (4, 4) at time 6 | Goal (global): 727 -> (local): (4, 4) at time 6
[DBG]  Agent 108 | Start (global): 724 -> (local): (4, 1) at time 6 | Goal (global): 724 -> (local): (4, 1) at time 6
[DBG]  [REPAIR] SAT destroy operator called.
[DBG]  [REPAIR] SAT operator – launching subproblem FOR OPTIMIZATION.
[DBG]  Creating local paths (sx, sy) in the submap for T_sync = 6
[DBG]    Agent 28 (global paths from T=6 to 38) has local path: (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,1) (3,1) (3,0) (3,0) (3,0) (3,0) (3,0) (3,1) (4,1) 
[DBG]    Agent 46 (global paths from T=6 to 8) has local path: (4,2) (4,3) (4,4) 
[DBG]    Agent 89 (global paths from T=6 to 10) has local path: (1,2) (1,1) (2,1) (3,1) (4,1) 
[DBG]    Agent 91 (global paths from T=6 to 6) has local path: (4,4) 
[DBG]    Agent 108 (global paths from T=6 to 6) has local path: (4,1) 
[DBG]  Checking input data for SAT solver:
[DBG]    - Number of agents to replan: 5
[DBG]  Agent 28 has the original local path length: 33 => Start (2,2), Goal (4,1)
[DBG]  Agent 46 has the original local path length: 3 => Start (4,2), Goal (4,4)
[DBG]  Agent 89 has the original local path length: 5 => Start (1,2), Goal (4,1)
[DBG]  Agent 91 has the original local path length: 1 => Start (4,4), Goal (4,4)
[DBG]  Agent 108 has the original local path length: 1 => Start (4,1), Goal (4,1)
[DBG]  Start position: (2, 2), (4, 2), (1, 2), (4, 4), (4, 1), 
[DBG]  Goal position: (4, 1), (4, 4), (4, 1), (4, 4), (4, 1), 
[DBG]  SAT instance and solver created.
Currently solving
Instance name: scen
Map name: map
Encoding used: disappear_at_goal
SAT solver used: Kissat
Optimizing function: sum of costs
Number of agents: 5
Mks LB: 5
SoC LB: 14
Delta: 0
Remaining time: 300000 [ms]

Vertex conflict! Agents 0, 1, timestep 4, location 0
Vertex conflict! Agents 0, 3, timestep 4, location 0
Vertex conflict! Agents 0, 4, timestep 4, location 0
Vertex conflict! Agents 1, 3, timestep 3, location 0
Swapping conflict! Agents 1, 3, timestep 3, edge (0,0)
Vertex conflict! Agents 1, 3, timestep 4, location 0
Vertex conflict! Agents 1, 4, timestep 3, location 0
Swapping conflict! Agents 1, 4, timestep 3, edge (0,0)
Vertex conflict! Agents 1, 4, timestep 4, location 0
Vertex conflict! Agents 3, 4, timestep 1, location 0
Swapping conflict! Agents 3, 4, timestep 1, edge (0,0)
Vertex conflict! Agents 3, 4, timestep 2, location 0
Swapping conflict! Agents 3, 4, timestep 2, edge (0,0)
Vertex conflict! Agents 3, 4, timestep 3, location 0
Swapping conflict! Agents 3, 4, timestep 3, edge (0,0)
Vertex conflict! Agents 3, 4, timestep 4, location 0
Found plan [agents = 5] [timesteps = 5]
Agent #0 : 9 8 11 12 0 
Agent #1 : 13 14 15 0 0 
Agent #2 : 5 9 8 11 12 
Agent #3 : 15 0 0 0 0 
Agent #4 : 12 0 0 0 0 

[STAT] Solver returned: 0
[DBG]  Agent (index) 28 | New local path (submap idx):
[DBG]  9 8 11 12 
[DBG]  Agent (index) 46 | New local path (submap idx):
[DBG]  13 14 15 
[DBG]  Agent (index) 89 | New local path (submap idx):
[DBG]  5 9 8 11 12 
[DBG]  Agent (index) 91 | New local path (submap idx):
[DBG]  15 
[DBG]  Agent (index) 108 | New local path (submap idx):
[DBG]  12 
[DBG]  Update the agent path 28 | Original local length: 33 | New local length: 4
[DBG]  agent 28 t=0 => decoded (sx,sy)=(2,2) => global_id=661
[DBG]  agent 28 t=1 => decoded (sx,sy)=(2,1) => global_id=660
[DBG]  agent 28 t=2 => decoded (sx,sy)=(3,1) => global_id=692
[DBG]  agent 28 t=3 => decoded (sx,sy)=(4,1) => global_id=724
[DBG]  Complete path of agent 28:
[DBG]    Original: 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 660 692 691 691 691 691 691 692 724 756 757 725 726 727 
[DBG]    New:     661 661 661 661 661 661 661 660 692 724 756 757 725 726 727 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 661 661 661 661 661 661 
[DBG]    Local path (in submap): 661 660 692 724 756 757 725 726 727 
[DBG]    Suffix (out of submap): 
[DBG]  Original agent path length 28 je: 44
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 0: 661, 661, 661, 661, 661, 661, 661, 660, 692, 724, 756, 757, 725, 726, 727, 
[DBG]  Path for agent 28 updated, resulting length: 15
[DBG]  Update the agent path 46 | Original local length: 3 | New local length: 3
[DBG]  agent 46 t=0 => decoded (sx,sy)=(4,2) => global_id=725
[DBG]  agent 46 t=1 => decoded (sx,sy)=(4,3) => global_id=726
[DBG]  agent 46 t=2 => decoded (sx,sy)=(4,4) => global_id=727
[DBG]  Complete path of agent 46:
[DBG]    Original: 786 787 788 788 756 724 725 726 727 728 696 664 632 600 601 602 603 604 572 540 508 476 444 412 380 348 349 317 285 284 252 
[DBG]    New:     786 787 788 788 756 724 725 726 727 728 696 664 632 600 601 602 603 604 572 540 508 476 444 412 380 348 349 317 285 284 252 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 786 787 788 788 756 724 
[DBG]    Local path (in submap): 725 726 727 
[DBG]    Suffix (out of submap): 728 696 664 632 600 601 602 603 604 572 540 508 476 444 412 380 348 349 317 285 284 252 
[DBG]  Original agent path length 46 je: 31
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 1: 786, 787, 788, 788, 756, 724, 725, 726, 727, 728, 696, 664, 632, 600, 601, 602, 603, 604, 572, 540, 508, 476, 444, 412, 380, 348, 349, 317, 285, 284, 252, 
[DBG]  Path for agent 46 updated, resulting length: 31
[DBG]  Update the agent path 89 | Original local length: 5 | New local length: 5
[DBG]  agent 89 t=0 => decoded (sx,sy)=(1,2) => global_id=629
[DBG]  agent 89 t=1 => decoded (sx,sy)=(2,2) => global_id=661
[DBG]  agent 89 t=2 => decoded (sx,sy)=(2,1) => global_id=660
[DBG]  agent 89 t=3 => decoded (sx,sy)=(3,1) => global_id=692
[DBG]  agent 89 t=4 => decoded (sx,sy)=(4,1) => global_id=724
[DBG]  Complete path of agent 89:
[DBG]    Original: 437 469 501 533 565 597 629 628 660 692 724 756 788 820 821 822 854 886 918 950 982 983 1015 
[DBG]    New:     437 469 501 533 565 597 629 661 660 692 724 756 788 820 821 822 854 886 918 950 982 983 1015 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 437 469 501 533 565 597 
[DBG]    Local path (in submap): 629 661 660 692 724 
[DBG]    Suffix (out of submap): 756 788 820 821 822 854 886 918 950 982 983 1015 
[DBG]  Original agent path length 89 je: 23
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 2: 437, 469, 501, 533, 565, 597, 629, 661, 660, 692, 724, 756, 788, 820, 821, 822, 854, 886, 918, 950, 982, 983, 1015, 
[DBG]  Path for agent 89 updated, resulting length: 23
[DBG]  Update the agent path 91 | Original local length: 1 | New local length: 1
[DBG]  agent 91 t=0 => decoded (sx,sy)=(4,4) => global_id=727
[DBG]  Complete path of agent 91:
[DBG]    Original: 787 755 756 757 725 726 727 728 696 664 632 633 601 569 570 571 572 540 541 509 477 445 413 413 381 
[DBG]    New:     787 755 756 757 725 726 727 728 696 664 632 633 601 569 570 571 572 540 541 509 477 445 413 413 381 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 787 755 756 757 725 726 
[DBG]    Local path (in submap): 727 
[DBG]    Suffix (out of submap): 728 696 664 632 633 601 569 570 571 572 540 541 509 477 445 413 413 381 
[DBG]  Original agent path length 91 je: 25
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 3: 787, 755, 756, 757, 725, 726, 727, 728, 696, 664, 632, 633, 601, 569, 570, 571, 572, 540, 541, 509, 477, 445, 413, 413, 381, 
[DBG]  Path for agent 91 updated, resulting length: 25
[DBG]  Update the agent path 108 | Original local length: 1 | New local length: 1
[DBG]  agent 108 t=0 => decoded (sx,sy)=(4,1) => global_id=724
[DBG]  Complete path of agent 108:
[DBG]    Original: 628 660 692 692 692 692 724 756 788 820 821 822 823 855 856 888 920 952 953 954 955 956 957 989 1021 
[DBG]    New:     628 660 692 692 692 692 724 756 788 820 821 822 823 855 856 888 920 952 953 954 955 956 957 989 1021 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 628 660 692 692 692 692 
[DBG]    Local path (in submap): 724 
[DBG]    Suffix (out of submap): 756 788 820 821 822 823 855 856 888 920 952 953 954 955 956 957 989 1021 
[DBG]  Original agent path length 108 je: 25
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 4: 628, 660, 692, 692, 692, 692, 724, 756, 788, 820, 821, 822, 823, 855, 856, 888, 920, 952, 953, 954, 955, 956, 957, 989, 1021, 
[DBG]  Path for agent 108 updated, resulting length: 25
[DBG]  Paths successfully updated.
[DBG]  (LNS.cpp) New path for agent 28: 
[DBG]  661, 661, 661, 661, 661, 661, 661, 660, 692, 724, 756, 757, 725, 726, 727, 
[DBG]  (LNS.cpp) New path for agent 46: 
[DBG]  786, 787, 788, 788, 756, 724, 725, 726, 727, 728, 696, 664, 632, 600, 601, 602, 603, 604, 572, 540, 508, 476, 444, 412, 380, 348, 349, 317, 285, 284, 252, 
[DBG]  (LNS.cpp) New path for agent 89: 
[DBG]  437, 469, 501, 533, 565, 597, 629, 661, 660, 692, 724, 756, 788, 820, 821, 822, 854, 886, 918, 950, 982, 983, 1015, 
[DBG]  (LNS.cpp) New path for agent 91: 
[DBG]  787, 755, 756, 757, 725, 726, 727, 728, 696, 664, 632, 633, 601, 569, 570, 571, 572, 540, 541, 509, 477, 445, 413, 413, 381, 
[DBG]  (LNS.cpp) New path for agent 108: 
[DBG]  628, 660, 692, 692, 692, 692, 724, 756, 788, 820, 821, 822, 823, 855, 856, 888, 920, 952, 953, 954, 955, 956, 957, 989, 1021, 
[DBG]  Delta value: 0.202797
[DBG]  Rewarding metric index = 1
[DBG]  component_weights = {1.95172e-09, 1, 8.5963e-10, 1.4904e-09}
[DBG]  opSuccess value: 1
[STAT] neighbor.sum_of_costs before recomputation: 114
[STAT] neighbor.old_sum_of_costs before recomputation: 143
[STAT] sum_of_costs before recomputation: 4289
[DBG]  Validate solution immediately after SAT success.
[WARNING] Problem after SAT: Target conflict: agent 42 (len 43) traverses target of agent 28 (len 14) at location 727 at timestep 42
[DBG]  [DEBUG] Attempting immediate repair via init_lns because problem occurred after SAT (should be applied only for conflicts...).
[DBG]  [DEBUG] Passing 150 agents to init_lns (skip=true).
[DBG]  [DEBUG] path_table contents for selected agents (neighbor.agents):
[DBG]    Agent 28 => controlling path length=15
[DBG]    Agent 46 => controlling path length=31
[DBG]    Agent 89 => controlling path length=23
[DBG]    Agent 91 => controlling path length=25
[DBG]    Agent 108 => controlling path length=25
[DBG]  hodnota skip_initial_solution=1
[DBG]  We skip initialSolution => call buildCollisionData()
[DBG]  buildCollisionData() called – skip_initial_solution case.
[DBG]  Agents.size()=150, collision_graph.size()=150
[DBG]  agent 28 => updateCollidingPairs => foundCollision
[DBG]  agent 42 => updateCollidingPairs => foundCollision
[DBG]  Conflicting agent pairs:
[DBG]  agent 28 is in conflict with agent 42
[DBG]  buildCollisionData() => sum_of_costs=4260, num_of_colliding_pairs=1
[DBG]  buildCollisionData done => sum_of_costs=4260, num_of_colliding_pairs=1
[DBG]  sum_of_cost hodnota: 4260
[DBG]  After skip/init build => iteration_stats.back(): sum_of_costs=4260, collisions=1
[DEBUG] Using default neighbor generation strategy for conflicts: 1
[DEBUG] Using default neighbor generation strategy for conflicts: 0
	InitLNS(PP): runtime = 0.00456058, iterations = 3, colliding pairs = 0, initial colliding pairs = 1, solution cost = 4292, initial solution cost = 4260, failed iterations = 0
[DBG]  init_lns->sum_of_costs after init_lns->run: 4292
[DBG]  sum_of_costs after assignment from init_lns->run: 4292
[DBG]  Recomputing sum_of_cost by dividing neighbor.sum_of_costs and neighbor.old_sum_of_costs
[STAT] sum_of_costs after recomputation: 4292
[STAT] Iteration 171
[DBG]  Random chance did not select SAT operator (r=19), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 171
[DBG]  Random chance did not select SAT operator (r=37), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 171
[DBG]  Random chance did not select SAT operator (r=67), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 171
[DBG]  Random chance did not select SAT operator (r=11), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 171
[DBG]  Random chance did not select SAT operator (r=24), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 171
[DBG]  Using SAT operator (destroy+repair SAT).
[DBG]  ====================
[DBG]  SAT destroy operator called.
[DBG]  SAT heuristic: 2
[DBG]  key_agent_id: 28
[DBG]  key_agent_id global path length: 44
[DBG]  Submap content (global positions):
[DBG]  595 596 597 598 599 
[DBG]  627 628 629 630 631 
[DBG]  659 660 661 662 663 
[DBG]  691 692 693 694 695 
[DBG]  723 724 725 726 727 
[DBG]  Map content with agents and obstacles:
[DBG]  X A A X . 
[DBG]  . A . X . 
[DBG]  . A A X X 
[DBG]  . A X X X 
[DBG]  X . . . . 
[DBG]  content of the map structure that we pass to the SAT solver:
[DBG]  -1  1  1  -1  1  
[DBG]  1  1  1  -1  1  
[DBG]  1  1  1  -1  -1  
[DBG]  1  1  -1  -1  -1  
[DBG]  -1  1  1  1  1  
[DBG]  Identifying agents in a submap for rescheduling (when key_agent is there at the time 24):
[DBG]  Agent 3 found intervals in the sub-map:
[DBG]   [23..28]
[DBG]  Agent 3 (interval in submap: [23..28]) contains time 24, added to replan.
[DBG]  Agent 28 found intervals in the sub-map:
[DBG]   [0..32] [41..43]
[DBG]  Agent 28 (interval in submap: [0..32]) contains time 24, added to replan.
[DBG]  Agent 44 found intervals in the sub-map:
[DBG]   [24..29]
[DBG]  Agent 44 (interval in submap: [24..29]) contains time 24, added to replan.
[DBG]  Agent 45 found intervals in the sub-map:
[DBG]   [21..26]
[DBG]  Agent 45 (interval in submap: [21..26]) contains time 24, added to replan.
[DBG]  Agent 53 found intervals in the sub-map:
[DBG]   [22..27]
[DBG]  Agent 53 (interval in submap: [22..27]) contains time 24, added to replan.
[DBG]  Agent 100 found intervals in the sub-map:
[DBG]   [20..25]
[DBG]  Agent 100 (interval in submap: [20..25]) contains time 24, added to replan.
[DBG]  Agent 144 found intervals in the sub-map:
[DBG]   [20..21]
[DBG]  Agent 144 is not in sub-map at time 24 (intervals: 
[DBG]  [20..21] )
[DBG]  Agent 3 | Start (global): 596 -> (local): (0, 1) at time 24 | Goal (global): 724 -> (local): (4, 1) at time 28
[DBG]  Agent 28 | Start (global): 661 -> (local): (2, 2) at time 24 | Goal (global): 724 -> (local): (4, 1) at time 32
[DBG]  Agent 44 | Start (global): 597 -> (local): (0, 2) at time 24 | Goal (global): 724 -> (local): (4, 1) at time 29
[DBG]  Agent 45 | Start (global): 660 -> (local): (2, 1) at time 24 | Goal (global): 724 -> (local): (4, 1) at time 26
[DBG]  Agent 53 | Start (global): 628 -> (local): (1, 1) at time 24 | Goal (global): 724 -> (local): (4, 1) at time 27
[DBG]  Agent 100 | Start (global): 692 -> (local): (3, 1) at time 24 | Goal (global): 724 -> (local): (4, 1) at time 25
[DBG]  [REPAIR] SAT destroy operator called.
[DBG]  [REPAIR] SAT operator – launching subproblem FOR OPTIMIZATION.
[DBG]  Creating local paths (sx, sy) in the submap for T_sync = 24
[DBG]    Agent 3 (global paths from T=24 to 28) has local path: (0,1) (1,1) (2,1) (3,1) (4,1) 
[DBG]    Agent 28 (global paths from T=24 to 32) has local path: (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,1) (3,1) (4,1) 
[DBG]    Agent 44 (global paths from T=24 to 29) has local path: (0,2) (0,1) (1,1) (2,1) (3,1) (4,1) 
[DBG]    Agent 45 (global paths from T=24 to 26) has local path: (2,1) (3,1) (4,1) 
[DBG]    Agent 53 (global paths from T=24 to 27) has local path: (1,1) (2,1) (3,1) (4,1) 
[DBG]    Agent 100 (global paths from T=24 to 25) has local path: (3,1) (4,1) 
[DBG]  Checking input data for SAT solver:
[DBG]    - Number of agents to replan: 6
[DBG]  Agent 3 has the original local path length: 5 => Start (0,1), Goal (4,1)
[DBG]  Agent 28 has the original local path length: 9 => Start (2,2), Goal (4,1)
[DBG]  Agent 44 has the original local path length: 6 => Start (0,2), Goal (4,1)
[DBG]  Agent 45 has the original local path length: 3 => Start (2,1), Goal (4,1)
[DBG]  Agent 53 has the original local path length: 4 => Start (1,1), Goal (4,1)
[DBG]  Agent 100 has the original local path length: 2 => Start (3,1), Goal (4,1)
[DBG]  Start position: (0, 1), (2, 2), (0, 2), (2, 1), (1, 1), (3, 1), 
[DBG]  Goal position: (4, 1), (4, 1), (4, 1), (4, 1), (4, 1), (4, 1), 
[DBG]  SAT instance and solver created.
Currently solving
Instance name: scen
Map name: map
Encoding used: disappear_at_goal
SAT solver used: Kissat
Optimizing function: sum of costs
Number of agents: 6
Mks LB: 6
SoC LB: 24
Delta: 0
Remaining time: 300000 [ms]

[STAT] Solver returned: -1
[DBG]  SAT solver failed.
[STAT] SAT solver failed to find a valid solution.
[DBG]  ====================
[DBG]  SAT destroy operator called.
[DBG]  SAT heuristic: 2
[DBG]  key_agent_id: 28
[DBG]  key_agent_id global path length: 44
[DBG]  Submap content (global positions):
[DBG]  691 692 693 694 695 
[DBG]  723 724 725 726 727 
[DBG]  755 756 757 758 759 
[DBG]  787 788 789 790 791 
[DBG]  819 820 821 822 823 
[DBG]  Map content with agents and obstacles:
[DBG]  . . X X X 
[DBG]  X A A . . 
[DBG]  . . A X . 
[DBG]  . . X . X 
[DBG]  . . . . . 
[DBG]  content of the map structure that we pass to the SAT solver:
[DBG]  1  1  -1  -1  -1  
[DBG]  -1  1  1  1  1  
[DBG]  1  1  1  -1  1  
[DBG]  1  1  -1  1  -1  
[DBG]  1  1  1  1  1  
[DBG]  Identifying agents in a submap for rescheduling (when key_agent is there at the time 40):
[DBG]  Agent 28 found intervals in the sub-map:
[DBG]   [31..43]
[DBG]  Agent 28 (interval in submap: [31..43]) contains time 40, added to replan.
[DBG]  Agent 42 found intervals in the sub-map:
[DBG]   [37..43]
[DBG]  Agent 42 (interval in submap: [37..43]) contains time 40, added to replan.
[DBG]  Agent 44 found intervals in the sub-map:
[DBG]   [28..33]
[DBG]  Agent 44 is not in sub-map at time 40 (intervals: 
[DBG]  [28..33] )
[DBG]  Agent 45 found intervals in the sub-map:
[DBG]   [25..30]
[DBG]  Agent 45 is not in sub-map at time 40 (intervals: 
[DBG]  [25..30] )
[DBG]  Agent 53 found intervals in the sub-map:
[DBG]   [26..31]
[DBG]  Agent 53 is not in sub-map at time 40 (intervals: 
[DBG]  [26..31] )
[DBG]  Agent 55 found intervals in the sub-map:
[DBG]   [42..43]
[DBG]  Agent 55 is not in sub-map at time 40 (intervals: 
[DBG]  [42..43] )
[DBG]  Agent 69 found intervals in the sub-map:
[DBG]   [39..43]
[DBG]  Agent 69 (interval in submap: [39..43]) contains time 40, added to replan.
[DBG]  Agent 28 | Start (global): 757 -> (local): (2, 2) at time 40 | Goal (global): 727 -> (local): (1, 4) at time 43
[DBG]  Agent 42 | Start (global): 725 -> (local): (1, 2) at time 40 | Goal (global): 759 -> (local): (2, 4) at time 43
[DBG]  Agent 69 | Start (global): 724 -> (local): (1, 1) at time 40 | Goal (global): 820 -> (local): (4, 1) at time 43
[DBG]  [REPAIR] SAT destroy operator called.
[DBG]  [REPAIR] SAT operator – launching subproblem FOR OPTIMIZATION.
[DBG]  Creating local paths (sx, sy) in the submap for T_sync = 40
[DBG]    Agent 28 (global paths from T=40 to 43) has local path: (2,2) (1,2) (1,3) (1,4) 
[DBG]    Agent 42 (global paths from T=40 to 43) has local path: (1,2) (1,3) (1,4) (2,4) 
[DBG]    Agent 69 (global paths from T=40 to 43) has local path: (1,1) (2,1) (3,1) (4,1) 
[DBG]  Checking input data for SAT solver:
[DBG]    - Number of agents to replan: 3
[DBG]  Agent 28 has the original local path length: 4 => Start (2,2), Goal (1,4)
[DBG]  Agent 42 has the original local path length: 4 => Start (1,2), Goal (2,4)
[DBG]  Agent 69 has the original local path length: 4 => Start (1,1), Goal (4,1)
[DBG]  Start position: (2, 2), (1, 2), (1, 1), 
[DBG]  Goal position: (1, 4), (2, 4), (4, 1), 
[DBG]  SAT instance and solver created.
Currently solving
Instance name: scen
Map name: map
Encoding used: disappear_at_goal
SAT solver used: Kissat
Optimizing function: sum of costs
Number of agents: 3
Mks LB: 4
SoC LB: 12
Delta: 0
Remaining time: 300000 [ms]

Found plan [agents = 3] [timesteps = 4]
Agent #0 : 8 3 4 5 
Agent #1 : 3 4 5 9 
Agent #2 : 2 7 11 14 

[STAT] Solver returned: 0
[DBG]  Agent (index) 28 | New local path (submap idx):
[DBG]  8 3 4 5 
[DBG]  Agent (index) 42 | New local path (submap idx):
[DBG]  3 4 5 9 
[DBG]  Agent (index) 69 | New local path (submap idx):
[DBG]  2 7 11 14 
[DBG]  Update the agent path 28 | Original local length: 4 | New local length: 4
[DBG]  agent 28 t=0 => decoded (sx,sy)=(2,2) => global_id=757
[DBG]  agent 28 t=1 => decoded (sx,sy)=(1,2) => global_id=725
[DBG]  agent 28 t=2 => decoded (sx,sy)=(1,3) => global_id=726
[DBG]  agent 28 t=3 => decoded (sx,sy)=(1,4) => global_id=727
[DBG]  Complete path of agent 28:
[DBG]    Original: 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 660 692 724 756 757 757 757 757 757 757 757 725 726 727 
[DBG]    New:     661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 660 692 724 756 757 757 757 757 757 757 757 725 726 727 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 660 692 724 756 757 757 757 757 757 757 
[DBG]    Local path (in submap): 757 725 726 727 
[DBG]    Suffix (out of submap): 
[DBG]  Original agent path length 28 je: 44
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 0: 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 660, 692, 724, 756, 757, 757, 757, 757, 757, 757, 757, 725, 726, 727, 
[DBG]  Path for agent 28 updated, resulting length: 44
[DBG]  Update the agent path 42 | Original local length: 4 | New local length: 4
[DBG]  agent 42 t=0 => decoded (sx,sy)=(1,2) => global_id=725
[DBG]  agent 42 t=1 => decoded (sx,sy)=(1,3) => global_id=726
[DBG]  agent 42 t=2 => decoded (sx,sy)=(1,4) => global_id=727
[DBG]  agent 42 t=3 => decoded (sx,sy)=(2,4) => global_id=759
[DBG]  Complete path of agent 42:
[DBG]    Original: 224 192 193 194 226 258 258 259 291 323 355 387 419 420 421 422 422 423 424 425 426 427 428 429 430 431 463 464 496 528 529 561 593 625 657 658 659 691 692 724 725 726 727 759 
[DBG]    New:     224 192 193 194 226 258 258 259 291 323 355 387 419 420 421 422 422 423 424 425 426 427 428 429 430 431 463 464 496 528 529 561 593 625 657 658 659 691 692 724 725 726 727 759 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 224 192 193 194 226 258 258 259 291 323 355 387 419 420 421 422 422 423 424 425 426 427 428 429 430 431 463 464 496 528 529 561 593 625 657 658 659 691 692 724 
[DBG]    Local path (in submap): 725 726 727 759 
[DBG]    Suffix (out of submap): 
[DBG]  Original agent path length 42 je: 44
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 1: 224, 192, 193, 194, 226, 258, 258, 259, 291, 323, 355, 387, 419, 420, 421, 422, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 463, 464, 496, 528, 529, 561, 593, 625, 657, 658, 659, 691, 692, 724, 725, 726, 727, 759, 
[DBG]  Path for agent 42 updated, resulting length: 44
[DBG]  Update the agent path 69 | Original local length: 4 | New local length: 4
[DBG]  agent 69 t=0 => decoded (sx,sy)=(1,1) => global_id=724
[DBG]  agent 69 t=1 => decoded (sx,sy)=(2,1) => global_id=756
[DBG]  agent 69 t=2 => decoded (sx,sy)=(3,1) => global_id=788
[DBG]  agent 69 t=3 => decoded (sx,sy)=(4,1) => global_id=820
[DBG]  Complete path of agent 69:
[DBG]    Original: 4 5 6 7 8 9 41 73 105 137 138 139 140 172 204 205 237 237 269 301 333 365 366 367 368 400 432 432 464 496 528 529 561 593 625 657 658 659 660 692 724 756 788 820 
[DBG]    New:     4 5 6 7 8 9 41 73 105 137 138 139 140 172 204 205 237 237 269 301 333 365 366 367 368 400 432 432 464 496 528 529 561 593 625 657 658 659 660 692 724 756 788 820 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 4 5 6 7 8 9 41 73 105 137 138 139 140 172 204 205 237 237 269 301 333 365 366 367 368 400 432 432 464 496 528 529 561 593 625 657 658 659 660 692 
[DBG]    Local path (in submap): 724 756 788 820 
[DBG]    Suffix (out of submap): 
[DBG]  Original agent path length 69 je: 44
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 2: 4, 5, 6, 7, 8, 9, 41, 73, 105, 137, 138, 139, 140, 172, 204, 205, 237, 237, 269, 301, 333, 365, 366, 367, 368, 400, 432, 432, 464, 496, 528, 529, 561, 593, 625, 657, 658, 659, 660, 692, 724, 756, 788, 820, 
[DBG]  Path for agent 69 updated, resulting length: 44
[DBG]  Paths successfully updated.
[DBG]  (LNS.cpp) New path for agent 28: 
[DBG]  661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 660, 692, 724, 756, 757, 757, 757, 757, 757, 757, 757, 725, 726, 727, 
[DBG]  (LNS.cpp) New path for agent 42: 
[DBG]  224, 192, 193, 194, 226, 258, 258, 259, 291, 323, 355, 387, 419, 420, 421, 422, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 463, 464, 496, 528, 529, 561, 593, 625, 657, 658, 659, 691, 692, 724, 725, 726, 727, 759, 
[DBG]  (LNS.cpp) New path for agent 69: 
[DBG]  4, 5, 6, 7, 8, 9, 41, 73, 105, 137, 138, 139, 140, 172, 204, 205, 237, 237, 269, 301, 333, 365, 366, 367, 368, 400, 432, 432, 464, 496, 528, 529, 561, 593, 625, 657, 658, 659, 660, 692, 724, 756, 788, 820, 
[DBG]  Delta value: 0
[DBG]  Rewarding metric index = 1
[DBG]  component_weights = {1.85413e-09, 1, 8.16649e-10, 1.41588e-09}
[DBG]  opSuccess value: 1
[STAT] neighbor.sum_of_costs before recomputation: 129
[STAT] neighbor.old_sum_of_costs before recomputation: 129
[STAT] sum_of_costs before recomputation: 4292
[DBG]  Validate solution immediately after SAT success.
[DBG]  No problems after SAT replan.
[DBG]  Recomputing sum_of_cost by dividing neighbor.sum_of_costs and neighbor.old_sum_of_costs
[STAT] sum_of_costs after recomputation: 4292
[STAT] Iteration 172
[DBG]  Random chance did not select SAT operator (r=58), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 172
[DBG]  Random chance did not select SAT operator (r=62), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 172
[DBG]  Random chance did not select SAT operator (r=39), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 172
[DBG]  Random chance did not select SAT operator (r=33), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 172
[DBG]  Using SAT operator (destroy+repair SAT).
[DBG]  ====================
[DBG]  SAT destroy operator called.
[DBG]  SAT heuristic: 2
[DBG]  key_agent_id: 28
[DBG]  key_agent_id global path length: 44
[DBG]  Submap content (global positions):
[DBG]  595 596 597 598 599 
[DBG]  627 628 629 630 631 
[DBG]  659 660 661 662 663 
[DBG]  691 692 693 694 695 
[DBG]  723 724 725 726 727 
[DBG]  Map content with agents and obstacles:
[DBG]  X . A X . 
[DBG]  . . . X . 
[DBG]  . . A X X 
[DBG]  . A X X X 
[DBG]  X A . A . 
[DBG]  content of the map structure that we pass to the SAT solver:
[DBG]  -1  1  1  -1  1  
[DBG]  1  1  1  -1  1  
[DBG]  1  1  1  -1  -1  
[DBG]  1  1  -1  -1  -1  
[DBG]  -1  1  1  1  1  
[DBG]  Identifying agents in a submap for rescheduling (when key_agent is there at the time 5):
[DBG]  Agent 28 found intervals in the sub-map:
[DBG]   [0..32] [41..43]
[DBG]  Agent 28 (interval in submap: [0..32]) contains time 5, added to replan.
[DBG]  Agent 46 found intervals in the sub-map:
[DBG]   [5..8]
[DBG]  Agent 46 (interval in submap: [5..8]) contains time 5, added to replan.
[DBG]  Agent 89 found intervals in the sub-map:
[DBG]   [5..10]
[DBG]  Agent 89 (interval in submap: [5..10]) contains time 5, added to replan.
[DBG]  Agent 91 found intervals in the sub-map:
[DBG]   [4..6]
[DBG]  Agent 91 (interval in submap: [4..6]) contains time 5, added to replan.
[DBG]  Agent 108 found intervals in the sub-map:
[DBG]   [0..6]
[DBG]  Agent 108 (interval in submap: [0..6]) contains time 5, added to replan.
[DBG]  Agent 28 | Start (global): 661 -> (local): (2, 2) at time 5 | Goal (global): 724 -> (local): (4, 1) at time 32
[DBG]  Agent 46 | Start (global): 724 -> (local): (4, 1) at time 5 | Goal (global): 727 -> (local): (4, 4) at time 8
[DBG]  Agent 89 | Start (global): 597 -> (local): (0, 2) at time 5 | Goal (global): 724 -> (local): (4, 1) at time 10
[DBG]  Agent 91 | Start (global): 726 -> (local): (4, 3) at time 5 | Goal (global): 727 -> (local): (4, 4) at time 6
[DBG]  Agent 108 | Start (global): 692 -> (local): (3, 1) at time 5 | Goal (global): 724 -> (local): (4, 1) at time 6
[DBG]  [REPAIR] SAT destroy operator called.
[DBG]  [REPAIR] SAT operator – launching subproblem FOR OPTIMIZATION.
[DBG]  Creating local paths (sx, sy) in the submap for T_sync = 5
[DBG]    Agent 28 (global paths from T=5 to 32) has local path: (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,1) (3,1) (4,1) 
[DBG]    Agent 46 (global paths from T=5 to 8) has local path: (4,1) (4,2) (4,3) (4,4) 
[DBG]    Agent 89 (global paths from T=5 to 10) has local path: (0,2) (0,1) (1,1) (2,1) (3,1) (4,1) 
[DBG]    Agent 91 (global paths from T=5 to 6) has local path: (4,3) (4,4) 
[DBG]    Agent 108 (global paths from T=5 to 6) has local path: (3,1) (4,1) 
[DBG]  Checking input data for SAT solver:
[DBG]    - Number of agents to replan: 5
[DBG]  Agent 28 has the original local path length: 28 => Start (2,2), Goal (4,1)
[DBG]  Agent 46 has the original local path length: 4 => Start (4,1), Goal (4,4)
[DBG]  Agent 89 has the original local path length: 6 => Start (0,2), Goal (4,1)
[DBG]  Agent 91 has the original local path length: 2 => Start (4,3), Goal (4,4)
[DBG]  Agent 108 has the original local path length: 2 => Start (3,1), Goal (4,1)
[DBG]  Start position: (2, 2), (4, 1), (0, 2), (4, 3), (3, 1), 
[DBG]  Goal position: (4, 1), (4, 4), (4, 1), (4, 4), (4, 1), 
[DBG]  SAT instance and solver created.
Currently solving
Instance name: scen
Map name: map
Encoding used: disappear_at_goal
SAT solver used: Kissat
Optimizing function: sum of costs
Number of agents: 5
Mks LB: 6
SoC LB: 18
Delta: 0
Remaining time: 300000 [ms]

Vertex conflict! Agents 0, 1, timestep 4, location 0
Swapping conflict! Agents 0, 1, timestep 4, edge (0,0)
Vertex conflict! Agents 0, 1, timestep 5, location 0
Vertex conflict! Agents 0, 3, timestep 4, location 0
Swapping conflict! Agents 0, 3, timestep 4, edge (0,0)
Vertex conflict! Agents 0, 3, timestep 5, location 0
Vertex conflict! Agents 0, 4, timestep 4, location 0
Swapping conflict! Agents 0, 4, timestep 4, edge (0,0)
Vertex conflict! Agents 0, 4, timestep 5, location 0
Vertex conflict! Agents 1, 3, timestep 4, location 0
Swapping conflict! Agents 1, 3, timestep 4, edge (0,0)
Vertex conflict! Agents 1, 3, timestep 5, location 0
Vertex conflict! Agents 1, 4, timestep 4, location 0
Swapping conflict! Agents 1, 4, timestep 4, edge (0,0)
Vertex conflict! Agents 1, 4, timestep 5, location 0
Vertex conflict! Agents 3, 4, timestep 2, location 0
Swapping conflict! Agents 3, 4, timestep 2, edge (0,0)
Vertex conflict! Agents 3, 4, timestep 3, location 0
Swapping conflict! Agents 3, 4, timestep 3, edge (0,0)
Vertex conflict! Agents 3, 4, timestep 4, location 0
Swapping conflict! Agents 3, 4, timestep 4, edge (0,0)
Vertex conflict! Agents 3, 4, timestep 5, location 0
Found plan [agents = 5] [timesteps = 6]
Agent #0 : 9 8 11 12 0 0 
Agent #1 : 12 13 14 15 0 0 
Agent #2 : 1 5 9 8 11 12 
Agent #3 : 14 15 0 0 0 0 
Agent #4 : 11 12 0 0 0 0 

[STAT] Solver returned: 0
[DBG]  Agent (index) 28 | New local path (submap idx):
[DBG]  9 8 11 12 
[DBG]  Agent (index) 46 | New local path (submap idx):
[DBG]  12 13 14 15 
[DBG]  Agent (index) 89 | New local path (submap idx):
[DBG]  1 5 9 8 11 12 
[DBG]  Agent (index) 91 | New local path (submap idx):
[DBG]  14 15 
[DBG]  Agent (index) 108 | New local path (submap idx):
[DBG]  11 12 
[DBG]  Update the agent path 28 | Original local length: 28 | New local length: 4
[DBG]  agent 28 t=0 => decoded (sx,sy)=(2,2) => global_id=661
[DBG]  agent 28 t=1 => decoded (sx,sy)=(2,1) => global_id=660
[DBG]  agent 28 t=2 => decoded (sx,sy)=(3,1) => global_id=692
[DBG]  agent 28 t=3 => decoded (sx,sy)=(4,1) => global_id=724
[DBG]  Complete path of agent 28:
[DBG]    Original: 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 660 692 724 756 757 757 757 757 757 757 757 725 726 727 
[DBG]    New:     661 661 661 661 661 661 660 692 724 756 757 757 757 757 757 757 757 725 726 727 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 661 661 661 661 661 
[DBG]    Local path (in submap): 661 660 692 724 756 757 757 757 757 757 757 757 725 726 727 
[DBG]    Suffix (out of submap): 
[DBG]  Original agent path length 28 je: 44
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 0: 661, 661, 661, 661, 661, 661, 660, 692, 724, 756, 757, 757, 757, 757, 757, 757, 757, 725, 726, 727, 
[DBG]  Path for agent 28 updated, resulting length: 20
[DBG]  Update the agent path 46 | Original local length: 4 | New local length: 4
[DBG]  agent 46 t=0 => decoded (sx,sy)=(4,1) => global_id=724
[DBG]  agent 46 t=1 => decoded (sx,sy)=(4,2) => global_id=725
[DBG]  agent 46 t=2 => decoded (sx,sy)=(4,3) => global_id=726
[DBG]  agent 46 t=3 => decoded (sx,sy)=(4,4) => global_id=727
[DBG]  Complete path of agent 46:
[DBG]    Original: 786 787 788 788 756 724 725 726 727 728 696 664 632 600 601 602 603 604 572 540 508 476 444 412 380 348 349 317 285 284 252 
[DBG]    New:     786 787 788 788 756 724 725 726 727 728 696 664 632 600 601 602 603 604 572 540 508 476 444 412 380 348 349 317 285 284 252 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 786 787 788 788 756 
[DBG]    Local path (in submap): 724 725 726 727 
[DBG]    Suffix (out of submap): 728 696 664 632 600 601 602 603 604 572 540 508 476 444 412 380 348 349 317 285 284 252 
[DBG]  Original agent path length 46 je: 31
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 1: 786, 787, 788, 788, 756, 724, 725, 726, 727, 728, 696, 664, 632, 600, 601, 602, 603, 604, 572, 540, 508, 476, 444, 412, 380, 348, 349, 317, 285, 284, 252, 
[DBG]  Path for agent 46 updated, resulting length: 31
[DBG]  Update the agent path 89 | Original local length: 6 | New local length: 6
[DBG]  agent 89 t=0 => decoded (sx,sy)=(0,2) => global_id=597
[DBG]  agent 89 t=1 => decoded (sx,sy)=(1,2) => global_id=629
[DBG]  agent 89 t=2 => decoded (sx,sy)=(2,2) => global_id=661
[DBG]  agent 89 t=3 => decoded (sx,sy)=(2,1) => global_id=660
[DBG]  agent 89 t=4 => decoded (sx,sy)=(3,1) => global_id=692
[DBG]  agent 89 t=5 => decoded (sx,sy)=(4,1) => global_id=724
[DBG]  Complete path of agent 89:
[DBG]    Original: 437 469 501 533 565 597 596 628 660 692 724 756 788 820 821 822 854 886 918 950 982 1014 1015 
[DBG]    New:     437 469 501 533 565 597 629 661 660 692 724 756 788 820 821 822 854 886 918 950 982 1014 1015 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 437 469 501 533 565 
[DBG]    Local path (in submap): 597 629 661 660 692 724 
[DBG]    Suffix (out of submap): 756 788 820 821 822 854 886 918 950 982 1014 1015 
[DBG]  Original agent path length 89 je: 23
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 2: 437, 469, 501, 533, 565, 597, 629, 661, 660, 692, 724, 756, 788, 820, 821, 822, 854, 886, 918, 950, 982, 1014, 1015, 
[DBG]  Path for agent 89 updated, resulting length: 23
[DBG]  Update the agent path 91 | Original local length: 2 | New local length: 2
[DBG]  agent 91 t=0 => decoded (sx,sy)=(4,3) => global_id=726
[DBG]  agent 91 t=1 => decoded (sx,sy)=(4,4) => global_id=727
[DBG]  Complete path of agent 91:
[DBG]    Original: 787 755 756 757 725 726 727 728 696 664 632 633 601 569 570 571 572 540 541 509 477 445 413 413 381 
[DBG]    New:     787 755 756 757 725 726 727 728 696 664 632 633 601 569 570 571 572 540 541 509 477 445 413 413 381 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 787 755 756 757 725 
[DBG]    Local path (in submap): 726 727 
[DBG]    Suffix (out of submap): 728 696 664 632 633 601 569 570 571 572 540 541 509 477 445 413 413 381 
[DBG]  Original agent path length 91 je: 25
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 3: 787, 755, 756, 757, 725, 726, 727, 728, 696, 664, 632, 633, 601, 569, 570, 571, 572, 540, 541, 509, 477, 445, 413, 413, 381, 
[DBG]  Path for agent 91 updated, resulting length: 25
[DBG]  Update the agent path 108 | Original local length: 2 | New local length: 2
[DBG]  agent 108 t=0 => decoded (sx,sy)=(3,1) => global_id=692
[DBG]  agent 108 t=1 => decoded (sx,sy)=(4,1) => global_id=724
[DBG]  Complete path of agent 108:
[DBG]    Original: 628 660 692 692 692 692 724 756 788 820 821 822 823 855 856 888 920 952 953 954 955 956 957 989 1021 
[DBG]    New:     628 660 692 692 692 692 724 756 788 820 821 822 823 855 856 888 920 952 953 954 955 956 957 989 1021 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 628 660 692 692 692 
[DBG]    Local path (in submap): 692 724 
[DBG]    Suffix (out of submap): 756 788 820 821 822 823 855 856 888 920 952 953 954 955 956 957 989 1021 
[DBG]  Original agent path length 108 je: 25
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 4: 628, 660, 692, 692, 692, 692, 724, 756, 788, 820, 821, 822, 823, 855, 856, 888, 920, 952, 953, 954, 955, 956, 957, 989, 1021, 
[DBG]  Path for agent 108 updated, resulting length: 25
[DBG]  Paths successfully updated.
[DBG]  (LNS.cpp) New path for agent 28: 
[DBG]  661, 661, 661, 661, 661, 661, 660, 692, 724, 756, 757, 757, 757, 757, 757, 757, 757, 725, 726, 727, 
[DBG]  (LNS.cpp) New path for agent 46: 
[DBG]  786, 787, 788, 788, 756, 724, 725, 726, 727, 728, 696, 664, 632, 600, 601, 602, 603, 604, 572, 540, 508, 476, 444, 412, 380, 348, 349, 317, 285, 284, 252, 
[DBG]  (LNS.cpp) New path for agent 89: 
[DBG]  437, 469, 501, 533, 565, 597, 629, 661, 660, 692, 724, 756, 788, 820, 821, 822, 854, 886, 918, 950, 982, 1014, 1015, 
[DBG]  (LNS.cpp) New path for agent 91: 
[DBG]  787, 755, 756, 757, 725, 726, 727, 728, 696, 664, 632, 633, 601, 569, 570, 571, 572, 540, 541, 509, 477, 445, 413, 413, 381, 
[DBG]  (LNS.cpp) New path for agent 108: 
[DBG]  628, 660, 692, 692, 692, 692, 724, 756, 788, 820, 821, 822, 823, 855, 856, 888, 920, 952, 953, 954, 955, 956, 957, 989, 1021, 
[DBG]  Delta value: 0.167832
[DBG]  Rewarding metric index = 1
[DBG]  component_weights = {1.50829e-09, 1, 6.64322e-10, 1.15178e-09}
[DBG]  opSuccess value: 1
[STAT] neighbor.sum_of_costs before recomputation: 119
[STAT] neighbor.old_sum_of_costs before recomputation: 143
[STAT] sum_of_costs before recomputation: 4292
[DBG]  Validate solution immediately after SAT success.
[WARNING] Problem after SAT: Target conflict: agent 42 (len 43) traverses target of agent 28 (len 19) at location 727 at timestep 42
[DBG]  [DEBUG] Attempting immediate repair via init_lns because problem occurred after SAT (should be applied only for conflicts...).
[DBG]  [DEBUG] Passing 150 agents to init_lns (skip=true).
[DBG]  [DEBUG] path_table contents for selected agents (neighbor.agents):
[DBG]    Agent 28 => controlling path length=20
[DBG]    Agent 46 => controlling path length=31
[DBG]    Agent 89 => controlling path length=23
[DBG]    Agent 91 => controlling path length=25
[DBG]    Agent 108 => controlling path length=25
[DBG]  hodnota skip_initial_solution=1
[DBG]  We skip initialSolution => call buildCollisionData()
[DBG]  buildCollisionData() called – skip_initial_solution case.
[DBG]  Agents.size()=150, collision_graph.size()=150
[DBG]  agent 28 => updateCollidingPairs => foundCollision
[DBG]  agent 42 => updateCollidingPairs => foundCollision
[DBG]  Conflicting agent pairs:
[DBG]  agent 28 is in conflict with agent 42
[DBG]  buildCollisionData() => sum_of_costs=4268, num_of_colliding_pairs=1
[DBG]  buildCollisionData done => sum_of_costs=4268, num_of_colliding_pairs=1
[DBG]  sum_of_cost hodnota: 4268
[DBG]  After skip/init build => iteration_stats.back(): sum_of_costs=4268, collisions=1
[DEBUG] Using default neighbor generation strategy for conflicts: 2
[DEBUG] Using default neighbor generation strategy for conflicts: 0
	InitLNS(PP): runtime = 0.00140975, iterations = 3, colliding pairs = 0, initial colliding pairs = 1, solution cost = 4297, initial solution cost = 4268, failed iterations = 0
[DBG]  init_lns->sum_of_costs after init_lns->run: 4297
[DBG]  sum_of_costs after assignment from init_lns->run: 4297
[DBG]  Recomputing sum_of_cost by dividing neighbor.sum_of_costs and neighbor.old_sum_of_costs
[STAT] sum_of_costs after recomputation: 4297
[STAT] Iteration 173
[DBG]  Using SAT operator (destroy+repair SAT).
[DBG]  ====================
[DBG]  SAT destroy operator called.
[DBG]  SAT heuristic: 2
[DBG]  key_agent_id: 28
[DBG]  key_agent_id global path length: 44
[DBG]  Submap content (global positions):
[DBG]  595 596 597 598 599 
[DBG]  627 628 629 630 631 
[DBG]  659 660 661 662 663 
[DBG]  691 692 693 694 695 
[DBG]  723 724 725 726 727 
[DBG]  Map content with agents and obstacles:
[DBG]  X . A X A 
[DBG]  . . . X . 
[DBG]  . . A X X 
[DBG]  . . X X X 
[DBG]  X . . . . 
[DBG]  content of the map structure that we pass to the SAT solver:
[DBG]  -1  1  1  -1  1  
[DBG]  1  1  1  -1  1  
[DBG]  1  1  1  -1  -1  
[DBG]  1  1  -1  -1  -1  
[DBG]  -1  1  1  1  1  
[DBG]  Identifying agents in a submap for rescheduling (when key_agent is there at the time 20):
[DBG]  Agent 28 found intervals in the sub-map:
[DBG]   [0..33] [41..43]
[DBG]  Agent 28 (interval in submap: [0..33]) contains time 20, added to replan.
[DBG]  Agent 30 found intervals in the sub-map:
[DBG]  
[DBG]  Agent 30 is not in sub-map at time 20 (intervals: 
[DBG]  )
[DBG]  Agent 100 found intervals in the sub-map:
[DBG]   [20..25]
[DBG]  Agent 100 (interval in submap: [20..25]) contains time 20, added to replan.
[DBG]  Agent 135 found intervals in the sub-map:
[DBG]   [4..4] [9..15]
[DBG]  Agent 135 is not in sub-map at time 20 (intervals: 
[DBG]  [4..4] [9..15] )
[DBG]  Agent 144 found intervals in the sub-map:
[DBG]   [20..21]
[DBG]  Agent 144 (interval in submap: [20..21]) contains time 20, added to replan.
[DBG]  Agent 28 | Start (global): 661 -> (local): (2, 2) at time 20 | Goal (global): 725 -> (local): (4, 2) at time 33
[DBG]  Agent 100 | Start (global): 597 -> (local): (0, 2) at time 20 | Goal (global): 724 -> (local): (4, 1) at time 25
[DBG]  Agent 144 | Start (global): 599 -> (local): (0, 4) at time 20 | Goal (global): 631 -> (local): (1, 4) at time 21
[DBG]  [REPAIR] SAT destroy operator called.
[DBG]  [REPAIR] SAT operator – launching subproblem FOR OPTIMIZATION.
[DBG]  Creating local paths (sx, sy) in the submap for T_sync = 20
[DBG]    Agent 28 (global paths from T=20 to 33) has local path: (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,1) (3,1) (4,1) (4,2) 
[DBG]    Agent 100 (global paths from T=20 to 25) has local path: (0,2) (1,2) (1,1) (2,1) (3,1) (4,1) 
[DBG]    Agent 144 (global paths from T=20 to 21) has local path: (0,4) (1,4) 
[DBG]  Checking input data for SAT solver:
[DBG]    - Number of agents to replan: 3
[DBG]  Agent 28 has the original local path length: 14 => Start (2,2), Goal (4,2)
[DBG]  Agent 100 has the original local path length: 6 => Start (0,2), Goal (4,1)
[DBG]  Agent 144 has the original local path length: 2 => Start (0,4), Goal (1,4)
[DBG]  Start position: (2, 2), (0, 2), (0, 4), 
[DBG]  Goal position: (4, 2), (4, 1), (1, 4), 
[DBG]  SAT instance and solver created.
Currently solving
Instance name: scen
Map name: map
Encoding used: disappear_at_goal
SAT solver used: Kissat
Optimizing function: sum of costs
Number of agents: 3
Mks LB: 6
SoC LB: 13
Delta: 0
Remaining time: 300000 [ms]

Vertex conflict! Agents 0, 2, timestep 5, location 0
Found plan [agents = 3] [timesteps = 6]
Agent #0 : 9 8 11 12 13 0 
Agent #1 : 1 5 9 8 11 12 
Agent #2 : 2 6 0 0 0 0 

[STAT] Solver returned: 0
[DBG]  Agent (index) 28 | New local path (submap idx):
[DBG]  9 8 11 12 13 
[DBG]  Agent (index) 100 | New local path (submap idx):
[DBG]  1 5 9 8 11 12 
[DBG]  Agent (index) 144 | New local path (submap idx):
[DBG]  2 6 
[DBG]  Update the agent path 28 | Original local length: 14 | New local length: 5
[DBG]  agent 28 t=0 => decoded (sx,sy)=(2,2) => global_id=661
[DBG]  agent 28 t=1 => decoded (sx,sy)=(2,1) => global_id=660
[DBG]  agent 28 t=2 => decoded (sx,sy)=(3,1) => global_id=692
[DBG]  agent 28 t=3 => decoded (sx,sy)=(4,1) => global_id=724
[DBG]  agent 28 t=4 => decoded (sx,sy)=(4,2) => global_id=725
[DBG]  Complete path of agent 28:
[DBG]    Original: 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 660 692 724 725 757 757 757 757 757 757 757 725 726 727 
[DBG]    New:     661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 660 692 724 725 757 757 757 757 757 757 757 725 726 727 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 
[DBG]    Local path (in submap): 661 660 692 724 725 757 757 757 757 757 757 757 725 726 
[DBG]    Suffix (out of submap): 727 
[DBG]  Original agent path length 28 je: 44
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 0: 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 660, 692, 724, 725, 757, 757, 757, 757, 757, 757, 757, 725, 726, 727, 
[DBG]  Path for agent 28 updated, resulting length: 35
[DBG]  Update the agent path 100 | Original local length: 6 | New local length: 6
[DBG]  agent 100 t=0 => decoded (sx,sy)=(0,2) => global_id=597
[DBG]  agent 100 t=1 => decoded (sx,sy)=(1,2) => global_id=629
[DBG]  agent 100 t=2 => decoded (sx,sy)=(2,2) => global_id=661
[DBG]  agent 100 t=3 => decoded (sx,sy)=(2,1) => global_id=660
[DBG]  agent 100 t=4 => decoded (sx,sy)=(3,1) => global_id=692
[DBG]  agent 100 t=5 => decoded (sx,sy)=(4,1) => global_id=724
[DBG]  Complete path of agent 100:
[DBG]    Original: 287 319 351 350 349 381 380 379 378 377 409 408 440 439 438 470 502 501 533 565 597 629 628 660 692 724 756 755 787 819 851 883 882 914 913 912 944 976 975 974 1006 1005 1004 1003 
[DBG]    New:     287 319 351 350 349 381 380 379 378 377 409 408 440 439 438 470 502 501 533 565 597 629 661 660 692 724 756 755 787 819 851 883 882 914 913 912 944 976 975 974 1006 1005 1004 1003 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 287 319 351 350 349 381 380 379 378 377 409 408 440 439 438 470 502 501 533 565 
[DBG]    Local path (in submap): 597 629 661 660 692 724 
[DBG]    Suffix (out of submap): 756 755 787 819 851 883 882 914 913 912 944 976 975 974 1006 1005 1004 1003 
[DBG]  Original agent path length 100 je: 44
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 1: 287, 319, 351, 350, 349, 381, 380, 379, 378, 377, 409, 408, 440, 439, 438, 470, 502, 501, 533, 565, 597, 629, 661, 660, 692, 724, 756, 755, 787, 819, 851, 883, 882, 914, 913, 912, 944, 976, 975, 974, 1006, 1005, 1004, 1003, 
[DBG]  Path for agent 100 updated, resulting length: 44
[DBG]  Update the agent path 144 | Original local length: 2 | New local length: 2
[DBG]  agent 144 t=0 => decoded (sx,sy)=(0,4) => global_id=599
[DBG]  agent 144 t=1 => decoded (sx,sy)=(1,4) => global_id=631
[DBG]  Complete path of agent 144:
[DBG]    Original: 121 153 185 217 249 281 313 345 377 409 441 441 473 474 506 538 570 602 601 600 599 631 
[DBG]    New:     121 153 185 217 249 281 313 345 377 409 441 441 473 474 506 538 570 602 601 600 599 631 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 121 153 185 217 249 281 313 345 377 409 441 441 473 474 506 538 570 602 601 600 
[DBG]    Local path (in submap): 599 631 
[DBG]    Suffix (out of submap): 
[DBG]  Original agent path length 144 je: 22
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 2: 121, 153, 185, 217, 249, 281, 313, 345, 377, 409, 441, 441, 473, 474, 506, 538, 570, 602, 601, 600, 599, 631, 
[DBG]  Path for agent 144 updated, resulting length: 22
[DBG]  Paths successfully updated.
[DBG]  (LNS.cpp) New path for agent 28: 
[DBG]  661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 660, 692, 724, 725, 757, 757, 757, 757, 757, 757, 757, 725, 726, 727, 
[DBG]  (LNS.cpp) New path for agent 100: 
[DBG]  287, 319, 351, 350, 349, 381, 380, 379, 378, 377, 409, 408, 440, 439, 438, 470, 502, 501, 533, 565, 597, 629, 661, 660, 692, 724, 756, 755, 787, 819, 851, 883, 882, 914, 913, 912, 944, 976, 975, 974, 1006, 1005, 1004, 1003, 
[DBG]  (LNS.cpp) New path for agent 144: 
[DBG]  121, 153, 185, 217, 249, 281, 313, 345, 377, 409, 441, 441, 473, 474, 506, 538, 570, 602, 601, 600, 599, 631, 
[DBG]  Delta value: 0.0841121
[DBG]  Rewarding metric index = 1
[DBG]  component_weights = {1.3217e-09, 1, 5.82141e-10, 1.0093e-09}
[DBG]  opSuccess value: 1
[STAT] neighbor.sum_of_costs before recomputation: 98
[STAT] neighbor.old_sum_of_costs before recomputation: 107
[STAT] sum_of_costs before recomputation: 4297
[DBG]  Validate solution immediately after SAT success.
[WARNING] Problem after SAT: Target conflict: agent 42 (len 43) traverses target of agent 28 (len 34) at location 727 at timestep 42
[DBG]  [DEBUG] Attempting immediate repair via init_lns because problem occurred after SAT (should be applied only for conflicts...).
[DBG]  [DEBUG] Passing 150 agents to init_lns (skip=true).
[DBG]  [DEBUG] path_table contents for selected agents (neighbor.agents):
[DBG]    Agent 28 => controlling path length=35
[DBG]    Agent 100 => controlling path length=44
[DBG]    Agent 144 => controlling path length=22
[DBG]  hodnota skip_initial_solution=1
[DBG]  We skip initialSolution => call buildCollisionData()
[DBG]  buildCollisionData() called – skip_initial_solution case.
[DBG]  Agents.size()=150, collision_graph.size()=150
[DBG]  agent 28 => updateCollidingPairs => foundCollision
[DBG]  agent 42 => updateCollidingPairs => foundCollision
[DBG]  Conflicting agent pairs:
[DBG]  agent 28 is in conflict with agent 42
[DBG]  buildCollisionData() => sum_of_costs=4288, num_of_colliding_pairs=1
[DBG]  buildCollisionData done => sum_of_costs=4288, num_of_colliding_pairs=1
[DBG]  sum_of_cost hodnota: 4288
[DBG]  After skip/init build => iteration_stats.back(): sum_of_costs=4288, collisions=1
[DEBUG] Using default neighbor generation strategy for conflicts: 2
[DEBUG] Using default neighbor generation strategy for conflicts: 0
	InitLNS(PP): runtime = 0.00187829, iterations = 3, colliding pairs = 0, initial colliding pairs = 1, solution cost = 4292, initial solution cost = 4288, failed iterations = 0
[DBG]  init_lns->sum_of_costs after init_lns->run: 4292
[DBG]  sum_of_costs after assignment from init_lns->run: 4292
[DBG]  Recomputing sum_of_cost by dividing neighbor.sum_of_costs and neighbor.old_sum_of_costs
[STAT] sum_of_costs after recomputation: 4292
[STAT] Iteration 174
[DBG]  Random chance did not select SAT operator (r=99), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 174
[DBG]  Using SAT operator (destroy+repair SAT).
[DBG]  ====================
[DBG]  SAT destroy operator called.
[DBG]  SAT heuristic: 2
[DBG]  key_agent_id: 28
[DBG]  key_agent_id global path length: 44
[DBG]  Submap content (global positions):
[DBG]  658 659 660 661 662 
[DBG]  690 691 692 693 694 
[DBG]  722 723 724 725 726 
[DBG]  754 755 756 757 758 
[DBG]  786 787 788 789 790 
[DBG]  Map content with agents and obstacles:
[DBG]  . . . . X 
[DBG]  X . . X X 
[DBG]  . X A . . 
[DBG]  X . A . X 
[DBG]  . . . X . 
[DBG]  content of the map structure that we pass to the SAT solver:
[DBG]  1  1  1  1  -1  
[DBG]  -1  1  1  -1  -1  
[DBG]  1  -1  1  1  1  
[DBG]  -1  1  1  1  -1  
[DBG]  1  1  1  -1  1  
[DBG]  Identifying agents in a submap for rescheduling (when key_agent is there at the time 32):
[DBG]  Agent 3 found intervals in the sub-map:
[DBG]   [26..30]
[DBG]  Agent 3 is not in sub-map at time 32 (intervals: 
[DBG]  [26..30] )
[DBG]  Agent 11 found intervals in the sub-map:
[DBG]  
[DBG]  Agent 11 is not in sub-map at time 32 (intervals: 
[DBG]  )
[DBG]  Agent 26 found intervals in the sub-map:
[DBG]   [29..33]
[DBG]  Agent 26 (interval in submap: [29..33]) contains time 32, added to replan.
[DBG]  Agent 28 found intervals in the sub-map:
[DBG]   [0..42]
[DBG]  Agent 28 (interval in submap: [0..42]) contains time 32, added to replan.
[DBG]  Agent 148 found intervals in the sub-map:
[DBG]   [37..39]
[DBG]  Agent 148 is not in sub-map at time 32 (intervals: 
[DBG]  [37..39] )
[DBG]  Agent 26 | Start (global): 756 -> (local): (3, 2) at time 32 | Goal (global): 755 -> (local): (3, 1) at time 33
[DBG]  Agent 28 | Start (global): 724 -> (local): (2, 2) at time 32 | Goal (global): 726 -> (local): (2, 4) at time 42
[DBG]  [REPAIR] SAT destroy operator called.
[DBG]  [REPAIR] SAT operator – launching subproblem FOR OPTIMIZATION.
[DBG]  Creating local paths (sx, sy) in the submap for T_sync = 32
[DBG]    Agent 26 (global paths from T=32 to 33) has local path: (3,2) (3,1) 
[DBG]    Agent 28 (global paths from T=32 to 42) has local path: (2,2) (2,3) (3,3) (3,3) (3,3) (3,3) (3,3) (3,3) (3,3) (2,3) (2,4) 
[DBG]  Checking input data for SAT solver:
[DBG]    - Number of agents to replan: 2
[DBG]  Agent 26 has the original local path length: 2 => Start (3,2), Goal (3,1)
[DBG]  Agent 28 has the original local path length: 11 => Start (2,2), Goal (2,4)
[DBG]  Start position: (3, 2), (2, 2), 
[DBG]  Goal position: (3, 1), (2, 4), 
[DBG]  SAT instance and solver created.
Currently solving
Instance name: scen
Map name: map
Encoding used: disappear_at_goal
SAT solver used: Kissat
Optimizing function: sum of costs
Number of agents: 2
Mks LB: 3
SoC LB: 5
Delta: 0
Remaining time: 300000 [ms]

Found plan [agents = 2] [timesteps = 3]
Agent #0 : 11 10 0 
Agent #1 : 7 8 9 

[STAT] Solver returned: 0
[DBG]  Agent (index) 26 | New local path (submap idx):
[DBG]  11 10 
[DBG]  Agent (index) 28 | New local path (submap idx):
[DBG]  7 8 9 
[DBG]  Update the agent path 26 | Original local length: 2 | New local length: 2
[DBG]  agent 26 t=0 => decoded (sx,sy)=(3,2) => global_id=756
[DBG]  agent 26 t=1 => decoded (sx,sy)=(3,1) => global_id=755
[DBG]  Complete path of agent 26:
[DBG]    Original: 13 14 46 47 79 80 81 82 83 115 147 179 180 212 244 276 308 340 341 373 405 437 469 501 533 565 597 629 628 660 692 724 756 755 
[DBG]    New:     13 14 46 47 79 80 81 82 83 115 147 179 180 212 244 276 308 340 341 373 405 437 469 501 533 565 597 629 628 660 692 724 756 755 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 13 14 46 47 79 80 81 82 83 115 147 179 180 212 244 276 308 340 341 373 405 437 469 501 533 565 597 629 628 660 692 724 
[DBG]    Local path (in submap): 756 755 
[DBG]    Suffix (out of submap): 
[DBG]  Original agent path length 26 je: 34
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 0: 13, 14, 46, 47, 79, 80, 81, 82, 83, 115, 147, 179, 180, 212, 244, 276, 308, 340, 341, 373, 405, 437, 469, 501, 533, 565, 597, 629, 628, 660, 692, 724, 756, 755, 
[DBG]  Path for agent 26 updated, resulting length: 34
[DBG]  Update the agent path 28 | Original local length: 11 | New local length: 3
[DBG]  agent 28 t=0 => decoded (sx,sy)=(2,2) => global_id=724
[DBG]  agent 28 t=1 => decoded (sx,sy)=(2,3) => global_id=725
[DBG]  agent 28 t=2 => decoded (sx,sy)=(2,4) => global_id=726
[DBG]  Complete path of agent 28:
[DBG]    Original: 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 660 692 724 725 757 757 757 757 757 757 757 725 726 727 
[DBG]    New:     661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 660 692 724 725 726 727 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 660 692 
[DBG]    Local path (in submap): 724 725 726 727 
[DBG]    Suffix (out of submap): 
[DBG]  Original agent path length 28 je: 44
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 1: 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 660, 692, 724, 725, 726, 727, 
[DBG]  Path for agent 28 updated, resulting length: 36
[DBG]  Paths successfully updated.
[DBG]  (LNS.cpp) New path for agent 26: 
[DBG]  13, 14, 46, 47, 79, 80, 81, 82, 83, 115, 147, 179, 180, 212, 244, 276, 308, 340, 341, 373, 405, 437, 469, 501, 533, 565, 597, 629, 628, 660, 692, 724, 756, 755, 
[DBG]  (LNS.cpp) New path for agent 28: 
[DBG]  661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 660, 692, 724, 725, 726, 727, 
[DBG]  Delta value: 0.105263
[DBG]  Rewarding metric index = 1
[DBG]  component_weights = {1.13603e-09, 1, 5.00364e-10, 8.67514e-10}
[DBG]  opSuccess value: 1
[STAT] neighbor.sum_of_costs before recomputation: 68
[STAT] neighbor.old_sum_of_costs before recomputation: 76
[STAT] sum_of_costs before recomputation: 4292
[DBG]  Validate solution immediately after SAT success.
[WARNING] Problem after SAT: Target conflict: agent 42 (len 43) traverses target of agent 28 (len 35) at location 727 at timestep 42
[DBG]  [DEBUG] Attempting immediate repair via init_lns because problem occurred after SAT (should be applied only for conflicts...).
[DBG]  [DEBUG] Passing 150 agents to init_lns (skip=true).
[DBG]  [DEBUG] path_table contents for selected agents (neighbor.agents):
[DBG]    Agent 26 => controlling path length=34
[DBG]    Agent 28 => controlling path length=36
[DBG]  hodnota skip_initial_solution=1
[DBG]  We skip initialSolution => call buildCollisionData()
[DBG]  buildCollisionData() called – skip_initial_solution case.
[DBG]  Agents.size()=150, collision_graph.size()=150
[DBG]  agent 28 => updateCollidingPairs => foundCollision
[DBG]  agent 42 => updateCollidingPairs => foundCollision
[DBG]  Conflicting agent pairs:
[DBG]  agent 28 is in conflict with agent 42
[DBG]  buildCollisionData() => sum_of_costs=4284, num_of_colliding_pairs=1
[DBG]  buildCollisionData done => sum_of_costs=4284, num_of_colliding_pairs=1
[DBG]  sum_of_cost hodnota: 4284
[DBG]  After skip/init build => iteration_stats.back(): sum_of_costs=4284, collisions=1
[DEBUG] Using default neighbor generation strategy for conflicts: 0
	InitLNS(PP): runtime = 0.00180838, iterations = 2, colliding pairs = 0, initial colliding pairs = 1, solution cost = 4327, initial solution cost = 4284, failed iterations = 0
[DBG]  init_lns->sum_of_costs after init_lns->run: 4327
[DBG]  sum_of_costs after assignment from init_lns->run: 4327
[DBG]  Recomputing sum_of_cost by dividing neighbor.sum_of_costs and neighbor.old_sum_of_costs
[STAT] sum_of_costs after recomputation: 4327
[STAT] Iteration 175
[DBG]  Random chance did not select SAT operator (r=79), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 175
[DBG]  Random chance did not select SAT operator (r=53), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 175
[DBG]  Random chance did not select SAT operator (r=50), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 175
[DBG]  Random chance did not select SAT operator (r=84), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 175
[DBG]  Random chance did not select SAT operator (r=68), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 175
[DBG]  Random chance did not select SAT operator (r=91), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 175
[DBG]  Random chance did not select SAT operator (r=82), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 175
[DBG]  Random chance did not select SAT operator (r=13), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 175
[DBG]  Random chance did not select SAT operator (r=44), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 175
[DBG]  Random chance did not select SAT operator (r=62), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 175
[DBG]  Random chance did not select SAT operator (r=49), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 175
[DBG]  Using SAT operator (destroy+repair SAT).
[DBG]  ====================
[DBG]  SAT destroy operator called.
[DBG]  SAT heuristic: 2
[DBG]  key_agent_id: 28
[DBG]  key_agent_id global path length: 44
[DBG]  Submap content (global positions):
[DBG]  662 663 664 665 666 
[DBG]  694 695 696 697 698 
[DBG]  726 727 728 729 730 
[DBG]  758 759 760 761 762 
[DBG]  790 791 792 793 794 
[DBG]  Map content with agents and obstacles:
[DBG]  X X . X . 
[DBG]  X X . . X 
[DBG]  A . A A . 
[DBG]  X . X . X 
[DBG]  . X . . X 
[DBG]  content of the map structure that we pass to the SAT solver:
[DBG]  -1  -1  1  -1  1  
[DBG]  -1  -1  1  1  -1  
[DBG]  1  1  1  1  1  
[DBG]  -1  1  -1  1  -1  
[DBG]  1  -1  1  1  -1  
[DBG]  Identifying agents in a submap for rescheduling (when key_agent is there at the time 41):
[DBG]  Agent 1 found intervals in the sub-map:
[DBG]   [37..43]
[DBG]  Agent 1 (interval in submap: [37..43]) contains time 41, added to replan.
[DBG]  Agent 28 found intervals in the sub-map:
[DBG]   [34..43]
[DBG]  Agent 28 (interval in submap: [34..43]) contains time 41, added to replan.
[DBG]  Agent 42 found intervals in the sub-map:
[DBG]   [41..43]
[DBG]  Agent 42 (interval in submap: [41..43]) contains time 41, added to replan.
[DBG]  Agent 1 | Start (global): 729 -> (local): (2, 3) at time 41 | Goal (global): 728 -> (local): (2, 2) at time 43
[DBG]  Agent 28 | Start (global): 728 -> (local): (2, 2) at time 41 | Goal (global): 727 -> (local): (2, 1) at time 43
[DBG]  Agent 42 | Start (global): 726 -> (local): (2, 0) at time 41 | Goal (global): 759 -> (local): (3, 1) at time 43
[DBG]  [REPAIR] SAT destroy operator called.
[DBG]  [REPAIR] SAT operator – launching subproblem FOR OPTIMIZATION.
[DBG]  Creating local paths (sx, sy) in the submap for T_sync = 41
[DBG]    Agent 1 (global paths from T=41 to 43) has local path: (2,3) (2,3) (2,2) 
[DBG]    Agent 28 (global paths from T=41 to 43) has local path: (2,2) (2,2) (2,1) 
[DBG]    Agent 42 (global paths from T=41 to 43) has local path: (2,0) (2,1) (3,1) 
[DBG]  Checking input data for SAT solver:
[DBG]    - Number of agents to replan: 3
[DBG]  Agent 1 has the original local path length: 3 => Start (2,3), Goal (2,2)
[DBG]  Agent 28 has the original local path length: 3 => Start (2,2), Goal (2,1)
[DBG]  Agent 42 has the original local path length: 3 => Start (2,0), Goal (3,1)
[DBG]  Start position: (2, 3), (2, 2), (2, 0), 
[DBG]  Goal position: (2, 2), (2, 1), (3, 1), 
[DBG]  SAT instance and solver created.
Currently solving
Instance name: scen
Map name: map
Encoding used: disappear_at_goal
SAT solver used: Kissat
Optimizing function: sum of costs
Number of agents: 3
Mks LB: 3
SoC LB: 7
Delta: 0
Remaining time: 300000 [ms]

[STAT] Solver returned: -1
[DBG]  SAT solver failed.
[STAT] SAT solver failed to find a valid solution.
[DBG]  ====================
[DBG]  SAT destroy operator called.
[DBG]  SAT heuristic: 2
[DBG]  key_agent_id: 28
[DBG]  key_agent_id global path length: 44
[DBG]  Submap content (global positions):
[DBG]  659 660 661 662 663 
[DBG]  691 692 693 694 695 
[DBG]  723 724 725 726 727 
[DBG]  755 756 757 758 759 
[DBG]  787 788 789 790 791 
[DBG]  Map content with agents and obstacles:
[DBG]  . . . X X 
[DBG]  . . X X X 
[DBG]  X . A . . 
[DBG]  A . . X . 
[DBG]  . . X . X 
[DBG]  content of the map structure that we pass to the SAT solver:
[DBG]  1  1  1  -1  -1  
[DBG]  1  1  -1  -1  -1  
[DBG]  -1  1  1  1  1  
[DBG]  1  1  1  -1  1  
[DBG]  1  1  -1  1  -1  
[DBG]  Identifying agents in a submap for rescheduling (when key_agent is there at the time 33):
[DBG]  Agent 3 found intervals in the sub-map:
[DBG]   [26..30]
[DBG]  Agent 3 is not in sub-map at time 33 (intervals: 
[DBG]  [26..30] )
[DBG]  Agent 26 found intervals in the sub-map:
[DBG]   [29..33]
[DBG]  Agent 26 (interval in submap: [29..33]) contains time 33, added to replan.
[DBG]  Agent 28 found intervals in the sub-map:
[DBG]   [0..35] [43..43]
[DBG]  Agent 28 (interval in submap: [0..35]) contains time 33, added to replan.
[DBG]  Agent 44 found intervals in the sub-map:
[DBG]   [27..31]
[DBG]  Agent 44 is not in sub-map at time 33 (intervals: 
[DBG]  [27..31] )
[DBG]  Agent 148 found intervals in the sub-map:
[DBG]   [38..39]
[DBG]  Agent 148 is not in sub-map at time 33 (intervals: 
[DBG]  [38..39] )
[DBG]  Agent 26 | Start (global): 755 -> (local): (3, 0) at time 33 | Goal (global): 755 -> (local): (3, 0) at time 33
[DBG]  Agent 28 | Start (global): 725 -> (local): (2, 2) at time 33 | Goal (global): 727 -> (local): (2, 4) at time 35
[DBG]  [REPAIR] SAT destroy operator called.
[DBG]  [REPAIR] SAT operator – launching subproblem FOR OPTIMIZATION.
[DBG]  Creating local paths (sx, sy) in the submap for T_sync = 33
[DBG]    Agent 26 (global paths from T=33 to 33) has local path: (3,0) 
[DBG]    Agent 28 (global paths from T=33 to 35) has local path: (2,2) (2,3) (2,4) 
[DBG]  Checking input data for SAT solver:
[DBG]    - Number of agents to replan: 2
[DBG]  Agent 26 has the original local path length: 1 => Start (3,0), Goal (3,0)
[DBG]  Agent 28 has the original local path length: 3 => Start (2,2), Goal (2,4)
[DBG]  Start position: (3, 0), (2, 2), 
[DBG]  Goal position: (3, 0), (2, 4), 
[DBG]  SAT instance and solver created.
Currently solving
Instance name: scen
Map name: map
Encoding used: disappear_at_goal
SAT solver used: Kissat
Optimizing function: sum of costs
Number of agents: 2
Mks LB: 3
SoC LB: 4
Delta: 0
Remaining time: 300000 [ms]

Found plan [agents = 2] [timesteps = 3]
Agent #0 : 9 0 0 
Agent #1 : 6 7 8 

[STAT] Solver returned: 0
[DBG]  Agent (index) 26 | New local path (submap idx):
[DBG]  9 
[DBG]  Agent (index) 28 | New local path (submap idx):
[DBG]  6 7 8 
[DBG]  Update the agent path 26 | Original local length: 1 | New local length: 1
[DBG]  agent 26 t=0 => decoded (sx,sy)=(3,0) => global_id=755
[DBG]  Complete path of agent 26:
[DBG]    Original: 13 14 46 47 79 80 81 82 83 115 147 179 180 212 244 276 308 340 341 373 405 437 469 501 533 565 597 629 628 660 692 724 756 755 
[DBG]    New:     13 14 46 47 79 80 81 82 83 115 147 179 180 212 244 276 308 340 341 373 405 437 469 501 533 565 597 629 628 660 692 724 756 755 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 13 14 46 47 79 80 81 82 83 115 147 179 180 212 244 276 308 340 341 373 405 437 469 501 533 565 597 629 628 660 692 724 756 
[DBG]    Local path (in submap): 755 
[DBG]    Suffix (out of submap): 
[DBG]  Original agent path length 26 je: 34
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 0: 13, 14, 46, 47, 79, 80, 81, 82, 83, 115, 147, 179, 180, 212, 244, 276, 308, 340, 341, 373, 405, 437, 469, 501, 533, 565, 597, 629, 628, 660, 692, 724, 756, 755, 
[DBG]  Path for agent 26 updated, resulting length: 34
[DBG]  Update the agent path 28 | Original local length: 3 | New local length: 3
[DBG]  agent 28 t=0 => decoded (sx,sy)=(2,2) => global_id=725
[DBG]  agent 28 t=1 => decoded (sx,sy)=(2,3) => global_id=726
[DBG]  agent 28 t=2 => decoded (sx,sy)=(2,4) => global_id=727
[DBG]  Complete path of agent 28:
[DBG]    Original: 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 660 692 724 725 726 727 728 728 728 728 728 728 728 727 
[DBG]    New:     661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 660 692 724 725 726 727 728 728 728 728 728 728 728 727 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 660 692 724 
[DBG]    Local path (in submap): 725 726 727 
[DBG]    Suffix (out of submap): 728 728 728 728 728 728 728 727 
[DBG]  Original agent path length 28 je: 44
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 1: 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 660, 692, 724, 725, 726, 727, 728, 728, 728, 728, 728, 728, 728, 727, 
[DBG]  Path for agent 28 updated, resulting length: 44
[DBG]  Paths successfully updated.
[DBG]  (LNS.cpp) New path for agent 26: 
[DBG]  13, 14, 46, 47, 79, 80, 81, 82, 83, 115, 147, 179, 180, 212, 244, 276, 308, 340, 341, 373, 405, 437, 469, 501, 533, 565, 597, 629, 628, 660, 692, 724, 756, 755, 
[DBG]  (LNS.cpp) New path for agent 28: 
[DBG]  661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 660, 692, 724, 725, 726, 727, 728, 728, 728, 728, 728, 728, 728, 727, 
[DBG]  Delta value: 0
[DBG]  Rewarding metric index = 1
[DBG]  component_weights = {1.07923e-09, 1, 4.75345e-10, 8.24138e-10}
[DBG]  opSuccess value: 1
[STAT] neighbor.sum_of_costs before recomputation: 76
[STAT] neighbor.old_sum_of_costs before recomputation: 76
[STAT] sum_of_costs before recomputation: 4327
[DBG]  Validate solution immediately after SAT success.
[DBG]  No problems after SAT replan.
[DBG]  Recomputing sum_of_cost by dividing neighbor.sum_of_costs and neighbor.old_sum_of_costs
[STAT] sum_of_costs after recomputation: 4327
[STAT] Iteration 176
[DBG]  Random chance did not select SAT operator (r=59), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 176
[DBG]  Using SAT operator (destroy+repair SAT).
[DBG]  ====================
[DBG]  SAT destroy operator called.
[DBG]  SAT heuristic: 2
[DBG]  key_agent_id: 28
[DBG]  key_agent_id global path length: 44
[DBG]  Submap content (global positions):
[DBG]  595 596 597 598 599 
[DBG]  627 628 629 630 631 
[DBG]  659 660 661 662 663 
[DBG]  691 692 693 694 695 
[DBG]  723 724 725 726 727 
[DBG]  Map content with agents and obstacles:
[DBG]  X . . X . 
[DBG]  . . . X . 
[DBG]  A . A X X 
[DBG]  . . X X X 
[DBG]  X A . . . 
[DBG]  content of the map structure that we pass to the SAT solver:
[DBG]  -1  1  1  -1  1  
[DBG]  1  1  1  -1  1  
[DBG]  1  1  1  -1  -1  
[DBG]  1  1  -1  -1  -1  
[DBG]  -1  1  1  1  1  
[DBG]  Identifying agents in a submap for rescheduling (when key_agent is there at the time 18):
[DBG]  Agent 28 found intervals in the sub-map:
[DBG]   [0..35] [43..43]
[DBG]  Agent 28 (interval in submap: [0..35]) contains time 18, added to replan.
[DBG]  Agent 30 found intervals in the sub-map:
[DBG]  
[DBG]  Agent 30 is not in sub-map at time 18 (intervals: 
[DBG]  )
[DBG]  Agent 45 found intervals in the sub-map:
[DBG]   [21..26]
[DBG]  Agent 45 is not in sub-map at time 18 (intervals: 
[DBG]  [21..26] )
[DBG]  Agent 62 found intervals in the sub-map:
[DBG]  
[DBG]  Agent 62 is not in sub-map at time 18 (intervals: 
[DBG]  )
[DBG]  Agent 70 found intervals in the sub-map:
[DBG]  
[DBG]  Agent 70 is not in sub-map at time 18 (intervals: 
[DBG]  )
[DBG]  Agent 74 found intervals in the sub-map:
[DBG]   [27..31]
[DBG]  Agent 74 is not in sub-map at time 18 (intervals: 
[DBG]  [27..31] )
[DBG]  Agent 101 found intervals in the sub-map:
[DBG]   [15..18]
[DBG]  Agent 101 (interval in submap: [15..18]) contains time 18, added to replan.
[DBG]  Agent 119 found intervals in the sub-map:
[DBG]   [18..21]
[DBG]  Agent 119 (interval in submap: [18..21]) contains time 18, added to replan.
[DBG]  Agent 28 | Start (global): 661 -> (local): (2, 2) at time 18 | Goal (global): 727 -> (local): (4, 4) at time 35
[DBG]  Agent 101 | Start (global): 659 -> (local): (2, 0) at time 18 | Goal (global): 659 -> (local): (2, 0) at time 18
[DBG]  Agent 119 | Start (global): 724 -> (local): (4, 1) at time 18 | Goal (global): 659 -> (local): (2, 0) at time 21
[DBG]  [REPAIR] SAT destroy operator called.
[DBG]  [REPAIR] SAT operator – launching subproblem FOR OPTIMIZATION.
[DBG]  Creating local paths (sx, sy) in the submap for T_sync = 18
[DBG]    Agent 28 (global paths from T=18 to 35) has local path: (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,1) (3,1) (4,1) (4,2) (4,3) (4,4) 
[DBG]    Agent 101 (global paths from T=18 to 18) has local path: (2,0) 
[DBG]    Agent 119 (global paths from T=18 to 21) has local path: (4,1) (3,1) (3,0) (2,0) 
[DBG]  Checking input data for SAT solver:
[DBG]    - Number of agents to replan: 3
[DBG]  Agent 28 has the original local path length: 18 => Start (2,2), Goal (4,4)
[DBG]  Agent 101 has the original local path length: 1 => Start (2,0), Goal (2,0)
[DBG]  Agent 119 has the original local path length: 4 => Start (4,1), Goal (2,0)
[DBG]  Start position: (2, 2), (2, 0), (4, 1), 
[DBG]  Goal position: (4, 4), (2, 0), (2, 0), 
[DBG]  SAT instance and solver created.
Currently solving
Instance name: scen
Map name: map
Encoding used: disappear_at_goal
SAT solver used: Kissat
Optimizing function: sum of costs
Number of agents: 3
Mks LB: 7
SoC LB: 12
Delta: 0
Remaining time: 300000 [ms]

Vertex conflict! Agents 1, 2, timestep 4, location 0
Swapping conflict! Agents 1, 2, timestep 4, edge (0,0)
Vertex conflict! Agents 1, 2, timestep 5, location 0
Swapping conflict! Agents 1, 2, timestep 5, edge (0,0)
Vertex conflict! Agents 1, 2, timestep 6, location 0
Found plan [agents = 3] [timesteps = 7]
Agent #0 : 9 8 11 12 13 14 15 
Agent #1 : 7 0 0 0 0 0 0 
Agent #2 : 12 11 10 7 0 0 0 

[STAT] Solver returned: 0
[DBG]  Agent (index) 28 | New local path (submap idx):
[DBG]  9 8 11 12 13 14 15 
[DBG]  Agent (index) 101 | New local path (submap idx):
[DBG]  7 
[DBG]  Agent (index) 119 | New local path (submap idx):
[DBG]  12 11 10 7 
[DBG]  Update the agent path 28 | Original local length: 18 | New local length: 7
[DBG]  agent 28 t=0 => decoded (sx,sy)=(2,2) => global_id=661
[DBG]  agent 28 t=1 => decoded (sx,sy)=(2,1) => global_id=660
[DBG]  agent 28 t=2 => decoded (sx,sy)=(3,1) => global_id=692
[DBG]  agent 28 t=3 => decoded (sx,sy)=(4,1) => global_id=724
[DBG]  agent 28 t=4 => decoded (sx,sy)=(4,2) => global_id=725
[DBG]  agent 28 t=5 => decoded (sx,sy)=(4,3) => global_id=726
[DBG]  agent 28 t=6 => decoded (sx,sy)=(4,4) => global_id=727
[DBG]  Complete path of agent 28:
[DBG]    Original: 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 660 692 724 725 726 727 728 728 728 728 728 728 728 727 
[DBG]    New:     661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 660 692 724 725 726 727 728 728 728 728 728 728 728 727 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 
[DBG]    Local path (in submap): 661 660 692 724 725 726 727 728 728 728 728 728 728 728 727 
[DBG]    Suffix (out of submap): 
[DBG]  Original agent path length 28 je: 44
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 0: 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 660, 692, 724, 725, 726, 727, 728, 728, 728, 728, 728, 728, 728, 727, 
[DBG]  Path for agent 28 updated, resulting length: 33
[DBG]  Update the agent path 101 | Original local length: 1 | New local length: 1
[DBG]  agent 101 t=0 => decoded (sx,sy)=(2,0) => global_id=659
[DBG]  Complete path of agent 101:
[DBG]    Original: 985 984 952 920 888 887 886 885 884 883 851 819 787 788 756 724 692 691 659 658 657 656 655 654 622 590 589 588 556 556 524 492 460 428 427 395 363 331 299 267 235 236 204 172 140 139 138 106 105 104 136 168 
[DBG]    New:     985 984 952 920 888 887 886 885 884 883 851 819 787 788 756 724 692 691 659 658 657 656 655 654 622 590 589 588 556 556 524 492 460 428 427 395 363 331 299 267 235 236 204 172 140 139 138 106 105 104 136 168 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 985 984 952 920 888 887 886 885 884 883 851 819 787 788 756 724 692 691 
[DBG]    Local path (in submap): 659 
[DBG]    Suffix (out of submap): 658 657 656 655 654 622 590 589 588 556 556 524 492 460 428 427 395 363 331 299 267 235 236 204 172 140 139 138 106 105 104 136 168 
[DBG]  Original agent path length 101 je: 52
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 1: 985, 984, 952, 920, 888, 887, 886, 885, 884, 883, 851, 819, 787, 788, 756, 724, 692, 691, 659, 658, 657, 656, 655, 654, 622, 590, 589, 588, 556, 556, 524, 492, 460, 428, 427, 395, 363, 331, 299, 267, 235, 236, 204, 172, 140, 139, 138, 106, 105, 104, 136, 168, 
[DBG]  Path for agent 101 updated, resulting length: 52
[DBG]  Update the agent path 119 | Original local length: 4 | New local length: 4
[DBG]  agent 119 t=0 => decoded (sx,sy)=(4,1) => global_id=724
[DBG]  agent 119 t=1 => decoded (sx,sy)=(3,1) => global_id=692
[DBG]  agent 119 t=2 => decoded (sx,sy)=(3,0) => global_id=691
[DBG]  agent 119 t=3 => decoded (sx,sy)=(2,0) => global_id=659
[DBG]  Complete path of agent 119:
[DBG]    Original: 861 860 859 859 858 890 889 888 887 886 885 884 883 851 819 787 755 756 724 692 691 659 658 657 656 655 623 622 590 558 526 494 462 430 429 428 427 395 363 331 299 300 268 236 204 172 140 
[DBG]    New:     861 860 859 859 858 890 889 888 887 886 885 884 883 851 819 787 755 756 724 692 691 659 658 657 656 655 623 622 590 558 526 494 462 430 429 428 427 395 363 331 299 300 268 236 204 172 140 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 861 860 859 859 858 890 889 888 887 886 885 884 883 851 819 787 755 756 
[DBG]    Local path (in submap): 724 692 691 659 
[DBG]    Suffix (out of submap): 658 657 656 655 623 622 590 558 526 494 462 430 429 428 427 395 363 331 299 300 268 236 204 172 140 
[DBG]  Original agent path length 119 je: 47
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 2: 861, 860, 859, 859, 858, 890, 889, 888, 887, 886, 885, 884, 883, 851, 819, 787, 755, 756, 724, 692, 691, 659, 658, 657, 656, 655, 623, 622, 590, 558, 526, 494, 462, 430, 429, 428, 427, 395, 363, 331, 299, 300, 268, 236, 204, 172, 140, 
[DBG]  Path for agent 119 updated, resulting length: 47
[DBG]  Paths successfully updated.
[DBG]  (LNS.cpp) New path for agent 28: 
[DBG]  661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 660, 692, 724, 725, 726, 727, 728, 728, 728, 728, 728, 728, 728, 727, 
[DBG]  (LNS.cpp) New path for agent 101: 
[DBG]  985, 984, 952, 920, 888, 887, 886, 885, 884, 883, 851, 819, 787, 788, 756, 724, 692, 691, 659, 658, 657, 656, 655, 654, 622, 590, 589, 588, 556, 556, 524, 492, 460, 428, 427, 395, 363, 331, 299, 267, 235, 236, 204, 172, 140, 139, 138, 106, 105, 104, 136, 168, 
[DBG]  (LNS.cpp) New path for agent 119: 
[DBG]  861, 860, 859, 859, 858, 890, 889, 888, 887, 886, 885, 884, 883, 851, 819, 787, 755, 756, 724, 692, 691, 659, 658, 657, 656, 655, 623, 622, 590, 558, 526, 494, 462, 430, 429, 428, 427, 395, 363, 331, 299, 300, 268, 236, 204, 172, 140, 
[DBG]  Delta value: 0.0785714
[DBG]  Rewarding metric index = 1
[DBG]  component_weights = {9.50581e-10, 1, 4.18682e-10, 7.25896e-10}
[DBG]  opSuccess value: 1
[STAT] neighbor.sum_of_costs before recomputation: 129
[STAT] neighbor.old_sum_of_costs before recomputation: 140
[STAT] sum_of_costs before recomputation: 4327
[DBG]  Validate solution immediately after SAT success.
[WARNING] Problem after SAT: Target conflict: agent 42 (len 43) traverses target of agent 28 (len 32) at location 727 at timestep 42
[DBG]  [DEBUG] Attempting immediate repair via init_lns because problem occurred after SAT (should be applied only for conflicts...).
[DBG]  [DEBUG] Passing 150 agents to init_lns (skip=true).
[DBG]  [DEBUG] path_table contents for selected agents (neighbor.agents):
[DBG]    Agent 28 => controlling path length=33
[DBG]    Agent 101 => controlling path length=52
[DBG]    Agent 119 => controlling path length=47
[DBG]  hodnota skip_initial_solution=1
[DBG]  We skip initialSolution => call buildCollisionData()
[DBG]  buildCollisionData() called – skip_initial_solution case.
[DBG]  Agents.size()=150, collision_graph.size()=150
[DBG]  agent 28 => updateCollidingPairs => foundCollision
[DBG]  agent 42 => updateCollidingPairs => foundCollision
[DBG]  Conflicting agent pairs:
[DBG]  agent 28 is in conflict with agent 42
[DBG]  buildCollisionData() => sum_of_costs=4316, num_of_colliding_pairs=1
[DBG]  buildCollisionData done => sum_of_costs=4316, num_of_colliding_pairs=1
[DBG]  sum_of_cost hodnota: 4316
[DBG]  After skip/init build => iteration_stats.back(): sum_of_costs=4316, collisions=1
[DEBUG] Using default neighbor generation strategy for conflicts: 2
	InitLNS(PP): runtime = 0.001024, iterations = 2, colliding pairs = 0, initial colliding pairs = 1, solution cost = 4323, initial solution cost = 4316, failed iterations = 0
[DBG]  init_lns->sum_of_costs after init_lns->run: 4323
[DBG]  sum_of_costs after assignment from init_lns->run: 4323
[DBG]  Recomputing sum_of_cost by dividing neighbor.sum_of_costs and neighbor.old_sum_of_costs
[STAT] sum_of_costs after recomputation: 4323
[STAT] Iteration 177
[DBG]  Using SAT operator (destroy+repair SAT).
[DBG]  ====================
[DBG]  SAT destroy operator called.
[DBG]  SAT heuristic: 2
[DBG]  key_agent_id: 28
[DBG]  key_agent_id global path length: 44
[DBG]  Submap content (global positions):
[DBG]  594 595 596 597 598 
[DBG]  626 627 628 629 630 
[DBG]  658 659 660 661 662 
[DBG]  690 691 692 693 694 
[DBG]  722 723 724 725 726 
[DBG]  Map content with agents and obstacles:
[DBG]  . X . . X 
[DBG]  X . . A X 
[DBG]  . A A . X 
[DBG]  X . A X X 
[DBG]  . X . . . 
[DBG]  content of the map structure that we pass to the SAT solver:
[DBG]  1  -1  1  1  -1  
[DBG]  -1  1  1  1  -1  
[DBG]  1  1  1  1  -1  
[DBG]  -1  1  1  -1  -1  
[DBG]  1  -1  1  1  1  
[DBG]  Identifying agents in a submap for rescheduling (when key_agent is there at the time 30):
[DBG]  Agent 3 found intervals in the sub-map:
[DBG]   [23..28]
[DBG]  Agent 3 is not in sub-map at time 30 (intervals: 
[DBG]  [23..28] )
[DBG]  Agent 26 found intervals in the sub-map:
[DBG]   [26..31]
[DBG]  Agent 26 (interval in submap: [26..31]) contains time 30, added to replan.
[DBG]  Agent 28 found intervals in the sub-map:
[DBG]   [0..33] [41..42]
[DBG]  Agent 28 (interval in submap: [0..33]) contains time 30, added to replan.
[DBG]  Agent 74 found intervals in the sub-map:
[DBG]   [26..31]
[DBG]  Agent 74 (interval in submap: [26..31]) contains time 30, added to replan.
[DBG]  Agent 109 found intervals in the sub-map:
[DBG]   [29..34]
[DBG]  Agent 109 (interval in submap: [29..34]) contains time 30, added to replan.
[DBG]  Agent 148 found intervals in the sub-map:
[DBG]   [37..39]
[DBG]  Agent 148 is not in sub-map at time 30 (intervals: 
[DBG]  [37..39] )
[DBG]  Agent 26 | Start (global): 692 -> (local): (3, 2) at time 30 | Goal (global): 724 -> (local): (4, 2) at time 31
[DBG]  Agent 28 | Start (global): 660 -> (local): (2, 2) at time 30 | Goal (global): 725 -> (local): (4, 3) at time 33
[DBG]  Agent 74 | Start (global): 629 -> (local): (1, 3) at time 30 | Goal (global): 597 -> (local): (0, 3) at time 31
[DBG]  Agent 109 | Start (global): 659 -> (local): (2, 1) at time 30 | Goal (global): 597 -> (local): (0, 3) at time 34
[DBG]  [REPAIR] SAT destroy operator called.
[DBG]  [REPAIR] SAT operator – launching subproblem FOR OPTIMIZATION.
[DBG]  Creating local paths (sx, sy) in the submap for T_sync = 30
[DBG]    Agent 26 (global paths from T=30 to 31) has local path: (3,2) (4,2) 
[DBG]    Agent 28 (global paths from T=30 to 33) has local path: (2,2) (3,2) (4,2) (4,3) 
[DBG]    Agent 74 (global paths from T=30 to 31) has local path: (1,3) (0,3) 
[DBG]    Agent 109 (global paths from T=30 to 34) has local path: (2,1) (1,1) (1,2) (1,3) (0,3) 
[DBG]  Checking input data for SAT solver:
[DBG]    - Number of agents to replan: 4
[DBG]  Agent 26 has the original local path length: 2 => Start (3,2), Goal (4,2)
[DBG]  Agent 28 has the original local path length: 4 => Start (2,2), Goal (4,3)
[DBG]  Agent 74 has the original local path length: 2 => Start (1,3), Goal (0,3)
[DBG]  Agent 109 has the original local path length: 5 => Start (2,1), Goal (0,3)
[DBG]  Start position: (3, 2), (2, 2), (1, 3), (2, 1), 
[DBG]  Goal position: (4, 2), (4, 3), (0, 3), (0, 3), 
[DBG]  SAT instance and solver created.
Currently solving
Instance name: scen
Map name: map
Encoding used: disappear_at_goal
SAT solver used: Kissat
Optimizing function: sum of costs
Number of agents: 4
Mks LB: 5
SoC LB: 13
Delta: 0
Remaining time: 300000 [ms]

Vertex conflict! Agents 0, 1, timestep 4, location 0
Vertex conflict! Agents 0, 2, timestep 2, location 0
Swapping conflict! Agents 0, 2, timestep 2, edge (0,0)
Vertex conflict! Agents 0, 2, timestep 3, location 0
Swapping conflict! Agents 0, 2, timestep 3, edge (0,0)
Vertex conflict! Agents 0, 2, timestep 4, location 0
Vertex conflict! Agents 1, 2, timestep 4, location 0
Found plan [agents = 4] [timesteps = 5]
Agent #0 : 11 13 0 0 0 
Agent #1 : 8 11 13 14 0 
Agent #2 : 5 2 0 0 0 
Agent #3 : 7 8 9 5 2 

[STAT] Solver returned: 0
[DBG]  Agent (index) 26 | New local path (submap idx):
[DBG]  11 13 
[DBG]  Agent (index) 28 | New local path (submap idx):
[DBG]  8 11 13 14 
[DBG]  Agent (index) 74 | New local path (submap idx):
[DBG]  5 2 
[DBG]  Agent (index) 109 | New local path (submap idx):
[DBG]  7 8 9 5 2 
[DBG]  Update the agent path 26 | Original local length: 2 | New local length: 2
[DBG]  agent 26 t=0 => decoded (sx,sy)=(3,2) => global_id=692
[DBG]  agent 26 t=1 => decoded (sx,sy)=(4,2) => global_id=724
[DBG]  Complete path of agent 26:
[DBG]    Original: 13 14 46 47 79 80 81 82 83 115 147 179 180 212 244 276 308 340 341 373 405 437 469 501 533 565 597 629 628 660 692 724 756 755 
[DBG]    New:     13 14 46 47 79 80 81 82 83 115 147 179 180 212 244 276 308 340 341 373 405 437 469 501 533 565 597 629 628 660 692 724 756 755 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 13 14 46 47 79 80 81 82 83 115 147 179 180 212 244 276 308 340 341 373 405 437 469 501 533 565 597 629 628 660 
[DBG]    Local path (in submap): 692 724 
[DBG]    Suffix (out of submap): 756 755 
[DBG]  Original agent path length 26 je: 34
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 0: 13, 14, 46, 47, 79, 80, 81, 82, 83, 115, 147, 179, 180, 212, 244, 276, 308, 340, 341, 373, 405, 437, 469, 501, 533, 565, 597, 629, 628, 660, 692, 724, 756, 755, 
[DBG]  Path for agent 26 updated, resulting length: 34
[DBG]  Update the agent path 28 | Original local length: 4 | New local length: 4
[DBG]  agent 28 t=0 => decoded (sx,sy)=(2,2) => global_id=660
[DBG]  agent 28 t=1 => decoded (sx,sy)=(3,2) => global_id=692
[DBG]  agent 28 t=2 => decoded (sx,sy)=(4,2) => global_id=724
[DBG]  agent 28 t=3 => decoded (sx,sy)=(4,3) => global_id=725
[DBG]  Complete path of agent 28:
[DBG]    Original: 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 660 692 724 725 757 757 757 757 757 757 757 725 726 727 
[DBG]    New:     661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 660 692 724 725 757 757 757 757 757 757 757 725 726 727 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 
[DBG]    Local path (in submap): 660 692 724 725 
[DBG]    Suffix (out of submap): 757 757 757 757 757 757 757 725 726 727 
[DBG]  Original agent path length 28 je: 44
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 1: 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 660, 692, 724, 725, 757, 757, 757, 757, 757, 757, 757, 725, 726, 727, 
[DBG]  Path for agent 28 updated, resulting length: 44
[DBG]  Update the agent path 74 | Original local length: 2 | New local length: 2
[DBG]  agent 74 t=0 => decoded (sx,sy)=(1,3) => global_id=629
[DBG]  agent 74 t=1 => decoded (sx,sy)=(0,3) => global_id=597
[DBG]  Complete path of agent 74:
[DBG]    Original: 752 752 752 752 752 752 752 752 752 752 752 752 752 752 752 751 751 751 750 718 718 719 687 688 689 657 658 659 627 628 629 597 565 566 534 534 534 502 503 504 505 504 
[DBG]    New:     752 752 752 752 752 752 752 752 752 752 752 752 752 752 752 751 751 751 750 718 718 719 687 688 689 657 658 659 627 628 629 597 565 566 534 534 534 502 503 504 505 504 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 752 752 752 752 752 752 752 752 752 752 752 752 752 752 752 751 751 751 750 718 718 719 687 688 689 657 658 659 627 628 
[DBG]    Local path (in submap): 629 597 
[DBG]    Suffix (out of submap): 565 566 534 534 534 502 503 504 505 504 
[DBG]  Original agent path length 74 je: 42
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 2: 752, 752, 752, 752, 752, 752, 752, 752, 752, 752, 752, 752, 752, 752, 752, 751, 751, 751, 750, 718, 718, 719, 687, 688, 689, 657, 658, 659, 627, 628, 629, 597, 565, 566, 534, 534, 534, 502, 503, 504, 505, 504, 
[DBG]  Path for agent 74 updated, resulting length: 42
[DBG]  Update the agent path 109 | Original local length: 5 | New local length: 5
[DBG]  agent 109 t=0 => decoded (sx,sy)=(2,1) => global_id=659
[DBG]  agent 109 t=1 => decoded (sx,sy)=(2,2) => global_id=660
[DBG]  agent 109 t=2 => decoded (sx,sy)=(2,3) => global_id=661
[DBG]  agent 109 t=3 => decoded (sx,sy)=(1,3) => global_id=629
[DBG]  agent 109 t=4 => decoded (sx,sy)=(0,3) => global_id=597
[DBG]  Complete path of agent 109:
[DBG]    Original: 882 850 851 819 819 819 819 851 850 849 848 847 815 783 751 719 687 686 686 687 719 751 751 719 687 688 689 689 657 658 659 627 628 629 597 565 566 534 502 503 504 472 473 474 475 443 444 445 413 414 415 
[DBG]    New:     882 850 851 819 819 819 819 851 850 849 848 847 815 783 751 719 687 686 686 687 719 751 751 719 687 688 689 689 657 658 659 660 661 629 597 565 566 534 502 503 504 472 473 474 475 443 444 445 413 414 415 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 882 850 851 819 819 819 819 851 850 849 848 847 815 783 751 719 687 686 686 687 719 751 751 719 687 688 689 689 657 658 
[DBG]    Local path (in submap): 659 660 661 629 597 
[DBG]    Suffix (out of submap): 565 566 534 502 503 504 472 473 474 475 443 444 445 413 414 415 
[DBG]  Original agent path length 109 je: 51
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 3: 882, 850, 851, 819, 819, 819, 819, 851, 850, 849, 848, 847, 815, 783, 751, 719, 687, 686, 686, 687, 719, 751, 751, 719, 687, 688, 689, 689, 657, 658, 659, 660, 661, 629, 597, 565, 566, 534, 502, 503, 504, 472, 473, 474, 475, 443, 444, 445, 413, 414, 415, 
[DBG]  Path for agent 109 updated, resulting length: 51
[DBG]  Paths successfully updated.
[DBG]  (LNS.cpp) New path for agent 26: 
[DBG]  13, 14, 46, 47, 79, 80, 81, 82, 83, 115, 147, 179, 180, 212, 244, 276, 308, 340, 341, 373, 405, 437, 469, 501, 533, 565, 597, 629, 628, 660, 692, 724, 756, 755, 
[DBG]  (LNS.cpp) New path for agent 28: 
[DBG]  661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 660, 692, 724, 725, 757, 757, 757, 757, 757, 757, 757, 725, 726, 727, 
[DBG]  (LNS.cpp) New path for agent 74: 
[DBG]  752, 752, 752, 752, 752, 752, 752, 752, 752, 752, 752, 752, 752, 752, 752, 751, 751, 751, 750, 718, 718, 719, 687, 688, 689, 657, 658, 659, 627, 628, 629, 597, 565, 566, 534, 534, 534, 502, 503, 504, 505, 504, 
[DBG]  (LNS.cpp) New path for agent 109: 
[DBG]  882, 850, 851, 819, 819, 819, 819, 851, 850, 849, 848, 847, 815, 783, 751, 719, 687, 686, 686, 687, 719, 751, 751, 719, 687, 688, 689, 689, 657, 658, 659, 660, 661, 629, 597, 565, 566, 534, 502, 503, 504, 472, 473, 474, 475, 443, 444, 445, 413, 414, 415, 
[DBG]  Delta value: 0
[DBG]  Rewarding metric index = 1
[DBG]  component_weights = {9.03052e-10, 1, 3.97748e-10, 6.89602e-10}
[DBG]  opSuccess value: 1
[STAT] neighbor.sum_of_costs before recomputation: 167
[STAT] neighbor.old_sum_of_costs before recomputation: 167
[STAT] sum_of_costs before recomputation: 4323
[DBG]  Validate solution immediately after SAT success.
[DBG]  No problems after SAT replan.
[DBG]  Recomputing sum_of_cost by dividing neighbor.sum_of_costs and neighbor.old_sum_of_costs
[STAT] sum_of_costs after recomputation: 4323
[STAT] Iteration 178
[DBG]  Random chance did not select SAT operator (r=70), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 178
[DBG]  Random chance did not select SAT operator (r=74), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 178
[DBG]  Random chance did not select SAT operator (r=50), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 178
[DBG]  Random chance did not select SAT operator (r=12), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 178
[DBG]  Random chance did not select SAT operator (r=53), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 178
[DBG]  Random chance did not select SAT operator (r=64), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 178
[DBG]  Random chance did not select SAT operator (r=52), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 178
[DBG]  Random chance did not select SAT operator (r=75), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 178
[DBG]  Random chance did not select SAT operator (r=70), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 178
[DBG]  Random chance did not select SAT operator (r=77), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 178
[DBG]  Random chance did not select SAT operator (r=99), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 178
[DBG]  Random chance did not select SAT operator (r=88), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 178
[DBG]  Random chance did not select SAT operator (r=74), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 178
[DBG]  Random chance did not select SAT operator (r=18), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 178
[DBG]  Random chance did not select SAT operator (r=63), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 178
[DBG]  Random chance did not select SAT operator (r=28), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 178
[DBG]  Random chance did not select SAT operator (r=41), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 178
[DBG]  Using SAT operator (destroy+repair SAT).
[DBG]  ====================
[DBG]  SAT destroy operator called.
[DBG]  SAT heuristic: 2
[DBG]  key_agent_id: 28
[DBG]  key_agent_id global path length: 44
[DBG]  Submap content (global positions):
[DBG]  595 596 597 598 599 
[DBG]  627 628 629 630 631 
[DBG]  659 660 661 662 663 
[DBG]  691 692 693 694 695 
[DBG]  723 724 725 726 727 
[DBG]  Map content with agents and obstacles:
[DBG]  X . A X . 
[DBG]  . . . X . 
[DBG]  . . A X X 
[DBG]  . A X X X 
[DBG]  X . . . A 
[DBG]  content of the map structure that we pass to the SAT solver:
[DBG]  -1  1  1  -1  1  
[DBG]  1  1  1  -1  1  
[DBG]  1  1  1  -1  -1  
[DBG]  1  1  -1  -1  -1  
[DBG]  -1  1  1  1  1  
[DBG]  Identifying agents in a submap for rescheduling (when key_agent is there at the time 9):
[DBG]  Agent 7 found intervals in the sub-map:
[DBG]   [1..2]
[DBG]  Agent 7 is not in sub-map at time 9 (intervals: 
[DBG]  [1..2] )
[DBG]  Agent 28 found intervals in the sub-map:
[DBG]   [0..33] [41..43]
[DBG]  Agent 28 (interval in submap: [0..33]) contains time 9, added to replan.
[DBG]  Agent 46 found intervals in the sub-map:
[DBG]   [5..8]
[DBG]  Agent 46 is not in sub-map at time 9 (intervals: 
[DBG]  [5..8] )
[DBG]  Agent 89 found intervals in the sub-map:
[DBG]   [5..10]
[DBG]  Agent 89 (interval in submap: [5..10]) contains time 9, added to replan.
[DBG]  Agent 135 found intervals in the sub-map:
[DBG]   [4..4] [9..15]
[DBG]  Agent 135 (interval in submap: [9..15]) contains time 9, added to replan.
[DBG]  Agent 137 found intervals in the sub-map:
[DBG]   [9..13]
[DBG]  Agent 137 (interval in submap: [9..13]) contains time 9, added to replan.
[DBG]  Agent 28 | Start (global): 661 -> (local): (2, 2) at time 9 | Goal (global): 725 -> (local): (4, 2) at time 33
[DBG]  Agent 89 | Start (global): 692 -> (local): (3, 1) at time 9 | Goal (global): 724 -> (local): (4, 1) at time 10
[DBG]  Agent 135 | Start (global): 727 -> (local): (4, 4) at time 9 | Goal (global): 659 -> (local): (2, 0) at time 15
[DBG]  Agent 137 | Start (global): 597 -> (local): (0, 2) at time 9 | Goal (global): 659 -> (local): (2, 0) at time 13
[DBG]  [REPAIR] SAT destroy operator called.
[DBG]  [REPAIR] SAT operator – launching subproblem FOR OPTIMIZATION.
[DBG]  Creating local paths (sx, sy) in the submap for T_sync = 9
[DBG]    Agent 28 (global paths from T=9 to 33) has local path: (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,1) (3,1) (4,1) (4,2) 
[DBG]    Agent 89 (global paths from T=9 to 10) has local path: (3,1) (4,1) 
[DBG]    Agent 135 (global paths from T=9 to 15) has local path: (4,4) (4,3) (4,2) (4,1) (3,1) (3,0) (2,0) 
[DBG]    Agent 137 (global paths from T=9 to 13) has local path: (0,2) (1,2) (1,1) (2,1) (2,0) 
[DBG]  Checking input data for SAT solver:
[DBG]    - Number of agents to replan: 4
[DBG]  Agent 28 has the original local path length: 25 => Start (2,2), Goal (4,2)
[DBG]  Agent 89 has the original local path length: 2 => Start (3,1), Goal (4,1)
[DBG]  Agent 135 has the original local path length: 7 => Start (4,4), Goal (2,0)
[DBG]  Agent 137 has the original local path length: 5 => Start (0,2), Goal (2,0)
[DBG]  Start position: (2, 2), (3, 1), (4, 4), (0, 2), 
[DBG]  Goal position: (4, 2), (4, 1), (2, 0), (2, 0), 
[DBG]  SAT instance and solver created.
Currently solving
Instance name: scen
Map name: map
Encoding used: disappear_at_goal
SAT solver used: Kissat
Optimizing function: sum of costs
Number of agents: 4
Mks LB: 7
SoC LB: 19
Delta: 0
Remaining time: 300000 [ms]

[STAT] Solver returned: -1
[DBG]  SAT solver failed.
[STAT] SAT solver failed to find a valid solution.
[DBG]  ====================
[DBG]  SAT destroy operator called.
[DBG]  SAT heuristic: 2
[DBG]  key_agent_id: 28
[DBG]  key_agent_id global path length: 44
[DBG]  Submap content (global positions):
[DBG]  595 596 597 598 599 
[DBG]  627 628 629 630 631 
[DBG]  659 660 661 662 663 
[DBG]  691 692 693 694 695 
[DBG]  723 724 725 726 727 
[DBG]  Map content with agents and obstacles:
[DBG]  X . . X . 
[DBG]  . . . X . 
[DBG]  . . A X X 
[DBG]  . A X X X 
[DBG]  X . . . . 
[DBG]  content of the map structure that we pass to the SAT solver:
[DBG]  -1  1  1  -1  1  
[DBG]  1  1  1  -1  1  
[DBG]  1  1  1  -1  -1  
[DBG]  1  1  -1  -1  -1  
[DBG]  -1  1  1  1  1  
[DBG]  Identifying agents in a submap for rescheduling (when key_agent is there at the time 19):
[DBG]  Agent 4 found intervals in the sub-map:
[DBG]  
[DBG]  Agent 4 is not in sub-map at time 19 (intervals: 
[DBG]  )
[DBG]  Agent 28 found intervals in the sub-map:
[DBG]   [0..33] [41..43]
[DBG]  Agent 28 (interval in submap: [0..33]) contains time 19, added to replan.
[DBG]  Agent 30 found intervals in the sub-map:
[DBG]  
[DBG]  Agent 30 is not in sub-map at time 19 (intervals: 
[DBG]  )
[DBG]  Agent 70 found intervals in the sub-map:
[DBG]  
[DBG]  Agent 70 is not in sub-map at time 19 (intervals: 
[DBG]  )
[DBG]  Agent 74 found intervals in the sub-map:
[DBG]   [27..31]
[DBG]  Agent 74 is not in sub-map at time 19 (intervals: 
[DBG]  [27..31] )
[DBG]  Agent 119 found intervals in the sub-map:
[DBG]   [18..21]
[DBG]  Agent 119 (interval in submap: [18..21]) contains time 19, added to replan.
[DBG]  Agent 28 | Start (global): 661 -> (local): (2, 2) at time 19 | Goal (global): 725 -> (local): (4, 2) at time 33
[DBG]  Agent 119 | Start (global): 692 -> (local): (3, 1) at time 19 | Goal (global): 659 -> (local): (2, 0) at time 21
[DBG]  [REPAIR] SAT destroy operator called.
[DBG]  [REPAIR] SAT operator – launching subproblem FOR OPTIMIZATION.
[DBG]  Creating local paths (sx, sy) in the submap for T_sync = 19
[DBG]    Agent 28 (global paths from T=19 to 33) has local path: (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,1) (3,1) (4,1) (4,2) 
[DBG]    Agent 119 (global paths from T=19 to 21) has local path: (3,1) (3,0) (2,0) 
[DBG]  Checking input data for SAT solver:
[DBG]    - Number of agents to replan: 2
[DBG]  Agent 28 has the original local path length: 15 => Start (2,2), Goal (4,2)
[DBG]  Agent 119 has the original local path length: 3 => Start (3,1), Goal (2,0)
[DBG]  Start position: (2, 2), (3, 1), 
[DBG]  Goal position: (4, 2), (2, 0), 
[DBG]  SAT instance and solver created.
Currently solving
Instance name: scen
Map name: map
Encoding used: disappear_at_goal
SAT solver used: Kissat
Optimizing function: sum of costs
Number of agents: 2
Mks LB: 5
SoC LB: 8
Delta: 0
Remaining time: 300000 [ms]

Found plan [agents = 2] [timesteps = 5]
Agent #0 : 9 8 11 12 13 
Agent #1 : 11 10 7 0 0 

[STAT] Solver returned: 0
[DBG]  Agent (index) 28 | New local path (submap idx):
[DBG]  9 8 11 12 13 
[DBG]  Agent (index) 119 | New local path (submap idx):
[DBG]  11 10 7 
[DBG]  Update the agent path 28 | Original local length: 15 | New local length: 5
[DBG]  agent 28 t=0 => decoded (sx,sy)=(2,2) => global_id=661
[DBG]  agent 28 t=1 => decoded (sx,sy)=(2,1) => global_id=660
[DBG]  agent 28 t=2 => decoded (sx,sy)=(3,1) => global_id=692
[DBG]  agent 28 t=3 => decoded (sx,sy)=(4,1) => global_id=724
[DBG]  agent 28 t=4 => decoded (sx,sy)=(4,2) => global_id=725
[DBG]  Complete path of agent 28:
[DBG]    Original: 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 660 692 724 725 757 757 757 757 757 757 757 725 726 727 
[DBG]    New:     661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 660 692 724 725 757 757 757 757 757 757 757 725 726 727 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 
[DBG]    Local path (in submap): 661 660 692 724 725 757 757 757 757 757 757 757 725 726 727 
[DBG]    Suffix (out of submap): 
[DBG]  Original agent path length 28 je: 44
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 0: 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 660, 692, 724, 725, 757, 757, 757, 757, 757, 757, 757, 725, 726, 727, 
[DBG]  Path for agent 28 updated, resulting length: 34
[DBG]  Update the agent path 119 | Original local length: 3 | New local length: 3
[DBG]  agent 119 t=0 => decoded (sx,sy)=(3,1) => global_id=692
[DBG]  agent 119 t=1 => decoded (sx,sy)=(3,0) => global_id=691
[DBG]  agent 119 t=2 => decoded (sx,sy)=(2,0) => global_id=659
[DBG]  Complete path of agent 119:
[DBG]    Original: 861 860 859 859 858 890 889 888 887 886 885 884 883 851 819 787 755 756 724 692 691 659 658 657 656 655 623 622 590 558 526 494 462 430 429 428 427 395 363 331 299 300 268 236 204 172 140 
[DBG]    New:     861 860 859 859 858 890 889 888 887 886 885 884 883 851 819 787 755 756 724 692 691 659 658 657 656 655 623 622 590 558 526 494 462 430 429 428 427 395 363 331 299 300 268 236 204 172 140 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 861 860 859 859 858 890 889 888 887 886 885 884 883 851 819 787 755 756 724 
[DBG]    Local path (in submap): 692 691 659 
[DBG]    Suffix (out of submap): 658 657 656 655 623 622 590 558 526 494 462 430 429 428 427 395 363 331 299 300 268 236 204 172 140 
[DBG]  Original agent path length 119 je: 47
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 1: 861, 860, 859, 859, 858, 890, 889, 888, 887, 886, 885, 884, 883, 851, 819, 787, 755, 756, 724, 692, 691, 659, 658, 657, 656, 655, 623, 622, 590, 558, 526, 494, 462, 430, 429, 428, 427, 395, 363, 331, 299, 300, 268, 236, 204, 172, 140, 
[DBG]  Path for agent 119 updated, resulting length: 47
[DBG]  Paths successfully updated.
[DBG]  (LNS.cpp) New path for agent 28: 
[DBG]  661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 660, 692, 724, 725, 757, 757, 757, 757, 757, 757, 757, 725, 726, 727, 
[DBG]  (LNS.cpp) New path for agent 119: 
[DBG]  861, 860, 859, 859, 858, 890, 889, 888, 887, 886, 885, 884, 883, 851, 819, 787, 755, 756, 724, 692, 691, 659, 658, 657, 656, 655, 623, 622, 590, 558, 526, 494, 462, 430, 429, 428, 427, 395, 363, 331, 299, 300, 268, 236, 204, 172, 140, 
[DBG]  Delta value: 0.11236
[DBG]  Rewarding metric index = 1
[DBG]  component_weights = {7.71243e-10, 1, 3.39693e-10, 5.88948e-10}
[DBG]  opSuccess value: 1
[STAT] neighbor.sum_of_costs before recomputation: 79
[STAT] neighbor.old_sum_of_costs before recomputation: 89
[STAT] sum_of_costs before recomputation: 4323
[DBG]  Validate solution immediately after SAT success.
[WARNING] Problem after SAT: Target conflict: agent 42 (len 43) traverses target of agent 28 (len 33) at location 727 at timestep 42
[DBG]  [DEBUG] Attempting immediate repair via init_lns because problem occurred after SAT (should be applied only for conflicts...).
[DBG]  [DEBUG] Passing 150 agents to init_lns (skip=true).
[DBG]  [DEBUG] path_table contents for selected agents (neighbor.agents):
[DBG]    Agent 28 => controlling path length=34
[DBG]    Agent 119 => controlling path length=47
[DBG]  hodnota skip_initial_solution=1
[DBG]  We skip initialSolution => call buildCollisionData()
[DBG]  buildCollisionData() called – skip_initial_solution case.
[DBG]  Agents.size()=150, collision_graph.size()=150
[DBG]  agent 28 => updateCollidingPairs => foundCollision
[DBG]  agent 42 => updateCollidingPairs => foundCollision
[DBG]  agent 111 => updateCollidingPairs => foundCollision
[DBG]  Conflicting agent pairs:
[DBG]  agent 28 is in conflict with agent 42
[DBG]  agent 28 is in conflict with agent 111
[DBG]  buildCollisionData() => sum_of_costs=4313, num_of_colliding_pairs=2
[DBG]  buildCollisionData done => sum_of_costs=4313, num_of_colliding_pairs=2
[DBG]  sum_of_cost hodnota: 4313
[DBG]  After skip/init build => iteration_stats.back(): sum_of_costs=4313, collisions=2
[DEBUG] Using default neighbor generation strategy for conflicts: 1
[DEBUG] Using default neighbor generation strategy for conflicts: 1
	InitLNS(PP): runtime = 0.00353354, iterations = 3, colliding pairs = 0, initial colliding pairs = 2, solution cost = 4320, initial solution cost = 4313, failed iterations = 0
[DBG]  init_lns->sum_of_costs after init_lns->run: 4320
[DBG]  sum_of_costs after assignment from init_lns->run: 4320
[DBG]  Recomputing sum_of_cost by dividing neighbor.sum_of_costs and neighbor.old_sum_of_costs
[STAT] sum_of_costs after recomputation: 4320
[STAT] Iteration 179
[DBG]  Random chance did not select SAT operator (r=52), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 179
[DBG]  Random chance did not select SAT operator (r=10), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 179
[DBG]  Random chance did not select SAT operator (r=25), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 179
[DBG]  Random chance did not select SAT operator (r=75), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 179
[DBG]  Random chance did not select SAT operator (r=20), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 179
[DBG]  Random chance did not select SAT operator (r=68), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 179
[DBG]  Random chance did not select SAT operator (r=67), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 179
[DBG]  Random chance did not select SAT operator (r=89), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 179
[DBG]  Random chance did not select SAT operator (r=89), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 179
[DBG]  Random chance did not select SAT operator (r=93), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 179
[DBG]  Random chance did not select SAT operator (r=41), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 179
[DBG]  Random chance did not select SAT operator (r=52), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 179
[DBG]  Random chance did not select SAT operator (r=81), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 179
[DBG]  Using SAT operator (destroy+repair SAT).
[DBG]  ====================
[DBG]  SAT destroy operator called.
[DBG]  SAT heuristic: 2
[DBG]  key_agent_id: 28
[DBG]  key_agent_id global path length: 44
[DBG]  Submap content (global positions):
[DBG]  530 531 532 533 534 
[DBG]  562 563 564 565 566 
[DBG]  594 595 596 597 598 
[DBG]  626 627 628 629 630 
[DBG]  658 659 660 661 662 
[DBG]  Map content with agents and obstacles:
[DBG]  . . X . . 
[DBG]  X . X A . 
[DBG]  . X A A X 
[DBG]  X . A A X 
[DBG]  . . A . X 
[DBG]  content of the map structure that we pass to the SAT solver:
[DBG]  1  1  -1  1  1  
[DBG]  -1  1  -1  1  1  
[DBG]  1  -1  1  1  -1  
[DBG]  -1  1  1  1  -1  
[DBG]  1  1  1  1  -1  
[DBG]  Identifying agents in a submap for rescheduling (when key_agent is there at the time 23):
[DBG]  Agent 3 found intervals in the sub-map:
[DBG]   [21..26]
[DBG]  Agent 3 (interval in submap: [21..26]) contains time 23, added to replan.
[DBG]  Agent 28 found intervals in the sub-map:
[DBG]   [0..32]
[DBG]  Agent 28 (interval in submap: [0..32]) contains time 23, added to replan.
[DBG]  Agent 44 found intervals in the sub-map:
[DBG]   [22..27]
[DBG]  Agent 44 (interval in submap: [22..27]) contains time 23, added to replan.
[DBG]  Agent 45 found intervals in the sub-map:
[DBG]   [19..24]
[DBG]  Agent 45 (interval in submap: [19..24]) contains time 23, added to replan.
[DBG]  Agent 53 found intervals in the sub-map:
[DBG]   [20..28]
[DBG]  Agent 53 (interval in submap: [20..28]) contains time 23, added to replan.
[DBG]  Agent 62 found intervals in the sub-map:
[DBG]   [21..21]
[DBG]  Agent 62 is not in sub-map at time 23 (intervals: 
[DBG]  [21..21] )
[DBG]  Agent 100 found intervals in the sub-map:
[DBG]   [18..23]
[DBG]  Agent 100 (interval in submap: [18..23]) contains time 23, added to replan.
[DBG]  Agent 135 found intervals in the sub-map:
[DBG]   [15..16]
[DBG]  Agent 135 is not in sub-map at time 23 (intervals: 
[DBG]  [15..16] )
[DBG]  Agent 3 | Start (global): 597 -> (local): (2, 3) at time 23 | Goal (global): 660 -> (local): (4, 2) at time 26
[DBG]  Agent 28 | Start (global): 596 -> (local): (2, 2) at time 23 | Goal (global): 660 -> (local): (4, 2) at time 32
[DBG]  Agent 44 | Start (global): 565 -> (local): (1, 3) at time 23 | Goal (global): 660 -> (local): (4, 2) at time 27
[DBG]  Agent 45 | Start (global): 628 -> (local): (3, 2) at time 23 | Goal (global): 660 -> (local): (4, 2) at time 24
[DBG]  Agent 53 | Start (global): 629 -> (local): (3, 3) at time 23 | Goal (global): 660 -> (local): (4, 2) at time 28
[DBG]  Agent 100 | Start (global): 660 -> (local): (4, 2) at time 23 | Goal (global): 660 -> (local): (4, 2) at time 23
[DBG]  [REPAIR] SAT destroy operator called.
[DBG]  [REPAIR] SAT operator – launching subproblem FOR OPTIMIZATION.
[DBG]  Creating local paths (sx, sy) in the submap for T_sync = 23
[DBG]    Agent 3 (global paths from T=23 to 26) has local path: (2,3) (2,2) (3,2) (4,2) 
[DBG]    Agent 28 (global paths from T=23 to 32) has local path: (2,2) (3,2) (3,1) (3,1) (3,2) (2,2) (2,2) (3,2) (3,2) (4,2) 
[DBG]    Agent 44 (global paths from T=23 to 27) has local path: (1,3) (2,3) (2,2) (3,2) (4,2) 
[DBG]    Agent 45 (global paths from T=23 to 24) has local path: (3,2) (4,2) 
[DBG]    Agent 53 (global paths from T=23 to 28) has local path: (3,3) (4,3) (4,3) (4,3) (4,3) (4,2) 
[DBG]    Agent 100 (global paths from T=23 to 23) has local path: (4,2) 
[DBG]  Checking input data for SAT solver:
[DBG]    - Number of agents to replan: 6
[DBG]  Agent 3 has the original local path length: 4 => Start (2,3), Goal (4,2)
[DBG]  Agent 28 has the original local path length: 10 => Start (2,2), Goal (4,2)
[DBG]  Agent 44 has the original local path length: 5 => Start (1,3), Goal (4,2)
[DBG]  Agent 45 has the original local path length: 2 => Start (3,2), Goal (4,2)
[DBG]  Agent 53 has the original local path length: 6 => Start (3,3), Goal (4,2)
[DBG]  Agent 100 has the original local path length: 1 => Start (4,2), Goal (4,2)
[DBG]  Start position: (2, 3), (2, 2), (1, 3), (3, 2), (3, 3), (4, 2), 
[DBG]  Goal position: (4, 2), (4, 2), (4, 2), (4, 2), (4, 2), (4, 2), 
[DBG]  SAT instance and solver created.
Currently solving
Instance name: scen
Map name: map
Encoding used: disappear_at_goal
SAT solver used: Kissat
Optimizing function: sum of costs
Number of agents: 6
Mks LB: 5
SoC LB: 18
Delta: 0
Remaining time: 300000 [ms]

[STAT] Solver returned: -1
[DBG]  SAT solver failed.
[STAT] SAT solver failed to find a valid solution.
[DBG]  ====================
[DBG]  SAT destroy operator called.
[DBG]  SAT heuristic: 2
[DBG]  key_agent_id: 28
[DBG]  key_agent_id global path length: 44
[DBG]  Submap content (global positions):
[DBG]  595 596 597 598 599 
[DBG]  627 628 629 630 631 
[DBG]  659 660 661 662 663 
[DBG]  691 692 693 694 695 
[DBG]  723 724 725 726 727 
[DBG]  Map content with agents and obstacles:
[DBG]  X . . X . 
[DBG]  . . . X . 
[DBG]  . . A X X 
[DBG]  . A X X X 
[DBG]  X . . . . 
[DBG]  content of the map structure that we pass to the SAT solver:
[DBG]  -1  1  1  -1  1  
[DBG]  1  1  1  -1  1  
[DBG]  1  1  1  -1  -1  
[DBG]  1  1  -1  -1  -1  
[DBG]  -1  1  1  1  1  
[DBG]  Identifying agents in a submap for rescheduling (when key_agent is there at the time 3):
[DBG]  Agent 7 found intervals in the sub-map:
[DBG]   [1..2]
[DBG]  Agent 7 is not in sub-map at time 3 (intervals: 
[DBG]  [1..2] )
[DBG]  Agent 17 found intervals in the sub-map:
[DBG]  
[DBG]  Agent 17 is not in sub-map at time 3 (intervals: 
[DBG]  )
[DBG]  Agent 28 found intervals in the sub-map:
[DBG]   [0..35] [41..43]
[DBG]  Agent 28 (interval in submap: [0..35]) contains time 3, added to replan.
[DBG]  Agent 108 found intervals in the sub-map:
[DBG]   [0..6]
[DBG]  Agent 108 (interval in submap: [0..6]) contains time 3, added to replan.
[DBG]  Agent 28 | Start (global): 661 -> (local): (2, 2) at time 3 | Goal (global): 725 -> (local): (4, 2) at time 35
[DBG]  Agent 108 | Start (global): 692 -> (local): (3, 1) at time 3 | Goal (global): 724 -> (local): (4, 1) at time 6
[DBG]  [REPAIR] SAT destroy operator called.
[DBG]  [REPAIR] SAT operator – launching subproblem FOR OPTIMIZATION.
[DBG]  Creating local paths (sx, sy) in the submap for T_sync = 3
[DBG]    Agent 28 (global paths from T=3 to 35) has local path: (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (1,2) (0,2) (0,1) (0,1) (0,1) (0,1) (0,1) (0,1) (0,1) (0,1) (1,1) (1,0) (1,0) (1,1) (0,1) (0,1) (1,1) (1,1) (2,1) (3,1) (4,1) (4,2) 
[DBG]    Agent 108 (global paths from T=3 to 6) has local path: (3,1) (3,1) (3,1) (4,1) 
[DBG]  Checking input data for SAT solver:
[DBG]    - Number of agents to replan: 2
[DBG]  Agent 28 has the original local path length: 33 => Start (2,2), Goal (4,2)
[DBG]  Agent 108 has the original local path length: 4 => Start (3,1), Goal (4,1)
[DBG]  Start position: (2, 2), (3, 1), 
[DBG]  Goal position: (4, 2), (4, 1), 
[DBG]  SAT instance and solver created.
Currently solving
Instance name: scen
Map name: map
Encoding used: disappear_at_goal
SAT solver used: Kissat
Optimizing function: sum of costs
Number of agents: 2
Mks LB: 5
SoC LB: 7
Delta: 0
Remaining time: 300000 [ms]

Found plan [agents = 2] [timesteps = 5]
Agent #0 : 9 8 11 12 13 
Agent #1 : 11 12 0 0 0 

[STAT] Solver returned: 0
[DBG]  Agent (index) 28 | New local path (submap idx):
[DBG]  9 8 11 12 13 
[DBG]  Agent (index) 108 | New local path (submap idx):
[DBG]  11 12 
[DBG]  Update the agent path 28 | Original local length: 33 | New local length: 5
[DBG]  agent 28 t=0 => decoded (sx,sy)=(2,2) => global_id=661
[DBG]  agent 28 t=1 => decoded (sx,sy)=(2,1) => global_id=660
[DBG]  agent 28 t=2 => decoded (sx,sy)=(3,1) => global_id=692
[DBG]  agent 28 t=3 => decoded (sx,sy)=(4,1) => global_id=724
[DBG]  agent 28 t=4 => decoded (sx,sy)=(4,2) => global_id=725
[DBG]  Complete path of agent 28:
[DBG]    Original: 661 661 661 661 661 661 661 661 661 661 661 661 661 661 629 597 596 596 596 596 596 596 596 596 628 627 627 628 596 596 628 628 660 692 724 725 757 757 757 757 757 725 726 727 
[DBG]    New:     661 661 661 661 660 692 724 725 757 757 757 757 757 725 726 727 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 661 661 661 
[DBG]    Local path (in submap): 661 660 692 724 725 757 757 757 757 757 725 726 727 
[DBG]    Suffix (out of submap): 
[DBG]  Original agent path length 28 je: 44
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 0: 661, 661, 661, 661, 660, 692, 724, 725, 757, 757, 757, 757, 757, 725, 726, 727, 
[DBG]  Path for agent 28 updated, resulting length: 16
[DBG]  Update the agent path 108 | Original local length: 4 | New local length: 2
[DBG]  agent 108 t=0 => decoded (sx,sy)=(3,1) => global_id=692
[DBG]  agent 108 t=1 => decoded (sx,sy)=(4,1) => global_id=724
[DBG]  Complete path of agent 108:
[DBG]    Original: 628 660 692 692 692 692 724 756 788 820 821 822 854 855 856 888 920 952 953 954 955 956 988 989 1021 
[DBG]    New:     628 660 692 692 724 756 788 820 821 822 854 855 856 888 920 952 953 954 955 956 988 989 1021 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 628 660 692 
[DBG]    Local path (in submap): 692 724 756 788 
[DBG]    Suffix (out of submap): 820 821 822 854 855 856 888 920 952 953 954 955 956 988 989 1021 
[DBG]  Original agent path length 108 je: 25
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 1: 628, 660, 692, 692, 724, 756, 788, 820, 821, 822, 854, 855, 856, 888, 920, 952, 953, 954, 955, 956, 988, 989, 1021, 
[DBG]  Path for agent 108 updated, resulting length: 23
[DBG]  Paths successfully updated.
[DBG]  (LNS.cpp) New path for agent 28: 
[DBG]  661, 661, 661, 661, 660, 692, 724, 725, 757, 757, 757, 757, 757, 725, 726, 727, 
[DBG]  (LNS.cpp) New path for agent 108: 
[DBG]  628, 660, 692, 692, 724, 756, 788, 820, 821, 822, 854, 855, 856, 888, 920, 952, 953, 954, 955, 956, 988, 989, 1021, 
[DBG]  Delta value: 0.447761
[DBG]  Rewarding metric index = 1
[DBG]  component_weights = {5.06078e-10, 1, 2.22901e-10, 3.86459e-10}
[DBG]  opSuccess value: 1
[STAT] neighbor.sum_of_costs before recomputation: 37
[STAT] neighbor.old_sum_of_costs before recomputation: 67
[STAT] sum_of_costs before recomputation: 4320
[DBG]  Validate solution immediately after SAT success.
[WARNING] Problem after SAT: Vertex conflict between agents 7 and 108 at location 756 at timestep 5
[DBG]  [DEBUG] Attempting immediate repair via init_lns because problem occurred after SAT (should be applied only for conflicts...).
[DBG]  [DEBUG] Passing 150 agents to init_lns (skip=true).
[DBG]  [DEBUG] path_table contents for selected agents (neighbor.agents):
[DBG]    Agent 28 => controlling path length=16
[DBG]    Agent 108 => controlling path length=23
[DBG]  hodnota skip_initial_solution=1
[DBG]  We skip initialSolution => call buildCollisionData()
[DBG]  buildCollisionData() called – skip_initial_solution case.
[DBG]  Agents.size()=150, collision_graph.size()=150
[DBG]  agent 7 => updateCollidingPairs => foundCollision
[DBG]  agent 14 => updateCollidingPairs => foundCollision
[DBG]  agent 28 => updateCollidingPairs => foundCollision
[DBG]  agent 42 => updateCollidingPairs => foundCollision
[DBG]  agent 46 => updateCollidingPairs => foundCollision
[DBG]  agent 70 => updateCollidingPairs => foundCollision
[DBG]  agent 108 => updateCollidingPairs => foundCollision
[DBG]  agent 111 => updateCollidingPairs => foundCollision
[DBG]  Conflicting agent pairs:
[DBG]  agent 7 is in conflict with agent 108
[DBG]  agent 14 is in conflict with agent 108
[DBG]  agent 28 is in conflict with agent 42
[DBG]  agent 28 is in conflict with agent 70
[DBG]  agent 28 is in conflict with agent 111
[DBG]  agent 46 is in conflict with agent 108
[DBG]  buildCollisionData() => sum_of_costs=4290, num_of_colliding_pairs=6
[DBG]  buildCollisionData done => sum_of_costs=4290, num_of_colliding_pairs=6
[DBG]  sum_of_cost hodnota: 4290
[DBG]  After skip/init build => iteration_stats.back(): sum_of_costs=4290, collisions=6
[DEBUG] Using default neighbor generation strategy for conflicts: 0
[DEBUG] Using default neighbor generation strategy for conflicts: 2
[DEBUG] Using default neighbor generation strategy for conflicts: 0
[DEBUG] Using default neighbor generation strategy for conflicts: 2
[DEBUG] Using default neighbor generation strategy for conflicts: 1
	InitLNS(PP): runtime = 0.00597417, iterations = 6, colliding pairs = 0, initial colliding pairs = 6, solution cost = 4350, initial solution cost = 4290, failed iterations = 0
[DBG]  init_lns->sum_of_costs after init_lns->run: 4350
[DBG]  sum_of_costs after assignment from init_lns->run: 4350
[DBG]  Recomputing sum_of_cost by dividing neighbor.sum_of_costs and neighbor.old_sum_of_costs
[STAT] sum_of_costs after recomputation: 4350
[STAT] Iteration 180
[DBG]  Random chance did not select SAT operator (r=86), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 180
[DBG]  Random chance did not select SAT operator (r=53), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 180
[DBG]  Using SAT operator (destroy+repair SAT).
[DBG]  ====================
[DBG]  SAT destroy operator called.
[DBG]  SAT heuristic: 2
[DBG]  key_agent_id: 28
[DBG]  key_agent_id global path length: 44
[DBG]  Submap content (global positions):
[DBG]  595 596 597 598 599 
[DBG]  627 628 629 630 631 
[DBG]  659 660 661 662 663 
[DBG]  691 692 693 694 695 
[DBG]  723 724 725 726 727 
[DBG]  Map content with agents and obstacles:
[DBG]  X . A X . 
[DBG]  . . A X A 
[DBG]  . . A X X 
[DBG]  . . X X X 
[DBG]  X . . . . 
[DBG]  content of the map structure that we pass to the SAT solver:
[DBG]  -1  1  1  -1  1  
[DBG]  1  1  1  -1  1  
[DBG]  1  1  1  -1  -1  
[DBG]  1  1  -1  -1  -1  
[DBG]  -1  1  1  1  1  
[DBG]  Identifying agents in a submap for rescheduling (when key_agent is there at the time 21):
[DBG]  Agent 28 found intervals in the sub-map:
[DBG]   [0..38] [41..43]
[DBG]  Agent 28 (interval in submap: [0..38]) contains time 21, added to replan.
[DBG]  Agent 45 found intervals in the sub-map:
[DBG]   [21..26]
[DBG]  Agent 45 (interval in submap: [21..26]) contains time 21, added to replan.
[DBG]  Agent 62 found intervals in the sub-map:
[DBG]  
[DBG]  Agent 62 is not in sub-map at time 21 (intervals: 
[DBG]  )
[DBG]  Agent 100 found intervals in the sub-map:
[DBG]   [20..25]
[DBG]  Agent 100 (interval in submap: [20..25]) contains time 21, added to replan.
[DBG]  Agent 119 found intervals in the sub-map:
[DBG]  
[DBG]  Agent 119 is not in sub-map at time 21 (intervals: 
[DBG]  )
[DBG]  Agent 144 found intervals in the sub-map:
[DBG]   [20..21]
[DBG]  Agent 144 (interval in submap: [20..21]) contains time 21, added to replan.
[DBG]  Agent 28 | Start (global): 661 -> (local): (2, 2) at time 21 | Goal (global): 725 -> (local): (4, 2) at time 38
[DBG]  Agent 45 | Start (global): 597 -> (local): (0, 2) at time 21 | Goal (global): 724 -> (local): (4, 1) at time 26
[DBG]  Agent 100 | Start (global): 629 -> (local): (1, 2) at time 21 | Goal (global): 724 -> (local): (4, 1) at time 25
[DBG]  Agent 144 | Start (global): 631 -> (local): (1, 4) at time 21 | Goal (global): 631 -> (local): (1, 4) at time 21
[DBG]  [REPAIR] SAT destroy operator called.
[DBG]  [REPAIR] SAT operator – launching subproblem FOR OPTIMIZATION.
[DBG]  Creating local paths (sx, sy) in the submap for T_sync = 21
[DBG]    Agent 28 (global paths from T=21 to 38) has local path: (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (1,2) (1,1) (1,0) (2,0) (3,0) (3,1) (4,1) (4,2) 
[DBG]    Agent 45 (global paths from T=21 to 26) has local path: (0,2) (1,2) (1,1) (2,1) (3,1) (4,1) 
[DBG]    Agent 100 (global paths from T=21 to 25) has local path: (1,2) (1,1) (2,1) (3,1) (4,1) 
[DBG]    Agent 144 (global paths from T=21 to 21) has local path: (1,4) 
[DBG]  Checking input data for SAT solver:
[DBG]    - Number of agents to replan: 4
[DBG]  Agent 28 has the original local path length: 18 => Start (2,2), Goal (4,2)
[DBG]  Agent 45 has the original local path length: 6 => Start (0,2), Goal (4,1)
[DBG]  Agent 100 has the original local path length: 5 => Start (1,2), Goal (4,1)
[DBG]  Agent 144 has the original local path length: 1 => Start (1,4), Goal (1,4)
[DBG]  Start position: (2, 2), (0, 2), (1, 2), (1, 4), 
[DBG]  Goal position: (4, 2), (4, 1), (4, 1), (1, 4), 
[DBG]  SAT instance and solver created.
Currently solving
Instance name: scen
Map name: map
Encoding used: disappear_at_goal
SAT solver used: Kissat
Optimizing function: sum of costs
Number of agents: 4
Mks LB: 6
SoC LB: 17
Delta: 0
Remaining time: 300000 [ms]

Vertex conflict! Agents 0, 2, timestep 5, location 0
Vertex conflict! Agents 0, 3, timestep 5, location 0
Vertex conflict! Agents 2, 3, timestep 5, location 0
Found plan [agents = 4] [timesteps = 6]
Agent #0 : 9 8 11 12 13 0 
Agent #1 : 1 5 9 8 11 12 
Agent #2 : 5 9 8 11 12 0 
Agent #3 : 6 0 0 0 0 0 

[STAT] Solver returned: 0
[DBG]  Agent (index) 28 | New local path (submap idx):
[DBG]  9 8 11 12 13 
[DBG]  Agent (index) 45 | New local path (submap idx):
[DBG]  1 5 9 8 11 12 
[DBG]  Agent (index) 100 | New local path (submap idx):
[DBG]  5 9 8 11 12 
[DBG]  Agent (index) 144 | New local path (submap idx):
[DBG]  6 
[DBG]  Update the agent path 28 | Original local length: 18 | New local length: 5
[DBG]  agent 28 t=0 => decoded (sx,sy)=(2,2) => global_id=661
[DBG]  agent 28 t=1 => decoded (sx,sy)=(2,1) => global_id=660
[DBG]  agent 28 t=2 => decoded (sx,sy)=(3,1) => global_id=692
[DBG]  agent 28 t=3 => decoded (sx,sy)=(4,1) => global_id=724
[DBG]  agent 28 t=4 => decoded (sx,sy)=(4,2) => global_id=725
[DBG]  Complete path of agent 28:
[DBG]    Original: 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 629 628 627 659 691 692 724 725 757 757 725 726 727 
[DBG]    New:     661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 660 692 724 725 757 757 725 726 727 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 
[DBG]    Local path (in submap): 661 660 692 724 725 757 757 725 726 727 
[DBG]    Suffix (out of submap): 
[DBG]  Original agent path length 28 je: 44
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 0: 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 660, 692, 724, 725, 757, 757, 725, 726, 727, 
[DBG]  Path for agent 28 updated, resulting length: 31
[DBG]  Update the agent path 45 | Original local length: 6 | New local length: 6
[DBG]  agent 45 t=0 => decoded (sx,sy)=(0,2) => global_id=597
[DBG]  agent 45 t=1 => decoded (sx,sy)=(1,2) => global_id=629
[DBG]  agent 45 t=2 => decoded (sx,sy)=(2,2) => global_id=661
[DBG]  agent 45 t=3 => decoded (sx,sy)=(2,1) => global_id=660
[DBG]  agent 45 t=4 => decoded (sx,sy)=(3,1) => global_id=692
[DBG]  agent 45 t=5 => decoded (sx,sy)=(4,1) => global_id=724
[DBG]  Complete path of agent 45:
[DBG]    Original: 153 185 217 249 281 313 345 377 409 441 440 439 438 470 502 503 503 502 501 533 565 597 629 628 660 692 724 756 788 820 819 818 850 849 
[DBG]    New:     153 185 217 249 281 313 345 377 409 441 440 439 438 470 502 503 503 502 501 533 565 597 629 661 660 692 724 756 788 820 819 818 850 849 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 153 185 217 249 281 313 345 377 409 441 440 439 438 470 502 503 503 502 501 533 565 
[DBG]    Local path (in submap): 597 629 661 660 692 724 
[DBG]    Suffix (out of submap): 756 788 820 819 818 850 849 
[DBG]  Original agent path length 45 je: 34
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 1: 153, 185, 217, 249, 281, 313, 345, 377, 409, 441, 440, 439, 438, 470, 502, 503, 503, 502, 501, 533, 565, 597, 629, 661, 660, 692, 724, 756, 788, 820, 819, 818, 850, 849, 
[DBG]  Path for agent 45 updated, resulting length: 34
[DBG]  Update the agent path 100 | Original local length: 5 | New local length: 5
[DBG]  agent 100 t=0 => decoded (sx,sy)=(1,2) => global_id=629
[DBG]  agent 100 t=1 => decoded (sx,sy)=(2,2) => global_id=661
[DBG]  agent 100 t=2 => decoded (sx,sy)=(2,1) => global_id=660
[DBG]  agent 100 t=3 => decoded (sx,sy)=(3,1) => global_id=692
[DBG]  agent 100 t=4 => decoded (sx,sy)=(4,1) => global_id=724
[DBG]  Complete path of agent 100:
[DBG]    Original: 287 319 351 350 349 381 380 379 378 377 409 408 440 439 438 470 502 534 533 565 597 629 628 660 692 724 756 755 787 786 818 850 849 881 880 879 847 846 878 877 909 941 973 1005 1004 1003 
[DBG]    New:     287 319 351 350 349 381 380 379 378 377 409 408 440 439 438 470 502 534 533 565 597 629 661 660 692 724 756 755 787 786 818 850 849 881 880 879 847 846 878 877 909 941 973 1005 1004 1003 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 287 319 351 350 349 381 380 379 378 377 409 408 440 439 438 470 502 534 533 565 597 
[DBG]    Local path (in submap): 629 661 660 692 724 
[DBG]    Suffix (out of submap): 756 755 787 786 818 850 849 881 880 879 847 846 878 877 909 941 973 1005 1004 1003 
[DBG]  Original agent path length 100 je: 46
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 2: 287, 319, 351, 350, 349, 381, 380, 379, 378, 377, 409, 408, 440, 439, 438, 470, 502, 534, 533, 565, 597, 629, 661, 660, 692, 724, 756, 755, 787, 786, 818, 850, 849, 881, 880, 879, 847, 846, 878, 877, 909, 941, 973, 1005, 1004, 1003, 
[DBG]  Path for agent 100 updated, resulting length: 46
[DBG]  Update the agent path 144 | Original local length: 1 | New local length: 1
[DBG]  agent 144 t=0 => decoded (sx,sy)=(1,4) => global_id=631
[DBG]  Complete path of agent 144:
[DBG]    Original: 121 153 185 217 249 281 313 345 377 409 441 441 473 474 506 538 570 602 601 600 599 631 
[DBG]    New:     121 153 185 217 249 281 313 345 377 409 441 441 473 474 506 538 570 602 601 600 599 631 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 121 153 185 217 249 281 313 345 377 409 441 441 473 474 506 538 570 602 601 600 599 
[DBG]    Local path (in submap): 631 
[DBG]    Suffix (out of submap): 
[DBG]  Original agent path length 144 je: 22
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 3: 121, 153, 185, 217, 249, 281, 313, 345, 377, 409, 441, 441, 473, 474, 506, 538, 570, 602, 601, 600, 599, 631, 
[DBG]  Path for agent 144 updated, resulting length: 22
[DBG]  Paths successfully updated.
[DBG]  (LNS.cpp) New path for agent 28: 
[DBG]  661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 660, 692, 724, 725, 757, 757, 725, 726, 727, 
[DBG]  (LNS.cpp) New path for agent 45: 
[DBG]  153, 185, 217, 249, 281, 313, 345, 377, 409, 441, 440, 439, 438, 470, 502, 503, 503, 502, 501, 533, 565, 597, 629, 661, 660, 692, 724, 756, 788, 820, 819, 818, 850, 849, 
[DBG]  (LNS.cpp) New path for agent 100: 
[DBG]  287, 319, 351, 350, 349, 381, 380, 379, 378, 377, 409, 408, 440, 439, 438, 470, 502, 534, 533, 565, 597, 629, 661, 660, 692, 724, 756, 755, 787, 786, 818, 850, 849, 881, 880, 879, 847, 846, 878, 877, 909, 941, 973, 1005, 1004, 1003, 
[DBG]  (LNS.cpp) New path for agent 144: 
[DBG]  121, 153, 185, 217, 249, 281, 313, 345, 377, 409, 441, 441, 473, 474, 506, 538, 570, 602, 601, 600, 599, 631, 
[DBG]  Delta value: 0.0915493
[DBG]  Rewarding metric index = 1
[DBG]  component_weights = {4.40451e-10, 1, 1.93996e-10, 3.36344e-10}
[DBG]  opSuccess value: 1
[STAT] neighbor.sum_of_costs before recomputation: 129
[STAT] neighbor.old_sum_of_costs before recomputation: 142
[STAT] sum_of_costs before recomputation: 4350
[DBG]  Validate solution immediately after SAT success.
[WARNING] Problem after SAT: Target conflict: agent 42 (len 43) traverses target of agent 28 (len 30) at location 727 at timestep 42
[DBG]  [DEBUG] Attempting immediate repair via init_lns because problem occurred after SAT (should be applied only for conflicts...).
[DBG]  [DEBUG] Passing 150 agents to init_lns (skip=true).
[DBG]  [DEBUG] path_table contents for selected agents (neighbor.agents):
[DBG]    Agent 28 => controlling path length=31
[DBG]    Agent 45 => controlling path length=34
[DBG]    Agent 100 => controlling path length=46
[DBG]    Agent 144 => controlling path length=22
[DBG]  hodnota skip_initial_solution=1
[DBG]  We skip initialSolution => call buildCollisionData()
[DBG]  buildCollisionData() called – skip_initial_solution case.
[DBG]  Agents.size()=150, collision_graph.size()=150
[DBG]  agent 28 => updateCollidingPairs => foundCollision
[DBG]  agent 42 => updateCollidingPairs => foundCollision
[DBG]  agent 111 => updateCollidingPairs => foundCollision
[DBG]  Conflicting agent pairs:
[DBG]  agent 28 is in conflict with agent 42
[DBG]  agent 28 is in conflict with agent 111
[DBG]  buildCollisionData() => sum_of_costs=4337, num_of_colliding_pairs=2
[DBG]  buildCollisionData done => sum_of_costs=4337, num_of_colliding_pairs=2
[DBG]  sum_of_cost hodnota: 4337
[DBG]  After skip/init build => iteration_stats.back(): sum_of_costs=4337, collisions=2
[DEBUG] Using default neighbor generation strategy for conflicts: 2
[DEBUG] Using default neighbor generation strategy for conflicts: 1
[DEBUG] Using default neighbor generation strategy for conflicts: 1
	InitLNS(PP): runtime = 0.00471029, iterations = 4, colliding pairs = 0, initial colliding pairs = 2, solution cost = 4343, initial solution cost = 4337, failed iterations = 0
[DBG]  init_lns->sum_of_costs after init_lns->run: 4343
[DBG]  sum_of_costs after assignment from init_lns->run: 4343
[DBG]  Recomputing sum_of_cost by dividing neighbor.sum_of_costs and neighbor.old_sum_of_costs
[STAT] sum_of_costs after recomputation: 4343
[STAT] Iteration 181
[DBG]  Random chance did not select SAT operator (r=99), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 181
[DBG]  Random chance did not select SAT operator (r=32), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 181
[DBG]  Random chance did not select SAT operator (r=74), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 181
[DBG]  Random chance did not select SAT operator (r=38), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 181
[DBG]  Random chance did not select SAT operator (r=70), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 181
[DBG]  Random chance did not select SAT operator (r=28), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 181
[DBG]  Random chance did not select SAT operator (r=41), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 181
[DBG]  Random chance did not select SAT operator (r=56), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 181
[DBG]  Random chance did not select SAT operator (r=89), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 181
[DBG]  Random chance did not select SAT operator (r=16), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 181
[DBG]  Random chance did not select SAT operator (r=27), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 181
[DBG]  Random chance did not select SAT operator (r=91), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 181
[DBG]  Random chance did not select SAT operator (r=24), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 181
[DBG]  Random chance did not select SAT operator (r=33), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 181
[DBG]  Random chance did not select SAT operator (r=86), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 181
[DBG]  Random chance did not select SAT operator (r=16), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 181
[DBG]  Random chance did not select SAT operator (r=10), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 181
[DBG]  Random chance did not select SAT operator (r=15), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 181
[DBG]  Random chance did not select SAT operator (r=53), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 181
[DBG]  Random chance did not select SAT operator (r=33), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 181
[DBG]  Random chance did not select SAT operator (r=35), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 181
[DBG]  Using SAT operator (destroy+repair SAT).
[DBG]  ====================
[DBG]  SAT destroy operator called.
[DBG]  SAT heuristic: 2
[DBG]  key_agent_id: 28
[DBG]  key_agent_id global path length: 43
[DBG]  Submap content (global positions):
[DBG]  595 596 597 598 599 
[DBG]  627 628 629 630 631 
[DBG]  659 660 661 662 663 
[DBG]  691 692 693 694 695 
[DBG]  723 724 725 726 727 
[DBG]  Map content with agents and obstacles:
[DBG]  X . . X . 
[DBG]  . . . X . 
[DBG]  . A A X X 
[DBG]  . . X X X 
[DBG]  X . . . . 
[DBG]  content of the map structure that we pass to the SAT solver:
[DBG]  -1  1  1  -1  1  
[DBG]  1  1  1  -1  1  
[DBG]  1  1  1  -1  -1  
[DBG]  1  1  -1  -1  -1  
[DBG]  -1  1  1  1  1  
[DBG]  Identifying agents in a submap for rescheduling (when key_agent is there at the time 8):
[DBG]  Agent 28 found intervals in the sub-map:
[DBG]   [0..42]
[DBG]  Agent 28 (interval in submap: [0..42]) contains time 8, added to replan.
[DBG]  Agent 46 found intervals in the sub-map:
[DBG]   [9..16]
[DBG]  Agent 46 is not in sub-map at time 8 (intervals: 
[DBG]  [9..16] )
[DBG]  Agent 89 found intervals in the sub-map:
[DBG]   [5..10]
[DBG]  Agent 89 (interval in submap: [5..10]) contains time 8, added to replan.
[DBG]  Agent 91 found intervals in the sub-map:
[DBG]   [4..6]
[DBG]  Agent 91 is not in sub-map at time 8 (intervals: 
[DBG]  [4..6] )
[DBG]  Agent 28 | Start (global): 661 -> (local): (2, 2) at time 8 | Goal (global): 727 -> (local): (4, 4) at time 42
[DBG]  Agent 89 | Start (global): 660 -> (local): (2, 1) at time 8 | Goal (global): 724 -> (local): (4, 1) at time 10
[DBG]  [REPAIR] SAT destroy operator called.
[DBG]  [REPAIR] SAT operator – launching subproblem FOR OPTIMIZATION.
[DBG]  Creating local paths (sx, sy) in the submap for T_sync = 8
[DBG]    Agent 28 (global paths from T=8 to 42) has local path: (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (1,2) (1,1) (1,0) (1,0) (1,0) (1,0) (1,0) (1,0) (1,0) (1,0) (1,0) (1,1) (0,1) (0,1) (0,1) (0,1) (0,2) (1,2) (2,2) (2,2) (2,2) (2,1) (3,1) (4,1) (4,2) (4,3) (4,4) 
[DBG]    Agent 89 (global paths from T=8 to 10) has local path: (2,1) (3,1) (4,1) 
[DBG]  Checking input data for SAT solver:
[DBG]    - Number of agents to replan: 2
[DBG]  Agent 28 has the original local path length: 35 => Start (2,2), Goal (4,4)
[DBG]  Agent 89 has the original local path length: 3 => Start (2,1), Goal (4,1)
[DBG]  Start position: (2, 2), (2, 1), 
[DBG]  Goal position: (4, 4), (4, 1), 
[DBG]  SAT instance and solver created.
Currently solving
Instance name: scen
Map name: map
Encoding used: disappear_at_goal
SAT solver used: Kissat
Optimizing function: sum of costs
Number of agents: 2
Mks LB: 7
SoC LB: 10
Delta: 0
Remaining time: 300000 [ms]

Found plan [agents = 2] [timesteps = 7]
Agent #0 : 9 8 11 12 13 14 15 
Agent #1 : 8 11 12 0 0 0 0 

[STAT] Solver returned: 0
[DBG]  Agent (index) 28 | New local path (submap idx):
[DBG]  9 8 11 12 13 14 15 
[DBG]  Agent (index) 89 | New local path (submap idx):
[DBG]  8 11 12 
[DBG]  Update the agent path 28 | Original local length: 35 | New local length: 7
[DBG]  agent 28 t=0 => decoded (sx,sy)=(2,2) => global_id=661
[DBG]  agent 28 t=1 => decoded (sx,sy)=(2,1) => global_id=660
[DBG]  agent 28 t=2 => decoded (sx,sy)=(3,1) => global_id=692
[DBG]  agent 28 t=3 => decoded (sx,sy)=(4,1) => global_id=724
[DBG]  agent 28 t=4 => decoded (sx,sy)=(4,2) => global_id=725
[DBG]  agent 28 t=5 => decoded (sx,sy)=(4,3) => global_id=726
[DBG]  agent 28 t=6 => decoded (sx,sy)=(4,4) => global_id=727
[DBG]  Complete path of agent 28:
[DBG]    Original: 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 629 628 627 627 627 627 627 627 627 627 627 628 596 596 596 596 597 629 661 661 661 660 692 724 725 726 727 
[DBG]    New:     661 661 661 661 661 661 661 661 661 660 692 724 725 726 727 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 661 661 661 661 661 661 661 661 
[DBG]    Local path (in submap): 661 660 692 724 725 726 727 
[DBG]    Suffix (out of submap): 
[DBG]  Original agent path length 28 je: 43
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 0: 661, 661, 661, 661, 661, 661, 661, 661, 661, 660, 692, 724, 725, 726, 727, 
[DBG]  Path for agent 28 updated, resulting length: 15
[DBG]  Update the agent path 89 | Original local length: 3 | New local length: 3
[DBG]  agent 89 t=0 => decoded (sx,sy)=(2,1) => global_id=660
[DBG]  agent 89 t=1 => decoded (sx,sy)=(3,1) => global_id=692
[DBG]  agent 89 t=2 => decoded (sx,sy)=(4,1) => global_id=724
[DBG]  Complete path of agent 89:
[DBG]    Original: 437 469 501 533 565 597 596 628 660 692 724 756 788 820 821 822 854 886 918 950 982 1014 1015 
[DBG]    New:     437 469 501 533 565 597 596 628 660 692 724 756 788 820 821 822 854 886 918 950 982 1014 1015 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 437 469 501 533 565 597 596 628 
[DBG]    Local path (in submap): 660 692 724 
[DBG]    Suffix (out of submap): 756 788 820 821 822 854 886 918 950 982 1014 1015 
[DBG]  Original agent path length 89 je: 23
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 1: 437, 469, 501, 533, 565, 597, 596, 628, 660, 692, 724, 756, 788, 820, 821, 822, 854, 886, 918, 950, 982, 1014, 1015, 
[DBG]  Path for agent 89 updated, resulting length: 23
[DBG]  Paths successfully updated.
[DBG]  (LNS.cpp) New path for agent 28: 
[DBG]  661, 661, 661, 661, 661, 661, 661, 661, 661, 660, 692, 724, 725, 726, 727, 
[DBG]  (LNS.cpp) New path for agent 89: 
[DBG]  437, 469, 501, 533, 565, 597, 596, 628, 660, 692, 724, 756, 788, 820, 821, 822, 854, 886, 918, 950, 982, 1014, 1015, 
[DBG]  Delta value: 0.4375
[DBG]  Rewarding metric index = 1
[DBG]  component_weights = {2.91081e-10, 1, 1.28206e-10, 2.22279e-10}
[DBG]  opSuccess value: 1
[STAT] neighbor.sum_of_costs before recomputation: 36
[STAT] neighbor.old_sum_of_costs before recomputation: 64
[STAT] sum_of_costs before recomputation: 4343
[DBG]  Validate solution immediately after SAT success.
[WARNING] Problem after SAT: Target conflict: agent 42 (len 42) traverses target of agent 28 (len 14) at location 727 at timestep 41
[DBG]  [DEBUG] Attempting immediate repair via init_lns because problem occurred after SAT (should be applied only for conflicts...).
[DBG]  [DEBUG] Passing 150 agents to init_lns (skip=true).
[DBG]  [DEBUG] path_table contents for selected agents (neighbor.agents):
[DBG]    Agent 28 => controlling path length=15
[DBG]    Agent 89 => controlling path length=23
[DBG]  hodnota skip_initial_solution=1
[DBG]  We skip initialSolution => call buildCollisionData()
[DBG]  buildCollisionData() called – skip_initial_solution case.
[DBG]  Agents.size()=150, collision_graph.size()=150
[DBG]  agent 28 => updateCollidingPairs => foundCollision
[DBG]  agent 42 => updateCollidingPairs => foundCollision
[DBG]  agent 46 => updateCollidingPairs => foundCollision
[DBG]  agent 70 => updateCollidingPairs => foundCollision
[DBG]  agent 135 => updateCollidingPairs => foundCollision
[DBG]  Conflicting agent pairs:
[DBG]  agent 28 is in conflict with agent 42
[DBG]  agent 28 is in conflict with agent 46
[DBG]  agent 28 is in conflict with agent 70
[DBG]  agent 28 is in conflict with agent 135
[DBG]  buildCollisionData() => sum_of_costs=4315, num_of_colliding_pairs=4
[DBG]  buildCollisionData done => sum_of_costs=4315, num_of_colliding_pairs=4
[DBG]  sum_of_cost hodnota: 4315
[DBG]  After skip/init build => iteration_stats.back(): sum_of_costs=4315, collisions=4
[DEBUG] Using default neighbor generation strategy for conflicts: 1
	InitLNS(PP): runtime = 0.00154271, iterations = 2, colliding pairs = 0, initial colliding pairs = 4, solution cost = 4349, initial solution cost = 4315, failed iterations = 0
[DBG]  init_lns->sum_of_costs after init_lns->run: 4349
[DBG]  sum_of_costs after assignment from init_lns->run: 4349
[DBG]  Recomputing sum_of_cost by dividing neighbor.sum_of_costs and neighbor.old_sum_of_costs
[STAT] sum_of_costs after recomputation: 4349
[STAT] Iteration 182
[DBG]  Random chance did not select SAT operator (r=89), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 182
[DBG]  Random chance did not select SAT operator (r=68), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 182
[DBG]  Random chance did not select SAT operator (r=59), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 182
[DBG]  Random chance did not select SAT operator (r=59), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 182
[DBG]  Random chance did not select SAT operator (r=80), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 182
[DBG]  Random chance did not select SAT operator (r=48), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 182
[DBG]  Random chance did not select SAT operator (r=58), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 182
[DBG]  Random chance did not select SAT operator (r=73), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 182
[DBG]  Random chance did not select SAT operator (r=46), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 182
[DBG]  Random chance did not select SAT operator (r=33), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 182
[DBG]  Using SAT operator (destroy+repair SAT).
[DBG]  ====================
[DBG]  SAT destroy operator called.
[DBG]  SAT heuristic: 2
[DBG]  key_agent_id: 28
[DBG]  key_agent_id global path length: 43
[DBG]  Submap content (global positions):
[DBG]  594 595 596 597 598 
[DBG]  626 627 628 629 630 
[DBG]  658 659 660 661 662 
[DBG]  690 691 692 693 694 
[DBG]  722 723 724 725 726 
[DBG]  Map content with agents and obstacles:
[DBG]  . X . . X 
[DBG]  X . . . X 
[DBG]  A . A . X 
[DBG]  X A . X X 
[DBG]  . X . . . 
[DBG]  content of the map structure that we pass to the SAT solver:
[DBG]  1  -1  1  1  -1  
[DBG]  -1  1  1  1  -1  
[DBG]  1  1  1  1  -1  
[DBG]  -1  1  1  -1  -1  
[DBG]  1  -1  1  1  1  
[DBG]  Identifying agents in a submap for rescheduling (when key_agent is there at the time 36):
[DBG]  Agent 26 found intervals in the sub-map:
[DBG]   [26..31]
[DBG]  Agent 26 is not in sub-map at time 36 (intervals: 
[DBG]  [26..31] )
[DBG]  Agent 28 found intervals in the sub-map:
[DBG]   [0..41]
[DBG]  Agent 28 (interval in submap: [0..41]) contains time 36, added to replan.
[DBG]  Agent 42 found intervals in the sub-map:
[DBG]   [34..40]
[DBG]  Agent 42 (interval in submap: [34..40]) contains time 36, added to replan.
[DBG]  Agent 55 found intervals in the sub-map:
[DBG]   [37..43]
[DBG]  Agent 55 is not in sub-map at time 36 (intervals: 
[DBG]  [37..43] )
[DBG]  Agent 69 found intervals in the sub-map:
[DBG]   [36..40]
[DBG]  Agent 69 (interval in submap: [36..40]) contains time 36, added to replan.
[DBG]  Agent 148 found intervals in the sub-map:
[DBG]   [37..39]
[DBG]  Agent 148 is not in sub-map at time 36 (intervals: 
[DBG]  [37..39] )
[DBG]  Agent 28 | Start (global): 660 -> (local): (2, 2) at time 36 | Goal (global): 726 -> (local): (4, 4) at time 41
[DBG]  Agent 42 | Start (global): 691 -> (local): (3, 1) at time 36 | Goal (global): 726 -> (local): (4, 4) at time 40
[DBG]  Agent 69 | Start (global): 658 -> (local): (2, 0) at time 36 | Goal (global): 724 -> (local): (4, 2) at time 40
[DBG]  [REPAIR] SAT destroy operator called.
[DBG]  [REPAIR] SAT operator – launching subproblem FOR OPTIMIZATION.
[DBG]  Creating local paths (sx, sy) in the submap for T_sync = 36
[DBG]    Agent 28 (global paths from T=36 to 41) has local path: (2,2) (2,2) (3,2) (4,2) (4,3) (4,4) 
[DBG]    Agent 42 (global paths from T=36 to 40) has local path: (3,1) (3,2) (4,2) (4,3) (4,4) 
[DBG]    Agent 69 (global paths from T=36 to 40) has local path: (2,0) (2,1) (2,2) (3,2) (4,2) 
[DBG]  Checking input data for SAT solver:
[DBG]    - Number of agents to replan: 3
[DBG]  Agent 28 has the original local path length: 6 => Start (2,2), Goal (4,4)
[DBG]  Agent 42 has the original local path length: 5 => Start (3,1), Goal (4,4)
[DBG]  Agent 69 has the original local path length: 5 => Start (2,0), Goal (4,2)
[DBG]  Start position: (2, 2), (3, 1), (2, 0), 
[DBG]  Goal position: (4, 4), (4, 4), (4, 2), 
[DBG]  SAT instance and solver created.
Currently solving
Instance name: scen
Map name: map
Encoding used: disappear_at_goal
SAT solver used: Kissat
Optimizing function: sum of costs
Number of agents: 3
Mks LB: 5
SoC LB: 15
Delta: 0
Remaining time: 300000 [ms]

[STAT] Solver returned: -1
[DBG]  SAT solver failed.
[STAT] SAT solver failed to find a valid solution.
[DBG]  ====================
[DBG]  SAT destroy operator called.
[DBG]  SAT heuristic: 2
[DBG]  key_agent_id: 28
[DBG]  key_agent_id global path length: 43
[DBG]  Submap content (global positions):
[DBG]  625 626 627 628 629 
[DBG]  657 658 659 660 661 
[DBG]  689 690 691 692 693 
[DBG]  721 722 723 724 725 
[DBG]  753 754 755 756 757 
[DBG]  Map content with agents and obstacles:
[DBG]  A X . A A 
[DBG]  A . . A . 
[DBG]  . X A A X 
[DBG]  . . X A . 
[DBG]  . X . . . 
[DBG]  content of the map structure that we pass to the SAT solver:
[DBG]  1  -1  1  1  1  
[DBG]  1  1  1  1  1  
[DBG]  1  -1  1  1  -1  
[DBG]  1  1  -1  1  1  
[DBG]  1  -1  1  1  1  
[DBG]  Identifying agents in a submap for rescheduling (when key_agent is there at the time 25):
[DBG]  Agent 3 found intervals in the sub-map:
[DBG]   [25..29]
[DBG]  Agent 3 (interval in submap: [25..29]) contains time 25, added to replan.
[DBG]  Agent 28 found intervals in the sub-map:
[DBG]   [0..40]
[DBG]  Agent 28 (interval in submap: [0..40]) contains time 25, added to replan.
[DBG]  Agent 44 found intervals in the sub-map:
[DBG]   [25..31]
[DBG]  Agent 44 (interval in submap: [25..31]) contains time 25, added to replan.
[DBG]  Agent 45 found intervals in the sub-map:
[DBG]   [22..27]
[DBG]  Agent 45 (interval in submap: [22..27]) contains time 25, added to replan.
[DBG]  Agent 53 found intervals in the sub-map:
[DBG]   [23..28]
[DBG]  Agent 53 (interval in submap: [23..28]) contains time 25, added to replan.
[DBG]  Agent 57 found intervals in the sub-map:
[DBG]   [25..26]
[DBG]  Agent 57 (interval in submap: [25..26]) contains time 25, added to replan.
[DBG]  Agent 70 found intervals in the sub-map:
[DBG]   [13..21]
[DBG]  Agent 70 is not in sub-map at time 25 (intervals: 
[DBG]  [13..21] )
[DBG]  Agent 74 found intervals in the sub-map:
[DBG]   [24..30]
[DBG]  Agent 74 (interval in submap: [24..30]) contains time 25, added to replan.
[DBG]  Agent 100 found intervals in the sub-map:
[DBG]   [21..27]
[DBG]  Agent 100 (interval in submap: [21..27]) contains time 25, added to replan.
[DBG]  Agent 111 found intervals in the sub-map:
[DBG]  
[DBG]  Agent 111 is not in sub-map at time 25 (intervals: 
[DBG]  )
[DBG]  Agent 148 found intervals in the sub-map:
[DBG]   [32..39]
[DBG]  Agent 148 is not in sub-map at time 25 (intervals: 
[DBG]  [32..39] )
[DBG]  Agent 3 | Start (global): 628 -> (local): (0, 3) at time 25 | Goal (global): 756 -> (local): (4, 3) at time 29
[DBG]  Agent 28 | Start (global): 691 -> (local): (2, 2) at time 25 | Goal (global): 725 -> (local): (3, 4) at time 40
[DBG]  Agent 44 | Start (global): 629 -> (local): (0, 4) at time 25 | Goal (global): 755 -> (local): (4, 2) at time 31
[DBG]  Agent 45 | Start (global): 692 -> (local): (2, 3) at time 25 | Goal (global): 756 -> (local): (4, 3) at time 27
[DBG]  Agent 53 | Start (global): 660 -> (local): (1, 3) at time 25 | Goal (global): 756 -> (local): (4, 3) at time 28
[DBG]  Agent 57 | Start (global): 625 -> (local): (0, 0) at time 25 | Goal (global): 657 -> (local): (1, 0) at time 26
[DBG]  Agent 74 | Start (global): 657 -> (local): (1, 0) at time 25 | Goal (global): 629 -> (local): (0, 4) at time 30
[DBG]  Agent 100 | Start (global): 724 -> (local): (3, 3) at time 25 | Goal (global): 755 -> (local): (4, 2) at time 27
[DBG]  [REPAIR] SAT destroy operator called.
[DBG]  [REPAIR] SAT operator – launching subproblem FOR OPTIMIZATION.
[DBG]  Creating local paths (sx, sy) in the submap for T_sync = 25
[DBG]    Agent 3 (global paths from T=25 to 29) has local path: (0,3) (1,3) (2,3) (3,3) (4,3) 
[DBG]    Agent 28 (global paths from T=25 to 40) has local path: (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,3) (1,3) (1,3) (1,3) (1,3) (1,3) (1,3) (2,3) (3,3) (3,4) 
[DBG]    Agent 44 (global paths from T=25 to 31) has local path: (0,4) (0,3) (1,3) (2,3) (3,3) (4,3) (4,2) 
[DBG]    Agent 45 (global paths from T=25 to 27) has local path: (2,3) (3,3) (4,3) 
[DBG]    Agent 53 (global paths from T=25 to 28) has local path: (1,3) (2,3) (3,3) (4,3) 
[DBG]    Agent 57 (global paths from T=25 to 26) has local path: (0,0) (1,0) 
[DBG]    Agent 74 (global paths from T=25 to 30) has local path: (1,0) (1,1) (1,2) (0,2) (0,3) (0,4) 
[DBG]    Agent 100 (global paths from T=25 to 27) has local path: (3,3) (4,3) (4,2) 
[DBG]  Checking input data for SAT solver:
[DBG]    - Number of agents to replan: 8
[DBG]  Agent 3 has the original local path length: 5 => Start (0,3), Goal (4,3)
[DBG]  Agent 28 has the original local path length: 16 => Start (2,2), Goal (3,4)
[DBG]  Agent 44 has the original local path length: 7 => Start (0,4), Goal (4,2)
[DBG]  Agent 45 has the original local path length: 3 => Start (2,3), Goal (4,3)
[DBG]  Agent 53 has the original local path length: 4 => Start (1,3), Goal (4,3)
[DBG]  Agent 57 has the original local path length: 2 => Start (0,0), Goal (1,0)
[DBG]  Agent 74 has the original local path length: 6 => Start (1,0), Goal (0,4)
[DBG]  Agent 100 has the original local path length: 3 => Start (3,3), Goal (4,2)
[DBG]  Start position: (0, 3), (2, 2), (0, 4), (2, 3), (1, 3), (0, 0), (1, 0), (3, 3), 
[DBG]  Goal position: (4, 3), (3, 4), (4, 2), (4, 3), (4, 3), (1, 0), (0, 4), (4, 2), 
[DBG]  SAT instance and solver created.
Currently solving
Instance name: scen
Map name: map
Encoding used: disappear_at_goal
SAT solver used: Kissat
Optimizing function: sum of costs
Number of agents: 8
Mks LB: 7
SoC LB: 34
Delta: 0
Remaining time: 300000 [ms]

[STAT] Solver returned: -1
[DBG]  SAT solver failed.
[STAT] SAT solver failed to find a valid solution.
[DBG]  ====================
[DBG]  SAT destroy operator called.
[DBG]  SAT heuristic: 2
[DBG]  key_agent_id: 28
[DBG]  key_agent_id global path length: 43
[DBG]  Submap content (global positions):
[DBG]  625 626 627 628 629 
[DBG]  657 658 659 660 661 
[DBG]  689 690 691 692 693 
[DBG]  721 722 723 724 725 
[DBG]  753 754 755 756 757 
[DBG]  Map content with agents and obstacles:
[DBG]  . X A A . 
[DBG]  . . . . . 
[DBG]  . X A A X 
[DBG]  . . X A . 
[DBG]  . X . A . 
[DBG]  content of the map structure that we pass to the SAT solver:
[DBG]  1  -1  1  1  1  
[DBG]  1  1  1  1  1  
[DBG]  1  -1  1  1  -1  
[DBG]  1  1  -1  1  1  
[DBG]  1  -1  1  1  1  
[DBG]  Identifying agents in a submap for rescheduling (when key_agent is there at the time 28):
[DBG]  Agent 3 found intervals in the sub-map:
[DBG]   [25..29]
[DBG]  Agent 3 (interval in submap: [25..29]) contains time 28, added to replan.
[DBG]  Agent 11 found intervals in the sub-map:
[DBG]   [37..37]
[DBG]  Agent 11 is not in sub-map at time 28 (intervals: 
[DBG]  [37..37] )
[DBG]  Agent 26 found intervals in the sub-map:
[DBG]   [27..33]
[DBG]  Agent 26 (interval in submap: [27..33]) contains time 28, added to replan.
[DBG]  Agent 28 found intervals in the sub-map:
[DBG]   [0..40]
[DBG]  Agent 28 (interval in submap: [0..40]) contains time 28, added to replan.
[DBG]  Agent 44 found intervals in the sub-map:
[DBG]   [25..31]
[DBG]  Agent 44 (interval in submap: [25..31]) contains time 28, added to replan.
[DBG]  Agent 53 found intervals in the sub-map:
[DBG]   [23..28]
[DBG]  Agent 53 (interval in submap: [23..28]) contains time 28, added to replan.
[DBG]  Agent 74 found intervals in the sub-map:
[DBG]   [24..30]
[DBG]  Agent 74 (interval in submap: [24..30]) contains time 28, added to replan.
[DBG]  Agent 109 found intervals in the sub-map:
[DBG]  
[DBG]  Agent 109 is not in sub-map at time 28 (intervals: 
[DBG]  )
[DBG]  Agent 148 found intervals in the sub-map:
[DBG]   [32..39]
[DBG]  Agent 148 is not in sub-map at time 28 (intervals: 
[DBG]  [32..39] )
[DBG]  Agent 3 | Start (global): 724 -> (local): (3, 3) at time 28 | Goal (global): 756 -> (local): (4, 3) at time 29
[DBG]  Agent 26 | Start (global): 628 -> (local): (0, 3) at time 28 | Goal (global): 755 -> (local): (4, 2) at time 33
[DBG]  Agent 28 | Start (global): 691 -> (local): (2, 2) at time 28 | Goal (global): 725 -> (local): (3, 4) at time 40
[DBG]  Agent 44 | Start (global): 692 -> (local): (2, 3) at time 28 | Goal (global): 755 -> (local): (4, 2) at time 31
[DBG]  Agent 53 | Start (global): 756 -> (local): (4, 3) at time 28 | Goal (global): 756 -> (local): (4, 3) at time 28
[DBG]  Agent 74 | Start (global): 627 -> (local): (0, 2) at time 28 | Goal (global): 629 -> (local): (0, 4) at time 30
[DBG]  [REPAIR] SAT destroy operator called.
[DBG]  [REPAIR] SAT operator – launching subproblem FOR OPTIMIZATION.
[DBG]  Creating local paths (sx, sy) in the submap for T_sync = 28
[DBG]    Agent 3 (global paths from T=28 to 29) has local path: (3,3) (4,3) 
[DBG]    Agent 26 (global paths from T=28 to 33) has local path: (0,3) (1,3) (2,3) (3,3) (4,3) (4,2) 
[DBG]    Agent 28 (global paths from T=28 to 40) has local path: (2,2) (2,2) (2,2) (2,3) (1,3) (1,3) (1,3) (1,3) (1,3) (1,3) (2,3) (3,3) (3,4) 
[DBG]    Agent 44 (global paths from T=28 to 31) has local path: (2,3) (3,3) (4,3) (4,2) 
[DBG]    Agent 53 (global paths from T=28 to 28) has local path: (4,3) 
[DBG]    Agent 74 (global paths from T=28 to 30) has local path: (0,2) (0,3) (0,4) 
[DBG]  Checking input data for SAT solver:
[DBG]    - Number of agents to replan: 6
[DBG]  Agent 3 has the original local path length: 2 => Start (3,3), Goal (4,3)
[DBG]  Agent 26 has the original local path length: 6 => Start (0,3), Goal (4,2)
[DBG]  Agent 28 has the original local path length: 13 => Start (2,2), Goal (3,4)
[DBG]  Agent 44 has the original local path length: 4 => Start (2,3), Goal (4,2)
[DBG]  Agent 53 has the original local path length: 1 => Start (4,3), Goal (4,3)
[DBG]  Agent 74 has the original local path length: 3 => Start (0,2), Goal (0,4)
[DBG]  Start position: (3, 3), (0, 3), (2, 2), (2, 3), (4, 3), (0, 2), 
[DBG]  Goal position: (4, 3), (4, 2), (3, 4), (4, 2), (4, 3), (0, 4), 
[DBG]  SAT instance and solver created.
Currently solving
Instance name: scen
Map name: map
Encoding used: disappear_at_goal
SAT solver used: Kissat
Optimizing function: sum of costs
Number of agents: 6
Mks LB: 6
SoC LB: 20
Delta: 0
Remaining time: 300000 [ms]

Vertex conflict! Agents 0, 2, timestep 4, location 0
Swapping conflict! Agents 0, 2, timestep 4, edge (0,0)
Vertex conflict! Agents 0, 2, timestep 5, location 0
Vertex conflict! Agents 0, 3, timestep 4, location 0
Swapping conflict! Agents 0, 3, timestep 4, edge (0,0)
Vertex conflict! Agents 0, 3, timestep 5, location 0
Vertex conflict! Agents 0, 4, timestep 2, location 0
Swapping conflict! Agents 0, 4, timestep 2, edge (0,0)
Vertex conflict! Agents 0, 4, timestep 3, location 0
Swapping conflict! Agents 0, 4, timestep 3, edge (0,0)
Vertex conflict! Agents 0, 4, timestep 4, location 0
Swapping conflict! Agents 0, 4, timestep 4, edge (0,0)
Vertex conflict! Agents 0, 4, timestep 5, location 0
Vertex conflict! Agents 0, 5, timestep 3, location 0
Swapping conflict! Agents 0, 5, timestep 3, edge (0,0)
Vertex conflict! Agents 0, 5, timestep 4, location 0
Swapping conflict! Agents 0, 5, timestep 4, edge (0,0)
Vertex conflict! Agents 0, 5, timestep 5, location 0
Vertex conflict! Agents 2, 3, timestep 4, location 0
Swapping conflict! Agents 2, 3, timestep 4, edge (0,0)
Vertex conflict! Agents 2, 3, timestep 5, location 0
Vertex conflict! Agents 2, 4, timestep 4, location 0
Swapping conflict! Agents 2, 4, timestep 4, edge (0,0)
Vertex conflict! Agents 2, 4, timestep 5, location 0
Vertex conflict! Agents 2, 5, timestep 4, location 0
Swapping conflict! Agents 2, 5, timestep 4, edge (0,0)
Vertex conflict! Agents 2, 5, timestep 5, location 0
Vertex conflict! Agents 3, 4, timestep 4, location 0
Swapping conflict! Agents 3, 4, timestep 4, edge (0,0)
Vertex conflict! Agents 3, 4, timestep 5, location 0
Vertex conflict! Agents 3, 5, timestep 4, location 0
Swapping conflict! Agents 3, 5, timestep 4, edge (0,0)
Vertex conflict! Agents 3, 5, timestep 5, location 0
Vertex conflict! Agents 4, 5, timestep 3, location 0
Swapping conflict! Agents 4, 5, timestep 3, edge (0,0)
Vertex conflict! Agents 4, 5, timestep 4, location 0
Swapping conflict! Agents 4, 5, timestep 4, edge (0,0)
Vertex conflict! Agents 4, 5, timestep 5, location 0
Found plan [agents = 6] [timesteps = 6]
Agent #0 : 14 18 0 0 0 0 
Agent #1 : 2 7 11 14 18 17 
Agent #2 : 10 11 14 15 0 0 
Agent #3 : 11 14 18 17 0 0 
Agent #4 : 18 0 0 0 0 0 
Agent #5 : 1 2 3 0 0 0 

[STAT] Solver returned: 0
[DBG]  Agent (index) 3 | New local path (submap idx):
[DBG]  14 18 
[DBG]  Agent (index) 26 | New local path (submap idx):
[DBG]  2 7 11 14 18 17 
[DBG]  Agent (index) 28 | New local path (submap idx):
[DBG]  10 11 14 15 
[DBG]  Agent (index) 44 | New local path (submap idx):
[DBG]  11 14 18 17 
[DBG]  Agent (index) 53 | New local path (submap idx):
[DBG]  18 
[DBG]  Agent (index) 74 | New local path (submap idx):
[DBG]  1 2 3 
[DBG]  Update the agent path 3 | Original local length: 2 | New local length: 2
[DBG]  agent 3 t=0 => decoded (sx,sy)=(3,3) => global_id=724
[DBG]  agent 3 t=1 => decoded (sx,sy)=(4,3) => global_id=756
[DBG]  Complete path of agent 3:
[DBG]    Original: 468 468 468 468 468 468 468 467 435 435 435 435 467 499 499 499 467 468 468 469 501 533 565 597 596 628 660 692 724 756 788 820 819 818 850 882 881 913 913 912 
[DBG]    New:     468 468 468 468 468 468 468 467 435 435 435 435 467 499 499 499 467 468 468 469 501 533 565 597 596 628 660 692 724 756 788 820 819 818 850 882 881 913 913 912 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 468 468 468 468 468 468 468 467 435 435 435 435 467 499 499 499 467 468 468 469 501 533 565 597 596 628 660 692 
[DBG]    Local path (in submap): 724 756 
[DBG]    Suffix (out of submap): 788 820 819 818 850 882 881 913 913 912 
[DBG]  Original agent path length 3 je: 40
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 0: 468, 468, 468, 468, 468, 468, 468, 467, 435, 435, 435, 435, 467, 499, 499, 499, 467, 468, 468, 469, 501, 533, 565, 597, 596, 628, 660, 692, 724, 756, 788, 820, 819, 818, 850, 882, 881, 913, 913, 912, 
[DBG]  Path for agent 3 updated, resulting length: 40
[DBG]  Update the agent path 26 | Original local length: 6 | New local length: 6
[DBG]  agent 26 t=0 => decoded (sx,sy)=(0,3) => global_id=628
[DBG]  agent 26 t=1 => decoded (sx,sy)=(1,3) => global_id=660
[DBG]  agent 26 t=2 => decoded (sx,sy)=(2,3) => global_id=692
[DBG]  agent 26 t=3 => decoded (sx,sy)=(3,3) => global_id=724
[DBG]  agent 26 t=4 => decoded (sx,sy)=(4,3) => global_id=756
[DBG]  agent 26 t=5 => decoded (sx,sy)=(4,2) => global_id=755
[DBG]  Complete path of agent 26:
[DBG]    Original: 13 14 46 47 79 80 81 82 83 115 147 179 180 212 244 276 308 340 341 373 405 437 469 501 533 565 597 629 628 660 692 724 756 755 
[DBG]    New:     13 14 46 47 79 80 81 82 83 115 147 179 180 212 244 276 308 340 341 373 405 437 469 501 533 565 597 629 628 660 692 724 756 755 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 13 14 46 47 79 80 81 82 83 115 147 179 180 212 244 276 308 340 341 373 405 437 469 501 533 565 597 629 
[DBG]    Local path (in submap): 628 660 692 724 756 755 
[DBG]    Suffix (out of submap): 
[DBG]  Original agent path length 26 je: 34
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 1: 13, 14, 46, 47, 79, 80, 81, 82, 83, 115, 147, 179, 180, 212, 244, 276, 308, 340, 341, 373, 405, 437, 469, 501, 533, 565, 597, 629, 628, 660, 692, 724, 756, 755, 
[DBG]  Path for agent 26 updated, resulting length: 34
[DBG]  Update the agent path 28 | Original local length: 13 | New local length: 4
[DBG]  agent 28 t=0 => decoded (sx,sy)=(2,2) => global_id=691
[DBG]  agent 28 t=1 => decoded (sx,sy)=(2,3) => global_id=692
[DBG]  agent 28 t=2 => decoded (sx,sy)=(3,3) => global_id=724
[DBG]  agent 28 t=3 => decoded (sx,sy)=(3,4) => global_id=725
[DBG]  Complete path of agent 28:
[DBG]    Original: 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 660 692 691 691 691 691 691 691 691 691 691 691 692 660 660 660 660 660 660 692 724 725 726 727 
[DBG]    New:     661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 660 692 691 691 691 691 691 691 691 691 692 724 725 726 727 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 660 692 691 691 691 691 691 691 691 
[DBG]    Local path (in submap): 691 692 724 725 726 727 
[DBG]    Suffix (out of submap): 
[DBG]  Original agent path length 28 je: 43
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 2: 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 660, 692, 691, 691, 691, 691, 691, 691, 691, 691, 692, 724, 725, 726, 727, 
[DBG]  Path for agent 28 updated, resulting length: 34
[DBG]  Update the agent path 44 | Original local length: 4 | New local length: 4
[DBG]  agent 44 t=0 => decoded (sx,sy)=(2,3) => global_id=692
[DBG]  agent 44 t=1 => decoded (sx,sy)=(3,3) => global_id=724
[DBG]  agent 44 t=2 => decoded (sx,sy)=(4,3) => global_id=756
[DBG]  agent 44 t=3 => decoded (sx,sy)=(4,2) => global_id=755
[DBG]  Complete path of agent 44:
[DBG]    Original: 156 124 123 122 154 186 218 217 216 248 247 279 311 343 375 407 407 439 438 470 469 501 533 565 597 629 628 660 692 724 756 755 787 786 818 850 882 881 880 848 
[DBG]    New:     156 124 123 122 154 186 218 217 216 248 247 279 311 343 375 407 407 439 438 470 469 501 533 565 597 629 628 660 692 724 756 755 787 786 818 850 882 881 880 848 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 156 124 123 122 154 186 218 217 216 248 247 279 311 343 375 407 407 439 438 470 469 501 533 565 597 629 628 660 
[DBG]    Local path (in submap): 692 724 756 755 
[DBG]    Suffix (out of submap): 787 786 818 850 882 881 880 848 
[DBG]  Original agent path length 44 je: 40
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 3: 156, 124, 123, 122, 154, 186, 218, 217, 216, 248, 247, 279, 311, 343, 375, 407, 407, 439, 438, 470, 469, 501, 533, 565, 597, 629, 628, 660, 692, 724, 756, 755, 787, 786, 818, 850, 882, 881, 880, 848, 
[DBG]  Path for agent 44 updated, resulting length: 40
[DBG]  Update the agent path 53 | Original local length: 1 | New local length: 1
[DBG]  agent 53 t=0 => decoded (sx,sy)=(4,3) => global_id=756
[DBG]  Complete path of agent 53:
[DBG]    Original: 84 116 148 148 180 212 244 276 308 309 341 341 373 373 373 373 405 437 469 501 533 565 597 629 628 660 692 724 756 788 820 821 
[DBG]    New:     84 116 148 148 180 212 244 276 308 309 341 341 373 373 373 373 405 437 469 501 533 565 597 629 628 660 692 724 756 788 820 821 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 84 116 148 148 180 212 244 276 308 309 341 341 373 373 373 373 405 437 469 501 533 565 597 629 628 660 692 724 
[DBG]    Local path (in submap): 756 
[DBG]    Suffix (out of submap): 788 820 821 
[DBG]  Original agent path length 53 je: 32
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 4: 84, 116, 148, 148, 180, 212, 244, 276, 308, 309, 341, 341, 373, 373, 373, 373, 405, 437, 469, 501, 533, 565, 597, 629, 628, 660, 692, 724, 756, 788, 820, 821, 
[DBG]  Path for agent 53 updated, resulting length: 32
[DBG]  Update the agent path 74 | Original local length: 3 | New local length: 3
[DBG]  agent 74 t=0 => decoded (sx,sy)=(0,2) => global_id=627
[DBG]  agent 74 t=1 => decoded (sx,sy)=(0,3) => global_id=628
[DBG]  agent 74 t=2 => decoded (sx,sy)=(0,4) => global_id=629
[DBG]  Complete path of agent 74:
[DBG]    Original: 752 752 752 752 752 752 752 752 752 752 752 752 752 752 752 751 751 751 750 718 718 719 687 688 689 657 658 659 627 628 629 597 565 566 534 534 534 502 503 504 505 504 
[DBG]    New:     752 752 752 752 752 752 752 752 752 752 752 752 752 752 752 751 751 751 750 718 718 719 687 688 689 657 658 659 627 628 629 597 565 566 534 534 534 502 503 504 505 504 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 752 752 752 752 752 752 752 752 752 752 752 752 752 752 752 751 751 751 750 718 718 719 687 688 689 657 658 659 
[DBG]    Local path (in submap): 627 628 629 
[DBG]    Suffix (out of submap): 597 565 566 534 534 534 502 503 504 505 504 
[DBG]  Original agent path length 74 je: 42
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 5: 752, 752, 752, 752, 752, 752, 752, 752, 752, 752, 752, 752, 752, 752, 752, 751, 751, 751, 750, 718, 718, 719, 687, 688, 689, 657, 658, 659, 627, 628, 629, 597, 565, 566, 534, 534, 534, 502, 503, 504, 505, 504, 
[DBG]  Path for agent 74 updated, resulting length: 42
[DBG]  Paths successfully updated.
[DBG]  (LNS.cpp) New path for agent 3: 
[DBG]  468, 468, 468, 468, 468, 468, 468, 467, 435, 435, 435, 435, 467, 499, 499, 499, 467, 468, 468, 469, 501, 533, 565, 597, 596, 628, 660, 692, 724, 756, 788, 820, 819, 818, 850, 882, 881, 913, 913, 912, 
[DBG]  (LNS.cpp) New path for agent 26: 
[DBG]  13, 14, 46, 47, 79, 80, 81, 82, 83, 115, 147, 179, 180, 212, 244, 276, 308, 340, 341, 373, 405, 437, 469, 501, 533, 565, 597, 629, 628, 660, 692, 724, 756, 755, 
[DBG]  (LNS.cpp) New path for agent 28: 
[DBG]  661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 660, 692, 691, 691, 691, 691, 691, 691, 691, 691, 692, 724, 725, 726, 727, 
[DBG]  (LNS.cpp) New path for agent 44: 
[DBG]  156, 124, 123, 122, 154, 186, 218, 217, 216, 248, 247, 279, 311, 343, 375, 407, 407, 439, 438, 470, 469, 501, 533, 565, 597, 629, 628, 660, 692, 724, 756, 755, 787, 786, 818, 850, 882, 881, 880, 848, 
[DBG]  (LNS.cpp) New path for agent 53: 
[DBG]  84, 116, 148, 148, 180, 212, 244, 276, 308, 309, 341, 341, 373, 373, 373, 373, 405, 437, 469, 501, 533, 565, 597, 629, 628, 660, 692, 724, 756, 788, 820, 821, 
[DBG]  (LNS.cpp) New path for agent 74: 
[DBG]  752, 752, 752, 752, 752, 752, 752, 752, 752, 752, 752, 752, 752, 752, 752, 751, 751, 751, 750, 718, 718, 719, 687, 688, 689, 657, 658, 659, 627, 628, 629, 597, 565, 566, 534, 534, 534, 502, 503, 504, 505, 504, 
[DBG]  Delta value: 0.04
[DBG]  Rewarding metric index = 1
[DBG]  component_weights = {2.65891e-10, 1, 1.17111e-10, 2.03044e-10}
[DBG]  opSuccess value: 1
[STAT] neighbor.sum_of_costs before recomputation: 216
[STAT] neighbor.old_sum_of_costs before recomputation: 225
[STAT] sum_of_costs before recomputation: 4349
[DBG]  Validate solution immediately after SAT success.
[WARNING] Problem after SAT: Target conflict: agent 42 (len 42) traverses target of agent 28 (len 33) at location 727 at timestep 41
[DBG]  [DEBUG] Attempting immediate repair via init_lns because problem occurred after SAT (should be applied only for conflicts...).
[DBG]  [DEBUG] Passing 150 agents to init_lns (skip=true).
[DBG]  [DEBUG] path_table contents for selected agents (neighbor.agents):
[DBG]    Agent 3 => controlling path length=40
[DBG]    Agent 26 => controlling path length=34
[DBG]    Agent 28 => controlling path length=34
[DBG]    Agent 44 => controlling path length=40
[DBG]    Agent 53 => controlling path length=32
[DBG]    Agent 74 => controlling path length=42
[DBG]  hodnota skip_initial_solution=1
[DBG]  We skip initialSolution => call buildCollisionData()
[DBG]  buildCollisionData() called – skip_initial_solution case.
[DBG]  Agents.size()=150, collision_graph.size()=150
[DBG]  agent 28 => updateCollidingPairs => foundCollision
[DBG]  agent 42 => updateCollidingPairs => foundCollision
[DBG]  Conflicting agent pairs:
[DBG]  agent 28 is in conflict with agent 42
[DBG]  buildCollisionData() => sum_of_costs=4340, num_of_colliding_pairs=1
[DBG]  buildCollisionData done => sum_of_costs=4340, num_of_colliding_pairs=1
[DBG]  sum_of_cost hodnota: 4340
[DBG]  After skip/init build => iteration_stats.back(): sum_of_costs=4340, collisions=1
[DEBUG] Using default neighbor generation strategy for conflicts: 0
	InitLNS(PP): runtime = 0.00153367, iterations = 2, colliding pairs = 0, initial colliding pairs = 1, solution cost = 4351, initial solution cost = 4340, failed iterations = 0
[DBG]  init_lns->sum_of_costs after init_lns->run: 4351
[DBG]  sum_of_costs after assignment from init_lns->run: 4351
[DBG]  Recomputing sum_of_cost by dividing neighbor.sum_of_costs and neighbor.old_sum_of_costs
[STAT] sum_of_costs after recomputation: 4351
[STAT] Iteration 183
[DBG]  Random chance did not select SAT operator (r=42), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] Iteration 183
[DBG]  Using SAT operator (destroy+repair SAT).
[DBG]  ====================
[DBG]  SAT destroy operator called.
[DBG]  SAT heuristic: 2
[DBG]  key_agent_id: 28
[DBG]  key_agent_id global path length: 43
[DBG]  Submap content (global positions):
[DBG]  595 596 597 598 599 
[DBG]  627 628 629 630 631 
[DBG]  659 660 661 662 663 
[DBG]  691 692 693 694 695 
[DBG]  723 724 725 726 727 
[DBG]  Map content with agents and obstacles:
[DBG]  X A . X . 
[DBG]  . . . X . 
[DBG]  A A A X X 
[DBG]  . A X X X 
[DBG]  X A . . . 
[DBG]  content of the map structure that we pass to the SAT solver:
[DBG]  -1  1  1  -1  1  
[DBG]  1  1  1  -1  1  
[DBG]  1  1  1  -1  -1  
[DBG]  1  1  -1  -1  -1  
[DBG]  -1  1  1  1  1  
[DBG]  Identifying agents in a submap for rescheduling (when key_agent is there at the time 27):
[DBG]  Agent 3 found intervals in the sub-map:
[DBG]   [23..28]
[DBG]  Agent 3 (interval in submap: [23..28]) contains time 27, added to replan.
[DBG]  Agent 26 found intervals in the sub-map:
[DBG]   [26..31]
[DBG]  Agent 26 (interval in submap: [26..31]) contains time 27, added to replan.
[DBG]  Agent 28 found intervals in the sub-map:
[DBG]   [0..42]
[DBG]  Agent 28 (interval in submap: [0..42]) contains time 27, added to replan.
[DBG]  Agent 44 found intervals in the sub-map:
[DBG]   [24..29]
[DBG]  Agent 44 (interval in submap: [24..29]) contains time 27, added to replan.
[DBG]  Agent 53 found intervals in the sub-map:
[DBG]   [22..27]
[DBG]  Agent 53 (interval in submap: [22..27]) contains time 27, added to replan.
[DBG]  Agent 74 found intervals in the sub-map:
[DBG]   [27..31]
[DBG]  Agent 74 (interval in submap: [27..31]) contains time 27, added to replan.
[DBG]  Agent 111 found intervals in the sub-map:
[DBG]  
[DBG]  Agent 111 is not in sub-map at time 27 (intervals: 
[DBG]  )
[DBG]  Agent 3 | Start (global): 692 -> (local): (3, 1) at time 27 | Goal (global): 724 -> (local): (4, 1) at time 28
[DBG]  Agent 26 | Start (global): 596 -> (local): (0, 1) at time 27 | Goal (global): 724 -> (local): (4, 1) at time 31
[DBG]  Agent 28 | Start (global): 661 -> (local): (2, 2) at time 27 | Goal (global): 727 -> (local): (4, 4) at time 42
[DBG]  Agent 44 | Start (global): 660 -> (local): (2, 1) at time 27 | Goal (global): 724 -> (local): (4, 1) at time 29
[DBG]  Agent 53 | Start (global): 724 -> (local): (4, 1) at time 27 | Goal (global): 724 -> (local): (4, 1) at time 27
[DBG]  Agent 74 | Start (global): 659 -> (local): (2, 0) at time 27 | Goal (global): 597 -> (local): (0, 2) at time 31
[DBG]  [REPAIR] SAT destroy operator called.
[DBG]  [REPAIR] SAT operator – launching subproblem FOR OPTIMIZATION.
[DBG]  Creating local paths (sx, sy) in the submap for T_sync = 27
[DBG]    Agent 3 (global paths from T=27 to 28) has local path: (3,1) (4,1) 
[DBG]    Agent 26 (global paths from T=27 to 31) has local path: (0,1) (1,1) (2,1) (3,1) (4,1) 
[DBG]    Agent 28 (global paths from T=27 to 42) has local path: (2,2) (2,2) (2,2) (2,2) (1,2) (1,1) (1,0) (1,0) (1,0) (2,0) (3,0) (3,1) (4,1) (4,2) (4,3) (4,4) 
[DBG]    Agent 44 (global paths from T=27 to 29) has local path: (2,1) (3,1) (4,1) 
[DBG]    Agent 53 (global paths from T=27 to 27) has local path: (4,1) 
[DBG]    Agent 74 (global paths from T=27 to 31) has local path: (2,0) (1,0) (1,1) (1,2) (0,2) 
[DBG]  Checking input data for SAT solver:
[DBG]    - Number of agents to replan: 6
[DBG]  Agent 3 has the original local path length: 2 => Start (3,1), Goal (4,1)
[DBG]  Agent 26 has the original local path length: 5 => Start (0,1), Goal (4,1)
[DBG]  Agent 28 has the original local path length: 16 => Start (2,2), Goal (4,4)
[DBG]  Agent 44 has the original local path length: 3 => Start (2,1), Goal (4,1)
[DBG]  Agent 53 has the original local path length: 1 => Start (4,1), Goal (4,1)
[DBG]  Agent 74 has the original local path length: 5 => Start (2,0), Goal (0,2)
[DBG]  Start position: (3, 1), (0, 1), (2, 2), (2, 1), (4, 1), (2, 0), 
[DBG]  Goal position: (4, 1), (4, 1), (4, 4), (4, 1), (4, 1), (0, 2), 
[DBG]  SAT instance and solver created.
Currently solving
Instance name: scen
Map name: map
Encoding used: disappear_at_goal
SAT solver used: Kissat
Optimizing function: sum of costs
Number of agents: 6
Mks LB: 7
SoC LB: 23
Delta: 0
Remaining time: 300000 [ms]

Vertex conflict! Agents 0, 1, timestep 5, location 0
Swapping conflict! Agents 0, 1, timestep 5, edge (0,0)
Vertex conflict! Agents 0, 1, timestep 6, location 0
Vertex conflict! Agents 0, 3, timestep 3, location 0
Swapping conflict! Agents 0, 3, timestep 3, edge (0,0)
Vertex conflict! Agents 0, 3, timestep 4, location 0
Swapping conflict! Agents 0, 3, timestep 4, edge (0,0)
Vertex conflict! Agents 0, 3, timestep 5, location 0
Swapping conflict! Agents 0, 3, timestep 5, edge (0,0)
Vertex conflict! Agents 0, 3, timestep 6, location 0
Vertex conflict! Agents 0, 4, timestep 2, location 0
Swapping conflict! Agents 0, 4, timestep 2, edge (0,0)
Vertex conflict! Agents 0, 4, timestep 3, location 0
Swapping conflict! Agents 0, 4, timestep 3, edge (0,0)
Vertex conflict! Agents 0, 4, timestep 4, location 0
Swapping conflict! Agents 0, 4, timestep 4, edge (0,0)
Vertex conflict! Agents 0, 4, timestep 5, location 0
Swapping conflict! Agents 0, 4, timestep 5, edge (0,0)
Vertex conflict! Agents 0, 4, timestep 6, location 0
Vertex conflict! Agents 0, 5, timestep 5, location 0
Swapping conflict! Agents 0, 5, timestep 5, edge (0,0)
Vertex conflict! Agents 0, 5, timestep 6, location 0
Vertex conflict! Agents 1, 3, timestep 5, location 0
Swapping conflict! Agents 1, 3, timestep 5, edge (0,0)
Vertex conflict! Agents 1, 3, timestep 6, location 0
Vertex conflict! Agents 1, 4, timestep 5, location 0
Swapping conflict! Agents 1, 4, timestep 5, edge (0,0)
Vertex conflict! Agents 1, 4, timestep 6, location 0
Vertex conflict! Agents 1, 5, timestep 5, location 0
Swapping conflict! Agents 1, 5, timestep 5, edge (0,0)
Vertex conflict! Agents 1, 5, timestep 6, location 0
Vertex conflict! Agents 3, 4, timestep 3, location 0
Swapping conflict! Agents 3, 4, timestep 3, edge (0,0)
Vertex conflict! Agents 3, 4, timestep 4, location 0
Swapping conflict! Agents 3, 4, timestep 4, edge (0,0)
Vertex conflict! Agents 3, 4, timestep 5, location 0
Swapping conflict! Agents 3, 4, timestep 5, edge (0,0)
Vertex conflict! Agents 3, 4, timestep 6, location 0
Vertex conflict! Agents 3, 5, timestep 5, location 0
Swapping conflict! Agents 3, 5, timestep 5, edge (0,0)
Vertex conflict! Agents 3, 5, timestep 6, location 0
Vertex conflict! Agents 4, 5, timestep 5, location 0
Swapping conflict! Agents 4, 5, timestep 5, edge (0,0)
Vertex conflict! Agents 4, 5, timestep 6, location 0
Found plan [agents = 6] [timesteps = 7]
Agent #0 : 11 12 0 0 0 0 0 
Agent #1 : 0 4 8 11 12 0 0 
Agent #2 : 9 8 11 12 13 14 15 
Agent #3 : 8 11 12 0 0 0 0 
Agent #4 : 12 0 0 0 0 0 0 
Agent #5 : 7 3 4 5 1 0 0 

[STAT] Solver returned: 0
[DBG]  Agent (index) 3 | New local path (submap idx):
[DBG]  11 12 
[DBG]  Agent (index) 26 | New local path (submap idx):
[DBG]  0 4 8 11 12 
[DBG]  Agent (index) 28 | New local path (submap idx):
[DBG]  9 8 11 12 13 14 15 
[DBG]  Agent (index) 44 | New local path (submap idx):
[DBG]  8 11 12 
[DBG]  Agent (index) 53 | New local path (submap idx):
[DBG]  12 
[DBG]  Agent (index) 74 | New local path (submap idx):
[DBG]  7 3 4 5 1 
[DBG]  Update the agent path 3 | Original local length: 2 | New local length: 2
[DBG]  agent 3 t=0 => decoded (sx,sy)=(3,1) => global_id=692
[DBG]  agent 3 t=1 => decoded (sx,sy)=(4,1) => global_id=724
[DBG]  Complete path of agent 3:
[DBG]    Original: 468 468 468 468 468 468 468 467 435 435 435 435 467 499 499 499 467 468 468 469 501 533 565 597 596 628 660 692 724 756 788 820 819 818 850 882 881 913 913 912 
[DBG]    New:     468 468 468 468 468 468 468 467 435 435 435 435 467 499 499 499 467 468 468 469 501 533 565 597 596 628 660 692 724 756 788 820 819 818 850 882 881 913 913 912 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 468 468 468 468 468 468 468 467 435 435 435 435 467 499 499 499 467 468 468 469 501 533 565 597 596 628 660 
[DBG]    Local path (in submap): 692 724 
[DBG]    Suffix (out of submap): 756 788 820 819 818 850 882 881 913 913 912 
[DBG]  Original agent path length 3 je: 40
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 0: 468, 468, 468, 468, 468, 468, 468, 467, 435, 435, 435, 435, 467, 499, 499, 499, 467, 468, 468, 469, 501, 533, 565, 597, 596, 628, 660, 692, 724, 756, 788, 820, 819, 818, 850, 882, 881, 913, 913, 912, 
[DBG]  Path for agent 3 updated, resulting length: 40
[DBG]  Update the agent path 26 | Original local length: 5 | New local length: 5
[DBG]  agent 26 t=0 => decoded (sx,sy)=(0,1) => global_id=596
[DBG]  agent 26 t=1 => decoded (sx,sy)=(1,1) => global_id=628
[DBG]  agent 26 t=2 => decoded (sx,sy)=(2,1) => global_id=660
[DBG]  agent 26 t=3 => decoded (sx,sy)=(3,1) => global_id=692
[DBG]  agent 26 t=4 => decoded (sx,sy)=(4,1) => global_id=724
[DBG]  Complete path of agent 26:
[DBG]    Original: 13 14 46 47 48 80 81 82 83 115 116 148 180 212 244 276 277 309 341 373 405 437 469 501 533 565 597 596 628 660 692 724 756 755 
[DBG]    New:     13 14 46 47 48 80 81 82 83 115 116 148 180 212 244 276 277 309 341 373 405 437 469 501 533 565 597 596 628 660 692 724 756 755 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 13 14 46 47 48 80 81 82 83 115 116 148 180 212 244 276 277 309 341 373 405 437 469 501 533 565 597 
[DBG]    Local path (in submap): 596 628 660 692 724 
[DBG]    Suffix (out of submap): 756 755 
[DBG]  Original agent path length 26 je: 34
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 1: 13, 14, 46, 47, 48, 80, 81, 82, 83, 115, 116, 148, 180, 212, 244, 276, 277, 309, 341, 373, 405, 437, 469, 501, 533, 565, 597, 596, 628, 660, 692, 724, 756, 755, 
[DBG]  Path for agent 26 updated, resulting length: 34
[DBG]  Update the agent path 28 | Original local length: 16 | New local length: 7
[DBG]  agent 28 t=0 => decoded (sx,sy)=(2,2) => global_id=661
[DBG]  agent 28 t=1 => decoded (sx,sy)=(2,1) => global_id=660
[DBG]  agent 28 t=2 => decoded (sx,sy)=(3,1) => global_id=692
[DBG]  agent 28 t=3 => decoded (sx,sy)=(4,1) => global_id=724
[DBG]  agent 28 t=4 => decoded (sx,sy)=(4,2) => global_id=725
[DBG]  agent 28 t=5 => decoded (sx,sy)=(4,3) => global_id=726
[DBG]  agent 28 t=6 => decoded (sx,sy)=(4,4) => global_id=727
[DBG]  Complete path of agent 28:
[DBG]    Original: 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 629 628 627 627 627 659 691 692 724 725 726 727 
[DBG]    New:     661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 660 692 724 725 726 727 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 
[DBG]    Local path (in submap): 661 660 692 724 725 726 727 
[DBG]    Suffix (out of submap): 
[DBG]  Original agent path length 28 je: 43
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 2: 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 660, 692, 724, 725, 726, 727, 
[DBG]  Path for agent 28 updated, resulting length: 34
[DBG]  Update the agent path 44 | Original local length: 3 | New local length: 3
[DBG]  agent 44 t=0 => decoded (sx,sy)=(2,1) => global_id=660
[DBG]  agent 44 t=1 => decoded (sx,sy)=(3,1) => global_id=692
[DBG]  agent 44 t=2 => decoded (sx,sy)=(4,1) => global_id=724
[DBG]  Complete path of agent 44:
[DBG]    Original: 156 124 123 122 154 186 218 217 216 248 247 279 311 343 375 407 407 439 438 470 469 501 533 565 597 629 628 660 692 724 756 755 787 786 818 850 882 881 880 848 
[DBG]    New:     156 124 123 122 154 186 218 217 216 248 247 279 311 343 375 407 407 439 438 470 469 501 533 565 597 629 628 660 692 724 756 755 787 786 818 850 882 881 880 848 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 156 124 123 122 154 186 218 217 216 248 247 279 311 343 375 407 407 439 438 470 469 501 533 565 597 629 628 
[DBG]    Local path (in submap): 660 692 724 
[DBG]    Suffix (out of submap): 756 755 787 786 818 850 882 881 880 848 
[DBG]  Original agent path length 44 je: 40
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 3: 156, 124, 123, 122, 154, 186, 218, 217, 216, 248, 247, 279, 311, 343, 375, 407, 407, 439, 438, 470, 469, 501, 533, 565, 597, 629, 628, 660, 692, 724, 756, 755, 787, 786, 818, 850, 882, 881, 880, 848, 
[DBG]  Path for agent 44 updated, resulting length: 40
[DBG]  Update the agent path 53 | Original local length: 1 | New local length: 1
[DBG]  agent 53 t=0 => decoded (sx,sy)=(4,1) => global_id=724
[DBG]  Complete path of agent 53:
[DBG]    Original: 84 116 148 148 180 212 244 276 308 309 341 341 373 373 373 373 405 437 469 501 533 565 597 629 628 660 692 724 756 788 820 821 
[DBG]    New:     84 116 148 148 180 212 244 276 308 309 341 341 373 373 373 373 405 437 469 501 533 565 597 629 628 660 692 724 756 788 820 821 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 84 116 148 148 180 212 244 276 308 309 341 341 373 373 373 373 405 437 469 501 533 565 597 629 628 660 692 
[DBG]    Local path (in submap): 724 
[DBG]    Suffix (out of submap): 756 788 820 821 
[DBG]  Original agent path length 53 je: 32
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 4: 84, 116, 148, 148, 180, 212, 244, 276, 308, 309, 341, 341, 373, 373, 373, 373, 405, 437, 469, 501, 533, 565, 597, 629, 628, 660, 692, 724, 756, 788, 820, 821, 
[DBG]  Path for agent 53 updated, resulting length: 32
[DBG]  Update the agent path 74 | Original local length: 5 | New local length: 5
[DBG]  agent 74 t=0 => decoded (sx,sy)=(2,0) => global_id=659
[DBG]  agent 74 t=1 => decoded (sx,sy)=(1,0) => global_id=627
[DBG]  agent 74 t=2 => decoded (sx,sy)=(1,1) => global_id=628
[DBG]  agent 74 t=3 => decoded (sx,sy)=(1,2) => global_id=629
[DBG]  agent 74 t=4 => decoded (sx,sy)=(0,2) => global_id=597
[DBG]  Complete path of agent 74:
[DBG]    Original: 752 752 752 752 752 752 752 752 752 752 752 752 752 752 752 751 751 751 750 718 718 719 687 688 689 657 658 659 627 628 629 597 565 566 534 534 534 502 503 504 505 504 
[DBG]    New:     752 752 752 752 752 752 752 752 752 752 752 752 752 752 752 751 751 751 750 718 718 719 687 688 689 657 658 659 627 628 629 597 565 566 534 534 534 502 503 504 505 504 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 752 752 752 752 752 752 752 752 752 752 752 752 752 752 752 751 751 751 750 718 718 719 687 688 689 657 658 
[DBG]    Local path (in submap): 659 627 628 629 597 
[DBG]    Suffix (out of submap): 565 566 534 534 534 502 503 504 505 504 
[DBG]  Original agent path length 74 je: 42
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 5: 752, 752, 752, 752, 752, 752, 752, 752, 752, 752, 752, 752, 752, 752, 752, 751, 751, 751, 750, 718, 718, 719, 687, 688, 689, 657, 658, 659, 627, 628, 629, 597, 565, 566, 534, 534, 534, 502, 503, 504, 505, 504, 
[DBG]  Path for agent 74 updated, resulting length: 42
[DBG]  Paths successfully updated.
[DBG]  (LNS.cpp) New path for agent 3: 
[DBG]  468, 468, 468, 468, 468, 468, 468, 467, 435, 435, 435, 435, 467, 499, 499, 499, 467, 468, 468, 469, 501, 533, 565, 597, 596, 628, 660, 692, 724, 756, 788, 820, 819, 818, 850, 882, 881, 913, 913, 912, 
[DBG]  (LNS.cpp) New path for agent 26: 
[DBG]  13, 14, 46, 47, 48, 80, 81, 82, 83, 115, 116, 148, 180, 212, 244, 276, 277, 309, 341, 373, 405, 437, 469, 501, 533, 565, 597, 596, 628, 660, 692, 724, 756, 755, 
[DBG]  (LNS.cpp) New path for agent 28: 
[DBG]  661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 660, 692, 724, 725, 726, 727, 
[DBG]  (LNS.cpp) New path for agent 44: 
[DBG]  156, 124, 123, 122, 154, 186, 218, 217, 216, 248, 247, 279, 311, 343, 375, 407, 407, 439, 438, 470, 469, 501, 533, 565, 597, 629, 628, 660, 692, 724, 756, 755, 787, 786, 818, 850, 882, 881, 880, 848, 
[DBG]  (LNS.cpp) New path for agent 53: 
[DBG]  84, 116, 148, 148, 180, 212, 244, 276, 308, 309, 341, 341, 373, 373, 373, 373, 405, 437, 469, 501, 533, 565, 597, 629, 628, 660, 692, 724, 756, 788, 820, 821, 
[DBG]  (LNS.cpp) New path for agent 74: 
[DBG]  752, 752, 752, 752, 752, 752, 752, 752, 752, 752, 752, 752, 752, 752, 752, 751, 751, 751, 750, 718, 718, 719, 687, 688, 689, 657, 658, 659, 627, 628, 629, 597, 565, 566, 534, 534, 534, 502, 503, 504, 505, 504, 
[DBG]  Delta value: 0.04
[DBG]  Rewarding metric index = 1
[DBG]  component_weights = {2.42881e-10, 1, 1.06977e-10, 1.85473e-10}
[DBG]  opSuccess value: 1
[STAT] neighbor.sum_of_costs before recomputation: 216
[STAT] neighbor.old_sum_of_costs before recomputation: 225
[STAT] sum_of_costs before recomputation: 4351
[DBG]  Validate solution immediately after SAT success.
[WARNING] Problem after SAT: Target conflict: agent 42 (len 42) traverses target of agent 28 (len 33) at location 727 at timestep 41
[DBG]  [DEBUG] Attempting immediate repair via init_lns because problem occurred after SAT (should be applied only for conflicts...).
[DBG]  [DEBUG] Passing 150 agents to init_lns (skip=true).
[DBG]  [DEBUG] path_table contents for selected agents (neighbor.agents):
[DBG]    Agent 3 => controlling path length=40
[DBG]    Agent 26 => controlling path length=34
[DBG]    Agent 28 => controlling path length=34
[DBG]    Agent 44 => controlling path length=40
[DBG]    Agent 53 => controlling path length=32
[DBG]    Agent 74 => controlling path length=42
[DBG]  hodnota skip_initial_solution=1
[DBG]  We skip initialSolution => call buildCollisionData()
[DBG]  buildCollisionData() called – skip_initial_solution case.
[DBG]  Agents.size()=150, collision_graph.size()=150
[DBG]  agent 28 => updateCollidingPairs => foundCollision
[DBG]  agent 42 => updateCollidingPairs => foundCollision
[DBG]  Conflicting agent pairs:
[DBG]  agent 28 is in conflict with agent 42
[DBG]  buildCollisionData() => sum_of_costs=4342, num_of_colliding_pairs=1
[DBG]  buildCollisionData done => sum_of_costs=4342, num_of_colliding_pairs=1
[DBG]  sum_of_cost hodnota: 4342
[DBG]  After skip/init build => iteration_stats.back(): sum_of_costs=4342, collisions=1
[DEBUG] Using default neighbor generation strategy for conflicts: 1
[DEBUG] Using default neighbor generation strategy for conflicts: 1
[DEBUG] Using default neighbor generation strategy for conflicts: 1
	InitLNS(PP): runtime = 0.00640325, iterations = 4, colliding pairs = 0, initial colliding pairs = 1, solution cost = 4348, initial solution cost = 4342, failed iterations = 0
[DBG]  init_lns->sum_of_costs after init_lns->run: 4348
[DBG]  sum_of_costs after assignment from init_lns->run: 4348
[DBG]  Recomputing sum_of_cost by dividing neighbor.sum_of_costs and neighbor.old_sum_of_costs
[STAT] sum_of_costs after recomputation: 4348
[STAT] Iteration 184
[DBG]  Random chance did not select SAT operator (r=70), using default strategy.
[DBG]  opSuccess value: 0
[ECHO] pouštím destroy strategii 2
[ECHO] pouštím replan strategii PP
[STAT] LNS(PP;PP): runtime = 2.00076, iterations = 184, solution cost = 4348, initial solution cost = 4490, failed iterations = 1226
[STAT] SAT total runtime = 0.145387 s
[STAT] Other operators runtime = 1.76299 s
[STAT] SAT runtime ratio = 7.26661 %
