[DBG]  hodnota skip_initial_solution=0
[DBG]  getInitialSolution() => succ=1, sum_of_costs=4461, num_of_colliding_pairs=1
[DBG]  After skip/init build => iteration_stats.back(): sum_of_costs=4461, collisions=1
[DEBUG] Using default neighbor generation strategy for conflicts: 0
	InitLNS(PP): runtime = 0.0665634, iterations = 2, colliding pairs = 0, initial colliding pairs = 1, solution cost = 4490, initial solution cost = 4461, failed iterations = 0
[STAT] Iteration 1
[DBG]  Using SAT operator (destroy+repair SAT).
[DBG]  ====================
[DBG]  SAT destroy operator called.
[DBG]  SAT heuristic: 2
[DBG]  key_agent_id: 120
[DBG]  key_agent_id global path length: 43
[DBG]  Submap content (global positions):
[DBG]  169 170 171 172 173 
[DBG]  201 202 203 204 205 
[DBG]  233 234 235 236 237 
[DBG]  265 266 267 268 269 
[DBG]  297 298 299 300 301 
[DBG]  Map content with agents and obstacles:
[DBG]  X . X . . 
[DBG]  X X . . . 
[DBG]  . . A A . 
[DBG]  . . . . . 
[DBG]  A A . . . 
[DBG]  content of the map structure that we pass to the SAT solver:
[DBG]  -1  1  -1  1  1  
[DBG]  -1  -1  1  1  1  
[DBG]  1  1  1  1  1  
[DBG]  1  1  1  1  1  
[DBG]  1  1  1  1  1  
[DBG]  Identifying agents in a submap for rescheduling (when key_agent is there at the time 11):
[DBG]  Agent 22 found intervals in the sub-map:
[DBG]   [8..16]
[DBG]  Agent 22 (interval in submap: [8..16]) contains time 11, added to replan.
[DBG]  Agent 87 found intervals in the sub-map:
[DBG]   [9..12]
[DBG]  Agent 87 (interval in submap: [9..12]) contains time 11, added to replan.
[DBG]  Agent 107 found intervals in the sub-map:
[DBG]   [9..16]
[DBG]  Agent 107 (interval in submap: [9..16]) contains time 11, added to replan.
[DBG]  Agent 120 found intervals in the sub-map:
[DBG]   [0..39]
[DBG]  Agent 120 (interval in submap: [0..39]) contains time 11, added to replan.
[DBG]  Agent 22 | Start (global): 297 -> (local): (4, 0) at time 11 | Goal (global): 269 -> (local): (3, 4) at time 16
[DBG]  Agent 87 | Start (global): 298 -> (local): (4, 1) at time 11 | Goal (global): 299 -> (local): (4, 2) at time 12
[DBG]  Agent 107 | Start (global): 236 -> (local): (2, 3) at time 11 | Goal (global): 297 -> (local): (4, 0) at time 16
[DBG]  Agent 120 | Start (global): 235 -> (local): (2, 2) at time 11 | Goal (global): 265 -> (local): (3, 0) at time 39
[DBG]  [REPAIR] SAT destroy operator called.
[DBG]  [REPAIR] SAT operator â€“ launching subproblem FOR OPTIMIZATION.
[DBG]  Creating local paths (sx, sy) in the submap for T_sync = 11
[DBG]    Agent 22 (global paths from T=11 to 16) has local path: (4,0) (4,1) (4,2) (4,3) (3,3) (3,4) 
[DBG]    Agent 87 (global paths from T=11 to 12) has local path: (4,1) (4,2) 
[DBG]    Agent 107 (global paths from T=11 to 16) has local path: (2,3) (3,3) (3,2) (3,1) (4,1) (4,0) 
[DBG]    Agent 120 (global paths from T=11 to 39) has local path: (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (3,2) (3,1) (3,0) (3,0) (3,0) (3,0) (3,0) (3,0) (3,0) 
[DBG]  Checking input data for SAT solver:
[DBG]    - Number of agents to replan: 4
[DBG]  Agent 22 has the original local path length: 6 => Start (4,0), Goal (3,4)
[DBG]  Agent 87 has the original local path length: 2 => Start (4,1), Goal (4,2)
[DBG]  Agent 107 has the original local path length: 6 => Start (2,3), Goal (4,0)
[DBG]  Agent 120 has the original local path length: 29 => Start (2,2), Goal (3,0)
[DBG]  Start position: (4, 0), (4, 1), (2, 3), (2, 2), 
[DBG]  Goal position: (3, 4), (4, 2), (4, 0), (3, 0), 
[DBG]  SAT instance and solver created.
Currently solving
Instance name: scen
Map name: map
Encoding used: disappear_at_goal
SAT solver used: Kissat
Optimizing function: sum of costs
Number of agents: 4
Mks LB: 6
SoC LB: 18
Delta: 0
Remaining time: 300000 [ms]

Vertex conflict! Agents 1, 3, timestep 4, location 0
Swapping conflict! Agents 1, 3, timestep 4, edge (0,0)
Vertex conflict! Agents 1, 3, timestep 5, location 0
Found plan [agents = 4] [timesteps = 6]
Agent #0 : 16 17 18 19 20 15 
Agent #1 : 17 18 0 0 0 0 
Agent #2 : 9 14 13 18 17 16 
Agent #3 : 8 13 12 11 0 0 

[STAT] Solver returned: 0
[DBG]  Agent (index) 22 | New local path (submap idx):
[DBG]  16 17 18 19 20 15 
[DBG]  Agent (index) 87 | New local path (submap idx):
[DBG]  17 18 
[DBG]  Agent (index) 107 | New local path (submap idx):
[DBG]  9 14 13 18 17 16 
[DBG]  Agent (index) 120 | New local path (submap idx):
[DBG]  8 13 12 11 
[DBG]  Update the agent path 22 | Original local length: 6 | New local length: 6
[DBG]  agent 22 t=0 => decoded (sx,sy)=(4,0) => global_id=297
[DBG]  agent 22 t=1 => decoded (sx,sy)=(4,1) => global_id=298
[DBG]  agent 22 t=2 => decoded (sx,sy)=(4,2) => global_id=299
[DBG]  agent 22 t=3 => decoded (sx,sy)=(4,3) => global_id=300
[DBG]  agent 22 t=4 => decoded (sx,sy)=(4,4) => global_id=301
[DBG]  agent 22 t=5 => decoded (sx,sy)=(3,4) => global_id=269
[DBG]  Complete path of agent 22:
[DBG]    Original: 329 329 361 362 362 362 361 329 297 297 297 297 298 299 300 268 269 270 271 303 304 336 337 338 338 339 340 308 340 339 
[DBG]    New:     329 329 361 362 362 362 361 329 297 297 297 297 298 299 300 301 269 270 271 303 304 336 337 338 338 339 340 308 340 339 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 329 329 361 362 362 362 361 329 297 297 297 
[DBG]    Local path (in submap): 297 298 299 300 301 269 
[DBG]    Suffix (out of submap): 270 271 303 304 336 337 338 338 339 340 308 340 339 
[DBG]  Original agent path length 22 je: 30
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 0: 329, 329, 361, 362, 362, 362, 361, 329, 297, 297, 297, 297, 298, 299, 300, 301, 269, 270, 271, 303, 304, 336, 337, 338, 338, 339, 340, 308, 340, 339, 
[DBG]  Path for agent 22 updated, resulting length: 30
[DBG]  Update the agent path 87 | Original local length: 2 | New local length: 2
[DBG]  agent 87 t=0 => decoded (sx,sy)=(4,1) => global_id=298
[DBG]  agent 87 t=1 => decoded (sx,sy)=(4,2) => global_id=299
[DBG]  Complete path of agent 87:
[DBG]    Original: 231 263 263 263 263 263 263 263 264 265 266 298 299 331 363 395 427 459 491 523 555 587 619 651 650 682 714 
[DBG]    New:     231 263 263 263 263 263 263 263 264 265 266 298 299 331 363 395 427 459 491 523 555 587 619 651 650 682 714 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 231 263 263 263 263 263 263 263 264 265 266 
[DBG]    Local path (in submap): 298 299 
[DBG]    Suffix (out of submap): 331 363 395 427 459 491 523 555 587 619 651 650 682 714 
[DBG]  Original agent path length 87 je: 27
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 1: 231, 263, 263, 263, 263, 263, 263, 263, 264, 265, 266, 298, 299, 331, 363, 395, 427, 459, 491, 523, 555, 587, 619, 651, 650, 682, 714, 
[DBG]  Path for agent 87 updated, resulting length: 27
[DBG]  Update the agent path 107 | Original local length: 6 | New local length: 6
[DBG]  agent 107 t=0 => decoded (sx,sy)=(2,3) => global_id=236
[DBG]  agent 107 t=1 => decoded (sx,sy)=(3,3) => global_id=268
[DBG]  agent 107 t=2 => decoded (sx,sy)=(3,2) => global_id=267
[DBG]  agent 107 t=3 => decoded (sx,sy)=(4,2) => global_id=299
[DBG]  agent 107 t=4 => decoded (sx,sy)=(4,1) => global_id=298
[DBG]  agent 107 t=5 => decoded (sx,sy)=(4,0) => global_id=297
[DBG]  Complete path of agent 107:
[DBG]    Original: 16 15 47 46 45 77 76 108 140 172 204 236 268 267 266 298 297 329 361 393 425 457 456 455 454 486 485 517 549 581 613 645 677 709 741 740 772 804 836 
[DBG]    New:     16 15 47 46 45 77 76 108 140 172 204 236 268 267 299 298 297 329 361 393 425 457 456 455 454 486 485 517 549 581 613 645 677 709 741 740 772 804 836 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 16 15 47 46 45 77 76 108 140 172 204 
[DBG]    Local path (in submap): 236 268 267 299 298 297 
[DBG]    Suffix (out of submap): 329 361 393 425 457 456 455 454 486 485 517 549 581 613 645 677 709 741 740 772 804 836 
[DBG]  Original agent path length 107 je: 39
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 2: 16, 15, 47, 46, 45, 77, 76, 108, 140, 172, 204, 236, 268, 267, 299, 298, 297, 329, 361, 393, 425, 457, 456, 455, 454, 486, 485, 517, 549, 581, 613, 645, 677, 709, 741, 740, 772, 804, 836, 
[DBG]  Path for agent 107 updated, resulting length: 39
[DBG]  Update the agent path 120 | Original local length: 29 | New local length: 4
[DBG]  agent 120 t=0 => decoded (sx,sy)=(2,2) => global_id=235
[DBG]  agent 120 t=1 => decoded (sx,sy)=(3,2) => global_id=267
[DBG]  agent 120 t=2 => decoded (sx,sy)=(3,1) => global_id=266
[DBG]  agent 120 t=3 => decoded (sx,sy)=(3,0) => global_id=265
[DBG]  Complete path of agent 120:
[DBG]    Original: 203 235 235 235 235 235 235 235 235 235 235 235 235 235 235 235 235 235 235 235 235 235 235 235 235 235 235 235 235 235 235 267 266 265 265 265 265 265 265 265 264 232 200 
[DBG]    New:     203 235 235 235 235 235 235 235 235 235 235 235 267 266 265 264 232 200 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 203 235 235 235 235 235 235 235 235 235 235 
[DBG]    Local path (in submap): 235 267 266 265 264 232 200 
[DBG]    Suffix (out of submap): 
[DBG]  Original agent path length 120 je: 43
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 3: 203, 235, 235, 235, 235, 235, 235, 235, 235, 235, 235, 235, 267, 266, 265, 264, 232, 200, 
[DBG]  Path for agent 120 updated, resulting length: 18
[DBG]  Paths successfully updated.
[DBG]  (LNS.cpp) New path for agent 22: 
[DBG]  329, 329, 361, 362, 362, 362, 361, 329, 297, 297, 297, 297, 298, 299, 300, 301, 269, 270, 271, 303, 304, 336, 337, 338, 338, 339, 340, 308, 340, 339, 
[DBG]  (LNS.cpp) New path for agent 87: 
[DBG]  231, 263, 263, 263, 263, 263, 263, 263, 264, 265, 266, 298, 299, 331, 363, 395, 427, 459, 491, 523, 555, 587, 619, 651, 650, 682, 714, 
[DBG]  (LNS.cpp) New path for agent 107: 
[DBG]  16, 15, 47, 46, 45, 77, 76, 108, 140, 172, 204, 236, 268, 267, 299, 298, 297, 329, 361, 393, 425, 457, 456, 455, 454, 486, 485, 517, 549, 581, 613, 645, 677, 709, 741, 740, 772, 804, 836, 
[DBG]  (LNS.cpp) New path for agent 120: 
[DBG]  203, 235, 235, 235, 235, 235, 235, 235, 235, 235, 235, 235, 267, 266, 265, 264, 232, 200, 
[DBG]  component_weights = {0.248614, 0.248614, 0.254158, 0.248614}
[DBG]  opSuccess value: 1
[STAT] neighbor.sum_of_costs before recomputation: 110
[STAT] neighbor.old_sum_of_costs before recomputation: 135
[STAT] sum_of_costs before recomputation: 4490
[DBG]  Validate solution immediately after SAT success.
[WARNING] Problem after SAT: Vertex conflict between agents 120 and 15 at location 265 at timestep 14
[DBG]  Attempting immediate repair via init_lns because problem occurred after SAT (should be applied only for conflicts...).
[DBG]  Passing 150 agents to init_lns (skip=true).
[DBG]  path_table contents for selected agents (neighbor.agents):
[DBG]    Agent 22 => controlling path length=30
[DBG]    Agent 87 => controlling path length=27
[DBG]    Agent 107 => controlling path length=39
[DBG]    Agent 120 => controlling path length=18
[DBG]  hodnota skip_initial_solution=1
[DBG]  We skip initialSolution => call buildCollisionData()
[DBG]  buildCollisionData() called â€“ skip_initial_solution case.
[DBG]  Agents.size()=150, collision_graph.size()=150
[DBG]  agent 15 => updateCollidingPairs => foundCollision
[DBG]  agent 101 => updateCollidingPairs => foundCollision
[DBG]  agent 116 => updateCollidingPairs => foundCollision
[DBG]  agent 120 => updateCollidingPairs => foundCollision
[DBG]  Conflicting agent pairs:
[DBG]  agent 15 is in conflict with agent 120
[DBG]  agent 101 is in conflict with agent 120
[DBG]  agent 116 is in conflict with agent 120
[DBG]  buildCollisionData() => sum_of_costs=4465, num_of_colliding_pairs=3
[DBG]  buildCollisionData done => sum_of_costs=4465, num_of_colliding_pairs=3
[DBG]  sum_of_cost hodnota: 4465
[DBG]  After skip/init build => iteration_stats.back(): sum_of_costs=4465, collisions=3
[DEBUG] Using default neighbor generation strategy for conflicts: 1
	InitLNS(PP): runtime = 0.006384, iterations = 2, colliding pairs = 0, initial colliding pairs = 3, solution cost = 4472, initial solution cost = 4465, failed iterations = 0
[DBG]  init_lns->sum_of_costs after init_lns->run: 4472
[DBG]  sum_of_costs after assignment from init_lns->run: 4472
[DBG]  Recomputing sum_of_cost by dividing neighbor.sum_of_costs and neighbor.old_sum_of_costs
[STAT] sum_of_costs after recomputation: 4472
[STAT] Iteration 2
[DBG]  Using SAT operator (destroy+repair SAT).
[DBG]  ====================
[DBG]  SAT destroy operator called.
[DBG]  SAT heuristic: 2
[DBG]  key_agent_id: 28
[DBG]  key_agent_id global path length: 44
[DBG]  Submap content (global positions):
[DBG]  595 596 597 598 599 
[DBG]  627 628 629 630 631 
[DBG]  659 660 661 662 663 
[DBG]  691 692 693 694 695 
[DBG]  723 724 725 726 727 
[DBG]  Map content with agents and obstacles:
[DBG]  X . . X . 
[DBG]  . . . X . 
[DBG]  . . A X X 
[DBG]  . . X X X 
[DBG]  X . . . . 
[DBG]  content of the map structure that we pass to the SAT solver:
[DBG]  -1  1  1  -1  1  
[DBG]  1  1  1  -1  1  
[DBG]  1  1  1  -1  -1  
[DBG]  1  1  -1  -1  -1  
[DBG]  -1  1  1  1  1  
[DBG]  Identifying agents in a submap for rescheduling (when key_agent is there at the time 27):
[DBG]  Agent 28 found intervals in the sub-map:
[DBG]   [0..43]
[DBG]  Agent 28 (interval in submap: [0..43]) contains time 27, added to replan.
[DBG]  Agent 28 | Start (global): 661 -> (local): (2, 2) at time 27 | Goal (global): 727 -> (local): (4, 4) at time 43
[DBG]  [REPAIR] SAT destroy operator called.
[DBG]  [REPAIR] SAT operator â€“ launching subproblem FOR OPTIMIZATION.
[DBG]  Creating local paths (sx, sy) in the submap for T_sync = 27
[DBG]    Agent 28 (global paths from T=27 to 43) has local path: (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,1) (3,1) (4,1) (4,2) (4,3) (4,4) 
[DBG]  Checking input data for SAT solver:
[DBG]    - Number of agents to replan: 1
[DBG]  Agent 28 has the original local path length: 17 => Start (2,2), Goal (4,4)
[DBG]  Start position: (2, 2), 
[DBG]  Goal position: (4, 4), 
[DBG]  SAT instance and solver created.
Currently solving
Instance name: scen
Map name: map
Encoding used: disappear_at_goal
SAT solver used: Kissat
Optimizing function: sum of costs
Number of agents: 1
Mks LB: 7
SoC LB: 7
Delta: 0
Remaining time: 300000 [ms]

Found plan [agents = 1] [timesteps = 7]
Agent #0 : 9 8 11 12 13 14 15 

[STAT] Solver returned: 0
[DBG]  Agent (index) 28 | New local path (submap idx):
[DBG]  9 8 11 12 13 14 15 
[DBG]  Update the agent path 28 | Original local length: 17 | New local length: 7
[DBG]  agent 28 t=0 => decoded (sx,sy)=(2,2) => global_id=661
[DBG]  agent 28 t=1 => decoded (sx,sy)=(2,1) => global_id=660
[DBG]  agent 28 t=2 => decoded (sx,sy)=(3,1) => global_id=692
[DBG]  agent 28 t=3 => decoded (sx,sy)=(4,1) => global_id=724
[DBG]  agent 28 t=4 => decoded (sx,sy)=(4,2) => global_id=725
[DBG]  agent 28 t=5 => decoded (sx,sy)=(4,3) => global_id=726
[DBG]  agent 28 t=6 => decoded (sx,sy)=(4,4) => global_id=727
[DBG]  Complete path of agent 28:
[DBG]    Original: 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 660 692 724 725 726 727 
[DBG]    New:     661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 660 692 724 725 726 727 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 
[DBG]    Local path (in submap): 661 660 692 724 725 726 727 
[DBG]    Suffix (out of submap): 
[DBG]  Original agent path length 28 je: 44
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 0: 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 660, 692, 724, 725, 726, 727, 
[DBG]  Path for agent 28 updated, resulting length: 34
[DBG]  Paths successfully updated.
[DBG]  (LNS.cpp) New path for agent 28: 
[DBG]  661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 660, 692, 724, 725, 726, 727, 
[DBG]  component_weights = {0.247214, 0.247214, 0.252726, 0.252846}
[DBG]  opSuccess value: 1
[STAT] neighbor.sum_of_costs before recomputation: 33
[STAT] neighbor.old_sum_of_costs before recomputation: 43
[STAT] sum_of_costs before recomputation: 4472
[DBG]  Validate solution immediately after SAT success.
[WARNING] Problem after SAT: Target conflict: agent 42 (len 43) traverses target of agent 28 (len 33) at location 727 at timestep 42
[DBG]  Attempting immediate repair via init_lns because problem occurred after SAT (should be applied only for conflicts...).
[DBG]  Passing 150 agents to init_lns (skip=true).
[DBG]  path_table contents for selected agents (neighbor.agents):
[DBG]    Agent 28 => controlling path length=34
[DBG]  hodnota skip_initial_solution=1
[DBG]  We skip initialSolution => call buildCollisionData()
[DBG]  buildCollisionData() called â€“ skip_initial_solution case.
[DBG]  Agents.size()=150, collision_graph.size()=150
[DBG]  agent 28 => updateCollidingPairs => foundCollision
[DBG]  agent 42 => updateCollidingPairs => foundCollision
[DBG]  agent 148 => updateCollidingPairs => foundCollision
[DBG]  Conflicting agent pairs:
[DBG]  agent 28 is in conflict with agent 42
[DBG]  agent 28 is in conflict with agent 148
[DBG]  buildCollisionData() => sum_of_costs=4462, num_of_colliding_pairs=2
[DBG]  buildCollisionData done => sum_of_costs=4462, num_of_colliding_pairs=2
[DBG]  sum_of_cost hodnota: 4462
[DBG]  After skip/init build => iteration_stats.back(): sum_of_costs=4462, collisions=2
[DEBUG] Using default neighbor generation strategy for conflicts: 0
[DEBUG] Using default neighbor generation strategy for conflicts: 2
[DEBUG] Using default neighbor generation strategy for conflicts: 2
[DEBUG] Using default neighbor generation strategy for conflicts: 0
	InitLNS(PP): runtime = 0.0195423, iterations = 5, colliding pairs = 0, initial colliding pairs = 2, solution cost = 4490, initial solution cost = 4462, failed iterations = 0
[DBG]  init_lns->sum_of_costs after init_lns->run: 4490
[DBG]  sum_of_costs after assignment from init_lns->run: 4490
[DBG]  Recomputing sum_of_cost by dividing neighbor.sum_of_costs and neighbor.old_sum_of_costs
[STAT] sum_of_costs after recomputation: 4490
[STAT] Iteration 3
[DBG]  Using SAT operator (destroy+repair SAT).
[DBG]  ====================
[DBG]  SAT destroy operator called.
[DBG]  SAT heuristic: 2
[DBG]  key_agent_id: 27
[DBG]  key_agent_id global path length: 31
[DBG]  Submap content (global positions):
[DBG]  587 588 589 590 591 
[DBG]  619 620 621 622 623 
[DBG]  651 652 653 654 655 
[DBG]  683 684 685 686 687 
[DBG]  715 716 717 718 719 
[DBG]  Map content with agents and obstacles:
[DBG]  . . A . . 
[DBG]  . . X . . 
[DBG]  A X A . . 
[DBG]  . . . . . 
[DBG]  . X . . . 
[DBG]  content of the map structure that we pass to the SAT solver:
[DBG]  1  1  1  1  1  
[DBG]  1  1  -1  1  1  
[DBG]  1  -1  1  1  1  
[DBG]  1  1  1  1  1  
[DBG]  1  -1  1  1  1  
[DBG]  Identifying agents in a submap for rescheduling (when key_agent is there at the time 1):
[DBG]  Agent 10 found intervals in the sub-map:
[DBG]   [0..2]
[DBG]  Agent 10 (interval in submap: [0..2]) contains time 1, added to replan.
[DBG]  Agent 27 found intervals in the sub-map:
[DBG]   [0..24]
[DBG]  Agent 27 (interval in submap: [0..24]) contains time 1, added to replan.
[DBG]  Agent 60 found intervals in the sub-map:
[DBG]   [0..1]
[DBG]  Agent 60 (interval in submap: [0..1]) contains time 1, added to replan.
[DBG]  Agent 10 | Start (global): 589 -> (local): (0, 2) at time 1 | Goal (global): 590 -> (local): (0, 3) at time 2
[DBG]  Agent 27 | Start (global): 653 -> (local): (2, 2) at time 1 | Goal (global): 718 -> (local): (4, 3) at time 24
[DBG]  Agent 60 | Start (global): 651 -> (local): (2, 0) at time 1 | Goal (global): 651 -> (local): (2, 0) at time 1
[DBG]  [REPAIR] SAT destroy operator called.
[DBG]  [REPAIR] SAT operator â€“ launching subproblem FOR OPTIMIZATION.
[DBG]  Creating local paths (sx, sy) in the submap for T_sync = 1
[DBG]    Agent 10 (global paths from T=1 to 2) has local path: (0,2) (0,3) 
[DBG]    Agent 27 (global paths from T=1 to 24) has local path: (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,3) (1,3) (1,3) (1,3) (1,3) (1,3) (0,3) (0,3) (0,3) (0,4) (1,4) (2,4) (3,4) (3,3) (4,3) 
[DBG]    Agent 60 (global paths from T=1 to 1) has local path: (2,0) 
[DBG]  Checking input data for SAT solver:
[DBG]    - Number of agents to replan: 3
[DBG]  Agent 10 has the original local path length: 2 => Start (0,2), Goal (0,3)
[DBG]  Agent 27 has the original local path length: 24 => Start (2,2), Goal (4,3)
[DBG]  Agent 60 has the original local path length: 1 => Start (2,0), Goal (2,0)
[DBG]  Start position: (0, 2), (2, 2), (2, 0), 
[DBG]  Goal position: (0, 3), (4, 3), (2, 0), 
[DBG]  SAT instance and solver created.
Currently solving
Instance name: scen
Map name: map
Encoding used: disappear_at_goal
SAT solver used: Kissat
Optimizing function: sum of costs
Number of agents: 3
Mks LB: 4
SoC LB: 7
Delta: 0
Remaining time: 300000 [ms]

Vertex conflict! Agents 0, 2, timestep 2, location 0
Swapping conflict! Agents 0, 2, timestep 2, edge (0,0)
Vertex conflict! Agents 0, 2, timestep 3, location 0
Found plan [agents = 3] [timesteps = 4]
Agent #0 : 2 3 0 0 
Agent #1 : 10 15 19 20 
Agent #2 : 9 0 0 0 

[STAT] Solver returned: 0
[DBG]  Agent (index) 10 | New local path (submap idx):
[DBG]  2 3 
[DBG]  Agent (index) 27 | New local path (submap idx):
[DBG]  10 15 19 20 
[DBG]  Agent (index) 60 | New local path (submap idx):
[DBG]  9 
[DBG]  Update the agent path 10 | Original local length: 2 | New local length: 2
[DBG]  agent 10 t=0 => decoded (sx,sy)=(0,2) => global_id=589
[DBG]  agent 10 t=1 => decoded (sx,sy)=(0,3) => global_id=590
[DBG]  Complete path of agent 10:
[DBG]    Original: 588 589 590 558 526 494 462 463 464 465 466 467 468 468 469 470 502 503 504 505 473 474 475 476 
[DBG]    New:     588 589 590 558 526 494 462 463 464 465 466 467 468 468 469 470 502 503 504 505 473 474 475 476 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 588 
[DBG]    Local path (in submap): 589 590 
[DBG]    Suffix (out of submap): 558 526 494 462 463 464 465 466 467 468 468 469 470 502 503 504 505 473 474 475 476 
[DBG]  Original agent path length 10 je: 24
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 0: 588, 589, 590, 558, 526, 494, 462, 463, 464, 465, 466, 467, 468, 468, 469, 470, 502, 503, 504, 505, 473, 474, 475, 476, 
[DBG]  Path for agent 10 updated, resulting length: 24
[DBG]  Update the agent path 27 | Original local length: 24 | New local length: 4
[DBG]  agent 27 t=0 => decoded (sx,sy)=(2,2) => global_id=653
[DBG]  agent 27 t=1 => decoded (sx,sy)=(3,2) => global_id=685
[DBG]  agent 27 t=2 => decoded (sx,sy)=(4,2) => global_id=717
[DBG]  agent 27 t=3 => decoded (sx,sy)=(4,3) => global_id=718
[DBG]  Complete path of agent 27:
[DBG]    Original: 653 653 653 653 653 653 653 653 653 653 654 622 622 622 622 622 590 590 590 591 623 655 687 686 718 750 751 783 783 815 814 
[DBG]    New:     653 653 685 717 718 750 751 783 783 815 814 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 653 
[DBG]    Local path (in submap): 653 685 717 718 750 751 783 783 815 814 
[DBG]    Suffix (out of submap): 
[DBG]  Original agent path length 27 je: 31
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 1: 653, 653, 685, 717, 718, 750, 751, 783, 783, 815, 814, 
[DBG]  Path for agent 27 updated, resulting length: 11
[DBG]  Update the agent path 60 | Original local length: 1 | New local length: 1
[DBG]  agent 60 t=0 => decoded (sx,sy)=(2,0) => global_id=651
[DBG]  Complete path of agent 60:
[DBG]    Original: 619 651 650 649 617 616 615 583 582 581 580 579 578 577 
[DBG]    New:     619 651 650 649 617 616 615 583 582 581 580 579 578 577 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 619 
[DBG]    Local path (in submap): 651 
[DBG]    Suffix (out of submap): 650 649 617 616 615 583 582 581 580 579 578 577 
[DBG]  Original agent path length 60 je: 14
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 2: 619, 651, 650, 649, 617, 616, 615, 583, 582, 581, 580, 579, 578, 577, 
[DBG]  Path for agent 60 updated, resulting length: 14
[DBG]  Paths successfully updated.
[DBG]  (LNS.cpp) New path for agent 10: 
[DBG]  588, 589, 590, 558, 526, 494, 462, 463, 464, 465, 466, 467, 468, 468, 469, 470, 502, 503, 504, 505, 473, 474, 475, 476, 
[DBG]  (LNS.cpp) New path for agent 27: 
[DBG]  653, 653, 685, 717, 718, 750, 751, 783, 783, 815, 814, 
[DBG]  (LNS.cpp) New path for agent 60: 
[DBG]  619, 651, 650, 649, 617, 616, 615, 583, 582, 581, 580, 579, 578, 577, 
[DBG]  component_weights = {0.245754, 0.245754, 0.251233, 0.257259}
[DBG]  opSuccess value: 1
[STAT] neighbor.sum_of_costs before recomputation: 46
[STAT] neighbor.old_sum_of_costs before recomputation: 66
[STAT] sum_of_costs before recomputation: 4490
[DBG]  Validate solution immediately after SAT success.
[WARNING] Problem after SAT: Target conflict: agent 14 (len 38) traverses target of agent 27 (len 10) at location 814 at timestep 29
[DBG]  Attempting immediate repair via init_lns because problem occurred after SAT (should be applied only for conflicts...).
[DBG]  Passing 150 agents to init_lns (skip=true).
[DBG]  path_table contents for selected agents (neighbor.agents):
[DBG]    Agent 10 => controlling path length=24
[DBG]    Agent 27 => controlling path length=11
[DBG]    Agent 60 => controlling path length=14
[DBG]  hodnota skip_initial_solution=1
[DBG]  We skip initialSolution => call buildCollisionData()
[DBG]  buildCollisionData() called â€“ skip_initial_solution case.
[DBG]  Agents.size()=150, collision_graph.size()=150
[DBG]  agent 14 => updateCollidingPairs => foundCollision
[DBG]  agent 27 => updateCollidingPairs => foundCollision
[DBG]  agent 39 => updateCollidingPairs => foundCollision
[DBG]  agent 47 => updateCollidingPairs => foundCollision
[DBG]  agent 49 => updateCollidingPairs => foundCollision
[DBG]  agent 50 => updateCollidingPairs => foundCollision
[DBG]  agent 61 => updateCollidingPairs => foundCollision
[DBG]  agent 74 => updateCollidingPairs => foundCollision
[DBG]  agent 88 => updateCollidingPairs => foundCollision
[DBG]  agent 101 => updateCollidingPairs => foundCollision
[DBG]  agent 118 => updateCollidingPairs => foundCollision
[DBG]  agent 130 => updateCollidingPairs => foundCollision
[DBG]  Conflicting agent pairs:
[DBG]  agent 14 is in conflict with agent 27
[DBG]  agent 27 is in conflict with agent 39
[DBG]  agent 27 is in conflict with agent 47
[DBG]  agent 27 is in conflict with agent 49
[DBG]  agent 27 is in conflict with agent 50
[DBG]  agent 27 is in conflict with agent 61
[DBG]  agent 27 is in conflict with agent 74
[DBG]  agent 27 is in conflict with agent 88
[DBG]  agent 27 is in conflict with agent 101
[DBG]  agent 27 is in conflict with agent 118
[DBG]  agent 27 is in conflict with agent 130
[DBG]  buildCollisionData() => sum_of_costs=4470, num_of_colliding_pairs=11
[DBG]  buildCollisionData done => sum_of_costs=4470, num_of_colliding_pairs=11
[DBG]  sum_of_cost hodnota: 4470
[DBG]  After skip/init build => iteration_stats.back(): sum_of_costs=4470, collisions=11
[DEBUG] Using default neighbor generation strategy for conflicts: 2
	InitLNS(PP): runtime = 0.00304254, iterations = 2, colliding pairs = 0, initial colliding pairs = 11, solution cost = 4460, initial solution cost = 4470, failed iterations = 0
[DBG]  init_lns->sum_of_costs after init_lns->run: 4460
[DBG]  sum_of_costs after assignment from init_lns->run: 4460
[DBG]  Recomputing sum_of_cost by dividing neighbor.sum_of_costs and neighbor.old_sum_of_costs
[STAT] sum_of_costs after recomputation: 4460
[STAT] Iteration 4
[DBG]  Using SAT operator (destroy+repair SAT).
[DBG]  ====================
[DBG]  SAT destroy operator called.
[DBG]  SAT heuristic: 2
[DBG]  key_agent_id: 28
[DBG]  key_agent_id global path length: 46
[DBG]  Submap content (global positions):
[DBG]  595 596 597 598 599 
[DBG]  627 628 629 630 631 
[DBG]  659 660 661 662 663 
[DBG]  691 692 693 694 695 
[DBG]  723 724 725 726 727 
[DBG]  Map content with agents and obstacles:
[DBG]  X . . X . 
[DBG]  . . . X . 
[DBG]  A . A X X 
[DBG]  . A X X X 
[DBG]  X . . A . 
[DBG]  content of the map structure that we pass to the SAT solver:
[DBG]  -1  1  1  -1  1  
[DBG]  1  1  1  -1  1  
[DBG]  1  1  1  -1  -1  
[DBG]  1  1  -1  -1  -1  
[DBG]  -1  1  1  1  1  
[DBG]  Identifying agents in a submap for rescheduling (when key_agent is there at the time 6):
[DBG]  Agent 28 found intervals in the sub-map:
[DBG]   [0..45]
[DBG]  Agent 28 (interval in submap: [0..45]) contains time 6, added to replan.
[DBG]  Agent 46 found intervals in the sub-map:
[DBG]   [4..7]
[DBG]  Agent 46 (interval in submap: [4..7]) contains time 6, added to replan.
[DBG]  Agent 108 found intervals in the sub-map:
[DBG]   [0..7]
[DBG]  Agent 108 (interval in submap: [0..7]) contains time 6, added to replan.
[DBG]  Agent 113 found intervals in the sub-map:
[DBG]   [6..10]
[DBG]  Agent 113 (interval in submap: [6..10]) contains time 6, added to replan.
[DBG]  Agent 28 | Start (global): 661 -> (local): (2, 2) at time 6 | Goal (global): 727 -> (local): (4, 4) at time 45
[DBG]  Agent 46 | Start (global): 726 -> (local): (4, 3) at time 6 | Goal (global): 727 -> (local): (4, 4) at time 7
[DBG]  Agent 108 | Start (global): 692 -> (local): (3, 1) at time 6 | Goal (global): 724 -> (local): (4, 1) at time 7
[DBG]  Agent 113 | Start (global): 659 -> (local): (2, 0) at time 6 | Goal (global): 597 -> (local): (0, 2) at time 10
[DBG]  [REPAIR] SAT destroy operator called.
[DBG]  [REPAIR] SAT operator â€“ launching subproblem FOR OPTIMIZATION.
[DBG]  Creating local paths (sx, sy) in the submap for T_sync = 6
[DBG]    Agent 28 (global paths from T=6 to 45) has local path: (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (1,2) (1,1) (1,0) (2,0) (3,0) (3,1) (4,1) (4,2) (4,3) (4,4) 
[DBG]    Agent 46 (global paths from T=6 to 7) has local path: (4,3) (4,4) 
[DBG]    Agent 108 (global paths from T=6 to 7) has local path: (3,1) (4,1) 
[DBG]    Agent 113 (global paths from T=6 to 10) has local path: (2,0) (1,0) (1,1) (1,2) (0,2) 
[DBG]  Checking input data for SAT solver:
[DBG]    - Number of agents to replan: 4
[DBG]  Agent 28 has the original local path length: 40 => Start (2,2), Goal (4,4)
[DBG]  Agent 46 has the original local path length: 2 => Start (4,3), Goal (4,4)
[DBG]  Agent 108 has the original local path length: 2 => Start (3,1), Goal (4,1)
[DBG]  Agent 113 has the original local path length: 5 => Start (2,0), Goal (0,2)
[DBG]  Start position: (2, 2), (4, 3), (3, 1), (2, 0), 
[DBG]  Goal position: (4, 4), (4, 4), (4, 1), (0, 2), 
[DBG]  SAT instance and solver created.
Currently solving
Instance name: scen
Map name: map
Encoding used: disappear_at_goal
SAT solver used: Kissat
Optimizing function: sum of costs
Number of agents: 4
Mks LB: 7
SoC LB: 16
Delta: 0
Remaining time: 300000 [ms]

Vertex conflict! Agents 1, 2, timestep 2, location 0
Swapping conflict! Agents 1, 2, timestep 2, edge (0,0)
Vertex conflict! Agents 1, 2, timestep 3, location 0
Swapping conflict! Agents 1, 2, timestep 3, edge (0,0)
Vertex conflict! Agents 1, 2, timestep 4, location 0
Swapping conflict! Agents 1, 2, timestep 4, edge (0,0)
Vertex conflict! Agents 1, 2, timestep 5, location 0
Swapping conflict! Agents 1, 2, timestep 5, edge (0,0)
Vertex conflict! Agents 1, 2, timestep 6, location 0
Vertex conflict! Agents 1, 3, timestep 5, location 0
Swapping conflict! Agents 1, 3, timestep 5, edge (0,0)
Vertex conflict! Agents 1, 3, timestep 6, location 0
Vertex conflict! Agents 2, 3, timestep 5, location 0
Swapping conflict! Agents 2, 3, timestep 5, edge (0,0)
Vertex conflict! Agents 2, 3, timestep 6, location 0
Found plan [agents = 4] [timesteps = 7]
Agent #0 : 9 8 11 12 13 14 15 
Agent #1 : 14 15 0 0 0 0 0 
Agent #2 : 11 12 0 0 0 0 0 
Agent #3 : 7 3 4 5 1 0 0 

[STAT] Solver returned: 0
[DBG]  Agent (index) 28 | New local path (submap idx):
[DBG]  9 8 11 12 13 14 15 
[DBG]  Agent (index) 46 | New local path (submap idx):
[DBG]  14 15 
[DBG]  Agent (index) 108 | New local path (submap idx):
[DBG]  11 12 
[DBG]  Agent (index) 113 | New local path (submap idx):
[DBG]  7 3 4 5 1 
[DBG]  Update the agent path 28 | Original local length: 40 | New local length: 7
[DBG]  agent 28 t=0 => decoded (sx,sy)=(2,2) => global_id=661
[DBG]  agent 28 t=1 => decoded (sx,sy)=(2,1) => global_id=660
[DBG]  agent 28 t=2 => decoded (sx,sy)=(3,1) => global_id=692
[DBG]  agent 28 t=3 => decoded (sx,sy)=(4,1) => global_id=724
[DBG]  agent 28 t=4 => decoded (sx,sy)=(4,2) => global_id=725
[DBG]  agent 28 t=5 => decoded (sx,sy)=(4,3) => global_id=726
[DBG]  agent 28 t=6 => decoded (sx,sy)=(4,4) => global_id=727
[DBG]  Complete path of agent 28:
[DBG]    Original: 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 629 628 627 659 691 692 724 725 726 727 
[DBG]    New:     661 661 661 661 661 661 661 660 692 724 725 726 727 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 661 661 661 661 661 661 
[DBG]    Local path (in submap): 661 660 692 724 725 726 727 
[DBG]    Suffix (out of submap): 
[DBG]  Original agent path length 28 je: 46
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 0: 661, 661, 661, 661, 661, 661, 661, 660, 692, 724, 725, 726, 727, 
[DBG]  Path for agent 28 updated, resulting length: 13
[DBG]  Update the agent path 46 | Original local length: 2 | New local length: 2
[DBG]  agent 46 t=0 => decoded (sx,sy)=(4,3) => global_id=726
[DBG]  agent 46 t=1 => decoded (sx,sy)=(4,4) => global_id=727
[DBG]  Complete path of agent 46:
[DBG]    Original: 786 787 788 756 724 725 726 727 728 696 664 632 633 601 569 570 538 539 540 508 509 477 445 413 381 349 317 285 284 252 
[DBG]    New:     786 787 788 756 724 725 726 727 728 696 664 632 633 601 569 570 538 539 540 508 509 477 445 413 381 349 317 285 284 252 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 786 787 788 756 724 725 
[DBG]    Local path (in submap): 726 727 
[DBG]    Suffix (out of submap): 728 696 664 632 633 601 569 570 538 539 540 508 509 477 445 413 381 349 317 285 284 252 
[DBG]  Original agent path length 46 je: 30
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 1: 786, 787, 788, 756, 724, 725, 726, 727, 728, 696, 664, 632, 633, 601, 569, 570, 538, 539, 540, 508, 509, 477, 445, 413, 381, 349, 317, 285, 284, 252, 
[DBG]  Path for agent 46 updated, resulting length: 30
[DBG]  Update the agent path 108 | Original local length: 2 | New local length: 2
[DBG]  agent 108 t=0 => decoded (sx,sy)=(3,1) => global_id=692
[DBG]  agent 108 t=1 => decoded (sx,sy)=(4,1) => global_id=724
[DBG]  Complete path of agent 108:
[DBG]    Original: 628 627 659 691 691 691 692 724 756 788 820 821 822 854 886 887 888 889 921 953 954 955 956 957 989 1021 
[DBG]    New:     628 627 659 691 691 691 692 724 756 788 820 821 822 854 886 887 888 889 921 953 954 955 956 957 989 1021 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 628 627 659 691 691 691 
[DBG]    Local path (in submap): 692 724 
[DBG]    Suffix (out of submap): 756 788 820 821 822 854 886 887 888 889 921 953 954 955 956 957 989 1021 
[DBG]  Original agent path length 108 je: 26
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 2: 628, 627, 659, 691, 691, 691, 692, 724, 756, 788, 820, 821, 822, 854, 886, 887, 888, 889, 921, 953, 954, 955, 956, 957, 989, 1021, 
[DBG]  Path for agent 108 updated, resulting length: 26
[DBG]  Update the agent path 113 | Original local length: 5 | New local length: 5
[DBG]  agent 113 t=0 => decoded (sx,sy)=(2,0) => global_id=659
[DBG]  agent 113 t=1 => decoded (sx,sy)=(1,0) => global_id=627
[DBG]  agent 113 t=2 => decoded (sx,sy)=(1,1) => global_id=628
[DBG]  agent 113 t=3 => decoded (sx,sy)=(1,2) => global_id=629
[DBG]  agent 113 t=4 => decoded (sx,sy)=(0,2) => global_id=597
[DBG]  Complete path of agent 113:
[DBG]    Original: 529 561 593 625 657 658 659 627 628 629 597 565 566 534 502 503 504 472 440 408 376 377 378 378 379 380 348 349 317 318 319 287 255 254 222 
[DBG]    New:     529 561 593 625 657 658 659 627 628 629 597 565 566 534 502 503 504 472 440 408 376 377 378 378 379 380 348 349 317 318 319 287 255 254 222 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 529 561 593 625 657 658 
[DBG]    Local path (in submap): 659 627 628 629 597 
[DBG]    Suffix (out of submap): 565 566 534 502 503 504 472 440 408 376 377 378 378 379 380 348 349 317 318 319 287 255 254 222 
[DBG]  Original agent path length 113 je: 35
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 3: 529, 561, 593, 625, 657, 658, 659, 627, 628, 629, 597, 565, 566, 534, 502, 503, 504, 472, 440, 408, 376, 377, 378, 378, 379, 380, 348, 349, 317, 318, 319, 287, 255, 254, 222, 
[DBG]  Path for agent 113 updated, resulting length: 35
[DBG]  Paths successfully updated.
[DBG]  (LNS.cpp) New path for agent 28: 
[DBG]  661, 661, 661, 661, 661, 661, 661, 660, 692, 724, 725, 726, 727, 
[DBG]  (LNS.cpp) New path for agent 46: 
[DBG]  786, 787, 788, 756, 724, 725, 726, 727, 728, 696, 664, 632, 633, 601, 569, 570, 538, 539, 540, 508, 509, 477, 445, 413, 381, 349, 317, 285, 284, 252, 
[DBG]  (LNS.cpp) New path for agent 108: 
[DBG]  628, 627, 659, 691, 691, 691, 692, 724, 756, 788, 820, 821, 822, 854, 886, 887, 888, 889, 921, 953, 954, 955, 956, 957, 989, 1021, 
[DBG]  (LNS.cpp) New path for agent 113: 
[DBG]  529, 561, 593, 625, 657, 658, 659, 627, 628, 629, 597, 565, 566, 534, 502, 503, 504, 472, 440, 408, 376, 377, 378, 378, 379, 380, 348, 349, 317, 318, 319, 287, 255, 254, 222, 
[DBG]  component_weights = {0.244345, 0.244345, 0.255524, 0.255785}
[DBG]  opSuccess value: 1
[STAT] neighbor.sum_of_costs before recomputation: 100
[STAT] neighbor.old_sum_of_costs before recomputation: 133
[STAT] sum_of_costs before recomputation: 4460
[DBG]  Validate solution immediately after SAT success.
[WARNING] Problem after SAT: Target conflict: agent 1 (len 16) traverses target of agent 28 (len 12) at location 727 at timestep 13
[DBG]  Attempting immediate repair via init_lns because problem occurred after SAT (should be applied only for conflicts...).
[DBG]  Passing 150 agents to init_lns (skip=true).
[DBG]  path_table contents for selected agents (neighbor.agents):
[DBG]    Agent 28 => controlling path length=13
[DBG]    Agent 46 => controlling path length=30
[DBG]    Agent 108 => controlling path length=26
[DBG]    Agent 113 => controlling path length=35
[DBG]  hodnota skip_initial_solution=1
[DBG]  We skip initialSolution => call buildCollisionData()
[DBG]  buildCollisionData() called â€“ skip_initial_solution case.
[DBG]  Agents.size()=150, collision_graph.size()=150
[DBG]  agent 1 => updateCollidingPairs => foundCollision
[DBG]  agent 28 => updateCollidingPairs => foundCollision
[DBG]  agent 42 => updateCollidingPairs => foundCollision
[DBG]  Conflicting agent pairs:
[DBG]  agent 1 is in conflict with agent 28
[DBG]  agent 28 is in conflict with agent 42
[DBG]  buildCollisionData() => sum_of_costs=4427, num_of_colliding_pairs=2
[DBG]  buildCollisionData done => sum_of_costs=4427, num_of_colliding_pairs=2
[DBG]  sum_of_cost hodnota: 4427
[DBG]  After skip/init build => iteration_stats.back(): sum_of_costs=4427, collisions=2
[DEBUG] Using default neighbor generation strategy for conflicts: 0
	InitLNS(PP): runtime = 0.00155229, iterations = 2, colliding pairs = 0, initial colliding pairs = 2, solution cost = 4460, initial solution cost = 4427, failed iterations = 0
[DBG]  init_lns->sum_of_costs after init_lns->run: 4460
[DBG]  sum_of_costs after assignment from init_lns->run: 4460
[DBG]  Recomputing sum_of_cost by dividing neighbor.sum_of_costs and neighbor.old_sum_of_costs
[STAT] sum_of_costs after recomputation: 4460
[STAT] Iteration 5
[DBG]  Using SAT operator (destroy+repair SAT).
[DBG]  ====================
[DBG]  SAT destroy operator called.
[DBG]  SAT heuristic: 2
[DBG]  key_agent_id: 21
[DBG]  key_agent_id global path length: 34
[DBG]  Submap content (global positions):
[DBG]  358 359 360 361 362 
[DBG]  390 391 392 393 394 
[DBG]  422 423 424 425 426 
[DBG]  454 455 456 457 458 
[DBG]  486 487 488 489 490 
[DBG]  Map content with agents and obstacles:
[DBG]  . . . . . 
[DBG]  . . X A X 
[DBG]  A . A . . 
[DBG]  A A . . . 
[DBG]  . . X . . 
[DBG]  content of the map structure that we pass to the SAT solver:
[DBG]  1  1  1  1  1  
[DBG]  1  1  -1  1  -1  
[DBG]  1  1  1  1  1  
[DBG]  1  1  1  1  1  
[DBG]  1  1  -1  1  1  
[DBG]  Identifying agents in a submap for rescheduling (when key_agent is there at the time 24):
[DBG]  Agent 21 found intervals in the sub-map:
[DBG]   [3..29]
[DBG]  Agent 21 (interval in submap: [3..29]) contains time 24, added to replan.
[DBG]  Agent 51 found intervals in the sub-map:
[DBG]   [10..29]
[DBG]  Agent 51 (interval in submap: [10..29]) contains time 24, added to replan.
[DBG]  Agent 73 found intervals in the sub-map:
[DBG]   [25..28]
[DBG]  Agent 73 is not in sub-map at time 24 (intervals: 
[DBG]  [25..28] )
[DBG]  Agent 105 found intervals in the sub-map:
[DBG]   [23..27]
[DBG]  Agent 105 (interval in submap: [23..27]) contains time 24, added to replan.
[DBG]  Agent 107 found intervals in the sub-map:
[DBG]   [18..25]
[DBG]  Agent 107 (interval in submap: [18..25]) contains time 24, added to replan.
[DBG]  Agent 112 found intervals in the sub-map:
[DBG]   [23..30]
[DBG]  Agent 112 (interval in submap: [23..30]) contains time 24, added to replan.
[DBG]  Agent 116 found intervals in the sub-map:
[DBG]   [9..16]
[DBG]  Agent 116 is not in sub-map at time 24 (intervals: 
[DBG]  [9..16] )
[DBG]  Agent 21 | Start (global): 424 -> (local): (2, 2) at time 24 | Goal (global): 358 -> (local): (0, 0) at time 29
[DBG]  Agent 51 | Start (global): 422 -> (local): (2, 0) at time 24 | Goal (global): 458 -> (local): (3, 4) at time 29
[DBG]  Agent 105 | Start (global): 455 -> (local): (3, 1) at time 24 | Goal (global): 390 -> (local): (1, 0) at time 27
[DBG]  Agent 107 | Start (global): 454 -> (local): (3, 0) at time 24 | Goal (global): 486 -> (local): (4, 0) at time 25
[DBG]  Agent 112 | Start (global): 393 -> (local): (1, 3) at time 24 | Goal (global): 486 -> (local): (4, 0) at time 30
[DBG]  [REPAIR] SAT destroy operator called.
[DBG]  [REPAIR] SAT operator â€“ launching subproblem FOR OPTIMIZATION.
[DBG]  Creating local paths (sx, sy) in the submap for T_sync = 24
[DBG]    Agent 21 (global paths from T=24 to 29) has local path: (2,2) (2,2) (2,1) (1,1) (1,0) (0,0) 
[DBG]    Agent 51 (global paths from T=24 to 29) has local path: (2,0) (3,0) (3,1) (3,2) (3,3) (3,4) 
[DBG]    Agent 105 (global paths from T=24 to 27) has local path: (3,1) (2,1) (1,1) (1,0) 
[DBG]    Agent 107 (global paths from T=24 to 25) has local path: (3,0) (4,0) 
[DBG]    Agent 112 (global paths from T=24 to 30) has local path: (1,3) (2,3) (2,2) (2,1) (2,0) (3,0) (4,0) 
[DBG]  Checking input data for SAT solver:
[DBG]    - Number of agents to replan: 5
[DBG]  Agent 21 has the original local path length: 6 => Start (2,2), Goal (0,0)
[DBG]  Agent 51 has the original local path length: 6 => Start (2,0), Goal (3,4)
[DBG]  Agent 105 has the original local path length: 4 => Start (3,1), Goal (1,0)
[DBG]  Agent 107 has the original local path length: 2 => Start (3,0), Goal (4,0)
[DBG]  Agent 112 has the original local path length: 7 => Start (1,3), Goal (4,0)
[DBG]  Start position: (2, 2), (2, 0), (3, 1), (3, 0), (1, 3), 
[DBG]  Goal position: (0, 0), (3, 4), (1, 0), (4, 0), (4, 0), 
[DBG]  SAT instance and solver created.
Currently solving
Instance name: scen
Map name: map
Encoding used: disappear_at_goal
SAT solver used: Kissat
Optimizing function: sum of costs
Number of agents: 5
Mks LB: 7
SoC LB: 24
Delta: 0
Remaining time: 300000 [ms]

[STAT] Solver returned: -1
[DBG]  SAT solver failed.
[STAT] SAT solver failed to find a valid solution.
[DBG]  ====================
[DBG]  SAT destroy operator called.
[DBG]  SAT heuristic: 2
[DBG]  key_agent_id: 21
[DBG]  key_agent_id global path length: 34
[DBG]  Submap content (global positions):
[DBG]  389 390 391 392 393 
[DBG]  421 422 423 424 425 
[DBG]  453 454 455 456 457 
[DBG]  485 486 487 488 489 
[DBG]  517 518 519 520 521 
[DBG]  Map content with agents and obstacles:
[DBG]  . . . X . 
[DBG]  . A . . A 
[DBG]  X . A . . 
[DBG]  . A . X A 
[DBG]  . X A A . 
[DBG]  content of the map structure that we pass to the SAT solver:
[DBG]  1  1  1  -1  1  
[DBG]  1  1  1  1  1  
[DBG]  -1  1  1  1  1  
[DBG]  1  1  1  -1  1  
[DBG]  1  -1  1  1  1  
[DBG]  Identifying agents in a submap for rescheduling (when key_agent is there at the time 18):
[DBG]  Agent 13 found intervals in the sub-map:
[DBG]   [15..18]
[DBG]  Agent 13 (interval in submap: [15..18]) contains time 18, added to replan.
[DBG]  Agent 21 found intervals in the sub-map:
[DBG]   [2..28]
[DBG]  Agent 21 (interval in submap: [2..28]) contains time 18, added to replan.
[DBG]  Agent 23 found intervals in the sub-map:
[DBG]   [16..22]
[DBG]  Agent 23 (interval in submap: [16..22]) contains time 18, added to replan.
[DBG]  Agent 51 found intervals in the sub-map:
[DBG]   [9..12] [16..28]
[DBG]  Agent 51 (interval in submap: [16..28]) contains time 18, added to replan.
[DBG]  Agent 65 found intervals in the sub-map:
[DBG]   [14..20]
[DBG]  Agent 65 (interval in submap: [14..20]) contains time 18, added to replan.
[DBG]  Agent 116 found intervals in the sub-map:
[DBG]   [7..17]
[DBG]  Agent 116 is not in sub-map at time 18 (intervals: 
[DBG]  [7..17] )
[DBG]  Agent 122 found intervals in the sub-map:
[DBG]   [18..24]
[DBG]  Agent 122 (interval in submap: [18..24]) contains time 18, added to replan.
[DBG]  Agent 140 found intervals in the sub-map:
[DBG]   [17..19]
[DBG]  Agent 140 (interval in submap: [17..19]) contains time 18, added to replan.
[DBG]  Agent 13 | Start (global): 489 -> (local): (3, 4) at time 18 | Goal (global): 489 -> (local): (3, 4) at time 18
[DBG]  Agent 21 | Start (global): 455 -> (local): (2, 2) at time 18 | Goal (global): 390 -> (local): (0, 1) at time 28
[DBG]  Agent 23 | Start (global): 486 -> (local): (3, 1) at time 18 | Goal (global): 391 -> (local): (0, 2) at time 22
[DBG]  Agent 51 | Start (global): 422 -> (local): (1, 1) at time 18 | Goal (global): 457 -> (local): (2, 4) at time 28
[DBG]  Agent 65 | Start (global): 425 -> (local): (1, 4) at time 18 | Goal (global): 489 -> (local): (3, 4) at time 20
[DBG]  Agent 122 | Start (global): 519 -> (local): (4, 2) at time 18 | Goal (global): 389 -> (local): (0, 0) at time 24
[DBG]  Agent 140 | Start (global): 520 -> (local): (4, 3) at time 18 | Goal (global): 521 -> (local): (4, 4) at time 19
[DBG]  [REPAIR] SAT destroy operator called.
[DBG]  [REPAIR] SAT operator â€“ launching subproblem FOR OPTIMIZATION.
[DBG]  Creating local paths (sx, sy) in the submap for T_sync = 18
[DBG]    Agent 13 (global paths from T=18 to 18) has local path: (3,4) 
[DBG]    Agent 21 (global paths from T=18 to 28) has local path: (2,2) (2,2) (3,2) (3,2) (2,2) (1,2) (1,3) (1,3) (1,2) (0,2) (0,1) 
[DBG]    Agent 23 (global paths from T=18 to 22) has local path: (3,1) (2,1) (2,2) (1,2) (0,2) 
[DBG]    Agent 51 (global paths from T=18 to 28) has local path: (1,1) (1,1) (1,1) (1,1) (1,2) (1,1) (1,1) (2,1) (2,2) (2,3) (2,4) 
[DBG]    Agent 65 (global paths from T=18 to 20) has local path: (1,4) (2,4) (3,4) 
[DBG]    Agent 122 (global paths from T=18 to 24) has local path: (4,2) (3,2) (3,1) (2,1) (1,1) (0,1) (0,0) 
[DBG]    Agent 140 (global paths from T=18 to 19) has local path: (4,3) (4,4) 
[DBG]  Checking input data for SAT solver:
[DBG]    - Number of agents to replan: 7
[DBG]  Agent 13 has the original local path length: 1 => Start (3,4), Goal (3,4)
[DBG]  Agent 21 has the original local path length: 11 => Start (2,2), Goal (0,1)
[DBG]  Agent 23 has the original local path length: 5 => Start (3,1), Goal (0,2)
[DBG]  Agent 51 has the original local path length: 11 => Start (1,1), Goal (2,4)
[DBG]  Agent 65 has the original local path length: 3 => Start (1,4), Goal (3,4)
[DBG]  Agent 122 has the original local path length: 7 => Start (4,2), Goal (0,0)
[DBG]  Agent 140 has the original local path length: 2 => Start (4,3), Goal (4,4)
[DBG]  Start position: (3, 4), (2, 2), (3, 1), (1, 1), (1, 4), (4, 2), (4, 3), 
[DBG]  Goal position: (3, 4), (0, 1), (0, 2), (2, 4), (3, 4), (0, 0), (4, 4), 
[DBG]  SAT instance and solver created.
Currently solving
Instance name: scen
Map name: map
Encoding used: disappear_at_goal
SAT solver used: Kissat
Optimizing function: sum of costs
Number of agents: 7
Mks LB: 7
SoC LB: 27
Delta: 0
Remaining time: 300000 [ms]

[STAT] Solver returned: -1
[DBG]  SAT solver failed.
[STAT] SAT solver failed to find a valid solution.
[DBG]  ====================
[DBG]  SAT destroy operator called.
[DBG]  SAT heuristic: 2
[DBG]  key_agent_id: 21
[DBG]  key_agent_id global path length: 34
[DBG]  Submap content (global positions):
[DBG]  261 262 263 264 265 
[DBG]  293 294 295 296 297 
[DBG]  325 326 327 328 329 
[DBG]  357 358 359 360 361 
[DBG]  389 390 391 392 393 
[DBG]  Map content with agents and obstacles:
[DBG]  . X . . . 
[DBG]  . . . . . 
[DBG]  . A A . . 
[DBG]  . . . . . 
[DBG]  . . A X . 
[DBG]  content of the map structure that we pass to the SAT solver:
[DBG]  1  -1  1  1  1  
[DBG]  1  1  1  1  1  
[DBG]  1  1  1  1  1  
[DBG]  1  1  1  1  1  
[DBG]  1  1  1  -1  1  
[DBG]  Identifying agents in a submap for rescheduling (when key_agent is there at the time 33):
[DBG]  Agent 21 found intervals in the sub-map:
[DBG]   [27..33]
[DBG]  Agent 21 (interval in submap: [27..33]) contains time 33, added to replan.
[DBG]  Agent 135 found intervals in the sub-map:
[DBG]   [33..36]
[DBG]  Agent 135 (interval in submap: [33..36]) contains time 33, added to replan.
[DBG]  Agent 147 found intervals in the sub-map:
[DBG]   [30..33]
[DBG]  Agent 147 (interval in submap: [30..33]) contains time 33, added to replan.
[DBG]  Agent 21 | Start (global): 327 -> (local): (2, 2) at time 33 | Goal (global): 327 -> (local): (2, 2) at time 33
[DBG]  Agent 135 | Start (global): 391 -> (local): (4, 2) at time 33 | Goal (global): 357 -> (local): (3, 0) at time 36
[DBG]  Agent 147 | Start (global): 326 -> (local): (2, 1) at time 33 | Goal (global): 326 -> (local): (2, 1) at time 33
[DBG]  [REPAIR] SAT destroy operator called.
[DBG]  [REPAIR] SAT operator â€“ launching subproblem FOR OPTIMIZATION.
[DBG]  Creating local paths (sx, sy) in the submap for T_sync = 33
[DBG]    Agent 21 (global paths from T=33 to 33) has local path: (2,2) 
[DBG]    Agent 135 (global paths from T=33 to 36) has local path: (4,2) (4,1) (3,1) (3,0) 
[DBG]    Agent 147 (global paths from T=33 to 33) has local path: (2,1) 
[DBG]  Checking input data for SAT solver:
[DBG]    - Number of agents to replan: 3
[DBG]  Agent 21 has the original local path length: 1 => Start (2,2), Goal (2,2)
[DBG]  Agent 135 has the original local path length: 4 => Start (4,2), Goal (3,0)
[DBG]  Agent 147 has the original local path length: 1 => Start (2,1), Goal (2,1)
[DBG]  Start position: (2, 2), (4, 2), (2, 1), 
[DBG]  Goal position: (2, 2), (3, 0), (2, 1), 
[DBG]  SAT instance and solver created.
Currently solving
Instance name: scen
Map name: map
Encoding used: disappear_at_goal
SAT solver used: Kissat
Optimizing function: sum of costs
Number of agents: 3
Mks LB: 4
SoC LB: 6
Delta: 0
Remaining time: 300000 [ms]

Vertex conflict! Agents 0, 2, timestep 1, location 0
Swapping conflict! Agents 0, 2, timestep 1, edge (0,0)
Vertex conflict! Agents 0, 2, timestep 2, location 0
Swapping conflict! Agents 0, 2, timestep 2, edge (0,0)
Vertex conflict! Agents 0, 2, timestep 3, location 0
Found plan [agents = 3] [timesteps = 4]
Agent #0 : 11 0 0 0 
Agent #1 : 21 20 19 14 
Agent #2 : 10 0 0 0 

[STAT] Solver returned: 0
[DBG]  Agent (index) 21 | New local path (submap idx):
[DBG]  11 
[DBG]  Agent (index) 135 | New local path (submap idx):
[DBG]  21 20 19 14 
[DBG]  Agent (index) 147 | New local path (submap idx):
[DBG]  10 
[DBG]  Update the agent path 21 | Original local length: 1 | New local length: 1
[DBG]  agent 21 t=0 => decoded (sx,sy)=(2,2) => global_id=327
[DBG]  Complete path of agent 21:
[DBG]    Original: 484 484 485 486 454 454 454 454 454 455 455 455 455 455 455 455 455 455 455 455 487 487 455 423 424 424 423 391 390 358 326 294 295 327 
[DBG]    New:     484 484 485 486 454 454 454 454 454 455 455 455 455 455 455 455 455 455 455 455 487 487 455 423 424 424 423 391 390 358 326 294 295 327 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 484 484 485 486 454 454 454 454 454 455 455 455 455 455 455 455 455 455 455 455 487 487 455 423 424 424 423 391 390 358 326 294 295 
[DBG]    Local path (in submap): 327 
[DBG]    Suffix (out of submap): 
[DBG]  Original agent path length 21 je: 34
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 0: 484, 484, 485, 486, 454, 454, 454, 454, 454, 455, 455, 455, 455, 455, 455, 455, 455, 455, 455, 455, 487, 487, 455, 423, 424, 424, 423, 391, 390, 358, 326, 294, 295, 327, 
[DBG]  Path for agent 21 updated, resulting length: 34
[DBG]  Update the agent path 135 | Original local length: 4 | New local length: 4
[DBG]  agent 135 t=0 => decoded (sx,sy)=(4,2) => global_id=391
[DBG]  agent 135 t=1 => decoded (sx,sy)=(4,1) => global_id=390
[DBG]  agent 135 t=2 => decoded (sx,sy)=(4,0) => global_id=389
[DBG]  agent 135 t=3 => decoded (sx,sy)=(3,0) => global_id=357
[DBG]  Complete path of agent 135:
[DBG]    Original: 696 664 632 633 601 569 570 538 506 505 504 503 502 501 501 501 501 469 468 467 466 465 464 463 431 430 429 428 427 426 425 424 423 391 390 358 357 356 355 354 353 352 384 
[DBG]    New:     696 664 632 633 601 569 570 538 506 505 504 503 502 501 501 501 501 469 468 467 466 465 464 463 431 430 429 428 427 426 425 424 423 391 390 389 357 356 355 354 353 352 384 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 696 664 632 633 601 569 570 538 506 505 504 503 502 501 501 501 501 469 468 467 466 465 464 463 431 430 429 428 427 426 425 424 423 
[DBG]    Local path (in submap): 391 390 389 357 
[DBG]    Suffix (out of submap): 356 355 354 353 352 384 
[DBG]  Original agent path length 135 je: 43
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 1: 696, 664, 632, 633, 601, 569, 570, 538, 506, 505, 504, 503, 502, 501, 501, 501, 501, 469, 468, 467, 466, 465, 464, 463, 431, 430, 429, 428, 427, 426, 425, 424, 423, 391, 390, 389, 357, 356, 355, 354, 353, 352, 384, 
[DBG]  Path for agent 135 updated, resulting length: 43
[DBG]  Update the agent path 147 | Original local length: 1 | New local length: 1
[DBG]  agent 147 t=0 => decoded (sx,sy)=(2,1) => global_id=326
[DBG]  Complete path of agent 147:
[DBG]    Original: 284 285 317 349 381 380 379 378 377 376 408 407 406 405 404 403 402 402 401 400 368 367 335 303 302 301 300 299 331 330 329 328 327 326 
[DBG]    New:     284 285 317 349 381 380 379 378 377 376 408 407 406 405 404 403 402 402 401 400 368 367 335 303 302 301 300 299 331 330 329 328 327 326 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 284 285 317 349 381 380 379 378 377 376 408 407 406 405 404 403 402 402 401 400 368 367 335 303 302 301 300 299 331 330 329 328 327 
[DBG]    Local path (in submap): 326 
[DBG]    Suffix (out of submap): 
[DBG]  Original agent path length 147 je: 34
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 2: 284, 285, 317, 349, 381, 380, 379, 378, 377, 376, 408, 407, 406, 405, 404, 403, 402, 402, 401, 400, 368, 367, 335, 303, 302, 301, 300, 299, 331, 330, 329, 328, 327, 326, 
[DBG]  Path for agent 147 updated, resulting length: 34
[DBG]  Paths successfully updated.
[DBG]  (LNS.cpp) New path for agent 21: 
[DBG]  484, 484, 485, 486, 454, 454, 454, 454, 454, 455, 455, 455, 455, 455, 455, 455, 455, 455, 455, 455, 487, 487, 455, 423, 424, 424, 423, 391, 390, 358, 326, 294, 295, 327, 
[DBG]  (LNS.cpp) New path for agent 135: 
[DBG]  696, 664, 632, 633, 601, 569, 570, 538, 506, 505, 504, 503, 502, 501, 501, 501, 501, 469, 468, 467, 466, 465, 464, 463, 431, 430, 429, 428, 427, 426, 425, 424, 423, 391, 390, 389, 357, 356, 355, 354, 353, 352, 384, 
[DBG]  (LNS.cpp) New path for agent 147: 
[DBG]  284, 285, 317, 349, 381, 380, 379, 378, 377, 376, 408, 407, 406, 405, 404, 403, 402, 402, 401, 400, 368, 367, 335, 303, 302, 301, 300, 299, 331, 330, 329, 328, 327, 326, 
[DBG]  component_weights = {0.248095, 0.243133, 0.254256, 0.254516}
[DBG]  opSuccess value: 1
[STAT] neighbor.sum_of_costs before recomputation: 108
[STAT] neighbor.old_sum_of_costs before recomputation: 108
[STAT] sum_of_costs before recomputation: 4460
[DBG]  Validate solution immediately after SAT success.
[DBG]  No problems after SAT replan.
[DBG]  Recomputing sum_of_cost by dividing neighbor.sum_of_costs and neighbor.old_sum_of_costs
[STAT] sum_of_costs after recomputation: 4460
[STAT] Iteration 6
[DBG]  Using SAT operator (destroy+repair SAT).
[DBG]  ====================
[DBG]  SAT destroy operator called.
[DBG]  SAT heuristic: 2
[DBG]  key_agent_id: 36
[DBG]  key_agent_id global path length: 25
[DBG]  Submap content (global positions):
[DBG]  365 366 367 368 369 
[DBG]  397 398 399 400 401 
[DBG]  429 430 431 432 433 
[DBG]  461 462 463 464 465 
[DBG]  493 494 495 496 497 
[DBG]  Map content with agents and obstacles:
[DBG]  . . . A A 
[DBG]  X . X . A 
[DBG]  A . A A . 
[DBG]  X . . . . 
[DBG]  X . X . X 
[DBG]  content of the map structure that we pass to the SAT solver:
[DBG]  1  1  1  1  1  
[DBG]  -1  1  -1  1  1  
[DBG]  1  1  1  1  1  
[DBG]  -1  1  1  1  1  
[DBG]  -1  1  -1  1  -1  
[DBG]  Identifying agents in a submap for rescheduling (when key_agent is there at the time 3):
[DBG]  Agent 8 found intervals in the sub-map:
[DBG]   [3..4]
[DBG]  Agent 8 (interval in submap: [3..4]) contains time 3, added to replan.
[DBG]  Agent 31 found intervals in the sub-map:
[DBG]   [0..3]
[DBG]  Agent 31 (interval in submap: [0..3]) contains time 3, added to replan.
[DBG]  Agent 36 found intervals in the sub-map:
[DBG]   [0..21]
[DBG]  Agent 36 (interval in submap: [0..21]) contains time 3, added to replan.
[DBG]  Agent 54 found intervals in the sub-map:
[DBG]   [0..10]
[DBG]  Agent 54 (interval in submap: [0..10]) contains time 3, added to replan.
[DBG]  Agent 76 found intervals in the sub-map:
[DBG]   [3..7]
[DBG]  Agent 76 (interval in submap: [3..7]) contains time 3, added to replan.
[DBG]  Agent 121 found intervals in the sub-map:
[DBG]   [0..23]
[DBG]  Agent 121 (interval in submap: [0..23]) contains time 3, added to replan.
[DBG]  Agent 8 | Start (global): 368 -> (local): (0, 3) at time 3 | Goal (global): 369 -> (local): (0, 4) at time 4
[DBG]  Agent 31 | Start (global): 369 -> (local): (0, 4) at time 3 | Goal (global): 369 -> (local): (0, 4) at time 3
[DBG]  Agent 36 | Start (global): 431 -> (local): (2, 2) at time 3 | Goal (global): 401 -> (local): (1, 4) at time 21
[DBG]  Agent 54 | Start (global): 432 -> (local): (2, 3) at time 3 | Goal (global): 465 -> (local): (3, 4) at time 10
[DBG]  Agent 76 | Start (global): 429 -> (local): (2, 0) at time 3 | Goal (global): 365 -> (local): (0, 0) at time 7
[DBG]  Agent 121 | Start (global): 401 -> (local): (1, 4) at time 3 | Goal (global): 494 -> (local): (4, 1) at time 23
[DBG]  [REPAIR] SAT destroy operator called.
[DBG]  [REPAIR] SAT operator â€“ launching subproblem FOR OPTIMIZATION.
[DBG]  Creating local paths (sx, sy) in the submap for T_sync = 3
[DBG]    Agent 8 (global paths from T=3 to 4) has local path: (0,3) (0,4) 
[DBG]    Agent 31 (global paths from T=3 to 3) has local path: (0,4) 
[DBG]    Agent 36 (global paths from T=3 to 21) has local path: (2,2) (2,2) (2,2) (2,2) (2,2) (3,2) (3,1) (3,1) (3,1) (2,1) (2,2) (2,2) (2,2) (2,2) (2,3) (2,4) (3,4) (2,4) (1,4) 
[DBG]    Agent 54 (global paths from T=3 to 10) has local path: (2,3) (2,3) (2,3) (2,3) (2,3) (2,3) (3,3) (3,4) 
[DBG]    Agent 76 (global paths from T=3 to 7) has local path: (2,0) (2,1) (1,1) (0,1) (0,0) 
[DBG]    Agent 121 (global paths from T=3 to 23) has local path: (1,4) (1,4) (1,4) (1,4) (1,4) (1,4) (1,4) (1,4) (1,4) (1,4) (1,4) (1,4) (1,4) (1,4) (1,4) (1,3) (2,3) (2,2) (3,2) (3,1) (4,1) 
[DBG]  Checking input data for SAT solver:
[DBG]    - Number of agents to replan: 6
[DBG]  Agent 8 has the original local path length: 2 => Start (0,3), Goal (0,4)
[DBG]  Agent 31 has the original local path length: 1 => Start (0,4), Goal (0,4)
[DBG]  Agent 36 has the original local path length: 19 => Start (2,2), Goal (1,4)
[DBG]  Agent 54 has the original local path length: 8 => Start (2,3), Goal (3,4)
[DBG]  Agent 76 has the original local path length: 5 => Start (2,0), Goal (0,0)
[DBG]  Agent 121 has the original local path length: 21 => Start (1,4), Goal (4,1)
[DBG]  Start position: (0, 3), (0, 4), (2, 2), (2, 3), (2, 0), (1, 4), 
[DBG]  Goal position: (0, 4), (0, 4), (1, 4), (3, 4), (0, 0), (4, 1), 
[DBG]  SAT instance and solver created.
Currently solving
Instance name: scen
Map name: map
Encoding used: disappear_at_goal
SAT solver used: Kissat
Optimizing function: sum of costs
Number of agents: 6
Mks LB: 7
SoC LB: 22
Delta: 0
Remaining time: 300000 [ms]

Vertex conflict! Agents 0, 1, timestep 2, location 0
Swapping conflict! Agents 0, 1, timestep 2, edge (0,0)
Vertex conflict! Agents 0, 1, timestep 3, location 0
Swapping conflict! Agents 0, 1, timestep 3, edge (0,0)
Vertex conflict! Agents 0, 1, timestep 4, location 0
Swapping conflict! Agents 0, 1, timestep 4, edge (0,0)
Vertex conflict! Agents 0, 1, timestep 5, location 0
Swapping conflict! Agents 0, 1, timestep 5, edge (0,0)
Vertex conflict! Agents 0, 1, timestep 6, location 0
Vertex conflict! Agents 0, 2, timestep 4, location 0
Swapping conflict! Agents 0, 2, timestep 4, edge (0,0)
Vertex conflict! Agents 0, 2, timestep 5, location 0
Swapping conflict! Agents 0, 2, timestep 5, edge (0,0)
Vertex conflict! Agents 0, 2, timestep 6, location 0
Vertex conflict! Agents 0, 3, timestep 3, location 0
Swapping conflict! Agents 0, 3, timestep 3, edge (0,0)
Vertex conflict! Agents 0, 3, timestep 4, location 0
Swapping conflict! Agents 0, 3, timestep 4, edge (0,0)
Vertex conflict! Agents 0, 3, timestep 5, location 0
Swapping conflict! Agents 0, 3, timestep 5, edge (0,0)
Vertex conflict! Agents 0, 3, timestep 6, location 0
Vertex conflict! Agents 0, 4, timestep 4, location 0
Swapping conflict! Agents 0, 4, timestep 4, edge (0,0)
Vertex conflict! Agents 0, 4, timestep 5, location 0
Swapping conflict! Agents 0, 4, timestep 5, edge (0,0)
Vertex conflict! Agents 0, 4, timestep 6, location 0
Vertex conflict! Agents 1, 2, timestep 4, location 0
Swapping conflict! Agents 1, 2, timestep 4, edge (0,0)
Vertex conflict! Agents 1, 2, timestep 5, location 0
Swapping conflict! Agents 1, 2, timestep 5, edge (0,0)
Vertex conflict! Agents 1, 2, timestep 6, location 0
Vertex conflict! Agents 1, 3, timestep 3, location 0
Swapping conflict! Agents 1, 3, timestep 3, edge (0,0)
Vertex conflict! Agents 1, 3, timestep 4, location 0
Swapping conflict! Agents 1, 3, timestep 4, edge (0,0)
Vertex conflict! Agents 1, 3, timestep 5, location 0
Swapping conflict! Agents 1, 3, timestep 5, edge (0,0)
Vertex conflict! Agents 1, 3, timestep 6, location 0
Vertex conflict! Agents 1, 4, timestep 4, location 0
Swapping conflict! Agents 1, 4, timestep 4, edge (0,0)
Vertex conflict! Agents 1, 4, timestep 5, location 0
Swapping conflict! Agents 1, 4, timestep 5, edge (0,0)
Vertex conflict! Agents 1, 4, timestep 6, location 0
Vertex conflict! Agents 2, 3, timestep 4, location 0
Swapping conflict! Agents 2, 3, timestep 4, edge (0,0)
Vertex conflict! Agents 2, 3, timestep 5, location 0
Swapping conflict! Agents 2, 3, timestep 5, edge (0,0)
Vertex conflict! Agents 2, 3, timestep 6, location 0
Vertex conflict! Agents 2, 4, timestep 4, location 0
Swapping conflict! Agents 2, 4, timestep 4, edge (0,0)
Vertex conflict! Agents 2, 4, timestep 5, location 0
Swapping conflict! Agents 2, 4, timestep 5, edge (0,0)
Vertex conflict! Agents 2, 4, timestep 6, location 0
Vertex conflict! Agents 3, 4, timestep 4, location 0
Swapping conflict! Agents 3, 4, timestep 4, edge (0,0)
Vertex conflict! Agents 3, 4, timestep 5, location 0
Swapping conflict! Agents 3, 4, timestep 5, edge (0,0)
Vertex conflict! Agents 3, 4, timestep 6, location 0
Found plan [agents = 6] [timesteps = 7]
Agent #0 : 3 4 0 0 0 0 0 
Agent #1 : 4 0 0 0 0 0 0 
Agent #2 : 10 11 12 7 0 0 0 
Agent #3 : 11 15 16 0 0 0 0 
Agent #4 : 8 9 5 1 0 0 0 
Agent #5 : 7 6 11 15 14 13 17 

[STAT] Solver returned: 0
[DBG]  Agent (index) 8 | New local path (submap idx):
[DBG]  3 4 
[DBG]  Agent (index) 31 | New local path (submap idx):
[DBG]  4 
[DBG]  Agent (index) 36 | New local path (submap idx):
[DBG]  10 11 12 7 
[DBG]  Agent (index) 54 | New local path (submap idx):
[DBG]  11 15 16 
[DBG]  Agent (index) 76 | New local path (submap idx):
[DBG]  8 9 5 1 0 
[DBG]  Agent (index) 121 | New local path (submap idx):
[DBG]  7 6 11 15 14 13 17 
[DBG]  Update the agent path 8 | Original local length: 2 | New local length: 2
[DBG]  agent 8 t=0 => decoded (sx,sy)=(0,3) => global_id=368
[DBG]  agent 8 t=1 => decoded (sx,sy)=(0,4) => global_id=369
[DBG]  Complete path of agent 8:
[DBG]    Original: 303 304 336 368 369 
[DBG]    New:     303 304 336 368 369 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 303 304 336 
[DBG]    Local path (in submap): 368 369 
[DBG]    Suffix (out of submap): 
[DBG]  Original agent path length 8 je: 5
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 0: 303, 304, 336, 368, 369, 
[DBG]  Path for agent 8 updated, resulting length: 5
[DBG]  Update the agent path 31 | Original local length: 1 | New local length: 1
[DBG]  agent 31 t=0 => decoded (sx,sy)=(0,4) => global_id=369
[DBG]  Complete path of agent 31:
[DBG]    Original: 432 400 368 369 337 338 339 340 308 309 277 278 279 247 248 216 184 185 153 121 89 
[DBG]    New:     432 400 368 369 337 338 339 340 308 309 277 278 279 247 248 216 184 185 153 121 89 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 432 400 368 
[DBG]    Local path (in submap): 369 
[DBG]    Suffix (out of submap): 337 338 339 340 308 309 277 278 279 247 248 216 184 185 153 121 89 
[DBG]  Original agent path length 31 je: 21
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 1: 432, 400, 368, 369, 337, 338, 339, 340, 308, 309, 277, 278, 279, 247, 248, 216, 184, 185, 153, 121, 89, 
[DBG]  Path for agent 31 updated, resulting length: 21
[DBG]  Update the agent path 36 | Original local length: 19 | New local length: 4
[DBG]  agent 36 t=0 => decoded (sx,sy)=(2,2) => global_id=431
[DBG]  agent 36 t=1 => decoded (sx,sy)=(2,3) => global_id=432
[DBG]  agent 36 t=2 => decoded (sx,sy)=(2,4) => global_id=433
[DBG]  agent 36 t=3 => decoded (sx,sy)=(1,4) => global_id=401
[DBG]  Complete path of agent 36:
[DBG]    Original: 431 431 431 431 431 431 431 431 463 462 462 462 430 431 431 431 431 432 433 465 433 401 402 403 371 
[DBG]    New:     431 431 431 431 432 433 401 402 403 371 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 431 431 431 
[DBG]    Local path (in submap): 431 432 433 401 402 403 371 
[DBG]    Suffix (out of submap): 
[DBG]  Original agent path length 36 je: 25
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 2: 431, 431, 431, 431, 432, 433, 401, 402, 403, 371, 
[DBG]  Path for agent 36 updated, resulting length: 10
[DBG]  Update the agent path 54 | Original local length: 8 | New local length: 3
[DBG]  agent 54 t=0 => decoded (sx,sy)=(2,3) => global_id=432
[DBG]  agent 54 t=1 => decoded (sx,sy)=(3,3) => global_id=464
[DBG]  agent 54 t=2 => decoded (sx,sy)=(3,4) => global_id=465
[DBG]  Complete path of agent 54:
[DBG]    Original: 464 432 432 432 432 432 432 432 432 464 465 466 467 467 468 469 470 502 503 504 505 506 538 570 570 570 571 
[DBG]    New:     464 432 432 432 464 465 466 467 467 468 469 470 502 503 504 505 506 538 570 570 570 571 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 464 432 432 
[DBG]    Local path (in submap): 432 464 465 466 467 467 468 469 
[DBG]    Suffix (out of submap): 470 502 503 504 505 506 538 570 570 570 571 
[DBG]  Original agent path length 54 je: 27
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 3: 464, 432, 432, 432, 464, 465, 466, 467, 467, 468, 469, 470, 502, 503, 504, 505, 506, 538, 570, 570, 570, 571, 
[DBG]  Path for agent 54 updated, resulting length: 22
[DBG]  Update the agent path 76 | Original local length: 5 | New local length: 5
[DBG]  agent 76 t=0 => decoded (sx,sy)=(2,0) => global_id=429
[DBG]  agent 76 t=1 => decoded (sx,sy)=(2,1) => global_id=430
[DBG]  agent 76 t=2 => decoded (sx,sy)=(1,1) => global_id=398
[DBG]  agent 76 t=3 => decoded (sx,sy)=(0,1) => global_id=366
[DBG]  agent 76 t=4 => decoded (sx,sy)=(0,0) => global_id=365
[DBG]  Complete path of agent 76:
[DBG]    Original: 492 460 428 429 430 398 366 365 333 301 302 270 238 
[DBG]    New:     492 460 428 429 430 398 366 365 333 301 302 270 238 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 492 460 428 
[DBG]    Local path (in submap): 429 430 398 366 365 
[DBG]    Suffix (out of submap): 333 301 302 270 238 
[DBG]  Original agent path length 76 je: 13
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 4: 492, 460, 428, 429, 430, 398, 366, 365, 333, 301, 302, 270, 238, 
[DBG]  Path for agent 76 updated, resulting length: 13
[DBG]  Update the agent path 121 | Original local length: 21 | New local length: 7
[DBG]  agent 121 t=0 => decoded (sx,sy)=(1,4) => global_id=401
[DBG]  agent 121 t=1 => decoded (sx,sy)=(1,3) => global_id=400
[DBG]  agent 121 t=2 => decoded (sx,sy)=(2,3) => global_id=432
[DBG]  agent 121 t=3 => decoded (sx,sy)=(3,3) => global_id=464
[DBG]  agent 121 t=4 => decoded (sx,sy)=(3,2) => global_id=463
[DBG]  agent 121 t=5 => decoded (sx,sy)=(3,1) => global_id=462
[DBG]  agent 121 t=6 => decoded (sx,sy)=(4,1) => global_id=494
[DBG]  Complete path of agent 121:
[DBG]    Original: 401 401 401 401 401 401 401 401 401 401 401 401 401 401 401 401 401 401 400 432 431 463 462 494 526 525 524 556 555 
[DBG]    New:     401 401 401 401 400 432 464 463 462 494 526 525 524 556 555 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 401 401 401 
[DBG]    Local path (in submap): 401 400 432 464 463 462 494 526 525 524 556 555 
[DBG]    Suffix (out of submap): 
[DBG]  Original agent path length 121 je: 29
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 5: 401, 401, 401, 401, 400, 432, 464, 463, 462, 494, 526, 525, 524, 556, 555, 
[DBG]  Path for agent 121 updated, resulting length: 15
[DBG]  Paths successfully updated.
[DBG]  (LNS.cpp) New path for agent 8: 
[DBG]  303, 304, 336, 368, 369, 
[DBG]  (LNS.cpp) New path for agent 31: 
[DBG]  432, 400, 368, 369, 337, 338, 339, 340, 308, 309, 277, 278, 279, 247, 248, 216, 184, 185, 153, 121, 89, 
[DBG]  (LNS.cpp) New path for agent 36: 
[DBG]  431, 431, 431, 431, 432, 433, 401, 402, 403, 371, 
[DBG]  (LNS.cpp) New path for agent 54: 
[DBG]  464, 432, 432, 432, 464, 465, 466, 467, 467, 468, 469, 470, 502, 503, 504, 505, 506, 538, 570, 570, 570, 571, 
[DBG]  (LNS.cpp) New path for agent 76: 
[DBG]  492, 460, 428, 429, 430, 398, 366, 365, 333, 301, 302, 270, 238, 
[DBG]  (LNS.cpp) New path for agent 121: 
[DBG]  401, 401, 401, 401, 400, 432, 464, 463, 462, 494, 526, 525, 524, 556, 555, 
[DBG]  component_weights = {0.246623, 0.24169, 0.252748, 0.258939}
[DBG]  opSuccess value: 1
[STAT] neighbor.sum_of_costs before recomputation: 80
[STAT] neighbor.old_sum_of_costs before recomputation: 114
[STAT] sum_of_costs before recomputation: 4460
[DBG]  Validate solution immediately after SAT success.
[WARNING] Problem after SAT: Vertex conflict between agents 54 and 2 at location 570 at timestep 20
[DBG]  Attempting immediate repair via init_lns because problem occurred after SAT (should be applied only for conflicts...).
[DBG]  Passing 150 agents to init_lns (skip=true).
[DBG]  path_table contents for selected agents (neighbor.agents):
[DBG]    Agent 8 => controlling path length=5
[DBG]    Agent 31 => controlling path length=21
[DBG]    Agent 36 => controlling path length=10
[DBG]    Agent 54 => controlling path length=22
[DBG]    Agent 76 => controlling path length=13
[DBG]    Agent 121 => controlling path length=15
[DBG]  hodnota skip_initial_solution=1
[DBG]  We skip initialSolution => call buildCollisionData()
[DBG]  buildCollisionData() called â€“ skip_initial_solution case.
[DBG]  Agents.size()=150, collision_graph.size()=150
[DBG]  agent 2 => updateCollidingPairs => foundCollision
[DBG]  agent 3 => updateCollidingPairs => foundCollision
[DBG]  agent 10 => updateCollidingPairs => foundCollision
[DBG]  agent 20 => updateCollidingPairs => foundCollision
[DBG]  agent 29 => updateCollidingPairs => foundCollision
[DBG]  agent 36 => updateCollidingPairs => foundCollision
[DBG]  agent 54 => updateCollidingPairs => foundCollision
[DBG]  agent 57 => updateCollidingPairs => foundCollision
[DBG]  agent 59 => updateCollidingPairs => foundCollision
[DBG]  agent 65 => updateCollidingPairs => foundCollision
[DBG]  agent 87 => updateCollidingPairs => foundCollision
[DBG]  agent 92 => updateCollidingPairs => foundCollision
[DBG]  agent 94 => updateCollidingPairs => foundCollision
[DBG]  agent 101 => updateCollidingPairs => foundCollision
[DBG]  agent 103 => updateCollidingPairs => foundCollision
[DBG]  agent 119 => updateCollidingPairs => foundCollision
[DBG]  agent 121 => updateCollidingPairs => foundCollision
[DBG]  agent 128 => updateCollidingPairs => foundCollision
[DBG]  agent 131 => updateCollidingPairs => foundCollision
[DBG]  agent 135 => updateCollidingPairs => foundCollision
[DBG]  agent 137 => updateCollidingPairs => foundCollision
[DBG]  agent 144 => updateCollidingPairs => foundCollision
[DBG]  Conflicting agent pairs:
[DBG]  agent 2 is in conflict with agent 54
[DBG]  agent 3 is in conflict with agent 54
[DBG]  agent 10 is in conflict with agent 121
[DBG]  agent 20 is in conflict with agent 121
[DBG]  agent 29 is in conflict with agent 36
[DBG]  agent 36 is in conflict with agent 57
[DBG]  agent 36 is in conflict with agent 92
[DBG]  agent 54 is in conflict with agent 94
[DBG]  agent 54 is in conflict with agent 119
[DBG]  agent 54 is in conflict with agent 128
[DBG]  agent 54 is in conflict with agent 131
[DBG]  agent 54 is in conflict with agent 135
[DBG]  agent 54 is in conflict with agent 137
[DBG]  agent 54 is in conflict with agent 144
[DBG]  agent 59 is in conflict with agent 121
[DBG]  agent 65 is in conflict with agent 121
[DBG]  agent 87 is in conflict with agent 121
[DBG]  agent 101 is in conflict with agent 121
[DBG]  agent 103 is in conflict with agent 121
[DBG]  buildCollisionData() => sum_of_costs=4426, num_of_colliding_pairs=19
[DBG]  buildCollisionData done => sum_of_costs=4426, num_of_colliding_pairs=19
[DBG]  sum_of_cost hodnota: 4426
[DBG]  After skip/init build => iteration_stats.back(): sum_of_costs=4426, collisions=19
[DEBUG] Using default neighbor generation strategy for conflicts: 0
[DEBUG] Using default neighbor generation strategy for conflicts: 1
	InitLNS(PP): runtime = 0.0132878, iterations = 3, colliding pairs = 0, initial colliding pairs = 19, solution cost = 4476, initial solution cost = 4426, failed iterations = 0
[DBG]  init_lns->sum_of_costs after init_lns->run: 4476
[DBG]  sum_of_costs after assignment from init_lns->run: 4476
[DBG]  Recomputing sum_of_cost by dividing neighbor.sum_of_costs and neighbor.old_sum_of_costs
[STAT] sum_of_costs after recomputation: 4476
[STAT] Iteration 7
[DBG]  Using SAT operator (destroy+repair SAT).
[DBG]  ====================
[DBG]  SAT destroy operator called.
[DBG]  SAT heuristic: 2
[DBG]  key_agent_id: 19
[DBG]  key_agent_id global path length: 31
[DBG]  Submap content (global positions):
[DBG]  616 617 618 619 620 
[DBG]  648 649 650 651 652 
[DBG]  680 681 682 683 684 
[DBG]  712 713 714 715 716 
[DBG]  744 745 746 747 748 
[DBG]  Map content with agents and obstacles:
[DBG]  . . X A . 
[DBG]  . . . A X 
[DBG]  . X A A . 
[DBG]  . . . . X 
[DBG]  . . . A . 
[DBG]  content of the map structure that we pass to the SAT solver:
[DBG]  1  1  -1  1  1  
[DBG]  1  1  1  1  -1  
[DBG]  1  -1  1  1  1  
[DBG]  1  1  1  1  -1  
[DBG]  1  1  1  1  1  
[DBG]  Identifying agents in a submap for rescheduling (when key_agent is there at the time 28):
[DBG]  Agent 19 found intervals in the sub-map:
[DBG]   [25..30]
[DBG]  Agent 19 (interval in submap: [25..30]) contains time 28, added to replan.
[DBG]  Agent 43 found intervals in the sub-map:
[DBG]   [27..32]
[DBG]  Agent 43 (interval in submap: [27..32]) contains time 28, added to replan.
[DBG]  Agent 65 found intervals in the sub-map:
[DBG]   [26..30]
[DBG]  Agent 65 (interval in submap: [26..30]) contains time 28, added to replan.
[DBG]  Agent 106 found intervals in the sub-map:
[DBG]   [22..32]
[DBG]  Agent 106 (interval in submap: [22..32]) contains time 28, added to replan.
[DBG]  Agent 130 found intervals in the sub-map:
[DBG]   [15..30]
[DBG]  Agent 130 (interval in submap: [15..30]) contains time 28, added to replan.
[DBG]  Agent 19 | Start (global): 682 -> (local): (2, 2) at time 28 | Goal (global): 683 -> (local): (2, 3) at time 30
[DBG]  Agent 43 | Start (global): 619 -> (local): (0, 3) at time 28 | Goal (global): 648 -> (local): (1, 0) at time 32
[DBG]  Agent 65 | Start (global): 683 -> (local): (2, 3) at time 28 | Goal (global): 747 -> (local): (4, 3) at time 30
[DBG]  Agent 106 | Start (global): 747 -> (local): (4, 3) at time 28 | Goal (global): 715 -> (local): (3, 3) at time 32
[DBG]  Agent 130 | Start (global): 651 -> (local): (1, 3) at time 28 | Goal (global): 651 -> (local): (1, 3) at time 30
[DBG]  [REPAIR] SAT destroy operator called.
[DBG]  [REPAIR] SAT operator â€“ launching subproblem FOR OPTIMIZATION.
[DBG]  Creating local paths (sx, sy) in the submap for T_sync = 28
[DBG]    Agent 19 (global paths from T=28 to 30) has local path: (2,2) (2,2) (2,3) 
[DBG]    Agent 43 (global paths from T=28 to 32) has local path: (0,3) (1,3) (1,2) (1,1) (1,0) 
[DBG]    Agent 65 (global paths from T=28 to 30) has local path: (2,3) (3,3) (4,3) 
[DBG]    Agent 106 (global paths from T=28 to 32) has local path: (4,3) (4,4) (4,4) (4,3) (3,3) 
[DBG]    Agent 130 (global paths from T=28 to 30) has local path: (1,3) (2,3) (1,3) 
[DBG]  Checking input data for SAT solver:
[DBG]    - Number of agents to replan: 5
[DBG]  Agent 19 has the original local path length: 3 => Start (2,2), Goal (2,3)
[DBG]  Agent 43 has the original local path length: 5 => Start (0,3), Goal (1,0)
[DBG]  Agent 65 has the original local path length: 3 => Start (2,3), Goal (4,3)
[DBG]  Agent 106 has the original local path length: 5 => Start (4,3), Goal (3,3)
[DBG]  Agent 130 has the original local path length: 3 => Start (1,3), Goal (1,3)
[DBG]  Start position: (2, 2), (0, 3), (2, 3), (4, 3), (1, 3), 
[DBG]  Goal position: (2, 3), (1, 0), (4, 3), (3, 3), (1, 3), 
[DBG]  SAT instance and solver created.
Currently solving
Instance name: scen
Map name: map
Encoding used: disappear_at_goal
SAT solver used: Kissat
Optimizing function: sum of costs
Number of agents: 5
Mks LB: 5
SoC LB: 13
Delta: 0
Remaining time: 300000 [ms]

[STAT] Solver returned: -1
[DBG]  SAT solver failed.
[STAT] SAT solver failed to find a valid solution.
[DBG]  ====================
[DBG]  SAT destroy operator called.
[DBG]  SAT heuristic: 2
[DBG]  key_agent_id: 19
[DBG]  key_agent_id global path length: 31
[DBG]  Submap content (global positions):
[DBG]  621 622 623 624 625 
[DBG]  653 654 655 656 657 
[DBG]  685 686 687 688 689 
[DBG]  717 718 719 720 721 
[DBG]  749 750 751 752 753 
[DBG]  Map content with agents and obstacles:
[DBG]  X A . X . 
[DBG]  A . . . A 
[DBG]  . . A . . 
[DBG]  . . . . . 
[DBG]  X A A A A 
[DBG]  content of the map structure that we pass to the SAT solver:
[DBG]  -1  1  1  -1  1  
[DBG]  1  1  1  1  1  
[DBG]  1  1  1  1  1  
[DBG]  1  1  1  1  1  
[DBG]  -1  1  1  1  1  
[DBG]  Identifying agents in a submap for rescheduling (when key_agent is there at the time 13):
[DBG]  Agent 19 found intervals in the sub-map:
[DBG]   [0..0] [4..20]
[DBG]  Agent 19 (interval in submap: [4..20]) contains time 13, added to replan.
[DBG]  Agent 27 found intervals in the sub-map:
[DBG]   [0..14]
[DBG]  Agent 27 (interval in submap: [0..14]) contains time 13, added to replan.
[DBG]  Agent 56 found intervals in the sub-map:
[DBG]   [12..17]
[DBG]  Agent 56 (interval in submap: [12..17]) contains time 13, added to replan.
[DBG]  Agent 61 found intervals in the sub-map:
[DBG]   [9..13]
[DBG]  Agent 61 (interval in submap: [9..13]) contains time 13, added to replan.
[DBG]  Agent 62 found intervals in the sub-map:
[DBG]   [0..20]
[DBG]  Agent 62 (interval in submap: [0..20]) contains time 13, added to replan.
[DBG]  Agent 63 found intervals in the sub-map:
[DBG]   [0..15]
[DBG]  Agent 63 (interval in submap: [0..15]) contains time 13, added to replan.
[DBG]  Agent 74 found intervals in the sub-map:
[DBG]   [0..18]
[DBG]  Agent 74 (interval in submap: [0..18]) contains time 13, added to replan.
[DBG]  Agent 114 found intervals in the sub-map:
[DBG]   [13..17]
[DBG]  Agent 114 (interval in submap: [13..17]) contains time 13, added to replan.
[DBG]  Agent 130 found intervals in the sub-map:
[DBG]  
[DBG]  Agent 130 is not in sub-map at time 13 (intervals: 
[DBG]  )
[DBG]  Agent 19 | Start (global): 687 -> (local): (2, 2) at time 13 | Goal (global): 622 -> (local): (0, 1) at time 20
[DBG]  Agent 27 | Start (global): 750 -> (local): (4, 1) at time 13 | Goal (global): 751 -> (local): (4, 2) at time 14
[DBG]  Agent 56 | Start (global): 653 -> (local): (1, 0) at time 13 | Goal (global): 657 -> (local): (1, 4) at time 17
[DBG]  Agent 61 | Start (global): 657 -> (local): (1, 4) at time 13 | Goal (global): 657 -> (local): (1, 4) at time 13
[DBG]  Agent 62 | Start (global): 753 -> (local): (4, 4) at time 13 | Goal (global): 625 -> (local): (0, 4) at time 20
[DBG]  Agent 63 | Start (global): 622 -> (local): (0, 1) at time 13 | Goal (global): 622 -> (local): (0, 1) at time 15
[DBG]  Agent 74 | Start (global): 752 -> (local): (4, 3) at time 13 | Goal (global): 657 -> (local): (1, 4) at time 18
[DBG]  Agent 114 | Start (global): 751 -> (local): (4, 2) at time 13 | Goal (global): 623 -> (local): (0, 2) at time 17
[DBG]  [REPAIR] SAT destroy operator called.
[DBG]  [REPAIR] SAT operator â€“ launching subproblem FOR OPTIMIZATION.
[DBG]  Creating local paths (sx, sy) in the submap for T_sync = 13
[DBG]    Agent 19 (global paths from T=13 to 20) has local path: (2,2) (1,2) (0,2) (0,1) (0,1) (0,2) (0,2) (0,1) 
[DBG]    Agent 27 (global paths from T=13 to 14) has local path: (4,1) (4,2) 
[DBG]    Agent 56 (global paths from T=13 to 17) has local path: (1,0) (1,1) (1,2) (1,3) (1,4) 
[DBG]    Agent 61 (global paths from T=13 to 13) has local path: (1,4) 
[DBG]    Agent 62 (global paths from T=13 to 20) has local path: (4,4) (4,3) (3,3) (3,3) (2,3) (1,3) (1,4) (0,4) 
[DBG]    Agent 63 (global paths from T=13 to 15) has local path: (0,1) (0,1) (0,1) 
[DBG]    Agent 74 (global paths from T=13 to 18) has local path: (4,3) (3,3) (2,3) (2,3) (1,3) (1,4) 
[DBG]    Agent 114 (global paths from T=13 to 17) has local path: (4,2) (3,2) (2,2) (1,2) (0,2) 
[DBG]  Checking input data for SAT solver:
[DBG]    - Number of agents to replan: 8
[DBG]  Agent 19 has the original local path length: 8 => Start (2,2), Goal (0,1)
[DBG]  Agent 27 has the original local path length: 2 => Start (4,1), Goal (4,2)
[DBG]  Agent 56 has the original local path length: 5 => Start (1,0), Goal (1,4)
[DBG]  Agent 61 has the original local path length: 1 => Start (1,4), Goal (1,4)
[DBG]  Agent 62 has the original local path length: 8 => Start (4,4), Goal (0,4)
[DBG]  Agent 63 has the original local path length: 3 => Start (0,1), Goal (0,1)
[DBG]  Agent 74 has the original local path length: 6 => Start (4,3), Goal (1,4)
[DBG]  Agent 114 has the original local path length: 5 => Start (4,2), Goal (0,2)
[DBG]  Start position: (2, 2), (4, 1), (1, 0), (1, 4), (4, 4), (0, 1), (4, 3), (4, 2), 
[DBG]  Goal position: (0, 1), (4, 2), (1, 4), (1, 4), (0, 4), (0, 1), (1, 4), (0, 2), 
[DBG]  SAT instance and solver created.
Currently solving
Instance name: scen
Map name: map
Encoding used: disappear_at_goal
SAT solver used: Kissat
Optimizing function: sum of costs
Number of agents: 8
Mks LB: 5
SoC LB: 28
Delta: 0
Remaining time: 300000 [ms]

[STAT] Solver returned: -1
[DBG]  SAT solver failed.
[STAT] SAT solver failed to find a valid solution.
[DBG]  ====================
[DBG]  SAT destroy operator called.
[DBG]  SAT heuristic: 2
[DBG]  key_agent_id: 19
[DBG]  key_agent_id global path length: 31
[DBG]  Submap content (global positions):
[DBG]  591 592 593 594 595 
[DBG]  623 624 625 626 627 
[DBG]  655 656 657 658 659 
[DBG]  687 688 689 690 691 
[DBG]  719 720 721 722 723 
[DBG]  Map content with agents and obstacles:
[DBG]  A A . . X 
[DBG]  . X A X . 
[DBG]  A . A A . 
[DBG]  . . . X . 
[DBG]  . A . . X 
[DBG]  content of the map structure that we pass to the SAT solver:
[DBG]  1  1  1  1  -1  
[DBG]  1  -1  1  -1  1  
[DBG]  1  1  1  1  1  
[DBG]  1  1  1  -1  1  
[DBG]  1  1  1  1  -1  
[DBG]  Identifying agents in a submap for rescheduling (when key_agent is there at the time 10):
[DBG]  Agent 19 found intervals in the sub-map:
[DBG]   [0..15] [18..19]
[DBG]  Agent 19 (interval in submap: [0..15]) contains time 10, added to replan.
[DBG]  Agent 27 found intervals in the sub-map:
[DBG]  
[DBG]  Agent 27 is not in sub-map at time 10 (intervals: 
[DBG]  )
[DBG]  Agent 54 found intervals in the sub-map:
[DBG]   [5..13]
[DBG]  Agent 54 (interval in submap: [5..13]) contains time 10, added to replan.
[DBG]  Agent 61 found intervals in the sub-map:
[DBG]   [10..16]
[DBG]  Agent 61 (interval in submap: [10..16]) contains time 10, added to replan.
[DBG]  Agent 63 found intervals in the sub-map:
[DBG]   [0..10]
[DBG]  Agent 63 (interval in submap: [0..10]) contains time 10, added to replan.
[DBG]  Agent 84 found intervals in the sub-map:
[DBG]   [6..11]
[DBG]  Agent 84 (interval in submap: [6..11]) contains time 10, added to replan.
[DBG]  Agent 86 found intervals in the sub-map:
[DBG]   [5..12]
[DBG]  Agent 86 (interval in submap: [5..12]) contains time 10, added to replan.
[DBG]  Agent 88 found intervals in the sub-map:
[DBG]   [5..10]
[DBG]  Agent 88 (interval in submap: [5..10]) contains time 10, added to replan.
[DBG]  Agent 19 | Start (global): 657 -> (local): (2, 2) at time 10 | Goal (global): 623 -> (local): (1, 0) at time 15
[DBG]  Agent 54 | Start (global): 625 -> (local): (1, 2) at time 10 | Goal (global): 659 -> (local): (2, 4) at time 13
[DBG]  Agent 61 | Start (global): 720 -> (local): (4, 1) at time 10 | Goal (global): 627 -> (local): (1, 4) at time 16
[DBG]  Agent 63 | Start (global): 655 -> (local): (2, 0) at time 10 | Goal (global): 655 -> (local): (2, 0) at time 10
[DBG]  Agent 84 | Start (global): 591 -> (local): (0, 0) at time 10 | Goal (global): 592 -> (local): (0, 1) at time 11
[DBG]  Agent 86 | Start (global): 658 -> (local): (2, 3) at time 10 | Goal (global): 627 -> (local): (1, 4) at time 12
[DBG]  Agent 88 | Start (global): 592 -> (local): (0, 1) at time 10 | Goal (global): 592 -> (local): (0, 1) at time 10
[DBG]  [REPAIR] SAT destroy operator called.
[DBG]  [REPAIR] SAT operator â€“ launching subproblem FOR OPTIMIZATION.
[DBG]  Creating local paths (sx, sy) in the submap for T_sync = 10
[DBG]    Agent 19 (global paths from T=10 to 15) has local path: (2,2) (3,2) (3,1) (3,0) (2,0) (1,0) 
[DBG]    Agent 54 (global paths from T=10 to 13) has local path: (1,2) (2,2) (2,3) (2,4) 
[DBG]    Agent 61 (global paths from T=10 to 16) has local path: (4,1) (4,2) (3,2) (2,2) (2,3) (2,4) (1,4) 
[DBG]    Agent 63 (global paths from T=10 to 10) has local path: (2,0) 
[DBG]    Agent 84 (global paths from T=10 to 11) has local path: (0,0) (0,1) 
[DBG]    Agent 86 (global paths from T=10 to 12) has local path: (2,3) (2,4) (1,4) 
[DBG]    Agent 88 (global paths from T=10 to 10) has local path: (0,1) 
[DBG]  Checking input data for SAT solver:
[DBG]    - Number of agents to replan: 7
[DBG]  Agent 19 has the original local path length: 6 => Start (2,2), Goal (1,0)
[DBG]  Agent 54 has the original local path length: 4 => Start (1,2), Goal (2,4)
[DBG]  Agent 61 has the original local path length: 7 => Start (4,1), Goal (1,4)
[DBG]  Agent 63 has the original local path length: 1 => Start (2,0), Goal (2,0)
[DBG]  Agent 84 has the original local path length: 2 => Start (0,0), Goal (0,1)
[DBG]  Agent 86 has the original local path length: 3 => Start (2,3), Goal (1,4)
[DBG]  Agent 88 has the original local path length: 1 => Start (0,1), Goal (0,1)
[DBG]  Start position: (2, 2), (1, 2), (4, 1), (2, 0), (0, 0), (2, 3), (0, 1), 
[DBG]  Goal position: (1, 0), (2, 4), (1, 4), (2, 0), (0, 1), (1, 4), (0, 1), 
[DBG]  SAT instance and solver created.
Currently solving
Instance name: scen
Map name: map
Encoding used: disappear_at_goal
SAT solver used: Kissat
Optimizing function: sum of costs
Number of agents: 7
Mks LB: 7
SoC LB: 22
Delta: 0
Remaining time: 300000 [ms]

Vertex conflict! Agents 0, 1, timestep 4, location 0
Swapping conflict! Agents 0, 1, timestep 4, edge (0,0)
Vertex conflict! Agents 0, 1, timestep 5, location 0
Swapping conflict! Agents 0, 1, timestep 5, edge (0,0)
Vertex conflict! Agents 0, 1, timestep 6, location 0
Vertex conflict! Agents 0, 3, timestep 4, location 0
Swapping conflict! Agents 0, 3, timestep 4, edge (0,0)
Vertex conflict! Agents 0, 3, timestep 5, location 0
Swapping conflict! Agents 0, 3, timestep 5, edge (0,0)
Vertex conflict! Agents 0, 3, timestep 6, location 0
Vertex conflict! Agents 0, 4, timestep 4, location 0
Swapping conflict! Agents 0, 4, timestep 4, edge (0,0)
Vertex conflict! Agents 0, 4, timestep 5, location 0
Swapping conflict! Agents 0, 4, timestep 5, edge (0,0)
Vertex conflict! Agents 0, 4, timestep 6, location 0
Vertex conflict! Agents 0, 5, timestep 4, location 0
Swapping conflict! Agents 0, 5, timestep 4, edge (0,0)
Vertex conflict! Agents 0, 5, timestep 5, location 0
Swapping conflict! Agents 0, 5, timestep 5, edge (0,0)
Vertex conflict! Agents 0, 5, timestep 6, location 0
Vertex conflict! Agents 0, 6, timestep 4, location 0
Swapping conflict! Agents 0, 6, timestep 4, edge (0,0)
Vertex conflict! Agents 0, 6, timestep 5, location 0
Swapping conflict! Agents 0, 6, timestep 5, edge (0,0)
Vertex conflict! Agents 0, 6, timestep 6, location 0
Vertex conflict! Agents 1, 3, timestep 4, location 0
Swapping conflict! Agents 1, 3, timestep 4, edge (0,0)
Vertex conflict! Agents 1, 3, timestep 5, location 0
Swapping conflict! Agents 1, 3, timestep 5, edge (0,0)
Vertex conflict! Agents 1, 3, timestep 6, location 0
Vertex conflict! Agents 1, 4, timestep 4, location 0
Swapping conflict! Agents 1, 4, timestep 4, edge (0,0)
Vertex conflict! Agents 1, 4, timestep 5, location 0
Swapping conflict! Agents 1, 4, timestep 5, edge (0,0)
Vertex conflict! Agents 1, 4, timestep 6, location 0
Vertex conflict! Agents 1, 5, timestep 4, location 0
Swapping conflict! Agents 1, 5, timestep 4, edge (0,0)
Vertex conflict! Agents 1, 5, timestep 5, location 0
Swapping conflict! Agents 1, 5, timestep 5, edge (0,0)
Vertex conflict! Agents 1, 5, timestep 6, location 0
Vertex conflict! Agents 1, 6, timestep 4, location 0
Swapping conflict! Agents 1, 6, timestep 4, edge (0,0)
Vertex conflict! Agents 1, 6, timestep 5, location 0
Swapping conflict! Agents 1, 6, timestep 5, edge (0,0)
Vertex conflict! Agents 1, 6, timestep 6, location 0
Vertex conflict! Agents 3, 4, timestep 2, location 0
Swapping conflict! Agents 3, 4, timestep 2, edge (0,0)
Vertex conflict! Agents 3, 4, timestep 3, location 0
Swapping conflict! Agents 3, 4, timestep 3, edge (0,0)
Vertex conflict! Agents 3, 4, timestep 4, location 0
Swapping conflict! Agents 3, 4, timestep 4, edge (0,0)
Vertex conflict! Agents 3, 4, timestep 5, location 0
Swapping conflict! Agents 3, 4, timestep 5, edge (0,0)
Vertex conflict! Agents 3, 4, timestep 6, location 0
Vertex conflict! Agents 3, 5, timestep 3, location 0
Swapping conflict! Agents 3, 5, timestep 3, edge (0,0)
Vertex conflict! Agents 3, 5, timestep 4, location 0
Swapping conflict! Agents 3, 5, timestep 4, edge (0,0)
Vertex conflict! Agents 3, 5, timestep 5, location 0
Swapping conflict! Agents 3, 5, timestep 5, edge (0,0)
Vertex conflict! Agents 3, 5, timestep 6, location 0
Vertex conflict! Agents 3, 6, timestep 1, location 0
Swapping conflict! Agents 3, 6, timestep 1, edge (0,0)
Vertex conflict! Agents 3, 6, timestep 2, location 0
Swapping conflict! Agents 3, 6, timestep 2, edge (0,0)
Vertex conflict! Agents 3, 6, timestep 3, location 0
Swapping conflict! Agents 3, 6, timestep 3, edge (0,0)
Vertex conflict! Agents 3, 6, timestep 4, location 0
Swapping conflict! Agents 3, 6, timestep 4, edge (0,0)
Vertex conflict! Agents 3, 6, timestep 5, location 0
Swapping conflict! Agents 3, 6, timestep 5, edge (0,0)
Vertex conflict! Agents 3, 6, timestep 6, location 0
Vertex conflict! Agents 4, 5, timestep 3, location 0
Swapping conflict! Agents 4, 5, timestep 3, edge (0,0)
Vertex conflict! Agents 4, 5, timestep 4, location 0
Swapping conflict! Agents 4, 5, timestep 4, edge (0,0)
Vertex conflict! Agents 4, 5, timestep 5, location 0
Swapping conflict! Agents 4, 5, timestep 5, edge (0,0)
Vertex conflict! Agents 4, 5, timestep 6, location 0
Swapping conflict! Agents 4, 6, timestep 0, edge (0,1)
Vertex conflict! Agents 4, 6, timestep 2, location 0
Swapping conflict! Agents 4, 6, timestep 2, edge (0,0)
Vertex conflict! Agents 4, 6, timestep 3, location 0
Swapping conflict! Agents 4, 6, timestep 3, edge (0,0)
Vertex conflict! Agents 4, 6, timestep 4, location 0
Swapping conflict! Agents 4, 6, timestep 4, edge (0,0)
Vertex conflict! Agents 4, 6, timestep 5, location 0
Swapping conflict! Agents 4, 6, timestep 5, edge (0,0)
Vertex conflict! Agents 4, 6, timestep 6, location 0
Vertex conflict! Agents 5, 6, timestep 3, location 0
Swapping conflict! Agents 5, 6, timestep 3, edge (0,0)
Vertex conflict! Agents 5, 6, timestep 4, location 0
Swapping conflict! Agents 5, 6, timestep 4, edge (0,0)
Vertex conflict! Agents 5, 6, timestep 5, location 0
Swapping conflict! Agents 5, 6, timestep 5, edge (0,0)
Vertex conflict! Agents 5, 6, timestep 6, location 0
Found plan [agents = 7] [timesteps = 7]
Agent #0 : 9 8 7 4 0 0 0 
Agent #1 : 5 9 10 11 0 0 0 
Agent #2 : 17 18 14 9 10 11 6 
Agent #3 : 7 0 0 0 0 0 0 
Agent #4 : 0 1 0 0 0 0 0 
Agent #5 : 10 11 6 0 0 0 0 
Agent #6 : 1 0 0 0 0 0 0 

[STAT] Solver returned: 0
[DBG]  Agent (index) 19 | New local path (submap idx):
[DBG]  9 8 7 4 
[DBG]  Agent (index) 54 | New local path (submap idx):
[DBG]  5 9 10 11 
[DBG]  Agent (index) 61 | New local path (submap idx):
[DBG]  17 18 14 9 10 11 6 
[DBG]  Agent (index) 63 | New local path (submap idx):
[DBG]  7 
[DBG]  Agent (index) 84 | New local path (submap idx):
[DBG]  0 1 
[DBG]  Agent (index) 86 | New local path (submap idx):
[DBG]  10 11 6 
[DBG]  Agent (index) 88 | New local path (submap idx):
[DBG]  1 
[DBG]  Update the agent path 19 | Original local length: 6 | New local length: 4
[DBG]  agent 19 t=0 => decoded (sx,sy)=(2,2) => global_id=657
[DBG]  agent 19 t=1 => decoded (sx,sy)=(2,1) => global_id=656
[DBG]  agent 19 t=2 => decoded (sx,sy)=(2,0) => global_id=655
[DBG]  agent 19 t=3 => decoded (sx,sy)=(1,0) => global_id=623
[DBG]  Complete path of agent 19:
[DBG]    Original: 625 593 592 593 625 625 625 625 625 625 657 689 688 687 655 623 622 622 623 623 622 590 589 588 587 619 651 683 682 682 683 
[DBG]    New:     625 593 592 593 625 625 625 625 625 625 657 656 655 623 622 622 623 623 622 590 589 588 587 619 651 683 682 682 683 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 625 593 592 593 625 625 625 625 625 625 
[DBG]    Local path (in submap): 657 656 655 623 622 622 
[DBG]    Suffix (out of submap): 623 623 622 590 589 588 587 619 651 683 682 682 683 
[DBG]  Original agent path length 19 je: 31
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 0: 625, 593, 592, 593, 625, 625, 625, 625, 625, 625, 657, 656, 655, 623, 622, 622, 623, 623, 622, 590, 589, 588, 587, 619, 651, 683, 682, 682, 683, 
[DBG]  Path for agent 19 updated, resulting length: 29
[DBG]  Update the agent path 54 | Original local length: 4 | New local length: 4
[DBG]  agent 54 t=0 => decoded (sx,sy)=(1,2) => global_id=625
[DBG]  agent 54 t=1 => decoded (sx,sy)=(2,2) => global_id=657
[DBG]  agent 54 t=2 => decoded (sx,sy)=(2,3) => global_id=658
[DBG]  agent 54 t=3 => decoded (sx,sy)=(2,4) => global_id=659
[DBG]  Complete path of agent 54:
[DBG]    Original: 464 496 528 529 561 593 593 593 593 593 625 657 658 659 660 628 629 597 565 533 534 502 503 504 472 473 474 475 507 539 571 
[DBG]    New:     464 496 528 529 561 593 593 593 593 593 625 657 658 659 660 628 629 597 565 533 534 502 503 504 472 473 474 475 507 539 571 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 464 496 528 529 561 593 593 593 593 593 
[DBG]    Local path (in submap): 625 657 658 659 
[DBG]    Suffix (out of submap): 660 628 629 597 565 533 534 502 503 504 472 473 474 475 507 539 571 
[DBG]  Original agent path length 54 je: 31
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 1: 464, 496, 528, 529, 561, 593, 593, 593, 593, 593, 625, 657, 658, 659, 660, 628, 629, 597, 565, 533, 534, 502, 503, 504, 472, 473, 474, 475, 507, 539, 571, 
[DBG]  Path for agent 54 updated, resulting length: 31
[DBG]  Update the agent path 61 | Original local length: 7 | New local length: 7
[DBG]  agent 61 t=0 => decoded (sx,sy)=(4,1) => global_id=720
[DBG]  agent 61 t=1 => decoded (sx,sy)=(4,2) => global_id=721
[DBG]  agent 61 t=2 => decoded (sx,sy)=(3,2) => global_id=689
[DBG]  agent 61 t=3 => decoded (sx,sy)=(2,2) => global_id=657
[DBG]  agent 61 t=4 => decoded (sx,sy)=(2,3) => global_id=658
[DBG]  agent 61 t=5 => decoded (sx,sy)=(2,4) => global_id=659
[DBG]  agent 61 t=6 => decoded (sx,sy)=(1,4) => global_id=627
[DBG]  Complete path of agent 61:
[DBG]    Original: 813 813 813 845 846 847 815 783 784 752 720 721 689 657 658 659 627 628 596 597 565 533 534 502 503 504 472 473 474 475 443 411 411 411 411 411 379 378 377 377 377 345 313 
[DBG]    New:     813 813 813 845 846 847 815 783 784 752 720 721 689 657 658 659 627 628 596 597 565 533 534 502 503 504 472 473 474 475 443 411 411 411 411 411 379 378 377 377 377 345 313 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 813 813 813 845 846 847 815 783 784 752 
[DBG]    Local path (in submap): 720 721 689 657 658 659 627 
[DBG]    Suffix (out of submap): 628 596 597 565 533 534 502 503 504 472 473 474 475 443 411 411 411 411 411 379 378 377 377 377 345 313 
[DBG]  Original agent path length 61 je: 43
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 2: 813, 813, 813, 845, 846, 847, 815, 783, 784, 752, 720, 721, 689, 657, 658, 659, 627, 628, 596, 597, 565, 533, 534, 502, 503, 504, 472, 473, 474, 475, 443, 411, 411, 411, 411, 411, 379, 378, 377, 377, 377, 345, 313, 
[DBG]  Path for agent 61 updated, resulting length: 43
[DBG]  Update the agent path 63 | Original local length: 1 | New local length: 1
[DBG]  agent 63 t=0 => decoded (sx,sy)=(2,0) => global_id=655
[DBG]  Complete path of agent 63:
[DBG]    Original: 689 689 689 689 689 657 656 656 656 655 655 654 622 622 622 622 590 589 588 556 524 492 460 428 427 395 363 331 299 267 268 269 270 271 303 302 
[DBG]    New:     689 689 689 689 689 657 656 656 656 655 655 654 622 622 622 622 590 589 588 556 524 492 460 428 427 395 363 331 299 267 268 269 270 271 303 302 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 689 689 689 689 689 657 656 656 656 655 
[DBG]    Local path (in submap): 655 
[DBG]    Suffix (out of submap): 654 622 622 622 622 590 589 588 556 524 492 460 428 427 395 363 331 299 267 268 269 270 271 303 302 
[DBG]  Original agent path length 63 je: 36
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 3: 689, 689, 689, 689, 689, 657, 656, 656, 656, 655, 655, 654, 622, 622, 622, 622, 590, 589, 588, 556, 524, 492, 460, 428, 427, 395, 363, 331, 299, 267, 268, 269, 270, 271, 303, 302, 
[DBG]  Path for agent 63 updated, resulting length: 36
[DBG]  Update the agent path 84 | Original local length: 2 | New local length: 2
[DBG]  agent 84 t=0 => decoded (sx,sy)=(0,0) => global_id=591
[DBG]  agent 84 t=1 => decoded (sx,sy)=(0,1) => global_id=592
[DBG]  Complete path of agent 84:
[DBG]    Original: 878 879 847 815 783 751 719 687 655 623 591 592 560 528 496 464 432 400 368 336 337 338 306 274 275 243 244 212 180 148 149 150 118 86 54 55 56 24 25 
[DBG]    New:     878 879 847 815 783 751 719 687 655 623 591 592 560 528 496 464 432 400 368 336 337 338 306 274 275 243 244 212 180 148 149 150 118 86 54 55 56 24 25 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 878 879 847 815 783 751 719 687 655 623 
[DBG]    Local path (in submap): 591 592 
[DBG]    Suffix (out of submap): 560 528 496 464 432 400 368 336 337 338 306 274 275 243 244 212 180 148 149 150 118 86 54 55 56 24 25 
[DBG]  Original agent path length 84 je: 39
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 4: 878, 879, 847, 815, 783, 751, 719, 687, 655, 623, 591, 592, 560, 528, 496, 464, 432, 400, 368, 336, 337, 338, 306, 274, 275, 243, 244, 212, 180, 148, 149, 150, 118, 86, 54, 55, 56, 24, 25, 
[DBG]  Path for agent 84 updated, resulting length: 39
[DBG]  Update the agent path 86 | Original local length: 3 | New local length: 3
[DBG]  agent 86 t=0 => decoded (sx,sy)=(2,3) => global_id=658
[DBG]  agent 86 t=1 => decoded (sx,sy)=(2,4) => global_id=659
[DBG]  agent 86 t=2 => decoded (sx,sy)=(1,4) => global_id=627
[DBG]  Complete path of agent 86:
[DBG]    Original: 781 782 750 718 686 687 688 689 689 657 658 659 627 628 596 597 565 566 534 502 503 504 505 506 538 539 540 541 
[DBG]    New:     781 782 750 718 686 687 688 689 689 657 658 659 627 628 596 597 565 566 534 502 503 504 505 506 538 539 540 541 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 781 782 750 718 686 687 688 689 689 657 
[DBG]    Local path (in submap): 658 659 627 
[DBG]    Suffix (out of submap): 628 596 597 565 566 534 502 503 504 505 506 538 539 540 541 
[DBG]  Original agent path length 86 je: 28
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 5: 781, 782, 750, 718, 686, 687, 688, 689, 689, 657, 658, 659, 627, 628, 596, 597, 565, 566, 534, 502, 503, 504, 505, 506, 538, 539, 540, 541, 
[DBG]  Path for agent 86 updated, resulting length: 28
[DBG]  Update the agent path 88 | Original local length: 1 | New local length: 1
[DBG]  agent 88 t=0 => decoded (sx,sy)=(0,1) => global_id=592
[DBG]  Complete path of agent 88:
[DBG]    Original: 783 783 782 750 718 719 687 655 623 591 592 560 528 496 464 432 400 368 336 335 303 271 239 240 241 209 
[DBG]    New:     783 783 782 750 718 719 687 655 623 591 592 560 528 496 464 432 400 368 336 335 303 271 239 240 241 209 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 783 783 782 750 718 719 687 655 623 591 
[DBG]    Local path (in submap): 592 
[DBG]    Suffix (out of submap): 560 528 496 464 432 400 368 336 335 303 271 239 240 241 209 
[DBG]  Original agent path length 88 je: 26
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 6: 783, 783, 782, 750, 718, 719, 687, 655, 623, 591, 592, 560, 528, 496, 464, 432, 400, 368, 336, 335, 303, 271, 239, 240, 241, 209, 
[DBG]  Path for agent 88 updated, resulting length: 26
[DBG]  Paths successfully updated.
[DBG]  (LNS.cpp) New path for agent 19: 
[DBG]  625, 593, 592, 593, 625, 625, 625, 625, 625, 625, 657, 656, 655, 623, 622, 622, 623, 623, 622, 590, 589, 588, 587, 619, 651, 683, 682, 682, 683, 
[DBG]  (LNS.cpp) New path for agent 54: 
[DBG]  464, 496, 528, 529, 561, 593, 593, 593, 593, 593, 625, 657, 658, 659, 660, 628, 629, 597, 565, 533, 534, 502, 503, 504, 472, 473, 474, 475, 507, 539, 571, 
[DBG]  (LNS.cpp) New path for agent 61: 
[DBG]  813, 813, 813, 845, 846, 847, 815, 783, 784, 752, 720, 721, 689, 657, 658, 659, 627, 628, 596, 597, 565, 533, 534, 502, 503, 504, 472, 473, 474, 475, 443, 411, 411, 411, 411, 411, 379, 378, 377, 377, 377, 345, 313, 
[DBG]  (LNS.cpp) New path for agent 63: 
[DBG]  689, 689, 689, 689, 689, 657, 656, 656, 656, 655, 655, 654, 622, 622, 622, 622, 590, 589, 588, 556, 524, 492, 460, 428, 427, 395, 363, 331, 299, 267, 268, 269, 270, 271, 303, 302, 
[DBG]  (LNS.cpp) New path for agent 84: 
[DBG]  878, 879, 847, 815, 783, 751, 719, 687, 655, 623, 591, 592, 560, 528, 496, 464, 432, 400, 368, 336, 337, 338, 306, 274, 275, 243, 244, 212, 180, 148, 149, 150, 118, 86, 54, 55, 56, 24, 25, 
[DBG]  (LNS.cpp) New path for agent 86: 
[DBG]  781, 782, 750, 718, 686, 687, 688, 689, 689, 657, 658, 659, 627, 628, 596, 597, 565, 566, 534, 502, 503, 504, 505, 506, 538, 539, 540, 541, 
[DBG]  (LNS.cpp) New path for agent 88: 
[DBG]  783, 783, 782, 750, 718, 719, 687, 655, 623, 591, 592, 560, 528, 496, 464, 432, 400, 368, 336, 335, 303, 271, 239, 240, 241, 209, 
[DBG]  component_weights = {0.245321, 0.240414, 0.251413, 0.262852}
[DBG]  opSuccess value: 1
[STAT] neighbor.sum_of_costs before recomputation: 225
[STAT] neighbor.old_sum_of_costs before recomputation: 227
[STAT] sum_of_costs before recomputation: 4476
[DBG]  Validate solution immediately after SAT success.
[WARNING] Problem after SAT: Vertex conflict between agents 19 and 59 at location 587 at timestep 22
[DBG]  Attempting immediate repair via init_lns because problem occurred after SAT (should be applied only for conflicts...).
[DBG]  Passing 150 agents to init_lns (skip=true).
[DBG]  path_table contents for selected agents (neighbor.agents):
[DBG]    Agent 19 => controlling path length=29
[DBG]    Agent 54 => controlling path length=31
[DBG]    Agent 61 => controlling path length=43
[DBG]    Agent 63 => controlling path length=36
[DBG]    Agent 84 => controlling path length=39
[DBG]    Agent 86 => controlling path length=28
[DBG]    Agent 88 => controlling path length=26
[DBG]  hodnota skip_initial_solution=1
[DBG]  We skip initialSolution => call buildCollisionData()
[DBG]  buildCollisionData() called â€“ skip_initial_solution case.
[DBG]  Agents.size()=150, collision_graph.size()=150
[DBG]  agent 19 => updateCollidingPairs => foundCollision
[DBG]  agent 59 => updateCollidingPairs => foundCollision
[DBG]  agent 63 => updateCollidingPairs => foundCollision
[DBG]  agent 65 => updateCollidingPairs => foundCollision
[DBG]  agent 106 => updateCollidingPairs => foundCollision
[DBG]  agent 114 => updateCollidingPairs => foundCollision
[DBG]  agent 130 => updateCollidingPairs => foundCollision
[DBG]  Conflicting agent pairs:
[DBG]  agent 19 is in conflict with agent 59
[DBG]  agent 19 is in conflict with agent 63
[DBG]  agent 19 is in conflict with agent 65
[DBG]  agent 19 is in conflict with agent 106
[DBG]  agent 19 is in conflict with agent 114
[DBG]  agent 19 is in conflict with agent 130
[DBG]  buildCollisionData() => sum_of_costs=4474, num_of_colliding_pairs=6
[DBG]  buildCollisionData done => sum_of_costs=4474, num_of_colliding_pairs=6
[DBG]  sum_of_cost hodnota: 4474
[DBG]  After skip/init build => iteration_stats.back(): sum_of_costs=4474, collisions=6
[DEBUG] Using default neighbor generation strategy for conflicts: 1
	InitLNS(PP): runtime = 0.00890742, iterations = 2, colliding pairs = 0, initial colliding pairs = 6, solution cost = 4472, initial solution cost = 4474, failed iterations = 0
[DBG]  init_lns->sum_of_costs after init_lns->run: 4472
[DBG]  sum_of_costs after assignment from init_lns->run: 4472
[DBG]  Recomputing sum_of_cost by dividing neighbor.sum_of_costs and neighbor.old_sum_of_costs
[STAT] sum_of_costs after recomputation: 4472
[STAT] Iteration 8
[DBG]  Using SAT operator (destroy+repair SAT).
[DBG]  ====================
[DBG]  SAT destroy operator called.
[DBG]  SAT heuristic: 2
[DBG]  key_agent_id: 102
[DBG]  key_agent_id global path length: 27
[DBG]  Submap content (global positions):
[DBG]  947 948 949 950 951 
[DBG]  979 980 981 982 983 
[DBG]  1011 1012 1013 1014 1015 
[DBG]  -1 -1 -1 -1 -1 
[DBG]  -1 -1 -1 -1 -1 
[DBG]  Map content with agents and obstacles:
[DBG]  X . . . X 
[DBG]  . . . . . 
[DBG]  . . A . . 
[DBG]  X X X X X 
[DBG]  X X X X X 
[DBG]  content of the map structure that we pass to the SAT solver:
[DBG]  -1  1  1  1  -1  
[DBG]  1  1  1  1  1  
[DBG]  1  1  1  1  1  
[DBG]  1  1  1  1  1  
[DBG]  1  1  1  1  1  
[DBG]  Identifying agents in a submap for rescheduling (when key_agent is there at the time 15):
[DBG]  Agent 102 found intervals in the sub-map:
[DBG]   [13..20]
[DBG]  Agent 102 (interval in submap: [13..20]) contains time 15, added to replan.
[DBG]  Agent 102 | Start (global): 1013 -> (local): (2, 2) at time 15 | Goal (global): 950 -> (local): (0, 3) at time 20
[DBG]  [REPAIR] SAT destroy operator called.
[DBG]  [REPAIR] SAT operator â€“ launching subproblem FOR OPTIMIZATION.
[DBG]  Creating local paths (sx, sy) in the submap for T_sync = 15
[DBG]    Agent 102 (global paths from T=15 to 20) has local path: (2,2) (2,1) (1,1) (0,1) (0,2) (0,3) 
[DBG]  Checking input data for SAT solver:
[DBG]    - Number of agents to replan: 1
[DBG]  Agent 102 has the original local path length: 6 => Start (2,2), Goal (0,3)
[DBG]  Start position: (2, 2), 
[DBG]  Goal position: (0, 3), 
[DBG]  SAT instance and solver created.
Currently solving
Instance name: scen
Map name: map
Encoding used: disappear_at_goal
SAT solver used: Kissat
Optimizing function: sum of costs
Number of agents: 1
Mks LB: 4
SoC LB: 4
Delta: 0
Remaining time: 300000 [ms]

Found plan [agents = 1] [timesteps = 4]
Agent #0 : 10 11 6 2 

[STAT] Solver returned: 0
[DBG]  Agent (index) 102 | New local path (submap idx):
[DBG]  10 11 6 2 
[DBG]  Update the agent path 102 | Original local length: 6 | New local length: 4
[DBG]  agent 102 t=0 => decoded (sx,sy)=(2,2) => global_id=1013
[DBG]  agent 102 t=1 => decoded (sx,sy)=(2,3) => global_id=1014
[DBG]  agent 102 t=2 => decoded (sx,sy)=(1,3) => global_id=982
[DBG]  agent 102 t=3 => decoded (sx,sy)=(0,3) => global_id=950
[DBG]  Complete path of agent 102:
[DBG]    Original: 991 1023 1022 1021 989 957 956 955 954 986 1018 1017 1016 1015 1014 1013 1012 980 948 949 950 918 919 920 888 889 890 
[DBG]    New:     991 1023 1022 1021 989 957 956 955 954 986 1018 1017 1016 1015 1014 1013 1014 982 950 918 919 920 888 889 890 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 991 1023 1022 1021 989 957 956 955 954 986 1018 1017 1016 1015 1014 
[DBG]    Local path (in submap): 1013 1014 982 950 918 919 
[DBG]    Suffix (out of submap): 920 888 889 890 
[DBG]  Original agent path length 102 je: 27
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 0: 991, 1023, 1022, 1021, 989, 957, 956, 955, 954, 986, 1018, 1017, 1016, 1015, 1014, 1013, 1014, 982, 950, 918, 919, 920, 888, 889, 890, 
[DBG]  Path for agent 102 updated, resulting length: 25
[DBG]  Paths successfully updated.
[DBG]  (LNS.cpp) New path for agent 102: 
[DBG]  991, 1023, 1022, 1021, 989, 957, 956, 955, 954, 986, 1018, 1017, 1016, 1015, 1014, 1013, 1014, 982, 950, 918, 919, 920, 888, 889, 890, 
[DBG]  component_weights = {0.243962, 0.239083, 0.25002, 0.266935}
[DBG]  opSuccess value: 1
[STAT] neighbor.sum_of_costs before recomputation: 24
[STAT] neighbor.old_sum_of_costs before recomputation: 26
[STAT] sum_of_costs before recomputation: 4472
[DBG]  Validate solution immediately after SAT success.
[WARNING] Problem after SAT: Target conflict: agent 39 (len 27) traverses target of agent 102 (len 24) at location 890 at timestep 25
[DBG]  Attempting immediate repair via init_lns because problem occurred after SAT (should be applied only for conflicts...).
[DBG]  Passing 150 agents to init_lns (skip=true).
[DBG]  path_table contents for selected agents (neighbor.agents):
[DBG]    Agent 102 => controlling path length=25
[DBG]  hodnota skip_initial_solution=1
[DBG]  We skip initialSolution => call buildCollisionData()
[DBG]  buildCollisionData() called â€“ skip_initial_solution case.
[DBG]  Agents.size()=150, collision_graph.size()=150
[DBG]  agent 39 => updateCollidingPairs => foundCollision
[DBG]  agent 102 => updateCollidingPairs => foundCollision
[DBG]  Conflicting agent pairs:
[DBG]  agent 39 is in conflict with agent 102
[DBG]  buildCollisionData() => sum_of_costs=4470, num_of_colliding_pairs=1
[DBG]  buildCollisionData done => sum_of_costs=4470, num_of_colliding_pairs=1
[DBG]  sum_of_cost hodnota: 4470
[DBG]  After skip/init build => iteration_stats.back(): sum_of_costs=4470, collisions=1
[DEBUG] Using default neighbor generation strategy for conflicts: 2
	InitLNS(PP): runtime = 0.00423079, iterations = 2, colliding pairs = 0, initial colliding pairs = 1, solution cost = 4472, initial solution cost = 4470, failed iterations = 0
[DBG]  init_lns->sum_of_costs after init_lns->run: 4472
[DBG]  sum_of_costs after assignment from init_lns->run: 4472
[DBG]  Recomputing sum_of_cost by dividing neighbor.sum_of_costs and neighbor.old_sum_of_costs
[STAT] sum_of_costs after recomputation: 4472
[STAT] Iteration 9
[DBG]  Using SAT operator (destroy+repair SAT).
[DBG]  ====================
[DBG]  SAT destroy operator called.
[DBG]  SAT heuristic: 2
[DBG]  key_agent_id: 78
[DBG]  key_agent_id global path length: 36
[DBG]  Submap content (global positions):
[DBG]  324 325 326 327 328 
[DBG]  356 357 358 359 360 
[DBG]  388 389 390 391 392 
[DBG]  420 421 422 423 424 
[DBG]  452 453 454 455 456 
[DBG]  Map content with agents and obstacles:
[DBG]  . A . . . 
[DBG]  . . . . . 
[DBG]  . . A A X 
[DBG]  . . . A A 
[DBG]  X X . A . 
[DBG]  content of the map structure that we pass to the SAT solver:
[DBG]  1  1  1  1  1  
[DBG]  1  1  1  1  1  
[DBG]  1  1  1  1  -1  
[DBG]  1  1  1  1  1  
[DBG]  -1  -1  1  1  1  
[DBG]  Identifying agents in a submap for rescheduling (when key_agent is there at the time 26):
[DBG]  Agent 21 found intervals in the sub-map:
[DBG]   [4..19] [22..30] [33..33]
[DBG]  Agent 21 (interval in submap: [22..30]) contains time 26, added to replan.
[DBG]  Agent 51 found intervals in the sub-map:
[DBG]   [7..27]
[DBG]  Agent 51 (interval in submap: [7..27]) contains time 26, added to replan.
[DBG]  Agent 78 found intervals in the sub-map:
[DBG]   [22..28]
[DBG]  Agent 78 (interval in submap: [22..28]) contains time 26, added to replan.
[DBG]  Agent 105 found intervals in the sub-map:
[DBG]   [24..29]
[DBG]  Agent 105 (interval in submap: [24..29]) contains time 26, added to replan.
[DBG]  Agent 112 found intervals in the sub-map:
[DBG]   [26..29]
[DBG]  Agent 112 (interval in submap: [26..29]) contains time 26, added to replan.
[DBG]  Agent 122 found intervals in the sub-map:
[DBG]   [21..26]
[DBG]  Agent 122 (interval in submap: [21..26]) contains time 26, added to replan.
[DBG]  Agent 21 | Start (global): 423 -> (local): (3, 3) at time 26 | Goal (global): 326 -> (local): (0, 2) at time 30
[DBG]  Agent 51 | Start (global): 455 -> (local): (4, 3) at time 26 | Goal (global): 456 -> (local): (4, 4) at time 27
[DBG]  Agent 78 | Start (global): 390 -> (local): (2, 2) at time 26 | Goal (global): 454 -> (local): (4, 2) at time 28
[DBG]  Agent 105 | Start (global): 391 -> (local): (2, 3) at time 26 | Goal (global): 388 -> (local): (2, 0) at time 29
[DBG]  Agent 112 | Start (global): 424 -> (local): (3, 4) at time 26 | Goal (global): 454 -> (local): (4, 2) at time 29
[DBG]  Agent 122 | Start (global): 325 -> (local): (0, 1) at time 26 | Goal (global): 325 -> (local): (0, 1) at time 26
[DBG]  [REPAIR] SAT destroy operator called.
[DBG]  [REPAIR] SAT operator â€“ launching subproblem FOR OPTIMIZATION.
[DBG]  Creating local paths (sx, sy) in the submap for T_sync = 26
[DBG]    Agent 21 (global paths from T=26 to 30) has local path: (3,3) (2,3) (2,2) (1,2) (0,2) 
[DBG]    Agent 51 (global paths from T=26 to 27) has local path: (4,3) (4,4) 
[DBG]    Agent 78 (global paths from T=26 to 28) has local path: (2,2) (3,2) (4,2) 
[DBG]    Agent 105 (global paths from T=26 to 29) has local path: (2,3) (2,2) (2,1) (2,0) 
[DBG]    Agent 112 (global paths from T=26 to 29) has local path: (3,4) (3,3) (3,2) (4,2) 
[DBG]    Agent 122 (global paths from T=26 to 26) has local path: (0,1) 
[DBG]  Checking input data for SAT solver:
[DBG]    - Number of agents to replan: 6
[DBG]  Agent 21 has the original local path length: 5 => Start (3,3), Goal (0,2)
[DBG]  Agent 51 has the original local path length: 2 => Start (4,3), Goal (4,4)
[DBG]  Agent 78 has the original local path length: 3 => Start (2,2), Goal (4,2)
[DBG]  Agent 105 has the original local path length: 4 => Start (2,3), Goal (2,0)
[DBG]  Agent 112 has the original local path length: 4 => Start (3,4), Goal (4,2)
[DBG]  Agent 122 has the original local path length: 1 => Start (0,1), Goal (0,1)
[DBG]  Start position: (3, 3), (4, 3), (2, 2), (2, 3), (3, 4), (0, 1), 
[DBG]  Goal position: (0, 2), (4, 4), (4, 2), (2, 0), (4, 2), (0, 1), 
[DBG]  SAT instance and solver created.
Currently solving
Instance name: scen
Map name: map
Encoding used: disappear_at_goal
SAT solver used: Kissat
Optimizing function: sum of costs
Number of agents: 6
Mks LB: 5
SoC LB: 19
Delta: 0
Remaining time: 300000 [ms]

Vertex conflict! Agents 1, 2, timestep 3, location 0
Swapping conflict! Agents 1, 2, timestep 3, edge (0,0)
Vertex conflict! Agents 1, 2, timestep 4, location 0
Vertex conflict! Agents 1, 3, timestep 4, location 0
Vertex conflict! Agents 1, 4, timestep 4, location 0
Vertex conflict! Agents 1, 5, timestep 2, location 0
Swapping conflict! Agents 1, 5, timestep 2, edge (0,0)
Vertex conflict! Agents 1, 5, timestep 3, location 0
Swapping conflict! Agents 1, 5, timestep 3, edge (0,0)
Vertex conflict! Agents 1, 5, timestep 4, location 0
Vertex conflict! Agents 2, 3, timestep 4, location 0
Vertex conflict! Agents 2, 4, timestep 4, location 0
Vertex conflict! Agents 2, 5, timestep 3, location 0
Swapping conflict! Agents 2, 5, timestep 3, edge (0,0)
Vertex conflict! Agents 2, 5, timestep 4, location 0
Vertex conflict! Agents 3, 4, timestep 4, location 0
Vertex conflict! Agents 3, 5, timestep 4, location 0
Vertex conflict! Agents 4, 5, timestep 4, location 0
Found plan [agents = 6] [timesteps = 5]
Agent #0 : 17 13 12 7 2 
Agent #1 : 20 21 0 0 0 
Agent #2 : 12 16 19 0 0 
Agent #3 : 13 12 11 10 0 
Agent #4 : 18 17 20 19 0 
Agent #5 : 1 0 0 0 0 

[STAT] Solver returned: 0
[DBG]  Agent (index) 21 | New local path (submap idx):
[DBG]  17 13 12 7 2 
[DBG]  Agent (index) 51 | New local path (submap idx):
[DBG]  20 21 
[DBG]  Agent (index) 78 | New local path (submap idx):
[DBG]  12 16 19 
[DBG]  Agent (index) 105 | New local path (submap idx):
[DBG]  13 12 11 10 
[DBG]  Agent (index) 112 | New local path (submap idx):
[DBG]  18 17 20 19 
[DBG]  Agent (index) 122 | New local path (submap idx):
[DBG]  1 
[DBG]  Update the agent path 21 | Original local length: 5 | New local length: 5
[DBG]  agent 21 t=0 => decoded (sx,sy)=(3,3) => global_id=423
[DBG]  agent 21 t=1 => decoded (sx,sy)=(2,3) => global_id=391
[DBG]  agent 21 t=2 => decoded (sx,sy)=(2,2) => global_id=390
[DBG]  agent 21 t=3 => decoded (sx,sy)=(1,2) => global_id=358
[DBG]  agent 21 t=4 => decoded (sx,sy)=(0,2) => global_id=326
[DBG]  Complete path of agent 21:
[DBG]    Original: 484 484 485 486 454 454 454 454 454 455 455 455 455 455 455 455 455 455 455 455 487 487 455 423 424 424 423 391 390 358 326 294 295 327 
[DBG]    New:     484 484 485 486 454 454 454 454 454 455 455 455 455 455 455 455 455 455 455 455 487 487 455 423 424 424 423 391 390 358 326 294 295 327 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 484 484 485 486 454 454 454 454 454 455 455 455 455 455 455 455 455 455 455 455 487 487 455 423 424 424 
[DBG]    Local path (in submap): 423 391 390 358 326 
[DBG]    Suffix (out of submap): 294 295 327 
[DBG]  Original agent path length 21 je: 34
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 0: 484, 484, 485, 486, 454, 454, 454, 454, 454, 455, 455, 455, 455, 455, 455, 455, 455, 455, 455, 455, 487, 487, 455, 423, 424, 424, 423, 391, 390, 358, 326, 294, 295, 327, 
[DBG]  Path for agent 21 updated, resulting length: 34
[DBG]  Update the agent path 51 | Original local length: 2 | New local length: 2
[DBG]  agent 51 t=0 => decoded (sx,sy)=(4,3) => global_id=455
[DBG]  agent 51 t=1 => decoded (sx,sy)=(4,4) => global_id=456
[DBG]  Complete path of agent 51:
[DBG]    Original: 257 258 259 291 323 355 387 388 420 421 422 423 391 359 359 359 391 423 422 422 422 422 423 422 422 454 455 456 457 458 459 
[DBG]    New:     257 258 259 291 323 355 387 388 420 421 422 423 391 359 359 359 391 423 422 422 422 422 423 422 422 454 455 456 457 458 459 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 257 258 259 291 323 355 387 388 420 421 422 423 391 359 359 359 391 423 422 422 422 422 423 422 422 454 
[DBG]    Local path (in submap): 455 456 
[DBG]    Suffix (out of submap): 457 458 459 
[DBG]  Original agent path length 51 je: 31
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 1: 257, 258, 259, 291, 323, 355, 387, 388, 420, 421, 422, 423, 391, 359, 359, 359, 391, 423, 422, 422, 422, 422, 423, 422, 422, 454, 455, 456, 457, 458, 459, 
[DBG]  Path for agent 51 updated, resulting length: 31
[DBG]  Update the agent path 78 | Original local length: 3 | New local length: 3
[DBG]  agent 78 t=0 => decoded (sx,sy)=(2,2) => global_id=390
[DBG]  agent 78 t=1 => decoded (sx,sy)=(3,2) => global_id=422
[DBG]  agent 78 t=2 => decoded (sx,sy)=(4,2) => global_id=454
[DBG]  Complete path of agent 78:
[DBG]    Original: 355 354 353 352 352 352 352 352 352 352 352 352 352 352 352 352 352 352 353 354 355 323 324 325 357 358 390 422 454 486 485 484 516 548 580 612 
[DBG]    New:     355 354 353 352 352 352 352 352 352 352 352 352 352 352 352 352 352 352 353 354 355 323 324 325 357 358 390 422 454 486 485 484 516 548 580 612 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 355 354 353 352 352 352 352 352 352 352 352 352 352 352 352 352 352 352 353 354 355 323 324 325 357 358 
[DBG]    Local path (in submap): 390 422 454 
[DBG]    Suffix (out of submap): 486 485 484 516 548 580 612 
[DBG]  Original agent path length 78 je: 36
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 2: 355, 354, 353, 352, 352, 352, 352, 352, 352, 352, 352, 352, 352, 352, 352, 352, 352, 352, 353, 354, 355, 323, 324, 325, 357, 358, 390, 422, 454, 486, 485, 484, 516, 548, 580, 612, 
[DBG]  Path for agent 78 updated, resulting length: 36
[DBG]  Update the agent path 105 | Original local length: 4 | New local length: 4
[DBG]  agent 105 t=0 => decoded (sx,sy)=(2,3) => global_id=391
[DBG]  agent 105 t=1 => decoded (sx,sy)=(2,2) => global_id=390
[DBG]  agent 105 t=2 => decoded (sx,sy)=(2,1) => global_id=389
[DBG]  agent 105 t=3 => decoded (sx,sy)=(2,0) => global_id=388
[DBG]  Complete path of agent 105:
[DBG]    Original: 1002 1001 1000 968 936 937 905 873 841 809 777 745 746 714 682 650 649 617 585 584 583 551 519 487 455 423 391 390 389 388 387 355 323 291 259 227 228 196 164 164 132 
[DBG]    New:     1002 1001 1000 968 936 937 905 873 841 809 777 745 746 714 682 650 649 617 585 584 583 551 519 487 455 423 391 390 389 388 387 355 323 291 259 227 228 196 164 164 132 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 1002 1001 1000 968 936 937 905 873 841 809 777 745 746 714 682 650 649 617 585 584 583 551 519 487 455 423 
[DBG]    Local path (in submap): 391 390 389 388 
[DBG]    Suffix (out of submap): 387 355 323 291 259 227 228 196 164 164 132 
[DBG]  Original agent path length 105 je: 41
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 3: 1002, 1001, 1000, 968, 936, 937, 905, 873, 841, 809, 777, 745, 746, 714, 682, 650, 649, 617, 585, 584, 583, 551, 519, 487, 455, 423, 391, 390, 389, 388, 387, 355, 323, 291, 259, 227, 228, 196, 164, 164, 132, 
[DBG]  Path for agent 105 updated, resulting length: 41
[DBG]  Update the agent path 112 | Original local length: 4 | New local length: 4
[DBG]  agent 112 t=0 => decoded (sx,sy)=(3,4) => global_id=424
[DBG]  agent 112 t=1 => decoded (sx,sy)=(3,3) => global_id=423
[DBG]  agent 112 t=2 => decoded (sx,sy)=(4,3) => global_id=455
[DBG]  agent 112 t=3 => decoded (sx,sy)=(4,2) => global_id=454
[DBG]  Complete path of agent 112:
[DBG]    Original: 337 338 339 340 308 276 275 243 242 210 209 208 207 239 271 270 302 301 300 299 298 330 329 361 393 425 424 423 422 454 486 485 517 549 581 613 645 644 676 675 
[DBG]    New:     337 338 339 340 308 276 275 243 242 210 209 208 207 239 271 270 302 301 300 299 298 330 329 361 393 425 424 423 455 454 486 485 517 549 581 613 645 644 676 675 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 337 338 339 340 308 276 275 243 242 210 209 208 207 239 271 270 302 301 300 299 298 330 329 361 393 425 
[DBG]    Local path (in submap): 424 423 455 454 
[DBG]    Suffix (out of submap): 486 485 517 549 581 613 645 644 676 675 
[DBG]  Original agent path length 112 je: 40
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 4: 337, 338, 339, 340, 308, 276, 275, 243, 242, 210, 209, 208, 207, 239, 271, 270, 302, 301, 300, 299, 298, 330, 329, 361, 393, 425, 424, 423, 455, 454, 486, 485, 517, 549, 581, 613, 645, 644, 676, 675, 
[DBG]  Path for agent 112 updated, resulting length: 40
[DBG]  Update the agent path 122 | Original local length: 1 | New local length: 1
[DBG]  agent 122 t=0 => decoded (sx,sy)=(0,1) => global_id=325
[DBG]  Complete path of agent 122:
[DBG]    Original: 909 877 845 844 843 811 779 778 777 745 744 712 680 648 647 615 583 551 519 487 486 454 422 390 389 357 325 293 261 260 228 196 197 
[DBG]    New:     909 877 845 844 843 811 779 778 777 745 744 712 680 648 647 615 583 551 519 487 486 454 422 390 389 357 325 293 261 260 228 196 197 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 909 877 845 844 843 811 779 778 777 745 744 712 680 648 647 615 583 551 519 487 486 454 422 390 389 357 
[DBG]    Local path (in submap): 325 
[DBG]    Suffix (out of submap): 293 261 260 228 196 197 
[DBG]  Original agent path length 122 je: 33
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 5: 909, 877, 845, 844, 843, 811, 779, 778, 777, 745, 744, 712, 680, 648, 647, 615, 583, 551, 519, 487, 486, 454, 422, 390, 389, 357, 325, 293, 261, 260, 228, 196, 197, 
[DBG]  Path for agent 122 updated, resulting length: 33
[DBG]  Paths successfully updated.
[DBG]  (LNS.cpp) New path for agent 21: 
[DBG]  484, 484, 485, 486, 454, 454, 454, 454, 454, 455, 455, 455, 455, 455, 455, 455, 455, 455, 455, 455, 487, 487, 455, 423, 424, 424, 423, 391, 390, 358, 326, 294, 295, 327, 
[DBG]  (LNS.cpp) New path for agent 51: 
[DBG]  257, 258, 259, 291, 323, 355, 387, 388, 420, 421, 422, 423, 391, 359, 359, 359, 391, 423, 422, 422, 422, 422, 423, 422, 422, 454, 455, 456, 457, 458, 459, 
[DBG]  (LNS.cpp) New path for agent 78: 
[DBG]  355, 354, 353, 352, 352, 352, 352, 352, 352, 352, 352, 352, 352, 352, 352, 352, 352, 352, 353, 354, 355, 323, 324, 325, 357, 358, 390, 422, 454, 486, 485, 484, 516, 548, 580, 612, 
[DBG]  (LNS.cpp) New path for agent 105: 
[DBG]  1002, 1001, 1000, 968, 936, 937, 905, 873, 841, 809, 777, 745, 746, 714, 682, 650, 649, 617, 585, 584, 583, 551, 519, 487, 455, 423, 391, 390, 389, 388, 387, 355, 323, 291, 259, 227, 228, 196, 164, 164, 132, 
[DBG]  (LNS.cpp) New path for agent 112: 
[DBG]  337, 338, 339, 340, 308, 276, 275, 243, 242, 210, 209, 208, 207, 239, 271, 270, 302, 301, 300, 299, 298, 330, 329, 361, 393, 425, 424, 423, 455, 454, 486, 485, 517, 549, 581, 613, 645, 644, 676, 675, 
[DBG]  (LNS.cpp) New path for agent 122: 
[DBG]  909, 877, 845, 844, 843, 811, 779, 778, 777, 745, 744, 712, 680, 648, 647, 615, 583, 551, 519, 487, 486, 454, 422, 390, 389, 357, 325, 293, 261, 260, 228, 196, 197, 
[DBG]  component_weights = {0.247707, 0.237898, 0.248782, 0.265613}
[DBG]  opSuccess value: 1
[STAT] neighbor.sum_of_costs before recomputation: 209
[STAT] neighbor.old_sum_of_costs before recomputation: 209
[STAT] sum_of_costs before recomputation: 4472
[DBG]  Validate solution immediately after SAT success.
[DBG]  No problems after SAT replan.
[DBG]  Recomputing sum_of_cost by dividing neighbor.sum_of_costs and neighbor.old_sum_of_costs
[STAT] sum_of_costs after recomputation: 4472
[STAT] Iteration 10
[DBG]  Using SAT operator (destroy+repair SAT).
[DBG]  ====================
[DBG]  SAT destroy operator called.
[DBG]  SAT heuristic: 2
[DBG]  key_agent_id: 73
[DBG]  key_agent_id global path length: 29
[DBG]  Submap content (global positions):
[DBG]  514 515 516 517 518 
[DBG]  546 547 548 549 550 
[DBG]  578 579 580 581 582 
[DBG]  610 611 612 613 614 
[DBG]  642 643 644 645 646 
[DBG]  Map content with agents and obstacles:
[DBG]  X A . . X 
[DBG]  . . . . . 
[DBG]  . . A . . 
[DBG]  . . A A X 
[DBG]  . X . . . 
[DBG]  content of the map structure that we pass to the SAT solver:
[DBG]  -1  1  1  1  -1  
[DBG]  1  1  1  1  1  
[DBG]  1  1  1  1  1  
[DBG]  1  1  1  1  -1  
[DBG]  1  -1  1  1  1  
[DBG]  Identifying agents in a submap for rescheduling (when key_agent is there at the time 18):
[DBG]  Agent 59 found intervals in the sub-map:
[DBG]   [14..20]
[DBG]  Agent 59 (interval in submap: [14..20]) contains time 18, added to replan.
[DBG]  Agent 65 found intervals in the sub-map:
[DBG]   [18..25]
[DBG]  Agent 65 (interval in submap: [18..25]) contains time 18, added to replan.
[DBG]  Agent 73 found intervals in the sub-map:
[DBG]   [1..21]
[DBG]  Agent 73 (interval in submap: [1..21]) contains time 18, added to replan.
[DBG]  Agent 110 found intervals in the sub-map:
[DBG]   [14..19]
[DBG]  Agent 110 (interval in submap: [14..19]) contains time 18, added to replan.
[DBG]  Agent 59 | Start (global): 613 -> (local): (3, 3) at time 18 | Goal (global): 646 -> (local): (4, 4) at time 20
[DBG]  Agent 65 | Start (global): 515 -> (local): (0, 1) at time 18 | Goal (global): 646 -> (local): (4, 4) at time 25
[DBG]  Agent 73 | Start (global): 580 -> (local): (2, 2) at time 18 | Goal (global): 582 -> (local): (2, 4) at time 21
[DBG]  Agent 110 | Start (global): 612 -> (local): (3, 2) at time 18 | Goal (global): 644 -> (local): (4, 2) at time 19
[DBG]  [REPAIR] SAT destroy operator called.
[DBG]  [REPAIR] SAT operator â€“ launching subproblem FOR OPTIMIZATION.
[DBG]  Creating local paths (sx, sy) in the submap for T_sync = 18
[DBG]    Agent 59 (global paths from T=18 to 20) has local path: (3,3) (4,3) (4,4) 
[DBG]    Agent 65 (global paths from T=18 to 25) has local path: (0,1) (1,1) (1,2) (1,3) (2,3) (3,3) (4,3) (4,4) 
[DBG]    Agent 73 (global paths from T=18 to 21) has local path: (2,2) (2,3) (2,4) (2,4) 
[DBG]    Agent 110 (global paths from T=18 to 19) has local path: (3,2) (4,2) 
[DBG]  Checking input data for SAT solver:
[DBG]    - Number of agents to replan: 4
[DBG]  Agent 59 has the original local path length: 3 => Start (3,3), Goal (4,4)
[DBG]  Agent 65 has the original local path length: 8 => Start (0,1), Goal (4,4)
[DBG]  Agent 73 has the original local path length: 4 => Start (2,2), Goal (2,4)
[DBG]  Agent 110 has the original local path length: 2 => Start (3,2), Goal (4,2)
[DBG]  Start position: (3, 3), (0, 1), (2, 2), (3, 2), 
[DBG]  Goal position: (4, 4), (4, 4), (2, 4), (4, 2), 
[DBG]  SAT instance and solver created.
Currently solving
Instance name: scen
Map name: map
Encoding used: disappear_at_goal
SAT solver used: Kissat
Optimizing function: sum of costs
Number of agents: 4
Mks LB: 8
SoC LB: 16
Delta: 0
Remaining time: 300000 [ms]

Vertex conflict! Agents 0, 2, timestep 3, location 0
Swapping conflict! Agents 0, 2, timestep 3, edge (0,0)
Vertex conflict! Agents 0, 2, timestep 4, location 0
Swapping conflict! Agents 0, 2, timestep 4, edge (0,0)
Vertex conflict! Agents 0, 2, timestep 5, location 0
Swapping conflict! Agents 0, 2, timestep 5, edge (0,0)
Vertex conflict! Agents 0, 2, timestep 6, location 0
Swapping conflict! Agents 0, 2, timestep 6, edge (0,0)
Vertex conflict! Agents 0, 2, timestep 7, location 0
Vertex conflict! Agents 0, 3, timestep 3, location 0
Swapping conflict! Agents 0, 3, timestep 3, edge (0,0)
Vertex conflict! Agents 0, 3, timestep 4, location 0
Swapping conflict! Agents 0, 3, timestep 4, edge (0,0)
Vertex conflict! Agents 0, 3, timestep 5, location 0
Swapping conflict! Agents 0, 3, timestep 5, edge (0,0)
Vertex conflict! Agents 0, 3, timestep 6, location 0
Swapping conflict! Agents 0, 3, timestep 6, edge (0,0)
Vertex conflict! Agents 0, 3, timestep 7, location 0
Vertex conflict! Agents 2, 3, timestep 3, location 0
Swapping conflict! Agents 2, 3, timestep 3, edge (0,0)
Vertex conflict! Agents 2, 3, timestep 4, location 0
Swapping conflict! Agents 2, 3, timestep 4, edge (0,0)
Vertex conflict! Agents 2, 3, timestep 5, location 0
Swapping conflict! Agents 2, 3, timestep 5, edge (0,0)
Vertex conflict! Agents 2, 3, timestep 6, location 0
Swapping conflict! Agents 2, 3, timestep 6, edge (0,0)
Vertex conflict! Agents 2, 3, timestep 7, location 0
Found plan [agents = 4] [timesteps = 8]
Agent #0 : 16 19 20 0 0 0 0 0 
Agent #1 : 0 4 9 14 15 18 19 20 
Agent #2 : 10 11 12 0 0 0 0 0 
Agent #3 : 15 18 0 0 0 0 0 0 

[STAT] Solver returned: 0
[DBG]  Agent (index) 59 | New local path (submap idx):
[DBG]  16 19 20 
[DBG]  Agent (index) 65 | New local path (submap idx):
[DBG]  0 4 9 14 15 18 19 20 
[DBG]  Agent (index) 73 | New local path (submap idx):
[DBG]  10 11 12 
[DBG]  Agent (index) 110 | New local path (submap idx):
[DBG]  15 18 
[DBG]  Update the agent path 59 | Original local length: 3 | New local length: 3
[DBG]  agent 59 t=0 => decoded (sx,sy)=(3,3) => global_id=613
[DBG]  agent 59 t=1 => decoded (sx,sy)=(4,3) => global_id=645
[DBG]  agent 59 t=2 => decoded (sx,sy)=(4,4) => global_id=646
[DBG]  Complete path of agent 59:
[DBG]    Original: 256 257 258 259 291 323 355 387 419 418 450 482 483 484 516 548 580 581 613 645 646 678 710 742 774 806 807 808 776 777 778 779 811 843 875 876 877 878 879 880 881 882 883 884 916 917 
[DBG]    New:     256 257 258 259 291 323 355 387 419 418 450 482 483 484 516 548 580 581 613 645 646 678 710 742 774 806 807 808 776 777 778 779 811 843 875 876 877 878 879 880 881 882 883 884 916 917 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 256 257 258 259 291 323 355 387 419 418 450 482 483 484 516 548 580 581 
[DBG]    Local path (in submap): 613 645 646 
[DBG]    Suffix (out of submap): 678 710 742 774 806 807 808 776 777 778 779 811 843 875 876 877 878 879 880 881 882 883 884 916 917 
[DBG]  Original agent path length 59 je: 46
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 0: 256, 257, 258, 259, 291, 323, 355, 387, 419, 418, 450, 482, 483, 484, 516, 548, 580, 581, 613, 645, 646, 678, 710, 742, 774, 806, 807, 808, 776, 777, 778, 779, 811, 843, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 916, 917, 
[DBG]  Path for agent 59 updated, resulting length: 46
[DBG]  Update the agent path 65 | Original local length: 8 | New local length: 8
[DBG]  agent 65 t=0 => decoded (sx,sy)=(0,1) => global_id=515
[DBG]  agent 65 t=1 => decoded (sx,sy)=(1,1) => global_id=547
[DBG]  agent 65 t=2 => decoded (sx,sy)=(2,1) => global_id=579
[DBG]  agent 65 t=3 => decoded (sx,sy)=(3,1) => global_id=611
[DBG]  agent 65 t=4 => decoded (sx,sy)=(3,2) => global_id=612
[DBG]  agent 65 t=5 => decoded (sx,sy)=(4,2) => global_id=644
[DBG]  agent 65 t=6 => decoded (sx,sy)=(4,3) => global_id=645
[DBG]  agent 65 t=7 => decoded (sx,sy)=(4,4) => global_id=646
[DBG]  Complete path of agent 65:
[DBG]    Original: 66 67 99 131 163 195 195 227 259 291 323 355 387 419 418 450 482 483 515 547 548 549 581 613 645 646 678 710 742 774 806 807 808 809 777 778 779 811 843 
[DBG]    New:     66 67 99 131 163 195 195 227 259 291 323 355 387 419 418 450 482 483 515 547 579 611 612 644 645 646 678 710 742 774 806 807 808 809 777 778 779 811 843 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 66 67 99 131 163 195 195 227 259 291 323 355 387 419 418 450 482 483 
[DBG]    Local path (in submap): 515 547 579 611 612 644 645 646 
[DBG]    Suffix (out of submap): 678 710 742 774 806 807 808 809 777 778 779 811 843 
[DBG]  Original agent path length 65 je: 39
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 1: 66, 67, 99, 131, 163, 195, 195, 227, 259, 291, 323, 355, 387, 419, 418, 450, 482, 483, 515, 547, 579, 611, 612, 644, 645, 646, 678, 710, 742, 774, 806, 807, 808, 809, 777, 778, 779, 811, 843, 
[DBG]  Path for agent 65 updated, resulting length: 39
[DBG]  Update the agent path 73 | Original local length: 4 | New local length: 3
[DBG]  agent 73 t=0 => decoded (sx,sy)=(2,2) => global_id=580
[DBG]  agent 73 t=1 => decoded (sx,sy)=(2,3) => global_id=581
[DBG]  agent 73 t=2 => decoded (sx,sy)=(2,4) => global_id=582
[DBG]  Complete path of agent 73:
[DBG]    Original: 609 610 578 578 578 578 578 578 578 578 578 610 610 578 579 579 579 579 580 581 582 582 583 551 519 487 487 455 456 
[DBG]    New:     609 610 578 578 578 578 578 578 578 578 578 610 610 578 579 579 579 579 580 581 582 583 551 519 487 487 455 456 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 609 610 578 578 578 578 578 578 578 578 578 610 610 578 579 579 579 579 
[DBG]    Local path (in submap): 580 581 582 583 
[DBG]    Suffix (out of submap): 551 519 487 487 455 456 
[DBG]  Original agent path length 73 je: 29
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 2: 609, 610, 578, 578, 578, 578, 578, 578, 578, 578, 578, 610, 610, 578, 579, 579, 579, 579, 580, 581, 582, 583, 551, 519, 487, 487, 455, 456, 
[DBG]  Path for agent 73 updated, resulting length: 28
[DBG]  Update the agent path 110 | Original local length: 2 | New local length: 2
[DBG]  agent 110 t=0 => decoded (sx,sy)=(3,2) => global_id=612
[DBG]  agent 110 t=1 => decoded (sx,sy)=(4,2) => global_id=644
[DBG]  Complete path of agent 110:
[DBG]    Original: 193 194 226 258 259 291 323 355 387 419 418 450 482 483 515 516 548 580 612 644 676 675 707 739 738 770 
[DBG]    New:     193 194 226 258 259 291 323 355 387 419 418 450 482 483 515 516 548 580 612 644 676 675 707 739 738 770 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 193 194 226 258 259 291 323 355 387 419 418 450 482 483 515 516 548 580 
[DBG]    Local path (in submap): 612 644 
[DBG]    Suffix (out of submap): 676 675 707 739 738 770 
[DBG]  Original agent path length 110 je: 26
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 3: 193, 194, 226, 258, 259, 291, 323, 355, 387, 419, 418, 450, 482, 483, 515, 516, 548, 580, 612, 644, 676, 675, 707, 739, 738, 770, 
[DBG]  Path for agent 110 updated, resulting length: 26
[DBG]  Paths successfully updated.
[DBG]  (LNS.cpp) New path for agent 59: 
[DBG]  256, 257, 258, 259, 291, 323, 355, 387, 419, 418, 450, 482, 483, 484, 516, 548, 580, 581, 613, 645, 646, 678, 710, 742, 774, 806, 807, 808, 776, 777, 778, 779, 811, 843, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 916, 917, 
[DBG]  (LNS.cpp) New path for agent 65: 
[DBG]  66, 67, 99, 131, 163, 195, 195, 227, 259, 291, 323, 355, 387, 419, 418, 450, 482, 483, 515, 547, 579, 611, 612, 644, 645, 646, 678, 710, 742, 774, 806, 807, 808, 809, 777, 778, 779, 811, 843, 
[DBG]  (LNS.cpp) New path for agent 73: 
[DBG]  609, 610, 578, 578, 578, 578, 578, 578, 578, 578, 578, 610, 610, 578, 579, 579, 579, 579, 580, 581, 582, 583, 551, 519, 487, 487, 455, 456, 
[DBG]  (LNS.cpp) New path for agent 110: 
[DBG]  193, 194, 226, 258, 259, 291, 323, 355, 387, 419, 418, 450, 482, 483, 515, 516, 548, 580, 612, 644, 676, 675, 707, 739, 738, 770, 
[DBG]  component_weights = {0.246367, 0.236611, 0.247436, 0.269587}
[DBG]  opSuccess value: 1
[STAT] neighbor.sum_of_costs before recomputation: 135
[STAT] neighbor.old_sum_of_costs before recomputation: 136
[STAT] sum_of_costs before recomputation: 4472
[DBG]  Validate solution immediately after SAT success.
[WARNING] Problem after SAT: Vertex conflict between agents 73 and 51 at location 455 at timestep 26
[DBG]  Attempting immediate repair via init_lns because problem occurred after SAT (should be applied only for conflicts...).
[DBG]  Passing 150 agents to init_lns (skip=true).
[DBG]  path_table contents for selected agents (neighbor.agents):
[DBG]    Agent 59 => controlling path length=46
[DBG]    Agent 65 => controlling path length=39
[DBG]    Agent 73 => controlling path length=28
[DBG]    Agent 110 => controlling path length=26
[DBG]  hodnota skip_initial_solution=1
[DBG]  We skip initialSolution => call buildCollisionData()
[DBG]  buildCollisionData() called â€“ skip_initial_solution case.
[DBG]  Agents.size()=150, collision_graph.size()=150
[DBG]  agent 51 => updateCollidingPairs => foundCollision
[DBG]  agent 73 => updateCollidingPairs => foundCollision
[DBG]  agent 132 => updateCollidingPairs => foundCollision
[DBG]  Conflicting agent pairs:
[DBG]  agent 51 is in conflict with agent 73
[DBG]  agent 73 is in conflict with agent 132
[DBG]  buildCollisionData() => sum_of_costs=4471, num_of_colliding_pairs=2
[DBG]  buildCollisionData done => sum_of_costs=4471, num_of_colliding_pairs=2
[DBG]  sum_of_cost hodnota: 4471
[DBG]  After skip/init build => iteration_stats.back(): sum_of_costs=4471, collisions=2
[DEBUG] Using default neighbor generation strategy for conflicts: 2
[DEBUG] Using default neighbor generation strategy for conflicts: 1
	InitLNS(PP): runtime = 0.00555971, iterations = 3, colliding pairs = 0, initial colliding pairs = 2, solution cost = 4455, initial solution cost = 4471, failed iterations = 0
[DBG]  init_lns->sum_of_costs after init_lns->run: 4455
[DBG]  sum_of_costs after assignment from init_lns->run: 4455
[DBG]  Recomputing sum_of_cost by dividing neighbor.sum_of_costs and neighbor.old_sum_of_costs
[STAT] sum_of_costs after recomputation: 4455
[STAT] Iteration 11
[DBG]  Using SAT operator (destroy+repair SAT).
[DBG]  ====================
[DBG]  SAT destroy operator called.
[DBG]  SAT heuristic: 2
[DBG]  key_agent_id: 17
[DBG]  key_agent_id global path length: 17
[DBG]  Submap content (global positions):
[DBG]  534 535 536 537 538 
[DBG]  566 567 568 569 570 
[DBG]  598 599 600 601 602 
[DBG]  630 631 632 633 634 
[DBG]  662 663 664 665 666 
[DBG]  Map content with agents and obstacles:
[DBG]  . X X X . 
[DBG]  . X X . . 
[DBG]  X . A . A 
[DBG]  X A A . X 
[DBG]  X X . X . 
[DBG]  content of the map structure that we pass to the SAT solver:
[DBG]  1  -1  -1  -1  1  
[DBG]  1  -1  -1  1  1  
[DBG]  -1  1  1  1  1  
[DBG]  -1  1  1  1  -1  
[DBG]  -1  -1  1  -1  1  
[DBG]  Identifying agents in a submap for rescheduling (when key_agent is there at the time 2):
[DBG]  Agent 17 found intervals in the sub-map:
[DBG]   [0..12]
[DBG]  Agent 17 (interval in submap: [0..12]) contains time 2, added to replan.
[DBG]  Agent 70 found intervals in the sub-map:
[DBG]   [0..4]
[DBG]  Agent 70 (interval in submap: [0..4]) contains time 2, added to replan.
[DBG]  Agent 128 found intervals in the sub-map:
[DBG]   [2..4]
[DBG]  Agent 128 (interval in submap: [2..4]) contains time 2, added to replan.
[DBG]  Agent 135 found intervals in the sub-map:
[DBG]   [1..7]
[DBG]  Agent 135 (interval in submap: [1..7]) contains time 2, added to replan.
[DBG]  Agent 17 | Start (global): 600 -> (local): (2, 2) at time 2 | Goal (global): 602 -> (local): (2, 4) at time 12
[DBG]  Agent 70 | Start (global): 631 -> (local): (3, 1) at time 2 | Goal (global): 664 -> (local): (4, 2) at time 4
[DBG]  Agent 128 | Start (global): 602 -> (local): (2, 4) at time 2 | Goal (global): 538 -> (local): (0, 4) at time 4
[DBG]  Agent 135 | Start (global): 632 -> (local): (3, 2) at time 2 | Goal (global): 538 -> (local): (0, 4) at time 7
[DBG]  [REPAIR] SAT destroy operator called.
[DBG]  [REPAIR] SAT operator â€“ launching subproblem FOR OPTIMIZATION.
[DBG]  Creating local paths (sx, sy) in the submap for T_sync = 2
[DBG]    Agent 17 (global paths from T=2 to 12) has local path: (2,2) (2,2) (2,2) (2,3) (2,4) (2,4) (2,4) (2,4) (2,4) (2,4) (2,4) 
[DBG]    Agent 70 (global paths from T=2 to 4) has local path: (3,1) (3,2) (4,2) 
[DBG]    Agent 128 (global paths from T=2 to 4) has local path: (2,4) (1,4) (0,4) 
[DBG]    Agent 135 (global paths from T=2 to 7) has local path: (3,2) (3,3) (2,3) (1,3) (1,4) (0,4) 
[DBG]  Checking input data for SAT solver:
[DBG]    - Number of agents to replan: 4
[DBG]  Agent 17 has the original local path length: 11 => Start (2,2), Goal (2,4)
[DBG]  Agent 70 has the original local path length: 3 => Start (3,1), Goal (4,2)
[DBG]  Agent 128 has the original local path length: 3 => Start (2,4), Goal (0,4)
[DBG]  Agent 135 has the original local path length: 6 => Start (3,2), Goal (0,4)
[DBG]  Start position: (2, 2), (3, 1), (2, 4), (3, 2), 
[DBG]  Goal position: (2, 4), (4, 2), (0, 4), (0, 4), 
[DBG]  SAT instance and solver created.
Currently solving
Instance name: scen
Map name: map
Encoding used: disappear_at_goal
SAT solver used: Kissat
Optimizing function: sum of costs
Number of agents: 4
Mks LB: 6
SoC LB: 15
Delta: 0
Remaining time: 300000 [ms]

Vertex conflict! Agents 0, 1, timestep 3, location 0
Swapping conflict! Agents 0, 1, timestep 3, edge (0,0)
Vertex conflict! Agents 0, 1, timestep 4, location 0
Swapping conflict! Agents 0, 1, timestep 4, edge (0,0)
Vertex conflict! Agents 0, 1, timestep 5, location 0
Vertex conflict! Agents 0, 2, timestep 3, location 0
Swapping conflict! Agents 0, 2, timestep 3, edge (0,0)
Vertex conflict! Agents 0, 2, timestep 4, location 0
Swapping conflict! Agents 0, 2, timestep 4, edge (0,0)
Vertex conflict! Agents 0, 2, timestep 5, location 0
Vertex conflict! Agents 1, 2, timestep 3, location 0
Swapping conflict! Agents 1, 2, timestep 3, edge (0,0)
Vertex conflict! Agents 1, 2, timestep 4, location 0
Swapping conflict! Agents 1, 2, timestep 4, edge (0,0)
Vertex conflict! Agents 1, 2, timestep 5, location 0
Found plan [agents = 4] [timesteps = 6]
Agent #0 : 6 7 8 0 0 0 
Agent #1 : 9 10 12 0 0 0 
Agent #2 : 8 4 1 0 0 0 
Agent #3 : 10 11 7 8 4 1 

[STAT] Solver returned: 0
[DBG]  Agent (index) 17 | New local path (submap idx):
[DBG]  6 7 8 
[DBG]  Agent (index) 70 | New local path (submap idx):
[DBG]  9 10 12 
[DBG]  Agent (index) 128 | New local path (submap idx):
[DBG]  8 4 1 
[DBG]  Agent (index) 135 | New local path (submap idx):
[DBG]  10 11 7 8 4 1 
[DBG]  Update the agent path 17 | Original local length: 11 | New local length: 3
[DBG]  agent 17 t=0 => decoded (sx,sy)=(2,2) => global_id=600
[DBG]  agent 17 t=1 => decoded (sx,sy)=(2,3) => global_id=601
[DBG]  agent 17 t=2 => decoded (sx,sy)=(2,4) => global_id=602
[DBG]  Complete path of agent 17:
[DBG]    Original: 664 632 600 600 600 601 602 602 602 602 602 602 602 603 603 604 572 
[DBG]    New:     664 632 600 601 602 603 603 604 572 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 664 632 
[DBG]    Local path (in submap): 600 601 602 603 603 604 572 
[DBG]    Suffix (out of submap): 
[DBG]  Original agent path length 17 je: 17
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 0: 664, 632, 600, 601, 602, 603, 603, 604, 572, 
[DBG]  Path for agent 17 updated, resulting length: 9
[DBG]  Update the agent path 70 | Original local length: 3 | New local length: 3
[DBG]  agent 70 t=0 => decoded (sx,sy)=(3,1) => global_id=631
[DBG]  agent 70 t=1 => decoded (sx,sy)=(3,2) => global_id=632
[DBG]  agent 70 t=2 => decoded (sx,sy)=(4,2) => global_id=664
[DBG]  Complete path of agent 70:
[DBG]    Original: 632 631 631 632 664 696 728 729 761 793 793 793 792 824 823 822 822 854 886 885 917 916 884 883 882 914 913 912 944 976 975 974 
[DBG]    New:     632 631 631 632 664 696 728 729 761 793 793 793 792 824 823 822 822 854 886 885 917 916 884 883 882 914 913 912 944 976 975 974 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 632 631 
[DBG]    Local path (in submap): 631 632 664 
[DBG]    Suffix (out of submap): 696 728 729 761 793 793 793 792 824 823 822 822 854 886 885 917 916 884 883 882 914 913 912 944 976 975 974 
[DBG]  Original agent path length 70 je: 32
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 1: 632, 631, 631, 632, 664, 696, 728, 729, 761, 793, 793, 793, 792, 824, 823, 822, 822, 854, 886, 885, 917, 916, 884, 883, 882, 914, 913, 912, 944, 976, 975, 974, 
[DBG]  Path for agent 70 updated, resulting length: 32
[DBG]  Update the agent path 128 | Original local length: 3 | New local length: 3
[DBG]  agent 128 t=0 => decoded (sx,sy)=(2,4) => global_id=602
[DBG]  agent 128 t=1 => decoded (sx,sy)=(1,4) => global_id=570
[DBG]  agent 128 t=2 => decoded (sx,sy)=(0,4) => global_id=538
[DBG]  Complete path of agent 128:
[DBG]    Original: 604 603 602 570 538 506 505 504 503 502 501 469 437 405 404 403 435 467 466 465 464 464 463 462 494 526 525 524 524 523 522 521 520 520 519 551 550 549 548 547 
[DBG]    New:     604 603 602 570 538 506 505 504 503 502 501 469 437 405 404 403 435 467 466 465 464 464 463 462 494 526 525 524 524 523 522 521 520 520 519 551 550 549 548 547 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 604 603 
[DBG]    Local path (in submap): 602 570 538 
[DBG]    Suffix (out of submap): 506 505 504 503 502 501 469 437 405 404 403 435 467 466 465 464 464 463 462 494 526 525 524 524 523 522 521 520 520 519 551 550 549 548 547 
[DBG]  Original agent path length 128 je: 40
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 2: 604, 603, 602, 570, 538, 506, 505, 504, 503, 502, 501, 469, 437, 405, 404, 403, 435, 467, 466, 465, 464, 464, 463, 462, 494, 526, 525, 524, 524, 523, 522, 521, 520, 520, 519, 551, 550, 549, 548, 547, 
[DBG]  Path for agent 128 updated, resulting length: 40
[DBG]  Update the agent path 135 | Original local length: 6 | New local length: 6
[DBG]  agent 135 t=0 => decoded (sx,sy)=(3,2) => global_id=632
[DBG]  agent 135 t=1 => decoded (sx,sy)=(3,3) => global_id=633
[DBG]  agent 135 t=2 => decoded (sx,sy)=(2,3) => global_id=601
[DBG]  agent 135 t=3 => decoded (sx,sy)=(2,4) => global_id=602
[DBG]  agent 135 t=4 => decoded (sx,sy)=(1,4) => global_id=570
[DBG]  agent 135 t=5 => decoded (sx,sy)=(0,4) => global_id=538
[DBG]  Complete path of agent 135:
[DBG]    Original: 696 664 632 633 601 569 570 538 506 505 504 503 502 501 501 501 501 469 468 467 466 465 464 463 431 430 429 428 427 426 425 393 361 360 359 358 357 356 355 354 353 352 384 
[DBG]    New:     696 664 632 633 601 602 570 538 506 505 504 503 502 501 501 501 501 469 468 467 466 465 464 463 431 430 429 428 427 426 425 393 361 360 359 358 357 356 355 354 353 352 384 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 696 664 
[DBG]    Local path (in submap): 632 633 601 602 570 538 
[DBG]    Suffix (out of submap): 506 505 504 503 502 501 501 501 501 469 468 467 466 465 464 463 431 430 429 428 427 426 425 393 361 360 359 358 357 356 355 354 353 352 384 
[DBG]  Original agent path length 135 je: 43
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 3: 696, 664, 632, 633, 601, 602, 570, 538, 506, 505, 504, 503, 502, 501, 501, 501, 501, 469, 468, 467, 466, 465, 464, 463, 431, 430, 429, 428, 427, 426, 425, 393, 361, 360, 359, 358, 357, 356, 355, 354, 353, 352, 384, 
[DBG]  Path for agent 135 updated, resulting length: 43
[DBG]  Paths successfully updated.
[DBG]  (LNS.cpp) New path for agent 17: 
[DBG]  664, 632, 600, 601, 602, 603, 603, 604, 572, 
[DBG]  (LNS.cpp) New path for agent 70: 
[DBG]  632, 631, 631, 632, 664, 696, 728, 729, 761, 793, 793, 793, 792, 824, 823, 822, 822, 854, 886, 885, 917, 916, 884, 883, 882, 914, 913, 912, 944, 976, 975, 974, 
[DBG]  (LNS.cpp) New path for agent 128: 
[DBG]  604, 603, 602, 570, 538, 506, 505, 504, 503, 502, 501, 469, 437, 405, 404, 403, 435, 467, 466, 465, 464, 464, 463, 462, 494, 526, 525, 524, 524, 523, 522, 521, 520, 520, 519, 551, 550, 549, 548, 547, 
[DBG]  (LNS.cpp) New path for agent 135: 
[DBG]  696, 664, 632, 633, 601, 602, 570, 538, 506, 505, 504, 503, 502, 501, 501, 501, 501, 469, 468, 467, 466, 465, 464, 463, 431, 430, 429, 428, 427, 426, 425, 393, 361, 360, 359, 358, 357, 356, 355, 354, 353, 352, 384, 
[DBG]  component_weights = {0.244977, 0.235276, 0.24604, 0.273707}
[DBG]  opSuccess value: 1
[STAT] neighbor.sum_of_costs before recomputation: 120
[STAT] neighbor.old_sum_of_costs before recomputation: 128
[STAT] sum_of_costs before recomputation: 4455
[DBG]  Validate solution immediately after SAT success.
[WARNING] Problem after SAT: Target conflict: agent 4 (len 53) traverses target of agent 17 (len 8) at location 572 at timestep 12
[DBG]  Attempting immediate repair via init_lns because problem occurred after SAT (should be applied only for conflicts...).
[DBG]  Passing 150 agents to init_lns (skip=true).
[DBG]  path_table contents for selected agents (neighbor.agents):
[DBG]    Agent 17 => controlling path length=9
[DBG]    Agent 70 => controlling path length=32
[DBG]    Agent 128 => controlling path length=40
[DBG]    Agent 135 => controlling path length=43
[DBG]  hodnota skip_initial_solution=1
[DBG]  We skip initialSolution => call buildCollisionData()
[DBG]  buildCollisionData() called â€“ skip_initial_solution case.
[DBG]  Agents.size()=150, collision_graph.size()=150
[DBG]  agent 4 => updateCollidingPairs => foundCollision
[DBG]  agent 17 => updateCollidingPairs => foundCollision
[DBG]  agent 25 => updateCollidingPairs => foundCollision
[DBG]  agent 64 => updateCollidingPairs => foundCollision
[DBG]  agent 77 => updateCollidingPairs => foundCollision
[DBG]  Conflicting agent pairs:
[DBG]  agent 4 is in conflict with agent 17
[DBG]  agent 17 is in conflict with agent 25
[DBG]  agent 17 is in conflict with agent 64
[DBG]  agent 17 is in conflict with agent 77
[DBG]  buildCollisionData() => sum_of_costs=4447, num_of_colliding_pairs=4
[DBG]  buildCollisionData done => sum_of_costs=4447, num_of_colliding_pairs=4
[DBG]  sum_of_cost hodnota: 4447
[DBG]  After skip/init build => iteration_stats.back(): sum_of_costs=4447, collisions=4
[DEBUG] Using default neighbor generation strategy for conflicts: 0
[DEBUG] Using default neighbor generation strategy for conflicts: 0
	InitLNS(PP): runtime = 0.00971583, iterations = 3, colliding pairs = 0, initial colliding pairs = 4, solution cost = 4449, initial solution cost = 4447, failed iterations = 0
[DBG]  init_lns->sum_of_costs after init_lns->run: 4449
[DBG]  sum_of_costs after assignment from init_lns->run: 4449
[DBG]  Recomputing sum_of_cost by dividing neighbor.sum_of_costs and neighbor.old_sum_of_costs
[STAT] sum_of_costs after recomputation: 4449
[STAT] Iteration 12
[DBG]  Using SAT operator (destroy+repair SAT).
[DBG]  ====================
[DBG]  SAT destroy operator called.
[DBG]  SAT heuristic: 2
[DBG]  key_agent_id: 91
[DBG]  key_agent_id global path length: 51
[DBG]  Submap content (global positions):
[DBG]  598 599 600 601 602 
[DBG]  630 631 632 633 634 
[DBG]  662 663 664 665 666 
[DBG]  694 695 696 697 698 
[DBG]  726 727 728 729 730 
[DBG]  Map content with agents and obstacles:
[DBG]  X . A . . 
[DBG]  X . . . X 
[DBG]  X X A X . 
[DBG]  X X A . X 
[DBG]  . . . . . 
[DBG]  content of the map structure that we pass to the SAT solver:
[DBG]  -1  1  1  1  1  
[DBG]  -1  1  1  1  -1  
[DBG]  -1  -1  1  -1  1  
[DBG]  -1  -1  1  1  -1  
[DBG]  1  1  1  1  1  
[DBG]  Identifying agents in a submap for rescheduling (when key_agent is there at the time 36):
[DBG]  Agent 91 found intervals in the sub-map:
[DBG]   [33..40]
[DBG]  Agent 91 (interval in submap: [33..40]) contains time 36, added to replan.
[DBG]  Agent 109 found intervals in the sub-map:
[DBG]   [34..41]
[DBG]  Agent 109 (interval in submap: [34..41]) contains time 36, added to replan.
[DBG]  Agent 111 found intervals in the sub-map:
[DBG]   [31..38]
[DBG]  Agent 111 (interval in submap: [31..38]) contains time 36, added to replan.
[DBG]  Agent 91 | Start (global): 664 -> (local): (2, 2) at time 36 | Goal (global): 602 -> (local): (0, 4) at time 40
[DBG]  Agent 109 | Start (global): 696 -> (local): (3, 2) at time 36 | Goal (global): 602 -> (local): (0, 4) at time 41
[DBG]  Agent 111 | Start (global): 600 -> (local): (0, 2) at time 36 | Goal (global): 602 -> (local): (0, 4) at time 38
[DBG]  [REPAIR] SAT destroy operator called.
[DBG]  [REPAIR] SAT operator â€“ launching subproblem FOR OPTIMIZATION.
[DBG]  Creating local paths (sx, sy) in the submap for T_sync = 36
[DBG]    Agent 91 (global paths from T=36 to 40) has local path: (2,2) (1,2) (0,2) (0,3) (0,4) 
[DBG]    Agent 109 (global paths from T=36 to 41) has local path: (3,2) (2,2) (1,2) (0,2) (0,3) (0,4) 
[DBG]    Agent 111 (global paths from T=36 to 38) has local path: (0,2) (0,3) (0,4) 
[DBG]  Checking input data for SAT solver:
[DBG]    - Number of agents to replan: 3
[DBG]  Agent 91 has the original local path length: 5 => Start (2,2), Goal (0,4)
[DBG]  Agent 109 has the original local path length: 6 => Start (3,2), Goal (0,4)
[DBG]  Agent 111 has the original local path length: 3 => Start (0,2), Goal (0,4)
[DBG]  Start position: (2, 2), (3, 2), (0, 2), 
[DBG]  Goal position: (0, 4), (0, 4), (0, 4), 
[DBG]  SAT instance and solver created.
Currently solving
Instance name: scen
Map name: map
Encoding used: disappear_at_goal
SAT solver used: Kissat
Optimizing function: sum of costs
Number of agents: 3
Mks LB: 6
SoC LB: 14
Delta: 0
Remaining time: 300000 [ms]

Vertex conflict! Agents 0, 2, timestep 5, location 0
Found plan [agents = 3] [timesteps = 6]
Agent #0 : 7 5 6 2 3 0 
Agent #1 : 9 7 5 6 2 3 
Agent #2 : 1 2 3 0 0 0 

[STAT] Solver returned: 0
[DBG]  Agent (index) 91 | New local path (submap idx):
[DBG]  7 5 6 2 3 
[DBG]  Agent (index) 109 | New local path (submap idx):
[DBG]  9 7 5 6 2 3 
[DBG]  Agent (index) 111 | New local path (submap idx):
[DBG]  1 2 3 
[DBG]  Update the agent path 91 | Original local length: 5 | New local length: 5
[DBG]  agent 91 t=0 => decoded (sx,sy)=(2,2) => global_id=664
[DBG]  agent 91 t=1 => decoded (sx,sy)=(1,2) => global_id=632
[DBG]  agent 91 t=2 => decoded (sx,sy)=(1,3) => global_id=633
[DBG]  agent 91 t=3 => decoded (sx,sy)=(0,3) => global_id=601
[DBG]  agent 91 t=4 => decoded (sx,sy)=(0,4) => global_id=602
[DBG]  Complete path of agent 91:
[DBG]    Original: 787 755 756 757 757 757 757 757 757 757 757 757 757 757 757 757 757 757 757 757 756 755 787 787 819 820 821 822 823 824 792 793 761 729 697 696 664 632 600 601 602 570 538 506 474 475 443 444 412 380 381 
[DBG]    New:     787 755 756 757 757 757 757 757 757 757 757 757 757 757 757 757 757 757 757 757 756 755 787 787 819 820 821 822 823 824 792 793 761 729 697 696 664 632 633 601 602 570 538 506 474 475 443 444 412 380 381 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 787 755 756 757 757 757 757 757 757 757 757 757 757 757 757 757 757 757 757 757 756 755 787 787 819 820 821 822 823 824 792 793 761 729 697 696 
[DBG]    Local path (in submap): 664 632 633 601 602 
[DBG]    Suffix (out of submap): 570 538 506 474 475 443 444 412 380 381 
[DBG]  Original agent path length 91 je: 51
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 0: 787, 755, 756, 757, 757, 757, 757, 757, 757, 757, 757, 757, 757, 757, 757, 757, 757, 757, 757, 757, 756, 755, 787, 787, 819, 820, 821, 822, 823, 824, 792, 793, 761, 729, 697, 696, 664, 632, 633, 601, 602, 570, 538, 506, 474, 475, 443, 444, 412, 380, 381, 
[DBG]  Path for agent 91 updated, resulting length: 51
[DBG]  Update the agent path 109 | Original local length: 6 | New local length: 6
[DBG]  agent 109 t=0 => decoded (sx,sy)=(3,2) => global_id=696
[DBG]  agent 109 t=1 => decoded (sx,sy)=(2,2) => global_id=664
[DBG]  agent 109 t=2 => decoded (sx,sy)=(1,2) => global_id=632
[DBG]  agent 109 t=3 => decoded (sx,sy)=(1,3) => global_id=633
[DBG]  agent 109 t=4 => decoded (sx,sy)=(0,3) => global_id=601
[DBG]  agent 109 t=5 => decoded (sx,sy)=(0,4) => global_id=602
[DBG]  Complete path of agent 109:
[DBG]    Original: 882 850 818 818 818 818 818 850 850 882 881 881 881 881 849 849 849 849 881 881 881 849 817 818 818 819 820 821 822 823 824 792 793 761 729 697 696 664 632 600 601 602 570 538 506 474 475 443 411 412 412 413 414 415 
[DBG]    New:     882 850 818 818 818 818 818 850 850 882 881 881 881 881 849 849 849 849 881 881 881 849 817 818 818 819 820 821 822 823 824 792 793 761 729 697 696 664 632 633 601 602 570 538 506 474 475 443 411 412 412 413 414 415 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 882 850 818 818 818 818 818 850 850 882 881 881 881 881 849 849 849 849 881 881 881 849 817 818 818 819 820 821 822 823 824 792 793 761 729 697 
[DBG]    Local path (in submap): 696 664 632 633 601 602 
[DBG]    Suffix (out of submap): 570 538 506 474 475 443 411 412 412 413 414 415 
[DBG]  Original agent path length 109 je: 54
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 1: 882, 850, 818, 818, 818, 818, 818, 850, 850, 882, 881, 881, 881, 881, 849, 849, 849, 849, 881, 881, 881, 849, 817, 818, 818, 819, 820, 821, 822, 823, 824, 792, 793, 761, 729, 697, 696, 664, 632, 633, 601, 602, 570, 538, 506, 474, 475, 443, 411, 412, 412, 413, 414, 415, 
[DBG]  Path for agent 109 updated, resulting length: 54
[DBG]  Update the agent path 111 | Original local length: 3 | New local length: 3
[DBG]  agent 111 t=0 => decoded (sx,sy)=(0,2) => global_id=600
[DBG]  agent 111 t=1 => decoded (sx,sy)=(0,3) => global_id=601
[DBG]  agent 111 t=2 => decoded (sx,sy)=(0,4) => global_id=602
[DBG]  Complete path of agent 111:
[DBG]    Original: 964 996 997 998 999 1000 1001 1002 1003 1004 1005 973 974 975 976 944 912 880 848 849 850 818 819 820 821 822 823 824 792 793 761 729 697 696 664 632 600 601 602 570 538 539 540 
[DBG]    New:     964 996 997 998 999 1000 1001 1002 1003 1004 1005 973 974 975 976 944 912 880 848 849 850 818 819 820 821 822 823 824 792 793 761 729 697 696 664 632 600 601 602 570 538 539 540 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 964 996 997 998 999 1000 1001 1002 1003 1004 1005 973 974 975 976 944 912 880 848 849 850 818 819 820 821 822 823 824 792 793 761 729 697 696 664 632 
[DBG]    Local path (in submap): 600 601 602 
[DBG]    Suffix (out of submap): 570 538 539 540 
[DBG]  Original agent path length 111 je: 43
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 2: 964, 996, 997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 973, 974, 975, 976, 944, 912, 880, 848, 849, 850, 818, 819, 820, 821, 822, 823, 824, 792, 793, 761, 729, 697, 696, 664, 632, 600, 601, 602, 570, 538, 539, 540, 
[DBG]  Path for agent 111 updated, resulting length: 43
[DBG]  Paths successfully updated.
[DBG]  (LNS.cpp) New path for agent 91: 
[DBG]  787, 755, 756, 757, 757, 757, 757, 757, 757, 757, 757, 757, 757, 757, 757, 757, 757, 757, 757, 757, 756, 755, 787, 787, 819, 820, 821, 822, 823, 824, 792, 793, 761, 729, 697, 696, 664, 632, 633, 601, 602, 570, 538, 506, 474, 475, 443, 444, 412, 380, 381, 
[DBG]  (LNS.cpp) New path for agent 109: 
[DBG]  882, 850, 818, 818, 818, 818, 818, 850, 850, 882, 881, 881, 881, 881, 849, 849, 849, 849, 881, 881, 881, 849, 817, 818, 818, 819, 820, 821, 822, 823, 824, 792, 793, 761, 729, 697, 696, 664, 632, 633, 601, 602, 570, 538, 506, 474, 475, 443, 411, 412, 412, 413, 414, 415, 
[DBG]  (LNS.cpp) New path for agent 111: 
[DBG]  964, 996, 997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 973, 974, 975, 976, 944, 912, 880, 848, 849, 850, 818, 819, 820, 821, 822, 823, 824, 792, 793, 761, 729, 697, 696, 664, 632, 600, 601, 602, 570, 538, 539, 540, 
[DBG]  component_weights = {0.248733, 0.234105, 0.244816, 0.272346}
[DBG]  opSuccess value: 1
[STAT] neighbor.sum_of_costs before recomputation: 145
[STAT] neighbor.old_sum_of_costs before recomputation: 145
[STAT] sum_of_costs before recomputation: 4449
[DBG]  Validate solution immediately after SAT success.
[WARNING] Problem after SAT: Target conflict: agent 91 (len 50) traverses target of agent 24 (len 17) at location 633 at timestep 38
[DBG]  Attempting immediate repair via init_lns because problem occurred after SAT (should be applied only for conflicts...).
[DBG]  Passing 150 agents to init_lns (skip=true).
[DBG]  path_table contents for selected agents (neighbor.agents):
[DBG]    Agent 91 => controlling path length=51
[DBG]    Agent 109 => controlling path length=54
[DBG]    Agent 111 => controlling path length=43
[DBG]  hodnota skip_initial_solution=1
[DBG]  We skip initialSolution => call buildCollisionData()
[DBG]  buildCollisionData() called â€“ skip_initial_solution case.
[DBG]  Agents.size()=150, collision_graph.size()=150
[DBG]  agent 24 => updateCollidingPairs => foundCollision
[DBG]  agent 91 => updateCollidingPairs => foundCollision
[DBG]  agent 109 => updateCollidingPairs => foundCollision
[DBG]  Conflicting agent pairs:
[DBG]  agent 24 is in conflict with agent 91
[DBG]  agent 24 is in conflict with agent 109
[DBG]  buildCollisionData() => sum_of_costs=4449, num_of_colliding_pairs=2
[DBG]  buildCollisionData done => sum_of_costs=4449, num_of_colliding_pairs=2
[DBG]  sum_of_cost hodnota: 4449
[DBG]  After skip/init build => iteration_stats.back(): sum_of_costs=4449, collisions=2
[DEBUG] Using default neighbor generation strategy for conflicts: 0
	InitLNS(PP): runtime = 0.00188996, iterations = 2, colliding pairs = 0, initial colliding pairs = 2, solution cost = 4472, initial solution cost = 4449, failed iterations = 0
[DBG]  init_lns->sum_of_costs after init_lns->run: 4472
[DBG]  sum_of_costs after assignment from init_lns->run: 4472
[DBG]  Recomputing sum_of_cost by dividing neighbor.sum_of_costs and neighbor.old_sum_of_costs
[STAT] sum_of_costs after recomputation: 4472
[STAT] Iteration 13
[DBG]  Using SAT operator (destroy+repair SAT).
[DBG]  ====================
[DBG]  SAT destroy operator called.
[DBG]  SAT heuristic: 2
[DBG]  key_agent_id: 24
[DBG]  key_agent_id global path length: 41
[DBG]  Submap content (global positions):
[DBG]  571 572 573 574 575 
[DBG]  603 604 605 606 607 
[DBG]  635 636 637 638 639 
[DBG]  667 668 669 670 671 
[DBG]  699 700 701 702 703 
[DBG]  Map content with agents and obstacles:
[DBG]  A . X X X 
[DBG]  . . X X X 
[DBG]  . . A A A 
[DBG]  . . X . . 
[DBG]  X X . . . 
[DBG]  content of the map structure that we pass to the SAT solver:
[DBG]  1  1  -1  -1  -1  
[DBG]  1  1  -1  -1  -1  
[DBG]  1  1  1  1  1  
[DBG]  1  1  -1  1  1  
[DBG]  -1  -1  1  1  1  
[DBG]  Identifying agents in a submap for rescheduling (when key_agent is there at the time 29):
[DBG]  Agent 2 found intervals in the sub-map:
[DBG]   [22..32]
[DBG]  Agent 2 (interval in submap: [22..32]) contains time 29, added to replan.
[DBG]  Agent 24 found intervals in the sub-map:
[DBG]   [21..32]
[DBG]  Agent 24 (interval in submap: [21..32]) contains time 29, added to replan.
[DBG]  Agent 94 found intervals in the sub-map:
[DBG]   [0..29]
[DBG]  Agent 94 (interval in submap: [0..29]) contains time 29, added to replan.
[DBG]  Agent 133 found intervals in the sub-map:
[DBG]   [20..34]
[DBG]  Agent 133 (interval in submap: [20..34]) contains time 29, added to replan.
[DBG]  Agent 2 | Start (global): 638 -> (local): (2, 3) at time 29 | Goal (global): 701 -> (local): (4, 2) at time 32
[DBG]  Agent 24 | Start (global): 637 -> (local): (2, 2) at time 29 | Goal (global): 603 -> (local): (1, 0) at time 32
[DBG]  Agent 94 | Start (global): 571 -> (local): (0, 0) at time 29 | Goal (global): 571 -> (local): (0, 0) at time 29
[DBG]  Agent 133 | Start (global): 639 -> (local): (2, 4) at time 29 | Goal (global): 603 -> (local): (1, 0) at time 34
[DBG]  [REPAIR] SAT destroy operator called.
[DBG]  [REPAIR] SAT operator â€“ launching subproblem FOR OPTIMIZATION.
[DBG]  Creating local paths (sx, sy) in the submap for T_sync = 29
[DBG]    Agent 2 (global paths from T=29 to 32) has local path: (2,3) (3,3) (4,3) (4,2) 
[DBG]    Agent 24 (global paths from T=29 to 32) has local path: (2,2) (2,1) (1,1) (1,0) 
[DBG]    Agent 94 (global paths from T=29 to 29) has local path: (0,0) 
[DBG]    Agent 133 (global paths from T=29 to 34) has local path: (2,4) (2,3) (2,2) (2,1) (1,1) (1,0) 
[DBG]  Checking input data for SAT solver:
[DBG]    - Number of agents to replan: 4
[DBG]  Agent 2 has the original local path length: 4 => Start (2,3), Goal (4,2)
[DBG]  Agent 24 has the original local path length: 4 => Start (2,2), Goal (1,0)
[DBG]  Agent 94 has the original local path length: 1 => Start (0,0), Goal (0,0)
[DBG]  Agent 133 has the original local path length: 6 => Start (2,4), Goal (1,0)
[DBG]  Start position: (2, 3), (2, 2), (0, 0), (2, 4), 
[DBG]  Goal position: (4, 2), (1, 0), (0, 0), (1, 0), 
[DBG]  SAT instance and solver created.
Currently solving
Instance name: scen
Map name: map
Encoding used: disappear_at_goal
SAT solver used: Kissat
Optimizing function: sum of costs
Number of agents: 4
Mks LB: 6
SoC LB: 15
Delta: 0
Remaining time: 300000 [ms]

Vertex conflict! Agents 0, 1, timestep 4, location 0
Swapping conflict! Agents 0, 1, timestep 4, edge (0,0)
Vertex conflict! Agents 0, 1, timestep 5, location 0
Vertex conflict! Agents 0, 2, timestep 4, location 0
Swapping conflict! Agents 0, 2, timestep 4, edge (0,0)
Vertex conflict! Agents 0, 2, timestep 5, location 0
Vertex conflict! Agents 1, 2, timestep 4, location 0
Swapping conflict! Agents 1, 2, timestep 4, edge (0,0)
Vertex conflict! Agents 1, 2, timestep 5, location 0
Found plan [agents = 4] [timesteps = 6]
Agent #0 : 7 11 14 13 0 0 
Agent #1 : 6 5 4 2 0 0 
Agent #2 : 0 0 0 0 0 0 
Agent #3 : 8 7 6 5 4 2 

[STAT] Solver returned: 0
[DBG]  Agent (index) 2 | New local path (submap idx):
[DBG]  7 11 14 13 
[DBG]  Agent (index) 24 | New local path (submap idx):
[DBG]  6 5 4 2 
[DBG]  Agent (index) 94 | New local path (submap idx):
[DBG]  0 
[DBG]  Agent (index) 133 | New local path (submap idx):
[DBG]  8 7 6 5 4 2 
[DBG]  Update the agent path 2 | Original local length: 4 | New local length: 4
[DBG]  agent 2 t=0 => decoded (sx,sy)=(2,3) => global_id=638
[DBG]  agent 2 t=1 => decoded (sx,sy)=(3,3) => global_id=670
[DBG]  agent 2 t=2 => decoded (sx,sy)=(4,3) => global_id=702
[DBG]  agent 2 t=3 => decoded (sx,sy)=(4,2) => global_id=701
[DBG]  Complete path of agent 2:
[DBG]    Original: 59 91 123 122 121 153 185 217 249 281 313 345 345 377 409 441 473 474 506 538 570 602 603 604 604 636 637 638 639 638 670 702 701 733 765 764 
[DBG]    New:     59 91 123 122 121 153 185 217 249 281 313 345 345 377 409 441 473 474 506 538 570 602 603 604 604 636 637 638 639 638 670 702 701 733 765 764 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 59 91 123 122 121 153 185 217 249 281 313 345 345 377 409 441 473 474 506 538 570 602 603 604 604 636 637 638 639 
[DBG]    Local path (in submap): 638 670 702 701 
[DBG]    Suffix (out of submap): 733 765 764 
[DBG]  Original agent path length 2 je: 36
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 0: 59, 91, 123, 122, 121, 153, 185, 217, 249, 281, 313, 345, 345, 377, 409, 441, 473, 474, 506, 538, 570, 602, 603, 604, 604, 636, 637, 638, 639, 638, 670, 702, 701, 733, 765, 764, 
[DBG]  Path for agent 2 updated, resulting length: 36
[DBG]  Update the agent path 24 | Original local length: 4 | New local length: 4
[DBG]  agent 24 t=0 => decoded (sx,sy)=(2,2) => global_id=637
[DBG]  agent 24 t=1 => decoded (sx,sy)=(2,1) => global_id=636
[DBG]  agent 24 t=2 => decoded (sx,sy)=(2,0) => global_id=635
[DBG]  agent 24 t=3 => decoded (sx,sy)=(1,0) => global_id=603
[DBG]  Complete path of agent 24:
[DBG]    Original: 891 891 891 891 891 891 891 891 891 891 891 891 892 860 861 829 797 797 797 765 733 701 702 670 670 670 670 670 638 637 636 604 603 602 601 600 599 600 600 632 633 
[DBG]    New:     891 891 891 891 891 891 891 891 891 891 891 891 892 860 861 829 797 797 797 765 733 701 702 670 670 670 670 670 638 637 636 635 603 602 601 600 599 600 600 632 633 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 891 891 891 891 891 891 891 891 891 891 891 891 892 860 861 829 797 797 797 765 733 701 702 670 670 670 670 670 638 
[DBG]    Local path (in submap): 637 636 635 603 
[DBG]    Suffix (out of submap): 602 601 600 599 600 600 632 633 
[DBG]  Original agent path length 24 je: 41
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 1: 891, 891, 891, 891, 891, 891, 891, 891, 891, 891, 891, 891, 892, 860, 861, 829, 797, 797, 797, 765, 733, 701, 702, 670, 670, 670, 670, 670, 638, 637, 636, 635, 603, 602, 601, 600, 599, 600, 600, 632, 633, 
[DBG]  Path for agent 24 updated, resulting length: 41
[DBG]  Update the agent path 94 | Original local length: 1 | New local length: 1
[DBG]  agent 94 t=0 => decoded (sx,sy)=(0,0) => global_id=571
[DBG]  Complete path of agent 94:
[DBG]    Original: 701 702 703 703 703 703 703 703 703 703 703 702 670 638 639 639 639 639 639 639 638 637 636 668 668 668 636 604 603 571 570 538 506 505 473 472 440 408 376 344 345 313 281 249 248 248 216 
[DBG]    New:     701 702 703 703 703 703 703 703 703 703 703 702 670 638 639 639 639 639 639 639 638 637 636 668 668 668 636 604 603 571 570 538 506 505 473 472 440 408 376 344 345 313 281 249 248 248 216 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 701 702 703 703 703 703 703 703 703 703 703 702 670 638 639 639 639 639 639 639 638 637 636 668 668 668 636 604 603 
[DBG]    Local path (in submap): 571 
[DBG]    Suffix (out of submap): 570 538 506 505 473 472 440 408 376 344 345 313 281 249 248 248 216 
[DBG]  Original agent path length 94 je: 47
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 2: 701, 702, 703, 703, 703, 703, 703, 703, 703, 703, 703, 702, 670, 638, 639, 639, 639, 639, 639, 639, 638, 637, 636, 668, 668, 668, 636, 604, 603, 571, 570, 538, 506, 505, 473, 472, 440, 408, 376, 344, 345, 313, 281, 249, 248, 248, 216, 
[DBG]  Path for agent 94 updated, resulting length: 47
[DBG]  Update the agent path 133 | Original local length: 6 | New local length: 6
[DBG]  agent 133 t=0 => decoded (sx,sy)=(2,4) => global_id=639
[DBG]  agent 133 t=1 => decoded (sx,sy)=(2,3) => global_id=638
[DBG]  agent 133 t=2 => decoded (sx,sy)=(2,2) => global_id=637
[DBG]  agent 133 t=3 => decoded (sx,sy)=(2,1) => global_id=636
[DBG]  agent 133 t=4 => decoded (sx,sy)=(2,0) => global_id=635
[DBG]  agent 133 t=5 => decoded (sx,sy)=(1,0) => global_id=603
[DBG]  Complete path of agent 133:
[DBG]    Original: 956 924 924 924 924 892 892 892 892 892 892 892 860 861 862 830 798 766 765 733 701 702 703 671 671 671 671 671 671 639 638 637 636 604 603 602 570 538 506 474 473 472 472 440 408 376 
[DBG]    New:     956 924 924 924 924 892 892 892 892 892 892 892 860 861 862 830 798 766 765 733 701 702 703 671 671 671 671 671 671 639 638 637 636 635 603 602 570 538 506 474 473 472 472 440 408 376 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 956 924 924 924 924 892 892 892 892 892 892 892 860 861 862 830 798 766 765 733 701 702 703 671 671 671 671 671 671 
[DBG]    Local path (in submap): 639 638 637 636 635 603 
[DBG]    Suffix (out of submap): 602 570 538 506 474 473 472 472 440 408 376 
[DBG]  Original agent path length 133 je: 46
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 3: 956, 924, 924, 924, 924, 892, 892, 892, 892, 892, 892, 892, 860, 861, 862, 830, 798, 766, 765, 733, 701, 702, 703, 671, 671, 671, 671, 671, 671, 639, 638, 637, 636, 635, 603, 602, 570, 538, 506, 474, 473, 472, 472, 440, 408, 376, 
[DBG]  Path for agent 133 updated, resulting length: 46
[DBG]  Paths successfully updated.
[DBG]  (LNS.cpp) New path for agent 2: 
[DBG]  59, 91, 123, 122, 121, 153, 185, 217, 249, 281, 313, 345, 345, 377, 409, 441, 473, 474, 506, 538, 570, 602, 603, 604, 604, 636, 637, 638, 639, 638, 670, 702, 701, 733, 765, 764, 
[DBG]  (LNS.cpp) New path for agent 24: 
[DBG]  891, 891, 891, 891, 891, 891, 891, 891, 891, 891, 891, 891, 892, 860, 861, 829, 797, 797, 797, 765, 733, 701, 702, 670, 670, 670, 670, 670, 638, 637, 636, 635, 603, 602, 601, 600, 599, 600, 600, 632, 633, 
[DBG]  (LNS.cpp) New path for agent 94: 
[DBG]  701, 702, 703, 703, 703, 703, 703, 703, 703, 703, 703, 702, 670, 638, 639, 639, 639, 639, 639, 639, 638, 637, 636, 668, 668, 668, 636, 604, 603, 571, 570, 538, 506, 505, 473, 472, 440, 408, 376, 344, 345, 313, 281, 249, 248, 248, 216, 
[DBG]  (LNS.cpp) New path for agent 133: 
[DBG]  956, 924, 924, 924, 924, 892, 892, 892, 892, 892, 892, 892, 860, 861, 862, 830, 798, 766, 765, 733, 701, 702, 703, 671, 671, 671, 671, 671, 671, 639, 638, 637, 636, 635, 603, 602, 570, 538, 506, 474, 473, 472, 472, 440, 408, 376, 
[DBG]  component_weights = {0.252527, 0.232923, 0.243579, 0.27097}
[DBG]  opSuccess value: 1
[STAT] neighbor.sum_of_costs before recomputation: 166
[STAT] neighbor.old_sum_of_costs before recomputation: 166
[STAT] sum_of_costs before recomputation: 4472
[DBG]  Validate solution immediately after SAT success.
[DBG]  No problems after SAT replan.
[DBG]  Recomputing sum_of_cost by dividing neighbor.sum_of_costs and neighbor.old_sum_of_costs
[STAT] sum_of_costs after recomputation: 4472
[STAT] Iteration 14
[DBG]  Using SAT operator (destroy+repair SAT).
[DBG]  ====================
[DBG]  SAT destroy operator called.
[DBG]  SAT heuristic: 2
[DBG]  key_agent_id: 130
[DBG]  key_agent_id global path length: 31
[DBG]  Submap content (global positions):
[DBG]  782 783 784 785 786 
[DBG]  814 815 816 817 818 
[DBG]  846 847 848 849 850 
[DBG]  878 879 880 881 882 
[DBG]  910 911 912 913 914 
[DBG]  Map content with agents and obstacles:
[DBG]  . . . X . 
[DBG]  . A X . A 
[DBG]  . A A . . 
[DBG]  . . . . A 
[DBG]  . X . . . 
[DBG]  content of the map structure that we pass to the SAT solver:
[DBG]  1  1  1  -1  1  
[DBG]  1  1  -1  1  1  
[DBG]  1  1  1  1  1  
[DBG]  1  1  1  1  1  
[DBG]  1  -1  1  1  1  
[DBG]  Identifying agents in a submap for rescheduling (when key_agent is there at the time 6):
[DBG]  Agent 50 found intervals in the sub-map:
[DBG]   [6..14]
[DBG]  Agent 50 (interval in submap: [6..14]) contains time 6, added to replan.
[DBG]  Agent 61 found intervals in the sub-map:
[DBG]   [4..8]
[DBG]  Agent 61 (interval in submap: [4..8]) contains time 6, added to replan.
[DBG]  Agent 109 found intervals in the sub-map:
[DBG]   [0..24]
[DBG]  Agent 109 (interval in submap: [0..24]) contains time 6, added to replan.
[DBG]  Agent 118 found intervals in the sub-map:
[DBG]   [7..14]
[DBG]  Agent 118 is not in sub-map at time 6 (intervals: 
[DBG]  [7..14] )
[DBG]  Agent 130 found intervals in the sub-map:
[DBG]   [1..12]
[DBG]  Agent 130 (interval in submap: [1..12]) contains time 6, added to replan.
[DBG]  Agent 143 found intervals in the sub-map:
[DBG]   [3..8]
[DBG]  Agent 143 (interval in submap: [3..8]) contains time 6, added to replan.
[DBG]  Agent 50 | Start (global): 882 -> (local): (3, 4) at time 6 | Goal (global): 782 -> (local): (0, 0) at time 14
[DBG]  Agent 61 | Start (global): 815 -> (local): (1, 1) at time 6 | Goal (global): 784 -> (local): (0, 2) at time 8
[DBG]  Agent 109 | Start (global): 818 -> (local): (1, 4) at time 6 | Goal (global): 818 -> (local): (1, 4) at time 24
[DBG]  Agent 130 | Start (global): 848 -> (local): (2, 2) at time 6 | Goal (global): 782 -> (local): (0, 0) at time 12
[DBG]  Agent 143 | Start (global): 847 -> (local): (2, 1) at time 6 | Goal (global): 814 -> (local): (1, 0) at time 8
[DBG]  [REPAIR] SAT destroy operator called.
[DBG]  [REPAIR] SAT operator â€“ launching subproblem FOR OPTIMIZATION.
[DBG]  Creating local paths (sx, sy) in the submap for T_sync = 6
[DBG]    Agent 50 (global paths from T=6 to 14) has local path: (3,4) (3,3) (3,2) (3,1) (2,1) (1,1) (1,0) (1,0) (0,0) 
[DBG]    Agent 61 (global paths from T=6 to 8) has local path: (1,1) (0,1) (0,2) 
[DBG]    Agent 109 (global paths from T=6 to 24) has local path: (1,4) (2,4) (2,4) (3,4) (3,3) (3,3) (3,3) (3,3) (2,3) (2,3) (2,3) (2,3) (3,3) (3,3) (3,3) (2,3) (1,3) (1,4) (1,4) 
[DBG]    Agent 130 (global paths from T=6 to 12) has local path: (2,2) (2,1) (1,1) (1,1) (1,1) (1,0) (0,0) 
[DBG]    Agent 143 (global paths from T=6 to 8) has local path: (2,1) (1,1) (1,0) 
[DBG]  Checking input data for SAT solver:
[DBG]    - Number of agents to replan: 5
[DBG]  Agent 50 has the original local path length: 9 => Start (3,4), Goal (0,0)
[DBG]  Agent 61 has the original local path length: 3 => Start (1,1), Goal (0,2)
[DBG]  Agent 109 has the original local path length: 19 => Start (1,4), Goal (1,4)
[DBG]  Agent 130 has the original local path length: 7 => Start (2,2), Goal (0,0)
[DBG]  Agent 143 has the original local path length: 3 => Start (2,1), Goal (1,0)
[DBG]  Start position: (3, 4), (1, 1), (1, 4), (2, 2), (2, 1), 
[DBG]  Goal position: (0, 0), (0, 2), (1, 4), (0, 0), (1, 0), 
[DBG]  SAT instance and solver created.
Currently solving
Instance name: scen
Map name: map
Encoding used: disappear_at_goal
SAT solver used: Kissat
Optimizing function: sum of costs
Number of agents: 5
Mks LB: 8
SoC LB: 20
Delta: 0
Remaining time: 300000 [ms]

Vertex conflict! Agents 0, 1, timestep 7, location 0
Vertex conflict! Agents 0, 2, timestep 7, location 0
Vertex conflict! Agents 0, 3, timestep 7, location 0
Vertex conflict! Agents 0, 4, timestep 7, location 0
Vertex conflict! Agents 1, 2, timestep 3, location 0
Swapping conflict! Agents 1, 2, timestep 3, edge (0,0)
Vertex conflict! Agents 1, 2, timestep 4, location 0
Swapping conflict! Agents 1, 2, timestep 4, edge (0,0)
Vertex conflict! Agents 1, 2, timestep 5, location 0
Swapping conflict! Agents 1, 2, timestep 5, edge (0,0)
Vertex conflict! Agents 1, 2, timestep 6, location 0
Swapping conflict! Agents 1, 2, timestep 6, edge (0,0)
Vertex conflict! Agents 1, 2, timestep 7, location 0
Vertex conflict! Agents 1, 3, timestep 4, location 0
Swapping conflict! Agents 1, 3, timestep 4, edge (0,0)
Vertex conflict! Agents 1, 3, timestep 5, location 0
Swapping conflict! Agents 1, 3, timestep 5, edge (0,0)
Vertex conflict! Agents 1, 3, timestep 6, location 0
Swapping conflict! Agents 1, 3, timestep 6, edge (0,0)
Vertex conflict! Agents 1, 3, timestep 7, location 0
Vertex conflict! Agents 1, 4, timestep 3, location 0
Swapping conflict! Agents 1, 4, timestep 3, edge (0,0)
Vertex conflict! Agents 1, 4, timestep 4, location 0
Swapping conflict! Agents 1, 4, timestep 4, edge (0,0)
Vertex conflict! Agents 1, 4, timestep 5, location 0
Swapping conflict! Agents 1, 4, timestep 5, edge (0,0)
Vertex conflict! Agents 1, 4, timestep 6, location 0
Swapping conflict! Agents 1, 4, timestep 6, edge (0,0)
Vertex conflict! Agents 1, 4, timestep 7, location 0
Vertex conflict! Agents 2, 3, timestep 4, location 0
Swapping conflict! Agents 2, 3, timestep 4, edge (0,0)
Vertex conflict! Agents 2, 3, timestep 5, location 0
Swapping conflict! Agents 2, 3, timestep 5, edge (0,0)
Vertex conflict! Agents 2, 3, timestep 6, location 0
Swapping conflict! Agents 2, 3, timestep 6, edge (0,0)
Vertex conflict! Agents 2, 3, timestep 7, location 0
Vertex conflict! Agents 2, 4, timestep 3, location 0
Swapping conflict! Agents 2, 4, timestep 3, edge (0,0)
Vertex conflict! Agents 2, 4, timestep 4, location 0
Swapping conflict! Agents 2, 4, timestep 4, edge (0,0)
Vertex conflict! Agents 2, 4, timestep 5, location 0
Swapping conflict! Agents 2, 4, timestep 5, edge (0,0)
Vertex conflict! Agents 2, 4, timestep 6, location 0
Swapping conflict! Agents 2, 4, timestep 6, edge (0,0)
Vertex conflict! Agents 2, 4, timestep 7, location 0
Vertex conflict! Agents 3, 4, timestep 4, location 0
Swapping conflict! Agents 3, 4, timestep 4, edge (0,0)
Vertex conflict! Agents 3, 4, timestep 5, location 0
Swapping conflict! Agents 3, 4, timestep 5, edge (0,0)
Vertex conflict! Agents 3, 4, timestep 6, location 0
Swapping conflict! Agents 3, 4, timestep 6, edge (0,0)
Vertex conflict! Agents 3, 4, timestep 7, location 0
Found plan [agents = 5] [timesteps = 8]
Agent #0 : 17 16 15 14 13 8 4 0 
Agent #1 : 5 1 2 0 0 0 0 0 
Agent #2 : 7 0 0 0 0 0 0 0 
Agent #3 : 10 9 8 4 0 0 0 0 
Agent #4 : 9 8 4 0 0 0 0 0 

[STAT] Solver returned: 0
[DBG]  Agent (index) 50 | New local path (submap idx):
[DBG]  17 16 15 14 13 8 4 0 
[DBG]  Agent (index) 61 | New local path (submap idx):
[DBG]  5 1 2 
[DBG]  Agent (index) 109 | New local path (submap idx):
[DBG]  7 
[DBG]  Agent (index) 130 | New local path (submap idx):
[DBG]  10 9 8 4 0 
[DBG]  Agent (index) 143 | New local path (submap idx):
[DBG]  9 8 4 
[DBG]  Update the agent path 50 | Original local length: 9 | New local length: 8
[DBG]  agent 50 t=0 => decoded (sx,sy)=(3,4) => global_id=882
[DBG]  agent 50 t=1 => decoded (sx,sy)=(3,3) => global_id=881
[DBG]  agent 50 t=2 => decoded (sx,sy)=(3,2) => global_id=880
[DBG]  agent 50 t=3 => decoded (sx,sy)=(3,1) => global_id=879
[DBG]  agent 50 t=4 => decoded (sx,sy)=(3,0) => global_id=878
[DBG]  agent 50 t=5 => decoded (sx,sy)=(2,0) => global_id=846
[DBG]  agent 50 t=6 => decoded (sx,sy)=(1,0) => global_id=814
[DBG]  agent 50 t=7 => decoded (sx,sy)=(0,0) => global_id=782
[DBG]  Complete path of agent 50:
[DBG]    Original: 888 887 886 885 884 883 882 881 880 879 847 815 814 814 782 750 718 686 654 622 590 589 588 556 524 492 491 459 459 427 395 363 331 299 267 235 236 204 205 173 141 
[DBG]    New:     888 887 886 885 884 883 882 881 880 879 878 846 814 782 750 718 686 654 622 590 589 588 556 524 492 491 459 459 427 395 363 331 299 267 235 236 204 205 173 141 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 888 887 886 885 884 883 
[DBG]    Local path (in submap): 882 881 880 879 878 846 814 782 750 
[DBG]    Suffix (out of submap): 718 686 654 622 590 589 588 556 524 492 491 459 459 427 395 363 331 299 267 235 236 204 205 173 141 
[DBG]  Original agent path length 50 je: 41
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 0: 888, 887, 886, 885, 884, 883, 882, 881, 880, 879, 878, 846, 814, 782, 750, 718, 686, 654, 622, 590, 589, 588, 556, 524, 492, 491, 459, 459, 427, 395, 363, 331, 299, 267, 235, 236, 204, 205, 173, 141, 
[DBG]  Path for agent 50 updated, resulting length: 40
[DBG]  Update the agent path 61 | Original local length: 3 | New local length: 3
[DBG]  agent 61 t=0 => decoded (sx,sy)=(1,1) => global_id=815
[DBG]  agent 61 t=1 => decoded (sx,sy)=(0,1) => global_id=783
[DBG]  agent 61 t=2 => decoded (sx,sy)=(0,2) => global_id=784
[DBG]  Complete path of agent 61:
[DBG]    Original: 813 813 813 845 846 847 815 783 784 752 720 721 689 657 658 659 627 628 596 597 565 533 534 502 503 504 472 473 474 475 443 411 411 411 411 411 379 378 377 377 377 345 313 
[DBG]    New:     813 813 813 845 846 847 815 783 784 752 720 721 689 657 658 659 627 628 596 597 565 533 534 502 503 504 472 473 474 475 443 411 411 411 411 411 379 378 377 377 377 345 313 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 813 813 813 845 846 847 
[DBG]    Local path (in submap): 815 783 784 
[DBG]    Suffix (out of submap): 752 720 721 689 657 658 659 627 628 596 597 565 533 534 502 503 504 472 473 474 475 443 411 411 411 411 411 379 378 377 377 377 345 313 
[DBG]  Original agent path length 61 je: 43
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 1: 813, 813, 813, 845, 846, 847, 815, 783, 784, 752, 720, 721, 689, 657, 658, 659, 627, 628, 596, 597, 565, 533, 534, 502, 503, 504, 472, 473, 474, 475, 443, 411, 411, 411, 411, 411, 379, 378, 377, 377, 377, 345, 313, 
[DBG]  Path for agent 61 updated, resulting length: 43
[DBG]  Update the agent path 109 | Original local length: 19 | New local length: 1
[DBG]  agent 109 t=0 => decoded (sx,sy)=(1,4) => global_id=818
[DBG]  Complete path of agent 109:
[DBG]    Original: 882 850 818 818 818 818 818 850 850 882 881 881 881 881 849 849 849 849 881 881 881 849 817 818 818 819 820 821 822 823 824 792 793 761 729 697 696 664 632 633 601 602 570 538 506 474 475 443 411 412 412 413 414 415 
[DBG]    New:     882 850 818 818 818 818 818 819 820 821 822 823 824 792 793 761 729 697 696 664 632 633 601 602 570 538 506 474 475 443 411 412 412 413 414 415 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 882 850 818 818 818 818 
[DBG]    Local path (in submap): 818 819 820 821 822 823 824 792 793 761 729 697 696 664 632 633 601 602 570 
[DBG]    Suffix (out of submap): 538 506 474 475 443 411 412 412 413 414 415 
[DBG]  Original agent path length 109 je: 54
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 2: 882, 850, 818, 818, 818, 818, 818, 819, 820, 821, 822, 823, 824, 792, 793, 761, 729, 697, 696, 664, 632, 633, 601, 602, 570, 538, 506, 474, 475, 443, 411, 412, 412, 413, 414, 415, 
[DBG]  Path for agent 109 updated, resulting length: 36
[DBG]  Update the agent path 130 | Original local length: 7 | New local length: 5
[DBG]  agent 130 t=0 => decoded (sx,sy)=(2,2) => global_id=848
[DBG]  agent 130 t=1 => decoded (sx,sy)=(2,1) => global_id=847
[DBG]  agent 130 t=2 => decoded (sx,sy)=(2,0) => global_id=846
[DBG]  agent 130 t=3 => decoded (sx,sy)=(1,0) => global_id=814
[DBG]  agent 130 t=4 => decoded (sx,sy)=(0,0) => global_id=782
[DBG]  Complete path of agent 130:
[DBG]    Original: 944 912 880 848 849 849 848 847 815 815 815 814 782 781 780 748 747 715 714 713 712 680 648 649 649 650 651 619 587 619 651 
[DBG]    New:     944 912 880 848 849 849 848 847 846 814 782 781 780 748 747 715 714 713 712 680 648 649 649 650 651 619 587 619 651 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 944 912 880 848 849 849 
[DBG]    Local path (in submap): 848 847 846 814 782 781 780 
[DBG]    Suffix (out of submap): 748 747 715 714 713 712 680 648 649 649 650 651 619 587 619 651 
[DBG]  Original agent path length 130 je: 31
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 3: 944, 912, 880, 848, 849, 849, 848, 847, 846, 814, 782, 781, 780, 748, 747, 715, 714, 713, 712, 680, 648, 649, 649, 650, 651, 619, 587, 619, 651, 
[DBG]  Path for agent 130 updated, resulting length: 29
[DBG]  Update the agent path 143 | Original local length: 3 | New local length: 3
[DBG]  agent 143 t=0 => decoded (sx,sy)=(2,1) => global_id=847
[DBG]  agent 143 t=1 => decoded (sx,sy)=(2,0) => global_id=846
[DBG]  agent 143 t=2 => decoded (sx,sy)=(1,0) => global_id=814
[DBG]  Complete path of agent 143:
[DBG]    Original: 975 976 944 912 880 848 847 815 814 813 813 812 811 810 810 811 811 779 747 715 683 684 
[DBG]    New:     975 976 944 912 880 848 847 846 814 813 813 812 811 810 810 811 811 779 747 715 683 684 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 975 976 944 912 880 848 
[DBG]    Local path (in submap): 847 846 814 
[DBG]    Suffix (out of submap): 813 813 812 811 810 810 811 811 779 747 715 683 684 
[DBG]  Original agent path length 143 je: 22
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 4: 975, 976, 944, 912, 880, 848, 847, 846, 814, 813, 813, 812, 811, 810, 810, 811, 811, 779, 747, 715, 683, 684, 
[DBG]  Path for agent 143 updated, resulting length: 22
[DBG]  Paths successfully updated.
[DBG]  (LNS.cpp) New path for agent 50: 
[DBG]  888, 887, 886, 885, 884, 883, 882, 881, 880, 879, 878, 846, 814, 782, 750, 718, 686, 654, 622, 590, 589, 588, 556, 524, 492, 491, 459, 459, 427, 395, 363, 331, 299, 267, 235, 236, 204, 205, 173, 141, 
[DBG]  (LNS.cpp) New path for agent 61: 
[DBG]  813, 813, 813, 845, 846, 847, 815, 783, 784, 752, 720, 721, 689, 657, 658, 659, 627, 628, 596, 597, 565, 533, 534, 502, 503, 504, 472, 473, 474, 475, 443, 411, 411, 411, 411, 411, 379, 378, 377, 377, 377, 345, 313, 
[DBG]  (LNS.cpp) New path for agent 109: 
[DBG]  882, 850, 818, 818, 818, 818, 818, 819, 820, 821, 822, 823, 824, 792, 793, 761, 729, 697, 696, 664, 632, 633, 601, 602, 570, 538, 506, 474, 475, 443, 411, 412, 412, 413, 414, 415, 
[DBG]  (LNS.cpp) New path for agent 130: 
[DBG]  944, 912, 880, 848, 849, 849, 848, 847, 846, 814, 782, 781, 780, 748, 747, 715, 714, 713, 712, 680, 648, 649, 649, 650, 651, 619, 587, 619, 651, 
[DBG]  (LNS.cpp) New path for agent 143: 
[DBG]  975, 976, 944, 912, 880, 848, 847, 846, 814, 813, 813, 812, 811, 810, 810, 811, 811, 779, 747, 715, 683, 684, 
[DBG]  component_weights = {0.251061, 0.23157, 0.242164, 0.275205}
[DBG]  opSuccess value: 1
[STAT] neighbor.sum_of_costs before recomputation: 165
[STAT] neighbor.old_sum_of_costs before recomputation: 186
[STAT] sum_of_costs before recomputation: 4472
[DBG]  Validate solution immediately after SAT success.
[WARNING] Problem after SAT: Vertex conflict between agents 50 and 0 at location 686 at timestep 16
[DBG]  Attempting immediate repair via init_lns because problem occurred after SAT (should be applied only for conflicts...).
[DBG]  Passing 150 agents to init_lns (skip=true).
[DBG]  path_table contents for selected agents (neighbor.agents):
[DBG]    Agent 50 => controlling path length=40
[DBG]    Agent 61 => controlling path length=43
[DBG]    Agent 109 => controlling path length=36
[DBG]    Agent 130 => controlling path length=29
[DBG]    Agent 143 => controlling path length=22
[DBG]  hodnota skip_initial_solution=1
[DBG]  We skip initialSolution => call buildCollisionData()
[DBG]  buildCollisionData() called â€“ skip_initial_solution case.
[DBG]  Agents.size()=150, collision_graph.size()=150
[DBG]  agent 0 => updateCollidingPairs => foundCollision
[DBG]  agent 7 => updateCollidingPairs => foundCollision
[DBG]  agent 38 => updateCollidingPairs => foundCollision
[DBG]  agent 39 => updateCollidingPairs => foundCollision
[DBG]  agent 43 => updateCollidingPairs => foundCollision
[DBG]  agent 47 => updateCollidingPairs => foundCollision
[DBG]  agent 50 => updateCollidingPairs => foundCollision
[DBG]  agent 70 => updateCollidingPairs => foundCollision
[DBG]  agent 77 => updateCollidingPairs => foundCollision
[DBG]  agent 87 => updateCollidingPairs => foundCollision
[DBG]  agent 98 => updateCollidingPairs => foundCollision
[DBG]  agent 101 => updateCollidingPairs => foundCollision
[DBG]  agent 106 => updateCollidingPairs => foundCollision
[DBG]  agent 109 => updateCollidingPairs => foundCollision
[DBG]  agent 114 => updateCollidingPairs => foundCollision
[DBG]  agent 125 => updateCollidingPairs => foundCollision
[DBG]  agent 130 => updateCollidingPairs => foundCollision
[DBG]  agent 137 => updateCollidingPairs => foundCollision
[DBG]  agent 140 => updateCollidingPairs => foundCollision
[DBG]  Conflicting agent pairs:
[DBG]  agent 0 is in conflict with agent 50
[DBG]  agent 7 is in conflict with agent 109
[DBG]  agent 38 is in conflict with agent 109
[DBG]  agent 39 is in conflict with agent 50
[DBG]  agent 39 is in conflict with agent 130
[DBG]  agent 43 is in conflict with agent 130
[DBG]  agent 47 is in conflict with agent 109
[DBG]  agent 50 is in conflict with agent 106
[DBG]  agent 50 is in conflict with agent 125
[DBG]  agent 50 is in conflict with agent 137
[DBG]  agent 70 is in conflict with agent 109
[DBG]  agent 77 is in conflict with agent 109
[DBG]  agent 87 is in conflict with agent 130
[DBG]  agent 98 is in conflict with agent 130
[DBG]  agent 101 is in conflict with agent 130
[DBG]  agent 109 is in conflict with agent 140
[DBG]  agent 114 is in conflict with agent 130
[DBG]  buildCollisionData() => sum_of_costs=4451, num_of_colliding_pairs=17
[DBG]  buildCollisionData done => sum_of_costs=4451, num_of_colliding_pairs=17
[DBG]  sum_of_cost hodnota: 4451
[DBG]  After skip/init build => iteration_stats.back(): sum_of_costs=4451, collisions=17
[DEBUG] Using default neighbor generation strategy for conflicts: 0
[DEBUG] Using default neighbor generation strategy for conflicts: 0
[DEBUG] Using default neighbor generation strategy for conflicts: 2
[DEBUG] Using default neighbor generation strategy for conflicts: 1
	InitLNS(PP): runtime = 0.0243152, iterations = 5, colliding pairs = 0, initial colliding pairs = 17, solution cost = 4498, initial solution cost = 4451, failed iterations = 0
[DBG]  init_lns->sum_of_costs after init_lns->run: 4498
[DBG]  sum_of_costs after assignment from init_lns->run: 4498
[DBG]  Recomputing sum_of_cost by dividing neighbor.sum_of_costs and neighbor.old_sum_of_costs
[STAT] sum_of_costs after recomputation: 4498
[STAT] Iteration 15
[DBG]  Using SAT operator (destroy+repair SAT).
[DBG]  ====================
[DBG]  SAT destroy operator called.
[DBG]  SAT heuristic: 2
[DBG]  key_agent_id: 120
[DBG]  key_agent_id global path length: 43
[DBG]  Submap content (global positions):
[DBG]  137 138 139 140 141 
[DBG]  169 170 171 172 173 
[DBG]  201 202 203 204 205 
[DBG]  233 234 235 236 237 
[DBG]  265 266 267 268 269 
[DBG]  Map content with agents and obstacles:
[DBG]  . . . . . 
[DBG]  X . X . . 
[DBG]  X X A . A 
[DBG]  . A . . A 
[DBG]  . . . . . 
[DBG]  content of the map structure that we pass to the SAT solver:
[DBG]  1  1  1  1  1  
[DBG]  -1  1  -1  1  1  
[DBG]  -1  -1  1  1  1  
[DBG]  1  1  1  1  1  
[DBG]  1  1  1  1  1  
[DBG]  Identifying agents in a submap for rescheduling (when key_agent is there at the time 16):
[DBG]  Agent 15 found intervals in the sub-map:
[DBG]   [15..20]
[DBG]  Agent 15 (interval in submap: [15..20]) contains time 16, added to replan.
[DBG]  Agent 22 found intervals in the sub-map:
[DBG]   [13..15]
[DBG]  Agent 22 is not in sub-map at time 16 (intervals: 
[DBG]  [13..15] )
[DBG]  Agent 69 found intervals in the sub-map:
[DBG]   [10..17]
[DBG]  Agent 69 (interval in submap: [10..17]) contains time 16, added to replan.
[DBG]  Agent 82 found intervals in the sub-map:
[DBG]   [12..19]
[DBG]  Agent 82 (interval in submap: [12..19]) contains time 16, added to replan.
[DBG]  Agent 120 found intervals in the sub-map:
[DBG]   [0..40]
[DBG]  Agent 120 (interval in submap: [0..40]) contains time 16, added to replan.
[DBG]  Agent 15 | Start (global): 234 -> (local): (3, 1) at time 16 | Goal (global): 269 -> (local): (4, 4) at time 20
[DBG]  Agent 69 | Start (global): 237 -> (local): (3, 4) at time 16 | Goal (global): 269 -> (local): (4, 4) at time 17
[DBG]  Agent 82 | Start (global): 205 -> (local): (2, 4) at time 16 | Goal (global): 269 -> (local): (4, 4) at time 19
[DBG]  Agent 120 | Start (global): 203 -> (local): (2, 2) at time 16 | Goal (global): 233 -> (local): (3, 0) at time 40
[DBG]  [REPAIR] SAT destroy operator called.
[DBG]  [REPAIR] SAT operator â€“ launching subproblem FOR OPTIMIZATION.
[DBG]  Creating local paths (sx, sy) in the submap for T_sync = 16
[DBG]    Agent 15 (global paths from T=16 to 20) has local path: (3,1) (3,2) (3,3) (3,4) (4,4) 
[DBG]    Agent 69 (global paths from T=16 to 17) has local path: (3,4) (4,4) 
[DBG]    Agent 82 (global paths from T=16 to 19) has local path: (2,4) (3,4) (4,4) (4,4) 
[DBG]    Agent 120 (global paths from T=16 to 40) has local path: (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,3) (3,3) (3,3) (3,3) (3,3) (4,3) (4,3) (4,3) (4,3) (3,3) (3,2) (3,1) (3,0) (3,0) 
[DBG]  Checking input data for SAT solver:
[DBG]    - Number of agents to replan: 4
[DBG]  Agent 15 has the original local path length: 5 => Start (3,1), Goal (4,4)
[DBG]  Agent 69 has the original local path length: 2 => Start (3,4), Goal (4,4)
[DBG]  Agent 82 has the original local path length: 4 => Start (2,4), Goal (4,4)
[DBG]  Agent 120 has the original local path length: 25 => Start (2,2), Goal (3,0)
[DBG]  Start position: (3, 1), (3, 4), (2, 4), (2, 2), 
[DBG]  Goal position: (4, 4), (4, 4), (4, 4), (3, 0), 
[DBG]  SAT instance and solver created.
Currently solving
Instance name: scen
Map name: map
Encoding used: disappear_at_goal
SAT solver used: Kissat
Optimizing function: sum of costs
Number of agents: 4
Mks LB: 5
SoC LB: 14
Delta: 0
Remaining time: 300000 [ms]

Vertex conflict! Agents 1, 2, timestep 3, location 0
Swapping conflict! Agents 1, 2, timestep 3, edge (0,0)
Vertex conflict! Agents 1, 2, timestep 4, location 0
Vertex conflict! Agents 1, 3, timestep 4, location 0
Vertex conflict! Agents 2, 3, timestep 4, location 0
Found plan [agents = 4] [timesteps = 5]
Agent #0 : 12 17 18 19 20 
Agent #1 : 15 20 0 0 0 
Agent #2 : 10 15 20 0 0 
Agent #3 : 8 13 12 11 0 

[STAT] Solver returned: 0
[DBG]  Agent (index) 15 | New local path (submap idx):
[DBG]  12 17 18 19 20 
[DBG]  Agent (index) 69 | New local path (submap idx):
[DBG]  15 20 
[DBG]  Agent (index) 82 | New local path (submap idx):
[DBG]  10 15 20 
[DBG]  Agent (index) 120 | New local path (submap idx):
[DBG]  8 13 12 11 
[DBG]  Update the agent path 15 | Original local length: 5 | New local length: 5
[DBG]  agent 15 t=0 => decoded (sx,sy)=(3,1) => global_id=234
[DBG]  agent 15 t=1 => decoded (sx,sy)=(4,1) => global_id=266
[DBG]  agent 15 t=2 => decoded (sx,sy)=(4,2) => global_id=267
[DBG]  agent 15 t=3 => decoded (sx,sy)=(4,3) => global_id=268
[DBG]  agent 15 t=4 => decoded (sx,sy)=(4,4) => global_id=269
[DBG]  Complete path of agent 15:
[DBG]    Original: 288 288 256 257 258 258 259 260 261 293 294 295 263 264 232 233 234 235 236 237 269 270 271 239 240 241 242 210 178 179 147 148 116 117 118 119 120 121 122 123 124 156 157 
[DBG]    New:     288 288 256 257 258 258 259 260 261 293 294 295 263 264 232 233 234 266 267 268 269 270 271 239 240 241 242 210 178 179 147 148 116 117 118 119 120 121 122 123 124 156 157 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 288 288 256 257 258 258 259 260 261 293 294 295 263 264 232 233 
[DBG]    Local path (in submap): 234 266 267 268 269 
[DBG]    Suffix (out of submap): 270 271 239 240 241 242 210 178 179 147 148 116 117 118 119 120 121 122 123 124 156 157 
[DBG]  Original agent path length 15 je: 43
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 0: 288, 288, 256, 257, 258, 258, 259, 260, 261, 293, 294, 295, 263, 264, 232, 233, 234, 266, 267, 268, 269, 270, 271, 239, 240, 241, 242, 210, 178, 179, 147, 148, 116, 117, 118, 119, 120, 121, 122, 123, 124, 156, 157, 
[DBG]  Path for agent 15 updated, resulting length: 43
[DBG]  Update the agent path 69 | Original local length: 2 | New local length: 2
[DBG]  agent 69 t=0 => decoded (sx,sy)=(3,4) => global_id=237
[DBG]  agent 69 t=1 => decoded (sx,sy)=(4,4) => global_id=269
[DBG]  Complete path of agent 69:
[DBG]    Original: 4 5 37 69 70 71 72 73 105 106 138 139 140 172 204 205 237 269 301 333 365 366 398 430 462 494 526 558 590 591 623 655 687 719 751 783 815 847 848 849 850 818 819 820 
[DBG]    New:     4 5 37 69 70 71 72 73 105 106 138 139 140 172 204 205 237 269 301 333 365 366 398 430 462 494 526 558 590 591 623 655 687 719 751 783 815 847 848 849 850 818 819 820 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 4 5 37 69 70 71 72 73 105 106 138 139 140 172 204 205 
[DBG]    Local path (in submap): 237 269 
[DBG]    Suffix (out of submap): 301 333 365 366 398 430 462 494 526 558 590 591 623 655 687 719 751 783 815 847 848 849 850 818 819 820 
[DBG]  Original agent path length 69 je: 44
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 1: 4, 5, 37, 69, 70, 71, 72, 73, 105, 106, 138, 139, 140, 172, 204, 205, 237, 269, 301, 333, 365, 366, 398, 430, 462, 494, 526, 558, 590, 591, 623, 655, 687, 719, 751, 783, 815, 847, 848, 849, 850, 818, 819, 820, 
[DBG]  Path for agent 69 updated, resulting length: 44
[DBG]  Update the agent path 82 | Original local length: 4 | New local length: 3
[DBG]  agent 82 t=0 => decoded (sx,sy)=(2,4) => global_id=205
[DBG]  agent 82 t=1 => decoded (sx,sy)=(3,4) => global_id=237
[DBG]  agent 82 t=2 => decoded (sx,sy)=(4,4) => global_id=269
[DBG]  Complete path of agent 82:
[DBG]    Original: 75 75 75 75 75 107 107 107 107 107 107 107 139 140 141 173 205 237 269 269 301 333 365 366 398 
[DBG]    New:     75 75 75 75 75 107 107 107 107 107 107 107 139 140 141 173 205 237 269 301 333 365 366 398 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 75 75 75 75 75 107 107 107 107 107 107 107 139 140 141 173 
[DBG]    Local path (in submap): 205 237 269 301 
[DBG]    Suffix (out of submap): 333 365 366 398 
[DBG]  Original agent path length 82 je: 25
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 2: 75, 75, 75, 75, 75, 107, 107, 107, 107, 107, 107, 107, 139, 140, 141, 173, 205, 237, 269, 301, 333, 365, 366, 398, 
[DBG]  Path for agent 82 updated, resulting length: 24
[DBG]  Update the agent path 120 | Original local length: 25 | New local length: 4
[DBG]  agent 120 t=0 => decoded (sx,sy)=(2,2) => global_id=203
[DBG]  agent 120 t=1 => decoded (sx,sy)=(3,2) => global_id=235
[DBG]  agent 120 t=2 => decoded (sx,sy)=(3,1) => global_id=234
[DBG]  agent 120 t=3 => decoded (sx,sy)=(3,0) => global_id=233
[DBG]  Complete path of agent 120:
[DBG]    Original: 203 203 203 203 203 203 203 203 203 203 203 203 203 203 203 203 203 203 203 203 203 203 203 203 203 203 203 204 236 236 236 236 268 268 268 268 236 235 234 233 233 232 200 
[DBG]    New:     203 203 203 203 203 203 203 203 203 203 203 203 203 203 203 203 203 235 234 233 232 200 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 203 203 203 203 203 203 203 203 203 203 203 203 203 203 203 203 
[DBG]    Local path (in submap): 203 235 234 233 232 200 
[DBG]    Suffix (out of submap): 
[DBG]  Original agent path length 120 je: 43
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 3: 203, 203, 203, 203, 203, 203, 203, 203, 203, 203, 203, 203, 203, 203, 203, 203, 203, 235, 234, 233, 232, 200, 
[DBG]  Path for agent 120 updated, resulting length: 22
[DBG]  Paths successfully updated.
[DBG]  (LNS.cpp) New path for agent 15: 
[DBG]  288, 288, 256, 257, 258, 258, 259, 260, 261, 293, 294, 295, 263, 264, 232, 233, 234, 266, 267, 268, 269, 270, 271, 239, 240, 241, 242, 210, 178, 179, 147, 148, 116, 117, 118, 119, 120, 121, 122, 123, 124, 156, 157, 
[DBG]  (LNS.cpp) New path for agent 69: 
[DBG]  4, 5, 37, 69, 70, 71, 72, 73, 105, 106, 138, 139, 140, 172, 204, 205, 237, 269, 301, 333, 365, 366, 398, 430, 462, 494, 526, 558, 590, 591, 623, 655, 687, 719, 751, 783, 815, 847, 848, 849, 850, 818, 819, 820, 
[DBG]  (LNS.cpp) New path for agent 82: 
[DBG]  75, 75, 75, 75, 75, 107, 107, 107, 107, 107, 107, 107, 139, 140, 141, 173, 205, 237, 269, 301, 333, 365, 366, 398, 
[DBG]  (LNS.cpp) New path for agent 120: 
[DBG]  203, 203, 203, 203, 203, 203, 203, 203, 203, 203, 203, 203, 203, 203, 203, 203, 203, 235, 234, 233, 232, 200, 
[DBG]  component_weights = {0.249557, 0.230183, 0.240714, 0.279546}
[DBG]  opSuccess value: 1
[STAT] neighbor.sum_of_costs before recomputation: 129
[STAT] neighbor.old_sum_of_costs before recomputation: 151
[STAT] sum_of_costs before recomputation: 4498
[DBG]  Validate solution immediately after SAT success.
[WARNING] Problem after SAT: Vertex conflict between agents 82 and 5 at location 301 at timestep 19
[DBG]  Attempting immediate repair via init_lns because problem occurred after SAT (should be applied only for conflicts...).
[DBG]  Passing 150 agents to init_lns (skip=true).
[DBG]  path_table contents for selected agents (neighbor.agents):
[DBG]    Agent 15 => controlling path length=43
[DBG]    Agent 69 => controlling path length=44
[DBG]    Agent 82 => controlling path length=24
[DBG]    Agent 120 => controlling path length=22
[DBG]  hodnota skip_initial_solution=1
[DBG]  We skip initialSolution => call buildCollisionData()
[DBG]  buildCollisionData() called â€“ skip_initial_solution case.
[DBG]  Agents.size()=150, collision_graph.size()=150
[DBG]  agent 5 => updateCollidingPairs => foundCollision
[DBG]  agent 82 => updateCollidingPairs => foundCollision
[DBG]  agent 101 => updateCollidingPairs => foundCollision
[DBG]  agent 120 => updateCollidingPairs => foundCollision
[DBG]  Conflicting agent pairs:
[DBG]  agent 5 is in conflict with agent 82
[DBG]  agent 101 is in conflict with agent 120
[DBG]  buildCollisionData() => sum_of_costs=4476, num_of_colliding_pairs=2
[DBG]  buildCollisionData done => sum_of_costs=4476, num_of_colliding_pairs=2
[DBG]  sum_of_cost hodnota: 4476
[DBG]  After skip/init build => iteration_stats.back(): sum_of_costs=4476, collisions=2
[DEBUG] Using default neighbor generation strategy for conflicts: 1
[DEBUG] Using default neighbor generation strategy for conflicts: 2
[DEBUG] Using default neighbor generation strategy for conflicts: 0
	InitLNS(PP): runtime = 0.0102591, iterations = 4, colliding pairs = 0, initial colliding pairs = 2, solution cost = 4514, initial solution cost = 4476, failed iterations = 0
[DBG]  init_lns->sum_of_costs after init_lns->run: 4514
[DBG]  sum_of_costs after assignment from init_lns->run: 4514
[DBG]  Recomputing sum_of_cost by dividing neighbor.sum_of_costs and neighbor.old_sum_of_costs
[STAT] sum_of_costs after recomputation: 4514
[STAT] Iteration 16
[DBG]  Using SAT operator (destroy+repair SAT).
[DBG]  ====================
[DBG]  SAT destroy operator called.
[DBG]  SAT heuristic: 2
[DBG]  key_agent_id: 148
[DBG]  key_agent_id global path length: 35
[DBG]  Submap content (global positions):
[DBG]  710 711 712 713 714 
[DBG]  742 743 744 745 746 
[DBG]  774 775 776 777 778 
[DBG]  806 807 808 809 810 
[DBG]  838 839 840 841 842 
[DBG]  Map content with agents and obstacles:
[DBG]  . X A . . 
[DBG]  . X A A A 
[DBG]  A . A . . 
[DBG]  . . . . . 
[DBG]  . . X . X 
[DBG]  content of the map structure that we pass to the SAT solver:
[DBG]  1  -1  1  1  1  
[DBG]  1  -1  1  1  1  
[DBG]  1  1  1  1  1  
[DBG]  1  1  1  1  1  
[DBG]  1  1  -1  1  -1  
[DBG]  Identifying agents in a submap for rescheduling (when key_agent is there at the time 11):
[DBG]  Agent 32 found intervals in the sub-map:
[DBG]   [7..11]
[DBG]  Agent 32 (interval in submap: [7..11]) contains time 11, added to replan.
[DBG]  Agent 37 found intervals in the sub-map:
[DBG]   [0..11]
[DBG]  Agent 37 (interval in submap: [0..11]) contains time 11, added to replan.
[DBG]  Agent 98 found intervals in the sub-map:
[DBG]   [11..16]
[DBG]  Agent 98 (interval in submap: [11..16]) contains time 11, added to replan.
[DBG]  Agent 105 found intervals in the sub-map:
[DBG]   [8..13]
[DBG]  Agent 105 (interval in submap: [8..13]) contains time 11, added to replan.
[DBG]  Agent 122 found intervals in the sub-map:
[DBG]   [7..11]
[DBG]  Agent 122 (interval in submap: [7..11]) contains time 11, added to replan.
[DBG]  Agent 148 found intervals in the sub-map:
[DBG]   [0..13]
[DBG]  Agent 148 (interval in submap: [0..13]) contains time 11, added to replan.
[DBG]  Agent 32 | Start (global): 744 -> (local): (1, 2) at time 11 | Goal (global): 744 -> (local): (1, 2) at time 11
[DBG]  Agent 37 | Start (global): 746 -> (local): (1, 4) at time 11 | Goal (global): 746 -> (local): (1, 4) at time 11
[DBG]  Agent 98 | Start (global): 774 -> (local): (2, 0) at time 11 | Goal (global): 746 -> (local): (1, 4) at time 16
[DBG]  Agent 105 | Start (global): 745 -> (local): (1, 3) at time 11 | Goal (global): 714 -> (local): (0, 4) at time 13
[DBG]  Agent 122 | Start (global): 712 -> (local): (0, 2) at time 11 | Goal (global): 712 -> (local): (0, 2) at time 11
[DBG]  Agent 148 | Start (global): 776 -> (local): (2, 2) at time 11 | Goal (global): 778 -> (local): (2, 4) at time 13
[DBG]  [REPAIR] SAT destroy operator called.
[DBG]  [REPAIR] SAT operator â€“ launching subproblem FOR OPTIMIZATION.
[DBG]  Creating local paths (sx, sy) in the submap for T_sync = 11
[DBG]    Agent 32 (global paths from T=11 to 11) has local path: (1,2) 
[DBG]    Agent 37 (global paths from T=11 to 11) has local path: (1,4) 
[DBG]    Agent 98 (global paths from T=11 to 16) has local path: (2,0) (2,1) (2,2) (2,3) (2,4) (1,4) 
[DBG]    Agent 105 (global paths from T=11 to 13) has local path: (1,3) (1,4) (0,4) 
[DBG]    Agent 122 (global paths from T=11 to 11) has local path: (0,2) 
[DBG]    Agent 148 (global paths from T=11 to 13) has local path: (2,2) (2,3) (2,4) 
[DBG]  Checking input data for SAT solver:
[DBG]    - Number of agents to replan: 6
[DBG]  Agent 32 has the original local path length: 1 => Start (1,2), Goal (1,2)
[DBG]  Agent 37 has the original local path length: 1 => Start (1,4), Goal (1,4)
[DBG]  Agent 98 has the original local path length: 6 => Start (2,0), Goal (1,4)
[DBG]  Agent 105 has the original local path length: 3 => Start (1,3), Goal (0,4)
[DBG]  Agent 122 has the original local path length: 1 => Start (0,2), Goal (0,2)
[DBG]  Agent 148 has the original local path length: 3 => Start (2,2), Goal (2,4)
[DBG]  Start position: (1, 2), (1, 4), (2, 0), (1, 3), (0, 2), (2, 2), 
[DBG]  Goal position: (1, 2), (1, 4), (1, 4), (0, 4), (0, 2), (2, 4), 
[DBG]  SAT instance and solver created.
Currently solving
Instance name: scen
Map name: map
Encoding used: disappear_at_goal
SAT solver used: Kissat
Optimizing function: sum of costs
Number of agents: 6
Mks LB: 6
SoC LB: 15
Delta: 0
Remaining time: 300000 [ms]

Vertex conflict! Agents 0, 1, timestep 1, location 0
Swapping conflict! Agents 0, 1, timestep 1, edge (0,0)
Vertex conflict! Agents 0, 1, timestep 2, location 0
Swapping conflict! Agents 0, 1, timestep 2, edge (0,0)
Vertex conflict! Agents 0, 1, timestep 3, location 0
Swapping conflict! Agents 0, 1, timestep 3, edge (0,0)
Vertex conflict! Agents 0, 1, timestep 4, location 0
Swapping conflict! Agents 0, 1, timestep 4, edge (0,0)
Vertex conflict! Agents 0, 1, timestep 5, location 0
Vertex conflict! Agents 0, 3, timestep 3, location 0
Swapping conflict! Agents 0, 3, timestep 3, edge (0,0)
Vertex conflict! Agents 0, 3, timestep 4, location 0
Swapping conflict! Agents 0, 3, timestep 4, edge (0,0)
Vertex conflict! Agents 0, 3, timestep 5, location 0
Vertex conflict! Agents 0, 4, timestep 1, location 0
Swapping conflict! Agents 0, 4, timestep 1, edge (0,0)
Vertex conflict! Agents 0, 4, timestep 2, location 0
Swapping conflict! Agents 0, 4, timestep 2, edge (0,0)
Vertex conflict! Agents 0, 4, timestep 3, location 0
Swapping conflict! Agents 0, 4, timestep 3, edge (0,0)
Vertex conflict! Agents 0, 4, timestep 4, location 0
Swapping conflict! Agents 0, 4, timestep 4, edge (0,0)
Vertex conflict! Agents 0, 4, timestep 5, location 0
Vertex conflict! Agents 0, 5, timestep 3, location 0
Swapping conflict! Agents 0, 5, timestep 3, edge (0,0)
Vertex conflict! Agents 0, 5, timestep 4, location 0
Swapping conflict! Agents 0, 5, timestep 4, edge (0,0)
Vertex conflict! Agents 0, 5, timestep 5, location 0
Vertex conflict! Agents 1, 3, timestep 3, location 0
Swapping conflict! Agents 1, 3, timestep 3, edge (0,0)
Vertex conflict! Agents 1, 3, timestep 4, location 0
Swapping conflict! Agents 1, 3, timestep 4, edge (0,0)
Vertex conflict! Agents 1, 3, timestep 5, location 0
Vertex conflict! Agents 1, 4, timestep 1, location 0
Swapping conflict! Agents 1, 4, timestep 1, edge (0,0)
Vertex conflict! Agents 1, 4, timestep 2, location 0
Swapping conflict! Agents 1, 4, timestep 2, edge (0,0)
Vertex conflict! Agents 1, 4, timestep 3, location 0
Swapping conflict! Agents 1, 4, timestep 3, edge (0,0)
Vertex conflict! Agents 1, 4, timestep 4, location 0
Swapping conflict! Agents 1, 4, timestep 4, edge (0,0)
Vertex conflict! Agents 1, 4, timestep 5, location 0
Vertex conflict! Agents 1, 5, timestep 3, location 0
Swapping conflict! Agents 1, 5, timestep 3, edge (0,0)
Vertex conflict! Agents 1, 5, timestep 4, location 0
Swapping conflict! Agents 1, 5, timestep 4, edge (0,0)
Vertex conflict! Agents 1, 5, timestep 5, location 0
Vertex conflict! Agents 3, 4, timestep 3, location 0
Swapping conflict! Agents 3, 4, timestep 3, edge (0,0)
Vertex conflict! Agents 3, 4, timestep 4, location 0
Swapping conflict! Agents 3, 4, timestep 4, edge (0,0)
Vertex conflict! Agents 3, 4, timestep 5, location 0
Vertex conflict! Agents 3, 5, timestep 3, location 0
Swapping conflict! Agents 3, 5, timestep 3, edge (0,0)
Vertex conflict! Agents 3, 5, timestep 4, location 0
Swapping conflict! Agents 3, 5, timestep 4, edge (0,0)
Vertex conflict! Agents 3, 5, timestep 5, location 0
Vertex conflict! Agents 4, 5, timestep 3, location 0
Swapping conflict! Agents 4, 5, timestep 3, edge (0,0)
Vertex conflict! Agents 4, 5, timestep 4, location 0
Swapping conflict! Agents 4, 5, timestep 4, edge (0,0)
Vertex conflict! Agents 4, 5, timestep 5, location 0
Found plan [agents = 6] [timesteps = 6]
Agent #0 : 5 0 0 0 0 0 
Agent #1 : 7 0 0 0 0 0 
Agent #2 : 8 9 10 11 12 7 
Agent #3 : 6 7 3 0 0 0 
Agent #4 : 1 0 0 0 0 0 
Agent #5 : 10 11 12 0 0 0 

[STAT] Solver returned: 0
[DBG]  Agent (index) 32 | New local path (submap idx):
[DBG]  5 
[DBG]  Agent (index) 37 | New local path (submap idx):
[DBG]  7 
[DBG]  Agent (index) 98 | New local path (submap idx):
[DBG]  8 9 10 11 12 7 
[DBG]  Agent (index) 105 | New local path (submap idx):
[DBG]  6 7 3 
[DBG]  Agent (index) 122 | New local path (submap idx):
[DBG]  1 
[DBG]  Agent (index) 148 | New local path (submap idx):
[DBG]  10 11 12 
[DBG]  Update the agent path 32 | Original local length: 1 | New local length: 1
[DBG]  agent 32 t=0 => decoded (sx,sy)=(1,2) => global_id=744
[DBG]  Complete path of agent 32:
[DBG]    Original: 868 836 835 803 771 772 773 774 775 776 776 744 
[DBG]    New:     868 836 835 803 771 772 773 774 775 776 776 744 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 868 836 835 803 771 772 773 774 775 776 776 
[DBG]    Local path (in submap): 744 
[DBG]    Suffix (out of submap): 
[DBG]  Original agent path length 32 je: 12
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 0: 868, 836, 835, 803, 771, 772, 773, 774, 775, 776, 776, 744, 
[DBG]  Path for agent 32 updated, resulting length: 12
[DBG]  Update the agent path 37 | Original local length: 1 | New local length: 1
[DBG]  agent 37 t=0 => decoded (sx,sy)=(1,4) => global_id=746
[DBG]  Complete path of agent 37:
[DBG]    Original: 839 807 807 807 775 775 776 776 776 777 745 746 747 748 748 780 781 782 
[DBG]    New:     839 807 807 807 775 775 776 776 776 777 745 746 747 748 748 780 781 782 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 839 807 807 807 775 775 776 776 776 777 745 
[DBG]    Local path (in submap): 746 
[DBG]    Suffix (out of submap): 747 748 748 780 781 782 
[DBG]  Original agent path length 37 je: 18
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 1: 839, 807, 807, 807, 775, 775, 776, 776, 776, 777, 745, 746, 747, 748, 748, 780, 781, 782, 
[DBG]  Path for agent 37 updated, resulting length: 18
[DBG]  Update the agent path 98 | Original local length: 6 | New local length: 6
[DBG]  agent 98 t=0 => decoded (sx,sy)=(2,0) => global_id=774
[DBG]  agent 98 t=1 => decoded (sx,sy)=(2,1) => global_id=775
[DBG]  agent 98 t=2 => decoded (sx,sy)=(2,2) => global_id=776
[DBG]  agent 98 t=3 => decoded (sx,sy)=(2,3) => global_id=777
[DBG]  agent 98 t=4 => decoded (sx,sy)=(2,4) => global_id=778
[DBG]  agent 98 t=5 => decoded (sx,sy)=(1,4) => global_id=746
[DBG]  Complete path of agent 98:
[DBG]    Original: 897 865 864 832 800 801 769 770 771 772 773 774 775 776 777 778 746 747 715 683 684 685 653 654 622 590 589 589 589 590 558 
[DBG]    New:     897 865 864 832 800 801 769 770 771 772 773 774 775 776 777 778 746 747 715 683 684 685 653 654 622 590 589 589 589 590 558 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 897 865 864 832 800 801 769 770 771 772 773 
[DBG]    Local path (in submap): 774 775 776 777 778 746 
[DBG]    Suffix (out of submap): 747 715 683 684 685 653 654 622 590 589 589 589 590 558 
[DBG]  Original agent path length 98 je: 31
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 2: 897, 865, 864, 832, 800, 801, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 746, 747, 715, 683, 684, 685, 653, 654, 622, 590, 589, 589, 589, 590, 558, 
[DBG]  Path for agent 98 updated, resulting length: 31
[DBG]  Update the agent path 105 | Original local length: 3 | New local length: 3
[DBG]  agent 105 t=0 => decoded (sx,sy)=(1,3) => global_id=745
[DBG]  agent 105 t=1 => decoded (sx,sy)=(1,4) => global_id=746
[DBG]  agent 105 t=2 => decoded (sx,sy)=(0,4) => global_id=714
[DBG]  Complete path of agent 105:
[DBG]    Original: 1002 1001 1000 968 936 937 905 873 841 809 777 745 746 714 682 650 649 617 585 584 583 551 519 487 455 423 391 390 389 388 387 355 323 291 259 227 228 196 164 164 132 
[DBG]    New:     1002 1001 1000 968 936 937 905 873 841 809 777 745 746 714 682 650 649 617 585 584 583 551 519 487 455 423 391 390 389 388 387 355 323 291 259 227 228 196 164 164 132 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 1002 1001 1000 968 936 937 905 873 841 809 777 
[DBG]    Local path (in submap): 745 746 714 
[DBG]    Suffix (out of submap): 682 650 649 617 585 584 583 551 519 487 455 423 391 390 389 388 387 355 323 291 259 227 228 196 164 164 132 
[DBG]  Original agent path length 105 je: 41
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 3: 1002, 1001, 1000, 968, 936, 937, 905, 873, 841, 809, 777, 745, 746, 714, 682, 650, 649, 617, 585, 584, 583, 551, 519, 487, 455, 423, 391, 390, 389, 388, 387, 355, 323, 291, 259, 227, 228, 196, 164, 164, 132, 
[DBG]  Path for agent 105 updated, resulting length: 41
[DBG]  Update the agent path 122 | Original local length: 1 | New local length: 1
[DBG]  agent 122 t=0 => decoded (sx,sy)=(0,2) => global_id=712
[DBG]  Complete path of agent 122:
[DBG]    Original: 909 877 845 844 843 811 779 778 777 745 744 712 680 648 647 615 583 551 519 487 486 454 422 390 389 357 325 293 261 260 228 196 197 
[DBG]    New:     909 877 845 844 843 811 779 778 777 745 744 712 680 648 647 615 583 551 519 487 486 454 422 390 389 357 325 293 261 260 228 196 197 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 909 877 845 844 843 811 779 778 777 745 744 
[DBG]    Local path (in submap): 712 
[DBG]    Suffix (out of submap): 680 648 647 615 583 551 519 487 486 454 422 390 389 357 325 293 261 260 228 196 197 
[DBG]  Original agent path length 122 je: 33
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 4: 909, 877, 845, 844, 843, 811, 779, 778, 777, 745, 744, 712, 680, 648, 647, 615, 583, 551, 519, 487, 486, 454, 422, 390, 389, 357, 325, 293, 261, 260, 228, 196, 197, 
[DBG]  Path for agent 122 updated, resulting length: 33
[DBG]  Update the agent path 148 | Original local length: 3 | New local length: 3
[DBG]  agent 148 t=0 => decoded (sx,sy)=(2,2) => global_id=776
[DBG]  agent 148 t=1 => decoded (sx,sy)=(2,3) => global_id=777
[DBG]  agent 148 t=2 => decoded (sx,sy)=(2,4) => global_id=778
[DBG]  Complete path of agent 148:
[DBG]    Original: 776 808 808 808 808 808 807 806 806 807 775 776 777 778 779 747 715 683 684 685 653 653 654 686 686 686 686 687 688 689 657 658 659 659 660 
[DBG]    New:     776 808 808 808 808 808 807 806 806 807 775 776 777 778 779 747 715 683 684 685 653 653 654 686 686 686 686 687 688 689 657 658 659 659 660 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 776 808 808 808 808 808 807 806 806 807 775 
[DBG]    Local path (in submap): 776 777 778 
[DBG]    Suffix (out of submap): 779 747 715 683 684 685 653 653 654 686 686 686 686 687 688 689 657 658 659 659 660 
[DBG]  Original agent path length 148 je: 35
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 5: 776, 808, 808, 808, 808, 808, 807, 806, 806, 807, 775, 776, 777, 778, 779, 747, 715, 683, 684, 685, 653, 653, 654, 686, 686, 686, 686, 687, 688, 689, 657, 658, 659, 659, 660, 
[DBG]  Path for agent 148 updated, resulting length: 35
[DBG]  Paths successfully updated.
[DBG]  (LNS.cpp) New path for agent 32: 
[DBG]  868, 836, 835, 803, 771, 772, 773, 774, 775, 776, 776, 744, 
[DBG]  (LNS.cpp) New path for agent 37: 
[DBG]  839, 807, 807, 807, 775, 775, 776, 776, 776, 777, 745, 746, 747, 748, 748, 780, 781, 782, 
[DBG]  (LNS.cpp) New path for agent 98: 
[DBG]  897, 865, 864, 832, 800, 801, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 746, 747, 715, 683, 684, 685, 653, 654, 622, 590, 589, 589, 589, 590, 558, 
[DBG]  (LNS.cpp) New path for agent 105: 
[DBG]  1002, 1001, 1000, 968, 936, 937, 905, 873, 841, 809, 777, 745, 746, 714, 682, 650, 649, 617, 585, 584, 583, 551, 519, 487, 455, 423, 391, 390, 389, 388, 387, 355, 323, 291, 259, 227, 228, 196, 164, 164, 132, 
[DBG]  (LNS.cpp) New path for agent 122: 
[DBG]  909, 877, 845, 844, 843, 811, 779, 778, 777, 745, 744, 712, 680, 648, 647, 615, 583, 551, 519, 487, 486, 454, 422, 390, 389, 357, 325, 293, 261, 260, 228, 196, 197, 
[DBG]  (LNS.cpp) New path for agent 148: 
[DBG]  776, 808, 808, 808, 808, 808, 807, 806, 806, 807, 775, 776, 777, 778, 779, 747, 715, 683, 684, 685, 653, 653, 654, 686, 686, 686, 686, 687, 688, 689, 657, 658, 659, 659, 660, 
[DBG]  component_weights = {0.253359, 0.229017, 0.239494, 0.278129}
[DBG]  opSuccess value: 1
[STAT] neighbor.sum_of_costs before recomputation: 164
[STAT] neighbor.old_sum_of_costs before recomputation: 164
[STAT] sum_of_costs before recomputation: 4514
[DBG]  Validate solution immediately after SAT success.
[DBG]  No problems after SAT replan.
[DBG]  Recomputing sum_of_cost by dividing neighbor.sum_of_costs and neighbor.old_sum_of_costs
[STAT] sum_of_costs after recomputation: 4514
[STAT] Iteration 17
[DBG]  Using SAT operator (destroy+repair SAT).
[DBG]  ====================
[DBG]  SAT destroy operator called.
[DBG]  SAT heuristic: 2
[DBG]  key_agent_id: 116
[DBG]  key_agent_id global path length: 36
[DBG]  Submap content (global positions):
[DBG]  201 202 203 204 205 
[DBG]  233 234 235 236 237 
[DBG]  265 266 267 268 269 
[DBG]  297 298 299 300 301 
[DBG]  329 330 331 332 333 
[DBG]  Map content with agents and obstacles:
[DBG]  X X . A . 
[DBG]  . . . . . 
[DBG]  . A A . . 
[DBG]  . . . . A 
[DBG]  . . . X . 
[DBG]  content of the map structure that we pass to the SAT solver:
[DBG]  -1  -1  1  1  1  
[DBG]  1  1  1  1  1  
[DBG]  1  1  1  1  1  
[DBG]  1  1  1  1  1  
[DBG]  1  1  1  -1  1  
[DBG]  Identifying agents in a submap for rescheduling (when key_agent is there at the time 27):
[DBG]  Agent 13 found intervals in the sub-map:
[DBG]   [24..31]
[DBG]  Agent 13 (interval in submap: [24..31]) contains time 27, added to replan.
[DBG]  Agent 34 found intervals in the sub-map:
[DBG]   [24..27]
[DBG]  Agent 34 (interval in submap: [24..27]) contains time 27, added to replan.
[DBG]  Agent 63 found intervals in the sub-map:
[DBG]  
[DBG]  Agent 63 is not in sub-map at time 27 (intervals: 
[DBG]  )
[DBG]  Agent 116 found intervals in the sub-map:
[DBG]   [25..30]
[DBG]  Agent 116 (interval in submap: [25..30]) contains time 27, added to replan.
[DBG]  Agent 120 found intervals in the sub-map:
[DBG]   [0..33] [46..47]
[DBG]  Agent 120 (interval in submap: [0..33]) contains time 27, added to replan.
[DBG]  Agent 147 found intervals in the sub-map:
[DBG]   [29..35]
[DBG]  Agent 147 is not in sub-map at time 27 (intervals: 
[DBG]  [29..35] )
[DBG]  Agent 13 | Start (global): 266 -> (local): (2, 1) at time 27 | Goal (global): 204 -> (local): (0, 3) at time 31
[DBG]  Agent 34 | Start (global): 301 -> (local): (3, 4) at time 27 | Goal (global): 301 -> (local): (3, 4) at time 27
[DBG]  Agent 116 | Start (global): 267 -> (local): (2, 2) at time 27 | Goal (global): 204 -> (local): (0, 3) at time 30
[DBG]  Agent 120 | Start (global): 204 -> (local): (0, 3) at time 27 | Goal (global): 205 -> (local): (0, 4) at time 33
[DBG]  [REPAIR] SAT destroy operator called.
[DBG]  [REPAIR] SAT operator â€“ launching subproblem FOR OPTIMIZATION.
[DBG]  Creating local paths (sx, sy) in the submap for T_sync = 27
[DBG]    Agent 13 (global paths from T=27 to 31) has local path: (2,1) (2,2) (1,2) (0,2) (0,3) 
[DBG]    Agent 34 (global paths from T=27 to 27) has local path: (3,4) 
[DBG]    Agent 116 (global paths from T=27 to 30) has local path: (2,2) (2,3) (1,3) (0,3) 
[DBG]    Agent 120 (global paths from T=27 to 33) has local path: (0,3) (0,3) (0,4) (0,4) (0,4) (0,4) (0,4) 
[DBG]  Checking input data for SAT solver:
[DBG]    - Number of agents to replan: 4
[DBG]  Agent 13 has the original local path length: 5 => Start (2,1), Goal (0,3)
[DBG]  Agent 34 has the original local path length: 1 => Start (3,4), Goal (3,4)
[DBG]  Agent 116 has the original local path length: 4 => Start (2,2), Goal (0,3)
[DBG]  Agent 120 has the original local path length: 7 => Start (0,3), Goal (0,4)
[DBG]  Start position: (2, 1), (3, 4), (2, 2), (0, 3), 
[DBG]  Goal position: (0, 3), (3, 4), (0, 3), (0, 4), 
[DBG]  SAT instance and solver created.
Currently solving
Instance name: scen
Map name: map
Encoding used: disappear_at_goal
SAT solver used: Kissat
Optimizing function: sum of costs
Number of agents: 4
Mks LB: 5
SoC LB: 12
Delta: 0
Remaining time: 300000 [ms]

Vertex conflict! Agents 1, 2, timestep 4, location 0
Vertex conflict! Agents 1, 3, timestep 2, location 0
Swapping conflict! Agents 1, 3, timestep 2, edge (0,0)
Vertex conflict! Agents 1, 3, timestep 3, location 0
Swapping conflict! Agents 1, 3, timestep 3, edge (0,0)
Vertex conflict! Agents 1, 3, timestep 4, location 0
Vertex conflict! Agents 2, 3, timestep 4, location 0
Found plan [agents = 4] [timesteps = 5]
Agent #0 : 9 10 11 6 1 
Agent #1 : 17 0 0 0 0 
Agent #2 : 10 11 6 1 0 
Agent #3 : 1 2 0 0 0 

[STAT] Solver returned: 0
[DBG]  Agent (index) 13 | New local path (submap idx):
[DBG]  9 10 11 6 1 
[DBG]  Agent (index) 34 | New local path (submap idx):
[DBG]  17 
[DBG]  Agent (index) 116 | New local path (submap idx):
[DBG]  10 11 6 1 
[DBG]  Agent (index) 120 | New local path (submap idx):
[DBG]  1 2 
[DBG]  Update the agent path 13 | Original local length: 5 | New local length: 5
[DBG]  agent 13 t=0 => decoded (sx,sy)=(2,1) => global_id=266
[DBG]  agent 13 t=1 => decoded (sx,sy)=(2,2) => global_id=267
[DBG]  agent 13 t=2 => decoded (sx,sy)=(2,3) => global_id=268
[DBG]  agent 13 t=3 => decoded (sx,sy)=(1,3) => global_id=236
[DBG]  agent 13 t=4 => decoded (sx,sy)=(0,3) => global_id=204
[DBG]  Complete path of agent 13:
[DBG]    Original: 867 835 803 771 772 740 741 742 710 678 646 647 615 583 551 519 487 455 423 424 425 393 361 362 330 298 266 266 267 235 203 204 172 173 141 109 110 111 79 80 81 82 83 84 85 86 54 55 56 24 
[DBG]    New:     867 835 803 771 772 740 741 742 710 678 646 647 615 583 551 519 487 455 423 424 425 393 361 362 330 298 266 266 267 268 236 204 172 173 141 109 110 111 79 80 81 82 83 84 85 86 54 55 56 24 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 867 835 803 771 772 740 741 742 710 678 646 647 615 583 551 519 487 455 423 424 425 393 361 362 330 298 266 
[DBG]    Local path (in submap): 266 267 268 236 204 
[DBG]    Suffix (out of submap): 172 173 141 109 110 111 79 80 81 82 83 84 85 86 54 55 56 24 
[DBG]  Original agent path length 13 je: 50
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 0: 867, 835, 803, 771, 772, 740, 741, 742, 710, 678, 646, 647, 615, 583, 551, 519, 487, 455, 423, 424, 425, 393, 361, 362, 330, 298, 266, 266, 267, 268, 236, 204, 172, 173, 141, 109, 110, 111, 79, 80, 81, 82, 83, 84, 85, 86, 54, 55, 56, 24, 
[DBG]  Path for agent 13 updated, resulting length: 50
[DBG]  Update the agent path 34 | Original local length: 1 | New local length: 1
[DBG]  agent 34 t=0 => decoded (sx,sy)=(3,4) => global_id=301
[DBG]  Complete path of agent 34:
[DBG]    Original: 63 62 61 60 59 58 90 89 121 120 119 151 150 149 181 180 179 178 210 209 208 207 206 206 205 237 269 301 
[DBG]    New:     63 62 61 60 59 58 90 89 121 120 119 151 150 149 181 180 179 178 210 209 208 207 206 206 205 237 269 301 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 63 62 61 60 59 58 90 89 121 120 119 151 150 149 181 180 179 178 210 209 208 207 206 206 205 237 269 
[DBG]    Local path (in submap): 301 
[DBG]    Suffix (out of submap): 
[DBG]  Original agent path length 34 je: 28
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 1: 63, 62, 61, 60, 59, 58, 90, 89, 121, 120, 119, 151, 150, 149, 181, 180, 179, 178, 210, 209, 208, 207, 206, 206, 205, 237, 269, 301, 
[DBG]  Path for agent 34 updated, resulting length: 28
[DBG]  Update the agent path 116 | Original local length: 4 | New local length: 4
[DBG]  agent 116 t=0 => decoded (sx,sy)=(2,2) => global_id=267
[DBG]  agent 116 t=1 => decoded (sx,sy)=(2,3) => global_id=268
[DBG]  agent 116 t=2 => decoded (sx,sy)=(1,3) => global_id=236
[DBG]  agent 116 t=3 => decoded (sx,sy)=(0,3) => global_id=204
[DBG]  Complete path of agent 116:
[DBG]    Original: 549 549 549 549 549 549 549 549 549 549 581 582 583 551 519 520 521 522 490 491 459 459 427 395 363 331 299 267 268 236 204 172 140 139 138 137 
[DBG]    New:     549 549 549 549 549 549 549 549 549 549 581 582 583 551 519 520 521 522 490 491 459 459 427 395 363 331 299 267 268 236 204 172 140 139 138 137 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 549 549 549 549 549 549 549 549 549 549 581 582 583 551 519 520 521 522 490 491 459 459 427 395 363 331 299 
[DBG]    Local path (in submap): 267 268 236 204 
[DBG]    Suffix (out of submap): 172 140 139 138 137 
[DBG]  Original agent path length 116 je: 36
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 2: 549, 549, 549, 549, 549, 549, 549, 549, 549, 549, 581, 582, 583, 551, 519, 520, 521, 522, 490, 491, 459, 459, 427, 395, 363, 331, 299, 267, 268, 236, 204, 172, 140, 139, 138, 137, 
[DBG]  Path for agent 116 updated, resulting length: 36
[DBG]  Update the agent path 120 | Original local length: 7 | New local length: 2
[DBG]  agent 120 t=0 => decoded (sx,sy)=(0,3) => global_id=204
[DBG]  agent 120 t=1 => decoded (sx,sy)=(0,4) => global_id=205
[DBG]  Complete path of agent 120:
[DBG]    Original: 203 203 203 203 203 203 203 203 203 203 203 203 203 203 203 204 204 204 204 204 204 204 204 204 204 204 204 204 204 205 205 205 205 205 173 141 140 108 107 106 105 104 136 168 200 232 233 233 232 200 
[DBG]    New:     203 203 203 203 203 203 203 203 203 203 203 203 203 203 203 204 204 204 204 204 204 204 204 204 204 204 204 204 205 173 141 140 108 107 106 105 104 136 168 200 232 233 233 232 200 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 203 203 203 203 203 203 203 203 203 203 203 203 203 203 203 204 204 204 204 204 204 204 204 204 204 204 204 
[DBG]    Local path (in submap): 204 205 173 141 140 108 107 
[DBG]    Suffix (out of submap): 106 105 104 136 168 200 232 233 233 232 200 
[DBG]  Original agent path length 120 je: 50
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 3: 203, 203, 203, 203, 203, 203, 203, 203, 203, 203, 203, 203, 203, 203, 203, 204, 204, 204, 204, 204, 204, 204, 204, 204, 204, 204, 204, 204, 205, 173, 141, 140, 108, 107, 106, 105, 104, 136, 168, 200, 232, 233, 233, 232, 200, 
[DBG]  Path for agent 120 updated, resulting length: 45
[DBG]  Paths successfully updated.
[DBG]  (LNS.cpp) New path for agent 13: 
[DBG]  867, 835, 803, 771, 772, 740, 741, 742, 710, 678, 646, 647, 615, 583, 551, 519, 487, 455, 423, 424, 425, 393, 361, 362, 330, 298, 266, 266, 267, 268, 236, 204, 172, 173, 141, 109, 110, 111, 79, 80, 81, 82, 83, 84, 85, 86, 54, 55, 56, 24, 
[DBG]  (LNS.cpp) New path for agent 34: 
[DBG]  63, 62, 61, 60, 59, 58, 90, 89, 121, 120, 119, 151, 150, 149, 181, 180, 179, 178, 210, 209, 208, 207, 206, 206, 205, 237, 269, 301, 
[DBG]  (LNS.cpp) New path for agent 116: 
[DBG]  549, 549, 549, 549, 549, 549, 549, 549, 549, 549, 581, 582, 583, 551, 519, 520, 521, 522, 490, 491, 459, 459, 427, 395, 363, 331, 299, 267, 268, 236, 204, 172, 140, 139, 138, 137, 
[DBG]  (LNS.cpp) New path for agent 120: 
[DBG]  203, 203, 203, 203, 203, 203, 203, 203, 203, 203, 203, 203, 203, 203, 203, 204, 204, 204, 204, 204, 204, 204, 204, 204, 204, 204, 204, 204, 205, 173, 141, 140, 108, 107, 106, 105, 104, 136, 168, 200, 232, 233, 233, 232, 200, 
[DBG]  component_weights = {0.251907, 0.227704, 0.238122, 0.282267}
[DBG]  opSuccess value: 1
[STAT] neighbor.sum_of_costs before recomputation: 155
[STAT] neighbor.old_sum_of_costs before recomputation: 160
[STAT] sum_of_costs before recomputation: 4514
[DBG]  Validate solution immediately after SAT success.
[WARNING] Problem after SAT: Vertex conflict between agents 92 and 120 at location 205 at timestep 28
[DBG]  Attempting immediate repair via init_lns because problem occurred after SAT (should be applied only for conflicts...).
[DBG]  Passing 150 agents to init_lns (skip=true).
[DBG]  path_table contents for selected agents (neighbor.agents):
[DBG]    Agent 13 => controlling path length=50
[DBG]    Agent 34 => controlling path length=28
[DBG]    Agent 116 => controlling path length=36
[DBG]    Agent 120 => controlling path length=45
[DBG]  hodnota skip_initial_solution=1
[DBG]  We skip initialSolution => call buildCollisionData()
[DBG]  buildCollisionData() called â€“ skip_initial_solution case.
[DBG]  Agents.size()=150, collision_graph.size()=150
[DBG]  agent 92 => updateCollidingPairs => foundCollision
[DBG]  agent 101 => updateCollidingPairs => foundCollision
[DBG]  agent 120 => updateCollidingPairs => foundCollision
[DBG]  Conflicting agent pairs:
[DBG]  agent 92 is in conflict with agent 120
[DBG]  agent 101 is in conflict with agent 120
[DBG]  buildCollisionData() => sum_of_costs=4509, num_of_colliding_pairs=2
[DBG]  buildCollisionData done => sum_of_costs=4509, num_of_colliding_pairs=2
[DBG]  sum_of_cost hodnota: 4509
[DBG]  After skip/init build => iteration_stats.back(): sum_of_costs=4509, collisions=2
[DEBUG] Using default neighbor generation strategy for conflicts: 2
[DEBUG] Using default neighbor generation strategy for conflicts: 1
	InitLNS(PP): runtime = 0.00630271, iterations = 3, colliding pairs = 0, initial colliding pairs = 2, solution cost = 4514, initial solution cost = 4509, failed iterations = 0
[DBG]  init_lns->sum_of_costs after init_lns->run: 4514
[DBG]  sum_of_costs after assignment from init_lns->run: 4514
[DBG]  Recomputing sum_of_cost by dividing neighbor.sum_of_costs and neighbor.old_sum_of_costs
[STAT] sum_of_costs after recomputation: 4514
[STAT] Iteration 18
[DBG]  Using SAT operator (destroy+repair SAT).
[DBG]  ====================
[DBG]  SAT destroy operator called.
[DBG]  SAT heuristic: 2
[DBG]  key_agent_id: 3
[DBG]  key_agent_id global path length: 41
[DBG]  Submap content (global positions):
[DBG]  432 433 434 435 436 
[DBG]  464 465 466 467 468 
[DBG]  496 497 498 499 500 
[DBG]  528 529 530 531 532 
[DBG]  560 561 562 563 564 
[DBG]  Map content with agents and obstacles:
[DBG]  . . X . X 
[DBG]  A A . A . 
[DBG]  . X A . X 
[DBG]  . . A . X 
[DBG]  A . X . X 
[DBG]  content of the map structure that we pass to the SAT solver:
[DBG]  1  1  -1  1  -1  
[DBG]  1  1  1  1  1  
[DBG]  1  -1  1  1  -1  
[DBG]  1  1  1  1  -1  
[DBG]  1  1  -1  1  -1  
[DBG]  Identifying agents in a submap for rescheduling (when key_agent is there at the time 9):
[DBG]  Agent 3 found intervals in the sub-map:
[DBG]   [0..12]
[DBG]  Agent 3 (interval in submap: [0..12]) contains time 9, added to replan.
[DBG]  Agent 10 found intervals in the sub-map:
[DBG]   [8..13]
[DBG]  Agent 10 (interval in submap: [8..13]) contains time 9, added to replan.
[DBG]  Agent 36 found intervals in the sub-map:
[DBG]   [9..17]
[DBG]  Agent 36 (interval in submap: [9..17]) contains time 9, added to replan.
[DBG]  Agent 54 found intervals in the sub-map:
[DBG]   [0..4]
[DBG]  Agent 54 is not in sub-map at time 9 (intervals: 
[DBG]  [0..4] )
[DBG]  Agent 63 found intervals in the sub-map:
[DBG]   [9..14]
[DBG]  Agent 63 (interval in submap: [9..14]) contains time 9, added to replan.
[DBG]  Agent 131 found intervals in the sub-map:
[DBG]   [5..11]
[DBG]  Agent 131 (interval in submap: [5..11]) contains time 9, added to replan.
[DBG]  Agent 137 found intervals in the sub-map:
[DBG]   [8..17]
[DBG]  Agent 137 (interval in submap: [8..17]) contains time 9, added to replan.
[DBG]  Agent 3 | Start (global): 498 -> (local): (2, 2) at time 9 | Goal (global): 561 -> (local): (4, 1) at time 12
[DBG]  Agent 10 | Start (global): 465 -> (local): (1, 1) at time 9 | Goal (global): 468 -> (local): (1, 4) at time 13
[DBG]  Agent 36 | Start (global): 464 -> (local): (1, 0) at time 9 | Goal (global): 433 -> (local): (0, 1) at time 17
[DBG]  Agent 63 | Start (global): 560 -> (local): (4, 0) at time 9 | Goal (global): 432 -> (local): (0, 0) at time 14
[DBG]  Agent 131 | Start (global): 530 -> (local): (3, 2) at time 9 | Goal (global): 561 -> (local): (4, 1) at time 11
[DBG]  Agent 137 | Start (global): 467 -> (local): (1, 3) at time 9 | Goal (global): 464 -> (local): (1, 0) at time 17
[DBG]  [REPAIR] SAT destroy operator called.
[DBG]  [REPAIR] SAT operator â€“ launching subproblem FOR OPTIMIZATION.
[DBG]  Creating local paths (sx, sy) in the submap for T_sync = 9
[DBG]    Agent 3 (global paths from T=9 to 12) has local path: (2,2) (3,2) (3,1) (4,1) 
[DBG]    Agent 10 (global paths from T=9 to 13) has local path: (1,1) (1,2) (1,3) (1,4) (1,4) 
[DBG]    Agent 36 (global paths from T=9 to 17) has local path: (1,0) (2,0) (2,0) (1,0) (1,1) (0,1) (0,1) (0,1) (0,1) 
[DBG]    Agent 63 (global paths from T=9 to 14) has local path: (4,0) (3,0) (3,0) (2,0) (1,0) (0,0) 
[DBG]    Agent 131 (global paths from T=9 to 11) has local path: (3,2) (3,1) (4,1) 
[DBG]    Agent 137 (global paths from T=9 to 17) has local path: (1,3) (2,3) (2,2) (2,2) (2,2) (1,2) (1,1) (1,1) (1,0) 
[DBG]  Checking input data for SAT solver:
[DBG]    - Number of agents to replan: 6
[DBG]  Agent 3 has the original local path length: 4 => Start (2,2), Goal (4,1)
[DBG]  Agent 10 has the original local path length: 5 => Start (1,1), Goal (1,4)
[DBG]  Agent 36 has the original local path length: 9 => Start (1,0), Goal (0,1)
[DBG]  Agent 63 has the original local path length: 6 => Start (4,0), Goal (0,0)
[DBG]  Agent 131 has the original local path length: 3 => Start (3,2), Goal (4,1)
[DBG]  Agent 137 has the original local path length: 9 => Start (1,3), Goal (1,0)
[DBG]  Start position: (2, 2), (1, 1), (1, 0), (4, 0), (3, 2), (1, 3), 
[DBG]  Goal position: (4, 1), (1, 4), (0, 1), (0, 0), (4, 1), (1, 0), 
[DBG]  SAT instance and solver created.
Currently solving
Instance name: scen
Map name: map
Encoding used: disappear_at_goal
SAT solver used: Kissat
Optimizing function: sum of costs
Number of agents: 6
Mks LB: 5
SoC LB: 23
Delta: 0
Remaining time: 300000 [ms]

[STAT] Solver returned: -1
[DBG]  SAT solver failed.
[STAT] SAT solver failed to find a valid solution.
[DBG]  ====================
[DBG]  SAT destroy operator called.
[DBG]  SAT heuristic: 2
[DBG]  key_agent_id: 3
[DBG]  key_agent_id global path length: 41
[DBG]  Submap content (global positions):
[DBG]  401 402 403 404 405 
[DBG]  433 434 435 436 437 
[DBG]  465 466 467 468 469 
[DBG]  497 498 499 500 501 
[DBG]  529 530 531 532 533 
[DBG]  Map content with agents and obstacles:
[DBG]  A . . . . 
[DBG]  . X . X . 
[DBG]  . A A . A 
[DBG]  X . . X . 
[DBG]  . . . X . 
[DBG]  content of the map structure that we pass to the SAT solver:
[DBG]  1  1  1  1  1  
[DBG]  1  -1  1  -1  1  
[DBG]  1  1  1  1  1  
[DBG]  -1  1  1  -1  1  
[DBG]  1  1  1  -1  1  
[DBG]  Identifying agents in a submap for rescheduling (when key_agent is there at the time 7):
[DBG]  Agent 3 found intervals in the sub-map:
[DBG]   [0..11]
[DBG]  Agent 3 (interval in submap: [0..11]) contains time 7, added to replan.
[DBG]  Agent 36 found intervals in the sub-map:
[DBG]   [13..20]
[DBG]  Agent 36 is not in sub-map at time 7 (intervals: 
[DBG]  [13..20] )
[DBG]  Agent 121 found intervals in the sub-map:
[DBG]   [0..17]
[DBG]  Agent 121 (interval in submap: [0..17]) contains time 7, added to replan.
[DBG]  Agent 131 found intervals in the sub-map:
[DBG]   [2..10]
[DBG]  Agent 131 (interval in submap: [2..10]) contains time 7, added to replan.
[DBG]  Agent 137 found intervals in the sub-map:
[DBG]   [6..16]
[DBG]  Agent 137 (interval in submap: [6..16]) contains time 7, added to replan.
[DBG]  Agent 3 | Start (global): 467 -> (local): (2, 2) at time 7 | Goal (global): 529 -> (local): (4, 0) at time 11
[DBG]  Agent 121 | Start (global): 401 -> (local): (0, 0) at time 7 | Goal (global): 401 -> (local): (0, 0) at time 17
[DBG]  Agent 131 | Start (global): 466 -> (local): (2, 1) at time 7 | Goal (global): 529 -> (local): (4, 0) at time 10
[DBG]  Agent 137 | Start (global): 469 -> (local): (2, 4) at time 7 | Goal (global): 465 -> (local): (2, 0) at time 16
[DBG]  [REPAIR] SAT destroy operator called.
[DBG]  [REPAIR] SAT operator â€“ launching subproblem FOR OPTIMIZATION.
[DBG]  Creating local paths (sx, sy) in the submap for T_sync = 7
[DBG]    Agent 3 (global paths from T=7 to 11) has local path: (2,2) (3,2) (3,1) (4,1) (4,0) 
[DBG]    Agent 121 (global paths from T=7 to 17) has local path: (0,0) (0,0) (0,0) (0,0) (0,0) (0,0) (0,0) (0,0) (0,0) (0,0) (0,0) 
[DBG]    Agent 131 (global paths from T=7 to 10) has local path: (2,1) (3,1) (4,1) (4,0) 
[DBG]    Agent 137 (global paths from T=7 to 16) has local path: (2,4) (2,3) (2,2) (3,2) (3,1) (3,1) (3,1) (2,1) (2,0) (2,0) 
[DBG]  Checking input data for SAT solver:
[DBG]    - Number of agents to replan: 4
[DBG]  Agent 3 has the original local path length: 5 => Start (2,2), Goal (4,0)
[DBG]  Agent 121 has the original local path length: 11 => Start (0,0), Goal (0,0)
[DBG]  Agent 131 has the original local path length: 4 => Start (2,1), Goal (4,0)
[DBG]  Agent 137 has the original local path length: 10 => Start (2,4), Goal (2,0)
[DBG]  Start position: (2, 2), (0, 0), (2, 1), (2, 4), 
[DBG]  Goal position: (4, 0), (0, 0), (4, 0), (2, 0), 
[DBG]  SAT instance and solver created.
Currently solving
Instance name: scen
Map name: map
Encoding used: disappear_at_goal
SAT solver used: Kissat
Optimizing function: sum of costs
Number of agents: 4
Mks LB: 5
SoC LB: 15
Delta: 0
Remaining time: 300000 [ms]

Vertex conflict! Agents 1, 2, timestep 4, location 0
Found plan [agents = 4] [timesteps = 5]
Agent #0 : 10 14 18 17 16 
Agent #1 : 0 0 0 0 0 
Agent #2 : 9 13 17 16 0 
Agent #3 : 12 11 10 9 8 

[STAT] Solver returned: 0
[DBG]  Agent (index) 3 | New local path (submap idx):
[DBG]  10 14 18 17 16 
[DBG]  Agent (index) 121 | New local path (submap idx):
[DBG]  0 
[DBG]  Agent (index) 131 | New local path (submap idx):
[DBG]  9 13 17 16 
[DBG]  Agent (index) 137 | New local path (submap idx):
[DBG]  12 11 10 9 8 
[DBG]  Update the agent path 3 | Original local length: 5 | New local length: 5
[DBG]  agent 3 t=0 => decoded (sx,sy)=(2,2) => global_id=467
[DBG]  agent 3 t=1 => decoded (sx,sy)=(3,2) => global_id=499
[DBG]  agent 3 t=2 => decoded (sx,sy)=(4,2) => global_id=531
[DBG]  agent 3 t=3 => decoded (sx,sy)=(4,1) => global_id=530
[DBG]  agent 3 t=4 => decoded (sx,sy)=(4,0) => global_id=529
[DBG]  Complete path of agent 3:
[DBG]    Original: 468 468 468 468 468 468 468 467 499 498 530 529 561 593 594 594 594 594 594 594 594 594 593 592 591 591 590 622 654 655 687 719 751 783 815 847 879 880 912 913 912 
[DBG]    New:     468 468 468 468 468 468 468 467 499 531 530 529 561 593 594 594 594 594 594 594 594 594 593 592 591 591 590 622 654 655 687 719 751 783 815 847 879 880 912 913 912 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 468 468 468 468 468 468 468 
[DBG]    Local path (in submap): 467 499 531 530 529 
[DBG]    Suffix (out of submap): 561 593 594 594 594 594 594 594 594 594 593 592 591 591 590 622 654 655 687 719 751 783 815 847 879 880 912 913 912 
[DBG]  Original agent path length 3 je: 41
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 0: 468, 468, 468, 468, 468, 468, 468, 467, 499, 531, 530, 529, 561, 593, 594, 594, 594, 594, 594, 594, 594, 594, 593, 592, 591, 591, 590, 622, 654, 655, 687, 719, 751, 783, 815, 847, 879, 880, 912, 913, 912, 
[DBG]  Path for agent 3 updated, resulting length: 41
[DBG]  Update the agent path 121 | Original local length: 11 | New local length: 1
[DBG]  agent 121 t=0 => decoded (sx,sy)=(0,0) => global_id=401
[DBG]  Complete path of agent 121:
[DBG]    Original: 401 401 401 401 401 401 401 401 401 401 401 401 401 401 401 401 401 401 400 432 431 463 462 494 526 525 524 556 555 
[DBG]    New:     401 401 401 401 401 401 401 401 400 432 431 463 462 494 526 525 524 556 555 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 401 401 401 401 401 401 401 
[DBG]    Local path (in submap): 401 400 432 431 463 462 494 526 525 524 556 
[DBG]    Suffix (out of submap): 555 
[DBG]  Original agent path length 121 je: 29
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 1: 401, 401, 401, 401, 401, 401, 401, 401, 400, 432, 431, 463, 462, 494, 526, 525, 524, 556, 555, 
[DBG]  Path for agent 121 updated, resulting length: 19
[DBG]  Update the agent path 131 | Original local length: 4 | New local length: 4
[DBG]  agent 131 t=0 => decoded (sx,sy)=(2,1) => global_id=466
[DBG]  agent 131 t=1 => decoded (sx,sy)=(3,1) => global_id=498
[DBG]  agent 131 t=2 => decoded (sx,sy)=(4,1) => global_id=530
[DBG]  agent 131 t=3 => decoded (sx,sy)=(4,0) => global_id=529
[DBG]  Complete path of agent 131:
[DBG]    Original: 341 373 405 404 403 435 467 466 498 530 529 561 593 592 591 590 589 588 620 619 651 683 682 714 746 778 779 780 779 778 746 745 713 712 
[DBG]    New:     341 373 405 404 403 435 467 466 498 530 529 561 593 592 591 590 589 588 620 619 651 683 682 714 746 778 779 780 779 778 746 745 713 712 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 341 373 405 404 403 435 467 
[DBG]    Local path (in submap): 466 498 530 529 
[DBG]    Suffix (out of submap): 561 593 592 591 590 589 588 620 619 651 683 682 714 746 778 779 780 779 778 746 745 713 712 
[DBG]  Original agent path length 131 je: 34
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 2: 341, 373, 405, 404, 403, 435, 467, 466, 498, 530, 529, 561, 593, 592, 591, 590, 589, 588, 620, 619, 651, 683, 682, 714, 746, 778, 779, 780, 779, 778, 746, 745, 713, 712, 
[DBG]  Path for agent 131 updated, resulting length: 34
[DBG]  Update the agent path 137 | Original local length: 10 | New local length: 5
[DBG]  agent 137 t=0 => decoded (sx,sy)=(2,4) => global_id=469
[DBG]  agent 137 t=1 => decoded (sx,sy)=(2,3) => global_id=468
[DBG]  agent 137 t=2 => decoded (sx,sy)=(2,2) => global_id=467
[DBG]  agent 137 t=3 => decoded (sx,sy)=(2,1) => global_id=466
[DBG]  agent 137 t=4 => decoded (sx,sy)=(2,0) => global_id=465
[DBG]  Complete path of agent 137:
[DBG]    Original: 538 506 505 504 503 502 501 469 468 467 499 498 498 498 466 465 465 464 463 462 494 526 525 524 523 522 521 520 519 551 550 582 581 613 645 644 676 675 707 739 738 737 769 768 800 832 864 865 897 898 930 931 932 
[DBG]    New:     538 506 505 504 503 502 501 469 468 467 466 465 464 463 462 494 526 525 524 523 522 521 520 519 551 550 582 581 613 645 644 676 675 707 739 738 737 769 768 800 832 864 865 897 898 930 931 932 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 538 506 505 504 503 502 501 
[DBG]    Local path (in submap): 469 468 467 466 465 464 463 462 494 526 
[DBG]    Suffix (out of submap): 525 524 523 522 521 520 519 551 550 582 581 613 645 644 676 675 707 739 738 737 769 768 800 832 864 865 897 898 930 931 932 
[DBG]  Original agent path length 137 je: 53
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 3: 538, 506, 505, 504, 503, 502, 501, 469, 468, 467, 466, 465, 464, 463, 462, 494, 526, 525, 524, 523, 522, 521, 520, 519, 551, 550, 582, 581, 613, 645, 644, 676, 675, 707, 739, 738, 737, 769, 768, 800, 832, 864, 865, 897, 898, 930, 931, 932, 
[DBG]  Path for agent 137 updated, resulting length: 48
[DBG]  Paths successfully updated.
[DBG]  (LNS.cpp) New path for agent 3: 
[DBG]  468, 468, 468, 468, 468, 468, 468, 467, 499, 531, 530, 529, 561, 593, 594, 594, 594, 594, 594, 594, 594, 594, 593, 592, 591, 591, 590, 622, 654, 655, 687, 719, 751, 783, 815, 847, 879, 880, 912, 913, 912, 
[DBG]  (LNS.cpp) New path for agent 121: 
[DBG]  401, 401, 401, 401, 401, 401, 401, 401, 400, 432, 431, 463, 462, 494, 526, 525, 524, 556, 555, 
[DBG]  (LNS.cpp) New path for agent 131: 
[DBG]  341, 373, 405, 404, 403, 435, 467, 466, 498, 530, 529, 561, 593, 592, 591, 590, 589, 588, 620, 619, 651, 683, 682, 714, 746, 778, 779, 780, 779, 778, 746, 745, 713, 712, 
[DBG]  (LNS.cpp) New path for agent 137: 
[DBG]  538, 506, 505, 504, 503, 502, 501, 469, 468, 467, 466, 465, 464, 463, 462, 494, 526, 525, 524, 523, 522, 521, 520, 519, 551, 550, 582, 581, 613, 645, 644, 676, 675, 707, 739, 738, 737, 769, 768, 800, 832, 864, 865, 897, 898, 930, 931, 932, 
[DBG]  component_weights = {0.250394, 0.226336, 0.236691, 0.286578}
[DBG]  opSuccess value: 1
[STAT] neighbor.sum_of_costs before recomputation: 138
[STAT] neighbor.old_sum_of_costs before recomputation: 153
[STAT] sum_of_costs before recomputation: 4514
[DBG]  Validate solution immediately after SAT success.
[WARNING] Problem after SAT: Vertex conflict between agents 10 and 137 at location 466 at timestep 10
[DBG]  Attempting immediate repair via init_lns because problem occurred after SAT (should be applied only for conflicts...).
[DBG]  Passing 150 agents to init_lns (skip=true).
[DBG]  path_table contents for selected agents (neighbor.agents):
[DBG]    Agent 3 => controlling path length=41
[DBG]    Agent 121 => controlling path length=19
[DBG]    Agent 131 => controlling path length=34
[DBG]    Agent 137 => controlling path length=48
[DBG]  hodnota skip_initial_solution=1
[DBG]  We skip initialSolution => call buildCollisionData()
[DBG]  buildCollisionData() called â€“ skip_initial_solution case.
[DBG]  Agents.size()=150, collision_graph.size()=150
[DBG]  agent 10 => updateCollidingPairs => foundCollision
[DBG]  agent 20 => updateCollidingPairs => foundCollision
[DBG]  agent 33 => updateCollidingPairs => foundCollision
[DBG]  agent 36 => updateCollidingPairs => foundCollision
[DBG]  agent 50 => updateCollidingPairs => foundCollision
[DBG]  agent 81 => updateCollidingPairs => foundCollision
[DBG]  agent 87 => updateCollidingPairs => foundCollision
[DBG]  agent 103 => updateCollidingPairs => foundCollision
[DBG]  agent 106 => updateCollidingPairs => foundCollision
[DBG]  agent 121 => updateCollidingPairs => foundCollision
[DBG]  agent 132 => updateCollidingPairs => foundCollision
[DBG]  agent 137 => updateCollidingPairs => foundCollision
[DBG]  Conflicting agent pairs:
[DBG]  agent 10 is in conflict with agent 137
[DBG]  agent 20 is in conflict with agent 121
[DBG]  agent 33 is in conflict with agent 137
[DBG]  agent 36 is in conflict with agent 137
[DBG]  agent 50 is in conflict with agent 121
[DBG]  agent 81 is in conflict with agent 137
[DBG]  agent 87 is in conflict with agent 121
[DBG]  agent 87 is in conflict with agent 137
[DBG]  agent 103 is in conflict with agent 121
[DBG]  agent 106 is in conflict with agent 137
[DBG]  agent 121 is in conflict with agent 132
[DBG]  buildCollisionData() => sum_of_costs=4499, num_of_colliding_pairs=11
[DBG]  buildCollisionData done => sum_of_costs=4499, num_of_colliding_pairs=11
[DBG]  sum_of_cost hodnota: 4499
[DBG]  After skip/init build => iteration_stats.back(): sum_of_costs=4499, collisions=11
[DEBUG] Using default neighbor generation strategy for conflicts: 1
	InitLNS(PP): runtime = 0.010018, iterations = 2, colliding pairs = 0, initial colliding pairs = 11, solution cost = 4524, initial solution cost = 4499, failed iterations = 0
[DBG]  init_lns->sum_of_costs after init_lns->run: 4524
[DBG]  sum_of_costs after assignment from init_lns->run: 4524
[DBG]  Recomputing sum_of_cost by dividing neighbor.sum_of_costs and neighbor.old_sum_of_costs
[STAT] sum_of_costs after recomputation: 4524
[STAT] Iteration 19
[DBG]  Using SAT operator (destroy+repair SAT).
[DBG]  ====================
[DBG]  SAT destroy operator called.
[DBG]  SAT heuristic: 2
[DBG]  key_agent_id: 62
[DBG]  key_agent_id global path length: 33
[DBG]  Submap content (global positions):
[DBG]  401 402 403 404 405 
[DBG]  433 434 435 436 437 
[DBG]  465 466 467 468 469 
[DBG]  497 498 499 500 501 
[DBG]  529 530 531 532 533 
[DBG]  Map content with agents and obstacles:
[DBG]  . . . . . 
[DBG]  . X A X . 
[DBG]  . A A . . 
[DBG]  X A . X . 
[DBG]  A A . X A 
[DBG]  content of the map structure that we pass to the SAT solver:
[DBG]  1  1  1  1  1  
[DBG]  1  -1  1  -1  1  
[DBG]  1  1  1  1  1  
[DBG]  -1  1  1  -1  1  
[DBG]  1  1  1  -1  1  
[DBG]  Identifying agents in a submap for rescheduling (when key_agent is there at the time 27):
[DBG]  Agent 4 found intervals in the sub-map:
[DBG]  
[DBG]  Agent 4 is not in sub-map at time 27 (intervals: 
[DBG]  )
[DBG]  Agent 26 found intervals in the sub-map:
[DBG]   [23..27]
[DBG]  Agent 26 (interval in submap: [23..27]) contains time 27, added to replan.
[DBG]  Agent 42 found intervals in the sub-map:
[DBG]   [26..32]
[DBG]  Agent 42 (interval in submap: [26..32]) contains time 27, added to replan.
[DBG]  Agent 44 found intervals in the sub-map:
[DBG]   [19..28]
[DBG]  Agent 44 (interval in submap: [19..28]) contains time 27, added to replan.
[DBG]  Agent 53 found intervals in the sub-map:
[DBG]   [15..19] [25..25]
[DBG]  Agent 53 is not in sub-map at time 27 (intervals: 
[DBG]  [15..19] [25..25] )
[DBG]  Agent 62 found intervals in the sub-map:
[DBG]   [23..30]
[DBG]  Agent 62 (interval in submap: [23..30]) contains time 27, added to replan.
[DBG]  Agent 63 found intervals in the sub-map:
[DBG]  
[DBG]  Agent 63 is not in sub-map at time 27 (intervals: 
[DBG]  )
[DBG]  Agent 67 found intervals in the sub-map:
[DBG]   [23..31]
[DBG]  Agent 67 (interval in submap: [23..31]) contains time 27, added to replan.
[DBG]  Agent 100 found intervals in the sub-map:
[DBG]   [18..23] [27..27]
[DBG]  Agent 100 (interval in submap: [27..27]) contains time 27, added to replan.
[DBG]  Agent 114 found intervals in the sub-map:
[DBG]   [22..30]
[DBG]  Agent 114 (interval in submap: [22..30]) contains time 27, added to replan.
[DBG]  Agent 26 | Start (global): 533 -> (local): (4, 4) at time 27 | Goal (global): 533 -> (local): (4, 4) at time 27
[DBG]  Agent 42 | Start (global): 466 -> (local): (2, 1) at time 27 | Goal (global): 533 -> (local): (4, 4) at time 32
[DBG]  Agent 44 | Start (global): 530 -> (local): (4, 1) at time 27 | Goal (global): 529 -> (local): (4, 0) at time 28
[DBG]  Agent 62 | Start (global): 467 -> (local): (2, 2) at time 27 | Goal (global): 437 -> (local): (1, 4) at time 30
[DBG]  Agent 67 | Start (global): 498 -> (local): (3, 1) at time 27 | Goal (global): 469 -> (local): (2, 4) at time 31
[DBG]  Agent 100 | Start (global): 529 -> (local): (4, 0) at time 27 | Goal (global): 529 -> (local): (4, 0) at time 27
[DBG]  Agent 114 | Start (global): 435 -> (local): (1, 2) at time 27 | Goal (global): 405 -> (local): (0, 4) at time 30
[DBG]  [REPAIR] SAT destroy operator called.
[DBG]  [REPAIR] SAT operator â€“ launching subproblem FOR OPTIMIZATION.
[DBG]  Creating local paths (sx, sy) in the submap for T_sync = 27
[DBG]    Agent 26 (global paths from T=27 to 27) has local path: (4,4) 
[DBG]    Agent 42 (global paths from T=27 to 32) has local path: (2,1) (2,2) (2,3) (2,4) (3,4) (4,4) 
[DBG]    Agent 44 (global paths from T=27 to 28) has local path: (4,1) (4,0) 
[DBG]    Agent 62 (global paths from T=27 to 30) has local path: (2,2) (2,3) (2,4) (1,4) 
[DBG]    Agent 67 (global paths from T=27 to 31) has local path: (3,1) (3,2) (2,2) (2,3) (2,4) 
[DBG]    Agent 100 (global paths from T=27 to 27) has local path: (4,0) 
[DBG]    Agent 114 (global paths from T=27 to 30) has local path: (1,2) (0,2) (0,3) (0,4) 
[DBG]  Checking input data for SAT solver:
[DBG]    - Number of agents to replan: 7
[DBG]  Agent 26 has the original local path length: 1 => Start (4,4), Goal (4,4)
[DBG]  Agent 42 has the original local path length: 6 => Start (2,1), Goal (4,4)
[DBG]  Agent 44 has the original local path length: 2 => Start (4,1), Goal (4,0)
[DBG]  Agent 62 has the original local path length: 4 => Start (2,2), Goal (1,4)
[DBG]  Agent 67 has the original local path length: 5 => Start (3,1), Goal (2,4)
[DBG]  Agent 100 has the original local path length: 1 => Start (4,0), Goal (4,0)
[DBG]  Agent 114 has the original local path length: 4 => Start (1,2), Goal (0,4)
[DBG]  Start position: (4, 4), (2, 1), (4, 1), (2, 2), (3, 1), (4, 0), (1, 2), 
[DBG]  Goal position: (4, 4), (4, 4), (4, 0), (1, 4), (2, 4), (4, 0), (0, 4), 
[DBG]  SAT instance and solver created.
Currently solving
Instance name: scen
Map name: map
Encoding used: disappear_at_goal
SAT solver used: Kissat
Optimizing function: sum of costs
Number of agents: 7
Mks LB: 6
SoC LB: 23
Delta: 0
Remaining time: 300000 [ms]

Vertex conflict! Agents 0, 2, timestep 2, location 0
Swapping conflict! Agents 0, 2, timestep 2, edge (0,0)
Vertex conflict! Agents 0, 2, timestep 3, location 0
Swapping conflict! Agents 0, 2, timestep 3, edge (0,0)
Vertex conflict! Agents 0, 2, timestep 4, location 0
Swapping conflict! Agents 0, 2, timestep 4, edge (0,0)
Vertex conflict! Agents 0, 2, timestep 5, location 0
Vertex conflict! Agents 0, 3, timestep 4, location 0
Swapping conflict! Agents 0, 3, timestep 4, edge (0,0)
Vertex conflict! Agents 0, 3, timestep 5, location 0
Vertex conflict! Agents 0, 4, timestep 5, location 0
Vertex conflict! Agents 0, 5, timestep 1, location 0
Swapping conflict! Agents 0, 5, timestep 1, edge (0,0)
Vertex conflict! Agents 0, 5, timestep 2, location 0
Swapping conflict! Agents 0, 5, timestep 2, edge (0,0)
Vertex conflict! Agents 0, 5, timestep 3, location 0
Swapping conflict! Agents 0, 5, timestep 3, edge (0,0)
Vertex conflict! Agents 0, 5, timestep 4, location 0
Swapping conflict! Agents 0, 5, timestep 4, edge (0,0)
Vertex conflict! Agents 0, 5, timestep 5, location 0
Vertex conflict! Agents 0, 6, timestep 4, location 0
Swapping conflict! Agents 0, 6, timestep 4, edge (0,0)
Vertex conflict! Agents 0, 6, timestep 5, location 0
Vertex conflict! Agents 2, 3, timestep 4, location 0
Swapping conflict! Agents 2, 3, timestep 4, edge (0,0)
Vertex conflict! Agents 2, 3, timestep 5, location 0
Vertex conflict! Agents 2, 4, timestep 5, location 0
Vertex conflict! Agents 2, 5, timestep 2, location 0
Swapping conflict! Agents 2, 5, timestep 2, edge (0,0)
Vertex conflict! Agents 2, 5, timestep 3, location 0
Swapping conflict! Agents 2, 5, timestep 3, edge (0,0)
Vertex conflict! Agents 2, 5, timestep 4, location 0
Swapping conflict! Agents 2, 5, timestep 4, edge (0,0)
Vertex conflict! Agents 2, 5, timestep 5, location 0
Vertex conflict! Agents 2, 6, timestep 4, location 0
Swapping conflict! Agents 2, 6, timestep 4, edge (0,0)
Vertex conflict! Agents 2, 6, timestep 5, location 0
Vertex conflict! Agents 3, 4, timestep 5, location 0
Vertex conflict! Agents 3, 5, timestep 4, location 0
Swapping conflict! Agents 3, 5, timestep 4, edge (0,0)
Vertex conflict! Agents 3, 5, timestep 5, location 0
Vertex conflict! Agents 3, 6, timestep 4, location 0
Swapping conflict! Agents 3, 6, timestep 4, edge (0,0)
Vertex conflict! Agents 3, 6, timestep 5, location 0
Vertex conflict! Agents 4, 5, timestep 5, location 0
Vertex conflict! Agents 4, 6, timestep 5, location 0
Vertex conflict! Agents 5, 6, timestep 4, location 0
Swapping conflict! Agents 5, 6, timestep 4, edge (0,0)
Vertex conflict! Agents 5, 6, timestep 5, location 0
Found plan [agents = 7] [timesteps = 6]
Agent #0 : 19 0 0 0 0 0 
Agent #1 : 9 10 11 12 15 19 
Agent #2 : 17 16 0 0 0 0 
Agent #3 : 10 11 12 7 0 0 
Agent #4 : 13 14 10 11 12 0 
Agent #5 : 16 0 0 0 0 0 
Agent #6 : 6 2 3 4 0 0 

[STAT] Solver returned: 0
[DBG]  Agent (index) 26 | New local path (submap idx):
[DBG]  19 
[DBG]  Agent (index) 42 | New local path (submap idx):
[DBG]  9 10 11 12 15 19 
[DBG]  Agent (index) 44 | New local path (submap idx):
[DBG]  17 16 
[DBG]  Agent (index) 62 | New local path (submap idx):
[DBG]  10 11 12 7 
[DBG]  Agent (index) 67 | New local path (submap idx):
[DBG]  13 14 10 11 12 
[DBG]  Agent (index) 100 | New local path (submap idx):
[DBG]  16 
[DBG]  Agent (index) 114 | New local path (submap idx):
[DBG]  6 2 3 4 
[DBG]  Update the agent path 26 | Original local length: 1 | New local length: 1
[DBG]  agent 26 t=0 => decoded (sx,sy)=(4,4) => global_id=533
[DBG]  Complete path of agent 26:
[DBG]    Original: 13 13 45 46 47 79 80 81 82 83 115 147 148 180 212 244 276 277 278 310 309 341 373 405 437 469 501 533 565 597 629 628 660 692 724 756 755 
[DBG]    New:     13 13 45 46 47 79 80 81 82 83 115 147 148 180 212 244 276 277 278 310 309 341 373 405 437 469 501 533 565 597 629 628 660 692 724 756 755 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 13 13 45 46 47 79 80 81 82 83 115 147 148 180 212 244 276 277 278 310 309 341 373 405 437 469 501 
[DBG]    Local path (in submap): 533 
[DBG]    Suffix (out of submap): 565 597 629 628 660 692 724 756 755 
[DBG]  Original agent path length 26 je: 37
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 0: 13, 13, 45, 46, 47, 79, 80, 81, 82, 83, 115, 147, 148, 180, 212, 244, 276, 277, 278, 310, 309, 341, 373, 405, 437, 469, 501, 533, 565, 597, 629, 628, 660, 692, 724, 756, 755, 
[DBG]  Path for agent 26 updated, resulting length: 37
[DBG]  Update the agent path 42 | Original local length: 6 | New local length: 6
[DBG]  agent 42 t=0 => decoded (sx,sy)=(2,1) => global_id=466
[DBG]  agent 42 t=1 => decoded (sx,sy)=(2,2) => global_id=467
[DBG]  agent 42 t=2 => decoded (sx,sy)=(2,3) => global_id=468
[DBG]  agent 42 t=3 => decoded (sx,sy)=(2,4) => global_id=469
[DBG]  agent 42 t=4 => decoded (sx,sy)=(3,4) => global_id=501
[DBG]  agent 42 t=5 => decoded (sx,sy)=(4,4) => global_id=533
[DBG]  Complete path of agent 42:
[DBG]    Original: 224 256 257 289 321 353 354 354 355 356 388 420 421 422 423 424 425 426 427 428 429 430 431 432 432 464 465 466 467 468 469 501 533 565 597 629 628 627 659 691 692 724 725 726 727 759 
[DBG]    New:     224 256 257 289 321 353 354 354 355 356 388 420 421 422 423 424 425 426 427 428 429 430 431 432 432 464 465 466 467 468 469 501 533 565 597 629 628 627 659 691 692 724 725 726 727 759 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 224 256 257 289 321 353 354 354 355 356 388 420 421 422 423 424 425 426 427 428 429 430 431 432 432 464 465 
[DBG]    Local path (in submap): 466 467 468 469 501 533 
[DBG]    Suffix (out of submap): 565 597 629 628 627 659 691 692 724 725 726 727 759 
[DBG]  Original agent path length 42 je: 46
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 1: 224, 256, 257, 289, 321, 353, 354, 354, 355, 356, 388, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 432, 464, 465, 466, 467, 468, 469, 501, 533, 565, 597, 629, 628, 627, 659, 691, 692, 724, 725, 726, 727, 759, 
[DBG]  Path for agent 42 updated, resulting length: 46
[DBG]  Update the agent path 44 | Original local length: 2 | New local length: 2
[DBG]  agent 44 t=0 => decoded (sx,sy)=(4,1) => global_id=530
[DBG]  agent 44 t=1 => decoded (sx,sy)=(4,0) => global_id=529
[DBG]  Complete path of agent 44:
[DBG]    Original: 156 124 124 123 122 121 153 185 217 249 281 313 312 311 310 310 309 341 373 405 437 469 468 467 466 498 530 530 529 561 593 592 591 623 655 687 719 751 783 815 847 848 
[DBG]    New:     156 124 124 123 122 121 153 185 217 249 281 313 312 311 310 310 309 341 373 405 437 469 468 467 466 498 530 530 529 561 593 592 591 623 655 687 719 751 783 815 847 848 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 156 124 124 123 122 121 153 185 217 249 281 313 312 311 310 310 309 341 373 405 437 469 468 467 466 498 530 
[DBG]    Local path (in submap): 530 529 
[DBG]    Suffix (out of submap): 561 593 592 591 623 655 687 719 751 783 815 847 848 
[DBG]  Original agent path length 44 je: 42
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 2: 156, 124, 124, 123, 122, 121, 153, 185, 217, 249, 281, 313, 312, 311, 310, 310, 309, 341, 373, 405, 437, 469, 468, 467, 466, 498, 530, 530, 529, 561, 593, 592, 591, 623, 655, 687, 719, 751, 783, 815, 847, 848, 
[DBG]  Path for agent 44 updated, resulting length: 42
[DBG]  Update the agent path 62 | Original local length: 4 | New local length: 4
[DBG]  agent 62 t=0 => decoded (sx,sy)=(2,2) => global_id=467
[DBG]  agent 62 t=1 => decoded (sx,sy)=(2,3) => global_id=468
[DBG]  agent 62 t=2 => decoded (sx,sy)=(2,4) => global_id=469
[DBG]  agent 62 t=3 => decoded (sx,sy)=(1,4) => global_id=437
[DBG]  Complete path of agent 62:
[DBG]    Original: 753 753 753 753 753 753 753 753 753 753 753 753 753 753 752 720 720 688 656 657 625 593 561 529 530 531 499 467 468 469 437 438 406 
[DBG]    New:     753 753 753 753 753 753 753 753 753 753 753 753 753 753 752 720 720 688 656 657 625 593 561 529 530 531 499 467 468 469 437 438 406 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 753 753 753 753 753 753 753 753 753 753 753 753 753 753 752 720 720 688 656 657 625 593 561 529 530 531 499 
[DBG]    Local path (in submap): 467 468 469 437 
[DBG]    Suffix (out of submap): 438 406 
[DBG]  Original agent path length 62 je: 33
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 3: 753, 753, 753, 753, 753, 753, 753, 753, 753, 753, 753, 753, 753, 753, 752, 720, 720, 688, 656, 657, 625, 593, 561, 529, 530, 531, 499, 467, 468, 469, 437, 438, 406, 
[DBG]  Path for agent 62 updated, resulting length: 33
[DBG]  Update the agent path 67 | Original local length: 5 | New local length: 5
[DBG]  agent 67 t=0 => decoded (sx,sy)=(3,1) => global_id=498
[DBG]  agent 67 t=1 => decoded (sx,sy)=(3,2) => global_id=499
[DBG]  agent 67 t=2 => decoded (sx,sy)=(2,2) => global_id=467
[DBG]  agent 67 t=3 => decoded (sx,sy)=(2,3) => global_id=468
[DBG]  agent 67 t=4 => decoded (sx,sy)=(2,4) => global_id=469
[DBG]  Complete path of agent 67:
[DBG]    Original: 773 774 775 776 777 778 746 747 715 683 651 619 620 588 556 524 492 460 428 429 430 431 432 433 465 465 466 498 499 467 468 469 470 438 439 440 408 409 409 409 409 377 378 379 380 381 349 
[DBG]    New:     773 774 775 776 777 778 746 747 715 683 651 619 620 588 556 524 492 460 428 429 430 431 432 433 465 465 466 498 499 467 468 469 470 438 439 440 408 409 409 409 409 377 378 379 380 381 349 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 773 774 775 776 777 778 746 747 715 683 651 619 620 588 556 524 492 460 428 429 430 431 432 433 465 465 466 
[DBG]    Local path (in submap): 498 499 467 468 469 
[DBG]    Suffix (out of submap): 470 438 439 440 408 409 409 409 409 377 378 379 380 381 349 
[DBG]  Original agent path length 67 je: 47
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 4: 773, 774, 775, 776, 777, 778, 746, 747, 715, 683, 651, 619, 620, 588, 556, 524, 492, 460, 428, 429, 430, 431, 432, 433, 465, 465, 466, 498, 499, 467, 468, 469, 470, 438, 439, 440, 408, 409, 409, 409, 409, 377, 378, 379, 380, 381, 349, 
[DBG]  Path for agent 67 updated, resulting length: 47
[DBG]  Update the agent path 100 | Original local length: 1 | New local length: 1
[DBG]  agent 100 t=0 => decoded (sx,sy)=(4,0) => global_id=529
[DBG]  Complete path of agent 100:
[DBG]    Original: 287 319 351 350 349 348 347 379 378 378 378 377 376 408 440 439 438 438 437 469 468 467 466 465 464 496 528 529 561 593 592 591 623 655 687 719 751 783 815 847 879 878 877 909 941 973 1005 1004 1003 
[DBG]    New:     287 319 351 350 349 348 347 379 378 378 378 377 376 408 440 439 438 438 437 469 468 467 466 465 464 496 528 529 561 593 592 591 623 655 687 719 751 783 815 847 879 878 877 909 941 973 1005 1004 1003 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 287 319 351 350 349 348 347 379 378 378 378 377 376 408 440 439 438 438 437 469 468 467 466 465 464 496 528 
[DBG]    Local path (in submap): 529 
[DBG]    Suffix (out of submap): 561 593 592 591 623 655 687 719 751 783 815 847 879 878 877 909 941 973 1005 1004 1003 
[DBG]  Original agent path length 100 je: 49
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 5: 287, 319, 351, 350, 349, 348, 347, 379, 378, 378, 378, 377, 376, 408, 440, 439, 438, 438, 437, 469, 468, 467, 466, 465, 464, 496, 528, 529, 561, 593, 592, 591, 623, 655, 687, 719, 751, 783, 815, 847, 879, 878, 877, 909, 941, 973, 1005, 1004, 1003, 
[DBG]  Path for agent 100 updated, resulting length: 49
[DBG]  Update the agent path 114 | Original local length: 4 | New local length: 4
[DBG]  agent 114 t=0 => decoded (sx,sy)=(1,2) => global_id=435
[DBG]  agent 114 t=1 => decoded (sx,sy)=(0,2) => global_id=403
[DBG]  agent 114 t=2 => decoded (sx,sy)=(0,3) => global_id=404
[DBG]  agent 114 t=3 => decoded (sx,sy)=(0,4) => global_id=405
[DBG]  Complete path of agent 114:
[DBG]    Original: 875 875 875 875 875 843 844 845 845 846 847 815 783 751 719 687 655 623 591 592 593 561 529 530 531 499 467 435 403 404 405 406 407 408 376 344 312 313 281 249 217 185 186 154 
[DBG]    New:     875 875 875 875 875 843 844 845 845 846 847 815 783 751 719 687 655 623 591 592 593 561 529 530 531 499 467 435 403 404 405 406 407 408 376 344 312 313 281 249 217 185 186 154 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 875 875 875 875 875 843 844 845 845 846 847 815 783 751 719 687 655 623 591 592 593 561 529 530 531 499 467 
[DBG]    Local path (in submap): 435 403 404 405 
[DBG]    Suffix (out of submap): 406 407 408 376 344 312 313 281 249 217 185 186 154 
[DBG]  Original agent path length 114 je: 44
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 6: 875, 875, 875, 875, 875, 843, 844, 845, 845, 846, 847, 815, 783, 751, 719, 687, 655, 623, 591, 592, 593, 561, 529, 530, 531, 499, 467, 435, 403, 404, 405, 406, 407, 408, 376, 344, 312, 313, 281, 249, 217, 185, 186, 154, 
[DBG]  Path for agent 114 updated, resulting length: 44
[DBG]  Paths successfully updated.
[DBG]  (LNS.cpp) New path for agent 26: 
[DBG]  13, 13, 45, 46, 47, 79, 80, 81, 82, 83, 115, 147, 148, 180, 212, 244, 276, 277, 278, 310, 309, 341, 373, 405, 437, 469, 501, 533, 565, 597, 629, 628, 660, 692, 724, 756, 755, 
[DBG]  (LNS.cpp) New path for agent 42: 
[DBG]  224, 256, 257, 289, 321, 353, 354, 354, 355, 356, 388, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 432, 464, 465, 466, 467, 468, 469, 501, 533, 565, 597, 629, 628, 627, 659, 691, 692, 724, 725, 726, 727, 759, 
[DBG]  (LNS.cpp) New path for agent 44: 
[DBG]  156, 124, 124, 123, 122, 121, 153, 185, 217, 249, 281, 313, 312, 311, 310, 310, 309, 341, 373, 405, 437, 469, 468, 467, 466, 498, 530, 530, 529, 561, 593, 592, 591, 623, 655, 687, 719, 751, 783, 815, 847, 848, 
[DBG]  (LNS.cpp) New path for agent 62: 
[DBG]  753, 753, 753, 753, 753, 753, 753, 753, 753, 753, 753, 753, 753, 753, 752, 720, 720, 688, 656, 657, 625, 593, 561, 529, 530, 531, 499, 467, 468, 469, 437, 438, 406, 
[DBG]  (LNS.cpp) New path for agent 67: 
[DBG]  773, 774, 775, 776, 777, 778, 746, 747, 715, 683, 651, 619, 620, 588, 556, 524, 492, 460, 428, 429, 430, 431, 432, 433, 465, 465, 466, 498, 499, 467, 468, 469, 470, 438, 439, 440, 408, 409, 409, 409, 409, 377, 378, 379, 380, 381, 349, 
[DBG]  (LNS.cpp) New path for agent 100: 
[DBG]  287, 319, 351, 350, 349, 348, 347, 379, 378, 378, 378, 377, 376, 408, 440, 439, 438, 438, 437, 469, 468, 467, 466, 465, 464, 496, 528, 529, 561, 593, 592, 591, 623, 655, 687, 719, 751, 783, 815, 847, 879, 878, 877, 909, 941, 973, 1005, 1004, 1003, 
[DBG]  (LNS.cpp) New path for agent 114: 
[DBG]  875, 875, 875, 875, 875, 843, 844, 845, 845, 846, 847, 815, 783, 751, 719, 687, 655, 623, 591, 592, 593, 561, 529, 530, 531, 499, 467, 435, 403, 404, 405, 406, 407, 408, 376, 344, 312, 313, 281, 249, 217, 185, 186, 154, 
[DBG]  component_weights = {0.254205, 0.225186, 0.235488, 0.285121}
[DBG]  opSuccess value: 1
[STAT] neighbor.sum_of_costs before recomputation: 291
[STAT] neighbor.old_sum_of_costs before recomputation: 291
[STAT] sum_of_costs before recomputation: 4524
[DBG]  Validate solution immediately after SAT success.
[DBG]  No problems after SAT replan.
[DBG]  Recomputing sum_of_cost by dividing neighbor.sum_of_costs and neighbor.old_sum_of_costs
[STAT] sum_of_costs after recomputation: 4524
[STAT] Iteration 20
[DBG]  Using SAT operator (destroy+repair SAT).
[DBG]  ====================
[DBG]  SAT destroy operator called.
[DBG]  SAT heuristic: 2
[DBG]  key_agent_id: 7
[DBG]  key_agent_id global path length: 20
[DBG]  Submap content (global positions):
[DBG]  660 661 662 663 664 
[DBG]  692 693 694 695 696 
[DBG]  724 725 726 727 728 
[DBG]  756 757 758 759 760 
[DBG]  788 789 790 791 792 
[DBG]  Map content with agents and obstacles:
[DBG]  . A X X . 
[DBG]  . X X X . 
[DBG]  A . A A . 
[DBG]  . A X . X 
[DBG]  . X . X . 
[DBG]  content of the map structure that we pass to the SAT solver:
[DBG]  1  1  -1  -1  1  
[DBG]  1  -1  -1  -1  1  
[DBG]  1  1  1  1  1  
[DBG]  1  1  -1  1  -1  
[DBG]  1  -1  1  -1  1  
[DBG]  Identifying agents in a submap for rescheduling (when key_agent is there at the time 7):
[DBG]  Agent 7 found intervals in the sub-map:
[DBG]   [0..9] [13..13]
[DBG]  Agent 7 (interval in submap: [0..9]) contains time 7, added to replan.
[DBG]  Agent 28 found intervals in the sub-map:
[DBG]   [0..35] [41..45]
[DBG]  Agent 28 (interval in submap: [0..35]) contains time 7, added to replan.
[DBG]  Agent 46 found intervals in the sub-map:
[DBG]   [3..10]
[DBG]  Agent 46 (interval in submap: [3..10]) contains time 7, added to replan.
[DBG]  Agent 91 found intervals in the sub-map:
[DBG]   [2..20] [30..30] [35..36]
[DBG]  Agent 91 (interval in submap: [2..20]) contains time 7, added to replan.
[DBG]  Agent 108 found intervals in the sub-map:
[DBG]   [6..9]
[DBG]  Agent 108 (interval in submap: [6..9]) contains time 7, added to replan.
[DBG]  Agent 7 | Start (global): 726 -> (local): (2, 2) at time 7 | Goal (global): 728 -> (local): (2, 4) at time 9
[DBG]  Agent 28 | Start (global): 661 -> (local): (0, 1) at time 7 | Goal (global): 661 -> (local): (0, 1) at time 35
[DBG]  Agent 46 | Start (global): 727 -> (local): (2, 3) at time 7 | Goal (global): 664 -> (local): (0, 4) at time 10
[DBG]  Agent 91 | Start (global): 757 -> (local): (3, 1) at time 7 | Goal (global): 756 -> (local): (3, 0) at time 20
[DBG]  Agent 108 | Start (global): 724 -> (local): (2, 0) at time 7 | Goal (global): 788 -> (local): (4, 0) at time 9
[DBG]  [REPAIR] SAT destroy operator called.
[DBG]  [REPAIR] SAT operator â€“ launching subproblem FOR OPTIMIZATION.
[DBG]  Creating local paths (sx, sy) in the submap for T_sync = 7
[DBG]    Agent 7 (global paths from T=7 to 9) has local path: (2,2) (2,3) (2,4) 
[DBG]    Agent 28 (global paths from T=7 to 35) has local path: (0,1) (0,1) (0,1) (0,1) (0,1) (0,1) (0,1) (0,1) (0,1) (0,1) (0,1) (0,1) (0,1) (0,1) (0,1) (0,1) (0,1) (0,1) (0,1) (0,1) (0,1) (0,1) (0,1) (0,1) (0,1) (0,1) (0,1) (0,1) (0,1) 
[DBG]    Agent 46 (global paths from T=7 to 10) has local path: (2,3) (2,4) (1,4) (0,4) 
[DBG]    Agent 91 (global paths from T=7 to 20) has local path: (3,1) (3,1) (3,1) (3,1) (3,1) (3,1) (3,1) (3,1) (3,1) (3,1) (3,1) (3,1) (3,1) (3,0) 
[DBG]    Agent 108 (global paths from T=7 to 9) has local path: (2,0) (3,0) (4,0) 
[DBG]  Checking input data for SAT solver:
[DBG]    - Number of agents to replan: 5
[DBG]  Agent 7 has the original local path length: 3 => Start (2,2), Goal (2,4)
[DBG]  Agent 28 has the original local path length: 29 => Start (0,1), Goal (0,1)
[DBG]  Agent 46 has the original local path length: 4 => Start (2,3), Goal (0,4)
[DBG]  Agent 91 has the original local path length: 14 => Start (3,1), Goal (3,0)
[DBG]  Agent 108 has the original local path length: 3 => Start (2,0), Goal (4,0)
[DBG]  Start position: (2, 2), (0, 1), (2, 3), (3, 1), (2, 0), 
[DBG]  Goal position: (2, 4), (0, 1), (0, 4), (3, 0), (4, 0), 
[DBG]  SAT instance and solver created.
Currently solving
Instance name: scen
Map name: map
Encoding used: disappear_at_goal
SAT solver used: Kissat
Optimizing function: sum of costs
Number of agents: 5
Mks LB: 4
SoC LB: 13
Delta: 0
Remaining time: 300000 [ms]

[STAT] Solver returned: -1
[DBG]  SAT solver failed.
[STAT] SAT solver failed to find a valid solution.
[DBG]  ====================
[DBG]  SAT destroy operator called.
[DBG]  SAT heuristic: 2
[DBG]  key_agent_id: 7
[DBG]  key_agent_id global path length: 20
[DBG]  Submap content (global positions):
[DBG]  695 696 697 698 699 
[DBG]  727 728 729 730 731 
[DBG]  759 760 761 762 763 
[DBG]  791 792 793 794 795 
[DBG]  823 824 825 826 827 
[DBG]  Map content with agents and obstacles:
[DBG]  X . . X X 
[DBG]  . . . . . 
[DBG]  . X A X X 
[DBG]  X . A X . 
[DBG]  . . X . . 
[DBG]  content of the map structure that we pass to the SAT solver:
[DBG]  -1  1  1  -1  -1  
[DBG]  1  1  1  1  1  
[DBG]  1  -1  1  -1  -1  
[DBG]  -1  1  1  -1  1  
[DBG]  1  1  -1  1  1  
[DBG]  Identifying agents in a submap for rescheduling (when key_agent is there at the time 11):
[DBG]  Agent 7 found intervals in the sub-map:
[DBG]   [8..14]
[DBG]  Agent 7 (interval in submap: [8..14]) contains time 11, added to replan.
[DBG]  Agent 11 found intervals in the sub-map:
[DBG]   [12..12]
[DBG]  Agent 11 is not in sub-map at time 11 (intervals: 
[DBG]  [12..12] )
[DBG]  Agent 24 found intervals in the sub-map:
[DBG]  
[DBG]  Agent 24 is not in sub-map at time 11 (intervals: 
[DBG]  )
[DBG]  Agent 70 found intervals in the sub-map:
[DBG]   [4..14]
[DBG]  Agent 70 (interval in submap: [4..14]) contains time 11, added to replan.
[DBG]  Agent 109 found intervals in the sub-map:
[DBG]   [29..36]
[DBG]  Agent 109 is not in sub-map at time 11 (intervals: 
[DBG]  [29..36] )
[DBG]  Agent 7 | Start (global): 761 -> (local): (2, 2) at time 11 | Goal (global): 824 -> (local): (4, 1) at time 14
[DBG]  Agent 70 | Start (global): 793 -> (local): (3, 2) at time 11 | Goal (global): 823 -> (local): (4, 0) at time 14
[DBG]  [REPAIR] SAT destroy operator called.
[DBG]  [REPAIR] SAT operator â€“ launching subproblem FOR OPTIMIZATION.
[DBG]  Creating local paths (sx, sy) in the submap for T_sync = 11
[DBG]    Agent 7 (global paths from T=11 to 14) has local path: (2,2) (3,2) (3,1) (4,1) 
[DBG]    Agent 70 (global paths from T=11 to 14) has local path: (3,2) (3,1) (4,1) (4,0) 
[DBG]  Checking input data for SAT solver:
[DBG]    - Number of agents to replan: 2
[DBG]  Agent 7 has the original local path length: 4 => Start (2,2), Goal (4,1)
[DBG]  Agent 70 has the original local path length: 4 => Start (3,2), Goal (4,0)
[DBG]  Start position: (2, 2), (3, 2), 
[DBG]  Goal position: (4, 1), (4, 0), 
[DBG]  SAT instance and solver created.
Currently solving
Instance name: scen
Map name: map
Encoding used: disappear_at_goal
SAT solver used: Kissat
Optimizing function: sum of costs
Number of agents: 2
Mks LB: 4
SoC LB: 8
Delta: 0
Remaining time: 300000 [ms]

Found plan [agents = 2] [timesteps = 4]
Agent #0 : 8 10 9 13 
Agent #1 : 10 9 13 12 

[STAT] Solver returned: 0
[DBG]  Agent (index) 7 | New local path (submap idx):
[DBG]  8 10 9 13 
[DBG]  Agent (index) 70 | New local path (submap idx):
[DBG]  10 9 13 12 
[DBG]  Update the agent path 7 | Original local length: 4 | New local length: 4
[DBG]  agent 7 t=0 => decoded (sx,sy)=(2,2) => global_id=761
[DBG]  agent 7 t=1 => decoded (sx,sy)=(3,2) => global_id=793
[DBG]  agent 7 t=2 => decoded (sx,sy)=(3,1) => global_id=792
[DBG]  agent 7 t=3 => decoded (sx,sy)=(4,1) => global_id=824
[DBG]  Complete path of agent 7:
[DBG]    Original: 756 724 692 692 692 724 725 726 727 728 729 761 793 792 824 856 856 888 889 921 
[DBG]    New:     756 724 692 692 692 724 725 726 727 728 729 761 793 792 824 856 856 888 889 921 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 756 724 692 692 692 724 725 726 727 728 729 
[DBG]    Local path (in submap): 761 793 792 824 
[DBG]    Suffix (out of submap): 856 856 888 889 921 
[DBG]  Original agent path length 7 je: 20
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 0: 756, 724, 692, 692, 692, 724, 725, 726, 727, 728, 729, 761, 793, 792, 824, 856, 856, 888, 889, 921, 
[DBG]  Path for agent 7 updated, resulting length: 20
[DBG]  Update the agent path 70 | Original local length: 4 | New local length: 4
[DBG]  agent 70 t=0 => decoded (sx,sy)=(3,2) => global_id=793
[DBG]  agent 70 t=1 => decoded (sx,sy)=(3,1) => global_id=792
[DBG]  agent 70 t=2 => decoded (sx,sy)=(4,1) => global_id=824
[DBG]  agent 70 t=3 => decoded (sx,sy)=(4,0) => global_id=823
[DBG]  Complete path of agent 70:
[DBG]    Original: 632 633 632 664 696 696 728 729 761 793 793 793 792 824 823 822 854 854 886 885 917 916 884 883 882 914 913 912 944 976 975 974 
[DBG]    New:     632 633 632 664 696 696 728 729 761 793 793 793 792 824 823 822 854 854 886 885 917 916 884 883 882 914 913 912 944 976 975 974 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 632 633 632 664 696 696 728 729 761 793 793 
[DBG]    Local path (in submap): 793 792 824 823 
[DBG]    Suffix (out of submap): 822 854 854 886 885 917 916 884 883 882 914 913 912 944 976 975 974 
[DBG]  Original agent path length 70 je: 32
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 1: 632, 633, 632, 664, 696, 696, 728, 729, 761, 793, 793, 793, 792, 824, 823, 822, 854, 854, 886, 885, 917, 916, 884, 883, 882, 914, 913, 912, 944, 976, 975, 974, 
[DBG]  Path for agent 70 updated, resulting length: 32
[DBG]  Paths successfully updated.
[DBG]  (LNS.cpp) New path for agent 7: 
[DBG]  756, 724, 692, 692, 692, 724, 725, 726, 727, 728, 729, 761, 793, 792, 824, 856, 856, 888, 889, 921, 
[DBG]  (LNS.cpp) New path for agent 70: 
[DBG]  632, 633, 632, 664, 696, 696, 728, 729, 761, 793, 793, 793, 792, 824, 823, 822, 854, 854, 886, 885, 917, 916, 884, 883, 882, 914, 913, 912, 944, 976, 975, 974, 
[DBG]  component_weights = {0.258054, 0.224024, 0.234272, 0.28365}
[DBG]  opSuccess value: 1
[STAT] neighbor.sum_of_costs before recomputation: 50
[STAT] neighbor.old_sum_of_costs before recomputation: 50
[STAT] sum_of_costs before recomputation: 4524
[DBG]  Validate solution immediately after SAT success.
[DBG]  No problems after SAT replan.
[DBG]  Recomputing sum_of_cost by dividing neighbor.sum_of_costs and neighbor.old_sum_of_costs
[STAT] sum_of_costs after recomputation: 4524
[STAT] Iteration 21
[DBG]  Using SAT operator (destroy+repair SAT).
[DBG]  ====================
[DBG]  SAT destroy operator called.
[DBG]  SAT heuristic: 2
[DBG]  key_agent_id: 125
[DBG]  key_agent_id global path length: 35
[DBG]  Submap content (global positions):
[DBG]  301 302 303 304 305 
[DBG]  333 334 335 336 337 
[DBG]  365 366 367 368 369 
[DBG]  397 398 399 400 401 
[DBG]  429 430 431 432 433 
[DBG]  Map content with agents and obstacles:
[DBG]  . . . . X 
[DBG]  . X A . A 
[DBG]  . . A . A 
[DBG]  X . X A . 
[DBG]  . A A . . 
[DBG]  content of the map structure that we pass to the SAT solver:
[DBG]  1  1  1  1  -1  
[DBG]  1  -1  1  1  1  
[DBG]  1  1  1  1  1  
[DBG]  -1  1  -1  1  1  
[DBG]  1  1  1  1  1  
[DBG]  Identifying agents in a submap for rescheduling (when key_agent is there at the time 4):
[DBG]  Agent 8 found intervals in the sub-map:
[DBG]   [0..4]
[DBG]  Agent 8 (interval in submap: [0..4]) contains time 4, added to replan.
[DBG]  Agent 31 found intervals in the sub-map:
[DBG]   [0..4]
[DBG]  Agent 31 (interval in submap: [0..4]) contains time 4, added to replan.
[DBG]  Agent 36 found intervals in the sub-map:
[DBG]   [0..7] [11..12]
[DBG]  Agent 36 (interval in submap: [0..7]) contains time 4, added to replan.
[DBG]  Agent 76 found intervals in the sub-map:
[DBG]   [3..10]
[DBG]  Agent 76 (interval in submap: [3..10]) contains time 4, added to replan.
[DBG]  Agent 121 found intervals in the sub-map:
[DBG]   [0..14]
[DBG]  Agent 121 (interval in submap: [0..14]) contains time 4, added to replan.
[DBG]  Agent 125 found intervals in the sub-map:
[DBG]   [0..14]
[DBG]  Agent 125 (interval in submap: [0..14]) contains time 4, added to replan.
[DBG]  Agent 145 found intervals in the sub-map:
[DBG]   [0..15] [18..19]
[DBG]  Agent 145 (interval in submap: [0..15]) contains time 4, added to replan.
[DBG]  Agent 8 | Start (global): 369 -> (local): (2, 4) at time 4 | Goal (global): 369 -> (local): (2, 4) at time 4
[DBG]  Agent 31 | Start (global): 337 -> (local): (1, 4) at time 4 | Goal (global): 337 -> (local): (1, 4) at time 4
[DBG]  Agent 36 | Start (global): 431 -> (local): (4, 2) at time 4 | Goal (global): 431 -> (local): (4, 2) at time 7
[DBG]  Agent 76 | Start (global): 430 -> (local): (4, 1) at time 4 | Goal (global): 302 -> (local): (0, 1) at time 10
[DBG]  Agent 121 | Start (global): 400 -> (local): (3, 3) at time 4 | Goal (global): 433 -> (local): (4, 4) at time 14
[DBG]  Agent 125 | Start (global): 367 -> (local): (2, 2) at time 4 | Goal (global): 430 -> (local): (4, 1) at time 14
[DBG]  Agent 145 | Start (global): 335 -> (local): (1, 2) at time 4 | Goal (global): 430 -> (local): (4, 1) at time 15
[DBG]  [REPAIR] SAT destroy operator called.
[DBG]  [REPAIR] SAT operator â€“ launching subproblem FOR OPTIMIZATION.
[DBG]  Creating local paths (sx, sy) in the submap for T_sync = 4
[DBG]    Agent 8 (global paths from T=4 to 4) has local path: (2,4) 
[DBG]    Agent 31 (global paths from T=4 to 4) has local path: (1,4) 
[DBG]    Agent 36 (global paths from T=4 to 7) has local path: (4,2) (4,2) (4,2) (4,2) 
[DBG]    Agent 76 (global paths from T=4 to 10) has local path: (4,1) (3,1) (2,1) (2,0) (1,0) (0,0) (0,1) 
[DBG]    Agent 121 (global paths from T=4 to 14) has local path: (3,3) (3,3) (3,3) (3,3) (3,3) (3,3) (3,3) (3,3) (3,3) (3,4) (4,4) 
[DBG]    Agent 125 (global paths from T=4 to 14) has local path: (2,2) (2,2) (2,2) (2,1) (3,1) (3,1) (3,1) (3,1) (3,1) (3,1) (4,1) 
[DBG]    Agent 145 (global paths from T=4 to 15) has local path: (1,2) (1,2) (1,2) (2,2) (2,1) (2,1) (2,1) (2,1) (2,1) (2,1) (3,1) (4,1) 
[DBG]  Checking input data for SAT solver:
[DBG]    - Number of agents to replan: 7
[DBG]  Agent 8 has the original local path length: 1 => Start (2,4), Goal (2,4)
[DBG]  Agent 31 has the original local path length: 1 => Start (1,4), Goal (1,4)
[DBG]  Agent 36 has the original local path length: 4 => Start (4,2), Goal (4,2)
[DBG]  Agent 76 has the original local path length: 7 => Start (4,1), Goal (0,1)
[DBG]  Agent 121 has the original local path length: 11 => Start (3,3), Goal (4,4)
[DBG]  Agent 125 has the original local path length: 11 => Start (2,2), Goal (4,1)
[DBG]  Agent 145 has the original local path length: 12 => Start (1,2), Goal (4,1)
[DBG]  Start position: (2, 4), (1, 4), (4, 2), (4, 1), (3, 3), (2, 2), (1, 2), 
[DBG]  Goal position: (2, 4), (1, 4), (4, 2), (0, 1), (4, 4), (4, 1), (4, 1), 
[DBG]  SAT instance and solver created.
Currently solving
Instance name: scen
Map name: map
Encoding used: disappear_at_goal
SAT solver used: Kissat
Optimizing function: sum of costs
Number of agents: 7
Mks LB: 7
SoC LB: 22
Delta: 0
Remaining time: 300000 [ms]

[STAT] Solver returned: -1
[DBG]  SAT solver failed.
[STAT] SAT solver failed to find a valid solution.
[DBG]  ====================
[DBG]  SAT destroy operator called.
[DBG]  SAT heuristic: 2
[DBG]  key_agent_id: 125
[DBG]  key_agent_id global path length: 35
[DBG]  Submap content (global positions):
[DBG]  521 522 523 524 525 
[DBG]  553 554 555 556 557 
[DBG]  585 586 587 588 589 
[DBG]  617 618 619 620 621 
[DBG]  649 650 651 652 653 
[DBG]  Map content with agents and obstacles:
[DBG]  . . . . . 
[DBG]  X X . . X 
[DBG]  . X A A A 
[DBG]  . X A A X 
[DBG]  . A A X A 
[DBG]  content of the map structure that we pass to the SAT solver:
[DBG]  1  1  1  1  1  
[DBG]  -1  -1  1  1  -1  
[DBG]  1  -1  1  1  1  
[DBG]  1  -1  1  1  -1  
[DBG]  1  1  1  -1  1  
[DBG]  Identifying agents in a submap for rescheduling (when key_agent is there at the time 22):
[DBG]  Agent 20 found intervals in the sub-map:
[DBG]   [17..22]
[DBG]  Agent 20 (interval in submap: [17..22]) contains time 22, added to replan.
[DBG]  Agent 50 found intervals in the sub-map:
[DBG]   [21..25]
[DBG]  Agent 50 (interval in submap: [21..25]) contains time 22, added to replan.
[DBG]  Agent 87 found intervals in the sub-map:
[DBG]   [18..22]
[DBG]  Agent 87 (interval in submap: [18..22]) contains time 22, added to replan.
[DBG]  Agent 98 found intervals in the sub-map:
[DBG]   [22..22] [26..28]
[DBG]  Agent 98 (interval in submap: [22..22]) contains time 22, added to replan.
[DBG]  Agent 106 found intervals in the sub-map:
[DBG]   [19..25]
[DBG]  Agent 106 (interval in submap: [19..25]) contains time 22, added to replan.
[DBG]  Agent 125 found intervals in the sub-map:
[DBG]   [20..26]
[DBG]  Agent 125 (interval in submap: [20..26]) contains time 22, added to replan.
[DBG]  Agent 130 found intervals in the sub-map:
[DBG]   [18..30]
[DBG]  Agent 130 (interval in submap: [18..30]) contains time 22, added to replan.
[DBG]  Agent 132 found intervals in the sub-map:
[DBG]   [17..18] [22..27]
[DBG]  Agent 132 (interval in submap: [22..27]) contains time 22, added to replan.
[DBG]  Agent 140 found intervals in the sub-map:
[DBG]  
[DBG]  Agent 140 is not in sub-map at time 22 (intervals: 
[DBG]  )
[DBG]  Agent 20 | Start (global): 650 -> (local): (4, 1) at time 22 | Goal (global): 650 -> (local): (4, 1) at time 22
[DBG]  Agent 50 | Start (global): 588 -> (local): (2, 3) at time 22 | Goal (global): 523 -> (local): (0, 2) at time 25
[DBG]  Agent 87 | Start (global): 651 -> (local): (4, 2) at time 22 | Goal (global): 651 -> (local): (4, 2) at time 22
[DBG]  Agent 98 | Start (global): 653 -> (local): (4, 4) at time 22 | Goal (global): 653 -> (local): (4, 4) at time 22
[DBG]  Agent 106 | Start (global): 619 -> (local): (3, 2) at time 22 | Goal (global): 649 -> (local): (4, 0) at time 25
[DBG]  Agent 125 | Start (global): 587 -> (local): (2, 2) at time 22 | Goal (global): 649 -> (local): (4, 0) at time 26
[DBG]  Agent 130 | Start (global): 620 -> (local): (3, 3) at time 22 | Goal (global): 651 -> (local): (4, 2) at time 30
[DBG]  Agent 132 | Start (global): 589 -> (local): (2, 4) at time 22 | Goal (global): 523 -> (local): (0, 2) at time 27
[DBG]  [REPAIR] SAT destroy operator called.
[DBG]  [REPAIR] SAT operator â€“ launching subproblem FOR OPTIMIZATION.
[DBG]  Creating local paths (sx, sy) in the submap for T_sync = 22
[DBG]    Agent 20 (global paths from T=22 to 22) has local path: (4,1) 
[DBG]    Agent 50 (global paths from T=22 to 25) has local path: (2,3) (1,3) (1,2) (0,2) 
[DBG]    Agent 87 (global paths from T=22 to 22) has local path: (4,2) 
[DBG]    Agent 98 (global paths from T=22 to 22) has local path: (4,4) 
[DBG]    Agent 106 (global paths from T=22 to 25) has local path: (3,2) (4,2) (4,1) (4,0) 
[DBG]    Agent 125 (global paths from T=22 to 26) has local path: (2,2) (3,2) (4,2) (4,1) (4,0) 
[DBG]    Agent 130 (global paths from T=22 to 30) has local path: (3,3) (3,3) (3,3) (3,3) (3,3) (3,3) (3,3) (3,2) (4,2) 
[DBG]    Agent 132 (global paths from T=22 to 27) has local path: (2,4) (2,3) (1,3) (1,2) (1,2) (0,2) 
[DBG]  Checking input data for SAT solver:
[DBG]    - Number of agents to replan: 8
[DBG]  Agent 20 has the original local path length: 1 => Start (4,1), Goal (4,1)
[DBG]  Agent 50 has the original local path length: 4 => Start (2,3), Goal (0,2)
[DBG]  Agent 87 has the original local path length: 1 => Start (4,2), Goal (4,2)
[DBG]  Agent 98 has the original local path length: 1 => Start (4,4), Goal (4,4)
[DBG]  Agent 106 has the original local path length: 4 => Start (3,2), Goal (4,0)
[DBG]  Agent 125 has the original local path length: 5 => Start (2,2), Goal (4,0)
[DBG]  Agent 130 has the original local path length: 9 => Start (3,3), Goal (4,2)
[DBG]  Agent 132 has the original local path length: 6 => Start (2,4), Goal (0,2)
[DBG]  Start position: (4, 1), (2, 3), (4, 2), (4, 4), (3, 2), (2, 2), (3, 3), (2, 4), 
[DBG]  Goal position: (4, 1), (0, 2), (4, 2), (4, 4), (4, 0), (4, 0), (4, 2), (0, 2), 
[DBG]  SAT instance and solver created.
Currently solving
Instance name: scen
Map name: map
Encoding used: disappear_at_goal
SAT solver used: Kissat
Optimizing function: sum of costs
Number of agents: 8
Mks LB: 5
SoC LB: 24
Delta: 0
Remaining time: 300000 [ms]

[STAT] Solver returned: -1
[DBG]  SAT solver failed.
[STAT] SAT solver failed to find a valid solution.
[DBG]  ====================
[DBG]  SAT destroy operator called.
[DBG]  SAT heuristic: 2
[DBG]  key_agent_id: 125
[DBG]  key_agent_id global path length: 35
[DBG]  Submap content (global positions):
[DBG]  301 302 303 304 305 
[DBG]  333 334 335 336 337 
[DBG]  365 366 367 368 369 
[DBG]  397 398 399 400 401 
[DBG]  429 430 431 432 433 
[DBG]  Map content with agents and obstacles:
[DBG]  . A . . X 
[DBG]  . X A . . 
[DBG]  . A A . . 
[DBG]  X . X A . 
[DBG]  . . A . . 
[DBG]  content of the map structure that we pass to the SAT solver:
[DBG]  1  1  1  1  -1  
[DBG]  1  -1  1  1  1  
[DBG]  1  1  1  1  1  
[DBG]  -1  1  -1  1  1  
[DBG]  1  1  1  1  1  
[DBG]  Identifying agents in a submap for rescheduling (when key_agent is there at the time 6):
[DBG]  Agent 20 found intervals in the sub-map:
[DBG]   [6..7]
[DBG]  Agent 20 (interval in submap: [6..7]) contains time 6, added to replan.
[DBG]  Agent 36 found intervals in the sub-map:
[DBG]   [0..7] [11..12]
[DBG]  Agent 36 (interval in submap: [0..7]) contains time 6, added to replan.
[DBG]  Agent 76 found intervals in the sub-map:
[DBG]   [3..10]
[DBG]  Agent 76 (interval in submap: [3..10]) contains time 6, added to replan.
[DBG]  Agent 121 found intervals in the sub-map:
[DBG]   [0..14]
[DBG]  Agent 121 (interval in submap: [0..14]) contains time 6, added to replan.
[DBG]  Agent 125 found intervals in the sub-map:
[DBG]   [0..14]
[DBG]  Agent 125 (interval in submap: [0..14]) contains time 6, added to replan.
[DBG]  Agent 145 found intervals in the sub-map:
[DBG]   [0..15] [18..19]
[DBG]  Agent 145 (interval in submap: [0..15]) contains time 6, added to replan.
[DBG]  Agent 20 | Start (global): 302 -> (local): (0, 1) at time 6 | Goal (global): 301 -> (local): (0, 0) at time 7
[DBG]  Agent 36 | Start (global): 431 -> (local): (4, 2) at time 6 | Goal (global): 431 -> (local): (4, 2) at time 7
[DBG]  Agent 76 | Start (global): 366 -> (local): (2, 1) at time 6 | Goal (global): 302 -> (local): (0, 1) at time 10
[DBG]  Agent 121 | Start (global): 400 -> (local): (3, 3) at time 6 | Goal (global): 433 -> (local): (4, 4) at time 14
[DBG]  Agent 125 | Start (global): 367 -> (local): (2, 2) at time 6 | Goal (global): 430 -> (local): (4, 1) at time 14
[DBG]  Agent 145 | Start (global): 335 -> (local): (1, 2) at time 6 | Goal (global): 430 -> (local): (4, 1) at time 15
[DBG]  [REPAIR] SAT destroy operator called.
[DBG]  [REPAIR] SAT operator â€“ launching subproblem FOR OPTIMIZATION.
[DBG]  Creating local paths (sx, sy) in the submap for T_sync = 6
[DBG]    Agent 20 (global paths from T=6 to 7) has local path: (0,1) (0,0) 
[DBG]    Agent 36 (global paths from T=6 to 7) has local path: (4,2) (4,2) 
[DBG]    Agent 76 (global paths from T=6 to 10) has local path: (2,1) (2,0) (1,0) (0,0) (0,1) 
[DBG]    Agent 121 (global paths from T=6 to 14) has local path: (3,3) (3,3) (3,3) (3,3) (3,3) (3,3) (3,3) (3,4) (4,4) 
[DBG]    Agent 125 (global paths from T=6 to 14) has local path: (2,2) (2,1) (3,1) (3,1) (3,1) (3,1) (3,1) (3,1) (4,1) 
[DBG]    Agent 145 (global paths from T=6 to 15) has local path: (1,2) (2,2) (2,1) (2,1) (2,1) (2,1) (2,1) (2,1) (3,1) (4,1) 
[DBG]  Checking input data for SAT solver:
[DBG]    - Number of agents to replan: 6
[DBG]  Agent 20 has the original local path length: 2 => Start (0,1), Goal (0,0)
[DBG]  Agent 36 has the original local path length: 2 => Start (4,2), Goal (4,2)
[DBG]  Agent 76 has the original local path length: 5 => Start (2,1), Goal (0,1)
[DBG]  Agent 121 has the original local path length: 9 => Start (3,3), Goal (4,4)
[DBG]  Agent 125 has the original local path length: 9 => Start (2,2), Goal (4,1)
[DBG]  Agent 145 has the original local path length: 10 => Start (1,2), Goal (4,1)
[DBG]  Start position: (0, 1), (4, 2), (2, 1), (3, 3), (2, 2), (1, 2), 
[DBG]  Goal position: (0, 0), (4, 2), (0, 1), (4, 4), (4, 1), (4, 1), 
[DBG]  SAT instance and solver created.
Currently solving
Instance name: scen
Map name: map
Encoding used: disappear_at_goal
SAT solver used: Kissat
Optimizing function: sum of costs
Number of agents: 6
Mks LB: 5
SoC LB: 20
Delta: 0
Remaining time: 300000 [ms]

Vertex conflict! Agents 0, 1, timestep 1, location 0
Swapping conflict! Agents 0, 1, timestep 1, edge (0,0)
Vertex conflict! Agents 0, 1, timestep 2, location 0
Swapping conflict! Agents 0, 1, timestep 2, edge (0,0)
Vertex conflict! Agents 0, 1, timestep 3, location 0
Swapping conflict! Agents 0, 1, timestep 3, edge (0,0)
Vertex conflict! Agents 0, 1, timestep 4, location 0
Vertex conflict! Agents 0, 2, timestep 3, location 0
Vertex conflict! Agents 0, 3, timestep 3, location 0
Swapping conflict! Agents 0, 3, timestep 3, edge (0,0)
Vertex conflict! Agents 0, 3, timestep 4, location 0
Vertex conflict! Agents 0, 4, timestep 4, location 0
Vertex conflict! Agents 1, 2, timestep 3, location 0
Vertex conflict! Agents 1, 3, timestep 3, location 0
Swapping conflict! Agents 1, 3, timestep 3, edge (0,0)
Vertex conflict! Agents 1, 3, timestep 4, location 0
Vertex conflict! Agents 1, 4, timestep 4, location 0
Vertex conflict! Agents 2, 3, timestep 3, location 0
Vertex conflict! Agents 3, 4, timestep 4, location 0
Found plan [agents = 6] [timesteps = 5]
Agent #0 : 1 0 0 0 0 
Agent #1 : 18 0 0 0 0 
Agent #2 : 9 8 4 0 1 
Agent #3 : 14 19 20 0 0 
Agent #4 : 10 9 13 17 0 
Agent #5 : 5 10 9 13 17 

[STAT] Solver returned: 0
[DBG]  Agent (index) 20 | New local path (submap idx):
[DBG]  1 0 
[DBG]  Agent (index) 36 | New local path (submap idx):
[DBG]  18 
[DBG]  Agent (index) 76 | New local path (submap idx):
[DBG]  9 8 4 0 1 
[DBG]  Agent (index) 121 | New local path (submap idx):
[DBG]  14 19 20 
[DBG]  Agent (index) 125 | New local path (submap idx):
[DBG]  10 9 13 17 
[DBG]  Agent (index) 145 | New local path (submap idx):
[DBG]  5 10 9 13 17 
[DBG]  Update the agent path 20 | Original local length: 2 | New local length: 2
[DBG]  agent 20 t=0 => decoded (sx,sy)=(0,1) => global_id=302
[DBG]  agent 20 t=1 => decoded (sx,sy)=(0,0) => global_id=301
[DBG]  Complete path of agent 20:
[DBG]    Original: 242 241 240 239 271 270 302 301 300 299 331 363 395 395 427 459 491 523 555 587 619 651 650 682 714 746 778 777 809 841 873 905 904 
[DBG]    New:     242 241 240 239 271 270 302 301 300 299 331 363 395 395 427 459 491 523 555 587 619 651 650 682 714 746 778 777 809 841 873 905 904 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 242 241 240 239 271 270 
[DBG]    Local path (in submap): 302 301 
[DBG]    Suffix (out of submap): 300 299 331 363 395 395 427 459 491 523 555 587 619 651 650 682 714 746 778 777 809 841 873 905 904 
[DBG]  Original agent path length 20 je: 33
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 0: 242, 241, 240, 239, 271, 270, 302, 301, 300, 299, 331, 363, 395, 395, 427, 459, 491, 523, 555, 587, 619, 651, 650, 682, 714, 746, 778, 777, 809, 841, 873, 905, 904, 
[DBG]  Path for agent 20 updated, resulting length: 33
[DBG]  Update the agent path 36 | Original local length: 2 | New local length: 1
[DBG]  agent 36 t=0 => decoded (sx,sy)=(4,2) => global_id=431
[DBG]  Complete path of agent 36:
[DBG]    Original: 431 431 431 431 431 431 431 431 463 464 465 433 401 402 402 402 402 403 371 
[DBG]    New:     431 431 431 431 431 431 431 463 464 465 433 401 402 402 402 402 403 371 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 431 431 431 431 431 431 
[DBG]    Local path (in submap): 431 463 
[DBG]    Suffix (out of submap): 464 465 433 401 402 402 402 402 403 371 
[DBG]  Original agent path length 36 je: 19
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 1: 431, 431, 431, 431, 431, 431, 431, 463, 464, 465, 433, 401, 402, 402, 402, 402, 403, 371, 
[DBG]  Path for agent 36 updated, resulting length: 18
[DBG]  Update the agent path 76 | Original local length: 5 | New local length: 5
[DBG]  agent 76 t=0 => decoded (sx,sy)=(2,1) => global_id=366
[DBG]  agent 76 t=1 => decoded (sx,sy)=(2,0) => global_id=365
[DBG]  agent 76 t=2 => decoded (sx,sy)=(1,0) => global_id=333
[DBG]  agent 76 t=3 => decoded (sx,sy)=(0,0) => global_id=301
[DBG]  agent 76 t=4 => decoded (sx,sy)=(0,1) => global_id=302
[DBG]  Complete path of agent 76:
[DBG]    Original: 492 460 428 429 430 398 366 365 333 301 302 270 238 
[DBG]    New:     492 460 428 429 430 398 366 365 333 301 302 270 238 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 492 460 428 429 430 398 
[DBG]    Local path (in submap): 366 365 333 301 302 
[DBG]    Suffix (out of submap): 270 238 
[DBG]  Original agent path length 76 je: 13
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 2: 492, 460, 428, 429, 430, 398, 366, 365, 333, 301, 302, 270, 238, 
[DBG]  Path for agent 76 updated, resulting length: 13
[DBG]  Update the agent path 121 | Original local length: 9 | New local length: 3
[DBG]  agent 121 t=0 => decoded (sx,sy)=(3,3) => global_id=400
[DBG]  agent 121 t=1 => decoded (sx,sy)=(4,3) => global_id=432
[DBG]  agent 121 t=2 => decoded (sx,sy)=(4,4) => global_id=433
[DBG]  Complete path of agent 121:
[DBG]    Original: 401 401 400 400 400 400 400 400 400 400 400 400 400 401 433 465 465 464 463 462 494 526 558 590 589 588 556 555 
[DBG]    New:     401 401 400 400 400 400 400 432 433 465 465 464 463 462 494 526 558 590 589 588 556 555 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 401 401 400 400 400 400 
[DBG]    Local path (in submap): 400 432 433 465 465 464 463 462 494 
[DBG]    Suffix (out of submap): 526 558 590 589 588 556 555 
[DBG]  Original agent path length 121 je: 28
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 3: 401, 401, 400, 400, 400, 400, 400, 432, 433, 465, 465, 464, 463, 462, 494, 526, 558, 590, 589, 588, 556, 555, 
[DBG]  Path for agent 121 updated, resulting length: 22
[DBG]  Update the agent path 125 | Original local length: 9 | New local length: 4
[DBG]  agent 125 t=0 => decoded (sx,sy)=(2,2) => global_id=367
[DBG]  agent 125 t=1 => decoded (sx,sy)=(2,1) => global_id=366
[DBG]  agent 125 t=2 => decoded (sx,sy)=(3,1) => global_id=398
[DBG]  agent 125 t=3 => decoded (sx,sy)=(4,1) => global_id=430
[DBG]  Complete path of agent 125:
[DBG]    Original: 430 398 366 367 367 367 367 366 398 398 398 398 398 398 430 462 494 526 558 590 589 588 587 619 651 650 649 648 647 646 678 710 742 774 775 
[DBG]    New:     430 398 366 367 367 367 367 366 398 430 462 494 526 558 590 589 588 587 619 651 650 649 648 647 646 678 710 742 774 775 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 430 398 366 367 367 367 
[DBG]    Local path (in submap): 367 366 398 430 462 494 526 558 590 
[DBG]    Suffix (out of submap): 589 588 587 619 651 650 649 648 647 646 678 710 742 774 775 
[DBG]  Original agent path length 125 je: 35
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 4: 430, 398, 366, 367, 367, 367, 367, 366, 398, 430, 462, 494, 526, 558, 590, 589, 588, 587, 619, 651, 650, 649, 648, 647, 646, 678, 710, 742, 774, 775, 
[DBG]  Path for agent 125 updated, resulting length: 30
[DBG]  Update the agent path 145 | Original local length: 10 | New local length: 5
[DBG]  agent 145 t=0 => decoded (sx,sy)=(1,2) => global_id=335
[DBG]  agent 145 t=1 => decoded (sx,sy)=(2,2) => global_id=367
[DBG]  agent 145 t=2 => decoded (sx,sy)=(2,1) => global_id=366
[DBG]  agent 145 t=3 => decoded (sx,sy)=(3,1) => global_id=398
[DBG]  agent 145 t=4 => decoded (sx,sy)=(4,1) => global_id=430
[DBG]  Complete path of agent 145:
[DBG]    Original: 335 335 335 335 335 335 335 367 366 366 366 366 366 366 398 430 462 463 431 431 463 462 494 526 525 524 523 522 521 520 519 551 583 615 647 646 
[DBG]    New:     335 335 335 335 335 335 335 367 366 398 430 462 463 431 431 463 462 494 526 525 524 523 522 521 520 519 551 583 615 647 646 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 335 335 335 335 335 335 
[DBG]    Local path (in submap): 335 367 366 398 430 462 463 431 431 463 
[DBG]    Suffix (out of submap): 462 494 526 525 524 523 522 521 520 519 551 583 615 647 646 
[DBG]  Original agent path length 145 je: 36
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 5: 335, 335, 335, 335, 335, 335, 335, 367, 366, 398, 430, 462, 463, 431, 431, 463, 462, 494, 526, 525, 524, 523, 522, 521, 520, 519, 551, 583, 615, 647, 646, 
[DBG]  Path for agent 145 updated, resulting length: 31
[DBG]  Paths successfully updated.
[DBG]  (LNS.cpp) New path for agent 20: 
[DBG]  242, 241, 240, 239, 271, 270, 302, 301, 300, 299, 331, 363, 395, 395, 427, 459, 491, 523, 555, 587, 619, 651, 650, 682, 714, 746, 778, 777, 809, 841, 873, 905, 904, 
[DBG]  (LNS.cpp) New path for agent 36: 
[DBG]  431, 431, 431, 431, 431, 431, 431, 463, 464, 465, 433, 401, 402, 402, 402, 402, 403, 371, 
[DBG]  (LNS.cpp) New path for agent 76: 
[DBG]  492, 460, 428, 429, 430, 398, 366, 365, 333, 301, 302, 270, 238, 
[DBG]  (LNS.cpp) New path for agent 121: 
[DBG]  401, 401, 400, 400, 400, 400, 400, 432, 433, 465, 465, 464, 463, 462, 494, 526, 558, 590, 589, 588, 556, 555, 
[DBG]  (LNS.cpp) New path for agent 125: 
[DBG]  430, 398, 366, 367, 367, 367, 367, 366, 398, 430, 462, 494, 526, 558, 590, 589, 588, 587, 619, 651, 650, 649, 648, 647, 646, 678, 710, 742, 774, 775, 
[DBG]  (LNS.cpp) New path for agent 145: 
[DBG]  335, 335, 335, 335, 335, 335, 335, 367, 366, 398, 430, 462, 463, 431, 431, 463, 462, 494, 526, 525, 524, 523, 522, 521, 520, 519, 551, 583, 615, 647, 646, 
[DBG]  component_weights = {0.25649, 0.222665, 0.232852, 0.287993}
[DBG]  opSuccess value: 1
[STAT] neighbor.sum_of_costs before recomputation: 141
[STAT] neighbor.old_sum_of_costs before recomputation: 158
[STAT] sum_of_costs before recomputation: 4524
[DBG]  Validate solution immediately after SAT success.
[WARNING] Problem after SAT: Vertex conflict between agents 36 and 10 at location 463 at timestep 7
[DBG]  Attempting immediate repair via init_lns because problem occurred after SAT (should be applied only for conflicts...).
[DBG]  Passing 150 agents to init_lns (skip=true).
[DBG]  path_table contents for selected agents (neighbor.agents):
[DBG]    Agent 20 => controlling path length=33
[DBG]    Agent 36 => controlling path length=18
[DBG]    Agent 76 => controlling path length=13
[DBG]    Agent 121 => controlling path length=22
[DBG]    Agent 125 => controlling path length=30
[DBG]    Agent 145 => controlling path length=31
[DBG]  hodnota skip_initial_solution=1
[DBG]  We skip initialSolution => call buildCollisionData()
[DBG]  buildCollisionData() called â€“ skip_initial_solution case.
[DBG]  Agents.size()=150, collision_graph.size()=150
[DBG]  agent 10 => updateCollidingPairs => foundCollision
[DBG]  agent 19 => updateCollidingPairs => foundCollision
[DBG]  agent 33 => updateCollidingPairs => foundCollision
[DBG]  agent 36 => updateCollidingPairs => foundCollision
[DBG]  agent 43 => updateCollidingPairs => foundCollision
[DBG]  agent 50 => updateCollidingPairs => foundCollision
[DBG]  agent 81 => updateCollidingPairs => foundCollision
[DBG]  agent 92 => updateCollidingPairs => foundCollision
[DBG]  agent 101 => updateCollidingPairs => foundCollision
[DBG]  agent 106 => updateCollidingPairs => foundCollision
[DBG]  agent 118 => updateCollidingPairs => foundCollision
[DBG]  agent 121 => updateCollidingPairs => foundCollision
[DBG]  agent 125 => updateCollidingPairs => foundCollision
[DBG]  agent 130 => updateCollidingPairs => foundCollision
[DBG]  agent 132 => updateCollidingPairs => foundCollision
[DBG]  agent 135 => updateCollidingPairs => foundCollision
[DBG]  agent 145 => updateCollidingPairs => foundCollision
[DBG]  Conflicting agent pairs:
[DBG]  agent 10 is in conflict with agent 36
[DBG]  agent 10 is in conflict with agent 121
[DBG]  agent 19 is in conflict with agent 121
[DBG]  agent 19 is in conflict with agent 125
[DBG]  agent 33 is in conflict with agent 121
[DBG]  agent 36 is in conflict with agent 92
[DBG]  agent 36 is in conflict with agent 121
[DBG]  agent 43 is in conflict with agent 145
[DBG]  agent 50 is in conflict with agent 121
[DBG]  agent 81 is in conflict with agent 145
[DBG]  agent 101 is in conflict with agent 145
[DBG]  agent 106 is in conflict with agent 125
[DBG]  agent 118 is in conflict with agent 145
[DBG]  agent 121 is in conflict with agent 130
[DBG]  agent 121 is in conflict with agent 132
[DBG]  agent 121 is in conflict with agent 145
[DBG]  agent 125 is in conflict with agent 135
[DBG]  buildCollisionData() => sum_of_costs=4507, num_of_colliding_pairs=17
[DBG]  buildCollisionData done => sum_of_costs=4507, num_of_colliding_pairs=17
[DBG]  sum_of_cost hodnota: 4507
[DBG]  After skip/init build => iteration_stats.back(): sum_of_costs=4507, collisions=17
[DEBUG] Using default neighbor generation strategy for conflicts: 0
[DEBUG] Using default neighbor generation strategy for conflicts: 2
[DEBUG] Using default neighbor generation strategy for conflicts: 0
[DEBUG] Using default neighbor generation strategy for conflicts: 2
[DEBUG] Using default neighbor generation strategy for conflicts: 0
[DEBUG] Using default neighbor generation strategy for conflicts: 1
[DEBUG] Using default neighbor generation strategy for conflicts: 0
	InitLNS(PP): runtime = 0.0560535, iterations = 8, colliding pairs = 0, initial colliding pairs = 17, solution cost = 4537, initial solution cost = 4507, failed iterations = 0
[DBG]  init_lns->sum_of_costs after init_lns->run: 4537
[DBG]  sum_of_costs after assignment from init_lns->run: 4537
[DBG]  Recomputing sum_of_cost by dividing neighbor.sum_of_costs and neighbor.old_sum_of_costs
[STAT] sum_of_costs after recomputation: 4537
[STAT] Iteration 22
[DBG]  Using SAT operator (destroy+repair SAT).
[DBG]  ====================
[DBG]  SAT destroy operator called.
[DBG]  SAT heuristic: 2
[DBG]  key_agent_id: 74
[DBG]  key_agent_id global path length: 31
[DBG]  Submap content (global positions):
[DBG]  590 591 592 593 594 
[DBG]  622 623 624 625 626 
[DBG]  654 655 656 657 658 
[DBG]  686 687 688 689 690 
[DBG]  718 719 720 721 722 
[DBG]  Map content with agents and obstacles:
[DBG]  A . . . . 
[DBG]  A . X . X 
[DBG]  A . A A . 
[DBG]  A . A . X 
[DBG]  A . . . . 
[DBG]  content of the map structure that we pass to the SAT solver:
[DBG]  1  1  1  1  1  
[DBG]  1  1  -1  1  -1  
[DBG]  1  1  1  1  1  
[DBG]  1  1  1  1  -1  
[DBG]  1  1  1  1  1  
[DBG]  Identifying agents in a submap for rescheduling (when key_agent is there at the time 17):
[DBG]  Agent 0 found intervals in the sub-map:
[DBG]   [17..18]
[DBG]  Agent 0 (interval in submap: [17..18]) contains time 17, added to replan.
[DBG]  Agent 3 found intervals in the sub-map:
[DBG]   [26..31]
[DBG]  Agent 3 is not in sub-map at time 17 (intervals: 
[DBG]  [26..31] )
[DBG]  Agent 50 found intervals in the sub-map:
[DBG]   [15..19]
[DBG]  Agent 50 (interval in submap: [15..19]) contains time 17, added to replan.
[DBG]  Agent 56 found intervals in the sub-map:
[DBG]   [13..18]
[DBG]  Agent 56 (interval in submap: [13..18]) contains time 17, added to replan.
[DBG]  Agent 62 found intervals in the sub-map:
[DBG]   [12..21]
[DBG]  Agent 62 (interval in submap: [12..21]) contains time 17, added to replan.
[DBG]  Agent 74 found intervals in the sub-map:
[DBG]   [11..19]
[DBG]  Agent 74 (interval in submap: [11..19]) contains time 17, added to replan.
[DBG]  Agent 114 found intervals in the sub-map:
[DBG]   [8..15]
[DBG]  Agent 114 is not in sub-map at time 17 (intervals: 
[DBG]  [8..15] )
[DBG]  Agent 118 found intervals in the sub-map:
[DBG]   [16..20]
[DBG]  Agent 118 (interval in submap: [16..20]) contains time 17, added to replan.
[DBG]  Agent 130 found intervals in the sub-map:
[DBG]   [12..17]
[DBG]  Agent 130 (interval in submap: [12..17]) contains time 17, added to replan.
[DBG]  Agent 132 found intervals in the sub-map:
[DBG]   [15..18]
[DBG]  Agent 132 (interval in submap: [15..18]) contains time 17, added to replan.
[DBG]  Agent 0 | Start (global): 718 -> (local): (4, 0) at time 17 | Goal (global): 719 -> (local): (4, 1) at time 18
[DBG]  Agent 50 | Start (global): 654 -> (local): (2, 0) at time 17 | Goal (global): 590 -> (local): (0, 0) at time 19
[DBG]  Agent 56 | Start (global): 657 -> (local): (2, 3) at time 17 | Goal (global): 658 -> (local): (2, 4) at time 18
[DBG]  Agent 62 | Start (global): 688 -> (local): (3, 2) at time 17 | Goal (global): 593 -> (local): (0, 3) at time 21
[DBG]  Agent 74 | Start (global): 656 -> (local): (2, 2) at time 17 | Goal (global): 658 -> (local): (2, 4) at time 19
[DBG]  Agent 118 | Start (global): 686 -> (local): (3, 0) at time 17 | Goal (global): 590 -> (local): (0, 0) at time 20
[DBG]  Agent 130 | Start (global): 590 -> (local): (0, 0) at time 17 | Goal (global): 590 -> (local): (0, 0) at time 17
[DBG]  Agent 132 | Start (global): 622 -> (local): (1, 0) at time 17 | Goal (global): 590 -> (local): (0, 0) at time 18
[DBG]  [REPAIR] SAT destroy operator called.
[DBG]  [REPAIR] SAT operator â€“ launching subproblem FOR OPTIMIZATION.
[DBG]  Creating local paths (sx, sy) in the submap for T_sync = 17
[DBG]    Agent 0 (global paths from T=17 to 18) has local path: (4,0) (4,1) 
[DBG]    Agent 50 (global paths from T=17 to 19) has local path: (2,0) (1,0) (0,0) 
[DBG]    Agent 56 (global paths from T=17 to 18) has local path: (2,3) (2,4) 
[DBG]    Agent 62 (global paths from T=17 to 21) has local path: (3,2) (2,2) (2,3) (1,3) (0,3) 
[DBG]    Agent 74 (global paths from T=17 to 19) has local path: (2,2) (2,3) (2,4) 
[DBG]    Agent 118 (global paths from T=17 to 20) has local path: (3,0) (2,0) (1,0) (0,0) 
[DBG]    Agent 130 (global paths from T=17 to 17) has local path: (0,0) 
[DBG]    Agent 132 (global paths from T=17 to 18) has local path: (1,0) (0,0) 
[DBG]  Checking input data for SAT solver:
[DBG]    - Number of agents to replan: 8
[DBG]  Agent 0 has the original local path length: 2 => Start (4,0), Goal (4,1)
[DBG]  Agent 50 has the original local path length: 3 => Start (2,0), Goal (0,0)
[DBG]  Agent 56 has the original local path length: 2 => Start (2,3), Goal (2,4)
[DBG]  Agent 62 has the original local path length: 5 => Start (3,2), Goal (0,3)
[DBG]  Agent 74 has the original local path length: 3 => Start (2,2), Goal (2,4)
[DBG]  Agent 118 has the original local path length: 4 => Start (3,0), Goal (0,0)
[DBG]  Agent 130 has the original local path length: 1 => Start (0,0), Goal (0,0)
[DBG]  Agent 132 has the original local path length: 2 => Start (1,0), Goal (0,0)
[DBG]  Start position: (4, 0), (2, 0), (2, 3), (3, 2), (2, 2), (3, 0), (0, 0), (1, 0), 
[DBG]  Goal position: (4, 1), (0, 0), (2, 4), (0, 3), (2, 4), (0, 0), (0, 0), (0, 0), 
[DBG]  SAT instance and solver created.
Currently solving
Instance name: scen
Map name: map
Encoding used: disappear_at_goal
SAT solver used: Kissat
Optimizing function: sum of costs
Number of agents: 8
Mks LB: 5
SoC LB: 22
Delta: 0
Remaining time: 300000 [ms]

Vertex conflict! Agents 0, 1, timestep 2, location 0
Swapping conflict! Agents 0, 1, timestep 2, edge (0,0)
Vertex conflict! Agents 0, 1, timestep 3, location 0
Swapping conflict! Agents 0, 1, timestep 3, edge (0,0)
Vertex conflict! Agents 0, 1, timestep 4, location 0
Vertex conflict! Agents 0, 2, timestep 2, location 0
Swapping conflict! Agents 0, 2, timestep 2, edge (0,0)
Vertex conflict! Agents 0, 2, timestep 3, location 0
Swapping conflict! Agents 0, 2, timestep 3, edge (0,0)
Vertex conflict! Agents 0, 2, timestep 4, location 0
Vertex conflict! Agents 0, 4, timestep 3, location 0
Swapping conflict! Agents 0, 4, timestep 3, edge (0,0)
Vertex conflict! Agents 0, 4, timestep 4, location 0
Vertex conflict! Agents 0, 5, timestep 3, location 0
Swapping conflict! Agents 0, 5, timestep 3, edge (0,0)
Vertex conflict! Agents 0, 5, timestep 4, location 0
Vertex conflict! Agents 0, 6, timestep 2, location 0
Swapping conflict! Agents 0, 6, timestep 2, edge (0,0)
Vertex conflict! Agents 0, 6, timestep 3, location 0
Swapping conflict! Agents 0, 6, timestep 3, edge (0,0)
Vertex conflict! Agents 0, 6, timestep 4, location 0
Vertex conflict! Agents 0, 7, timestep 2, location 0
Swapping conflict! Agents 0, 7, timestep 2, edge (0,0)
Vertex conflict! Agents 0, 7, timestep 3, location 0
Swapping conflict! Agents 0, 7, timestep 3, edge (0,0)
Vertex conflict! Agents 0, 7, timestep 4, location 0
Vertex conflict! Agents 1, 2, timestep 2, location 0
Swapping conflict! Agents 1, 2, timestep 2, edge (0,0)
Vertex conflict! Agents 1, 2, timestep 3, location 0
Swapping conflict! Agents 1, 2, timestep 3, edge (0,0)
Vertex conflict! Agents 1, 2, timestep 4, location 0
Vertex conflict! Agents 1, 4, timestep 3, location 0
Swapping conflict! Agents 1, 4, timestep 3, edge (0,0)
Vertex conflict! Agents 1, 4, timestep 4, location 0
Vertex conflict! Agents 1, 5, timestep 3, location 0
Swapping conflict! Agents 1, 5, timestep 3, edge (0,0)
Vertex conflict! Agents 1, 5, timestep 4, location 0
Vertex conflict! Agents 1, 6, timestep 2, location 0
Swapping conflict! Agents 1, 6, timestep 2, edge (0,0)
Vertex conflict! Agents 1, 6, timestep 3, location 0
Swapping conflict! Agents 1, 6, timestep 3, edge (0,0)
Vertex conflict! Agents 1, 6, timestep 4, location 0
Vertex conflict! Agents 1, 7, timestep 2, location 0
Swapping conflict! Agents 1, 7, timestep 2, edge (0,0)
Vertex conflict! Agents 1, 7, timestep 3, location 0
Swapping conflict! Agents 1, 7, timestep 3, edge (0,0)
Vertex conflict! Agents 1, 7, timestep 4, location 0
Vertex conflict! Agents 2, 4, timestep 3, location 0
Swapping conflict! Agents 2, 4, timestep 3, edge (0,0)
Vertex conflict! Agents 2, 4, timestep 4, location 0
Vertex conflict! Agents 2, 5, timestep 3, location 0
Swapping conflict! Agents 2, 5, timestep 3, edge (0,0)
Vertex conflict! Agents 2, 5, timestep 4, location 0
Vertex conflict! Agents 2, 6, timestep 2, location 0
Swapping conflict! Agents 2, 6, timestep 2, edge (0,0)
Vertex conflict! Agents 2, 6, timestep 3, location 0
Swapping conflict! Agents 2, 6, timestep 3, edge (0,0)
Vertex conflict! Agents 2, 6, timestep 4, location 0
Vertex conflict! Agents 2, 7, timestep 2, location 0
Swapping conflict! Agents 2, 7, timestep 2, edge (0,0)
Vertex conflict! Agents 2, 7, timestep 3, location 0
Swapping conflict! Agents 2, 7, timestep 3, edge (0,0)
Vertex conflict! Agents 2, 7, timestep 4, location 0
Vertex conflict! Agents 4, 5, timestep 3, location 0
Swapping conflict! Agents 4, 5, timestep 3, edge (0,0)
Vertex conflict! Agents 4, 5, timestep 4, location 0
Vertex conflict! Agents 4, 6, timestep 3, location 0
Swapping conflict! Agents 4, 6, timestep 3, edge (0,0)
Vertex conflict! Agents 4, 6, timestep 4, location 0
Vertex conflict! Agents 4, 7, timestep 3, location 0
Swapping conflict! Agents 4, 7, timestep 3, edge (0,0)
Vertex conflict! Agents 4, 7, timestep 4, location 0
Vertex conflict! Agents 5, 6, timestep 3, location 0
Swapping conflict! Agents 5, 6, timestep 3, edge (0,0)
Vertex conflict! Agents 5, 6, timestep 4, location 0
Vertex conflict! Agents 5, 7, timestep 3, location 0
Swapping conflict! Agents 5, 7, timestep 3, edge (0,0)
Vertex conflict! Agents 5, 7, timestep 4, location 0
Vertex conflict! Agents 6, 7, timestep 1, location 0
Swapping conflict! Agents 6, 7, timestep 1, edge (0,0)
Vertex conflict! Agents 6, 7, timestep 2, location 0
Swapping conflict! Agents 6, 7, timestep 2, edge (0,0)
Vertex conflict! Agents 6, 7, timestep 3, location 0
Swapping conflict! Agents 6, 7, timestep 3, edge (0,0)
Vertex conflict! Agents 6, 7, timestep 4, location 0
Found plan [agents = 8] [timesteps = 5]
Agent #0 : 17 18 0 0 0 
Agent #1 : 8 5 0 0 0 
Agent #2 : 11 12 0 0 0 
Agent #3 : 15 16 11 7 3 
Agent #4 : 10 11 12 0 0 
Agent #5 : 13 8 5 0 0 
Agent #6 : 0 0 0 0 0 
Agent #7 : 5 0 0 0 0 

[STAT] Solver returned: 0
[DBG]  Agent (index) 0 | New local path (submap idx):
[DBG]  17 18 
[DBG]  Agent (index) 50 | New local path (submap idx):
[DBG]  8 5 0 
[DBG]  Agent (index) 56 | New local path (submap idx):
[DBG]  11 12 
[DBG]  Agent (index) 62 | New local path (submap idx):
[DBG]  15 16 11 7 3 
[DBG]  Agent (index) 74 | New local path (submap idx):
[DBG]  10 11 12 
[DBG]  Agent (index) 118 | New local path (submap idx):
[DBG]  13 8 5 0 
[DBG]  Agent (index) 130 | New local path (submap idx):
[DBG]  0 
[DBG]  Agent (index) 132 | New local path (submap idx):
[DBG]  5 0 
[DBG]  Update the agent path 0 | Original local length: 2 | New local length: 2
[DBG]  agent 0 t=0 => decoded (sx,sy)=(4,0) => global_id=718
[DBG]  agent 0 t=1 => decoded (sx,sy)=(4,1) => global_id=719
[DBG]  Complete path of agent 0:
[DBG]    Original: 517 516 548 580 612 613 645 646 647 648 649 650 682 683 684 685 717 718 719 751 783 815 847 848 849 817 818 819 820 821 822 854 855 856 857 858 859 860 861 862 830 798 799 
[DBG]    New:     517 516 548 580 612 613 645 646 647 648 649 650 682 683 684 685 717 718 719 751 783 815 847 848 849 817 818 819 820 821 822 854 855 856 857 858 859 860 861 862 830 798 799 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 517 516 548 580 612 613 645 646 647 648 649 650 682 683 684 685 717 
[DBG]    Local path (in submap): 718 719 
[DBG]    Suffix (out of submap): 751 783 815 847 848 849 817 818 819 820 821 822 854 855 856 857 858 859 860 861 862 830 798 799 
[DBG]  Original agent path length 0 je: 43
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 0: 517, 516, 548, 580, 612, 613, 645, 646, 647, 648, 649, 650, 682, 683, 684, 685, 717, 718, 719, 751, 783, 815, 847, 848, 849, 817, 818, 819, 820, 821, 822, 854, 855, 856, 857, 858, 859, 860, 861, 862, 830, 798, 799, 
[DBG]  Path for agent 0 updated, resulting length: 43
[DBG]  Update the agent path 50 | Original local length: 3 | New local length: 3
[DBG]  agent 50 t=0 => decoded (sx,sy)=(2,0) => global_id=654
[DBG]  agent 50 t=1 => decoded (sx,sy)=(1,0) => global_id=622
[DBG]  agent 50 t=2 => decoded (sx,sy)=(0,0) => global_id=590
[DBG]  Complete path of agent 50:
[DBG]    Original: 888 887 886 885 884 883 882 881 880 879 878 846 814 782 750 718 686 654 622 590 589 588 556 555 523 491 491 459 427 395 363 331 299 267 235 203 204 205 173 141 
[DBG]    New:     888 887 886 885 884 883 882 881 880 879 878 846 814 782 750 718 686 654 622 590 589 588 556 555 523 491 491 459 427 395 363 331 299 267 235 203 204 205 173 141 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 888 887 886 885 884 883 882 881 880 879 878 846 814 782 750 718 686 
[DBG]    Local path (in submap): 654 622 590 
[DBG]    Suffix (out of submap): 589 588 556 555 523 491 491 459 427 395 363 331 299 267 235 203 204 205 173 141 
[DBG]  Original agent path length 50 je: 40
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 1: 888, 887, 886, 885, 884, 883, 882, 881, 880, 879, 878, 846, 814, 782, 750, 718, 686, 654, 622, 590, 589, 588, 556, 555, 523, 491, 491, 459, 427, 395, 363, 331, 299, 267, 235, 203, 204, 205, 173, 141, 
[DBG]  Path for agent 50 updated, resulting length: 40
[DBG]  Update the agent path 56 | Original local length: 2 | New local length: 2
[DBG]  agent 56 t=0 => decoded (sx,sy)=(2,3) => global_id=657
[DBG]  agent 56 t=1 => decoded (sx,sy)=(2,4) => global_id=658
[DBG]  Complete path of agent 56:
[DBG]    Original: 805 806 774 775 776 777 745 713 714 682 683 684 685 686 654 655 656 657 658 659 627 628 629 597 565 533 534 502 503 504 472 473 474 475 443 444 412 413 381 349 350 318 319 287 255 
[DBG]    New:     805 806 774 775 776 777 745 713 714 682 683 684 685 686 654 655 656 657 658 659 627 628 629 597 565 533 534 502 503 504 472 473 474 475 443 444 412 413 381 349 350 318 319 287 255 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 805 806 774 775 776 777 745 713 714 682 683 684 685 686 654 655 656 
[DBG]    Local path (in submap): 657 658 
[DBG]    Suffix (out of submap): 659 627 628 629 597 565 533 534 502 503 504 472 473 474 475 443 444 412 413 381 349 350 318 319 287 255 
[DBG]  Original agent path length 56 je: 45
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 2: 805, 806, 774, 775, 776, 777, 745, 713, 714, 682, 683, 684, 685, 686, 654, 655, 656, 657, 658, 659, 627, 628, 629, 597, 565, 533, 534, 502, 503, 504, 472, 473, 474, 475, 443, 444, 412, 413, 381, 349, 350, 318, 319, 287, 255, 
[DBG]  Path for agent 56 updated, resulting length: 45
[DBG]  Update the agent path 62 | Original local length: 5 | New local length: 5
[DBG]  agent 62 t=0 => decoded (sx,sy)=(3,2) => global_id=688
[DBG]  agent 62 t=1 => decoded (sx,sy)=(3,3) => global_id=689
[DBG]  agent 62 t=2 => decoded (sx,sy)=(2,3) => global_id=657
[DBG]  agent 62 t=3 => decoded (sx,sy)=(1,3) => global_id=625
[DBG]  agent 62 t=4 => decoded (sx,sy)=(0,3) => global_id=593
[DBG]  Complete path of agent 62:
[DBG]    Original: 753 753 753 753 753 753 753 753 753 753 753 752 720 720 720 720 720 688 656 657 625 593 561 529 530 531 499 467 435 403 404 405 406 
[DBG]    New:     753 753 753 753 753 753 753 753 753 753 753 752 720 720 720 720 720 688 689 657 625 593 561 529 530 531 499 467 435 403 404 405 406 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 753 753 753 753 753 753 753 753 753 753 753 752 720 720 720 720 720 
[DBG]    Local path (in submap): 688 689 657 625 593 
[DBG]    Suffix (out of submap): 561 529 530 531 499 467 435 403 404 405 406 
[DBG]  Original agent path length 62 je: 33
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 3: 753, 753, 753, 753, 753, 753, 753, 753, 753, 753, 753, 752, 720, 720, 720, 720, 720, 688, 689, 657, 625, 593, 561, 529, 530, 531, 499, 467, 435, 403, 404, 405, 406, 
[DBG]  Path for agent 62 updated, resulting length: 33
[DBG]  Update the agent path 74 | Original local length: 3 | New local length: 3
[DBG]  agent 74 t=0 => decoded (sx,sy)=(2,2) => global_id=656
[DBG]  agent 74 t=1 => decoded (sx,sy)=(2,3) => global_id=657
[DBG]  agent 74 t=2 => decoded (sx,sy)=(2,4) => global_id=658
[DBG]  Complete path of agent 74:
[DBG]    Original: 752 752 752 752 752 752 751 751 751 751 752 720 688 688 688 688 688 656 657 658 659 627 628 596 597 565 566 534 502 503 504 
[DBG]    New:     752 752 752 752 752 752 751 751 751 751 752 720 688 688 688 688 688 656 657 658 659 627 628 596 597 565 566 534 502 503 504 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 752 752 752 752 752 752 751 751 751 751 752 720 688 688 688 688 688 
[DBG]    Local path (in submap): 656 657 658 
[DBG]    Suffix (out of submap): 659 627 628 596 597 565 566 534 502 503 504 
[DBG]  Original agent path length 74 je: 31
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 4: 752, 752, 752, 752, 752, 752, 751, 751, 751, 751, 752, 720, 688, 688, 688, 688, 688, 656, 657, 658, 659, 627, 628, 596, 597, 565, 566, 534, 502, 503, 504, 
[DBG]  Path for agent 74 updated, resulting length: 31
[DBG]  Update the agent path 118 | Original local length: 4 | New local length: 4
[DBG]  agent 118 t=0 => decoded (sx,sy)=(3,0) => global_id=686
[DBG]  agent 118 t=1 => decoded (sx,sy)=(2,0) => global_id=654
[DBG]  agent 118 t=2 => decoded (sx,sy)=(1,0) => global_id=622
[DBG]  agent 118 t=3 => decoded (sx,sy)=(0,0) => global_id=590
[DBG]  Complete path of agent 118:
[DBG]    Original: 887 886 885 917 885 884 883 851 850 849 848 847 815 783 782 750 718 686 654 622 590 589 588 556 555 523 522 521 489 457 425 424 423 422 390 389 388 356 324 323 291 259 227 
[DBG]    New:     887 886 885 917 885 884 883 851 850 849 848 847 815 783 782 750 718 686 654 622 590 589 588 556 555 523 522 521 489 457 425 424 423 422 390 389 388 356 324 323 291 259 227 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 887 886 885 917 885 884 883 851 850 849 848 847 815 783 782 750 718 
[DBG]    Local path (in submap): 686 654 622 590 
[DBG]    Suffix (out of submap): 589 588 556 555 523 522 521 489 457 425 424 423 422 390 389 388 356 324 323 291 259 227 
[DBG]  Original agent path length 118 je: 43
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 5: 887, 886, 885, 917, 885, 884, 883, 851, 850, 849, 848, 847, 815, 783, 782, 750, 718, 686, 654, 622, 590, 589, 588, 556, 555, 523, 522, 521, 489, 457, 425, 424, 423, 422, 390, 389, 388, 356, 324, 323, 291, 259, 227, 
[DBG]  Path for agent 118 updated, resulting length: 43
[DBG]  Update the agent path 130 | Original local length: 1 | New local length: 1
[DBG]  agent 130 t=0 => decoded (sx,sy)=(0,0) => global_id=590
[DBG]  Complete path of agent 130:
[DBG]    Original: 944 912 880 879 879 879 847 815 814 782 750 751 719 687 686 654 622 590 589 588 620 620 620 620 620 620 620 620 620 619 651 
[DBG]    New:     944 912 880 879 879 879 847 815 814 782 750 751 719 687 686 654 622 590 589 588 620 620 620 620 620 620 620 620 620 619 651 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 944 912 880 879 879 879 847 815 814 782 750 751 719 687 686 654 622 
[DBG]    Local path (in submap): 590 
[DBG]    Suffix (out of submap): 589 588 620 620 620 620 620 620 620 620 620 619 651 
[DBG]  Original agent path length 130 je: 31
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 6: 944, 912, 880, 879, 879, 879, 847, 815, 814, 782, 750, 751, 719, 687, 686, 654, 622, 590, 589, 588, 620, 620, 620, 620, 620, 620, 620, 620, 620, 619, 651, 
[DBG]  Path for agent 130 updated, resulting length: 31
[DBG]  Update the agent path 132 | Original local length: 2 | New local length: 2
[DBG]  agent 132 t=0 => decoded (sx,sy)=(1,0) => global_id=622
[DBG]  agent 132 t=1 => decoded (sx,sy)=(0,0) => global_id=590
[DBG]  Complete path of agent 132:
[DBG]    Original: 876 876 876 876 876 875 843 811 779 747 715 683 684 685 685 686 654 622 590 589 588 556 524 492 460 460 428 427 395 363 362 330 298 266 267 
[DBG]    New:     876 876 876 876 876 875 843 811 779 747 715 683 684 685 685 686 654 622 590 589 588 556 524 492 460 460 428 427 395 363 362 330 298 266 267 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 876 876 876 876 876 875 843 811 779 747 715 683 684 685 685 686 654 
[DBG]    Local path (in submap): 622 590 
[DBG]    Suffix (out of submap): 589 588 556 524 492 460 460 428 427 395 363 362 330 298 266 267 
[DBG]  Original agent path length 132 je: 35
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 7: 876, 876, 876, 876, 876, 875, 843, 811, 779, 747, 715, 683, 684, 685, 685, 686, 654, 622, 590, 589, 588, 556, 524, 492, 460, 460, 428, 427, 395, 363, 362, 330, 298, 266, 267, 
[DBG]  Path for agent 132 updated, resulting length: 35
[DBG]  Paths successfully updated.
[DBG]  (LNS.cpp) New path for agent 0: 
[DBG]  517, 516, 548, 580, 612, 613, 645, 646, 647, 648, 649, 650, 682, 683, 684, 685, 717, 718, 719, 751, 783, 815, 847, 848, 849, 817, 818, 819, 820, 821, 822, 854, 855, 856, 857, 858, 859, 860, 861, 862, 830, 798, 799, 
[DBG]  (LNS.cpp) New path for agent 50: 
[DBG]  888, 887, 886, 885, 884, 883, 882, 881, 880, 879, 878, 846, 814, 782, 750, 718, 686, 654, 622, 590, 589, 588, 556, 555, 523, 491, 491, 459, 427, 395, 363, 331, 299, 267, 235, 203, 204, 205, 173, 141, 
[DBG]  (LNS.cpp) New path for agent 56: 
[DBG]  805, 806, 774, 775, 776, 777, 745, 713, 714, 682, 683, 684, 685, 686, 654, 655, 656, 657, 658, 659, 627, 628, 629, 597, 565, 533, 534, 502, 503, 504, 472, 473, 474, 475, 443, 444, 412, 413, 381, 349, 350, 318, 319, 287, 255, 
[DBG]  (LNS.cpp) New path for agent 62: 
[DBG]  753, 753, 753, 753, 753, 753, 753, 753, 753, 753, 753, 752, 720, 720, 720, 720, 720, 688, 689, 657, 625, 593, 561, 529, 530, 531, 499, 467, 435, 403, 404, 405, 406, 
[DBG]  (LNS.cpp) New path for agent 74: 
[DBG]  752, 752, 752, 752, 752, 752, 751, 751, 751, 751, 752, 720, 688, 688, 688, 688, 688, 656, 657, 658, 659, 627, 628, 596, 597, 565, 566, 534, 502, 503, 504, 
[DBG]  (LNS.cpp) New path for agent 118: 
[DBG]  887, 886, 885, 917, 885, 884, 883, 851, 850, 849, 848, 847, 815, 783, 782, 750, 718, 686, 654, 622, 590, 589, 588, 556, 555, 523, 522, 521, 489, 457, 425, 424, 423, 422, 390, 389, 388, 356, 324, 323, 291, 259, 227, 
[DBG]  (LNS.cpp) New path for agent 130: 
[DBG]  944, 912, 880, 879, 879, 879, 847, 815, 814, 782, 750, 751, 719, 687, 686, 654, 622, 590, 589, 588, 620, 620, 620, 620, 620, 620, 620, 620, 620, 619, 651, 
[DBG]  (LNS.cpp) New path for agent 132: 
[DBG]  876, 876, 876, 876, 876, 875, 843, 811, 779, 747, 715, 683, 684, 685, 685, 686, 654, 622, 590, 589, 588, 556, 524, 492, 460, 460, 428, 427, 395, 363, 362, 330, 298, 266, 267, 
[DBG]  component_weights = {0.260361, 0.221506, 0.23164, 0.286493}
[DBG]  opSuccess value: 1
[STAT] neighbor.sum_of_costs before recomputation: 293
[STAT] neighbor.old_sum_of_costs before recomputation: 293
[STAT] sum_of_costs before recomputation: 4537
[DBG]  Validate solution immediately after SAT success.
[DBG]  No problems after SAT replan.
[DBG]  Recomputing sum_of_cost by dividing neighbor.sum_of_costs and neighbor.old_sum_of_costs
[STAT] sum_of_costs after recomputation: 4537
[STAT] Iteration 23
[DBG]  Using SAT operator (destroy+repair SAT).
[DBG]  ====================
[DBG]  SAT destroy operator called.
[DBG]  SAT heuristic: 2
[DBG]  key_agent_id: 138
[DBG]  key_agent_id global path length: 12
[DBG]  Submap content (global positions):
[DBG]  166 167 168 169 170 
[DBG]  198 199 200 201 202 
[DBG]  230 231 232 233 234 
[DBG]  262 263 264 265 266 
[DBG]  294 295 296 297 298 
[DBG]  Map content with agents and obstacles:
[DBG]  X . . X . 
[DBG]  X . . X X 
[DBG]  . . A . . 
[DBG]  X . A . . 
[DBG]  . . A A A 
[DBG]  content of the map structure that we pass to the SAT solver:
[DBG]  -1  1  1  -1  1  
[DBG]  -1  1  1  -1  -1  
[DBG]  1  1  1  1  1  
[DBG]  -1  1  1  1  1  
[DBG]  1  1  1  1  1  
[DBG]  Identifying agents in a submap for rescheduling (when key_agent is there at the time 7):
[DBG]  Agent 22 found intervals in the sub-map:
[DBG]   [6..9]
[DBG]  Agent 22 (interval in submap: [6..9]) contains time 7, added to replan.
[DBG]  Agent 87 found intervals in the sub-map:
[DBG]   [0..8]
[DBG]  Agent 87 (interval in submap: [0..8]) contains time 7, added to replan.
[DBG]  Agent 103 found intervals in the sub-map:
[DBG]   [4..9]
[DBG]  Agent 103 (interval in submap: [4..9]) contains time 7, added to replan.
[DBG]  Agent 120 found intervals in the sub-map:
[DBG]   [45..49]
[DBG]  Agent 120 is not in sub-map at time 7 (intervals: 
[DBG]  [45..49] )
[DBG]  Agent 127 found intervals in the sub-map:
[DBG]   [7..12]
[DBG]  Agent 127 (interval in submap: [7..12]) contains time 7, added to replan.
[DBG]  Agent 138 found intervals in the sub-map:
[DBG]   [1..11]
[DBG]  Agent 138 (interval in submap: [1..11]) contains time 7, added to replan.
[DBG]  Agent 22 | Start (global): 298 -> (local): (4, 4) at time 7 | Goal (global): 298 -> (local): (4, 4) at time 9
[DBG]  Agent 87 | Start (global): 296 -> (local): (4, 2) at time 7 | Goal (global): 297 -> (local): (4, 3) at time 8
[DBG]  Agent 103 | Start (global): 264 -> (local): (3, 2) at time 7 | Goal (global): 297 -> (local): (4, 3) at time 9
[DBG]  Agent 127 | Start (global): 297 -> (local): (4, 3) at time 7 | Goal (global): 168 -> (local): (0, 2) at time 12
[DBG]  Agent 138 | Start (global): 232 -> (local): (2, 2) at time 7 | Goal (global): 167 -> (local): (0, 1) at time 11
[DBG]  [REPAIR] SAT destroy operator called.
[DBG]  [REPAIR] SAT operator â€“ launching subproblem FOR OPTIMIZATION.
[DBG]  Creating local paths (sx, sy) in the submap for T_sync = 7
[DBG]    Agent 22 (global paths from T=7 to 9) has local path: (4,4) (4,4) (4,4) 
[DBG]    Agent 87 (global paths from T=7 to 8) has local path: (4,2) (4,3) 
[DBG]    Agent 103 (global paths from T=7 to 9) has local path: (3,2) (4,2) (4,3) 
[DBG]    Agent 127 (global paths from T=7 to 12) has local path: (4,3) (3,3) (2,3) (2,2) (1,2) (0,2) 
[DBG]    Agent 138 (global paths from T=7 to 11) has local path: (2,2) (1,2) (1,2) (0,2) (0,1) 
[DBG]  Checking input data for SAT solver:
[DBG]    - Number of agents to replan: 5
[DBG]  Agent 22 has the original local path length: 3 => Start (4,4), Goal (4,4)
[DBG]  Agent 87 has the original local path length: 2 => Start (4,2), Goal (4,3)
[DBG]  Agent 103 has the original local path length: 3 => Start (3,2), Goal (4,3)
[DBG]  Agent 127 has the original local path length: 6 => Start (4,3), Goal (0,2)
[DBG]  Agent 138 has the original local path length: 5 => Start (2,2), Goal (0,1)
[DBG]  Start position: (4, 4), (4, 2), (3, 2), (4, 3), (2, 2), 
[DBG]  Goal position: (4, 4), (4, 3), (4, 3), (0, 2), (0, 1), 
[DBG]  SAT instance and solver created.
Currently solving
Instance name: scen
Map name: map
Encoding used: disappear_at_goal
SAT solver used: Kissat
Optimizing function: sum of costs
Number of agents: 5
Mks LB: 6
SoC LB: 16
Delta: 0
Remaining time: 300000 [ms]

Vertex conflict! Agents 0, 1, timestep 2, location 0
Swapping conflict! Agents 0, 1, timestep 2, edge (0,0)
Vertex conflict! Agents 0, 1, timestep 3, location 0
Swapping conflict! Agents 0, 1, timestep 3, edge (0,0)
Vertex conflict! Agents 0, 1, timestep 4, location 0
Swapping conflict! Agents 0, 1, timestep 4, edge (0,0)
Vertex conflict! Agents 0, 1, timestep 5, location 0
Vertex conflict! Agents 0, 2, timestep 3, location 0
Swapping conflict! Agents 0, 2, timestep 3, edge (0,0)
Vertex conflict! Agents 0, 2, timestep 4, location 0
Swapping conflict! Agents 0, 2, timestep 4, edge (0,0)
Vertex conflict! Agents 0, 2, timestep 5, location 0
Vertex conflict! Agents 0, 4, timestep 3, location 0
Swapping conflict! Agents 0, 4, timestep 3, edge (0,0)
Vertex conflict! Agents 0, 4, timestep 4, location 0
Swapping conflict! Agents 0, 4, timestep 4, edge (0,0)
Vertex conflict! Agents 0, 4, timestep 5, location 0
Vertex conflict! Agents 1, 2, timestep 3, location 0
Swapping conflict! Agents 1, 2, timestep 3, edge (0,0)
Vertex conflict! Agents 1, 2, timestep 4, location 0
Swapping conflict! Agents 1, 2, timestep 4, edge (0,0)
Vertex conflict! Agents 1, 2, timestep 5, location 0
Vertex conflict! Agents 1, 4, timestep 3, location 0
Swapping conflict! Agents 1, 4, timestep 3, edge (0,0)
Vertex conflict! Agents 1, 4, timestep 4, location 0
Swapping conflict! Agents 1, 4, timestep 4, edge (0,0)
Vertex conflict! Agents 1, 4, timestep 5, location 0
Vertex conflict! Agents 2, 4, timestep 3, location 0
Swapping conflict! Agents 2, 4, timestep 3, edge (0,0)
Vertex conflict! Agents 2, 4, timestep 4, location 0
Swapping conflict! Agents 2, 4, timestep 4, edge (0,0)
Vertex conflict! Agents 2, 4, timestep 5, location 0
Found plan [agents = 5] [timesteps = 6]
Agent #0 : 18 0 0 0 0 0 
Agent #1 : 16 17 0 0 0 0 
Agent #2 : 11 16 17 0 0 0 
Agent #3 : 17 12 11 7 4 1 
Agent #4 : 7 6 3 0 0 0 

[STAT] Solver returned: 0
[DBG]  Agent (index) 22 | New local path (submap idx):
[DBG]  18 
[DBG]  Agent (index) 87 | New local path (submap idx):
[DBG]  16 17 
[DBG]  Agent (index) 103 | New local path (submap idx):
[DBG]  11 16 17 
[DBG]  Agent (index) 127 | New local path (submap idx):
[DBG]  17 12 11 7 4 1 
[DBG]  Agent (index) 138 | New local path (submap idx):
[DBG]  7 6 3 0 
[DBG]  Update the agent path 22 | Original local length: 3 | New local length: 1
[DBG]  agent 22 t=0 => decoded (sx,sy)=(4,4) => global_id=298
[DBG]  Complete path of agent 22:
[DBG]    Original: 329 329 329 329 329 329 297 298 298 298 299 300 300 268 269 269 270 271 271 303 304 336 337 338 338 339 340 308 340 339 
[DBG]    New:     329 329 329 329 329 329 297 298 299 300 300 268 269 269 270 271 271 303 304 336 337 338 338 339 340 308 340 339 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 329 329 329 329 329 329 297 
[DBG]    Local path (in submap): 298 299 300 
[DBG]    Suffix (out of submap): 300 268 269 269 270 271 271 303 304 336 337 338 338 339 340 308 340 339 
[DBG]  Original agent path length 22 je: 30
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 0: 329, 329, 329, 329, 329, 329, 297, 298, 299, 300, 300, 268, 269, 269, 270, 271, 271, 303, 304, 336, 337, 338, 338, 339, 340, 308, 340, 339, 
[DBG]  Path for agent 22 updated, resulting length: 28
[DBG]  Update the agent path 87 | Original local length: 2 | New local length: 2
[DBG]  agent 87 t=0 => decoded (sx,sy)=(4,2) => global_id=296
[DBG]  agent 87 t=1 => decoded (sx,sy)=(4,3) => global_id=297
[DBG]  Complete path of agent 87:
[DBG]    Original: 231 263 263 263 263 264 296 296 297 329 361 393 425 426 426 427 459 491 523 555 587 619 651 650 682 714 
[DBG]    New:     231 263 263 263 263 264 296 296 297 329 361 393 425 426 426 427 459 491 523 555 587 619 651 650 682 714 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 231 263 263 263 263 264 296 
[DBG]    Local path (in submap): 296 297 
[DBG]    Suffix (out of submap): 329 361 393 425 426 426 427 459 491 523 555 587 619 651 650 682 714 
[DBG]  Original agent path length 87 je: 26
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 1: 231, 263, 263, 263, 263, 264, 296, 296, 297, 329, 361, 393, 425, 426, 426, 427, 459, 491, 523, 555, 587, 619, 651, 650, 682, 714, 
[DBG]  Path for agent 87 updated, resulting length: 26
[DBG]  Update the agent path 103 | Original local length: 3 | New local length: 3
[DBG]  agent 103 t=0 => decoded (sx,sy)=(3,2) => global_id=264
[DBG]  agent 103 t=1 => decoded (sx,sy)=(4,2) => global_id=296
[DBG]  agent 103 t=2 => decoded (sx,sy)=(4,3) => global_id=297
[DBG]  Complete path of agent 103:
[DBG]    Original: 40 72 104 136 168 200 232 264 296 297 329 361 393 425 457 489 489 521 520 519 551 550 582 583 615 647 646 678 710 742 774 806 807 839 871 903 935 936 937 905 
[DBG]    New:     40 72 104 136 168 200 232 264 296 297 329 361 393 425 457 489 489 521 520 519 551 550 582 583 615 647 646 678 710 742 774 806 807 839 871 903 935 936 937 905 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 40 72 104 136 168 200 232 
[DBG]    Local path (in submap): 264 296 297 
[DBG]    Suffix (out of submap): 329 361 393 425 457 489 489 521 520 519 551 550 582 583 615 647 646 678 710 742 774 806 807 839 871 903 935 936 937 905 
[DBG]  Original agent path length 103 je: 40
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 2: 40, 72, 104, 136, 168, 200, 232, 264, 296, 297, 329, 361, 393, 425, 457, 489, 489, 521, 520, 519, 551, 550, 582, 583, 615, 647, 646, 678, 710, 742, 774, 806, 807, 839, 871, 903, 935, 936, 937, 905, 
[DBG]  Path for agent 103 updated, resulting length: 40
[DBG]  Update the agent path 127 | Original local length: 6 | New local length: 6
[DBG]  agent 127 t=0 => decoded (sx,sy)=(4,3) => global_id=297
[DBG]  agent 127 t=1 => decoded (sx,sy)=(3,3) => global_id=265
[DBG]  agent 127 t=2 => decoded (sx,sy)=(3,2) => global_id=264
[DBG]  agent 127 t=3 => decoded (sx,sy)=(2,2) => global_id=232
[DBG]  agent 127 t=4 => decoded (sx,sy)=(1,2) => global_id=200
[DBG]  agent 127 t=5 => decoded (sx,sy)=(0,2) => global_id=168
[DBG]  Complete path of agent 127:
[DBG]    Original: 428 427 426 425 393 361 329 297 265 233 232 200 168 136 137 105 73 
[DBG]    New:     428 427 426 425 393 361 329 297 265 264 232 200 168 136 137 105 73 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 428 427 426 425 393 361 329 
[DBG]    Local path (in submap): 297 265 264 232 200 168 
[DBG]    Suffix (out of submap): 136 137 105 73 
[DBG]  Original agent path length 127 je: 17
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 3: 428, 427, 426, 425, 393, 361, 329, 297, 265, 264, 232, 200, 168, 136, 137, 105, 73, 
[DBG]  Path for agent 127 updated, resulting length: 17
[DBG]  Update the agent path 138 | Original local length: 5 | New local length: 4
[DBG]  agent 138 t=0 => decoded (sx,sy)=(2,2) => global_id=232
[DBG]  agent 138 t=1 => decoded (sx,sy)=(2,1) => global_id=231
[DBG]  agent 138 t=2 => decoded (sx,sy)=(1,1) => global_id=199
[DBG]  agent 138 t=3 => decoded (sx,sy)=(0,1) => global_id=167
[DBG]  Complete path of agent 138:
[DBG]    Original: 293 294 295 296 264 265 233 232 200 200 168 167 
[DBG]    New:     293 294 295 296 264 265 233 232 231 199 167 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 293 294 295 296 264 265 233 
[DBG]    Local path (in submap): 232 231 199 167 
[DBG]    Suffix (out of submap): 
[DBG]  Original agent path length 138 je: 12
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 4: 293, 294, 295, 296, 264, 265, 233, 232, 231, 199, 167, 
[DBG]  Path for agent 138 updated, resulting length: 11
[DBG]  Paths successfully updated.
[DBG]  (LNS.cpp) New path for agent 22: 
[DBG]  329, 329, 329, 329, 329, 329, 297, 298, 299, 300, 300, 268, 269, 269, 270, 271, 271, 303, 304, 336, 337, 338, 338, 339, 340, 308, 340, 339, 
[DBG]  (LNS.cpp) New path for agent 87: 
[DBG]  231, 263, 263, 263, 263, 264, 296, 296, 297, 329, 361, 393, 425, 426, 426, 427, 459, 491, 523, 555, 587, 619, 651, 650, 682, 714, 
[DBG]  (LNS.cpp) New path for agent 103: 
[DBG]  40, 72, 104, 136, 168, 200, 232, 264, 296, 297, 329, 361, 393, 425, 457, 489, 489, 521, 520, 519, 551, 550, 582, 583, 615, 647, 646, 678, 710, 742, 774, 806, 807, 839, 871, 903, 935, 936, 937, 905, 
[DBG]  (LNS.cpp) New path for agent 127: 
[DBG]  428, 427, 426, 425, 393, 361, 329, 297, 265, 264, 232, 200, 168, 136, 137, 105, 73, 
[DBG]  (LNS.cpp) New path for agent 138: 
[DBG]  293, 294, 295, 296, 264, 265, 233, 232, 231, 199, 167, 
[DBG]  component_weights = {0.258829, 0.220202, 0.230276, 0.290692}
[DBG]  opSuccess value: 1
[STAT] neighbor.sum_of_costs before recomputation: 117
[STAT] neighbor.old_sum_of_costs before recomputation: 120
[STAT] sum_of_costs before recomputation: 4537
[DBG]  Validate solution immediately after SAT success.
[WARNING] Problem after SAT: Vertex conflict between agents 16 and 22 at location 338 at timestep 22
[DBG]  Attempting immediate repair via init_lns because problem occurred after SAT (should be applied only for conflicts...).
[DBG]  Passing 150 agents to init_lns (skip=true).
[DBG]  path_table contents for selected agents (neighbor.agents):
[DBG]    Agent 22 => controlling path length=28
[DBG]    Agent 87 => controlling path length=26
[DBG]    Agent 103 => controlling path length=40
[DBG]    Agent 127 => controlling path length=17
[DBG]    Agent 138 => controlling path length=11
[DBG]  hodnota skip_initial_solution=1
[DBG]  We skip initialSolution => call buildCollisionData()
[DBG]  buildCollisionData() called â€“ skip_initial_solution case.
[DBG]  Agents.size()=150, collision_graph.size()=150
[DBG]  agent 16 => updateCollidingPairs => foundCollision
[DBG]  agent 20 => updateCollidingPairs => foundCollision
[DBG]  agent 22 => updateCollidingPairs => foundCollision
[DBG]  agent 80 => updateCollidingPairs => foundCollision
[DBG]  agent 84 => updateCollidingPairs => foundCollision
[DBG]  agent 138 => updateCollidingPairs => foundCollision
[DBG]  Conflicting agent pairs:
[DBG]  agent 16 is in conflict with agent 22
[DBG]  agent 20 is in conflict with agent 22
[DBG]  agent 22 is in conflict with agent 84
[DBG]  agent 80 is in conflict with agent 138
[DBG]  buildCollisionData() => sum_of_costs=4534, num_of_colliding_pairs=4
[DBG]  buildCollisionData done => sum_of_costs=4534, num_of_colliding_pairs=4
[DBG]  sum_of_cost hodnota: 4534
[DBG]  After skip/init build => iteration_stats.back(): sum_of_costs=4534, collisions=4
[DEBUG] Using default neighbor generation strategy for conflicts: 1
[DEBUG] Using default neighbor generation strategy for conflicts: 2
[DEBUG] Using default neighbor generation strategy for conflicts: 0
	InitLNS(PP): runtime = 0.0153715, iterations = 4, colliding pairs = 0, initial colliding pairs = 4, solution cost = 4537, initial solution cost = 4534, failed iterations = 0
[DBG]  init_lns->sum_of_costs after init_lns->run: 4537
[DBG]  sum_of_costs after assignment from init_lns->run: 4537
[DBG]  Recomputing sum_of_cost by dividing neighbor.sum_of_costs and neighbor.old_sum_of_costs
[STAT] sum_of_costs after recomputation: 4537
[STAT] Iteration 24
[DBG]  Using SAT operator (destroy+repair SAT).
[DBG]  ====================
[DBG]  SAT destroy operator called.
[DBG]  SAT heuristic: 2
[DBG]  key_agent_id: 104
[DBG]  key_agent_id global path length: 21
[DBG]  Submap content (global positions):
[DBG]  404 405 406 407 408 
[DBG]  436 437 438 439 440 
[DBG]  468 469 470 471 472 
[DBG]  500 501 502 503 504 
[DBG]  532 533 534 535 536 
[DBG]  Map content with agents and obstacles:
[DBG]  . . . . . 
[DBG]  X . . . . 
[DBG]  A . A X . 
[DBG]  X . A . . 
[DBG]  X A . X X 
[DBG]  content of the map structure that we pass to the SAT solver:
[DBG]  1  1  1  1  1  
[DBG]  -1  1  1  1  1  
[DBG]  1  1  1  -1  1  
[DBG]  -1  1  1  1  1  
[DBG]  -1  1  1  -1  -1  
[DBG]  Identifying agents in a submap for rescheduling (when key_agent is there at the time 5):
[DBG]  Agent 3 found intervals in the sub-map:
[DBG]   [0..6]
[DBG]  Agent 3 (interval in submap: [0..6]) contains time 5, added to replan.
[DBG]  Agent 89 found intervals in the sub-map:
[DBG]   [0..5]
[DBG]  Agent 89 (interval in submap: [0..5]) contains time 5, added to replan.
[DBG]  Agent 104 found intervals in the sub-map:
[DBG]   [2..13]
[DBG]  Agent 104 (interval in submap: [2..13]) contains time 5, added to replan.
[DBG]  Agent 136 found intervals in the sub-map:
[DBG]   [0..4]
[DBG]  Agent 136 is not in sub-map at time 5 (intervals: 
[DBG]  [0..4] )
[DBG]  Agent 137 found intervals in the sub-map:
[DBG]   [3..8]
[DBG]  Agent 137 (interval in submap: [3..8]) contains time 5, added to replan.
[DBG]  Agent 3 | Start (global): 468 -> (local): (2, 0) at time 5 | Goal (global): 468 -> (local): (2, 0) at time 6
[DBG]  Agent 89 | Start (global): 533 -> (local): (4, 1) at time 5 | Goal (global): 533 -> (local): (4, 1) at time 5
[DBG]  Agent 104 | Start (global): 470 -> (local): (2, 2) at time 5 | Goal (global): 407 -> (local): (0, 3) at time 13
[DBG]  Agent 137 | Start (global): 502 -> (local): (3, 2) at time 5 | Goal (global): 468 -> (local): (2, 0) at time 8
[DBG]  [REPAIR] SAT destroy operator called.
[DBG]  [REPAIR] SAT operator â€“ launching subproblem FOR OPTIMIZATION.
[DBG]  Creating local paths (sx, sy) in the submap for T_sync = 5
[DBG]    Agent 3 (global paths from T=5 to 6) has local path: (2,0) (2,0) 
[DBG]    Agent 89 (global paths from T=5 to 5) has local path: (4,1) 
[DBG]    Agent 104 (global paths from T=5 to 13) has local path: (2,2) (1,2) (1,2) (1,2) (1,2) (1,2) (1,2) (1,3) (0,3) 
[DBG]    Agent 137 (global paths from T=5 to 8) has local path: (3,2) (3,1) (2,1) (2,0) 
[DBG]  Checking input data for SAT solver:
[DBG]    - Number of agents to replan: 4
[DBG]  Agent 3 has the original local path length: 2 => Start (2,0), Goal (2,0)
[DBG]  Agent 89 has the original local path length: 1 => Start (4,1), Goal (4,1)
[DBG]  Agent 104 has the original local path length: 9 => Start (2,2), Goal (0,3)
[DBG]  Agent 137 has the original local path length: 4 => Start (3,2), Goal (2,0)
[DBG]  Start position: (2, 0), (4, 1), (2, 2), (3, 2), 
[DBG]  Goal position: (2, 0), (4, 1), (0, 3), (2, 0), 
[DBG]  SAT instance and solver created.
Currently solving
Instance name: scen
Map name: map
Encoding used: disappear_at_goal
SAT solver used: Kissat
Optimizing function: sum of costs
Number of agents: 4
Mks LB: 4
SoC LB: 10
Delta: 0
Remaining time: 300000 [ms]

Vertex conflict! Agents 0, 1, timestep 1, location 0
Swapping conflict! Agents 0, 1, timestep 1, edge (0,0)
Vertex conflict! Agents 0, 1, timestep 2, location 0
Swapping conflict! Agents 0, 1, timestep 2, edge (0,0)
Vertex conflict! Agents 0, 1, timestep 3, location 0
Found plan [agents = 4] [timesteps = 4]
Agent #0 : 9 0 0 0 
Agent #1 : 17 0 0 0 
Agent #2 : 11 6 7 3 
Agent #3 : 14 13 10 9 

[STAT] Solver returned: 0
[DBG]  Agent (index) 3 | New local path (submap idx):
[DBG]  9 
[DBG]  Agent (index) 89 | New local path (submap idx):
[DBG]  17 
[DBG]  Agent (index) 104 | New local path (submap idx):
[DBG]  11 6 7 3 
[DBG]  Agent (index) 137 | New local path (submap idx):
[DBG]  14 13 10 9 
[DBG]  Update the agent path 3 | Original local length: 2 | New local length: 1
[DBG]  agent 3 t=0 => decoded (sx,sy)=(2,0) => global_id=468
[DBG]  Complete path of agent 3:
[DBG]    Original: 468 468 468 468 468 468 468 467 435 435 435 435 467 499 499 499 499 498 466 465 464 463 462 494 526 558 590 591 623 655 687 719 751 783 815 847 879 880 912 913 912 
[DBG]    New:     468 468 468 468 468 468 467 435 435 435 435 467 499 499 499 499 498 466 465 464 463 462 494 526 558 590 591 623 655 687 719 751 783 815 847 879 880 912 913 912 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 468 468 468 468 468 
[DBG]    Local path (in submap): 468 467 
[DBG]    Suffix (out of submap): 435 435 435 435 467 499 499 499 499 498 466 465 464 463 462 494 526 558 590 591 623 655 687 719 751 783 815 847 879 880 912 913 912 
[DBG]  Original agent path length 3 je: 41
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 0: 468, 468, 468, 468, 468, 468, 467, 435, 435, 435, 435, 467, 499, 499, 499, 499, 498, 466, 465, 464, 463, 462, 494, 526, 558, 590, 591, 623, 655, 687, 719, 751, 783, 815, 847, 879, 880, 912, 913, 912, 
[DBG]  Path for agent 3 updated, resulting length: 40
[DBG]  Update the agent path 89 | Original local length: 1 | New local length: 1
[DBG]  agent 89 t=0 => decoded (sx,sy)=(4,1) => global_id=533
[DBG]  Complete path of agent 89:
[DBG]    Original: 437 469 501 502 534 533 565 597 596 628 660 692 724 756 788 787 819 820 821 822 854 854 886 918 950 982 1014 1015 
[DBG]    New:     437 469 501 502 534 533 565 597 596 628 660 692 724 756 788 787 819 820 821 822 854 854 886 918 950 982 1014 1015 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 437 469 501 502 534 
[DBG]    Local path (in submap): 533 
[DBG]    Suffix (out of submap): 565 597 596 628 660 692 724 756 788 787 819 820 821 822 854 854 886 918 950 982 1014 1015 
[DBG]  Original agent path length 89 je: 28
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 1: 437, 469, 501, 502, 534, 533, 565, 597, 596, 628, 660, 692, 724, 756, 788, 787, 819, 820, 821, 822, 854, 854, 886, 918, 950, 982, 1014, 1015, 
[DBG]  Path for agent 89 updated, resulting length: 28
[DBG]  Update the agent path 104 | Original local length: 9 | New local length: 4
[DBG]  agent 104 t=0 => decoded (sx,sy)=(2,2) => global_id=470
[DBG]  agent 104 t=1 => decoded (sx,sy)=(1,2) => global_id=438
[DBG]  agent 104 t=2 => decoded (sx,sy)=(1,3) => global_id=439
[DBG]  agent 104 t=3 => decoded (sx,sy)=(0,3) => global_id=407
[DBG]  Complete path of agent 104:
[DBG]    Original: 566 565 533 501 469 470 438 438 438 438 438 438 439 407 375 343 311 310 309 277 276 
[DBG]    New:     566 565 533 501 469 470 438 439 407 375 343 311 310 309 277 276 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 566 565 533 501 469 
[DBG]    Local path (in submap): 470 438 439 407 375 343 311 310 309 
[DBG]    Suffix (out of submap): 277 276 
[DBG]  Original agent path length 104 je: 21
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 2: 566, 565, 533, 501, 469, 470, 438, 439, 407, 375, 343, 311, 310, 309, 277, 276, 
[DBG]  Path for agent 104 updated, resulting length: 16
[DBG]  Update the agent path 137 | Original local length: 4 | New local length: 4
[DBG]  agent 137 t=0 => decoded (sx,sy)=(3,2) => global_id=502
[DBG]  agent 137 t=1 => decoded (sx,sy)=(3,1) => global_id=501
[DBG]  agent 137 t=2 => decoded (sx,sy)=(2,1) => global_id=469
[DBG]  agent 137 t=3 => decoded (sx,sy)=(2,0) => global_id=468
[DBG]  Complete path of agent 137:
[DBG]    Original: 538 506 505 504 503 502 501 469 468 467 499 531 530 529 561 560 560 561 593 592 591 590 589 588 587 619 651 650 649 648 616 584 583 582 581 580 579 578 610 609 608 640 672 704 736 768 800 832 864 865 897 929 930 931 932 
[DBG]    New:     538 506 505 504 503 502 501 469 468 467 499 531 530 529 561 560 560 561 593 592 591 590 589 588 587 619 651 650 649 648 616 584 583 582 581 580 579 578 610 609 608 640 672 704 736 768 800 832 864 865 897 929 930 931 932 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 538 506 505 504 503 
[DBG]    Local path (in submap): 502 501 469 468 
[DBG]    Suffix (out of submap): 467 499 531 530 529 561 560 560 561 593 592 591 590 589 588 587 619 651 650 649 648 616 584 583 582 581 580 579 578 610 609 608 640 672 704 736 768 800 832 864 865 897 929 930 931 932 
[DBG]  Original agent path length 137 je: 55
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 3: 538, 506, 505, 504, 503, 502, 501, 469, 468, 467, 499, 531, 530, 529, 561, 560, 560, 561, 593, 592, 591, 590, 589, 588, 587, 619, 651, 650, 649, 648, 616, 584, 583, 582, 581, 580, 579, 578, 610, 609, 608, 640, 672, 704, 736, 768, 800, 832, 864, 865, 897, 929, 930, 931, 932, 
[DBG]  Path for agent 137 updated, resulting length: 55
[DBG]  Paths successfully updated.
[DBG]  (LNS.cpp) New path for agent 3: 
[DBG]  468, 468, 468, 468, 468, 468, 467, 435, 435, 435, 435, 467, 499, 499, 499, 499, 498, 466, 465, 464, 463, 462, 494, 526, 558, 590, 591, 623, 655, 687, 719, 751, 783, 815, 847, 879, 880, 912, 913, 912, 
[DBG]  (LNS.cpp) New path for agent 89: 
[DBG]  437, 469, 501, 502, 534, 533, 565, 597, 596, 628, 660, 692, 724, 756, 788, 787, 819, 820, 821, 822, 854, 854, 886, 918, 950, 982, 1014, 1015, 
[DBG]  (LNS.cpp) New path for agent 104: 
[DBG]  566, 565, 533, 501, 469, 470, 438, 439, 407, 375, 343, 311, 310, 309, 277, 276, 
[DBG]  (LNS.cpp) New path for agent 137: 
[DBG]  538, 506, 505, 504, 503, 502, 501, 469, 468, 467, 499, 531, 530, 529, 561, 560, 560, 561, 593, 592, 591, 590, 589, 588, 587, 619, 651, 650, 649, 648, 616, 584, 583, 582, 581, 580, 579, 578, 610, 609, 608, 640, 672, 704, 736, 768, 800, 832, 864, 865, 897, 929, 930, 931, 932, 
[DBG]  component_weights = {0.25727, 0.218876, 0.22889, 0.294964}
[DBG]  opSuccess value: 1
[STAT] neighbor.sum_of_costs before recomputation: 135
[STAT] neighbor.old_sum_of_costs before recomputation: 141
[STAT] sum_of_costs before recomputation: 4537
[DBG]  Validate solution immediately after SAT success.
[WARNING] Problem after SAT: Vertex conflict between agents 10 and 3 at location 467 at timestep 11
[DBG]  Attempting immediate repair via init_lns because problem occurred after SAT (should be applied only for conflicts...).
[DBG]  Passing 150 agents to init_lns (skip=true).
[DBG]  path_table contents for selected agents (neighbor.agents):
[DBG]    Agent 3 => controlling path length=40
[DBG]    Agent 89 => controlling path length=28
[DBG]    Agent 104 => controlling path length=16
[DBG]    Agent 137 => controlling path length=55
[DBG]  hodnota skip_initial_solution=1
[DBG]  We skip initialSolution => call buildCollisionData()
[DBG]  buildCollisionData() called â€“ skip_initial_solution case.
[DBG]  Agents.size()=150, collision_graph.size()=150
[DBG]  agent 3 => updateCollidingPairs => foundCollision
[DBG]  agent 10 => updateCollidingPairs => foundCollision
[DBG]  agent 22 => updateCollidingPairs => foundCollision
[DBG]  agent 26 => updateCollidingPairs => foundCollision
[DBG]  agent 43 => updateCollidingPairs => foundCollision
[DBG]  agent 57 => updateCollidingPairs => foundCollision
[DBG]  agent 75 => updateCollidingPairs => foundCollision
[DBG]  agent 83 => updateCollidingPairs => foundCollision
[DBG]  agent 104 => updateCollidingPairs => foundCollision
[DBG]  agent 131 => updateCollidingPairs => foundCollision
[DBG]  agent 149 => updateCollidingPairs => foundCollision
[DBG]  Conflicting agent pairs:
[DBG]  agent 3 is in conflict with agent 10
[DBG]  agent 3 is in conflict with agent 57
[DBG]  agent 3 is in conflict with agent 83
[DBG]  agent 3 is in conflict with agent 131
[DBG]  agent 22 is in conflict with agent 104
[DBG]  agent 26 is in conflict with agent 104
[DBG]  agent 43 is in conflict with agent 104
[DBG]  agent 75 is in conflict with agent 104
[DBG]  agent 104 is in conflict with agent 149
[DBG]  buildCollisionData() => sum_of_costs=4531, num_of_colliding_pairs=9
[DBG]  buildCollisionData done => sum_of_costs=4531, num_of_colliding_pairs=9
[DBG]  sum_of_cost hodnota: 4531
[DBG]  After skip/init build => iteration_stats.back(): sum_of_costs=4531, collisions=9
[DEBUG] Using default neighbor generation strategy for conflicts: 0
[DEBUG] Using default neighbor generation strategy for conflicts: 1
[DEBUG] Using default neighbor generation strategy for conflicts: 1
	InitLNS(PP): runtime = 0.0205353, iterations = 4, colliding pairs = 0, initial colliding pairs = 9, solution cost = 4522, initial solution cost = 4531, failed iterations = 0
[DBG]  init_lns->sum_of_costs after init_lns->run: 4522
[DBG]  sum_of_costs after assignment from init_lns->run: 4522
[DBG]  Recomputing sum_of_cost by dividing neighbor.sum_of_costs and neighbor.old_sum_of_costs
[STAT] sum_of_costs after recomputation: 4522
[STAT] Iteration 25
[DBG]  Using SAT operator (destroy+repair SAT).
[DBG]  ====================
[DBG]  SAT destroy operator called.
[DBG]  SAT heuristic: 2
[DBG]  key_agent_id: 136
[DBG]  key_agent_id global path length: 18
[DBG]  Submap content (global positions):
[DBG]  307 308 309 310 311 
[DBG]  339 340 341 342 343 
[DBG]  371 372 373 374 375 
[DBG]  403 404 405 406 407 
[DBG]  435 436 437 438 439 
[DBG]  Map content with agents and obstacles:
[DBG]  X A . . . 
[DBG]  . . A X . 
[DBG]  . X A X . 
[DBG]  . . A . . 
[DBG]  . X . . . 
[DBG]  content of the map structure that we pass to the SAT solver:
[DBG]  -1  1  1  1  1  
[DBG]  1  1  1  -1  1  
[DBG]  1  -1  1  -1  1  
[DBG]  1  1  1  1  1  
[DBG]  1  -1  1  1  1  
[DBG]  Identifying agents in a submap for rescheduling (when key_agent is there at the time 8):
[DBG]  Agent 3 found intervals in the sub-map:
[DBG]  
[DBG]  Agent 3 is not in sub-map at time 8 (intervals: 
[DBG]  )
[DBG]  Agent 5 found intervals in the sub-map:
[DBG]   [4..10]
[DBG]  Agent 5 (interval in submap: [4..10]) contains time 8, added to replan.
[DBG]  Agent 31 found intervals in the sub-map:
[DBG]   [6..9]
[DBG]  Agent 31 (interval in submap: [6..9]) contains time 8, added to replan.
[DBG]  Agent 36 found intervals in the sub-map:
[DBG]   [17..18]
[DBG]  Agent 36 is not in sub-map at time 8 (intervals: 
[DBG]  [17..18] )
[DBG]  Agent 43 found intervals in the sub-map:
[DBG]   [9..14]
[DBG]  Agent 43 is not in sub-map at time 8 (intervals: 
[DBG]  [9..14] )
[DBG]  Agent 53 found intervals in the sub-map:
[DBG]  
[DBG]  Agent 53 is not in sub-map at time 8 (intervals: 
[DBG]  )
[DBG]  Agent 75 found intervals in the sub-map:
[DBG]   [0..4]
[DBG]  Agent 75 is not in sub-map at time 8 (intervals: 
[DBG]  [0..4] )
[DBG]  Agent 104 found intervals in the sub-map:
[DBG]   [5..12]
[DBG]  Agent 104 (interval in submap: [5..12]) contains time 8, added to replan.
[DBG]  Agent 136 found intervals in the sub-map:
[DBG]   [2..11]
[DBG]  Agent 136 (interval in submap: [2..11]) contains time 8, added to replan.
[DBG]  Agent 5 | Start (global): 341 -> (local): (1, 2) at time 8 | Goal (global): 339 -> (local): (1, 0) at time 10
[DBG]  Agent 31 | Start (global): 308 -> (local): (0, 1) at time 8 | Goal (global): 309 -> (local): (0, 2) at time 9
[DBG]  Agent 104 | Start (global): 405 -> (local): (3, 2) at time 8 | Goal (global): 308 -> (local): (0, 1) at time 12
[DBG]  Agent 136 | Start (global): 373 -> (local): (2, 2) at time 8 | Goal (global): 310 -> (local): (0, 3) at time 11
[DBG]  [REPAIR] SAT destroy operator called.
[DBG]  [REPAIR] SAT operator â€“ launching subproblem FOR OPTIMIZATION.
[DBG]  Creating local paths (sx, sy) in the submap for T_sync = 8
[DBG]    Agent 5 (global paths from T=8 to 10) has local path: (1,2) (1,1) (1,0) 
[DBG]    Agent 31 (global paths from T=8 to 9) has local path: (0,1) (0,2) 
[DBG]    Agent 104 (global paths from T=8 to 12) has local path: (3,2) (2,2) (1,2) (0,2) (0,1) 
[DBG]    Agent 136 (global paths from T=8 to 11) has local path: (2,2) (1,2) (0,2) (0,3) 
[DBG]  Checking input data for SAT solver:
[DBG]    - Number of agents to replan: 4
[DBG]  Agent 5 has the original local path length: 3 => Start (1,2), Goal (1,0)
[DBG]  Agent 31 has the original local path length: 2 => Start (0,1), Goal (0,2)
[DBG]  Agent 104 has the original local path length: 5 => Start (3,2), Goal (0,1)
[DBG]  Agent 136 has the original local path length: 4 => Start (2,2), Goal (0,3)
[DBG]  Start position: (1, 2), (0, 1), (3, 2), (2, 2), 
[DBG]  Goal position: (1, 0), (0, 2), (0, 1), (0, 3), 
[DBG]  SAT instance and solver created.
Currently solving
Instance name: scen
Map name: map
Encoding used: disappear_at_goal
SAT solver used: Kissat
Optimizing function: sum of costs
Number of agents: 4
Mks LB: 5
SoC LB: 14
Delta: 0
Remaining time: 300000 [ms]

Vertex conflict! Agents 0, 1, timestep 3, location 0
Swapping conflict! Agents 0, 1, timestep 3, edge (0,0)
Vertex conflict! Agents 0, 1, timestep 4, location 0
Vertex conflict! Agents 0, 2, timestep 4, location 0
Vertex conflict! Agents 0, 3, timestep 4, location 0
Vertex conflict! Agents 1, 2, timestep 4, location 0
Vertex conflict! Agents 1, 3, timestep 4, location 0
Vertex conflict! Agents 2, 3, timestep 4, location 0
Found plan [agents = 4] [timesteps = 5]
Agent #0 : 6 5 4 0 0 
Agent #1 : 0 1 0 0 0 
Agent #2 : 13 9 6 5 0 
Agent #3 : 9 6 1 2 0 

[STAT] Solver returned: 0
[DBG]  Agent (index) 5 | New local path (submap idx):
[DBG]  6 5 4 
[DBG]  Agent (index) 31 | New local path (submap idx):
[DBG]  0 1 
[DBG]  Agent (index) 104 | New local path (submap idx):
[DBG]  13 9 6 5 0 
[DBG]  Agent (index) 136 | New local path (submap idx):
[DBG]  9 6 1 2 
[DBG]  Update the agent path 5 | Original local length: 3 | New local length: 3
[DBG]  agent 5 t=0 => decoded (sx,sy)=(1,2) => global_id=341
[DBG]  agent 5 t=1 => decoded (sx,sy)=(1,1) => global_id=340
[DBG]  agent 5 t=2 => decoded (sx,sy)=(1,0) => global_id=339
[DBG]  Complete path of agent 5:
[DBG]    Original: 281 313 345 344 343 311 310 309 341 340 339 338 337 337 336 335 303 302 302 302 301 300 299 298 297 296 295 294 293 261 
[DBG]    New:     281 313 345 344 343 311 310 309 341 340 339 338 337 337 336 335 303 302 302 302 301 300 299 298 297 296 295 294 293 261 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 281 313 345 344 343 311 310 309 
[DBG]    Local path (in submap): 341 340 339 
[DBG]    Suffix (out of submap): 338 337 337 336 335 303 302 302 302 301 300 299 298 297 296 295 294 293 261 
[DBG]  Original agent path length 5 je: 30
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 0: 281, 313, 345, 344, 343, 311, 310, 309, 341, 340, 339, 338, 337, 337, 336, 335, 303, 302, 302, 302, 301, 300, 299, 298, 297, 296, 295, 294, 293, 261, 
[DBG]  Path for agent 5 updated, resulting length: 30
[DBG]  Update the agent path 31 | Original local length: 2 | New local length: 2
[DBG]  agent 31 t=0 => decoded (sx,sy)=(0,1) => global_id=308
[DBG]  agent 31 t=1 => decoded (sx,sy)=(0,2) => global_id=309
[DBG]  Complete path of agent 31:
[DBG]    Original: 432 400 368 369 337 338 339 340 308 309 277 278 279 247 248 216 184 185 153 121 89 
[DBG]    New:     432 400 368 369 337 338 339 340 308 309 277 278 279 247 248 216 184 185 153 121 89 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 432 400 368 369 337 338 339 340 
[DBG]    Local path (in submap): 308 309 
[DBG]    Suffix (out of submap): 277 278 279 247 248 216 184 185 153 121 89 
[DBG]  Original agent path length 31 je: 21
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 1: 432, 400, 368, 369, 337, 338, 339, 340, 308, 309, 277, 278, 279, 247, 248, 216, 184, 185, 153, 121, 89, 
[DBG]  Path for agent 31 updated, resulting length: 21
[DBG]  Update the agent path 104 | Original local length: 5 | New local length: 5
[DBG]  agent 104 t=0 => decoded (sx,sy)=(3,2) => global_id=405
[DBG]  agent 104 t=1 => decoded (sx,sy)=(2,2) => global_id=373
[DBG]  agent 104 t=2 => decoded (sx,sy)=(1,2) => global_id=341
[DBG]  agent 104 t=3 => decoded (sx,sy)=(1,1) => global_id=340
[DBG]  agent 104 t=4 => decoded (sx,sy)=(0,1) => global_id=308
[DBG]  Complete path of agent 104:
[DBG]    Original: 566 534 533 501 469 437 405 405 405 373 341 309 308 276 
[DBG]    New:     566 534 533 501 469 437 405 405 405 373 341 340 308 276 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 566 534 533 501 469 437 405 405 
[DBG]    Local path (in submap): 405 373 341 340 308 
[DBG]    Suffix (out of submap): 276 
[DBG]  Original agent path length 104 je: 14
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 2: 566, 534, 533, 501, 469, 437, 405, 405, 405, 373, 341, 340, 308, 276, 
[DBG]  Path for agent 104 updated, resulting length: 14
[DBG]  Update the agent path 136 | Original local length: 4 | New local length: 4
[DBG]  agent 136 t=0 => decoded (sx,sy)=(2,2) => global_id=373
[DBG]  agent 136 t=1 => decoded (sx,sy)=(1,2) => global_id=341
[DBG]  agent 136 t=2 => decoded (sx,sy)=(0,2) => global_id=309
[DBG]  agent 136 t=3 => decoded (sx,sy)=(0,3) => global_id=310
[DBG]  Complete path of agent 136:
[DBG]    Original: 440 408 407 406 405 373 373 373 373 341 309 310 278 279 247 248 216 184 
[DBG]    New:     440 408 407 406 405 373 373 373 373 341 309 310 278 279 247 248 216 184 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 440 408 407 406 405 373 373 373 
[DBG]    Local path (in submap): 373 341 309 310 
[DBG]    Suffix (out of submap): 278 279 247 248 216 184 
[DBG]  Original agent path length 136 je: 18
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 3: 440, 408, 407, 406, 405, 373, 373, 373, 373, 341, 309, 310, 278, 279, 247, 248, 216, 184, 
[DBG]  Path for agent 136 updated, resulting length: 18
[DBG]  Paths successfully updated.
[DBG]  (LNS.cpp) New path for agent 5: 
[DBG]  281, 313, 345, 344, 343, 311, 310, 309, 341, 340, 339, 338, 337, 337, 336, 335, 303, 302, 302, 302, 301, 300, 299, 298, 297, 296, 295, 294, 293, 261, 
[DBG]  (LNS.cpp) New path for agent 31: 
[DBG]  432, 400, 368, 369, 337, 338, 339, 340, 308, 309, 277, 278, 279, 247, 248, 216, 184, 185, 153, 121, 89, 
[DBG]  (LNS.cpp) New path for agent 104: 
[DBG]  566, 534, 533, 501, 469, 437, 405, 405, 405, 373, 341, 340, 308, 276, 
[DBG]  (LNS.cpp) New path for agent 136: 
[DBG]  440, 408, 407, 406, 405, 373, 373, 373, 373, 341, 309, 310, 278, 279, 247, 248, 216, 184, 
[DBG]  component_weights = {0.26115, 0.217733, 0.227694, 0.293423}
[DBG]  opSuccess value: 1
[STAT] neighbor.sum_of_costs before recomputation: 79
[STAT] neighbor.old_sum_of_costs before recomputation: 79
[STAT] sum_of_costs before recomputation: 4522
[DBG]  Validate solution immediately after SAT success.
[WARNING] Problem after SAT: Edge conflict between agents 104 and 57 at edge (340,308) at timestep 12
[DBG]  Attempting immediate repair via init_lns because problem occurred after SAT (should be applied only for conflicts...).
[DBG]  Passing 150 agents to init_lns (skip=true).
[DBG]  path_table contents for selected agents (neighbor.agents):
[DBG]    Agent 5 => controlling path length=30
[DBG]    Agent 31 => controlling path length=21
[DBG]    Agent 104 => controlling path length=14
[DBG]    Agent 136 => controlling path length=18
[DBG]  hodnota skip_initial_solution=1
[DBG]  We skip initialSolution => call buildCollisionData()
[DBG]  buildCollisionData() called â€“ skip_initial_solution case.
[DBG]  Agents.size()=150, collision_graph.size()=150
[DBG]  agent 57 => updateCollidingPairs => foundCollision
[DBG]  agent 104 => updateCollidingPairs => foundCollision
[DBG]  Conflicting agent pairs:
[DBG]  agent 57 is in conflict with agent 104
[DBG]  buildCollisionData() => sum_of_costs=4522, num_of_colliding_pairs=1
[DBG]  buildCollisionData done => sum_of_costs=4522, num_of_colliding_pairs=1
[DBG]  sum_of_cost hodnota: 4522
[DBG]  After skip/init build => iteration_stats.back(): sum_of_costs=4522, collisions=1
[DEBUG] Using default neighbor generation strategy for conflicts: 0
	InitLNS(PP): runtime = 0.00550754, iterations = 2, colliding pairs = 0, initial colliding pairs = 1, solution cost = 4520, initial solution cost = 4522, failed iterations = 0
[DBG]  init_lns->sum_of_costs after init_lns->run: 4520
[DBG]  sum_of_costs after assignment from init_lns->run: 4520
[DBG]  Recomputing sum_of_cost by dividing neighbor.sum_of_costs and neighbor.old_sum_of_costs
[STAT] sum_of_costs after recomputation: 4520
[STAT] Iteration 26
[DBG]  Using SAT operator (destroy+repair SAT).
[DBG]  ====================
[DBG]  SAT destroy operator called.
[DBG]  SAT heuristic: 2
[DBG]  key_agent_id: 14
[DBG]  key_agent_id global path length: 39
[DBG]  Submap content (global positions):
[DBG]  809 810 811 812 813 
[DBG]  841 842 843 844 845 
[DBG]  873 874 875 876 877 
[DBG]  905 906 907 908 909 
[DBG]  937 938 939 940 941 
[DBG]  Map content with agents and obstacles:
[DBG]  . . A . . 
[DBG]  . X . . . 
[DBG]  . A A . . 
[DBG]  . . X . . 
[DBG]  . X . . . 
[DBG]  content of the map structure that we pass to the SAT solver:
[DBG]  1  1  1  1  1  
[DBG]  1  -1  1  1  1  
[DBG]  1  1  1  1  1  
[DBG]  1  1  -1  1  1  
[DBG]  1  -1  1  1  1  
[DBG]  Identifying agents in a submap for rescheduling (when key_agent is there at the time 32):
[DBG]  Agent 14 found intervals in the sub-map:
[DBG]   [30..36]
[DBG]  Agent 14 (interval in submap: [30..36]) contains time 32, added to replan.
[DBG]  Agent 35 found intervals in the sub-map:
[DBG]   [29..35]
[DBG]  Agent 35 (interval in submap: [29..35]) contains time 32, added to replan.
[DBG]  Agent 59 found intervals in the sub-map:
[DBG]   [32..36]
[DBG]  Agent 59 (interval in submap: [32..36]) contains time 32, added to replan.
[DBG]  Agent 103 found intervals in the sub-map:
[DBG]   [37..37]
[DBG]  Agent 103 is not in sub-map at time 32 (intervals: 
[DBG]  [37..37] )
[DBG]  Agent 106 found intervals in the sub-map:
[DBG]  
[DBG]  Agent 106 is not in sub-map at time 32 (intervals: 
[DBG]  )
[DBG]  Agent 14 | Start (global): 875 -> (local): (2, 2) at time 32 | Goal (global): 809 -> (local): (0, 0) at time 36
[DBG]  Agent 35 | Start (global): 874 -> (local): (2, 1) at time 32 | Goal (global): 809 -> (local): (0, 0) at time 35
[DBG]  Agent 59 | Start (global): 811 -> (local): (0, 2) at time 32 | Goal (global): 877 -> (local): (2, 4) at time 36
[DBG]  [REPAIR] SAT destroy operator called.
[DBG]  [REPAIR] SAT operator â€“ launching subproblem FOR OPTIMIZATION.
[DBG]  Creating local paths (sx, sy) in the submap for T_sync = 32
[DBG]    Agent 14 (global paths from T=32 to 36) has local path: (2,2) (2,1) (2,0) (1,0) (0,0) 
[DBG]    Agent 35 (global paths from T=32 to 35) has local path: (2,1) (2,0) (1,0) (0,0) 
[DBG]    Agent 59 (global paths from T=32 to 36) has local path: (0,2) (1,2) (2,2) (2,3) (2,4) 
[DBG]  Checking input data for SAT solver:
[DBG]    - Number of agents to replan: 3
[DBG]  Agent 14 has the original local path length: 5 => Start (2,2), Goal (0,0)
[DBG]  Agent 35 has the original local path length: 4 => Start (2,1), Goal (0,0)
[DBG]  Agent 59 has the original local path length: 5 => Start (0,2), Goal (2,4)
[DBG]  Start position: (2, 2), (2, 1), (0, 2), 
[DBG]  Goal position: (0, 0), (0, 0), (2, 4), 
[DBG]  SAT instance and solver created.
Currently solving
Instance name: scen
Map name: map
Encoding used: disappear_at_goal
SAT solver used: Kissat
Optimizing function: sum of costs
Number of agents: 3
Mks LB: 5
SoC LB: 14
Delta: 0
Remaining time: 300000 [ms]

Vertex conflict! Agents 0, 1, timestep 4, location 0
Found plan [agents = 3] [timesteps = 5]
Agent #0 : 11 10 9 5 0 
Agent #1 : 10 9 5 0 0 
Agent #2 : 2 6 11 12 13 

[STAT] Solver returned: 0
[DBG]  Agent (index) 14 | New local path (submap idx):
[DBG]  11 10 9 5 0 
[DBG]  Agent (index) 35 | New local path (submap idx):
[DBG]  10 9 5 0 
[DBG]  Agent (index) 59 | New local path (submap idx):
[DBG]  2 6 11 12 13 
[DBG]  Update the agent path 14 | Original local length: 5 | New local length: 5
[DBG]  agent 14 t=0 => decoded (sx,sy)=(2,2) => global_id=875
[DBG]  agent 14 t=1 => decoded (sx,sy)=(2,1) => global_id=874
[DBG]  agent 14 t=2 => decoded (sx,sy)=(2,0) => global_id=873
[DBG]  agent 14 t=3 => decoded (sx,sy)=(1,0) => global_id=841
[DBG]  agent 14 t=4 => decoded (sx,sy)=(0,0) => global_id=809
[DBG]  Complete path of agent 14:
[DBG]    Original: 859 860 861 893 861 860 859 858 826 826 858 857 889 888 920 919 918 950 949 948 916 884 883 882 881 849 848 847 846 878 877 876 875 874 873 841 809 808 807 
[DBG]    New:     859 860 861 893 861 860 859 858 826 826 858 857 889 888 920 919 918 950 949 948 916 884 883 882 881 849 848 847 846 878 877 876 875 874 873 841 809 808 807 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 859 860 861 893 861 860 859 858 826 826 858 857 889 888 920 919 918 950 949 948 916 884 883 882 881 849 848 847 846 878 877 876 
[DBG]    Local path (in submap): 875 874 873 841 809 
[DBG]    Suffix (out of submap): 808 807 
[DBG]  Original agent path length 14 je: 39
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 0: 859, 860, 861, 893, 861, 860, 859, 858, 826, 826, 858, 857, 889, 888, 920, 919, 918, 950, 949, 948, 916, 884, 883, 882, 881, 849, 848, 847, 846, 878, 877, 876, 875, 874, 873, 841, 809, 808, 807, 
[DBG]  Path for agent 14 updated, resulting length: 39
[DBG]  Update the agent path 35 | Original local length: 4 | New local length: 4
[DBG]  agent 35 t=0 => decoded (sx,sy)=(2,1) => global_id=874
[DBG]  agent 35 t=1 => decoded (sx,sy)=(2,0) => global_id=873
[DBG]  agent 35 t=2 => decoded (sx,sy)=(1,0) => global_id=841
[DBG]  agent 35 t=3 => decoded (sx,sy)=(0,0) => global_id=809
[DBG]  Complete path of agent 35:
[DBG]    Original: 735 767 766 798 830 829 861 860 859 858 857 856 824 823 822 821 820 788 787 786 818 850 882 881 880 848 847 846 878 877 876 875 874 873 841 809 808 807 806 774 742 741 740 739 738 737 736 
[DBG]    New:     735 767 766 798 830 829 861 860 859 858 857 856 824 823 822 821 820 788 787 786 818 850 882 881 880 848 847 846 878 877 876 875 874 873 841 809 808 807 806 774 742 741 740 739 738 737 736 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 735 767 766 798 830 829 861 860 859 858 857 856 824 823 822 821 820 788 787 786 818 850 882 881 880 848 847 846 878 877 876 875 
[DBG]    Local path (in submap): 874 873 841 809 
[DBG]    Suffix (out of submap): 808 807 806 774 742 741 740 739 738 737 736 
[DBG]  Original agent path length 35 je: 47
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 1: 735, 767, 766, 798, 830, 829, 861, 860, 859, 858, 857, 856, 824, 823, 822, 821, 820, 788, 787, 786, 818, 850, 882, 881, 880, 848, 847, 846, 878, 877, 876, 875, 874, 873, 841, 809, 808, 807, 806, 774, 742, 741, 740, 739, 738, 737, 736, 
[DBG]  Path for agent 35 updated, resulting length: 47
[DBG]  Update the agent path 59 | Original local length: 5 | New local length: 5
[DBG]  agent 59 t=0 => decoded (sx,sy)=(0,2) => global_id=811
[DBG]  agent 59 t=1 => decoded (sx,sy)=(1,2) => global_id=843
[DBG]  agent 59 t=2 => decoded (sx,sy)=(2,2) => global_id=875
[DBG]  agent 59 t=3 => decoded (sx,sy)=(2,3) => global_id=876
[DBG]  agent 59 t=4 => decoded (sx,sy)=(2,4) => global_id=877
[DBG]  Complete path of agent 59:
[DBG]    Original: 256 257 258 259 291 323 355 387 419 418 450 482 483 484 516 548 580 581 613 645 646 678 710 742 774 806 807 808 776 777 778 779 811 843 875 876 877 878 879 880 881 882 883 884 916 917 
[DBG]    New:     256 257 258 259 291 323 355 387 419 418 450 482 483 484 516 548 580 581 613 645 646 678 710 742 774 806 807 808 776 777 778 779 811 843 875 876 877 878 879 880 881 882 883 884 916 917 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 256 257 258 259 291 323 355 387 419 418 450 482 483 484 516 548 580 581 613 645 646 678 710 742 774 806 807 808 776 777 778 779 
[DBG]    Local path (in submap): 811 843 875 876 877 
[DBG]    Suffix (out of submap): 878 879 880 881 882 883 884 916 917 
[DBG]  Original agent path length 59 je: 46
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 2: 256, 257, 258, 259, 291, 323, 355, 387, 419, 418, 450, 482, 483, 484, 516, 548, 580, 581, 613, 645, 646, 678, 710, 742, 774, 806, 807, 808, 776, 777, 778, 779, 811, 843, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 916, 917, 
[DBG]  Path for agent 59 updated, resulting length: 46
[DBG]  Paths successfully updated.
[DBG]  (LNS.cpp) New path for agent 14: 
[DBG]  859, 860, 861, 893, 861, 860, 859, 858, 826, 826, 858, 857, 889, 888, 920, 919, 918, 950, 949, 948, 916, 884, 883, 882, 881, 849, 848, 847, 846, 878, 877, 876, 875, 874, 873, 841, 809, 808, 807, 
[DBG]  (LNS.cpp) New path for agent 35: 
[DBG]  735, 767, 766, 798, 830, 829, 861, 860, 859, 858, 857, 856, 824, 823, 822, 821, 820, 788, 787, 786, 818, 850, 882, 881, 880, 848, 847, 846, 878, 877, 876, 875, 874, 873, 841, 809, 808, 807, 806, 774, 742, 741, 740, 739, 738, 737, 736, 
[DBG]  (LNS.cpp) New path for agent 59: 
[DBG]  256, 257, 258, 259, 291, 323, 355, 387, 419, 418, 450, 482, 483, 484, 516, 548, 580, 581, 613, 645, 646, 678, 710, 742, 774, 806, 807, 808, 776, 777, 778, 779, 811, 843, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 916, 917, 
[DBG]  component_weights = {0.265067, 0.216579, 0.226487, 0.291868}
[DBG]  opSuccess value: 1
[STAT] neighbor.sum_of_costs before recomputation: 129
[STAT] neighbor.old_sum_of_costs before recomputation: 129
[STAT] sum_of_costs before recomputation: 4520
[DBG]  Validate solution immediately after SAT success.
[DBG]  No problems after SAT replan.
[DBG]  Recomputing sum_of_cost by dividing neighbor.sum_of_costs and neighbor.old_sum_of_costs
[STAT] sum_of_costs after recomputation: 4520
[STAT] Iteration 27
[DBG]  Using SAT operator (destroy+repair SAT).
[DBG]  ====================
[DBG]  SAT destroy operator called.
[DBG]  SAT heuristic: 2
[DBG]  key_agent_id: 49
[DBG]  key_agent_id global path length: 45
[DBG]  Submap content (global positions):
[DBG]  462 463 464 465 466 
[DBG]  494 495 496 497 498 
[DBG]  526 527 528 529 530 
[DBG]  558 559 560 561 562 
[DBG]  590 591 592 593 594 
[DBG]  Map content with agents and obstacles:
[DBG]  . . . . . 
[DBG]  . X . X . 
[DBG]  . X A . . 
[DBG]  . X . . X 
[DBG]  . . . . . 
[DBG]  content of the map structure that we pass to the SAT solver:
[DBG]  1  1  1  1  1  
[DBG]  1  -1  1  -1  1  
[DBG]  1  -1  1  1  1  
[DBG]  1  -1  1  1  -1  
[DBG]  1  1  1  1  1  
[DBG]  Identifying agents in a submap for rescheduling (when key_agent is there at the time 39):
[DBG]  Agent 4 found intervals in the sub-map:
[DBG]  
[DBG]  Agent 4 is not in sub-map at time 39 (intervals: 
[DBG]  )
[DBG]  Agent 49 found intervals in the sub-map:
[DBG]   [33..41]
[DBG]  Agent 49 (interval in submap: [33..41]) contains time 39, added to replan.
[DBG]  Agent 49 | Start (global): 528 -> (local): (2, 2) at time 39 | Goal (global): 464 -> (local): (0, 2) at time 41
[DBG]  [REPAIR] SAT destroy operator called.
[DBG]  [REPAIR] SAT operator â€“ launching subproblem FOR OPTIMIZATION.
[DBG]  Creating local paths (sx, sy) in the submap for T_sync = 39
[DBG]    Agent 49 (global paths from T=39 to 41) has local path: (2,2) (1,2) (0,2) 
[DBG]  Checking input data for SAT solver:
[DBG]    - Number of agents to replan: 1
[DBG]  Agent 49 has the original local path length: 3 => Start (2,2), Goal (0,2)
[DBG]  Start position: (2, 2), 
[DBG]  Goal position: (0, 2), 
[DBG]  SAT instance and solver created.
Currently solving
Instance name: scen
Map name: map
Encoding used: disappear_at_goal
SAT solver used: Kissat
Optimizing function: sum of costs
Number of agents: 1
Mks LB: 3
SoC LB: 3
Delta: 0
Remaining time: 300000 [ms]

Found plan [agents = 1] [timesteps = 3]
Agent #0 : 9 6 2 

[STAT] Solver returned: 0
[DBG]  Agent (index) 49 | New local path (submap idx):
[DBG]  9 6 2 
[DBG]  Update the agent path 49 | Original local length: 3 | New local length: 3
[DBG]  agent 49 t=0 => decoded (sx,sy)=(2,2) => global_id=528
[DBG]  agent 49 t=1 => decoded (sx,sy)=(1,2) => global_id=496
[DBG]  agent 49 t=2 => decoded (sx,sy)=(0,2) => global_id=464
[DBG]  Complete path of agent 49:
[DBG]    Original: 984 952 920 888 887 886 885 884 883 851 850 849 848 847 846 814 782 750 718 686 687 686 685 653 653 653 653 653 653 653 653 654 622 590 591 592 593 561 529 528 496 464 432 400 368 
[DBG]    New:     984 952 920 888 887 886 885 884 883 851 850 849 848 847 846 814 782 750 718 686 687 686 685 653 653 653 653 653 653 653 653 654 622 590 591 592 593 561 529 528 496 464 432 400 368 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 984 952 920 888 887 886 885 884 883 851 850 849 848 847 846 814 782 750 718 686 687 686 685 653 653 653 653 653 653 653 653 654 622 590 591 592 593 561 529 
[DBG]    Local path (in submap): 528 496 464 
[DBG]    Suffix (out of submap): 432 400 368 
[DBG]  Original agent path length 49 je: 45
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 0: 984, 952, 920, 888, 887, 886, 885, 884, 883, 851, 850, 849, 848, 847, 846, 814, 782, 750, 718, 686, 687, 686, 685, 653, 653, 653, 653, 653, 653, 653, 653, 654, 622, 590, 591, 592, 593, 561, 529, 528, 496, 464, 432, 400, 368, 
[DBG]  Path for agent 49 updated, resulting length: 45
[DBG]  Paths successfully updated.
[DBG]  (LNS.cpp) New path for agent 49: 
[DBG]  984, 952, 920, 888, 887, 886, 885, 884, 883, 851, 850, 849, 848, 847, 846, 814, 782, 750, 718, 686, 687, 686, 685, 653, 653, 653, 653, 653, 653, 653, 653, 654, 622, 590, 591, 592, 593, 561, 529, 528, 496, 464, 432, 400, 368, 
[DBG]  component_weights = {0.269021, 0.215413, 0.225268, 0.290297}
[DBG]  opSuccess value: 1
[STAT] neighbor.sum_of_costs before recomputation: 44
[STAT] neighbor.old_sum_of_costs before recomputation: 44
[STAT] sum_of_costs before recomputation: 4520
[DBG]  Validate solution immediately after SAT success.
[DBG]  No problems after SAT replan.
[DBG]  Recomputing sum_of_cost by dividing neighbor.sum_of_costs and neighbor.old_sum_of_costs
[STAT] sum_of_costs after recomputation: 4520
[STAT] Iteration 28
[DBG]  Using SAT operator (destroy+repair SAT).
[DBG]  ====================
[DBG]  SAT destroy operator called.
[DBG]  SAT heuristic: 2
[DBG]  key_agent_id: 106
[DBG]  key_agent_id global path length: 40
[DBG]  Submap content (global positions):
[DBG]  649 650 651 652 653 
[DBG]  681 682 683 684 685 
[DBG]  713 714 715 716 717 
[DBG]  745 746 747 748 749 
[DBG]  777 778 779 780 781 
[DBG]  Map content with agents and obstacles:
[DBG]  . . . X . 
[DBG]  X . . . . 
[DBG]  . . A X . 
[DBG]  . . . . X 
[DBG]  . . . . . 
[DBG]  content of the map structure that we pass to the SAT solver:
[DBG]  1  1  1  -1  1  
[DBG]  -1  1  1  1  1  
[DBG]  1  1  1  -1  1  
[DBG]  1  1  1  1  -1  
[DBG]  1  1  1  1  1  
[DBG]  Identifying agents in a submap for rescheduling (when key_agent is there at the time 39):
[DBG]  Agent 106 found intervals in the sub-map:
[DBG]   [23..25] [35..39]
[DBG]  Agent 106 (interval in submap: [35..39]) contains time 39, added to replan.
[DBG]  Agent 106 | Start (global): 715 -> (local): (2, 2) at time 39 | Goal (global): 715 -> (local): (2, 2) at time 39
[DBG]  [REPAIR] SAT destroy operator called.
[DBG]  [REPAIR] SAT operator â€“ launching subproblem FOR OPTIMIZATION.
[DBG]  Creating local paths (sx, sy) in the submap for T_sync = 39
[DBG]    Agent 106 (global paths from T=39 to 39) has local path: (2,2) 
[DBG]  Checking input data for SAT solver:
[DBG]    - Number of agents to replan: 1
[DBG]  Agent 106 has the original local path length: 1 => Start (2,2), Goal (2,2)
[DBG]  Start position: (2, 2), 
[DBG]  Goal position: (2, 2), 
[DBG]  SAT instance and solver created.
Currently solving
Instance name: scen
Map name: map
Encoding used: disappear_at_goal
SAT solver used: Kissat
Optimizing function: sum of costs
Number of agents: 1
Mks LB: 1
SoC LB: 1
Delta: 0
Remaining time: 300000 [ms]

Found plan [agents = 1] [timesteps = 1]
Agent #0 : 10 

[STAT] Solver returned: 0
[DBG]  Agent (index) 106 | New local path (submap idx):
[DBG]  10 
[DBG]  Update the agent path 106 | Original local length: 1 | New local length: 1
[DBG]  agent 106 t=0 => decoded (sx,sy)=(2,2) => global_id=715
[DBG]  Complete path of agent 106:
[DBG]    Original: 244 243 242 241 240 239 271 270 269 268 267 299 331 363 395 395 427 459 491 523 555 587 619 651 650 649 648 647 646 678 710 742 774 775 776 777 778 746 747 715 
[DBG]    New:     244 243 242 241 240 239 271 270 269 268 267 299 331 363 395 395 427 459 491 523 555 587 619 651 650 649 648 647 646 678 710 742 774 775 776 777 778 746 747 715 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 244 243 242 241 240 239 271 270 269 268 267 299 331 363 395 395 427 459 491 523 555 587 619 651 650 649 648 647 646 678 710 742 774 775 776 777 778 746 747 
[DBG]    Local path (in submap): 715 
[DBG]    Suffix (out of submap): 
[DBG]  Original agent path length 106 je: 40
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 0: 244, 243, 242, 241, 240, 239, 271, 270, 269, 268, 267, 299, 331, 363, 395, 395, 427, 459, 491, 523, 555, 587, 619, 651, 650, 649, 648, 647, 646, 678, 710, 742, 774, 775, 776, 777, 778, 746, 747, 715, 
[DBG]  Path for agent 106 updated, resulting length: 40
[DBG]  Paths successfully updated.
[DBG]  (LNS.cpp) New path for agent 106: 
[DBG]  244, 243, 242, 241, 240, 239, 271, 270, 269, 268, 267, 299, 331, 363, 395, 395, 427, 459, 491, 523, 555, 587, 619, 651, 650, 649, 648, 647, 646, 678, 710, 742, 774, 775, 776, 777, 778, 746, 747, 715, 
[DBG]  component_weights = {0.273012, 0.214237, 0.224038, 0.288712}
[DBG]  opSuccess value: 1
[STAT] neighbor.sum_of_costs before recomputation: 39
[STAT] neighbor.old_sum_of_costs before recomputation: 39
[STAT] sum_of_costs before recomputation: 4520
[DBG]  Validate solution immediately after SAT success.
[DBG]  No problems after SAT replan.
[DBG]  Recomputing sum_of_cost by dividing neighbor.sum_of_costs and neighbor.old_sum_of_costs
[STAT] sum_of_costs after recomputation: 4520
[STAT] Iteration 29
[DBG]  Using SAT operator (destroy+repair SAT).
[DBG]  ====================
[DBG]  SAT destroy operator called.
[DBG]  SAT heuristic: 2
[DBG]  key_agent_id: 142
[DBG]  key_agent_id global path length: 31
[DBG]  Submap content (global positions):
[DBG]  505 506 507 508 509 
[DBG]  537 538 539 540 541 
[DBG]  569 570 571 572 573 
[DBG]  601 602 603 604 605 
[DBG]  633 634 635 636 637 
[DBG]  Map content with agents and obstacles:
[DBG]  . . . A . 
[DBG]  X . . A . 
[DBG]  . . A . X 
[DBG]  . . . . X 
[DBG]  . X . A . 
[DBG]  content of the map structure that we pass to the SAT solver:
[DBG]  1  1  1  1  1  
[DBG]  -1  1  1  1  1  
[DBG]  1  1  1  1  -1  
[DBG]  1  1  1  1  -1  
[DBG]  1  -1  1  1  1  
[DBG]  Identifying agents in a submap for rescheduling (when key_agent is there at the time 26):
[DBG]  Agent 2 found intervals in the sub-map:
[DBG]   [18..25]
[DBG]  Agent 2 is not in sub-map at time 26 (intervals: 
[DBG]  [18..25] )
[DBG]  Agent 33 found intervals in the sub-map:
[DBG]   [23..27]
[DBG]  Agent 33 (interval in submap: [23..27]) contains time 26, added to replan.
[DBG]  Agent 86 found intervals in the sub-map:
[DBG]   [22..27]
[DBG]  Agent 86 (interval in submap: [22..27]) contains time 26, added to replan.
[DBG]  Agent 94 found intervals in the sub-map:
[DBG]   [21..22] [26..33]
[DBG]  Agent 94 (interval in submap: [26..33]) contains time 26, added to replan.
[DBG]  Agent 109 found intervals in the sub-map:
[DBG]   [25..25]
[DBG]  Agent 109 is not in sub-map at time 26 (intervals: 
[DBG]  [25..25] )
[DBG]  Agent 142 found intervals in the sub-map:
[DBG]   [22..30]
[DBG]  Agent 142 (interval in submap: [22..30]) contains time 26, added to replan.
[DBG]  Agent 33 | Start (global): 508 -> (local): (0, 3) at time 26 | Goal (global): 509 -> (local): (0, 4) at time 27
[DBG]  Agent 86 | Start (global): 540 -> (local): (1, 3) at time 26 | Goal (global): 541 -> (local): (1, 4) at time 27
[DBG]  Agent 94 | Start (global): 636 -> (local): (4, 3) at time 26 | Goal (global): 505 -> (local): (0, 0) at time 33
[DBG]  Agent 142 | Start (global): 571 -> (local): (2, 2) at time 26 | Goal (global): 507 -> (local): (0, 2) at time 30
[DBG]  [REPAIR] SAT destroy operator called.
[DBG]  [REPAIR] SAT operator â€“ launching subproblem FOR OPTIMIZATION.
[DBG]  Creating local paths (sx, sy) in the submap for T_sync = 26
[DBG]    Agent 33 (global paths from T=26 to 27) has local path: (0,3) (0,4) 
[DBG]    Agent 86 (global paths from T=26 to 27) has local path: (1,3) (1,4) 
[DBG]    Agent 94 (global paths from T=26 to 33) has local path: (4,3) (3,3) (3,2) (2,2) (2,1) (1,1) (0,1) (0,0) 
[DBG]    Agent 142 (global paths from T=26 to 30) has local path: (2,2) (1,2) (1,1) (0,1) (0,2) 
[DBG]  Checking input data for SAT solver:
[DBG]    - Number of agents to replan: 4
[DBG]  Agent 33 has the original local path length: 2 => Start (0,3), Goal (0,4)
[DBG]  Agent 86 has the original local path length: 2 => Start (1,3), Goal (1,4)
[DBG]  Agent 94 has the original local path length: 8 => Start (4,3), Goal (0,0)
[DBG]  Agent 142 has the original local path length: 5 => Start (2,2), Goal (0,2)
[DBG]  Start position: (0, 3), (1, 3), (4, 3), (2, 2), 
[DBG]  Goal position: (0, 4), (1, 4), (0, 0), (0, 2), 
[DBG]  SAT instance and solver created.
Currently solving
Instance name: scen
Map name: map
Encoding used: disappear_at_goal
SAT solver used: Kissat
Optimizing function: sum of costs
Number of agents: 4
Mks LB: 8
SoC LB: 15
Delta: 0
Remaining time: 300000 [ms]

Vertex conflict! Agents 0, 1, timestep 2, location 0
Swapping conflict! Agents 0, 1, timestep 2, edge (0,0)
Vertex conflict! Agents 0, 1, timestep 3, location 0
Swapping conflict! Agents 0, 1, timestep 3, edge (0,0)
Vertex conflict! Agents 0, 1, timestep 4, location 0
Swapping conflict! Agents 0, 1, timestep 4, edge (0,0)
Vertex conflict! Agents 0, 1, timestep 5, location 0
Swapping conflict! Agents 0, 1, timestep 5, edge (0,0)
Vertex conflict! Agents 0, 1, timestep 6, location 0
Swapping conflict! Agents 0, 1, timestep 6, edge (0,0)
Vertex conflict! Agents 0, 1, timestep 7, location 0
Vertex conflict! Agents 0, 2, timestep 7, location 0
Vertex conflict! Agents 0, 3, timestep 3, location 0
Swapping conflict! Agents 0, 3, timestep 3, edge (0,0)
Vertex conflict! Agents 0, 3, timestep 4, location 0
Swapping conflict! Agents 0, 3, timestep 4, edge (0,0)
Vertex conflict! Agents 0, 3, timestep 5, location 0
Swapping conflict! Agents 0, 3, timestep 5, edge (0,0)
Vertex conflict! Agents 0, 3, timestep 6, location 0
Swapping conflict! Agents 0, 3, timestep 6, edge (0,0)
Vertex conflict! Agents 0, 3, timestep 7, location 0
Vertex conflict! Agents 1, 2, timestep 7, location 0
Vertex conflict! Agents 1, 3, timestep 3, location 0
Swapping conflict! Agents 1, 3, timestep 3, edge (0,0)
Vertex conflict! Agents 1, 3, timestep 4, location 0
Swapping conflict! Agents 1, 3, timestep 4, edge (0,0)
Vertex conflict! Agents 1, 3, timestep 5, location 0
Swapping conflict! Agents 1, 3, timestep 5, edge (0,0)
Vertex conflict! Agents 1, 3, timestep 6, location 0
Swapping conflict! Agents 1, 3, timestep 6, edge (0,0)
Vertex conflict! Agents 1, 3, timestep 7, location 0
Vertex conflict! Agents 2, 3, timestep 7, location 0
Found plan [agents = 4] [timesteps = 8]
Agent #0 : 3 4 0 0 0 0 0 0 
Agent #1 : 7 8 0 0 0 0 0 0 
Agent #2 : 19 18 15 14 10 5 1 0 
Agent #3 : 11 6 2 0 0 0 0 0 

[STAT] Solver returned: 0
[DBG]  Agent (index) 33 | New local path (submap idx):
[DBG]  3 4 
[DBG]  Agent (index) 86 | New local path (submap idx):
[DBG]  7 8 
[DBG]  Agent (index) 94 | New local path (submap idx):
[DBG]  19 18 15 14 10 5 1 0 
[DBG]  Agent (index) 142 | New local path (submap idx):
[DBG]  11 6 2 
[DBG]  Update the agent path 33 | Original local length: 2 | New local length: 2
[DBG]  agent 33 t=0 => decoded (sx,sy)=(0,3) => global_id=508
[DBG]  agent 33 t=1 => decoded (sx,sy)=(0,4) => global_id=509
[DBG]  Complete path of agent 33:
[DBG]    Original: 360 361 362 363 395 427 428 429 430 431 432 433 465 466 498 499 467 468 469 501 502 503 504 505 506 507 508 509 510 
[DBG]    New:     360 361 362 363 395 427 428 429 430 431 432 433 465 466 498 499 467 468 469 501 502 503 504 505 506 507 508 509 510 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 360 361 362 363 395 427 428 429 430 431 432 433 465 466 498 499 467 468 469 501 502 503 504 505 506 507 
[DBG]    Local path (in submap): 508 509 
[DBG]    Suffix (out of submap): 510 
[DBG]  Original agent path length 33 je: 29
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 0: 360, 361, 362, 363, 395, 427, 428, 429, 430, 431, 432, 433, 465, 466, 498, 499, 467, 468, 469, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 
[DBG]  Path for agent 33 updated, resulting length: 29
[DBG]  Update the agent path 86 | Original local length: 2 | New local length: 2
[DBG]  agent 86 t=0 => decoded (sx,sy)=(1,3) => global_id=540
[DBG]  agent 86 t=1 => decoded (sx,sy)=(1,4) => global_id=541
[DBG]  Complete path of agent 86:
[DBG]    Original: 781 782 750 718 686 687 688 689 689 657 658 659 627 628 596 597 565 566 534 502 503 504 505 506 538 539 540 541 
[DBG]    New:     781 782 750 718 686 687 688 689 689 657 658 659 627 628 596 597 565 566 534 502 503 504 505 506 538 539 540 541 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 781 782 750 718 686 687 688 689 689 657 658 659 627 628 596 597 565 566 534 502 503 504 505 506 538 539 
[DBG]    Local path (in submap): 540 541 
[DBG]    Suffix (out of submap): 
[DBG]  Original agent path length 86 je: 28
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 1: 781, 782, 750, 718, 686, 687, 688, 689, 689, 657, 658, 659, 627, 628, 596, 597, 565, 566, 534, 502, 503, 504, 505, 506, 538, 539, 540, 541, 
[DBG]  Path for agent 86 updated, resulting length: 28
[DBG]  Update the agent path 94 | Original local length: 8 | New local length: 8
[DBG]  agent 94 t=0 => decoded (sx,sy)=(4,3) => global_id=636
[DBG]  agent 94 t=1 => decoded (sx,sy)=(4,2) => global_id=635
[DBG]  agent 94 t=2 => decoded (sx,sy)=(3,2) => global_id=603
[DBG]  agent 94 t=3 => decoded (sx,sy)=(3,1) => global_id=602
[DBG]  agent 94 t=4 => decoded (sx,sy)=(2,1) => global_id=570
[DBG]  agent 94 t=5 => decoded (sx,sy)=(1,1) => global_id=538
[DBG]  agent 94 t=6 => decoded (sx,sy)=(0,1) => global_id=506
[DBG]  agent 94 t=7 => decoded (sx,sy)=(0,0) => global_id=505
[DBG]  Complete path of agent 94:
[DBG]    Original: 701 702 703 703 703 703 703 703 703 703 703 702 670 638 639 639 639 639 639 639 638 637 636 668 668 668 636 604 603 571 570 538 506 505 473 472 440 408 376 344 345 313 281 249 248 248 216 
[DBG]    New:     701 702 703 703 703 703 703 703 703 703 703 702 670 638 639 639 639 639 639 639 638 637 636 668 668 668 636 635 603 602 570 538 506 505 473 472 440 408 376 344 345 313 281 249 248 248 216 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 701 702 703 703 703 703 703 703 703 703 703 702 670 638 639 639 639 639 639 639 638 637 636 668 668 668 
[DBG]    Local path (in submap): 636 635 603 602 570 538 506 505 
[DBG]    Suffix (out of submap): 473 472 440 408 376 344 345 313 281 249 248 248 216 
[DBG]  Original agent path length 94 je: 47
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 2: 701, 702, 703, 703, 703, 703, 703, 703, 703, 703, 703, 702, 670, 638, 639, 639, 639, 639, 639, 639, 638, 637, 636, 668, 668, 668, 636, 635, 603, 602, 570, 538, 506, 505, 473, 472, 440, 408, 376, 344, 345, 313, 281, 249, 248, 248, 216, 
[DBG]  Path for agent 94 updated, resulting length: 47
[DBG]  Update the agent path 142 | Original local length: 5 | New local length: 3
[DBG]  agent 142 t=0 => decoded (sx,sy)=(2,2) => global_id=571
[DBG]  agent 142 t=1 => decoded (sx,sy)=(1,2) => global_id=539
[DBG]  agent 142 t=2 => decoded (sx,sy)=(0,2) => global_id=507
[DBG]  Complete path of agent 142:
[DBG]    Original: 795 795 795 795 795 795 795 795 795 827 859 860 861 829 797 765 733 701 702 670 670 638 637 636 635 603 571 539 538 506 507 
[DBG]    New:     795 795 795 795 795 795 795 795 795 827 859 860 861 829 797 765 733 701 702 670 670 638 637 636 635 603 571 539 507 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 795 795 795 795 795 795 795 795 795 827 859 860 861 829 797 765 733 701 702 670 670 638 637 636 635 603 
[DBG]    Local path (in submap): 571 539 507 
[DBG]    Suffix (out of submap): 
[DBG]  Original agent path length 142 je: 31
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 3: 795, 795, 795, 795, 795, 795, 795, 795, 795, 827, 859, 860, 861, 829, 797, 765, 733, 701, 702, 670, 670, 638, 637, 636, 635, 603, 571, 539, 507, 
[DBG]  Path for agent 142 updated, resulting length: 29
[DBG]  Paths successfully updated.
[DBG]  (LNS.cpp) New path for agent 33: 
[DBG]  360, 361, 362, 363, 395, 427, 428, 429, 430, 431, 432, 433, 465, 466, 498, 499, 467, 468, 469, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 
[DBG]  (LNS.cpp) New path for agent 86: 
[DBG]  781, 782, 750, 718, 686, 687, 688, 689, 689, 657, 658, 659, 627, 628, 596, 597, 565, 566, 534, 502, 503, 504, 505, 506, 538, 539, 540, 541, 
[DBG]  (LNS.cpp) New path for agent 94: 
[DBG]  701, 702, 703, 703, 703, 703, 703, 703, 703, 703, 703, 702, 670, 638, 639, 639, 639, 639, 639, 639, 638, 637, 636, 668, 668, 668, 636, 635, 603, 602, 570, 538, 506, 505, 473, 472, 440, 408, 376, 344, 345, 313, 281, 249, 248, 248, 216, 
[DBG]  (LNS.cpp) New path for agent 142: 
[DBG]  795, 795, 795, 795, 795, 795, 795, 795, 795, 827, 859, 860, 861, 829, 797, 765, 733, 701, 702, 670, 670, 638, 637, 636, 635, 603, 571, 539, 507, 
[DBG]  component_weights = {0.271401, 0.212973, 0.222716, 0.29291}
[DBG]  opSuccess value: 1
[STAT] neighbor.sum_of_costs before recomputation: 129
[STAT] neighbor.old_sum_of_costs before recomputation: 131
[STAT] sum_of_costs before recomputation: 4520
[DBG]  Validate solution immediately after SAT success.
[WARNING] Problem after SAT: Vertex conflict between agents 142 and 54 at location 507 at timestep 28
[DBG]  Attempting immediate repair via init_lns because problem occurred after SAT (should be applied only for conflicts...).
[DBG]  Passing 150 agents to init_lns (skip=true).
[DBG]  path_table contents for selected agents (neighbor.agents):
[DBG]    Agent 33 => controlling path length=29
[DBG]    Agent 86 => controlling path length=28
[DBG]    Agent 94 => controlling path length=47
[DBG]    Agent 142 => controlling path length=29
[DBG]  hodnota skip_initial_solution=1
[DBG]  We skip initialSolution => call buildCollisionData()
[DBG]  buildCollisionData() called â€“ skip_initial_solution case.
[DBG]  Agents.size()=150, collision_graph.size()=150
[DBG]  agent 54 => updateCollidingPairs => foundCollision
[DBG]  agent 142 => updateCollidingPairs => foundCollision
[DBG]  Conflicting agent pairs:
[DBG]  agent 54 is in conflict with agent 142
[DBG]  buildCollisionData() => sum_of_costs=4518, num_of_colliding_pairs=1
[DBG]  buildCollisionData done => sum_of_costs=4518, num_of_colliding_pairs=1
[DBG]  sum_of_cost hodnota: 4518
[DBG]  After skip/init build => iteration_stats.back(): sum_of_costs=4518, collisions=1
[DEBUG] Using default neighbor generation strategy for conflicts: 1
	InitLNS(PP): runtime = 0.00356571, iterations = 2, colliding pairs = 0, initial colliding pairs = 1, solution cost = 4515, initial solution cost = 4518, failed iterations = 0
[DBG]  init_lns->sum_of_costs after init_lns->run: 4515
[DBG]  sum_of_costs after assignment from init_lns->run: 4515
[DBG]  Recomputing sum_of_cost by dividing neighbor.sum_of_costs and neighbor.old_sum_of_costs
[STAT] sum_of_costs after recomputation: 4515
[STAT] Iteration 30
[DBG]  Using SAT operator (destroy+repair SAT).
[DBG]  ====================
[DBG]  SAT destroy operator called.
[DBG]  SAT heuristic: 2
[DBG]  key_agent_id: 11
[DBG]  key_agent_id global path length: 34
[DBG]  Submap content (global positions):
[DBG]  888 889 890 891 892 
[DBG]  920 921 922 923 924 
[DBG]  952 953 954 955 956 
[DBG]  984 985 986 987 988 
[DBG]  1016 1017 1018 1019 1020 
[DBG]  Map content with agents and obstacles:
[DBG]  A . . A A 
[DBG]  . . . . A 
[DBG]  . . A . . 
[DBG]  . . . X . 
[DBG]  . . . . X 
[DBG]  content of the map structure that we pass to the SAT solver:
[DBG]  1  1  1  1  1  
[DBG]  1  1  1  1  1  
[DBG]  1  1  1  1  1  
[DBG]  1  1  1  -1  1  
[DBG]  1  1  1  1  -1  
[DBG]  Identifying agents in a submap for rescheduling (when key_agent is there at the time 5):
[DBG]  Agent 11 found intervals in the sub-map:
[DBG]   [3..8]
[DBG]  Agent 11 (interval in submap: [3..8]) contains time 5, added to replan.
[DBG]  Agent 24 found intervals in the sub-map:
[DBG]   [0..12] [21..23]
[DBG]  Agent 24 (interval in submap: [0..12]) contains time 5, added to replan.
[DBG]  Agent 30 found intervals in the sub-map:
[DBG]   [0..8]
[DBG]  Agent 30 (interval in submap: [0..8]) contains time 5, added to replan.
[DBG]  Agent 102 found intervals in the sub-map:
[DBG]   [3..26]
[DBG]  Agent 102 (interval in submap: [3..26]) contains time 5, added to replan.
[DBG]  Agent 133 found intervals in the sub-map:
[DBG]   [0..11]
[DBG]  Agent 133 (interval in submap: [0..11]) contains time 5, added to replan.
[DBG]  Agent 11 | Start (global): 954 -> (local): (2, 2) at time 5 | Goal (global): 920 -> (local): (1, 0) at time 8
[DBG]  Agent 24 | Start (global): 891 -> (local): (0, 3) at time 5 | Goal (global): 892 -> (local): (0, 4) at time 12
[DBG]  Agent 30 | Start (global): 888 -> (local): (0, 0) at time 5 | Goal (global): 888 -> (local): (0, 0) at time 8
[DBG]  Agent 102 | Start (global): 924 -> (local): (1, 4) at time 5 | Goal (global): 890 -> (local): (0, 2) at time 26
[DBG]  Agent 133 | Start (global): 892 -> (local): (0, 4) at time 5 | Goal (global): 892 -> (local): (0, 4) at time 11
[DBG]  [REPAIR] SAT destroy operator called.
[DBG]  [REPAIR] SAT operator â€“ launching subproblem FOR OPTIMIZATION.
[DBG]  Creating local paths (sx, sy) in the submap for T_sync = 5
[DBG]    Agent 11 (global paths from T=5 to 8) has local path: (2,2) (1,2) (1,1) (1,0) 
[DBG]    Agent 24 (global paths from T=5 to 12) has local path: (0,3) (0,3) (0,3) (0,3) (0,3) (0,3) (0,3) (0,4) 
[DBG]    Agent 30 (global paths from T=5 to 8) has local path: (0,0) (0,0) (0,0) (0,0) 
[DBG]    Agent 102 (global paths from T=5 to 26) has local path: (1,4) (1,3) (1,2) (1,2) (1,2) (1,2) (1,2) (1,2) (1,2) (1,2) (1,2) (1,2) (1,2) (1,2) (1,2) (1,2) (1,2) (1,2) (1,2) (1,2) (1,2) (0,2) 
[DBG]    Agent 133 (global paths from T=5 to 11) has local path: (0,4) (0,4) (0,4) (0,4) (0,4) (0,4) (0,4) 
[DBG]  Checking input data for SAT solver:
[DBG]    - Number of agents to replan: 5
[DBG]  Agent 11 has the original local path length: 4 => Start (2,2), Goal (1,0)
[DBG]  Agent 24 has the original local path length: 8 => Start (0,3), Goal (0,4)
[DBG]  Agent 30 has the original local path length: 4 => Start (0,0), Goal (0,0)
[DBG]  Agent 102 has the original local path length: 22 => Start (1,4), Goal (0,2)
[DBG]  Agent 133 has the original local path length: 7 => Start (0,4), Goal (0,4)
[DBG]  Start position: (2, 2), (0, 3), (0, 0), (1, 4), (0, 4), 
[DBG]  Goal position: (1, 0), (0, 4), (0, 0), (0, 2), (0, 4), 
[DBG]  SAT instance and solver created.
Currently solving
Instance name: scen
Map name: map
Encoding used: disappear_at_goal
SAT solver used: Kissat
Optimizing function: sum of costs
Number of agents: 5
Mks LB: 4
SoC LB: 12
Delta: 0
Remaining time: 300000 [ms]

Vertex conflict! Agents 1, 2, timestep 2, location 0
Swapping conflict! Agents 1, 2, timestep 2, edge (0,0)
Vertex conflict! Agents 1, 2, timestep 3, location 0
Vertex conflict! Agents 1, 4, timestep 2, location 0
Swapping conflict! Agents 1, 4, timestep 2, edge (0,0)
Vertex conflict! Agents 1, 4, timestep 3, location 0
Vertex conflict! Agents 2, 4, timestep 1, location 0
Swapping conflict! Agents 2, 4, timestep 1, edge (0,0)
Vertex conflict! Agents 2, 4, timestep 2, location 0
Swapping conflict! Agents 2, 4, timestep 2, edge (0,0)
Vertex conflict! Agents 2, 4, timestep 3, location 0
Found plan [agents = 5] [timesteps = 4]
Agent #0 : 12 11 10 5 
Agent #1 : 3 4 0 0 
Agent #2 : 0 0 0 0 
Agent #3 : 9 8 7 2 
Agent #4 : 4 0 0 0 

[STAT] Solver returned: 0
[DBG]  Agent (index) 11 | New local path (submap idx):
[DBG]  12 11 10 5 
[DBG]  Agent (index) 24 | New local path (submap idx):
[DBG]  3 4 
[DBG]  Agent (index) 30 | New local path (submap idx):
[DBG]  0 
[DBG]  Agent (index) 102 | New local path (submap idx):
[DBG]  9 8 7 2 
[DBG]  Agent (index) 133 | New local path (submap idx):
[DBG]  4 
[DBG]  Update the agent path 11 | Original local length: 4 | New local length: 4
[DBG]  agent 11 t=0 => decoded (sx,sy)=(2,2) => global_id=954
[DBG]  agent 11 t=1 => decoded (sx,sy)=(2,1) => global_id=953
[DBG]  agent 11 t=2 => decoded (sx,sy)=(2,0) => global_id=952
[DBG]  agent 11 t=3 => decoded (sx,sy)=(1,0) => global_id=920
[DBG]  Complete path of agent 11:
[DBG]    Original: 990 989 957 956 955 954 922 921 920 919 919 887 886 885 884 883 882 914 913 912 880 879 878 846 846 847 815 783 751 752 720 688 656 657 
[DBG]    New:     990 989 957 956 955 954 953 952 920 919 919 887 886 885 884 883 882 914 913 912 880 879 878 846 846 847 815 783 751 752 720 688 656 657 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 990 989 957 956 955 
[DBG]    Local path (in submap): 954 953 952 920 
[DBG]    Suffix (out of submap): 919 919 887 886 885 884 883 882 914 913 912 880 879 878 846 846 847 815 783 751 752 720 688 656 657 
[DBG]  Original agent path length 11 je: 34
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 0: 990, 989, 957, 956, 955, 954, 953, 952, 920, 919, 919, 887, 886, 885, 884, 883, 882, 914, 913, 912, 880, 879, 878, 846, 846, 847, 815, 783, 751, 752, 720, 688, 656, 657, 
[DBG]  Path for agent 11 updated, resulting length: 34
[DBG]  Update the agent path 24 | Original local length: 8 | New local length: 2
[DBG]  agent 24 t=0 => decoded (sx,sy)=(0,3) => global_id=891
[DBG]  agent 24 t=1 => decoded (sx,sy)=(0,4) => global_id=892
[DBG]  Complete path of agent 24:
[DBG]    Original: 891 891 891 891 891 891 891 891 891 891 891 891 892 860 860 860 860 860 860 860 860 892 891 890 858 857 856 856 856 856 824 792 793 761 729 697 696 664 632 633 
[DBG]    New:     891 891 891 891 891 891 892 860 860 860 860 860 860 860 860 892 891 890 858 857 856 856 856 856 824 792 793 761 729 697 696 664 632 633 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 891 891 891 891 891 
[DBG]    Local path (in submap): 891 892 860 860 860 860 860 860 
[DBG]    Suffix (out of submap): 860 860 892 891 890 858 857 856 856 856 856 824 792 793 761 729 697 696 664 632 633 
[DBG]  Original agent path length 24 je: 40
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 1: 891, 891, 891, 891, 891, 891, 892, 860, 860, 860, 860, 860, 860, 860, 860, 892, 891, 890, 858, 857, 856, 856, 856, 856, 824, 792, 793, 761, 729, 697, 696, 664, 632, 633, 
[DBG]  Path for agent 24 updated, resulting length: 34
[DBG]  Update the agent path 30 | Original local length: 4 | New local length: 1
[DBG]  agent 30 t=0 => decoded (sx,sy)=(0,0) => global_id=888
[DBG]  Complete path of agent 30:
[DBG]    Original: 922 921 921 920 888 888 888 888 888 856 855 823 823 822 821 820 788 756 724 692 691 659 627 628 596 597 565 566 534 502 503 
[DBG]    New:     922 921 921 920 888 888 856 855 823 823 822 821 820 788 756 724 692 691 659 627 628 596 597 565 566 534 502 503 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 922 921 921 920 888 
[DBG]    Local path (in submap): 888 856 855 823 
[DBG]    Suffix (out of submap): 823 822 821 820 788 756 724 692 691 659 627 628 596 597 565 566 534 502 503 
[DBG]  Original agent path length 30 je: 31
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 2: 922, 921, 921, 920, 888, 888, 856, 855, 823, 823, 822, 821, 820, 788, 756, 724, 692, 691, 659, 627, 628, 596, 597, 565, 566, 534, 502, 503, 
[DBG]  Path for agent 30 updated, resulting length: 28
[DBG]  Update the agent path 102 | Original local length: 22 | New local length: 4
[DBG]  agent 102 t=0 => decoded (sx,sy)=(1,4) => global_id=924
[DBG]  agent 102 t=1 => decoded (sx,sy)=(1,3) => global_id=923
[DBG]  agent 102 t=2 => decoded (sx,sy)=(1,2) => global_id=922
[DBG]  agent 102 t=3 => decoded (sx,sy)=(0,2) => global_id=890
[DBG]  Complete path of agent 102:
[DBG]    Original: 991 990 989 988 956 924 923 922 922 922 922 922 922 922 922 922 922 922 922 922 922 922 922 922 922 922 890 
[DBG]    New:     991 990 989 988 956 924 923 922 890 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 991 990 989 988 956 
[DBG]    Local path (in submap): 924 923 922 890 
[DBG]    Suffix (out of submap): 
[DBG]  Original agent path length 102 je: 27
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 3: 991, 990, 989, 988, 956, 924, 923, 922, 890, 
[DBG]  Path for agent 102 updated, resulting length: 9
[DBG]  Update the agent path 133 | Original local length: 7 | New local length: 1
[DBG]  agent 133 t=0 => decoded (sx,sy)=(0,4) => global_id=892
[DBG]  Complete path of agent 133:
[DBG]    Original: 956 924 924 924 924 892 892 892 892 892 892 892 860 861 862 830 798 766 765 733 701 702 703 671 671 671 671 671 671 639 638 637 636 635 603 602 570 538 506 474 473 472 472 440 408 376 
[DBG]    New:     956 924 924 924 924 892 860 861 862 830 798 766 765 733 701 702 703 671 671 671 671 671 671 639 638 637 636 635 603 602 570 538 506 474 473 472 472 440 408 376 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 956 924 924 924 924 
[DBG]    Local path (in submap): 892 860 861 862 830 798 766 
[DBG]    Suffix (out of submap): 765 733 701 702 703 671 671 671 671 671 671 639 638 637 636 635 603 602 570 538 506 474 473 472 472 440 408 376 
[DBG]  Original agent path length 133 je: 46
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 4: 956, 924, 924, 924, 924, 892, 860, 861, 862, 830, 798, 766, 765, 733, 701, 702, 703, 671, 671, 671, 671, 671, 671, 639, 638, 637, 636, 635, 603, 602, 570, 538, 506, 474, 473, 472, 472, 440, 408, 376, 
[DBG]  Path for agent 133 updated, resulting length: 40
[DBG]  Paths successfully updated.
[DBG]  (LNS.cpp) New path for agent 11: 
[DBG]  990, 989, 957, 956, 955, 954, 953, 952, 920, 919, 919, 887, 886, 885, 884, 883, 882, 914, 913, 912, 880, 879, 878, 846, 846, 847, 815, 783, 751, 752, 720, 688, 656, 657, 
[DBG]  (LNS.cpp) New path for agent 24: 
[DBG]  891, 891, 891, 891, 891, 891, 892, 860, 860, 860, 860, 860, 860, 860, 860, 892, 891, 890, 858, 857, 856, 856, 856, 856, 824, 792, 793, 761, 729, 697, 696, 664, 632, 633, 
[DBG]  (LNS.cpp) New path for agent 30: 
[DBG]  922, 921, 921, 920, 888, 888, 856, 855, 823, 823, 822, 821, 820, 788, 756, 724, 692, 691, 659, 627, 628, 596, 597, 565, 566, 534, 502, 503, 
[DBG]  (LNS.cpp) New path for agent 102: 
[DBG]  991, 990, 989, 988, 956, 924, 923, 922, 890, 
[DBG]  (LNS.cpp) New path for agent 133: 
[DBG]  956, 924, 924, 924, 924, 892, 860, 861, 862, 830, 798, 766, 765, 733, 701, 702, 703, 671, 671, 671, 671, 671, 671, 639, 638, 637, 636, 635, 603, 602, 570, 538, 506, 474, 473, 472, 472, 440, 408, 376, 
[DBG]  component_weights = {0.269635, 0.211587, 0.221267, 0.29751}
[DBG]  opSuccess value: 1
[STAT] neighbor.sum_of_costs before recomputation: 140
[STAT] neighbor.old_sum_of_costs before recomputation: 173
[STAT] sum_of_costs before recomputation: 4515
[DBG]  Validate solution immediately after SAT success.
[WARNING] Problem after SAT: Vertex conflict between agents 2 and 133 at location 637 at timestep 25
[DBG]  Attempting immediate repair via init_lns because problem occurred after SAT (should be applied only for conflicts...).
[DBG]  Passing 150 agents to init_lns (skip=true).
[DBG]  path_table contents for selected agents (neighbor.agents):
[DBG]    Agent 11 => controlling path length=34
[DBG]    Agent 24 => controlling path length=34
[DBG]    Agent 30 => controlling path length=28
[DBG]    Agent 102 => controlling path length=9
[DBG]    Agent 133 => controlling path length=40
[DBG]  hodnota skip_initial_solution=1
[DBG]  We skip initialSolution => call buildCollisionData()
[DBG]  buildCollisionData() called â€“ skip_initial_solution case.
[DBG]  Agents.size()=150, collision_graph.size()=150
[DBG]  agent 2 => updateCollidingPairs => foundCollision
[DBG]  agent 24 => updateCollidingPairs => foundCollision
[DBG]  agent 30 => updateCollidingPairs => foundCollision
[DBG]  agent 35 => updateCollidingPairs => foundCollision
[DBG]  agent 39 => updateCollidingPairs => foundCollision
[DBG]  agent 56 => updateCollidingPairs => foundCollision
[DBG]  agent 58 => updateCollidingPairs => foundCollision
[DBG]  agent 74 => updateCollidingPairs => foundCollision
[DBG]  agent 79 => updateCollidingPairs => foundCollision
[DBG]  agent 89 => updateCollidingPairs => foundCollision
[DBG]  agent 91 => updateCollidingPairs => foundCollision
[DBG]  agent 94 => updateCollidingPairs => foundCollision
[DBG]  agent 102 => updateCollidingPairs => foundCollision
[DBG]  agent 108 => updateCollidingPairs => foundCollision
[DBG]  agent 133 => updateCollidingPairs => foundCollision
[DBG]  agent 140 => updateCollidingPairs => foundCollision
[DBG]  agent 142 => updateCollidingPairs => foundCollision
[DBG]  Conflicting agent pairs:
[DBG]  agent 2 is in conflict with agent 133
[DBG]  agent 24 is in conflict with agent 35
[DBG]  agent 24 is in conflict with agent 91
[DBG]  agent 24 is in conflict with agent 102
[DBG]  agent 24 is in conflict with agent 142
[DBG]  agent 30 is in conflict with agent 56
[DBG]  agent 30 is in conflict with agent 74
[DBG]  agent 30 is in conflict with agent 79
[DBG]  agent 30 is in conflict with agent 89
[DBG]  agent 30 is in conflict with agent 108
[DBG]  agent 35 is in conflict with agent 133
[DBG]  agent 39 is in conflict with agent 102
[DBG]  agent 58 is in conflict with agent 133
[DBG]  agent 94 is in conflict with agent 133
[DBG]  agent 102 is in conflict with agent 108
[DBG]  agent 133 is in conflict with agent 140
[DBG]  buildCollisionData() => sum_of_costs=4482, num_of_colliding_pairs=16
[DBG]  buildCollisionData done => sum_of_costs=4482, num_of_colliding_pairs=16
[DBG]  sum_of_cost hodnota: 4482
[DBG]  After skip/init build => iteration_stats.back(): sum_of_costs=4482, collisions=16
[DEBUG] Using default neighbor generation strategy for conflicts: 0
[DEBUG] Using default neighbor generation strategy for conflicts: 1
[DEBUG] Using default neighbor generation strategy for conflicts: 0
	InitLNS(PP): runtime = 0.0132519, iterations = 4, colliding pairs = 0, initial colliding pairs = 16, solution cost = 4511, initial solution cost = 4482, failed iterations = 0
[DBG]  init_lns->sum_of_costs after init_lns->run: 4511
[DBG]  sum_of_costs after assignment from init_lns->run: 4511
[DBG]  Recomputing sum_of_cost by dividing neighbor.sum_of_costs and neighbor.old_sum_of_costs
[STAT] sum_of_costs after recomputation: 4511
[STAT] Iteration 31
[DBG]  Using SAT operator (destroy+repair SAT).
[DBG]  ====================
[DBG]  SAT destroy operator called.
[DBG]  SAT heuristic: 2
[DBG]  key_agent_id: 58
[DBG]  key_agent_id global path length: 48
[DBG]  Submap content (global positions):
[DBG]  409 410 411 412 413 
[DBG]  441 442 443 444 445 
[DBG]  473 474 475 476 477 
[DBG]  505 506 507 508 509 
[DBG]  537 538 539 540 541 
[DBG]  Map content with agents and obstacles:
[DBG]  . X . . A 
[DBG]  . X . . . 
[DBG]  . . A . . 
[DBG]  . . . . . 
[DBG]  X . . . . 
[DBG]  content of the map structure that we pass to the SAT solver:
[DBG]  1  -1  1  1  1  
[DBG]  1  -1  1  1  1  
[DBG]  1  1  1  1  1  
[DBG]  1  1  1  1  1  
[DBG]  -1  1  1  1  1  
[DBG]  Identifying agents in a submap for rescheduling (when key_agent is there at the time 37):
[DBG]  Agent 56 found intervals in the sub-map:
[DBG]   [31..37]
[DBG]  Agent 56 (interval in submap: [31..37]) contains time 37, added to replan.
[DBG]  Agent 58 found intervals in the sub-map:
[DBG]   [34..45]
[DBG]  Agent 58 (interval in submap: [34..45]) contains time 37, added to replan.
[DBG]  Agent 67 found intervals in the sub-map:
[DBG]   [42..42]
[DBG]  Agent 67 is not in sub-map at time 37 (intervals: 
[DBG]  [42..42] )
[DBG]  Agent 133 found intervals in the sub-map:
[DBG]  
[DBG]  Agent 133 is not in sub-map at time 37 (intervals: 
[DBG]  )
[DBG]  Agent 56 | Start (global): 413 -> (local): (0, 4) at time 37 | Goal (global): 413 -> (local): (0, 4) at time 37
[DBG]  Agent 58 | Start (global): 475 -> (local): (2, 2) at time 37 | Goal (global): 411 -> (local): (0, 2) at time 45
[DBG]  [REPAIR] SAT destroy operator called.
[DBG]  [REPAIR] SAT operator â€“ launching subproblem FOR OPTIMIZATION.
[DBG]  Creating local paths (sx, sy) in the submap for T_sync = 37
[DBG]    Agent 56 (global paths from T=37 to 37) has local path: (0,4) 
[DBG]    Agent 58 (global paths from T=37 to 45) has local path: (2,2) (1,2) (0,2) (0,2) (0,2) (0,2) (0,2) (0,2) (0,2) 
[DBG]  Checking input data for SAT solver:
[DBG]    - Number of agents to replan: 2
[DBG]  Agent 56 has the original local path length: 1 => Start (0,4), Goal (0,4)
[DBG]  Agent 58 has the original local path length: 9 => Start (2,2), Goal (0,2)
[DBG]  Start position: (0, 4), (2, 2), 
[DBG]  Goal position: (0, 4), (0, 2), 
[DBG]  SAT instance and solver created.
Currently solving
Instance name: scen
Map name: map
Encoding used: disappear_at_goal
SAT solver used: Kissat
Optimizing function: sum of costs
Number of agents: 2
Mks LB: 3
SoC LB: 4
Delta: 0
Remaining time: 300000 [ms]

Found plan [agents = 2] [timesteps = 3]
Agent #0 : 3 0 0 
Agent #1 : 10 5 1 

[STAT] Solver returned: 0
[DBG]  Agent (index) 56 | New local path (submap idx):
[DBG]  3 
[DBG]  Agent (index) 58 | New local path (submap idx):
[DBG]  10 5 1 
[DBG]  Update the agent path 56 | Original local length: 1 | New local length: 1
[DBG]  agent 56 t=0 => decoded (sx,sy)=(0,4) => global_id=413
[DBG]  Complete path of agent 56:
[DBG]    Original: 805 806 774 775 776 777 745 713 714 682 683 684 685 686 654 655 656 657 658 659 627 628 629 597 565 533 534 502 503 504 472 473 474 475 443 444 412 413 381 349 350 318 319 287 255 
[DBG]    New:     805 806 774 775 776 777 745 713 714 682 683 684 685 686 654 655 656 657 658 659 627 628 629 597 565 533 534 502 503 504 472 473 474 475 443 444 412 413 381 349 350 318 319 287 255 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 805 806 774 775 776 777 745 713 714 682 683 684 685 686 654 655 656 657 658 659 627 628 629 597 565 533 534 502 503 504 472 473 474 475 443 444 412 
[DBG]    Local path (in submap): 413 
[DBG]    Suffix (out of submap): 381 349 350 318 319 287 255 
[DBG]  Original agent path length 56 je: 45
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 0: 805, 806, 774, 775, 776, 777, 745, 713, 714, 682, 683, 684, 685, 686, 654, 655, 656, 657, 658, 659, 627, 628, 629, 597, 565, 533, 534, 502, 503, 504, 472, 473, 474, 475, 443, 444, 412, 413, 381, 349, 350, 318, 319, 287, 255, 
[DBG]  Path for agent 56 updated, resulting length: 45
[DBG]  Update the agent path 58 | Original local length: 9 | New local length: 3
[DBG]  agent 58 t=0 => decoded (sx,sy)=(2,2) => global_id=475
[DBG]  agent 58 t=1 => decoded (sx,sy)=(1,2) => global_id=443
[DBG]  agent 58 t=2 => decoded (sx,sy)=(0,2) => global_id=411
[DBG]  Complete path of agent 58:
[DBG]    Original: 826 826 826 826 826 826 826 826 826 826 826 826 826 858 858 858 858 858 858 857 856 824 792 793 761 729 697 696 664 632 600 601 602 570 538 506 474 475 443 411 411 411 411 411 411 411 379 347 
[DBG]    New:     826 826 826 826 826 826 826 826 826 826 826 826 826 858 858 858 858 858 858 857 856 824 792 793 761 729 697 696 664 632 600 601 602 570 538 506 474 475 443 411 379 347 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 826 826 826 826 826 826 826 826 826 826 826 826 826 858 858 858 858 858 858 857 856 824 792 793 761 729 697 696 664 632 600 601 602 570 538 506 474 
[DBG]    Local path (in submap): 475 443 411 379 347 
[DBG]    Suffix (out of submap): 
[DBG]  Original agent path length 58 je: 48
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 1: 826, 826, 826, 826, 826, 826, 826, 826, 826, 826, 826, 826, 826, 858, 858, 858, 858, 858, 858, 857, 856, 824, 792, 793, 761, 729, 697, 696, 664, 632, 600, 601, 602, 570, 538, 506, 474, 475, 443, 411, 379, 347, 
[DBG]  Path for agent 58 updated, resulting length: 42
[DBG]  Paths successfully updated.
[DBG]  (LNS.cpp) New path for agent 56: 
[DBG]  805, 806, 774, 775, 776, 777, 745, 713, 714, 682, 683, 684, 685, 686, 654, 655, 656, 657, 658, 659, 627, 628, 629, 597, 565, 533, 534, 502, 503, 504, 472, 473, 474, 475, 443, 444, 412, 413, 381, 349, 350, 318, 319, 287, 255, 
[DBG]  (LNS.cpp) New path for agent 58: 
[DBG]  826, 826, 826, 826, 826, 826, 826, 826, 826, 826, 826, 826, 826, 858, 858, 858, 858, 858, 858, 857, 856, 824, 792, 793, 761, 729, 697, 696, 664, 632, 600, 601, 602, 570, 538, 506, 474, 475, 443, 411, 379, 347, 
[DBG]  component_weights = {0.267955, 0.210269, 0.219888, 0.301889}
[DBG]  opSuccess value: 1
[STAT] neighbor.sum_of_costs before recomputation: 85
[STAT] neighbor.old_sum_of_costs before recomputation: 91
[STAT] sum_of_costs before recomputation: 4511
[DBG]  Validate solution immediately after SAT success.
[WARNING] Problem after SAT: Target conflict: agent 140 (len 49) traverses target of agent 58 (len 41) at location 347 at timestep 45
[DBG]  Attempting immediate repair via init_lns because problem occurred after SAT (should be applied only for conflicts...).
[DBG]  Passing 150 agents to init_lns (skip=true).
[DBG]  path_table contents for selected agents (neighbor.agents):
[DBG]    Agent 56 => controlling path length=45
[DBG]    Agent 58 => controlling path length=42
[DBG]  hodnota skip_initial_solution=1
[DBG]  We skip initialSolution => call buildCollisionData()
[DBG]  buildCollisionData() called â€“ skip_initial_solution case.
[DBG]  Agents.size()=150, collision_graph.size()=150
[DBG]  agent 58 => updateCollidingPairs => foundCollision
[DBG]  agent 140 => updateCollidingPairs => foundCollision
[DBG]  Conflicting agent pairs:
[DBG]  agent 58 is in conflict with agent 140
[DBG]  buildCollisionData() => sum_of_costs=4505, num_of_colliding_pairs=1
[DBG]  buildCollisionData done => sum_of_costs=4505, num_of_colliding_pairs=1
[DBG]  sum_of_cost hodnota: 4505
[DBG]  After skip/init build => iteration_stats.back(): sum_of_costs=4505, collisions=1
[DEBUG] Using default neighbor generation strategy for conflicts: 0
	InitLNS(PP): runtime = 0.00487721, iterations = 2, colliding pairs = 0, initial colliding pairs = 1, solution cost = 4511, initial solution cost = 4505, failed iterations = 0
[DBG]  init_lns->sum_of_costs after init_lns->run: 4511
[DBG]  sum_of_costs after assignment from init_lns->run: 4511
[DBG]  Recomputing sum_of_cost by dividing neighbor.sum_of_costs and neighbor.old_sum_of_costs
[STAT] sum_of_costs after recomputation: 4511
[STAT] Iteration 32
[DBG]  Using SAT operator (destroy+repair SAT).
[DBG]  ====================
[DBG]  SAT destroy operator called.
[DBG]  SAT heuristic: 2
[DBG]  key_agent_id: 68
[DBG]  key_agent_id global path length: 15
[DBG]  Submap content (global positions):
[DBG]  875 876 877 878 879 
[DBG]  907 908 909 910 911 
[DBG]  939 940 941 942 943 
[DBG]  971 972 973 974 975 
[DBG]  1003 1004 1005 1006 1007 
[DBG]  Map content with agents and obstacles:
[DBG]  . A A . A 
[DBG]  X . . . X 
[DBG]  . . A . X 
[DBG]  X X . . . 
[DBG]  . . . A X 
[DBG]  content of the map structure that we pass to the SAT solver:
[DBG]  1  1  1  1  1  
[DBG]  -1  1  1  1  -1  
[DBG]  1  1  1  1  -1  
[DBG]  -1  -1  1  1  1  
[DBG]  1  1  1  1  -1  
[DBG]  Identifying agents in a submap for rescheduling (when key_agent is there at the time 11):
[DBG]  Agent 6 found intervals in the sub-map:
[DBG]   [11..15]
[DBG]  Agent 6 (interval in submap: [11..15]) contains time 11, added to replan.
[DBG]  Agent 37 found intervals in the sub-map:
[DBG]  
[DBG]  Agent 37 is not in sub-map at time 11 (intervals: 
[DBG]  )
[DBG]  Agent 39 found intervals in the sub-map:
[DBG]   [11..14]
[DBG]  Agent 39 (interval in submap: [11..14]) contains time 11, added to replan.
[DBG]  Agent 41 found intervals in the sub-map:
[DBG]   [2..11]
[DBG]  Agent 41 (interval in submap: [2..11]) contains time 11, added to replan.
[DBG]  Agent 68 found intervals in the sub-map:
[DBG]   [7..14]
[DBG]  Agent 68 (interval in submap: [7..14]) contains time 11, added to replan.
[DBG]  Agent 111 found intervals in the sub-map:
[DBG]   [8..13]
[DBG]  Agent 111 (interval in submap: [8..13]) contains time 11, added to replan.
[DBG]  Agent 6 | Start (global): 879 -> (local): (0, 4) at time 11 | Goal (global): 908 -> (local): (1, 1) at time 15
[DBG]  Agent 39 | Start (global): 877 -> (local): (0, 2) at time 11 | Goal (global): 879 -> (local): (0, 4) at time 14
[DBG]  Agent 41 | Start (global): 876 -> (local): (0, 1) at time 11 | Goal (global): 876 -> (local): (0, 1) at time 11
[DBG]  Agent 68 | Start (global): 941 -> (local): (2, 2) at time 11 | Goal (global): 910 -> (local): (1, 3) at time 14
[DBG]  Agent 111 | Start (global): 1006 -> (local): (4, 3) at time 11 | Goal (global): 975 -> (local): (3, 4) at time 13
[DBG]  [REPAIR] SAT destroy operator called.
[DBG]  [REPAIR] SAT operator â€“ launching subproblem FOR OPTIMIZATION.
[DBG]  Creating local paths (sx, sy) in the submap for T_sync = 11
[DBG]    Agent 6 (global paths from T=11 to 15) has local path: (0,4) (0,3) (1,3) (1,2) (1,1) 
[DBG]    Agent 39 (global paths from T=11 to 14) has local path: (0,2) (0,2) (0,3) (0,4) 
[DBG]    Agent 41 (global paths from T=11 to 11) has local path: (0,1) 
[DBG]    Agent 68 (global paths from T=11 to 14) has local path: (2,2) (2,3) (2,3) (1,3) 
[DBG]    Agent 111 (global paths from T=11 to 13) has local path: (4,3) (3,3) (3,4) 
[DBG]  Checking input data for SAT solver:
[DBG]    - Number of agents to replan: 5
[DBG]  Agent 6 has the original local path length: 5 => Start (0,4), Goal (1,1)
[DBG]  Agent 39 has the original local path length: 4 => Start (0,2), Goal (0,4)
[DBG]  Agent 41 has the original local path length: 1 => Start (0,1), Goal (0,1)
[DBG]  Agent 68 has the original local path length: 4 => Start (2,2), Goal (1,3)
[DBG]  Agent 111 has the original local path length: 3 => Start (4,3), Goal (3,4)
[DBG]  Start position: (0, 4), (0, 2), (0, 1), (2, 2), (4, 3), 
[DBG]  Goal position: (1, 1), (0, 4), (0, 1), (1, 3), (3, 4), 
[DBG]  SAT instance and solver created.
Currently solving
Instance name: scen
Map name: map
Encoding used: disappear_at_goal
SAT solver used: Kissat
Optimizing function: sum of costs
Number of agents: 5
Mks LB: 5
SoC LB: 15
Delta: 0
Remaining time: 300000 [ms]

[STAT] Solver returned: -1
[DBG]  SAT solver failed.
[STAT] SAT solver failed to find a valid solution.
[DBG]  ====================
[DBG]  SAT destroy operator called.
[DBG]  SAT heuristic: 2
[DBG]  key_agent_id: 68
[DBG]  key_agent_id global path length: 15
[DBG]  Submap content (global positions):
[DBG]  936 937 938 939 940 
[DBG]  968 969 970 971 972 
[DBG]  1000 1001 1002 1003 1004 
[DBG]  -1 -1 -1 -1 -1 
[DBG]  -1 -1 -1 -1 -1 
[DBG]  Map content with agents and obstacles:
[DBG]  . . X . . 
[DBG]  . X . X X 
[DBG]  . A A . . 
[DBG]  X X X X X 
[DBG]  X X X X X 
[DBG]  content of the map structure that we pass to the SAT solver:
[DBG]  1  1  -1  1  1  
[DBG]  1  -1  1  -1  -1  
[DBG]  1  1  1  1  1  
[DBG]  1  1  1  1  1  
[DBG]  1  1  1  1  1  
[DBG]  Identifying agents in a submap for rescheduling (when key_agent is there at the time 6):
[DBG]  Agent 68 found intervals in the sub-map:
[DBG]   [0..1] [4..8]
[DBG]  Agent 68 (interval in submap: [4..8]) contains time 6, added to replan.
[DBG]  Agent 111 found intervals in the sub-map:
[DBG]   [5..9]
[DBG]  Agent 111 (interval in submap: [5..9]) contains time 6, added to replan.
[DBG]  Agent 68 | Start (global): 1002 -> (local): (2, 2) at time 6 | Goal (global): 1004 -> (local): (2, 4) at time 8
[DBG]  Agent 111 | Start (global): 1001 -> (local): (2, 1) at time 6 | Goal (global): 1004 -> (local): (2, 4) at time 9
[DBG]  [REPAIR] SAT destroy operator called.
[DBG]  [REPAIR] SAT operator â€“ launching subproblem FOR OPTIMIZATION.
[DBG]  Creating local paths (sx, sy) in the submap for T_sync = 6
[DBG]    Agent 68 (global paths from T=6 to 8) has local path: (2,2) (2,3) (2,4) 
[DBG]    Agent 111 (global paths from T=6 to 9) has local path: (2,1) (2,2) (2,3) (2,4) 
[DBG]  Checking input data for SAT solver:
[DBG]    - Number of agents to replan: 2
[DBG]  Agent 68 has the original local path length: 3 => Start (2,2), Goal (2,4)
[DBG]  Agent 111 has the original local path length: 4 => Start (2,1), Goal (2,4)
[DBG]  Start position: (2, 2), (2, 1), 
[DBG]  Goal position: (2, 4), (2, 4), 
[DBG]  SAT instance and solver created.
Currently solving
Instance name: scen
Map name: map
Encoding used: disappear_at_goal
SAT solver used: Kissat
Optimizing function: sum of costs
Number of agents: 2
Mks LB: 4
SoC LB: 7
Delta: 0
Remaining time: 300000 [ms]

Found plan [agents = 2] [timesteps = 4]
Agent #0 : 8 9 10 0 
Agent #1 : 7 8 9 10 

[STAT] Solver returned: 0
[DBG]  Agent (index) 68 | New local path (submap idx):
[DBG]  8 9 10 
[DBG]  Agent (index) 111 | New local path (submap idx):
[DBG]  7 8 9 10 
[DBG]  Update the agent path 68 | Original local length: 3 | New local length: 3
[DBG]  agent 68 t=0 => decoded (sx,sy)=(2,2) => global_id=1002
[DBG]  agent 68 t=1 => decoded (sx,sy)=(2,3) => global_id=1003
[DBG]  agent 68 t=2 => decoded (sx,sy)=(2,4) => global_id=1004
[DBG]  Complete path of agent 68:
[DBG]    Original: 968 1000 999 999 1000 1001 1002 1003 1004 1005 973 941 942 942 910 
[DBG]    New:     968 1000 999 999 1000 1001 1002 1003 1004 1005 973 941 942 942 910 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 968 1000 999 999 1000 1001 
[DBG]    Local path (in submap): 1002 1003 1004 
[DBG]    Suffix (out of submap): 1005 973 941 942 942 910 
[DBG]  Original agent path length 68 je: 15
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 0: 968, 1000, 999, 999, 1000, 1001, 1002, 1003, 1004, 1005, 973, 941, 942, 942, 910, 
[DBG]  Path for agent 68 updated, resulting length: 15
[DBG]  Update the agent path 111 | Original local length: 4 | New local length: 4
[DBG]  agent 111 t=0 => decoded (sx,sy)=(2,1) => global_id=1001
[DBG]  agent 111 t=1 => decoded (sx,sy)=(2,2) => global_id=1002
[DBG]  agent 111 t=2 => decoded (sx,sy)=(2,3) => global_id=1003
[DBG]  agent 111 t=3 => decoded (sx,sy)=(2,4) => global_id=1004
[DBG]  Complete path of agent 111:
[DBG]    Original: 964 996 997 998 999 1000 1001 1002 1003 1004 1005 1006 974 975 976 944 912 913 881 882 883 851 819 820 821 822 823 824 792 793 761 729 697 696 664 632 600 601 569 570 538 539 540 
[DBG]    New:     964 996 997 998 999 1000 1001 1002 1003 1004 1005 1006 974 975 976 944 912 913 881 882 883 851 819 820 821 822 823 824 792 793 761 729 697 696 664 632 600 601 569 570 538 539 540 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 964 996 997 998 999 1000 
[DBG]    Local path (in submap): 1001 1002 1003 1004 
[DBG]    Suffix (out of submap): 1005 1006 974 975 976 944 912 913 881 882 883 851 819 820 821 822 823 824 792 793 761 729 697 696 664 632 600 601 569 570 538 539 540 
[DBG]  Original agent path length 111 je: 43
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 1: 964, 996, 997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 974, 975, 976, 944, 912, 913, 881, 882, 883, 851, 819, 820, 821, 822, 823, 824, 792, 793, 761, 729, 697, 696, 664, 632, 600, 601, 569, 570, 538, 539, 540, 
[DBG]  Path for agent 111 updated, resulting length: 43
[DBG]  Paths successfully updated.
[DBG]  (LNS.cpp) New path for agent 68: 
[DBG]  968, 1000, 999, 999, 1000, 1001, 1002, 1003, 1004, 1005, 973, 941, 942, 942, 910, 
[DBG]  (LNS.cpp) New path for agent 111: 
[DBG]  964, 996, 997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 974, 975, 976, 944, 912, 913, 881, 882, 883, 851, 819, 820, 821, 822, 823, 824, 792, 793, 761, 729, 697, 696, 664, 632, 600, 601, 569, 570, 538, 539, 540, 
[DBG]  component_weights = {0.271936, 0.209125, 0.218692, 0.300247}
[DBG]  opSuccess value: 1
[STAT] neighbor.sum_of_costs before recomputation: 56
[STAT] neighbor.old_sum_of_costs before recomputation: 56
[STAT] sum_of_costs before recomputation: 4511
[DBG]  Validate solution immediately after SAT success.
[DBG]  No problems after SAT replan.
[DBG]  Recomputing sum_of_cost by dividing neighbor.sum_of_costs and neighbor.old_sum_of_costs
[STAT] sum_of_costs after recomputation: 4511
[STAT] Iteration 33
[DBG]  Using SAT operator (destroy+repair SAT).
[DBG]  ====================
[DBG]  SAT destroy operator called.
[DBG]  SAT heuristic: 2
[DBG]  key_agent_id: 53
[DBG]  key_agent_id global path length: 37
[DBG]  Submap content (global positions):
[DBG]  591 592 593 594 595 
[DBG]  623 624 625 626 627 
[DBG]  655 656 657 658 659 
[DBG]  687 688 689 690 691 
[DBG]  719 720 721 722 723 
[DBG]  Map content with agents and obstacles:
[DBG]  A . . . X 
[DBG]  A X A X . 
[DBG]  . . A . A 
[DBG]  A . A X . 
[DBG]  . . . . X 
[DBG]  content of the map structure that we pass to the SAT solver:
[DBG]  1  1  1  1  -1  
[DBG]  1  -1  1  -1  1  
[DBG]  1  1  1  1  1  
[DBG]  1  1  1  -1  1  
[DBG]  1  1  1  1  -1  
[DBG]  Identifying agents in a submap for rescheduling (when key_agent is there at the time 27):
[DBG]  Agent 3 found intervals in the sub-map:
[DBG]   [20..28]
[DBG]  Agent 3 (interval in submap: [20..28]) contains time 27, added to replan.
[DBG]  Agent 11 found intervals in the sub-map:
[DBG]   [30..33]
[DBG]  Agent 11 is not in sub-map at time 27 (intervals: 
[DBG]  [30..33] )
[DBG]  Agent 42 found intervals in the sub-map:
[DBG]   [27..35]
[DBG]  Agent 42 (interval in submap: [27..35]) contains time 27, added to replan.
[DBG]  Agent 53 found intervals in the sub-map:
[DBG]   [24..30]
[DBG]  Agent 53 (interval in submap: [24..30]) contains time 27, added to replan.
[DBG]  Agent 57 found intervals in the sub-map:
[DBG]   [26..32]
[DBG]  Agent 57 (interval in submap: [26..32]) contains time 27, added to replan.
[DBG]  Agent 67 found intervals in the sub-map:
[DBG]   [21..28]
[DBG]  Agent 67 (interval in submap: [21..28]) contains time 27, added to replan.
[DBG]  Agent 83 found intervals in the sub-map:
[DBG]   [26..30]
[DBG]  Agent 83 (interval in submap: [26..30]) contains time 27, added to replan.
[DBG]  Agent 148 found intervals in the sub-map:
[DBG]   [27..33]
[DBG]  Agent 148 (interval in submap: [27..33]) contains time 27, added to replan.
[DBG]  Agent 3 | Start (global): 689 -> (local): (3, 2) at time 27 | Goal (global): 721 -> (local): (4, 2) at time 28
[DBG]  Agent 42 | Start (global): 591 -> (local): (0, 0) at time 27 | Goal (global): 691 -> (local): (3, 4) at time 35
[DBG]  Agent 53 | Start (global): 657 -> (local): (2, 2) at time 27 | Goal (global): 691 -> (local): (3, 4) at time 30
[DBG]  Agent 57 | Start (global): 625 -> (local): (1, 2) at time 27 | Goal (global): 719 -> (local): (4, 0) at time 32
[DBG]  Agent 67 | Start (global): 659 -> (local): (2, 4) at time 27 | Goal (global): 627 -> (local): (1, 4) at time 28
[DBG]  Agent 83 | Start (global): 623 -> (local): (1, 0) at time 27 | Goal (global): 719 -> (local): (4, 0) at time 30
[DBG]  Agent 148 | Start (global): 687 -> (local): (3, 0) at time 27 | Goal (global): 659 -> (local): (2, 4) at time 33
[DBG]  [REPAIR] SAT destroy operator called.
[DBG]  [REPAIR] SAT operator â€“ launching subproblem FOR OPTIMIZATION.
[DBG]  Creating local paths (sx, sy) in the submap for T_sync = 27
[DBG]    Agent 3 (global paths from T=27 to 28) has local path: (3,2) (4,2) 
[DBG]    Agent 42 (global paths from T=27 to 35) has local path: (0,0) (0,1) (0,2) (1,2) (2,2) (2,3) (2,3) (2,4) (3,4) 
[DBG]    Agent 53 (global paths from T=27 to 30) has local path: (2,2) (2,3) (2,4) (3,4) 
[DBG]    Agent 57 (global paths from T=27 to 32) has local path: (1,2) (2,2) (2,1) (3,1) (3,0) (4,0) 
[DBG]    Agent 67 (global paths from T=27 to 28) has local path: (2,4) (1,4) 
[DBG]    Agent 83 (global paths from T=27 to 30) has local path: (1,0) (2,0) (3,0) (4,0) 
[DBG]    Agent 148 (global paths from T=27 to 33) has local path: (3,0) (3,1) (3,2) (2,2) (2,3) (2,4) (2,4) 
[DBG]  Checking input data for SAT solver:
[DBG]    - Number of agents to replan: 7
[DBG]  Agent 3 has the original local path length: 2 => Start (3,2), Goal (4,2)
[DBG]  Agent 42 has the original local path length: 9 => Start (0,0), Goal (3,4)
[DBG]  Agent 53 has the original local path length: 4 => Start (2,2), Goal (3,4)
[DBG]  Agent 57 has the original local path length: 6 => Start (1,2), Goal (4,0)
[DBG]  Agent 67 has the original local path length: 2 => Start (2,4), Goal (1,4)
[DBG]  Agent 83 has the original local path length: 4 => Start (1,0), Goal (4,0)
[DBG]  Agent 148 has the original local path length: 7 => Start (3,0), Goal (2,4)
[DBG]  Start position: (3, 2), (0, 0), (2, 2), (1, 2), (2, 4), (1, 0), (3, 0), 
[DBG]  Goal position: (4, 2), (3, 4), (3, 4), (4, 0), (1, 4), (4, 0), (2, 4), 
[DBG]  SAT instance and solver created.
Currently solving
Instance name: scen
Map name: map
Encoding used: disappear_at_goal
SAT solver used: Kissat
Optimizing function: sum of costs
Number of agents: 7
Mks LB: 8
SoC LB: 32
Delta: 0
Remaining time: 300000 [ms]

Vertex conflict! Agents 0, 2, timestep 4, location 0
Swapping conflict! Agents 0, 2, timestep 4, edge (0,0)
Vertex conflict! Agents 0, 2, timestep 5, location 0
Swapping conflict! Agents 0, 2, timestep 5, edge (0,0)
Vertex conflict! Agents 0, 2, timestep 6, location 0
Swapping conflict! Agents 0, 2, timestep 6, edge (0,0)
Vertex conflict! Agents 0, 2, timestep 7, location 0
Vertex conflict! Agents 0, 3, timestep 6, location 0
Swapping conflict! Agents 0, 3, timestep 6, edge (0,0)
Vertex conflict! Agents 0, 3, timestep 7, location 0
Vertex conflict! Agents 0, 4, timestep 2, location 0
Swapping conflict! Agents 0, 4, timestep 2, edge (0,0)
Vertex conflict! Agents 0, 4, timestep 3, location 0
Swapping conflict! Agents 0, 4, timestep 3, edge (0,0)
Vertex conflict! Agents 0, 4, timestep 4, location 0
Swapping conflict! Agents 0, 4, timestep 4, edge (0,0)
Vertex conflict! Agents 0, 4, timestep 5, location 0
Swapping conflict! Agents 0, 4, timestep 5, edge (0,0)
Vertex conflict! Agents 0, 4, timestep 6, location 0
Swapping conflict! Agents 0, 4, timestep 6, edge (0,0)
Vertex conflict! Agents 0, 4, timestep 7, location 0
Vertex conflict! Agents 0, 5, timestep 4, location 0
Swapping conflict! Agents 0, 5, timestep 4, edge (0,0)
Vertex conflict! Agents 0, 5, timestep 5, location 0
Swapping conflict! Agents 0, 5, timestep 5, edge (0,0)
Vertex conflict! Agents 0, 5, timestep 6, location 0
Swapping conflict! Agents 0, 5, timestep 6, edge (0,0)
Vertex conflict! Agents 0, 5, timestep 7, location 0
Vertex conflict! Agents 0, 6, timestep 6, location 0
Swapping conflict! Agents 0, 6, timestep 6, edge (0,0)
Vertex conflict! Agents 0, 6, timestep 7, location 0
Vertex conflict! Agents 2, 3, timestep 6, location 0
Swapping conflict! Agents 2, 3, timestep 6, edge (0,0)
Vertex conflict! Agents 2, 3, timestep 7, location 0
Vertex conflict! Agents 2, 4, timestep 4, location 0
Swapping conflict! Agents 2, 4, timestep 4, edge (0,0)
Vertex conflict! Agents 2, 4, timestep 5, location 0
Swapping conflict! Agents 2, 4, timestep 5, edge (0,0)
Vertex conflict! Agents 2, 4, timestep 6, location 0
Swapping conflict! Agents 2, 4, timestep 6, edge (0,0)
Vertex conflict! Agents 2, 4, timestep 7, location 0
Vertex conflict! Agents 2, 5, timestep 4, location 0
Swapping conflict! Agents 2, 5, timestep 4, edge (0,0)
Vertex conflict! Agents 2, 5, timestep 5, location 0
Swapping conflict! Agents 2, 5, timestep 5, edge (0,0)
Vertex conflict! Agents 2, 5, timestep 6, location 0
Swapping conflict! Agents 2, 5, timestep 6, edge (0,0)
Vertex conflict! Agents 2, 5, timestep 7, location 0
Vertex conflict! Agents 2, 6, timestep 6, location 0
Swapping conflict! Agents 2, 6, timestep 6, edge (0,0)
Vertex conflict! Agents 2, 6, timestep 7, location 0
Vertex conflict! Agents 3, 4, timestep 6, location 0
Swapping conflict! Agents 3, 4, timestep 6, edge (0,0)
Vertex conflict! Agents 3, 4, timestep 7, location 0
Vertex conflict! Agents 3, 5, timestep 6, location 0
Swapping conflict! Agents 3, 5, timestep 6, edge (0,0)
Vertex conflict! Agents 3, 5, timestep 7, location 0
Vertex conflict! Agents 3, 6, timestep 6, location 0
Swapping conflict! Agents 3, 6, timestep 6, edge (0,0)
Vertex conflict! Agents 3, 6, timestep 7, location 0
Vertex conflict! Agents 4, 5, timestep 4, location 0
Swapping conflict! Agents 4, 5, timestep 4, edge (0,0)
Vertex conflict! Agents 4, 5, timestep 5, location 0
Swapping conflict! Agents 4, 5, timestep 5, edge (0,0)
Vertex conflict! Agents 4, 5, timestep 6, location 0
Swapping conflict! Agents 4, 5, timestep 6, edge (0,0)
Vertex conflict! Agents 4, 5, timestep 7, location 0
Vertex conflict! Agents 4, 6, timestep 6, location 0
Swapping conflict! Agents 4, 6, timestep 6, edge (0,0)
Vertex conflict! Agents 4, 6, timestep 7, location 0
Vertex conflict! Agents 5, 6, timestep 6, location 0
Swapping conflict! Agents 5, 6, timestep 6, edge (0,0)
Vertex conflict! Agents 5, 6, timestep 7, location 0
Found plan [agents = 7] [timesteps = 8]
Agent #0 : 14 18 0 0 0 0 0 0 
Agent #1 : 0 4 7 8 9 10 11 15 
Agent #2 : 9 10 11 15 0 0 0 0 
Agent #3 : 5 9 14 18 17 16 0 0 
Agent #4 : 11 6 0 0 0 0 0 0 
Agent #5 : 4 7 12 16 0 0 0 0 
Agent #6 : 12 13 8 9 10 11 0 0 

[STAT] Solver returned: 0
[DBG]  Agent (index) 3 | New local path (submap idx):
[DBG]  14 18 
[DBG]  Agent (index) 42 | New local path (submap idx):
[DBG]  0 4 7 8 9 10 11 15 
[DBG]  Agent (index) 53 | New local path (submap idx):
[DBG]  9 10 11 15 
[DBG]  Agent (index) 57 | New local path (submap idx):
[DBG]  5 9 14 18 17 16 
[DBG]  Agent (index) 67 | New local path (submap idx):
[DBG]  11 6 
[DBG]  Agent (index) 83 | New local path (submap idx):
[DBG]  4 7 12 16 
[DBG]  Agent (index) 148 | New local path (submap idx):
[DBG]  12 13 8 9 10 11 
[DBG]  Update the agent path 3 | Original local length: 2 | New local length: 2
[DBG]  agent 3 t=0 => decoded (sx,sy)=(3,2) => global_id=689
[DBG]  agent 3 t=1 => decoded (sx,sy)=(4,2) => global_id=721
[DBG]  Complete path of agent 3:
[DBG]    Original: 468 468 468 468 468 468 468 467 466 498 530 529 529 529 528 528 528 528 529 561 593 594 593 625 625 625 657 689 721 753 752 752 751 783 815 847 848 849 881 913 912 
[DBG]    New:     468 468 468 468 468 468 468 467 466 498 530 529 529 529 528 528 528 528 529 561 593 594 593 625 625 625 657 689 721 753 752 752 751 783 815 847 848 849 881 913 912 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 468 468 468 468 468 468 468 467 466 498 530 529 529 529 528 528 528 528 529 561 593 594 593 625 625 625 657 
[DBG]    Local path (in submap): 689 721 
[DBG]    Suffix (out of submap): 753 752 752 751 783 815 847 848 849 881 913 912 
[DBG]  Original agent path length 3 je: 41
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 0: 468, 468, 468, 468, 468, 468, 468, 467, 466, 498, 530, 529, 529, 529, 528, 528, 528, 528, 529, 561, 593, 594, 593, 625, 625, 625, 657, 689, 721, 753, 752, 752, 751, 783, 815, 847, 848, 849, 881, 913, 912, 
[DBG]  Path for agent 3 updated, resulting length: 41
[DBG]  Update the agent path 42 | Original local length: 9 | New local length: 8
[DBG]  agent 42 t=0 => decoded (sx,sy)=(0,0) => global_id=591
[DBG]  agent 42 t=1 => decoded (sx,sy)=(1,0) => global_id=623
[DBG]  agent 42 t=2 => decoded (sx,sy)=(2,0) => global_id=655
[DBG]  agent 42 t=3 => decoded (sx,sy)=(2,1) => global_id=656
[DBG]  agent 42 t=4 => decoded (sx,sy)=(2,2) => global_id=657
[DBG]  agent 42 t=5 => decoded (sx,sy)=(2,3) => global_id=658
[DBG]  agent 42 t=6 => decoded (sx,sy)=(2,4) => global_id=659
[DBG]  agent 42 t=7 => decoded (sx,sy)=(3,4) => global_id=691
[DBG]  Complete path of agent 42:
[DBG]    Original: 224 256 257 289 321 353 354 354 355 387 419 420 421 422 454 455 456 457 489 490 522 523 555 587 588 589 590 591 592 593 625 657 658 658 659 691 692 724 725 726 727 759 
[DBG]    New:     224 256 257 289 321 353 354 354 355 387 419 420 421 422 454 455 456 457 489 490 522 523 555 587 588 589 590 591 623 655 656 657 658 659 691 692 724 725 726 727 759 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 224 256 257 289 321 353 354 354 355 387 419 420 421 422 454 455 456 457 489 490 522 523 555 587 588 589 590 
[DBG]    Local path (in submap): 591 623 655 656 657 658 659 691 692 
[DBG]    Suffix (out of submap): 724 725 726 727 759 
[DBG]  Original agent path length 42 je: 42
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 1: 224, 256, 257, 289, 321, 353, 354, 354, 355, 387, 419, 420, 421, 422, 454, 455, 456, 457, 489, 490, 522, 523, 555, 587, 588, 589, 590, 591, 623, 655, 656, 657, 658, 659, 691, 692, 724, 725, 726, 727, 759, 
[DBG]  Path for agent 42 updated, resulting length: 41
[DBG]  Update the agent path 53 | Original local length: 4 | New local length: 4
[DBG]  agent 53 t=0 => decoded (sx,sy)=(2,2) => global_id=657
[DBG]  agent 53 t=1 => decoded (sx,sy)=(2,3) => global_id=658
[DBG]  agent 53 t=2 => decoded (sx,sy)=(2,4) => global_id=659
[DBG]  agent 53 t=3 => decoded (sx,sy)=(3,4) => global_id=691
[DBG]  Complete path of agent 53:
[DBG]    Original: 84 83 115 147 146 178 210 242 274 306 338 337 336 335 367 366 398 430 462 494 526 558 590 622 623 655 656 657 658 659 691 692 724 756 788 820 821 
[DBG]    New:     84 83 115 147 146 178 210 242 274 306 338 337 336 335 367 366 398 430 462 494 526 558 590 622 623 655 656 657 658 659 691 692 724 756 788 820 821 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 84 83 115 147 146 178 210 242 274 306 338 337 336 335 367 366 398 430 462 494 526 558 590 622 623 655 656 
[DBG]    Local path (in submap): 657 658 659 691 
[DBG]    Suffix (out of submap): 692 724 756 788 820 821 
[DBG]  Original agent path length 53 je: 37
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 2: 84, 83, 115, 147, 146, 178, 210, 242, 274, 306, 338, 337, 336, 335, 367, 366, 398, 430, 462, 494, 526, 558, 590, 622, 623, 655, 656, 657, 658, 659, 691, 692, 724, 756, 788, 820, 821, 
[DBG]  Path for agent 53 updated, resulting length: 37
[DBG]  Update the agent path 57 | Original local length: 6 | New local length: 6
[DBG]  agent 57 t=0 => decoded (sx,sy)=(1,2) => global_id=625
[DBG]  agent 57 t=1 => decoded (sx,sy)=(2,2) => global_id=657
[DBG]  agent 57 t=2 => decoded (sx,sy)=(3,2) => global_id=689
[DBG]  agent 57 t=3 => decoded (sx,sy)=(4,2) => global_id=721
[DBG]  agent 57 t=4 => decoded (sx,sy)=(4,1) => global_id=720
[DBG]  agent 57 t=5 => decoded (sx,sy)=(4,0) => global_id=719
[DBG]  Complete path of agent 57:
[DBG]    Original: 185 184 183 215 247 279 278 277 309 308 340 339 371 371 403 435 435 467 499 498 498 530 529 528 529 561 593 625 657 656 688 687 719 751 783 815 847 848 880 912 944 976 977 
[DBG]    New:     185 184 183 215 247 279 278 277 309 308 340 339 371 371 403 435 435 467 499 498 498 530 529 528 529 561 593 625 657 689 721 720 719 751 783 815 847 848 880 912 944 976 977 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 185 184 183 215 247 279 278 277 309 308 340 339 371 371 403 435 435 467 499 498 498 530 529 528 529 561 593 
[DBG]    Local path (in submap): 625 657 689 721 720 719 
[DBG]    Suffix (out of submap): 751 783 815 847 848 880 912 944 976 977 
[DBG]  Original agent path length 57 je: 43
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 3: 185, 184, 183, 215, 247, 279, 278, 277, 309, 308, 340, 339, 371, 371, 403, 435, 435, 467, 499, 498, 498, 530, 529, 528, 529, 561, 593, 625, 657, 689, 721, 720, 719, 751, 783, 815, 847, 848, 880, 912, 944, 976, 977, 
[DBG]  Path for agent 57 updated, resulting length: 43
[DBG]  Update the agent path 67 | Original local length: 2 | New local length: 2
[DBG]  agent 67 t=0 => decoded (sx,sy)=(2,4) => global_id=659
[DBG]  agent 67 t=1 => decoded (sx,sy)=(1,4) => global_id=627
[DBG]  Complete path of agent 67:
[DBG]    Original: 773 773 773 773 774 774 775 775 775 776 776 744 712 713 714 715 683 684 685 653 654 655 656 656 656 657 658 659 627 628 596 597 565 566 534 502 470 470 438 439 407 408 409 377 378 379 380 348 349 
[DBG]    New:     773 773 773 773 774 774 775 775 775 776 776 744 712 713 714 715 683 684 685 653 654 655 656 656 656 657 658 659 627 628 596 597 565 566 534 502 470 470 438 439 407 408 409 377 378 379 380 348 349 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 773 773 773 773 774 774 775 775 775 776 776 744 712 713 714 715 683 684 685 653 654 655 656 656 656 657 658 
[DBG]    Local path (in submap): 659 627 
[DBG]    Suffix (out of submap): 628 596 597 565 566 534 502 470 470 438 439 407 408 409 377 378 379 380 348 349 
[DBG]  Original agent path length 67 je: 49
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 4: 773, 773, 773, 773, 774, 774, 775, 775, 775, 776, 776, 744, 712, 713, 714, 715, 683, 684, 685, 653, 654, 655, 656, 656, 656, 657, 658, 659, 627, 628, 596, 597, 565, 566, 534, 502, 470, 470, 438, 439, 407, 408, 409, 377, 378, 379, 380, 348, 349, 
[DBG]  Path for agent 67 updated, resulting length: 49
[DBG]  Update the agent path 83 | Original local length: 4 | New local length: 4
[DBG]  agent 83 t=0 => decoded (sx,sy)=(1,0) => global_id=623
[DBG]  agent 83 t=1 => decoded (sx,sy)=(2,0) => global_id=655
[DBG]  agent 83 t=2 => decoded (sx,sy)=(3,0) => global_id=687
[DBG]  agent 83 t=3 => decoded (sx,sy)=(4,0) => global_id=719
[DBG]  Complete path of agent 83:
[DBG]    Original: 18 50 82 81 113 112 144 176 208 207 239 271 303 302 301 333 365 366 398 430 462 462 494 526 558 590 591 623 655 687 719 751 783 815 847 848 880 912 944 976 977 1009 
[DBG]    New:     18 50 82 81 113 112 144 176 208 207 239 271 303 302 301 333 365 366 398 430 462 462 494 526 558 590 591 623 655 687 719 751 783 815 847 848 880 912 944 976 977 1009 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 18 50 82 81 113 112 144 176 208 207 239 271 303 302 301 333 365 366 398 430 462 462 494 526 558 590 591 
[DBG]    Local path (in submap): 623 655 687 719 
[DBG]    Suffix (out of submap): 751 783 815 847 848 880 912 944 976 977 1009 
[DBG]  Original agent path length 83 je: 42
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 5: 18, 50, 82, 81, 113, 112, 144, 176, 208, 207, 239, 271, 303, 302, 301, 333, 365, 366, 398, 430, 462, 462, 494, 526, 558, 590, 591, 623, 655, 687, 719, 751, 783, 815, 847, 848, 880, 912, 944, 976, 977, 1009, 
[DBG]  Path for agent 83 updated, resulting length: 42
[DBG]  Update the agent path 148 | Original local length: 7 | New local length: 6
[DBG]  agent 148 t=0 => decoded (sx,sy)=(3,0) => global_id=687
[DBG]  agent 148 t=1 => decoded (sx,sy)=(3,1) => global_id=688
[DBG]  agent 148 t=2 => decoded (sx,sy)=(2,1) => global_id=656
[DBG]  agent 148 t=3 => decoded (sx,sy)=(2,2) => global_id=657
[DBG]  agent 148 t=4 => decoded (sx,sy)=(2,3) => global_id=658
[DBG]  agent 148 t=5 => decoded (sx,sy)=(2,4) => global_id=659
[DBG]  Complete path of agent 148:
[DBG]    Original: 776 808 808 808 808 808 807 806 806 807 775 776 777 778 779 747 715 683 684 685 653 653 654 686 686 686 686 687 688 689 657 658 659 659 660 
[DBG]    New:     776 808 808 808 808 808 807 806 806 807 775 776 777 778 779 747 715 683 684 685 653 653 654 686 686 686 686 687 688 656 657 658 659 660 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 776 808 808 808 808 808 807 806 806 807 775 776 777 778 779 747 715 683 684 685 653 653 654 686 686 686 686 
[DBG]    Local path (in submap): 687 688 656 657 658 659 660 
[DBG]    Suffix (out of submap): 
[DBG]  Original agent path length 148 je: 35
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 6: 776, 808, 808, 808, 808, 808, 807, 806, 806, 807, 775, 776, 777, 778, 779, 747, 715, 683, 684, 685, 653, 653, 654, 686, 686, 686, 686, 687, 688, 656, 657, 658, 659, 660, 
[DBG]  Path for agent 148 updated, resulting length: 34
[DBG]  Paths successfully updated.
[DBG]  (LNS.cpp) New path for agent 3: 
[DBG]  468, 468, 468, 468, 468, 468, 468, 467, 466, 498, 530, 529, 529, 529, 528, 528, 528, 528, 529, 561, 593, 594, 593, 625, 625, 625, 657, 689, 721, 753, 752, 752, 751, 783, 815, 847, 848, 849, 881, 913, 912, 
[DBG]  (LNS.cpp) New path for agent 42: 
[DBG]  224, 256, 257, 289, 321, 353, 354, 354, 355, 387, 419, 420, 421, 422, 454, 455, 456, 457, 489, 490, 522, 523, 555, 587, 588, 589, 590, 591, 623, 655, 656, 657, 658, 659, 691, 692, 724, 725, 726, 727, 759, 
[DBG]  (LNS.cpp) New path for agent 53: 
[DBG]  84, 83, 115, 147, 146, 178, 210, 242, 274, 306, 338, 337, 336, 335, 367, 366, 398, 430, 462, 494, 526, 558, 590, 622, 623, 655, 656, 657, 658, 659, 691, 692, 724, 756, 788, 820, 821, 
[DBG]  (LNS.cpp) New path for agent 57: 
[DBG]  185, 184, 183, 215, 247, 279, 278, 277, 309, 308, 340, 339, 371, 371, 403, 435, 435, 467, 499, 498, 498, 530, 529, 528, 529, 561, 593, 625, 657, 689, 721, 720, 719, 751, 783, 815, 847, 848, 880, 912, 944, 976, 977, 
[DBG]  (LNS.cpp) New path for agent 67: 
[DBG]  773, 773, 773, 773, 774, 774, 775, 775, 775, 776, 776, 744, 712, 713, 714, 715, 683, 684, 685, 653, 654, 655, 656, 656, 656, 657, 658, 659, 627, 628, 596, 597, 565, 566, 534, 502, 470, 470, 438, 439, 407, 408, 409, 377, 378, 379, 380, 348, 349, 
[DBG]  (LNS.cpp) New path for agent 83: 
[DBG]  18, 50, 82, 81, 113, 112, 144, 176, 208, 207, 239, 271, 303, 302, 301, 333, 365, 366, 398, 430, 462, 462, 494, 526, 558, 590, 591, 623, 655, 687, 719, 751, 783, 815, 847, 848, 880, 912, 944, 976, 977, 1009, 
[DBG]  (LNS.cpp) New path for agent 148: 
[DBG]  776, 808, 808, 808, 808, 808, 807, 806, 806, 807, 775, 776, 777, 778, 779, 747, 715, 683, 684, 685, 653, 653, 654, 686, 686, 686, 686, 687, 688, 656, 657, 658, 659, 660, 
[DBG]  component_weights = {0.270274, 0.207847, 0.217356, 0.304523}
[DBG]  opSuccess value: 1
[STAT] neighbor.sum_of_costs before recomputation: 280
[STAT] neighbor.old_sum_of_costs before recomputation: 282
[STAT] sum_of_costs before recomputation: 4511
[DBG]  Validate solution immediately after SAT success.
[DBG]  No problems after SAT replan.
[DBG]  Recomputing sum_of_cost by dividing neighbor.sum_of_costs and neighbor.old_sum_of_costs
[STAT] sum_of_costs after recomputation: 4509
[STAT] Iteration 34
[DBG]  Using SAT operator (destroy+repair SAT).
[DBG]  ====================
[DBG]  SAT destroy operator called.
[DBG]  SAT heuristic: 2
[DBG]  key_agent_id: 115
[DBG]  key_agent_id global path length: 34
[DBG]  Submap content (global positions):
[DBG]  260 261 262 263 264 
[DBG]  292 293 294 295 296 
[DBG]  324 325 326 327 328 
[DBG]  356 357 358 359 360 
[DBG]  388 389 390 391 392 
[DBG]  Map content with agents and obstacles:
[DBG]  . . X . . 
[DBG]  X . A . A 
[DBG]  . . A . . 
[DBG]  . . . . . 
[DBG]  . . A . X 
[DBG]  content of the map structure that we pass to the SAT solver:
[DBG]  1  1  -1  1  1  
[DBG]  -1  1  1  1  1  
[DBG]  1  1  1  1  1  
[DBG]  1  1  1  1  1  
[DBG]  1  1  1  1  -1  
[DBG]  Identifying agents in a submap for rescheduling (when key_agent is there at the time 15):
[DBG]  Agent 51 found intervals in the sub-map:
[DBG]   [3..4] [14..20]
[DBG]  Agent 51 (interval in submap: [14..20]) contains time 15, added to replan.
[DBG]  Agent 55 found intervals in the sub-map:
[DBG]  
[DBG]  Agent 55 is not in sub-map at time 15 (intervals: 
[DBG]  )
[DBG]  Agent 65 found intervals in the sub-map:
[DBG]  
[DBG]  Agent 65 is not in sub-map at time 15 (intervals: 
[DBG]  )
[DBG]  Agent 80 found intervals in the sub-map:
[DBG]   [12..20]
[DBG]  Agent 80 (interval in submap: [12..20]) contains time 15, added to replan.
[DBG]  Agent 115 found intervals in the sub-map:
[DBG]   [13..19]
[DBG]  Agent 115 (interval in submap: [13..19]) contains time 15, added to replan.
[DBG]  Agent 120 found intervals in the sub-map:
[DBG]  
[DBG]  Agent 120 is not in sub-map at time 15 (intervals: 
[DBG]  )
[DBG]  Agent 146 found intervals in the sub-map:
[DBG]   [9..16]
[DBG]  Agent 146 (interval in submap: [9..16]) contains time 15, added to replan.
[DBG]  Agent 51 | Start (global): 390 -> (local): (4, 2) at time 15 | Goal (global): 360 -> (local): (3, 4) at time 20
[DBG]  Agent 80 | Start (global): 294 -> (local): (1, 2) at time 15 | Goal (global): 388 -> (local): (4, 0) at time 20
[DBG]  Agent 115 | Start (global): 326 -> (local): (2, 2) at time 15 | Goal (global): 264 -> (local): (0, 4) at time 19
[DBG]  Agent 146 | Start (global): 296 -> (local): (1, 4) at time 15 | Goal (global): 264 -> (local): (0, 4) at time 16
[DBG]  [REPAIR] SAT destroy operator called.
[DBG]  [REPAIR] SAT operator â€“ launching subproblem FOR OPTIMIZATION.
[DBG]  Creating local paths (sx, sy) in the submap for T_sync = 15
[DBG]    Agent 51 (global paths from T=15 to 20) has local path: (4,2) (3,2) (2,2) (2,3) (2,4) (3,4) 
[DBG]    Agent 80 (global paths from T=15 to 20) has local path: (1,2) (1,1) (2,1) (2,0) (3,0) (4,0) 
[DBG]    Agent 115 (global paths from T=15 to 19) has local path: (2,2) (1,2) (1,3) (0,3) (0,4) 
[DBG]    Agent 146 (global paths from T=15 to 16) has local path: (1,4) (0,4) 
[DBG]  Checking input data for SAT solver:
[DBG]    - Number of agents to replan: 4
[DBG]  Agent 51 has the original local path length: 6 => Start (4,2), Goal (3,4)
[DBG]  Agent 80 has the original local path length: 6 => Start (1,2), Goal (4,0)
[DBG]  Agent 115 has the original local path length: 5 => Start (2,2), Goal (0,4)
[DBG]  Agent 146 has the original local path length: 2 => Start (1,4), Goal (0,4)
[DBG]  Start position: (4, 2), (1, 2), (2, 2), (1, 4), 
[DBG]  Goal position: (3, 4), (4, 0), (0, 4), (0, 4), 
[DBG]  SAT instance and solver created.
Currently solving
Instance name: scen
Map name: map
Encoding used: disappear_at_goal
SAT solver used: Kissat
Optimizing function: sum of costs
Number of agents: 4
Mks LB: 6
SoC LB: 17
Delta: 0
Remaining time: 300000 [ms]

Vertex conflict! Agents 0, 2, timestep 5, location 0
Vertex conflict! Agents 0, 3, timestep 4, location 0
Swapping conflict! Agents 0, 3, timestep 4, edge (0,0)
Vertex conflict! Agents 0, 3, timestep 5, location 0
Vertex conflict! Agents 2, 3, timestep 5, location 0
Found plan [agents = 4] [timesteps = 6]
Agent #0 : 20 21 16 17 0 0 
Agent #1 : 5 10 15 20 19 18 
Agent #2 : 10 11 12 7 3 0 
Agent #3 : 7 3 0 0 0 0 

[STAT] Solver returned: 0
[DBG]  Agent (index) 51 | New local path (submap idx):
[DBG]  20 21 16 17 
[DBG]  Agent (index) 80 | New local path (submap idx):
[DBG]  5 10 15 20 19 18 
[DBG]  Agent (index) 115 | New local path (submap idx):
[DBG]  10 11 12 7 3 
[DBG]  Agent (index) 146 | New local path (submap idx):
[DBG]  7 3 
[DBG]  Update the agent path 51 | Original local length: 6 | New local length: 4
[DBG]  agent 51 t=0 => decoded (sx,sy)=(4,2) => global_id=390
[DBG]  agent 51 t=1 => decoded (sx,sy)=(4,3) => global_id=391
[DBG]  agent 51 t=2 => decoded (sx,sy)=(3,3) => global_id=359
[DBG]  agent 51 t=3 => decoded (sx,sy)=(3,4) => global_id=360
[DBG]  Complete path of agent 51:
[DBG]    Original: 257 258 259 260 260 259 291 323 323 355 387 419 420 421 389 390 358 326 327 328 360 361 362 363 395 427 459 458 459 
[DBG]    New:     257 258 259 260 260 259 291 323 323 355 387 419 420 421 389 390 391 359 360 361 362 363 395 427 459 458 459 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 257 258 259 260 260 259 291 323 323 355 387 419 420 421 389 
[DBG]    Local path (in submap): 390 391 359 360 361 362 
[DBG]    Suffix (out of submap): 363 395 427 459 458 459 
[DBG]  Original agent path length 51 je: 29
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 0: 257, 258, 259, 260, 260, 259, 291, 323, 323, 355, 387, 419, 420, 421, 389, 390, 391, 359, 360, 361, 362, 363, 395, 427, 459, 458, 459, 
[DBG]  Path for agent 51 updated, resulting length: 27
[DBG]  Update the agent path 80 | Original local length: 6 | New local length: 6
[DBG]  agent 80 t=0 => decoded (sx,sy)=(1,2) => global_id=294
[DBG]  agent 80 t=1 => decoded (sx,sy)=(2,2) => global_id=326
[DBG]  agent 80 t=2 => decoded (sx,sy)=(3,2) => global_id=358
[DBG]  agent 80 t=3 => decoded (sx,sy)=(4,2) => global_id=390
[DBG]  agent 80 t=4 => decoded (sx,sy)=(4,1) => global_id=389
[DBG]  agent 80 t=5 => decoded (sx,sy)=(4,0) => global_id=388
[DBG]  Complete path of agent 80:
[DBG]    Original: 111 110 109 108 140 172 204 236 268 267 266 265 264 296 295 294 293 325 324 356 388 387 419 418 
[DBG]    New:     111 110 109 108 140 172 204 236 268 267 266 265 264 296 295 294 326 358 390 389 388 387 419 418 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 111 110 109 108 140 172 204 236 268 267 266 265 264 296 295 
[DBG]    Local path (in submap): 294 326 358 390 389 388 
[DBG]    Suffix (out of submap): 387 419 418 
[DBG]  Original agent path length 80 je: 24
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 1: 111, 110, 109, 108, 140, 172, 204, 236, 268, 267, 266, 265, 264, 296, 295, 294, 326, 358, 390, 389, 388, 387, 419, 418, 
[DBG]  Path for agent 80 updated, resulting length: 24
[DBG]  Update the agent path 115 | Original local length: 5 | New local length: 5
[DBG]  agent 115 t=0 => decoded (sx,sy)=(2,2) => global_id=326
[DBG]  agent 115 t=1 => decoded (sx,sy)=(2,3) => global_id=327
[DBG]  agent 115 t=2 => decoded (sx,sy)=(2,4) => global_id=328
[DBG]  agent 115 t=3 => decoded (sx,sy)=(1,4) => global_id=296
[DBG]  agent 115 t=4 => decoded (sx,sy)=(0,4) => global_id=264
[DBG]  Complete path of agent 115:
[DBG]    Original: 99 67 67 99 131 132 164 196 195 227 259 291 323 324 325 326 294 295 263 264 265 266 267 268 300 301 333 365 366 367 368 400 401 402 
[DBG]    New:     99 67 67 99 131 132 164 196 195 227 259 291 323 324 325 326 327 328 296 264 265 266 267 268 300 301 333 365 366 367 368 400 401 402 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 99 67 67 99 131 132 164 196 195 227 259 291 323 324 325 
[DBG]    Local path (in submap): 326 327 328 296 264 
[DBG]    Suffix (out of submap): 265 266 267 268 300 301 333 365 366 367 368 400 401 402 
[DBG]  Original agent path length 115 je: 34
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 2: 99, 67, 67, 99, 131, 132, 164, 196, 195, 227, 259, 291, 323, 324, 325, 326, 327, 328, 296, 264, 265, 266, 267, 268, 300, 301, 333, 365, 366, 367, 368, 400, 401, 402, 
[DBG]  Path for agent 115 updated, resulting length: 34
[DBG]  Update the agent path 146 | Original local length: 2 | New local length: 2
[DBG]  agent 146 t=0 => decoded (sx,sy)=(1,4) => global_id=296
[DBG]  agent 146 t=1 => decoded (sx,sy)=(0,4) => global_id=264
[DBG]  Complete path of agent 146:
[DBG]    Original: 512 513 481 449 450 418 419 420 421 389 390 358 359 327 328 296 264 265 233 234 235 236 204 172 173 141 109 110 111 79 80 81 49 50 18 19 
[DBG]    New:     512 513 481 449 450 418 419 420 421 389 390 358 359 327 328 296 264 265 233 234 235 236 204 172 173 141 109 110 111 79 80 81 49 50 18 19 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 512 513 481 449 450 418 419 420 421 389 390 358 359 327 328 
[DBG]    Local path (in submap): 296 264 
[DBG]    Suffix (out of submap): 265 233 234 235 236 204 172 173 141 109 110 111 79 80 81 49 50 18 19 
[DBG]  Original agent path length 146 je: 36
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 3: 512, 513, 481, 449, 450, 418, 419, 420, 421, 389, 390, 358, 359, 327, 328, 296, 264, 265, 233, 234, 235, 236, 204, 172, 173, 141, 109, 110, 111, 79, 80, 81, 49, 50, 18, 19, 
[DBG]  Path for agent 146 updated, resulting length: 36
[DBG]  Paths successfully updated.
[DBG]  (LNS.cpp) New path for agent 51: 
[DBG]  257, 258, 259, 260, 260, 259, 291, 323, 323, 355, 387, 419, 420, 421, 389, 390, 391, 359, 360, 361, 362, 363, 395, 427, 459, 458, 459, 
[DBG]  (LNS.cpp) New path for agent 80: 
[DBG]  111, 110, 109, 108, 140, 172, 204, 236, 268, 267, 266, 265, 264, 296, 295, 294, 326, 358, 390, 389, 388, 387, 419, 418, 
[DBG]  (LNS.cpp) New path for agent 115: 
[DBG]  99, 67, 67, 99, 131, 132, 164, 196, 195, 227, 259, 291, 323, 324, 325, 326, 327, 328, 296, 264, 265, 266, 267, 268, 300, 301, 333, 365, 366, 367, 368, 400, 401, 402, 
[DBG]  (LNS.cpp) New path for agent 146: 
[DBG]  512, 513, 481, 449, 450, 418, 419, 420, 421, 389, 390, 358, 359, 327, 328, 296, 264, 265, 233, 234, 235, 236, 204, 172, 173, 141, 109, 110, 111, 79, 80, 81, 49, 50, 18, 19, 
[DBG]  component_weights = {0.268591, 0.206552, 0.216002, 0.308855}
[DBG]  opSuccess value: 1
[STAT] neighbor.sum_of_costs before recomputation: 117
[STAT] neighbor.old_sum_of_costs before recomputation: 119
[STAT] sum_of_costs before recomputation: 4509
[DBG]  Validate solution immediately after SAT success.
[WARNING] Problem after SAT: Target conflict: agent 50 (len 39) traverses target of agent 51 (len 26) at location 459 at timestep 27
[DBG]  Attempting immediate repair via init_lns because problem occurred after SAT (should be applied only for conflicts...).
[DBG]  Passing 150 agents to init_lns (skip=true).
[DBG]  path_table contents for selected agents (neighbor.agents):
[DBG]    Agent 51 => controlling path length=27
[DBG]    Agent 80 => controlling path length=24
[DBG]    Agent 115 => controlling path length=34
[DBG]    Agent 146 => controlling path length=36
[DBG]  hodnota skip_initial_solution=1
[DBG]  We skip initialSolution => call buildCollisionData()
[DBG]  buildCollisionData() called â€“ skip_initial_solution case.
[DBG]  Agents.size()=150, collision_graph.size()=150
[DBG]  agent 50 => updateCollidingPairs => foundCollision
[DBG]  agent 51 => updateCollidingPairs => foundCollision
[DBG]  agent 80 => updateCollidingPairs => foundCollision
[DBG]  agent 116 => updateCollidingPairs => foundCollision
[DBG]  agent 128 => updateCollidingPairs => foundCollision
[DBG]  Conflicting agent pairs:
[DBG]  agent 50 is in conflict with agent 51
[DBG]  agent 51 is in conflict with agent 128
[DBG]  agent 80 is in conflict with agent 116
[DBG]  buildCollisionData() => sum_of_costs=4507, num_of_colliding_pairs=3
[DBG]  buildCollisionData done => sum_of_costs=4507, num_of_colliding_pairs=3
[DBG]  sum_of_cost hodnota: 4507
[DBG]  After skip/init build => iteration_stats.back(): sum_of_costs=4507, collisions=3
[DEBUG] Using default neighbor generation strategy for conflicts: 1
[DEBUG] Using default neighbor generation strategy for conflicts: 2
[DEBUG] Using default neighbor generation strategy for conflicts: 0
[DEBUG] Using default neighbor generation strategy for conflicts: 1
	InitLNS(PP): runtime = 0.0187481, iterations = 5, colliding pairs = 0, initial colliding pairs = 3, solution cost = 4488, initial solution cost = 4507, failed iterations = 0
[DBG]  init_lns->sum_of_costs after init_lns->run: 4488
[DBG]  sum_of_costs after assignment from init_lns->run: 4488
[DBG]  Recomputing sum_of_cost by dividing neighbor.sum_of_costs and neighbor.old_sum_of_costs
[STAT] sum_of_costs after recomputation: 4488
[STAT] Iteration 35
[DBG]  Using SAT operator (destroy+repair SAT).
[DBG]  ====================
[DBG]  SAT destroy operator called.
[DBG]  SAT heuristic: 2
[DBG]  key_agent_id: 16
[DBG]  key_agent_id global path length: 25
[DBG]  Submap content (global positions):
[DBG]  362 363 364 365 366 
[DBG]  394 395 396 397 398 
[DBG]  426 427 428 429 430 
[DBG]  458 459 460 461 462 
[DBG]  490 491 492 493 494 
[DBG]  Map content with agents and obstacles:
[DBG]  . . X . . 
[DBG]  X . X X . 
[DBG]  . A A . A 
[DBG]  . . . X . 
[DBG]  . . . X . 
[DBG]  content of the map structure that we pass to the SAT solver:
[DBG]  1  1  -1  1  1  
[DBG]  -1  1  -1  -1  1  
[DBG]  1  1  1  1  1  
[DBG]  1  1  1  -1  1  
[DBG]  1  1  1  -1  1  
[DBG]  Identifying agents in a submap for rescheduling (when key_agent is there at the time 9):
[DBG]  Agent 16 found intervals in the sub-map:
[DBG]   [6..11]
[DBG]  Agent 16 (interval in submap: [6..11]) contains time 9, added to replan.
[DBG]  Agent 36 found intervals in the sub-map:
[DBG]   [5..9]
[DBG]  Agent 36 (interval in submap: [5..9]) contains time 9, added to replan.
[DBG]  Agent 81 found intervals in the sub-map:
[DBG]   [7..12]
[DBG]  Agent 81 (interval in submap: [7..12]) contains time 9, added to replan.
[DBG]  Agent 121 found intervals in the sub-map:
[DBG]   [16..20]
[DBG]  Agent 121 is not in sub-map at time 9 (intervals: 
[DBG]  [16..20] )
[DBG]  Agent 145 found intervals in the sub-map:
[DBG]  
[DBG]  Agent 145 is not in sub-map at time 9 (intervals: 
[DBG]  )
[DBG]  Agent 16 | Start (global): 428 -> (local): (2, 2) at time 9 | Goal (global): 430 -> (local): (2, 4) at time 11
[DBG]  Agent 36 | Start (global): 430 -> (local): (2, 4) at time 9 | Goal (global): 430 -> (local): (2, 4) at time 9
[DBG]  Agent 81 | Start (global): 427 -> (local): (2, 1) at time 9 | Goal (global): 430 -> (local): (2, 4) at time 12
[DBG]  [REPAIR] SAT destroy operator called.
[DBG]  [REPAIR] SAT operator â€“ launching subproblem FOR OPTIMIZATION.
[DBG]  Creating local paths (sx, sy) in the submap for T_sync = 9
[DBG]    Agent 16 (global paths from T=9 to 11) has local path: (2,2) (2,3) (2,4) 
[DBG]    Agent 36 (global paths from T=9 to 9) has local path: (2,4) 
[DBG]    Agent 81 (global paths from T=9 to 12) has local path: (2,1) (2,2) (2,3) (2,4) 
[DBG]  Checking input data for SAT solver:
[DBG]    - Number of agents to replan: 3
[DBG]  Agent 16 has the original local path length: 3 => Start (2,2), Goal (2,4)
[DBG]  Agent 36 has the original local path length: 1 => Start (2,4), Goal (2,4)
[DBG]  Agent 81 has the original local path length: 4 => Start (2,1), Goal (2,4)
[DBG]  Start position: (2, 2), (2, 4), (2, 1), 
[DBG]  Goal position: (2, 4), (2, 4), (2, 4), 
[DBG]  SAT instance and solver created.
Currently solving
Instance name: scen
Map name: map
Encoding used: disappear_at_goal
SAT solver used: Kissat
Optimizing function: sum of costs
Number of agents: 3
Mks LB: 4
SoC LB: 8
Delta: 0
Remaining time: 300000 [ms]

Vertex conflict! Agents 0, 1, timestep 3, location 0
Found plan [agents = 3] [timesteps = 4]
Agent #0 : 8 9 10 0 
Agent #1 : 10 0 0 0 
Agent #2 : 7 8 9 10 

[STAT] Solver returned: 0
[DBG]  Agent (index) 16 | New local path (submap idx):
[DBG]  8 9 10 
[DBG]  Agent (index) 36 | New local path (submap idx):
[DBG]  10 
[DBG]  Agent (index) 81 | New local path (submap idx):
[DBG]  7 8 9 10 
[DBG]  Update the agent path 16 | Original local length: 3 | New local length: 3
[DBG]  agent 16 t=0 => decoded (sx,sy)=(2,2) => global_id=428
[DBG]  agent 16 t=1 => decoded (sx,sy)=(2,3) => global_id=429
[DBG]  agent 16 t=2 => decoded (sx,sy)=(2,4) => global_id=430
[DBG]  Complete path of agent 16:
[DBG]    Original: 454 455 423 424 425 457 458 459 427 428 429 430 431 432 400 368 367 335 303 304 336 337 338 306 274 
[DBG]    New:     454 455 423 424 425 457 458 459 427 428 429 430 431 432 400 368 367 335 303 304 336 337 338 306 274 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 454 455 423 424 425 457 458 459 427 
[DBG]    Local path (in submap): 428 429 430 
[DBG]    Suffix (out of submap): 431 432 400 368 367 335 303 304 336 337 338 306 274 
[DBG]  Original agent path length 16 je: 25
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 0: 454, 455, 423, 424, 425, 457, 458, 459, 427, 428, 429, 430, 431, 432, 400, 368, 367, 335, 303, 304, 336, 337, 338, 306, 274, 
[DBG]  Path for agent 16 updated, resulting length: 25
[DBG]  Update the agent path 36 | Original local length: 1 | New local length: 1
[DBG]  agent 36 t=0 => decoded (sx,sy)=(2,4) => global_id=430
[DBG]  Complete path of agent 36:
[DBG]    Original: 431 431 431 431 431 430 398 398 398 430 431 463 464 465 433 401 402 403 371 
[DBG]    New:     431 431 431 431 431 430 398 398 398 430 431 463 464 465 433 401 402 403 371 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 431 431 431 431 431 430 398 398 398 
[DBG]    Local path (in submap): 430 
[DBG]    Suffix (out of submap): 431 463 464 465 433 401 402 403 371 
[DBG]  Original agent path length 36 je: 19
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 1: 431, 431, 431, 431, 431, 430, 398, 398, 398, 430, 431, 463, 464, 465, 433, 401, 402, 403, 371, 
[DBG]  Path for agent 36 updated, resulting length: 19
[DBG]  Update the agent path 81 | Original local length: 4 | New local length: 4
[DBG]  agent 81 t=0 => decoded (sx,sy)=(2,1) => global_id=427
[DBG]  agent 81 t=1 => decoded (sx,sy)=(2,2) => global_id=428
[DBG]  agent 81 t=2 => decoded (sx,sy)=(2,3) => global_id=429
[DBG]  agent 81 t=3 => decoded (sx,sy)=(2,4) => global_id=430
[DBG]  Complete path of agent 81:
[DBG]    Original: 419 420 421 422 423 424 425 426 426 427 428 429 430 431 463 463 464 496 528 529 530 531 563 
[DBG]    New:     419 420 421 422 423 424 425 426 426 427 428 429 430 431 463 463 464 496 528 529 530 531 563 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 419 420 421 422 423 424 425 426 426 
[DBG]    Local path (in submap): 427 428 429 430 
[DBG]    Suffix (out of submap): 431 463 463 464 496 528 529 530 531 563 
[DBG]  Original agent path length 81 je: 23
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 2: 419, 420, 421, 422, 423, 424, 425, 426, 426, 427, 428, 429, 430, 431, 463, 463, 464, 496, 528, 529, 530, 531, 563, 
[DBG]  Path for agent 81 updated, resulting length: 23
[DBG]  Paths successfully updated.
[DBG]  (LNS.cpp) New path for agent 16: 
[DBG]  454, 455, 423, 424, 425, 457, 458, 459, 427, 428, 429, 430, 431, 432, 400, 368, 367, 335, 303, 304, 336, 337, 338, 306, 274, 
[DBG]  (LNS.cpp) New path for agent 36: 
[DBG]  431, 431, 431, 431, 431, 430, 398, 398, 398, 430, 431, 463, 464, 465, 433, 401, 402, 403, 371, 
[DBG]  (LNS.cpp) New path for agent 81: 
[DBG]  419, 420, 421, 422, 423, 424, 425, 426, 426, 427, 428, 429, 430, 431, 463, 463, 464, 496, 528, 529, 530, 531, 563, 
[DBG]  component_weights = {0.272578, 0.205426, 0.214824, 0.307171}
[DBG]  opSuccess value: 1
[STAT] neighbor.sum_of_costs before recomputation: 64
[STAT] neighbor.old_sum_of_costs before recomputation: 64
[STAT] sum_of_costs before recomputation: 4488
[DBG]  Validate solution immediately after SAT success.
[DBG]  No problems after SAT replan.
[DBG]  Recomputing sum_of_cost by dividing neighbor.sum_of_costs and neighbor.old_sum_of_costs
[STAT] sum_of_costs after recomputation: 4488
[STAT] Iteration 36
[DBG]  Using SAT operator (destroy+repair SAT).
[DBG]  ====================
[DBG]  SAT destroy operator called.
[DBG]  SAT heuristic: 2
[DBG]  key_agent_id: 45
[DBG]  key_agent_id global path length: 41
[DBG]  Submap content (global positions):
[DBG]  594 595 596 597 598 
[DBG]  626 627 628 629 630 
[DBG]  658 659 660 661 662 
[DBG]  690 691 692 693 694 
[DBG]  722 723 724 725 726 
[DBG]  Map content with agents and obstacles:
[DBG]  . X . A X 
[DBG]  X . . . X 
[DBG]  A . A A X 
[DBG]  X . A X X 
[DBG]  . X . . . 
[DBG]  content of the map structure that we pass to the SAT solver:
[DBG]  1  -1  1  1  -1  
[DBG]  -1  1  1  1  -1  
[DBG]  1  1  1  1  -1  
[DBG]  -1  1  1  -1  -1  
[DBG]  1  -1  1  1  1  
[DBG]  Identifying agents in a submap for rescheduling (when key_agent is there at the time 31):
[DBG]  Agent 26 found intervals in the sub-map:
[DBG]   [34..41]
[DBG]  Agent 26 is not in sub-map at time 31 (intervals: 
[DBG]  [34..41] )
[DBG]  Agent 28 found intervals in the sub-map:
[DBG]   [0..44]
[DBG]  Agent 28 (interval in submap: [0..44]) contains time 31, added to replan.
[DBG]  Agent 45 found intervals in the sub-map:
[DBG]   [28..33]
[DBG]  Agent 45 (interval in submap: [28..33]) contains time 31, added to replan.
[DBG]  Agent 53 found intervals in the sub-map:
[DBG]   [28..32]
[DBG]  Agent 53 (interval in submap: [28..32]) contains time 31, added to replan.
[DBG]  Agent 67 found intervals in the sub-map:
[DBG]   [26..31]
[DBG]  Agent 67 (interval in submap: [26..31]) contains time 31, added to replan.
[DBG]  Agent 148 found intervals in the sub-map:
[DBG]   [31..33]
[DBG]  Agent 148 (interval in submap: [31..33]) contains time 31, added to replan.
[DBG]  Agent 28 | Start (global): 661 -> (local): (2, 3) at time 31 | Goal (global): 726 -> (local): (4, 4) at time 44
[DBG]  Agent 45 | Start (global): 660 -> (local): (2, 2) at time 31 | Goal (global): 724 -> (local): (4, 2) at time 33
[DBG]  Agent 53 | Start (global): 692 -> (local): (3, 2) at time 31 | Goal (global): 724 -> (local): (4, 2) at time 32
[DBG]  Agent 67 | Start (global): 597 -> (local): (0, 3) at time 31 | Goal (global): 597 -> (local): (0, 3) at time 31
[DBG]  Agent 148 | Start (global): 658 -> (local): (2, 0) at time 31 | Goal (global): 660 -> (local): (2, 2) at time 33
[DBG]  [REPAIR] SAT destroy operator called.
[DBG]  [REPAIR] SAT operator â€“ launching subproblem FOR OPTIMIZATION.
[DBG]  Creating local paths (sx, sy) in the submap for T_sync = 31
[DBG]    Agent 28 (global paths from T=31 to 44) has local path: (2,3) (2,3) (2,3) (2,3) (2,3) (1,3) (1,2) (1,1) (2,1) (3,1) (3,2) (4,2) (4,3) (4,4) 
[DBG]    Agent 45 (global paths from T=31 to 33) has local path: (2,2) (3,2) (4,2) 
[DBG]    Agent 53 (global paths from T=31 to 32) has local path: (3,2) (4,2) 
[DBG]    Agent 67 (global paths from T=31 to 31) has local path: (0,3) 
[DBG]    Agent 148 (global paths from T=31 to 33) has local path: (2,0) (2,1) (2,2) 
[DBG]  Checking input data for SAT solver:
[DBG]    - Number of agents to replan: 5
[DBG]  Agent 28 has the original local path length: 14 => Start (2,3), Goal (4,4)
[DBG]  Agent 45 has the original local path length: 3 => Start (2,2), Goal (4,2)
[DBG]  Agent 53 has the original local path length: 2 => Start (3,2), Goal (4,2)
[DBG]  Agent 67 has the original local path length: 1 => Start (0,3), Goal (0,3)
[DBG]  Agent 148 has the original local path length: 3 => Start (2,0), Goal (2,2)
[DBG]  Start position: (2, 3), (2, 2), (3, 2), (0, 3), (2, 0), 
[DBG]  Goal position: (4, 4), (4, 2), (4, 2), (0, 3), (2, 2), 
[DBG]  SAT instance and solver created.
Currently solving
Instance name: scen
Map name: map
Encoding used: disappear_at_goal
SAT solver used: Kissat
Optimizing function: sum of costs
Number of agents: 5
Mks LB: 6
SoC LB: 15
Delta: 0
Remaining time: 300000 [ms]

Vertex conflict! Agents 1, 2, timestep 3, location 0
Swapping conflict! Agents 1, 2, timestep 3, edge (0,0)
Vertex conflict! Agents 1, 2, timestep 4, location 0
Swapping conflict! Agents 1, 2, timestep 4, edge (0,0)
Vertex conflict! Agents 1, 2, timestep 5, location 0
Vertex conflict! Agents 1, 3, timestep 3, location 0
Swapping conflict! Agents 1, 3, timestep 3, edge (0,0)
Vertex conflict! Agents 1, 3, timestep 4, location 0
Swapping conflict! Agents 1, 3, timestep 4, edge (0,0)
Vertex conflict! Agents 1, 3, timestep 5, location 0
Vertex conflict! Agents 1, 4, timestep 3, location 0
Swapping conflict! Agents 1, 4, timestep 3, edge (0,0)
Vertex conflict! Agents 1, 4, timestep 4, location 0
Swapping conflict! Agents 1, 4, timestep 4, edge (0,0)
Vertex conflict! Agents 1, 4, timestep 5, location 0
Vertex conflict! Agents 2, 3, timestep 2, location 0
Swapping conflict! Agents 2, 3, timestep 2, edge (0,0)
Vertex conflict! Agents 2, 3, timestep 3, location 0
Swapping conflict! Agents 2, 3, timestep 3, edge (0,0)
Vertex conflict! Agents 2, 3, timestep 4, location 0
Swapping conflict! Agents 2, 3, timestep 4, edge (0,0)
Vertex conflict! Agents 2, 3, timestep 5, location 0
Vertex conflict! Agents 2, 4, timestep 3, location 0
Swapping conflict! Agents 2, 4, timestep 3, edge (0,0)
Vertex conflict! Agents 2, 4, timestep 4, location 0
Swapping conflict! Agents 2, 4, timestep 4, edge (0,0)
Vertex conflict! Agents 2, 4, timestep 5, location 0
Vertex conflict! Agents 3, 4, timestep 3, location 0
Swapping conflict! Agents 3, 4, timestep 3, edge (0,0)
Vertex conflict! Agents 3, 4, timestep 4, location 0
Swapping conflict! Agents 3, 4, timestep 4, edge (0,0)
Vertex conflict! Agents 3, 4, timestep 5, location 0
Found plan [agents = 5] [timesteps = 6]
Agent #0 : 9 8 11 13 14 15 
Agent #1 : 8 11 13 0 0 0 
Agent #2 : 11 13 0 0 0 0 
Agent #3 : 2 0 0 0 0 0 
Agent #4 : 6 7 8 0 0 0 

[STAT] Solver returned: 0
[DBG]  Agent (index) 28 | New local path (submap idx):
[DBG]  9 8 11 13 14 15 
[DBG]  Agent (index) 45 | New local path (submap idx):
[DBG]  8 11 13 
[DBG]  Agent (index) 53 | New local path (submap idx):
[DBG]  11 13 
[DBG]  Agent (index) 67 | New local path (submap idx):
[DBG]  2 
[DBG]  Agent (index) 148 | New local path (submap idx):
[DBG]  6 7 8 
[DBG]  Update the agent path 28 | Original local length: 14 | New local length: 6
[DBG]  agent 28 t=0 => decoded (sx,sy)=(2,3) => global_id=661
[DBG]  agent 28 t=1 => decoded (sx,sy)=(2,2) => global_id=660
[DBG]  agent 28 t=2 => decoded (sx,sy)=(3,2) => global_id=692
[DBG]  agent 28 t=3 => decoded (sx,sy)=(4,2) => global_id=724
[DBG]  agent 28 t=4 => decoded (sx,sy)=(4,3) => global_id=725
[DBG]  agent 28 t=5 => decoded (sx,sy)=(4,4) => global_id=726
[DBG]  Complete path of agent 28:
[DBG]    Original: 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 629 628 627 659 691 692 724 725 726 727 
[DBG]    New:     661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 660 692 724 725 726 727 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 
[DBG]    Local path (in submap): 661 660 692 724 725 726 727 
[DBG]    Suffix (out of submap): 
[DBG]  Original agent path length 28 je: 46
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 0: 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 660, 692, 724, 725, 726, 727, 
[DBG]  Path for agent 28 updated, resulting length: 38
[DBG]  Update the agent path 45 | Original local length: 3 | New local length: 3
[DBG]  agent 45 t=0 => decoded (sx,sy)=(2,2) => global_id=660
[DBG]  agent 45 t=1 => decoded (sx,sy)=(3,2) => global_id=692
[DBG]  agent 45 t=2 => decoded (sx,sy)=(4,2) => global_id=724
[DBG]  Complete path of agent 45:
[DBG]    Original: 153 154 154 154 154 154 154 154 153 121 120 119 151 183 215 247 279 278 310 309 341 373 405 437 469 501 533 565 597 629 628 660 692 724 756 755 787 819 818 817 849 
[DBG]    New:     153 154 154 154 154 154 154 154 153 121 120 119 151 183 215 247 279 278 310 309 341 373 405 437 469 501 533 565 597 629 628 660 692 724 756 755 787 819 818 817 849 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 153 154 154 154 154 154 154 154 153 121 120 119 151 183 215 247 279 278 310 309 341 373 405 437 469 501 533 565 597 629 628 
[DBG]    Local path (in submap): 660 692 724 
[DBG]    Suffix (out of submap): 756 755 787 819 818 817 849 
[DBG]  Original agent path length 45 je: 41
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 1: 153, 154, 154, 154, 154, 154, 154, 154, 153, 121, 120, 119, 151, 183, 215, 247, 279, 278, 310, 309, 341, 373, 405, 437, 469, 501, 533, 565, 597, 629, 628, 660, 692, 724, 756, 755, 787, 819, 818, 817, 849, 
[DBG]  Path for agent 45 updated, resulting length: 41
[DBG]  Update the agent path 53 | Original local length: 2 | New local length: 2
[DBG]  agent 53 t=0 => decoded (sx,sy)=(3,2) => global_id=692
[DBG]  agent 53 t=1 => decoded (sx,sy)=(4,2) => global_id=724
[DBG]  Complete path of agent 53:
[DBG]    Original: 84 83 115 147 146 178 210 242 274 306 338 337 336 335 367 366 398 430 462 494 526 558 590 622 623 655 656 657 658 659 691 692 724 756 788 820 821 
[DBG]    New:     84 83 115 147 146 178 210 242 274 306 338 337 336 335 367 366 398 430 462 494 526 558 590 622 623 655 656 657 658 659 691 692 724 756 788 820 821 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 84 83 115 147 146 178 210 242 274 306 338 337 336 335 367 366 398 430 462 494 526 558 590 622 623 655 656 657 658 659 691 
[DBG]    Local path (in submap): 692 724 
[DBG]    Suffix (out of submap): 756 788 820 821 
[DBG]  Original agent path length 53 je: 37
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 2: 84, 83, 115, 147, 146, 178, 210, 242, 274, 306, 338, 337, 336, 335, 367, 366, 398, 430, 462, 494, 526, 558, 590, 622, 623, 655, 656, 657, 658, 659, 691, 692, 724, 756, 788, 820, 821, 
[DBG]  Path for agent 53 updated, resulting length: 37
[DBG]  Update the agent path 67 | Original local length: 1 | New local length: 1
[DBG]  agent 67 t=0 => decoded (sx,sy)=(0,3) => global_id=597
[DBG]  Complete path of agent 67:
[DBG]    Original: 773 773 773 773 774 774 775 775 775 776 776 744 712 713 714 715 683 684 685 653 654 655 656 656 656 657 658 659 627 628 596 597 565 566 534 502 470 470 438 439 407 408 409 377 378 379 380 348 349 
[DBG]    New:     773 773 773 773 774 774 775 775 775 776 776 744 712 713 714 715 683 684 685 653 654 655 656 656 656 657 658 659 627 628 596 597 565 566 534 502 470 470 438 439 407 408 409 377 378 379 380 348 349 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 773 773 773 773 774 774 775 775 775 776 776 744 712 713 714 715 683 684 685 653 654 655 656 656 656 657 658 659 627 628 596 
[DBG]    Local path (in submap): 597 
[DBG]    Suffix (out of submap): 565 566 534 502 470 470 438 439 407 408 409 377 378 379 380 348 349 
[DBG]  Original agent path length 67 je: 49
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 3: 773, 773, 773, 773, 774, 774, 775, 775, 775, 776, 776, 744, 712, 713, 714, 715, 683, 684, 685, 653, 654, 655, 656, 656, 656, 657, 658, 659, 627, 628, 596, 597, 565, 566, 534, 502, 470, 470, 438, 439, 407, 408, 409, 377, 378, 379, 380, 348, 349, 
[DBG]  Path for agent 67 updated, resulting length: 49
[DBG]  Update the agent path 148 | Original local length: 3 | New local length: 3
[DBG]  agent 148 t=0 => decoded (sx,sy)=(2,0) => global_id=658
[DBG]  agent 148 t=1 => decoded (sx,sy)=(2,1) => global_id=659
[DBG]  agent 148 t=2 => decoded (sx,sy)=(2,2) => global_id=660
[DBG]  Complete path of agent 148:
[DBG]    Original: 776 808 808 808 808 808 807 806 806 807 775 776 777 778 779 747 715 683 684 685 653 653 654 686 686 686 686 687 688 656 657 658 659 660 
[DBG]    New:     776 808 808 808 808 808 807 806 806 807 775 776 777 778 779 747 715 683 684 685 653 653 654 686 686 686 686 687 688 656 657 658 659 660 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 776 808 808 808 808 808 807 806 806 807 775 776 777 778 779 747 715 683 684 685 653 653 654 686 686 686 686 687 688 656 657 
[DBG]    Local path (in submap): 658 659 660 
[DBG]    Suffix (out of submap): 
[DBG]  Original agent path length 148 je: 34
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 4: 776, 808, 808, 808, 808, 808, 807, 806, 806, 807, 775, 776, 777, 778, 779, 747, 715, 683, 684, 685, 653, 653, 654, 686, 686, 686, 686, 687, 688, 656, 657, 658, 659, 660, 
[DBG]  Path for agent 148 updated, resulting length: 34
[DBG]  Paths successfully updated.
[DBG]  (LNS.cpp) New path for agent 28: 
[DBG]  661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 660, 692, 724, 725, 726, 727, 
[DBG]  (LNS.cpp) New path for agent 45: 
[DBG]  153, 154, 154, 154, 154, 154, 154, 154, 153, 121, 120, 119, 151, 183, 215, 247, 279, 278, 310, 309, 341, 373, 405, 437, 469, 501, 533, 565, 597, 629, 628, 660, 692, 724, 756, 755, 787, 819, 818, 817, 849, 
[DBG]  (LNS.cpp) New path for agent 53: 
[DBG]  84, 83, 115, 147, 146, 178, 210, 242, 274, 306, 338, 337, 336, 335, 367, 366, 398, 430, 462, 494, 526, 558, 590, 622, 623, 655, 656, 657, 658, 659, 691, 692, 724, 756, 788, 820, 821, 
[DBG]  (LNS.cpp) New path for agent 67: 
[DBG]  773, 773, 773, 773, 774, 774, 775, 775, 775, 776, 776, 744, 712, 713, 714, 715, 683, 684, 685, 653, 654, 655, 656, 656, 656, 657, 658, 659, 627, 628, 596, 597, 565, 566, 534, 502, 470, 470, 438, 439, 407, 408, 409, 377, 378, 379, 380, 348, 349, 
[DBG]  (LNS.cpp) New path for agent 148: 
[DBG]  776, 808, 808, 808, 808, 808, 807, 806, 806, 807, 775, 776, 777, 778, 779, 747, 715, 683, 684, 685, 653, 653, 654, 686, 686, 686, 686, 687, 688, 656, 657, 658, 659, 660, 
[DBG]  component_weights = {0.270847, 0.204121, 0.21346, 0.311572}
[DBG]  opSuccess value: 1
[STAT] neighbor.sum_of_costs before recomputation: 194
[STAT] neighbor.old_sum_of_costs before recomputation: 202
[STAT] sum_of_costs before recomputation: 4488
[DBG]  Validate solution immediately after SAT success.
[WARNING] Problem after SAT: Target conflict: agent 42 (len 40) traverses target of agent 28 (len 37) at location 727 at timestep 39
[DBG]  Attempting immediate repair via init_lns because problem occurred after SAT (should be applied only for conflicts...).
[DBG]  Passing 150 agents to init_lns (skip=true).
[DBG]  path_table contents for selected agents (neighbor.agents):
[DBG]    Agent 28 => controlling path length=38
[DBG]    Agent 45 => controlling path length=41
[DBG]    Agent 53 => controlling path length=37
[DBG]    Agent 67 => controlling path length=49
[DBG]    Agent 148 => controlling path length=34
[DBG]  hodnota skip_initial_solution=1
[DBG]  We skip initialSolution => call buildCollisionData()
[DBG]  buildCollisionData() called â€“ skip_initial_solution case.
[DBG]  Agents.size()=150, collision_graph.size()=150
[DBG]  agent 28 => updateCollidingPairs => foundCollision
[DBG]  agent 42 => updateCollidingPairs => foundCollision
[DBG]  Conflicting agent pairs:
[DBG]  agent 28 is in conflict with agent 42
[DBG]  buildCollisionData() => sum_of_costs=4480, num_of_colliding_pairs=1
[DBG]  buildCollisionData done => sum_of_costs=4480, num_of_colliding_pairs=1
[DBG]  sum_of_cost hodnota: 4480
[DBG]  After skip/init build => iteration_stats.back(): sum_of_costs=4480, collisions=1
[DEBUG] Using default neighbor generation strategy for conflicts: 0
	InitLNS(PP): runtime = 0.00555104, iterations = 2, colliding pairs = 0, initial colliding pairs = 1, solution cost = 4479, initial solution cost = 4480, failed iterations = 0
[DBG]  init_lns->sum_of_costs after init_lns->run: 4479
[DBG]  sum_of_costs after assignment from init_lns->run: 4479
[DBG]  Recomputing sum_of_cost by dividing neighbor.sum_of_costs and neighbor.old_sum_of_costs
[STAT] sum_of_costs after recomputation: 4479
[STAT] Iteration 37
[DBG]  Using SAT operator (destroy+repair SAT).
[DBG]  ====================
[DBG]  SAT destroy operator called.
[DBG]  SAT heuristic: 2
[DBG]  key_agent_id: 66
[DBG]  key_agent_id global path length: 29
[DBG]  Submap content (global positions):
[DBG]  236 237 238 239 240 
[DBG]  268 269 270 271 272 
[DBG]  300 301 302 303 304 
[DBG]  332 333 334 335 336 
[DBG]  364 365 366 367 368 
[DBG]  Map content with agents and obstacles:
[DBG]  . A . . . 
[DBG]  . A . A X 
[DBG]  . A A . . 
[DBG]  X . X . A 
[DBG]  X . . A A 
[DBG]  content of the map structure that we pass to the SAT solver:
[DBG]  1  1  1  1  1  
[DBG]  1  1  1  1  -1  
[DBG]  1  1  1  1  1  
[DBG]  -1  1  -1  1  1  
[DBG]  -1  1  1  1  1  
[DBG]  Identifying agents in a submap for rescheduling (when key_agent is there at the time 14):
[DBG]  Agent 5 found intervals in the sub-map:
[DBG]   [14..21]
[DBG]  Agent 5 (interval in submap: [14..21]) contains time 14, added to replan.
[DBG]  Agent 22 found intervals in the sub-map:
[DBG]   [12..22]
[DBG]  Agent 22 (interval in submap: [12..22]) contains time 14, added to replan.
[DBG]  Agent 53 found intervals in the sub-map:
[DBG]   [12..15]
[DBG]  Agent 53 (interval in submap: [12..15]) contains time 14, added to replan.
[DBG]  Agent 66 found intervals in the sub-map:
[DBG]   [10..17]
[DBG]  Agent 66 (interval in submap: [10..17]) contains time 14, added to replan.
[DBG]  Agent 82 found intervals in the sub-map:
[DBG]   [14..22]
[DBG]  Agent 82 (interval in submap: [14..22]) contains time 14, added to replan.
[DBG]  Agent 83 found intervals in the sub-map:
[DBG]   [10..17]
[DBG]  Agent 83 (interval in submap: [10..17]) contains time 14, added to replan.
[DBG]  Agent 112 found intervals in the sub-map:
[DBG]   [3..25]
[DBG]  Agent 112 (interval in submap: [3..25]) contains time 14, added to replan.
[DBG]  Agent 115 found intervals in the sub-map:
[DBG]   [23..30]
[DBG]  Agent 115 is not in sub-map at time 14 (intervals: 
[DBG]  [23..30] )
[DBG]  Agent 121 found intervals in the sub-map:
[DBG]   [4..16]
[DBG]  Agent 121 (interval in submap: [4..16]) contains time 14, added to replan.
[DBG]  Agent 145 found intervals in the sub-map:
[DBG]   [0..11]
[DBG]  Agent 145 is not in sub-map at time 14 (intervals: 
[DBG]  [0..11] )
[DBG]  Agent 5 | Start (global): 336 -> (local): (3, 4) at time 14 | Goal (global): 300 -> (local): (2, 0) at time 21
[DBG]  Agent 22 | Start (global): 269 -> (local): (1, 1) at time 14 | Goal (global): 336 -> (local): (3, 4) at time 22
[DBG]  Agent 53 | Start (global): 367 -> (local): (4, 3) at time 14 | Goal (global): 366 -> (local): (4, 2) at time 15
[DBG]  Agent 66 | Start (global): 302 -> (local): (2, 2) at time 14 | Goal (global): 336 -> (local): (3, 4) at time 17
[DBG]  Agent 82 | Start (global): 237 -> (local): (0, 1) at time 14 | Goal (global): 366 -> (local): (4, 2) at time 22
[DBG]  Agent 83 | Start (global): 301 -> (local): (2, 1) at time 14 | Goal (global): 366 -> (local): (4, 2) at time 17
[DBG]  Agent 112 | Start (global): 271 -> (local): (1, 3) at time 14 | Goal (global): 236 -> (local): (0, 0) at time 25
[DBG]  Agent 121 | Start (global): 368 -> (local): (4, 4) at time 14 | Goal (global): 366 -> (local): (4, 2) at time 16
[DBG]  [REPAIR] SAT destroy operator called.
[DBG]  [REPAIR] SAT operator â€“ launching subproblem FOR OPTIMIZATION.
[DBG]  Creating local paths (sx, sy) in the submap for T_sync = 14
[DBG]    Agent 5 (global paths from T=14 to 21) has local path: (3,4) (3,3) (2,3) (2,2) (2,2) (2,2) (2,1) (2,0) 
[DBG]    Agent 22 (global paths from T=14 to 22) has local path: (1,1) (1,2) (1,3) (1,3) (1,3) (2,3) (2,4) (2,4) (3,4) 
[DBG]    Agent 53 (global paths from T=14 to 15) has local path: (4,3) (4,2) 
[DBG]    Agent 66 (global paths from T=14 to 17) has local path: (2,2) (2,3) (2,4) (3,4) 
[DBG]    Agent 82 (global paths from T=14 to 22) has local path: (0,1) (0,0) (1,0) (2,0) (2,0) (2,1) (3,1) (4,1) (4,2) 
[DBG]    Agent 83 (global paths from T=14 to 17) has local path: (2,1) (3,1) (4,1) (4,2) 
[DBG]    Agent 112 (global paths from T=14 to 25) has local path: (1,3) (0,3) (0,3) (0,3) (0,3) (1,3) (1,2) (2,2) (1,2) (1,1) (1,0) (0,0) 
[DBG]    Agent 121 (global paths from T=14 to 16) has local path: (4,4) (4,3) (4,2) 
[DBG]  Checking input data for SAT solver:
[DBG]    - Number of agents to replan: 8
[DBG]  Agent 5 has the original local path length: 8 => Start (3,4), Goal (2,0)
[DBG]  Agent 22 has the original local path length: 9 => Start (1,1), Goal (3,4)
[DBG]  Agent 53 has the original local path length: 2 => Start (4,3), Goal (4,2)
[DBG]  Agent 66 has the original local path length: 4 => Start (2,2), Goal (3,4)
[DBG]  Agent 82 has the original local path length: 9 => Start (0,1), Goal (4,2)
[DBG]  Agent 83 has the original local path length: 4 => Start (2,1), Goal (4,2)
[DBG]  Agent 112 has the original local path length: 12 => Start (1,3), Goal (0,0)
[DBG]  Agent 121 has the original local path length: 3 => Start (4,4), Goal (4,2)
[DBG]  Start position: (3, 4), (1, 1), (4, 3), (2, 2), (0, 1), (2, 1), (1, 3), (4, 4), 
[DBG]  Goal position: (2, 0), (3, 4), (4, 2), (3, 4), (4, 2), (4, 2), (0, 0), (4, 2), 
[DBG]  SAT instance and solver created.
Currently solving
Instance name: scen
Map name: map
Encoding used: disappear_at_goal
SAT solver used: Kissat
Optimizing function: sum of costs
Number of agents: 8
Mks LB: 6
SoC LB: 36
Delta: 0
Remaining time: 300000 [ms]

Vertex conflict! Agents 2, 3, timestep 4, location 0
Swapping conflict! Agents 2, 3, timestep 4, edge (0,0)
Vertex conflict! Agents 2, 3, timestep 5, location 0
Vertex conflict! Agents 2, 5, timestep 4, location 0
Swapping conflict! Agents 2, 5, timestep 4, edge (0,0)
Vertex conflict! Agents 2, 5, timestep 5, location 0
Vertex conflict! Agents 2, 6, timestep 4, location 0
Swapping conflict! Agents 2, 6, timestep 4, edge (0,0)
Vertex conflict! Agents 2, 6, timestep 5, location 0
Vertex conflict! Agents 2, 7, timestep 3, location 0
Swapping conflict! Agents 2, 7, timestep 3, edge (0,0)
Vertex conflict! Agents 2, 7, timestep 4, location 0
Swapping conflict! Agents 2, 7, timestep 4, edge (0,0)
Vertex conflict! Agents 2, 7, timestep 5, location 0
Vertex conflict! Agents 3, 5, timestep 4, location 0
Swapping conflict! Agents 3, 5, timestep 4, edge (0,0)
Vertex conflict! Agents 3, 5, timestep 5, location 0
Vertex conflict! Agents 3, 6, timestep 4, location 0
Swapping conflict! Agents 3, 6, timestep 4, edge (0,0)
Vertex conflict! Agents 3, 6, timestep 5, location 0
Vertex conflict! Agents 3, 7, timestep 4, location 0
Swapping conflict! Agents 3, 7, timestep 4, edge (0,0)
Vertex conflict! Agents 3, 7, timestep 5, location 0
Vertex conflict! Agents 5, 6, timestep 4, location 0
Swapping conflict! Agents 5, 6, timestep 4, edge (0,0)
Vertex conflict! Agents 5, 6, timestep 5, location 0
Vertex conflict! Agents 5, 7, timestep 4, location 0
Swapping conflict! Agents 5, 7, timestep 4, edge (0,0)
Vertex conflict! Agents 5, 7, timestep 5, location 0
Vertex conflict! Agents 6, 7, timestep 4, location 0
Swapping conflict! Agents 6, 7, timestep 4, edge (0,0)
Vertex conflict! Agents 6, 7, timestep 5, location 0
Found plan [agents = 8] [timesteps = 6]
Agent #0 : 16 15 12 11 10 9 
Agent #1 : 6 7 8 12 15 16 
Agent #2 : 19 18 0 0 0 0 
Agent #3 : 11 12 13 16 0 0 
Agent #4 : 1 6 10 14 17 18 
Agent #5 : 10 14 17 18 0 0 
Agent #6 : 8 3 2 1 0 0 
Agent #7 : 20 19 18 0 0 0 

[STAT] Solver returned: 0
[DBG]  Agent (index) 5 | New local path (submap idx):
[DBG]  16 15 12 11 10 9 
[DBG]  Agent (index) 22 | New local path (submap idx):
[DBG]  6 7 8 12 15 16 
[DBG]  Agent (index) 53 | New local path (submap idx):
[DBG]  19 18 
[DBG]  Agent (index) 66 | New local path (submap idx):
[DBG]  11 12 13 16 
[DBG]  Agent (index) 82 | New local path (submap idx):
[DBG]  1 6 10 14 17 18 
[DBG]  Agent (index) 83 | New local path (submap idx):
[DBG]  10 14 17 18 
[DBG]  Agent (index) 112 | New local path (submap idx):
[DBG]  8 3 2 1 0 
[DBG]  Agent (index) 121 | New local path (submap idx):
[DBG]  20 19 18 
[DBG]  Update the agent path 5 | Original local length: 8 | New local length: 6
[DBG]  agent 5 t=0 => decoded (sx,sy)=(3,4) => global_id=336
[DBG]  agent 5 t=1 => decoded (sx,sy)=(3,3) => global_id=335
[DBG]  agent 5 t=2 => decoded (sx,sy)=(2,3) => global_id=303
[DBG]  agent 5 t=3 => decoded (sx,sy)=(2,2) => global_id=302
[DBG]  agent 5 t=4 => decoded (sx,sy)=(2,1) => global_id=301
[DBG]  agent 5 t=5 => decoded (sx,sy)=(2,0) => global_id=300
[DBG]  Complete path of agent 5:
[DBG]    Original: 281 313 345 344 343 311 310 309 341 340 339 338 337 337 336 335 303 302 302 302 301 300 299 298 297 296 295 294 293 261 
[DBG]    New:     281 313 345 344 343 311 310 309 341 340 339 338 337 337 336 335 303 302 301 300 299 298 297 296 295 294 293 261 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 281 313 345 344 343 311 310 309 341 340 339 338 337 337 
[DBG]    Local path (in submap): 336 335 303 302 301 300 299 298 
[DBG]    Suffix (out of submap): 297 296 295 294 293 261 
[DBG]  Original agent path length 5 je: 30
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 0: 281, 313, 345, 344, 343, 311, 310, 309, 341, 340, 339, 338, 337, 337, 336, 335, 303, 302, 301, 300, 299, 298, 297, 296, 295, 294, 293, 261, 
[DBG]  Path for agent 5 updated, resulting length: 28
[DBG]  Update the agent path 22 | Original local length: 9 | New local length: 6
[DBG]  agent 22 t=0 => decoded (sx,sy)=(1,1) => global_id=269
[DBG]  agent 22 t=1 => decoded (sx,sy)=(1,2) => global_id=270
[DBG]  agent 22 t=2 => decoded (sx,sy)=(1,3) => global_id=271
[DBG]  agent 22 t=3 => decoded (sx,sy)=(2,3) => global_id=303
[DBG]  agent 22 t=4 => decoded (sx,sy)=(3,3) => global_id=335
[DBG]  agent 22 t=5 => decoded (sx,sy)=(3,4) => global_id=336
[DBG]  Complete path of agent 22:
[DBG]    Original: 329 329 361 362 363 331 299 267 235 235 235 235 236 237 269 270 271 271 271 303 304 304 336 337 338 339 
[DBG]    New:     329 329 361 362 363 331 299 267 235 235 235 235 236 237 269 270 271 303 335 336 337 338 339 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 329 329 361 362 363 331 299 267 235 235 235 235 236 237 
[DBG]    Local path (in submap): 269 270 271 303 335 336 337 338 339 
[DBG]    Suffix (out of submap): 
[DBG]  Original agent path length 22 je: 26
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 1: 329, 329, 361, 362, 363, 331, 299, 267, 235, 235, 235, 235, 236, 237, 269, 270, 271, 303, 335, 336, 337, 338, 339, 
[DBG]  Path for agent 22 updated, resulting length: 23
[DBG]  Update the agent path 53 | Original local length: 2 | New local length: 2
[DBG]  agent 53 t=0 => decoded (sx,sy)=(4,3) => global_id=367
[DBG]  agent 53 t=1 => decoded (sx,sy)=(4,2) => global_id=366
[DBG]  Complete path of agent 53:
[DBG]    Original: 84 83 115 147 146 178 210 242 274 306 338 337 336 335 367 366 398 430 462 494 526 558 590 622 623 655 656 657 658 659 691 692 724 756 788 820 821 
[DBG]    New:     84 83 115 147 146 178 210 242 274 306 338 337 336 335 367 366 398 430 462 494 526 558 590 622 623 655 656 657 658 659 691 692 724 756 788 820 821 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 84 83 115 147 146 178 210 242 274 306 338 337 336 335 
[DBG]    Local path (in submap): 367 366 
[DBG]    Suffix (out of submap): 398 430 462 494 526 558 590 622 623 655 656 657 658 659 691 692 724 756 788 820 821 
[DBG]  Original agent path length 53 je: 37
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 2: 84, 83, 115, 147, 146, 178, 210, 242, 274, 306, 338, 337, 336, 335, 367, 366, 398, 430, 462, 494, 526, 558, 590, 622, 623, 655, 656, 657, 658, 659, 691, 692, 724, 756, 788, 820, 821, 
[DBG]  Path for agent 53 updated, resulting length: 37
[DBG]  Update the agent path 66 | Original local length: 4 | New local length: 4
[DBG]  agent 66 t=0 => decoded (sx,sy)=(2,2) => global_id=302
[DBG]  agent 66 t=1 => decoded (sx,sy)=(2,3) => global_id=303
[DBG]  agent 66 t=2 => decoded (sx,sy)=(2,4) => global_id=304
[DBG]  agent 66 t=3 => decoded (sx,sy)=(3,4) => global_id=336
[DBG]  Complete path of agent 66:
[DBG]    Original: 134 135 136 137 138 139 140 172 204 205 237 269 270 270 302 303 304 336 337 337 338 339 340 308 309 277 278 278 279 
[DBG]    New:     134 135 136 137 138 139 140 172 204 205 237 269 270 270 302 303 304 336 337 337 338 339 340 308 309 277 278 278 279 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 134 135 136 137 138 139 140 172 204 205 237 269 270 270 
[DBG]    Local path (in submap): 302 303 304 336 
[DBG]    Suffix (out of submap): 337 337 338 339 340 308 309 277 278 278 279 
[DBG]  Original agent path length 66 je: 29
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 3: 134, 135, 136, 137, 138, 139, 140, 172, 204, 205, 237, 269, 270, 270, 302, 303, 304, 336, 337, 337, 338, 339, 340, 308, 309, 277, 278, 278, 279, 
[DBG]  Path for agent 66 updated, resulting length: 29
[DBG]  Update the agent path 82 | Original local length: 9 | New local length: 6
[DBG]  agent 82 t=0 => decoded (sx,sy)=(0,1) => global_id=237
[DBG]  agent 82 t=1 => decoded (sx,sy)=(1,1) => global_id=269
[DBG]  agent 82 t=2 => decoded (sx,sy)=(2,1) => global_id=301
[DBG]  agent 82 t=3 => decoded (sx,sy)=(3,1) => global_id=333
[DBG]  agent 82 t=4 => decoded (sx,sy)=(4,1) => global_id=365
[DBG]  agent 82 t=5 => decoded (sx,sy)=(4,2) => global_id=366
[DBG]  Complete path of agent 82:
[DBG]    Original: 75 43 42 41 73 105 106 138 139 140 141 173 205 205 237 236 268 300 300 301 333 365 366 398 
[DBG]    New:     75 43 42 41 73 105 106 138 139 140 141 173 205 205 237 269 301 333 365 366 398 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 75 43 42 41 73 105 106 138 139 140 141 173 205 205 
[DBG]    Local path (in submap): 237 269 301 333 365 366 398 
[DBG]    Suffix (out of submap): 
[DBG]  Original agent path length 82 je: 24
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 4: 75, 43, 42, 41, 73, 105, 106, 138, 139, 140, 141, 173, 205, 205, 237, 269, 301, 333, 365, 366, 398, 
[DBG]  Path for agent 82 updated, resulting length: 21
[DBG]  Update the agent path 83 | Original local length: 4 | New local length: 4
[DBG]  agent 83 t=0 => decoded (sx,sy)=(2,1) => global_id=301
[DBG]  agent 83 t=1 => decoded (sx,sy)=(3,1) => global_id=333
[DBG]  agent 83 t=2 => decoded (sx,sy)=(4,1) => global_id=365
[DBG]  agent 83 t=3 => decoded (sx,sy)=(4,2) => global_id=366
[DBG]  Complete path of agent 83:
[DBG]    Original: 18 50 82 81 113 112 144 176 208 207 239 271 303 302 301 333 365 366 398 430 462 462 494 526 558 590 591 623 655 687 719 751 783 815 847 848 880 912 944 976 977 1009 
[DBG]    New:     18 50 82 81 113 112 144 176 208 207 239 271 303 302 301 333 365 366 398 430 462 462 494 526 558 590 591 623 655 687 719 751 783 815 847 848 880 912 944 976 977 1009 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 18 50 82 81 113 112 144 176 208 207 239 271 303 302 
[DBG]    Local path (in submap): 301 333 365 366 
[DBG]    Suffix (out of submap): 398 430 462 462 494 526 558 590 591 623 655 687 719 751 783 815 847 848 880 912 944 976 977 1009 
[DBG]  Original agent path length 83 je: 42
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 5: 18, 50, 82, 81, 113, 112, 144, 176, 208, 207, 239, 271, 303, 302, 301, 333, 365, 366, 398, 430, 462, 462, 494, 526, 558, 590, 591, 623, 655, 687, 719, 751, 783, 815, 847, 848, 880, 912, 944, 976, 977, 1009, 
[DBG]  Path for agent 83 updated, resulting length: 42
[DBG]  Update the agent path 112 | Original local length: 12 | New local length: 5
[DBG]  agent 112 t=0 => decoded (sx,sy)=(1,3) => global_id=271
[DBG]  agent 112 t=1 => decoded (sx,sy)=(0,3) => global_id=239
[DBG]  agent 112 t=2 => decoded (sx,sy)=(0,2) => global_id=238
[DBG]  agent 112 t=3 => decoded (sx,sy)=(0,1) => global_id=237
[DBG]  agent 112 t=4 => decoded (sx,sy)=(0,0) => global_id=236
[DBG]  Complete path of agent 112:
[DBG]    Original: 337 337 337 336 336 336 336 335 335 335 335 335 335 303 271 239 239 239 239 271 270 302 270 269 268 236 235 234 266 298 297 296 328 360 359 391 423 455 454 486 485 517 549 581 613 645 644 676 675 
[DBG]    New:     337 337 337 336 336 336 336 335 335 335 335 335 335 303 271 239 238 237 236 235 234 266 298 297 296 328 360 359 391 423 455 454 486 485 517 549 581 613 645 644 676 675 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 337 337 337 336 336 336 336 335 335 335 335 335 335 303 
[DBG]    Local path (in submap): 271 239 238 237 236 235 234 266 298 297 296 328 
[DBG]    Suffix (out of submap): 360 359 391 423 455 454 486 485 517 549 581 613 645 644 676 675 
[DBG]  Original agent path length 112 je: 49
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 6: 337, 337, 337, 336, 336, 336, 336, 335, 335, 335, 335, 335, 335, 303, 271, 239, 238, 237, 236, 235, 234, 266, 298, 297, 296, 328, 360, 359, 391, 423, 455, 454, 486, 485, 517, 549, 581, 613, 645, 644, 676, 675, 
[DBG]  Path for agent 112 updated, resulting length: 42
[DBG]  Update the agent path 121 | Original local length: 3 | New local length: 3
[DBG]  agent 121 t=0 => decoded (sx,sy)=(4,4) => global_id=368
[DBG]  agent 121 t=1 => decoded (sx,sy)=(4,3) => global_id=367
[DBG]  agent 121 t=2 => decoded (sx,sy)=(4,2) => global_id=366
[DBG]  Complete path of agent 121:
[DBG]    Original: 401 401 400 400 368 368 368 368 368 368 368 368 368 368 368 367 366 398 430 462 494 526 525 524 556 555 
[DBG]    New:     401 401 400 400 368 368 368 368 368 368 368 368 368 368 368 367 366 398 430 462 494 526 525 524 556 555 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 401 401 400 400 368 368 368 368 368 368 368 368 368 368 
[DBG]    Local path (in submap): 368 367 366 
[DBG]    Suffix (out of submap): 398 430 462 494 526 525 524 556 555 
[DBG]  Original agent path length 121 je: 26
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 7: 401, 401, 400, 400, 368, 368, 368, 368, 368, 368, 368, 368, 368, 368, 368, 367, 366, 398, 430, 462, 494, 526, 525, 524, 556, 555, 
[DBG]  Path for agent 121 updated, resulting length: 26
[DBG]  Paths successfully updated.
[DBG]  (LNS.cpp) New path for agent 5: 
[DBG]  281, 313, 345, 344, 343, 311, 310, 309, 341, 340, 339, 338, 337, 337, 336, 335, 303, 302, 301, 300, 299, 298, 297, 296, 295, 294, 293, 261, 
[DBG]  (LNS.cpp) New path for agent 22: 
[DBG]  329, 329, 361, 362, 363, 331, 299, 267, 235, 235, 235, 235, 236, 237, 269, 270, 271, 303, 335, 336, 337, 338, 339, 
[DBG]  (LNS.cpp) New path for agent 53: 
[DBG]  84, 83, 115, 147, 146, 178, 210, 242, 274, 306, 338, 337, 336, 335, 367, 366, 398, 430, 462, 494, 526, 558, 590, 622, 623, 655, 656, 657, 658, 659, 691, 692, 724, 756, 788, 820, 821, 
[DBG]  (LNS.cpp) New path for agent 66: 
[DBG]  134, 135, 136, 137, 138, 139, 140, 172, 204, 205, 237, 269, 270, 270, 302, 303, 304, 336, 337, 337, 338, 339, 340, 308, 309, 277, 278, 278, 279, 
[DBG]  (LNS.cpp) New path for agent 82: 
[DBG]  75, 43, 42, 41, 73, 105, 106, 138, 139, 140, 141, 173, 205, 205, 237, 269, 301, 333, 365, 366, 398, 
[DBG]  (LNS.cpp) New path for agent 83: 
[DBG]  18, 50, 82, 81, 113, 112, 144, 176, 208, 207, 239, 271, 303, 302, 301, 333, 365, 366, 398, 430, 462, 462, 494, 526, 558, 590, 591, 623, 655, 687, 719, 751, 783, 815, 847, 848, 880, 912, 944, 976, 977, 1009, 
[DBG]  (LNS.cpp) New path for agent 112: 
[DBG]  337, 337, 337, 336, 336, 336, 336, 335, 335, 335, 335, 335, 335, 303, 271, 239, 238, 237, 236, 235, 234, 266, 298, 297, 296, 328, 360, 359, 391, 423, 455, 454, 486, 485, 517, 549, 581, 613, 645, 644, 676, 675, 
[DBG]  (LNS.cpp) New path for agent 121: 
[DBG]  401, 401, 400, 400, 368, 368, 368, 368, 368, 368, 368, 368, 368, 368, 368, 367, 366, 398, 430, 462, 494, 526, 525, 524, 556, 555, 
[DBG]  component_weights = {0.269085, 0.202794, 0.212072, 0.316049}
[DBG]  opSuccess value: 1
[STAT] neighbor.sum_of_costs before recomputation: 240
[STAT] neighbor.old_sum_of_costs before recomputation: 255
[STAT] sum_of_costs before recomputation: 4479
[DBG]  Validate solution immediately after SAT success.
[WARNING] Problem after SAT: Vertex conflict between agents 5 and 69 at location 301 at timestep 18
[DBG]  Attempting immediate repair via init_lns because problem occurred after SAT (should be applied only for conflicts...).
[DBG]  Passing 150 agents to init_lns (skip=true).
[DBG]  path_table contents for selected agents (neighbor.agents):
[DBG]    Agent 5 => controlling path length=28
[DBG]    Agent 22 => controlling path length=23
[DBG]    Agent 53 => controlling path length=37
[DBG]    Agent 66 => controlling path length=29
[DBG]    Agent 82 => controlling path length=21
[DBG]    Agent 83 => controlling path length=42
[DBG]    Agent 112 => controlling path length=42
[DBG]    Agent 121 => controlling path length=26
[DBG]  hodnota skip_initial_solution=1
[DBG]  We skip initialSolution => call buildCollisionData()
[DBG]  buildCollisionData() called â€“ skip_initial_solution case.
[DBG]  Agents.size()=150, collision_graph.size()=150
[DBG]  agent 5 => updateCollidingPairs => foundCollision
[DBG]  agent 13 => updateCollidingPairs => foundCollision
[DBG]  agent 16 => updateCollidingPairs => foundCollision
[DBG]  agent 22 => updateCollidingPairs => foundCollision
[DBG]  agent 23 => updateCollidingPairs => foundCollision
[DBG]  agent 29 => updateCollidingPairs => foundCollision
[DBG]  agent 43 => updateCollidingPairs => foundCollision
[DBG]  agent 69 => updateCollidingPairs => foundCollision
[DBG]  agent 76 => updateCollidingPairs => foundCollision
[DBG]  agent 82 => updateCollidingPairs => foundCollision
[DBG]  agent 84 => updateCollidingPairs => foundCollision
[DBG]  agent 88 => updateCollidingPairs => foundCollision
[DBG]  agent 112 => updateCollidingPairs => foundCollision
[DBG]  agent 115 => updateCollidingPairs => foundCollision
[DBG]  agent 116 => updateCollidingPairs => foundCollision
[DBG]  agent 122 => updateCollidingPairs => foundCollision
[DBG]  agent 146 => updateCollidingPairs => foundCollision
[DBG]  Conflicting agent pairs:
[DBG]  agent 5 is in conflict with agent 69
[DBG]  agent 5 is in conflict with agent 116
[DBG]  agent 5 is in conflict with agent 122
[DBG]  agent 13 is in conflict with agent 112
[DBG]  agent 16 is in conflict with agent 22
[DBG]  agent 22 is in conflict with agent 29
[DBG]  agent 22 is in conflict with agent 84
[DBG]  agent 22 is in conflict with agent 88
[DBG]  agent 23 is in conflict with agent 112
[DBG]  agent 43 is in conflict with agent 112
[DBG]  agent 69 is in conflict with agent 82
[DBG]  agent 76 is in conflict with agent 112
[DBG]  agent 112 is in conflict with agent 115
[DBG]  agent 112 is in conflict with agent 146
[DBG]  buildCollisionData() => sum_of_costs=4464, num_of_colliding_pairs=14
[DBG]  buildCollisionData done => sum_of_costs=4464, num_of_colliding_pairs=14
[DBG]  sum_of_cost hodnota: 4464
[DBG]  After skip/init build => iteration_stats.back(): sum_of_costs=4464, collisions=14
[DEBUG] Using default neighbor generation strategy for conflicts: 1
[DEBUG] Using default neighbor generation strategy for conflicts: 0
[DEBUG] Using default neighbor generation strategy for conflicts: 0
	InitLNS(PP): runtime = 0.0126059, iterations = 4, colliding pairs = 0, initial colliding pairs = 14, solution cost = 4465, initial solution cost = 4464, failed iterations = 0
[DBG]  init_lns->sum_of_costs after init_lns->run: 4465
[DBG]  sum_of_costs after assignment from init_lns->run: 4465
[DBG]  Recomputing sum_of_cost by dividing neighbor.sum_of_costs and neighbor.old_sum_of_costs
[STAT] sum_of_costs after recomputation: 4465
[STAT] Iteration 38
[DBG]  Using SAT operator (destroy+repair SAT).
[DBG]  ====================
[DBG]  SAT destroy operator called.
[DBG]  SAT heuristic: 2
[DBG]  key_agent_id: 93
[DBG]  key_agent_id global path length: 18
[DBG]  Submap content (global positions):
[DBG]  391 392 393 394 395 
[DBG]  423 424 425 426 427 
[DBG]  455 456 457 458 459 
[DBG]  487 488 489 490 491 
[DBG]  519 520 521 522 523 
[DBG]  Map content with agents and obstacles:
[DBG]  . X . X . 
[DBG]  . . A . . 
[DBG]  . . A . . 
[DBG]  . X . . . 
[DBG]  . . . . . 
[DBG]  content of the map structure that we pass to the SAT solver:
[DBG]  1  -1  1  -1  1  
[DBG]  1  1  1  1  1  
[DBG]  1  1  1  1  1  
[DBG]  1  -1  1  1  1  
[DBG]  1  1  1  1  1  
[DBG]  Identifying agents in a submap for rescheduling (when key_agent is there at the time 3):
[DBG]  Agent 16 found intervals in the sub-map:
[DBG]   [8..12]
[DBG]  Agent 16 is not in sub-map at time 3 (intervals: 
[DBG]  [8..12] )
[DBG]  Agent 93 found intervals in the sub-map:
[DBG]   [0..7]
[DBG]  Agent 93 (interval in submap: [0..7]) contains time 3, added to replan.
[DBG]  Agent 127 found intervals in the sub-map:
[DBG]   [1..4]
[DBG]  Agent 127 (interval in submap: [1..4]) contains time 3, added to replan.
[DBG]  Agent 93 | Start (global): 457 -> (local): (2, 2) at time 3 | Goal (global): 523 -> (local): (4, 4) at time 7
[DBG]  Agent 127 | Start (global): 425 -> (local): (1, 2) at time 3 | Goal (global): 393 -> (local): (0, 2) at time 4
[DBG]  [REPAIR] SAT destroy operator called.
[DBG]  [REPAIR] SAT operator â€“ launching subproblem FOR OPTIMIZATION.
[DBG]  Creating local paths (sx, sy) in the submap for T_sync = 3
[DBG]    Agent 93 (global paths from T=3 to 7) has local path: (2,2) (3,2) (3,3) (3,4) (4,4) 
[DBG]    Agent 127 (global paths from T=3 to 4) has local path: (1,2) (0,2) 
[DBG]  Checking input data for SAT solver:
[DBG]    - Number of agents to replan: 2
[DBG]  Agent 93 has the original local path length: 5 => Start (2,2), Goal (4,4)
[DBG]  Agent 127 has the original local path length: 2 => Start (1,2), Goal (0,2)
[DBG]  Start position: (2, 2), (1, 2), 
[DBG]  Goal position: (4, 4), (0, 2), 
[DBG]  SAT instance and solver created.
Currently solving
Instance name: scen
Map name: map
Encoding used: disappear_at_goal
SAT solver used: Kissat
Optimizing function: sum of costs
Number of agents: 2
Mks LB: 5
SoC LB: 7
Delta: 0
Remaining time: 300000 [ms]

Found plan [agents = 2] [timesteps = 5]
Agent #0 : 10 14 19 20 21 
Agent #1 : 5 1 0 0 0 

[STAT] Solver returned: 0
[DBG]  Agent (index) 93 | New local path (submap idx):
[DBG]  10 14 19 20 21 
[DBG]  Agent (index) 127 | New local path (submap idx):
[DBG]  5 1 
[DBG]  Update the agent path 93 | Original local length: 5 | New local length: 5
[DBG]  agent 93 t=0 => decoded (sx,sy)=(2,2) => global_id=457
[DBG]  agent 93 t=1 => decoded (sx,sy)=(3,2) => global_id=489
[DBG]  agent 93 t=2 => decoded (sx,sy)=(4,2) => global_id=521
[DBG]  agent 93 t=3 => decoded (sx,sy)=(4,3) => global_id=522
[DBG]  agent 93 t=4 => decoded (sx,sy)=(4,4) => global_id=523
[DBG]  Complete path of agent 93:
[DBG]    Original: 423 424 425 457 489 490 491 523 524 556 588 589 590 591 623 591 592 560 
[DBG]    New:     423 424 425 457 489 521 522 523 524 556 588 589 590 591 623 591 592 560 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 423 424 425 
[DBG]    Local path (in submap): 457 489 521 522 523 
[DBG]    Suffix (out of submap): 524 556 588 589 590 591 623 591 592 560 
[DBG]  Original agent path length 93 je: 18
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 0: 423, 424, 425, 457, 489, 521, 522, 523, 524, 556, 588, 589, 590, 591, 623, 591, 592, 560, 
[DBG]  Path for agent 93 updated, resulting length: 18
[DBG]  Update the agent path 127 | Original local length: 2 | New local length: 2
[DBG]  agent 127 t=0 => decoded (sx,sy)=(1,2) => global_id=425
[DBG]  agent 127 t=1 => decoded (sx,sy)=(0,2) => global_id=393
[DBG]  Complete path of agent 127:
[DBG]    Original: 428 427 426 425 393 361 360 328 328 296 264 232 200 168 136 104 105 73 
[DBG]    New:     428 427 426 425 393 361 360 328 328 296 264 232 200 168 136 104 105 73 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 428 427 426 
[DBG]    Local path (in submap): 425 393 
[DBG]    Suffix (out of submap): 361 360 328 328 296 264 232 200 168 136 104 105 73 
[DBG]  Original agent path length 127 je: 18
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 1: 428, 427, 426, 425, 393, 361, 360, 328, 328, 296, 264, 232, 200, 168, 136, 104, 105, 73, 
[DBG]  Path for agent 127 updated, resulting length: 18
[DBG]  Paths successfully updated.
[DBG]  (LNS.cpp) New path for agent 93: 
[DBG]  423, 424, 425, 457, 489, 521, 522, 523, 524, 556, 588, 589, 590, 591, 623, 591, 592, 560, 
[DBG]  (LNS.cpp) New path for agent 127: 
[DBG]  428, 427, 426, 425, 393, 361, 360, 328, 328, 296, 264, 232, 200, 168, 136, 104, 105, 73, 
[DBG]  component_weights = {0.273077, 0.201686, 0.210913, 0.314323}
[DBG]  opSuccess value: 1
[STAT] neighbor.sum_of_costs before recomputation: 34
[STAT] neighbor.old_sum_of_costs before recomputation: 34
[STAT] sum_of_costs before recomputation: 4465
[DBG]  Validate solution immediately after SAT success.
[DBG]  No problems after SAT replan.
[DBG]  Recomputing sum_of_cost by dividing neighbor.sum_of_costs and neighbor.old_sum_of_costs
[STAT] sum_of_costs after recomputation: 4465
[STAT] Iteration 39
[DBG]  Using SAT operator (destroy+repair SAT).
[DBG]  ====================
[DBG]  SAT destroy operator called.
[DBG]  SAT heuristic: 2
[DBG]  key_agent_id: 9
[DBG]  key_agent_id global path length: 20
[DBG]  Submap content (global positions):
[DBG]  70 71 72 73 74 
[DBG]  102 103 104 105 106 
[DBG]  134 135 136 137 138 
[DBG]  166 167 168 169 170 
[DBG]  198 199 200 201 202 
[DBG]  Map content with agents and obstacles:
[DBG]  . . . . A 
[DBG]  . X . . A 
[DBG]  . . A . A 
[DBG]  X . . X . 
[DBG]  X . . X X 
[DBG]  content of the map structure that we pass to the SAT solver:
[DBG]  1  1  1  1  1  
[DBG]  1  -1  1  1  1  
[DBG]  1  1  1  1  1  
[DBG]  -1  1  1  -1  1  
[DBG]  -1  1  1  -1  -1  
[DBG]  Identifying agents in a submap for rescheduling (when key_agent is there at the time 9):
[DBG]  Agent 9 found intervals in the sub-map:
[DBG]   [5..12]
[DBG]  Agent 9 (interval in submap: [5..12]) contains time 9, added to replan.
[DBG]  Agent 55 found intervals in the sub-map:
[DBG]   [6..8] [11..13]
[DBG]  Agent 55 is not in sub-map at time 9 (intervals: 
[DBG]  [6..8] [11..13] )
[DBG]  Agent 69 found intervals in the sub-map:
[DBG]   [4..10]
[DBG]  Agent 69 (interval in submap: [4..10]) contains time 9, added to replan.
[DBG]  Agent 72 found intervals in the sub-map:
[DBG]   [9..13]
[DBG]  Agent 72 (interval in submap: [9..13]) contains time 9, added to replan.
[DBG]  Agent 80 found intervals in the sub-map:
[DBG]  
[DBG]  Agent 80 is not in sub-map at time 9 (intervals: 
[DBG]  )
[DBG]  Agent 82 found intervals in the sub-map:
[DBG]   [5..9]
[DBG]  Agent 82 (interval in submap: [5..9]) contains time 9, added to replan.
[DBG]  Agent 138 found intervals in the sub-map:
[DBG]   [6..7]
[DBG]  Agent 138 is not in sub-map at time 9 (intervals: 
[DBG]  [6..7] )
[DBG]  Agent 9 | Start (global): 136 -> (local): (2, 2) at time 9 | Goal (global): 134 -> (local): (2, 0) at time 12
[DBG]  Agent 69 | Start (global): 106 -> (local): (1, 4) at time 9 | Goal (global): 138 -> (local): (2, 4) at time 10
[DBG]  Agent 72 | Start (global): 74 -> (local): (0, 4) at time 9 | Goal (global): 70 -> (local): (0, 0) at time 13
[DBG]  Agent 82 | Start (global): 138 -> (local): (2, 4) at time 9 | Goal (global): 138 -> (local): (2, 4) at time 9
[DBG]  [REPAIR] SAT destroy operator called.
[DBG]  [REPAIR] SAT operator â€“ launching subproblem FOR OPTIMIZATION.
[DBG]  Creating local paths (sx, sy) in the submap for T_sync = 9
[DBG]    Agent 9 (global paths from T=9 to 12) has local path: (2,2) (2,2) (2,1) (2,0) 
[DBG]    Agent 69 (global paths from T=9 to 10) has local path: (1,4) (2,4) 
[DBG]    Agent 72 (global paths from T=9 to 13) has local path: (0,4) (0,3) (0,2) (0,1) (0,0) 
[DBG]    Agent 82 (global paths from T=9 to 9) has local path: (2,4) 
[DBG]  Checking input data for SAT solver:
[DBG]    - Number of agents to replan: 4
[DBG]  Agent 9 has the original local path length: 4 => Start (2,2), Goal (2,0)
[DBG]  Agent 69 has the original local path length: 2 => Start (1,4), Goal (2,4)
[DBG]  Agent 72 has the original local path length: 5 => Start (0,4), Goal (0,0)
[DBG]  Agent 82 has the original local path length: 1 => Start (2,4), Goal (2,4)
[DBG]  Start position: (2, 2), (1, 4), (0, 4), (2, 4), 
[DBG]  Goal position: (2, 0), (2, 4), (0, 0), (2, 4), 
[DBG]  SAT instance and solver created.
Currently solving
Instance name: scen
Map name: map
Encoding used: disappear_at_goal
SAT solver used: Kissat
Optimizing function: sum of costs
Number of agents: 4
Mks LB: 5
SoC LB: 11
Delta: 0
Remaining time: 300000 [ms]

Vertex conflict! Agents 0, 1, timestep 3, location 0
Swapping conflict! Agents 0, 1, timestep 3, edge (0,0)
Vertex conflict! Agents 0, 1, timestep 4, location 0
Vertex conflict! Agents 0, 2, timestep 4, location 0
Vertex conflict! Agents 0, 3, timestep 3, location 0
Swapping conflict! Agents 0, 3, timestep 3, edge (0,0)
Vertex conflict! Agents 0, 3, timestep 4, location 0
Vertex conflict! Agents 1, 2, timestep 4, location 0
Vertex conflict! Agents 1, 3, timestep 2, location 0
Swapping conflict! Agents 1, 3, timestep 2, edge (0,0)
Vertex conflict! Agents 1, 3, timestep 3, location 0
Swapping conflict! Agents 1, 3, timestep 3, edge (0,0)
Vertex conflict! Agents 1, 3, timestep 4, location 0
Vertex conflict! Agents 2, 3, timestep 4, location 0
Found plan [agents = 4] [timesteps = 5]
Agent #0 : 11 10 9 0 0 
Agent #1 : 8 13 0 0 0 
Agent #2 : 4 3 2 1 0 
Agent #3 : 13 0 0 0 0 

[STAT] Solver returned: 0
[DBG]  Agent (index) 9 | New local path (submap idx):
[DBG]  11 10 9 
[DBG]  Agent (index) 69 | New local path (submap idx):
[DBG]  8 13 
[DBG]  Agent (index) 72 | New local path (submap idx):
[DBG]  4 3 2 1 0 
[DBG]  Agent (index) 82 | New local path (submap idx):
[DBG]  13 
[DBG]  Update the agent path 9 | Original local length: 4 | New local length: 3
[DBG]  agent 9 t=0 => decoded (sx,sy)=(2,2) => global_id=136
[DBG]  agent 9 t=1 => decoded (sx,sy)=(2,1) => global_id=135
[DBG]  agent 9 t=2 => decoded (sx,sy)=(2,0) => global_id=134
[DBG]  Complete path of agent 9:
[DBG]    Original: 235 234 233 232 231 199 167 135 135 136 136 135 134 133 132 131 99 98 97 96 
[DBG]    New:     235 234 233 232 231 199 167 135 135 136 135 134 133 132 131 99 98 97 96 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 235 234 233 232 231 199 167 135 135 
[DBG]    Local path (in submap): 136 135 134 133 
[DBG]    Suffix (out of submap): 132 131 99 98 97 96 
[DBG]  Original agent path length 9 je: 20
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 0: 235, 234, 233, 232, 231, 199, 167, 135, 135, 136, 135, 134, 133, 132, 131, 99, 98, 97, 96, 
[DBG]  Path for agent 9 updated, resulting length: 19
[DBG]  Update the agent path 69 | Original local length: 2 | New local length: 2
[DBG]  agent 69 t=0 => decoded (sx,sy)=(1,4) => global_id=106
[DBG]  agent 69 t=1 => decoded (sx,sy)=(2,4) => global_id=138
[DBG]  Complete path of agent 69:
[DBG]    Original: 4 5 37 69 70 71 72 73 105 106 138 139 140 141 173 205 237 269 301 333 365 366 398 430 462 494 526 558 590 591 623 655 687 719 751 783 815 847 848 849 850 851 819 820 
[DBG]    New:     4 5 37 69 70 71 72 73 105 106 138 139 140 141 173 205 237 269 301 333 365 366 398 430 462 494 526 558 590 591 623 655 687 719 751 783 815 847 848 849 850 851 819 820 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 4 5 37 69 70 71 72 73 105 
[DBG]    Local path (in submap): 106 138 
[DBG]    Suffix (out of submap): 139 140 141 173 205 237 269 301 333 365 366 398 430 462 494 526 558 590 591 623 655 687 719 751 783 815 847 848 849 850 851 819 820 
[DBG]  Original agent path length 69 je: 44
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 1: 4, 5, 37, 69, 70, 71, 72, 73, 105, 106, 138, 139, 140, 141, 173, 205, 237, 269, 301, 333, 365, 366, 398, 430, 462, 494, 526, 558, 590, 591, 623, 655, 687, 719, 751, 783, 815, 847, 848, 849, 850, 851, 819, 820, 
[DBG]  Path for agent 69 updated, resulting length: 44
[DBG]  Update the agent path 72 | Original local length: 5 | New local length: 5
[DBG]  agent 72 t=0 => decoded (sx,sy)=(0,4) => global_id=74
[DBG]  agent 72 t=1 => decoded (sx,sy)=(0,3) => global_id=73
[DBG]  agent 72 t=2 => decoded (sx,sy)=(0,2) => global_id=72
[DBG]  agent 72 t=3 => decoded (sx,sy)=(0,1) => global_id=71
[DBG]  agent 72 t=4 => decoded (sx,sy)=(0,0) => global_id=70
[DBG]  Complete path of agent 72:
[DBG]    Original: 81 113 112 111 110 109 77 76 75 74 73 72 71 70 69 68 67 
[DBG]    New:     81 113 112 111 110 109 77 76 75 74 73 72 71 70 69 68 67 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 81 113 112 111 110 109 77 76 75 
[DBG]    Local path (in submap): 74 73 72 71 70 
[DBG]    Suffix (out of submap): 69 68 67 
[DBG]  Original agent path length 72 je: 17
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 2: 81, 113, 112, 111, 110, 109, 77, 76, 75, 74, 73, 72, 71, 70, 69, 68, 67, 
[DBG]  Path for agent 72 updated, resulting length: 17
[DBG]  Update the agent path 82 | Original local length: 1 | New local length: 1
[DBG]  agent 82 t=0 => decoded (sx,sy)=(2,4) => global_id=138
[DBG]  Complete path of agent 82:
[DBG]    Original: 75 43 42 41 40 72 104 136 137 138 139 140 172 173 205 237 269 301 333 365 366 367 366 398 
[DBG]    New:     75 43 42 41 40 72 104 136 137 138 139 140 172 173 205 237 269 301 333 365 366 367 366 398 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 75 43 42 41 40 72 104 136 137 
[DBG]    Local path (in submap): 138 
[DBG]    Suffix (out of submap): 139 140 172 173 205 237 269 301 333 365 366 367 366 398 
[DBG]  Original agent path length 82 je: 24
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 3: 75, 43, 42, 41, 40, 72, 104, 136, 137, 138, 139, 140, 172, 173, 205, 237, 269, 301, 333, 365, 366, 367, 366, 398, 
[DBG]  Path for agent 82 updated, resulting length: 24
[DBG]  Paths successfully updated.
[DBG]  (LNS.cpp) New path for agent 9: 
[DBG]  235, 234, 233, 232, 231, 199, 167, 135, 135, 136, 135, 134, 133, 132, 131, 99, 98, 97, 96, 
[DBG]  (LNS.cpp) New path for agent 69: 
[DBG]  4, 5, 37, 69, 70, 71, 72, 73, 105, 106, 138, 139, 140, 141, 173, 205, 237, 269, 301, 333, 365, 366, 398, 430, 462, 494, 526, 558, 590, 591, 623, 655, 687, 719, 751, 783, 815, 847, 848, 849, 850, 851, 819, 820, 
[DBG]  (LNS.cpp) New path for agent 72: 
[DBG]  81, 113, 112, 111, 110, 109, 77, 76, 75, 74, 73, 72, 71, 70, 69, 68, 67, 
[DBG]  (LNS.cpp) New path for agent 82: 
[DBG]  75, 43, 42, 41, 40, 72, 104, 136, 137, 138, 139, 140, 172, 173, 205, 237, 269, 301, 333, 365, 366, 367, 366, 398, 
[DBG]  component_weights = {0.271328, 0.200395, 0.209562, 0.318715}
[DBG]  opSuccess value: 1
[STAT] neighbor.sum_of_costs before recomputation: 100
[STAT] neighbor.old_sum_of_costs before recomputation: 101
[STAT] sum_of_costs before recomputation: 4465
[DBG]  Validate solution immediately after SAT success.
[DBG]  No problems after SAT replan.
[DBG]  Recomputing sum_of_cost by dividing neighbor.sum_of_costs and neighbor.old_sum_of_costs
[STAT] sum_of_costs after recomputation: 4464
[STAT] Iteration 40
[DBG]  Using SAT operator (destroy+repair SAT).
[DBG]  ====================
[DBG]  SAT destroy operator called.
[DBG]  SAT heuristic: 2
[DBG]  key_agent_id: 71
[DBG]  key_agent_id global path length: 43
[DBG]  Submap content (global positions):
[DBG]  492 493 494 495 496 
[DBG]  524 525 526 527 528 
[DBG]  556 557 558 559 560 
[DBG]  588 589 590 591 592 
[DBG]  620 621 622 623 624 
[DBG]  Map content with agents and obstacles:
[DBG]  . X A X . 
[DBG]  A . . X . 
[DBG]  A X A X . 
[DBG]  A . A . . 
[DBG]  . X A . X 
[DBG]  content of the map structure that we pass to the SAT solver:
[DBG]  1  -1  1  -1  1  
[DBG]  1  1  1  -1  1  
[DBG]  1  -1  1  -1  1  
[DBG]  1  1  1  1  1  
[DBG]  1  -1  1  1  -1  
[DBG]  Identifying agents in a submap for rescheduling (when key_agent is there at the time 19):
[DBG]  Agent 43 found intervals in the sub-map:
[DBG]   [24..27]
[DBG]  Agent 43 is not in sub-map at time 19 (intervals: 
[DBG]  [24..27] )
[DBG]  Agent 50 found intervals in the sub-map:
[DBG]   [18..22] [26..26]
[DBG]  Agent 50 (interval in submap: [18..22]) contains time 19, added to replan.
[DBG]  Agent 53 found intervals in the sub-map:
[DBG]   [19..24]
[DBG]  Agent 53 (interval in submap: [19..24]) contains time 19, added to replan.
[DBG]  Agent 71 found intervals in the sub-map:
[DBG]   [16..23]
[DBG]  Agent 71 (interval in submap: [16..23]) contains time 19, added to replan.
[DBG]  Agent 106 found intervals in the sub-map:
[DBG]  
[DBG]  Agent 106 is not in sub-map at time 19 (intervals: 
[DBG]  )
[DBG]  Agent 118 found intervals in the sub-map:
[DBG]   [19..23]
[DBG]  Agent 118 (interval in submap: [19..23]) contains time 19, added to replan.
[DBG]  Agent 130 found intervals in the sub-map:
[DBG]   [16..28]
[DBG]  Agent 130 (interval in submap: [16..28]) contains time 19, added to replan.
[DBG]  Agent 131 found intervals in the sub-map:
[DBG]   [14..21]
[DBG]  Agent 131 (interval in submap: [14..21]) contains time 19, added to replan.
[DBG]  Agent 132 found intervals in the sub-map:
[DBG]   [17..23]
[DBG]  Agent 132 (interval in submap: [17..23]) contains time 19, added to replan.
[DBG]  Agent 137 found intervals in the sub-map:
[DBG]   [23..26]
[DBG]  Agent 137 is not in sub-map at time 19 (intervals: 
[DBG]  [23..26] )
[DBG]  Agent 145 found intervals in the sub-map:
[DBG]  
[DBG]  Agent 145 is not in sub-map at time 19 (intervals: 
[DBG]  )
[DBG]  Agent 50 | Start (global): 590 -> (local): (3, 2) at time 19 | Goal (global): 556 -> (local): (2, 0) at time 22
[DBG]  Agent 53 | Start (global): 494 -> (local): (0, 2) at time 19 | Goal (global): 592 -> (local): (3, 4) at time 24
[DBG]  Agent 71 | Start (global): 558 -> (local): (2, 2) at time 19 | Goal (global): 623 -> (local): (4, 3) at time 23
[DBG]  Agent 118 | Start (global): 622 -> (local): (4, 2) at time 19 | Goal (global): 556 -> (local): (2, 0) at time 23
[DBG]  Agent 130 | Start (global): 588 -> (local): (3, 0) at time 19 | Goal (global): 620 -> (local): (4, 0) at time 28
[DBG]  Agent 131 | Start (global): 524 -> (local): (1, 0) at time 19 | Goal (global): 524 -> (local): (1, 0) at time 21
[DBG]  Agent 132 | Start (global): 556 -> (local): (2, 0) at time 19 | Goal (global): 492 -> (local): (0, 0) at time 23
[DBG]  [REPAIR] SAT destroy operator called.
[DBG]  [REPAIR] SAT operator â€“ launching subproblem FOR OPTIMIZATION.
[DBG]  Creating local paths (sx, sy) in the submap for T_sync = 19
[DBG]    Agent 50 (global paths from T=19 to 22) has local path: (3,2) (3,1) (3,0) (2,0) 
[DBG]    Agent 53 (global paths from T=19 to 24) has local path: (0,2) (1,2) (2,2) (3,2) (3,3) (3,4) 
[DBG]    Agent 71 (global paths from T=19 to 23) has local path: (2,2) (2,2) (3,2) (4,2) (4,3) 
[DBG]    Agent 118 (global paths from T=19 to 23) has local path: (4,2) (3,2) (3,1) (3,0) (2,0) 
[DBG]    Agent 130 (global paths from T=19 to 28) has local path: (3,0) (4,0) (4,0) (4,0) (4,0) (4,0) (4,0) (4,0) (4,0) (4,0) 
[DBG]    Agent 131 (global paths from T=19 to 21) has local path: (1,0) (1,0) (1,0) 
[DBG]    Agent 132 (global paths from T=19 to 23) has local path: (2,0) (2,0) (2,0) (1,0) (0,0) 
[DBG]  Checking input data for SAT solver:
[DBG]    - Number of agents to replan: 7
[DBG]  Agent 50 has the original local path length: 4 => Start (3,2), Goal (2,0)
[DBG]  Agent 53 has the original local path length: 6 => Start (0,2), Goal (3,4)
[DBG]  Agent 71 has the original local path length: 5 => Start (2,2), Goal (4,3)
[DBG]  Agent 118 has the original local path length: 5 => Start (4,2), Goal (2,0)
[DBG]  Agent 130 has the original local path length: 10 => Start (3,0), Goal (4,0)
[DBG]  Agent 131 has the original local path length: 3 => Start (1,0), Goal (1,0)
[DBG]  Agent 132 has the original local path length: 5 => Start (2,0), Goal (0,0)
[DBG]  Start position: (3, 2), (0, 2), (2, 2), (4, 2), (3, 0), (1, 0), (2, 0), 
[DBG]  Goal position: (2, 0), (3, 4), (4, 3), (2, 0), (4, 0), (1, 0), (0, 0), 
[DBG]  SAT instance and solver created.
Currently solving
Instance name: scen
Map name: map
Encoding used: disappear_at_goal
SAT solver used: Kissat
Optimizing function: sum of costs
Number of agents: 7
Mks LB: 6
SoC LB: 25
Delta: 0
Remaining time: 300000 [ms]

[STAT] Solver returned: -1
[DBG]  SAT solver failed.
[STAT] SAT solver failed to find a valid solution.
[DBG]  ====================
[DBG]  SAT destroy operator called.
[DBG]  SAT heuristic: 2
[DBG]  key_agent_id: 71
[DBG]  key_agent_id global path length: 43
[DBG]  Submap content (global positions):
[DBG]  460 461 462 463 464 
[DBG]  492 493 494 495 496 
[DBG]  524 525 526 527 528 
[DBG]  556 557 558 559 560 
[DBG]  588 589 590 591 592 
[DBG]  Map content with agents and obstacles:
[DBG]  . X . . A 
[DBG]  . X . X A 
[DBG]  A . A X A 
[DBG]  . X . X A 
[DBG]  A . A . . 
[DBG]  content of the map structure that we pass to the SAT solver:
[DBG]  1  -1  1  1  1  
[DBG]  1  -1  1  -1  1  
[DBG]  1  1  1  -1  1  
[DBG]  1  -1  1  -1  1  
[DBG]  1  1  1  1  1  
[DBG]  Identifying agents in a submap for rescheduling (when key_agent is there at the time 17):
[DBG]  Agent 3 found intervals in the sub-map:
[DBG]   [14..17]
[DBG]  Agent 3 (interval in submap: [14..17]) contains time 17, added to replan.
[DBG]  Agent 19 found intervals in the sub-map:
[DBG]   [13..17]
[DBG]  Agent 19 (interval in submap: [13..17]) contains time 17, added to replan.
[DBG]  Agent 63 found intervals in the sub-map:
[DBG]   [7..13]
[DBG]  Agent 63 is not in sub-map at time 17 (intervals: 
[DBG]  [7..13] )
[DBG]  Agent 67 found intervals in the sub-map:
[DBG]  
[DBG]  Agent 67 is not in sub-map at time 17 (intervals: 
[DBG]  )
[DBG]  Agent 71 found intervals in the sub-map:
[DBG]   [15..21]
[DBG]  Agent 71 (interval in submap: [15..21]) contains time 17, added to replan.
[DBG]  Agent 81 found intervals in the sub-map:
[DBG]   [14..18]
[DBG]  Agent 81 (interval in submap: [14..18]) contains time 17, added to replan.
[DBG]  Agent 93 found intervals in the sub-map:
[DBG]   [8..13] [15..17]
[DBG]  Agent 93 (interval in submap: [15..17]) contains time 17, added to replan.
[DBG]  Agent 121 found intervals in the sub-map:
[DBG]   [19..24]
[DBG]  Agent 121 is not in sub-map at time 17 (intervals: 
[DBG]  [19..24] )
[DBG]  Agent 128 found intervals in the sub-map:
[DBG]   [17..18] [23..23]
[DBG]  Agent 128 (interval in submap: [17..18]) contains time 17, added to replan.
[DBG]  Agent 130 found intervals in the sub-map:
[DBG]   [17..19]
[DBG]  Agent 130 (interval in submap: [17..19]) contains time 17, added to replan.
[DBG]  Agent 131 found intervals in the sub-map:
[DBG]   [12..21]
[DBG]  Agent 131 (interval in submap: [12..21]) contains time 17, added to replan.
[DBG]  Agent 137 found intervals in the sub-map:
[DBG]   [19..26]
[DBG]  Agent 137 is not in sub-map at time 17 (intervals: 
[DBG]  [19..26] )
[DBG]  Agent 145 found intervals in the sub-map:
[DBG]  
[DBG]  Agent 145 is not in sub-map at time 17 (intervals: 
[DBG]  )
[DBG]  Agent 3 | Start (global): 528 -> (local): (2, 4) at time 17 | Goal (global): 528 -> (local): (2, 4) at time 17
[DBG]  Agent 19 | Start (global): 588 -> (local): (4, 0) at time 17 | Goal (global): 588 -> (local): (4, 0) at time 17
[DBG]  Agent 71 | Start (global): 526 -> (local): (2, 2) at time 17 | Goal (global): 590 -> (local): (4, 2) at time 21
[DBG]  Agent 81 | Start (global): 496 -> (local): (1, 4) at time 17 | Goal (global): 528 -> (local): (2, 4) at time 18
[DBG]  Agent 93 | Start (global): 560 -> (local): (3, 4) at time 17 | Goal (global): 560 -> (local): (3, 4) at time 17
[DBG]  Agent 128 | Start (global): 464 -> (local): (0, 4) at time 17 | Goal (global): 463 -> (local): (0, 3) at time 18
[DBG]  Agent 130 | Start (global): 590 -> (local): (4, 2) at time 17 | Goal (global): 588 -> (local): (4, 0) at time 19
[DBG]  Agent 131 | Start (global): 524 -> (local): (2, 0) at time 17 | Goal (global): 524 -> (local): (2, 0) at time 21
[DBG]  [REPAIR] SAT destroy operator called.
[DBG]  [REPAIR] SAT operator â€“ launching subproblem FOR OPTIMIZATION.
[DBG]  Creating local paths (sx, sy) in the submap for T_sync = 17
[DBG]    Agent 3 (global paths from T=17 to 17) has local path: (2,4) 
[DBG]    Agent 19 (global paths from T=17 to 17) has local path: (4,0) 
[DBG]    Agent 71 (global paths from T=17 to 21) has local path: (2,2) (3,2) (3,2) (3,2) (4,2) 
[DBG]    Agent 81 (global paths from T=17 to 18) has local path: (1,4) (2,4) 
[DBG]    Agent 93 (global paths from T=17 to 17) has local path: (3,4) 
[DBG]    Agent 128 (global paths from T=17 to 18) has local path: (0,4) (0,3) 
[DBG]    Agent 130 (global paths from T=17 to 19) has local path: (4,2) (4,1) (4,0) 
[DBG]    Agent 131 (global paths from T=17 to 21) has local path: (2,0) (2,0) (2,0) (2,0) (2,0) 
[DBG]  Checking input data for SAT solver:
[DBG]    - Number of agents to replan: 8
[DBG]  Agent 3 has the original local path length: 1 => Start (2,4), Goal (2,4)
[DBG]  Agent 19 has the original local path length: 1 => Start (4,0), Goal (4,0)
[DBG]  Agent 71 has the original local path length: 5 => Start (2,2), Goal (4,2)
[DBG]  Agent 81 has the original local path length: 2 => Start (1,4), Goal (2,4)
[DBG]  Agent 93 has the original local path length: 1 => Start (3,4), Goal (3,4)
[DBG]  Agent 128 has the original local path length: 2 => Start (0,4), Goal (0,3)
[DBG]  Agent 130 has the original local path length: 3 => Start (4,2), Goal (4,0)
[DBG]  Agent 131 has the original local path length: 5 => Start (2,0), Goal (2,0)
[DBG]  Start position: (2, 4), (4, 0), (2, 2), (1, 4), (3, 4), (0, 4), (4, 2), (2, 0), 
[DBG]  Goal position: (2, 4), (4, 0), (4, 2), (2, 4), (3, 4), (0, 3), (4, 0), (2, 0), 
[DBG]  SAT instance and solver created.
Currently solving
Instance name: scen
Map name: map
Encoding used: disappear_at_goal
SAT solver used: Kissat
Optimizing function: sum of costs
Number of agents: 8
Mks LB: 3
SoC LB: 14
Delta: 0
Remaining time: 300000 [ms]

Vertex conflict! Agents 0, 1, timestep 1, location 0
Swapping conflict! Agents 0, 1, timestep 1, edge (0,0)
Vertex conflict! Agents 0, 1, timestep 2, location 0
Vertex conflict! Agents 0, 3, timestep 2, location 0
Vertex conflict! Agents 0, 4, timestep 1, location 0
Swapping conflict! Agents 0, 4, timestep 1, edge (0,0)
Vertex conflict! Agents 0, 4, timestep 2, location 0
Vertex conflict! Agents 0, 5, timestep 2, location 0
Vertex conflict! Agents 0, 7, timestep 1, location 0
Swapping conflict! Agents 0, 7, timestep 1, edge (0,0)
Vertex conflict! Agents 0, 7, timestep 2, location 0
Vertex conflict! Agents 1, 3, timestep 2, location 0
Vertex conflict! Agents 1, 4, timestep 1, location 0
Swapping conflict! Agents 1, 4, timestep 1, edge (0,0)
Vertex conflict! Agents 1, 4, timestep 2, location 0
Vertex conflict! Agents 1, 5, timestep 2, location 0
Vertex conflict! Agents 1, 7, timestep 1, location 0
Swapping conflict! Agents 1, 7, timestep 1, edge (0,0)
Vertex conflict! Agents 1, 7, timestep 2, location 0
Vertex conflict! Agents 3, 4, timestep 2, location 0
Vertex conflict! Agents 3, 5, timestep 2, location 0
Vertex conflict! Agents 3, 7, timestep 2, location 0
Vertex conflict! Agents 4, 5, timestep 2, location 0
Vertex conflict! Agents 4, 7, timestep 1, location 0
Swapping conflict! Agents 4, 7, timestep 1, edge (0,0)
Vertex conflict! Agents 4, 7, timestep 2, location 0
Vertex conflict! Agents 5, 7, timestep 2, location 0
Found plan [agents = 8] [timesteps = 3]
Agent #0 : 10 0 0 
Agent #1 : 14 0 0 
Agent #2 : 9 12 16 
Agent #3 : 6 10 0 
Agent #4 : 13 0 0 
Agent #5 : 3 2 0 
Agent #6 : 16 15 14 
Agent #7 : 7 0 0 

[STAT] Solver returned: 0
[DBG]  Agent (index) 3 | New local path (submap idx):
[DBG]  10 
[DBG]  Agent (index) 19 | New local path (submap idx):
[DBG]  14 
[DBG]  Agent (index) 71 | New local path (submap idx):
[DBG]  9 12 16 
[DBG]  Agent (index) 81 | New local path (submap idx):
[DBG]  6 10 
[DBG]  Agent (index) 93 | New local path (submap idx):
[DBG]  13 
[DBG]  Agent (index) 128 | New local path (submap idx):
[DBG]  3 2 
[DBG]  Agent (index) 130 | New local path (submap idx):
[DBG]  16 15 14 
[DBG]  Agent (index) 131 | New local path (submap idx):
[DBG]  7 
[DBG]  Update the agent path 3 | Original local length: 1 | New local length: 1
[DBG]  agent 3 t=0 => decoded (sx,sy)=(2,4) => global_id=528
[DBG]  Complete path of agent 3:
[DBG]    Original: 468 468 468 468 468 468 468 467 466 498 530 529 529 529 528 528 528 528 529 561 593 594 593 625 625 625 657 689 721 753 752 752 751 783 815 847 848 849 881 913 912 
[DBG]    New:     468 468 468 468 468 468 468 467 466 498 530 529 529 529 528 528 528 528 529 561 593 594 593 625 625 625 657 689 721 753 752 752 751 783 815 847 848 849 881 913 912 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 468 468 468 468 468 468 468 467 466 498 530 529 529 529 528 528 528 
[DBG]    Local path (in submap): 528 
[DBG]    Suffix (out of submap): 529 561 593 594 593 625 625 625 657 689 721 753 752 752 751 783 815 847 848 849 881 913 912 
[DBG]  Original agent path length 3 je: 41
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 0: 468, 468, 468, 468, 468, 468, 468, 467, 466, 498, 530, 529, 529, 529, 528, 528, 528, 528, 529, 561, 593, 594, 593, 625, 625, 625, 657, 689, 721, 753, 752, 752, 751, 783, 815, 847, 848, 849, 881, 913, 912, 
[DBG]  Path for agent 3 updated, resulting length: 41
[DBG]  Update the agent path 19 | Original local length: 1 | New local length: 1
[DBG]  agent 19 t=0 => decoded (sx,sy)=(4,0) => global_id=588
[DBG]  Complete path of agent 19:
[DBG]    Original: 625 657 656 656 656 656 656 656 656 656 657 625 593 592 591 590 589 588 587 619 651 650 651 683 
[DBG]    New:     625 657 656 656 656 656 656 656 656 656 657 625 593 592 591 590 589 588 587 619 651 650 651 683 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 625 657 656 656 656 656 656 656 656 656 657 625 593 592 591 590 589 
[DBG]    Local path (in submap): 588 
[DBG]    Suffix (out of submap): 587 619 651 650 651 683 
[DBG]  Original agent path length 19 je: 24
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 1: 625, 657, 656, 656, 656, 656, 656, 656, 656, 656, 657, 625, 593, 592, 591, 590, 589, 588, 587, 619, 651, 650, 651, 683, 
[DBG]  Path for agent 19 updated, resulting length: 24
[DBG]  Update the agent path 71 | Original local length: 5 | New local length: 3
[DBG]  agent 71 t=0 => decoded (sx,sy)=(2,2) => global_id=526
[DBG]  agent 71 t=1 => decoded (sx,sy)=(3,2) => global_id=558
[DBG]  agent 71 t=2 => decoded (sx,sy)=(4,2) => global_id=590
[DBG]  Complete path of agent 71:
[DBG]    Original: 482 450 418 419 420 421 422 423 424 425 426 427 428 429 430 462 494 526 558 558 558 590 622 623 655 687 719 719 719 751 783 815 847 879 880 881 882 883 884 916 917 918 919 
[DBG]    New:     482 450 418 419 420 421 422 423 424 425 426 427 428 429 430 462 494 526 558 590 622 623 655 687 719 719 719 751 783 815 847 879 880 881 882 883 884 916 917 918 919 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 482 450 418 419 420 421 422 423 424 425 426 427 428 429 430 462 494 
[DBG]    Local path (in submap): 526 558 590 622 623 
[DBG]    Suffix (out of submap): 655 687 719 719 719 751 783 815 847 879 880 881 882 883 884 916 917 918 919 
[DBG]  Original agent path length 71 je: 43
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 2: 482, 450, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 462, 494, 526, 558, 590, 622, 623, 655, 687, 719, 719, 719, 751, 783, 815, 847, 879, 880, 881, 882, 883, 884, 916, 917, 918, 919, 
[DBG]  Path for agent 71 updated, resulting length: 41
[DBG]  Update the agent path 81 | Original local length: 2 | New local length: 2
[DBG]  agent 81 t=0 => decoded (sx,sy)=(1,4) => global_id=496
[DBG]  agent 81 t=1 => decoded (sx,sy)=(2,4) => global_id=528
[DBG]  Complete path of agent 81:
[DBG]    Original: 419 420 421 422 423 424 425 426 426 427 428 429 430 431 463 463 464 496 528 529 530 531 563 
[DBG]    New:     419 420 421 422 423 424 425 426 426 427 428 429 430 431 463 463 464 496 528 529 530 531 563 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 419 420 421 422 423 424 425 426 426 427 428 429 430 431 463 463 464 
[DBG]    Local path (in submap): 496 528 
[DBG]    Suffix (out of submap): 529 530 531 563 
[DBG]  Original agent path length 81 je: 23
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 3: 419, 420, 421, 422, 423, 424, 425, 426, 426, 427, 428, 429, 430, 431, 463, 463, 464, 496, 528, 529, 530, 531, 563, 
[DBG]  Path for agent 81 updated, resulting length: 23
[DBG]  Update the agent path 93 | Original local length: 1 | New local length: 1
[DBG]  agent 93 t=0 => decoded (sx,sy)=(3,4) => global_id=560
[DBG]  Complete path of agent 93:
[DBG]    Original: 423 424 425 457 489 521 522 523 524 556 588 589 590 591 623 591 592 560 
[DBG]    New:     423 424 425 457 489 521 522 523 524 556 588 589 590 591 623 591 592 560 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 423 424 425 457 489 521 522 523 524 556 588 589 590 591 623 591 592 
[DBG]    Local path (in submap): 560 
[DBG]    Suffix (out of submap): 
[DBG]  Original agent path length 93 je: 18
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 4: 423, 424, 425, 457, 489, 521, 522, 523, 524, 556, 588, 589, 590, 591, 623, 591, 592, 560, 
[DBG]  Path for agent 93 updated, resulting length: 18
[DBG]  Update the agent path 128 | Original local length: 2 | New local length: 2
[DBG]  agent 128 t=0 => decoded (sx,sy)=(0,4) => global_id=464
[DBG]  agent 128 t=1 => decoded (sx,sy)=(0,3) => global_id=463
[DBG]  Complete path of agent 128:
[DBG]    Original: 604 572 571 539 538 506 505 504 503 502 470 469 468 467 466 465 465 464 463 431 430 429 428 460 459 458 490 522 521 520 519 551 550 549 548 547 
[DBG]    New:     604 572 571 539 538 506 505 504 503 502 470 469 468 467 466 465 465 464 463 431 430 429 428 460 459 458 490 522 521 520 519 551 550 549 548 547 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 604 572 571 539 538 506 505 504 503 502 470 469 468 467 466 465 465 
[DBG]    Local path (in submap): 464 463 
[DBG]    Suffix (out of submap): 431 430 429 428 460 459 458 490 522 521 520 519 551 550 549 548 547 
[DBG]  Original agent path length 128 je: 36
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 5: 604, 572, 571, 539, 538, 506, 505, 504, 503, 502, 470, 469, 468, 467, 466, 465, 465, 464, 463, 431, 430, 429, 428, 460, 459, 458, 490, 522, 521, 520, 519, 551, 550, 549, 548, 547, 
[DBG]  Path for agent 128 updated, resulting length: 36
[DBG]  Update the agent path 130 | Original local length: 3 | New local length: 3
[DBG]  agent 130 t=0 => decoded (sx,sy)=(4,2) => global_id=590
[DBG]  agent 130 t=1 => decoded (sx,sy)=(4,1) => global_id=589
[DBG]  agent 130 t=2 => decoded (sx,sy)=(4,0) => global_id=588
[DBG]  Complete path of agent 130:
[DBG]    Original: 944 912 880 879 879 879 847 815 814 782 750 751 719 687 686 654 622 590 589 588 620 620 620 620 620 620 620 620 620 619 651 
[DBG]    New:     944 912 880 879 879 879 847 815 814 782 750 751 719 687 686 654 622 590 589 588 620 620 620 620 620 620 620 620 620 619 651 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 944 912 880 879 879 879 847 815 814 782 750 751 719 687 686 654 622 
[DBG]    Local path (in submap): 590 589 588 
[DBG]    Suffix (out of submap): 620 620 620 620 620 620 620 620 620 619 651 
[DBG]  Original agent path length 130 je: 31
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 6: 944, 912, 880, 879, 879, 879, 847, 815, 814, 782, 750, 751, 719, 687, 686, 654, 622, 590, 589, 588, 620, 620, 620, 620, 620, 620, 620, 620, 620, 619, 651, 
[DBG]  Path for agent 130 updated, resulting length: 31
[DBG]  Update the agent path 131 | Original local length: 5 | New local length: 1
[DBG]  agent 131 t=0 => decoded (sx,sy)=(2,0) => global_id=524
[DBG]  Complete path of agent 131:
[DBG]    Original: 341 373 405 404 403 435 467 466 465 433 432 431 463 462 494 526 525 524 524 524 524 524 523 522 521 520 519 551 583 615 616 616 616 616 616 648 680 712 
[DBG]    New:     341 373 405 404 403 435 467 466 465 433 432 431 463 462 494 526 525 524 523 522 521 520 519 551 583 615 616 616 616 616 616 648 680 712 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 341 373 405 404 403 435 467 466 465 433 432 431 463 462 494 526 525 
[DBG]    Local path (in submap): 524 523 522 521 520 
[DBG]    Suffix (out of submap): 519 551 583 615 616 616 616 616 616 648 680 712 
[DBG]  Original agent path length 131 je: 38
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 7: 341, 373, 405, 404, 403, 435, 467, 466, 465, 433, 432, 431, 463, 462, 494, 526, 525, 524, 523, 522, 521, 520, 519, 551, 583, 615, 616, 616, 616, 616, 616, 648, 680, 712, 
[DBG]  Path for agent 131 updated, resulting length: 34
[DBG]  Paths successfully updated.
[DBG]  (LNS.cpp) New path for agent 3: 
[DBG]  468, 468, 468, 468, 468, 468, 468, 467, 466, 498, 530, 529, 529, 529, 528, 528, 528, 528, 529, 561, 593, 594, 593, 625, 625, 625, 657, 689, 721, 753, 752, 752, 751, 783, 815, 847, 848, 849, 881, 913, 912, 
[DBG]  (LNS.cpp) New path for agent 19: 
[DBG]  625, 657, 656, 656, 656, 656, 656, 656, 656, 656, 657, 625, 593, 592, 591, 590, 589, 588, 587, 619, 651, 650, 651, 683, 
[DBG]  (LNS.cpp) New path for agent 71: 
[DBG]  482, 450, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 462, 494, 526, 558, 590, 622, 623, 655, 687, 719, 719, 719, 751, 783, 815, 847, 879, 880, 881, 882, 883, 884, 916, 917, 918, 919, 
[DBG]  (LNS.cpp) New path for agent 81: 
[DBG]  419, 420, 421, 422, 423, 424, 425, 426, 426, 427, 428, 429, 430, 431, 463, 463, 464, 496, 528, 529, 530, 531, 563, 
[DBG]  (LNS.cpp) New path for agent 93: 
[DBG]  423, 424, 425, 457, 489, 521, 522, 523, 524, 556, 588, 589, 590, 591, 623, 591, 592, 560, 
[DBG]  (LNS.cpp) New path for agent 128: 
[DBG]  604, 572, 571, 539, 538, 506, 505, 504, 503, 502, 470, 469, 468, 467, 466, 465, 465, 464, 463, 431, 430, 429, 428, 460, 459, 458, 490, 522, 521, 520, 519, 551, 550, 549, 548, 547, 
[DBG]  (LNS.cpp) New path for agent 130: 
[DBG]  944, 912, 880, 879, 879, 879, 847, 815, 814, 782, 750, 751, 719, 687, 686, 654, 622, 590, 589, 588, 620, 620, 620, 620, 620, 620, 620, 620, 620, 619, 651, 
[DBG]  (LNS.cpp) New path for agent 131: 
[DBG]  341, 373, 405, 404, 403, 435, 467, 466, 465, 433, 432, 431, 463, 462, 494, 526, 525, 524, 523, 522, 521, 520, 519, 551, 583, 615, 616, 616, 616, 616, 616, 648, 680, 712, 
[DBG]  component_weights = {0.269553, 0.199084, 0.208192, 0.323171}
[DBG]  opSuccess value: 1
[STAT] neighbor.sum_of_costs before recomputation: 240
[STAT] neighbor.old_sum_of_costs before recomputation: 246
[STAT] sum_of_costs before recomputation: 4464
[DBG]  Validate solution immediately after SAT success.
[WARNING] Problem after SAT: Edge conflict between agents 131 and 4 at edge (680,712) at timestep 33
[DBG]  Attempting immediate repair via init_lns because problem occurred after SAT (should be applied only for conflicts...).
[DBG]  Passing 150 agents to init_lns (skip=true).
[DBG]  path_table contents for selected agents (neighbor.agents):
[DBG]    Agent 3 => controlling path length=41
[DBG]    Agent 19 => controlling path length=24
[DBG]    Agent 71 => controlling path length=41
[DBG]    Agent 81 => controlling path length=23
[DBG]    Agent 93 => controlling path length=18
[DBG]    Agent 128 => controlling path length=36
[DBG]    Agent 130 => controlling path length=31
[DBG]    Agent 131 => controlling path length=34
[DBG]  hodnota skip_initial_solution=1
[DBG]  We skip initialSolution => call buildCollisionData()
[DBG]  buildCollisionData() called â€“ skip_initial_solution case.
[DBG]  Agents.size()=150, collision_graph.size()=150
[DBG]  agent 4 => updateCollidingPairs => foundCollision
[DBG]  agent 11 => updateCollidingPairs => foundCollision
[DBG]  agent 50 => updateCollidingPairs => foundCollision
[DBG]  agent 71 => updateCollidingPairs => foundCollision
[DBG]  agent 105 => updateCollidingPairs => foundCollision
[DBG]  agent 118 => updateCollidingPairs => foundCollision
[DBG]  agent 131 => updateCollidingPairs => foundCollision
[DBG]  agent 135 => updateCollidingPairs => foundCollision
[DBG]  agent 148 => updateCollidingPairs => foundCollision
[DBG]  Conflicting agent pairs:
[DBG]  agent 4 is in conflict with agent 131
[DBG]  agent 11 is in conflict with agent 71
[DBG]  agent 50 is in conflict with agent 71
[DBG]  agent 71 is in conflict with agent 118
[DBG]  agent 71 is in conflict with agent 148
[DBG]  agent 105 is in conflict with agent 131
[DBG]  agent 131 is in conflict with agent 135
[DBG]  buildCollisionData() => sum_of_costs=4458, num_of_colliding_pairs=7
[DBG]  buildCollisionData done => sum_of_costs=4458, num_of_colliding_pairs=7
[DBG]  sum_of_cost hodnota: 4458
[DBG]  After skip/init build => iteration_stats.back(): sum_of_costs=4458, collisions=7
[DEBUG] Using default neighbor generation strategy for conflicts: 2
[DEBUG] Using default neighbor generation strategy for conflicts: 1
	InitLNS(PP): runtime = 0.0143117, iterations = 3, colliding pairs = 0, initial colliding pairs = 7, solution cost = 4476, initial solution cost = 4458, failed iterations = 0
[DBG]  init_lns->sum_of_costs after init_lns->run: 4476
[DBG]  sum_of_costs after assignment from init_lns->run: 4476
[DBG]  Recomputing sum_of_cost by dividing neighbor.sum_of_costs and neighbor.old_sum_of_costs
[STAT] sum_of_costs after recomputation: 4476
[STAT] Iteration 41
[DBG]  Using SAT operator (destroy+repair SAT).
[DBG]  ====================
[DBG]  SAT destroy operator called.
[DBG]  SAT heuristic: 2
[DBG]  key_agent_id: 6
[DBG]  key_agent_id global path length: 30
[DBG]  Submap content (global positions):
[DBG]  822 823 824 825 826 
[DBG]  854 855 856 857 858 
[DBG]  886 887 888 889 890 
[DBG]  918 919 920 921 922 
[DBG]  950 951 952 953 954 
[DBG]  Map content with agents and obstacles:
[DBG]  A A . X A 
[DBG]  . . . . A 
[DBG]  . . A . . 
[DBG]  . . . A . 
[DBG]  . X . . . 
[DBG]  content of the map structure that we pass to the SAT solver:
[DBG]  1  1  1  -1  1  
[DBG]  1  1  1  1  1  
[DBG]  1  1  1  1  1  
[DBG]  1  1  1  1  1  
[DBG]  1  -1  1  1  1  
[DBG]  Identifying agents in a submap for rescheduling (when key_agent is there at the time 9):
[DBG]  Agent 4 found intervals in the sub-map:
[DBG]  
[DBG]  Agent 4 is not in sub-map at time 9 (intervals: 
[DBG]  )
[DBG]  Agent 6 found intervals in the sub-map:
[DBG]   [5..12]
[DBG]  Agent 6 (interval in submap: [5..12]) contains time 9, added to replan.
[DBG]  Agent 11 found intervals in the sub-map:
[DBG]   [8..13]
[DBG]  Agent 11 (interval in submap: [8..13]) contains time 9, added to replan.
[DBG]  Agent 30 found intervals in the sub-map:
[DBG]   [0..9]
[DBG]  Agent 30 (interval in submap: [0..9]) contains time 9, added to replan.
[DBG]  Agent 35 found intervals in the sub-map:
[DBG]   [9..14]
[DBG]  Agent 35 (interval in submap: [9..14]) contains time 9, added to replan.
[DBG]  Agent 49 found intervals in the sub-map:
[DBG]   [4..10] [13..13]
[DBG]  Agent 49 (interval in submap: [4..10]) contains time 9, added to replan.
[DBG]  Agent 58 found intervals in the sub-map:
[DBG]   [0..23]
[DBG]  Agent 58 (interval in submap: [0..23]) contains time 9, added to replan.
[DBG]  Agent 133 found intervals in the sub-map:
[DBG]  
[DBG]  Agent 133 is not in sub-map at time 9 (intervals: 
[DBG]  )
[DBG]  Agent 135 found intervals in the sub-map:
[DBG]   [6..8]
[DBG]  Agent 135 is not in sub-map at time 9 (intervals: 
[DBG]  [6..8] )
[DBG]  Agent 6 | Start (global): 888 -> (local): (2, 2) at time 9 | Goal (global): 886 -> (local): (2, 0) at time 12
[DBG]  Agent 11 | Start (global): 921 -> (local): (3, 3) at time 9 | Goal (global): 886 -> (local): (2, 0) at time 13
[DBG]  Agent 30 | Start (global): 822 -> (local): (0, 0) at time 9 | Goal (global): 822 -> (local): (0, 0) at time 9
[DBG]  Agent 35 | Start (global): 858 -> (local): (1, 4) at time 9 | Goal (global): 886 -> (local): (2, 0) at time 14
[DBG]  Agent 49 | Start (global): 823 -> (local): (0, 1) at time 9 | Goal (global): 822 -> (local): (0, 0) at time 10
[DBG]  Agent 58 | Start (global): 826 -> (local): (0, 4) at time 9 | Goal (global): 824 -> (local): (0, 2) at time 23
[DBG]  [REPAIR] SAT destroy operator called.
[DBG]  [REPAIR] SAT operator â€“ launching subproblem FOR OPTIMIZATION.
[DBG]  Creating local paths (sx, sy) in the submap for T_sync = 9
[DBG]    Agent 6 (global paths from T=9 to 12) has local path: (2,2) (2,2) (2,1) (2,0) 
[DBG]    Agent 11 (global paths from T=9 to 13) has local path: (3,3) (3,2) (2,2) (2,1) (2,0) 
[DBG]    Agent 30 (global paths from T=9 to 9) has local path: (0,0) 
[DBG]    Agent 35 (global paths from T=9 to 14) has local path: (1,4) (1,3) (2,3) (2,2) (2,1) (2,0) 
[DBG]    Agent 49 (global paths from T=9 to 10) has local path: (0,1) (0,0) 
[DBG]    Agent 58 (global paths from T=9 to 23) has local path: (0,4) (0,4) (0,4) (0,4) (0,4) (0,4) (0,4) (0,4) (0,4) (0,4) (0,4) (1,4) (1,3) (1,2) (0,2) 
[DBG]  Checking input data for SAT solver:
[DBG]    - Number of agents to replan: 6
[DBG]  Agent 6 has the original local path length: 4 => Start (2,2), Goal (2,0)
[DBG]  Agent 11 has the original local path length: 5 => Start (3,3), Goal (2,0)
[DBG]  Agent 30 has the original local path length: 1 => Start (0,0), Goal (0,0)
[DBG]  Agent 35 has the original local path length: 6 => Start (1,4), Goal (2,0)
[DBG]  Agent 49 has the original local path length: 2 => Start (0,1), Goal (0,0)
[DBG]  Agent 58 has the original local path length: 15 => Start (0,4), Goal (0,2)
[DBG]  Start position: (2, 2), (3, 3), (0, 0), (1, 4), (0, 1), (0, 4), 
[DBG]  Goal position: (2, 0), (2, 0), (0, 0), (2, 0), (0, 0), (0, 2), 
[DBG]  SAT instance and solver created.
Currently solving
Instance name: scen
Map name: map
Encoding used: disappear_at_goal
SAT solver used: Kissat
Optimizing function: sum of costs
Number of agents: 6
Mks LB: 6
SoC LB: 22
Delta: 0
Remaining time: 300000 [ms]

Vertex conflict! Agents 0, 1, timestep 5, location 0
Vertex conflict! Agents 0, 2, timestep 3, location 0
Swapping conflict! Agents 0, 2, timestep 3, edge (0,0)
Vertex conflict! Agents 0, 2, timestep 4, location 0
Swapping conflict! Agents 0, 2, timestep 4, edge (0,0)
Vertex conflict! Agents 0, 2, timestep 5, location 0
Vertex conflict! Agents 0, 4, timestep 3, location 0
Swapping conflict! Agents 0, 4, timestep 3, edge (0,0)
Vertex conflict! Agents 0, 4, timestep 4, location 0
Swapping conflict! Agents 0, 4, timestep 4, edge (0,0)
Vertex conflict! Agents 0, 4, timestep 5, location 0
Vertex conflict! Agents 0, 5, timestep 5, location 0
Vertex conflict! Agents 1, 2, timestep 5, location 0
Vertex conflict! Agents 1, 4, timestep 5, location 0
Vertex conflict! Agents 1, 5, timestep 5, location 0
Vertex conflict! Agents 2, 4, timestep 1, location 0
Swapping conflict! Agents 2, 4, timestep 1, edge (0,0)
Vertex conflict! Agents 2, 4, timestep 2, location 0
Swapping conflict! Agents 2, 4, timestep 2, edge (0,0)
Vertex conflict! Agents 2, 4, timestep 3, location 0
Swapping conflict! Agents 2, 4, timestep 3, edge (0,0)
Vertex conflict! Agents 2, 4, timestep 4, location 0
Swapping conflict! Agents 2, 4, timestep 4, edge (0,0)
Vertex conflict! Agents 2, 4, timestep 5, location 0
Vertex conflict! Agents 2, 5, timestep 5, location 0
Vertex conflict! Agents 4, 5, timestep 5, location 0
Found plan [agents = 6] [timesteps = 6]
Agent #0 : 11 10 9 0 0 0 
Agent #1 : 17 16 15 14 9 0 
Agent #2 : 0 0 0 0 0 0 
Agent #3 : 8 13 12 11 10 9 
Agent #4 : 1 0 0 0 0 0 
Agent #5 : 3 8 7 6 2 0 

[STAT] Solver returned: 0
[DBG]  Agent (index) 6 | New local path (submap idx):
[DBG]  11 10 9 
[DBG]  Agent (index) 11 | New local path (submap idx):
[DBG]  17 16 15 14 9 
[DBG]  Agent (index) 30 | New local path (submap idx):
[DBG]  0 
[DBG]  Agent (index) 35 | New local path (submap idx):
[DBG]  8 13 12 11 10 9 
[DBG]  Agent (index) 49 | New local path (submap idx):
[DBG]  1 0 
[DBG]  Agent (index) 58 | New local path (submap idx):
[DBG]  3 8 7 6 2 
[DBG]  Update the agent path 6 | Original local length: 4 | New local length: 3
[DBG]  agent 6 t=0 => decoded (sx,sy)=(2,2) => global_id=888
[DBG]  agent 6 t=1 => decoded (sx,sy)=(2,1) => global_id=887
[DBG]  agent 6 t=2 => decoded (sx,sy)=(2,0) => global_id=886
[DBG]  Complete path of agent 6:
[DBG]    Original: 983 983 983 983 984 952 953 921 889 888 888 887 886 885 884 883 882 914 914 914 882 881 880 879 878 877 876 908 940 908 
[DBG]    New:     983 983 983 983 984 952 953 921 889 888 887 886 885 884 883 882 914 914 914 882 881 880 879 878 877 876 908 940 908 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 983 983 983 983 984 952 953 921 889 
[DBG]    Local path (in submap): 888 887 886 885 
[DBG]    Suffix (out of submap): 884 883 882 914 914 914 882 881 880 879 878 877 876 908 940 908 
[DBG]  Original agent path length 6 je: 30
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 0: 983, 983, 983, 983, 984, 952, 953, 921, 889, 888, 887, 886, 885, 884, 883, 882, 914, 914, 914, 882, 881, 880, 879, 878, 877, 876, 908, 940, 908, 
[DBG]  Path for agent 6 updated, resulting length: 29
[DBG]  Update the agent path 11 | Original local length: 5 | New local length: 5
[DBG]  agent 11 t=0 => decoded (sx,sy)=(3,3) => global_id=921
[DBG]  agent 11 t=1 => decoded (sx,sy)=(3,2) => global_id=920
[DBG]  agent 11 t=2 => decoded (sx,sy)=(3,1) => global_id=919
[DBG]  agent 11 t=3 => decoded (sx,sy)=(3,0) => global_id=918
[DBG]  agent 11 t=4 => decoded (sx,sy)=(2,0) => global_id=886
[DBG]  Complete path of agent 11:
[DBG]    Original: 990 1022 990 989 957 956 924 923 922 921 920 888 887 886 885 884 883 851 850 850 850 849 848 880 848 847 815 783 751 752 720 688 656 657 
[DBG]    New:     990 1022 990 989 957 956 924 923 922 921 920 919 918 886 885 884 883 851 850 850 850 849 848 880 848 847 815 783 751 752 720 688 656 657 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 990 1022 990 989 957 956 924 923 922 
[DBG]    Local path (in submap): 921 920 919 918 886 
[DBG]    Suffix (out of submap): 885 884 883 851 850 850 850 849 848 880 848 847 815 783 751 752 720 688 656 657 
[DBG]  Original agent path length 11 je: 34
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 1: 990, 1022, 990, 989, 957, 956, 924, 923, 922, 921, 920, 919, 918, 886, 885, 884, 883, 851, 850, 850, 850, 849, 848, 880, 848, 847, 815, 783, 751, 752, 720, 688, 656, 657, 
[DBG]  Path for agent 11 updated, resulting length: 34
[DBG]  Update the agent path 30 | Original local length: 1 | New local length: 1
[DBG]  agent 30 t=0 => decoded (sx,sy)=(0,0) => global_id=822
[DBG]  Complete path of agent 30:
[DBG]    Original: 922 922 922 921 920 888 887 855 854 822 821 820 819 787 755 756 724 692 691 691 659 627 628 629 597 565 566 534 502 503 
[DBG]    New:     922 922 922 921 920 888 887 855 854 822 821 820 819 787 755 756 724 692 691 691 659 627 628 629 597 565 566 534 502 503 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 922 922 922 921 920 888 887 855 854 
[DBG]    Local path (in submap): 822 
[DBG]    Suffix (out of submap): 821 820 819 787 755 756 724 692 691 691 659 627 628 629 597 565 566 534 502 503 
[DBG]  Original agent path length 30 je: 30
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 2: 922, 922, 922, 921, 920, 888, 887, 855, 854, 822, 821, 820, 819, 787, 755, 756, 724, 692, 691, 691, 659, 627, 628, 629, 597, 565, 566, 534, 502, 503, 
[DBG]  Path for agent 30 updated, resulting length: 30
[DBG]  Update the agent path 35 | Original local length: 6 | New local length: 6
[DBG]  agent 35 t=0 => decoded (sx,sy)=(1,4) => global_id=858
[DBG]  agent 35 t=1 => decoded (sx,sy)=(2,4) => global_id=890
[DBG]  agent 35 t=2 => decoded (sx,sy)=(2,3) => global_id=889
[DBG]  agent 35 t=3 => decoded (sx,sy)=(2,2) => global_id=888
[DBG]  agent 35 t=4 => decoded (sx,sy)=(2,1) => global_id=887
[DBG]  agent 35 t=5 => decoded (sx,sy)=(2,0) => global_id=886
[DBG]  Complete path of agent 35:
[DBG]    Original: 735 767 799 798 830 862 861 860 859 858 857 889 888 887 886 885 884 883 851 851 851 850 849 881 880 879 878 877 876 875 874 873 841 809 808 807 806 805 804 803 802 801 800 768 736 
[DBG]    New:     735 767 799 798 830 862 861 860 859 858 890 889 888 887 886 885 884 883 851 851 851 850 849 881 880 879 878 877 876 875 874 873 841 809 808 807 806 805 804 803 802 801 800 768 736 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 735 767 799 798 830 862 861 860 859 
[DBG]    Local path (in submap): 858 890 889 888 887 886 
[DBG]    Suffix (out of submap): 885 884 883 851 851 851 850 849 881 880 879 878 877 876 875 874 873 841 809 808 807 806 805 804 803 802 801 800 768 736 
[DBG]  Original agent path length 35 je: 45
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 3: 735, 767, 799, 798, 830, 862, 861, 860, 859, 858, 890, 889, 888, 887, 886, 885, 884, 883, 851, 851, 851, 850, 849, 881, 880, 879, 878, 877, 876, 875, 874, 873, 841, 809, 808, 807, 806, 805, 804, 803, 802, 801, 800, 768, 736, 
[DBG]  Path for agent 35 updated, resulting length: 45
[DBG]  Update the agent path 49 | Original local length: 2 | New local length: 2
[DBG]  agent 49 t=0 => decoded (sx,sy)=(0,1) => global_id=823
[DBG]  agent 49 t=1 => decoded (sx,sy)=(0,0) => global_id=822
[DBG]  Complete path of agent 49:
[DBG]    Original: 984 984 984 984 952 920 919 887 855 823 822 790 790 822 821 820 788 756 724 692 660 660 660 628 596 597 565 566 534 502 470 469 468 467 435 467 466 465 433 401 400 368 
[DBG]    New:     984 984 984 984 952 920 919 887 855 823 822 790 790 822 821 820 788 756 724 692 660 660 660 628 596 597 565 566 534 502 470 469 468 467 435 467 466 465 433 401 400 368 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 984 984 984 984 952 920 919 887 855 
[DBG]    Local path (in submap): 823 822 
[DBG]    Suffix (out of submap): 790 790 822 821 820 788 756 724 692 660 660 660 628 596 597 565 566 534 502 470 469 468 467 435 467 466 465 433 401 400 368 
[DBG]  Original agent path length 49 je: 42
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 4: 984, 984, 984, 984, 952, 920, 919, 887, 855, 823, 822, 790, 790, 822, 821, 820, 788, 756, 724, 692, 660, 660, 660, 628, 596, 597, 565, 566, 534, 502, 470, 469, 468, 467, 435, 467, 466, 465, 433, 401, 400, 368, 
[DBG]  Path for agent 49 updated, resulting length: 42
[DBG]  Update the agent path 58 | Original local length: 15 | New local length: 5
[DBG]  agent 58 t=0 => decoded (sx,sy)=(0,4) => global_id=826
[DBG]  agent 58 t=1 => decoded (sx,sy)=(1,4) => global_id=858
[DBG]  agent 58 t=2 => decoded (sx,sy)=(1,3) => global_id=857
[DBG]  agent 58 t=3 => decoded (sx,sy)=(1,2) => global_id=856
[DBG]  agent 58 t=4 => decoded (sx,sy)=(0,2) => global_id=824
[DBG]  Complete path of agent 58:
[DBG]    Original: 826 826 826 826 826 826 826 826 826 826 826 826 826 826 826 826 826 826 826 826 858 857 856 824 792 793 761 729 697 696 664 632 633 601 569 570 538 506 474 475 443 411 411 411 411 411 379 347 
[DBG]    New:     826 826 826 826 826 826 826 826 826 826 858 857 856 824 792 793 761 729 697 696 664 632 633 601 569 570 538 506 474 475 443 411 411 411 411 411 379 347 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 826 826 826 826 826 826 826 826 826 
[DBG]    Local path (in submap): 826 858 857 856 824 792 793 761 729 697 696 664 632 633 601 
[DBG]    Suffix (out of submap): 569 570 538 506 474 475 443 411 411 411 411 411 379 347 
[DBG]  Original agent path length 58 je: 48
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 5: 826, 826, 826, 826, 826, 826, 826, 826, 826, 826, 858, 857, 856, 824, 792, 793, 761, 729, 697, 696, 664, 632, 633, 601, 569, 570, 538, 506, 474, 475, 443, 411, 411, 411, 411, 411, 379, 347, 
[DBG]  Path for agent 58 updated, resulting length: 38
[DBG]  Paths successfully updated.
[DBG]  (LNS.cpp) New path for agent 6: 
[DBG]  983, 983, 983, 983, 984, 952, 953, 921, 889, 888, 887, 886, 885, 884, 883, 882, 914, 914, 914, 882, 881, 880, 879, 878, 877, 876, 908, 940, 908, 
[DBG]  (LNS.cpp) New path for agent 11: 
[DBG]  990, 1022, 990, 989, 957, 956, 924, 923, 922, 921, 920, 919, 918, 886, 885, 884, 883, 851, 850, 850, 850, 849, 848, 880, 848, 847, 815, 783, 751, 752, 720, 688, 656, 657, 
[DBG]  (LNS.cpp) New path for agent 30: 
[DBG]  922, 922, 922, 921, 920, 888, 887, 855, 854, 822, 821, 820, 819, 787, 755, 756, 724, 692, 691, 691, 659, 627, 628, 629, 597, 565, 566, 534, 502, 503, 
[DBG]  (LNS.cpp) New path for agent 35: 
[DBG]  735, 767, 799, 798, 830, 862, 861, 860, 859, 858, 890, 889, 888, 887, 886, 885, 884, 883, 851, 851, 851, 850, 849, 881, 880, 879, 878, 877, 876, 875, 874, 873, 841, 809, 808, 807, 806, 805, 804, 803, 802, 801, 800, 768, 736, 
[DBG]  (LNS.cpp) New path for agent 49: 
[DBG]  984, 984, 984, 984, 952, 920, 919, 887, 855, 823, 822, 790, 790, 822, 821, 820, 788, 756, 724, 692, 660, 660, 660, 628, 596, 597, 565, 566, 534, 502, 470, 469, 468, 467, 435, 467, 466, 465, 433, 401, 400, 368, 
[DBG]  (LNS.cpp) New path for agent 58: 
[DBG]  826, 826, 826, 826, 826, 826, 826, 826, 826, 826, 858, 857, 856, 824, 792, 793, 761, 729, 697, 696, 664, 632, 633, 601, 569, 570, 538, 506, 474, 475, 443, 411, 411, 411, 411, 411, 379, 347, 
[DBG]  component_weights = {0.267744, 0.197747, 0.206794, 0.327714}
[DBG]  opSuccess value: 1
[STAT] neighbor.sum_of_costs before recomputation: 212
[STAT] neighbor.old_sum_of_costs before recomputation: 223
[STAT] sum_of_costs before recomputation: 4476
[DBG]  Validate solution immediately after SAT success.
[WARNING] Problem after SAT: Vertex conflict between agents 6 and 71 at location 908 at timestep 28
[DBG]  Attempting immediate repair via init_lns because problem occurred after SAT (should be applied only for conflicts...).
[DBG]  Passing 150 agents to init_lns (skip=true).
[DBG]  path_table contents for selected agents (neighbor.agents):
[DBG]    Agent 6 => controlling path length=29
[DBG]    Agent 11 => controlling path length=34
[DBG]    Agent 30 => controlling path length=30
[DBG]    Agent 35 => controlling path length=45
[DBG]    Agent 49 => controlling path length=42
[DBG]    Agent 58 => controlling path length=38
[DBG]  hodnota skip_initial_solution=1
[DBG]  We skip initialSolution => call buildCollisionData()
[DBG]  buildCollisionData() called â€“ skip_initial_solution case.
[DBG]  Agents.size()=150, collision_graph.size()=150
[DBG]  agent 6 => updateCollidingPairs => foundCollision
[DBG]  agent 7 => updateCollidingPairs => foundCollision
[DBG]  agent 14 => updateCollidingPairs => foundCollision
[DBG]  agent 35 => updateCollidingPairs => foundCollision
[DBG]  agent 54 => updateCollidingPairs => foundCollision
[DBG]  agent 58 => updateCollidingPairs => foundCollision
[DBG]  agent 71 => updateCollidingPairs => foundCollision
[DBG]  agent 77 => updateCollidingPairs => foundCollision
[DBG]  agent 102 => updateCollidingPairs => foundCollision
[DBG]  agent 111 => updateCollidingPairs => foundCollision
[DBG]  agent 140 => updateCollidingPairs => foundCollision
[DBG]  Conflicting agent pairs:
[DBG]  agent 6 is in conflict with agent 71
[DBG]  agent 6 is in conflict with agent 111
[DBG]  agent 7 is in conflict with agent 58
[DBG]  agent 14 is in conflict with agent 58
[DBG]  agent 35 is in conflict with agent 102
[DBG]  agent 54 is in conflict with agent 58
[DBG]  agent 58 is in conflict with agent 77
[DBG]  agent 58 is in conflict with agent 140
[DBG]  buildCollisionData() => sum_of_costs=4465, num_of_colliding_pairs=8
[DBG]  buildCollisionData done => sum_of_costs=4465, num_of_colliding_pairs=8
[DBG]  sum_of_cost hodnota: 4465
[DBG]  After skip/init build => iteration_stats.back(): sum_of_costs=4465, collisions=8
[DEBUG] Using default neighbor generation strategy for conflicts: 1
[DEBUG] Using default neighbor generation strategy for conflicts: 1
[DEBUG] Using default neighbor generation strategy for conflicts: 0
	InitLNS(PP): runtime = 0.00732696, iterations = 4, colliding pairs = 0, initial colliding pairs = 8, solution cost = 4459, initial solution cost = 4465, failed iterations = 0
[DBG]  init_lns->sum_of_costs after init_lns->run: 4459
[DBG]  sum_of_costs after assignment from init_lns->run: 4459
[DBG]  Recomputing sum_of_cost by dividing neighbor.sum_of_costs and neighbor.old_sum_of_costs
[STAT] sum_of_costs after recomputation: 4459
[STAT] Iteration 42
[DBG]  Using SAT operator (destroy+repair SAT).
[DBG]  ====================
[DBG]  SAT destroy operator called.
[DBG]  SAT heuristic: 2
[DBG]  key_agent_id: 4
[DBG]  key_agent_id global path length: 46
[DBG]  Submap content (global positions):
[DBG]  409 410 411 412 413 
[DBG]  441 442 443 444 445 
[DBG]  473 474 475 476 477 
[DBG]  505 506 507 508 509 
[DBG]  537 538 539 540 541 
[DBG]  Map content with agents and obstacles:
[DBG]  . X . . . 
[DBG]  A X . . . 
[DBG]  A . A . . 
[DBG]  A . . . . 
[DBG]  X A A . . 
[DBG]  content of the map structure that we pass to the SAT solver:
[DBG]  1  -1  1  1  1  
[DBG]  1  -1  1  1  1  
[DBG]  1  1  1  1  1  
[DBG]  1  1  1  1  1  
[DBG]  -1  1  1  1  1  
[DBG]  Identifying agents in a submap for rescheduling (when key_agent is there at the time 16):
[DBG]  Agent 2 found intervals in the sub-map:
[DBG]   [14..20]
[DBG]  Agent 2 (interval in submap: [14..20]) contains time 16, added to replan.
[DBG]  Agent 4 found intervals in the sub-map:
[DBG]   [13..19]
[DBG]  Agent 4 (interval in submap: [13..19]) contains time 16, added to replan.
[DBG]  Agent 25 found intervals in the sub-map:
[DBG]   [18..24]
[DBG]  Agent 25 is not in sub-map at time 16 (intervals: 
[DBG]  [18..24] )
[DBG]  Agent 46 found intervals in the sub-map:
[DBG]   [16..22]
[DBG]  Agent 46 (interval in submap: [16..22]) contains time 16, added to replan.
[DBG]  Agent 52 found intervals in the sub-map:
[DBG]   [15..16]
[DBG]  Agent 52 (interval in submap: [15..16]) contains time 16, added to replan.
[DBG]  Agent 119 found intervals in the sub-map:
[DBG]   [16..20]
[DBG]  Agent 119 (interval in submap: [16..20]) contains time 16, added to replan.
[DBG]  Agent 144 found intervals in the sub-map:
[DBG]   [13..18]
[DBG]  Agent 144 (interval in submap: [13..18]) contains time 16, added to replan.
[DBG]  Agent 2 | Start (global): 473 -> (local): (2, 0) at time 16 | Goal (global): 539 -> (local): (4, 2) at time 20
[DBG]  Agent 4 | Start (global): 475 -> (local): (2, 2) at time 16 | Goal (global): 473 -> (local): (2, 0) at time 19
[DBG]  Agent 46 | Start (global): 538 -> (local): (4, 1) at time 16 | Goal (global): 412 -> (local): (0, 3) at time 22
[DBG]  Agent 52 | Start (global): 441 -> (local): (1, 0) at time 16 | Goal (global): 441 -> (local): (1, 0) at time 16
[DBG]  Agent 119 | Start (global): 539 -> (local): (4, 2) at time 16 | Goal (global): 473 -> (local): (2, 0) at time 20
[DBG]  Agent 144 | Start (global): 505 -> (local): (3, 0) at time 16 | Goal (global): 538 -> (local): (4, 1) at time 18
[DBG]  [REPAIR] SAT destroy operator called.
[DBG]  [REPAIR] SAT operator â€“ launching subproblem FOR OPTIMIZATION.
[DBG]  Creating local paths (sx, sy) in the submap for T_sync = 16
[DBG]    Agent 2 (global paths from T=16 to 20) has local path: (2,0) (2,1) (3,1) (3,2) (4,2) 
[DBG]    Agent 4 (global paths from T=16 to 19) has local path: (2,2) (2,2) (2,1) (2,0) 
[DBG]    Agent 46 (global paths from T=16 to 22) has local path: (4,1) (4,2) (3,2) (2,2) (1,2) (0,2) (0,3) 
[DBG]    Agent 52 (global paths from T=16 to 16) has local path: (1,0) 
[DBG]    Agent 119 (global paths from T=16 to 20) has local path: (4,2) (3,2) (2,2) (2,1) (2,0) 
[DBG]    Agent 144 (global paths from T=16 to 18) has local path: (3,0) (3,1) (4,1) 
[DBG]  Checking input data for SAT solver:
[DBG]    - Number of agents to replan: 6
[DBG]  Agent 2 has the original local path length: 5 => Start (2,0), Goal (4,2)
[DBG]  Agent 4 has the original local path length: 4 => Start (2,2), Goal (2,0)
[DBG]  Agent 46 has the original local path length: 7 => Start (4,1), Goal (0,3)
[DBG]  Agent 52 has the original local path length: 1 => Start (1,0), Goal (1,0)
[DBG]  Agent 119 has the original local path length: 5 => Start (4,2), Goal (2,0)
[DBG]  Agent 144 has the original local path length: 3 => Start (3,0), Goal (4,1)
[DBG]  Start position: (2, 0), (2, 2), (4, 1), (1, 0), (4, 2), (3, 0), 
[DBG]  Goal position: (4, 2), (2, 0), (0, 3), (1, 0), (2, 0), (4, 1), 
[DBG]  SAT instance and solver created.
Currently solving
Instance name: scen
Map name: map
Encoding used: disappear_at_goal
SAT solver used: Kissat
Optimizing function: sum of costs
Number of agents: 6
Mks LB: 7
SoC LB: 24
Delta: 0
Remaining time: 300000 [ms]

Vertex conflict! Agents 0, 1, timestep 5, location 0
Swapping conflict! Agents 0, 1, timestep 5, edge (0,0)
Vertex conflict! Agents 0, 1, timestep 6, location 0
Vertex conflict! Agents 0, 3, timestep 5, location 0
Swapping conflict! Agents 0, 3, timestep 5, edge (0,0)
Vertex conflict! Agents 0, 3, timestep 6, location 0
Vertex conflict! Agents 0, 4, timestep 5, location 0
Swapping conflict! Agents 0, 4, timestep 5, edge (0,0)
Vertex conflict! Agents 0, 4, timestep 6, location 0
Vertex conflict! Agents 0, 5, timestep 5, location 0
Swapping conflict! Agents 0, 5, timestep 5, edge (0,0)
Vertex conflict! Agents 0, 5, timestep 6, location 0
Vertex conflict! Agents 1, 3, timestep 3, location 0
Swapping conflict! Agents 1, 3, timestep 3, edge (0,0)
Vertex conflict! Agents 1, 3, timestep 4, location 0
Swapping conflict! Agents 1, 3, timestep 4, edge (0,0)
Vertex conflict! Agents 1, 3, timestep 5, location 0
Swapping conflict! Agents 1, 3, timestep 5, edge (0,0)
Vertex conflict! Agents 1, 3, timestep 6, location 0
Vertex conflict! Agents 1, 4, timestep 5, location 0
Swapping conflict! Agents 1, 4, timestep 5, edge (0,0)
Vertex conflict! Agents 1, 4, timestep 6, location 0
Vertex conflict! Agents 1, 5, timestep 3, location 0
Swapping conflict! Agents 1, 5, timestep 3, edge (0,0)
Vertex conflict! Agents 1, 5, timestep 4, location 0
Swapping conflict! Agents 1, 5, timestep 4, edge (0,0)
Vertex conflict! Agents 1, 5, timestep 5, location 0
Swapping conflict! Agents 1, 5, timestep 5, edge (0,0)
Vertex conflict! Agents 1, 5, timestep 6, location 0
Vertex conflict! Agents 3, 4, timestep 5, location 0
Swapping conflict! Agents 3, 4, timestep 5, edge (0,0)
Vertex conflict! Agents 3, 4, timestep 6, location 0
Vertex conflict! Agents 3, 5, timestep 3, location 0
Swapping conflict! Agents 3, 5, timestep 3, edge (0,0)
Vertex conflict! Agents 3, 5, timestep 4, location 0
Swapping conflict! Agents 3, 5, timestep 4, edge (0,0)
Vertex conflict! Agents 3, 5, timestep 5, location 0
Swapping conflict! Agents 3, 5, timestep 5, edge (0,0)
Vertex conflict! Agents 3, 5, timestep 6, location 0
Vertex conflict! Agents 4, 5, timestep 5, location 0
Swapping conflict! Agents 4, 5, timestep 5, edge (0,0)
Vertex conflict! Agents 4, 5, timestep 6, location 0
Found plan [agents = 6] [timesteps = 7]
Agent #0 : 8 13 14 18 19 0 0 
Agent #1 : 10 9 8 0 0 0 0 
Agent #2 : 18 19 20 16 11 6 2 
Agent #3 : 4 0 0 0 0 0 0 
Agent #4 : 19 15 10 9 8 0 0 
Agent #5 : 13 14 18 0 0 0 0 

[STAT] Solver returned: 0
[DBG]  Agent (index) 2 | New local path (submap idx):
[DBG]  8 13 14 18 19 
[DBG]  Agent (index) 4 | New local path (submap idx):
[DBG]  10 9 8 
[DBG]  Agent (index) 46 | New local path (submap idx):
[DBG]  18 19 20 16 11 6 2 
[DBG]  Agent (index) 52 | New local path (submap idx):
[DBG]  4 
[DBG]  Agent (index) 119 | New local path (submap idx):
[DBG]  19 15 10 9 8 
[DBG]  Agent (index) 144 | New local path (submap idx):
[DBG]  13 14 18 
[DBG]  Update the agent path 2 | Original local length: 5 | New local length: 5
[DBG]  agent 2 t=0 => decoded (sx,sy)=(2,0) => global_id=473
[DBG]  agent 2 t=1 => decoded (sx,sy)=(3,0) => global_id=505
[DBG]  agent 2 t=2 => decoded (sx,sy)=(3,1) => global_id=506
[DBG]  agent 2 t=3 => decoded (sx,sy)=(4,1) => global_id=538
[DBG]  agent 2 t=4 => decoded (sx,sy)=(4,2) => global_id=539
[DBG]  Complete path of agent 2:
[DBG]    Original: 59 91 90 89 89 121 153 185 217 249 281 313 345 377 409 441 473 474 506 507 539 571 603 604 604 636 637 638 670 702 701 733 732 764 
[DBG]    New:     59 91 90 89 89 121 153 185 217 249 281 313 345 377 409 441 473 505 506 538 539 571 603 604 604 636 637 638 670 702 701 733 732 764 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 59 91 90 89 89 121 153 185 217 249 281 313 345 377 409 441 
[DBG]    Local path (in submap): 473 505 506 538 539 
[DBG]    Suffix (out of submap): 571 603 604 604 636 637 638 670 702 701 733 732 764 
[DBG]  Original agent path length 2 je: 34
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 0: 59, 91, 90, 89, 89, 121, 153, 185, 217, 249, 281, 313, 345, 377, 409, 441, 473, 505, 506, 538, 539, 571, 603, 604, 604, 636, 637, 638, 670, 702, 701, 733, 732, 764, 
[DBG]  Path for agent 2 updated, resulting length: 34
[DBG]  Update the agent path 4 | Original local length: 4 | New local length: 3
[DBG]  agent 4 t=0 => decoded (sx,sy)=(2,2) => global_id=475
[DBG]  agent 4 t=1 => decoded (sx,sy)=(2,1) => global_id=474
[DBG]  agent 4 t=2 => decoded (sx,sy)=(2,0) => global_id=473
[DBG]  Complete path of agent 4:
[DBG]    Original: 829 797 765 733 701 702 670 638 637 636 604 603 571 539 507 475 475 475 474 473 472 440 439 438 470 469 501 469 468 467 466 465 464 463 462 494 526 525 524 523 522 521 520 519 551 583 
[DBG]    New:     829 797 765 733 701 702 670 638 637 636 604 603 571 539 507 475 475 474 473 472 440 439 438 470 469 501 469 468 467 466 465 464 463 462 494 526 525 524 523 522 521 520 519 551 583 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 829 797 765 733 701 702 670 638 637 636 604 603 571 539 507 475 
[DBG]    Local path (in submap): 475 474 473 472 
[DBG]    Suffix (out of submap): 440 439 438 470 469 501 469 468 467 466 465 464 463 462 494 526 525 524 523 522 521 520 519 551 583 
[DBG]  Original agent path length 4 je: 46
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 1: 829, 797, 765, 733, 701, 702, 670, 638, 637, 636, 604, 603, 571, 539, 507, 475, 475, 474, 473, 472, 440, 439, 438, 470, 469, 501, 469, 468, 467, 466, 465, 464, 463, 462, 494, 526, 525, 524, 523, 522, 521, 520, 519, 551, 583, 
[DBG]  Path for agent 4 updated, resulting length: 45
[DBG]  Update the agent path 46 | Original local length: 7 | New local length: 7
[DBG]  agent 46 t=0 => decoded (sx,sy)=(4,1) => global_id=538
[DBG]  agent 46 t=1 => decoded (sx,sy)=(4,2) => global_id=539
[DBG]  agent 46 t=2 => decoded (sx,sy)=(4,3) => global_id=540
[DBG]  agent 46 t=3 => decoded (sx,sy)=(3,3) => global_id=508
[DBG]  agent 46 t=4 => decoded (sx,sy)=(2,3) => global_id=476
[DBG]  agent 46 t=5 => decoded (sx,sy)=(1,3) => global_id=444
[DBG]  agent 46 t=6 => decoded (sx,sy)=(0,3) => global_id=412
[DBG]  Complete path of agent 46:
[DBG]    Original: 786 787 755 756 724 725 726 727 728 696 664 632 600 601 602 570 538 539 507 475 443 411 412 380 348 349 317 285 284 252 
[DBG]    New:     786 787 755 756 724 725 726 727 728 696 664 632 600 601 602 570 538 539 540 508 476 444 412 380 348 349 317 285 284 252 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 786 787 755 756 724 725 726 727 728 696 664 632 600 601 602 570 
[DBG]    Local path (in submap): 538 539 540 508 476 444 412 
[DBG]    Suffix (out of submap): 380 348 349 317 285 284 252 
[DBG]  Original agent path length 46 je: 30
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 2: 786, 787, 755, 756, 724, 725, 726, 727, 728, 696, 664, 632, 600, 601, 602, 570, 538, 539, 540, 508, 476, 444, 412, 380, 348, 349, 317, 285, 284, 252, 
[DBG]  Path for agent 46 updated, resulting length: 30
[DBG]  Update the agent path 52 | Original local length: 1 | New local length: 1
[DBG]  agent 52 t=0 => decoded (sx,sy)=(1,0) => global_id=441
[DBG]  Complete path of agent 52:
[DBG]    Original: 28 60 59 91 123 122 121 153 185 217 249 281 313 345 377 409 441 
[DBG]    New:     28 60 59 91 123 122 121 153 185 217 249 281 313 345 377 409 441 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 28 60 59 91 123 122 121 153 185 217 249 281 313 345 377 409 
[DBG]    Local path (in submap): 441 
[DBG]    Suffix (out of submap): 
[DBG]  Original agent path length 52 je: 17
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 3: 28, 60, 59, 91, 123, 122, 121, 153, 185, 217, 249, 281, 313, 345, 377, 409, 441, 
[DBG]  Path for agent 52 updated, resulting length: 17
[DBG]  Update the agent path 119 | Original local length: 5 | New local length: 5
[DBG]  agent 119 t=0 => decoded (sx,sy)=(4,2) => global_id=539
[DBG]  agent 119 t=1 => decoded (sx,sy)=(3,2) => global_id=507
[DBG]  agent 119 t=2 => decoded (sx,sy)=(2,2) => global_id=475
[DBG]  agent 119 t=3 => decoded (sx,sy)=(2,1) => global_id=474
[DBG]  agent 119 t=4 => decoded (sx,sy)=(2,0) => global_id=473
[DBG]  Complete path of agent 119:
[DBG]    Original: 861 862 830 829 797 765 733 701 702 670 638 637 636 635 603 571 539 507 475 474 473 472 440 439 438 437 469 468 467 466 465 433 432 400 368 336 335 303 271 270 269 237 236 204 172 140 
[DBG]    New:     861 862 830 829 797 765 733 701 702 670 638 637 636 635 603 571 539 507 475 474 473 472 440 439 438 437 469 468 467 466 465 433 432 400 368 336 335 303 271 270 269 237 236 204 172 140 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 861 862 830 829 797 765 733 701 702 670 638 637 636 635 603 571 
[DBG]    Local path (in submap): 539 507 475 474 473 
[DBG]    Suffix (out of submap): 472 440 439 438 437 469 468 467 466 465 433 432 400 368 336 335 303 271 270 269 237 236 204 172 140 
[DBG]  Original agent path length 119 je: 46
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 4: 861, 862, 830, 829, 797, 765, 733, 701, 702, 670, 638, 637, 636, 635, 603, 571, 539, 507, 475, 474, 473, 472, 440, 439, 438, 437, 469, 468, 467, 466, 465, 433, 432, 400, 368, 336, 335, 303, 271, 270, 269, 237, 236, 204, 172, 140, 
[DBG]  Path for agent 119 updated, resulting length: 46
[DBG]  Update the agent path 144 | Original local length: 3 | New local length: 3
[DBG]  agent 144 t=0 => decoded (sx,sy)=(3,0) => global_id=505
[DBG]  agent 144 t=1 => decoded (sx,sy)=(3,1) => global_id=506
[DBG]  agent 144 t=2 => decoded (sx,sy)=(4,1) => global_id=538
[DBG]  Complete path of agent 144:
[DBG]    Original: 121 153 185 185 217 249 281 313 312 344 344 376 408 409 441 473 505 506 538 570 569 601 600 599 631 
[DBG]    New:     121 153 185 185 217 249 281 313 312 344 344 376 408 409 441 473 505 506 538 570 569 601 600 599 631 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 121 153 185 185 217 249 281 313 312 344 344 376 408 409 441 473 
[DBG]    Local path (in submap): 505 506 538 
[DBG]    Suffix (out of submap): 570 569 601 600 599 631 
[DBG]  Original agent path length 144 je: 25
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 5: 121, 153, 185, 185, 217, 249, 281, 313, 312, 344, 344, 376, 408, 409, 441, 473, 505, 506, 538, 570, 569, 601, 600, 599, 631, 
[DBG]  Path for agent 144 updated, resulting length: 25
[DBG]  Paths successfully updated.
[DBG]  (LNS.cpp) New path for agent 2: 
[DBG]  59, 91, 90, 89, 89, 121, 153, 185, 217, 249, 281, 313, 345, 377, 409, 441, 473, 505, 506, 538, 539, 571, 603, 604, 604, 636, 637, 638, 670, 702, 701, 733, 732, 764, 
[DBG]  (LNS.cpp) New path for agent 4: 
[DBG]  829, 797, 765, 733, 701, 702, 670, 638, 637, 636, 604, 603, 571, 539, 507, 475, 475, 474, 473, 472, 440, 439, 438, 470, 469, 501, 469, 468, 467, 466, 465, 464, 463, 462, 494, 526, 525, 524, 523, 522, 521, 520, 519, 551, 583, 
[DBG]  (LNS.cpp) New path for agent 46: 
[DBG]  786, 787, 755, 756, 724, 725, 726, 727, 728, 696, 664, 632, 600, 601, 602, 570, 538, 539, 540, 508, 476, 444, 412, 380, 348, 349, 317, 285, 284, 252, 
[DBG]  (LNS.cpp) New path for agent 52: 
[DBG]  28, 60, 59, 91, 123, 122, 121, 153, 185, 217, 249, 281, 313, 345, 377, 409, 441, 
[DBG]  (LNS.cpp) New path for agent 119: 
[DBG]  861, 862, 830, 829, 797, 765, 733, 701, 702, 670, 638, 637, 636, 635, 603, 571, 539, 507, 475, 474, 473, 472, 440, 439, 438, 437, 469, 468, 467, 466, 465, 433, 432, 400, 368, 336, 335, 303, 271, 270, 269, 237, 236, 204, 172, 140, 
[DBG]  (LNS.cpp) New path for agent 144: 
[DBG]  121, 153, 185, 185, 217, 249, 281, 313, 312, 344, 344, 376, 408, 409, 441, 473, 505, 506, 538, 570, 569, 601, 600, 599, 631, 
[DBG]  component_weights = {0.265961, 0.19643, 0.205417, 0.332192}
[DBG]  opSuccess value: 1
[STAT] neighbor.sum_of_costs before recomputation: 191
[STAT] neighbor.old_sum_of_costs before recomputation: 192
[STAT] sum_of_costs before recomputation: 4459
[DBG]  Validate solution immediately after SAT success.
[WARNING] Problem after SAT: Vertex conflict between agents 45 and 4 at location 469 at timestep 24
[DBG]  Attempting immediate repair via init_lns because problem occurred after SAT (should be applied only for conflicts...).
[DBG]  Passing 150 agents to init_lns (skip=true).
[DBG]  path_table contents for selected agents (neighbor.agents):
[DBG]    Agent 2 => controlling path length=34
[DBG]    Agent 4 => controlling path length=45
[DBG]    Agent 46 => controlling path length=30
[DBG]    Agent 52 => controlling path length=17
[DBG]    Agent 119 => controlling path length=46
[DBG]    Agent 144 => controlling path length=25
[DBG]  hodnota skip_initial_solution=1
[DBG]  We skip initialSolution => call buildCollisionData()
[DBG]  buildCollisionData() called â€“ skip_initial_solution case.
[DBG]  Agents.size()=150, collision_graph.size()=150
[DBG]  agent 4 => updateCollidingPairs => foundCollision
[DBG]  agent 45 => updateCollidingPairs => foundCollision
[DBG]  agent 119 => updateCollidingPairs => foundCollision
[DBG]  Conflicting agent pairs:
[DBG]  agent 4 is in conflict with agent 45
[DBG]  agent 4 is in conflict with agent 119
[DBG]  buildCollisionData() => sum_of_costs=4458, num_of_colliding_pairs=2
[DBG]  buildCollisionData done => sum_of_costs=4458, num_of_colliding_pairs=2
[DBG]  sum_of_cost hodnota: 4458
[DBG]  After skip/init build => iteration_stats.back(): sum_of_costs=4458, collisions=2
[DEBUG] Using default neighbor generation strategy for conflicts: 0
	InitLNS(PP): runtime = 0.00662162, iterations = 2, colliding pairs = 0, initial colliding pairs = 2, solution cost = 4454, initial solution cost = 4458, failed iterations = 0
[DBG]  init_lns->sum_of_costs after init_lns->run: 4454
[DBG]  sum_of_costs after assignment from init_lns->run: 4454
[DBG]  Recomputing sum_of_cost by dividing neighbor.sum_of_costs and neighbor.old_sum_of_costs
[STAT] sum_of_costs after recomputation: 4454
[STAT] Iteration 43
[DBG]  Using SAT operator (destroy+repair SAT).
[DBG]  ====================
[DBG]  SAT destroy operator called.
[DBG]  SAT heuristic: 2
[DBG]  key_agent_id: 48
[DBG]  key_agent_id global path length: 18
[DBG]  Submap content (global positions):
[DBG]  149 150 151 152 153 
[DBG]  181 182 183 184 185 
[DBG]  213 214 215 216 217 
[DBG]  245 246 247 248 249 
[DBG]  277 278 279 280 281 
[DBG]  Map content with agents and obstacles:
[DBG]  . . . X A 
[DBG]  . X . A A 
[DBG]  A . A . . 
[DBG]  X X . . . 
[DBG]  . . . X . 
[DBG]  content of the map structure that we pass to the SAT solver:
[DBG]  1  1  1  -1  1  
[DBG]  1  -1  1  1  1  
[DBG]  1  1  1  1  1  
[DBG]  -1  -1  1  1  1  
[DBG]  1  1  1  -1  1  
[DBG]  Identifying agents in a submap for rescheduling (when key_agent is there at the time 1):
[DBG]  Agent 5 found intervals in the sub-map:
[DBG]   [0..0]
[DBG]  Agent 5 is not in sub-map at time 1 (intervals: 
[DBG]  [0..0] )
[DBG]  Agent 45 found intervals in the sub-map:
[DBG]   [0..1] [4..18]
[DBG]  Agent 45 (interval in submap: [0..1]) contains time 1, added to replan.
[DBG]  Agent 48 found intervals in the sub-map:
[DBG]   [0..3]
[DBG]  Agent 48 (interval in submap: [0..3]) contains time 1, added to replan.
[DBG]  Agent 57 found intervals in the sub-map:
[DBG]   [0..7]
[DBG]  Agent 57 (interval in submap: [0..7]) contains time 1, added to replan.
[DBG]  Agent 117 found intervals in the sub-map:
[DBG]   [0..3]
[DBG]  Agent 117 (interval in submap: [0..3]) contains time 1, added to replan.
[DBG]  Agent 144 found intervals in the sub-map:
[DBG]   [1..6]
[DBG]  Agent 144 (interval in submap: [1..6]) contains time 1, added to replan.
[DBG]  Agent 45 | Start (global): 185 -> (local): (1, 4) at time 1 | Goal (global): 185 -> (local): (1, 4) at time 1
[DBG]  Agent 48 | Start (global): 215 -> (local): (2, 2) at time 1 | Goal (global): 217 -> (local): (2, 4) at time 3
[DBG]  Agent 57 | Start (global): 184 -> (local): (1, 3) at time 1 | Goal (global): 277 -> (local): (4, 0) at time 7
[DBG]  Agent 117 | Start (global): 213 -> (local): (2, 0) at time 1 | Goal (global): 181 -> (local): (1, 0) at time 3
[DBG]  Agent 144 | Start (global): 153 -> (local): (0, 4) at time 1 | Goal (global): 281 -> (local): (4, 4) at time 6
[DBG]  [REPAIR] SAT destroy operator called.
[DBG]  [REPAIR] SAT operator â€“ launching subproblem FOR OPTIMIZATION.
[DBG]  Creating local paths (sx, sy) in the submap for T_sync = 1
[DBG]    Agent 45 (global paths from T=1 to 1) has local path: (1,4) 
[DBG]    Agent 48 (global paths from T=1 to 3) has local path: (2,2) (2,3) (2,4) 
[DBG]    Agent 57 (global paths from T=1 to 7) has local path: (1,3) (1,2) (2,2) (3,2) (4,2) (4,1) (4,0) 
[DBG]    Agent 117 (global paths from T=1 to 3) has local path: (2,0) (1,0) (1,0) 
[DBG]    Agent 144 (global paths from T=1 to 6) has local path: (0,4) (1,4) (1,4) (2,4) (3,4) (4,4) 
[DBG]  Checking input data for SAT solver:
[DBG]    - Number of agents to replan: 5
[DBG]  Agent 45 has the original local path length: 1 => Start (1,4), Goal (1,4)
[DBG]  Agent 48 has the original local path length: 3 => Start (2,2), Goal (2,4)
[DBG]  Agent 57 has the original local path length: 7 => Start (1,3), Goal (4,0)
[DBG]  Agent 117 has the original local path length: 3 => Start (2,0), Goal (1,0)
[DBG]  Agent 144 has the original local path length: 6 => Start (0,4), Goal (4,4)
[DBG]  Start position: (1, 4), (2, 2), (1, 3), (2, 0), (0, 4), 
[DBG]  Goal position: (1, 4), (2, 4), (4, 0), (1, 0), (4, 4), 
[DBG]  SAT instance and solver created.
Currently solving
Instance name: scen
Map name: map
Encoding used: disappear_at_goal
SAT solver used: Kissat
Optimizing function: sum of costs
Number of agents: 5
Mks LB: 7
SoC LB: 18
Delta: 0
Remaining time: 300000 [ms]

[STAT] Solver returned: -1
[DBG]  SAT solver failed.
[STAT] SAT solver failed to find a valid solution.
[DBG]  ====================
[DBG]  SAT destroy operator called.
[DBG]  SAT heuristic: 2
[DBG]  key_agent_id: 48
[DBG]  key_agent_id global path length: 18
[DBG]  Submap content (global positions):
[DBG]  -1 -1 -1 -1 -1 
[DBG]  27 28 29 30 31 
[DBG]  59 60 61 62 63 
[DBG]  91 92 93 94 95 
[DBG]  123 124 125 126 127 
[DBG]  Map content with agents and obstacles:
[DBG]  X X X X X 
[DBG]  . . . . . 
[DBG]  . . A . . 
[DBG]  . X . . . 
[DBG]  . . X . . 
[DBG]  content of the map structure that we pass to the SAT solver:
[DBG]  1  1  1  1  1  
[DBG]  1  1  1  1  1  
[DBG]  1  1  1  1  1  
[DBG]  1  -1  1  1  1  
[DBG]  1  1  -1  1  1  
[DBG]  Identifying agents in a submap for rescheduling (when key_agent is there at the time 15):
[DBG]  Agent 48 found intervals in the sub-map:
[DBG]   [11..17]
[DBG]  Agent 48 (interval in submap: [11..17]) contains time 15, added to replan.
[DBG]  Agent 48 | Start (global): 61 -> (local): (2, 2) at time 15 | Goal (global): 94 -> (local): (3, 3) at time 17
[DBG]  [REPAIR] SAT destroy operator called.
[DBG]  [REPAIR] SAT operator â€“ launching subproblem FOR OPTIMIZATION.
[DBG]  Creating local paths (sx, sy) in the submap for T_sync = 15
[DBG]    Agent 48 (global paths from T=15 to 17) has local path: (2,2) (2,3) (3,3) 
[DBG]  Checking input data for SAT solver:
[DBG]    - Number of agents to replan: 1
[DBG]  Agent 48 has the original local path length: 3 => Start (2,2), Goal (3,3)
[DBG]  Start position: (2, 2), 
[DBG]  Goal position: (3, 3), 
[DBG]  SAT instance and solver created.
Currently solving
Instance name: scen
Map name: map
Encoding used: disappear_at_goal
SAT solver used: Kissat
Optimizing function: sum of costs
Number of agents: 1
Mks LB: 3
SoC LB: 3
Delta: 0
Remaining time: 300000 [ms]

Found plan [agents = 1] [timesteps = 3]
Agent #0 : 12 16 17 

[STAT] Solver returned: 0
[DBG]  Agent (index) 48 | New local path (submap idx):
[DBG]  12 16 17 
[DBG]  Update the agent path 48 | Original local length: 3 | New local length: 3
[DBG]  agent 48 t=0 => decoded (sx,sy)=(2,2) => global_id=61
[DBG]  agent 48 t=1 => decoded (sx,sy)=(3,2) => global_id=93
[DBG]  agent 48 t=2 => decoded (sx,sy)=(3,3) => global_id=94
[DBG]  Complete path of agent 48:
[DBG]    Original: 247 215 216 217 218 186 186 186 154 154 122 123 91 59 60 61 62 94 
[DBG]    New:     247 215 216 217 218 186 186 186 154 154 122 123 91 59 60 61 93 94 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 247 215 216 217 218 186 186 186 154 154 122 123 91 59 60 
[DBG]    Local path (in submap): 61 93 94 
[DBG]    Suffix (out of submap): 
[DBG]  Original agent path length 48 je: 18
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 0: 247, 215, 216, 217, 218, 186, 186, 186, 154, 154, 122, 123, 91, 59, 60, 61, 93, 94, 
[DBG]  Path for agent 48 updated, resulting length: 18
[DBG]  Paths successfully updated.
[DBG]  (LNS.cpp) New path for agent 48: 
[DBG]  247, 215, 216, 217, 218, 186, 186, 186, 154, 154, 122, 123, 91, 59, 60, 61, 93, 94, 
[DBG]  component_weights = {0.269923, 0.19537, 0.204308, 0.330399}
[DBG]  opSuccess value: 1
[STAT] neighbor.sum_of_costs before recomputation: 17
[STAT] neighbor.old_sum_of_costs before recomputation: 17
[STAT] sum_of_costs before recomputation: 4454
[DBG]  Validate solution immediately after SAT success.
[DBG]  No problems after SAT replan.
[DBG]  Recomputing sum_of_cost by dividing neighbor.sum_of_costs and neighbor.old_sum_of_costs
[STAT] sum_of_costs after recomputation: 4454
[STAT] Iteration 44
[DBG]  Using SAT operator (destroy+repair SAT).
[DBG]  ====================
[DBG]  SAT destroy operator called.
[DBG]  SAT heuristic: 2
[DBG]  key_agent_id: 41
[DBG]  key_agent_id global path length: 13
[DBG]  Submap content (global positions):
[DBG]  876 877 878 879 880 
[DBG]  908 909 910 911 912 
[DBG]  940 941 942 943 944 
[DBG]  972 973 974 975 976 
[DBG]  1004 1005 1006 1007 1008 
[DBG]  Map content with agents and obstacles:
[DBG]  . . . . . 
[DBG]  . . . X A 
[DBG]  . . A X . 
[DBG]  X . . A . 
[DBG]  . . . X . 
[DBG]  content of the map structure that we pass to the SAT solver:
[DBG]  1  1  1  1  1  
[DBG]  1  1  1  -1  1  
[DBG]  1  1  1  -1  1  
[DBG]  -1  1  1  1  1  
[DBG]  1  1  1  -1  1  
[DBG]  Identifying agents in a submap for rescheduling (when key_agent is there at the time 7):
[DBG]  Agent 41 found intervals in the sub-map:
[DBG]   [3..11]
[DBG]  Agent 41 (interval in submap: [3..11]) contains time 7, added to replan.
[DBG]  Agent 68 found intervals in the sub-map:
[DBG]   [8..14]
[DBG]  Agent 68 is not in sub-map at time 7 (intervals: 
[DBG]  [8..14] )
[DBG]  Agent 79 found intervals in the sub-map:
[DBG]   [0..7]
[DBG]  Agent 79 (interval in submap: [0..7]) contains time 7, added to replan.
[DBG]  Agent 143 found intervals in the sub-map:
[DBG]   [0..1] [6..11]
[DBG]  Agent 143 (interval in submap: [6..11]) contains time 7, added to replan.
[DBG]  Agent 41 | Start (global): 942 -> (local): (2, 2) at time 7 | Goal (global): 876 -> (local): (0, 0) at time 11
[DBG]  Agent 79 | Start (global): 912 -> (local): (1, 4) at time 7 | Goal (global): 912 -> (local): (1, 4) at time 7
[DBG]  Agent 143 | Start (global): 975 -> (local): (3, 3) at time 7 | Goal (global): 878 -> (local): (0, 2) at time 11
[DBG]  [REPAIR] SAT destroy operator called.
[DBG]  [REPAIR] SAT operator â€“ launching subproblem FOR OPTIMIZATION.
[DBG]  Creating local paths (sx, sy) in the submap for T_sync = 7
[DBG]    Agent 41 (global paths from T=7 to 11) has local path: (2,2) (1,2) (1,1) (1,0) (0,0) 
[DBG]    Agent 79 (global paths from T=7 to 7) has local path: (1,4) 
[DBG]    Agent 143 (global paths from T=7 to 11) has local path: (3,3) (3,2) (2,2) (1,2) (0,2) 
[DBG]  Checking input data for SAT solver:
[DBG]    - Number of agents to replan: 3
[DBG]  Agent 41 has the original local path length: 5 => Start (2,2), Goal (0,0)
[DBG]  Agent 79 has the original local path length: 1 => Start (1,4), Goal (1,4)
[DBG]  Agent 143 has the original local path length: 5 => Start (3,3), Goal (0,2)
[DBG]  Start position: (2, 2), (1, 4), (3, 3), 
[DBG]  Goal position: (0, 0), (1, 4), (0, 2), 
[DBG]  SAT instance and solver created.
Currently solving
Instance name: scen
Map name: map
Encoding used: disappear_at_goal
SAT solver used: Kissat
Optimizing function: sum of costs
Number of agents: 3
Mks LB: 5
SoC LB: 11
Delta: 0
Remaining time: 300000 [ms]

Vertex conflict! Agents 0, 1, timestep 4, location 0
Found plan [agents = 3] [timesteps = 5]
Agent #0 : 11 10 9 5 0 
Agent #1 : 8 0 0 0 0 
Agent #2 : 15 14 11 7 2 

[STAT] Solver returned: 0
[DBG]  Agent (index) 41 | New local path (submap idx):
[DBG]  11 10 9 5 0 
[DBG]  Agent (index) 79 | New local path (submap idx):
[DBG]  8 
[DBG]  Agent (index) 143 | New local path (submap idx):
[DBG]  15 14 11 7 2 
[DBG]  Update the agent path 41 | Original local length: 5 | New local length: 5
[DBG]  agent 41 t=0 => decoded (sx,sy)=(2,2) => global_id=942
[DBG]  agent 41 t=1 => decoded (sx,sy)=(2,1) => global_id=941
[DBG]  agent 41 t=2 => decoded (sx,sy)=(2,0) => global_id=940
[DBG]  agent 41 t=3 => decoded (sx,sy)=(1,0) => global_id=908
[DBG]  agent 41 t=4 => decoded (sx,sy)=(0,0) => global_id=876
[DBG]  Complete path of agent 41:
[DBG]    Original: 970 1002 1003 1004 1005 973 974 942 910 909 908 876 844 
[DBG]    New:     970 1002 1003 1004 1005 973 974 942 941 940 908 876 844 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 970 1002 1003 1004 1005 973 974 
[DBG]    Local path (in submap): 942 941 940 908 876 
[DBG]    Suffix (out of submap): 844 
[DBG]  Original agent path length 41 je: 13
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 0: 970, 1002, 1003, 1004, 1005, 973, 974, 942, 941, 940, 908, 876, 844, 
[DBG]  Path for agent 41 updated, resulting length: 13
[DBG]  Update the agent path 79 | Original local length: 1 | New local length: 1
[DBG]  agent 79 t=0 => decoded (sx,sy)=(1,4) => global_id=912
[DBG]  Complete path of agent 79:
[DBG]    Original: 1004 1005 973 974 975 976 944 912 913 914 882 883 851 819 787 755 756 724 692 660 628 629 597 565 566 534 502 470 438 439 440 408 409 409 377 345 313 281 249 217 218 186 154 122 123 
[DBG]    New:     1004 1005 973 974 975 976 944 912 913 914 882 883 851 819 787 755 756 724 692 660 628 629 597 565 566 534 502 470 438 439 440 408 409 409 377 345 313 281 249 217 218 186 154 122 123 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 1004 1005 973 974 975 976 944 
[DBG]    Local path (in submap): 912 
[DBG]    Suffix (out of submap): 913 914 882 883 851 819 787 755 756 724 692 660 628 629 597 565 566 534 502 470 438 439 440 408 409 409 377 345 313 281 249 217 218 186 154 122 123 
[DBG]  Original agent path length 79 je: 45
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 1: 1004, 1005, 973, 974, 975, 976, 944, 912, 913, 914, 882, 883, 851, 819, 787, 755, 756, 724, 692, 660, 628, 629, 597, 565, 566, 534, 502, 470, 438, 439, 440, 408, 409, 409, 377, 345, 313, 281, 249, 217, 218, 186, 154, 122, 123, 
[DBG]  Path for agent 79 updated, resulting length: 45
[DBG]  Update the agent path 143 | Original local length: 5 | New local length: 5
[DBG]  agent 143 t=0 => decoded (sx,sy)=(3,3) => global_id=975
[DBG]  agent 143 t=1 => decoded (sx,sy)=(3,2) => global_id=974
[DBG]  agent 143 t=2 => decoded (sx,sy)=(2,2) => global_id=942
[DBG]  agent 143 t=3 => decoded (sx,sy)=(1,2) => global_id=910
[DBG]  agent 143 t=4 => decoded (sx,sy)=(0,2) => global_id=878
[DBG]  Complete path of agent 143:
[DBG]    Original: 975 976 977 977 977 977 976 975 974 942 910 878 846 845 813 812 780 748 747 715 683 684 
[DBG]    New:     975 976 977 977 977 977 976 975 974 942 910 878 846 845 813 812 780 748 747 715 683 684 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 975 976 977 977 977 977 976 
[DBG]    Local path (in submap): 975 974 942 910 878 
[DBG]    Suffix (out of submap): 846 845 813 812 780 748 747 715 683 684 
[DBG]  Original agent path length 143 je: 22
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 2: 975, 976, 977, 977, 977, 977, 976, 975, 974, 942, 910, 878, 846, 845, 813, 812, 780, 748, 747, 715, 683, 684, 
[DBG]  Path for agent 143 updated, resulting length: 22
[DBG]  Paths successfully updated.
[DBG]  (LNS.cpp) New path for agent 41: 
[DBG]  970, 1002, 1003, 1004, 1005, 973, 974, 942, 941, 940, 908, 876, 844, 
[DBG]  (LNS.cpp) New path for agent 79: 
[DBG]  1004, 1005, 973, 974, 975, 976, 944, 912, 913, 914, 882, 883, 851, 819, 787, 755, 756, 724, 692, 660, 628, 629, 597, 565, 566, 534, 502, 470, 438, 439, 440, 408, 409, 409, 377, 345, 313, 281, 249, 217, 218, 186, 154, 122, 123, 
[DBG]  (LNS.cpp) New path for agent 143: 
[DBG]  975, 976, 977, 977, 977, 977, 976, 975, 974, 942, 910, 878, 846, 845, 813, 812, 780, 748, 747, 715, 683, 684, 
[DBG]  component_weights = {0.273923, 0.1943, 0.203189, 0.328589}
[DBG]  opSuccess value: 1
[STAT] neighbor.sum_of_costs before recomputation: 77
[STAT] neighbor.old_sum_of_costs before recomputation: 77
[STAT] sum_of_costs before recomputation: 4454
[DBG]  Validate solution immediately after SAT success.
[DBG]  No problems after SAT replan.
[DBG]  Recomputing sum_of_cost by dividing neighbor.sum_of_costs and neighbor.old_sum_of_costs
[STAT] sum_of_costs after recomputation: 4454
[STAT] Iteration 45
[DBG]  Using SAT operator (destroy+repair SAT).
[DBG]  ====================
[DBG]  SAT destroy operator called.
[DBG]  SAT heuristic: 2
[DBG]  key_agent_id: 77
[DBG]  key_agent_id global path length: 26
[DBG]  Submap content (global positions):
[DBG]  604 605 606 607 -1 
[DBG]  636 637 638 639 -1 
[DBG]  668 669 670 671 -1 
[DBG]  700 701 702 703 -1 
[DBG]  732 733 734 735 -1 
[DBG]  Map content with agents and obstacles:
[DBG]  . X X X X 
[DBG]  . . A . X 
[DBG]  . X A . X 
[DBG]  X A . . X 
[DBG]  . . X . X 
[DBG]  content of the map structure that we pass to the SAT solver:
[DBG]  1  -1  -1  -1  1  
[DBG]  1  1  1  1  1  
[DBG]  1  -1  1  1  1  
[DBG]  -1  1  1  1  1  
[DBG]  1  1  -1  1  1  
[DBG]  Identifying agents in a submap for rescheduling (when key_agent is there at the time 18):
[DBG]  Agent 77 found intervals in the sub-map:
[DBG]   [15..24]
[DBG]  Agent 77 (interval in submap: [15..24]) contains time 18, added to replan.
[DBG]  Agent 94 found intervals in the sub-map:
[DBG]   [0..2] [8..24]
[DBG]  Agent 94 (interval in submap: [8..24]) contains time 18, added to replan.
[DBG]  Agent 133 found intervals in the sub-map:
[DBG]  
[DBG]  Agent 133 is not in sub-map at time 18 (intervals: 
[DBG]  )
[DBG]  Agent 142 found intervals in the sub-map:
[DBG]   [10..20]
[DBG]  Agent 142 (interval in submap: [10..20]) contains time 18, added to replan.
[DBG]  Agent 77 | Start (global): 670 -> (local): (2, 2) at time 18 | Goal (global): 732 -> (local): (4, 0) at time 24
[DBG]  Agent 94 | Start (global): 701 -> (local): (3, 1) at time 18 | Goal (global): 636 -> (local): (1, 0) at time 24
[DBG]  Agent 142 | Start (global): 638 -> (local): (1, 2) at time 18 | Goal (global): 636 -> (local): (1, 0) at time 20
[DBG]  [REPAIR] SAT destroy operator called.
[DBG]  [REPAIR] SAT operator â€“ launching subproblem FOR OPTIMIZATION.
[DBG]  Creating local paths (sx, sy) in the submap for T_sync = 18
[DBG]    Agent 77 (global paths from T=18 to 24) has local path: (2,2) (2,3) (3,3) (3,2) (3,1) (4,1) (4,0) 
[DBG]    Agent 94 (global paths from T=18 to 24) has local path: (3,1) (3,2) (3,2) (2,2) (1,2) (1,1) (1,0) 
[DBG]    Agent 142 (global paths from T=18 to 20) has local path: (1,2) (1,1) (1,0) 
[DBG]  Checking input data for SAT solver:
[DBG]    - Number of agents to replan: 3
[DBG]  Agent 77 has the original local path length: 7 => Start (2,2), Goal (4,0)
[DBG]  Agent 94 has the original local path length: 7 => Start (3,1), Goal (1,0)
[DBG]  Agent 142 has the original local path length: 3 => Start (1,2), Goal (1,0)
[DBG]  Start position: (2, 2), (3, 1), (1, 2), 
[DBG]  Goal position: (4, 0), (1, 0), (1, 0), 
[DBG]  SAT instance and solver created.
Currently solving
Instance name: scen
Map name: map
Encoding used: disappear_at_goal
SAT solver used: Kissat
Optimizing function: sum of costs
Number of agents: 3
Mks LB: 6
SoC LB: 14
Delta: 0
Remaining time: 300000 [ms]

[STAT] Solver returned: -1
[DBG]  SAT solver failed.
[STAT] SAT solver failed to find a valid solution.
[DBG]  ====================
[DBG]  SAT destroy operator called.
[DBG]  SAT heuristic: 2
[DBG]  key_agent_id: 77
[DBG]  key_agent_id global path length: 26
[DBG]  Submap content (global positions):
[DBG]  315 316 317 318 319 
[DBG]  347 348 349 350 351 
[DBG]  379 380 381 382 383 
[DBG]  411 412 413 414 415 
[DBG]  443 444 445 446 447 
[DBG]  Map content with agents and obstacles:
[DBG]  X X . . . 
[DBG]  . . A . . 
[DBG]  A . A X . 
[DBG]  . . . . . 
[DBG]  A . . X . 
[DBG]  content of the map structure that we pass to the SAT solver:
[DBG]  -1  -1  1  1  1  
[DBG]  1  1  1  1  1  
[DBG]  1  1  1  -1  1  
[DBG]  1  1  1  1  1  
[DBG]  1  1  1  -1  1  
[DBG]  Identifying agents in a submap for rescheduling (when key_agent is there at the time 4):
[DBG]  Agent 43 found intervals in the sub-map:
[DBG]   [0..4]
[DBG]  Agent 43 (interval in submap: [0..4]) contains time 4, added to replan.
[DBG]  Agent 77 found intervals in the sub-map:
[DBG]   [0..6]
[DBG]  Agent 77 (interval in submap: [0..6]) contains time 4, added to replan.
[DBG]  Agent 100 found intervals in the sub-map:
[DBG]   [3..7]
[DBG]  Agent 100 (interval in submap: [3..7]) contains time 4, added to replan.
[DBG]  Agent 129 found intervals in the sub-map:
[DBG]   [4..10]
[DBG]  Agent 129 (interval in submap: [4..10]) contains time 4, added to replan.
[DBG]  Agent 43 | Start (global): 379 -> (local): (2, 0) at time 4 | Goal (global): 379 -> (local): (2, 0) at time 4
[DBG]  Agent 77 | Start (global): 381 -> (local): (2, 2) at time 4 | Goal (global): 445 -> (local): (4, 2) at time 6
[DBG]  Agent 100 | Start (global): 349 -> (local): (1, 2) at time 4 | Goal (global): 379 -> (local): (2, 0) at time 7
[DBG]  Agent 129 | Start (global): 443 -> (local): (4, 0) at time 4 | Goal (global): 317 -> (local): (0, 2) at time 10
[DBG]  [REPAIR] SAT destroy operator called.
[DBG]  [REPAIR] SAT operator â€“ launching subproblem FOR OPTIMIZATION.
[DBG]  Creating local paths (sx, sy) in the submap for T_sync = 4
[DBG]    Agent 43 (global paths from T=4 to 4) has local path: (2,0) 
[DBG]    Agent 77 (global paths from T=4 to 6) has local path: (2,2) (3,2) (4,2) 
[DBG]    Agent 100 (global paths from T=4 to 7) has local path: (1,2) (1,1) (2,1) (2,0) 
[DBG]    Agent 129 (global paths from T=4 to 10) has local path: (4,0) (4,1) (3,1) (2,1) (2,2) (1,2) (0,2) 
[DBG]  Checking input data for SAT solver:
[DBG]    - Number of agents to replan: 4
[DBG]  Agent 43 has the original local path length: 1 => Start (2,0), Goal (2,0)
[DBG]  Agent 77 has the original local path length: 3 => Start (2,2), Goal (4,2)
[DBG]  Agent 100 has the original local path length: 4 => Start (1,2), Goal (2,0)
[DBG]  Agent 129 has the original local path length: 7 => Start (4,0), Goal (0,2)
[DBG]  Start position: (2, 0), (2, 2), (1, 2), (4, 0), 
[DBG]  Goal position: (2, 0), (4, 2), (2, 0), (0, 2), 
[DBG]  SAT instance and solver created.
Currently solving
Instance name: scen
Map name: map
Encoding used: disappear_at_goal
SAT solver used: Kissat
Optimizing function: sum of costs
Number of agents: 4
Mks LB: 7
SoC LB: 15
Delta: 0
Remaining time: 300000 [ms]

Vertex conflict! Agents 0, 1, timestep 3, location 0
Swapping conflict! Agents 0, 1, timestep 3, edge (0,0)
Vertex conflict! Agents 0, 1, timestep 4, location 0
Swapping conflict! Agents 0, 1, timestep 4, edge (0,0)
Vertex conflict! Agents 0, 1, timestep 5, location 0
Swapping conflict! Agents 0, 1, timestep 5, edge (0,0)
Vertex conflict! Agents 0, 1, timestep 6, location 0
Vertex conflict! Agents 0, 2, timestep 4, location 0
Swapping conflict! Agents 0, 2, timestep 4, edge (0,0)
Vertex conflict! Agents 0, 2, timestep 5, location 0
Swapping conflict! Agents 0, 2, timestep 5, edge (0,0)
Vertex conflict! Agents 0, 2, timestep 6, location 0
Vertex conflict! Agents 0, 3, timestep 6, location 0
Vertex conflict! Agents 1, 2, timestep 4, location 0
Swapping conflict! Agents 1, 2, timestep 4, edge (0,0)
Vertex conflict! Agents 1, 2, timestep 5, location 0
Swapping conflict! Agents 1, 2, timestep 5, edge (0,0)
Vertex conflict! Agents 1, 2, timestep 6, location 0
Vertex conflict! Agents 1, 3, timestep 6, location 0
Vertex conflict! Agents 2, 3, timestep 6, location 0
Found plan [agents = 4] [timesteps = 7]
Agent #0 : 8 0 0 0 0 0 0 
Agent #1 : 10 14 19 0 0 0 0 
Agent #2 : 5 10 9 8 0 0 0 
Agent #3 : 17 18 13 14 10 5 0 

[STAT] Solver returned: 0
[DBG]  Agent (index) 43 | New local path (submap idx):
[DBG]  8 
[DBG]  Agent (index) 77 | New local path (submap idx):
[DBG]  10 14 19 
[DBG]  Agent (index) 100 | New local path (submap idx):
[DBG]  5 10 9 8 
[DBG]  Agent (index) 129 | New local path (submap idx):
[DBG]  17 18 13 14 10 5 0 
[DBG]  Update the agent path 43 | Original local length: 1 | New local length: 1
[DBG]  agent 43 t=0 => decoded (sx,sy)=(2,0) => global_id=379
[DBG]  Complete path of agent 43:
[DBG]    Original: 414 413 412 380 379 378 377 409 408 407 406 405 404 403 435 467 466 465 464 463 431 430 430 462 494 526 525 524 523 522 521 520 519 551 550 549 581 613 645 677 676 675 707 
[DBG]    New:     414 413 412 380 379 378 377 409 408 407 406 405 404 403 435 467 466 465 464 463 431 430 430 462 494 526 525 524 523 522 521 520 519 551 550 549 581 613 645 677 676 675 707 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 414 413 412 380 
[DBG]    Local path (in submap): 379 
[DBG]    Suffix (out of submap): 378 377 409 408 407 406 405 404 403 435 467 466 465 464 463 431 430 430 462 494 526 525 524 523 522 521 520 519 551 550 549 581 613 645 677 676 675 707 
[DBG]  Original agent path length 43 je: 43
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 0: 414, 413, 412, 380, 379, 378, 377, 409, 408, 407, 406, 405, 404, 403, 435, 467, 466, 465, 464, 463, 431, 430, 430, 462, 494, 526, 525, 524, 523, 522, 521, 520, 519, 551, 550, 549, 581, 613, 645, 677, 676, 675, 707, 
[DBG]  Path for agent 43 updated, resulting length: 43
[DBG]  Update the agent path 77 | Original local length: 3 | New local length: 3
[DBG]  agent 77 t=0 => decoded (sx,sy)=(2,2) => global_id=381
[DBG]  agent 77 t=1 => decoded (sx,sy)=(3,2) => global_id=413
[DBG]  agent 77 t=2 => decoded (sx,sy)=(4,2) => global_id=445
[DBG]  Complete path of agent 77:
[DBG]    Original: 319 318 350 349 381 413 445 477 509 541 540 539 571 603 635 636 637 638 670 671 703 702 701 733 732 731 
[DBG]    New:     319 318 350 349 381 413 445 477 509 541 540 539 571 603 635 636 637 638 670 671 703 702 701 733 732 731 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 319 318 350 349 
[DBG]    Local path (in submap): 381 413 445 
[DBG]    Suffix (out of submap): 477 509 541 540 539 571 603 635 636 637 638 670 671 703 702 701 733 732 731 
[DBG]  Original agent path length 77 je: 26
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 1: 319, 318, 350, 349, 381, 413, 445, 477, 509, 541, 540, 539, 571, 603, 635, 636, 637, 638, 670, 671, 703, 702, 701, 733, 732, 731, 
[DBG]  Path for agent 77 updated, resulting length: 26
[DBG]  Update the agent path 100 | Original local length: 4 | New local length: 4
[DBG]  agent 100 t=0 => decoded (sx,sy)=(1,2) => global_id=349
[DBG]  agent 100 t=1 => decoded (sx,sy)=(2,2) => global_id=381
[DBG]  agent 100 t=2 => decoded (sx,sy)=(2,1) => global_id=380
[DBG]  agent 100 t=3 => decoded (sx,sy)=(2,0) => global_id=379
[DBG]  Complete path of agent 100:
[DBG]    Original: 287 286 285 317 349 348 380 379 378 377 376 375 407 406 406 405 404 404 403 435 467 466 465 465 464 463 462 494 526 525 524 556 588 589 590 622 654 686 718 750 751 783 815 847 846 878 877 909 941 973 1005 1004 1003 
[DBG]    New:     287 286 285 317 349 381 380 379 378 377 376 375 407 406 406 405 404 404 403 435 467 466 465 465 464 463 462 494 526 525 524 556 588 589 590 622 654 686 718 750 751 783 815 847 846 878 877 909 941 973 1005 1004 1003 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 287 286 285 317 
[DBG]    Local path (in submap): 349 381 380 379 
[DBG]    Suffix (out of submap): 378 377 376 375 407 406 406 405 404 404 403 435 467 466 465 465 464 463 462 494 526 525 524 556 588 589 590 622 654 686 718 750 751 783 815 847 846 878 877 909 941 973 1005 1004 1003 
[DBG]  Original agent path length 100 je: 53
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 2: 287, 286, 285, 317, 349, 381, 380, 379, 378, 377, 376, 375, 407, 406, 406, 405, 404, 404, 403, 435, 467, 466, 465, 465, 464, 463, 462, 494, 526, 525, 524, 556, 588, 589, 590, 622, 654, 686, 718, 750, 751, 783, 815, 847, 846, 878, 877, 909, 941, 973, 1005, 1004, 1003, 
[DBG]  Path for agent 100 updated, resulting length: 53
[DBG]  Update the agent path 129 | Original local length: 7 | New local length: 7
[DBG]  agent 129 t=0 => decoded (sx,sy)=(4,0) => global_id=443
[DBG]  agent 129 t=1 => decoded (sx,sy)=(4,1) => global_id=444
[DBG]  agent 129 t=2 => decoded (sx,sy)=(3,1) => global_id=412
[DBG]  agent 129 t=3 => decoded (sx,sy)=(3,2) => global_id=413
[DBG]  agent 129 t=4 => decoded (sx,sy)=(2,2) => global_id=381
[DBG]  agent 129 t=5 => decoded (sx,sy)=(1,2) => global_id=349
[DBG]  agent 129 t=6 => decoded (sx,sy)=(0,2) => global_id=317
[DBG]  Complete path of agent 129:
[DBG]    Original: 505 473 474 475 443 444 412 380 381 349 317 285 284 283 
[DBG]    New:     505 473 474 475 443 444 412 413 381 349 317 285 284 283 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 505 473 474 475 
[DBG]    Local path (in submap): 443 444 412 413 381 349 317 
[DBG]    Suffix (out of submap): 285 284 283 
[DBG]  Original agent path length 129 je: 14
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 3: 505, 473, 474, 475, 443, 444, 412, 413, 381, 349, 317, 285, 284, 283, 
[DBG]  Path for agent 129 updated, resulting length: 14
[DBG]  Paths successfully updated.
[DBG]  (LNS.cpp) New path for agent 43: 
[DBG]  414, 413, 412, 380, 379, 378, 377, 409, 408, 407, 406, 405, 404, 403, 435, 467, 466, 465, 464, 463, 431, 430, 430, 462, 494, 526, 525, 524, 523, 522, 521, 520, 519, 551, 550, 549, 581, 613, 645, 677, 676, 675, 707, 
[DBG]  (LNS.cpp) New path for agent 77: 
[DBG]  319, 318, 350, 349, 381, 413, 445, 477, 509, 541, 540, 539, 571, 603, 635, 636, 637, 638, 670, 671, 703, 702, 701, 733, 732, 731, 
[DBG]  (LNS.cpp) New path for agent 100: 
[DBG]  287, 286, 285, 317, 349, 381, 380, 379, 378, 377, 376, 375, 407, 406, 406, 405, 404, 404, 403, 435, 467, 466, 465, 465, 464, 463, 462, 494, 526, 525, 524, 556, 588, 589, 590, 622, 654, 686, 718, 750, 751, 783, 815, 847, 846, 878, 877, 909, 941, 973, 1005, 1004, 1003, 
[DBG]  (LNS.cpp) New path for agent 129: 
[DBG]  505, 473, 474, 475, 443, 444, 412, 413, 381, 349, 317, 285, 284, 283, 
[DBG]  component_weights = {0.277959, 0.193219, 0.202059, 0.326762}
[DBG]  opSuccess value: 1
[STAT] neighbor.sum_of_costs before recomputation: 132
[STAT] neighbor.old_sum_of_costs before recomputation: 132
[STAT] sum_of_costs before recomputation: 4454
[DBG]  Validate solution immediately after SAT success.
[DBG]  No problems after SAT replan.
[DBG]  Recomputing sum_of_cost by dividing neighbor.sum_of_costs and neighbor.old_sum_of_costs
[STAT] sum_of_costs after recomputation: 4454
[STAT] Iteration 46
[DBG]  Using SAT operator (destroy+repair SAT).
[DBG]  ====================
[DBG]  SAT destroy operator called.
[DBG]  SAT heuristic: 2
[DBG]  key_agent_id: 55
[DBG]  key_agent_id global path length: 46
[DBG]  Submap content (global positions):
[DBG]  7 8 9 10 11 
[DBG]  39 40 41 42 43 
[DBG]  71 72 73 74 75 
[DBG]  103 104 105 106 107 
[DBG]  135 136 137 138 139 
[DBG]  Map content with agents and obstacles:
[DBG]  . . . X . 
[DBG]  X . . . . 
[DBG]  . A A . . 
[DBG]  X . . . . 
[DBG]  . . . . A 
[DBG]  content of the map structure that we pass to the SAT solver:
[DBG]  1  1  1  -1  1  
[DBG]  -1  1  1  1  1  
[DBG]  1  1  1  1  1  
[DBG]  -1  1  1  1  1  
[DBG]  1  1  1  1  1  
[DBG]  Identifying agents in a submap for rescheduling (when key_agent is there at the time 11):
[DBG]  Agent 55 found intervals in the sub-map:
[DBG]   [7..14]
[DBG]  Agent 55 (interval in submap: [7..14]) contains time 11, added to replan.
[DBG]  Agent 69 found intervals in the sub-map:
[DBG]   [5..11]
[DBG]  Agent 69 (interval in submap: [5..11]) contains time 11, added to replan.
[DBG]  Agent 72 found intervals in the sub-map:
[DBG]   [8..12]
[DBG]  Agent 72 (interval in submap: [8..12]) contains time 11, added to replan.
[DBG]  Agent 82 found intervals in the sub-map:
[DBG]   [0..10]
[DBG]  Agent 82 is not in sub-map at time 11 (intervals: 
[DBG]  [0..10] )
[DBG]  Agent 55 | Start (global): 73 -> (local): (2, 2) at time 11 | Goal (global): 107 -> (local): (3, 4) at time 14
[DBG]  Agent 69 | Start (global): 139 -> (local): (4, 4) at time 11 | Goal (global): 139 -> (local): (4, 4) at time 11
[DBG]  Agent 72 | Start (global): 72 -> (local): (2, 1) at time 11 | Goal (global): 71 -> (local): (2, 0) at time 12
[DBG]  [REPAIR] SAT destroy operator called.
[DBG]  [REPAIR] SAT operator â€“ launching subproblem FOR OPTIMIZATION.
[DBG]  Creating local paths (sx, sy) in the submap for T_sync = 11
[DBG]    Agent 55 (global paths from T=11 to 14) has local path: (2,2) (3,2) (3,3) (3,4) 
[DBG]    Agent 69 (global paths from T=11 to 11) has local path: (4,4) 
[DBG]    Agent 72 (global paths from T=11 to 12) has local path: (2,1) (2,0) 
[DBG]  Checking input data for SAT solver:
[DBG]    - Number of agents to replan: 3
[DBG]  Agent 55 has the original local path length: 4 => Start (2,2), Goal (3,4)
[DBG]  Agent 69 has the original local path length: 1 => Start (4,4), Goal (4,4)
[DBG]  Agent 72 has the original local path length: 2 => Start (2,1), Goal (2,0)
[DBG]  Start position: (2, 2), (4, 4), (2, 1), 
[DBG]  Goal position: (3, 4), (4, 4), (2, 0), 
[DBG]  SAT instance and solver created.
Currently solving
Instance name: scen
Map name: map
Encoding used: disappear_at_goal
SAT solver used: Kissat
Optimizing function: sum of costs
Number of agents: 3
Mks LB: 4
SoC LB: 7
Delta: 0
Remaining time: 300000 [ms]

Vertex conflict! Agents 1, 2, timestep 2, location 0
Swapping conflict! Agents 1, 2, timestep 2, edge (0,0)
Vertex conflict! Agents 1, 2, timestep 3, location 0
Found plan [agents = 3] [timesteps = 4]
Agent #0 : 10 14 15 16 
Agent #1 : 21 0 0 0 
Agent #2 : 9 8 0 0 

[STAT] Solver returned: 0
[DBG]  Agent (index) 55 | New local path (submap idx):
[DBG]  10 14 15 16 
[DBG]  Agent (index) 69 | New local path (submap idx):
[DBG]  21 
[DBG]  Agent (index) 72 | New local path (submap idx):
[DBG]  9 8 
[DBG]  Update the agent path 55 | Original local length: 4 | New local length: 4
[DBG]  agent 55 t=0 => decoded (sx,sy)=(2,2) => global_id=73
[DBG]  agent 55 t=1 => decoded (sx,sy)=(3,2) => global_id=105
[DBG]  agent 55 t=2 => decoded (sx,sy)=(3,3) => global_id=106
[DBG]  agent 55 t=3 => decoded (sx,sy)=(3,4) => global_id=107
[DBG]  Complete path of agent 55:
[DBG]    Original: 34 66 66 67 68 69 70 71 72 40 41 73 105 106 107 108 140 141 173 205 237 269 301 333 365 366 367 368 400 401 402 403 404 405 437 469 501 533 565 597 596 628 627 659 691 692 
[DBG]    New:     34 66 66 67 68 69 70 71 72 40 41 73 105 106 107 108 140 141 173 205 237 269 301 333 365 366 367 368 400 401 402 403 404 405 437 469 501 533 565 597 596 628 627 659 691 692 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 34 66 66 67 68 69 70 71 72 40 41 
[DBG]    Local path (in submap): 73 105 106 107 
[DBG]    Suffix (out of submap): 108 140 141 173 205 237 269 301 333 365 366 367 368 400 401 402 403 404 405 437 469 501 533 565 597 596 628 627 659 691 692 
[DBG]  Original agent path length 55 je: 46
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 0: 34, 66, 66, 67, 68, 69, 70, 71, 72, 40, 41, 73, 105, 106, 107, 108, 140, 141, 173, 205, 237, 269, 301, 333, 365, 366, 367, 368, 400, 401, 402, 403, 404, 405, 437, 469, 501, 533, 565, 597, 596, 628, 627, 659, 691, 692, 
[DBG]  Path for agent 55 updated, resulting length: 46
[DBG]  Update the agent path 69 | Original local length: 1 | New local length: 1
[DBG]  agent 69 t=0 => decoded (sx,sy)=(4,4) => global_id=139
[DBG]  Complete path of agent 69:
[DBG]    Original: 4 5 37 69 70 71 72 73 105 106 138 139 140 141 173 205 237 269 301 333 365 366 398 430 462 494 526 558 590 591 623 655 687 719 751 783 815 847 848 849 850 851 819 820 
[DBG]    New:     4 5 37 69 70 71 72 73 105 106 138 139 140 141 173 205 237 269 301 333 365 366 398 430 462 494 526 558 590 591 623 655 687 719 751 783 815 847 848 849 850 851 819 820 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 4 5 37 69 70 71 72 73 105 106 138 
[DBG]    Local path (in submap): 139 
[DBG]    Suffix (out of submap): 140 141 173 205 237 269 301 333 365 366 398 430 462 494 526 558 590 591 623 655 687 719 751 783 815 847 848 849 850 851 819 820 
[DBG]  Original agent path length 69 je: 44
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 1: 4, 5, 37, 69, 70, 71, 72, 73, 105, 106, 138, 139, 140, 141, 173, 205, 237, 269, 301, 333, 365, 366, 398, 430, 462, 494, 526, 558, 590, 591, 623, 655, 687, 719, 751, 783, 815, 847, 848, 849, 850, 851, 819, 820, 
[DBG]  Path for agent 69 updated, resulting length: 44
[DBG]  Update the agent path 72 | Original local length: 2 | New local length: 2
[DBG]  agent 72 t=0 => decoded (sx,sy)=(2,1) => global_id=72
[DBG]  agent 72 t=1 => decoded (sx,sy)=(2,0) => global_id=71
[DBG]  Complete path of agent 72:
[DBG]    Original: 81 113 112 111 110 109 77 76 75 74 73 72 71 70 69 68 67 
[DBG]    New:     81 113 112 111 110 109 77 76 75 74 73 72 71 70 69 68 67 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 81 113 112 111 110 109 77 76 75 74 73 
[DBG]    Local path (in submap): 72 71 
[DBG]    Suffix (out of submap): 70 69 68 67 
[DBG]  Original agent path length 72 je: 17
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 2: 81, 113, 112, 111, 110, 109, 77, 76, 75, 74, 73, 72, 71, 70, 69, 68, 67, 
[DBG]  Path for agent 72 updated, resulting length: 17
[DBG]  Paths successfully updated.
[DBG]  (LNS.cpp) New path for agent 55: 
[DBG]  34, 66, 66, 67, 68, 69, 70, 71, 72, 40, 41, 73, 105, 106, 107, 108, 140, 141, 173, 205, 237, 269, 301, 333, 365, 366, 367, 368, 400, 401, 402, 403, 404, 405, 437, 469, 501, 533, 565, 597, 596, 628, 627, 659, 691, 692, 
[DBG]  (LNS.cpp) New path for agent 69: 
[DBG]  4, 5, 37, 69, 70, 71, 72, 73, 105, 106, 138, 139, 140, 141, 173, 205, 237, 269, 301, 333, 365, 366, 398, 430, 462, 494, 526, 558, 590, 591, 623, 655, 687, 719, 751, 783, 815, 847, 848, 849, 850, 851, 819, 820, 
[DBG]  (LNS.cpp) New path for agent 72: 
[DBG]  81, 113, 112, 111, 110, 109, 77, 76, 75, 74, 73, 72, 71, 70, 69, 68, 67, 
[DBG]  component_weights = {0.282032, 0.19213, 0.200919, 0.324919}
[DBG]  opSuccess value: 1
[STAT] neighbor.sum_of_costs before recomputation: 104
[STAT] neighbor.old_sum_of_costs before recomputation: 104
[STAT] sum_of_costs before recomputation: 4454
[DBG]  Validate solution immediately after SAT success.
[DBG]  No problems after SAT replan.
[DBG]  Recomputing sum_of_cost by dividing neighbor.sum_of_costs and neighbor.old_sum_of_costs
[STAT] sum_of_costs after recomputation: 4454
[STAT] Iteration 47
[DBG]  Using SAT operator (destroy+repair SAT).
[DBG]  ====================
[DBG]  SAT destroy operator called.
[DBG]  SAT heuristic: 2
[DBG]  key_agent_id: 85
[DBG]  key_agent_id global path length: 28
[DBG]  Submap content (global positions):
[DBG]  781 782 783 784 785 
[DBG]  813 814 815 816 817 
[DBG]  845 846 847 848 849 
[DBG]  877 878 879 880 881 
[DBG]  909 910 911 912 913 
[DBG]  Map content with agents and obstacles:
[DBG]  . . . . X 
[DBG]  A A . X . 
[DBG]  . . A A A 
[DBG]  . A . . A 
[DBG]  . . X A . 
[DBG]  content of the map structure that we pass to the SAT solver:
[DBG]  1  1  1  1  -1  
[DBG]  1  1  1  -1  1  
[DBG]  1  1  1  1  1  
[DBG]  1  1  1  1  1  
[DBG]  1  1  -1  1  1  
[DBG]  Identifying agents in a submap for rescheduling (when key_agent is there at the time 18):
[DBG]  Agent 4 found intervals in the sub-map:
[DBG]   [17..22]
[DBG]  Agent 4 (interval in submap: [17..22]) contains time 18, added to replan.
[DBG]  Agent 6 found intervals in the sub-map:
[DBG]   [16..25]
[DBG]  Agent 6 (interval in submap: [16..25]) contains time 18, added to replan.
[DBG]  Agent 11 found intervals in the sub-map:
[DBG]   [21..27]
[DBG]  Agent 11 is not in sub-map at time 18 (intervals: 
[DBG]  [21..27] )
[DBG]  Agent 27 found intervals in the sub-map:
[DBG]   [15..18]
[DBG]  Agent 27 (interval in submap: [15..18]) contains time 18, added to replan.
[DBG]  Agent 37 found intervals in the sub-map:
[DBG]   [13..15]
[DBG]  Agent 37 is not in sub-map at time 18 (intervals: 
[DBG]  [13..15] )
[DBG]  Agent 47 found intervals in the sub-map:
[DBG]   [13..18]
[DBG]  Agent 47 (interval in submap: [13..18]) contains time 18, added to replan.
[DBG]  Agent 70 found intervals in the sub-map:
[DBG]   [18..21]
[DBG]  Agent 70 (interval in submap: [18..21]) contains time 18, added to replan.
[DBG]  Agent 85 found intervals in the sub-map:
[DBG]   [15..21]
[DBG]  Agent 85 (interval in submap: [15..21]) contains time 18, added to replan.
[DBG]  Agent 101 found intervals in the sub-map:
[DBG]   [12..17]
[DBG]  Agent 101 is not in sub-map at time 18 (intervals: 
[DBG]  [12..17] )
[DBG]  Agent 111 found intervals in the sub-map:
[DBG]   [16..20]
[DBG]  Agent 111 (interval in submap: [16..20]) contains time 18, added to replan.
[DBG]  Agent 135 found intervals in the sub-map:
[DBG]   [13..19]
[DBG]  Agent 135 (interval in submap: [13..19]) contains time 18, added to replan.
[DBG]  Agent 148 found intervals in the sub-map:
[DBG]  
[DBG]  Agent 148 is not in sub-map at time 18 (intervals: 
[DBG]  )
[DBG]  Agent 4 | Start (global): 912 -> (local): (4, 3) at time 18 | Goal (global): 877 -> (local): (3, 0) at time 22
[DBG]  Agent 6 | Start (global): 881 -> (local): (3, 4) at time 18 | Goal (global): 909 -> (local): (4, 0) at time 25
[DBG]  Agent 27 | Start (global): 814 -> (local): (1, 1) at time 18 | Goal (global): 814 -> (local): (1, 1) at time 18
[DBG]  Agent 47 | Start (global): 813 -> (local): (1, 0) at time 18 | Goal (global): 813 -> (local): (1, 0) at time 18
[DBG]  Agent 70 | Start (global): 849 -> (local): (2, 4) at time 18 | Goal (global): 912 -> (local): (4, 3) at time 21
[DBG]  Agent 85 | Start (global): 847 -> (local): (2, 2) at time 18 | Goal (global): 817 -> (local): (1, 4) at time 21
[DBG]  Agent 111 | Start (global): 848 -> (local): (2, 3) at time 18 | Goal (global): 817 -> (local): (1, 4) at time 20
[DBG]  Agent 135 | Start (global): 878 -> (local): (3, 1) at time 18 | Goal (global): 877 -> (local): (3, 0) at time 19
[DBG]  [REPAIR] SAT destroy operator called.
[DBG]  [REPAIR] SAT operator â€“ launching subproblem FOR OPTIMIZATION.
[DBG]  Creating local paths (sx, sy) in the submap for T_sync = 18
[DBG]    Agent 4 (global paths from T=18 to 22) has local path: (4,3) (3,3) (3,2) (3,1) (3,0) 
[DBG]    Agent 6 (global paths from T=18 to 25) has local path: (3,4) (4,4) (3,4) (3,3) (3,2) (3,1) (3,0) (4,0) 
[DBG]    Agent 27 (global paths from T=18 to 18) has local path: (1,1) 
[DBG]    Agent 47 (global paths from T=18 to 18) has local path: (1,0) 
[DBG]    Agent 70 (global paths from T=18 to 21) has local path: (2,4) (3,4) (3,3) (4,3) 
[DBG]    Agent 85 (global paths from T=18 to 21) has local path: (2,2) (2,3) (2,4) (1,4) 
[DBG]    Agent 111 (global paths from T=18 to 20) has local path: (2,3) (2,4) (1,4) 
[DBG]    Agent 135 (global paths from T=18 to 19) has local path: (3,1) (3,0) 
[DBG]  Checking input data for SAT solver:
[DBG]    - Number of agents to replan: 8
[DBG]  Agent 4 has the original local path length: 5 => Start (4,3), Goal (3,0)
[DBG]  Agent 6 has the original local path length: 8 => Start (3,4), Goal (4,0)
[DBG]  Agent 27 has the original local path length: 1 => Start (1,1), Goal (1,1)
[DBG]  Agent 47 has the original local path length: 1 => Start (1,0), Goal (1,0)
[DBG]  Agent 70 has the original local path length: 4 => Start (2,4), Goal (4,3)
[DBG]  Agent 85 has the original local path length: 4 => Start (2,2), Goal (1,4)
[DBG]  Agent 111 has the original local path length: 3 => Start (2,3), Goal (1,4)
[DBG]  Agent 135 has the original local path length: 2 => Start (3,1), Goal (3,0)
[DBG]  Start position: (4, 3), (3, 4), (1, 1), (1, 0), (2, 4), (2, 2), (2, 3), (3, 1), 
[DBG]  Goal position: (3, 0), (4, 0), (1, 1), (1, 0), (4, 3), (1, 4), (1, 4), (3, 0), 
[DBG]  SAT instance and solver created.
Currently solving
Instance name: scen
Map name: map
Encoding used: disappear_at_goal
SAT solver used: Kissat
Optimizing function: sum of costs
Number of agents: 8
Mks LB: 6
SoC LB: 26
Delta: 0
Remaining time: 300000 [ms]

[STAT] Solver returned: -1
[DBG]  SAT solver failed.
[STAT] SAT solver failed to find a valid solution.
[DBG]  ====================
[DBG]  SAT destroy operator called.
[DBG]  SAT heuristic: 2
[DBG]  key_agent_id: 85
[DBG]  key_agent_id global path length: 28
[DBG]  Submap content (global positions):
[DBG]  837 838 839 840 841 
[DBG]  869 870 871 872 873 
[DBG]  901 902 903 904 905 
[DBG]  933 934 935 936 937 
[DBG]  965 966 967 968 969 
[DBG]  Map content with agents and obstacles:
[DBG]  . . . X . 
[DBG]  X A . X . 
[DBG]  . . A . . 
[DBG]  X . . . . 
[DBG]  . X X . X 
[DBG]  content of the map structure that we pass to the SAT solver:
[DBG]  1  1  1  -1  1  
[DBG]  -1  1  1  -1  1  
[DBG]  1  1  1  1  1  
[DBG]  -1  1  1  1  1  
[DBG]  1  -1  -1  1  -1  
[DBG]  Identifying agents in a submap for rescheduling (when key_agent is there at the time 8):
[DBG]  Agent 37 found intervals in the sub-map:
[DBG]   [0..0]
[DBG]  Agent 37 is not in sub-map at time 8 (intervals: 
[DBG]  [0..0] )
[DBG]  Agent 85 found intervals in the sub-map:
[DBG]   [6..10]
[DBG]  Agent 85 (interval in submap: [6..10]) contains time 8, added to replan.
[DBG]  Agent 105 found intervals in the sub-map:
[DBG]   [3..9]
[DBG]  Agent 105 (interval in submap: [3..9]) contains time 8, added to replan.
[DBG]  Agent 111 found intervals in the sub-map:
[DBG]   [1..1]
[DBG]  Agent 111 is not in sub-map at time 8 (intervals: 
[DBG]  [1..1] )
[DBG]  Agent 85 | Start (global): 903 -> (local): (2, 2) at time 8 | Goal (global): 905 -> (local): (2, 4) at time 10
[DBG]  Agent 105 | Start (global): 870 -> (local): (1, 1) at time 8 | Goal (global): 838 -> (local): (0, 1) at time 9
[DBG]  [REPAIR] SAT destroy operator called.
[DBG]  [REPAIR] SAT operator â€“ launching subproblem FOR OPTIMIZATION.
[DBG]  Creating local paths (sx, sy) in the submap for T_sync = 8
[DBG]    Agent 85 (global paths from T=8 to 10) has local path: (2,2) (2,3) (2,4) 
[DBG]    Agent 105 (global paths from T=8 to 9) has local path: (1,1) (0,1) 
[DBG]  Checking input data for SAT solver:
[DBG]    - Number of agents to replan: 2
[DBG]  Agent 85 has the original local path length: 3 => Start (2,2), Goal (2,4)
[DBG]  Agent 105 has the original local path length: 2 => Start (1,1), Goal (0,1)
[DBG]  Start position: (2, 2), (1, 1), 
[DBG]  Goal position: (2, 4), (0, 1), 
[DBG]  SAT instance and solver created.
Currently solving
Instance name: scen
Map name: map
Encoding used: disappear_at_goal
SAT solver used: Kissat
Optimizing function: sum of costs
Number of agents: 2
Mks LB: 3
SoC LB: 5
Delta: 0
Remaining time: 300000 [ms]

Found plan [agents = 2] [timesteps = 3]
Agent #0 : 9 10 11 
Agent #1 : 4 1 0 

[STAT] Solver returned: 0
[DBG]  Agent (index) 85 | New local path (submap idx):
[DBG]  9 10 11 
[DBG]  Agent (index) 105 | New local path (submap idx):
[DBG]  4 1 
[DBG]  Update the agent path 85 | Original local length: 3 | New local length: 3
[DBG]  agent 85 t=0 => decoded (sx,sy)=(2,2) => global_id=903
[DBG]  agent 85 t=1 => decoded (sx,sy)=(2,3) => global_id=904
[DBG]  agent 85 t=2 => decoded (sx,sy)=(2,4) => global_id=905
[DBG]  Complete path of agent 85:
[DBG]    Original: 709 741 742 774 806 807 839 871 903 904 905 906 874 875 876 877 878 846 847 848 849 817 818 819 820 821 822 790 
[DBG]    New:     709 741 742 774 806 807 839 871 903 904 905 906 874 875 876 877 878 846 847 848 849 817 818 819 820 821 822 790 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 709 741 742 774 806 807 839 871 
[DBG]    Local path (in submap): 903 904 905 
[DBG]    Suffix (out of submap): 906 874 875 876 877 878 846 847 848 849 817 818 819 820 821 822 790 
[DBG]  Original agent path length 85 je: 28
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 0: 709, 741, 742, 774, 806, 807, 839, 871, 903, 904, 905, 906, 874, 875, 876, 877, 878, 846, 847, 848, 849, 817, 818, 819, 820, 821, 822, 790, 
[DBG]  Path for agent 85 updated, resulting length: 28
[DBG]  Update the agent path 105 | Original local length: 2 | New local length: 2
[DBG]  agent 105 t=0 => decoded (sx,sy)=(1,1) => global_id=870
[DBG]  agent 105 t=1 => decoded (sx,sy)=(0,1) => global_id=838
[DBG]  Complete path of agent 105:
[DBG]    Original: 1002 1001 1000 968 936 904 903 902 870 838 806 806 774 742 710 678 646 647 615 583 551 519 487 486 454 422 421 389 357 325 324 323 291 259 258 226 194 195 196 164 132 
[DBG]    New:     1002 1001 1000 968 936 904 903 902 870 838 806 806 774 742 710 678 646 647 615 583 551 519 487 486 454 422 421 389 357 325 324 323 291 259 258 226 194 195 196 164 132 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 1002 1001 1000 968 936 904 903 902 
[DBG]    Local path (in submap): 870 838 
[DBG]    Suffix (out of submap): 806 806 774 742 710 678 646 647 615 583 551 519 487 486 454 422 421 389 357 325 324 323 291 259 258 226 194 195 196 164 132 
[DBG]  Original agent path length 105 je: 41
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 1: 1002, 1001, 1000, 968, 936, 904, 903, 902, 870, 838, 806, 806, 774, 742, 710, 678, 646, 647, 615, 583, 551, 519, 487, 486, 454, 422, 421, 389, 357, 325, 324, 323, 291, 259, 258, 226, 194, 195, 196, 164, 132, 
[DBG]  Path for agent 105 updated, resulting length: 41
[DBG]  Paths successfully updated.
[DBG]  (LNS.cpp) New path for agent 85: 
[DBG]  709, 741, 742, 774, 806, 807, 839, 871, 903, 904, 905, 906, 874, 875, 876, 877, 878, 846, 847, 848, 849, 817, 818, 819, 820, 821, 822, 790, 
[DBG]  (LNS.cpp) New path for agent 105: 
[DBG]  1002, 1001, 1000, 968, 936, 904, 903, 902, 870, 838, 806, 806, 774, 742, 710, 678, 646, 647, 615, 583, 551, 519, 487, 486, 454, 422, 421, 389, 357, 325, 324, 323, 291, 259, 258, 226, 194, 195, 196, 164, 132, 
[DBG]  component_weights = {0.286141, 0.19103, 0.19977, 0.323059}
[DBG]  opSuccess value: 1
[STAT] neighbor.sum_of_costs before recomputation: 67
[STAT] neighbor.old_sum_of_costs before recomputation: 67
[STAT] sum_of_costs before recomputation: 4454
[DBG]  Validate solution immediately after SAT success.
[DBG]  No problems after SAT replan.
[DBG]  Recomputing sum_of_cost by dividing neighbor.sum_of_costs and neighbor.old_sum_of_costs
[STAT] sum_of_costs after recomputation: 4454
[STAT] Iteration 48
[DBG]  Using SAT operator (destroy+repair SAT).
[DBG]  ====================
[DBG]  SAT destroy operator called.
[DBG]  SAT heuristic: 2
[DBG]  key_agent_id: 1
[DBG]  key_agent_id global path length: 15
[DBG]  Submap content (global positions):
[DBG]  820 821 822 823 824 
[DBG]  852 853 854 855 856 
[DBG]  884 885 886 887 888 
[DBG]  916 917 918 919 920 
[DBG]  948 949 950 951 952 
[DBG]  Map content with agents and obstacles:
[DBG]  . . . A . 
[DBG]  X X . . A 
[DBG]  . A A . . 
[DBG]  . A . . A 
[DBG]  . . . X . 
[DBG]  content of the map structure that we pass to the SAT solver:
[DBG]  1  1  1  1  1  
[DBG]  -1  -1  1  1  1  
[DBG]  1  1  1  1  1  
[DBG]  1  1  1  1  1  
[DBG]  1  1  1  -1  1  
[DBG]  Identifying agents in a submap for rescheduling (when key_agent is there at the time 3):
[DBG]  Agent 1 found intervals in the sub-map:
[DBG]   [0..7]
[DBG]  Agent 1 (interval in submap: [0..7]) contains time 3, added to replan.
[DBG]  Agent 6 found intervals in the sub-map:
[DBG]   [5..12]
[DBG]  Agent 6 is not in sub-map at time 3 (intervals: 
[DBG]  [5..12] )
[DBG]  Agent 30 found intervals in the sub-map:
[DBG]   [4..11]
[DBG]  Agent 30 is not in sub-map at time 3 (intervals: 
[DBG]  [4..11] )
[DBG]  Agent 38 found intervals in the sub-map:
[DBG]   [2..6]
[DBG]  Agent 38 (interval in submap: [2..6]) contains time 3, added to replan.
[DBG]  Agent 49 found intervals in the sub-map:
[DBG]   [4..10] [13..15]
[DBG]  Agent 49 is not in sub-map at time 3 (intervals: 
[DBG]  [4..10] [13..15] )
[DBG]  Agent 50 found intervals in the sub-map:
[DBG]   [0..4]
[DBG]  Agent 50 (interval in submap: [0..4]) contains time 3, added to replan.
[DBG]  Agent 58 found intervals in the sub-map:
[DBG]   [3..11]
[DBG]  Agent 58 (interval in submap: [3..11]) contains time 3, added to replan.
[DBG]  Agent 101 found intervals in the sub-map:
[DBG]   [3..8]
[DBG]  Agent 101 (interval in submap: [3..8]) contains time 3, added to replan.
[DBG]  Agent 118 found intervals in the sub-map:
[DBG]   [0..5]
[DBG]  Agent 118 (interval in submap: [0..5]) contains time 3, added to replan.
[DBG]  Agent 1 | Start (global): 886 -> (local): (2, 2) at time 3 | Goal (global): 820 -> (local): (0, 0) at time 7
[DBG]  Agent 38 | Start (global): 823 -> (local): (0, 3) at time 3 | Goal (global): 820 -> (local): (0, 0) at time 6
[DBG]  Agent 50 | Start (global): 885 -> (local): (2, 1) at time 3 | Goal (global): 884 -> (local): (2, 0) at time 4
[DBG]  Agent 58 | Start (global): 856 -> (local): (1, 4) at time 3 | Goal (global): 824 -> (local): (0, 4) at time 11
[DBG]  Agent 101 | Start (global): 920 -> (local): (3, 4) at time 3 | Goal (global): 884 -> (local): (2, 0) at time 8
[DBG]  Agent 118 | Start (global): 917 -> (local): (3, 1) at time 3 | Goal (global): 884 -> (local): (2, 0) at time 5
[DBG]  [REPAIR] SAT destroy operator called.
[DBG]  [REPAIR] SAT operator â€“ launching subproblem FOR OPTIMIZATION.
[DBG]  Creating local paths (sx, sy) in the submap for T_sync = 3
[DBG]    Agent 1 (global paths from T=3 to 7) has local path: (2,2) (1,2) (0,2) (0,1) (0,0) 
[DBG]    Agent 38 (global paths from T=3 to 6) has local path: (0,3) (0,2) (0,1) (0,0) 
[DBG]    Agent 50 (global paths from T=3 to 4) has local path: (2,1) (2,0) 
[DBG]    Agent 58 (global paths from T=3 to 11) has local path: (1,4) (1,4) (1,4) (1,4) (1,4) (1,4) (1,4) (1,4) (0,4) 
[DBG]    Agent 101 (global paths from T=3 to 8) has local path: (3,4) (3,3) (2,3) (2,2) (2,1) (2,0) 
[DBG]    Agent 118 (global paths from T=3 to 5) has local path: (3,1) (2,1) (2,0) 
[DBG]  Checking input data for SAT solver:
[DBG]    - Number of agents to replan: 6
[DBG]  Agent 1 has the original local path length: 5 => Start (2,2), Goal (0,0)
[DBG]  Agent 38 has the original local path length: 4 => Start (0,3), Goal (0,0)
[DBG]  Agent 50 has the original local path length: 2 => Start (2,1), Goal (2,0)
[DBG]  Agent 58 has the original local path length: 9 => Start (1,4), Goal (0,4)
[DBG]  Agent 101 has the original local path length: 6 => Start (3,4), Goal (2,0)
[DBG]  Agent 118 has the original local path length: 3 => Start (3,1), Goal (2,0)
[DBG]  Start position: (2, 2), (0, 3), (2, 1), (1, 4), (3, 4), (3, 1), 
[DBG]  Goal position: (0, 0), (0, 0), (2, 0), (0, 4), (2, 0), (2, 0), 
[DBG]  SAT instance and solver created.
Currently solving
Instance name: scen
Map name: map
Encoding used: disappear_at_goal
SAT solver used: Kissat
Optimizing function: sum of costs
Number of agents: 6
Mks LB: 6
SoC LB: 22
Delta: 0
Remaining time: 300000 [ms]

Vertex conflict! Agents 0, 1, timestep 4, location 0
Swapping conflict! Agents 0, 1, timestep 4, edge (0,0)
Vertex conflict! Agents 0, 1, timestep 5, location 0
Vertex conflict! Agents 0, 2, timestep 4, location 0
Swapping conflict! Agents 0, 2, timestep 4, edge (0,0)
Vertex conflict! Agents 0, 2, timestep 5, location 0
Vertex conflict! Agents 0, 3, timestep 4, location 0
Swapping conflict! Agents 0, 3, timestep 4, edge (0,0)
Vertex conflict! Agents 0, 3, timestep 5, location 0
Vertex conflict! Agents 0, 5, timestep 4, location 0
Swapping conflict! Agents 0, 5, timestep 4, edge (0,0)
Vertex conflict! Agents 0, 5, timestep 5, location 0
Vertex conflict! Agents 1, 2, timestep 3, location 0
Swapping conflict! Agents 1, 2, timestep 3, edge (0,0)
Vertex conflict! Agents 1, 2, timestep 4, location 0
Swapping conflict! Agents 1, 2, timestep 4, edge (0,0)
Vertex conflict! Agents 1, 2, timestep 5, location 0
Vertex conflict! Agents 1, 3, timestep 3, location 0
Swapping conflict! Agents 1, 3, timestep 3, edge (0,0)
Vertex conflict! Agents 1, 3, timestep 4, location 0
Swapping conflict! Agents 1, 3, timestep 4, edge (0,0)
Vertex conflict! Agents 1, 3, timestep 5, location 0
Vertex conflict! Agents 1, 5, timestep 3, location 0
Swapping conflict! Agents 1, 5, timestep 3, edge (0,0)
Vertex conflict! Agents 1, 5, timestep 4, location 0
Swapping conflict! Agents 1, 5, timestep 4, edge (0,0)
Vertex conflict! Agents 1, 5, timestep 5, location 0
Vertex conflict! Agents 2, 3, timestep 2, location 0
Swapping conflict! Agents 2, 3, timestep 2, edge (0,0)
Vertex conflict! Agents 2, 3, timestep 3, location 0
Swapping conflict! Agents 2, 3, timestep 3, edge (0,0)
Vertex conflict! Agents 2, 3, timestep 4, location 0
Swapping conflict! Agents 2, 3, timestep 4, edge (0,0)
Vertex conflict! Agents 2, 3, timestep 5, location 0
Vertex conflict! Agents 2, 5, timestep 3, location 0
Swapping conflict! Agents 2, 5, timestep 3, edge (0,0)
Vertex conflict! Agents 2, 5, timestep 4, location 0
Swapping conflict! Agents 2, 5, timestep 4, edge (0,0)
Vertex conflict! Agents 2, 5, timestep 5, location 0
Vertex conflict! Agents 3, 5, timestep 3, location 0
Swapping conflict! Agents 3, 5, timestep 3, edge (0,0)
Vertex conflict! Agents 3, 5, timestep 4, location 0
Swapping conflict! Agents 3, 5, timestep 4, edge (0,0)
Vertex conflict! Agents 3, 5, timestep 5, location 0
Found plan [agents = 6] [timesteps = 6]
Agent #0 : 10 5 2 1 0 0 
Agent #1 : 3 2 1 0 0 0 
Agent #2 : 9 8 0 0 0 0 
Agent #3 : 7 4 0 0 0 0 
Agent #4 : 17 16 15 14 13 8 
Agent #5 : 14 13 8 0 0 0 

[STAT] Solver returned: 0
[DBG]  Agent (index) 1 | New local path (submap idx):
[DBG]  10 5 2 1 0 
[DBG]  Agent (index) 38 | New local path (submap idx):
[DBG]  3 2 1 0 
[DBG]  Agent (index) 50 | New local path (submap idx):
[DBG]  9 8 
[DBG]  Agent (index) 58 | New local path (submap idx):
[DBG]  7 4 
[DBG]  Agent (index) 101 | New local path (submap idx):
[DBG]  17 16 15 14 13 8 
[DBG]  Agent (index) 118 | New local path (submap idx):
[DBG]  14 13 8 
[DBG]  Update the agent path 1 | Original local length: 5 | New local length: 5
[DBG]  agent 1 t=0 => decoded (sx,sy)=(2,2) => global_id=886
[DBG]  agent 1 t=1 => decoded (sx,sy)=(1,2) => global_id=854
[DBG]  agent 1 t=2 => decoded (sx,sy)=(0,2) => global_id=822
[DBG]  agent 1 t=3 => decoded (sx,sy)=(0,1) => global_id=821
[DBG]  agent 1 t=4 => decoded (sx,sy)=(0,0) => global_id=820
[DBG]  Complete path of agent 1:
[DBG]    Original: 949 917 918 886 854 822 821 820 788 756 724 725 726 727 728 
[DBG]    New:     949 917 918 886 854 822 821 820 788 756 724 725 726 727 728 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 949 917 918 
[DBG]    Local path (in submap): 886 854 822 821 820 
[DBG]    Suffix (out of submap): 788 756 724 725 726 727 728 
[DBG]  Original agent path length 1 je: 15
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 0: 949, 917, 918, 886, 854, 822, 821, 820, 788, 756, 724, 725, 726, 727, 728, 
[DBG]  Path for agent 1 updated, resulting length: 15
[DBG]  Update the agent path 38 | Original local length: 4 | New local length: 4
[DBG]  agent 38 t=0 => decoded (sx,sy)=(0,3) => global_id=823
[DBG]  agent 38 t=1 => decoded (sx,sy)=(0,2) => global_id=822
[DBG]  agent 38 t=2 => decoded (sx,sy)=(0,1) => global_id=821
[DBG]  agent 38 t=3 => decoded (sx,sy)=(0,0) => global_id=820
[DBG]  Complete path of agent 38:
[DBG]    Original: 793 792 824 823 822 821 820 819 818 850 849 848 847 846 845 
[DBG]    New:     793 792 824 823 822 821 820 819 818 850 849 848 847 846 845 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 793 792 824 
[DBG]    Local path (in submap): 823 822 821 820 
[DBG]    Suffix (out of submap): 819 818 850 849 848 847 846 845 
[DBG]  Original agent path length 38 je: 15
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 1: 793, 792, 824, 823, 822, 821, 820, 819, 818, 850, 849, 848, 847, 846, 845, 
[DBG]  Path for agent 38 updated, resulting length: 15
[DBG]  Update the agent path 50 | Original local length: 2 | New local length: 2
[DBG]  agent 50 t=0 => decoded (sx,sy)=(2,1) => global_id=885
[DBG]  agent 50 t=1 => decoded (sx,sy)=(2,0) => global_id=884
[DBG]  Complete path of agent 50:
[DBG]    Original: 888 887 886 885 884 883 882 850 849 848 847 815 783 751 719 687 655 654 622 590 589 588 556 555 523 491 492 460 428 427 395 363 331 331 299 300 268 236 237 205 173 141 
[DBG]    New:     888 887 886 885 884 883 882 850 849 848 847 815 783 751 719 687 655 654 622 590 589 588 556 555 523 491 492 460 428 427 395 363 331 331 299 300 268 236 237 205 173 141 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 888 887 886 
[DBG]    Local path (in submap): 885 884 
[DBG]    Suffix (out of submap): 883 882 850 849 848 847 815 783 751 719 687 655 654 622 590 589 588 556 555 523 491 492 460 428 427 395 363 331 331 299 300 268 236 237 205 173 141 
[DBG]  Original agent path length 50 je: 42
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 2: 888, 887, 886, 885, 884, 883, 882, 850, 849, 848, 847, 815, 783, 751, 719, 687, 655, 654, 622, 590, 589, 588, 556, 555, 523, 491, 492, 460, 428, 427, 395, 363, 331, 331, 299, 300, 268, 236, 237, 205, 173, 141, 
[DBG]  Path for agent 50 updated, resulting length: 42
[DBG]  Update the agent path 58 | Original local length: 9 | New local length: 2
[DBG]  agent 58 t=0 => decoded (sx,sy)=(1,4) => global_id=856
[DBG]  agent 58 t=1 => decoded (sx,sy)=(0,4) => global_id=824
[DBG]  Complete path of agent 58:
[DBG]    Original: 826 858 857 856 856 856 856 856 856 856 856 824 792 793 761 729 697 696 664 632 633 633 601 569 570 538 506 506 474 475 443 411 379 347 
[DBG]    New:     826 858 857 856 824 792 793 761 729 697 696 664 632 633 633 601 569 570 538 506 506 474 475 443 411 379 347 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 826 858 857 
[DBG]    Local path (in submap): 856 824 792 793 761 729 697 696 664 
[DBG]    Suffix (out of submap): 632 633 633 601 569 570 538 506 506 474 475 443 411 379 347 
[DBG]  Original agent path length 58 je: 34
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 3: 826, 858, 857, 856, 824, 792, 793, 761, 729, 697, 696, 664, 632, 633, 633, 601, 569, 570, 538, 506, 506, 474, 475, 443, 411, 379, 347, 
[DBG]  Path for agent 58 updated, resulting length: 27
[DBG]  Update the agent path 101 | Original local length: 6 | New local length: 6
[DBG]  agent 101 t=0 => decoded (sx,sy)=(3,4) => global_id=920
[DBG]  agent 101 t=1 => decoded (sx,sy)=(3,3) => global_id=919
[DBG]  agent 101 t=2 => decoded (sx,sy)=(3,2) => global_id=918
[DBG]  agent 101 t=3 => decoded (sx,sy)=(3,1) => global_id=917
[DBG]  agent 101 t=4 => decoded (sx,sy)=(3,0) => global_id=916
[DBG]  agent 101 t=5 => decoded (sx,sy)=(2,0) => global_id=884
[DBG]  Complete path of agent 101:
[DBG]    Original: 985 953 921 920 919 887 886 885 884 883 851 850 849 848 847 846 814 813 812 780 779 747 715 714 713 712 680 680 648 648 647 615 615 615 583 551 519 487 455 423 391 359 360 328 296 264 232 200 168 
[DBG]    New:     985 953 921 920 919 918 917 916 884 883 851 850 849 848 847 846 814 813 812 780 779 747 715 714 713 712 680 680 648 648 647 615 615 615 583 551 519 487 455 423 391 359 360 328 296 264 232 200 168 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 985 953 921 
[DBG]    Local path (in submap): 920 919 918 917 916 884 
[DBG]    Suffix (out of submap): 883 851 850 849 848 847 846 814 813 812 780 779 747 715 714 713 712 680 680 648 648 647 615 615 615 583 551 519 487 455 423 391 359 360 328 296 264 232 200 168 
[DBG]  Original agent path length 101 je: 49
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 4: 985, 953, 921, 920, 919, 918, 917, 916, 884, 883, 851, 850, 849, 848, 847, 846, 814, 813, 812, 780, 779, 747, 715, 714, 713, 712, 680, 680, 648, 648, 647, 615, 615, 615, 583, 551, 519, 487, 455, 423, 391, 359, 360, 328, 296, 264, 232, 200, 168, 
[DBG]  Path for agent 101 updated, resulting length: 49
[DBG]  Update the agent path 118 | Original local length: 3 | New local length: 3
[DBG]  agent 118 t=0 => decoded (sx,sy)=(3,1) => global_id=917
[DBG]  agent 118 t=1 => decoded (sx,sy)=(3,0) => global_id=916
[DBG]  agent 118 t=2 => decoded (sx,sy)=(2,0) => global_id=884
[DBG]  Complete path of agent 118:
[DBG]    Original: 887 886 885 917 885 884 883 851 850 849 848 847 815 783 782 750 718 686 654 622 590 589 588 556 555 523 522 521 489 457 425 424 423 422 390 389 388 356 324 323 291 259 227 
[DBG]    New:     887 886 885 917 916 884 883 851 850 849 848 847 815 783 782 750 718 686 654 622 590 589 588 556 555 523 522 521 489 457 425 424 423 422 390 389 388 356 324 323 291 259 227 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 887 886 885 
[DBG]    Local path (in submap): 917 916 884 
[DBG]    Suffix (out of submap): 883 851 850 849 848 847 815 783 782 750 718 686 654 622 590 589 588 556 555 523 522 521 489 457 425 424 423 422 390 389 388 356 324 323 291 259 227 
[DBG]  Original agent path length 118 je: 43
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 5: 887, 886, 885, 917, 916, 884, 883, 851, 850, 849, 848, 847, 815, 783, 782, 750, 718, 686, 654, 622, 590, 589, 588, 556, 555, 523, 522, 521, 489, 457, 425, 424, 423, 422, 390, 389, 388, 356, 324, 323, 291, 259, 227, 
[DBG]  Path for agent 118 updated, resulting length: 43
[DBG]  Paths successfully updated.
[DBG]  (LNS.cpp) New path for agent 1: 
[DBG]  949, 917, 918, 886, 854, 822, 821, 820, 788, 756, 724, 725, 726, 727, 728, 
[DBG]  (LNS.cpp) New path for agent 38: 
[DBG]  793, 792, 824, 823, 822, 821, 820, 819, 818, 850, 849, 848, 847, 846, 845, 
[DBG]  (LNS.cpp) New path for agent 50: 
[DBG]  888, 887, 886, 885, 884, 883, 882, 850, 849, 848, 847, 815, 783, 751, 719, 687, 655, 654, 622, 590, 589, 588, 556, 555, 523, 491, 492, 460, 428, 427, 395, 363, 331, 331, 299, 300, 268, 236, 237, 205, 173, 141, 
[DBG]  (LNS.cpp) New path for agent 58: 
[DBG]  826, 858, 857, 856, 824, 792, 793, 761, 729, 697, 696, 664, 632, 633, 633, 601, 569, 570, 538, 506, 506, 474, 475, 443, 411, 379, 347, 
[DBG]  (LNS.cpp) New path for agent 101: 
[DBG]  985, 953, 921, 920, 919, 918, 917, 916, 884, 883, 851, 850, 849, 848, 847, 846, 814, 813, 812, 780, 779, 747, 715, 714, 713, 712, 680, 680, 648, 648, 647, 615, 615, 615, 583, 551, 519, 487, 455, 423, 391, 359, 360, 328, 296, 264, 232, 200, 168, 
[DBG]  (LNS.cpp) New path for agent 118: 
[DBG]  887, 886, 885, 917, 916, 884, 883, 851, 850, 849, 848, 847, 815, 783, 782, 750, 718, 686, 654, 622, 590, 589, 588, 556, 555, 523, 522, 521, 489, 457, 425, 424, 423, 422, 390, 389, 388, 356, 324, 323, 291, 259, 227, 
[DBG]  component_weights = {0.284233, 0.189756, 0.198437, 0.327574}
[DBG]  opSuccess value: 1
[STAT] neighbor.sum_of_costs before recomputation: 185
[STAT] neighbor.old_sum_of_costs before recomputation: 192
[STAT] sum_of_costs before recomputation: 4454
[DBG]  Validate solution immediately after SAT success.
[WARNING] Problem after SAT: Edge conflict between agents 58 and 2 at edge (538,506) at timestep 19
[DBG]  Attempting immediate repair via init_lns because problem occurred after SAT (should be applied only for conflicts...).
[DBG]  Passing 150 agents to init_lns (skip=true).
[DBG]  path_table contents for selected agents (neighbor.agents):
[DBG]    Agent 1 => controlling path length=15
[DBG]    Agent 38 => controlling path length=15
[DBG]    Agent 50 => controlling path length=42
[DBG]    Agent 58 => controlling path length=27
[DBG]    Agent 101 => controlling path length=49
[DBG]    Agent 118 => controlling path length=43
[DBG]  hodnota skip_initial_solution=1
[DBG]  We skip initialSolution => call buildCollisionData()
[DBG]  buildCollisionData() called â€“ skip_initial_solution case.
[DBG]  Agents.size()=150, collision_graph.size()=150
[DBG]  agent 2 => updateCollidingPairs => foundCollision
[DBG]  agent 47 => updateCollidingPairs => foundCollision
[DBG]  agent 58 => updateCollidingPairs => foundCollision
[DBG]  agent 70 => updateCollidingPairs => foundCollision
[DBG]  agent 108 => updateCollidingPairs => foundCollision
[DBG]  agent 135 => updateCollidingPairs => foundCollision
[DBG]  agent 144 => updateCollidingPairs => foundCollision
[DBG]  Conflicting agent pairs:
[DBG]  agent 2 is in conflict with agent 58
[DBG]  agent 47 is in conflict with agent 58
[DBG]  agent 58 is in conflict with agent 70
[DBG]  agent 58 is in conflict with agent 108
[DBG]  agent 58 is in conflict with agent 135
[DBG]  agent 58 is in conflict with agent 144
[DBG]  buildCollisionData() => sum_of_costs=4447, num_of_colliding_pairs=6
[DBG]  buildCollisionData done => sum_of_costs=4447, num_of_colliding_pairs=6
[DBG]  sum_of_cost hodnota: 4447
[DBG]  After skip/init build => iteration_stats.back(): sum_of_costs=4447, collisions=6
[DEBUG] Using default neighbor generation strategy for conflicts: 2
[DEBUG] Using default neighbor generation strategy for conflicts: 0
[DEBUG] Using default neighbor generation strategy for conflicts: 0
	InitLNS(PP): runtime = 0.0101001, iterations = 4, colliding pairs = 0, initial colliding pairs = 6, solution cost = 4445, initial solution cost = 4447, failed iterations = 0
[DBG]  init_lns->sum_of_costs after init_lns->run: 4445
[DBG]  sum_of_costs after assignment from init_lns->run: 4445
[DBG]  Recomputing sum_of_cost by dividing neighbor.sum_of_costs and neighbor.old_sum_of_costs
[STAT] sum_of_costs after recomputation: 4445
[STAT] Iteration 49
[DBG]  Using SAT operator (destroy+repair SAT).
[DBG]  ====================
[DBG]  SAT destroy operator called.
[DBG]  SAT heuristic: 2
[DBG]  key_agent_id: 64
[DBG]  key_agent_id global path length: 30
[DBG]  Submap content (global positions):
[DBG]  537 538 539 540 541 
[DBG]  569 570 571 572 573 
[DBG]  601 602 603 604 605 
[DBG]  633 634 635 636 637 
[DBG]  665 666 667 668 669 
[DBG]  Map content with agents and obstacles:
[DBG]  X A A . . 
[DBG]  . A . . X 
[DBG]  . . A . X 
[DBG]  . X . . . 
[DBG]  X . . . X 
[DBG]  content of the map structure that we pass to the SAT solver:
[DBG]  -1  1  1  1  1  
[DBG]  1  1  1  1  -1  
[DBG]  1  1  1  1  -1  
[DBG]  1  -1  1  1  1  
[DBG]  -1  1  1  1  -1  
[DBG]  Identifying agents in a submap for rescheduling (when key_agent is there at the time 5):
[DBG]  Agent 17 found intervals in the sub-map:
[DBG]   [3..8]
[DBG]  Agent 17 (interval in submap: [3..8]) contains time 5, added to replan.
[DBG]  Agent 64 found intervals in the sub-map:
[DBG]   [2..8]
[DBG]  Agent 64 (interval in submap: [2..8]) contains time 5, added to replan.
[DBG]  Agent 92 found intervals in the sub-map:
[DBG]   [0..5]
[DBG]  Agent 92 (interval in submap: [0..5]) contains time 5, added to replan.
[DBG]  Agent 123 found intervals in the sub-map:
[DBG]   [0..5]
[DBG]  Agent 123 (interval in submap: [0..5]) contains time 5, added to replan.
[DBG]  Agent 135 found intervals in the sub-map:
[DBG]  
[DBG]  Agent 135 is not in sub-map at time 5 (intervals: 
[DBG]  )
[DBG]  Agent 17 | Start (global): 570 -> (local): (1, 1) at time 5 | Goal (global): 572 -> (local): (1, 3) at time 8
[DBG]  Agent 64 | Start (global): 603 -> (local): (2, 2) at time 5 | Goal (global): 538 -> (local): (0, 1) at time 8
[DBG]  Agent 92 | Start (global): 538 -> (local): (0, 1) at time 5 | Goal (global): 538 -> (local): (0, 1) at time 5
[DBG]  Agent 123 | Start (global): 539 -> (local): (0, 2) at time 5 | Goal (global): 539 -> (local): (0, 2) at time 5
[DBG]  [REPAIR] SAT destroy operator called.
[DBG]  [REPAIR] SAT operator â€“ launching subproblem FOR OPTIMIZATION.
[DBG]  Creating local paths (sx, sy) in the submap for T_sync = 5
[DBG]    Agent 17 (global paths from T=5 to 8) has local path: (1,1) (1,1) (1,2) (1,3) 
[DBG]    Agent 64 (global paths from T=5 to 8) has local path: (2,2) (1,2) (0,2) (0,1) 
[DBG]    Agent 92 (global paths from T=5 to 5) has local path: (0,1) 
[DBG]    Agent 123 (global paths from T=5 to 5) has local path: (0,2) 
[DBG]  Checking input data for SAT solver:
[DBG]    - Number of agents to replan: 4
[DBG]  Agent 17 has the original local path length: 4 => Start (1,1), Goal (1,3)
[DBG]  Agent 64 has the original local path length: 4 => Start (2,2), Goal (0,1)
[DBG]  Agent 92 has the original local path length: 1 => Start (0,1), Goal (0,1)
[DBG]  Agent 123 has the original local path length: 1 => Start (0,2), Goal (0,2)
[DBG]  Start position: (1, 1), (2, 2), (0, 1), (0, 2), 
[DBG]  Goal position: (1, 3), (0, 1), (0, 1), (0, 2), 
[DBG]  SAT instance and solver created.
Currently solving
Instance name: scen
Map name: map
Encoding used: disappear_at_goal
SAT solver used: Kissat
Optimizing function: sum of costs
Number of agents: 4
Mks LB: 4
SoC LB: 9
Delta: 0
Remaining time: 300000 [ms]

Vertex conflict! Agents 0, 1, timestep 3, location 0
Vertex conflict! Agents 0, 2, timestep 3, location 0
Vertex conflict! Agents 0, 3, timestep 3, location 0
Vertex conflict! Agents 1, 2, timestep 3, location 0
Vertex conflict! Agents 1, 3, timestep 3, location 0
Vertex conflict! Agents 2, 3, timestep 1, location 0
Swapping conflict! Agents 2, 3, timestep 1, edge (0,0)
Vertex conflict! Agents 2, 3, timestep 2, location 0
Swapping conflict! Agents 2, 3, timestep 2, edge (0,0)
Vertex conflict! Agents 2, 3, timestep 3, location 0
Found plan [agents = 4] [timesteps = 4]
Agent #0 : 5 6 7 0 
Agent #1 : 10 9 5 0 
Agent #2 : 0 0 0 0 
Agent #3 : 1 0 0 0 

[STAT] Solver returned: 0
[DBG]  Agent (index) 17 | New local path (submap idx):
[DBG]  5 6 7 
[DBG]  Agent (index) 64 | New local path (submap idx):
[DBG]  10 9 5 0 
[DBG]  Agent (index) 92 | New local path (submap idx):
[DBG]  0 
[DBG]  Agent (index) 123 | New local path (submap idx):
[DBG]  1 
[DBG]  Update the agent path 17 | Original local length: 4 | New local length: 3
[DBG]  agent 17 t=0 => decoded (sx,sy)=(1,1) => global_id=570
[DBG]  agent 17 t=1 => decoded (sx,sy)=(1,2) => global_id=571
[DBG]  agent 17 t=2 => decoded (sx,sy)=(1,3) => global_id=572
[DBG]  Complete path of agent 17:
[DBG]    Original: 664 632 600 601 569 570 570 571 572 
[DBG]    New:     664 632 600 601 569 570 571 572 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 664 632 600 601 569 
[DBG]    Local path (in submap): 570 571 572 
[DBG]    Suffix (out of submap): 
[DBG]  Original agent path length 17 je: 9
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 0: 664, 632, 600, 601, 569, 570, 571, 572, 
[DBG]  Path for agent 17 updated, resulting length: 8
[DBG]  Update the agent path 64 | Original local length: 4 | New local length: 4
[DBG]  agent 64 t=0 => decoded (sx,sy)=(2,2) => global_id=603
[DBG]  agent 64 t=1 => decoded (sx,sy)=(2,1) => global_id=602
[DBG]  agent 64 t=2 => decoded (sx,sy)=(1,1) => global_id=570
[DBG]  agent 64 t=3 => decoded (sx,sy)=(0,1) => global_id=538
[DBG]  Complete path of agent 64:
[DBG]    Original: 639 638 637 636 604 603 571 539 538 506 474 475 443 411 379 378 377 345 313 281 249 248 248 247 215 214 213 213 212 180 
[DBG]    New:     639 638 637 636 604 603 602 570 538 506 474 475 443 411 379 378 377 345 313 281 249 248 248 247 215 214 213 213 212 180 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 639 638 637 636 604 
[DBG]    Local path (in submap): 603 602 570 538 
[DBG]    Suffix (out of submap): 506 474 475 443 411 379 378 377 345 313 281 249 248 248 247 215 214 213 213 212 180 
[DBG]  Original agent path length 64 je: 30
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 1: 639, 638, 637, 636, 604, 603, 602, 570, 538, 506, 474, 475, 443, 411, 379, 378, 377, 345, 313, 281, 249, 248, 248, 247, 215, 214, 213, 213, 212, 180, 
[DBG]  Path for agent 64 updated, resulting length: 30
[DBG]  Update the agent path 92 | Original local length: 1 | New local length: 1
[DBG]  agent 92 t=0 => decoded (sx,sy)=(0,1) => global_id=538
[DBG]  Complete path of agent 92:
[DBG]    Original: 667 635 603 602 570 538 506 505 504 503 502 470 469 437 405 404 403 371 339 338 306 274 273 241 209 208 207 206 205 173 141 140 139 138 137 136 135 134 133 132 131 99 98 
[DBG]    New:     667 635 603 602 570 538 506 505 504 503 502 470 469 437 405 404 403 371 339 338 306 274 273 241 209 208 207 206 205 173 141 140 139 138 137 136 135 134 133 132 131 99 98 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 667 635 603 602 570 
[DBG]    Local path (in submap): 538 
[DBG]    Suffix (out of submap): 506 505 504 503 502 470 469 437 405 404 403 371 339 338 306 274 273 241 209 208 207 206 205 173 141 140 139 138 137 136 135 134 133 132 131 99 98 
[DBG]  Original agent path length 92 je: 43
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 2: 667, 635, 603, 602, 570, 538, 506, 505, 504, 503, 502, 470, 469, 437, 405, 404, 403, 371, 339, 338, 306, 274, 273, 241, 209, 208, 207, 206, 205, 173, 141, 140, 139, 138, 137, 136, 135, 134, 133, 132, 131, 99, 98, 
[DBG]  Path for agent 92 updated, resulting length: 43
[DBG]  Update the agent path 123 | Original local length: 1 | New local length: 1
[DBG]  agent 123 t=0 => decoded (sx,sy)=(0,2) => global_id=539
[DBG]  Complete path of agent 123:
[DBG]    Original: 637 636 635 603 571 539 507 506 505 473 472 440 439 407 375 343 311 279 247 215 214 213 212 180 179 178 177 176 144 112 113 
[DBG]    New:     637 636 635 603 571 539 507 506 505 473 472 440 439 407 375 343 311 279 247 215 214 213 212 180 179 178 177 176 144 112 113 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 637 636 635 603 571 
[DBG]    Local path (in submap): 539 
[DBG]    Suffix (out of submap): 507 506 505 473 472 440 439 407 375 343 311 279 247 215 214 213 212 180 179 178 177 176 144 112 113 
[DBG]  Original agent path length 123 je: 31
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 3: 637, 636, 635, 603, 571, 539, 507, 506, 505, 473, 472, 440, 439, 407, 375, 343, 311, 279, 247, 215, 214, 213, 212, 180, 179, 178, 177, 176, 144, 112, 113, 
[DBG]  Path for agent 123 updated, resulting length: 31
[DBG]  Paths successfully updated.
[DBG]  (LNS.cpp) New path for agent 17: 
[DBG]  664, 632, 600, 601, 569, 570, 571, 572, 
[DBG]  (LNS.cpp) New path for agent 64: 
[DBG]  639, 638, 637, 636, 604, 603, 602, 570, 538, 506, 474, 475, 443, 411, 379, 378, 377, 345, 313, 281, 249, 248, 248, 247, 215, 214, 213, 213, 212, 180, 
[DBG]  (LNS.cpp) New path for agent 92: 
[DBG]  667, 635, 603, 602, 570, 538, 506, 505, 504, 503, 502, 470, 469, 437, 405, 404, 403, 371, 339, 338, 306, 274, 273, 241, 209, 208, 207, 206, 205, 173, 141, 140, 139, 138, 137, 136, 135, 134, 133, 132, 131, 99, 98, 
[DBG]  (LNS.cpp) New path for agent 123: 
[DBG]  637, 636, 635, 603, 571, 539, 507, 506, 505, 473, 472, 440, 439, 407, 375, 343, 311, 279, 247, 215, 214, 213, 212, 180, 179, 178, 177, 176, 144, 112, 113, 
[DBG]  component_weights = {0.282337, 0.18849, 0.197114, 0.332059}
[DBG]  opSuccess value: 1
[STAT] neighbor.sum_of_costs before recomputation: 108
[STAT] neighbor.old_sum_of_costs before recomputation: 109
[STAT] sum_of_costs before recomputation: 4445
[DBG]  Validate solution immediately after SAT success.
[DBG]  No problems after SAT replan.
[DBG]  Recomputing sum_of_cost by dividing neighbor.sum_of_costs and neighbor.old_sum_of_costs
[STAT] sum_of_costs after recomputation: 4444
[STAT] Iteration 50
[DBG]  Using SAT operator (destroy+repair SAT).
[DBG]  ====================
[DBG]  SAT destroy operator called.
[DBG]  SAT heuristic: 2
[DBG]  key_agent_id: 25
[DBG]  key_agent_id global path length: 39
[DBG]  Submap content (global positions):
[DBG]  221 222 223 -1 -1 
[DBG]  253 254 255 -1 -1 
[DBG]  285 286 287 -1 -1 
[DBG]  317 318 319 -1 -1 
[DBG]  349 350 351 -1 -1 
[DBG]  Map content with agents and obstacles:
[DBG]  . . X X X 
[DBG]  X . . X X 
[DBG]  . . A X X 
[DBG]  . . A X X 
[DBG]  . . . X X 
[DBG]  content of the map structure that we pass to the SAT solver:
[DBG]  1  1  -1  1  1  
[DBG]  -1  1  1  1  1  
[DBG]  1  1  1  1  1  
[DBG]  1  1  1  1  1  
[DBG]  1  1  1  1  1  
[DBG]  Identifying agents in a submap for rescheduling (when key_agent is there at the time 30):
[DBG]  Agent 25 found intervals in the sub-map:
[DBG]   [26..34]
[DBG]  Agent 25 (interval in submap: [26..34]) contains time 30, added to replan.
[DBG]  Agent 113 found intervals in the sub-map:
[DBG]   [27..34]
[DBG]  Agent 113 (interval in submap: [27..34]) contains time 30, added to replan.
[DBG]  Agent 25 | Start (global): 287 -> (local): (2, 2) at time 30 | Goal (global): 221 -> (local): (0, 0) at time 34
[DBG]  Agent 113 | Start (global): 319 -> (local): (3, 2) at time 30 | Goal (global): 222 -> (local): (0, 1) at time 34
[DBG]  [REPAIR] SAT destroy operator called.
[DBG]  [REPAIR] SAT operator â€“ launching subproblem FOR OPTIMIZATION.
[DBG]  Creating local paths (sx, sy) in the submap for T_sync = 30
[DBG]    Agent 25 (global paths from T=30 to 34) has local path: (2,2) (1,2) (1,1) (0,1) (0,0) 
[DBG]    Agent 113 (global paths from T=30 to 34) has local path: (3,2) (2,2) (1,2) (1,1) (0,1) 
[DBG]  Checking input data for SAT solver:
[DBG]    - Number of agents to replan: 2
[DBG]  Agent 25 has the original local path length: 5 => Start (2,2), Goal (0,0)
[DBG]  Agent 113 has the original local path length: 5 => Start (3,2), Goal (0,1)
[DBG]  Start position: (2, 2), (3, 2), 
[DBG]  Goal position: (0, 0), (0, 1), 
[DBG]  SAT instance and solver created.
Currently solving
Instance name: scen
Map name: map
Encoding used: disappear_at_goal
SAT solver used: Kissat
Optimizing function: sum of costs
Number of agents: 2
Mks LB: 5
SoC LB: 10
Delta: 0
Remaining time: 300000 [ms]

Found plan [agents = 2] [timesteps = 5]
Agent #0 : 10 9 4 1 0 
Agent #1 : 15 14 9 4 1 

[STAT] Solver returned: 0
[DBG]  Agent (index) 25 | New local path (submap idx):
[DBG]  10 9 4 1 0 
[DBG]  Agent (index) 113 | New local path (submap idx):
[DBG]  15 14 9 4 1 
[DBG]  Update the agent path 25 | Original local length: 5 | New local length: 5
[DBG]  agent 25 t=0 => decoded (sx,sy)=(2,2) => global_id=287
[DBG]  agent 25 t=1 => decoded (sx,sy)=(2,1) => global_id=286
[DBG]  agent 25 t=2 => decoded (sx,sy)=(1,1) => global_id=254
[DBG]  agent 25 t=3 => decoded (sx,sy)=(0,1) => global_id=222
[DBG]  agent 25 t=4 => decoded (sx,sy)=(0,0) => global_id=221
[DBG]  Complete path of agent 25:
[DBG]    Original: 895 894 862 830 829 797 765 733 701 702 670 638 637 636 604 603 571 571 539 507 508 476 444 412 413 381 349 350 318 319 287 255 254 222 221 189 157 158 159 
[DBG]    New:     895 894 862 830 829 797 765 733 701 702 670 638 637 636 604 603 571 571 539 507 508 476 444 412 413 381 349 350 318 319 287 286 254 222 221 189 157 158 159 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 895 894 862 830 829 797 765 733 701 702 670 638 637 636 604 603 571 571 539 507 508 476 444 412 413 381 349 350 318 319 
[DBG]    Local path (in submap): 287 286 254 222 221 
[DBG]    Suffix (out of submap): 189 157 158 159 
[DBG]  Original agent path length 25 je: 39
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 0: 895, 894, 862, 830, 829, 797, 765, 733, 701, 702, 670, 638, 637, 636, 604, 603, 571, 571, 539, 507, 508, 476, 444, 412, 413, 381, 349, 350, 318, 319, 287, 286, 254, 222, 221, 189, 157, 158, 159, 
[DBG]  Path for agent 25 updated, resulting length: 39
[DBG]  Update the agent path 113 | Original local length: 5 | New local length: 5
[DBG]  agent 113 t=0 => decoded (sx,sy)=(3,2) => global_id=319
[DBG]  agent 113 t=1 => decoded (sx,sy)=(3,1) => global_id=318
[DBG]  agent 113 t=2 => decoded (sx,sy)=(2,1) => global_id=286
[DBG]  agent 113 t=3 => decoded (sx,sy)=(1,1) => global_id=254
[DBG]  agent 113 t=4 => decoded (sx,sy)=(0,1) => global_id=222
[DBG]  Complete path of agent 113:
[DBG]    Original: 529 561 593 625 657 658 659 627 628 629 597 565 566 534 502 503 504 472 440 408 376 377 378 378 379 380 348 349 317 318 319 287 255 254 222 
[DBG]    New:     529 561 593 625 657 658 659 627 628 629 597 565 566 534 502 503 504 472 440 408 376 377 378 378 379 380 348 349 317 318 319 318 286 254 222 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 529 561 593 625 657 658 659 627 628 629 597 565 566 534 502 503 504 472 440 408 376 377 378 378 379 380 348 349 317 318 
[DBG]    Local path (in submap): 319 318 286 254 222 
[DBG]    Suffix (out of submap): 
[DBG]  Original agent path length 113 je: 35
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 1: 529, 561, 593, 625, 657, 658, 659, 627, 628, 629, 597, 565, 566, 534, 502, 503, 504, 472, 440, 408, 376, 377, 378, 378, 379, 380, 348, 349, 317, 318, 319, 318, 286, 254, 222, 
[DBG]  Path for agent 113 updated, resulting length: 35
[DBG]  Paths successfully updated.
[DBG]  (LNS.cpp) New path for agent 25: 
[DBG]  895, 894, 862, 830, 829, 797, 765, 733, 701, 702, 670, 638, 637, 636, 604, 603, 571, 571, 539, 507, 508, 476, 444, 412, 413, 381, 349, 350, 318, 319, 287, 286, 254, 222, 221, 189, 157, 158, 159, 
[DBG]  (LNS.cpp) New path for agent 113: 
[DBG]  529, 561, 593, 625, 657, 658, 659, 627, 628, 629, 597, 565, 566, 534, 502, 503, 504, 472, 440, 408, 376, 377, 378, 378, 379, 380, 348, 349, 317, 318, 319, 318, 286, 254, 222, 
[DBG]  component_weights = {0.286448, 0.18741, 0.195984, 0.330157}
[DBG]  opSuccess value: 1
[STAT] neighbor.sum_of_costs before recomputation: 72
[STAT] neighbor.old_sum_of_costs before recomputation: 72
[STAT] sum_of_costs before recomputation: 4444
[DBG]  Validate solution immediately after SAT success.
[WARNING] Problem after SAT: Target conflict: agent 25 (len 38) traverses target of agent 75 (len 18) at location 286 at timestep 31
[DBG]  Attempting immediate repair via init_lns because problem occurred after SAT (should be applied only for conflicts...).
[DBG]  Passing 150 agents to init_lns (skip=true).
[DBG]  path_table contents for selected agents (neighbor.agents):
[DBG]    Agent 25 => controlling path length=39
[DBG]    Agent 113 => controlling path length=35
[DBG]  hodnota skip_initial_solution=1
[DBG]  We skip initialSolution => call buildCollisionData()
[DBG]  buildCollisionData() called â€“ skip_initial_solution case.
[DBG]  Agents.size()=150, collision_graph.size()=150
[DBG]  agent 25 => updateCollidingPairs => foundCollision
[DBG]  agent 75 => updateCollidingPairs => foundCollision
[DBG]  agent 113 => updateCollidingPairs => foundCollision
[DBG]  Conflicting agent pairs:
[DBG]  agent 25 is in conflict with agent 75
[DBG]  agent 75 is in conflict with agent 113
[DBG]  buildCollisionData() => sum_of_costs=4444, num_of_colliding_pairs=2
[DBG]  buildCollisionData done => sum_of_costs=4444, num_of_colliding_pairs=2
[DBG]  sum_of_cost hodnota: 4444
[DBG]  After skip/init build => iteration_stats.back(): sum_of_costs=4444, collisions=2
[DEBUG] Using default neighbor generation strategy for conflicts: 0
[DEBUG] Using default neighbor generation strategy for conflicts: 1
	InitLNS(PP): runtime = 0.00732675, iterations = 3, colliding pairs = 0, initial colliding pairs = 2, solution cost = 4433, initial solution cost = 4444, failed iterations = 0
[DBG]  init_lns->sum_of_costs after init_lns->run: 4433
[DBG]  sum_of_costs after assignment from init_lns->run: 4433
[DBG]  Recomputing sum_of_cost by dividing neighbor.sum_of_costs and neighbor.old_sum_of_costs
[STAT] sum_of_costs after recomputation: 4433
[STAT] Iteration 51
[DBG]  Using SAT operator (destroy+repair SAT).
[DBG]  ====================
[DBG]  SAT destroy operator called.
[DBG]  SAT heuristic: 2
[DBG]  key_agent_id: 90
[DBG]  key_agent_id global path length: 17
[DBG]  Submap content (global positions):
[DBG]  -1 800 801 802 803 
[DBG]  -1 832 833 834 835 
[DBG]  -1 864 865 866 867 
[DBG]  -1 896 897 898 899 
[DBG]  -1 928 929 930 931 
[DBG]  Map content with agents and obstacles:
[DBG]  X A . . . 
[DBG]  X . X . . 
[DBG]  X . A X . 
[DBG]  X X . . X 
[DBG]  X X . . . 
[DBG]  content of the map structure that we pass to the SAT solver:
[DBG]  1  1  1  1  1  
[DBG]  1  1  -1  1  1  
[DBG]  1  1  1  -1  1  
[DBG]  1  -1  1  1  -1  
[DBG]  1  -1  1  1  1  
[DBG]  Identifying agents in a submap for rescheduling (when key_agent is there at the time 4):
[DBG]  Agent 90 found intervals in the sub-map:
[DBG]   [1..7]
[DBG]  Agent 90 (interval in submap: [1..7]) contains time 4, added to replan.
[DBG]  Agent 98 found intervals in the sub-map:
[DBG]   [0..4]
[DBG]  Agent 98 (interval in submap: [0..4]) contains time 4, added to replan.
[DBG]  Agent 140 found intervals in the sub-map:
[DBG]   [0..1]
[DBG]  Agent 140 is not in sub-map at time 4 (intervals: 
[DBG]  [0..1] )
[DBG]  Agent 90 | Start (global): 865 -> (local): (2, 2) at time 4 | Goal (global): 800 -> (local): (0, 1) at time 7
[DBG]  Agent 98 | Start (global): 800 -> (local): (0, 1) at time 4 | Goal (global): 800 -> (local): (0, 1) at time 4
[DBG]  [REPAIR] SAT destroy operator called.
[DBG]  [REPAIR] SAT operator â€“ launching subproblem FOR OPTIMIZATION.
[DBG]  Creating local paths (sx, sy) in the submap for T_sync = 4
[DBG]    Agent 90 (global paths from T=4 to 7) has local path: (2,2) (2,1) (1,1) (0,1) 
[DBG]    Agent 98 (global paths from T=4 to 4) has local path: (0,1) 
[DBG]  Checking input data for SAT solver:
[DBG]    - Number of agents to replan: 2
[DBG]  Agent 90 has the original local path length: 4 => Start (2,2), Goal (0,1)
[DBG]  Agent 98 has the original local path length: 1 => Start (0,1), Goal (0,1)
[DBG]  Start position: (2, 2), (0, 1), 
[DBG]  Goal position: (0, 1), (0, 1), 
[DBG]  SAT instance and solver created.
Currently solving
Instance name: scen
Map name: map
Encoding used: disappear_at_goal
SAT solver used: Kissat
Optimizing function: sum of costs
Number of agents: 2
Mks LB: 4
SoC LB: 5
Delta: 0
Remaining time: 300000 [ms]

Found plan [agents = 2] [timesteps = 4]
Agent #0 : 11 10 6 1 
Agent #1 : 1 0 0 0 

[STAT] Solver returned: 0
[DBG]  Agent (index) 90 | New local path (submap idx):
[DBG]  11 10 6 1 
[DBG]  Agent (index) 98 | New local path (submap idx):
[DBG]  1 
[DBG]  Update the agent path 90 | Original local length: 4 | New local length: 4
[DBG]  agent 90 t=0 => decoded (sx,sy)=(2,2) => global_id=865
[DBG]  agent 90 t=1 => decoded (sx,sy)=(2,1) => global_id=864
[DBG]  agent 90 t=2 => decoded (sx,sy)=(1,1) => global_id=832
[DBG]  agent 90 t=3 => decoded (sx,sy)=(0,1) => global_id=800
[DBG]  Complete path of agent 90:
[DBG]    Original: 962 930 898 897 865 864 832 800 768 736 704 672 640 608 609 610 642 
[DBG]    New:     962 930 898 897 865 864 832 800 768 736 704 672 640 608 609 610 642 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 962 930 898 897 
[DBG]    Local path (in submap): 865 864 832 800 
[DBG]    Suffix (out of submap): 768 736 704 672 640 608 609 610 642 
[DBG]  Original agent path length 90 je: 17
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 0: 962, 930, 898, 897, 865, 864, 832, 800, 768, 736, 704, 672, 640, 608, 609, 610, 642, 
[DBG]  Path for agent 90 updated, resulting length: 17
[DBG]  Update the agent path 98 | Original local length: 1 | New local length: 1
[DBG]  agent 98 t=0 => decoded (sx,sy)=(0,1) => global_id=800
[DBG]  Complete path of agent 98:
[DBG]    Original: 897 865 864 832 800 768 769 770 771 772 773 774 775 776 777 745 713 714 682 683 684 685 653 654 622 622 622 622 622 590 558 
[DBG]    New:     897 865 864 832 800 768 769 770 771 772 773 774 775 776 777 745 713 714 682 683 684 685 653 654 622 622 622 622 622 590 558 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 897 865 864 832 
[DBG]    Local path (in submap): 800 
[DBG]    Suffix (out of submap): 768 769 770 771 772 773 774 775 776 777 745 713 714 682 683 684 685 653 654 622 622 622 622 622 590 558 
[DBG]  Original agent path length 98 je: 31
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 1: 897, 865, 864, 832, 800, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 745, 713, 714, 682, 683, 684, 685, 653, 654, 622, 622, 622, 622, 622, 590, 558, 
[DBG]  Path for agent 98 updated, resulting length: 31
[DBG]  Paths successfully updated.
[DBG]  (LNS.cpp) New path for agent 90: 
[DBG]  962, 930, 898, 897, 865, 864, 832, 800, 768, 736, 704, 672, 640, 608, 609, 610, 642, 
[DBG]  (LNS.cpp) New path for agent 98: 
[DBG]  897, 865, 864, 832, 800, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 745, 713, 714, 682, 683, 684, 685, 653, 654, 622, 622, 622, 622, 622, 590, 558, 
[DBG]  component_weights = {0.290595, 0.186321, 0.194845, 0.328238}
[DBG]  opSuccess value: 1
[STAT] neighbor.sum_of_costs before recomputation: 46
[STAT] neighbor.old_sum_of_costs before recomputation: 46
[STAT] sum_of_costs before recomputation: 4433
[DBG]  Validate solution immediately after SAT success.
[DBG]  No problems after SAT replan.
[DBG]  Recomputing sum_of_cost by dividing neighbor.sum_of_costs and neighbor.old_sum_of_costs
[STAT] sum_of_costs after recomputation: 4433
[STAT] Iteration 52
[DBG]  Using SAT operator (destroy+repair SAT).
[DBG]  ====================
[DBG]  SAT destroy operator called.
[DBG]  SAT heuristic: 2
[DBG]  key_agent_id: 75
[DBG]  key_agent_id global path length: 19
[DBG]  Submap content (global positions):
[DBG]  281 282 283 284 285 
[DBG]  313 314 315 316 317 
[DBG]  345 346 347 348 349 
[DBG]  377 378 379 380 381 
[DBG]  409 410 411 412 413 
[DBG]  Map content with agents and obstacles:
[DBG]  . X A . . 
[DBG]  . . X X A 
[DBG]  A X A . . 
[DBG]  A . . . . 
[DBG]  A X A . . 
[DBG]  content of the map structure that we pass to the SAT solver:
[DBG]  1  -1  1  1  1  
[DBG]  1  1  -1  -1  1  
[DBG]  1  -1  1  1  1  
[DBG]  1  1  1  1  1  
[DBG]  1  -1  1  1  1  
[DBG]  Identifying agents in a submap for rescheduling (when key_agent is there at the time 13):
[DBG]  Agent 2 found intervals in the sub-map:
[DBG]   [10..14]
[DBG]  Agent 2 (interval in submap: [10..14]) contains time 13, added to replan.
[DBG]  Agent 52 found intervals in the sub-map:
[DBG]   [11..15]
[DBG]  Agent 52 (interval in submap: [11..15]) contains time 13, added to replan.
[DBG]  Agent 64 found intervals in the sub-map:
[DBG]   [13..19]
[DBG]  Agent 64 (interval in submap: [13..19]) contains time 13, added to replan.
[DBG]  Agent 75 found intervals in the sub-map:
[DBG]   [6..16]
[DBG]  Agent 75 (interval in submap: [6..16]) contains time 13, added to replan.
[DBG]  Agent 124 found intervals in the sub-map:
[DBG]   [10..15]
[DBG]  Agent 124 (interval in submap: [10..15]) contains time 13, added to replan.
[DBG]  Agent 129 found intervals in the sub-map:
[DBG]   [6..13]
[DBG]  Agent 129 (interval in submap: [6..13]) contains time 13, added to replan.
[DBG]  Agent 144 found intervals in the sub-map:
[DBG]   [6..7] [13..13]
[DBG]  Agent 144 (interval in submap: [13..13]) contains time 13, added to replan.
[DBG]  Agent 2 | Start (global): 377 -> (local): (3, 0) at time 13 | Goal (global): 409 -> (local): (4, 0) at time 14
[DBG]  Agent 52 | Start (global): 345 -> (local): (2, 0) at time 13 | Goal (global): 409 -> (local): (4, 0) at time 15
[DBG]  Agent 64 | Start (global): 411 -> (local): (4, 2) at time 13 | Goal (global): 281 -> (local): (0, 0) at time 19
[DBG]  Agent 75 | Start (global): 347 -> (local): (2, 2) at time 13 | Goal (global): 317 -> (local): (1, 4) at time 16
[DBG]  Agent 124 | Start (global): 317 -> (local): (1, 4) at time 13 | Goal (global): 284 -> (local): (0, 3) at time 15
[DBG]  Agent 129 | Start (global): 283 -> (local): (0, 2) at time 13 | Goal (global): 283 -> (local): (0, 2) at time 13
[DBG]  Agent 144 | Start (global): 409 -> (local): (4, 0) at time 13 | Goal (global): 409 -> (local): (4, 0) at time 13
[DBG]  [REPAIR] SAT destroy operator called.
[DBG]  [REPAIR] SAT operator â€“ launching subproblem FOR OPTIMIZATION.
[DBG]  Creating local paths (sx, sy) in the submap for T_sync = 13
[DBG]    Agent 2 (global paths from T=13 to 14) has local path: (3,0) (4,0) 
[DBG]    Agent 52 (global paths from T=13 to 15) has local path: (2,0) (3,0) (4,0) 
[DBG]    Agent 64 (global paths from T=13 to 19) has local path: (4,2) (3,2) (3,1) (3,0) (2,0) (1,0) (0,0) 
[DBG]    Agent 75 (global paths from T=13 to 16) has local path: (2,2) (2,3) (2,4) (1,4) 
[DBG]    Agent 124 (global paths from T=13 to 15) has local path: (1,4) (0,4) (0,3) 
[DBG]    Agent 129 (global paths from T=13 to 13) has local path: (0,2) 
[DBG]    Agent 144 (global paths from T=13 to 13) has local path: (4,0) 
[DBG]  Checking input data for SAT solver:
[DBG]    - Number of agents to replan: 7
[DBG]  Agent 2 has the original local path length: 2 => Start (3,0), Goal (4,0)
[DBG]  Agent 52 has the original local path length: 3 => Start (2,0), Goal (4,0)
[DBG]  Agent 64 has the original local path length: 7 => Start (4,2), Goal (0,0)
[DBG]  Agent 75 has the original local path length: 4 => Start (2,2), Goal (1,4)
[DBG]  Agent 124 has the original local path length: 3 => Start (1,4), Goal (0,3)
[DBG]  Agent 129 has the original local path length: 1 => Start (0,2), Goal (0,2)
[DBG]  Agent 144 has the original local path length: 1 => Start (4,0), Goal (4,0)
[DBG]  Start position: (3, 0), (2, 0), (4, 2), (2, 2), (1, 4), (0, 2), (4, 0), 
[DBG]  Goal position: (4, 0), (4, 0), (0, 0), (1, 4), (0, 3), (0, 2), (4, 0), 
[DBG]  SAT instance and solver created.
Currently solving
Instance name: scen
Map name: map
Encoding used: disappear_at_goal
SAT solver used: Kissat
Optimizing function: sum of costs
Number of agents: 7
Mks LB: 7
SoC LB: 21
Delta: 0
Remaining time: 300000 [ms]

Vertex conflict! Agents 0, 1, timestep 3, location 0
Swapping conflict! Agents 0, 1, timestep 3, edge (0,0)
Vertex conflict! Agents 0, 1, timestep 4, location 0
Swapping conflict! Agents 0, 1, timestep 4, edge (0,0)
Vertex conflict! Agents 0, 1, timestep 5, location 0
Swapping conflict! Agents 0, 1, timestep 5, edge (0,0)
Vertex conflict! Agents 0, 1, timestep 6, location 0
Vertex conflict! Agents 0, 2, timestep 6, location 0
Vertex conflict! Agents 0, 3, timestep 4, location 0
Swapping conflict! Agents 0, 3, timestep 4, edge (0,0)
Vertex conflict! Agents 0, 3, timestep 5, location 0
Swapping conflict! Agents 0, 3, timestep 5, edge (0,0)
Vertex conflict! Agents 0, 3, timestep 6, location 0
Vertex conflict! Agents 0, 4, timestep 3, location 0
Swapping conflict! Agents 0, 4, timestep 3, edge (0,0)
Vertex conflict! Agents 0, 4, timestep 4, location 0
Swapping conflict! Agents 0, 4, timestep 4, edge (0,0)
Vertex conflict! Agents 0, 4, timestep 5, location 0
Swapping conflict! Agents 0, 4, timestep 5, edge (0,0)
Vertex conflict! Agents 0, 4, timestep 6, location 0
Vertex conflict! Agents 0, 5, timestep 2, location 0
Swapping conflict! Agents 0, 5, timestep 2, edge (0,0)
Vertex conflict! Agents 0, 5, timestep 3, location 0
Swapping conflict! Agents 0, 5, timestep 3, edge (0,0)
Vertex conflict! Agents 0, 5, timestep 4, location 0
Swapping conflict! Agents 0, 5, timestep 4, edge (0,0)
Vertex conflict! Agents 0, 5, timestep 5, location 0
Swapping conflict! Agents 0, 5, timestep 5, edge (0,0)
Vertex conflict! Agents 0, 5, timestep 6, location 0
Vertex conflict! Agents 0, 6, timestep 2, location 0
Swapping conflict! Agents 0, 6, timestep 2, edge (0,0)
Vertex conflict! Agents 0, 6, timestep 3, location 0
Swapping conflict! Agents 0, 6, timestep 3, edge (0,0)
Vertex conflict! Agents 0, 6, timestep 4, location 0
Swapping conflict! Agents 0, 6, timestep 4, edge (0,0)
Vertex conflict! Agents 0, 6, timestep 5, location 0
Swapping conflict! Agents 0, 6, timestep 5, edge (0,0)
Vertex conflict! Agents 0, 6, timestep 6, location 0
Vertex conflict! Agents 1, 2, timestep 6, location 0
Vertex conflict! Agents 1, 3, timestep 4, location 0
Swapping conflict! Agents 1, 3, timestep 4, edge (0,0)
Vertex conflict! Agents 1, 3, timestep 5, location 0
Swapping conflict! Agents 1, 3, timestep 5, edge (0,0)
Vertex conflict! Agents 1, 3, timestep 6, location 0
Vertex conflict! Agents 1, 4, timestep 3, location 0
Swapping conflict! Agents 1, 4, timestep 3, edge (0,0)
Vertex conflict! Agents 1, 4, timestep 4, location 0
Swapping conflict! Agents 1, 4, timestep 4, edge (0,0)
Vertex conflict! Agents 1, 4, timestep 5, location 0
Swapping conflict! Agents 1, 4, timestep 5, edge (0,0)
Vertex conflict! Agents 1, 4, timestep 6, location 0
Vertex conflict! Agents 1, 5, timestep 3, location 0
Swapping conflict! Agents 1, 5, timestep 3, edge (0,0)
Vertex conflict! Agents 1, 5, timestep 4, location 0
Swapping conflict! Agents 1, 5, timestep 4, edge (0,0)
Vertex conflict! Agents 1, 5, timestep 5, location 0
Swapping conflict! Agents 1, 5, timestep 5, edge (0,0)
Vertex conflict! Agents 1, 5, timestep 6, location 0
Vertex conflict! Agents 1, 6, timestep 3, location 0
Swapping conflict! Agents 1, 6, timestep 3, edge (0,0)
Vertex conflict! Agents 1, 6, timestep 4, location 0
Swapping conflict! Agents 1, 6, timestep 4, edge (0,0)
Vertex conflict! Agents 1, 6, timestep 5, location 0
Swapping conflict! Agents 1, 6, timestep 5, edge (0,0)
Vertex conflict! Agents 1, 6, timestep 6, location 0
Vertex conflict! Agents 2, 3, timestep 6, location 0
Vertex conflict! Agents 2, 4, timestep 6, location 0
Vertex conflict! Agents 2, 5, timestep 6, location 0
Vertex conflict! Agents 2, 6, timestep 6, location 0
Vertex conflict! Agents 3, 4, timestep 4, location 0
Swapping conflict! Agents 3, 4, timestep 4, edge (0,0)
Vertex conflict! Agents 3, 4, timestep 5, location 0
Swapping conflict! Agents 3, 4, timestep 5, edge (0,0)
Vertex conflict! Agents 3, 4, timestep 6, location 0
Vertex conflict! Agents 3, 5, timestep 4, location 0
Swapping conflict! Agents 3, 5, timestep 4, edge (0,0)
Vertex conflict! Agents 3, 5, timestep 5, location 0
Swapping conflict! Agents 3, 5, timestep 5, edge (0,0)
Vertex conflict! Agents 3, 5, timestep 6, location 0
Vertex conflict! Agents 3, 6, timestep 4, location 0
Swapping conflict! Agents 3, 6, timestep 4, edge (0,0)
Vertex conflict! Agents 3, 6, timestep 5, location 0
Swapping conflict! Agents 3, 6, timestep 5, edge (0,0)
Vertex conflict! Agents 3, 6, timestep 6, location 0
Vertex conflict! Agents 4, 5, timestep 3, location 0
Swapping conflict! Agents 4, 5, timestep 3, edge (0,0)
Vertex conflict! Agents 4, 5, timestep 4, location 0
Swapping conflict! Agents 4, 5, timestep 4, edge (0,0)
Vertex conflict! Agents 4, 5, timestep 5, location 0
Swapping conflict! Agents 4, 5, timestep 5, edge (0,0)
Vertex conflict! Agents 4, 5, timestep 6, location 0
Vertex conflict! Agents 4, 6, timestep 3, location 0
Swapping conflict! Agents 4, 6, timestep 3, edge (0,0)
Vertex conflict! Agents 4, 6, timestep 4, location 0
Swapping conflict! Agents 4, 6, timestep 4, edge (0,0)
Vertex conflict! Agents 4, 6, timestep 5, location 0
Swapping conflict! Agents 4, 6, timestep 5, edge (0,0)
Vertex conflict! Agents 4, 6, timestep 6, location 0
Vertex conflict! Agents 5, 6, timestep 1, location 0
Swapping conflict! Agents 5, 6, timestep 1, edge (0,0)
Vertex conflict! Agents 5, 6, timestep 2, location 0
Swapping conflict! Agents 5, 6, timestep 2, edge (0,0)
Vertex conflict! Agents 5, 6, timestep 3, location 0
Swapping conflict! Agents 5, 6, timestep 3, edge (0,0)
Vertex conflict! Agents 5, 6, timestep 4, location 0
Swapping conflict! Agents 5, 6, timestep 4, edge (0,0)
Vertex conflict! Agents 5, 6, timestep 5, location 0
Swapping conflict! Agents 5, 6, timestep 5, edge (0,0)
Vertex conflict! Agents 5, 6, timestep 6, location 0
Found plan [agents = 7] [timesteps = 7]
Agent #0 : 11 16 0 0 0 0 0 
Agent #1 : 7 11 16 0 0 0 0 
Agent #2 : 17 13 12 11 7 4 0 
Agent #3 : 8 9 10 6 0 0 0 
Agent #4 : 6 3 2 0 0 0 0 
Agent #5 : 1 0 0 0 0 0 0 
Agent #6 : 16 0 0 0 0 0 0 

[STAT] Solver returned: 0
[DBG]  Agent (index) 2 | New local path (submap idx):
[DBG]  11 16 
[DBG]  Agent (index) 52 | New local path (submap idx):
[DBG]  7 11 16 
[DBG]  Agent (index) 64 | New local path (submap idx):
[DBG]  17 13 12 11 7 4 0 
[DBG]  Agent (index) 75 | New local path (submap idx):
[DBG]  8 9 10 6 
[DBG]  Agent (index) 124 | New local path (submap idx):
[DBG]  6 3 2 
[DBG]  Agent (index) 129 | New local path (submap idx):
[DBG]  1 
[DBG]  Agent (index) 144 | New local path (submap idx):
[DBG]  16 
[DBG]  Update the agent path 2 | Original local length: 2 | New local length: 2
[DBG]  agent 2 t=0 => decoded (sx,sy)=(3,0) => global_id=377
[DBG]  agent 2 t=1 => decoded (sx,sy)=(4,0) => global_id=409
[DBG]  Complete path of agent 2:
[DBG]    Original: 59 91 90 89 89 121 153 185 217 249 281 313 345 377 409 441 440 439 438 438 470 502 503 504 505 506 538 538 539 539 538 570 602 603 604 636 637 638 670 702 701 733 765 764 
[DBG]    New:     59 91 90 89 89 121 153 185 217 249 281 313 345 377 409 441 440 439 438 438 470 502 503 504 505 506 538 538 539 539 538 570 602 603 604 636 637 638 670 702 701 733 765 764 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 59 91 90 89 89 121 153 185 217 249 281 313 345 
[DBG]    Local path (in submap): 377 409 
[DBG]    Suffix (out of submap): 441 440 439 438 438 470 502 503 504 505 506 538 538 539 539 538 570 602 603 604 636 637 638 670 702 701 733 765 764 
[DBG]  Original agent path length 2 je: 44
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 0: 59, 91, 90, 89, 89, 121, 153, 185, 217, 249, 281, 313, 345, 377, 409, 441, 440, 439, 438, 438, 470, 502, 503, 504, 505, 506, 538, 538, 539, 539, 538, 570, 602, 603, 604, 636, 637, 638, 670, 702, 701, 733, 765, 764, 
[DBG]  Path for agent 2 updated, resulting length: 44
[DBG]  Update the agent path 52 | Original local length: 3 | New local length: 3
[DBG]  agent 52 t=0 => decoded (sx,sy)=(2,0) => global_id=345
[DBG]  agent 52 t=1 => decoded (sx,sy)=(3,0) => global_id=377
[DBG]  agent 52 t=2 => decoded (sx,sy)=(4,0) => global_id=409
[DBG]  Complete path of agent 52:
[DBG]    Original: 28 60 59 91 90 122 121 153 185 217 249 281 313 345 377 409 441 
[DBG]    New:     28 60 59 91 90 122 121 153 185 217 249 281 313 345 377 409 441 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 28 60 59 91 90 122 121 153 185 217 249 281 313 
[DBG]    Local path (in submap): 345 377 409 
[DBG]    Suffix (out of submap): 441 
[DBG]  Original agent path length 52 je: 17
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 1: 28, 60, 59, 91, 90, 122, 121, 153, 185, 217, 249, 281, 313, 345, 377, 409, 441, 
[DBG]  Path for agent 52 updated, resulting length: 17
[DBG]  Update the agent path 64 | Original local length: 7 | New local length: 7
[DBG]  agent 64 t=0 => decoded (sx,sy)=(4,2) => global_id=411
[DBG]  agent 64 t=1 => decoded (sx,sy)=(3,2) => global_id=379
[DBG]  agent 64 t=2 => decoded (sx,sy)=(3,1) => global_id=378
[DBG]  agent 64 t=3 => decoded (sx,sy)=(3,0) => global_id=377
[DBG]  agent 64 t=4 => decoded (sx,sy)=(2,0) => global_id=345
[DBG]  agent 64 t=5 => decoded (sx,sy)=(1,0) => global_id=313
[DBG]  agent 64 t=6 => decoded (sx,sy)=(0,0) => global_id=281
[DBG]  Complete path of agent 64:
[DBG]    Original: 639 638 637 636 604 603 602 570 538 506 474 475 443 411 379 378 377 345 313 281 249 248 248 247 215 214 213 213 212 180 
[DBG]    New:     639 638 637 636 604 603 602 570 538 506 474 475 443 411 379 378 377 345 313 281 249 248 248 247 215 214 213 213 212 180 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 639 638 637 636 604 603 602 570 538 506 474 475 443 
[DBG]    Local path (in submap): 411 379 378 377 345 313 281 
[DBG]    Suffix (out of submap): 249 248 248 247 215 214 213 213 212 180 
[DBG]  Original agent path length 64 je: 30
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 2: 639, 638, 637, 636, 604, 603, 602, 570, 538, 506, 474, 475, 443, 411, 379, 378, 377, 345, 313, 281, 249, 248, 248, 247, 215, 214, 213, 213, 212, 180, 
[DBG]  Path for agent 64 updated, resulting length: 30
[DBG]  Update the agent path 75 | Original local length: 4 | New local length: 4
[DBG]  agent 75 t=0 => decoded (sx,sy)=(2,2) => global_id=347
[DBG]  agent 75 t=1 => decoded (sx,sy)=(2,3) => global_id=348
[DBG]  agent 75 t=2 => decoded (sx,sy)=(2,4) => global_id=349
[DBG]  agent 75 t=3 => decoded (sx,sy)=(1,4) => global_id=317
[DBG]  Complete path of agent 75:
[DBG]    Original: 340 308 309 310 311 312 313 345 345 345 377 378 379 347 348 349 317 318 286 
[DBG]    New:     340 308 309 310 311 312 313 345 345 345 377 378 379 347 348 349 317 318 286 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 340 308 309 310 311 312 313 345 345 345 377 378 379 
[DBG]    Local path (in submap): 347 348 349 317 
[DBG]    Suffix (out of submap): 318 286 
[DBG]  Original agent path length 75 je: 19
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 3: 340, 308, 309, 310, 311, 312, 313, 345, 345, 345, 377, 378, 379, 347, 348, 349, 317, 318, 286, 
[DBG]  Path for agent 75 updated, resulting length: 19
[DBG]  Update the agent path 124 | Original local length: 3 | New local length: 3
[DBG]  agent 124 t=0 => decoded (sx,sy)=(1,4) => global_id=317
[DBG]  agent 124 t=1 => decoded (sx,sy)=(0,4) => global_id=285
[DBG]  agent 124 t=2 => decoded (sx,sy)=(0,3) => global_id=284
[DBG]  Complete path of agent 124:
[DBG]    Original: 502 503 504 472 473 474 475 476 477 445 413 381 349 317 285 284 252 220 188 189 157 158 126 127 
[DBG]    New:     502 503 504 472 473 474 475 476 477 445 413 381 349 317 285 284 252 220 188 189 157 158 126 127 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 502 503 504 472 473 474 475 476 477 445 413 381 349 
[DBG]    Local path (in submap): 317 285 284 
[DBG]    Suffix (out of submap): 252 220 188 189 157 158 126 127 
[DBG]  Original agent path length 124 je: 24
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 4: 502, 503, 504, 472, 473, 474, 475, 476, 477, 445, 413, 381, 349, 317, 285, 284, 252, 220, 188, 189, 157, 158, 126, 127, 
[DBG]  Path for agent 124 updated, resulting length: 24
[DBG]  Update the agent path 129 | Original local length: 1 | New local length: 1
[DBG]  agent 129 t=0 => decoded (sx,sy)=(0,2) => global_id=283
[DBG]  Complete path of agent 129:
[DBG]    Original: 505 473 474 475 443 444 412 413 381 349 317 285 284 283 
[DBG]    New:     505 473 474 475 443 444 412 413 381 349 317 285 284 283 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 505 473 474 475 443 444 412 413 381 349 317 285 284 
[DBG]    Local path (in submap): 283 
[DBG]    Suffix (out of submap): 
[DBG]  Original agent path length 129 je: 14
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 5: 505, 473, 474, 475, 443, 444, 412, 413, 381, 349, 317, 285, 284, 283, 
[DBG]  Path for agent 129 updated, resulting length: 14
[DBG]  Update the agent path 144 | Original local length: 1 | New local length: 1
[DBG]  agent 144 t=0 => decoded (sx,sy)=(4,0) => global_id=409
[DBG]  Complete path of agent 144:
[DBG]    Original: 121 153 185 185 217 249 281 313 312 344 344 376 408 409 441 473 505 506 538 570 569 601 600 599 631 
[DBG]    New:     121 153 185 185 217 249 281 313 312 344 344 376 408 409 441 473 505 506 538 570 569 601 600 599 631 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 121 153 185 185 217 249 281 313 312 344 344 376 408 
[DBG]    Local path (in submap): 409 
[DBG]    Suffix (out of submap): 441 473 505 506 538 570 569 601 600 599 631 
[DBG]  Original agent path length 144 je: 25
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 6: 121, 153, 185, 185, 217, 249, 281, 313, 312, 344, 344, 376, 408, 409, 441, 473, 505, 506, 538, 570, 569, 601, 600, 599, 631, 
[DBG]  Path for agent 144 updated, resulting length: 25
[DBG]  Paths successfully updated.
[DBG]  (LNS.cpp) New path for agent 2: 
[DBG]  59, 91, 90, 89, 89, 121, 153, 185, 217, 249, 281, 313, 345, 377, 409, 441, 440, 439, 438, 438, 470, 502, 503, 504, 505, 506, 538, 538, 539, 539, 538, 570, 602, 603, 604, 636, 637, 638, 670, 702, 701, 733, 765, 764, 
[DBG]  (LNS.cpp) New path for agent 52: 
[DBG]  28, 60, 59, 91, 90, 122, 121, 153, 185, 217, 249, 281, 313, 345, 377, 409, 441, 
[DBG]  (LNS.cpp) New path for agent 64: 
[DBG]  639, 638, 637, 636, 604, 603, 602, 570, 538, 506, 474, 475, 443, 411, 379, 378, 377, 345, 313, 281, 249, 248, 248, 247, 215, 214, 213, 213, 212, 180, 
[DBG]  (LNS.cpp) New path for agent 75: 
[DBG]  340, 308, 309, 310, 311, 312, 313, 345, 345, 345, 377, 378, 379, 347, 348, 349, 317, 318, 286, 
[DBG]  (LNS.cpp) New path for agent 124: 
[DBG]  502, 503, 504, 472, 473, 474, 475, 476, 477, 445, 413, 381, 349, 317, 285, 284, 252, 220, 188, 189, 157, 158, 126, 127, 
[DBG]  (LNS.cpp) New path for agent 129: 
[DBG]  505, 473, 474, 475, 443, 444, 412, 413, 381, 349, 317, 285, 284, 283, 
[DBG]  (LNS.cpp) New path for agent 144: 
[DBG]  121, 153, 185, 185, 217, 249, 281, 313, 312, 344, 344, 376, 408, 409, 441, 473, 505, 506, 538, 570, 569, 601, 600, 599, 631, 
[DBG]  component_weights = {0.294778, 0.185223, 0.193697, 0.326303}
[DBG]  opSuccess value: 1
[STAT] neighbor.sum_of_costs before recomputation: 166
[STAT] neighbor.old_sum_of_costs before recomputation: 166
[STAT] sum_of_costs before recomputation: 4433
[DBG]  Validate solution immediately after SAT success.
[DBG]  No problems after SAT replan.
[DBG]  Recomputing sum_of_cost by dividing neighbor.sum_of_costs and neighbor.old_sum_of_costs
[STAT] sum_of_costs after recomputation: 4433
[STAT] Iteration 53
[DBG]  Using SAT operator (destroy+repair SAT).
[DBG]  ====================
[DBG]  SAT destroy operator called.
[DBG]  SAT heuristic: 2
[DBG]  key_agent_id: 97
[DBG]  key_agent_id global path length: 19
[DBG]  Submap content (global positions):
[DBG]  741 742 743 744 745 
[DBG]  773 774 775 776 777 
[DBG]  805 806 807 808 809 
[DBG]  837 838 839 840 841 
[DBG]  869 870 871 872 873 
[DBG]  Map content with agents and obstacles:
[DBG]  . A X . . 
[DBG]  . A . . A 
[DBG]  . A A . . 
[DBG]  . . . X . 
[DBG]  X A . X A 
[DBG]  content of the map structure that we pass to the SAT solver:
[DBG]  1  1  -1  1  1  
[DBG]  1  1  1  1  1  
[DBG]  1  1  1  1  1  
[DBG]  1  1  1  -1  1  
[DBG]  -1  1  1  -1  1  
[DBG]  Identifying agents in a submap for rescheduling (when key_agent is there at the time 8):
[DBG]  Agent 32 found intervals in the sub-map:
[DBG]   [2..13]
[DBG]  Agent 32 (interval in submap: [2..13]) contains time 8, added to replan.
[DBG]  Agent 37 found intervals in the sub-map:
[DBG]   [0..1] [5..5]
[DBG]  Agent 37 is not in sub-map at time 8 (intervals: 
[DBG]  [0..1] [5..5] )
[DBG]  Agent 41 found intervals in the sub-map:
[DBG]   [8..8]
[DBG]  Agent 41 (interval in submap: [8..8]) contains time 8, added to replan.
[DBG]  Agent 67 found intervals in the sub-map:
[DBG]   [0..8]
[DBG]  Agent 67 (interval in submap: [0..8]) contains time 8, added to replan.
[DBG]  Agent 97 found intervals in the sub-map:
[DBG]   [6..10]
[DBG]  Agent 97 (interval in submap: [6..10]) contains time 8, added to replan.
[DBG]  Agent 105 found intervals in the sub-map:
[DBG]   [8..13]
[DBG]  Agent 105 (interval in submap: [8..13]) contains time 8, added to replan.
[DBG]  Agent 122 found intervals in the sub-map:
[DBG]   [7..10]
[DBG]  Agent 122 (interval in submap: [7..10]) contains time 8, added to replan.
[DBG]  Agent 140 found intervals in the sub-map:
[DBG]   [7..13]
[DBG]  Agent 140 (interval in submap: [7..13]) contains time 8, added to replan.
[DBG]  Agent 32 | Start (global): 806 -> (local): (2, 1) at time 8 | Goal (global): 744 -> (local): (0, 3) at time 13
[DBG]  Agent 41 | Start (global): 873 -> (local): (4, 4) at time 8 | Goal (global): 873 -> (local): (4, 4) at time 8
[DBG]  Agent 67 | Start (global): 742 -> (local): (0, 1) at time 8 | Goal (global): 742 -> (local): (0, 1) at time 8
[DBG]  Agent 97 | Start (global): 807 -> (local): (2, 2) at time 8 | Goal (global): 871 -> (local): (4, 2) at time 10
[DBG]  Agent 105 | Start (global): 870 -> (local): (4, 1) at time 8 | Goal (global): 742 -> (local): (0, 1) at time 13
[DBG]  Agent 122 | Start (global): 777 -> (local): (1, 4) at time 8 | Goal (global): 744 -> (local): (0, 3) at time 10
[DBG]  Agent 140 | Start (global): 774 -> (local): (1, 1) at time 8 | Goal (global): 745 -> (local): (0, 4) at time 13
[DBG]  [REPAIR] SAT destroy operator called.
[DBG]  [REPAIR] SAT operator â€“ launching subproblem FOR OPTIMIZATION.
[DBG]  Creating local paths (sx, sy) in the submap for T_sync = 8
[DBG]    Agent 32 (global paths from T=8 to 13) has local path: (2,1) (2,2) (2,3) (2,3) (1,3) (0,3) 
[DBG]    Agent 41 (global paths from T=8 to 8) has local path: (4,4) 
[DBG]    Agent 67 (global paths from T=8 to 8) has local path: (0,1) 
[DBG]    Agent 97 (global paths from T=8 to 10) has local path: (2,2) (3,2) (4,2) 
[DBG]    Agent 105 (global paths from T=8 to 13) has local path: (4,1) (3,1) (2,1) (2,1) (1,1) (0,1) 
[DBG]    Agent 122 (global paths from T=8 to 10) has local path: (1,4) (0,4) (0,3) 
[DBG]    Agent 140 (global paths from T=8 to 13) has local path: (1,1) (1,2) (1,2) (1,3) (1,4) (0,4) 
[DBG]  Checking input data for SAT solver:
[DBG]    - Number of agents to replan: 7
[DBG]  Agent 32 has the original local path length: 6 => Start (2,1), Goal (0,3)
[DBG]  Agent 41 has the original local path length: 1 => Start (4,4), Goal (4,4)
[DBG]  Agent 67 has the original local path length: 1 => Start (0,1), Goal (0,1)
[DBG]  Agent 97 has the original local path length: 3 => Start (2,2), Goal (4,2)
[DBG]  Agent 105 has the original local path length: 6 => Start (4,1), Goal (0,1)
[DBG]  Agent 122 has the original local path length: 3 => Start (1,4), Goal (0,3)
[DBG]  Agent 140 has the original local path length: 6 => Start (1,1), Goal (0,4)
[DBG]  Start position: (2, 1), (4, 4), (0, 1), (2, 2), (4, 1), (1, 4), (1, 1), 
[DBG]  Goal position: (0, 3), (4, 4), (0, 1), (4, 2), (0, 1), (0, 3), (0, 4), 
[DBG]  SAT instance and solver created.
Currently solving
Instance name: scen
Map name: map
Encoding used: disappear_at_goal
SAT solver used: Kissat
Optimizing function: sum of costs
Number of agents: 7
Mks LB: 5
SoC LB: 23
Delta: 0
Remaining time: 300000 [ms]

Vertex conflict! Agents 1, 2, timestep 1, location 0
Swapping conflict! Agents 1, 2, timestep 1, edge (0,0)
Vertex conflict! Agents 1, 2, timestep 2, location 0
Swapping conflict! Agents 1, 2, timestep 2, edge (0,0)
Vertex conflict! Agents 1, 2, timestep 3, location 0
Swapping conflict! Agents 1, 2, timestep 3, edge (0,0)
Vertex conflict! Agents 1, 2, timestep 4, location 0
Vertex conflict! Agents 1, 3, timestep 3, location 0
Swapping conflict! Agents 1, 3, timestep 3, edge (0,0)
Vertex conflict! Agents 1, 3, timestep 4, location 0
Vertex conflict! Agents 1, 5, timestep 3, location 0
Swapping conflict! Agents 1, 5, timestep 3, edge (0,0)
Vertex conflict! Agents 1, 5, timestep 4, location 0
Vertex conflict! Agents 2, 3, timestep 3, location 0
Swapping conflict! Agents 2, 3, timestep 3, edge (0,0)
Vertex conflict! Agents 2, 3, timestep 4, location 0
Vertex conflict! Agents 2, 5, timestep 3, location 0
Swapping conflict! Agents 2, 5, timestep 3, edge (0,0)
Vertex conflict! Agents 2, 5, timestep 4, location 0
Vertex conflict! Agents 3, 5, timestep 3, location 0
Swapping conflict! Agents 3, 5, timestep 3, edge (0,0)
Vertex conflict! Agents 3, 5, timestep 4, location 0
Found plan [agents = 7] [timesteps = 5]
Agent #0 : 10 11 12 7 2 
Agent #1 : 20 0 0 0 0 
Agent #2 : 1 0 0 0 0 
Agent #3 : 11 16 19 0 0 
Agent #4 : 18 15 10 5 1 
Agent #5 : 8 7 2 0 0 
Agent #6 : 5 6 7 8 3 

[STAT] Solver returned: 0
[DBG]  Agent (index) 32 | New local path (submap idx):
[DBG]  10 11 12 7 2 
[DBG]  Agent (index) 41 | New local path (submap idx):
[DBG]  20 
[DBG]  Agent (index) 67 | New local path (submap idx):
[DBG]  1 
[DBG]  Agent (index) 97 | New local path (submap idx):
[DBG]  11 16 19 
[DBG]  Agent (index) 105 | New local path (submap idx):
[DBG]  18 15 10 5 1 
[DBG]  Agent (index) 122 | New local path (submap idx):
[DBG]  8 7 2 
[DBG]  Agent (index) 140 | New local path (submap idx):
[DBG]  5 6 7 8 3 
[DBG]  Update the agent path 32 | Original local length: 6 | New local length: 5
[DBG]  agent 32 t=0 => decoded (sx,sy)=(2,1) => global_id=806
[DBG]  agent 32 t=1 => decoded (sx,sy)=(2,2) => global_id=807
[DBG]  agent 32 t=2 => decoded (sx,sy)=(2,3) => global_id=808
[DBG]  agent 32 t=3 => decoded (sx,sy)=(1,3) => global_id=776
[DBG]  agent 32 t=4 => decoded (sx,sy)=(0,3) => global_id=744
[DBG]  Complete path of agent 32:
[DBG]    Original: 868 836 837 838 838 806 806 806 806 807 808 808 776 744 
[DBG]    New:     868 836 837 838 838 806 806 806 806 807 808 776 744 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 868 836 837 838 838 806 806 806 
[DBG]    Local path (in submap): 806 807 808 776 744 
[DBG]    Suffix (out of submap): 
[DBG]  Original agent path length 32 je: 14
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 0: 868, 836, 837, 838, 838, 806, 806, 806, 806, 807, 808, 776, 744, 
[DBG]  Path for agent 32 updated, resulting length: 13
[DBG]  Update the agent path 41 | Original local length: 1 | New local length: 1
[DBG]  agent 41 t=0 => decoded (sx,sy)=(4,4) => global_id=873
[DBG]  Complete path of agent 41:
[DBG]    Original: 970 1002 1001 1000 968 936 937 905 873 874 875 843 844 
[DBG]    New:     970 1002 1001 1000 968 936 937 905 873 874 875 843 844 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 970 1002 1001 1000 968 936 937 905 
[DBG]    Local path (in submap): 873 
[DBG]    Suffix (out of submap): 874 875 843 844 
[DBG]  Original agent path length 41 je: 13
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 1: 970, 1002, 1001, 1000, 968, 936, 937, 905, 873, 874, 875, 843, 844, 
[DBG]  Path for agent 41 updated, resulting length: 13
[DBG]  Update the agent path 67 | Original local length: 1 | New local length: 1
[DBG]  agent 67 t=0 => decoded (sx,sy)=(0,1) => global_id=742
[DBG]  Complete path of agent 67:
[DBG]    Original: 773 773 773 773 774 774 774 774 742 710 710 678 646 647 615 583 551 519 487 455 423 424 425 426 427 428 429 430 431 432 400 401 402 403 404 405 437 438 439 407 408 409 377 378 379 380 348 349 
[DBG]    New:     773 773 773 773 774 774 774 774 742 710 710 678 646 647 615 583 551 519 487 455 423 424 425 426 427 428 429 430 431 432 400 401 402 403 404 405 437 438 439 407 408 409 377 378 379 380 348 349 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 773 773 773 773 774 774 774 774 
[DBG]    Local path (in submap): 742 
[DBG]    Suffix (out of submap): 710 710 678 646 647 615 583 551 519 487 455 423 424 425 426 427 428 429 430 431 432 400 401 402 403 404 405 437 438 439 407 408 409 377 378 379 380 348 349 
[DBG]  Original agent path length 67 je: 48
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 2: 773, 773, 773, 773, 774, 774, 774, 774, 742, 710, 710, 678, 646, 647, 615, 583, 551, 519, 487, 455, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 400, 401, 402, 403, 404, 405, 437, 438, 439, 407, 408, 409, 377, 378, 379, 380, 348, 349, 
[DBG]  Path for agent 67 updated, resulting length: 48
[DBG]  Update the agent path 97 | Original local length: 3 | New local length: 3
[DBG]  agent 97 t=0 => decoded (sx,sy)=(2,2) => global_id=807
[DBG]  agent 97 t=1 => decoded (sx,sy)=(3,2) => global_id=839
[DBG]  agent 97 t=2 => decoded (sx,sy)=(4,2) => global_id=871
[DBG]  Complete path of agent 97:
[DBG]    Original: 650 682 714 746 778 810 809 808 807 839 871 903 935 936 968 1000 999 998 997 
[DBG]    New:     650 682 714 746 778 810 809 808 807 839 871 903 935 936 968 1000 999 998 997 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 650 682 714 746 778 810 809 808 
[DBG]    Local path (in submap): 807 839 871 
[DBG]    Suffix (out of submap): 903 935 936 968 1000 999 998 997 
[DBG]  Original agent path length 97 je: 19
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 3: 650, 682, 714, 746, 778, 810, 809, 808, 807, 839, 871, 903, 935, 936, 968, 1000, 999, 998, 997, 
[DBG]  Path for agent 97 updated, resulting length: 19
[DBG]  Update the agent path 105 | Original local length: 6 | New local length: 5
[DBG]  agent 105 t=0 => decoded (sx,sy)=(4,1) => global_id=870
[DBG]  agent 105 t=1 => decoded (sx,sy)=(3,1) => global_id=838
[DBG]  agent 105 t=2 => decoded (sx,sy)=(2,1) => global_id=806
[DBG]  agent 105 t=3 => decoded (sx,sy)=(1,1) => global_id=774
[DBG]  agent 105 t=4 => decoded (sx,sy)=(0,1) => global_id=742
[DBG]  Complete path of agent 105:
[DBG]    Original: 1002 1001 1000 968 936 904 903 902 870 838 806 806 774 742 710 678 646 647 615 583 551 519 487 486 454 422 421 389 357 325 324 323 291 259 258 226 194 195 196 164 132 
[DBG]    New:     1002 1001 1000 968 936 904 903 902 870 838 806 774 742 710 678 646 647 615 583 551 519 487 486 454 422 421 389 357 325 324 323 291 259 258 226 194 195 196 164 132 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 1002 1001 1000 968 936 904 903 902 
[DBG]    Local path (in submap): 870 838 806 774 742 710 
[DBG]    Suffix (out of submap): 678 646 647 615 583 551 519 487 486 454 422 421 389 357 325 324 323 291 259 258 226 194 195 196 164 132 
[DBG]  Original agent path length 105 je: 41
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 4: 1002, 1001, 1000, 968, 936, 904, 903, 902, 870, 838, 806, 774, 742, 710, 678, 646, 647, 615, 583, 551, 519, 487, 486, 454, 422, 421, 389, 357, 325, 324, 323, 291, 259, 258, 226, 194, 195, 196, 164, 132, 
[DBG]  Path for agent 105 updated, resulting length: 40
[DBG]  Update the agent path 122 | Original local length: 3 | New local length: 3
[DBG]  agent 122 t=0 => decoded (sx,sy)=(1,4) => global_id=777
[DBG]  agent 122 t=1 => decoded (sx,sy)=(1,3) => global_id=776
[DBG]  agent 122 t=2 => decoded (sx,sy)=(0,3) => global_id=744
[DBG]  Complete path of agent 122:
[DBG]    Original: 909 877 845 844 843 811 810 809 777 745 744 712 680 648 647 615 583 551 519 487 486 454 422 421 389 357 325 293 261 260 228 196 197 
[DBG]    New:     909 877 845 844 843 811 810 809 777 776 744 712 680 648 647 615 583 551 519 487 486 454 422 421 389 357 325 293 261 260 228 196 197 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 909 877 845 844 843 811 810 809 
[DBG]    Local path (in submap): 777 776 744 
[DBG]    Suffix (out of submap): 712 680 648 647 615 583 551 519 487 486 454 422 421 389 357 325 293 261 260 228 196 197 
[DBG]  Original agent path length 122 je: 33
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 5: 909, 877, 845, 844, 843, 811, 810, 809, 777, 776, 744, 712, 680, 648, 647, 615, 583, 551, 519, 487, 486, 454, 422, 421, 389, 357, 325, 293, 261, 260, 228, 196, 197, 
[DBG]  Path for agent 122 updated, resulting length: 33
[DBG]  Update the agent path 140 | Original local length: 6 | New local length: 5
[DBG]  agent 140 t=0 => decoded (sx,sy)=(1,1) => global_id=774
[DBG]  agent 140 t=1 => decoded (sx,sy)=(1,2) => global_id=775
[DBG]  agent 140 t=2 => decoded (sx,sy)=(1,3) => global_id=776
[DBG]  agent 140 t=3 => decoded (sx,sy)=(1,4) => global_id=777
[DBG]  agent 140 t=4 => decoded (sx,sy)=(0,4) => global_id=745
[DBG]  Complete path of agent 140:
[DBG]    Original: 832 800 768 769 770 771 772 773 774 775 775 776 777 745 746 747 715 683 684 685 686 687 688 689 657 658 659 660 628 596 597 565 566 534 502 470 438 439 440 408 409 377 378 379 380 348 349 350 351 
[DBG]    New:     832 800 768 769 770 771 772 773 774 775 776 777 745 746 747 715 683 684 685 686 687 688 689 657 658 659 660 628 596 597 565 566 534 502 470 438 439 440 408 409 377 378 379 380 348 349 350 351 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 832 800 768 769 770 771 772 773 
[DBG]    Local path (in submap): 774 775 776 777 745 746 
[DBG]    Suffix (out of submap): 747 715 683 684 685 686 687 688 689 657 658 659 660 628 596 597 565 566 534 502 470 438 439 440 408 409 377 378 379 380 348 349 350 351 
[DBG]  Original agent path length 140 je: 49
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 6: 832, 800, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 745, 746, 747, 715, 683, 684, 685, 686, 687, 688, 689, 657, 658, 659, 660, 628, 596, 597, 565, 566, 534, 502, 470, 438, 439, 440, 408, 409, 377, 378, 379, 380, 348, 349, 350, 351, 
[DBG]  Path for agent 140 updated, resulting length: 48
[DBG]  Paths successfully updated.
[DBG]  (LNS.cpp) New path for agent 32: 
[DBG]  868, 836, 837, 838, 838, 806, 806, 806, 806, 807, 808, 776, 744, 
[DBG]  (LNS.cpp) New path for agent 41: 
[DBG]  970, 1002, 1001, 1000, 968, 936, 937, 905, 873, 874, 875, 843, 844, 
[DBG]  (LNS.cpp) New path for agent 67: 
[DBG]  773, 773, 773, 773, 774, 774, 774, 774, 742, 710, 710, 678, 646, 647, 615, 583, 551, 519, 487, 455, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 400, 401, 402, 403, 404, 405, 437, 438, 439, 407, 408, 409, 377, 378, 379, 380, 348, 349, 
[DBG]  (LNS.cpp) New path for agent 97: 
[DBG]  650, 682, 714, 746, 778, 810, 809, 808, 807, 839, 871, 903, 935, 936, 968, 1000, 999, 998, 997, 
[DBG]  (LNS.cpp) New path for agent 105: 
[DBG]  1002, 1001, 1000, 968, 936, 904, 903, 902, 870, 838, 806, 774, 742, 710, 678, 646, 647, 615, 583, 551, 519, 487, 486, 454, 422, 421, 389, 357, 325, 324, 323, 291, 259, 258, 226, 194, 195, 196, 164, 132, 
[DBG]  (LNS.cpp) New path for agent 122: 
[DBG]  909, 877, 845, 844, 843, 811, 810, 809, 777, 776, 744, 712, 680, 648, 647, 615, 583, 551, 519, 487, 486, 454, 422, 421, 389, 357, 325, 293, 261, 260, 228, 196, 197, 
[DBG]  (LNS.cpp) New path for agent 140: 
[DBG]  832, 800, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 745, 746, 747, 715, 683, 684, 685, 686, 687, 688, 689, 657, 658, 659, 660, 628, 596, 597, 565, 566, 534, 502, 470, 438, 439, 440, 408, 409, 377, 378, 379, 380, 348, 349, 350, 351, 
[DBG]  component_weights = {0.292814, 0.183989, 0.192406, 0.330791}
[DBG]  opSuccess value: 1
[STAT] neighbor.sum_of_costs before recomputation: 207
[STAT] neighbor.old_sum_of_costs before recomputation: 210
[STAT] sum_of_costs before recomputation: 4433
[DBG]  Validate solution immediately after SAT success.
[WARNING] Problem after SAT: Vertex conflict between agents 105 and 20 at location 519 at timestep 20
[DBG]  Attempting immediate repair via init_lns because problem occurred after SAT (should be applied only for conflicts...).
[DBG]  Passing 150 agents to init_lns (skip=true).
[DBG]  path_table contents for selected agents (neighbor.agents):
[DBG]    Agent 32 => controlling path length=13
[DBG]    Agent 41 => controlling path length=13
[DBG]    Agent 67 => controlling path length=48
[DBG]    Agent 97 => controlling path length=19
[DBG]    Agent 105 => controlling path length=40
[DBG]    Agent 122 => controlling path length=33
[DBG]    Agent 140 => controlling path length=48
[DBG]  hodnota skip_initial_solution=1
[DBG]  We skip initialSolution => call buildCollisionData()
[DBG]  buildCollisionData() called â€“ skip_initial_solution case.
[DBG]  Agents.size()=150, collision_graph.size()=150
[DBG]  agent 20 => updateCollidingPairs => foundCollision
[DBG]  agent 61 => updateCollidingPairs => foundCollision
[DBG]  agent 92 => updateCollidingPairs => foundCollision
[DBG]  agent 98 => updateCollidingPairs => foundCollision
[DBG]  agent 105 => updateCollidingPairs => foundCollision
[DBG]  agent 140 => updateCollidingPairs => foundCollision
[DBG]  Conflicting agent pairs:
[DBG]  agent 20 is in conflict with agent 105
[DBG]  agent 61 is in conflict with agent 140
[DBG]  agent 92 is in conflict with agent 105
[DBG]  agent 98 is in conflict with agent 105
[DBG]  buildCollisionData() => sum_of_costs=4430, num_of_colliding_pairs=4
[DBG]  buildCollisionData done => sum_of_costs=4430, num_of_colliding_pairs=4
[DBG]  sum_of_cost hodnota: 4430
[DBG]  After skip/init build => iteration_stats.back(): sum_of_costs=4430, collisions=4
[DEBUG] Using default neighbor generation strategy for conflicts: 2
[DEBUG] Using default neighbor generation strategy for conflicts: 1
[DEBUG] Using default neighbor generation strategy for conflicts: 1
	InitLNS(PP): runtime = 0.0157465, iterations = 4, colliding pairs = 0, initial colliding pairs = 4, solution cost = 4415, initial solution cost = 4430, failed iterations = 0
[DBG]  init_lns->sum_of_costs after init_lns->run: 4415
[DBG]  sum_of_costs after assignment from init_lns->run: 4415
[DBG]  Recomputing sum_of_cost by dividing neighbor.sum_of_costs and neighbor.old_sum_of_costs
[STAT] sum_of_costs after recomputation: 4415
[STAT] Iteration 54
[DBG]  Using SAT operator (destroy+repair SAT).
[DBG]  ====================
[DBG]  SAT destroy operator called.
[DBG]  SAT heuristic: 2
[DBG]  key_agent_id: 39
[DBG]  key_agent_id global path length: 30
[DBG]  Submap content (global positions):
[DBG]  793 794 795 796 797 
[DBG]  825 826 827 828 829 
[DBG]  857 858 859 860 861 
[DBG]  889 890 891 892 893 
[DBG]  921 922 923 924 925 
[DBG]  Map content with agents and obstacles:
[DBG]  . X . X . 
[DBG]  X . . X . 
[DBG]  . . A . . 
[DBG]  . . . . . 
[DBG]  . . . . X 
[DBG]  content of the map structure that we pass to the SAT solver:
[DBG]  1  -1  1  -1  1  
[DBG]  -1  1  1  -1  1  
[DBG]  1  1  1  1  1  
[DBG]  1  1  1  1  1  
[DBG]  1  1  1  1  -1  
[DBG]  Identifying agents in a submap for rescheduling (when key_agent is there at the time 27):
[DBG]  Agent 39 found intervals in the sub-map:
[DBG]   [24..29]
[DBG]  Agent 39 (interval in submap: [24..29]) contains time 27, added to replan.
[DBG]  Agent 96 found intervals in the sub-map:
[DBG]   [28..31]
[DBG]  Agent 96 is not in sub-map at time 27 (intervals: 
[DBG]  [28..31] )
[DBG]  Agent 39 | Start (global): 859 -> (local): (2, 2) at time 27 | Goal (global): 892 -> (local): (3, 3) at time 29
[DBG]  [REPAIR] SAT destroy operator called.
[DBG]  [REPAIR] SAT operator â€“ launching subproblem FOR OPTIMIZATION.
[DBG]  Creating local paths (sx, sy) in the submap for T_sync = 27
[DBG]    Agent 39 (global paths from T=27 to 29) has local path: (2,2) (2,3) (3,3) 
[DBG]  Checking input data for SAT solver:
[DBG]    - Number of agents to replan: 1
[DBG]  Agent 39 has the original local path length: 3 => Start (2,2), Goal (3,3)
[DBG]  Start position: (2, 2), 
[DBG]  Goal position: (3, 3), 
[DBG]  SAT instance and solver created.
Currently solving
Instance name: scen
Map name: map
Encoding used: disappear_at_goal
SAT solver used: Kissat
Optimizing function: sum of costs
Number of agents: 1
Mks LB: 3
SoC LB: 3
Delta: 0
Remaining time: 300000 [ms]

Found plan [agents = 1] [timesteps = 3]
Agent #0 : 8 13 14 

[STAT] Solver returned: 0
[DBG]  Agent (index) 39 | New local path (submap idx):
[DBG]  8 13 14 
[DBG]  Update the agent path 39 | Original local length: 3 | New local length: 3
[DBG]  agent 39 t=0 => decoded (sx,sy)=(2,2) => global_id=859
[DBG]  agent 39 t=1 => decoded (sx,sy)=(3,2) => global_id=891
[DBG]  agent 39 t=2 => decoded (sx,sy)=(3,3) => global_id=892
[DBG]  Complete path of agent 39:
[DBG]    Original: 680 712 744 745 746 747 748 780 781 813 845 877 877 878 879 880 881 882 883 884 885 886 887 888 889 857 858 859 860 892 
[DBG]    New:     680 712 744 745 746 747 748 780 781 813 845 877 877 878 879 880 881 882 883 884 885 886 887 888 889 857 858 859 891 892 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 680 712 744 745 746 747 748 780 781 813 845 877 877 878 879 880 881 882 883 884 885 886 887 888 889 857 858 
[DBG]    Local path (in submap): 859 891 892 
[DBG]    Suffix (out of submap): 
[DBG]  Original agent path length 39 je: 30
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 0: 680, 712, 744, 745, 746, 747, 748, 780, 781, 813, 845, 877, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 889, 857, 858, 859, 891, 892, 
[DBG]  Path for agent 39 updated, resulting length: 30
[DBG]  Paths successfully updated.
[DBG]  (LNS.cpp) New path for agent 39: 
[DBG]  680, 712, 744, 745, 746, 747, 748, 780, 781, 813, 845, 877, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 889, 857, 858, 859, 891, 892, 
[DBG]  component_weights = {0.297015, 0.182896, 0.191263, 0.328826}
[DBG]  opSuccess value: 1
[STAT] neighbor.sum_of_costs before recomputation: 29
[STAT] neighbor.old_sum_of_costs before recomputation: 29
[STAT] sum_of_costs before recomputation: 4415
[DBG]  Validate solution immediately after SAT success.
[DBG]  No problems after SAT replan.
[DBG]  Recomputing sum_of_cost by dividing neighbor.sum_of_costs and neighbor.old_sum_of_costs
[STAT] sum_of_costs after recomputation: 4415
[STAT] Iteration 55
[DBG]  Using SAT operator (destroy+repair SAT).
[DBG]  ====================
[DBG]  SAT destroy operator called.
[DBG]  SAT heuristic: 2
[DBG]  key_agent_id: 139
[DBG]  key_agent_id global path length: 38
[DBG]  Submap content (global positions):
[DBG]  154 155 156 157 158 
[DBG]  186 187 188 189 190 
[DBG]  218 219 220 221 222 
[DBG]  250 251 252 253 254 
[DBG]  282 283 284 285 286 
[DBG]  Map content with agents and obstacles:
[DBG]  . X . . . 
[DBG]  A X A . X 
[DBG]  . X A . . 
[DBG]  X . . X . 
[DBG]  X . . . . 
[DBG]  content of the map structure that we pass to the SAT solver:
[DBG]  1  -1  1  1  1  
[DBG]  1  -1  1  1  -1  
[DBG]  1  -1  1  1  1  
[DBG]  -1  1  1  -1  1  
[DBG]  -1  1  1  1  1  
[DBG]  Identifying agents in a submap for rescheduling (when key_agent is there at the time 3):
[DBG]  Agent 45 found intervals in the sub-map:
[DBG]   [1..5]
[DBG]  Agent 45 (interval in submap: [1..5]) contains time 3, added to replan.
[DBG]  Agent 139 found intervals in the sub-map:
[DBG]   [0..5]
[DBG]  Agent 139 (interval in submap: [0..5]) contains time 3, added to replan.
[DBG]  Agent 147 found intervals in the sub-map:
[DBG]   [0..4]
[DBG]  Agent 147 (interval in submap: [0..4]) contains time 3, added to replan.
[DBG]  Agent 45 | Start (global): 186 -> (local): (1, 0) at time 3 | Goal (global): 154 -> (local): (0, 0) at time 5
[DBG]  Agent 139 | Start (global): 220 -> (local): (2, 2) at time 3 | Goal (global): 156 -> (local): (0, 2) at time 5
[DBG]  Agent 147 | Start (global): 188 -> (local): (1, 2) at time 3 | Goal (global): 156 -> (local): (0, 2) at time 4
[DBG]  [REPAIR] SAT destroy operator called.
[DBG]  [REPAIR] SAT operator â€“ launching subproblem FOR OPTIMIZATION.
[DBG]  Creating local paths (sx, sy) in the submap for T_sync = 3
[DBG]    Agent 45 (global paths from T=3 to 5) has local path: (1,0) (1,0) (0,0) 
[DBG]    Agent 139 (global paths from T=3 to 5) has local path: (2,2) (1,2) (0,2) 
[DBG]    Agent 147 (global paths from T=3 to 4) has local path: (1,2) (0,2) 
[DBG]  Checking input data for SAT solver:
[DBG]    - Number of agents to replan: 3
[DBG]  Agent 45 has the original local path length: 3 => Start (1,0), Goal (0,0)
[DBG]  Agent 139 has the original local path length: 3 => Start (2,2), Goal (0,2)
[DBG]  Agent 147 has the original local path length: 2 => Start (1,2), Goal (0,2)
[DBG]  Start position: (1, 0), (2, 2), (1, 2), 
[DBG]  Goal position: (0, 0), (0, 2), (0, 2), 
[DBG]  SAT instance and solver created.
Currently solving
Instance name: scen
Map name: map
Encoding used: disappear_at_goal
SAT solver used: Kissat
Optimizing function: sum of costs
Number of agents: 3
Mks LB: 3
SoC LB: 7
Delta: 0
Remaining time: 300000 [ms]

Vertex conflict! Agents 0, 2, timestep 2, location 0
Found plan [agents = 3] [timesteps = 3]
Agent #0 : 4 0 0 
Agent #1 : 8 5 1 
Agent #2 : 5 1 0 

[STAT] Solver returned: 0
[DBG]  Agent (index) 45 | New local path (submap idx):
[DBG]  4 0 
[DBG]  Agent (index) 139 | New local path (submap idx):
[DBG]  8 5 1 
[DBG]  Agent (index) 147 | New local path (submap idx):
[DBG]  5 1 
[DBG]  Update the agent path 45 | Original local length: 3 | New local length: 2
[DBG]  agent 45 t=0 => decoded (sx,sy)=(1,0) => global_id=186
[DBG]  agent 45 t=1 => decoded (sx,sy)=(0,0) => global_id=154
[DBG]  Complete path of agent 45:
[DBG]    Original: 153 154 186 186 186 154 122 90 89 121 120 119 151 183 215 247 279 278 277 309 341 373 405 437 469 501 533 565 597 629 628 660 692 724 756 755 787 819 818 817 849 
[DBG]    New:     153 154 186 186 154 122 90 89 121 120 119 151 183 215 247 279 278 277 309 341 373 405 437 469 501 533 565 597 629 628 660 692 724 756 755 787 819 818 817 849 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 153 154 186 
[DBG]    Local path (in submap): 186 154 122 
[DBG]    Suffix (out of submap): 90 89 121 120 119 151 183 215 247 279 278 277 309 341 373 405 437 469 501 533 565 597 629 628 660 692 724 756 755 787 819 818 817 849 
[DBG]  Original agent path length 45 je: 41
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 0: 153, 154, 186, 186, 154, 122, 90, 89, 121, 120, 119, 151, 183, 215, 247, 279, 278, 277, 309, 341, 373, 405, 437, 469, 501, 533, 565, 597, 629, 628, 660, 692, 724, 756, 755, 787, 819, 818, 817, 849, 
[DBG]  Path for agent 45 updated, resulting length: 40
[DBG]  Update the agent path 139 | Original local length: 3 | New local length: 3
[DBG]  agent 139 t=0 => decoded (sx,sy)=(2,2) => global_id=220
[DBG]  agent 139 t=1 => decoded (sx,sy)=(1,2) => global_id=188
[DBG]  agent 139 t=2 => decoded (sx,sy)=(0,2) => global_id=156
[DBG]  Complete path of agent 139:
[DBG]    Original: 285 284 252 220 188 156 124 123 122 122 121 120 119 118 86 85 84 83 82 81 80 48 47 46 45 13 12 11 43 42 41 9 8 7 6 5 4 3 
[DBG]    New:     285 284 252 220 188 156 124 123 122 122 121 120 119 118 86 85 84 83 82 81 80 48 47 46 45 13 12 11 43 42 41 9 8 7 6 5 4 3 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 285 284 252 
[DBG]    Local path (in submap): 220 188 156 
[DBG]    Suffix (out of submap): 124 123 122 122 121 120 119 118 86 85 84 83 82 81 80 48 47 46 45 13 12 11 43 42 41 9 8 7 6 5 4 3 
[DBG]  Original agent path length 139 je: 38
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 1: 285, 284, 252, 220, 188, 156, 124, 123, 122, 122, 121, 120, 119, 118, 86, 85, 84, 83, 82, 81, 80, 48, 47, 46, 45, 13, 12, 11, 43, 42, 41, 9, 8, 7, 6, 5, 4, 3, 
[DBG]  Path for agent 139 updated, resulting length: 38
[DBG]  Update the agent path 147 | Original local length: 2 | New local length: 2
[DBG]  agent 147 t=0 => decoded (sx,sy)=(1,2) => global_id=188
[DBG]  agent 147 t=1 => decoded (sx,sy)=(0,2) => global_id=156
[DBG]  Complete path of agent 147:
[DBG]    Original: 284 252 220 188 156 124 123 122 90 89 89 121 120 119 151 150 149 148 147 146 178 177 209 209 208 207 239 271 270 269 268 300 299 298 297 296 295 294 326 
[DBG]    New:     284 252 220 188 156 124 123 122 90 89 89 121 120 119 151 150 149 148 147 146 178 177 209 209 208 207 239 271 270 269 268 300 299 298 297 296 295 294 326 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 284 252 220 
[DBG]    Local path (in submap): 188 156 
[DBG]    Suffix (out of submap): 124 123 122 90 89 89 121 120 119 151 150 149 148 147 146 178 177 209 209 208 207 239 271 270 269 268 300 299 298 297 296 295 294 326 
[DBG]  Original agent path length 147 je: 39
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 2: 284, 252, 220, 188, 156, 124, 123, 122, 90, 89, 89, 121, 120, 119, 151, 150, 149, 148, 147, 146, 178, 177, 209, 209, 208, 207, 239, 271, 270, 269, 268, 300, 299, 298, 297, 296, 295, 294, 326, 
[DBG]  Path for agent 147 updated, resulting length: 39
[DBG]  Paths successfully updated.
[DBG]  (LNS.cpp) New path for agent 45: 
[DBG]  153, 154, 186, 186, 154, 122, 90, 89, 121, 120, 119, 151, 183, 215, 247, 279, 278, 277, 309, 341, 373, 405, 437, 469, 501, 533, 565, 597, 629, 628, 660, 692, 724, 756, 755, 787, 819, 818, 817, 849, 
[DBG]  (LNS.cpp) New path for agent 139: 
[DBG]  285, 284, 252, 220, 188, 156, 124, 123, 122, 122, 121, 120, 119, 118, 86, 85, 84, 83, 82, 81, 80, 48, 47, 46, 45, 13, 12, 11, 43, 42, 41, 9, 8, 7, 6, 5, 4, 3, 
[DBG]  (LNS.cpp) New path for agent 147: 
[DBG]  284, 252, 220, 188, 156, 124, 123, 122, 90, 89, 89, 121, 120, 119, 151, 150, 149, 148, 147, 146, 178, 177, 209, 209, 208, 207, 239, 271, 270, 269, 268, 300, 299, 298, 297, 296, 295, 294, 326, 
[DBG]  component_weights = {0.295026, 0.181671, 0.189983, 0.33332}
[DBG]  opSuccess value: 1
[STAT] neighbor.sum_of_costs before recomputation: 114
[STAT] neighbor.old_sum_of_costs before recomputation: 115
[STAT] sum_of_costs before recomputation: 4415
[DBG]  Validate solution immediately after SAT success.
[WARNING] Problem after SAT: Vertex conflict between agents 34 and 45 at location 90 at timestep 6
[DBG]  Attempting immediate repair via init_lns because problem occurred after SAT (should be applied only for conflicts...).
[DBG]  Passing 150 agents to init_lns (skip=true).
[DBG]  path_table contents for selected agents (neighbor.agents):
[DBG]    Agent 45 => controlling path length=40
[DBG]    Agent 139 => controlling path length=38
[DBG]    Agent 147 => controlling path length=39
[DBG]  hodnota skip_initial_solution=1
[DBG]  We skip initialSolution => call buildCollisionData()
[DBG]  buildCollisionData() called â€“ skip_initial_solution case.
[DBG]  Agents.size()=150, collision_graph.size()=150
[DBG]  agent 34 => updateCollidingPairs => foundCollision
[DBG]  agent 44 => updateCollidingPairs => foundCollision
[DBG]  agent 45 => updateCollidingPairs => foundCollision
[DBG]  agent 49 => updateCollidingPairs => foundCollision
[DBG]  agent 52 => updateCollidingPairs => foundCollision
[DBG]  agent 53 => updateCollidingPairs => foundCollision
[DBG]  agent 62 => updateCollidingPairs => foundCollision
[DBG]  agent 69 => updateCollidingPairs => foundCollision
[DBG]  agent 136 => updateCollidingPairs => foundCollision
[DBG]  Conflicting agent pairs:
[DBG]  agent 34 is in conflict with agent 45
[DBG]  agent 44 is in conflict with agent 45
[DBG]  agent 45 is in conflict with agent 49
[DBG]  agent 45 is in conflict with agent 52
[DBG]  agent 45 is in conflict with agent 53
[DBG]  agent 45 is in conflict with agent 62
[DBG]  agent 45 is in conflict with agent 69
[DBG]  agent 45 is in conflict with agent 136
[DBG]  buildCollisionData() => sum_of_costs=4414, num_of_colliding_pairs=8
[DBG]  buildCollisionData done => sum_of_costs=4414, num_of_colliding_pairs=8
[DBG]  sum_of_cost hodnota: 4414
[DBG]  After skip/init build => iteration_stats.back(): sum_of_costs=4414, collisions=8
[DEBUG] Using default neighbor generation strategy for conflicts: 1
	InitLNS(PP): runtime = 0.00491162, iterations = 2, colliding pairs = 0, initial colliding pairs = 8, solution cost = 4407, initial solution cost = 4414, failed iterations = 0
[DBG]  init_lns->sum_of_costs after init_lns->run: 4407
[DBG]  sum_of_costs after assignment from init_lns->run: 4407
[DBG]  Recomputing sum_of_cost by dividing neighbor.sum_of_costs and neighbor.old_sum_of_costs
[STAT] sum_of_costs after recomputation: 4407
[STAT] Iteration 56
[DBG]  Using SAT operator (destroy+repair SAT).
[DBG]  ====================
[DBG]  SAT destroy operator called.
[DBG]  SAT heuristic: 2
[DBG]  key_agent_id: 96
[DBG]  key_agent_id global path length: 32
[DBG]  Submap content (global positions):
[DBG]  779 780 781 782 783 
[DBG]  811 812 813 814 815 
[DBG]  843 844 845 846 847 
[DBG]  875 876 877 878 879 
[DBG]  907 908 909 910 911 
[DBG]  Map content with agents and obstacles:
[DBG]  . . . A A 
[DBG]  . . A . A 
[DBG]  . A A . A 
[DBG]  . . A . . 
[DBG]  X . . . X 
[DBG]  content of the map structure that we pass to the SAT solver:
[DBG]  1  1  1  1  1  
[DBG]  1  1  1  1  1  
[DBG]  1  1  1  1  1  
[DBG]  1  1  1  1  1  
[DBG]  -1  1  1  1  -1  
[DBG]  Identifying agents in a submap for rescheduling (when key_agent is there at the time 12):
[DBG]  Agent 6 found intervals in the sub-map:
[DBG]   [22..25] [29..29]
[DBG]  Agent 6 is not in sub-map at time 12 (intervals: 
[DBG]  [22..25] [29..29] )
[DBG]  Agent 37 found intervals in the sub-map:
[DBG]   [7..15]
[DBG]  Agent 37 (interval in submap: [7..15]) contains time 12, added to replan.
[DBG]  Agent 38 found intervals in the sub-map:
[DBG]   [12..14]
[DBG]  Agent 38 (interval in submap: [12..14]) contains time 12, added to replan.
[DBG]  Agent 39 found intervals in the sub-map:
[DBG]   [7..14]
[DBG]  Agent 39 (interval in submap: [7..14]) contains time 12, added to replan.
[DBG]  Agent 41 found intervals in the sub-map:
[DBG]   [10..12]
[DBG]  Agent 41 (interval in submap: [10..12]) contains time 12, added to replan.
[DBG]  Agent 50 found intervals in the sub-map:
[DBG]   [10..12]
[DBG]  Agent 50 (interval in submap: [10..12]) contains time 12, added to replan.
[DBG]  Agent 61 found intervals in the sub-map:
[DBG]   [0..8]
[DBG]  Agent 61 is not in sub-map at time 12 (intervals: 
[DBG]  [0..8] )
[DBG]  Agent 68 found intervals in the sub-map:
[DBG]   [14..14]
[DBG]  Agent 68 is not in sub-map at time 12 (intervals: 
[DBG]  [14..14] )
[DBG]  Agent 96 found intervals in the sub-map:
[DBG]   [9..15]
[DBG]  Agent 96 (interval in submap: [9..15]) contains time 12, added to replan.
[DBG]  Agent 111 found intervals in the sub-map:
[DBG]  
[DBG]  Agent 111 is not in sub-map at time 12 (intervals: 
[DBG]  )
[DBG]  Agent 118 found intervals in the sub-map:
[DBG]   [11..14]
[DBG]  Agent 118 (interval in submap: [11..14]) contains time 12, added to replan.
[DBG]  Agent 143 found intervals in the sub-map:
[DBG]   [7..15]
[DBG]  Agent 143 (interval in submap: [7..15]) contains time 12, added to replan.
[DBG]  Agent 37 | Start (global): 813 -> (local): (1, 2) at time 12 | Goal (global): 782 -> (local): (0, 3) at time 15
[DBG]  Agent 38 | Start (global): 847 -> (local): (2, 4) at time 12 | Goal (global): 845 -> (local): (2, 2) at time 14
[DBG]  Agent 39 | Start (global): 877 -> (local): (3, 2) at time 12 | Goal (global): 879 -> (local): (3, 4) at time 14
[DBG]  Agent 41 | Start (global): 844 -> (local): (2, 1) at time 12 | Goal (global): 844 -> (local): (2, 1) at time 12
[DBG]  Agent 50 | Start (global): 783 -> (local): (0, 4) at time 12 | Goal (global): 783 -> (local): (0, 4) at time 12
[DBG]  Agent 96 | Start (global): 845 -> (local): (2, 2) at time 12 | Goal (global): 879 -> (local): (3, 4) at time 15
[DBG]  Agent 118 | Start (global): 815 -> (local): (1, 4) at time 12 | Goal (global): 782 -> (local): (0, 3) at time 14
[DBG]  Agent 143 | Start (global): 782 -> (local): (0, 3) at time 12 | Goal (global): 779 -> (local): (0, 0) at time 15
[DBG]  [REPAIR] SAT destroy operator called.
[DBG]  [REPAIR] SAT operator â€“ launching subproblem FOR OPTIMIZATION.
[DBG]  Creating local paths (sx, sy) in the submap for T_sync = 12
[DBG]    Agent 37 (global paths from T=12 to 15) has local path: (1,2) (1,3) (1,3) (0,3) 
[DBG]    Agent 38 (global paths from T=12 to 14) has local path: (2,4) (2,3) (2,2) 
[DBG]    Agent 39 (global paths from T=12 to 14) has local path: (3,2) (3,3) (3,4) 
[DBG]    Agent 41 (global paths from T=12 to 12) has local path: (2,1) 
[DBG]    Agent 50 (global paths from T=12 to 12) has local path: (0,4) 
[DBG]    Agent 96 (global paths from T=12 to 15) has local path: (2,2) (3,2) (3,3) (3,4) 
[DBG]    Agent 118 (global paths from T=12 to 14) has local path: (1,4) (0,4) (0,3) 
[DBG]    Agent 143 (global paths from T=12 to 15) has local path: (0,3) (0,2) (0,1) (0,0) 
[DBG]  Checking input data for SAT solver:
[DBG]    - Number of agents to replan: 8
[DBG]  Agent 37 has the original local path length: 4 => Start (1,2), Goal (0,3)
[DBG]  Agent 38 has the original local path length: 3 => Start (2,4), Goal (2,2)
[DBG]  Agent 39 has the original local path length: 3 => Start (3,2), Goal (3,4)
[DBG]  Agent 41 has the original local path length: 1 => Start (2,1), Goal (2,1)
[DBG]  Agent 50 has the original local path length: 1 => Start (0,4), Goal (0,4)
[DBG]  Agent 96 has the original local path length: 4 => Start (2,2), Goal (3,4)
[DBG]  Agent 118 has the original local path length: 3 => Start (1,4), Goal (0,3)
[DBG]  Agent 143 has the original local path length: 4 => Start (0,3), Goal (0,0)
[DBG]  Start position: (1, 2), (2, 4), (3, 2), (2, 1), (0, 4), (2, 2), (1, 4), (0, 3), 
[DBG]  Goal position: (0, 3), (2, 2), (3, 4), (2, 1), (0, 4), (3, 4), (0, 3), (0, 0), 
[DBG]  SAT instance and solver created.
Currently solving
Instance name: scen
Map name: map
Encoding used: disappear_at_goal
SAT solver used: Kissat
Optimizing function: sum of costs
Number of agents: 8
Mks LB: 4
SoC LB: 22
Delta: 0
Remaining time: 300000 [ms]

[STAT] Solver returned: -1
[DBG]  SAT solver failed.
[STAT] SAT solver failed to find a valid solution.
[DBG]  ====================
[DBG]  SAT destroy operator called.
[DBG]  SAT heuristic: 2
[DBG]  key_agent_id: 96
[DBG]  key_agent_id global path length: 32
[DBG]  Submap content (global positions):
[DBG]  789 790 791 792 793 
[DBG]  821 822 823 824 825 
[DBG]  853 854 855 856 857 
[DBG]  885 886 887 888 889 
[DBG]  917 918 919 920 921 
[DBG]  Map content with agents and obstacles:
[DBG]  X . X . . 
[DBG]  . A A . X 
[DBG]  X . A . . 
[DBG]  . . . . . 
[DBG]  . . . . . 
[DBG]  content of the map structure that we pass to the SAT solver:
[DBG]  -1  1  -1  1  1  
[DBG]  1  1  1  1  -1  
[DBG]  -1  1  1  1  1  
[DBG]  1  1  1  1  1  
[DBG]  1  1  1  1  1  
[DBG]  Identifying agents in a submap for rescheduling (when key_agent is there at the time 26):
[DBG]  Agent 24 found intervals in the sub-map:
[DBG]  
[DBG]  Agent 24 is not in sub-map at time 26 (intervals: 
[DBG]  )
[DBG]  Agent 85 found intervals in the sub-map:
[DBG]   [25..27]
[DBG]  Agent 85 (interval in submap: [25..27]) contains time 26, added to replan.
[DBG]  Agent 91 found intervals in the sub-map:
[DBG]  
[DBG]  Agent 91 is not in sub-map at time 26 (intervals: 
[DBG]  )
[DBG]  Agent 96 found intervals in the sub-map:
[DBG]   [23..28]
[DBG]  Agent 96 (interval in submap: [23..28]) contains time 26, added to replan.
[DBG]  Agent 111 found intervals in the sub-map:
[DBG]   [24..29]
[DBG]  Agent 111 (interval in submap: [24..29]) contains time 26, added to replan.
[DBG]  Agent 85 | Start (global): 822 -> (local): (1, 1) at time 26 | Goal (global): 790 -> (local): (0, 1) at time 27
[DBG]  Agent 96 | Start (global): 855 -> (local): (2, 2) at time 26 | Goal (global): 857 -> (local): (2, 4) at time 28
[DBG]  Agent 111 | Start (global): 823 -> (local): (1, 2) at time 26 | Goal (global): 793 -> (local): (0, 4) at time 29
[DBG]  [REPAIR] SAT destroy operator called.
[DBG]  [REPAIR] SAT operator â€“ launching subproblem FOR OPTIMIZATION.
[DBG]  Creating local paths (sx, sy) in the submap for T_sync = 26
[DBG]    Agent 85 (global paths from T=26 to 27) has local path: (1,1) (0,1) 
[DBG]    Agent 96 (global paths from T=26 to 28) has local path: (2,2) (2,3) (2,4) 
[DBG]    Agent 111 (global paths from T=26 to 29) has local path: (1,2) (1,3) (0,3) (0,4) 
[DBG]  Checking input data for SAT solver:
[DBG]    - Number of agents to replan: 3
[DBG]  Agent 85 has the original local path length: 2 => Start (1,1), Goal (0,1)
[DBG]  Agent 96 has the original local path length: 3 => Start (2,2), Goal (2,4)
[DBG]  Agent 111 has the original local path length: 4 => Start (1,2), Goal (0,4)
[DBG]  Start position: (1, 1), (2, 2), (1, 2), 
[DBG]  Goal position: (0, 1), (2, 4), (0, 4), 
[DBG]  SAT instance and solver created.
Currently solving
Instance name: scen
Map name: map
Encoding used: disappear_at_goal
SAT solver used: Kissat
Optimizing function: sum of costs
Number of agents: 3
Mks LB: 4
SoC LB: 9
Delta: 0
Remaining time: 300000 [ms]

Vertex conflict! Agents 0, 1, timestep 3, location 0
Found plan [agents = 3] [timesteps = 4]
Agent #0 : 4 0 0 0 
Agent #1 : 8 9 10 0 
Agent #2 : 5 6 1 2 

[STAT] Solver returned: 0
[DBG]  Agent (index) 85 | New local path (submap idx):
[DBG]  4 0 
[DBG]  Agent (index) 96 | New local path (submap idx):
[DBG]  8 9 10 
[DBG]  Agent (index) 111 | New local path (submap idx):
[DBG]  5 6 1 2 
[DBG]  Update the agent path 85 | Original local length: 2 | New local length: 2
[DBG]  agent 85 t=0 => decoded (sx,sy)=(1,1) => global_id=822
[DBG]  agent 85 t=1 => decoded (sx,sy)=(0,1) => global_id=790
[DBG]  Complete path of agent 85:
[DBG]    Original: 709 741 742 774 806 807 839 871 903 904 905 906 874 875 876 877 878 846 847 848 849 817 818 819 820 821 822 790 
[DBG]    New:     709 741 742 774 806 807 839 871 903 904 905 906 874 875 876 877 878 846 847 848 849 817 818 819 820 821 822 790 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 709 741 742 774 806 807 839 871 903 904 905 906 874 875 876 877 878 846 847 848 849 817 818 819 820 821 
[DBG]    Local path (in submap): 822 790 
[DBG]    Suffix (out of submap): 
[DBG]  Original agent path length 85 je: 28
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 0: 709, 741, 742, 774, 806, 807, 839, 871, 903, 904, 905, 906, 874, 875, 876, 877, 878, 846, 847, 848, 849, 817, 818, 819, 820, 821, 822, 790, 
[DBG]  Path for agent 85 updated, resulting length: 28
[DBG]  Update the agent path 96 | Original local length: 3 | New local length: 3
[DBG]  agent 96 t=0 => decoded (sx,sy)=(2,2) => global_id=855
[DBG]  agent 96 t=1 => decoded (sx,sy)=(2,3) => global_id=856
[DBG]  agent 96 t=2 => decoded (sx,sy)=(2,4) => global_id=857
[DBG]  Complete path of agent 96:
[DBG]    Original: 647 648 680 712 713 714 715 747 748 780 812 844 845 877 878 879 880 848 849 850 818 819 820 821 822 823 855 856 857 858 859 827 
[DBG]    New:     647 648 680 712 713 714 715 747 748 780 812 844 845 877 878 879 880 848 849 850 818 819 820 821 822 823 855 856 857 858 859 827 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 647 648 680 712 713 714 715 747 748 780 812 844 845 877 878 879 880 848 849 850 818 819 820 821 822 823 
[DBG]    Local path (in submap): 855 856 857 
[DBG]    Suffix (out of submap): 858 859 827 
[DBG]  Original agent path length 96 je: 32
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 1: 647, 648, 680, 712, 713, 714, 715, 747, 748, 780, 812, 844, 845, 877, 878, 879, 880, 848, 849, 850, 818, 819, 820, 821, 822, 823, 855, 856, 857, 858, 859, 827, 
[DBG]  Path for agent 96 updated, resulting length: 32
[DBG]  Update the agent path 111 | Original local length: 4 | New local length: 4
[DBG]  agent 111 t=0 => decoded (sx,sy)=(1,2) => global_id=823
[DBG]  agent 111 t=1 => decoded (sx,sy)=(1,3) => global_id=824
[DBG]  agent 111 t=2 => decoded (sx,sy)=(0,3) => global_id=792
[DBG]  agent 111 t=3 => decoded (sx,sy)=(0,4) => global_id=793
[DBG]  Complete path of agent 111:
[DBG]    Original: 964 965 997 998 999 1000 1001 1002 1003 1004 1005 1006 974 975 976 944 912 880 848 849 817 818 819 820 821 822 823 824 792 793 761 729 697 696 664 632 633 601 569 570 538 539 540 
[DBG]    New:     964 965 997 998 999 1000 1001 1002 1003 1004 1005 1006 974 975 976 944 912 880 848 849 817 818 819 820 821 822 823 824 792 793 761 729 697 696 664 632 633 601 569 570 538 539 540 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 964 965 997 998 999 1000 1001 1002 1003 1004 1005 1006 974 975 976 944 912 880 848 849 817 818 819 820 821 822 
[DBG]    Local path (in submap): 823 824 792 793 
[DBG]    Suffix (out of submap): 761 729 697 696 664 632 633 601 569 570 538 539 540 
[DBG]  Original agent path length 111 je: 43
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 2: 964, 965, 997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 974, 975, 976, 944, 912, 880, 848, 849, 817, 818, 819, 820, 821, 822, 823, 824, 792, 793, 761, 729, 697, 696, 664, 632, 633, 601, 569, 570, 538, 539, 540, 
[DBG]  Path for agent 111 updated, resulting length: 43
[DBG]  Paths successfully updated.
[DBG]  (LNS.cpp) New path for agent 85: 
[DBG]  709, 741, 742, 774, 806, 807, 839, 871, 903, 904, 905, 906, 874, 875, 876, 877, 878, 846, 847, 848, 849, 817, 818, 819, 820, 821, 822, 790, 
[DBG]  (LNS.cpp) New path for agent 96: 
[DBG]  647, 648, 680, 712, 713, 714, 715, 747, 748, 780, 812, 844, 845, 877, 878, 879, 880, 848, 849, 850, 818, 819, 820, 821, 822, 823, 855, 856, 857, 858, 859, 827, 
[DBG]  (LNS.cpp) New path for agent 111: 
[DBG]  964, 965, 997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 974, 975, 976, 944, 912, 880, 848, 849, 817, 818, 819, 820, 821, 822, 823, 824, 792, 793, 761, 729, 697, 696, 664, 632, 633, 601, 569, 570, 538, 539, 540, 
[DBG]  component_weights = {0.299245, 0.180584, 0.188846, 0.331325}
[DBG]  opSuccess value: 1
[STAT] neighbor.sum_of_costs before recomputation: 100
[STAT] neighbor.old_sum_of_costs before recomputation: 100
[STAT] sum_of_costs before recomputation: 4407
[DBG]  Validate solution immediately after SAT success.
[DBG]  No problems after SAT replan.
[DBG]  Recomputing sum_of_cost by dividing neighbor.sum_of_costs and neighbor.old_sum_of_costs
[STAT] sum_of_costs after recomputation: 4407
[STAT] Iteration 57
[DBG]  Using SAT operator (destroy+repair SAT).
[DBG]  ====================
[DBG]  SAT destroy operator called.
[DBG]  SAT heuristic: 2
[DBG]  key_agent_id: 23
[DBG]  key_agent_id global path length: 51
[DBG]  Submap content (global positions):
[DBG]  453 454 455 456 457 
[DBG]  485 486 487 488 489 
[DBG]  517 518 519 520 521 
[DBG]  549 550 551 552 553 
[DBG]  581 582 583 584 585 
[DBG]  Map content with agents and obstacles:
[DBG]  X . . . . 
[DBG]  . . A X . 
[DBG]  . X A A . 
[DBG]  A . A X X 
[DBG]  . . . . . 
[DBG]  content of the map structure that we pass to the SAT solver:
[DBG]  -1  1  1  1  1  
[DBG]  1  1  1  -1  1  
[DBG]  1  -1  1  1  1  
[DBG]  1  1  1  -1  -1  
[DBG]  1  1  1  1  1  
[DBG]  Identifying agents in a submap for rescheduling (when key_agent is there at the time 19):
[DBG]  Agent 13 found intervals in the sub-map:
[DBG]   [14..18]
[DBG]  Agent 13 is not in sub-map at time 19 (intervals: 
[DBG]  [14..18] )
[DBG]  Agent 20 found intervals in the sub-map:
[DBG]   [16..23]
[DBG]  Agent 20 (interval in submap: [16..23]) contains time 19, added to replan.
[DBG]  Agent 21 found intervals in the sub-map:
[DBG]   [6..9]
[DBG]  Agent 21 is not in sub-map at time 19 (intervals: 
[DBG]  [6..9] )
[DBG]  Agent 23 found intervals in the sub-map:
[DBG]   [14..21]
[DBG]  Agent 23 (interval in submap: [14..21]) contains time 19, added to replan.
[DBG]  Agent 67 found intervals in the sub-map:
[DBG]   [12..17]
[DBG]  Agent 67 is not in sub-map at time 19 (intervals: 
[DBG]  [12..17] )
[DBG]  Agent 73 found intervals in the sub-map:
[DBG]   [5..14] [17..17]
[DBG]  Agent 73 is not in sub-map at time 19 (intervals: 
[DBG]  [5..14] [17..17] )
[DBG]  Agent 103 found intervals in the sub-map:
[DBG]   [14..20]
[DBG]  Agent 103 (interval in submap: [14..20]) contains time 19, added to replan.
[DBG]  Agent 105 found intervals in the sub-map:
[DBG]   [18..23]
[DBG]  Agent 105 (interval in submap: [18..23]) contains time 19, added to replan.
[DBG]  Agent 106 found intervals in the sub-map:
[DBG]   [20..24]
[DBG]  Agent 106 is not in sub-map at time 19 (intervals: 
[DBG]  [20..24] )
[DBG]  Agent 122 found intervals in the sub-map:
[DBG]   [16..21]
[DBG]  Agent 122 (interval in submap: [16..21]) contains time 19, added to replan.
[DBG]  Agent 140 found intervals in the sub-map:
[DBG]  
[DBG]  Agent 140 is not in sub-map at time 19 (intervals: 
[DBG]  )
[DBG]  Agent 145 found intervals in the sub-map:
[DBG]   [21..26]
[DBG]  Agent 145 is not in sub-map at time 19 (intervals: 
[DBG]  [21..26] )
[DBG]  Agent 20 | Start (global): 520 -> (local): (2, 3) at time 19 | Goal (global): 583 -> (local): (4, 2) at time 23
[DBG]  Agent 23 | Start (global): 519 -> (local): (2, 2) at time 19 | Goal (global): 455 -> (local): (0, 2) at time 21
[DBG]  Agent 103 | Start (global): 549 -> (local): (3, 0) at time 19 | Goal (global): 581 -> (local): (4, 0) at time 20
[DBG]  Agent 105 | Start (global): 551 -> (local): (3, 2) at time 19 | Goal (global): 454 -> (local): (0, 1) at time 23
[DBG]  Agent 122 | Start (global): 487 -> (local): (1, 2) at time 19 | Goal (global): 454 -> (local): (0, 1) at time 21
[DBG]  [REPAIR] SAT destroy operator called.
[DBG]  [REPAIR] SAT operator â€“ launching subproblem FOR OPTIMIZATION.
[DBG]  Creating local paths (sx, sy) in the submap for T_sync = 19
[DBG]    Agent 20 (global paths from T=19 to 23) has local path: (2,3) (2,3) (2,2) (3,2) (4,2) 
[DBG]    Agent 23 (global paths from T=19 to 21) has local path: (2,2) (1,2) (0,2) 
[DBG]    Agent 103 (global paths from T=19 to 20) has local path: (3,0) (4,0) 
[DBG]    Agent 105 (global paths from T=19 to 23) has local path: (3,2) (2,2) (1,2) (0,2) (0,1) 
[DBG]    Agent 122 (global paths from T=19 to 21) has local path: (1,2) (1,1) (0,1) 
[DBG]  Checking input data for SAT solver:
[DBG]    - Number of agents to replan: 5
[DBG]  Agent 20 has the original local path length: 5 => Start (2,3), Goal (4,2)
[DBG]  Agent 23 has the original local path length: 3 => Start (2,2), Goal (0,2)
[DBG]  Agent 103 has the original local path length: 2 => Start (3,0), Goal (4,0)
[DBG]  Agent 105 has the original local path length: 5 => Start (3,2), Goal (0,1)
[DBG]  Agent 122 has the original local path length: 3 => Start (1,2), Goal (0,1)
[DBG]  Start position: (2, 3), (2, 2), (3, 0), (3, 2), (1, 2), 
[DBG]  Goal position: (4, 2), (0, 2), (4, 0), (0, 1), (0, 1), 
[DBG]  SAT instance and solver created.
Currently solving
Instance name: scen
Map name: map
Encoding used: disappear_at_goal
SAT solver used: Kissat
Optimizing function: sum of costs
Number of agents: 5
Mks LB: 5
SoC LB: 17
Delta: 0
Remaining time: 300000 [ms]

[STAT] Solver returned: -1
[DBG]  SAT solver failed.
[STAT] SAT solver failed to find a valid solution.
[DBG]  ====================
[DBG]  SAT destroy operator called.
[DBG]  SAT heuristic: 2
[DBG]  key_agent_id: 23
[DBG]  key_agent_id global path length: 51
[DBG]  Submap content (global positions):
[DBG]  675 676 677 678 679 
[DBG]  707 708 709 710 711 
[DBG]  739 740 741 742 743 
[DBG]  771 772 773 774 775 
[DBG]  803 804 805 806 807 
[DBG]  Map content with agents and obstacles:
[DBG]  A . . A X 
[DBG]  . X . . X 
[DBG]  A . A . X 
[DBG]  . . . . A 
[DBG]  . . . . A 
[DBG]  content of the map structure that we pass to the SAT solver:
[DBG]  1  1  1  1  -1  
[DBG]  1  -1  1  1  -1  
[DBG]  1  1  1  1  -1  
[DBG]  1  1  1  1  1  
[DBG]  1  1  1  1  1  
[DBG]  Identifying agents in a submap for rescheduling (when key_agent is there at the time 9):
[DBG]  Agent 13 found intervals in the sub-map:
[DBG]   [4..10]
[DBG]  Agent 13 (interval in submap: [4..10]) contains time 9, added to replan.
[DBG]  Agent 18 found intervals in the sub-map:
[DBG]   [8..12]
[DBG]  Agent 18 (interval in submap: [8..12]) contains time 9, added to replan.
[DBG]  Agent 23 found intervals in the sub-map:
[DBG]   [6..11]
[DBG]  Agent 23 (interval in submap: [6..11]) contains time 9, added to replan.
[DBG]  Agent 32 found intervals in the sub-map:
[DBG]   [5..9]
[DBG]  Agent 32 (interval in submap: [5..9]) contains time 9, added to replan.
[DBG]  Agent 67 found intervals in the sub-map:
[DBG]   [0..7]
[DBG]  Agent 67 is not in sub-map at time 9 (intervals: 
[DBG]  [0..7] )
[DBG]  Agent 98 found intervals in the sub-map:
[DBG]   [7..15]
[DBG]  Agent 98 (interval in submap: [7..15]) contains time 9, added to replan.
[DBG]  Agent 140 found intervals in the sub-map:
[DBG]   [5..9]
[DBG]  Agent 140 (interval in submap: [5..9]) contains time 9, added to replan.
[DBG]  Agent 13 | Start (global): 678 -> (local): (0, 3) at time 9 | Goal (global): 678 -> (local): (0, 3) at time 10
[DBG]  Agent 18 | Start (global): 675 -> (local): (0, 0) at time 9 | Goal (global): 771 -> (local): (3, 0) at time 12
[DBG]  Agent 23 | Start (global): 741 -> (local): (2, 2) at time 9 | Goal (global): 677 -> (local): (0, 2) at time 11
[DBG]  Agent 32 | Start (global): 807 -> (local): (4, 4) at time 9 | Goal (global): 807 -> (local): (4, 4) at time 9
[DBG]  Agent 98 | Start (global): 739 -> (local): (2, 0) at time 9 | Goal (global): 678 -> (local): (0, 3) at time 15
[DBG]  Agent 140 | Start (global): 775 -> (local): (3, 4) at time 9 | Goal (global): 775 -> (local): (3, 4) at time 9
[DBG]  [REPAIR] SAT destroy operator called.
[DBG]  [REPAIR] SAT operator â€“ launching subproblem FOR OPTIMIZATION.
[DBG]  Creating local paths (sx, sy) in the submap for T_sync = 9
[DBG]    Agent 13 (global paths from T=9 to 10) has local path: (0,3) (0,3) 
[DBG]    Agent 18 (global paths from T=9 to 12) has local path: (0,0) (1,0) (2,0) (3,0) 
[DBG]    Agent 23 (global paths from T=9 to 11) has local path: (2,2) (1,2) (0,2) 
[DBG]    Agent 32 (global paths from T=9 to 9) has local path: (4,4) 
[DBG]    Agent 98 (global paths from T=9 to 15) has local path: (2,0) (2,1) (2,2) (2,2) (2,3) (1,3) (0,3) 
[DBG]    Agent 140 (global paths from T=9 to 9) has local path: (3,4) 
[DBG]  Checking input data for SAT solver:
[DBG]    - Number of agents to replan: 6
[DBG]  Agent 13 has the original local path length: 2 => Start (0,3), Goal (0,3)
[DBG]  Agent 18 has the original local path length: 4 => Start (0,0), Goal (3,0)
[DBG]  Agent 23 has the original local path length: 3 => Start (2,2), Goal (0,2)
[DBG]  Agent 32 has the original local path length: 1 => Start (4,4), Goal (4,4)
[DBG]  Agent 98 has the original local path length: 7 => Start (2,0), Goal (0,3)
[DBG]  Agent 140 has the original local path length: 1 => Start (3,4), Goal (3,4)
[DBG]  Start position: (0, 3), (0, 0), (2, 2), (4, 4), (2, 0), (3, 4), 
[DBG]  Goal position: (0, 3), (3, 0), (0, 2), (4, 4), (0, 3), (3, 4), 
[DBG]  SAT instance and solver created.
Currently solving
Instance name: scen
Map name: map
Encoding used: disappear_at_goal
SAT solver used: Kissat
Optimizing function: sum of costs
Number of agents: 6
Mks LB: 6
SoC LB: 16
Delta: 0
Remaining time: 300000 [ms]

Vertex conflict! Agents 0, 1, timestep 4, location 0
Swapping conflict! Agents 0, 1, timestep 4, edge (0,0)
Vertex conflict! Agents 0, 1, timestep 5, location 0
Vertex conflict! Agents 0, 2, timestep 3, location 0
Swapping conflict! Agents 0, 2, timestep 3, edge (0,0)
Vertex conflict! Agents 0, 2, timestep 4, location 0
Swapping conflict! Agents 0, 2, timestep 4, edge (0,0)
Vertex conflict! Agents 0, 2, timestep 5, location 0
Vertex conflict! Agents 0, 3, timestep 1, location 0
Swapping conflict! Agents 0, 3, timestep 1, edge (0,0)
Vertex conflict! Agents 0, 3, timestep 2, location 0
Swapping conflict! Agents 0, 3, timestep 2, edge (0,0)
Vertex conflict! Agents 0, 3, timestep 3, location 0
Swapping conflict! Agents 0, 3, timestep 3, edge (0,0)
Vertex conflict! Agents 0, 3, timestep 4, location 0
Swapping conflict! Agents 0, 3, timestep 4, edge (0,0)
Vertex conflict! Agents 0, 3, timestep 5, location 0
Vertex conflict! Agents 0, 5, timestep 1, location 0
Swapping conflict! Agents 0, 5, timestep 1, edge (0,0)
Vertex conflict! Agents 0, 5, timestep 2, location 0
Swapping conflict! Agents 0, 5, timestep 2, edge (0,0)
Vertex conflict! Agents 0, 5, timestep 3, location 0
Swapping conflict! Agents 0, 5, timestep 3, edge (0,0)
Vertex conflict! Agents 0, 5, timestep 4, location 0
Swapping conflict! Agents 0, 5, timestep 4, edge (0,0)
Vertex conflict! Agents 0, 5, timestep 5, location 0
Vertex conflict! Agents 1, 2, timestep 4, location 0
Swapping conflict! Agents 1, 2, timestep 4, edge (0,0)
Vertex conflict! Agents 1, 2, timestep 5, location 0
Vertex conflict! Agents 1, 3, timestep 4, location 0
Swapping conflict! Agents 1, 3, timestep 4, edge (0,0)
Vertex conflict! Agents 1, 3, timestep 5, location 0
Vertex conflict! Agents 1, 5, timestep 4, location 0
Swapping conflict! Agents 1, 5, timestep 4, edge (0,0)
Vertex conflict! Agents 1, 5, timestep 5, location 0
Vertex conflict! Agents 2, 3, timestep 3, location 0
Swapping conflict! Agents 2, 3, timestep 3, edge (0,0)
Vertex conflict! Agents 2, 3, timestep 4, location 0
Swapping conflict! Agents 2, 3, timestep 4, edge (0,0)
Vertex conflict! Agents 2, 3, timestep 5, location 0
Vertex conflict! Agents 2, 5, timestep 3, location 0
Swapping conflict! Agents 2, 5, timestep 3, edge (0,0)
Vertex conflict! Agents 2, 5, timestep 4, location 0
Swapping conflict! Agents 2, 5, timestep 4, edge (0,0)
Vertex conflict! Agents 2, 5, timestep 5, location 0
Vertex conflict! Agents 3, 5, timestep 1, location 0
Swapping conflict! Agents 3, 5, timestep 1, edge (0,0)
Vertex conflict! Agents 3, 5, timestep 2, location 0
Swapping conflict! Agents 3, 5, timestep 2, edge (0,0)
Vertex conflict! Agents 3, 5, timestep 3, location 0
Swapping conflict! Agents 3, 5, timestep 3, edge (0,0)
Vertex conflict! Agents 3, 5, timestep 4, location 0
Swapping conflict! Agents 3, 5, timestep 4, edge (0,0)
Vertex conflict! Agents 3, 5, timestep 5, location 0
Found plan [agents = 6] [timesteps = 6]
Agent #0 : 3 0 0 0 0 0 
Agent #1 : 0 4 7 11 0 0 
Agent #2 : 9 5 2 0 0 0 
Agent #3 : 20 0 0 0 0 0 
Agent #4 : 7 8 9 10 6 3 
Agent #5 : 15 0 0 0 0 0 

[STAT] Solver returned: 0
[DBG]  Agent (index) 13 | New local path (submap idx):
[DBG]  3 
[DBG]  Agent (index) 18 | New local path (submap idx):
[DBG]  0 4 7 11 
[DBG]  Agent (index) 23 | New local path (submap idx):
[DBG]  9 5 2 
[DBG]  Agent (index) 32 | New local path (submap idx):
[DBG]  20 
[DBG]  Agent (index) 98 | New local path (submap idx):
[DBG]  7 8 9 10 6 3 
[DBG]  Agent (index) 140 | New local path (submap idx):
[DBG]  15 
[DBG]  Update the agent path 13 | Original local length: 2 | New local length: 1
[DBG]  agent 13 t=0 => decoded (sx,sy)=(0,3) => global_id=678
[DBG]  Complete path of agent 13:
[DBG]    Original: 867 868 836 837 805 773 741 742 710 678 678 646 647 615 583 551 519 487 455 423 391 359 360 328 329 330 298 299 300 268 236 237 205 206 207 208 176 177 178 179 147 115 116 117 85 86 54 55 56 24 
[DBG]    New:     867 868 836 837 805 773 741 742 710 678 646 647 615 583 551 519 487 455 423 391 359 360 328 329 330 298 299 300 268 236 237 205 206 207 208 176 177 178 179 147 115 116 117 85 86 54 55 56 24 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 867 868 836 837 805 773 741 742 710 
[DBG]    Local path (in submap): 678 646 
[DBG]    Suffix (out of submap): 647 615 583 551 519 487 455 423 391 359 360 328 329 330 298 299 300 268 236 237 205 206 207 208 176 177 178 179 147 115 116 117 85 86 54 55 56 24 
[DBG]  Original agent path length 13 je: 50
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 0: 867, 868, 836, 837, 805, 773, 741, 742, 710, 678, 646, 647, 615, 583, 551, 519, 487, 455, 423, 391, 359, 360, 328, 329, 330, 298, 299, 300, 268, 236, 237, 205, 206, 207, 208, 176, 177, 178, 179, 147, 115, 116, 117, 85, 86, 54, 55, 56, 24, 
[DBG]  Path for agent 13 updated, resulting length: 49
[DBG]  Update the agent path 18 | Original local length: 4 | New local length: 4
[DBG]  agent 18 t=0 => decoded (sx,sy)=(0,0) => global_id=675
[DBG]  agent 18 t=1 => decoded (sx,sy)=(1,0) => global_id=707
[DBG]  agent 18 t=2 => decoded (sx,sy)=(2,0) => global_id=739
[DBG]  agent 18 t=3 => decoded (sx,sy)=(3,0) => global_id=771
[DBG]  Complete path of agent 18:
[DBG]    Original: 486 485 517 516 548 580 612 644 676 675 707 739 771 
[DBG]    New:     486 485 517 516 548 580 612 644 676 675 707 739 771 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 486 485 517 516 548 580 612 644 676 
[DBG]    Local path (in submap): 675 707 739 771 
[DBG]    Suffix (out of submap): 
[DBG]  Original agent path length 18 je: 13
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 1: 486, 485, 517, 516, 548, 580, 612, 644, 676, 675, 707, 739, 771, 
[DBG]  Path for agent 18 updated, resulting length: 13
[DBG]  Update the agent path 23 | Original local length: 3 | New local length: 3
[DBG]  agent 23 t=0 => decoded (sx,sy)=(2,2) => global_id=741
[DBG]  agent 23 t=1 => decoded (sx,sy)=(1,2) => global_id=709
[DBG]  agent 23 t=2 => decoded (sx,sy)=(0,2) => global_id=677
[DBG]  Complete path of agent 23:
[DBG]    Original: 864 832 800 801 769 770 771 739 740 741 709 677 645 613 581 582 550 550 551 519 487 455 423 391 359 360 361 362 330 331 299 267 268 269 270 271 239 240 241 242 243 244 212 213 214 215 247 248 249 217 218 
[DBG]    New:     864 832 800 801 769 770 771 739 740 741 709 677 645 613 581 582 550 550 551 519 487 455 423 391 359 360 361 362 330 331 299 267 268 269 270 271 239 240 241 242 243 244 212 213 214 215 247 248 249 217 218 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 864 832 800 801 769 770 771 739 740 
[DBG]    Local path (in submap): 741 709 677 
[DBG]    Suffix (out of submap): 645 613 581 582 550 550 551 519 487 455 423 391 359 360 361 362 330 331 299 267 268 269 270 271 239 240 241 242 243 244 212 213 214 215 247 248 249 217 218 
[DBG]  Original agent path length 23 je: 51
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 2: 864, 832, 800, 801, 769, 770, 771, 739, 740, 741, 709, 677, 645, 613, 581, 582, 550, 550, 551, 519, 487, 455, 423, 391, 359, 360, 361, 362, 330, 331, 299, 267, 268, 269, 270, 271, 239, 240, 241, 242, 243, 244, 212, 213, 214, 215, 247, 248, 249, 217, 218, 
[DBG]  Path for agent 23 updated, resulting length: 51
[DBG]  Update the agent path 32 | Original local length: 1 | New local length: 1
[DBG]  agent 32 t=0 => decoded (sx,sy)=(4,4) => global_id=807
[DBG]  Complete path of agent 32:
[DBG]    Original: 868 836 837 838 838 806 806 806 806 807 808 776 744 
[DBG]    New:     868 836 837 838 838 806 806 806 806 807 808 776 744 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 868 836 837 838 838 806 806 806 806 
[DBG]    Local path (in submap): 807 
[DBG]    Suffix (out of submap): 808 776 744 
[DBG]  Original agent path length 32 je: 13
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 3: 868, 836, 837, 838, 838, 806, 806, 806, 806, 807, 808, 776, 744, 
[DBG]  Path for agent 32 updated, resulting length: 13
[DBG]  Update the agent path 98 | Original local length: 7 | New local length: 6
[DBG]  agent 98 t=0 => decoded (sx,sy)=(2,0) => global_id=739
[DBG]  agent 98 t=1 => decoded (sx,sy)=(2,1) => global_id=740
[DBG]  agent 98 t=2 => decoded (sx,sy)=(2,2) => global_id=741
[DBG]  agent 98 t=3 => decoded (sx,sy)=(2,3) => global_id=742
[DBG]  agent 98 t=4 => decoded (sx,sy)=(1,3) => global_id=710
[DBG]  agent 98 t=5 => decoded (sx,sy)=(0,3) => global_id=678
[DBG]  Complete path of agent 98:
[DBG]    Original: 897 865 864 832 800 801 802 803 771 739 740 741 741 742 710 678 646 647 648 649 649 649 650 650 650 682 650 651 619 587 588 589 590 558 
[DBG]    New:     897 865 864 832 800 801 802 803 771 739 740 741 742 710 678 646 647 648 649 649 649 650 650 650 682 650 651 619 587 588 589 590 558 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 897 865 864 832 800 801 802 803 771 
[DBG]    Local path (in submap): 739 740 741 742 710 678 646 
[DBG]    Suffix (out of submap): 647 648 649 649 649 650 650 650 682 650 651 619 587 588 589 590 558 
[DBG]  Original agent path length 98 je: 34
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 4: 897, 865, 864, 832, 800, 801, 802, 803, 771, 739, 740, 741, 742, 710, 678, 646, 647, 648, 649, 649, 649, 650, 650, 650, 682, 650, 651, 619, 587, 588, 589, 590, 558, 
[DBG]  Path for agent 98 updated, resulting length: 33
[DBG]  Update the agent path 140 | Original local length: 1 | New local length: 1
[DBG]  agent 140 t=0 => decoded (sx,sy)=(3,4) => global_id=775
[DBG]  Complete path of agent 140:
[DBG]    Original: 832 800 768 769 770 771 772 773 774 775 776 744 745 746 714 715 683 684 685 686 687 688 689 657 658 659 627 628 596 597 565 566 534 502 470 438 439 407 408 409 377 378 379 380 348 349 350 351 
[DBG]    New:     832 800 768 769 770 771 772 773 774 775 776 744 745 746 714 715 683 684 685 686 687 688 689 657 658 659 627 628 596 597 565 566 534 502 470 438 439 407 408 409 377 378 379 380 348 349 350 351 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 832 800 768 769 770 771 772 773 774 
[DBG]    Local path (in submap): 775 
[DBG]    Suffix (out of submap): 776 744 745 746 714 715 683 684 685 686 687 688 689 657 658 659 627 628 596 597 565 566 534 502 470 438 439 407 408 409 377 378 379 380 348 349 350 351 
[DBG]  Original agent path length 140 je: 48
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 5: 832, 800, 768, 769, 770, 771, 772, 773, 774, 775, 776, 744, 745, 746, 714, 715, 683, 684, 685, 686, 687, 688, 689, 657, 658, 659, 627, 628, 596, 597, 565, 566, 534, 502, 470, 438, 439, 407, 408, 409, 377, 378, 379, 380, 348, 349, 350, 351, 
[DBG]  Path for agent 140 updated, resulting length: 48
[DBG]  Paths successfully updated.
[DBG]  (LNS.cpp) New path for agent 13: 
[DBG]  867, 868, 836, 837, 805, 773, 741, 742, 710, 678, 646, 647, 615, 583, 551, 519, 487, 455, 423, 391, 359, 360, 328, 329, 330, 298, 299, 300, 268, 236, 237, 205, 206, 207, 208, 176, 177, 178, 179, 147, 115, 116, 117, 85, 86, 54, 55, 56, 24, 
[DBG]  (LNS.cpp) New path for agent 18: 
[DBG]  486, 485, 517, 516, 548, 580, 612, 644, 676, 675, 707, 739, 771, 
[DBG]  (LNS.cpp) New path for agent 23: 
[DBG]  864, 832, 800, 801, 769, 770, 771, 739, 740, 741, 709, 677, 645, 613, 581, 582, 550, 550, 551, 519, 487, 455, 423, 391, 359, 360, 361, 362, 330, 331, 299, 267, 268, 269, 270, 271, 239, 240, 241, 242, 243, 244, 212, 213, 214, 215, 247, 248, 249, 217, 218, 
[DBG]  (LNS.cpp) New path for agent 32: 
[DBG]  868, 836, 837, 838, 838, 806, 806, 806, 806, 807, 808, 776, 744, 
[DBG]  (LNS.cpp) New path for agent 98: 
[DBG]  897, 865, 864, 832, 800, 801, 802, 803, 771, 739, 740, 741, 742, 710, 678, 646, 647, 648, 649, 649, 649, 650, 650, 650, 682, 650, 651, 619, 587, 588, 589, 590, 558, 
[DBG]  (LNS.cpp) New path for agent 140: 
[DBG]  832, 800, 768, 769, 770, 771, 772, 773, 774, 775, 776, 744, 745, 746, 714, 715, 683, 684, 685, 686, 687, 688, 689, 657, 658, 659, 627, 628, 596, 597, 565, 566, 534, 502, 470, 438, 439, 407, 408, 409, 377, 378, 379, 380, 348, 349, 350, 351, 
[DBG]  component_weights = {0.297226, 0.179365, 0.187571, 0.335838}
[DBG]  opSuccess value: 1
[STAT] neighbor.sum_of_costs before recomputation: 201
[STAT] neighbor.old_sum_of_costs before recomputation: 203
[STAT] sum_of_costs before recomputation: 4407
[DBG]  Validate solution immediately after SAT success.
[WARNING] Problem after SAT: Vertex conflict between agents 67 and 13 at location 583 at timestep 13
[DBG]  Attempting immediate repair via init_lns because problem occurred after SAT (should be applied only for conflicts...).
[DBG]  Passing 150 agents to init_lns (skip=true).
[DBG]  path_table contents for selected agents (neighbor.agents):
[DBG]    Agent 13 => controlling path length=49
[DBG]    Agent 18 => controlling path length=13
[DBG]    Agent 23 => controlling path length=51
[DBG]    Agent 32 => controlling path length=13
[DBG]    Agent 98 => controlling path length=33
[DBG]    Agent 140 => controlling path length=48
[DBG]  hodnota skip_initial_solution=1
[DBG]  We skip initialSolution => call buildCollisionData()
[DBG]  buildCollisionData() called â€“ skip_initial_solution case.
[DBG]  Agents.size()=150, collision_graph.size()=150
[DBG]  agent 13 => updateCollidingPairs => foundCollision
[DBG]  agent 19 => updateCollidingPairs => foundCollision
[DBG]  agent 67 => updateCollidingPairs => foundCollision
[DBG]  agent 71 => updateCollidingPairs => foundCollision
[DBG]  agent 87 => updateCollidingPairs => foundCollision
[DBG]  agent 98 => updateCollidingPairs => foundCollision
[DBG]  agent 105 => updateCollidingPairs => foundCollision
[DBG]  agent 125 => updateCollidingPairs => foundCollision
[DBG]  Conflicting agent pairs:
[DBG]  agent 13 is in conflict with agent 67
[DBG]  agent 13 is in conflict with agent 71
[DBG]  agent 19 is in conflict with agent 98
[DBG]  agent 87 is in conflict with agent 98
[DBG]  agent 98 is in conflict with agent 105
[DBG]  agent 98 is in conflict with agent 125
[DBG]  buildCollisionData() => sum_of_costs=4405, num_of_colliding_pairs=6
[DBG]  buildCollisionData done => sum_of_costs=4405, num_of_colliding_pairs=6
[DBG]  sum_of_cost hodnota: 4405
[DBG]  After skip/init build => iteration_stats.back(): sum_of_costs=4405, collisions=6
[DEBUG] Using default neighbor generation strategy for conflicts: 0
[DEBUG] Using default neighbor generation strategy for conflicts: 0
	InitLNS(PP): runtime = 0.00592567, iterations = 3, colliding pairs = 0, initial colliding pairs = 6, solution cost = 4403, initial solution cost = 4405, failed iterations = 0
[DBG]  init_lns->sum_of_costs after init_lns->run: 4403
[DBG]  sum_of_costs after assignment from init_lns->run: 4403
[DBG]  Recomputing sum_of_cost by dividing neighbor.sum_of_costs and neighbor.old_sum_of_costs
[STAT] sum_of_costs after recomputation: 4403
[STAT] Iteration 58
[DBG]  Using SAT operator (destroy+repair SAT).
[DBG]  ====================
[DBG]  SAT destroy operator called.
[DBG]  SAT heuristic: 2
[DBG]  key_agent_id: 117
[DBG]  key_agent_id global path length: 30
[DBG]  Submap content (global positions):
[DBG]  111 112 113 114 115 
[DBG]  143 144 145 146 147 
[DBG]  175 176 177 178 179 
[DBG]  207 208 209 210 211 
[DBG]  239 240 241 242 243 
[DBG]  Map content with agents and obstacles:
[DBG]  . . . X . 
[DBG]  X . X . . 
[DBG]  X A A . . 
[DBG]  . . . . X 
[DBG]  . . A . . 
[DBG]  content of the map structure that we pass to the SAT solver:
[DBG]  1  1  1  -1  1  
[DBG]  -1  1  -1  1  1  
[DBG]  -1  1  1  1  1  
[DBG]  1  1  1  1  -1  
[DBG]  1  1  1  1  1  
[DBG]  Identifying agents in a submap for rescheduling (when key_agent is there at the time 7):
[DBG]  Agent 53 found intervals in the sub-map:
[DBG]   [2..6]
[DBG]  Agent 53 is not in sub-map at time 7 (intervals: 
[DBG]  [2..6] )
[DBG]  Agent 83 found intervals in the sub-map:
[DBG]   [4..10]
[DBG]  Agent 83 (interval in submap: [4..10]) contains time 7, added to replan.
[DBG]  Agent 106 found intervals in the sub-map:
[DBG]  
[DBG]  Agent 106 is not in sub-map at time 7 (intervals: 
[DBG]  )
[DBG]  Agent 112 found intervals in the sub-map:
[DBG]  
[DBG]  Agent 112 is not in sub-map at time 7 (intervals: 
[DBG]  )
[DBG]  Agent 117 found intervals in the sub-map:
[DBG]   [5..11]
[DBG]  Agent 117 (interval in submap: [5..11]) contains time 7, added to replan.
[DBG]  Agent 131 found intervals in the sub-map:
[DBG]   [5..9]
[DBG]  Agent 131 (interval in submap: [5..9]) contains time 7, added to replan.
[DBG]  Agent 83 | Start (global): 176 -> (local): (2, 1) at time 7 | Goal (global): 239 -> (local): (4, 0) at time 10
[DBG]  Agent 117 | Start (global): 177 -> (local): (2, 2) at time 7 | Goal (global): 111 -> (local): (0, 0) at time 11
[DBG]  Agent 131 | Start (global): 241 -> (local): (4, 2) at time 7 | Goal (global): 239 -> (local): (4, 0) at time 9
[DBG]  [REPAIR] SAT destroy operator called.
[DBG]  [REPAIR] SAT operator â€“ launching subproblem FOR OPTIMIZATION.
[DBG]  Creating local paths (sx, sy) in the submap for T_sync = 7
[DBG]    Agent 83 (global paths from T=7 to 10) has local path: (2,1) (3,1) (3,0) (4,0) 
[DBG]    Agent 117 (global paths from T=7 to 11) has local path: (2,2) (2,1) (1,1) (0,1) (0,0) 
[DBG]    Agent 131 (global paths from T=7 to 9) has local path: (4,2) (4,1) (4,0) 
[DBG]  Checking input data for SAT solver:
[DBG]    - Number of agents to replan: 3
[DBG]  Agent 83 has the original local path length: 4 => Start (2,1), Goal (4,0)
[DBG]  Agent 117 has the original local path length: 5 => Start (2,2), Goal (0,0)
[DBG]  Agent 131 has the original local path length: 3 => Start (4,2), Goal (4,0)
[DBG]  Start position: (2, 1), (2, 2), (4, 2), 
[DBG]  Goal position: (4, 0), (0, 0), (4, 0), 
[DBG]  SAT instance and solver created.
Currently solving
Instance name: scen
Map name: map
Encoding used: disappear_at_goal
SAT solver used: Kissat
Optimizing function: sum of costs
Number of agents: 3
Mks LB: 5
SoC LB: 12
Delta: 0
Remaining time: 300000 [ms]

Vertex conflict! Agents 0, 1, timestep 4, location 0
Vertex conflict! Agents 0, 2, timestep 4, location 0
Vertex conflict! Agents 1, 2, timestep 4, location 0
Found plan [agents = 3] [timesteps = 5]
Agent #0 : 7 12 16 15 0 
Agent #1 : 8 7 4 1 0 
Agent #2 : 17 16 15 0 0 

[STAT] Solver returned: 0
[DBG]  Agent (index) 83 | New local path (submap idx):
[DBG]  7 12 16 15 
[DBG]  Agent (index) 117 | New local path (submap idx):
[DBG]  8 7 4 1 0 
[DBG]  Agent (index) 131 | New local path (submap idx):
[DBG]  17 16 15 
[DBG]  Update the agent path 83 | Original local length: 4 | New local length: 4
[DBG]  agent 83 t=0 => decoded (sx,sy)=(2,1) => global_id=176
[DBG]  agent 83 t=1 => decoded (sx,sy)=(3,1) => global_id=208
[DBG]  agent 83 t=2 => decoded (sx,sy)=(4,1) => global_id=240
[DBG]  agent 83 t=3 => decoded (sx,sy)=(4,0) => global_id=239
[DBG]  Complete path of agent 83:
[DBG]    Original: 18 50 49 81 113 112 144 176 208 207 239 271 303 303 335 335 367 366 398 430 462 494 526 558 558 590 591 623 655 687 719 751 783 815 847 848 880 912 944 976 977 1009 
[DBG]    New:     18 50 49 81 113 112 144 176 208 240 239 271 303 303 335 335 367 366 398 430 462 494 526 558 558 590 591 623 655 687 719 751 783 815 847 848 880 912 944 976 977 1009 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 18 50 49 81 113 112 144 
[DBG]    Local path (in submap): 176 208 240 239 
[DBG]    Suffix (out of submap): 271 303 303 335 335 367 366 398 430 462 494 526 558 558 590 591 623 655 687 719 751 783 815 847 848 880 912 944 976 977 1009 
[DBG]  Original agent path length 83 je: 42
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 0: 18, 50, 49, 81, 113, 112, 144, 176, 208, 240, 239, 271, 303, 303, 335, 335, 367, 366, 398, 430, 462, 494, 526, 558, 558, 590, 591, 623, 655, 687, 719, 751, 783, 815, 847, 848, 880, 912, 944, 976, 977, 1009, 
[DBG]  Path for agent 83 updated, resulting length: 42
[DBG]  Update the agent path 117 | Original local length: 5 | New local length: 5
[DBG]  agent 117 t=0 => decoded (sx,sy)=(2,2) => global_id=177
[DBG]  agent 117 t=1 => decoded (sx,sy)=(2,1) => global_id=176
[DBG]  agent 117 t=2 => decoded (sx,sy)=(1,1) => global_id=144
[DBG]  agent 117 t=3 => decoded (sx,sy)=(0,1) => global_id=112
[DBG]  agent 117 t=4 => decoded (sx,sy)=(0,0) => global_id=111
[DBG]  Complete path of agent 117:
[DBG]    Original: 214 213 181 181 180 179 178 177 176 144 112 111 110 109 77 76 75 74 42 41 40 8 7 6 5 4 3 2 1 0 
[DBG]    New:     214 213 181 181 180 179 178 177 176 144 112 111 110 109 77 76 75 74 42 41 40 8 7 6 5 4 3 2 1 0 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 214 213 181 181 180 179 178 
[DBG]    Local path (in submap): 177 176 144 112 111 
[DBG]    Suffix (out of submap): 110 109 77 76 75 74 42 41 40 8 7 6 5 4 3 2 1 0 
[DBG]  Original agent path length 117 je: 30
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 1: 214, 213, 181, 181, 180, 179, 178, 177, 176, 144, 112, 111, 110, 109, 77, 76, 75, 74, 42, 41, 40, 8, 7, 6, 5, 4, 3, 2, 1, 0, 
[DBG]  Path for agent 117 updated, resulting length: 30
[DBG]  Update the agent path 131 | Original local length: 3 | New local length: 3
[DBG]  agent 131 t=0 => decoded (sx,sy)=(4,2) => global_id=241
[DBG]  agent 131 t=1 => decoded (sx,sy)=(4,1) => global_id=240
[DBG]  agent 131 t=2 => decoded (sx,sy)=(4,0) => global_id=239
[DBG]  Complete path of agent 131:
[DBG]    Original: 341 309 277 276 244 243 242 241 240 239 271 303 302 301 300 299 331 363 395 427 426 458 457 489 521 520 519 551 583 615 616 616 616 616 616 648 680 712 
[DBG]    New:     341 309 277 276 244 243 242 241 240 239 271 303 302 301 300 299 331 363 395 427 426 458 457 489 521 520 519 551 583 615 616 616 616 616 616 648 680 712 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 341 309 277 276 244 243 242 
[DBG]    Local path (in submap): 241 240 239 
[DBG]    Suffix (out of submap): 271 303 302 301 300 299 331 363 395 427 426 458 457 489 521 520 519 551 583 615 616 616 616 616 616 648 680 712 
[DBG]  Original agent path length 131 je: 38
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 2: 341, 309, 277, 276, 244, 243, 242, 241, 240, 239, 271, 303, 302, 301, 300, 299, 331, 363, 395, 427, 426, 458, 457, 489, 521, 520, 519, 551, 583, 615, 616, 616, 616, 616, 616, 648, 680, 712, 
[DBG]  Path for agent 131 updated, resulting length: 38
[DBG]  Paths successfully updated.
[DBG]  (LNS.cpp) New path for agent 83: 
[DBG]  18, 50, 49, 81, 113, 112, 144, 176, 208, 240, 239, 271, 303, 303, 335, 335, 367, 366, 398, 430, 462, 494, 526, 558, 558, 590, 591, 623, 655, 687, 719, 751, 783, 815, 847, 848, 880, 912, 944, 976, 977, 1009, 
[DBG]  (LNS.cpp) New path for agent 117: 
[DBG]  214, 213, 181, 181, 180, 179, 178, 177, 176, 144, 112, 111, 110, 109, 77, 76, 75, 74, 42, 41, 40, 8, 7, 6, 5, 4, 3, 2, 1, 0, 
[DBG]  (LNS.cpp) New path for agent 131: 
[DBG]  341, 309, 277, 276, 244, 243, 242, 241, 240, 239, 271, 303, 302, 301, 300, 299, 331, 363, 395, 427, 426, 458, 457, 489, 521, 520, 519, 551, 583, 615, 616, 616, 616, 616, 616, 648, 680, 712, 
[DBG]  component_weights = {0.301463, 0.178284, 0.18644, 0.333813}
[DBG]  opSuccess value: 1
[STAT] neighbor.sum_of_costs before recomputation: 107
[STAT] neighbor.old_sum_of_costs before recomputation: 107
[STAT] sum_of_costs before recomputation: 4403
[DBG]  Validate solution immediately after SAT success.
[DBG]  No problems after SAT replan.
[DBG]  Recomputing sum_of_cost by dividing neighbor.sum_of_costs and neighbor.old_sum_of_costs
[STAT] sum_of_costs after recomputation: 4403
[STAT] Iteration 59
[DBG]  Using SAT operator (destroy+repair SAT).
[DBG]  ====================
[DBG]  SAT destroy operator called.
[DBG]  SAT heuristic: 2
[DBG]  key_agent_id: 12
[DBG]  key_agent_id global path length: 11
[DBG]  Submap content (global positions):
[DBG]  661 662 663 664 665 
[DBG]  693 694 695 696 697 
[DBG]  725 726 727 728 729 
[DBG]  757 758 759 760 761 
[DBG]  789 790 791 792 793 
[DBG]  Map content with agents and obstacles:
[DBG]  A X X . X 
[DBG]  X X X . . 
[DBG]  . . A A A 
[DBG]  . X . X . 
[DBG]  X . X A . 
[DBG]  content of the map structure that we pass to the SAT solver:
[DBG]  1  -1  -1  1  -1  
[DBG]  -1  -1  -1  1  1  
[DBG]  1  1  1  1  1  
[DBG]  1  -1  1  -1  1  
[DBG]  -1  1  -1  1  1  
[DBG]  Identifying agents in a submap for rescheduling (when key_agent is there at the time 1):
[DBG]  Agent 12 found intervals in the sub-map:
[DBG]   [0..3]
[DBG]  Agent 12 (interval in submap: [0..3]) contains time 1, added to replan.
[DBG]  Agent 28 found intervals in the sub-map:
[DBG]   [0..29] [38..40]
[DBG]  Agent 28 (interval in submap: [0..29]) contains time 1, added to replan.
[DBG]  Agent 38 found intervals in the sub-map:
[DBG]   [0..1]
[DBG]  Agent 38 (interval in submap: [0..1]) contains time 1, added to replan.
[DBG]  Agent 47 found intervals in the sub-map:
[DBG]   [1..4]
[DBG]  Agent 47 (interval in submap: [1..4]) contains time 1, added to replan.
[DBG]  Agent 135 found intervals in the sub-map:
[DBG]   [0..5]
[DBG]  Agent 135 (interval in submap: [0..5]) contains time 1, added to replan.
[DBG]  Agent 12 | Start (global): 727 -> (local): (2, 2) at time 1 | Goal (global): 729 -> (local): (2, 4) at time 3
[DBG]  Agent 28 | Start (global): 661 -> (local): (0, 0) at time 1 | Goal (global): 661 -> (local): (0, 0) at time 29
[DBG]  Agent 38 | Start (global): 792 -> (local): (4, 3) at time 1 | Goal (global): 792 -> (local): (4, 3) at time 1
[DBG]  Agent 47 | Start (global): 729 -> (local): (2, 4) at time 1 | Goal (global): 792 -> (local): (4, 3) at time 4
[DBG]  Agent 135 | Start (global): 728 -> (local): (2, 3) at time 1 | Goal (global): 792 -> (local): (4, 3) at time 5
[DBG]  [REPAIR] SAT destroy operator called.
[DBG]  [REPAIR] SAT operator â€“ launching subproblem FOR OPTIMIZATION.
[DBG]  Creating local paths (sx, sy) in the submap for T_sync = 1
[DBG]    Agent 12 (global paths from T=1 to 3) has local path: (2,2) (2,3) (2,4) 
[DBG]    Agent 28 (global paths from T=1 to 29) has local path: (0,0) (0,0) (0,0) (0,0) (0,0) (0,0) (0,0) (0,0) (0,0) (0,0) (0,0) (0,0) (0,0) (0,0) (0,0) (0,0) (0,0) (0,0) (0,0) (0,0) (0,0) (0,0) (0,0) (0,0) (0,0) (0,0) (0,0) (0,0) (0,0) 
[DBG]    Agent 38 (global paths from T=1 to 1) has local path: (4,3) 
[DBG]    Agent 47 (global paths from T=1 to 4) has local path: (2,4) (3,4) (4,4) (4,3) 
[DBG]    Agent 135 (global paths from T=1 to 5) has local path: (2,3) (2,4) (3,4) (4,4) (4,3) 
[DBG]  Checking input data for SAT solver:
[DBG]    - Number of agents to replan: 5
[DBG]  Agent 12 has the original local path length: 3 => Start (2,2), Goal (2,4)
[DBG]  Agent 28 has the original local path length: 29 => Start (0,0), Goal (0,0)
[DBG]  Agent 38 has the original local path length: 1 => Start (4,3), Goal (4,3)
[DBG]  Agent 47 has the original local path length: 4 => Start (2,4), Goal (4,3)
[DBG]  Agent 135 has the original local path length: 5 => Start (2,3), Goal (4,3)
[DBG]  Start position: (2, 2), (0, 0), (4, 3), (2, 4), (2, 3), 
[DBG]  Goal position: (2, 4), (0, 0), (4, 3), (4, 3), (4, 3), 
[DBG]  SAT instance and solver created.
Currently solving
Instance name: scen
Map name: map
Encoding used: disappear_at_goal
SAT solver used: Kissat
Optimizing function: sum of costs
Number of agents: 5
Mks LB: 5
SoC LB: 14
Delta: 0
Remaining time: 300000 [ms]

Vertex conflict! Agents 0, 1, timestep 3, location 0
Swapping conflict! Agents 0, 1, timestep 3, edge (0,0)
Vertex conflict! Agents 0, 1, timestep 4, location 0
Vertex conflict! Agents 0, 2, timestep 3, location 0
Swapping conflict! Agents 0, 2, timestep 3, edge (0,0)
Vertex conflict! Agents 0, 2, timestep 4, location 0
Vertex conflict! Agents 0, 3, timestep 4, location 0
Vertex conflict! Agents 1, 2, timestep 1, location 0
Swapping conflict! Agents 1, 2, timestep 1, edge (0,0)
Vertex conflict! Agents 1, 2, timestep 2, location 0
Swapping conflict! Agents 1, 2, timestep 2, edge (0,0)
Vertex conflict! Agents 1, 2, timestep 3, location 0
Swapping conflict! Agents 1, 2, timestep 3, edge (0,0)
Vertex conflict! Agents 1, 2, timestep 4, location 0
Vertex conflict! Agents 1, 3, timestep 4, location 0
Vertex conflict! Agents 2, 3, timestep 4, location 0
Found plan [agents = 5] [timesteps = 5]
Agent #0 : 6 7 8 0 0 
Agent #1 : 0 0 0 0 0 
Agent #2 : 13 0 0 0 0 
Agent #3 : 8 11 14 13 0 
Agent #4 : 7 8 11 14 13 

[STAT] Solver returned: 0
[DBG]  Agent (index) 12 | New local path (submap idx):
[DBG]  6 7 8 
[DBG]  Agent (index) 28 | New local path (submap idx):
[DBG]  0 
[DBG]  Agent (index) 38 | New local path (submap idx):
[DBG]  13 
[DBG]  Agent (index) 47 | New local path (submap idx):
[DBG]  8 11 14 13 
[DBG]  Agent (index) 135 | New local path (submap idx):
[DBG]  7 8 11 14 13 
[DBG]  Update the agent path 12 | Original local length: 3 | New local length: 3
[DBG]  agent 12 t=0 => decoded (sx,sy)=(2,2) => global_id=727
[DBG]  agent 12 t=1 => decoded (sx,sy)=(2,3) => global_id=728
[DBG]  agent 12 t=2 => decoded (sx,sy)=(2,4) => global_id=729
[DBG]  Complete path of agent 12:
[DBG]    Original: 726 727 728 729 730 731 732 764 765 766 767 
[DBG]    New:     726 727 728 729 730 731 732 764 765 766 767 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 726 
[DBG]    Local path (in submap): 727 728 729 
[DBG]    Suffix (out of submap): 730 731 732 764 765 766 767 
[DBG]  Original agent path length 12 je: 11
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 0: 726, 727, 728, 729, 730, 731, 732, 764, 765, 766, 767, 
[DBG]  Path for agent 12 updated, resulting length: 11
[DBG]  Update the agent path 28 | Original local length: 29 | New local length: 1
[DBG]  agent 28 t=0 => decoded (sx,sy)=(0,0) => global_id=661
[DBG]  Complete path of agent 28:
[DBG]    Original: 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 629 628 627 627 659 691 692 724 725 726 727 
[DBG]    New:     661 661 629 628 627 627 659 691 692 724 725 726 727 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 661 
[DBG]    Local path (in submap): 661 629 628 627 627 659 691 692 724 725 726 727 
[DBG]    Suffix (out of submap): 
[DBG]  Original agent path length 28 je: 41
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 1: 661, 661, 629, 628, 627, 627, 659, 691, 692, 724, 725, 726, 727, 
[DBG]  Path for agent 28 updated, resulting length: 13
[DBG]  Update the agent path 38 | Original local length: 1 | New local length: 1
[DBG]  agent 38 t=0 => decoded (sx,sy)=(4,3) => global_id=792
[DBG]  Complete path of agent 38:
[DBG]    Original: 793 792 824 823 822 821 820 819 818 850 849 848 847 846 845 
[DBG]    New:     793 792 824 823 822 821 820 819 818 850 849 848 847 846 845 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 793 
[DBG]    Local path (in submap): 792 
[DBG]    Suffix (out of submap): 824 823 822 821 820 819 818 850 849 848 847 846 845 
[DBG]  Original agent path length 38 je: 15
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 2: 793, 792, 824, 823, 822, 821, 820, 819, 818, 850, 849, 848, 847, 846, 845, 
[DBG]  Path for agent 38 updated, resulting length: 15
[DBG]  Update the agent path 47 | Original local length: 4 | New local length: 4
[DBG]  agent 47 t=0 => decoded (sx,sy)=(2,4) => global_id=729
[DBG]  agent 47 t=1 => decoded (sx,sy)=(3,4) => global_id=761
[DBG]  agent 47 t=2 => decoded (sx,sy)=(4,4) => global_id=793
[DBG]  agent 47 t=3 => decoded (sx,sy)=(4,3) => global_id=792
[DBG]  Complete path of agent 47:
[DBG]    Original: 730 729 761 793 792 824 823 822 821 820 819 851 850 849 848 847 815 814 813 812 811 810 
[DBG]    New:     730 729 761 793 792 824 823 822 821 820 819 851 850 849 848 847 815 814 813 812 811 810 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 730 
[DBG]    Local path (in submap): 729 761 793 792 
[DBG]    Suffix (out of submap): 824 823 822 821 820 819 851 850 849 848 847 815 814 813 812 811 810 
[DBG]  Original agent path length 47 je: 22
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 3: 730, 729, 761, 793, 792, 824, 823, 822, 821, 820, 819, 851, 850, 849, 848, 847, 815, 814, 813, 812, 811, 810, 
[DBG]  Path for agent 47 updated, resulting length: 22
[DBG]  Update the agent path 135 | Original local length: 5 | New local length: 5
[DBG]  agent 135 t=0 => decoded (sx,sy)=(2,3) => global_id=728
[DBG]  agent 135 t=1 => decoded (sx,sy)=(2,4) => global_id=729
[DBG]  agent 135 t=2 => decoded (sx,sy)=(3,4) => global_id=761
[DBG]  agent 135 t=3 => decoded (sx,sy)=(4,4) => global_id=793
[DBG]  agent 135 t=4 => decoded (sx,sy)=(4,3) => global_id=792
[DBG]  Complete path of agent 135:
[DBG]    Original: 696 728 729 761 793 792 824 823 822 821 820 819 818 817 849 848 847 879 878 877 876 875 874 906 905 904 903 902 870 838 837 805 773 741 740 741 709 677 676 644 645 613 581 580 548 516 484 483 482 450 449 448 416 384 
[DBG]    New:     696 728 729 761 793 792 824 823 822 821 820 819 818 817 849 848 847 879 878 877 876 875 874 906 905 904 903 902 870 838 837 805 773 741 740 741 709 677 676 644 645 613 581 580 548 516 484 483 482 450 449 448 416 384 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 696 
[DBG]    Local path (in submap): 728 729 761 793 792 
[DBG]    Suffix (out of submap): 824 823 822 821 820 819 818 817 849 848 847 879 878 877 876 875 874 906 905 904 903 902 870 838 837 805 773 741 740 741 709 677 676 644 645 613 581 580 548 516 484 483 482 450 449 448 416 384 
[DBG]  Original agent path length 135 je: 54
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 4: 696, 728, 729, 761, 793, 792, 824, 823, 822, 821, 820, 819, 818, 817, 849, 848, 847, 879, 878, 877, 876, 875, 874, 906, 905, 904, 903, 902, 870, 838, 837, 805, 773, 741, 740, 741, 709, 677, 676, 644, 645, 613, 581, 580, 548, 516, 484, 483, 482, 450, 449, 448, 416, 384, 
[DBG]  Path for agent 135 updated, resulting length: 54
[DBG]  Paths successfully updated.
[DBG]  (LNS.cpp) New path for agent 12: 
[DBG]  726, 727, 728, 729, 730, 731, 732, 764, 765, 766, 767, 
[DBG]  (LNS.cpp) New path for agent 28: 
[DBG]  661, 661, 629, 628, 627, 627, 659, 691, 692, 724, 725, 726, 727, 
[DBG]  (LNS.cpp) New path for agent 38: 
[DBG]  793, 792, 824, 823, 822, 821, 820, 819, 818, 850, 849, 848, 847, 846, 845, 
[DBG]  (LNS.cpp) New path for agent 47: 
[DBG]  730, 729, 761, 793, 792, 824, 823, 822, 821, 820, 819, 851, 850, 849, 848, 847, 815, 814, 813, 812, 811, 810, 
[DBG]  (LNS.cpp) New path for agent 135: 
[DBG]  696, 728, 729, 761, 793, 792, 824, 823, 822, 821, 820, 819, 818, 817, 849, 848, 847, 879, 878, 877, 876, 875, 874, 906, 905, 904, 903, 902, 870, 838, 837, 805, 773, 741, 740, 741, 709, 677, 676, 644, 645, 613, 581, 580, 548, 516, 484, 483, 482, 450, 449, 448, 416, 384, 
[DBG]  component_weights = {0.299218, 0.176956, 0.185052, 0.338775}
[DBG]  opSuccess value: 1
[STAT] neighbor.sum_of_costs before recomputation: 110
[STAT] neighbor.old_sum_of_costs before recomputation: 138
[STAT] sum_of_costs before recomputation: 4403
[DBG]  Validate solution immediately after SAT success.
[WARNING] Problem after SAT: Target conflict: agent 1 (len 14) traverses target of agent 28 (len 12) at location 727 at timestep 13
[DBG]  Attempting immediate repair via init_lns because problem occurred after SAT (should be applied only for conflicts...).
[DBG]  Passing 150 agents to init_lns (skip=true).
[DBG]  path_table contents for selected agents (neighbor.agents):
[DBG]    Agent 12 => controlling path length=11
[DBG]    Agent 28 => controlling path length=13
[DBG]    Agent 38 => controlling path length=15
[DBG]    Agent 47 => controlling path length=22
[DBG]    Agent 135 => controlling path length=54
[DBG]  hodnota skip_initial_solution=1
[DBG]  We skip initialSolution => call buildCollisionData()
[DBG]  buildCollisionData() called â€“ skip_initial_solution case.
[DBG]  Agents.size()=150, collision_graph.size()=150
[DBG]  agent 1 => updateCollidingPairs => foundCollision
[DBG]  agent 28 => updateCollidingPairs => foundCollision
[DBG]  agent 42 => updateCollidingPairs => foundCollision
[DBG]  agent 113 => updateCollidingPairs => foundCollision
[DBG]  Conflicting agent pairs:
[DBG]  agent 1 is in conflict with agent 28
[DBG]  agent 28 is in conflict with agent 42
[DBG]  agent 28 is in conflict with agent 113
[DBG]  buildCollisionData() => sum_of_costs=4375, num_of_colliding_pairs=3
[DBG]  buildCollisionData done => sum_of_costs=4375, num_of_colliding_pairs=3
[DBG]  sum_of_cost hodnota: 4375
[DBG]  After skip/init build => iteration_stats.back(): sum_of_costs=4375, collisions=3
[DEBUG] Using default neighbor generation strategy for conflicts: 1
[DEBUG] Using default neighbor generation strategy for conflicts: 0
	InitLNS(PP): runtime = 0.0151647, iterations = 3, colliding pairs = 0, initial colliding pairs = 3, solution cost = 4402, initial solution cost = 4375, failed iterations = 0
[DBG]  init_lns->sum_of_costs after init_lns->run: 4402
[DBG]  sum_of_costs after assignment from init_lns->run: 4402
[DBG]  Recomputing sum_of_cost by dividing neighbor.sum_of_costs and neighbor.old_sum_of_costs
[STAT] sum_of_costs after recomputation: 4402
[STAT] Iteration 60
[DBG]  Using SAT operator (destroy+repair SAT).
[DBG]  ====================
[DBG]  SAT destroy operator called.
[DBG]  SAT heuristic: 2
[DBG]  key_agent_id: 29
[DBG]  key_agent_id global path length: 30
[DBG]  Submap content (global positions):
[DBG]  335 336 337 338 339 
[DBG]  367 368 369 370 371 
[DBG]  399 400 401 402 403 
[DBG]  431 432 433 434 435 
[DBG]  463 464 465 466 467 
[DBG]  Map content with agents and obstacles:
[DBG]  A A A . . 
[DBG]  . . . X . 
[DBG]  X . A . A 
[DBG]  A . . X . 
[DBG]  . . . A A 
[DBG]  content of the map structure that we pass to the SAT solver:
[DBG]  1  1  1  1  1  
[DBG]  1  1  1  -1  1  
[DBG]  -1  1  1  1  1  
[DBG]  1  1  1  -1  1  
[DBG]  1  1  1  1  1  
[DBG]  Identifying agents in a submap for rescheduling (when key_agent is there at the time 20):
[DBG]  Agent 3 found intervals in the sub-map:
[DBG]   [10..11] [18..20]
[DBG]  Agent 3 (interval in submap: [18..20]) contains time 20, added to replan.
[DBG]  Agent 16 found intervals in the sub-map:
[DBG]   [16..22]
[DBG]  Agent 16 (interval in submap: [16..22]) contains time 20, added to replan.
[DBG]  Agent 29 found intervals in the sub-map:
[DBG]   [17..22]
[DBG]  Agent 29 (interval in submap: [17..22]) contains time 20, added to replan.
[DBG]  Agent 43 found intervals in the sub-map:
[DBG]   [13..20]
[DBG]  Agent 43 (interval in submap: [13..20]) contains time 20, added to replan.
[DBG]  Agent 44 found intervals in the sub-map:
[DBG]   [20..24]
[DBG]  Agent 44 (interval in submap: [20..24]) contains time 20, added to replan.
[DBG]  Agent 63 found intervals in the sub-map:
[DBG]   [13..20]
[DBG]  Agent 63 (interval in submap: [13..20]) contains time 20, added to replan.
[DBG]  Agent 66 found intervals in the sub-map:
[DBG]  
[DBG]  Agent 66 is not in sub-map at time 20 (intervals: 
[DBG]  )
[DBG]  Agent 84 found intervals in the sub-map:
[DBG]   [15..21]
[DBG]  Agent 84 (interval in submap: [15..21]) contains time 20, added to replan.
[DBG]  Agent 100 found intervals in the sub-map:
[DBG]   [18..25]
[DBG]  Agent 100 (interval in submap: [18..25]) contains time 20, added to replan.
[DBG]  Agent 115 found intervals in the sub-map:
[DBG]   [29..33]
[DBG]  Agent 115 is not in sub-map at time 20 (intervals: 
[DBG]  [29..33] )
[DBG]  Agent 137 found intervals in the sub-map:
[DBG]   [9..16]
[DBG]  Agent 137 is not in sub-map at time 20 (intervals: 
[DBG]  [9..16] )
[DBG]  Agent 3 | Start (global): 466 -> (local): (4, 3) at time 20 | Goal (global): 466 -> (local): (4, 3) at time 20
[DBG]  Agent 16 | Start (global): 336 -> (local): (0, 1) at time 20 | Goal (global): 338 -> (local): (0, 3) at time 22
[DBG]  Agent 29 | Start (global): 401 -> (local): (2, 2) at time 20 | Goal (global): 403 -> (local): (2, 4) at time 22
[DBG]  Agent 43 | Start (global): 431 -> (local): (3, 0) at time 20 | Goal (global): 431 -> (local): (3, 0) at time 20
[DBG]  Agent 44 | Start (global): 403 -> (local): (2, 4) at time 20 | Goal (global): 466 -> (local): (4, 3) at time 24
[DBG]  Agent 63 | Start (global): 335 -> (local): (0, 0) at time 20 | Goal (global): 335 -> (local): (0, 0) at time 20
[DBG]  Agent 84 | Start (global): 337 -> (local): (0, 2) at time 20 | Goal (global): 338 -> (local): (0, 3) at time 21
[DBG]  Agent 100 | Start (global): 467 -> (local): (4, 4) at time 20 | Goal (global): 463 -> (local): (4, 0) at time 25
[DBG]  [REPAIR] SAT destroy operator called.
[DBG]  [REPAIR] SAT operator â€“ launching subproblem FOR OPTIMIZATION.
[DBG]  Creating local paths (sx, sy) in the submap for T_sync = 20
[DBG]    Agent 3 (global paths from T=20 to 20) has local path: (4,3) 
[DBG]    Agent 16 (global paths from T=20 to 22) has local path: (0,1) (0,2) (0,3) 
[DBG]    Agent 29 (global paths from T=20 to 22) has local path: (2,2) (2,3) (2,4) 
[DBG]    Agent 43 (global paths from T=20 to 20) has local path: (3,0) 
[DBG]    Agent 44 (global paths from T=20 to 24) has local path: (2,4) (3,4) (3,4) (4,4) (4,3) 
[DBG]    Agent 63 (global paths from T=20 to 20) has local path: (0,0) 
[DBG]    Agent 84 (global paths from T=20 to 21) has local path: (0,2) (0,3) 
[DBG]    Agent 100 (global paths from T=20 to 25) has local path: (4,4) (4,3) (4,2) (4,2) (4,1) (4,0) 
[DBG]  Checking input data for SAT solver:
[DBG]    - Number of agents to replan: 8
[DBG]  Agent 3 has the original local path length: 1 => Start (4,3), Goal (4,3)
[DBG]  Agent 16 has the original local path length: 3 => Start (0,1), Goal (0,3)
[DBG]  Agent 29 has the original local path length: 3 => Start (2,2), Goal (2,4)
[DBG]  Agent 43 has the original local path length: 1 => Start (3,0), Goal (3,0)
[DBG]  Agent 44 has the original local path length: 5 => Start (2,4), Goal (4,3)
[DBG]  Agent 63 has the original local path length: 1 => Start (0,0), Goal (0,0)
[DBG]  Agent 84 has the original local path length: 2 => Start (0,2), Goal (0,3)
[DBG]  Agent 100 has the original local path length: 6 => Start (4,4), Goal (4,0)
[DBG]  Start position: (4, 3), (0, 1), (2, 2), (3, 0), (2, 4), (0, 0), (0, 2), (4, 4), 
[DBG]  Goal position: (4, 3), (0, 3), (2, 4), (3, 0), (4, 3), (0, 0), (0, 3), (4, 0), 
[DBG]  SAT instance and solver created.
Currently solving
Instance name: scen
Map name: map
Encoding used: disappear_at_goal
SAT solver used: Kissat
Optimizing function: sum of costs
Number of agents: 8
Mks LB: 5
SoC LB: 20
Delta: 0
Remaining time: 300000 [ms]

Vertex conflict! Agents 0, 1, timestep 3, location 0
Swapping conflict! Agents 0, 1, timestep 3, edge (0,0)
Vertex conflict! Agents 0, 1, timestep 4, location 0
Vertex conflict! Agents 0, 2, timestep 3, location 0
Swapping conflict! Agents 0, 2, timestep 3, edge (0,0)
Vertex conflict! Agents 0, 2, timestep 4, location 0
Vertex conflict! Agents 0, 3, timestep 1, location 0
Swapping conflict! Agents 0, 3, timestep 1, edge (0,0)
Vertex conflict! Agents 0, 3, timestep 2, location 0
Swapping conflict! Agents 0, 3, timestep 2, edge (0,0)
Vertex conflict! Agents 0, 3, timestep 3, location 0
Swapping conflict! Agents 0, 3, timestep 3, edge (0,0)
Vertex conflict! Agents 0, 3, timestep 4, location 0
Vertex conflict! Agents 0, 4, timestep 4, location 0
Vertex conflict! Agents 0, 5, timestep 1, location 0
Swapping conflict! Agents 0, 5, timestep 1, edge (0,0)
Vertex conflict! Agents 0, 5, timestep 2, location 0
Swapping conflict! Agents 0, 5, timestep 2, edge (0,0)
Vertex conflict! Agents 0, 5, timestep 3, location 0
Swapping conflict! Agents 0, 5, timestep 3, edge (0,0)
Vertex conflict! Agents 0, 5, timestep 4, location 0
Vertex conflict! Agents 0, 6, timestep 2, location 0
Swapping conflict! Agents 0, 6, timestep 2, edge (0,0)
Vertex conflict! Agents 0, 6, timestep 3, location 0
Swapping conflict! Agents 0, 6, timestep 3, edge (0,0)
Vertex conflict! Agents 0, 6, timestep 4, location 0
Vertex conflict! Agents 1, 2, timestep 3, location 0
Swapping conflict! Agents 1, 2, timestep 3, edge (0,0)
Vertex conflict! Agents 1, 2, timestep 4, location 0
Vertex conflict! Agents 1, 3, timestep 3, location 0
Swapping conflict! Agents 1, 3, timestep 3, edge (0,0)
Vertex conflict! Agents 1, 3, timestep 4, location 0
Vertex conflict! Agents 1, 4, timestep 4, location 0
Vertex conflict! Agents 1, 5, timestep 3, location 0
Swapping conflict! Agents 1, 5, timestep 3, edge (0,0)
Vertex conflict! Agents 1, 5, timestep 4, location 0
Vertex conflict! Agents 1, 6, timestep 3, location 0
Swapping conflict! Agents 1, 6, timestep 3, edge (0,0)
Vertex conflict! Agents 1, 6, timestep 4, location 0
Vertex conflict! Agents 2, 3, timestep 3, location 0
Swapping conflict! Agents 2, 3, timestep 3, edge (0,0)
Vertex conflict! Agents 2, 3, timestep 4, location 0
Vertex conflict! Agents 2, 4, timestep 4, location 0
Vertex conflict! Agents 2, 5, timestep 3, location 0
Swapping conflict! Agents 2, 5, timestep 3, edge (0,0)
Vertex conflict! Agents 2, 5, timestep 4, location 0
Vertex conflict! Agents 2, 6, timestep 3, location 0
Swapping conflict! Agents 2, 6, timestep 3, edge (0,0)
Vertex conflict! Agents 2, 6, timestep 4, location 0
Vertex conflict! Agents 3, 4, timestep 4, location 0
Vertex conflict! Agents 3, 5, timestep 1, location 0
Swapping conflict! Agents 3, 5, timestep 1, edge (0,0)
Vertex conflict! Agents 3, 5, timestep 2, location 0
Swapping conflict! Agents 3, 5, timestep 2, edge (0,0)
Vertex conflict! Agents 3, 5, timestep 3, location 0
Swapping conflict! Agents 3, 5, timestep 3, edge (0,0)
Vertex conflict! Agents 3, 5, timestep 4, location 0
Vertex conflict! Agents 3, 6, timestep 2, location 0
Swapping conflict! Agents 3, 6, timestep 2, edge (0,0)
Vertex conflict! Agents 3, 6, timestep 3, location 0
Swapping conflict! Agents 3, 6, timestep 3, edge (0,0)
Vertex conflict! Agents 3, 6, timestep 4, location 0
Vertex conflict! Agents 4, 5, timestep 4, location 0
Vertex conflict! Agents 4, 6, timestep 4, location 0
Vertex conflict! Agents 5, 6, timestep 2, location 0
Swapping conflict! Agents 5, 6, timestep 2, edge (0,0)
Vertex conflict! Agents 5, 6, timestep 3, location 0
Swapping conflict! Agents 5, 6, timestep 3, edge (0,0)
Vertex conflict! Agents 5, 6, timestep 4, location 0
Found plan [agents = 8] [timesteps = 5]
Agent #0 : 20 0 0 0 0 
Agent #1 : 1 2 3 0 0 
Agent #2 : 10 11 12 0 0 
Agent #3 : 13 0 0 0 0 
Agent #4 : 12 16 21 20 0 
Agent #5 : 0 0 0 0 0 
Agent #6 : 2 3 0 0 0 
Agent #7 : 21 20 19 18 17 

[STAT] Solver returned: 0
[DBG]  Agent (index) 3 | New local path (submap idx):
[DBG]  20 
[DBG]  Agent (index) 16 | New local path (submap idx):
[DBG]  1 2 3 
[DBG]  Agent (index) 29 | New local path (submap idx):
[DBG]  10 11 12 
[DBG]  Agent (index) 43 | New local path (submap idx):
[DBG]  13 
[DBG]  Agent (index) 44 | New local path (submap idx):
[DBG]  12 16 21 20 
[DBG]  Agent (index) 63 | New local path (submap idx):
[DBG]  0 
[DBG]  Agent (index) 84 | New local path (submap idx):
[DBG]  2 3 
[DBG]  Agent (index) 100 | New local path (submap idx):
[DBG]  21 20 19 18 17 
[DBG]  Update the agent path 3 | Original local length: 1 | New local length: 1
[DBG]  agent 3 t=0 => decoded (sx,sy)=(4,3) => global_id=466
[DBG]  Complete path of agent 3:
[DBG]    Original: 468 468 468 468 468 469 470 470 469 468 467 466 498 498 499 531 499 498 466 466 466 498 530 529 561 593 625 657 689 688 687 719 751 783 815 847 879 880 912 913 912 
[DBG]    New:     468 468 468 468 468 469 470 470 469 468 467 466 498 498 499 531 499 498 466 466 466 498 530 529 561 593 625 657 689 688 687 719 751 783 815 847 879 880 912 913 912 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 468 468 468 468 468 469 470 470 469 468 467 466 498 498 499 531 499 498 466 466 
[DBG]    Local path (in submap): 466 
[DBG]    Suffix (out of submap): 498 530 529 561 593 625 657 689 688 687 719 751 783 815 847 879 880 912 913 912 
[DBG]  Original agent path length 3 je: 41
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 0: 468, 468, 468, 468, 468, 469, 470, 470, 469, 468, 467, 466, 498, 498, 499, 531, 499, 498, 466, 466, 466, 498, 530, 529, 561, 593, 625, 657, 689, 688, 687, 719, 751, 783, 815, 847, 879, 880, 912, 913, 912, 
[DBG]  Path for agent 3 updated, resulting length: 41
[DBG]  Update the agent path 16 | Original local length: 3 | New local length: 3
[DBG]  agent 16 t=0 => decoded (sx,sy)=(0,1) => global_id=336
[DBG]  agent 16 t=1 => decoded (sx,sy)=(0,2) => global_id=337
[DBG]  agent 16 t=2 => decoded (sx,sy)=(0,3) => global_id=338
[DBG]  Complete path of agent 16:
[DBG]    Original: 454 454 454 454 454 454 454 422 423 424 425 426 427 428 429 430 431 432 400 368 336 337 338 306 274 
[DBG]    New:     454 454 454 454 454 454 454 422 423 424 425 426 427 428 429 430 431 432 400 368 336 337 338 306 274 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 454 454 454 454 454 454 454 422 423 424 425 426 427 428 429 430 431 432 400 368 
[DBG]    Local path (in submap): 336 337 338 
[DBG]    Suffix (out of submap): 306 274 
[DBG]  Original agent path length 16 je: 25
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 1: 454, 454, 454, 454, 454, 454, 454, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 400, 368, 336, 337, 338, 306, 274, 
[DBG]  Path for agent 16 updated, resulting length: 25
[DBG]  Update the agent path 29 | Original local length: 3 | New local length: 3
[DBG]  agent 29 t=0 => decoded (sx,sy)=(2,2) => global_id=401
[DBG]  agent 29 t=1 => decoded (sx,sy)=(2,3) => global_id=402
[DBG]  agent 29 t=2 => decoded (sx,sy)=(2,4) => global_id=403
[DBG]  Complete path of agent 29:
[DBG]    Original: 579 580 581 549 517 485 486 487 455 423 424 425 426 427 428 429 430 431 432 433 401 402 403 404 405 373 341 309 310 311 
[DBG]    New:     579 580 581 549 517 485 486 487 455 423 424 425 426 427 428 429 430 431 432 433 401 402 403 404 405 373 341 309 310 311 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 579 580 581 549 517 485 486 487 455 423 424 425 426 427 428 429 430 431 432 433 
[DBG]    Local path (in submap): 401 402 403 
[DBG]    Suffix (out of submap): 404 405 373 341 309 310 311 
[DBG]  Original agent path length 29 je: 30
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 2: 579, 580, 581, 549, 517, 485, 486, 487, 455, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 401, 402, 403, 404, 405, 373, 341, 309, 310, 311, 
[DBG]  Path for agent 29 updated, resulting length: 30
[DBG]  Update the agent path 43 | Original local length: 1 | New local length: 1
[DBG]  agent 43 t=0 => decoded (sx,sy)=(3,0) => global_id=431
[DBG]  Complete path of agent 43:
[DBG]    Original: 414 413 412 380 379 378 377 409 408 407 406 405 404 403 435 467 466 465 464 463 431 430 430 462 494 526 525 524 523 522 521 520 519 551 550 549 581 613 645 677 676 675 707 
[DBG]    New:     414 413 412 380 379 378 377 409 408 407 406 405 404 403 435 467 466 465 464 463 431 430 430 462 494 526 525 524 523 522 521 520 519 551 550 549 581 613 645 677 676 675 707 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 414 413 412 380 379 378 377 409 408 407 406 405 404 403 435 467 466 465 464 463 
[DBG]    Local path (in submap): 431 
[DBG]    Suffix (out of submap): 430 430 462 494 526 525 524 523 522 521 520 519 551 550 549 581 613 645 677 676 675 707 
[DBG]  Original agent path length 43 je: 43
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 3: 414, 413, 412, 380, 379, 378, 377, 409, 408, 407, 406, 405, 404, 403, 435, 467, 466, 465, 464, 463, 431, 430, 430, 462, 494, 526, 525, 524, 523, 522, 521, 520, 519, 551, 550, 549, 581, 613, 645, 677, 676, 675, 707, 
[DBG]  Path for agent 43 updated, resulting length: 43
[DBG]  Update the agent path 44 | Original local length: 5 | New local length: 4
[DBG]  agent 44 t=0 => decoded (sx,sy)=(2,4) => global_id=403
[DBG]  agent 44 t=1 => decoded (sx,sy)=(3,4) => global_id=435
[DBG]  agent 44 t=2 => decoded (sx,sy)=(4,4) => global_id=467
[DBG]  agent 44 t=3 => decoded (sx,sy)=(4,3) => global_id=466
[DBG]  Complete path of agent 44:
[DBG]    Original: 156 124 123 122 154 153 185 184 216 248 247 279 311 310 310 309 341 373 405 404 403 435 435 467 466 498 530 529 561 593 592 591 623 655 687 719 751 783 815 847 848 
[DBG]    New:     156 124 123 122 154 153 185 184 216 248 247 279 311 310 310 309 341 373 405 404 403 435 467 466 498 530 529 561 593 592 591 623 655 687 719 751 783 815 847 848 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 156 124 123 122 154 153 185 184 216 248 247 279 311 310 310 309 341 373 405 404 
[DBG]    Local path (in submap): 403 435 467 466 498 
[DBG]    Suffix (out of submap): 530 529 561 593 592 591 623 655 687 719 751 783 815 847 848 
[DBG]  Original agent path length 44 je: 41
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 4: 156, 124, 123, 122, 154, 153, 185, 184, 216, 248, 247, 279, 311, 310, 310, 309, 341, 373, 405, 404, 403, 435, 467, 466, 498, 530, 529, 561, 593, 592, 591, 623, 655, 687, 719, 751, 783, 815, 847, 848, 
[DBG]  Path for agent 44 updated, resulting length: 40
[DBG]  Update the agent path 63 | Original local length: 1 | New local length: 1
[DBG]  agent 63 t=0 => decoded (sx,sy)=(0,0) => global_id=335
[DBG]  Complete path of agent 63:
[DBG]    Original: 689 721 720 719 687 655 623 591 592 560 528 528 496 464 432 400 368 367 367 367 335 303 302 
[DBG]    New:     689 721 720 719 687 655 623 591 592 560 528 528 496 464 432 400 368 367 367 367 335 303 302 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 689 721 720 719 687 655 623 591 592 560 528 528 496 464 432 400 368 367 367 367 
[DBG]    Local path (in submap): 335 
[DBG]    Suffix (out of submap): 303 302 
[DBG]  Original agent path length 63 je: 23
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 5: 689, 721, 720, 719, 687, 655, 623, 591, 592, 560, 528, 528, 496, 464, 432, 400, 368, 367, 367, 367, 335, 303, 302, 
[DBG]  Path for agent 63 updated, resulting length: 23
[DBG]  Update the agent path 84 | Original local length: 2 | New local length: 2
[DBG]  agent 84 t=0 => decoded (sx,sy)=(0,2) => global_id=337
[DBG]  agent 84 t=1 => decoded (sx,sy)=(0,3) => global_id=338
[DBG]  Complete path of agent 84:
[DBG]    Original: 878 879 847 815 783 751 719 687 655 623 591 592 560 528 496 464 432 400 368 336 337 338 306 274 242 243 244 212 180 181 149 150 118 86 54 55 56 24 25 
[DBG]    New:     878 879 847 815 783 751 719 687 655 623 591 592 560 528 496 464 432 400 368 336 337 338 306 274 242 243 244 212 180 181 149 150 118 86 54 55 56 24 25 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 878 879 847 815 783 751 719 687 655 623 591 592 560 528 496 464 432 400 368 336 
[DBG]    Local path (in submap): 337 338 
[DBG]    Suffix (out of submap): 306 274 242 243 244 212 180 181 149 150 118 86 54 55 56 24 25 
[DBG]  Original agent path length 84 je: 39
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 6: 878, 879, 847, 815, 783, 751, 719, 687, 655, 623, 591, 592, 560, 528, 496, 464, 432, 400, 368, 336, 337, 338, 306, 274, 242, 243, 244, 212, 180, 181, 149, 150, 118, 86, 54, 55, 56, 24, 25, 
[DBG]  Path for agent 84 updated, resulting length: 39
[DBG]  Update the agent path 100 | Original local length: 6 | New local length: 5
[DBG]  agent 100 t=0 => decoded (sx,sy)=(4,4) => global_id=467
[DBG]  agent 100 t=1 => decoded (sx,sy)=(4,3) => global_id=466
[DBG]  agent 100 t=2 => decoded (sx,sy)=(4,2) => global_id=465
[DBG]  agent 100 t=3 => decoded (sx,sy)=(4,1) => global_id=464
[DBG]  agent 100 t=4 => decoded (sx,sy)=(4,0) => global_id=463
[DBG]  Complete path of agent 100:
[DBG]    Original: 287 286 285 317 349 381 380 379 378 377 376 375 407 406 406 405 404 404 403 435 467 466 465 465 464 463 462 494 526 525 524 556 588 589 590 622 654 686 718 750 751 783 815 847 846 878 877 909 941 973 1005 1004 1003 
[DBG]    New:     287 286 285 317 349 381 380 379 378 377 376 375 407 406 406 405 404 404 403 435 467 466 465 464 463 462 494 526 525 524 556 588 589 590 622 654 686 718 750 751 783 815 847 846 878 877 909 941 973 1005 1004 1003 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 287 286 285 317 349 381 380 379 378 377 376 375 407 406 406 405 404 404 403 435 
[DBG]    Local path (in submap): 467 466 465 464 463 462 
[DBG]    Suffix (out of submap): 494 526 525 524 556 588 589 590 622 654 686 718 750 751 783 815 847 846 878 877 909 941 973 1005 1004 1003 
[DBG]  Original agent path length 100 je: 53
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 7: 287, 286, 285, 317, 349, 381, 380, 379, 378, 377, 376, 375, 407, 406, 406, 405, 404, 404, 403, 435, 467, 466, 465, 464, 463, 462, 494, 526, 525, 524, 556, 588, 589, 590, 622, 654, 686, 718, 750, 751, 783, 815, 847, 846, 878, 877, 909, 941, 973, 1005, 1004, 1003, 
[DBG]  Path for agent 100 updated, resulting length: 52
[DBG]  Paths successfully updated.
[DBG]  (LNS.cpp) New path for agent 3: 
[DBG]  468, 468, 468, 468, 468, 469, 470, 470, 469, 468, 467, 466, 498, 498, 499, 531, 499, 498, 466, 466, 466, 498, 530, 529, 561, 593, 625, 657, 689, 688, 687, 719, 751, 783, 815, 847, 879, 880, 912, 913, 912, 
[DBG]  (LNS.cpp) New path for agent 16: 
[DBG]  454, 454, 454, 454, 454, 454, 454, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 400, 368, 336, 337, 338, 306, 274, 
[DBG]  (LNS.cpp) New path for agent 29: 
[DBG]  579, 580, 581, 549, 517, 485, 486, 487, 455, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 401, 402, 403, 404, 405, 373, 341, 309, 310, 311, 
[DBG]  (LNS.cpp) New path for agent 43: 
[DBG]  414, 413, 412, 380, 379, 378, 377, 409, 408, 407, 406, 405, 404, 403, 435, 467, 466, 465, 464, 463, 431, 430, 430, 462, 494, 526, 525, 524, 523, 522, 521, 520, 519, 551, 550, 549, 581, 613, 645, 677, 676, 675, 707, 
[DBG]  (LNS.cpp) New path for agent 44: 
[DBG]  156, 124, 123, 122, 154, 153, 185, 184, 216, 248, 247, 279, 311, 310, 310, 309, 341, 373, 405, 404, 403, 435, 467, 466, 498, 530, 529, 561, 593, 592, 591, 623, 655, 687, 719, 751, 783, 815, 847, 848, 
[DBG]  (LNS.cpp) New path for agent 63: 
[DBG]  689, 721, 720, 719, 687, 655, 623, 591, 592, 560, 528, 528, 496, 464, 432, 400, 368, 367, 367, 367, 335, 303, 302, 
[DBG]  (LNS.cpp) New path for agent 84: 
[DBG]  878, 879, 847, 815, 783, 751, 719, 687, 655, 623, 591, 592, 560, 528, 496, 464, 432, 400, 368, 336, 337, 338, 306, 274, 242, 243, 244, 212, 180, 181, 149, 150, 118, 86, 54, 55, 56, 24, 25, 
[DBG]  (LNS.cpp) New path for agent 100: 
[DBG]  287, 286, 285, 317, 349, 381, 380, 379, 378, 377, 376, 375, 407, 406, 406, 405, 404, 404, 403, 435, 467, 466, 465, 464, 463, 462, 494, 526, 525, 524, 556, 588, 589, 590, 622, 654, 686, 718, 750, 751, 783, 815, 847, 846, 878, 877, 909, 941, 973, 1005, 1004, 1003, 
[DBG]  component_weights = {0.297156, 0.175737, 0.183777, 0.34333}
[DBG]  opSuccess value: 1
[STAT] neighbor.sum_of_costs before recomputation: 285
[STAT] neighbor.old_sum_of_costs before recomputation: 287
[STAT] sum_of_costs before recomputation: 4402
[DBG]  Validate solution immediately after SAT success.
[WARNING] Problem after SAT: Vertex conflict between agents 44 and 114 at location 467 at timestep 22
[DBG]  Attempting immediate repair via init_lns because problem occurred after SAT (should be applied only for conflicts...).
[DBG]  Passing 150 agents to init_lns (skip=true).
[DBG]  path_table contents for selected agents (neighbor.agents):
[DBG]    Agent 3 => controlling path length=41
[DBG]    Agent 16 => controlling path length=25
[DBG]    Agent 29 => controlling path length=30
[DBG]    Agent 43 => controlling path length=43
[DBG]    Agent 44 => controlling path length=40
[DBG]    Agent 63 => controlling path length=23
[DBG]    Agent 84 => controlling path length=39
[DBG]    Agent 100 => controlling path length=52
[DBG]  hodnota skip_initial_solution=1
[DBG]  We skip initialSolution => call buildCollisionData()
[DBG]  buildCollisionData() called â€“ skip_initial_solution case.
[DBG]  Agents.size()=150, collision_graph.size()=150
[DBG]  agent 44 => updateCollidingPairs => foundCollision
[DBG]  agent 114 => updateCollidingPairs => foundCollision
[DBG]  Conflicting agent pairs:
[DBG]  agent 44 is in conflict with agent 114
[DBG]  buildCollisionData() => sum_of_costs=4400, num_of_colliding_pairs=1
[DBG]  buildCollisionData done => sum_of_costs=4400, num_of_colliding_pairs=1
[DBG]  sum_of_cost hodnota: 4400
[DBG]  After skip/init build => iteration_stats.back(): sum_of_costs=4400, collisions=1
[DEBUG] Using default neighbor generation strategy for conflicts: 0
	InitLNS(PP): runtime = 0.00463404, iterations = 2, colliding pairs = 0, initial colliding pairs = 1, solution cost = 4399, initial solution cost = 4400, failed iterations = 0
[DBG]  init_lns->sum_of_costs after init_lns->run: 4399
[DBG]  sum_of_costs after assignment from init_lns->run: 4399
[DBG]  Recomputing sum_of_cost by dividing neighbor.sum_of_costs and neighbor.old_sum_of_costs
[STAT] sum_of_costs after recomputation: 4399
[STAT] Iteration 61
[DBG]  Using SAT operator (destroy+repair SAT).
[DBG]  ====================
[DBG]  SAT destroy operator called.
[DBG]  SAT heuristic: 2
[DBG]  key_agent_id: 40
[DBG]  key_agent_id global path length: 19
[DBG]  Submap content (global positions):
[DBG]  17 18 19 20 21 
[DBG]  49 50 51 52 53 
[DBG]  81 82 83 84 85 
[DBG]  113 114 115 116 117 
[DBG]  145 146 147 148 149 
[DBG]  Map content with agents and obstacles:
[DBG]  X . . . X 
[DBG]  A . X . X 
[DBG]  A . A . . 
[DBG]  . X . . . 
[DBG]  X . A . . 
[DBG]  content of the map structure that we pass to the SAT solver:
[DBG]  -1  1  1  1  -1  
[DBG]  1  1  -1  1  -1  
[DBG]  1  1  1  1  1  
[DBG]  1  -1  1  1  1  
[DBG]  -1  1  1  1  1  
[DBG]  Identifying agents in a submap for rescheduling (when key_agent is there at the time 3):
[DBG]  Agent 40 found intervals in the sub-map:
[DBG]   [0..6]
[DBG]  Agent 40 (interval in submap: [0..6]) contains time 3, added to replan.
[DBG]  Agent 53 found intervals in the sub-map:
[DBG]   [0..5]
[DBG]  Agent 53 (interval in submap: [0..5]) contains time 3, added to replan.
[DBG]  Agent 83 found intervals in the sub-map:
[DBG]   [0..4]
[DBG]  Agent 83 (interval in submap: [0..4]) contains time 3, added to replan.
[DBG]  Agent 126 found intervals in the sub-map:
[DBG]   [3..8]
[DBG]  Agent 126 (interval in submap: [3..8]) contains time 3, added to replan.
[DBG]  Agent 40 | Start (global): 83 -> (local): (2, 2) at time 3 | Goal (global): 49 -> (local): (1, 0) at time 6
[DBG]  Agent 53 | Start (global): 147 -> (local): (4, 2) at time 3 | Goal (global): 147 -> (local): (4, 2) at time 5
[DBG]  Agent 83 | Start (global): 81 -> (local): (2, 0) at time 3 | Goal (global): 113 -> (local): (3, 0) at time 4
[DBG]  Agent 126 | Start (global): 49 -> (local): (1, 0) at time 3 | Goal (global): 85 -> (local): (2, 4) at time 8
[DBG]  [REPAIR] SAT destroy operator called.
[DBG]  [REPAIR] SAT operator â€“ launching subproblem FOR OPTIMIZATION.
[DBG]  Creating local paths (sx, sy) in the submap for T_sync = 3
[DBG]    Agent 40 (global paths from T=3 to 6) has local path: (2,2) (2,1) (2,0) (1,0) 
[DBG]    Agent 53 (global paths from T=3 to 5) has local path: (4,2) (4,2) (4,2) 
[DBG]    Agent 83 (global paths from T=3 to 4) has local path: (2,0) (3,0) 
[DBG]    Agent 126 (global paths from T=3 to 8) has local path: (1,0) (1,1) (2,1) (2,2) (2,3) (2,4) 
[DBG]  Checking input data for SAT solver:
[DBG]    - Number of agents to replan: 4
[DBG]  Agent 40 has the original local path length: 4 => Start (2,2), Goal (1,0)
[DBG]  Agent 53 has the original local path length: 3 => Start (4,2), Goal (4,2)
[DBG]  Agent 83 has the original local path length: 2 => Start (2,0), Goal (3,0)
[DBG]  Agent 126 has the original local path length: 6 => Start (1,0), Goal (2,4)
[DBG]  Start position: (2, 2), (4, 2), (2, 0), (1, 0), 
[DBG]  Goal position: (1, 0), (4, 2), (3, 0), (2, 4), 
[DBG]  SAT instance and solver created.
Currently solving
Instance name: scen
Map name: map
Encoding used: disappear_at_goal
SAT solver used: Kissat
Optimizing function: sum of costs
Number of agents: 4
Mks LB: 6
SoC LB: 13
Delta: 0
Remaining time: 300000 [ms]

Vertex conflict! Agents 0, 1, timestep 4, location 0
Swapping conflict! Agents 0, 1, timestep 4, edge (0,0)
Vertex conflict! Agents 0, 1, timestep 5, location 0
Vertex conflict! Agents 0, 2, timestep 4, location 0
Swapping conflict! Agents 0, 2, timestep 4, edge (0,0)
Vertex conflict! Agents 0, 2, timestep 5, location 0
Vertex conflict! Agents 1, 2, timestep 2, location 0
Swapping conflict! Agents 1, 2, timestep 2, edge (0,0)
Vertex conflict! Agents 1, 2, timestep 3, location 0
Swapping conflict! Agents 1, 2, timestep 3, edge (0,0)
Vertex conflict! Agents 1, 2, timestep 4, location 0
Swapping conflict! Agents 1, 2, timestep 4, edge (0,0)
Vertex conflict! Agents 1, 2, timestep 5, location 0
Found plan [agents = 4] [timesteps = 6]
Agent #0 : 8 7 6 3 0 0 
Agent #1 : 16 0 0 0 0 0 
Agent #2 : 6 11 0 0 0 0 
Agent #3 : 3 4 7 8 9 10 

[STAT] Solver returned: 0
[DBG]  Agent (index) 40 | New local path (submap idx):
[DBG]  8 7 6 3 
[DBG]  Agent (index) 53 | New local path (submap idx):
[DBG]  16 
[DBG]  Agent (index) 83 | New local path (submap idx):
[DBG]  6 11 
[DBG]  Agent (index) 126 | New local path (submap idx):
[DBG]  3 4 7 8 9 10 
[DBG]  Update the agent path 40 | Original local length: 4 | New local length: 4
[DBG]  agent 40 t=0 => decoded (sx,sy)=(2,2) => global_id=83
[DBG]  agent 40 t=1 => decoded (sx,sy)=(2,1) => global_id=82
[DBG]  agent 40 t=2 => decoded (sx,sy)=(2,0) => global_id=81
[DBG]  agent 40 t=3 => decoded (sx,sy)=(1,0) => global_id=49
[DBG]  Complete path of agent 40:
[DBG]    Original: 117 85 84 83 82 81 49 48 47 46 45 77 76 75 74 73 72 71 70 
[DBG]    New:     117 85 84 83 82 81 49 48 47 46 45 77 76 75 74 73 72 71 70 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 117 85 84 
[DBG]    Local path (in submap): 83 82 81 49 
[DBG]    Suffix (out of submap): 48 47 46 45 77 76 75 74 73 72 71 70 
[DBG]  Original agent path length 40 je: 19
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 0: 117, 85, 84, 83, 82, 81, 49, 48, 47, 46, 45, 77, 76, 75, 74, 73, 72, 71, 70, 
[DBG]  Path for agent 40 updated, resulting length: 19
[DBG]  Update the agent path 53 | Original local length: 3 | New local length: 1
[DBG]  agent 53 t=0 => decoded (sx,sy)=(4,2) => global_id=147
[DBG]  Complete path of agent 53:
[DBG]    Original: 84 83 115 147 147 147 179 180 212 244 276 308 309 309 309 341 373 405 437 469 501 501 501 501 501 533 565 597 629 628 660 692 724 756 788 820 821 
[DBG]    New:     84 83 115 147 179 180 212 244 276 308 309 309 309 341 373 405 437 469 501 501 501 501 501 533 565 597 629 628 660 692 724 756 788 820 821 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 84 83 115 
[DBG]    Local path (in submap): 147 179 180 
[DBG]    Suffix (out of submap): 212 244 276 308 309 309 309 341 373 405 437 469 501 501 501 501 501 533 565 597 629 628 660 692 724 756 788 820 821 
[DBG]  Original agent path length 53 je: 37
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 1: 84, 83, 115, 147, 179, 180, 212, 244, 276, 308, 309, 309, 309, 341, 373, 405, 437, 469, 501, 501, 501, 501, 501, 533, 565, 597, 629, 628, 660, 692, 724, 756, 788, 820, 821, 
[DBG]  Path for agent 53 updated, resulting length: 35
[DBG]  Update the agent path 83 | Original local length: 2 | New local length: 2
[DBG]  agent 83 t=0 => decoded (sx,sy)=(2,0) => global_id=81
[DBG]  agent 83 t=1 => decoded (sx,sy)=(3,0) => global_id=113
[DBG]  Complete path of agent 83:
[DBG]    Original: 18 50 49 81 113 112 144 176 208 240 239 271 303 303 335 335 367 366 398 430 462 494 526 558 558 590 591 623 655 687 719 751 783 815 847 848 880 912 944 976 977 1009 
[DBG]    New:     18 50 49 81 113 112 144 176 208 240 239 271 303 303 335 335 367 366 398 430 462 494 526 558 558 590 591 623 655 687 719 751 783 815 847 848 880 912 944 976 977 1009 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 18 50 49 
[DBG]    Local path (in submap): 81 113 
[DBG]    Suffix (out of submap): 112 144 176 208 240 239 271 303 303 335 335 367 366 398 430 462 494 526 558 558 590 591 623 655 687 719 751 783 815 847 848 880 912 944 976 977 1009 
[DBG]  Original agent path length 83 je: 42
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 2: 18, 50, 49, 81, 113, 112, 144, 176, 208, 240, 239, 271, 303, 303, 335, 335, 367, 366, 398, 430, 462, 494, 526, 558, 558, 590, 591, 623, 655, 687, 719, 751, 783, 815, 847, 848, 880, 912, 944, 976, 977, 1009, 
[DBG]  Path for agent 83 updated, resulting length: 42
[DBG]  Update the agent path 126 | Original local length: 6 | New local length: 6
[DBG]  agent 126 t=0 => decoded (sx,sy)=(1,0) => global_id=49
[DBG]  agent 126 t=1 => decoded (sx,sy)=(1,1) => global_id=50
[DBG]  agent 126 t=2 => decoded (sx,sy)=(2,1) => global_id=82
[DBG]  agent 126 t=3 => decoded (sx,sy)=(2,2) => global_id=83
[DBG]  agent 126 t=4 => decoded (sx,sy)=(2,3) => global_id=84
[DBG]  agent 126 t=5 => decoded (sx,sy)=(2,4) => global_id=85
[DBG]  Complete path of agent 126:
[DBG]    Original: 15 16 48 49 50 82 83 84 85 86 54 55 56 24 25 26 27 28 29 
[DBG]    New:     15 16 48 49 50 82 83 84 85 86 54 55 56 24 25 26 27 28 29 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 15 16 48 
[DBG]    Local path (in submap): 49 50 82 83 84 85 
[DBG]    Suffix (out of submap): 86 54 55 56 24 25 26 27 28 29 
[DBG]  Original agent path length 126 je: 19
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 3: 15, 16, 48, 49, 50, 82, 83, 84, 85, 86, 54, 55, 56, 24, 25, 26, 27, 28, 29, 
[DBG]  Path for agent 126 updated, resulting length: 19
[DBG]  Paths successfully updated.
[DBG]  (LNS.cpp) New path for agent 40: 
[DBG]  117, 85, 84, 83, 82, 81, 49, 48, 47, 46, 45, 77, 76, 75, 74, 73, 72, 71, 70, 
[DBG]  (LNS.cpp) New path for agent 53: 
[DBG]  84, 83, 115, 147, 179, 180, 212, 244, 276, 308, 309, 309, 309, 341, 373, 405, 437, 469, 501, 501, 501, 501, 501, 533, 565, 597, 629, 628, 660, 692, 724, 756, 788, 820, 821, 
[DBG]  (LNS.cpp) New path for agent 83: 
[DBG]  18, 50, 49, 81, 113, 112, 144, 176, 208, 240, 239, 271, 303, 303, 335, 335, 367, 366, 398, 430, 462, 494, 526, 558, 558, 590, 591, 623, 655, 687, 719, 751, 783, 815, 847, 848, 880, 912, 944, 976, 977, 1009, 
[DBG]  (LNS.cpp) New path for agent 126: 
[DBG]  15, 16, 48, 49, 50, 82, 83, 84, 85, 86, 54, 55, 56, 24, 25, 26, 27, 28, 29, 
[DBG]  component_weights = {0.29507, 0.174503, 0.182487, 0.34794}
[DBG]  opSuccess value: 1
[STAT] neighbor.sum_of_costs before recomputation: 111
[STAT] neighbor.old_sum_of_costs before recomputation: 113
[STAT] sum_of_costs before recomputation: 4399
[DBG]  Validate solution immediately after SAT success.
[WARNING] Problem after SAT: Edge conflict between agents 30 and 53 at edge (597,565) at timestep 25
[DBG]  Attempting immediate repair via init_lns because problem occurred after SAT (should be applied only for conflicts...).
[DBG]  Passing 150 agents to init_lns (skip=true).
[DBG]  path_table contents for selected agents (neighbor.agents):
[DBG]    Agent 40 => controlling path length=19
[DBG]    Agent 53 => controlling path length=35
[DBG]    Agent 83 => controlling path length=42
[DBG]    Agent 126 => controlling path length=19
[DBG]  hodnota skip_initial_solution=1
[DBG]  We skip initialSolution => call buildCollisionData()
[DBG]  buildCollisionData() called â€“ skip_initial_solution case.
[DBG]  Agents.size()=150, collision_graph.size()=150
[DBG]  agent 30 => updateCollidingPairs => foundCollision
[DBG]  agent 53 => updateCollidingPairs => foundCollision
[DBG]  agent 54 => updateCollidingPairs => foundCollision
[DBG]  agent 56 => updateCollidingPairs => foundCollision
[DBG]  agent 57 => updateCollidingPairs => foundCollision
[DBG]  agent 67 => updateCollidingPairs => foundCollision
[DBG]  agent 100 => updateCollidingPairs => foundCollision
[DBG]  agent 117 => updateCollidingPairs => foundCollision
[DBG]  agent 140 => updateCollidingPairs => foundCollision
[DBG]  agent 149 => updateCollidingPairs => foundCollision
[DBG]  Conflicting agent pairs:
[DBG]  agent 30 is in conflict with agent 53
[DBG]  agent 53 is in conflict with agent 54
[DBG]  agent 53 is in conflict with agent 56
[DBG]  agent 53 is in conflict with agent 57
[DBG]  agent 53 is in conflict with agent 67
[DBG]  agent 53 is in conflict with agent 100
[DBG]  agent 53 is in conflict with agent 117
[DBG]  agent 53 is in conflict with agent 140
[DBG]  agent 53 is in conflict with agent 149
[DBG]  buildCollisionData() => sum_of_costs=4397, num_of_colliding_pairs=9
[DBG]  buildCollisionData done => sum_of_costs=4397, num_of_colliding_pairs=9
[DBG]  sum_of_cost hodnota: 4397
[DBG]  After skip/init build => iteration_stats.back(): sum_of_costs=4397, collisions=9
[DEBUG] Using default neighbor generation strategy for conflicts: 2
[DEBUG] Using default neighbor generation strategy for conflicts: 0
	InitLNS(PP): runtime = 0.00966458, iterations = 3, colliding pairs = 0, initial colliding pairs = 9, solution cost = 4398, initial solution cost = 4397, failed iterations = 0
[DBG]  init_lns->sum_of_costs after init_lns->run: 4398
[DBG]  sum_of_costs after assignment from init_lns->run: 4398
[DBG]  Recomputing sum_of_cost by dividing neighbor.sum_of_costs and neighbor.old_sum_of_costs
[STAT] sum_of_costs after recomputation: 4398
[STAT] Iteration 62
[DBG]  Using SAT operator (destroy+repair SAT).
[DBG]  ====================
[DBG]  SAT destroy operator called.
[DBG]  SAT heuristic: 2
[DBG]  key_agent_id: 95
[DBG]  key_agent_id global path length: 7
[DBG]  Submap content (global positions):
[DBG]  610 611 612 613 614 
[DBG]  642 643 644 645 646 
[DBG]  674 675 676 677 678 
[DBG]  706 707 708 709 710 
[DBG]  738 739 740 741 742 
[DBG]  Map content with agents and obstacles:
[DBG]  . . . . X 
[DBG]  . X . . A 
[DBG]  . . A . . 
[DBG]  X . X . . 
[DBG]  . . . . A 
[DBG]  content of the map structure that we pass to the SAT solver:
[DBG]  1  1  1  1  -1  
[DBG]  1  -1  1  1  1  
[DBG]  1  1  1  1  1  
[DBG]  -1  1  -1  1  1  
[DBG]  1  1  1  1  1  
[DBG]  Identifying agents in a submap for rescheduling (when key_agent is there at the time 2):
[DBG]  Agent 85 found intervals in the sub-map:
[DBG]   [0..2]
[DBG]  Agent 85 (interval in submap: [0..2]) contains time 2, added to replan.
[DBG]  Agent 95 found intervals in the sub-map:
[DBG]   [0..4]
[DBG]  Agent 95 (interval in submap: [0..4]) contains time 2, added to replan.
[DBG]  Agent 99 found intervals in the sub-map:
[DBG]   [2..7]
[DBG]  Agent 99 (interval in submap: [2..7]) contains time 2, added to replan.
[DBG]  Agent 85 | Start (global): 742 -> (local): (4, 4) at time 2 | Goal (global): 742 -> (local): (4, 4) at time 2
[DBG]  Agent 95 | Start (global): 676 -> (local): (2, 2) at time 2 | Goal (global): 674 -> (local): (2, 0) at time 4
[DBG]  Agent 99 | Start (global): 646 -> (local): (1, 4) at time 2 | Goal (global): 674 -> (local): (2, 0) at time 7
[DBG]  [REPAIR] SAT destroy operator called.
[DBG]  [REPAIR] SAT operator â€“ launching subproblem FOR OPTIMIZATION.
[DBG]  Creating local paths (sx, sy) in the submap for T_sync = 2
[DBG]    Agent 85 (global paths from T=2 to 2) has local path: (4,4) 
[DBG]    Agent 95 (global paths from T=2 to 4) has local path: (2,2) (2,1) (2,0) 
[DBG]    Agent 99 (global paths from T=2 to 7) has local path: (1,4) (2,4) (2,3) (2,2) (2,1) (2,0) 
[DBG]  Checking input data for SAT solver:
[DBG]    - Number of agents to replan: 3
[DBG]  Agent 85 has the original local path length: 1 => Start (4,4), Goal (4,4)
[DBG]  Agent 95 has the original local path length: 3 => Start (2,2), Goal (2,0)
[DBG]  Agent 99 has the original local path length: 6 => Start (1,4), Goal (2,0)
[DBG]  Start position: (4, 4), (2, 2), (1, 4), 
[DBG]  Goal position: (4, 4), (2, 0), (2, 0), 
[DBG]  SAT instance and solver created.
Currently solving
Instance name: scen
Map name: map
Encoding used: disappear_at_goal
SAT solver used: Kissat
Optimizing function: sum of costs
Number of agents: 3
Mks LB: 6
SoC LB: 10
Delta: 0
Remaining time: 300000 [ms]

Vertex conflict! Agents 0, 1, timestep 3, location 0
Swapping conflict! Agents 0, 1, timestep 3, edge (0,0)
Vertex conflict! Agents 0, 1, timestep 4, location 0
Swapping conflict! Agents 0, 1, timestep 4, edge (0,0)
Vertex conflict! Agents 0, 1, timestep 5, location 0
Found plan [agents = 3] [timesteps = 6]
Agent #0 : 20 0 0 0 0 0 
Agent #1 : 10 9 8 0 0 0 
Agent #2 : 7 12 11 10 9 8 

[STAT] Solver returned: 0
[DBG]  Agent (index) 85 | New local path (submap idx):
[DBG]  20 
[DBG]  Agent (index) 95 | New local path (submap idx):
[DBG]  10 9 8 
[DBG]  Agent (index) 99 | New local path (submap idx):
[DBG]  7 12 11 10 9 8 
[DBG]  Update the agent path 85 | Original local length: 1 | New local length: 1
[DBG]  agent 85 t=0 => decoded (sx,sy)=(4,4) => global_id=742
[DBG]  Complete path of agent 85:
[DBG]    Original: 709 741 742 774 806 807 839 871 903 904 905 906 874 875 876 877 878 846 847 848 849 817 818 819 820 821 822 790 
[DBG]    New:     709 741 742 774 806 807 839 871 903 904 905 906 874 875 876 877 878 846 847 848 849 817 818 819 820 821 822 790 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 709 741 
[DBG]    Local path (in submap): 742 
[DBG]    Suffix (out of submap): 774 806 807 839 871 903 904 905 906 874 875 876 877 878 846 847 848 849 817 818 819 820 821 822 790 
[DBG]  Original agent path length 85 je: 28
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 0: 709, 741, 742, 774, 806, 807, 839, 871, 903, 904, 905, 906, 874, 875, 876, 877, 878, 846, 847, 848, 849, 817, 818, 819, 820, 821, 822, 790, 
[DBG]  Path for agent 85 updated, resulting length: 28
[DBG]  Update the agent path 95 | Original local length: 3 | New local length: 3
[DBG]  agent 95 t=0 => decoded (sx,sy)=(2,2) => global_id=676
[DBG]  agent 95 t=1 => decoded (sx,sy)=(2,1) => global_id=675
[DBG]  agent 95 t=2 => decoded (sx,sy)=(2,0) => global_id=674
[DBG]  Complete path of agent 95:
[DBG]    Original: 678 677 676 675 674 673 705 
[DBG]    New:     678 677 676 675 674 673 705 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 678 677 
[DBG]    Local path (in submap): 676 675 674 
[DBG]    Suffix (out of submap): 673 705 
[DBG]  Original agent path length 95 je: 7
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 1: 678, 677, 676, 675, 674, 673, 705, 
[DBG]  Path for agent 95 updated, resulting length: 7
[DBG]  Update the agent path 99 | Original local length: 6 | New local length: 6
[DBG]  agent 99 t=0 => decoded (sx,sy)=(1,4) => global_id=646
[DBG]  agent 99 t=1 => decoded (sx,sy)=(2,4) => global_id=678
[DBG]  agent 99 t=2 => decoded (sx,sy)=(2,3) => global_id=677
[DBG]  agent 99 t=3 => decoded (sx,sy)=(2,2) => global_id=676
[DBG]  agent 99 t=4 => decoded (sx,sy)=(2,1) => global_id=675
[DBG]  agent 99 t=5 => decoded (sx,sy)=(2,0) => global_id=674
[DBG]  Complete path of agent 99:
[DBG]    Original: 615 647 646 678 677 676 675 674 
[DBG]    New:     615 647 646 678 677 676 675 674 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 615 647 
[DBG]    Local path (in submap): 646 678 677 676 675 674 
[DBG]    Suffix (out of submap): 
[DBG]  Original agent path length 99 je: 8
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 2: 615, 647, 646, 678, 677, 676, 675, 674, 
[DBG]  Path for agent 99 updated, resulting length: 8
[DBG]  Paths successfully updated.
[DBG]  (LNS.cpp) New path for agent 85: 
[DBG]  709, 741, 742, 774, 806, 807, 839, 871, 903, 904, 905, 906, 874, 875, 876, 877, 878, 846, 847, 848, 849, 817, 818, 819, 820, 821, 822, 790, 
[DBG]  (LNS.cpp) New path for agent 95: 
[DBG]  678, 677, 676, 675, 674, 673, 705, 
[DBG]  (LNS.cpp) New path for agent 99: 
[DBG]  615, 647, 646, 678, 677, 676, 675, 674, 
[DBG]  component_weights = {0.29929, 0.173459, 0.181394, 0.345857}
[DBG]  opSuccess value: 1
[STAT] neighbor.sum_of_costs before recomputation: 40
[STAT] neighbor.old_sum_of_costs before recomputation: 40
[STAT] sum_of_costs before recomputation: 4398
[DBG]  Validate solution immediately after SAT success.
[DBG]  No problems after SAT replan.
[DBG]  Recomputing sum_of_cost by dividing neighbor.sum_of_costs and neighbor.old_sum_of_costs
[STAT] sum_of_costs after recomputation: 4398
[STAT] Iteration 63
[DBG]  Using SAT operator (destroy+repair SAT).
[DBG]  ====================
[DBG]  SAT destroy operator called.
[DBG]  SAT heuristic: 2
[DBG]  key_agent_id: 134
[DBG]  key_agent_id global path length: 16
[DBG]  Submap content (global positions):
[DBG]  384 385 386 387 388 
[DBG]  416 417 418 419 420 
[DBG]  448 449 450 451 452 
[DBG]  480 481 482 483 484 
[DBG]  512 513 514 515 516 
[DBG]  Map content with agents and obstacles:
[DBG]  . . X . . 
[DBG]  . X A . . 
[DBG]  . A A X X 
[DBG]  . . . A A 
[DBG]  . . X . . 
[DBG]  content of the map structure that we pass to the SAT solver:
[DBG]  1  1  -1  1  1  
[DBG]  1  -1  1  1  1  
[DBG]  1  1  1  -1  -1  
[DBG]  1  1  1  1  1  
[DBG]  1  1  -1  1  1  
[DBG]  Identifying agents in a submap for rescheduling (when key_agent is there at the time 13):
[DBG]  Agent 65 found intervals in the sub-map:
[DBG]   [11..17]
[DBG]  Agent 65 (interval in submap: [11..17]) contains time 13, added to replan.
[DBG]  Agent 78 found intervals in the sub-map:
[DBG]   [13..16]
[DBG]  Agent 78 (interval in submap: [13..16]) contains time 13, added to replan.
[DBG]  Agent 110 found intervals in the sub-map:
[DBG]   [8..15]
[DBG]  Agent 110 (interval in submap: [8..15]) contains time 13, added to replan.
[DBG]  Agent 116 found intervals in the sub-map:
[DBG]   [5..19]
[DBG]  Agent 116 (interval in submap: [5..19]) contains time 13, added to replan.
[DBG]  Agent 134 found intervals in the sub-map:
[DBG]   [10..15]
[DBG]  Agent 134 (interval in submap: [10..15]) contains time 13, added to replan.
[DBG]  Agent 65 | Start (global): 418 -> (local): (1, 2) at time 13 | Goal (global): 515 -> (local): (4, 3) at time 17
[DBG]  Agent 78 | Start (global): 484 -> (local): (3, 4) at time 13 | Goal (global): 516 -> (local): (4, 4) at time 16
[DBG]  Agent 110 | Start (global): 483 -> (local): (3, 3) at time 13 | Goal (global): 516 -> (local): (4, 4) at time 15
[DBG]  Agent 116 | Start (global): 449 -> (local): (2, 1) at time 13 | Goal (global): 387 -> (local): (0, 3) at time 19
[DBG]  Agent 134 | Start (global): 450 -> (local): (2, 2) at time 13 | Goal (global): 481 -> (local): (3, 1) at time 15
[DBG]  [REPAIR] SAT destroy operator called.
[DBG]  [REPAIR] SAT operator â€“ launching subproblem FOR OPTIMIZATION.
[DBG]  Creating local paths (sx, sy) in the submap for T_sync = 13
[DBG]    Agent 65 (global paths from T=13 to 17) has local path: (1,2) (2,2) (3,2) (3,3) (4,3) 
[DBG]    Agent 78 (global paths from T=13 to 16) has local path: (3,4) (4,4) (4,3) (4,4) 
[DBG]    Agent 110 (global paths from T=13 to 15) has local path: (3,3) (3,4) (4,4) 
[DBG]    Agent 116 (global paths from T=13 to 19) has local path: (2,1) (2,1) (2,1) (2,2) (1,2) (1,3) (0,3) 
[DBG]    Agent 134 (global paths from T=13 to 15) has local path: (2,2) (3,2) (3,1) 
[DBG]  Checking input data for SAT solver:
[DBG]    - Number of agents to replan: 5
[DBG]  Agent 65 has the original local path length: 5 => Start (1,2), Goal (4,3)
[DBG]  Agent 78 has the original local path length: 4 => Start (3,4), Goal (4,4)
[DBG]  Agent 110 has the original local path length: 3 => Start (3,3), Goal (4,4)
[DBG]  Agent 116 has the original local path length: 7 => Start (2,1), Goal (0,3)
[DBG]  Agent 134 has the original local path length: 3 => Start (2,2), Goal (3,1)
[DBG]  Start position: (1, 2), (3, 4), (3, 3), (2, 1), (2, 2), 
[DBG]  Goal position: (4, 3), (4, 4), (4, 4), (0, 3), (3, 1), 
[DBG]  SAT instance and solver created.
Currently solving
Instance name: scen
Map name: map
Encoding used: disappear_at_goal
SAT solver used: Kissat
Optimizing function: sum of costs
Number of agents: 5
Mks LB: 5
SoC LB: 18
Delta: 0
Remaining time: 300000 [ms]

[STAT] Solver returned: -1
[DBG]  SAT solver failed.
[STAT] SAT solver failed to find a valid solution.
[DBG]  ====================
[DBG]  SAT destroy operator called.
[DBG]  SAT heuristic: 2
[DBG]  key_agent_id: 134
[DBG]  key_agent_id global path length: 16
[DBG]  Submap content (global positions):
[DBG]  99 100 101 102 103 
[DBG]  131 132 133 134 135 
[DBG]  163 164 165 166 167 
[DBG]  195 196 197 198 199 
[DBG]  227 228 229 230 231 
[DBG]  Map content with agents and obstacles:
[DBG]  . . X . X 
[DBG]  . . . . A 
[DBG]  . . A X . 
[DBG]  . . . X . 
[DBG]  . . X . . 
[DBG]  content of the map structure that we pass to the SAT solver:
[DBG]  1  1  -1  1  -1  
[DBG]  1  1  1  1  1  
[DBG]  1  1  1  -1  1  
[DBG]  1  1  1  -1  1  
[DBG]  1  1  -1  1  1  
[DBG]  Identifying agents in a submap for rescheduling (when key_agent is there at the time 1):
[DBG]  Agent 66 found intervals in the sub-map:
[DBG]   [0..1]
[DBG]  Agent 66 (interval in submap: [0..1]) contains time 1, added to replan.
[DBG]  Agent 115 found intervals in the sub-map:
[DBG]   [0..0] [3..9]
[DBG]  Agent 115 is not in sub-map at time 1 (intervals: 
[DBG]  [0..0] [3..9] )
[DBG]  Agent 134 found intervals in the sub-map:
[DBG]   [0..5]
[DBG]  Agent 134 (interval in submap: [0..5]) contains time 1, added to replan.
[DBG]  Agent 66 | Start (global): 135 -> (local): (1, 4) at time 1 | Goal (global): 135 -> (local): (1, 4) at time 1
[DBG]  Agent 134 | Start (global): 165 -> (local): (2, 2) at time 1 | Goal (global): 227 -> (local): (4, 0) at time 5
[DBG]  [REPAIR] SAT destroy operator called.
[DBG]  [REPAIR] SAT operator â€“ launching subproblem FOR OPTIMIZATION.
[DBG]  Creating local paths (sx, sy) in the submap for T_sync = 1
[DBG]    Agent 66 (global paths from T=1 to 1) has local path: (1,4) 
[DBG]    Agent 134 (global paths from T=1 to 5) has local path: (2,2) (3,2) (3,1) (4,1) (4,0) 
[DBG]  Checking input data for SAT solver:
[DBG]    - Number of agents to replan: 2
[DBG]  Agent 66 has the original local path length: 1 => Start (1,4), Goal (1,4)
[DBG]  Agent 134 has the original local path length: 5 => Start (2,2), Goal (4,0)
[DBG]  Start position: (1, 4), (2, 2), 
[DBG]  Goal position: (1, 4), (4, 0), 
[DBG]  SAT instance and solver created.
Currently solving
Instance name: scen
Map name: map
Encoding used: disappear_at_goal
SAT solver used: Kissat
Optimizing function: sum of costs
Number of agents: 2
Mks LB: 5
SoC LB: 6
Delta: 0
Remaining time: 300000 [ms]

Found plan [agents = 2] [timesteps = 5]
Agent #0 : 7 0 0 0 0 
Agent #1 : 10 14 13 17 16 

[STAT] Solver returned: 0
[DBG]  Agent (index) 66 | New local path (submap idx):
[DBG]  7 
[DBG]  Agent (index) 134 | New local path (submap idx):
[DBG]  10 14 13 17 16 
[DBG]  Update the agent path 66 | Original local length: 1 | New local length: 1
[DBG]  agent 66 t=0 => decoded (sx,sy)=(1,4) => global_id=135
[DBG]  Complete path of agent 66:
[DBG]    Original: 134 135 136 137 138 139 140 108 109 110 111 79 80 81 82 83 115 116 148 149 150 151 183 183 183 215 247 279 
[DBG]    New:     134 135 136 137 138 139 140 108 109 110 111 79 80 81 82 83 115 116 148 149 150 151 183 183 183 215 247 279 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 134 
[DBG]    Local path (in submap): 135 
[DBG]    Suffix (out of submap): 136 137 138 139 140 108 109 110 111 79 80 81 82 83 115 116 148 149 150 151 183 183 183 215 247 279 
[DBG]  Original agent path length 66 je: 28
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 0: 134, 135, 136, 137, 138, 139, 140, 108, 109, 110, 111, 79, 80, 81, 82, 83, 115, 116, 148, 149, 150, 151, 183, 183, 183, 215, 247, 279, 
[DBG]  Path for agent 66 updated, resulting length: 28
[DBG]  Update the agent path 134 | Original local length: 5 | New local length: 5
[DBG]  agent 134 t=0 => decoded (sx,sy)=(2,2) => global_id=165
[DBG]  agent 134 t=1 => decoded (sx,sy)=(3,2) => global_id=197
[DBG]  agent 134 t=2 => decoded (sx,sy)=(3,1) => global_id=196
[DBG]  agent 134 t=3 => decoded (sx,sy)=(4,1) => global_id=228
[DBG]  agent 134 t=4 => decoded (sx,sy)=(4,0) => global_id=227
[DBG]  Complete path of agent 134:
[DBG]    Original: 133 165 197 196 228 227 259 291 323 355 387 419 418 450 482 481 
[DBG]    New:     133 165 197 196 228 227 259 291 323 355 387 419 418 450 482 481 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 133 
[DBG]    Local path (in submap): 165 197 196 228 227 
[DBG]    Suffix (out of submap): 259 291 323 355 387 419 418 450 482 481 
[DBG]  Original agent path length 134 je: 16
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 1: 133, 165, 197, 196, 228, 227, 259, 291, 323, 355, 387, 419, 418, 450, 482, 481, 
[DBG]  Path for agent 134 updated, resulting length: 16
[DBG]  Paths successfully updated.
[DBG]  (LNS.cpp) New path for agent 66: 
[DBG]  134, 135, 136, 137, 138, 139, 140, 108, 109, 110, 111, 79, 80, 81, 82, 83, 115, 116, 148, 149, 150, 151, 183, 183, 183, 215, 247, 279, 
[DBG]  (LNS.cpp) New path for agent 134: 
[DBG]  133, 165, 197, 196, 228, 227, 259, 291, 323, 355, 387, 419, 418, 450, 482, 481, 
[DBG]  component_weights = {0.303544, 0.172406, 0.180293, 0.343757}
[DBG]  opSuccess value: 1
[STAT] neighbor.sum_of_costs before recomputation: 42
[STAT] neighbor.old_sum_of_costs before recomputation: 42
[STAT] sum_of_costs before recomputation: 4398
[DBG]  Validate solution immediately after SAT success.
[DBG]  No problems after SAT replan.
[DBG]  Recomputing sum_of_cost by dividing neighbor.sum_of_costs and neighbor.old_sum_of_costs
[STAT] sum_of_costs after recomputation: 4398
[STAT] Iteration 64
[DBG]  Using SAT operator (destroy+repair SAT).
[DBG]  ====================
[DBG]  SAT destroy operator called.
[DBG]  SAT heuristic: 2
[DBG]  key_agent_id: 141
[DBG]  key_agent_id global path length: 3
[DBG]  Submap content (global positions):
[DBG]  -1 -1 -1 -1 -1 
[DBG]  10 11 12 13 14 
[DBG]  42 43 44 45 46 
[DBG]  74 75 76 77 78 
[DBG]  106 107 108 109 110 
[DBG]  Map content with agents and obstacles:
[DBG]  X X X X X 
[DBG]  X . . . . 
[DBG]  A . A . . 
[DBG]  . . . . X 
[DBG]  . . . A . 
[DBG]  content of the map structure that we pass to the SAT solver:
[DBG]  1  1  1  1  1  
[DBG]  -1  1  1  1  1  
[DBG]  1  1  1  1  1  
[DBG]  1  1  1  1  -1  
[DBG]  1  1  1  1  1  
[DBG]  Identifying agents in a submap for rescheduling (when key_agent is there at the time 2):
[DBG]  Agent 26 found intervals in the sub-map:
[DBG]   [0..1]
[DBG]  Agent 26 is not in sub-map at time 2 (intervals: 
[DBG]  [0..1] )
[DBG]  Agent 80 found intervals in the sub-map:
[DBG]   [1..2]
[DBG]  Agent 80 (interval in submap: [1..2]) contains time 2, added to replan.
[DBG]  Agent 82 found intervals in the sub-map:
[DBG]   [0..2]
[DBG]  Agent 82 (interval in submap: [0..2]) contains time 2, added to replan.
[DBG]  Agent 141 found intervals in the sub-map:
[DBG]   [0..2]
[DBG]  Agent 141 (interval in submap: [0..2]) contains time 2, added to replan.
[DBG]  Agent 80 | Start (global): 109 -> (local): (4, 3) at time 2 | Goal (global): 109 -> (local): (4, 3) at time 2
[DBG]  Agent 82 | Start (global): 42 -> (local): (2, 0) at time 2 | Goal (global): 42 -> (local): (2, 0) at time 2
[DBG]  Agent 141 | Start (global): 44 -> (local): (2, 2) at time 2 | Goal (global): 44 -> (local): (2, 2) at time 2
[DBG]  [REPAIR] SAT destroy operator called.
[DBG]  [REPAIR] SAT operator â€“ launching subproblem FOR OPTIMIZATION.
[DBG]  Creating local paths (sx, sy) in the submap for T_sync = 2
[DBG]    Agent 80 (global paths from T=2 to 2) has local path: (4,3) 
[DBG]    Agent 82 (global paths from T=2 to 2) has local path: (2,0) 
[DBG]    Agent 141 (global paths from T=2 to 2) has local path: (2,2) 
[DBG]  Checking input data for SAT solver:
[DBG]    - Number of agents to replan: 3
[DBG]  Agent 80 has the original local path length: 1 => Start (4,3), Goal (4,3)
[DBG]  Agent 82 has the original local path length: 1 => Start (2,0), Goal (2,0)
[DBG]  Agent 141 has the original local path length: 1 => Start (2,2), Goal (2,2)
[DBG]  Start position: (4, 3), (2, 0), (2, 2), 
[DBG]  Goal position: (4, 3), (2, 0), (2, 2), 
[DBG]  SAT instance and solver created.
Currently solving
Instance name: scen
Map name: map
Encoding used: disappear_at_goal
SAT solver used: Kissat
Optimizing function: sum of costs
Number of agents: 3
Mks LB: 1
SoC LB: 3
Delta: 0
Remaining time: 300000 [ms]

Found plan [agents = 3] [timesteps = 1]
Agent #0 : 21 
Agent #1 : 9 
Agent #2 : 11 

[STAT] Solver returned: 0
[DBG]  Agent (index) 80 | New local path (submap idx):
[DBG]  21 
[DBG]  Agent (index) 82 | New local path (submap idx):
[DBG]  9 
[DBG]  Agent (index) 141 | New local path (submap idx):
[DBG]  11 
[DBG]  Update the agent path 80 | Original local length: 1 | New local length: 1
[DBG]  agent 80 t=0 => decoded (sx,sy)=(4,3) => global_id=109
[DBG]  Complete path of agent 80:
[DBG]    Original: 111 110 109 141 173 172 204 236 235 234 266 265 264 296 295 294 293 325 357 356 388 387 419 418 
[DBG]    New:     111 110 109 141 173 172 204 236 235 234 266 265 264 296 295 294 293 325 357 356 388 387 419 418 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 111 110 
[DBG]    Local path (in submap): 109 
[DBG]    Suffix (out of submap): 141 173 172 204 236 235 234 266 265 264 296 295 294 293 325 357 356 388 387 419 418 
[DBG]  Original agent path length 80 je: 24
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 0: 111, 110, 109, 141, 173, 172, 204, 236, 235, 234, 266, 265, 264, 296, 295, 294, 293, 325, 357, 356, 388, 387, 419, 418, 
[DBG]  Path for agent 80 updated, resulting length: 24
[DBG]  Update the agent path 82 | Original local length: 1 | New local length: 1
[DBG]  agent 82 t=0 => decoded (sx,sy)=(2,0) => global_id=42
[DBG]  Complete path of agent 82:
[DBG]    Original: 75 43 42 41 40 72 104 136 137 138 139 140 172 173 205 237 269 301 333 365 366 367 366 398 
[DBG]    New:     75 43 42 41 40 72 104 136 137 138 139 140 172 173 205 237 269 301 333 365 366 367 366 398 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 75 43 
[DBG]    Local path (in submap): 42 
[DBG]    Suffix (out of submap): 41 40 72 104 136 137 138 139 140 172 173 205 237 269 301 333 365 366 367 366 398 
[DBG]  Original agent path length 82 je: 24
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 1: 75, 43, 42, 41, 40, 72, 104, 136, 137, 138, 139, 140, 172, 173, 205, 237, 269, 301, 333, 365, 366, 367, 366, 398, 
[DBG]  Path for agent 82 updated, resulting length: 24
[DBG]  Update the agent path 141 | Original local length: 1 | New local length: 1
[DBG]  agent 141 t=0 => decoded (sx,sy)=(2,2) => global_id=44
[DBG]  Complete path of agent 141:
[DBG]    Original: 46 45 44 
[DBG]    New:     46 45 44 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 46 45 
[DBG]    Local path (in submap): 44 
[DBG]    Suffix (out of submap): 
[DBG]  Original agent path length 141 je: 3
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 2: 46, 45, 44, 
[DBG]  Path for agent 141 updated, resulting length: 3
[DBG]  Paths successfully updated.
[DBG]  (LNS.cpp) New path for agent 80: 
[DBG]  111, 110, 109, 141, 173, 172, 204, 236, 235, 234, 266, 265, 264, 296, 295, 294, 293, 325, 357, 356, 388, 387, 419, 418, 
[DBG]  (LNS.cpp) New path for agent 82: 
[DBG]  75, 43, 42, 41, 40, 72, 104, 136, 137, 138, 139, 140, 172, 173, 205, 237, 269, 301, 333, 365, 366, 367, 366, 398, 
[DBG]  (LNS.cpp) New path for agent 141: 
[DBG]  46, 45, 44, 
[DBG]  component_weights = {0.307832, 0.171344, 0.179183, 0.341641}
[DBG]  opSuccess value: 1
[STAT] neighbor.sum_of_costs before recomputation: 48
[STAT] neighbor.old_sum_of_costs before recomputation: 48
[STAT] sum_of_costs before recomputation: 4398
[DBG]  Validate solution immediately after SAT success.
[DBG]  No problems after SAT replan.
[DBG]  Recomputing sum_of_cost by dividing neighbor.sum_of_costs and neighbor.old_sum_of_costs
[STAT] sum_of_costs after recomputation: 4398
[STAT] Iteration 65
[DBG]  Using SAT operator (destroy+repair SAT).
[DBG]  ====================
[DBG]  SAT destroy operator called.
[DBG]  SAT heuristic: 2
[DBG]  key_agent_id: 149
[DBG]  key_agent_id global path length: 30
[DBG]  Submap content (global positions):
[DBG]  504 505 506 507 508 
[DBG]  536 537 538 539 540 
[DBG]  568 569 570 571 572 
[DBG]  600 601 602 603 604 
[DBG]  632 633 634 635 636 
[DBG]  Map content with agents and obstacles:
[DBG]  A A . . . 
[DBG]  X X . . . 
[DBG]  X . A A . 
[DBG]  A . . A . 
[DBG]  A . X A . 
[DBG]  content of the map structure that we pass to the SAT solver:
[DBG]  1  1  1  1  1  
[DBG]  -1  -1  1  1  1  
[DBG]  -1  1  1  1  1  
[DBG]  1  1  1  1  1  
[DBG]  1  1  -1  1  1  
[DBG]  Identifying agents in a submap for rescheduling (when key_agent is there at the time 2):
[DBG]  Agent 17 found intervals in the sub-map:
[DBG]   [1..7]
[DBG]  Agent 17 (interval in submap: [1..7]) contains time 2, added to replan.
[DBG]  Agent 70 found intervals in the sub-map:
[DBG]   [0..0] [2..2]
[DBG]  Agent 70 (interval in submap: [2..2]) contains time 2, added to replan.
[DBG]  Agent 92 found intervals in the sub-map:
[DBG]   [1..6]
[DBG]  Agent 92 (interval in submap: [1..6]) contains time 2, added to replan.
[DBG]  Agent 123 found intervals in the sub-map:
[DBG]   [1..8]
[DBG]  Agent 123 (interval in submap: [1..8]) contains time 2, added to replan.
[DBG]  Agent 124 found intervals in the sub-map:
[DBG]   [2..2]
[DBG]  Agent 124 (interval in submap: [2..2]) contains time 2, added to replan.
[DBG]  Agent 128 found intervals in the sub-map:
[DBG]   [0..7]
[DBG]  Agent 128 (interval in submap: [0..7]) contains time 2, added to replan.
[DBG]  Agent 137 found intervals in the sub-map:
[DBG]   [0..3]
[DBG]  Agent 137 (interval in submap: [0..3]) contains time 2, added to replan.
[DBG]  Agent 149 found intervals in the sub-map:
[DBG]   [0..5]
[DBG]  Agent 149 (interval in submap: [0..5]) contains time 2, added to replan.
[DBG]  Agent 17 | Start (global): 600 -> (local): (3, 0) at time 2 | Goal (global): 572 -> (local): (2, 4) at time 7
[DBG]  Agent 70 | Start (global): 632 -> (local): (4, 0) at time 2 | Goal (global): 632 -> (local): (4, 0) at time 2
[DBG]  Agent 92 | Start (global): 603 -> (local): (3, 3) at time 2 | Goal (global): 506 -> (local): (0, 2) at time 6
[DBG]  Agent 123 | Start (global): 635 -> (local): (4, 3) at time 2 | Goal (global): 505 -> (local): (0, 1) at time 8
[DBG]  Agent 124 | Start (global): 504 -> (local): (0, 0) at time 2 | Goal (global): 504 -> (local): (0, 0) at time 2
[DBG]  Agent 128 | Start (global): 571 -> (local): (2, 3) at time 2 | Goal (global): 504 -> (local): (0, 0) at time 7
[DBG]  Agent 137 | Start (global): 505 -> (local): (0, 1) at time 2 | Goal (global): 504 -> (local): (0, 0) at time 3
[DBG]  Agent 149 | Start (global): 570 -> (local): (2, 2) at time 2 | Goal (global): 505 -> (local): (0, 1) at time 5
[DBG]  [REPAIR] SAT destroy operator called.
[DBG]  [REPAIR] SAT operator â€“ launching subproblem FOR OPTIMIZATION.
[DBG]  Creating local paths (sx, sy) in the submap for T_sync = 2
[DBG]    Agent 17 (global paths from T=2 to 7) has local path: (3,0) (3,1) (2,1) (2,2) (2,3) (2,4) 
[DBG]    Agent 70 (global paths from T=2 to 2) has local path: (4,0) 
[DBG]    Agent 92 (global paths from T=2 to 6) has local path: (3,3) (2,3) (1,3) (1,2) (0,2) 
[DBG]    Agent 123 (global paths from T=2 to 8) has local path: (4,3) (3,3) (2,3) (1,3) (0,3) (0,2) (0,1) 
[DBG]    Agent 124 (global paths from T=2 to 2) has local path: (0,0) 
[DBG]    Agent 128 (global paths from T=2 to 7) has local path: (2,3) (1,3) (1,2) (0,2) (0,1) (0,0) 
[DBG]    Agent 137 (global paths from T=2 to 3) has local path: (0,1) (0,0) 
[DBG]    Agent 149 (global paths from T=2 to 5) has local path: (2,2) (1,2) (0,2) (0,1) 
[DBG]  Checking input data for SAT solver:
[DBG]    - Number of agents to replan: 8
[DBG]  Agent 17 has the original local path length: 6 => Start (3,0), Goal (2,4)
[DBG]  Agent 70 has the original local path length: 1 => Start (4,0), Goal (4,0)
[DBG]  Agent 92 has the original local path length: 5 => Start (3,3), Goal (0,2)
[DBG]  Agent 123 has the original local path length: 7 => Start (4,3), Goal (0,1)
[DBG]  Agent 124 has the original local path length: 1 => Start (0,0), Goal (0,0)
[DBG]  Agent 128 has the original local path length: 6 => Start (2,3), Goal (0,0)
[DBG]  Agent 137 has the original local path length: 2 => Start (0,1), Goal (0,0)
[DBG]  Agent 149 has the original local path length: 4 => Start (2,2), Goal (0,1)
[DBG]  Start position: (3, 0), (4, 0), (3, 3), (4, 3), (0, 0), (2, 3), (0, 1), (2, 2), 
[DBG]  Goal position: (2, 4), (4, 0), (0, 2), (0, 1), (0, 0), (0, 0), (0, 0), (0, 1), 
[DBG]  SAT instance and solver created.
Currently solving
Instance name: scen
Map name: map
Encoding used: disappear_at_goal
SAT solver used: Kissat
Optimizing function: sum of costs
Number of agents: 8
Mks LB: 7
SoC LB: 32
Delta: 0
Remaining time: 300000 [ms]

Vertex conflict! Agents 0, 1, timestep 6, location 0
Vertex conflict! Agents 0, 2, timestep 6, location 0
Vertex conflict! Agents 0, 4, timestep 6, location 0
Vertex conflict! Agents 0, 5, timestep 6, location 0
Vertex conflict! Agents 0, 6, timestep 6, location 0
Vertex conflict! Agents 0, 7, timestep 6, location 0
Vertex conflict! Agents 1, 2, timestep 5, location 0
Swapping conflict! Agents 1, 2, timestep 5, edge (0,0)
Vertex conflict! Agents 1, 2, timestep 6, location 0
Vertex conflict! Agents 1, 4, timestep 1, location 0
Swapping conflict! Agents 1, 4, timestep 1, edge (0,0)
Vertex conflict! Agents 1, 4, timestep 2, location 0
Swapping conflict! Agents 1, 4, timestep 2, edge (0,0)
Vertex conflict! Agents 1, 4, timestep 3, location 0
Swapping conflict! Agents 1, 4, timestep 3, edge (0,0)
Vertex conflict! Agents 1, 4, timestep 4, location 0
Swapping conflict! Agents 1, 4, timestep 4, edge (0,0)
Vertex conflict! Agents 1, 4, timestep 5, location 0
Swapping conflict! Agents 1, 4, timestep 5, edge (0,0)
Vertex conflict! Agents 1, 4, timestep 6, location 0
Vertex conflict! Agents 1, 5, timestep 5, location 0
Swapping conflict! Agents 1, 5, timestep 5, edge (0,0)
Vertex conflict! Agents 1, 5, timestep 6, location 0
Vertex conflict! Agents 1, 6, timestep 1, location 0
Swapping conflict! Agents 1, 6, timestep 1, edge (0,0)
Vertex conflict! Agents 1, 6, timestep 2, location 0
Swapping conflict! Agents 1, 6, timestep 2, edge (0,0)
Vertex conflict! Agents 1, 6, timestep 3, location 0
Swapping conflict! Agents 1, 6, timestep 3, edge (0,0)
Vertex conflict! Agents 1, 6, timestep 4, location 0
Swapping conflict! Agents 1, 6, timestep 4, edge (0,0)
Vertex conflict! Agents 1, 6, timestep 5, location 0
Swapping conflict! Agents 1, 6, timestep 5, edge (0,0)
Vertex conflict! Agents 1, 6, timestep 6, location 0
Vertex conflict! Agents 1, 7, timestep 4, location 0
Swapping conflict! Agents 1, 7, timestep 4, edge (0,0)
Vertex conflict! Agents 1, 7, timestep 5, location 0
Swapping conflict! Agents 1, 7, timestep 5, edge (0,0)
Vertex conflict! Agents 1, 7, timestep 6, location 0
Vertex conflict! Agents 2, 4, timestep 5, location 0
Swapping conflict! Agents 2, 4, timestep 5, edge (0,0)
Vertex conflict! Agents 2, 4, timestep 6, location 0
Vertex conflict! Agents 2, 5, timestep 5, location 0
Swapping conflict! Agents 2, 5, timestep 5, edge (0,0)
Vertex conflict! Agents 2, 5, timestep 6, location 0
Vertex conflict! Agents 2, 6, timestep 5, location 0
Swapping conflict! Agents 2, 6, timestep 5, edge (0,0)
Vertex conflict! Agents 2, 6, timestep 6, location 0
Vertex conflict! Agents 2, 7, timestep 5, location 0
Swapping conflict! Agents 2, 7, timestep 5, edge (0,0)
Vertex conflict! Agents 2, 7, timestep 6, location 0
Vertex conflict! Agents 4, 5, timestep 5, location 0
Swapping conflict! Agents 4, 5, timestep 5, edge (0,0)
Vertex conflict! Agents 4, 5, timestep 6, location 0
Vertex conflict! Agents 4, 6, timestep 1, location 0
Swapping conflict! Agents 4, 6, timestep 1, edge (0,0)
Vertex conflict! Agents 4, 6, timestep 2, location 0
Swapping conflict! Agents 4, 6, timestep 2, edge (0,0)
Vertex conflict! Agents 4, 6, timestep 3, location 0
Swapping conflict! Agents 4, 6, timestep 3, edge (0,0)
Vertex conflict! Agents 4, 6, timestep 4, location 0
Swapping conflict! Agents 4, 6, timestep 4, edge (0,0)
Vertex conflict! Agents 4, 6, timestep 5, location 0
Swapping conflict! Agents 4, 6, timestep 5, edge (0,0)
Vertex conflict! Agents 4, 6, timestep 6, location 0
Vertex conflict! Agents 4, 7, timestep 4, location 0
Swapping conflict! Agents 4, 7, timestep 4, edge (0,0)
Vertex conflict! Agents 4, 7, timestep 5, location 0
Swapping conflict! Agents 4, 7, timestep 5, edge (0,0)
Vertex conflict! Agents 4, 7, timestep 6, location 0
Vertex conflict! Agents 5, 6, timestep 5, location 0
Swapping conflict! Agents 5, 6, timestep 5, edge (0,0)
Vertex conflict! Agents 5, 6, timestep 6, location 0
Vertex conflict! Agents 5, 7, timestep 5, location 0
Swapping conflict! Agents 5, 7, timestep 5, edge (0,0)
Vertex conflict! Agents 5, 7, timestep 6, location 0
Vertex conflict! Agents 6, 7, timestep 4, location 0
Swapping conflict! Agents 6, 7, timestep 4, edge (0,0)
Vertex conflict! Agents 6, 7, timestep 5, location 0
Swapping conflict! Agents 6, 7, timestep 5, edge (0,0)
Vertex conflict! Agents 6, 7, timestep 6, location 0
Found plan [agents = 8] [timesteps = 7]
Agent #0 : 12 13 14 15 16 11 0 
Agent #1 : 17 0 0 0 0 0 0 
Agent #2 : 15 14 9 5 2 0 0 
Agent #3 : 19 15 10 9 5 2 1 
Agent #4 : 0 0 0 0 0 0 0 
Agent #5 : 10 9 5 2 1 0 0 
Agent #6 : 1 0 0 0 0 0 0 
Agent #7 : 9 5 2 1 0 0 0 

[STAT] Solver returned: 0
[DBG]  Agent (index) 17 | New local path (submap idx):
[DBG]  12 13 14 15 16 11 
[DBG]  Agent (index) 70 | New local path (submap idx):
[DBG]  17 
[DBG]  Agent (index) 92 | New local path (submap idx):
[DBG]  15 14 9 5 2 
[DBG]  Agent (index) 123 | New local path (submap idx):
[DBG]  19 15 10 9 5 2 1 
[DBG]  Agent (index) 124 | New local path (submap idx):
[DBG]  0 
[DBG]  Agent (index) 128 | New local path (submap idx):
[DBG]  10 9 5 2 1 0 
[DBG]  Agent (index) 137 | New local path (submap idx):
[DBG]  1 0 
[DBG]  Agent (index) 149 | New local path (submap idx):
[DBG]  9 5 2 1 
[DBG]  Update the agent path 17 | Original local length: 6 | New local length: 6
[DBG]  agent 17 t=0 => decoded (sx,sy)=(3,0) => global_id=600
[DBG]  agent 17 t=1 => decoded (sx,sy)=(3,1) => global_id=601
[DBG]  agent 17 t=2 => decoded (sx,sy)=(3,2) => global_id=602
[DBG]  agent 17 t=3 => decoded (sx,sy)=(3,3) => global_id=603
[DBG]  agent 17 t=4 => decoded (sx,sy)=(3,4) => global_id=604
[DBG]  agent 17 t=5 => decoded (sx,sy)=(2,4) => global_id=572
[DBG]  Complete path of agent 17:
[DBG]    Original: 664 632 600 601 569 570 571 572 
[DBG]    New:     664 632 600 601 602 603 604 572 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 664 632 
[DBG]    Local path (in submap): 600 601 602 603 604 572 
[DBG]    Suffix (out of submap): 
[DBG]  Original agent path length 17 je: 8
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 0: 664, 632, 600, 601, 602, 603, 604, 572, 
[DBG]  Path for agent 17 updated, resulting length: 8
[DBG]  Update the agent path 70 | Original local length: 1 | New local length: 1
[DBG]  agent 70 t=0 => decoded (sx,sy)=(4,0) => global_id=632
[DBG]  Complete path of agent 70:
[DBG]    Original: 632 631 632 664 696 728 729 761 793 792 824 823 822 821 820 819 851 850 882 881 880 912 944 976 975 974 
[DBG]    New:     632 631 632 664 696 728 729 761 793 792 824 823 822 821 820 819 851 850 882 881 880 912 944 976 975 974 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 632 631 
[DBG]    Local path (in submap): 632 
[DBG]    Suffix (out of submap): 664 696 728 729 761 793 792 824 823 822 821 820 819 851 850 882 881 880 912 944 976 975 974 
[DBG]  Original agent path length 70 je: 26
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 1: 632, 631, 632, 664, 696, 728, 729, 761, 793, 792, 824, 823, 822, 821, 820, 819, 851, 850, 882, 881, 880, 912, 944, 976, 975, 974, 
[DBG]  Path for agent 70 updated, resulting length: 26
[DBG]  Update the agent path 92 | Original local length: 5 | New local length: 5
[DBG]  agent 92 t=0 => decoded (sx,sy)=(3,3) => global_id=603
[DBG]  agent 92 t=1 => decoded (sx,sy)=(3,2) => global_id=602
[DBG]  agent 92 t=2 => decoded (sx,sy)=(2,2) => global_id=570
[DBG]  agent 92 t=3 => decoded (sx,sy)=(1,2) => global_id=538
[DBG]  agent 92 t=4 => decoded (sx,sy)=(0,2) => global_id=506
[DBG]  Complete path of agent 92:
[DBG]    Original: 667 635 603 571 539 538 506 474 473 441 440 439 438 437 405 404 403 371 339 338 306 274 273 241 209 208 207 206 205 173 141 140 139 138 137 136 135 134 133 165 164 163 131 99 98 
[DBG]    New:     667 635 603 602 570 538 506 474 473 441 440 439 438 437 405 404 403 371 339 338 306 274 273 241 209 208 207 206 205 173 141 140 139 138 137 136 135 134 133 165 164 163 131 99 98 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 667 635 
[DBG]    Local path (in submap): 603 602 570 538 506 
[DBG]    Suffix (out of submap): 474 473 441 440 439 438 437 405 404 403 371 339 338 306 274 273 241 209 208 207 206 205 173 141 140 139 138 137 136 135 134 133 165 164 163 131 99 98 
[DBG]  Original agent path length 92 je: 45
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 2: 667, 635, 603, 602, 570, 538, 506, 474, 473, 441, 440, 439, 438, 437, 405, 404, 403, 371, 339, 338, 306, 274, 273, 241, 209, 208, 207, 206, 205, 173, 141, 140, 139, 138, 137, 136, 135, 134, 133, 165, 164, 163, 131, 99, 98, 
[DBG]  Path for agent 92 updated, resulting length: 45
[DBG]  Update the agent path 123 | Original local length: 7 | New local length: 7
[DBG]  agent 123 t=0 => decoded (sx,sy)=(4,3) => global_id=635
[DBG]  agent 123 t=1 => decoded (sx,sy)=(3,3) => global_id=603
[DBG]  agent 123 t=2 => decoded (sx,sy)=(2,3) => global_id=571
[DBG]  agent 123 t=3 => decoded (sx,sy)=(2,2) => global_id=570
[DBG]  agent 123 t=4 => decoded (sx,sy)=(1,2) => global_id=538
[DBG]  agent 123 t=5 => decoded (sx,sy)=(0,2) => global_id=506
[DBG]  agent 123 t=6 => decoded (sx,sy)=(0,1) => global_id=505
[DBG]  Complete path of agent 123:
[DBG]    Original: 637 636 635 603 571 539 507 506 505 473 472 440 439 407 375 343 311 279 247 215 214 213 212 180 179 178 177 176 144 112 113 
[DBG]    New:     637 636 635 603 571 570 538 506 505 473 472 440 439 407 375 343 311 279 247 215 214 213 212 180 179 178 177 176 144 112 113 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 637 636 
[DBG]    Local path (in submap): 635 603 571 570 538 506 505 
[DBG]    Suffix (out of submap): 473 472 440 439 407 375 343 311 279 247 215 214 213 212 180 179 178 177 176 144 112 113 
[DBG]  Original agent path length 123 je: 31
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 3: 637, 636, 635, 603, 571, 570, 538, 506, 505, 473, 472, 440, 439, 407, 375, 343, 311, 279, 247, 215, 214, 213, 212, 180, 179, 178, 177, 176, 144, 112, 113, 
[DBG]  Path for agent 123 updated, resulting length: 31
[DBG]  Update the agent path 124 | Original local length: 1 | New local length: 1
[DBG]  agent 124 t=0 => decoded (sx,sy)=(0,0) => global_id=504
[DBG]  Complete path of agent 124:
[DBG]    Original: 502 503 504 472 473 474 475 476 477 445 413 381 349 317 285 284 252 220 188 189 157 158 126 127 
[DBG]    New:     502 503 504 472 473 474 475 476 477 445 413 381 349 317 285 284 252 220 188 189 157 158 126 127 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 502 503 
[DBG]    Local path (in submap): 504 
[DBG]    Suffix (out of submap): 472 473 474 475 476 477 445 413 381 349 317 285 284 252 220 188 189 157 158 126 127 
[DBG]  Original agent path length 124 je: 24
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 4: 502, 503, 504, 472, 473, 474, 475, 476, 477, 445, 413, 381, 349, 317, 285, 284, 252, 220, 188, 189, 157, 158, 126, 127, 
[DBG]  Path for agent 124 updated, resulting length: 24
[DBG]  Update the agent path 128 | Original local length: 6 | New local length: 6
[DBG]  agent 128 t=0 => decoded (sx,sy)=(2,3) => global_id=571
[DBG]  agent 128 t=1 => decoded (sx,sy)=(2,2) => global_id=570
[DBG]  agent 128 t=2 => decoded (sx,sy)=(1,2) => global_id=538
[DBG]  agent 128 t=3 => decoded (sx,sy)=(0,2) => global_id=506
[DBG]  agent 128 t=4 => decoded (sx,sy)=(0,1) => global_id=505
[DBG]  agent 128 t=5 => decoded (sx,sy)=(0,0) => global_id=504
[DBG]  Complete path of agent 128:
[DBG]    Original: 604 572 571 539 538 506 505 504 503 502 470 469 468 467 466 465 465 464 463 431 430 429 428 460 459 458 490 522 521 520 519 551 550 549 548 547 
[DBG]    New:     604 572 571 570 538 506 505 504 503 502 470 469 468 467 466 465 465 464 463 431 430 429 428 460 459 458 490 522 521 520 519 551 550 549 548 547 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 604 572 
[DBG]    Local path (in submap): 571 570 538 506 505 504 
[DBG]    Suffix (out of submap): 503 502 470 469 468 467 466 465 465 464 463 431 430 429 428 460 459 458 490 522 521 520 519 551 550 549 548 547 
[DBG]  Original agent path length 128 je: 36
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 5: 604, 572, 571, 570, 538, 506, 505, 504, 503, 502, 470, 469, 468, 467, 466, 465, 465, 464, 463, 431, 430, 429, 428, 460, 459, 458, 490, 522, 521, 520, 519, 551, 550, 549, 548, 547, 
[DBG]  Path for agent 128 updated, resulting length: 36
[DBG]  Update the agent path 137 | Original local length: 2 | New local length: 2
[DBG]  agent 137 t=0 => decoded (sx,sy)=(0,1) => global_id=505
[DBG]  agent 137 t=1 => decoded (sx,sy)=(0,0) => global_id=504
[DBG]  Complete path of agent 137:
[DBG]    Original: 538 506 505 504 503 502 501 469 468 467 466 465 433 432 431 431 463 462 494 526 525 524 523 522 522 521 520 519 551 550 582 581 613 645 644 676 675 707 739 738 737 769 801 800 832 864 865 897 898 930 931 932 
[DBG]    New:     538 506 505 504 503 502 501 469 468 467 466 465 433 432 431 431 463 462 494 526 525 524 523 522 522 521 520 519 551 550 582 581 613 645 644 676 675 707 739 738 737 769 801 800 832 864 865 897 898 930 931 932 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 538 506 
[DBG]    Local path (in submap): 505 504 
[DBG]    Suffix (out of submap): 503 502 501 469 468 467 466 465 433 432 431 431 463 462 494 526 525 524 523 522 522 521 520 519 551 550 582 581 613 645 644 676 675 707 739 738 737 769 801 800 832 864 865 897 898 930 931 932 
[DBG]  Original agent path length 137 je: 52
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 6: 538, 506, 505, 504, 503, 502, 501, 469, 468, 467, 466, 465, 433, 432, 431, 431, 463, 462, 494, 526, 525, 524, 523, 522, 522, 521, 520, 519, 551, 550, 582, 581, 613, 645, 644, 676, 675, 707, 739, 738, 737, 769, 801, 800, 832, 864, 865, 897, 898, 930, 931, 932, 
[DBG]  Path for agent 137 updated, resulting length: 52
[DBG]  Update the agent path 149 | Original local length: 4 | New local length: 4
[DBG]  agent 149 t=0 => decoded (sx,sy)=(2,2) => global_id=570
[DBG]  agent 149 t=1 => decoded (sx,sy)=(1,2) => global_id=538
[DBG]  agent 149 t=2 => decoded (sx,sy)=(0,2) => global_id=506
[DBG]  agent 149 t=3 => decoded (sx,sy)=(0,1) => global_id=505
[DBG]  Complete path of agent 149:
[DBG]    Original: 603 602 570 538 506 505 473 472 440 408 407 406 405 373 341 340 339 338 306 274 273 241 240 208 176 144 112 111 79 47 
[DBG]    New:     603 602 570 538 506 505 473 472 440 408 407 406 405 373 341 340 339 338 306 274 273 241 240 208 176 144 112 111 79 47 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 603 602 
[DBG]    Local path (in submap): 570 538 506 505 
[DBG]    Suffix (out of submap): 473 472 440 408 407 406 405 373 341 340 339 338 306 274 273 241 240 208 176 144 112 111 79 47 
[DBG]  Original agent path length 149 je: 30
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 7: 603, 602, 570, 538, 506, 505, 473, 472, 440, 408, 407, 406, 405, 373, 341, 340, 339, 338, 306, 274, 273, 241, 240, 208, 176, 144, 112, 111, 79, 47, 
[DBG]  Path for agent 149 updated, resulting length: 30
[DBG]  Paths successfully updated.
[DBG]  (LNS.cpp) New path for agent 17: 
[DBG]  664, 632, 600, 601, 602, 603, 604, 572, 
[DBG]  (LNS.cpp) New path for agent 70: 
[DBG]  632, 631, 632, 664, 696, 728, 729, 761, 793, 792, 824, 823, 822, 821, 820, 819, 851, 850, 882, 881, 880, 912, 944, 976, 975, 974, 
[DBG]  (LNS.cpp) New path for agent 92: 
[DBG]  667, 635, 603, 602, 570, 538, 506, 474, 473, 441, 440, 439, 438, 437, 405, 404, 403, 371, 339, 338, 306, 274, 273, 241, 209, 208, 207, 206, 205, 173, 141, 140, 139, 138, 137, 136, 135, 134, 133, 165, 164, 163, 131, 99, 98, 
[DBG]  (LNS.cpp) New path for agent 123: 
[DBG]  637, 636, 635, 603, 571, 570, 538, 506, 505, 473, 472, 440, 439, 407, 375, 343, 311, 279, 247, 215, 214, 213, 212, 180, 179, 178, 177, 176, 144, 112, 113, 
[DBG]  (LNS.cpp) New path for agent 124: 
[DBG]  502, 503, 504, 472, 473, 474, 475, 476, 477, 445, 413, 381, 349, 317, 285, 284, 252, 220, 188, 189, 157, 158, 126, 127, 
[DBG]  (LNS.cpp) New path for agent 128: 
[DBG]  604, 572, 571, 570, 538, 506, 505, 504, 503, 502, 470, 469, 468, 467, 466, 465, 465, 464, 463, 431, 430, 429, 428, 460, 459, 458, 490, 522, 521, 520, 519, 551, 550, 549, 548, 547, 
[DBG]  (LNS.cpp) New path for agent 137: 
[DBG]  538, 506, 505, 504, 503, 502, 501, 469, 468, 467, 466, 465, 433, 432, 431, 431, 463, 462, 494, 526, 525, 524, 523, 522, 522, 521, 520, 519, 551, 550, 582, 581, 613, 645, 644, 676, 675, 707, 739, 738, 737, 769, 801, 800, 832, 864, 865, 897, 898, 930, 931, 932, 
[DBG]  (LNS.cpp) New path for agent 149: 
[DBG]  603, 602, 570, 538, 506, 505, 473, 472, 440, 408, 407, 406, 405, 373, 341, 340, 339, 338, 306, 274, 273, 241, 240, 208, 176, 144, 112, 111, 79, 47, 
[DBG]  component_weights = {0.312153, 0.170275, 0.178064, 0.339508}
[DBG]  opSuccess value: 1
[STAT] neighbor.sum_of_costs before recomputation: 244
[STAT] neighbor.old_sum_of_costs before recomputation: 244
[STAT] sum_of_costs before recomputation: 4398
[DBG]  Validate solution immediately after SAT success.
[WARNING] Problem after SAT: Vertex conflict between agents 17 and 64 at location 603 at timestep 5
[DBG]  Attempting immediate repair via init_lns because problem occurred after SAT (should be applied only for conflicts...).
[DBG]  Passing 150 agents to init_lns (skip=true).
[DBG]  path_table contents for selected agents (neighbor.agents):
[DBG]    Agent 17 => controlling path length=8
[DBG]    Agent 70 => controlling path length=26
[DBG]    Agent 92 => controlling path length=45
[DBG]    Agent 123 => controlling path length=31
[DBG]    Agent 124 => controlling path length=24
[DBG]    Agent 128 => controlling path length=36
[DBG]    Agent 137 => controlling path length=52
[DBG]    Agent 149 => controlling path length=30
[DBG]  hodnota skip_initial_solution=1
[DBG]  We skip initialSolution => call buildCollisionData()
[DBG]  buildCollisionData() called â€“ skip_initial_solution case.
[DBG]  Agents.size()=150, collision_graph.size()=150
[DBG]  agent 17 => updateCollidingPairs => foundCollision
[DBG]  agent 64 => updateCollidingPairs => foundCollision
[DBG]  Conflicting agent pairs:
[DBG]  agent 17 is in conflict with agent 64
[DBG]  buildCollisionData() => sum_of_costs=4398, num_of_colliding_pairs=1
[DBG]  buildCollisionData done => sum_of_costs=4398, num_of_colliding_pairs=1
[DBG]  sum_of_cost hodnota: 4398
[DBG]  After skip/init build => iteration_stats.back(): sum_of_costs=4398, collisions=1
[DEBUG] Using default neighbor generation strategy for conflicts: 2
[DEBUG] Using default neighbor generation strategy for conflicts: 2
[DEBUG] Using default neighbor generation strategy for conflicts: 1
	InitLNS(PP): runtime = 0.0118859, iterations = 4, colliding pairs = 0, initial colliding pairs = 1, solution cost = 4399, initial solution cost = 4398, failed iterations = 0
[DBG]  init_lns->sum_of_costs after init_lns->run: 4399
[DBG]  sum_of_costs after assignment from init_lns->run: 4399
[DBG]  Recomputing sum_of_cost by dividing neighbor.sum_of_costs and neighbor.old_sum_of_costs
[STAT] sum_of_costs after recomputation: 4399
[STAT] Iteration 66
[DBG]  Using SAT operator (destroy+repair SAT).
[DBG]  ====================
[DBG]  SAT destroy operator called.
[DBG]  SAT heuristic: 2
[DBG]  key_agent_id: 107
[DBG]  key_agent_id global path length: 39
[DBG]  Submap content (global positions):
[DBG]  515 516 517 518 519 
[DBG]  547 548 549 550 551 
[DBG]  579 580 581 582 583 
[DBG]  611 612 613 614 615 
[DBG]  643 644 645 646 647 
[DBG]  Map content with agents and obstacles:
[DBG]  . . . X . 
[DBG]  . . . A . 
[DBG]  . . A . . 
[DBG]  . . . X A 
[DBG]  X . . A A 
[DBG]  content of the map structure that we pass to the SAT solver:
[DBG]  1  1  1  -1  1  
[DBG]  1  1  1  1  1  
[DBG]  1  1  1  1  1  
[DBG]  1  1  1  -1  1  
[DBG]  -1  1  1  1  1  
[DBG]  Identifying agents in a submap for rescheduling (when key_agent is there at the time 29):
[DBG]  Agent 107 found intervals in the sub-map:
[DBG]   [25..31]
[DBG]  Agent 107 (interval in submap: [25..31]) contains time 29, added to replan.
[DBG]  Agent 118 found intervals in the sub-map:
[DBG]  
[DBG]  Agent 118 is not in sub-map at time 29 (intervals: 
[DBG]  )
[DBG]  Agent 125 found intervals in the sub-map:
[DBG]   [28..29]
[DBG]  Agent 125 (interval in submap: [28..29]) contains time 29, added to replan.
[DBG]  Agent 131 found intervals in the sub-map:
[DBG]   [26..29]
[DBG]  Agent 131 (interval in submap: [26..29]) contains time 29, added to replan.
[DBG]  Agent 137 found intervals in the sub-map:
[DBG]   [27..34]
[DBG]  Agent 137 (interval in submap: [27..34]) contains time 29, added to replan.
[DBG]  Agent 145 found intervals in the sub-map:
[DBG]   [24..30]
[DBG]  Agent 145 (interval in submap: [24..30]) contains time 29, added to replan.
[DBG]  Agent 107 | Start (global): 581 -> (local): (2, 2) at time 29 | Goal (global): 645 -> (local): (4, 2) at time 31
[DBG]  Agent 125 | Start (global): 646 -> (local): (4, 3) at time 29 | Goal (global): 646 -> (local): (4, 3) at time 29
[DBG]  Agent 131 | Start (global): 615 -> (local): (3, 4) at time 29 | Goal (global): 615 -> (local): (3, 4) at time 29
[DBG]  Agent 137 | Start (global): 550 -> (local): (1, 3) at time 29 | Goal (global): 644 -> (local): (4, 1) at time 34
[DBG]  Agent 145 | Start (global): 647 -> (local): (4, 4) at time 29 | Goal (global): 646 -> (local): (4, 3) at time 30
[DBG]  [REPAIR] SAT destroy operator called.
[DBG]  [REPAIR] SAT operator â€“ launching subproblem FOR OPTIMIZATION.
[DBG]  Creating local paths (sx, sy) in the submap for T_sync = 29
[DBG]    Agent 107 (global paths from T=29 to 31) has local path: (2,2) (3,2) (4,2) 
[DBG]    Agent 125 (global paths from T=29 to 29) has local path: (4,3) 
[DBG]    Agent 131 (global paths from T=29 to 29) has local path: (3,4) 
[DBG]    Agent 137 (global paths from T=29 to 34) has local path: (1,3) (2,3) (2,2) (3,2) (4,2) (4,1) 
[DBG]    Agent 145 (global paths from T=29 to 30) has local path: (4,4) (4,3) 
[DBG]  Checking input data for SAT solver:
[DBG]    - Number of agents to replan: 5
[DBG]  Agent 107 has the original local path length: 3 => Start (2,2), Goal (4,2)
[DBG]  Agent 125 has the original local path length: 1 => Start (4,3), Goal (4,3)
[DBG]  Agent 131 has the original local path length: 1 => Start (3,4), Goal (3,4)
[DBG]  Agent 137 has the original local path length: 6 => Start (1,3), Goal (4,1)
[DBG]  Agent 145 has the original local path length: 2 => Start (4,4), Goal (4,3)
[DBG]  Start position: (2, 2), (4, 3), (3, 4), (1, 3), (4, 4), 
[DBG]  Goal position: (4, 2), (4, 3), (3, 4), (4, 1), (4, 3), 
[DBG]  SAT instance and solver created.
Currently solving
Instance name: scen
Map name: map
Encoding used: disappear_at_goal
SAT solver used: Kissat
Optimizing function: sum of costs
Number of agents: 5
Mks LB: 6
SoC LB: 13
Delta: 0
Remaining time: 300000 [ms]

Vertex conflict! Agents 0, 1, timestep 3, location 0
Swapping conflict! Agents 0, 1, timestep 3, edge (0,0)
Vertex conflict! Agents 0, 1, timestep 4, location 0
Swapping conflict! Agents 0, 1, timestep 4, edge (0,0)
Vertex conflict! Agents 0, 1, timestep 5, location 0
Vertex conflict! Agents 0, 2, timestep 3, location 0
Swapping conflict! Agents 0, 2, timestep 3, edge (0,0)
Vertex conflict! Agents 0, 2, timestep 4, location 0
Swapping conflict! Agents 0, 2, timestep 4, edge (0,0)
Vertex conflict! Agents 0, 2, timestep 5, location 0
Vertex conflict! Agents 0, 4, timestep 3, location 0
Swapping conflict! Agents 0, 4, timestep 3, edge (0,0)
Vertex conflict! Agents 0, 4, timestep 4, location 0
Swapping conflict! Agents 0, 4, timestep 4, edge (0,0)
Vertex conflict! Agents 0, 4, timestep 5, location 0
Vertex conflict! Agents 1, 2, timestep 1, location 0
Swapping conflict! Agents 1, 2, timestep 1, edge (0,0)
Vertex conflict! Agents 1, 2, timestep 2, location 0
Swapping conflict! Agents 1, 2, timestep 2, edge (0,0)
Vertex conflict! Agents 1, 2, timestep 3, location 0
Swapping conflict! Agents 1, 2, timestep 3, edge (0,0)
Vertex conflict! Agents 1, 2, timestep 4, location 0
Swapping conflict! Agents 1, 2, timestep 4, edge (0,0)
Vertex conflict! Agents 1, 2, timestep 5, location 0
Vertex conflict! Agents 1, 4, timestep 2, location 0
Swapping conflict! Agents 1, 4, timestep 2, edge (0,0)
Vertex conflict! Agents 1, 4, timestep 3, location 0
Swapping conflict! Agents 1, 4, timestep 3, edge (0,0)
Vertex conflict! Agents 1, 4, timestep 4, location 0
Swapping conflict! Agents 1, 4, timestep 4, edge (0,0)
Vertex conflict! Agents 1, 4, timestep 5, location 0
Vertex conflict! Agents 2, 4, timestep 2, location 0
Swapping conflict! Agents 2, 4, timestep 2, edge (0,0)
Vertex conflict! Agents 2, 4, timestep 3, location 0
Swapping conflict! Agents 2, 4, timestep 3, edge (0,0)
Vertex conflict! Agents 2, 4, timestep 4, location 0
Swapping conflict! Agents 2, 4, timestep 4, edge (0,0)
Vertex conflict! Agents 2, 4, timestep 5, location 0
Found plan [agents = 5] [timesteps = 6]
Agent #0 : 11 16 19 0 0 0 
Agent #1 : 20 0 0 0 0 0 
Agent #2 : 17 0 0 0 0 0 
Agent #3 : 7 12 11 16 19 18 
Agent #4 : 21 20 0 0 0 0 

[STAT] Solver returned: 0
[DBG]  Agent (index) 107 | New local path (submap idx):
[DBG]  11 16 19 
[DBG]  Agent (index) 125 | New local path (submap idx):
[DBG]  20 
[DBG]  Agent (index) 131 | New local path (submap idx):
[DBG]  17 
[DBG]  Agent (index) 137 | New local path (submap idx):
[DBG]  7 12 11 16 19 18 
[DBG]  Agent (index) 145 | New local path (submap idx):
[DBG]  21 20 
[DBG]  Update the agent path 107 | Original local length: 3 | New local length: 3
[DBG]  agent 107 t=0 => decoded (sx,sy)=(2,2) => global_id=581
[DBG]  agent 107 t=1 => decoded (sx,sy)=(3,2) => global_id=613
[DBG]  agent 107 t=2 => decoded (sx,sy)=(4,2) => global_id=645
[DBG]  Complete path of agent 107:
[DBG]    Original: 16 48 47 79 111 110 109 141 173 172 204 236 268 267 299 331 363 395 427 426 458 457 489 521 520 519 551 550 582 581 613 645 677 709 741 773 772 804 836 
[DBG]    New:     16 48 47 79 111 110 109 141 173 172 204 236 268 267 299 331 363 395 427 426 458 457 489 521 520 519 551 550 582 581 613 645 677 709 741 773 772 804 836 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 16 48 47 79 111 110 109 141 173 172 204 236 268 267 299 331 363 395 427 426 458 457 489 521 520 519 551 550 582 
[DBG]    Local path (in submap): 581 613 645 
[DBG]    Suffix (out of submap): 677 709 741 773 772 804 836 
[DBG]  Original agent path length 107 je: 39
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 0: 16, 48, 47, 79, 111, 110, 109, 141, 173, 172, 204, 236, 268, 267, 299, 331, 363, 395, 427, 426, 458, 457, 489, 521, 520, 519, 551, 550, 582, 581, 613, 645, 677, 709, 741, 773, 772, 804, 836, 
[DBG]  Path for agent 107 updated, resulting length: 39
[DBG]  Update the agent path 125 | Original local length: 1 | New local length: 1
[DBG]  agent 125 t=0 => decoded (sx,sy)=(4,3) => global_id=646
[DBG]  Complete path of agent 125:
[DBG]    Original: 430 398 366 365 333 333 333 333 301 269 268 267 299 331 363 363 395 427 459 491 523 555 587 619 651 650 649 648 647 646 678 710 742 774 775 
[DBG]    New:     430 398 366 365 333 333 333 333 301 269 268 267 299 331 363 363 395 427 459 491 523 555 587 619 651 650 649 648 647 646 678 710 742 774 775 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 430 398 366 365 333 333 333 333 301 269 268 267 299 331 363 363 395 427 459 491 523 555 587 619 651 650 649 648 647 
[DBG]    Local path (in submap): 646 
[DBG]    Suffix (out of submap): 678 710 742 774 775 
[DBG]  Original agent path length 125 je: 35
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 1: 430, 398, 366, 365, 333, 333, 333, 333, 301, 269, 268, 267, 299, 331, 363, 363, 395, 427, 459, 491, 523, 555, 587, 619, 651, 650, 649, 648, 647, 646, 678, 710, 742, 774, 775, 
[DBG]  Path for agent 125 updated, resulting length: 35
[DBG]  Update the agent path 131 | Original local length: 1 | New local length: 1
[DBG]  agent 131 t=0 => decoded (sx,sy)=(3,4) => global_id=615
[DBG]  Complete path of agent 131:
[DBG]    Original: 341 309 277 276 244 243 242 241 240 239 271 303 302 301 300 299 331 363 395 427 426 458 457 489 521 520 519 551 583 615 616 616 616 616 616 648 680 712 
[DBG]    New:     341 309 277 276 244 243 242 241 240 239 271 303 302 301 300 299 331 363 395 427 426 458 457 489 521 520 519 551 583 615 616 616 616 616 616 648 680 712 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 341 309 277 276 244 243 242 241 240 239 271 303 302 301 300 299 331 363 395 427 426 458 457 489 521 520 519 551 583 
[DBG]    Local path (in submap): 615 
[DBG]    Suffix (out of submap): 616 616 616 616 616 648 680 712 
[DBG]  Original agent path length 131 je: 38
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 2: 341, 309, 277, 276, 244, 243, 242, 241, 240, 239, 271, 303, 302, 301, 300, 299, 331, 363, 395, 427, 426, 458, 457, 489, 521, 520, 519, 551, 583, 615, 616, 616, 616, 616, 616, 648, 680, 712, 
[DBG]  Path for agent 131 updated, resulting length: 38
[DBG]  Update the agent path 137 | Original local length: 6 | New local length: 6
[DBG]  agent 137 t=0 => decoded (sx,sy)=(1,3) => global_id=550
[DBG]  agent 137 t=1 => decoded (sx,sy)=(2,3) => global_id=582
[DBG]  agent 137 t=2 => decoded (sx,sy)=(2,2) => global_id=581
[DBG]  agent 137 t=3 => decoded (sx,sy)=(3,2) => global_id=613
[DBG]  agent 137 t=4 => decoded (sx,sy)=(4,2) => global_id=645
[DBG]  agent 137 t=5 => decoded (sx,sy)=(4,1) => global_id=644
[DBG]  Complete path of agent 137:
[DBG]    Original: 538 506 505 504 503 502 501 469 468 467 466 465 433 432 431 431 463 462 494 526 525 524 523 522 522 521 520 519 551 550 582 581 613 645 644 676 675 707 739 738 737 769 801 800 832 864 865 897 898 930 931 932 
[DBG]    New:     538 506 505 504 503 502 501 469 468 467 466 465 433 432 431 431 463 462 494 526 525 524 523 522 522 521 520 519 551 550 582 581 613 645 644 676 675 707 739 738 737 769 801 800 832 864 865 897 898 930 931 932 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 538 506 505 504 503 502 501 469 468 467 466 465 433 432 431 431 463 462 494 526 525 524 523 522 522 521 520 519 551 
[DBG]    Local path (in submap): 550 582 581 613 645 644 
[DBG]    Suffix (out of submap): 676 675 707 739 738 737 769 801 800 832 864 865 897 898 930 931 932 
[DBG]  Original agent path length 137 je: 52
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 3: 538, 506, 505, 504, 503, 502, 501, 469, 468, 467, 466, 465, 433, 432, 431, 431, 463, 462, 494, 526, 525, 524, 523, 522, 522, 521, 520, 519, 551, 550, 582, 581, 613, 645, 644, 676, 675, 707, 739, 738, 737, 769, 801, 800, 832, 864, 865, 897, 898, 930, 931, 932, 
[DBG]  Path for agent 137 updated, resulting length: 52
[DBG]  Update the agent path 145 | Original local length: 2 | New local length: 2
[DBG]  agent 145 t=0 => decoded (sx,sy)=(4,4) => global_id=647
[DBG]  agent 145 t=1 => decoded (sx,sy)=(4,3) => global_id=646
[DBG]  Complete path of agent 145:
[DBG]    Original: 335 367 367 367 367 367 367 366 366 398 430 462 494 526 525 524 492 491 490 458 490 489 521 520 519 551 583 615 615 647 646 
[DBG]    New:     335 367 367 367 367 367 367 366 366 398 430 462 494 526 525 524 492 491 490 458 490 489 521 520 519 551 583 615 615 647 646 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 335 367 367 367 367 367 367 366 366 398 430 462 494 526 525 524 492 491 490 458 490 489 521 520 519 551 583 615 615 
[DBG]    Local path (in submap): 647 646 
[DBG]    Suffix (out of submap): 
[DBG]  Original agent path length 145 je: 31
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 4: 335, 367, 367, 367, 367, 367, 367, 366, 366, 398, 430, 462, 494, 526, 525, 524, 492, 491, 490, 458, 490, 489, 521, 520, 519, 551, 583, 615, 615, 647, 646, 
[DBG]  Path for agent 145 updated, resulting length: 31
[DBG]  Paths successfully updated.
[DBG]  (LNS.cpp) New path for agent 107: 
[DBG]  16, 48, 47, 79, 111, 110, 109, 141, 173, 172, 204, 236, 268, 267, 299, 331, 363, 395, 427, 426, 458, 457, 489, 521, 520, 519, 551, 550, 582, 581, 613, 645, 677, 709, 741, 773, 772, 804, 836, 
[DBG]  (LNS.cpp) New path for agent 125: 
[DBG]  430, 398, 366, 365, 333, 333, 333, 333, 301, 269, 268, 267, 299, 331, 363, 363, 395, 427, 459, 491, 523, 555, 587, 619, 651, 650, 649, 648, 647, 646, 678, 710, 742, 774, 775, 
[DBG]  (LNS.cpp) New path for agent 131: 
[DBG]  341, 309, 277, 276, 244, 243, 242, 241, 240, 239, 271, 303, 302, 301, 300, 299, 331, 363, 395, 427, 426, 458, 457, 489, 521, 520, 519, 551, 583, 615, 616, 616, 616, 616, 616, 648, 680, 712, 
[DBG]  (LNS.cpp) New path for agent 137: 
[DBG]  538, 506, 505, 504, 503, 502, 501, 469, 468, 467, 466, 465, 433, 432, 431, 431, 463, 462, 494, 526, 525, 524, 523, 522, 522, 521, 520, 519, 551, 550, 582, 581, 613, 645, 644, 676, 675, 707, 739, 738, 737, 769, 801, 800, 832, 864, 865, 897, 898, 930, 931, 932, 
[DBG]  (LNS.cpp) New path for agent 145: 
[DBG]  335, 367, 367, 367, 367, 367, 367, 366, 366, 398, 430, 462, 494, 526, 525, 524, 492, 491, 490, 458, 490, 489, 521, 520, 519, 551, 583, 615, 615, 647, 646, 
[DBG]  component_weights = {0.316507, 0.169197, 0.176937, 0.337359}
[DBG]  opSuccess value: 1
[STAT] neighbor.sum_of_costs before recomputation: 190
[STAT] neighbor.old_sum_of_costs before recomputation: 190
[STAT] sum_of_costs before recomputation: 4399
[DBG]  Validate solution immediately after SAT success.
[DBG]  No problems after SAT replan.
[DBG]  Recomputing sum_of_cost by dividing neighbor.sum_of_costs and neighbor.old_sum_of_costs
[STAT] sum_of_costs after recomputation: 4399
[STAT] Iteration 67
[DBG]  Using SAT operator (destroy+repair SAT).
[DBG]  ====================
[DBG]  SAT destroy operator called.
[DBG]  SAT heuristic: 2
[DBG]  key_agent_id: 27
[DBG]  key_agent_id global path length: 19
[DBG]  Submap content (global positions):
[DBG]  588 589 590 591 592 
[DBG]  620 621 622 623 624 
[DBG]  652 653 654 655 656 
[DBG]  684 685 686 687 688 
[DBG]  716 717 718 719 720 
[DBG]  Map content with agents and obstacles:
[DBG]  A . . A A 
[DBG]  . X . . X 
[DBG]  X . A . . 
[DBG]  . . . A . 
[DBG]  X . . . . 
[DBG]  content of the map structure that we pass to the SAT solver:
[DBG]  1  1  1  1  1  
[DBG]  1  -1  1  1  -1  
[DBG]  -1  1  1  1  1  
[DBG]  1  1  1  1  1  
[DBG]  -1  1  1  1  1  
[DBG]  Identifying agents in a submap for rescheduling (when key_agent is there at the time 10):
[DBG]  Agent 19 found intervals in the sub-map:
[DBG]   [2..9] [13..17]
[DBG]  Agent 19 is not in sub-map at time 10 (intervals: 
[DBG]  [2..9] [13..17] )
[DBG]  Agent 27 found intervals in the sub-map:
[DBG]   [0..12]
[DBG]  Agent 27 (interval in submap: [0..12]) contains time 10, added to replan.
[DBG]  Agent 62 found intervals in the sub-map:
[DBG]  
[DBG]  Agent 62 is not in sub-map at time 10 (intervals: 
[DBG]  )
[DBG]  Agent 74 found intervals in the sub-map:
[DBG]   [11..11]
[DBG]  Agent 74 is not in sub-map at time 10 (intervals: 
[DBG]  [11..11] )
[DBG]  Agent 84 found intervals in the sub-map:
[DBG]   [6..11]
[DBG]  Agent 84 (interval in submap: [6..11]) contains time 10, added to replan.
[DBG]  Agent 88 found intervals in the sub-map:
[DBG]   [4..10]
[DBG]  Agent 88 (interval in submap: [4..10]) contains time 10, added to replan.
[DBG]  Agent 93 found intervals in the sub-map:
[DBG]   [10..16]
[DBG]  Agent 93 (interval in submap: [10..16]) contains time 10, added to replan.
[DBG]  Agent 114 found intervals in the sub-map:
[DBG]   [9..11]
[DBG]  Agent 114 (interval in submap: [9..11]) contains time 10, added to replan.
[DBG]  Agent 125 found intervals in the sub-map:
[DBG]  
[DBG]  Agent 125 is not in sub-map at time 10 (intervals: 
[DBG]  )
[DBG]  Agent 130 found intervals in the sub-map:
[DBG]   [12..28]
[DBG]  Agent 130 is not in sub-map at time 10 (intervals: 
[DBG]  [12..28] )
[DBG]  Agent 148 found intervals in the sub-map:
[DBG]   [18..26]
[DBG]  Agent 148 is not in sub-map at time 10 (intervals: 
[DBG]  [18..26] )
[DBG]  Agent 27 | Start (global): 654 -> (local): (2, 2) at time 10 | Goal (global): 718 -> (local): (4, 2) at time 12
[DBG]  Agent 84 | Start (global): 591 -> (local): (0, 3) at time 10 | Goal (global): 592 -> (local): (0, 4) at time 11
[DBG]  Agent 88 | Start (global): 592 -> (local): (0, 4) at time 10 | Goal (global): 592 -> (local): (0, 4) at time 10
[DBG]  Agent 93 | Start (global): 588 -> (local): (0, 0) at time 10 | Goal (global): 592 -> (local): (0, 4) at time 16
[DBG]  Agent 114 | Start (global): 687 -> (local): (3, 3) at time 10 | Goal (global): 688 -> (local): (3, 4) at time 11
[DBG]  [REPAIR] SAT destroy operator called.
[DBG]  [REPAIR] SAT operator â€“ launching subproblem FOR OPTIMIZATION.
[DBG]  Creating local paths (sx, sy) in the submap for T_sync = 10
[DBG]    Agent 27 (global paths from T=10 to 12) has local path: (2,2) (3,2) (4,2) 
[DBG]    Agent 84 (global paths from T=10 to 11) has local path: (0,3) (0,4) 
[DBG]    Agent 88 (global paths from T=10 to 10) has local path: (0,4) 
[DBG]    Agent 93 (global paths from T=10 to 16) has local path: (0,0) (0,1) (0,2) (0,3) (1,3) (0,3) (0,4) 
[DBG]    Agent 114 (global paths from T=10 to 11) has local path: (3,3) (3,4) 
[DBG]  Checking input data for SAT solver:
[DBG]    - Number of agents to replan: 5
[DBG]  Agent 27 has the original local path length: 3 => Start (2,2), Goal (4,2)
[DBG]  Agent 84 has the original local path length: 2 => Start (0,3), Goal (0,4)
[DBG]  Agent 88 has the original local path length: 1 => Start (0,4), Goal (0,4)
[DBG]  Agent 93 has the original local path length: 7 => Start (0,0), Goal (0,4)
[DBG]  Agent 114 has the original local path length: 2 => Start (3,3), Goal (3,4)
[DBG]  Start position: (2, 2), (0, 3), (0, 4), (0, 0), (3, 3), 
[DBG]  Goal position: (4, 2), (0, 4), (0, 4), (0, 4), (3, 4), 
[DBG]  SAT instance and solver created.
Currently solving
Instance name: scen
Map name: map
Encoding used: disappear_at_goal
SAT solver used: Kissat
Optimizing function: sum of costs
Number of agents: 5
Mks LB: 5
SoC LB: 13
Delta: 0
Remaining time: 300000 [ms]

Vertex conflict! Agents 0, 1, timestep 3, location 0
Swapping conflict! Agents 0, 1, timestep 3, edge (0,0)
Vertex conflict! Agents 0, 1, timestep 4, location 0
Vertex conflict! Agents 0, 2, timestep 3, location 0
Swapping conflict! Agents 0, 2, timestep 3, edge (0,0)
Vertex conflict! Agents 0, 2, timestep 4, location 0
Vertex conflict! Agents 0, 4, timestep 3, location 0
Swapping conflict! Agents 0, 4, timestep 3, edge (0,0)
Vertex conflict! Agents 0, 4, timestep 4, location 0
Vertex conflict! Agents 1, 2, timestep 2, location 0
Swapping conflict! Agents 1, 2, timestep 2, edge (0,0)
Vertex conflict! Agents 1, 2, timestep 3, location 0
Swapping conflict! Agents 1, 2, timestep 3, edge (0,0)
Vertex conflict! Agents 1, 2, timestep 4, location 0
Vertex conflict! Agents 1, 4, timestep 2, location 0
Swapping conflict! Agents 1, 4, timestep 2, edge (0,0)
Vertex conflict! Agents 1, 4, timestep 3, location 0
Swapping conflict! Agents 1, 4, timestep 3, edge (0,0)
Vertex conflict! Agents 1, 4, timestep 4, location 0
Vertex conflict! Agents 2, 4, timestep 2, location 0
Swapping conflict! Agents 2, 4, timestep 2, edge (0,0)
Vertex conflict! Agents 2, 4, timestep 3, location 0
Swapping conflict! Agents 2, 4, timestep 3, edge (0,0)
Vertex conflict! Agents 2, 4, timestep 4, location 0
Found plan [agents = 5] [timesteps = 5]
Agent #0 : 9 14 18 0 0 
Agent #1 : 3 4 0 0 0 
Agent #2 : 4 0 0 0 0 
Agent #3 : 0 1 2 3 4 
Agent #4 : 15 16 0 0 0 

[STAT] Solver returned: 0
[DBG]  Agent (index) 27 | New local path (submap idx):
[DBG]  9 14 18 
[DBG]  Agent (index) 84 | New local path (submap idx):
[DBG]  3 4 
[DBG]  Agent (index) 88 | New local path (submap idx):
[DBG]  4 
[DBG]  Agent (index) 93 | New local path (submap idx):
[DBG]  0 1 2 3 4 
[DBG]  Agent (index) 114 | New local path (submap idx):
[DBG]  15 16 
[DBG]  Update the agent path 27 | Original local length: 3 | New local length: 3
[DBG]  agent 27 t=0 => decoded (sx,sy)=(2,2) => global_id=654
[DBG]  agent 27 t=1 => decoded (sx,sy)=(3,2) => global_id=686
[DBG]  agent 27 t=2 => decoded (sx,sy)=(4,2) => global_id=718
[DBG]  Complete path of agent 27:
[DBG]    Original: 653 653 653 653 653 653 653 653 653 653 654 686 718 750 751 783 783 815 814 
[DBG]    New:     653 653 653 653 653 653 653 653 653 653 654 686 718 750 751 783 783 815 814 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 653 653 653 653 653 653 653 653 653 653 
[DBG]    Local path (in submap): 654 686 718 
[DBG]    Suffix (out of submap): 750 751 783 783 815 814 
[DBG]  Original agent path length 27 je: 19
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 0: 653, 653, 653, 653, 653, 653, 653, 653, 653, 653, 654, 686, 718, 750, 751, 783, 783, 815, 814, 
[DBG]  Path for agent 27 updated, resulting length: 19
[DBG]  Update the agent path 84 | Original local length: 2 | New local length: 2
[DBG]  agent 84 t=0 => decoded (sx,sy)=(0,3) => global_id=591
[DBG]  agent 84 t=1 => decoded (sx,sy)=(0,4) => global_id=592
[DBG]  Complete path of agent 84:
[DBG]    Original: 878 879 847 815 783 751 719 687 655 623 591 592 560 561 529 530 498 466 467 468 469 470 438 406 407 375 343 311 312 313 281 249 217 218 186 154 122 90 58 26 25 
[DBG]    New:     878 879 847 815 783 751 719 687 655 623 591 592 560 561 529 530 498 466 467 468 469 470 438 406 407 375 343 311 312 313 281 249 217 218 186 154 122 90 58 26 25 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 878 879 847 815 783 751 719 687 655 623 
[DBG]    Local path (in submap): 591 592 
[DBG]    Suffix (out of submap): 560 561 529 530 498 466 467 468 469 470 438 406 407 375 343 311 312 313 281 249 217 218 186 154 122 90 58 26 25 
[DBG]  Original agent path length 84 je: 41
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 1: 878, 879, 847, 815, 783, 751, 719, 687, 655, 623, 591, 592, 560, 561, 529, 530, 498, 466, 467, 468, 469, 470, 438, 406, 407, 375, 343, 311, 312, 313, 281, 249, 217, 218, 186, 154, 122, 90, 58, 26, 25, 
[DBG]  Path for agent 84 updated, resulting length: 41
[DBG]  Update the agent path 88 | Original local length: 1 | New local length: 1
[DBG]  agent 88 t=0 => decoded (sx,sy)=(0,4) => global_id=592
[DBG]  Complete path of agent 88:
[DBG]    Original: 783 783 782 750 718 686 687 655 623 591 592 560 528 496 464 432 400 368 336 335 303 271 239 240 241 209 
[DBG]    New:     783 783 782 750 718 686 687 655 623 591 592 560 528 496 464 432 400 368 336 335 303 271 239 240 241 209 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 783 783 782 750 718 686 687 655 623 591 
[DBG]    Local path (in submap): 592 
[DBG]    Suffix (out of submap): 560 528 496 464 432 400 368 336 335 303 271 239 240 241 209 
[DBG]  Original agent path length 88 je: 26
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 2: 783, 783, 782, 750, 718, 686, 687, 655, 623, 591, 592, 560, 528, 496, 464, 432, 400, 368, 336, 335, 303, 271, 239, 240, 241, 209, 
[DBG]  Path for agent 88 updated, resulting length: 26
[DBG]  Update the agent path 93 | Original local length: 7 | New local length: 5
[DBG]  agent 93 t=0 => decoded (sx,sy)=(0,0) => global_id=588
[DBG]  agent 93 t=1 => decoded (sx,sy)=(0,1) => global_id=589
[DBG]  agent 93 t=2 => decoded (sx,sy)=(0,2) => global_id=590
[DBG]  agent 93 t=3 => decoded (sx,sy)=(0,3) => global_id=591
[DBG]  agent 93 t=4 => decoded (sx,sy)=(0,4) => global_id=592
[DBG]  Complete path of agent 93:
[DBG]    Original: 423 424 425 457 489 521 522 523 524 556 588 589 590 591 623 591 592 560 
[DBG]    New:     423 424 425 457 489 521 522 523 524 556 588 589 590 591 592 560 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 423 424 425 457 489 521 522 523 524 556 
[DBG]    Local path (in submap): 588 589 590 591 592 560 
[DBG]    Suffix (out of submap): 
[DBG]  Original agent path length 93 je: 18
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 3: 423, 424, 425, 457, 489, 521, 522, 523, 524, 556, 588, 589, 590, 591, 592, 560, 
[DBG]  Path for agent 93 updated, resulting length: 16
[DBG]  Update the agent path 114 | Original local length: 2 | New local length: 2
[DBG]  agent 114 t=0 => decoded (sx,sy)=(3,3) => global_id=687
[DBG]  agent 114 t=1 => decoded (sx,sy)=(3,4) => global_id=688
[DBG]  Complete path of agent 114:
[DBG]    Original: 875 843 811 812 813 781 782 783 751 719 687 688 689 657 625 593 561 529 530 531 499 467 468 468 468 469 470 438 439 439 439 440 408 376 377 345 313 281 249 217 218 186 154 
[DBG]    New:     875 843 811 812 813 781 782 783 751 719 687 688 689 657 625 593 561 529 530 531 499 467 468 468 468 469 470 438 439 439 439 440 408 376 377 345 313 281 249 217 218 186 154 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 875 843 811 812 813 781 782 783 751 719 
[DBG]    Local path (in submap): 687 688 
[DBG]    Suffix (out of submap): 689 657 625 593 561 529 530 531 499 467 468 468 468 469 470 438 439 439 439 440 408 376 377 345 313 281 249 217 218 186 154 
[DBG]  Original agent path length 114 je: 43
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 4: 875, 843, 811, 812, 813, 781, 782, 783, 751, 719, 687, 688, 689, 657, 625, 593, 561, 529, 530, 531, 499, 467, 468, 468, 468, 469, 470, 438, 439, 439, 439, 440, 408, 376, 377, 345, 313, 281, 249, 217, 218, 186, 154, 
[DBG]  Path for agent 114 updated, resulting length: 43
[DBG]  Paths successfully updated.
[DBG]  (LNS.cpp) New path for agent 27: 
[DBG]  653, 653, 653, 653, 653, 653, 653, 653, 653, 653, 654, 686, 718, 750, 751, 783, 783, 815, 814, 
[DBG]  (LNS.cpp) New path for agent 84: 
[DBG]  878, 879, 847, 815, 783, 751, 719, 687, 655, 623, 591, 592, 560, 561, 529, 530, 498, 466, 467, 468, 469, 470, 438, 406, 407, 375, 343, 311, 312, 313, 281, 249, 217, 218, 186, 154, 122, 90, 58, 26, 25, 
[DBG]  (LNS.cpp) New path for agent 88: 
[DBG]  783, 783, 782, 750, 718, 686, 687, 655, 623, 591, 592, 560, 528, 496, 464, 432, 400, 368, 336, 335, 303, 271, 239, 240, 241, 209, 
[DBG]  (LNS.cpp) New path for agent 93: 
[DBG]  423, 424, 425, 457, 489, 521, 522, 523, 524, 556, 588, 589, 590, 591, 592, 560, 
[DBG]  (LNS.cpp) New path for agent 114: 
[DBG]  875, 843, 811, 812, 813, 781, 782, 783, 751, 719, 687, 688, 689, 657, 625, 593, 561, 529, 530, 531, 499, 467, 468, 468, 468, 469, 470, 438, 439, 439, 439, 440, 408, 376, 377, 345, 313, 281, 249, 217, 218, 186, 154, 
[DBG]  component_weights = {0.314328, 0.168032, 0.175719, 0.341922}
[DBG]  opSuccess value: 1
[STAT] neighbor.sum_of_costs before recomputation: 140
[STAT] neighbor.old_sum_of_costs before recomputation: 142
[STAT] sum_of_costs before recomputation: 4399
[DBG]  Validate solution immediately after SAT success.
[WARNING] Problem after SAT: Edge conflict between agents 93 and 19 at edge (591,592) at timestep 14
[DBG]  Attempting immediate repair via init_lns because problem occurred after SAT (should be applied only for conflicts...).
[DBG]  Passing 150 agents to init_lns (skip=true).
[DBG]  path_table contents for selected agents (neighbor.agents):
[DBG]    Agent 27 => controlling path length=19
[DBG]    Agent 84 => controlling path length=41
[DBG]    Agent 88 => controlling path length=26
[DBG]    Agent 93 => controlling path length=16
[DBG]    Agent 114 => controlling path length=43
[DBG]  hodnota skip_initial_solution=1
[DBG]  We skip initialSolution => call buildCollisionData()
[DBG]  buildCollisionData() called â€“ skip_initial_solution case.
[DBG]  Agents.size()=150, collision_graph.size()=150
[DBG]  agent 19 => updateCollidingPairs => foundCollision
[DBG]  agent 93 => updateCollidingPairs => foundCollision
[DBG]  Conflicting agent pairs:
[DBG]  agent 19 is in conflict with agent 93
[DBG]  buildCollisionData() => sum_of_costs=4397, num_of_colliding_pairs=1
[DBG]  buildCollisionData done => sum_of_costs=4397, num_of_colliding_pairs=1
[DBG]  sum_of_cost hodnota: 4397
[DBG]  After skip/init build => iteration_stats.back(): sum_of_costs=4397, collisions=1
[DEBUG] Using default neighbor generation strategy for conflicts: 0
	InitLNS(PP): runtime = 0.00685308, iterations = 2, colliding pairs = 0, initial colliding pairs = 1, solution cost = 4394, initial solution cost = 4397, failed iterations = 0
[DBG]  init_lns->sum_of_costs after init_lns->run: 4394
[DBG]  sum_of_costs after assignment from init_lns->run: 4394
[DBG]  Recomputing sum_of_cost by dividing neighbor.sum_of_costs and neighbor.old_sum_of_costs
[STAT] sum_of_costs after recomputation: 4394
[STAT] Iteration 68
[DBG]  Using SAT operator (destroy+repair SAT).
[DBG]  ====================
[DBG]  SAT destroy operator called.
[DBG]  SAT heuristic: 2
[DBG]  key_agent_id: 10
[DBG]  key_agent_id global path length: 26
[DBG]  Submap content (global positions):
[DBG]  433 434 435 436 437 
[DBG]  465 466 467 468 469 
[DBG]  497 498 499 500 501 
[DBG]  529 530 531 532 533 
[DBG]  561 562 563 564 565 
[DBG]  Map content with agents and obstacles:
[DBG]  A X . X A 
[DBG]  A . . A . 
[DBG]  X . A X . 
[DBG]  . . A X A 
[DBG]  . X . X . 
[DBG]  content of the map structure that we pass to the SAT solver:
[DBG]  1  -1  1  -1  1  
[DBG]  1  1  1  1  1  
[DBG]  -1  1  1  -1  1  
[DBG]  1  1  1  -1  1  
[DBG]  1  -1  1  -1  1  
[DBG]  Identifying agents in a submap for rescheduling (when key_agent is there at the time 12):
[DBG]  Agent 3 found intervals in the sub-map:
[DBG]   [0..24]
[DBG]  Agent 3 (interval in submap: [0..24]) contains time 12, added to replan.
[DBG]  Agent 10 found intervals in the sub-map:
[DBG]   [7..16]
[DBG]  Agent 10 (interval in submap: [7..16]) contains time 12, added to replan.
[DBG]  Agent 33 found intervals in the sub-map:
[DBG]   [12..18]
[DBG]  Agent 33 (interval in submap: [12..18]) contains time 12, added to replan.
[DBG]  Agent 54 found intervals in the sub-map:
[DBG]   [1..4] [10..12] [16..16]
[DBG]  Agent 54 (interval in submap: [10..12]) contains time 12, added to replan.
[DBG]  Agent 92 found intervals in the sub-map:
[DBG]   [13..13]
[DBG]  Agent 92 is not in sub-map at time 12 (intervals: 
[DBG]  [13..13] )
[DBG]  Agent 113 found intervals in the sub-map:
[DBG]   [0..1] [11..12]
[DBG]  Agent 113 (interval in submap: [11..12]) contains time 12, added to replan.
[DBG]  Agent 128 found intervals in the sub-map:
[DBG]   [11..16]
[DBG]  Agent 128 (interval in submap: [11..16]) contains time 12, added to replan.
[DBG]  Agent 137 found intervals in the sub-map:
[DBG]   [6..12]
[DBG]  Agent 137 (interval in submap: [6..12]) contains time 12, added to replan.
[DBG]  Agent 3 | Start (global): 531 -> (local): (3, 2) at time 12 | Goal (global): 561 -> (local): (4, 0) at time 24
[DBG]  Agent 10 | Start (global): 499 -> (local): (2, 2) at time 12 | Goal (global): 469 -> (local): (1, 4) at time 16
[DBG]  Agent 33 | Start (global): 465 -> (local): (1, 0) at time 12 | Goal (global): 469 -> (local): (1, 4) at time 18
[DBG]  Agent 54 | Start (global): 437 -> (local): (0, 4) at time 12 | Goal (global): 437 -> (local): (0, 4) at time 12
[DBG]  Agent 113 | Start (global): 533 -> (local): (3, 4) at time 12 | Goal (global): 533 -> (local): (3, 4) at time 12
[DBG]  Agent 128 | Start (global): 468 -> (local): (1, 3) at time 12 | Goal (global): 465 -> (local): (1, 0) at time 16
[DBG]  Agent 137 | Start (global): 433 -> (local): (0, 0) at time 12 | Goal (global): 433 -> (local): (0, 0) at time 12
[DBG]  [REPAIR] SAT destroy operator called.
[DBG]  [REPAIR] SAT operator â€“ launching subproblem FOR OPTIMIZATION.
[DBG]  Creating local paths (sx, sy) in the submap for T_sync = 12
[DBG]    Agent 3 (global paths from T=12 to 24) has local path: (3,2) (3,2) (3,2) (3,2) (3,2) (3,2) (3,2) (2,2) (2,2) (2,1) (3,1) (3,0) (4,0) 
[DBG]    Agent 10 (global paths from T=12 to 16) has local path: (2,2) (2,2) (1,2) (1,3) (1,4) 
[DBG]    Agent 33 (global paths from T=12 to 18) has local path: (1,0) (1,1) (2,1) (2,2) (1,2) (1,3) (1,4) 
[DBG]    Agent 54 (global paths from T=12 to 12) has local path: (0,4) 
[DBG]    Agent 113 (global paths from T=12 to 12) has local path: (3,4) 
[DBG]    Agent 128 (global paths from T=12 to 16) has local path: (1,3) (1,2) (1,1) (1,0) (1,0) 
[DBG]    Agent 137 (global paths from T=12 to 12) has local path: (0,0) 
[DBG]  Checking input data for SAT solver:
[DBG]    - Number of agents to replan: 7
[DBG]  Agent 3 has the original local path length: 13 => Start (3,2), Goal (4,0)
[DBG]  Agent 10 has the original local path length: 5 => Start (2,2), Goal (1,4)
[DBG]  Agent 33 has the original local path length: 7 => Start (1,0), Goal (1,4)
[DBG]  Agent 54 has the original local path length: 1 => Start (0,4), Goal (0,4)
[DBG]  Agent 113 has the original local path length: 1 => Start (3,4), Goal (3,4)
[DBG]  Agent 128 has the original local path length: 5 => Start (1,3), Goal (1,0)
[DBG]  Agent 137 has the original local path length: 1 => Start (0,0), Goal (0,0)
[DBG]  Start position: (3, 2), (2, 2), (1, 0), (0, 4), (3, 4), (1, 3), (0, 0), 
[DBG]  Goal position: (4, 0), (1, 4), (1, 4), (0, 4), (3, 4), (1, 0), (0, 0), 
[DBG]  SAT instance and solver created.
Currently solving
Instance name: scen
Map name: map
Encoding used: disappear_at_goal
SAT solver used: Kissat
Optimizing function: sum of costs
Number of agents: 7
Mks LB: 5
SoC LB: 20
Delta: 0
Remaining time: 300000 [ms]

[STAT] Solver returned: -1
[DBG]  SAT solver failed.
[STAT] SAT solver failed to find a valid solution.
[DBG]  ====================
[DBG]  SAT destroy operator called.
[DBG]  SAT heuristic: 2
[DBG]  key_agent_id: 10
[DBG]  key_agent_id global path length: 26
[DBG]  Submap content (global positions):
[DBG]  526 527 528 529 530 
[DBG]  558 559 560 561 562 
[DBG]  590 591 592 593 594 
[DBG]  622 623 624 625 626 
[DBG]  654 655 656 657 658 
[DBG]  Map content with agents and obstacles:
[DBG]  . X . . . 
[DBG]  . X . . X 
[DBG]  . . A A . 
[DBG]  . . X . X 
[DBG]  . . . A . 
[DBG]  content of the map structure that we pass to the SAT solver:
[DBG]  1  -1  1  1  1  
[DBG]  1  -1  1  1  -1  
[DBG]  1  1  1  1  1  
[DBG]  1  1  -1  1  -1  
[DBG]  1  1  1  1  1  
[DBG]  Identifying agents in a submap for rescheduling (when key_agent is there at the time 4):
[DBG]  Agent 10 found intervals in the sub-map:
[DBG]   [2..8]
[DBG]  Agent 10 (interval in submap: [2..8]) contains time 4, added to replan.
[DBG]  Agent 19 found intervals in the sub-map:
[DBG]   [0..13]
[DBG]  Agent 19 (interval in submap: [0..13]) contains time 4, added to replan.
[DBG]  Agent 27 found intervals in the sub-map:
[DBG]   [10..10]
[DBG]  Agent 27 is not in sub-map at time 4 (intervals: 
[DBG]  [10..10] )
[DBG]  Agent 54 found intervals in the sub-map:
[DBG]  
[DBG]  Agent 54 is not in sub-map at time 4 (intervals: 
[DBG]  )
[DBG]  Agent 113 found intervals in the sub-map:
[DBG]   [0..5]
[DBG]  Agent 113 (interval in submap: [0..5]) contains time 4, added to replan.
[DBG]  Agent 10 | Start (global): 592 -> (local): (2, 2) at time 4 | Goal (global): 530 -> (local): (0, 4) at time 8
[DBG]  Agent 19 | Start (global): 593 -> (local): (2, 3) at time 4 | Goal (global): 590 -> (local): (2, 0) at time 13
[DBG]  Agent 113 | Start (global): 657 -> (local): (4, 3) at time 4 | Goal (global): 658 -> (local): (4, 4) at time 5
[DBG]  [REPAIR] SAT destroy operator called.
[DBG]  [REPAIR] SAT operator â€“ launching subproblem FOR OPTIMIZATION.
[DBG]  Creating local paths (sx, sy) in the submap for T_sync = 4
[DBG]    Agent 10 (global paths from T=4 to 8) has local path: (2,2) (1,2) (0,2) (0,3) (0,4) 
[DBG]    Agent 19 (global paths from T=4 to 13) has local path: (2,3) (2,2) (2,1) (2,0) (1,0) (1,0) (1,0) (1,0) (1,0) (2,0) 
[DBG]    Agent 113 (global paths from T=4 to 5) has local path: (4,3) (4,4) 
[DBG]  Checking input data for SAT solver:
[DBG]    - Number of agents to replan: 3
[DBG]  Agent 10 has the original local path length: 5 => Start (2,2), Goal (0,4)
[DBG]  Agent 19 has the original local path length: 10 => Start (2,3), Goal (2,0)
[DBG]  Agent 113 has the original local path length: 2 => Start (4,3), Goal (4,4)
[DBG]  Start position: (2, 2), (2, 3), (4, 3), 
[DBG]  Goal position: (0, 4), (2, 0), (4, 4), 
[DBG]  SAT instance and solver created.
Currently solving
Instance name: scen
Map name: map
Encoding used: disappear_at_goal
SAT solver used: Kissat
Optimizing function: sum of costs
Number of agents: 3
Mks LB: 5
SoC LB: 11
Delta: 0
Remaining time: 300000 [ms]

Vertex conflict! Agents 1, 2, timestep 4, location 0
Found plan [agents = 3] [timesteps = 5]
Agent #0 : 9 5 6 2 3 
Agent #1 : 10 9 8 7 0 
Agent #2 : 18 19 0 0 0 

[STAT] Solver returned: 0
[DBG]  Agent (index) 10 | New local path (submap idx):
[DBG]  9 5 6 2 3 
[DBG]  Agent (index) 19 | New local path (submap idx):
[DBG]  10 9 8 7 
[DBG]  Agent (index) 113 | New local path (submap idx):
[DBG]  18 19 
[DBG]  Update the agent path 10 | Original local length: 5 | New local length: 5
[DBG]  agent 10 t=0 => decoded (sx,sy)=(2,2) => global_id=592
[DBG]  agent 10 t=1 => decoded (sx,sy)=(1,2) => global_id=560
[DBG]  agent 10 t=2 => decoded (sx,sy)=(1,3) => global_id=561
[DBG]  agent 10 t=3 => decoded (sx,sy)=(0,3) => global_id=529
[DBG]  agent 10 t=4 => decoded (sx,sy)=(0,4) => global_id=530
[DBG]  Complete path of agent 10:
[DBG]    Original: 588 589 590 591 592 560 528 529 530 531 499 499 499 499 467 468 469 470 502 503 504 505 473 474 475 476 
[DBG]    New:     588 589 590 591 592 560 561 529 530 531 499 499 499 499 467 468 469 470 502 503 504 505 473 474 475 476 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 588 589 590 591 
[DBG]    Local path (in submap): 592 560 561 529 530 
[DBG]    Suffix (out of submap): 531 499 499 499 499 467 468 469 470 502 503 504 505 473 474 475 476 
[DBG]  Original agent path length 10 je: 26
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 0: 588, 589, 590, 591, 592, 560, 561, 529, 530, 531, 499, 499, 499, 499, 467, 468, 469, 470, 502, 503, 504, 505, 473, 474, 475, 476, 
[DBG]  Path for agent 10 updated, resulting length: 26
[DBG]  Update the agent path 19 | Original local length: 10 | New local length: 4
[DBG]  agent 19 t=0 => decoded (sx,sy)=(2,3) => global_id=593
[DBG]  agent 19 t=1 => decoded (sx,sy)=(2,2) => global_id=592
[DBG]  agent 19 t=2 => decoded (sx,sy)=(2,1) => global_id=591
[DBG]  agent 19 t=3 => decoded (sx,sy)=(2,0) => global_id=590
[DBG]  Complete path of agent 19:
[DBG]    Original: 625 593 594 593 593 592 591 590 558 558 558 558 558 590 589 588 587 619 651 651 683 715 714 746 714 715 715 715 683 
[DBG]    New:     625 593 594 593 593 592 591 590 589 588 587 619 651 651 683 715 714 746 714 715 715 715 683 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 625 593 594 593 
[DBG]    Local path (in submap): 593 592 591 590 589 588 587 619 651 651 
[DBG]    Suffix (out of submap): 683 715 714 746 714 715 715 715 683 
[DBG]  Original agent path length 19 je: 29
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 1: 625, 593, 594, 593, 593, 592, 591, 590, 589, 588, 587, 619, 651, 651, 683, 715, 714, 746, 714, 715, 715, 715, 683, 
[DBG]  Path for agent 19 updated, resulting length: 23
[DBG]  Update the agent path 113 | Original local length: 2 | New local length: 2
[DBG]  agent 113 t=0 => decoded (sx,sy)=(4,3) => global_id=657
[DBG]  agent 113 t=1 => decoded (sx,sy)=(4,4) => global_id=658
[DBG]  Complete path of agent 113:
[DBG]    Original: 529 561 593 625 657 658 659 660 628 596 597 565 533 534 502 470 438 406 407 375 376 377 378 379 380 380 381 349 350 318 319 287 255 254 222 
[DBG]    New:     529 561 593 625 657 658 659 660 628 596 597 565 533 534 502 470 438 406 407 375 376 377 378 379 380 380 381 349 350 318 319 287 255 254 222 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 529 561 593 625 
[DBG]    Local path (in submap): 657 658 
[DBG]    Suffix (out of submap): 659 660 628 596 597 565 533 534 502 470 438 406 407 375 376 377 378 379 380 380 381 349 350 318 319 287 255 254 222 
[DBG]  Original agent path length 113 je: 35
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 2: 529, 561, 593, 625, 657, 658, 659, 660, 628, 596, 597, 565, 533, 534, 502, 470, 438, 406, 407, 375, 376, 377, 378, 379, 380, 380, 381, 349, 350, 318, 319, 287, 255, 254, 222, 
[DBG]  Path for agent 113 updated, resulting length: 35
[DBG]  Paths successfully updated.
[DBG]  (LNS.cpp) New path for agent 10: 
[DBG]  588, 589, 590, 591, 592, 560, 561, 529, 530, 531, 499, 499, 499, 499, 467, 468, 469, 470, 502, 503, 504, 505, 473, 474, 475, 476, 
[DBG]  (LNS.cpp) New path for agent 19: 
[DBG]  625, 593, 594, 593, 593, 592, 591, 590, 589, 588, 587, 619, 651, 651, 683, 715, 714, 746, 714, 715, 715, 715, 683, 
[DBG]  (LNS.cpp) New path for agent 113: 
[DBG]  529, 561, 593, 625, 657, 658, 659, 660, 628, 596, 597, 565, 533, 534, 502, 470, 438, 406, 407, 375, 376, 377, 378, 379, 380, 380, 381, 349, 350, 318, 319, 287, 255, 254, 222, 
[DBG]  component_weights = {0.312075, 0.166827, 0.17446, 0.346638}
[DBG]  opSuccess value: 1
[STAT] neighbor.sum_of_costs before recomputation: 81
[STAT] neighbor.old_sum_of_costs before recomputation: 87
[STAT] sum_of_costs before recomputation: 4394
[DBG]  Validate solution immediately after SAT success.
[WARNING] Problem after SAT: Vertex conflict between agents 19 and 67 at location 651 at timestep 13
[DBG]  Attempting immediate repair via init_lns because problem occurred after SAT (should be applied only for conflicts...).
[DBG]  Passing 150 agents to init_lns (skip=true).
[DBG]  path_table contents for selected agents (neighbor.agents):
[DBG]    Agent 10 => controlling path length=26
[DBG]    Agent 19 => controlling path length=23
[DBG]    Agent 113 => controlling path length=35
[DBG]  hodnota skip_initial_solution=1
[DBG]  We skip initialSolution => call buildCollisionData()
[DBG]  buildCollisionData() called â€“ skip_initial_solution case.
[DBG]  Agents.size()=150, collision_graph.size()=150
[DBG]  agent 19 => updateCollidingPairs => foundCollision
[DBG]  agent 67 => updateCollidingPairs => foundCollision
[DBG]  agent 87 => updateCollidingPairs => foundCollision
[DBG]  agent 130 => updateCollidingPairs => foundCollision
[DBG]  agent 140 => updateCollidingPairs => foundCollision
[DBG]  Conflicting agent pairs:
[DBG]  agent 19 is in conflict with agent 67
[DBG]  agent 19 is in conflict with agent 87
[DBG]  agent 19 is in conflict with agent 130
[DBG]  agent 19 is in conflict with agent 140
[DBG]  buildCollisionData() => sum_of_costs=4388, num_of_colliding_pairs=4
[DBG]  buildCollisionData done => sum_of_costs=4388, num_of_colliding_pairs=4
[DBG]  sum_of_cost hodnota: 4388
[DBG]  After skip/init build => iteration_stats.back(): sum_of_costs=4388, collisions=4
[DEBUG] Using default neighbor generation strategy for conflicts: 0
[DEBUG] Using default neighbor generation strategy for conflicts: 1
	InitLNS(PP): runtime = 0.0193411, iterations = 3, colliding pairs = 0, initial colliding pairs = 4, solution cost = 4396, initial solution cost = 4388, failed iterations = 0
[DBG]  init_lns->sum_of_costs after init_lns->run: 4396
[DBG]  sum_of_costs after assignment from init_lns->run: 4396
[DBG]  Recomputing sum_of_cost by dividing neighbor.sum_of_costs and neighbor.old_sum_of_costs
[STAT] sum_of_costs after recomputation: 4396
[STAT] Iteration 69
[DBG]  Using SAT operator (destroy+repair SAT).
[DBG]  ====================
[DBG]  SAT destroy operator called.
[DBG]  SAT heuristic: 2
[DBG]  key_agent_id: 60
[DBG]  key_agent_id global path length: 14
[DBG]  Submap content (global positions):
[DBG]  516 517 518 519 520 
[DBG]  548 549 550 551 552 
[DBG]  580 581 582 583 584 
[DBG]  612 613 614 615 616 
[DBG]  644 645 646 647 648 
[DBG]  Map content with agents and obstacles:
[DBG]  . . X . . 
[DBG]  . A . . X 
[DBG]  . . A . . 
[DBG]  . A X . . 
[DBG]  . . A A . 
[DBG]  content of the map structure that we pass to the SAT solver:
[DBG]  1  1  -1  1  1  
[DBG]  1  1  1  1  -1  
[DBG]  1  1  1  1  1  
[DBG]  1  1  -1  1  1  
[DBG]  1  1  1  1  1  
[DBG]  Identifying agents in a submap for rescheduling (when key_agent is there at the time 8):
[DBG]  Agent 0 found intervals in the sub-map:
[DBG]   [0..9]
[DBG]  Agent 0 (interval in submap: [0..9]) contains time 8, added to replan.
[DBG]  Agent 21 found intervals in the sub-map:
[DBG]  
[DBG]  Agent 21 is not in sub-map at time 8 (intervals: 
[DBG]  )
[DBG]  Agent 60 found intervals in the sub-map:
[DBG]   [4..10]
[DBG]  Agent 60 (interval in submap: [4..10]) contains time 8, added to replan.
[DBG]  Agent 67 found intervals in the sub-map:
[DBG]   [8..10]
[DBG]  Agent 67 (interval in submap: [8..10]) contains time 8, added to replan.
[DBG]  Agent 71 found intervals in the sub-map:
[DBG]   [7..12] [14..14]
[DBG]  Agent 71 (interval in submap: [7..12]) contains time 8, added to replan.
[DBG]  Agent 73 found intervals in the sub-map:
[DBG]   [6..11]
[DBG]  Agent 73 (interval in submap: [6..11]) contains time 8, added to replan.
[DBG]  Agent 116 found intervals in the sub-map:
[DBG]   [0..3]
[DBG]  Agent 116 is not in sub-map at time 8 (intervals: 
[DBG]  [0..3] )
[DBG]  Agent 0 | Start (global): 647 -> (local): (4, 3) at time 8 | Goal (global): 648 -> (local): (4, 4) at time 9
[DBG]  Agent 60 | Start (global): 582 -> (local): (2, 2) at time 8 | Goal (global): 580 -> (local): (2, 0) at time 10
[DBG]  Agent 67 | Start (global): 646 -> (local): (4, 2) at time 8 | Goal (global): 648 -> (local): (4, 4) at time 10
[DBG]  Agent 71 | Start (global): 613 -> (local): (3, 1) at time 8 | Goal (global): 648 -> (local): (4, 4) at time 12
[DBG]  Agent 73 | Start (global): 549 -> (local): (1, 1) at time 8 | Goal (global): 519 -> (local): (0, 3) at time 11
[DBG]  [REPAIR] SAT destroy operator called.
[DBG]  [REPAIR] SAT operator â€“ launching subproblem FOR OPTIMIZATION.
[DBG]  Creating local paths (sx, sy) in the submap for T_sync = 8
[DBG]    Agent 0 (global paths from T=8 to 9) has local path: (4,3) (4,4) 
[DBG]    Agent 60 (global paths from T=8 to 10) has local path: (2,2) (2,1) (2,0) 
[DBG]    Agent 67 (global paths from T=8 to 10) has local path: (4,2) (4,3) (4,4) 
[DBG]    Agent 71 (global paths from T=8 to 12) has local path: (3,1) (4,1) (4,2) (4,3) (4,4) 
[DBG]    Agent 73 (global paths from T=8 to 11) has local path: (1,1) (1,2) (1,3) (0,3) 
[DBG]  Checking input data for SAT solver:
[DBG]    - Number of agents to replan: 5
[DBG]  Agent 0 has the original local path length: 2 => Start (4,3), Goal (4,4)
[DBG]  Agent 60 has the original local path length: 3 => Start (2,2), Goal (2,0)
[DBG]  Agent 67 has the original local path length: 3 => Start (4,2), Goal (4,4)
[DBG]  Agent 71 has the original local path length: 5 => Start (3,1), Goal (4,4)
[DBG]  Agent 73 has the original local path length: 4 => Start (1,1), Goal (0,3)
[DBG]  Start position: (4, 3), (2, 2), (4, 2), (3, 1), (1, 1), 
[DBG]  Goal position: (4, 4), (2, 0), (4, 4), (4, 4), (0, 3), 
[DBG]  SAT instance and solver created.
Currently solving
Instance name: scen
Map name: map
Encoding used: disappear_at_goal
SAT solver used: Kissat
Optimizing function: sum of costs
Number of agents: 5
Mks LB: 5
SoC LB: 17
Delta: 0
Remaining time: 300000 [ms]

Vertex conflict! Agents 0, 1, timestep 3, location 0
Swapping conflict! Agents 0, 1, timestep 3, edge (0,0)
Vertex conflict! Agents 0, 1, timestep 4, location 0
Vertex conflict! Agents 0, 2, timestep 3, location 0
Swapping conflict! Agents 0, 2, timestep 3, edge (0,0)
Vertex conflict! Agents 0, 2, timestep 4, location 0
Vertex conflict! Agents 0, 4, timestep 4, location 0
Vertex conflict! Agents 1, 2, timestep 3, location 0
Swapping conflict! Agents 1, 2, timestep 3, edge (0,0)
Vertex conflict! Agents 1, 2, timestep 4, location 0
Vertex conflict! Agents 1, 4, timestep 4, location 0
Vertex conflict! Agents 2, 4, timestep 4, location 0
Found plan [agents = 5] [timesteps = 5]
Agent #0 : 20 21 0 0 0 
Agent #1 : 10 9 8 0 0 
Agent #2 : 19 20 21 0 0 
Agent #3 : 14 18 19 20 21 
Agent #4 : 5 6 7 2 0 

[STAT] Solver returned: 0
[DBG]  Agent (index) 0 | New local path (submap idx):
[DBG]  20 21 
[DBG]  Agent (index) 60 | New local path (submap idx):
[DBG]  10 9 8 
[DBG]  Agent (index) 67 | New local path (submap idx):
[DBG]  19 20 21 
[DBG]  Agent (index) 71 | New local path (submap idx):
[DBG]  14 18 19 20 21 
[DBG]  Agent (index) 73 | New local path (submap idx):
[DBG]  5 6 7 2 
[DBG]  Update the agent path 0 | Original local length: 2 | New local length: 2
[DBG]  agent 0 t=0 => decoded (sx,sy)=(4,3) => global_id=647
[DBG]  agent 0 t=1 => decoded (sx,sy)=(4,4) => global_id=648
[DBG]  Complete path of agent 0:
[DBG]    Original: 517 516 548 580 612 613 645 646 647 648 649 650 682 683 684 685 717 718 719 751 783 815 847 848 849 817 818 819 820 821 822 854 855 856 857 858 859 860 861 862 830 798 799 
[DBG]    New:     517 516 548 580 612 613 645 646 647 648 649 650 682 683 684 685 717 718 719 751 783 815 847 848 849 817 818 819 820 821 822 854 855 856 857 858 859 860 861 862 830 798 799 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 517 516 548 580 612 613 645 646 
[DBG]    Local path (in submap): 647 648 
[DBG]    Suffix (out of submap): 649 650 682 683 684 685 717 718 719 751 783 815 847 848 849 817 818 819 820 821 822 854 855 856 857 858 859 860 861 862 830 798 799 
[DBG]  Original agent path length 0 je: 43
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 0: 517, 516, 548, 580, 612, 613, 645, 646, 647, 648, 649, 650, 682, 683, 684, 685, 717, 718, 719, 751, 783, 815, 847, 848, 849, 817, 818, 819, 820, 821, 822, 854, 855, 856, 857, 858, 859, 860, 861, 862, 830, 798, 799, 
[DBG]  Path for agent 0 updated, resulting length: 43
[DBG]  Update the agent path 60 | Original local length: 3 | New local length: 3
[DBG]  agent 60 t=0 => decoded (sx,sy)=(2,2) => global_id=582
[DBG]  agent 60 t=1 => decoded (sx,sy)=(2,1) => global_id=581
[DBG]  agent 60 t=2 => decoded (sx,sy)=(2,0) => global_id=580
[DBG]  Complete path of agent 60:
[DBG]    Original: 619 651 650 649 648 647 615 583 582 581 580 579 578 577 
[DBG]    New:     619 651 650 649 648 647 615 583 582 581 580 579 578 577 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 619 651 650 649 648 647 615 583 
[DBG]    Local path (in submap): 582 581 580 
[DBG]    Suffix (out of submap): 579 578 577 
[DBG]  Original agent path length 60 je: 14
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 1: 619, 651, 650, 649, 648, 647, 615, 583, 582, 581, 580, 579, 578, 577, 
[DBG]  Path for agent 60 updated, resulting length: 14
[DBG]  Update the agent path 67 | Original local length: 3 | New local length: 3
[DBG]  agent 67 t=0 => decoded (sx,sy)=(4,2) => global_id=646
[DBG]  agent 67 t=1 => decoded (sx,sy)=(4,3) => global_id=647
[DBG]  agent 67 t=2 => decoded (sx,sy)=(4,4) => global_id=648
[DBG]  Complete path of agent 67:
[DBG]    Original: 773 773 773 773 774 742 710 678 646 647 648 649 650 651 683 684 685 685 686 718 719 687 688 656 657 658 659 660 628 596 597 565 566 534 502 470 438 439 407 408 409 377 378 379 380 348 349 
[DBG]    New:     773 773 773 773 774 742 710 678 646 647 648 649 650 651 683 684 685 685 686 718 719 687 688 656 657 658 659 660 628 596 597 565 566 534 502 470 438 439 407 408 409 377 378 379 380 348 349 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 773 773 773 773 774 742 710 678 
[DBG]    Local path (in submap): 646 647 648 
[DBG]    Suffix (out of submap): 649 650 651 683 684 685 685 686 718 719 687 688 656 657 658 659 660 628 596 597 565 566 534 502 470 438 439 407 408 409 377 378 379 380 348 349 
[DBG]  Original agent path length 67 je: 47
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 2: 773, 773, 773, 773, 774, 742, 710, 678, 646, 647, 648, 649, 650, 651, 683, 684, 685, 685, 686, 718, 719, 687, 688, 656, 657, 658, 659, 660, 628, 596, 597, 565, 566, 534, 502, 470, 438, 439, 407, 408, 409, 377, 378, 379, 380, 348, 349, 
[DBG]  Path for agent 67 updated, resulting length: 47
[DBG]  Update the agent path 71 | Original local length: 5 | New local length: 5
[DBG]  agent 71 t=0 => decoded (sx,sy)=(3,1) => global_id=613
[DBG]  agent 71 t=1 => decoded (sx,sy)=(4,1) => global_id=645
[DBG]  agent 71 t=2 => decoded (sx,sy)=(4,2) => global_id=646
[DBG]  agent 71 t=3 => decoded (sx,sy)=(4,3) => global_id=647
[DBG]  agent 71 t=4 => decoded (sx,sy)=(4,4) => global_id=648
[DBG]  Complete path of agent 71:
[DBG]    Original: 482 483 515 547 579 611 611 612 613 645 646 647 648 649 648 680 712 713 745 777 809 841 873 874 906 874 875 876 908 909 909 877 878 879 880 881 882 883 884 885 917 918 919 
[DBG]    New:     482 483 515 547 579 611 611 612 613 645 646 647 648 649 648 680 712 713 745 777 809 841 873 874 906 874 875 876 908 909 909 877 878 879 880 881 882 883 884 885 917 918 919 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 482 483 515 547 579 611 611 612 
[DBG]    Local path (in submap): 613 645 646 647 648 
[DBG]    Suffix (out of submap): 649 648 680 712 713 745 777 809 841 873 874 906 874 875 876 908 909 909 877 878 879 880 881 882 883 884 885 917 918 919 
[DBG]  Original agent path length 71 je: 43
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 3: 482, 483, 515, 547, 579, 611, 611, 612, 613, 645, 646, 647, 648, 649, 648, 680, 712, 713, 745, 777, 809, 841, 873, 874, 906, 874, 875, 876, 908, 909, 909, 877, 878, 879, 880, 881, 882, 883, 884, 885, 917, 918, 919, 
[DBG]  Path for agent 71 updated, resulting length: 43
[DBG]  Update the agent path 73 | Original local length: 4 | New local length: 4
[DBG]  agent 73 t=0 => decoded (sx,sy)=(1,1) => global_id=549
[DBG]  agent 73 t=1 => decoded (sx,sy)=(1,2) => global_id=550
[DBG]  agent 73 t=2 => decoded (sx,sy)=(1,3) => global_id=551
[DBG]  agent 73 t=3 => decoded (sx,sy)=(0,3) => global_id=519
[DBG]  Complete path of agent 73:
[DBG]    Original: 609 577 578 578 578 579 580 581 549 550 551 519 487 487 486 454 455 456 
[DBG]    New:     609 577 578 578 578 579 580 581 549 550 551 519 487 487 486 454 455 456 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 609 577 578 578 578 579 580 581 
[DBG]    Local path (in submap): 549 550 551 519 
[DBG]    Suffix (out of submap): 487 487 486 454 455 456 
[DBG]  Original agent path length 73 je: 18
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 4: 609, 577, 578, 578, 578, 579, 580, 581, 549, 550, 551, 519, 487, 487, 486, 454, 455, 456, 
[DBG]  Path for agent 73 updated, resulting length: 18
[DBG]  Paths successfully updated.
[DBG]  (LNS.cpp) New path for agent 0: 
[DBG]  517, 516, 548, 580, 612, 613, 645, 646, 647, 648, 649, 650, 682, 683, 684, 685, 717, 718, 719, 751, 783, 815, 847, 848, 849, 817, 818, 819, 820, 821, 822, 854, 855, 856, 857, 858, 859, 860, 861, 862, 830, 798, 799, 
[DBG]  (LNS.cpp) New path for agent 60: 
[DBG]  619, 651, 650, 649, 648, 647, 615, 583, 582, 581, 580, 579, 578, 577, 
[DBG]  (LNS.cpp) New path for agent 67: 
[DBG]  773, 773, 773, 773, 774, 742, 710, 678, 646, 647, 648, 649, 650, 651, 683, 684, 685, 685, 686, 718, 719, 687, 688, 656, 657, 658, 659, 660, 628, 596, 597, 565, 566, 534, 502, 470, 438, 439, 407, 408, 409, 377, 378, 379, 380, 348, 349, 
[DBG]  (LNS.cpp) New path for agent 71: 
[DBG]  482, 483, 515, 547, 579, 611, 611, 612, 613, 645, 646, 647, 648, 649, 648, 680, 712, 713, 745, 777, 809, 841, 873, 874, 906, 874, 875, 876, 908, 909, 909, 877, 878, 879, 880, 881, 882, 883, 884, 885, 917, 918, 919, 
[DBG]  (LNS.cpp) New path for agent 73: 
[DBG]  609, 577, 578, 578, 578, 579, 580, 581, 549, 550, 551, 519, 487, 487, 486, 454, 455, 456, 
[DBG]  component_weights = {0.316429, 0.165772, 0.173356, 0.344444}
[DBG]  opSuccess value: 1
[STAT] neighbor.sum_of_costs before recomputation: 160
[STAT] neighbor.old_sum_of_costs before recomputation: 160
[STAT] sum_of_costs before recomputation: 4396
[DBG]  Validate solution immediately after SAT success.
[DBG]  No problems after SAT replan.
[DBG]  Recomputing sum_of_cost by dividing neighbor.sum_of_costs and neighbor.old_sum_of_costs
[STAT] sum_of_costs after recomputation: 4396
[STAT] Iteration 70
[DBG]  Using SAT operator (destroy+repair SAT).
[DBG]  ====================
[DBG]  SAT destroy operator called.
[DBG]  SAT heuristic: 2
[DBG]  key_agent_id: 108
[DBG]  key_agent_id global path length: 26
[DBG]  Submap content (global positions):
[DBG]  594 595 596 597 598 
[DBG]  626 627 628 629 630 
[DBG]  658 659 660 661 662 
[DBG]  690 691 692 693 694 
[DBG]  722 723 724 725 726 
[DBG]  Map content with agents and obstacles:
[DBG]  . X . . X 
[DBG]  X . . . X 
[DBG]  . . A A X 
[DBG]  X . . X X 
[DBG]  . X . . . 
[DBG]  content of the map structure that we pass to the SAT solver:
[DBG]  1  -1  1  1  -1  
[DBG]  -1  1  1  1  -1  
[DBG]  1  1  1  1  -1  
[DBG]  -1  1  1  -1  -1  
[DBG]  1  -1  1  1  1  
[DBG]  Identifying agents in a submap for rescheduling (when key_agent is there at the time 1):
[DBG]  Agent 7 found intervals in the sub-map:
[DBG]  
[DBG]  Agent 7 is not in sub-map at time 1 (intervals: 
[DBG]  )
[DBG]  Agent 28 found intervals in the sub-map:
[DBG]   [0..39]
[DBG]  Agent 28 (interval in submap: [0..39]) contains time 1, added to replan.
[DBG]  Agent 108 found intervals in the sub-map:
[DBG]   [0..7]
[DBG]  Agent 108 (interval in submap: [0..7]) contains time 1, added to replan.
[DBG]  Agent 28 | Start (global): 661 -> (local): (2, 3) at time 1 | Goal (global): 726 -> (local): (4, 4) at time 39
[DBG]  Agent 108 | Start (global): 660 -> (local): (2, 2) at time 1 | Goal (global): 726 -> (local): (4, 4) at time 7
[DBG]  [REPAIR] SAT destroy operator called.
[DBG]  [REPAIR] SAT operator â€“ launching subproblem FOR OPTIMIZATION.
[DBG]  Creating local paths (sx, sy) in the submap for T_sync = 1
[DBG]    Agent 28 (global paths from T=1 to 39) has local path: (2,3) (2,3) (2,3) (2,3) (2,3) (2,3) (2,3) (2,3) (2,3) (2,3) (2,3) (2,3) (2,3) (2,3) (2,3) (2,3) (2,3) (2,3) (2,3) (2,3) (2,3) (2,3) (2,3) (2,3) (2,3) (2,3) (2,3) (2,3) (2,3) (1,3) (1,2) (1,1) (1,1) (2,1) (3,1) (3,2) (4,2) (4,3) (4,4) 
[DBG]    Agent 108 (global paths from T=1 to 7) has local path: (2,2) (3,2) (3,2) (3,2) (4,2) (4,3) (4,4) 
[DBG]  Checking input data for SAT solver:
[DBG]    - Number of agents to replan: 2
[DBG]  Agent 28 has the original local path length: 39 => Start (2,3), Goal (4,4)
[DBG]  Agent 108 has the original local path length: 7 => Start (2,2), Goal (4,4)
[DBG]  Start position: (2, 3), (2, 2), 
[DBG]  Goal position: (4, 4), (4, 4), 
[DBG]  SAT instance and solver created.
Currently solving
Instance name: scen
Map name: map
Encoding used: disappear_at_goal
SAT solver used: Kissat
Optimizing function: sum of costs
Number of agents: 2
Mks LB: 6
SoC LB: 11
Delta: 0
Remaining time: 300000 [ms]

Found plan [agents = 2] [timesteps = 6]
Agent #0 : 9 8 11 13 14 15 
Agent #1 : 8 11 13 14 15 0 

[STAT] Solver returned: 0
[DBG]  Agent (index) 28 | New local path (submap idx):
[DBG]  9 8 11 13 14 15 
[DBG]  Agent (index) 108 | New local path (submap idx):
[DBG]  8 11 13 14 15 
[DBG]  Update the agent path 28 | Original local length: 39 | New local length: 6
[DBG]  agent 28 t=0 => decoded (sx,sy)=(2,3) => global_id=661
[DBG]  agent 28 t=1 => decoded (sx,sy)=(2,2) => global_id=660
[DBG]  agent 28 t=2 => decoded (sx,sy)=(3,2) => global_id=692
[DBG]  agent 28 t=3 => decoded (sx,sy)=(4,2) => global_id=724
[DBG]  agent 28 t=4 => decoded (sx,sy)=(4,3) => global_id=725
[DBG]  agent 28 t=5 => decoded (sx,sy)=(4,4) => global_id=726
[DBG]  Complete path of agent 28:
[DBG]    Original: 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 629 628 627 627 659 691 692 724 725 726 727 
[DBG]    New:     661 661 660 692 724 725 726 727 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 661 
[DBG]    Local path (in submap): 661 660 692 724 725 726 727 
[DBG]    Suffix (out of submap): 
[DBG]  Original agent path length 28 je: 41
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 0: 661, 661, 660, 692, 724, 725, 726, 727, 
[DBG]  Path for agent 28 updated, resulting length: 8
[DBG]  Update the agent path 108 | Original local length: 7 | New local length: 5
[DBG]  agent 108 t=0 => decoded (sx,sy)=(2,2) => global_id=660
[DBG]  agent 108 t=1 => decoded (sx,sy)=(3,2) => global_id=692
[DBG]  agent 108 t=2 => decoded (sx,sy)=(4,2) => global_id=724
[DBG]  agent 108 t=3 => decoded (sx,sy)=(4,3) => global_id=725
[DBG]  agent 108 t=4 => decoded (sx,sy)=(4,4) => global_id=726
[DBG]  Complete path of agent 108:
[DBG]    Original: 628 660 692 692 692 724 725 726 727 728 729 730 731 732 764 765 797 829 861 860 892 924 956 957 989 1021 
[DBG]    New:     628 660 692 724 725 726 727 728 729 730 731 732 764 765 797 829 861 860 892 924 956 957 989 1021 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 628 
[DBG]    Local path (in submap): 660 692 724 725 726 727 728 
[DBG]    Suffix (out of submap): 729 730 731 732 764 765 797 829 861 860 892 924 956 957 989 1021 
[DBG]  Original agent path length 108 je: 26
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 1: 628, 660, 692, 724, 725, 726, 727, 728, 729, 730, 731, 732, 764, 765, 797, 829, 861, 860, 892, 924, 956, 957, 989, 1021, 
[DBG]  Path for agent 108 updated, resulting length: 24
[DBG]  Paths successfully updated.
[DBG]  (LNS.cpp) New path for agent 28: 
[DBG]  661, 661, 660, 692, 724, 725, 726, 727, 
[DBG]  (LNS.cpp) New path for agent 108: 
[DBG]  628, 660, 692, 724, 725, 726, 727, 728, 729, 730, 731, 732, 764, 765, 797, 829, 861, 860, 892, 924, 956, 957, 989, 1021, 
[DBG]  component_weights = {0.31363, 0.164306, 0.171823, 0.350241}
[DBG]  opSuccess value: 1
[STAT] neighbor.sum_of_costs before recomputation: 30
[STAT] neighbor.old_sum_of_costs before recomputation: 65
[STAT] sum_of_costs before recomputation: 4396
[DBG]  Validate solution immediately after SAT success.
[WARNING] Problem after SAT: Target conflict: agent 1 (len 14) traverses target of agent 28 (len 7) at location 727 at timestep 13
[DBG]  Attempting immediate repair via init_lns because problem occurred after SAT (should be applied only for conflicts...).
[DBG]  Passing 150 agents to init_lns (skip=true).
[DBG]  path_table contents for selected agents (neighbor.agents):
[DBG]    Agent 28 => controlling path length=8
[DBG]    Agent 108 => controlling path length=24
[DBG]  hodnota skip_initial_solution=1
[DBG]  We skip initialSolution => call buildCollisionData()
[DBG]  buildCollisionData() called â€“ skip_initial_solution case.
[DBG]  Agents.size()=150, collision_graph.size()=150
[DBG]  agent 1 => updateCollidingPairs => foundCollision
[DBG]  agent 28 => updateCollidingPairs => foundCollision
[DBG]  agent 42 => updateCollidingPairs => foundCollision
[DBG]  agent 46 => updateCollidingPairs => foundCollision
[DBG]  agent 91 => updateCollidingPairs => foundCollision
[DBG]  agent 109 => updateCollidingPairs => foundCollision
[DBG]  Conflicting agent pairs:
[DBG]  agent 1 is in conflict with agent 28
[DBG]  agent 28 is in conflict with agent 42
[DBG]  agent 28 is in conflict with agent 46
[DBG]  agent 28 is in conflict with agent 91
[DBG]  agent 28 is in conflict with agent 109
[DBG]  buildCollisionData() => sum_of_costs=4361, num_of_colliding_pairs=5
[DBG]  buildCollisionData done => sum_of_costs=4361, num_of_colliding_pairs=5
[DBG]  sum_of_cost hodnota: 4361
[DBG]  After skip/init build => iteration_stats.back(): sum_of_costs=4361, collisions=5
[DEBUG] Using default neighbor generation strategy for conflicts: 0
	InitLNS(PP): runtime = 0.00665396, iterations = 2, colliding pairs = 0, initial colliding pairs = 5, solution cost = 4426, initial solution cost = 4361, failed iterations = 0
[DBG]  init_lns->sum_of_costs after init_lns->run: 4426
[DBG]  sum_of_costs after assignment from init_lns->run: 4426
[DBG]  Recomputing sum_of_cost by dividing neighbor.sum_of_costs and neighbor.old_sum_of_costs
[STAT] sum_of_costs after recomputation: 4426
[STAT] Iteration 71
[DBG]  Using SAT operator (destroy+repair SAT).
[DBG]  ====================
[DBG]  SAT destroy operator called.
[DBG]  SAT heuristic: 2
[DBG]  key_agent_id: 8
[DBG]  key_agent_id global path length: 5
[DBG]  Submap content (global positions):
[DBG]  302 303 304 305 306 
[DBG]  334 335 336 337 338 
[DBG]  366 367 368 369 370 
[DBG]  398 399 400 401 402 
[DBG]  430 431 432 433 434 
[DBG]  Map content with agents and obstacles:
[DBG]  . . . X . 
[DBG]  X . A . . 
[DBG]  . . A A X 
[DBG]  . X A . . 
[DBG]  . . . . X 
[DBG]  content of the map structure that we pass to the SAT solver:
[DBG]  1  1  1  -1  1  
[DBG]  -1  1  1  1  1  
[DBG]  1  1  1  1  -1  
[DBG]  1  -1  1  1  1  
[DBG]  1  1  1  1  -1  
[DBG]  Identifying agents in a submap for rescheduling (when key_agent is there at the time 3):
[DBG]  Agent 8 found intervals in the sub-map:
[DBG]   [0..4]
[DBG]  Agent 8 (interval in submap: [0..4]) contains time 3, added to replan.
[DBG]  Agent 31 found intervals in the sub-map:
[DBG]   [0..6]
[DBG]  Agent 31 (interval in submap: [0..6]) contains time 3, added to replan.
[DBG]  Agent 36 found intervals in the sub-map:
[DBG]   [0..0] [11..16]
[DBG]  Agent 36 is not in sub-map at time 3 (intervals: 
[DBG]  [0..0] [11..16] )
[DBG]  Agent 54 found intervals in the sub-map:
[DBG]  
[DBG]  Agent 54 is not in sub-map at time 3 (intervals: 
[DBG]  )
[DBG]  Agent 112 found intervals in the sub-map:
[DBG]   [0..6] [10..19]
[DBG]  Agent 112 (interval in submap: [0..6]) contains time 3, added to replan.
[DBG]  Agent 121 found intervals in the sub-map:
[DBG]   [0..11]
[DBG]  Agent 121 (interval in submap: [0..11]) contains time 3, added to replan.
[DBG]  Agent 145 found intervals in the sub-map:
[DBG]   [0..1]
[DBG]  Agent 145 is not in sub-map at time 3 (intervals: 
[DBG]  [0..1] )
[DBG]  Agent 8 | Start (global): 368 -> (local): (2, 2) at time 3 | Goal (global): 369 -> (local): (2, 3) at time 4
[DBG]  Agent 31 | Start (global): 369 -> (local): (2, 3) at time 3 | Goal (global): 306 -> (local): (0, 4) at time 6
[DBG]  Agent 112 | Start (global): 336 -> (local): (1, 2) at time 3 | Goal (global): 338 -> (local): (1, 4) at time 6
[DBG]  Agent 121 | Start (global): 400 -> (local): (3, 2) at time 3 | Goal (global): 432 -> (local): (4, 2) at time 11
[DBG]  [REPAIR] SAT destroy operator called.
[DBG]  [REPAIR] SAT operator â€“ launching subproblem FOR OPTIMIZATION.
[DBG]  Creating local paths (sx, sy) in the submap for T_sync = 3
[DBG]    Agent 8 (global paths from T=3 to 4) has local path: (2,2) (2,3) 
[DBG]    Agent 31 (global paths from T=3 to 6) has local path: (2,3) (1,3) (1,4) (0,4) 
[DBG]    Agent 112 (global paths from T=3 to 6) has local path: (1,2) (1,2) (1,3) (1,4) 
[DBG]    Agent 121 (global paths from T=3 to 11) has local path: (3,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (3,2) (4,2) 
[DBG]  Checking input data for SAT solver:
[DBG]    - Number of agents to replan: 4
[DBG]  Agent 8 has the original local path length: 2 => Start (2,2), Goal (2,3)
[DBG]  Agent 31 has the original local path length: 4 => Start (2,3), Goal (0,4)
[DBG]  Agent 112 has the original local path length: 4 => Start (1,2), Goal (1,4)
[DBG]  Agent 121 has the original local path length: 9 => Start (3,2), Goal (4,2)
[DBG]  Start position: (2, 2), (2, 3), (1, 2), (3, 2), 
[DBG]  Goal position: (2, 3), (0, 4), (1, 4), (4, 2), 
[DBG]  SAT instance and solver created.
Currently solving
Instance name: scen
Map name: map
Encoding used: disappear_at_goal
SAT solver used: Kissat
Optimizing function: sum of costs
Number of agents: 4
Mks LB: 4
SoC LB: 11
Delta: 0
Remaining time: 300000 [ms]

[STAT] Solver returned: -1
[DBG]  SAT solver failed.
[STAT] SAT solver failed to find a valid solution.
[DBG]  ====================
[DBG]  SAT destroy operator called.
[DBG]  SAT heuristic: 2
[DBG]  key_agent_id: 8
[DBG]  key_agent_id global path length: 5
[DBG]  Submap content (global positions):
[DBG]  303 304 305 306 307 
[DBG]  335 336 337 338 339 
[DBG]  367 368 369 370 371 
[DBG]  399 400 401 402 403 
[DBG]  431 432 433 434 435 
[DBG]  Map content with agents and obstacles:
[DBG]  . . X . X 
[DBG]  . A A . A 
[DBG]  . A A X . 
[DBG]  X . . . . 
[DBG]  . . . X A 
[DBG]  content of the map structure that we pass to the SAT solver:
[DBG]  1  1  -1  1  -1  
[DBG]  1  1  1  1  1  
[DBG]  1  1  1  -1  1  
[DBG]  -1  1  1  1  1  
[DBG]  1  1  1  -1  1  
[DBG]  Identifying agents in a submap for rescheduling (when key_agent is there at the time 4):
[DBG]  Agent 8 found intervals in the sub-map:
[DBG]   [0..4]
[DBG]  Agent 8 (interval in submap: [0..4]) contains time 4, added to replan.
[DBG]  Agent 31 found intervals in the sub-map:
[DBG]   [0..6]
[DBG]  Agent 31 (interval in submap: [0..6]) contains time 4, added to replan.
[DBG]  Agent 36 found intervals in the sub-map:
[DBG]   [0..0] [6..18]
[DBG]  Agent 36 is not in sub-map at time 4 (intervals: 
[DBG]  [0..0] [6..18] )
[DBG]  Agent 54 found intervals in the sub-map:
[DBG]   [4..5]
[DBG]  Agent 54 (interval in submap: [4..5]) contains time 4, added to replan.
[DBG]  Agent 106 found intervals in the sub-map:
[DBG]   [4..11]
[DBG]  Agent 106 (interval in submap: [4..11]) contains time 4, added to replan.
[DBG]  Agent 112 found intervals in the sub-map:
[DBG]   [0..18]
[DBG]  Agent 112 (interval in submap: [0..18]) contains time 4, added to replan.
[DBG]  Agent 121 found intervals in the sub-map:
[DBG]   [0..11]
[DBG]  Agent 121 (interval in submap: [0..11]) contains time 4, added to replan.
[DBG]  Agent 131 found intervals in the sub-map:
[DBG]   [11..11]
[DBG]  Agent 131 is not in sub-map at time 4 (intervals: 
[DBG]  [11..11] )
[DBG]  Agent 145 found intervals in the sub-map:
[DBG]   [0..1]
[DBG]  Agent 145 is not in sub-map at time 4 (intervals: 
[DBG]  [0..1] )
[DBG]  Agent 8 | Start (global): 369 -> (local): (2, 2) at time 4 | Goal (global): 369 -> (local): (2, 2) at time 4
[DBG]  Agent 31 | Start (global): 337 -> (local): (1, 2) at time 4 | Goal (global): 306 -> (local): (0, 3) at time 6
[DBG]  Agent 54 | Start (global): 435 -> (local): (4, 4) at time 4 | Goal (global): 403 -> (local): (3, 4) at time 5
[DBG]  Agent 106 | Start (global): 339 -> (local): (1, 4) at time 4 | Goal (global): 431 -> (local): (4, 0) at time 11
[DBG]  Agent 112 | Start (global): 336 -> (local): (1, 1) at time 4 | Goal (global): 303 -> (local): (0, 0) at time 18
[DBG]  Agent 121 | Start (global): 368 -> (local): (2, 1) at time 4 | Goal (global): 432 -> (local): (4, 1) at time 11
[DBG]  [REPAIR] SAT destroy operator called.
[DBG]  [REPAIR] SAT operator â€“ launching subproblem FOR OPTIMIZATION.
[DBG]  Creating local paths (sx, sy) in the submap for T_sync = 4
[DBG]    Agent 8 (global paths from T=4 to 4) has local path: (2,2) 
[DBG]    Agent 31 (global paths from T=4 to 6) has local path: (1,2) (1,3) (0,3) 
[DBG]    Agent 54 (global paths from T=4 to 5) has local path: (4,4) (3,4) 
[DBG]    Agent 106 (global paths from T=4 to 11) has local path: (1,4) (2,4) (3,4) (3,3) (3,2) (3,1) (4,1) (4,0) 
[DBG]    Agent 112 (global paths from T=4 to 18) has local path: (1,1) (1,2) (1,3) (1,4) (2,4) (3,4) (3,3) (3,2) (3,1) (3,1) (3,1) (2,1) (1,1) (0,1) (0,0) 
[DBG]    Agent 121 (global paths from T=4 to 11) has local path: (2,1) (2,1) (2,1) (2,1) (2,1) (2,1) (3,1) (4,1) 
[DBG]  Checking input data for SAT solver:
[DBG]    - Number of agents to replan: 6
[DBG]  Agent 8 has the original local path length: 1 => Start (2,2), Goal (2,2)
[DBG]  Agent 31 has the original local path length: 3 => Start (1,2), Goal (0,3)
[DBG]  Agent 54 has the original local path length: 2 => Start (4,4), Goal (3,4)
[DBG]  Agent 106 has the original local path length: 8 => Start (1,4), Goal (4,0)
[DBG]  Agent 112 has the original local path length: 15 => Start (1,1), Goal (0,0)
[DBG]  Agent 121 has the original local path length: 8 => Start (2,1), Goal (4,1)
[DBG]  Start position: (2, 2), (1, 2), (4, 4), (1, 4), (1, 1), (2, 1), 
[DBG]  Goal position: (2, 2), (0, 3), (3, 4), (4, 0), (0, 0), (4, 1), 
[DBG]  SAT instance and solver created.
Currently solving
Instance name: scen
Map name: map
Encoding used: disappear_at_goal
SAT solver used: Kissat
Optimizing function: sum of costs
Number of agents: 6
Mks LB: 8
SoC LB: 20
Delta: 0
Remaining time: 300000 [ms]

Vertex conflict! Agents 0, 1, timestep 3, location 0
Swapping conflict! Agents 0, 1, timestep 3, edge (0,0)
Vertex conflict! Agents 0, 1, timestep 4, location 0
Swapping conflict! Agents 0, 1, timestep 4, edge (0,0)
Vertex conflict! Agents 0, 1, timestep 5, location 0
Swapping conflict! Agents 0, 1, timestep 5, edge (0,0)
Vertex conflict! Agents 0, 1, timestep 6, location 0
Swapping conflict! Agents 0, 1, timestep 6, edge (0,0)
Vertex conflict! Agents 0, 1, timestep 7, location 0
Vertex conflict! Agents 0, 2, timestep 2, location 0
Swapping conflict! Agents 0, 2, timestep 2, edge (0,0)
Vertex conflict! Agents 0, 2, timestep 3, location 0
Swapping conflict! Agents 0, 2, timestep 3, edge (0,0)
Vertex conflict! Agents 0, 2, timestep 4, location 0
Swapping conflict! Agents 0, 2, timestep 4, edge (0,0)
Vertex conflict! Agents 0, 2, timestep 5, location 0
Swapping conflict! Agents 0, 2, timestep 5, edge (0,0)
Vertex conflict! Agents 0, 2, timestep 6, location 0
Swapping conflict! Agents 0, 2, timestep 6, edge (0,0)
Vertex conflict! Agents 0, 2, timestep 7, location 0
Vertex conflict! Agents 0, 4, timestep 2, location 0
Swapping conflict! Agents 0, 4, timestep 2, edge (0,0)
Vertex conflict! Agents 0, 4, timestep 3, location 0
Swapping conflict! Agents 0, 4, timestep 3, edge (0,0)
Vertex conflict! Agents 0, 4, timestep 4, location 0
Swapping conflict! Agents 0, 4, timestep 4, edge (0,0)
Vertex conflict! Agents 0, 4, timestep 5, location 0
Swapping conflict! Agents 0, 4, timestep 5, edge (0,0)
Vertex conflict! Agents 0, 4, timestep 6, location 0
Swapping conflict! Agents 0, 4, timestep 6, edge (0,0)
Vertex conflict! Agents 0, 4, timestep 7, location 0
Vertex conflict! Agents 0, 5, timestep 3, location 0
Swapping conflict! Agents 0, 5, timestep 3, edge (0,0)
Vertex conflict! Agents 0, 5, timestep 4, location 0
Swapping conflict! Agents 0, 5, timestep 4, edge (0,0)
Vertex conflict! Agents 0, 5, timestep 5, location 0
Swapping conflict! Agents 0, 5, timestep 5, edge (0,0)
Vertex conflict! Agents 0, 5, timestep 6, location 0
Swapping conflict! Agents 0, 5, timestep 6, edge (0,0)
Vertex conflict! Agents 0, 5, timestep 7, location 0
Vertex conflict! Agents 1, 2, timestep 3, location 0
Swapping conflict! Agents 1, 2, timestep 3, edge (0,0)
Vertex conflict! Agents 1, 2, timestep 4, location 0
Swapping conflict! Agents 1, 2, timestep 4, edge (0,0)
Vertex conflict! Agents 1, 2, timestep 5, location 0
Swapping conflict! Agents 1, 2, timestep 5, edge (0,0)
Vertex conflict! Agents 1, 2, timestep 6, location 0
Swapping conflict! Agents 1, 2, timestep 6, edge (0,0)
Vertex conflict! Agents 1, 2, timestep 7, location 0
Vertex conflict! Agents 1, 4, timestep 3, location 0
Swapping conflict! Agents 1, 4, timestep 3, edge (0,0)
Vertex conflict! Agents 1, 4, timestep 4, location 0
Swapping conflict! Agents 1, 4, timestep 4, edge (0,0)
Vertex conflict! Agents 1, 4, timestep 5, location 0
Swapping conflict! Agents 1, 4, timestep 5, edge (0,0)
Vertex conflict! Agents 1, 4, timestep 6, location 0
Swapping conflict! Agents 1, 4, timestep 6, edge (0,0)
Vertex conflict! Agents 1, 4, timestep 7, location 0
Vertex conflict! Agents 1, 5, timestep 3, location 0
Swapping conflict! Agents 1, 5, timestep 3, edge (0,0)
Vertex conflict! Agents 1, 5, timestep 4, location 0
Swapping conflict! Agents 1, 5, timestep 4, edge (0,0)
Vertex conflict! Agents 1, 5, timestep 5, location 0
Swapping conflict! Agents 1, 5, timestep 5, edge (0,0)
Vertex conflict! Agents 1, 5, timestep 6, location 0
Swapping conflict! Agents 1, 5, timestep 6, edge (0,0)
Vertex conflict! Agents 1, 5, timestep 7, location 0
Vertex conflict! Agents 2, 4, timestep 2, location 0
Swapping conflict! Agents 2, 4, timestep 2, edge (0,0)
Vertex conflict! Agents 2, 4, timestep 3, location 0
Swapping conflict! Agents 2, 4, timestep 3, edge (0,0)
Vertex conflict! Agents 2, 4, timestep 4, location 0
Swapping conflict! Agents 2, 4, timestep 4, edge (0,0)
Vertex conflict! Agents 2, 4, timestep 5, location 0
Swapping conflict! Agents 2, 4, timestep 5, edge (0,0)
Vertex conflict! Agents 2, 4, timestep 6, location 0
Swapping conflict! Agents 2, 4, timestep 6, edge (0,0)
Vertex conflict! Agents 2, 4, timestep 7, location 0
Vertex conflict! Agents 2, 5, timestep 3, location 0
Swapping conflict! Agents 2, 5, timestep 3, edge (0,0)
Vertex conflict! Agents 2, 5, timestep 4, location 0
Swapping conflict! Agents 2, 5, timestep 4, edge (0,0)
Vertex conflict! Agents 2, 5, timestep 5, location 0
Swapping conflict! Agents 2, 5, timestep 5, edge (0,0)
Vertex conflict! Agents 2, 5, timestep 6, location 0
Swapping conflict! Agents 2, 5, timestep 6, edge (0,0)
Vertex conflict! Agents 2, 5, timestep 7, location 0
Vertex conflict! Agents 4, 5, timestep 3, location 0
Swapping conflict! Agents 4, 5, timestep 3, edge (0,0)
Vertex conflict! Agents 4, 5, timestep 4, location 0
Swapping conflict! Agents 4, 5, timestep 4, edge (0,0)
Vertex conflict! Agents 4, 5, timestep 5, location 0
Swapping conflict! Agents 4, 5, timestep 5, edge (0,0)
Vertex conflict! Agents 4, 5, timestep 6, location 0
Swapping conflict! Agents 4, 5, timestep 6, edge (0,0)
Vertex conflict! Agents 4, 5, timestep 7, location 0
Found plan [agents = 6] [timesteps = 8]
Agent #0 : 10 0 0 0 0 0 0 0 
Agent #1 : 5 6 2 0 0 0 0 0 
Agent #2 : 19 15 0 0 0 0 0 0 
Agent #3 : 7 11 15 14 13 18 17 16 
Agent #4 : 4 3 0 0 0 0 0 0 
Agent #5 : 9 12 17 0 0 0 0 0 

[STAT] Solver returned: 0
[DBG]  Agent (index) 8 | New local path (submap idx):
[DBG]  10 
[DBG]  Agent (index) 31 | New local path (submap idx):
[DBG]  5 6 2 
[DBG]  Agent (index) 54 | New local path (submap idx):
[DBG]  19 15 
[DBG]  Agent (index) 106 | New local path (submap idx):
[DBG]  7 11 15 14 13 18 17 16 
[DBG]  Agent (index) 112 | New local path (submap idx):
[DBG]  4 3 0 
[DBG]  Agent (index) 121 | New local path (submap idx):
[DBG]  9 12 17 
[DBG]  Update the agent path 8 | Original local length: 1 | New local length: 1
[DBG]  agent 8 t=0 => decoded (sx,sy)=(2,2) => global_id=369
[DBG]  Complete path of agent 8:
[DBG]    Original: 303 304 336 368 369 
[DBG]    New:     303 304 336 368 369 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 303 304 336 368 
[DBG]    Local path (in submap): 369 
[DBG]    Suffix (out of submap): 
[DBG]  Original agent path length 8 je: 5
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 0: 303, 304, 336, 368, 369, 
[DBG]  Path for agent 8 updated, resulting length: 5
[DBG]  Update the agent path 31 | Original local length: 3 | New local length: 3
[DBG]  agent 31 t=0 => decoded (sx,sy)=(1,2) => global_id=337
[DBG]  agent 31 t=1 => decoded (sx,sy)=(1,3) => global_id=338
[DBG]  agent 31 t=2 => decoded (sx,sy)=(0,3) => global_id=306
[DBG]  Complete path of agent 31:
[DBG]    Original: 432 400 368 369 337 338 306 274 275 276 277 278 279 247 248 249 217 185 153 121 89 
[DBG]    New:     432 400 368 369 337 338 306 274 275 276 277 278 279 247 248 249 217 185 153 121 89 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 432 400 368 369 
[DBG]    Local path (in submap): 337 338 306 
[DBG]    Suffix (out of submap): 274 275 276 277 278 279 247 248 249 217 185 153 121 89 
[DBG]  Original agent path length 31 je: 21
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 1: 432, 400, 368, 369, 337, 338, 306, 274, 275, 276, 277, 278, 279, 247, 248, 249, 217, 185, 153, 121, 89, 
[DBG]  Path for agent 31 updated, resulting length: 21
[DBG]  Update the agent path 54 | Original local length: 2 | New local length: 2
[DBG]  agent 54 t=0 => decoded (sx,sy)=(4,4) => global_id=435
[DBG]  agent 54 t=1 => decoded (sx,sy)=(3,4) => global_id=403
[DBG]  Complete path of agent 54:
[DBG]    Original: 464 465 466 467 435 403 404 404 404 405 437 437 469 469 469 469 470 502 503 504 472 473 474 506 538 570 571 
[DBG]    New:     464 465 466 467 435 403 404 404 404 405 437 437 469 469 469 469 470 502 503 504 472 473 474 506 538 570 571 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 464 465 466 467 
[DBG]    Local path (in submap): 435 403 
[DBG]    Suffix (out of submap): 404 404 404 405 437 437 469 469 469 469 470 502 503 504 472 473 474 506 538 570 571 
[DBG]  Original agent path length 54 je: 27
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 2: 464, 465, 466, 467, 435, 403, 404, 404, 404, 405, 437, 437, 469, 469, 469, 469, 470, 502, 503, 504, 472, 473, 474, 506, 538, 570, 571, 
[DBG]  Path for agent 54 updated, resulting length: 27
[DBG]  Update the agent path 106 | Original local length: 8 | New local length: 8
[DBG]  agent 106 t=0 => decoded (sx,sy)=(1,4) => global_id=339
[DBG]  agent 106 t=1 => decoded (sx,sy)=(2,4) => global_id=371
[DBG]  agent 106 t=2 => decoded (sx,sy)=(3,4) => global_id=403
[DBG]  agent 106 t=3 => decoded (sx,sy)=(3,3) => global_id=402
[DBG]  agent 106 t=4 => decoded (sx,sy)=(3,2) => global_id=401
[DBG]  agent 106 t=5 => decoded (sx,sy)=(4,2) => global_id=433
[DBG]  agent 106 t=6 => decoded (sx,sy)=(4,1) => global_id=432
[DBG]  agent 106 t=7 => decoded (sx,sy)=(4,0) => global_id=431
[DBG]  Complete path of agent 106:
[DBG]    Original: 244 276 308 340 339 371 403 402 401 400 432 431 463 462 494 526 525 524 523 522 521 520 519 551 583 615 647 646 678 710 742 774 775 776 777 778 779 747 715 
[DBG]    New:     244 276 308 340 339 371 403 402 401 433 432 431 463 462 494 526 525 524 523 522 521 520 519 551 583 615 647 646 678 710 742 774 775 776 777 778 779 747 715 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 244 276 308 340 
[DBG]    Local path (in submap): 339 371 403 402 401 433 432 431 
[DBG]    Suffix (out of submap): 463 462 494 526 525 524 523 522 521 520 519 551 583 615 647 646 678 710 742 774 775 776 777 778 779 747 715 
[DBG]  Original agent path length 106 je: 39
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 3: 244, 276, 308, 340, 339, 371, 403, 402, 401, 433, 432, 431, 463, 462, 494, 526, 525, 524, 523, 522, 521, 520, 519, 551, 583, 615, 647, 646, 678, 710, 742, 774, 775, 776, 777, 778, 779, 747, 715, 
[DBG]  Path for agent 106 updated, resulting length: 39
[DBG]  Update the agent path 112 | Original local length: 15 | New local length: 3
[DBG]  agent 112 t=0 => decoded (sx,sy)=(1,1) => global_id=336
[DBG]  agent 112 t=1 => decoded (sx,sy)=(1,0) => global_id=335
[DBG]  agent 112 t=2 => decoded (sx,sy)=(0,0) => global_id=303
[DBG]  Complete path of agent 112:
[DBG]    Original: 337 337 337 336 336 337 338 339 371 403 402 401 400 400 400 368 336 304 303 302 301 300 299 331 363 395 427 426 425 424 423 455 487 486 485 517 549 581 613 645 677 676 675 
[DBG]    New:     337 337 337 336 336 335 303 302 301 300 299 331 363 395 427 426 425 424 423 455 487 486 485 517 549 581 613 645 677 676 675 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 337 337 337 336 
[DBG]    Local path (in submap): 336 335 303 302 301 300 299 331 363 395 427 426 425 424 423 
[DBG]    Suffix (out of submap): 455 487 486 485 517 549 581 613 645 677 676 675 
[DBG]  Original agent path length 112 je: 43
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 4: 337, 337, 337, 336, 336, 335, 303, 302, 301, 300, 299, 331, 363, 395, 427, 426, 425, 424, 423, 455, 487, 486, 485, 517, 549, 581, 613, 645, 677, 676, 675, 
[DBG]  Path for agent 112 updated, resulting length: 31
[DBG]  Update the agent path 121 | Original local length: 8 | New local length: 3
[DBG]  agent 121 t=0 => decoded (sx,sy)=(2,1) => global_id=368
[DBG]  agent 121 t=1 => decoded (sx,sy)=(3,1) => global_id=400
[DBG]  agent 121 t=2 => decoded (sx,sy)=(4,1) => global_id=432
[DBG]  Complete path of agent 121:
[DBG]    Original: 401 401 400 400 368 368 368 368 368 368 400 432 464 463 462 494 526 558 558 558 558 590 589 588 556 555 
[DBG]    New:     401 401 400 400 368 400 432 464 463 462 494 526 558 558 558 558 590 589 588 556 555 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 401 401 400 400 
[DBG]    Local path (in submap): 368 400 432 464 463 462 494 526 
[DBG]    Suffix (out of submap): 558 558 558 558 590 589 588 556 555 
[DBG]  Original agent path length 121 je: 26
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 5: 401, 401, 400, 400, 368, 400, 432, 464, 463, 462, 494, 526, 558, 558, 558, 558, 590, 589, 588, 556, 555, 
[DBG]  Path for agent 121 updated, resulting length: 21
[DBG]  Paths successfully updated.
[DBG]  (LNS.cpp) New path for agent 8: 
[DBG]  303, 304, 336, 368, 369, 
[DBG]  (LNS.cpp) New path for agent 31: 
[DBG]  432, 400, 368, 369, 337, 338, 306, 274, 275, 276, 277, 278, 279, 247, 248, 249, 217, 185, 153, 121, 89, 
[DBG]  (LNS.cpp) New path for agent 54: 
[DBG]  464, 465, 466, 467, 435, 403, 404, 404, 404, 405, 437, 437, 469, 469, 469, 469, 470, 502, 503, 504, 472, 473, 474, 506, 538, 570, 571, 
[DBG]  (LNS.cpp) New path for agent 106: 
[DBG]  244, 276, 308, 340, 339, 371, 403, 402, 401, 433, 432, 431, 463, 462, 494, 526, 525, 524, 523, 522, 521, 520, 519, 551, 583, 615, 647, 646, 678, 710, 742, 774, 775, 776, 777, 778, 779, 747, 715, 
[DBG]  (LNS.cpp) New path for agent 112: 
[DBG]  337, 337, 337, 336, 336, 335, 303, 302, 301, 300, 299, 331, 363, 395, 427, 426, 425, 424, 423, 455, 487, 486, 485, 517, 549, 581, 613, 645, 677, 676, 675, 
[DBG]  (LNS.cpp) New path for agent 121: 
[DBG]  401, 401, 400, 400, 368, 400, 432, 464, 463, 462, 494, 526, 558, 558, 558, 558, 590, 589, 588, 556, 555, 
[DBG]  component_weights = {0.311283, 0.163076, 0.170537, 0.355104}
[DBG]  opSuccess value: 1
[STAT] neighbor.sum_of_costs before recomputation: 138
[STAT] neighbor.old_sum_of_costs before recomputation: 155
[STAT] sum_of_costs before recomputation: 4426
[DBG]  Validate solution immediately after SAT success.
[WARNING] Problem after SAT: Edge conflict between agents 112 and 13 at edge (423,455) at timestep 19
[DBG]  Attempting immediate repair via init_lns because problem occurred after SAT (should be applied only for conflicts...).
[DBG]  Passing 150 agents to init_lns (skip=true).
[DBG]  path_table contents for selected agents (neighbor.agents):
[DBG]    Agent 8 => controlling path length=5
[DBG]    Agent 31 => controlling path length=21
[DBG]    Agent 54 => controlling path length=27
[DBG]    Agent 106 => controlling path length=39
[DBG]    Agent 112 => controlling path length=31
[DBG]    Agent 121 => controlling path length=21
[DBG]  hodnota skip_initial_solution=1
[DBG]  We skip initialSolution => call buildCollisionData()
[DBG]  buildCollisionData() called â€“ skip_initial_solution case.
[DBG]  Agents.size()=150, collision_graph.size()=150
[DBG]  agent 13 => updateCollidingPairs => foundCollision
[DBG]  agent 23 => updateCollidingPairs => foundCollision
[DBG]  agent 42 => updateCollidingPairs => foundCollision
[DBG]  agent 43 => updateCollidingPairs => foundCollision
[DBG]  agent 87 => updateCollidingPairs => foundCollision
[DBG]  agent 112 => updateCollidingPairs => foundCollision
[DBG]  agent 118 => updateCollidingPairs => foundCollision
[DBG]  agent 121 => updateCollidingPairs => foundCollision
[DBG]  agent 125 => updateCollidingPairs => foundCollision
[DBG]  agent 132 => updateCollidingPairs => foundCollision
[DBG]  agent 137 => updateCollidingPairs => foundCollision
[DBG]  Conflicting agent pairs:
[DBG]  agent 13 is in conflict with agent 112
[DBG]  agent 23 is in conflict with agent 112
[DBG]  agent 42 is in conflict with agent 121
[DBG]  agent 43 is in conflict with agent 112
[DBG]  agent 87 is in conflict with agent 112
[DBG]  agent 112 is in conflict with agent 125
[DBG]  agent 112 is in conflict with agent 137
[DBG]  agent 118 is in conflict with agent 121
[DBG]  agent 121 is in conflict with agent 125
[DBG]  agent 121 is in conflict with agent 132
[DBG]  buildCollisionData() => sum_of_costs=4409, num_of_colliding_pairs=10
[DBG]  buildCollisionData done => sum_of_costs=4409, num_of_colliding_pairs=10
[DBG]  sum_of_cost hodnota: 4409
[DBG]  After skip/init build => iteration_stats.back(): sum_of_costs=4409, collisions=10
[DEBUG] Using default neighbor generation strategy for conflicts: 0
[DEBUG] Using default neighbor generation strategy for conflicts: 2
[DEBUG] Using default neighbor generation strategy for conflicts: 0
[DEBUG] Using default neighbor generation strategy for conflicts: 1
[DEBUG] Using default neighbor generation strategy for conflicts: 0
[DEBUG] Using default neighbor generation strategy for conflicts: 2
[DEBUG] Using default neighbor generation strategy for conflicts: 1
	InitLNS(PP): runtime = 0.0371343, iterations = 8, colliding pairs = 0, initial colliding pairs = 10, solution cost = 4448, initial solution cost = 4409, failed iterations = 0
[DBG]  init_lns->sum_of_costs after init_lns->run: 4448
[DBG]  sum_of_costs after assignment from init_lns->run: 4448
[DBG]  Recomputing sum_of_cost by dividing neighbor.sum_of_costs and neighbor.old_sum_of_costs
[STAT] sum_of_costs after recomputation: 4448
[STAT] Iteration 72
[DBG]  Using SAT operator (destroy+repair SAT).
[DBG]  ====================
[DBG]  SAT destroy operator called.
[DBG]  SAT heuristic: 2
[DBG]  key_agent_id: 21
[DBG]  key_agent_id global path length: 18
[DBG]  Submap content (global positions):
[DBG]  357 358 359 360 361 
[DBG]  389 390 391 392 393 
[DBG]  421 422 423 424 425 
[DBG]  453 454 455 456 457 
[DBG]  485 486 487 488 489 
[DBG]  Map content with agents and obstacles:
[DBG]  A . . . . 
[DBG]  . A . X . 
[DBG]  A A A A . 
[DBG]  X A . . . 
[DBG]  . . . X . 
[DBG]  content of the map structure that we pass to the SAT solver:
[DBG]  1  1  1  1  1  
[DBG]  1  1  1  -1  1  
[DBG]  1  1  1  1  1  
[DBG]  -1  1  1  1  1  
[DBG]  1  1  1  -1  1  
[DBG]  Identifying agents in a submap for rescheduling (when key_agent is there at the time 10):
[DBG]  Agent 16 found intervals in the sub-map:
[DBG]   [0..5]
[DBG]  Agent 16 is not in sub-map at time 10 (intervals: 
[DBG]  [0..5] )
[DBG]  Agent 21 found intervals in the sub-map:
[DBG]   [6..14]
[DBG]  Agent 21 (interval in submap: [6..14]) contains time 10, added to replan.
[DBG]  Agent 29 found intervals in the sub-map:
[DBG]   [5..11]
[DBG]  Agent 29 (interval in submap: [5..11]) contains time 10, added to replan.
[DBG]  Agent 42 found intervals in the sub-map:
[DBG]   [10..16]
[DBG]  Agent 42 (interval in submap: [10..16]) contains time 10, added to replan.
[DBG]  Agent 59 found intervals in the sub-map:
[DBG]   [10..14]
[DBG]  Agent 59 (interval in submap: [10..14]) contains time 10, added to replan.
[DBG]  Agent 78 found intervals in the sub-map:
[DBG]   [6..12]
[DBG]  Agent 78 (interval in submap: [6..12]) contains time 10, added to replan.
[DBG]  Agent 87 found intervals in the sub-map:
[DBG]   [8..13]
[DBG]  Agent 87 (interval in submap: [8..13]) contains time 10, added to replan.
[DBG]  Agent 103 found intervals in the sub-map:
[DBG]   [11..17]
[DBG]  Agent 103 is not in sub-map at time 10 (intervals: 
[DBG]  [11..17] )
[DBG]  Agent 116 found intervals in the sub-map:
[DBG]   [18..23]
[DBG]  Agent 116 is not in sub-map at time 10 (intervals: 
[DBG]  [18..23] )
[DBG]  Agent 146 found intervals in the sub-map:
[DBG]   [8..12]
[DBG]  Agent 146 (interval in submap: [8..12]) contains time 10, added to replan.
[DBG]  Agent 21 | Start (global): 423 -> (local): (2, 2) at time 10 | Goal (global): 359 -> (local): (0, 2) at time 14
[DBG]  Agent 29 | Start (global): 424 -> (local): (2, 3) at time 10 | Goal (global): 425 -> (local): (2, 4) at time 11
[DBG]  Agent 42 | Start (global): 357 -> (local): (0, 0) at time 10 | Goal (global): 425 -> (local): (2, 4) at time 16
[DBG]  Agent 59 | Start (global): 421 -> (local): (2, 0) at time 10 | Goal (global): 485 -> (local): (4, 0) at time 14
[DBG]  Agent 78 | Start (global): 454 -> (local): (3, 1) at time 10 | Goal (global): 485 -> (local): (4, 0) at time 12
[DBG]  Agent 87 | Start (global): 422 -> (local): (2, 1) at time 10 | Goal (global): 485 -> (local): (4, 0) at time 13
[DBG]  Agent 146 | Start (global): 390 -> (local): (1, 1) at time 10 | Goal (global): 359 -> (local): (0, 2) at time 12
[DBG]  [REPAIR] SAT destroy operator called.
[DBG]  [REPAIR] SAT operator â€“ launching subproblem FOR OPTIMIZATION.
[DBG]  Creating local paths (sx, sy) in the submap for T_sync = 10
[DBG]    Agent 21 (global paths from T=10 to 14) has local path: (2,2) (1,2) (1,1) (1,2) (0,2) 
[DBG]    Agent 29 (global paths from T=10 to 11) has local path: (2,3) (2,4) 
[DBG]    Agent 42 (global paths from T=10 to 16) has local path: (0,0) (1,0) (2,0) (2,1) (2,2) (2,3) (2,4) 
[DBG]    Agent 59 (global paths from T=10 to 14) has local path: (2,0) (2,1) (3,1) (4,1) (4,0) 
[DBG]    Agent 78 (global paths from T=10 to 12) has local path: (3,1) (4,1) (4,0) 
[DBG]    Agent 87 (global paths from T=10 to 13) has local path: (2,1) (3,1) (4,1) (4,0) 
[DBG]    Agent 146 (global paths from T=10 to 12) has local path: (1,1) (0,1) (0,2) 
[DBG]  Checking input data for SAT solver:
[DBG]    - Number of agents to replan: 7
[DBG]  Agent 21 has the original local path length: 5 => Start (2,2), Goal (0,2)
[DBG]  Agent 29 has the original local path length: 2 => Start (2,3), Goal (2,4)
[DBG]  Agent 42 has the original local path length: 7 => Start (0,0), Goal (2,4)
[DBG]  Agent 59 has the original local path length: 5 => Start (2,0), Goal (4,0)
[DBG]  Agent 78 has the original local path length: 3 => Start (3,1), Goal (4,0)
[DBG]  Agent 87 has the original local path length: 4 => Start (2,1), Goal (4,0)
[DBG]  Agent 146 has the original local path length: 3 => Start (1,1), Goal (0,2)
[DBG]  Start position: (2, 2), (2, 3), (0, 0), (2, 0), (3, 1), (2, 1), (1, 1), 
[DBG]  Goal position: (0, 2), (2, 4), (2, 4), (4, 0), (4, 0), (4, 0), (0, 2), 
[DBG]  SAT instance and solver created.
Currently solving
Instance name: scen
Map name: map
Encoding used: disappear_at_goal
SAT solver used: Kissat
Optimizing function: sum of costs
Number of agents: 7
Mks LB: 7
SoC LB: 27
Delta: 0
Remaining time: 300000 [ms]

[STAT] Solver returned: -1
[DBG]  SAT solver failed.
[STAT] SAT solver failed to find a valid solution.
[DBG]  ====================
[DBG]  SAT destroy operator called.
[DBG]  SAT heuristic: 2
[DBG]  key_agent_id: 21
[DBG]  key_agent_id global path length: 18
[DBG]  Submap content (global positions):
[DBG]  261 262 263 264 265 
[DBG]  293 294 295 296 297 
[DBG]  325 326 327 328 329 
[DBG]  357 358 359 360 361 
[DBG]  389 390 391 392 393 
[DBG]  Map content with agents and obstacles:
[DBG]  . X . . A 
[DBG]  . A . A . 
[DBG]  . A A . A 
[DBG]  . A . . . 
[DBG]  . A . X . 
[DBG]  content of the map structure that we pass to the SAT solver:
[DBG]  1  -1  1  1  1  
[DBG]  1  1  1  1  1  
[DBG]  1  1  1  1  1  
[DBG]  1  1  1  1  1  
[DBG]  1  1  1  -1  1  
[DBG]  Identifying agents in a submap for rescheduling (when key_agent is there at the time 15):
[DBG]  Agent 21 found intervals in the sub-map:
[DBG]   [11..17]
[DBG]  Agent 21 (interval in submap: [11..17]) contains time 15, added to replan.
[DBG]  Agent 51 found intervals in the sub-map:
[DBG]   [14..19]
[DBG]  Agent 51 (interval in submap: [14..19]) contains time 15, added to replan.
[DBG]  Agent 55 found intervals in the sub-map:
[DBG]  
[DBG]  Agent 55 is not in sub-map at time 15 (intervals: 
[DBG]  )
[DBG]  Agent 65 found intervals in the sub-map:
[DBG]   [9..14]
[DBG]  Agent 65 is not in sub-map at time 15 (intervals: 
[DBG]  [9..14] )
[DBG]  Agent 80 found intervals in the sub-map:
[DBG]   [11..18]
[DBG]  Agent 80 (interval in submap: [11..18]) contains time 15, added to replan.
[DBG]  Agent 106 found intervals in the sub-map:
[DBG]  
[DBG]  Agent 106 is not in sub-map at time 15 (intervals: 
[DBG]  )
[DBG]  Agent 107 found intervals in the sub-map:
[DBG]   [15..22]
[DBG]  Agent 107 (interval in submap: [15..22]) contains time 15, added to replan.
[DBG]  Agent 112 found intervals in the sub-map:
[DBG]   [11..15]
[DBG]  Agent 112 (interval in submap: [11..15]) contains time 15, added to replan.
[DBG]  Agent 115 found intervals in the sub-map:
[DBG]   [14..20]
[DBG]  Agent 115 (interval in submap: [14..20]) contains time 15, added to replan.
[DBG]  Agent 120 found intervals in the sub-map:
[DBG]  
[DBG]  Agent 120 is not in sub-map at time 15 (intervals: 
[DBG]  )
[DBG]  Agent 125 found intervals in the sub-map:
[DBG]   [14..17]
[DBG]  Agent 125 (interval in submap: [14..17]) contains time 15, added to replan.
[DBG]  Agent 145 found intervals in the sub-map:
[DBG]   [17..18]
[DBG]  Agent 145 is not in sub-map at time 15 (intervals: 
[DBG]  [17..18] )
[DBG]  Agent 146 found intervals in the sub-map:
[DBG]   [9..17]
[DBG]  Agent 146 (interval in submap: [9..17]) contains time 15, added to replan.
[DBG]  Agent 21 | Start (global): 327 -> (local): (2, 2) at time 15 | Goal (global): 327 -> (local): (2, 2) at time 17
[DBG]  Agent 51 | Start (global): 358 -> (local): (3, 1) at time 15 | Goal (global): 393 -> (local): (4, 4) at time 19
[DBG]  Agent 80 | Start (global): 294 -> (local): (1, 1) at time 15 | Goal (global): 357 -> (local): (3, 0) at time 18
[DBG]  Agent 107 | Start (global): 265 -> (local): (0, 4) at time 15 | Goal (global): 390 -> (local): (4, 1) at time 22
[DBG]  Agent 112 | Start (global): 390 -> (local): (4, 1) at time 15 | Goal (global): 390 -> (local): (4, 1) at time 15
[DBG]  Agent 115 | Start (global): 326 -> (local): (2, 1) at time 15 | Goal (global): 265 -> (local): (0, 4) at time 20
[DBG]  Agent 125 | Start (global): 329 -> (local): (2, 4) at time 15 | Goal (global): 393 -> (local): (4, 4) at time 17
[DBG]  Agent 146 | Start (global): 296 -> (local): (1, 3) at time 15 | Goal (global): 265 -> (local): (0, 4) at time 17
[DBG]  [REPAIR] SAT destroy operator called.
[DBG]  [REPAIR] SAT operator â€“ launching subproblem FOR OPTIMIZATION.
[DBG]  Creating local paths (sx, sy) in the submap for T_sync = 15
[DBG]    Agent 21 (global paths from T=15 to 17) has local path: (2,2) (1,2) (2,2) 
[DBG]    Agent 51 (global paths from T=15 to 19) has local path: (3,1) (3,2) (3,3) (3,4) (4,4) 
[DBG]    Agent 80 (global paths from T=15 to 18) has local path: (1,1) (1,0) (2,0) (3,0) 
[DBG]    Agent 107 (global paths from T=15 to 22) has local path: (0,4) (1,4) (1,3) (1,2) (1,1) (2,1) (3,1) (4,1) 
[DBG]    Agent 112 (global paths from T=15 to 15) has local path: (4,1) 
[DBG]    Agent 115 (global paths from T=15 to 20) has local path: (2,1) (2,2) (2,3) (1,3) (0,3) (0,4) 
[DBG]    Agent 125 (global paths from T=15 to 17) has local path: (2,4) (3,4) (4,4) 
[DBG]    Agent 146 (global paths from T=15 to 17) has local path: (1,3) (0,3) (0,4) 
[DBG]  Checking input data for SAT solver:
[DBG]    - Number of agents to replan: 8
[DBG]  Agent 21 has the original local path length: 3 => Start (2,2), Goal (2,2)
[DBG]  Agent 51 has the original local path length: 5 => Start (3,1), Goal (4,4)
[DBG]  Agent 80 has the original local path length: 4 => Start (1,1), Goal (3,0)
[DBG]  Agent 107 has the original local path length: 8 => Start (0,4), Goal (4,1)
[DBG]  Agent 112 has the original local path length: 1 => Start (4,1), Goal (4,1)
[DBG]  Agent 115 has the original local path length: 6 => Start (2,1), Goal (0,4)
[DBG]  Agent 125 has the original local path length: 3 => Start (2,4), Goal (4,4)
[DBG]  Agent 146 has the original local path length: 3 => Start (1,3), Goal (0,4)
[DBG]  Start position: (2, 2), (3, 1), (1, 1), (0, 4), (4, 1), (2, 1), (2, 4), (1, 3), 
[DBG]  Goal position: (2, 2), (4, 4), (3, 0), (4, 1), (4, 1), (0, 4), (4, 4), (0, 4), 
[DBG]  SAT instance and solver created.
Currently solving
Instance name: scen
Map name: map
Encoding used: disappear_at_goal
SAT solver used: Kissat
Optimizing function: sum of costs
Number of agents: 8
Mks LB: 8
SoC LB: 31
Delta: 0
Remaining time: 300000 [ms]

Vertex conflict! Agents 0, 1, timestep 5, location 0
Swapping conflict! Agents 0, 1, timestep 5, edge (0,0)
Vertex conflict! Agents 0, 1, timestep 6, location 0
Swapping conflict! Agents 0, 1, timestep 6, edge (0,0)
Vertex conflict! Agents 0, 1, timestep 7, location 0
Vertex conflict! Agents 0, 2, timestep 4, location 0
Swapping conflict! Agents 0, 2, timestep 4, edge (0,0)
Vertex conflict! Agents 0, 2, timestep 5, location 0
Swapping conflict! Agents 0, 2, timestep 5, edge (0,0)
Vertex conflict! Agents 0, 2, timestep 6, location 0
Swapping conflict! Agents 0, 2, timestep 6, edge (0,0)
Vertex conflict! Agents 0, 2, timestep 7, location 0
Vertex conflict! Agents 0, 4, timestep 1, location 0
Swapping conflict! Agents 0, 4, timestep 1, edge (0,0)
Vertex conflict! Agents 0, 4, timestep 2, location 0
Swapping conflict! Agents 0, 4, timestep 2, edge (0,0)
Vertex conflict! Agents 0, 4, timestep 3, location 0
Swapping conflict! Agents 0, 4, timestep 3, edge (0,0)
Vertex conflict! Agents 0, 4, timestep 4, location 0
Swapping conflict! Agents 0, 4, timestep 4, edge (0,0)
Vertex conflict! Agents 0, 4, timestep 5, location 0
Swapping conflict! Agents 0, 4, timestep 5, edge (0,0)
Vertex conflict! Agents 0, 4, timestep 6, location 0
Swapping conflict! Agents 0, 4, timestep 6, edge (0,0)
Vertex conflict! Agents 0, 4, timestep 7, location 0
Vertex conflict! Agents 0, 5, timestep 6, location 0
Swapping conflict! Agents 0, 5, timestep 6, edge (0,0)
Vertex conflict! Agents 0, 5, timestep 7, location 0
Vertex conflict! Agents 0, 6, timestep 3, location 0
Swapping conflict! Agents 0, 6, timestep 3, edge (0,0)
Vertex conflict! Agents 0, 6, timestep 4, location 0
Swapping conflict! Agents 0, 6, timestep 4, edge (0,0)
Vertex conflict! Agents 0, 6, timestep 5, location 0
Swapping conflict! Agents 0, 6, timestep 5, edge (0,0)
Vertex conflict! Agents 0, 6, timestep 6, location 0
Swapping conflict! Agents 0, 6, timestep 6, edge (0,0)
Vertex conflict! Agents 0, 6, timestep 7, location 0
Vertex conflict! Agents 0, 7, timestep 3, location 0
Swapping conflict! Agents 0, 7, timestep 3, edge (0,0)
Vertex conflict! Agents 0, 7, timestep 4, location 0
Swapping conflict! Agents 0, 7, timestep 4, edge (0,0)
Vertex conflict! Agents 0, 7, timestep 5, location 0
Swapping conflict! Agents 0, 7, timestep 5, edge (0,0)
Vertex conflict! Agents 0, 7, timestep 6, location 0
Swapping conflict! Agents 0, 7, timestep 6, edge (0,0)
Vertex conflict! Agents 0, 7, timestep 7, location 0
Vertex conflict! Agents 1, 2, timestep 5, location 0
Swapping conflict! Agents 1, 2, timestep 5, edge (0,0)
Vertex conflict! Agents 1, 2, timestep 6, location 0
Swapping conflict! Agents 1, 2, timestep 6, edge (0,0)
Vertex conflict! Agents 1, 2, timestep 7, location 0
Vertex conflict! Agents 1, 4, timestep 5, location 0
Swapping conflict! Agents 1, 4, timestep 5, edge (0,0)
Vertex conflict! Agents 1, 4, timestep 6, location 0
Swapping conflict! Agents 1, 4, timestep 6, edge (0,0)
Vertex conflict! Agents 1, 4, timestep 7, location 0
Vertex conflict! Agents 1, 5, timestep 6, location 0
Swapping conflict! Agents 1, 5, timestep 6, edge (0,0)
Vertex conflict! Agents 1, 5, timestep 7, location 0
Vertex conflict! Agents 1, 6, timestep 5, location 0
Swapping conflict! Agents 1, 6, timestep 5, edge (0,0)
Vertex conflict! Agents 1, 6, timestep 6, location 0
Swapping conflict! Agents 1, 6, timestep 6, edge (0,0)
Vertex conflict! Agents 1, 6, timestep 7, location 0
Vertex conflict! Agents 1, 7, timestep 5, location 0
Swapping conflict! Agents 1, 7, timestep 5, edge (0,0)
Vertex conflict! Agents 1, 7, timestep 6, location 0
Swapping conflict! Agents 1, 7, timestep 6, edge (0,0)
Vertex conflict! Agents 1, 7, timestep 7, location 0
Vertex conflict! Agents 2, 4, timestep 4, location 0
Swapping conflict! Agents 2, 4, timestep 4, edge (0,0)
Vertex conflict! Agents 2, 4, timestep 5, location 0
Swapping conflict! Agents 2, 4, timestep 5, edge (0,0)
Vertex conflict! Agents 2, 4, timestep 6, location 0
Swapping conflict! Agents 2, 4, timestep 6, edge (0,0)
Vertex conflict! Agents 2, 4, timestep 7, location 0
Vertex conflict! Agents 2, 5, timestep 6, location 0
Swapping conflict! Agents 2, 5, timestep 6, edge (0,0)
Vertex conflict! Agents 2, 5, timestep 7, location 0
Vertex conflict! Agents 2, 6, timestep 4, location 0
Swapping conflict! Agents 2, 6, timestep 4, edge (0,0)
Vertex conflict! Agents 2, 6, timestep 5, location 0
Swapping conflict! Agents 2, 6, timestep 5, edge (0,0)
Vertex conflict! Agents 2, 6, timestep 6, location 0
Swapping conflict! Agents 2, 6, timestep 6, edge (0,0)
Vertex conflict! Agents 2, 6, timestep 7, location 0
Vertex conflict! Agents 2, 7, timestep 4, location 0
Swapping conflict! Agents 2, 7, timestep 4, edge (0,0)
Vertex conflict! Agents 2, 7, timestep 5, location 0
Swapping conflict! Agents 2, 7, timestep 5, edge (0,0)
Vertex conflict! Agents 2, 7, timestep 6, location 0
Swapping conflict! Agents 2, 7, timestep 6, edge (0,0)
Vertex conflict! Agents 2, 7, timestep 7, location 0
Vertex conflict! Agents 4, 5, timestep 6, location 0
Swapping conflict! Agents 4, 5, timestep 6, edge (0,0)
Vertex conflict! Agents 4, 5, timestep 7, location 0
Vertex conflict! Agents 4, 6, timestep 3, location 0
Swapping conflict! Agents 4, 6, timestep 3, edge (0,0)
Vertex conflict! Agents 4, 6, timestep 4, location 0
Swapping conflict! Agents 4, 6, timestep 4, edge (0,0)
Vertex conflict! Agents 4, 6, timestep 5, location 0
Swapping conflict! Agents 4, 6, timestep 5, edge (0,0)
Vertex conflict! Agents 4, 6, timestep 6, location 0
Swapping conflict! Agents 4, 6, timestep 6, edge (0,0)
Vertex conflict! Agents 4, 6, timestep 7, location 0
Vertex conflict! Agents 4, 7, timestep 3, location 0
Swapping conflict! Agents 4, 7, timestep 3, edge (0,0)
Vertex conflict! Agents 4, 7, timestep 4, location 0
Swapping conflict! Agents 4, 7, timestep 4, edge (0,0)
Vertex conflict! Agents 4, 7, timestep 5, location 0
Swapping conflict! Agents 4, 7, timestep 5, edge (0,0)
Vertex conflict! Agents 4, 7, timestep 6, location 0
Swapping conflict! Agents 4, 7, timestep 6, edge (0,0)
Vertex conflict! Agents 4, 7, timestep 7, location 0
Vertex conflict! Agents 5, 6, timestep 6, location 0
Swapping conflict! Agents 5, 6, timestep 6, edge (0,0)
Vertex conflict! Agents 5, 6, timestep 7, location 0
Vertex conflict! Agents 5, 7, timestep 6, location 0
Swapping conflict! Agents 5, 7, timestep 6, edge (0,0)
Vertex conflict! Agents 5, 7, timestep 7, location 0
Vertex conflict! Agents 6, 7, timestep 3, location 0
Swapping conflict! Agents 6, 7, timestep 3, edge (0,0)
Vertex conflict! Agents 6, 7, timestep 4, location 0
Swapping conflict! Agents 6, 7, timestep 4, edge (0,0)
Vertex conflict! Agents 6, 7, timestep 5, location 0
Swapping conflict! Agents 6, 7, timestep 5, edge (0,0)
Vertex conflict! Agents 6, 7, timestep 6, location 0
Swapping conflict! Agents 6, 7, timestep 6, edge (0,0)
Vertex conflict! Agents 6, 7, timestep 7, location 0
Found plan [agents = 8] [timesteps = 8]
Agent #0 : 11 0 0 0 0 0 0 0 
Agent #1 : 15 16 17 18 22 0 0 0 
Agent #2 : 5 10 15 14 0 0 0 0 
Agent #3 : 3 8 13 12 17 16 21 20 
Agent #4 : 20 0 0 0 0 0 0 0 
Agent #5 : 10 11 12 7 8 3 0 0 
Agent #6 : 13 18 22 0 0 0 0 0 
Agent #7 : 7 2 3 0 0 0 0 0 

[STAT] Solver returned: 0
[DBG]  Agent (index) 21 | New local path (submap idx):
[DBG]  11 
[DBG]  Agent (index) 51 | New local path (submap idx):
[DBG]  15 16 17 18 22 
[DBG]  Agent (index) 80 | New local path (submap idx):
[DBG]  5 10 15 14 
[DBG]  Agent (index) 107 | New local path (submap idx):
[DBG]  3 8 13 12 17 16 21 20 
[DBG]  Agent (index) 112 | New local path (submap idx):
[DBG]  20 
[DBG]  Agent (index) 115 | New local path (submap idx):
[DBG]  10 11 12 7 8 3 
[DBG]  Agent (index) 125 | New local path (submap idx):
[DBG]  13 18 22 
[DBG]  Agent (index) 146 | New local path (submap idx):
[DBG]  7 2 3 
[DBG]  Update the agent path 21 | Original local length: 3 | New local length: 1
[DBG]  agent 21 t=0 => decoded (sx,sy)=(2,2) => global_id=327
[DBG]  Complete path of agent 21:
[DBG]    Original: 484 484 484 484 484 484 485 486 454 455 423 391 390 391 359 327 295 327 
[DBG]    New:     484 484 484 484 484 484 485 486 454 455 423 391 390 391 359 327 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 484 484 484 484 484 484 485 486 454 455 423 391 390 391 359 
[DBG]    Local path (in submap): 327 
[DBG]    Suffix (out of submap): 
[DBG]  Original agent path length 21 je: 18
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 0: 484, 484, 484, 484, 484, 484, 485, 486, 454, 455, 423, 391, 390, 391, 359, 327, 
[DBG]  Path for agent 21 updated, resulting length: 16
[DBG]  Update the agent path 51 | Original local length: 5 | New local length: 5
[DBG]  agent 51 t=0 => decoded (sx,sy)=(3,1) => global_id=358
[DBG]  agent 51 t=1 => decoded (sx,sy)=(3,2) => global_id=359
[DBG]  agent 51 t=2 => decoded (sx,sy)=(3,3) => global_id=360
[DBG]  agent 51 t=3 => decoded (sx,sy)=(3,4) => global_id=361
[DBG]  agent 51 t=4 => decoded (sx,sy)=(4,4) => global_id=393
[DBG]  Complete path of agent 51:
[DBG]    Original: 257 289 321 353 385 385 353 353 354 354 354 354 355 356 357 358 359 360 361 393 425 426 427 459 491 459 
[DBG]    New:     257 289 321 353 385 385 353 353 354 354 354 354 355 356 357 358 359 360 361 393 425 426 427 459 491 459 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 257 289 321 353 385 385 353 353 354 354 354 354 355 356 357 
[DBG]    Local path (in submap): 358 359 360 361 393 
[DBG]    Suffix (out of submap): 425 426 427 459 491 459 
[DBG]  Original agent path length 51 je: 26
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 1: 257, 289, 321, 353, 385, 385, 353, 353, 354, 354, 354, 354, 355, 356, 357, 358, 359, 360, 361, 393, 425, 426, 427, 459, 491, 459, 
[DBG]  Path for agent 51 updated, resulting length: 26
[DBG]  Update the agent path 80 | Original local length: 4 | New local length: 4
[DBG]  agent 80 t=0 => decoded (sx,sy)=(1,1) => global_id=294
[DBG]  agent 80 t=1 => decoded (sx,sy)=(2,1) => global_id=326
[DBG]  agent 80 t=2 => decoded (sx,sy)=(3,1) => global_id=358
[DBG]  agent 80 t=3 => decoded (sx,sy)=(3,0) => global_id=357
[DBG]  Complete path of agent 80:
[DBG]    Original: 111 110 109 141 173 172 204 236 235 234 266 265 264 296 295 294 293 325 357 356 388 387 419 418 
[DBG]    New:     111 110 109 141 173 172 204 236 235 234 266 265 264 296 295 294 326 358 357 356 388 387 419 418 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 111 110 109 141 173 172 204 236 235 234 266 265 264 296 295 
[DBG]    Local path (in submap): 294 326 358 357 
[DBG]    Suffix (out of submap): 356 388 387 419 418 
[DBG]  Original agent path length 80 je: 24
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 2: 111, 110, 109, 141, 173, 172, 204, 236, 235, 234, 266, 265, 264, 296, 295, 294, 326, 358, 357, 356, 388, 387, 419, 418, 
[DBG]  Path for agent 80 updated, resulting length: 24
[DBG]  Update the agent path 107 | Original local length: 8 | New local length: 8
[DBG]  agent 107 t=0 => decoded (sx,sy)=(0,4) => global_id=265
[DBG]  agent 107 t=1 => decoded (sx,sy)=(1,4) => global_id=297
[DBG]  agent 107 t=2 => decoded (sx,sy)=(2,4) => global_id=329
[DBG]  agent 107 t=3 => decoded (sx,sy)=(2,3) => global_id=328
[DBG]  agent 107 t=4 => decoded (sx,sy)=(3,3) => global_id=360
[DBG]  agent 107 t=5 => decoded (sx,sy)=(3,2) => global_id=359
[DBG]  agent 107 t=6 => decoded (sx,sy)=(4,2) => global_id=391
[DBG]  agent 107 t=7 => decoded (sx,sy)=(4,1) => global_id=390
[DBG]  Complete path of agent 107:
[DBG]    Original: 16 48 47 79 111 110 109 141 140 172 204 236 235 234 233 265 297 296 295 294 326 358 390 422 454 486 485 517 549 581 613 645 677 709 741 773 805 804 836 
[DBG]    New:     16 48 47 79 111 110 109 141 140 172 204 236 235 234 233 265 297 329 328 360 359 391 390 422 454 486 485 517 549 581 613 645 677 709 741 773 805 804 836 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 16 48 47 79 111 110 109 141 140 172 204 236 235 234 233 
[DBG]    Local path (in submap): 265 297 329 328 360 359 391 390 
[DBG]    Suffix (out of submap): 422 454 486 485 517 549 581 613 645 677 709 741 773 805 804 836 
[DBG]  Original agent path length 107 je: 39
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 3: 16, 48, 47, 79, 111, 110, 109, 141, 140, 172, 204, 236, 235, 234, 233, 265, 297, 329, 328, 360, 359, 391, 390, 422, 454, 486, 485, 517, 549, 581, 613, 645, 677, 709, 741, 773, 805, 804, 836, 
[DBG]  Path for agent 107 updated, resulting length: 39
[DBG]  Update the agent path 112 | Original local length: 1 | New local length: 1
[DBG]  agent 112 t=0 => decoded (sx,sy)=(4,1) => global_id=390
[DBG]  Complete path of agent 112:
[DBG]    Original: 337 336 335 303 302 301 300 299 298 330 362 361 360 359 358 390 422 454 486 485 517 549 581 613 645 644 676 675 
[DBG]    New:     337 336 335 303 302 301 300 299 298 330 362 361 360 359 358 390 422 454 486 485 517 549 581 613 645 644 676 675 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 337 336 335 303 302 301 300 299 298 330 362 361 360 359 358 
[DBG]    Local path (in submap): 390 
[DBG]    Suffix (out of submap): 422 454 486 485 517 549 581 613 645 644 676 675 
[DBG]  Original agent path length 112 je: 28
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 4: 337, 336, 335, 303, 302, 301, 300, 299, 298, 330, 362, 361, 360, 359, 358, 390, 422, 454, 486, 485, 517, 549, 581, 613, 645, 644, 676, 675, 
[DBG]  Path for agent 112 updated, resulting length: 28
[DBG]  Update the agent path 115 | Original local length: 6 | New local length: 6
[DBG]  agent 115 t=0 => decoded (sx,sy)=(2,1) => global_id=326
[DBG]  agent 115 t=1 => decoded (sx,sy)=(2,2) => global_id=327
[DBG]  agent 115 t=2 => decoded (sx,sy)=(2,3) => global_id=328
[DBG]  agent 115 t=3 => decoded (sx,sy)=(1,3) => global_id=296
[DBG]  agent 115 t=4 => decoded (sx,sy)=(1,4) => global_id=297
[DBG]  agent 115 t=5 => decoded (sx,sy)=(0,4) => global_id=265
[DBG]  Complete path of agent 115:
[DBG]    Original: 99 67 67 99 131 132 164 196 195 227 259 291 323 324 325 326 327 328 296 264 265 266 267 268 300 301 333 365 366 367 368 400 401 402 
[DBG]    New:     99 67 67 99 131 132 164 196 195 227 259 291 323 324 325 326 327 328 296 297 265 266 267 268 300 301 333 365 366 367 368 400 401 402 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 99 67 67 99 131 132 164 196 195 227 259 291 323 324 325 
[DBG]    Local path (in submap): 326 327 328 296 297 265 
[DBG]    Suffix (out of submap): 266 267 268 300 301 333 365 366 367 368 400 401 402 
[DBG]  Original agent path length 115 je: 34
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 5: 99, 67, 67, 99, 131, 132, 164, 196, 195, 227, 259, 291, 323, 324, 325, 326, 327, 328, 296, 297, 265, 266, 267, 268, 300, 301, 333, 365, 366, 367, 368, 400, 401, 402, 
[DBG]  Path for agent 115 updated, resulting length: 34
[DBG]  Update the agent path 125 | Original local length: 3 | New local length: 3
[DBG]  agent 125 t=0 => decoded (sx,sy)=(2,4) => global_id=329
[DBG]  agent 125 t=1 => decoded (sx,sy)=(3,4) => global_id=361
[DBG]  agent 125 t=2 => decoded (sx,sy)=(4,4) => global_id=393
[DBG]  Complete path of agent 125:
[DBG]    Original: 430 398 366 365 333 333 301 301 301 300 268 267 266 298 297 329 361 393 425 457 489 521 520 519 551 583 615 647 646 678 710 742 774 775 
[DBG]    New:     430 398 366 365 333 333 301 301 301 300 268 267 266 298 297 329 361 393 425 457 489 521 520 519 551 583 615 647 646 678 710 742 774 775 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 430 398 366 365 333 333 301 301 301 300 268 267 266 298 297 
[DBG]    Local path (in submap): 329 361 393 
[DBG]    Suffix (out of submap): 425 457 489 521 520 519 551 583 615 647 646 678 710 742 774 775 
[DBG]  Original agent path length 125 je: 34
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 6: 430, 398, 366, 365, 333, 333, 301, 301, 301, 300, 268, 267, 266, 298, 297, 329, 361, 393, 425, 457, 489, 521, 520, 519, 551, 583, 615, 647, 646, 678, 710, 742, 774, 775, 
[DBG]  Path for agent 125 updated, resulting length: 34
[DBG]  Update the agent path 146 | Original local length: 3 | New local length: 3
[DBG]  agent 146 t=0 => decoded (sx,sy)=(1,3) => global_id=296
[DBG]  agent 146 t=1 => decoded (sx,sy)=(0,3) => global_id=264
[DBG]  agent 146 t=2 => decoded (sx,sy)=(0,4) => global_id=265
[DBG]  Complete path of agent 146:
[DBG]    Original: 512 513 481 449 450 418 419 420 421 389 390 358 359 327 328 296 264 265 233 234 235 236 204 172 173 141 109 110 111 79 80 81 49 50 18 19 
[DBG]    New:     512 513 481 449 450 418 419 420 421 389 390 358 359 327 328 296 264 265 233 234 235 236 204 172 173 141 109 110 111 79 80 81 49 50 18 19 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 512 513 481 449 450 418 419 420 421 389 390 358 359 327 328 
[DBG]    Local path (in submap): 296 264 265 
[DBG]    Suffix (out of submap): 233 234 235 236 204 172 173 141 109 110 111 79 80 81 49 50 18 19 
[DBG]  Original agent path length 146 je: 36
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 7: 512, 513, 481, 449, 450, 418, 419, 420, 421, 389, 390, 358, 359, 327, 328, 296, 264, 265, 233, 234, 235, 236, 204, 172, 173, 141, 109, 110, 111, 79, 80, 81, 49, 50, 18, 19, 
[DBG]  Path for agent 146 updated, resulting length: 36
[DBG]  Paths successfully updated.
[DBG]  (LNS.cpp) New path for agent 21: 
[DBG]  484, 484, 484, 484, 484, 484, 485, 486, 454, 455, 423, 391, 390, 391, 359, 327, 
[DBG]  (LNS.cpp) New path for agent 51: 
[DBG]  257, 289, 321, 353, 385, 385, 353, 353, 354, 354, 354, 354, 355, 356, 357, 358, 359, 360, 361, 393, 425, 426, 427, 459, 491, 459, 
[DBG]  (LNS.cpp) New path for agent 80: 
[DBG]  111, 110, 109, 141, 173, 172, 204, 236, 235, 234, 266, 265, 264, 296, 295, 294, 326, 358, 357, 356, 388, 387, 419, 418, 
[DBG]  (LNS.cpp) New path for agent 107: 
[DBG]  16, 48, 47, 79, 111, 110, 109, 141, 140, 172, 204, 236, 235, 234, 233, 265, 297, 329, 328, 360, 359, 391, 390, 422, 454, 486, 485, 517, 549, 581, 613, 645, 677, 709, 741, 773, 805, 804, 836, 
[DBG]  (LNS.cpp) New path for agent 112: 
[DBG]  337, 336, 335, 303, 302, 301, 300, 299, 298, 330, 362, 361, 360, 359, 358, 390, 422, 454, 486, 485, 517, 549, 581, 613, 645, 644, 676, 675, 
[DBG]  (LNS.cpp) New path for agent 115: 
[DBG]  99, 67, 67, 99, 131, 132, 164, 196, 195, 227, 259, 291, 323, 324, 325, 326, 327, 328, 296, 297, 265, 266, 267, 268, 300, 301, 333, 365, 366, 367, 368, 400, 401, 402, 
[DBG]  (LNS.cpp) New path for agent 125: 
[DBG]  430, 398, 366, 365, 333, 333, 301, 301, 301, 300, 268, 267, 266, 298, 297, 329, 361, 393, 425, 457, 489, 521, 520, 519, 551, 583, 615, 647, 646, 678, 710, 742, 774, 775, 
[DBG]  (LNS.cpp) New path for agent 146: 
[DBG]  512, 513, 481, 449, 450, 418, 419, 420, 421, 389, 390, 358, 359, 327, 328, 296, 264, 265, 233, 234, 235, 236, 204, 172, 173, 141, 109, 110, 111, 79, 80, 81, 49, 50, 18, 19, 
[DBG]  component_weights = {0.309034, 0.161898, 0.169304, 0.359764}
[DBG]  opSuccess value: 1
[STAT] neighbor.sum_of_costs before recomputation: 229
[STAT] neighbor.old_sum_of_costs before recomputation: 231
[STAT] sum_of_costs before recomputation: 4448
[DBG]  Validate solution immediately after SAT success.
[WARNING] Problem after SAT: Edge conflict between agents 107 and 13 at edge (359,391) at timestep 21
[DBG]  Attempting immediate repair via init_lns because problem occurred after SAT (should be applied only for conflicts...).
[DBG]  Passing 150 agents to init_lns (skip=true).
[DBG]  path_table contents for selected agents (neighbor.agents):
[DBG]    Agent 21 => controlling path length=16
[DBG]    Agent 51 => controlling path length=26
[DBG]    Agent 80 => controlling path length=24
[DBG]    Agent 107 => controlling path length=39
[DBG]    Agent 112 => controlling path length=28
[DBG]    Agent 115 => controlling path length=34
[DBG]    Agent 125 => controlling path length=34
[DBG]    Agent 146 => controlling path length=36
[DBG]  hodnota skip_initial_solution=1
[DBG]  We skip initialSolution => call buildCollisionData()
[DBG]  buildCollisionData() called â€“ skip_initial_solution case.
[DBG]  Agents.size()=150, collision_graph.size()=150
[DBG]  agent 13 => updateCollidingPairs => foundCollision
[DBG]  agent 21 => updateCollidingPairs => foundCollision
[DBG]  agent 107 => updateCollidingPairs => foundCollision
[DBG]  agent 115 => updateCollidingPairs => foundCollision
[DBG]  agent 116 => updateCollidingPairs => foundCollision
[DBG]  Conflicting agent pairs:
[DBG]  agent 13 is in conflict with agent 107
[DBG]  agent 21 is in conflict with agent 115
[DBG]  agent 107 is in conflict with agent 116
[DBG]  buildCollisionData() => sum_of_costs=4446, num_of_colliding_pairs=3
[DBG]  buildCollisionData done => sum_of_costs=4446, num_of_colliding_pairs=3
[DBG]  sum_of_cost hodnota: 4446
[DBG]  After skip/init build => iteration_stats.back(): sum_of_costs=4446, collisions=3
[DEBUG] Using default neighbor generation strategy for conflicts: 0
[DEBUG] Using default neighbor generation strategy for conflicts: 0
[DEBUG] Using default neighbor generation strategy for conflicts: 2
[DEBUG] Using default neighbor generation strategy for conflicts: 0
	InitLNS(PP): runtime = 0.0204391, iterations = 5, colliding pairs = 0, initial colliding pairs = 3, solution cost = 4450, initial solution cost = 4446, failed iterations = 1
[DBG]  init_lns->sum_of_costs after init_lns->run: 4450
[DBG]  sum_of_costs after assignment from init_lns->run: 4450
[DBG]  Recomputing sum_of_cost by dividing neighbor.sum_of_costs and neighbor.old_sum_of_costs
[STAT] sum_of_costs after recomputation: 4450
[STAT] Iteration 73
[DBG]  Using SAT operator (destroy+repair SAT).
[DBG]  ====================
[DBG]  SAT destroy operator called.
[DBG]  SAT heuristic: 2
[DBG]  key_agent_id: 78
[DBG]  key_agent_id global path length: 26
[DBG]  Submap content (global positions):
[DBG]  291 292 293 294 295 
[DBG]  323 324 325 326 327 
[DBG]  355 356 357 358 359 
[DBG]  387 388 389 390 391 
[DBG]  419 420 421 422 423 
[DBG]  Map content with agents and obstacles:
[DBG]  . X . . . 
[DBG]  . A . A A 
[DBG]  . A A A A 
[DBG]  . . . . . 
[DBG]  . . . A A 
[DBG]  content of the map structure that we pass to the SAT solver:
[DBG]  1  -1  1  1  1  
[DBG]  1  1  1  1  1  
[DBG]  1  1  1  1  1  
[DBG]  1  1  1  1  1  
[DBG]  1  1  1  1  1  
[DBG]  Identifying agents in a submap for rescheduling (when key_agent is there at the time 13):
[DBG]  Agent 21 found intervals in the sub-map:
[DBG]   [7..17]
[DBG]  Agent 21 (interval in submap: [7..17]) contains time 13, added to replan.
[DBG]  Agent 42 found intervals in the sub-map:
[DBG]   [8..14]
[DBG]  Agent 42 (interval in submap: [8..14]) contains time 13, added to replan.
[DBG]  Agent 51 found intervals in the sub-map:
[DBG]   [12..16]
[DBG]  Agent 51 (interval in submap: [12..16]) contains time 13, added to replan.
[DBG]  Agent 55 found intervals in the sub-map:
[DBG]  
[DBG]  Agent 55 is not in sub-map at time 13 (intervals: 
[DBG]  )
[DBG]  Agent 65 found intervals in the sub-map:
[DBG]   [10..15]
[DBG]  Agent 65 (interval in submap: [10..15]) contains time 13, added to replan.
[DBG]  Agent 78 found intervals in the sub-map:
[DBG]   [0..17]
[DBG]  Agent 78 (interval in submap: [0..17]) contains time 13, added to replan.
[DBG]  Agent 103 found intervals in the sub-map:
[DBG]   [9..13]
[DBG]  Agent 103 (interval in submap: [9..13]) contains time 13, added to replan.
[DBG]  Agent 112 found intervals in the sub-map:
[DBG]   [13..16]
[DBG]  Agent 112 (interval in submap: [13..16]) contains time 13, added to replan.
[DBG]  Agent 115 found intervals in the sub-map:
[DBG]   [11..16]
[DBG]  Agent 115 (interval in submap: [11..16]) contains time 13, added to replan.
[DBG]  Agent 134 found intervals in the sub-map:
[DBG]   [7..11]
[DBG]  Agent 134 is not in sub-map at time 13 (intervals: 
[DBG]  [7..11] )
[DBG]  Agent 146 found intervals in the sub-map:
[DBG]   [6..13]
[DBG]  Agent 146 (interval in submap: [6..13]) contains time 13, added to replan.
[DBG]  Agent 21 | Start (global): 326 -> (local): (1, 3) at time 13 | Goal (global): 327 -> (local): (1, 4) at time 17
[DBG]  Agent 42 | Start (global): 422 -> (local): (4, 3) at time 13 | Goal (global): 423 -> (local): (4, 4) at time 14
[DBG]  Agent 51 | Start (global): 356 -> (local): (2, 1) at time 13 | Goal (global): 359 -> (local): (2, 4) at time 16
[DBG]  Agent 65 | Start (global): 358 -> (local): (2, 3) at time 13 | Goal (global): 422 -> (local): (4, 3) at time 15
[DBG]  Agent 78 | Start (global): 357 -> (local): (2, 2) at time 13 | Goal (global): 422 -> (local): (4, 3) at time 17
[DBG]  Agent 103 | Start (global): 423 -> (local): (4, 4) at time 13 | Goal (global): 423 -> (local): (4, 4) at time 13
[DBG]  Agent 112 | Start (global): 359 -> (local): (2, 4) at time 13 | Goal (global): 422 -> (local): (4, 3) at time 16
[DBG]  Agent 115 | Start (global): 324 -> (local): (1, 1) at time 13 | Goal (global): 327 -> (local): (1, 4) at time 16
[DBG]  Agent 146 | Start (global): 327 -> (local): (1, 4) at time 13 | Goal (global): 327 -> (local): (1, 4) at time 13
[DBG]  [REPAIR] SAT destroy operator called.
[DBG]  [REPAIR] SAT operator â€“ launching subproblem FOR OPTIMIZATION.
[DBG]  Creating local paths (sx, sy) in the submap for T_sync = 13
[DBG]    Agent 21 (global paths from T=13 to 17) has local path: (1,3) (1,4) (0,4) (0,4) (1,4) 
[DBG]    Agent 42 (global paths from T=13 to 14) has local path: (4,3) (4,4) 
[DBG]    Agent 51 (global paths from T=13 to 16) has local path: (2,1) (2,2) (2,3) (2,4) 
[DBG]    Agent 65 (global paths from T=13 to 15) has local path: (2,3) (3,3) (4,3) 
[DBG]    Agent 78 (global paths from T=13 to 17) has local path: (2,2) (2,3) (3,3) (3,3) (4,3) 
[DBG]    Agent 103 (global paths from T=13 to 13) has local path: (4,4) 
[DBG]    Agent 112 (global paths from T=13 to 16) has local path: (2,4) (3,4) (4,4) (4,3) 
[DBG]    Agent 115 (global paths from T=13 to 16) has local path: (1,1) (1,2) (1,3) (1,4) 
[DBG]    Agent 146 (global paths from T=13 to 13) has local path: (1,4) 
[DBG]  Checking input data for SAT solver:
[DBG]    - Number of agents to replan: 9
[DBG]  Agent 21 has the original local path length: 5 => Start (1,3), Goal (1,4)
[DBG]  Agent 42 has the original local path length: 2 => Start (4,3), Goal (4,4)
[DBG]  Agent 51 has the original local path length: 4 => Start (2,1), Goal (2,4)
[DBG]  Agent 65 has the original local path length: 3 => Start (2,3), Goal (4,3)
[DBG]  Agent 78 has the original local path length: 5 => Start (2,2), Goal (4,3)
[DBG]  Agent 103 has the original local path length: 1 => Start (4,4), Goal (4,4)
[DBG]  Agent 112 has the original local path length: 4 => Start (2,4), Goal (4,3)
[DBG]  Agent 115 has the original local path length: 4 => Start (1,1), Goal (1,4)
[DBG]  Agent 146 has the original local path length: 1 => Start (1,4), Goal (1,4)
[DBG]  Start position: (1, 3), (4, 3), (2, 1), (2, 3), (2, 2), (4, 4), (2, 4), (1, 1), (1, 4), 
[DBG]  Goal position: (1, 4), (4, 4), (2, 4), (4, 3), (4, 3), (4, 4), (4, 3), (1, 4), (1, 4), 
[DBG]  SAT instance and solver created.
Currently solving
Instance name: scen
Map name: map
Encoding used: disappear_at_goal
SAT solver used: Kissat
Optimizing function: sum of costs
Number of agents: 9
Mks LB: 4
SoC LB: 25
Delta: 0
Remaining time: 300000 [ms]

[STAT] Solver returned: -1
[DBG]  SAT solver failed.
[STAT] SAT solver failed to find a valid solution.
[DBG]  ====================
[DBG]  SAT destroy operator called.
[DBG]  SAT heuristic: 2
[DBG]  key_agent_id: 78
[DBG]  key_agent_id global path length: 26
[DBG]  Submap content (global positions):
[DBG]  292 293 294 295 296 
[DBG]  324 325 326 327 328 
[DBG]  356 357 358 359 360 
[DBG]  388 389 390 391 392 
[DBG]  420 421 422 423 424 
[DBG]  Map content with agents and obstacles:
[DBG]  X . . A . 
[DBG]  . A . A A 
[DBG]  . A A . . 
[DBG]  . . A A X 
[DBG]  . . . A . 
[DBG]  content of the map structure that we pass to the SAT solver:
[DBG]  -1  1  1  1  1  
[DBG]  1  1  1  1  1  
[DBG]  1  1  1  1  1  
[DBG]  1  1  1  1  -1  
[DBG]  1  1  1  1  1  
[DBG]  Identifying agents in a submap for rescheduling (when key_agent is there at the time 14):
[DBG]  Agent 21 found intervals in the sub-map:
[DBG]   [9..17]
[DBG]  Agent 21 (interval in submap: [9..17]) contains time 14, added to replan.
[DBG]  Agent 42 found intervals in the sub-map:
[DBG]   [9..15]
[DBG]  Agent 42 (interval in submap: [9..15]) contains time 14, added to replan.
[DBG]  Agent 51 found intervals in the sub-map:
[DBG]   [13..17]
[DBG]  Agent 51 (interval in submap: [13..17]) contains time 14, added to replan.
[DBG]  Agent 55 found intervals in the sub-map:
[DBG]  
[DBG]  Agent 55 is not in sub-map at time 14 (intervals: 
[DBG]  )
[DBG]  Agent 65 found intervals in the sub-map:
[DBG]   [10..15]
[DBG]  Agent 65 (interval in submap: [10..15]) contains time 14, added to replan.
[DBG]  Agent 78 found intervals in the sub-map:
[DBG]   [8..17]
[DBG]  Agent 78 (interval in submap: [8..17]) contains time 14, added to replan.
[DBG]  Agent 80 found intervals in the sub-map:
[DBG]   [13..20]
[DBG]  Agent 80 (interval in submap: [13..20]) contains time 14, added to replan.
[DBG]  Agent 112 found intervals in the sub-map:
[DBG]   [12..16]
[DBG]  Agent 112 (interval in submap: [12..16]) contains time 14, added to replan.
[DBG]  Agent 115 found intervals in the sub-map:
[DBG]   [13..18]
[DBG]  Agent 115 (interval in submap: [13..18]) contains time 14, added to replan.
[DBG]  Agent 146 found intervals in the sub-map:
[DBG]   [7..15]
[DBG]  Agent 146 (interval in submap: [7..15]) contains time 14, added to replan.
[DBG]  Agent 21 | Start (global): 327 -> (local): (1, 3) at time 14 | Goal (global): 327 -> (local): (1, 3) at time 17
[DBG]  Agent 42 | Start (global): 423 -> (local): (4, 3) at time 14 | Goal (global): 424 -> (local): (4, 4) at time 15
[DBG]  Agent 51 | Start (global): 357 -> (local): (2, 1) at time 14 | Goal (global): 360 -> (local): (2, 4) at time 17
[DBG]  Agent 65 | Start (global): 390 -> (local): (3, 2) at time 14 | Goal (global): 422 -> (local): (4, 2) at time 15
[DBG]  Agent 78 | Start (global): 358 -> (local): (2, 2) at time 14 | Goal (global): 422 -> (local): (4, 2) at time 17
[DBG]  Agent 80 | Start (global): 295 -> (local): (0, 3) at time 14 | Goal (global): 388 -> (local): (3, 0) at time 20
[DBG]  Agent 112 | Start (global): 391 -> (local): (3, 3) at time 14 | Goal (global): 422 -> (local): (4, 2) at time 16
[DBG]  Agent 115 | Start (global): 325 -> (local): (1, 1) at time 14 | Goal (global): 296 -> (local): (0, 4) at time 18
[DBG]  Agent 146 | Start (global): 328 -> (local): (1, 4) at time 14 | Goal (global): 296 -> (local): (0, 4) at time 15
[DBG]  [REPAIR] SAT destroy operator called.
[DBG]  [REPAIR] SAT operator â€“ launching subproblem FOR OPTIMIZATION.
[DBG]  Creating local paths (sx, sy) in the submap for T_sync = 14
[DBG]    Agent 21 (global paths from T=14 to 17) has local path: (1,3) (0,3) (0,3) (1,3) 
[DBG]    Agent 42 (global paths from T=14 to 15) has local path: (4,3) (4,4) 
[DBG]    Agent 51 (global paths from T=14 to 17) has local path: (2,1) (2,2) (2,3) (2,4) 
[DBG]    Agent 65 (global paths from T=14 to 15) has local path: (3,2) (4,2) 
[DBG]    Agent 78 (global paths from T=14 to 17) has local path: (2,2) (3,2) (3,2) (4,2) 
[DBG]    Agent 80 (global paths from T=14 to 20) has local path: (0,3) (0,2) (1,2) (2,2) (2,1) (2,0) (3,0) 
[DBG]    Agent 112 (global paths from T=14 to 16) has local path: (3,3) (4,3) (4,2) 
[DBG]    Agent 115 (global paths from T=14 to 18) has local path: (1,1) (1,2) (1,3) (1,4) (0,4) 
[DBG]    Agent 146 (global paths from T=14 to 15) has local path: (1,4) (0,4) 
[DBG]  Checking input data for SAT solver:
[DBG]    - Number of agents to replan: 9
[DBG]  Agent 21 has the original local path length: 4 => Start (1,3), Goal (1,3)
[DBG]  Agent 42 has the original local path length: 2 => Start (4,3), Goal (4,4)
[DBG]  Agent 51 has the original local path length: 4 => Start (2,1), Goal (2,4)
[DBG]  Agent 65 has the original local path length: 2 => Start (3,2), Goal (4,2)
[DBG]  Agent 78 has the original local path length: 4 => Start (2,2), Goal (4,2)
[DBG]  Agent 80 has the original local path length: 7 => Start (0,3), Goal (3,0)
[DBG]  Agent 112 has the original local path length: 3 => Start (3,3), Goal (4,2)
[DBG]  Agent 115 has the original local path length: 5 => Start (1,1), Goal (0,4)
[DBG]  Agent 146 has the original local path length: 2 => Start (1,4), Goal (0,4)
[DBG]  Start position: (1, 3), (4, 3), (2, 1), (3, 2), (2, 2), (0, 3), (3, 3), (1, 1), (1, 4), 
[DBG]  Goal position: (1, 3), (4, 4), (2, 4), (4, 2), (4, 2), (3, 0), (4, 2), (0, 4), (0, 4), 
[DBG]  SAT instance and solver created.
Currently solving
Instance name: scen
Map name: map
Encoding used: disappear_at_goal
SAT solver used: Kissat
Optimizing function: sum of costs
Number of agents: 9
Mks LB: 7
SoC LB: 29
Delta: 0
Remaining time: 300000 [ms]

[STAT] Solver returned: -1
[DBG]  SAT solver failed.
[STAT] SAT solver failed to find a valid solution.
[DBG]  ====================
[DBG]  SAT destroy operator called.
[DBG]  SAT heuristic: 2
[DBG]  key_agent_id: 78
[DBG]  key_agent_id global path length: 26
[DBG]  Submap content (global positions):
[DBG]  289 290 291 292 293 
[DBG]  321 322 323 324 325 
[DBG]  353 354 355 356 357 
[DBG]  385 386 387 388 389 
[DBG]  417 418 419 420 421 
[DBG]  Map content with agents and obstacles:
[DBG]  . X . X . 
[DBG]  A X . . . 
[DBG]  . . A . . 
[DBG]  . X . . . 
[DBG]  X . . . A 
[DBG]  content of the map structure that we pass to the SAT solver:
[DBG]  1  -1  1  -1  1  
[DBG]  1  -1  1  1  1  
[DBG]  1  1  1  1  1  
[DBG]  1  -1  1  1  1  
[DBG]  -1  1  1  1  1  
[DBG]  Identifying agents in a submap for rescheduling (when key_agent is there at the time 2):
[DBG]  Agent 51 found intervals in the sub-map:
[DBG]   [1..14]
[DBG]  Agent 51 (interval in submap: [1..14]) contains time 2, added to replan.
[DBG]  Agent 59 found intervals in the sub-map:
[DBG]   [4..10]
[DBG]  Agent 59 is not in sub-map at time 2 (intervals: 
[DBG]  [4..10] )
[DBG]  Agent 71 found intervals in the sub-map:
[DBG]  
[DBG]  Agent 71 is not in sub-map at time 2 (intervals: 
[DBG]  )
[DBG]  Agent 78 found intervals in the sub-map:
[DBG]   [0..13]
[DBG]  Agent 78 (interval in submap: [0..13]) contains time 2, added to replan.
[DBG]  Agent 81 found intervals in the sub-map:
[DBG]   [0..2]
[DBG]  Agent 81 (interval in submap: [0..2]) contains time 2, added to replan.
[DBG]  Agent 51 | Start (global): 321 -> (local): (1, 0) at time 2 | Goal (global): 357 -> (local): (2, 4) at time 14
[DBG]  Agent 78 | Start (global): 355 -> (local): (2, 2) at time 2 | Goal (global): 357 -> (local): (2, 4) at time 13
[DBG]  Agent 81 | Start (global): 421 -> (local): (4, 4) at time 2 | Goal (global): 421 -> (local): (4, 4) at time 2
[DBG]  [REPAIR] SAT destroy operator called.
[DBG]  [REPAIR] SAT operator â€“ launching subproblem FOR OPTIMIZATION.
[DBG]  Creating local paths (sx, sy) in the submap for T_sync = 2
[DBG]    Agent 51 (global paths from T=2 to 14) has local path: (1,0) (2,0) (3,0) (3,0) (2,0) (2,0) (2,1) (2,1) (2,1) (2,1) (2,2) (2,3) (2,4) 
[DBG]    Agent 78 (global paths from T=2 to 13) has local path: (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,3) (1,3) (1,3) (2,3) (2,4) (2,4) 
[DBG]    Agent 81 (global paths from T=2 to 2) has local path: (4,4) 
[DBG]  Checking input data for SAT solver:
[DBG]    - Number of agents to replan: 3
[DBG]  Agent 51 has the original local path length: 13 => Start (1,0), Goal (2,4)
[DBG]  Agent 78 has the original local path length: 12 => Start (2,2), Goal (2,4)
[DBG]  Agent 81 has the original local path length: 1 => Start (4,4), Goal (4,4)
[DBG]  Start position: (1, 0), (2, 2), (4, 4), 
[DBG]  Goal position: (2, 4), (2, 4), (4, 4), 
[DBG]  SAT instance and solver created.
Currently solving
Instance name: scen
Map name: map
Encoding used: disappear_at_goal
SAT solver used: Kissat
Optimizing function: sum of costs
Number of agents: 3
Mks LB: 6
SoC LB: 10
Delta: 0
Remaining time: 300000 [ms]

Vertex conflict! Agents 1, 2, timestep 3, location 0
Swapping conflict! Agents 1, 2, timestep 3, edge (0,0)
Vertex conflict! Agents 1, 2, timestep 4, location 0
Swapping conflict! Agents 1, 2, timestep 4, edge (0,0)
Vertex conflict! Agents 1, 2, timestep 5, location 0
Found plan [agents = 3] [timesteps = 6]
Agent #0 : 3 7 8 9 10 11 
Agent #1 : 9 10 11 0 0 0 
Agent #2 : 19 0 0 0 0 0 

[STAT] Solver returned: 0
[DBG]  Agent (index) 51 | New local path (submap idx):
[DBG]  3 7 8 9 10 11 
[DBG]  Agent (index) 78 | New local path (submap idx):
[DBG]  9 10 11 
[DBG]  Agent (index) 81 | New local path (submap idx):
[DBG]  19 
[DBG]  Update the agent path 51 | Original local length: 13 | New local length: 6
[DBG]  agent 51 t=0 => decoded (sx,sy)=(1,0) => global_id=321
[DBG]  agent 51 t=1 => decoded (sx,sy)=(2,0) => global_id=353
[DBG]  agent 51 t=2 => decoded (sx,sy)=(2,1) => global_id=354
[DBG]  agent 51 t=3 => decoded (sx,sy)=(2,2) => global_id=355
[DBG]  agent 51 t=4 => decoded (sx,sy)=(2,3) => global_id=356
[DBG]  agent 51 t=5 => decoded (sx,sy)=(2,4) => global_id=357
[DBG]  Complete path of agent 51:
[DBG]    Original: 257 289 321 353 385 385 353 353 354 354 354 354 355 356 357 358 359 360 361 393 425 426 427 459 491 459 
[DBG]    New:     257 289 321 353 354 355 356 357 358 359 360 361 393 425 426 427 459 491 459 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 257 289 
[DBG]    Local path (in submap): 321 353 354 355 356 357 358 359 360 361 393 425 426 
[DBG]    Suffix (out of submap): 427 459 491 459 
[DBG]  Original agent path length 51 je: 26
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 0: 257, 289, 321, 353, 354, 355, 356, 357, 358, 359, 360, 361, 393, 425, 426, 427, 459, 491, 459, 
[DBG]  Path for agent 51 updated, resulting length: 19
[DBG]  Update the agent path 78 | Original local length: 12 | New local length: 3
[DBG]  agent 78 t=0 => decoded (sx,sy)=(2,2) => global_id=355
[DBG]  agent 78 t=1 => decoded (sx,sy)=(2,3) => global_id=356
[DBG]  agent 78 t=2 => decoded (sx,sy)=(2,4) => global_id=357
[DBG]  Complete path of agent 78:
[DBG]    Original: 355 355 355 355 355 355 355 355 356 324 324 356 357 357 358 390 390 422 454 486 485 517 516 548 580 612 
[DBG]    New:     355 355 355 356 357 358 390 390 422 454 486 485 517 516 548 580 612 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 355 355 
[DBG]    Local path (in submap): 355 356 357 358 390 390 422 454 486 485 517 516 
[DBG]    Suffix (out of submap): 548 580 612 
[DBG]  Original agent path length 78 je: 26
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 1: 355, 355, 355, 356, 357, 358, 390, 390, 422, 454, 486, 485, 517, 516, 548, 580, 612, 
[DBG]  Path for agent 78 updated, resulting length: 17
[DBG]  Update the agent path 81 | Original local length: 1 | New local length: 1
[DBG]  agent 81 t=0 => decoded (sx,sy)=(4,4) => global_id=421
[DBG]  Complete path of agent 81:
[DBG]    Original: 419 420 421 422 423 424 425 426 427 428 429 430 431 431 463 464 432 433 465 466 466 498 530 531 563 
[DBG]    New:     419 420 421 422 423 424 425 426 427 428 429 430 431 431 463 464 432 433 465 466 466 498 530 531 563 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 419 420 
[DBG]    Local path (in submap): 421 
[DBG]    Suffix (out of submap): 422 423 424 425 426 427 428 429 430 431 431 463 464 432 433 465 466 466 498 530 531 563 
[DBG]  Original agent path length 81 je: 25
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 2: 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 431, 463, 464, 432, 433, 465, 466, 466, 498, 530, 531, 563, 
[DBG]  Path for agent 81 updated, resulting length: 25
[DBG]  Paths successfully updated.
[DBG]  (LNS.cpp) New path for agent 51: 
[DBG]  257, 289, 321, 353, 354, 355, 356, 357, 358, 359, 360, 361, 393, 425, 426, 427, 459, 491, 459, 
[DBG]  (LNS.cpp) New path for agent 78: 
[DBG]  355, 355, 355, 356, 357, 358, 390, 390, 422, 454, 486, 485, 517, 516, 548, 580, 612, 
[DBG]  (LNS.cpp) New path for agent 81: 
[DBG]  419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 431, 463, 464, 432, 433, 465, 466, 466, 498, 530, 531, 563, 
[DBG]  component_weights = {0.30654, 0.160591, 0.167938, 0.36493}
[DBG]  opSuccess value: 1
[STAT] neighbor.sum_of_costs before recomputation: 58
[STAT] neighbor.old_sum_of_costs before recomputation: 74
[STAT] sum_of_costs before recomputation: 4450
[DBG]  Validate solution immediately after SAT success.
[WARNING] Problem after SAT: Vertex conflict between agents 51 and 87 at location 358 at timestep 8
[DBG]  Attempting immediate repair via init_lns because problem occurred after SAT (should be applied only for conflicts...).
[DBG]  Passing 150 agents to init_lns (skip=true).
[DBG]  path_table contents for selected agents (neighbor.agents):
[DBG]    Agent 51 => controlling path length=19
[DBG]    Agent 78 => controlling path length=17
[DBG]    Agent 81 => controlling path length=25
[DBG]  hodnota skip_initial_solution=1
[DBG]  We skip initialSolution => call buildCollisionData()
[DBG]  buildCollisionData() called â€“ skip_initial_solution case.
[DBG]  Agents.size()=150, collision_graph.size()=150
[DBG]  agent 51 => updateCollidingPairs => foundCollision
[DBG]  agent 78 => updateCollidingPairs => foundCollision
[DBG]  agent 87 => updateCollidingPairs => foundCollision
[DBG]  agent 110 => updateCollidingPairs => foundCollision
[DBG]  agent 112 => updateCollidingPairs => foundCollision
[DBG]  agent 132 => updateCollidingPairs => foundCollision
[DBG]  Conflicting agent pairs:
[DBG]  agent 51 is in conflict with agent 87
[DBG]  agent 51 is in conflict with agent 112
[DBG]  agent 51 is in conflict with agent 132
[DBG]  agent 78 is in conflict with agent 110
[DBG]  agent 78 is in conflict with agent 112
[DBG]  buildCollisionData() => sum_of_costs=4434, num_of_colliding_pairs=5
[DBG]  buildCollisionData done => sum_of_costs=4434, num_of_colliding_pairs=5
[DBG]  sum_of_cost hodnota: 4434
[DBG]  After skip/init build => iteration_stats.back(): sum_of_costs=4434, collisions=5
[DEBUG] Using default neighbor generation strategy for conflicts: 1
	InitLNS(PP): runtime = 0.0062045, iterations = 2, colliding pairs = 0, initial colliding pairs = 5, solution cost = 4432, initial solution cost = 4434, failed iterations = 0
[DBG]  init_lns->sum_of_costs after init_lns->run: 4432
[DBG]  sum_of_costs after assignment from init_lns->run: 4432
[DBG]  Recomputing sum_of_cost by dividing neighbor.sum_of_costs and neighbor.old_sum_of_costs
[STAT] sum_of_costs after recomputation: 4432
[STAT] Iteration 74
[DBG]  Using SAT operator (destroy+repair SAT).
[DBG]  ====================
[DBG]  SAT destroy operator called.
[DBG]  SAT heuristic: 2
[DBG]  key_agent_id: 110
[DBG]  key_agent_id global path length: 31
[DBG]  Submap content (global positions):
[DBG]  -1 -1 192 193 194 
[DBG]  -1 -1 224 225 226 
[DBG]  -1 -1 256 257 258 
[DBG]  -1 -1 288 289 290 
[DBG]  -1 -1 320 321 322 
[DBG]  Map content with agents and obstacles:
[DBG]  X X . . . 
[DBG]  X X . X . 
[DBG]  X X A A . 
[DBG]  X X . A X 
[DBG]  X X X . X 
[DBG]  content of the map structure that we pass to the SAT solver:
[DBG]  1  1  1  1  1  
[DBG]  1  1  1  -1  1  
[DBG]  1  1  1  1  1  
[DBG]  1  1  1  1  -1  
[DBG]  1  1  -1  1  -1  
[DBG]  Identifying agents in a submap for rescheduling (when key_agent is there at the time 3):
[DBG]  Agent 15 found intervals in the sub-map:
[DBG]   [0..4]
[DBG]  Agent 15 (interval in submap: [0..4]) contains time 3, added to replan.
[DBG]  Agent 42 found intervals in the sub-map:
[DBG]   [0..4]
[DBG]  Agent 42 (interval in submap: [0..4]) contains time 3, added to replan.
[DBG]  Agent 51 found intervals in the sub-map:
[DBG]   [0..2]
[DBG]  Agent 51 is not in sub-map at time 3 (intervals: 
[DBG]  [0..2] )
[DBG]  Agent 59 found intervals in the sub-map:
[DBG]   [0..2]
[DBG]  Agent 59 is not in sub-map at time 3 (intervals: 
[DBG]  [0..2] )
[DBG]  Agent 110 found intervals in the sub-map:
[DBG]   [0..6]
[DBG]  Agent 110 (interval in submap: [0..6]) contains time 3, added to replan.
[DBG]  Agent 15 | Start (global): 257 -> (local): (2, 3) at time 3 | Goal (global): 258 -> (local): (2, 4) at time 4
[DBG]  Agent 42 | Start (global): 289 -> (local): (3, 3) at time 3 | Goal (global): 321 -> (local): (4, 3) at time 4
[DBG]  Agent 110 | Start (global): 256 -> (local): (2, 2) at time 3 | Goal (global): 321 -> (local): (4, 3) at time 6
[DBG]  [REPAIR] SAT destroy operator called.
[DBG]  [REPAIR] SAT operator â€“ launching subproblem FOR OPTIMIZATION.
[DBG]  Creating local paths (sx, sy) in the submap for T_sync = 3
[DBG]    Agent 15 (global paths from T=3 to 4) has local path: (2,3) (2,4) 
[DBG]    Agent 42 (global paths from T=3 to 4) has local path: (3,3) (4,3) 
[DBG]    Agent 110 (global paths from T=3 to 6) has local path: (2,2) (3,2) (3,3) (4,3) 
[DBG]  Checking input data for SAT solver:
[DBG]    - Number of agents to replan: 3
[DBG]  Agent 15 has the original local path length: 2 => Start (2,3), Goal (2,4)
[DBG]  Agent 42 has the original local path length: 2 => Start (3,3), Goal (4,3)
[DBG]  Agent 110 has the original local path length: 4 => Start (2,2), Goal (4,3)
[DBG]  Start position: (2, 3), (3, 3), (2, 2), 
[DBG]  Goal position: (2, 4), (4, 3), (4, 3), 
[DBG]  SAT instance and solver created.
Currently solving
Instance name: scen
Map name: map
Encoding used: disappear_at_goal
SAT solver used: Kissat
Optimizing function: sum of costs
Number of agents: 3
Mks LB: 4
SoC LB: 8
Delta: 0
Remaining time: 300000 [ms]

Vertex conflict! Agents 0, 1, timestep 2, location 0
Swapping conflict! Agents 0, 1, timestep 2, edge (0,0)
Vertex conflict! Agents 0, 1, timestep 3, location 0
Found plan [agents = 3] [timesteps = 4]
Agent #0 : 12 13 0 0 
Agent #1 : 17 20 0 0 
Agent #2 : 11 16 17 20 

[STAT] Solver returned: 0
[DBG]  Agent (index) 15 | New local path (submap idx):
[DBG]  12 13 
[DBG]  Agent (index) 42 | New local path (submap idx):
[DBG]  17 20 
[DBG]  Agent (index) 110 | New local path (submap idx):
[DBG]  11 16 17 20 
[DBG]  Update the agent path 15 | Original local length: 2 | New local length: 2
[DBG]  agent 15 t=0 => decoded (sx,sy)=(2,3) => global_id=257
[DBG]  agent 15 t=1 => decoded (sx,sy)=(2,4) => global_id=258
[DBG]  Complete path of agent 15:
[DBG]    Original: 288 288 256 257 258 259 260 261 293 294 295 296 297 265 266 267 268 269 270 271 239 240 208 176 144 112 113 81 82 83 115 116 117 118 119 120 121 122 123 124 156 157 
[DBG]    New:     288 288 256 257 258 259 260 261 293 294 295 296 297 265 266 267 268 269 270 271 239 240 208 176 144 112 113 81 82 83 115 116 117 118 119 120 121 122 123 124 156 157 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 288 288 256 
[DBG]    Local path (in submap): 257 258 
[DBG]    Suffix (out of submap): 259 260 261 293 294 295 296 297 265 266 267 268 269 270 271 239 240 208 176 144 112 113 81 82 83 115 116 117 118 119 120 121 122 123 124 156 157 
[DBG]  Original agent path length 15 je: 42
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 0: 288, 288, 256, 257, 258, 259, 260, 261, 293, 294, 295, 296, 297, 265, 266, 267, 268, 269, 270, 271, 239, 240, 208, 176, 144, 112, 113, 81, 82, 83, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 156, 157, 
[DBG]  Path for agent 15 updated, resulting length: 42
[DBG]  Update the agent path 42 | Original local length: 2 | New local length: 2
[DBG]  agent 42 t=0 => decoded (sx,sy)=(3,3) => global_id=289
[DBG]  agent 42 t=1 => decoded (sx,sy)=(4,3) => global_id=321
[DBG]  Complete path of agent 42:
[DBG]    Original: 224 256 257 289 321 353 354 354 355 356 357 389 421 422 423 424 425 426 427 428 429 429 429 430 431 463 464 465 466 467 468 469 437 438 439 440 472 473 474 506 506 538 570 602 601 600 632 664 696 728 727 759 
[DBG]    New:     224 256 257 289 321 353 354 354 355 356 357 389 421 422 423 424 425 426 427 428 429 429 429 430 431 463 464 465 466 467 468 469 437 438 439 440 472 473 474 506 506 538 570 602 601 600 632 664 696 728 727 759 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 224 256 257 
[DBG]    Local path (in submap): 289 321 
[DBG]    Suffix (out of submap): 353 354 354 355 356 357 389 421 422 423 424 425 426 427 428 429 429 429 430 431 463 464 465 466 467 468 469 437 438 439 440 472 473 474 506 506 538 570 602 601 600 632 664 696 728 727 759 
[DBG]  Original agent path length 42 je: 52
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 1: 224, 256, 257, 289, 321, 353, 354, 354, 355, 356, 357, 389, 421, 422, 423, 424, 425, 426, 427, 428, 429, 429, 429, 430, 431, 463, 464, 465, 466, 467, 468, 469, 437, 438, 439, 440, 472, 473, 474, 506, 506, 538, 570, 602, 601, 600, 632, 664, 696, 728, 727, 759, 
[DBG]  Path for agent 42 updated, resulting length: 52
[DBG]  Update the agent path 110 | Original local length: 4 | New local length: 4
[DBG]  agent 110 t=0 => decoded (sx,sy)=(2,2) => global_id=256
[DBG]  agent 110 t=1 => decoded (sx,sy)=(3,2) => global_id=288
[DBG]  agent 110 t=2 => decoded (sx,sy)=(3,3) => global_id=289
[DBG]  agent 110 t=3 => decoded (sx,sy)=(4,3) => global_id=321
[DBG]  Complete path of agent 110:
[DBG]    Original: 193 192 224 256 288 289 321 353 385 384 416 448 449 449 450 482 483 515 547 546 578 610 609 608 640 672 704 736 768 769 770 
[DBG]    New:     193 192 224 256 288 289 321 353 385 384 416 448 449 449 450 482 483 515 547 546 578 610 609 608 640 672 704 736 768 769 770 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 193 192 224 
[DBG]    Local path (in submap): 256 288 289 321 
[DBG]    Suffix (out of submap): 353 385 384 416 448 449 449 450 482 483 515 547 546 578 610 609 608 640 672 704 736 768 769 770 
[DBG]  Original agent path length 110 je: 31
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 2: 193, 192, 224, 256, 288, 289, 321, 353, 385, 384, 416, 448, 449, 449, 450, 482, 483, 515, 547, 546, 578, 610, 609, 608, 640, 672, 704, 736, 768, 769, 770, 
[DBG]  Path for agent 110 updated, resulting length: 31
[DBG]  Paths successfully updated.
[DBG]  (LNS.cpp) New path for agent 15: 
[DBG]  288, 288, 256, 257, 258, 259, 260, 261, 293, 294, 295, 296, 297, 265, 266, 267, 268, 269, 270, 271, 239, 240, 208, 176, 144, 112, 113, 81, 82, 83, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 156, 157, 
[DBG]  (LNS.cpp) New path for agent 42: 
[DBG]  224, 256, 257, 289, 321, 353, 354, 354, 355, 356, 357, 389, 421, 422, 423, 424, 425, 426, 427, 428, 429, 429, 429, 430, 431, 463, 464, 465, 466, 467, 468, 469, 437, 438, 439, 440, 472, 473, 474, 506, 506, 538, 570, 602, 601, 600, 632, 664, 696, 728, 727, 759, 
[DBG]  (LNS.cpp) New path for agent 110: 
[DBG]  193, 192, 224, 256, 288, 289, 321, 353, 385, 384, 416, 448, 449, 449, 450, 482, 483, 515, 547, 546, 578, 610, 609, 608, 640, 672, 704, 736, 768, 769, 770, 
[DBG]  component_weights = {0.310851, 0.159593, 0.166894, 0.362662}
[DBG]  opSuccess value: 1
[STAT] neighbor.sum_of_costs before recomputation: 122
[STAT] neighbor.old_sum_of_costs before recomputation: 122
[STAT] sum_of_costs before recomputation: 4432
[DBG]  Validate solution immediately after SAT success.
[DBG]  No problems after SAT replan.
[DBG]  Recomputing sum_of_cost by dividing neighbor.sum_of_costs and neighbor.old_sum_of_costs
[STAT] sum_of_costs after recomputation: 4432
[STAT] Iteration 75
[DBG]  Using SAT operator (destroy+repair SAT).
[DBG]  ====================
[DBG]  SAT destroy operator called.
[DBG]  SAT heuristic: 2
[DBG]  key_agent_id: 65
[DBG]  key_agent_id global path length: 36
[DBG]  Submap content (global positions):
[DBG]  580 581 582 583 584 
[DBG]  612 613 614 615 616 
[DBG]  644 645 646 647 648 
[DBG]  676 677 678 679 680 
[DBG]  708 709 710 711 712 
[DBG]  Map content with agents and obstacles:
[DBG]  . . . A . 
[DBG]  . . X . A 
[DBG]  . A A . A 
[DBG]  . . A X . 
[DBG]  X . . X . 
[DBG]  content of the map structure that we pass to the SAT solver:
[DBG]  1  1  1  1  1  
[DBG]  1  1  -1  1  1  
[DBG]  1  1  1  1  1  
[DBG]  1  1  1  -1  1  
[DBG]  -1  1  1  -1  1  
[DBG]  Identifying agents in a submap for rescheduling (when key_agent is there at the time 24):
[DBG]  Agent 20 found intervals in the sub-map:
[DBG]   [24..28]
[DBG]  Agent 20 (interval in submap: [24..28]) contains time 24, added to replan.
[DBG]  Agent 32 found intervals in the sub-map:
[DBG]  
[DBG]  Agent 32 is not in sub-map at time 24 (intervals: 
[DBG]  )
[DBG]  Agent 65 found intervals in the sub-map:
[DBG]   [21..26]
[DBG]  Agent 65 (interval in submap: [21..26]) contains time 24, added to replan.
[DBG]  Agent 103 found intervals in the sub-map:
[DBG]   [20..25]
[DBG]  Agent 103 (interval in submap: [20..25]) contains time 24, added to replan.
[DBG]  Agent 106 found intervals in the sub-map:
[DBG]   [24..29]
[DBG]  Agent 106 (interval in submap: [24..29]) contains time 24, added to replan.
[DBG]  Agent 112 found intervals in the sub-map:
[DBG]   [22..26]
[DBG]  Agent 112 (interval in submap: [22..26]) contains time 24, added to replan.
[DBG]  Agent 118 found intervals in the sub-map:
[DBG]  
[DBG]  Agent 118 is not in sub-map at time 24 (intervals: 
[DBG]  )
[DBG]  Agent 130 found intervals in the sub-map:
[DBG]   [21..24]
[DBG]  Agent 130 (interval in submap: [21..24]) contains time 24, added to replan.
[DBG]  Agent 20 | Start (global): 648 -> (local): (2, 4) at time 24 | Goal (global): 710 -> (local): (4, 2) at time 28
[DBG]  Agent 65 | Start (global): 646 -> (local): (2, 2) at time 24 | Goal (global): 710 -> (local): (4, 2) at time 26
[DBG]  Agent 103 | Start (global): 678 -> (local): (3, 2) at time 24 | Goal (global): 710 -> (local): (4, 2) at time 25
[DBG]  Agent 106 | Start (global): 583 -> (local): (0, 3) at time 24 | Goal (global): 710 -> (local): (4, 2) at time 29
[DBG]  Agent 112 | Start (global): 645 -> (local): (2, 1) at time 24 | Goal (global): 676 -> (local): (3, 0) at time 26
[DBG]  Agent 130 | Start (global): 616 -> (local): (1, 4) at time 24 | Goal (global): 616 -> (local): (1, 4) at time 24
[DBG]  [REPAIR] SAT destroy operator called.
[DBG]  [REPAIR] SAT operator â€“ launching subproblem FOR OPTIMIZATION.
[DBG]  Creating local paths (sx, sy) in the submap for T_sync = 24
[DBG]    Agent 20 (global paths from T=24 to 28) has local path: (2,4) (2,3) (2,2) (3,2) (4,2) 
[DBG]    Agent 65 (global paths from T=24 to 26) has local path: (2,2) (3,2) (4,2) 
[DBG]    Agent 103 (global paths from T=24 to 25) has local path: (3,2) (4,2) 
[DBG]    Agent 106 (global paths from T=24 to 29) has local path: (0,3) (1,3) (2,3) (2,2) (3,2) (4,2) 
[DBG]    Agent 112 (global paths from T=24 to 26) has local path: (2,1) (3,1) (3,0) 
[DBG]    Agent 130 (global paths from T=24 to 24) has local path: (1,4) 
[DBG]  Checking input data for SAT solver:
[DBG]    - Number of agents to replan: 6
[DBG]  Agent 20 has the original local path length: 5 => Start (2,4), Goal (4,2)
[DBG]  Agent 65 has the original local path length: 3 => Start (2,2), Goal (4,2)
[DBG]  Agent 103 has the original local path length: 2 => Start (3,2), Goal (4,2)
[DBG]  Agent 106 has the original local path length: 6 => Start (0,3), Goal (4,2)
[DBG]  Agent 112 has the original local path length: 3 => Start (2,1), Goal (3,0)
[DBG]  Agent 130 has the original local path length: 1 => Start (1,4), Goal (1,4)
[DBG]  Start position: (2, 4), (2, 2), (3, 2), (0, 3), (2, 1), (1, 4), 
[DBG]  Goal position: (4, 2), (4, 2), (4, 2), (4, 2), (3, 0), (1, 4), 
[DBG]  SAT instance and solver created.
Currently solving
Instance name: scen
Map name: map
Encoding used: disappear_at_goal
SAT solver used: Kissat
Optimizing function: sum of costs
Number of agents: 6
Mks LB: 6
SoC LB: 20
Delta: 0
Remaining time: 300000 [ms]

Vertex conflict! Agents 0, 1, timestep 5, location 0
Vertex conflict! Agents 0, 2, timestep 5, location 0
Vertex conflict! Agents 0, 4, timestep 5, location 0
Vertex conflict! Agents 0, 5, timestep 5, location 0
Vertex conflict! Agents 1, 2, timestep 3, location 0
Swapping conflict! Agents 1, 2, timestep 3, edge (0,0)
Vertex conflict! Agents 1, 2, timestep 4, location 0
Swapping conflict! Agents 1, 2, timestep 4, edge (0,0)
Vertex conflict! Agents 1, 2, timestep 5, location 0
Vertex conflict! Agents 1, 4, timestep 3, location 0
Swapping conflict! Agents 1, 4, timestep 3, edge (0,0)
Vertex conflict! Agents 1, 4, timestep 4, location 0
Swapping conflict! Agents 1, 4, timestep 4, edge (0,0)
Vertex conflict! Agents 1, 4, timestep 5, location 0
Vertex conflict! Agents 1, 5, timestep 3, location 0
Swapping conflict! Agents 1, 5, timestep 3, edge (0,0)
Vertex conflict! Agents 1, 5, timestep 4, location 0
Swapping conflict! Agents 1, 5, timestep 4, edge (0,0)
Vertex conflict! Agents 1, 5, timestep 5, location 0
Vertex conflict! Agents 2, 4, timestep 3, location 0
Swapping conflict! Agents 2, 4, timestep 3, edge (0,0)
Vertex conflict! Agents 2, 4, timestep 4, location 0
Swapping conflict! Agents 2, 4, timestep 4, edge (0,0)
Vertex conflict! Agents 2, 4, timestep 5, location 0
Vertex conflict! Agents 2, 5, timestep 2, location 0
Swapping conflict! Agents 2, 5, timestep 2, edge (0,0)
Vertex conflict! Agents 2, 5, timestep 3, location 0
Swapping conflict! Agents 2, 5, timestep 3, edge (0,0)
Vertex conflict! Agents 2, 5, timestep 4, location 0
Swapping conflict! Agents 2, 5, timestep 4, edge (0,0)
Vertex conflict! Agents 2, 5, timestep 5, location 0
Vertex conflict! Agents 4, 5, timestep 3, location 0
Swapping conflict! Agents 4, 5, timestep 3, edge (0,0)
Vertex conflict! Agents 4, 5, timestep 4, location 0
Swapping conflict! Agents 4, 5, timestep 4, edge (0,0)
Vertex conflict! Agents 4, 5, timestep 5, location 0
Found plan [agents = 6] [timesteps = 6]
Agent #0 : 13 12 11 16 19 0 
Agent #1 : 11 16 19 0 0 0 
Agent #2 : 16 19 0 0 0 0 
Agent #3 : 3 7 12 11 16 19 
Agent #4 : 10 15 14 0 0 0 
Agent #5 : 8 0 0 0 0 0 

[STAT] Solver returned: 0
[DBG]  Agent (index) 20 | New local path (submap idx):
[DBG]  13 12 11 16 19 
[DBG]  Agent (index) 65 | New local path (submap idx):
[DBG]  11 16 19 
[DBG]  Agent (index) 103 | New local path (submap idx):
[DBG]  16 19 
[DBG]  Agent (index) 106 | New local path (submap idx):
[DBG]  3 7 12 11 16 19 
[DBG]  Agent (index) 112 | New local path (submap idx):
[DBG]  10 15 14 
[DBG]  Agent (index) 130 | New local path (submap idx):
[DBG]  8 
[DBG]  Update the agent path 20 | Original local length: 5 | New local length: 5
[DBG]  agent 20 t=0 => decoded (sx,sy)=(2,4) => global_id=648
[DBG]  agent 20 t=1 => decoded (sx,sy)=(2,3) => global_id=647
[DBG]  agent 20 t=2 => decoded (sx,sy)=(2,2) => global_id=646
[DBG]  agent 20 t=3 => decoded (sx,sy)=(3,2) => global_id=678
[DBG]  agent 20 t=4 => decoded (sx,sy)=(4,2) => global_id=710
[DBG]  Complete path of agent 20:
[DBG]    Original: 242 241 240 239 238 270 269 268 267 299 331 363 395 395 427 459 491 523 555 587 619 651 650 649 648 647 646 678 710 742 774 775 807 839 871 903 904 
[DBG]    New:     242 241 240 239 238 270 269 268 267 299 331 363 395 395 427 459 491 523 555 587 619 651 650 649 648 647 646 678 710 742 774 775 807 839 871 903 904 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 242 241 240 239 238 270 269 268 267 299 331 363 395 395 427 459 491 523 555 587 619 651 650 649 
[DBG]    Local path (in submap): 648 647 646 678 710 
[DBG]    Suffix (out of submap): 742 774 775 807 839 871 903 904 
[DBG]  Original agent path length 20 je: 37
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 0: 242, 241, 240, 239, 238, 270, 269, 268, 267, 299, 331, 363, 395, 395, 427, 459, 491, 523, 555, 587, 619, 651, 650, 649, 648, 647, 646, 678, 710, 742, 774, 775, 807, 839, 871, 903, 904, 
[DBG]  Path for agent 20 updated, resulting length: 37
[DBG]  Update the agent path 65 | Original local length: 3 | New local length: 3
[DBG]  agent 65 t=0 => decoded (sx,sy)=(2,2) => global_id=646
[DBG]  agent 65 t=1 => decoded (sx,sy)=(3,2) => global_id=678
[DBG]  agent 65 t=2 => decoded (sx,sy)=(4,2) => global_id=710
[DBG]  Complete path of agent 65:
[DBG]    Original: 66 98 99 100 132 164 196 228 260 261 293 325 326 358 390 422 454 486 485 517 549 581 613 645 646 678 710 742 774 775 776 777 778 779 811 843 
[DBG]    New:     66 98 99 100 132 164 196 228 260 261 293 325 326 358 390 422 454 486 485 517 549 581 613 645 646 678 710 742 774 775 776 777 778 779 811 843 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 66 98 99 100 132 164 196 228 260 261 293 325 326 358 390 422 454 486 485 517 549 581 613 645 
[DBG]    Local path (in submap): 646 678 710 
[DBG]    Suffix (out of submap): 742 774 775 776 777 778 779 811 843 
[DBG]  Original agent path length 65 je: 36
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 1: 66, 98, 99, 100, 132, 164, 196, 228, 260, 261, 293, 325, 326, 358, 390, 422, 454, 486, 485, 517, 549, 581, 613, 645, 646, 678, 710, 742, 774, 775, 776, 777, 778, 779, 811, 843, 
[DBG]  Path for agent 65 updated, resulting length: 36
[DBG]  Update the agent path 103 | Original local length: 2 | New local length: 2
[DBG]  agent 103 t=0 => decoded (sx,sy)=(3,2) => global_id=678
[DBG]  agent 103 t=1 => decoded (sx,sy)=(4,2) => global_id=710
[DBG]  Complete path of agent 103:
[DBG]    Original: 40 72 104 136 168 200 232 264 296 295 327 359 391 423 455 487 486 485 517 549 581 613 645 677 678 710 742 774 775 807 839 871 903 904 905 
[DBG]    New:     40 72 104 136 168 200 232 264 296 295 327 359 391 423 455 487 486 485 517 549 581 613 645 677 678 710 742 774 775 807 839 871 903 904 905 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 40 72 104 136 168 200 232 264 296 295 327 359 391 423 455 487 486 485 517 549 581 613 645 677 
[DBG]    Local path (in submap): 678 710 
[DBG]    Suffix (out of submap): 742 774 775 807 839 871 903 904 905 
[DBG]  Original agent path length 103 je: 35
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 2: 40, 72, 104, 136, 168, 200, 232, 264, 296, 295, 327, 359, 391, 423, 455, 487, 486, 485, 517, 549, 581, 613, 645, 677, 678, 710, 742, 774, 775, 807, 839, 871, 903, 904, 905, 
[DBG]  Path for agent 103 updated, resulting length: 35
[DBG]  Update the agent path 106 | Original local length: 6 | New local length: 6
[DBG]  agent 106 t=0 => decoded (sx,sy)=(0,3) => global_id=583
[DBG]  agent 106 t=1 => decoded (sx,sy)=(1,3) => global_id=615
[DBG]  agent 106 t=2 => decoded (sx,sy)=(2,3) => global_id=647
[DBG]  agent 106 t=3 => decoded (sx,sy)=(2,2) => global_id=646
[DBG]  agent 106 t=4 => decoded (sx,sy)=(3,2) => global_id=678
[DBG]  agent 106 t=5 => decoded (sx,sy)=(4,2) => global_id=710
[DBG]  Complete path of agent 106:
[DBG]    Original: 244 276 308 340 339 371 403 402 401 433 432 431 463 462 494 526 525 524 523 522 521 520 519 551 583 615 647 646 678 710 742 774 775 776 777 778 779 747 715 
[DBG]    New:     244 276 308 340 339 371 403 402 401 433 432 431 463 462 494 526 525 524 523 522 521 520 519 551 583 615 647 646 678 710 742 774 775 776 777 778 779 747 715 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 244 276 308 340 339 371 403 402 401 433 432 431 463 462 494 526 525 524 523 522 521 520 519 551 
[DBG]    Local path (in submap): 583 615 647 646 678 710 
[DBG]    Suffix (out of submap): 742 774 775 776 777 778 779 747 715 
[DBG]  Original agent path length 106 je: 39
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 3: 244, 276, 308, 340, 339, 371, 403, 402, 401, 433, 432, 431, 463, 462, 494, 526, 525, 524, 523, 522, 521, 520, 519, 551, 583, 615, 647, 646, 678, 710, 742, 774, 775, 776, 777, 778, 779, 747, 715, 
[DBG]  Path for agent 106 updated, resulting length: 39
[DBG]  Update the agent path 112 | Original local length: 3 | New local length: 3
[DBG]  agent 112 t=0 => decoded (sx,sy)=(2,1) => global_id=645
[DBG]  agent 112 t=1 => decoded (sx,sy)=(3,1) => global_id=677
[DBG]  agent 112 t=2 => decoded (sx,sy)=(3,0) => global_id=676
[DBG]  Complete path of agent 112:
[DBG]    Original: 337 336 335 303 302 301 300 299 331 363 362 361 360 359 358 390 422 454 486 485 517 549 581 613 645 677 676 675 
[DBG]    New:     337 336 335 303 302 301 300 299 331 363 362 361 360 359 358 390 422 454 486 485 517 549 581 613 645 677 676 675 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 337 336 335 303 302 301 300 299 331 363 362 361 360 359 358 390 422 454 486 485 517 549 581 613 
[DBG]    Local path (in submap): 645 677 676 
[DBG]    Suffix (out of submap): 675 
[DBG]  Original agent path length 112 je: 28
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 4: 337, 336, 335, 303, 302, 301, 300, 299, 331, 363, 362, 361, 360, 359, 358, 390, 422, 454, 486, 485, 517, 549, 581, 613, 645, 677, 676, 675, 
[DBG]  Path for agent 112 updated, resulting length: 28
[DBG]  Update the agent path 130 | Original local length: 1 | New local length: 1
[DBG]  agent 130 t=0 => decoded (sx,sy)=(1,4) => global_id=616
[DBG]  Complete path of agent 130:
[DBG]    Original: 944 976 976 976 975 974 973 941 940 908 876 875 843 811 811 811 779 778 746 745 713 712 680 648 616 617 617 649 650 651 
[DBG]    New:     944 976 976 976 975 974 973 941 940 908 876 875 843 811 811 811 779 778 746 745 713 712 680 648 616 617 617 649 650 651 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 944 976 976 976 975 974 973 941 940 908 876 875 843 811 811 811 779 778 746 745 713 712 680 648 
[DBG]    Local path (in submap): 616 
[DBG]    Suffix (out of submap): 617 617 649 650 651 
[DBG]  Original agent path length 130 je: 30
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 5: 944, 976, 976, 976, 975, 974, 973, 941, 940, 908, 876, 875, 843, 811, 811, 811, 779, 778, 746, 745, 713, 712, 680, 648, 616, 617, 617, 649, 650, 651, 
[DBG]  Path for agent 130 updated, resulting length: 30
[DBG]  Paths successfully updated.
[DBG]  (LNS.cpp) New path for agent 20: 
[DBG]  242, 241, 240, 239, 238, 270, 269, 268, 267, 299, 331, 363, 395, 395, 427, 459, 491, 523, 555, 587, 619, 651, 650, 649, 648, 647, 646, 678, 710, 742, 774, 775, 807, 839, 871, 903, 904, 
[DBG]  (LNS.cpp) New path for agent 65: 
[DBG]  66, 98, 99, 100, 132, 164, 196, 228, 260, 261, 293, 325, 326, 358, 390, 422, 454, 486, 485, 517, 549, 581, 613, 645, 646, 678, 710, 742, 774, 775, 776, 777, 778, 779, 811, 843, 
[DBG]  (LNS.cpp) New path for agent 103: 
[DBG]  40, 72, 104, 136, 168, 200, 232, 264, 296, 295, 327, 359, 391, 423, 455, 487, 486, 485, 517, 549, 581, 613, 645, 677, 678, 710, 742, 774, 775, 807, 839, 871, 903, 904, 905, 
[DBG]  (LNS.cpp) New path for agent 106: 
[DBG]  244, 276, 308, 340, 339, 371, 403, 402, 401, 433, 432, 431, 463, 462, 494, 526, 525, 524, 523, 522, 521, 520, 519, 551, 583, 615, 647, 646, 678, 710, 742, 774, 775, 776, 777, 778, 779, 747, 715, 
[DBG]  (LNS.cpp) New path for agent 112: 
[DBG]  337, 336, 335, 303, 302, 301, 300, 299, 331, 363, 362, 361, 360, 359, 358, 390, 422, 454, 486, 485, 517, 549, 581, 613, 645, 677, 676, 675, 
[DBG]  (LNS.cpp) New path for agent 130: 
[DBG]  944, 976, 976, 976, 975, 974, 973, 941, 940, 908, 876, 875, 843, 811, 811, 811, 779, 778, 746, 745, 713, 712, 680, 648, 616, 617, 617, 649, 650, 651, 
[DBG]  component_weights = {0.315196, 0.158587, 0.165842, 0.360376}
[DBG]  opSuccess value: 1
[STAT] neighbor.sum_of_costs before recomputation: 199
[STAT] neighbor.old_sum_of_costs before recomputation: 199
[STAT] sum_of_costs before recomputation: 4432
[DBG]  Validate solution immediately after SAT success.
[DBG]  No problems after SAT replan.
[DBG]  Recomputing sum_of_cost by dividing neighbor.sum_of_costs and neighbor.old_sum_of_costs
[STAT] sum_of_costs after recomputation: 4432
[STAT] Iteration 76
[DBG]  Using SAT operator (destroy+repair SAT).
[DBG]  ====================
[DBG]  SAT destroy operator called.
[DBG]  SAT heuristic: 2
[DBG]  key_agent_id: 91
[DBG]  key_agent_id global path length: 40
[DBG]  Submap content (global positions):
[DBG]  504 505 506 507 508 
[DBG]  536 537 538 539 540 
[DBG]  568 569 570 571 572 
[DBG]  600 601 602 603 604 
[DBG]  632 633 634 635 636 
[DBG]  Map content with agents and obstacles:
[DBG]  A A . A A 
[DBG]  X X . A . 
[DBG]  X . A . . 
[DBG]  . . . . . 
[DBG]  . . X . . 
[DBG]  content of the map structure that we pass to the SAT solver:
[DBG]  1  1  1  1  1  
[DBG]  -1  -1  1  1  1  
[DBG]  -1  1  1  1  1  
[DBG]  1  1  1  1  1  
[DBG]  1  1  -1  1  1  
[DBG]  Identifying agents in a submap for rescheduling (when key_agent is there at the time 28):
[DBG]  Agent 2 found intervals in the sub-map:
[DBG]   [23..35]
[DBG]  Agent 2 (interval in submap: [23..35]) contains time 28, added to replan.
[DBG]  Agent 74 found intervals in the sub-map:
[DBG]   [26..30]
[DBG]  Agent 74 (interval in submap: [26..30]) contains time 28, added to replan.
[DBG]  Agent 79 found intervals in the sub-map:
[DBG]   [28..28]
[DBG]  Agent 79 (interval in submap: [28..28]) contains time 28, added to replan.
[DBG]  Agent 86 found intervals in the sub-map:
[DBG]   [24..29]
[DBG]  Agent 86 (interval in submap: [24..29]) contains time 28, added to replan.
[DBG]  Agent 91 found intervals in the sub-map:
[DBG]   [24..32]
[DBG]  Agent 91 (interval in submap: [24..32]) contains time 28, added to replan.
[DBG]  Agent 94 found intervals in the sub-map:
[DBG]   [5..11]
[DBG]  Agent 94 is not in sub-map at time 28 (intervals: 
[DBG]  [5..11] )
[DBG]  Agent 133 found intervals in the sub-map:
[DBG]   [19..24]
[DBG]  Agent 133 is not in sub-map at time 28 (intervals: 
[DBG]  [19..24] )
[DBG]  Agent 142 found intervals in the sub-map:
[DBG]   [20..28]
[DBG]  Agent 142 (interval in submap: [20..28]) contains time 28, added to replan.
[DBG]  Agent 2 | Start (global): 539 -> (local): (1, 3) at time 28 | Goal (global): 636 -> (local): (4, 4) at time 35
[DBG]  Agent 74 | Start (global): 505 -> (local): (0, 1) at time 28 | Goal (global): 504 -> (local): (0, 0) at time 30
[DBG]  Agent 79 | Start (global): 504 -> (local): (0, 0) at time 28 | Goal (global): 504 -> (local): (0, 0) at time 28
[DBG]  Agent 86 | Start (global): 508 -> (local): (0, 4) at time 28 | Goal (global): 540 -> (local): (1, 4) at time 29
[DBG]  Agent 91 | Start (global): 570 -> (local): (2, 2) at time 28 | Goal (global): 506 -> (local): (0, 2) at time 32
[DBG]  Agent 142 | Start (global): 507 -> (local): (0, 3) at time 28 | Goal (global): 507 -> (local): (0, 3) at time 28
[DBG]  [REPAIR] SAT destroy operator called.
[DBG]  [REPAIR] SAT operator â€“ launching subproblem FOR OPTIMIZATION.
[DBG]  Creating local paths (sx, sy) in the submap for T_sync = 28
[DBG]    Agent 2 (global paths from T=28 to 35) has local path: (1,3) (1,3) (1,2) (2,2) (3,2) (3,3) (3,4) (4,4) 
[DBG]    Agent 74 (global paths from T=28 to 30) has local path: (0,1) (0,1) (0,0) 
[DBG]    Agent 79 (global paths from T=28 to 28) has local path: (0,0) 
[DBG]    Agent 86 (global paths from T=28 to 29) has local path: (0,4) (1,4) 
[DBG]    Agent 91 (global paths from T=28 to 32) has local path: (2,2) (1,2) (0,2) (0,2) (0,2) 
[DBG]    Agent 142 (global paths from T=28 to 28) has local path: (0,3) 
[DBG]  Checking input data for SAT solver:
[DBG]    - Number of agents to replan: 6
[DBG]  Agent 2 has the original local path length: 8 => Start (1,3), Goal (4,4)
[DBG]  Agent 74 has the original local path length: 3 => Start (0,1), Goal (0,0)
[DBG]  Agent 79 has the original local path length: 1 => Start (0,0), Goal (0,0)
[DBG]  Agent 86 has the original local path length: 2 => Start (0,4), Goal (1,4)
[DBG]  Agent 91 has the original local path length: 5 => Start (2,2), Goal (0,2)
[DBG]  Agent 142 has the original local path length: 1 => Start (0,3), Goal (0,3)
[DBG]  Start position: (1, 3), (0, 1), (0, 0), (0, 4), (2, 2), (0, 3), 
[DBG]  Goal position: (4, 4), (0, 0), (0, 0), (1, 4), (0, 2), (0, 3), 
[DBG]  SAT instance and solver created.
Currently solving
Instance name: scen
Map name: map
Encoding used: disappear_at_goal
SAT solver used: Kissat
Optimizing function: sum of costs
Number of agents: 6
Mks LB: 5
SoC LB: 14
Delta: 0
Remaining time: 300000 [ms]

Vertex conflict! Agents 1, 2, timestep 1, location 0
Swapping conflict! Agents 1, 2, timestep 1, edge (0,0)
Vertex conflict! Agents 1, 2, timestep 2, location 0
Swapping conflict! Agents 1, 2, timestep 2, edge (0,0)
Vertex conflict! Agents 1, 2, timestep 3, location 0
Swapping conflict! Agents 1, 2, timestep 3, edge (0,0)
Vertex conflict! Agents 1, 2, timestep 4, location 0
Vertex conflict! Agents 1, 3, timestep 2, location 0
Swapping conflict! Agents 1, 3, timestep 2, edge (0,0)
Vertex conflict! Agents 1, 3, timestep 3, location 0
Swapping conflict! Agents 1, 3, timestep 3, edge (0,0)
Vertex conflict! Agents 1, 3, timestep 4, location 0
Vertex conflict! Agents 1, 4, timestep 3, location 0
Swapping conflict! Agents 1, 4, timestep 3, edge (0,0)
Vertex conflict! Agents 1, 4, timestep 4, location 0
Vertex conflict! Agents 1, 5, timestep 1, location 0
Swapping conflict! Agents 1, 5, timestep 1, edge (0,0)
Vertex conflict! Agents 1, 5, timestep 2, location 0
Swapping conflict! Agents 1, 5, timestep 2, edge (0,0)
Vertex conflict! Agents 1, 5, timestep 3, location 0
Swapping conflict! Agents 1, 5, timestep 3, edge (0,0)
Vertex conflict! Agents 1, 5, timestep 4, location 0
Vertex conflict! Agents 2, 3, timestep 2, location 0
Swapping conflict! Agents 2, 3, timestep 2, edge (0,0)
Vertex conflict! Agents 2, 3, timestep 3, location 0
Swapping conflict! Agents 2, 3, timestep 3, edge (0,0)
Vertex conflict! Agents 2, 3, timestep 4, location 0
Vertex conflict! Agents 2, 4, timestep 3, location 0
Swapping conflict! Agents 2, 4, timestep 3, edge (0,0)
Vertex conflict! Agents 2, 4, timestep 4, location 0
Vertex conflict! Agents 2, 5, timestep 1, location 0
Swapping conflict! Agents 2, 5, timestep 1, edge (0,0)
Vertex conflict! Agents 2, 5, timestep 2, location 0
Swapping conflict! Agents 2, 5, timestep 2, edge (0,0)
Vertex conflict! Agents 2, 5, timestep 3, location 0
Swapping conflict! Agents 2, 5, timestep 3, edge (0,0)
Vertex conflict! Agents 2, 5, timestep 4, location 0
Vertex conflict! Agents 3, 4, timestep 3, location 0
Swapping conflict! Agents 3, 4, timestep 3, edge (0,0)
Vertex conflict! Agents 3, 4, timestep 4, location 0
Vertex conflict! Agents 3, 5, timestep 2, location 0
Swapping conflict! Agents 3, 5, timestep 2, edge (0,0)
Vertex conflict! Agents 3, 5, timestep 3, location 0
Swapping conflict! Agents 3, 5, timestep 3, edge (0,0)
Vertex conflict! Agents 3, 5, timestep 4, location 0
Vertex conflict! Agents 4, 5, timestep 3, location 0
Swapping conflict! Agents 4, 5, timestep 3, edge (0,0)
Vertex conflict! Agents 4, 5, timestep 4, location 0
Found plan [agents = 6] [timesteps = 5]
Agent #0 : 6 10 15 19 20 
Agent #1 : 1 0 0 0 0 
Agent #2 : 0 0 0 0 0 
Agent #3 : 4 7 0 0 0 
Agent #4 : 9 5 2 0 0 
Agent #5 : 3 0 0 0 0 

[STAT] Solver returned: 0
[DBG]  Agent (index) 2 | New local path (submap idx):
[DBG]  6 10 15 19 20 
[DBG]  Agent (index) 74 | New local path (submap idx):
[DBG]  1 0 
[DBG]  Agent (index) 79 | New local path (submap idx):
[DBG]  0 
[DBG]  Agent (index) 86 | New local path (submap idx):
[DBG]  4 7 
[DBG]  Agent (index) 91 | New local path (submap idx):
[DBG]  9 5 2 
[DBG]  Agent (index) 142 | New local path (submap idx):
[DBG]  3 
[DBG]  Update the agent path 2 | Original local length: 8 | New local length: 5
[DBG]  agent 2 t=0 => decoded (sx,sy)=(1,3) => global_id=539
[DBG]  agent 2 t=1 => decoded (sx,sy)=(2,3) => global_id=571
[DBG]  agent 2 t=2 => decoded (sx,sy)=(3,3) => global_id=603
[DBG]  agent 2 t=3 => decoded (sx,sy)=(4,3) => global_id=635
[DBG]  agent 2 t=4 => decoded (sx,sy)=(4,4) => global_id=636
[DBG]  Complete path of agent 2:
[DBG]    Original: 59 91 90 89 89 121 153 185 217 249 281 313 345 377 409 441 440 439 438 438 470 502 503 504 505 506 538 538 539 539 538 570 602 603 604 636 637 638 670 702 701 733 765 764 
[DBG]    New:     59 91 90 89 89 121 153 185 217 249 281 313 345 377 409 441 440 439 438 438 470 502 503 504 505 506 538 538 539 571 603 635 636 637 638 670 702 701 733 765 764 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 59 91 90 89 89 121 153 185 217 249 281 313 345 377 409 441 440 439 438 438 470 502 503 504 505 506 538 538 
[DBG]    Local path (in submap): 539 571 603 635 636 637 638 670 
[DBG]    Suffix (out of submap): 702 701 733 765 764 
[DBG]  Original agent path length 2 je: 44
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 0: 59, 91, 90, 89, 89, 121, 153, 185, 217, 249, 281, 313, 345, 377, 409, 441, 440, 439, 438, 438, 470, 502, 503, 504, 505, 506, 538, 538, 539, 571, 603, 635, 636, 637, 638, 670, 702, 701, 733, 765, 764, 
[DBG]  Path for agent 2 updated, resulting length: 41
[DBG]  Update the agent path 74 | Original local length: 3 | New local length: 2
[DBG]  agent 74 t=0 => decoded (sx,sy)=(0,1) => global_id=505
[DBG]  agent 74 t=1 => decoded (sx,sy)=(0,0) => global_id=504
[DBG]  Complete path of agent 74:
[DBG]    Original: 752 752 752 752 752 752 752 752 752 752 752 720 721 689 657 658 659 627 628 596 597 565 533 534 502 503 504 505 505 505 504 
[DBG]    New:     752 752 752 752 752 752 752 752 752 752 752 720 721 689 657 658 659 627 628 596 597 565 533 534 502 503 504 505 505 504 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 752 752 752 752 752 752 752 752 752 752 752 720 721 689 657 658 659 627 628 596 597 565 533 534 502 503 504 505 
[DBG]    Local path (in submap): 505 504 
[DBG]    Suffix (out of submap): 
[DBG]  Original agent path length 74 je: 31
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 1: 752, 752, 752, 752, 752, 752, 752, 752, 752, 752, 752, 720, 721, 689, 657, 658, 659, 627, 628, 596, 597, 565, 533, 534, 502, 503, 504, 505, 505, 504, 
[DBG]  Path for agent 74 updated, resulting length: 30
[DBG]  Update the agent path 79 | Original local length: 1 | New local length: 1
[DBG]  agent 79 t=0 => decoded (sx,sy)=(0,0) => global_id=504
[DBG]  Complete path of agent 79:
[DBG]    Original: 1004 1005 973 974 942 910 878 879 847 815 783 784 752 720 721 689 657 658 659 627 628 629 597 565 566 534 502 503 504 472 440 408 409 377 345 313 281 249 217 185 153 154 122 123 
[DBG]    New:     1004 1005 973 974 942 910 878 879 847 815 783 784 752 720 721 689 657 658 659 627 628 629 597 565 566 534 502 503 504 472 440 408 409 377 345 313 281 249 217 185 153 154 122 123 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 1004 1005 973 974 942 910 878 879 847 815 783 784 752 720 721 689 657 658 659 627 628 629 597 565 566 534 502 503 
[DBG]    Local path (in submap): 504 
[DBG]    Suffix (out of submap): 472 440 408 409 377 345 313 281 249 217 185 153 154 122 123 
[DBG]  Original agent path length 79 je: 44
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 2: 1004, 1005, 973, 974, 942, 910, 878, 879, 847, 815, 783, 784, 752, 720, 721, 689, 657, 658, 659, 627, 628, 629, 597, 565, 566, 534, 502, 503, 504, 472, 440, 408, 409, 377, 345, 313, 281, 249, 217, 185, 153, 154, 122, 123, 
[DBG]  Path for agent 79 updated, resulting length: 44
[DBG]  Update the agent path 86 | Original local length: 2 | New local length: 2
[DBG]  agent 86 t=0 => decoded (sx,sy)=(0,4) => global_id=508
[DBG]  agent 86 t=1 => decoded (sx,sy)=(1,4) => global_id=540
[DBG]  Complete path of agent 86:
[DBG]    Original: 781 782 750 718 719 720 688 689 657 658 658 659 627 628 596 597 565 566 534 534 534 534 502 503 504 505 506 507 508 540 541 
[DBG]    New:     781 782 750 718 719 720 688 689 657 658 658 659 627 628 596 597 565 566 534 534 534 534 502 503 504 505 506 507 508 540 541 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 781 782 750 718 719 720 688 689 657 658 658 659 627 628 596 597 565 566 534 534 534 534 502 503 504 505 506 507 
[DBG]    Local path (in submap): 508 540 
[DBG]    Suffix (out of submap): 541 
[DBG]  Original agent path length 86 je: 31
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 3: 781, 782, 750, 718, 719, 720, 688, 689, 657, 658, 658, 659, 627, 628, 596, 597, 565, 566, 534, 534, 534, 534, 502, 503, 504, 505, 506, 507, 508, 540, 541, 
[DBG]  Path for agent 86 updated, resulting length: 31
[DBG]  Update the agent path 91 | Original local length: 5 | New local length: 3
[DBG]  agent 91 t=0 => decoded (sx,sy)=(2,2) => global_id=570
[DBG]  agent 91 t=1 => decoded (sx,sy)=(1,2) => global_id=538
[DBG]  agent 91 t=2 => decoded (sx,sy)=(0,2) => global_id=506
[DBG]  Complete path of agent 91:
[DBG]    Original: 787 755 755 755 755 755 755 755 755 755 755 755 755 755 756 757 725 726 727 728 696 664 664 664 632 600 601 602 570 538 506 506 506 474 475 443 444 445 413 381 
[DBG]    New:     787 755 755 755 755 755 755 755 755 755 755 755 755 755 756 757 725 726 727 728 696 664 664 664 632 600 601 602 570 538 506 474 475 443 444 445 413 381 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 787 755 755 755 755 755 755 755 755 755 755 755 755 755 756 757 725 726 727 728 696 664 664 664 632 600 601 602 
[DBG]    Local path (in submap): 570 538 506 474 475 
[DBG]    Suffix (out of submap): 443 444 445 413 381 
[DBG]  Original agent path length 91 je: 40
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 4: 787, 755, 755, 755, 755, 755, 755, 755, 755, 755, 755, 755, 755, 755, 756, 757, 725, 726, 727, 728, 696, 664, 664, 664, 632, 600, 601, 602, 570, 538, 506, 474, 475, 443, 444, 445, 413, 381, 
[DBG]  Path for agent 91 updated, resulting length: 38
[DBG]  Update the agent path 142 | Original local length: 1 | New local length: 1
[DBG]  agent 142 t=0 => decoded (sx,sy)=(0,3) => global_id=507
[DBG]  Complete path of agent 142:
[DBG]    Original: 795 827 859 858 890 890 889 921 921 889 888 856 824 792 793 761 729 697 696 664 632 600 601 602 603 571 539 539 507 
[DBG]    New:     795 827 859 858 890 890 889 921 921 889 888 856 824 792 793 761 729 697 696 664 632 600 601 602 603 571 539 539 507 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 795 827 859 858 890 890 889 921 921 889 888 856 824 792 793 761 729 697 696 664 632 600 601 602 603 571 539 539 
[DBG]    Local path (in submap): 507 
[DBG]    Suffix (out of submap): 
[DBG]  Original agent path length 142 je: 29
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 5: 795, 827, 859, 858, 890, 890, 889, 921, 921, 889, 888, 856, 824, 792, 793, 761, 729, 697, 696, 664, 632, 600, 601, 602, 603, 571, 539, 539, 507, 
[DBG]  Path for agent 142 updated, resulting length: 29
[DBG]  Paths successfully updated.
[DBG]  (LNS.cpp) New path for agent 2: 
[DBG]  59, 91, 90, 89, 89, 121, 153, 185, 217, 249, 281, 313, 345, 377, 409, 441, 440, 439, 438, 438, 470, 502, 503, 504, 505, 506, 538, 538, 539, 571, 603, 635, 636, 637, 638, 670, 702, 701, 733, 765, 764, 
[DBG]  (LNS.cpp) New path for agent 74: 
[DBG]  752, 752, 752, 752, 752, 752, 752, 752, 752, 752, 752, 720, 721, 689, 657, 658, 659, 627, 628, 596, 597, 565, 533, 534, 502, 503, 504, 505, 505, 504, 
[DBG]  (LNS.cpp) New path for agent 79: 
[DBG]  1004, 1005, 973, 974, 942, 910, 878, 879, 847, 815, 783, 784, 752, 720, 721, 689, 657, 658, 659, 627, 628, 629, 597, 565, 566, 534, 502, 503, 504, 472, 440, 408, 409, 377, 345, 313, 281, 249, 217, 185, 153, 154, 122, 123, 
[DBG]  (LNS.cpp) New path for agent 86: 
[DBG]  781, 782, 750, 718, 719, 720, 688, 689, 657, 658, 658, 659, 627, 628, 596, 597, 565, 566, 534, 534, 534, 534, 502, 503, 504, 505, 506, 507, 508, 540, 541, 
[DBG]  (LNS.cpp) New path for agent 91: 
[DBG]  787, 755, 755, 755, 755, 755, 755, 755, 755, 755, 755, 755, 755, 755, 756, 757, 725, 726, 727, 728, 696, 664, 664, 664, 632, 600, 601, 602, 570, 538, 506, 474, 475, 443, 444, 445, 413, 381, 
[DBG]  (LNS.cpp) New path for agent 142: 
[DBG]  795, 827, 859, 858, 890, 890, 889, 921, 921, 889, 888, 856, 824, 792, 793, 761, 729, 697, 696, 664, 632, 600, 601, 602, 603, 571, 539, 539, 507, 
[DBG]  component_weights = {0.312862, 0.157413, 0.164614, 0.365111}
[DBG]  opSuccess value: 1
[STAT] neighbor.sum_of_costs before recomputation: 207
[STAT] neighbor.old_sum_of_costs before recomputation: 213
[STAT] sum_of_costs before recomputation: 4432
[DBG]  Validate solution immediately after SAT success.
[WARNING] Problem after SAT: Target conflict: agent 2 (len 40) traverses target of agent 54 (len 26) at location 571 at timestep 29
[DBG]  Attempting immediate repair via init_lns because problem occurred after SAT (should be applied only for conflicts...).
[DBG]  Passing 150 agents to init_lns (skip=true).
[DBG]  path_table contents for selected agents (neighbor.agents):
[DBG]    Agent 2 => controlling path length=41
[DBG]    Agent 74 => controlling path length=30
[DBG]    Agent 79 => controlling path length=44
[DBG]    Agent 86 => controlling path length=31
[DBG]    Agent 91 => controlling path length=38
[DBG]    Agent 142 => controlling path length=29
[DBG]  hodnota skip_initial_solution=1
[DBG]  We skip initialSolution => call buildCollisionData()
[DBG]  buildCollisionData() called â€“ skip_initial_solution case.
[DBG]  Agents.size()=150, collision_graph.size()=150
[DBG]  agent 2 => updateCollidingPairs => foundCollision
[DBG]  agent 54 => updateCollidingPairs => foundCollision
[DBG]  agent 56 => updateCollidingPairs => foundCollision
[DBG]  agent 74 => updateCollidingPairs => foundCollision
[DBG]  agent 91 => updateCollidingPairs => foundCollision
[DBG]  Conflicting agent pairs:
[DBG]  agent 2 is in conflict with agent 54
[DBG]  agent 56 is in conflict with agent 74
[DBG]  agent 56 is in conflict with agent 91
[DBG]  buildCollisionData() => sum_of_costs=4426, num_of_colliding_pairs=3
[DBG]  buildCollisionData done => sum_of_costs=4426, num_of_colliding_pairs=3
[DBG]  sum_of_cost hodnota: 4426
[DBG]  After skip/init build => iteration_stats.back(): sum_of_costs=4426, collisions=3
[DEBUG] Using default neighbor generation strategy for conflicts: 1
[DEBUG] Using default neighbor generation strategy for conflicts: 2
[DEBUG] Using default neighbor generation strategy for conflicts: 2
	InitLNS(PP): runtime = 0.0440637, iterations = 4, colliding pairs = 0, initial colliding pairs = 3, solution cost = 4411, initial solution cost = 4426, failed iterations = 0
[DBG]  init_lns->sum_of_costs after init_lns->run: 4411
[DBG]  sum_of_costs after assignment from init_lns->run: 4411
[DBG]  Recomputing sum_of_cost by dividing neighbor.sum_of_costs and neighbor.old_sum_of_costs
[STAT] sum_of_costs after recomputation: 4411
[STAT] Iteration 77
[DBG]  Using SAT operator (destroy+repair SAT).
[DBG]  ====================
[DBG]  SAT destroy operator called.
[DBG]  SAT heuristic: 2
[DBG]  key_agent_id: 120
[DBG]  key_agent_id global path length: 50
[DBG]  Submap content (global positions):
[DBG]  40 41 42 43 44 
[DBG]  72 73 74 75 76 
[DBG]  104 105 106 107 108 
[DBG]  136 137 138 139 140 
[DBG]  168 169 170 171 172 
[DBG]  Map content with agents and obstacles:
[DBG]  . . . . . 
[DBG]  . . . . . 
[DBG]  . . A . . 
[DBG]  . . . . . 
[DBG]  . X . X . 
[DBG]  content of the map structure that we pass to the SAT solver:
[DBG]  1  1  1  1  1  
[DBG]  1  1  1  1  1  
[DBG]  1  1  1  1  1  
[DBG]  1  1  1  1  1  
[DBG]  1  -1  1  -1  1  
[DBG]  Identifying agents in a submap for rescheduling (when key_agent is there at the time 41):
[DBG]  Agent 119 found intervals in the sub-map:
[DBG]   [49..50]
[DBG]  Agent 119 is not in sub-map at time 41 (intervals: 
[DBG]  [49..50] )
[DBG]  Agent 120 found intervals in the sub-map:
[DBG]   [33..33] [38..45]
[DBG]  Agent 120 (interval in submap: [38..45]) contains time 41, added to replan.
[DBG]  Agent 120 | Start (global): 106 -> (local): (2, 2) at time 41 | Goal (global): 168 -> (local): (4, 0) at time 45
[DBG]  [REPAIR] SAT destroy operator called.
[DBG]  [REPAIR] SAT operator â€“ launching subproblem FOR OPTIMIZATION.
[DBG]  Creating local paths (sx, sy) in the submap for T_sync = 41
[DBG]    Agent 120 (global paths from T=41 to 45) has local path: (2,2) (2,1) (2,0) (3,0) (4,0) 
[DBG]  Checking input data for SAT solver:
[DBG]    - Number of agents to replan: 1
[DBG]  Agent 120 has the original local path length: 5 => Start (2,2), Goal (4,0)
[DBG]  Start position: (2, 2), 
[DBG]  Goal position: (4, 0), 
[DBG]  SAT instance and solver created.
Currently solving
Instance name: scen
Map name: map
Encoding used: disappear_at_goal
SAT solver used: Kissat
Optimizing function: sum of costs
Number of agents: 1
Mks LB: 5
SoC LB: 5
Delta: 0
Remaining time: 300000 [ms]

Found plan [agents = 1] [timesteps = 5]
Agent #0 : 12 17 16 15 20 

[STAT] Solver returned: 0
[DBG]  Agent (index) 120 | New local path (submap idx):
[DBG]  12 17 16 15 20 
[DBG]  Update the agent path 120 | Original local length: 5 | New local length: 5
[DBG]  agent 120 t=0 => decoded (sx,sy)=(2,2) => global_id=106
[DBG]  agent 120 t=1 => decoded (sx,sy)=(3,2) => global_id=138
[DBG]  agent 120 t=2 => decoded (sx,sy)=(3,1) => global_id=137
[DBG]  agent 120 t=3 => decoded (sx,sy)=(3,0) => global_id=136
[DBG]  agent 120 t=4 => decoded (sx,sy)=(4,0) => global_id=168
[DBG]  Complete path of agent 120:
[DBG]    Original: 203 203 203 203 203 203 203 203 203 203 203 203 203 203 203 203 203 203 203 203 203 203 203 203 203 203 203 203 203 203 203 203 204 172 173 141 109 77 76 75 74 106 105 104 136 168 200 199 199 200 
[DBG]    New:     203 203 203 203 203 203 203 203 203 203 203 203 203 203 203 203 203 203 203 203 203 203 203 203 203 203 203 203 203 203 203 203 204 172 173 141 109 77 76 75 74 106 138 137 136 168 200 199 199 200 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 203 203 203 203 203 203 203 203 203 203 203 203 203 203 203 203 203 203 203 203 203 203 203 203 203 203 203 203 203 203 203 203 204 172 173 141 109 77 76 75 74 
[DBG]    Local path (in submap): 106 138 137 136 168 
[DBG]    Suffix (out of submap): 200 199 199 200 
[DBG]  Original agent path length 120 je: 50
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 0: 203, 203, 203, 203, 203, 203, 203, 203, 203, 203, 203, 203, 203, 203, 203, 203, 203, 203, 203, 203, 203, 203, 203, 203, 203, 203, 203, 203, 203, 203, 203, 203, 204, 172, 173, 141, 109, 77, 76, 75, 74, 106, 138, 137, 136, 168, 200, 199, 199, 200, 
[DBG]  Path for agent 120 updated, resulting length: 50
[DBG]  Paths successfully updated.
[DBG]  (LNS.cpp) New path for agent 120: 
[DBG]  203, 203, 203, 203, 203, 203, 203, 203, 203, 203, 203, 203, 203, 203, 203, 203, 203, 203, 203, 203, 203, 203, 203, 203, 203, 203, 203, 203, 203, 203, 203, 203, 204, 172, 173, 141, 109, 77, 76, 75, 74, 106, 138, 137, 136, 168, 200, 199, 199, 200, 
[DBG]  component_weights = {0.317222, 0.156414, 0.16357, 0.362794}
[DBG]  opSuccess value: 1
[STAT] neighbor.sum_of_costs before recomputation: 49
[STAT] neighbor.old_sum_of_costs before recomputation: 49
[STAT] sum_of_costs before recomputation: 4411
[DBG]  Validate solution immediately after SAT success.
[WARNING] Problem after SAT: Target conflict: agent 120 (len 49) traverses target of agent 116 (len 35) at location 137 at timestep 43
[DBG]  Attempting immediate repair via init_lns because problem occurred after SAT (should be applied only for conflicts...).
[DBG]  Passing 150 agents to init_lns (skip=true).
[DBG]  path_table contents for selected agents (neighbor.agents):
[DBG]    Agent 120 => controlling path length=50
[DBG]  hodnota skip_initial_solution=1
[DBG]  We skip initialSolution => call buildCollisionData()
[DBG]  buildCollisionData() called â€“ skip_initial_solution case.
[DBG]  Agents.size()=150, collision_graph.size()=150
[DBG]  agent 116 => updateCollidingPairs => foundCollision
[DBG]  agent 120 => updateCollidingPairs => foundCollision
[DBG]  Conflicting agent pairs:
[DBG]  agent 116 is in conflict with agent 120
[DBG]  buildCollisionData() => sum_of_costs=4411, num_of_colliding_pairs=1
[DBG]  buildCollisionData done => sum_of_costs=4411, num_of_colliding_pairs=1
[DBG]  sum_of_cost hodnota: 4411
[DBG]  After skip/init build => iteration_stats.back(): sum_of_costs=4411, collisions=1
[DEBUG] Using default neighbor generation strategy for conflicts: 0
	InitLNS(PP): runtime = 0.00626725, iterations = 2, colliding pairs = 0, initial colliding pairs = 1, solution cost = 4417, initial solution cost = 4411, failed iterations = 0
[DBG]  init_lns->sum_of_costs after init_lns->run: 4417
[DBG]  sum_of_costs after assignment from init_lns->run: 4417
[DBG]  Recomputing sum_of_cost by dividing neighbor.sum_of_costs and neighbor.old_sum_of_costs
[STAT] sum_of_costs after recomputation: 4417
[STAT] Iteration 78
[DBG]  Using SAT operator (destroy+repair SAT).
[DBG]  ====================
[DBG]  SAT destroy operator called.
[DBG]  SAT heuristic: 2
[DBG]  key_agent_id: 61
[DBG]  key_agent_id global path length: 39
[DBG]  Submap content (global positions):
[DBG]  811 812 813 814 815 
[DBG]  843 844 845 846 847 
[DBG]  875 876 877 878 879 
[DBG]  907 908 909 910 911 
[DBG]  939 940 941 942 943 
[DBG]  Map content with agents and obstacles:
[DBG]  . . . . . 
[DBG]  A A . . . 
[DBG]  . . A . . 
[DBG]  X . . . X 
[DBG]  . . . A X 
[DBG]  content of the map structure that we pass to the SAT solver:
[DBG]  1  1  1  1  1  
[DBG]  1  1  1  1  1  
[DBG]  1  1  1  1  1  
[DBG]  -1  1  1  1  -1  
[DBG]  1  1  1  1  -1  
[DBG]  Identifying agents in a submap for rescheduling (when key_agent is there at the time 4):
[DBG]  Agent 61 found intervals in the sub-map:
[DBG]   [0..8]
[DBG]  Agent 61 (interval in submap: [0..8]) contains time 4, added to replan.
[DBG]  Agent 79 found intervals in the sub-map:
[DBG]   [4..9]
[DBG]  Agent 79 (interval in submap: [4..9]) contains time 4, added to replan.
[DBG]  Agent 114 found intervals in the sub-map:
[DBG]   [0..2]
[DBG]  Agent 114 is not in sub-map at time 4 (intervals: 
[DBG]  [0..2] )
[DBG]  Agent 122 found intervals in the sub-map:
[DBG]   [0..5]
[DBG]  Agent 122 (interval in submap: [0..5]) contains time 4, added to replan.
[DBG]  Agent 130 found intervals in the sub-map:
[DBG]   [7..15]
[DBG]  Agent 130 is not in sub-map at time 4 (intervals: 
[DBG]  [7..15] )
[DBG]  Agent 132 found intervals in the sub-map:
[DBG]   [0..6]
[DBG]  Agent 132 (interval in submap: [0..6]) contains time 4, added to replan.
[DBG]  Agent 61 | Start (global): 877 -> (local): (2, 2) at time 4 | Goal (global): 815 -> (local): (0, 4) at time 8
[DBG]  Agent 79 | Start (global): 942 -> (local): (4, 3) at time 4 | Goal (global): 815 -> (local): (0, 4) at time 9
[DBG]  Agent 122 | Start (global): 843 -> (local): (1, 0) at time 4 | Goal (global): 811 -> (local): (0, 0) at time 5
[DBG]  Agent 132 | Start (global): 844 -> (local): (1, 1) at time 4 | Goal (global): 811 -> (local): (0, 0) at time 6
[DBG]  [REPAIR] SAT destroy operator called.
[DBG]  [REPAIR] SAT operator â€“ launching subproblem FOR OPTIMIZATION.
[DBG]  Creating local paths (sx, sy) in the submap for T_sync = 4
[DBG]    Agent 61 (global paths from T=4 to 8) has local path: (2,2) (2,3) (2,4) (1,4) (0,4) 
[DBG]    Agent 79 (global paths from T=4 to 9) has local path: (4,3) (3,3) (2,3) (2,4) (1,4) (0,4) 
[DBG]    Agent 122 (global paths from T=4 to 5) has local path: (1,0) (0,0) 
[DBG]    Agent 132 (global paths from T=4 to 6) has local path: (1,1) (0,1) (0,0) 
[DBG]  Checking input data for SAT solver:
[DBG]    - Number of agents to replan: 4
[DBG]  Agent 61 has the original local path length: 5 => Start (2,2), Goal (0,4)
[DBG]  Agent 79 has the original local path length: 6 => Start (4,3), Goal (0,4)
[DBG]  Agent 122 has the original local path length: 2 => Start (1,0), Goal (0,0)
[DBG]  Agent 132 has the original local path length: 3 => Start (1,1), Goal (0,0)
[DBG]  Start position: (2, 2), (4, 3), (1, 0), (1, 1), 
[DBG]  Goal position: (0, 4), (0, 4), (0, 0), (0, 0), 
[DBG]  SAT instance and solver created.
Currently solving
Instance name: scen
Map name: map
Encoding used: disappear_at_goal
SAT solver used: Kissat
Optimizing function: sum of costs
Number of agents: 4
Mks LB: 6
SoC LB: 16
Delta: 0
Remaining time: 300000 [ms]

Vertex conflict! Agents 0, 2, timestep 5, location 0
Vertex conflict! Agents 0, 3, timestep 5, location 0
Vertex conflict! Agents 2, 3, timestep 2, location 0
Swapping conflict! Agents 2, 3, timestep 2, edge (0,0)
Vertex conflict! Agents 2, 3, timestep 3, location 0
Swapping conflict! Agents 2, 3, timestep 3, edge (0,0)
Vertex conflict! Agents 2, 3, timestep 4, location 0
Swapping conflict! Agents 2, 3, timestep 4, edge (0,0)
Vertex conflict! Agents 2, 3, timestep 5, location 0
Found plan [agents = 4] [timesteps = 6]
Agent #0 : 12 13 14 9 4 0 
Agent #1 : 21 17 13 14 9 4 
Agent #2 : 5 0 0 0 0 0 
Agent #3 : 6 5 0 0 0 0 

[STAT] Solver returned: 0
[DBG]  Agent (index) 61 | New local path (submap idx):
[DBG]  12 13 14 9 4 
[DBG]  Agent (index) 79 | New local path (submap idx):
[DBG]  21 17 13 14 9 4 
[DBG]  Agent (index) 122 | New local path (submap idx):
[DBG]  5 0 
[DBG]  Agent (index) 132 | New local path (submap idx):
[DBG]  6 5 0 
[DBG]  Update the agent path 61 | Original local length: 5 | New local length: 5
[DBG]  agent 61 t=0 => decoded (sx,sy)=(2,2) => global_id=877
[DBG]  agent 61 t=1 => decoded (sx,sy)=(2,3) => global_id=878
[DBG]  agent 61 t=2 => decoded (sx,sy)=(2,4) => global_id=879
[DBG]  agent 61 t=3 => decoded (sx,sy)=(1,4) => global_id=847
[DBG]  agent 61 t=4 => decoded (sx,sy)=(0,4) => global_id=815
[DBG]  Complete path of agent 61:
[DBG]    Original: 813 813 813 845 877 878 879 847 815 783 784 752 753 721 689 657 625 593 561 529 528 496 464 465 466 467 435 403 404 405 437 438 439 440 408 409 377 345 313 
[DBG]    New:     813 813 813 845 877 878 879 847 815 783 784 752 753 721 689 657 625 593 561 529 528 496 464 465 466 467 435 403 404 405 437 438 439 440 408 409 377 345 313 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 813 813 813 845 
[DBG]    Local path (in submap): 877 878 879 847 815 
[DBG]    Suffix (out of submap): 783 784 752 753 721 689 657 625 593 561 529 528 496 464 465 466 467 435 403 404 405 437 438 439 440 408 409 377 345 313 
[DBG]  Original agent path length 61 je: 39
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 0: 813, 813, 813, 845, 877, 878, 879, 847, 815, 783, 784, 752, 753, 721, 689, 657, 625, 593, 561, 529, 528, 496, 464, 465, 466, 467, 435, 403, 404, 405, 437, 438, 439, 440, 408, 409, 377, 345, 313, 
[DBG]  Path for agent 61 updated, resulting length: 39
[DBG]  Update the agent path 79 | Original local length: 6 | New local length: 6
[DBG]  agent 79 t=0 => decoded (sx,sy)=(4,3) => global_id=942
[DBG]  agent 79 t=1 => decoded (sx,sy)=(3,3) => global_id=910
[DBG]  agent 79 t=2 => decoded (sx,sy)=(2,3) => global_id=878
[DBG]  agent 79 t=3 => decoded (sx,sy)=(2,4) => global_id=879
[DBG]  agent 79 t=4 => decoded (sx,sy)=(1,4) => global_id=847
[DBG]  agent 79 t=5 => decoded (sx,sy)=(0,4) => global_id=815
[DBG]  Complete path of agent 79:
[DBG]    Original: 1004 1005 1006 974 942 910 878 879 847 815 783 784 752 720 688 689 657 658 659 627 628 629 597 565 566 534 502 503 504 472 440 408 409 377 345 313 281 249 217 185 153 154 122 123 
[DBG]    New:     1004 1005 1006 974 942 910 878 879 847 815 783 784 752 720 688 689 657 658 659 627 628 629 597 565 566 534 502 503 504 472 440 408 409 377 345 313 281 249 217 185 153 154 122 123 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 1004 1005 1006 974 
[DBG]    Local path (in submap): 942 910 878 879 847 815 
[DBG]    Suffix (out of submap): 783 784 752 720 688 689 657 658 659 627 628 629 597 565 566 534 502 503 504 472 440 408 409 377 345 313 281 249 217 185 153 154 122 123 
[DBG]  Original agent path length 79 je: 44
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 1: 1004, 1005, 1006, 974, 942, 910, 878, 879, 847, 815, 783, 784, 752, 720, 688, 689, 657, 658, 659, 627, 628, 629, 597, 565, 566, 534, 502, 503, 504, 472, 440, 408, 409, 377, 345, 313, 281, 249, 217, 185, 153, 154, 122, 123, 
[DBG]  Path for agent 79 updated, resulting length: 44
[DBG]  Update the agent path 122 | Original local length: 2 | New local length: 2
[DBG]  agent 122 t=0 => decoded (sx,sy)=(1,0) => global_id=843
[DBG]  agent 122 t=1 => decoded (sx,sy)=(0,0) => global_id=811
[DBG]  Complete path of agent 122:
[DBG]    Original: 909 877 845 844 843 811 810 809 777 776 744 712 680 648 647 615 583 551 519 487 486 454 422 421 389 357 325 293 261 260 228 196 197 
[DBG]    New:     909 877 845 844 843 811 810 809 777 776 744 712 680 648 647 615 583 551 519 487 486 454 422 421 389 357 325 293 261 260 228 196 197 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 909 877 845 844 
[DBG]    Local path (in submap): 843 811 
[DBG]    Suffix (out of submap): 810 809 777 776 744 712 680 648 647 615 583 551 519 487 486 454 422 421 389 357 325 293 261 260 228 196 197 
[DBG]  Original agent path length 122 je: 33
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 2: 909, 877, 845, 844, 843, 811, 810, 809, 777, 776, 744, 712, 680, 648, 647, 615, 583, 551, 519, 487, 486, 454, 422, 421, 389, 357, 325, 293, 261, 260, 228, 196, 197, 
[DBG]  Path for agent 122 updated, resulting length: 33
[DBG]  Update the agent path 132 | Original local length: 3 | New local length: 3
[DBG]  agent 132 t=0 => decoded (sx,sy)=(1,1) => global_id=844
[DBG]  agent 132 t=1 => decoded (sx,sy)=(1,0) => global_id=843
[DBG]  agent 132 t=2 => decoded (sx,sy)=(0,0) => global_id=811
[DBG]  Complete path of agent 132:
[DBG]    Original: 876 876 876 876 844 812 811 779 747 747 715 683 651 619 620 588 556 556 556 555 523 491 490 458 457 425 393 361 329 297 298 266 267 
[DBG]    New:     876 876 876 876 844 843 811 779 747 747 715 683 651 619 620 588 556 556 556 555 523 491 490 458 457 425 393 361 329 297 298 266 267 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 876 876 876 876 
[DBG]    Local path (in submap): 844 843 811 
[DBG]    Suffix (out of submap): 779 747 747 715 683 651 619 620 588 556 556 556 555 523 491 490 458 457 425 393 361 329 297 298 266 267 
[DBG]  Original agent path length 132 je: 33
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 3: 876, 876, 876, 876, 844, 843, 811, 779, 747, 747, 715, 683, 651, 619, 620, 588, 556, 556, 556, 555, 523, 491, 490, 458, 457, 425, 393, 361, 329, 297, 298, 266, 267, 
[DBG]  Path for agent 132 updated, resulting length: 33
[DBG]  Paths successfully updated.
[DBG]  (LNS.cpp) New path for agent 61: 
[DBG]  813, 813, 813, 845, 877, 878, 879, 847, 815, 783, 784, 752, 753, 721, 689, 657, 625, 593, 561, 529, 528, 496, 464, 465, 466, 467, 435, 403, 404, 405, 437, 438, 439, 440, 408, 409, 377, 345, 313, 
[DBG]  (LNS.cpp) New path for agent 79: 
[DBG]  1004, 1005, 1006, 974, 942, 910, 878, 879, 847, 815, 783, 784, 752, 720, 688, 689, 657, 658, 659, 627, 628, 629, 597, 565, 566, 534, 502, 503, 504, 472, 440, 408, 409, 377, 345, 313, 281, 249, 217, 185, 153, 154, 122, 123, 
[DBG]  (LNS.cpp) New path for agent 122: 
[DBG]  909, 877, 845, 844, 843, 811, 810, 809, 777, 776, 744, 712, 680, 648, 647, 615, 583, 551, 519, 487, 486, 454, 422, 421, 389, 357, 325, 293, 261, 260, 228, 196, 197, 
[DBG]  (LNS.cpp) New path for agent 132: 
[DBG]  876, 876, 876, 876, 844, 843, 811, 779, 747, 747, 715, 683, 651, 619, 620, 588, 556, 556, 556, 555, 523, 491, 490, 458, 457, 425, 393, 361, 329, 297, 298, 266, 267, 
[DBG]  component_weights = {0.321614, 0.155408, 0.162518, 0.360461}
[DBG]  opSuccess value: 1
[STAT] neighbor.sum_of_costs before recomputation: 145
[STAT] neighbor.old_sum_of_costs before recomputation: 145
[STAT] sum_of_costs before recomputation: 4417
[DBG]  Validate solution immediately after SAT success.
[DBG]  No problems after SAT replan.
[DBG]  Recomputing sum_of_cost by dividing neighbor.sum_of_costs and neighbor.old_sum_of_costs
[STAT] sum_of_costs after recomputation: 4417
[STAT] Iteration 79
[DBG]  Using SAT operator (destroy+repair SAT).
[DBG]  ====================
[DBG]  SAT destroy operator called.
[DBG]  SAT heuristic: 2
[DBG]  key_agent_id: 109
[DBG]  key_agent_id global path length: 29
[DBG]  Submap content (global positions):
[DBG]  444 445 446 447 -1 
[DBG]  476 477 478 479 -1 
[DBG]  508 509 510 511 -1 
[DBG]  540 541 542 543 -1 
[DBG]  572 573 574 575 -1 
[DBG]  Map content with agents and obstacles:
[DBG]  . A X . X 
[DBG]  . . . . X 
[DBG]  . . A . X 
[DBG]  . . X . X 
[DBG]  . X X X X 
[DBG]  content of the map structure that we pass to the SAT solver:
[DBG]  1  1  -1  1  1  
[DBG]  1  1  1  1  1  
[DBG]  1  1  1  1  1  
[DBG]  1  1  -1  1  1  
[DBG]  1  -1  -1  -1  1  
[DBG]  Identifying agents in a submap for rescheduling (when key_agent is there at the time 24):
[DBG]  Agent 33 found intervals in the sub-map:
[DBG]   [26..28]
[DBG]  Agent 33 is not in sub-map at time 24 (intervals: 
[DBG]  [26..28] )
[DBG]  Agent 91 found intervals in the sub-map:
[DBG]   [20..24]
[DBG]  Agent 91 (interval in submap: [20..24]) contains time 24, added to replan.
[DBG]  Agent 109 found intervals in the sub-map:
[DBG]   [21..27]
[DBG]  Agent 109 (interval in submap: [21..27]) contains time 24, added to replan.
[DBG]  Agent 91 | Start (global): 445 -> (local): (0, 1) at time 24 | Goal (global): 445 -> (local): (0, 1) at time 24
[DBG]  Agent 109 | Start (global): 510 -> (local): (2, 2) at time 24 | Goal (global): 447 -> (local): (0, 3) at time 27
[DBG]  [REPAIR] SAT destroy operator called.
[DBG]  [REPAIR] SAT operator â€“ launching subproblem FOR OPTIMIZATION.
[DBG]  Creating local paths (sx, sy) in the submap for T_sync = 24
[DBG]    Agent 91 (global paths from T=24 to 24) has local path: (0,1) 
[DBG]    Agent 109 (global paths from T=24 to 27) has local path: (2,2) (2,3) (1,3) (0,3) 
[DBG]  Checking input data for SAT solver:
[DBG]    - Number of agents to replan: 2
[DBG]  Agent 91 has the original local path length: 1 => Start (0,1), Goal (0,1)
[DBG]  Agent 109 has the original local path length: 4 => Start (2,2), Goal (0,3)
[DBG]  Start position: (0, 1), (2, 2), 
[DBG]  Goal position: (0, 1), (0, 3), 
[DBG]  SAT instance and solver created.
Currently solving
Instance name: scen
Map name: map
Encoding used: disappear_at_goal
SAT solver used: Kissat
Optimizing function: sum of costs
Number of agents: 2
Mks LB: 4
SoC LB: 5
Delta: 0
Remaining time: 300000 [ms]

Found plan [agents = 2] [timesteps = 4]
Agent #0 : 1 0 0 0 
Agent #1 : 11 12 7 2 

[STAT] Solver returned: 0
[DBG]  Agent (index) 91 | New local path (submap idx):
[DBG]  1 
[DBG]  Agent (index) 109 | New local path (submap idx):
[DBG]  11 12 7 2 
[DBG]  Update the agent path 91 | Original local length: 1 | New local length: 1
[DBG]  agent 91 t=0 => decoded (sx,sy)=(0,1) => global_id=445
[DBG]  Complete path of agent 91:
[DBG]    Original: 787 755 755 755 756 757 725 726 727 728 696 664 632 600 601 602 570 570 571 539 540 541 509 477 445 413 381 
[DBG]    New:     787 755 755 755 756 757 725 726 727 728 696 664 632 600 601 602 570 570 571 539 540 541 509 477 445 413 381 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 787 755 755 755 756 757 725 726 727 728 696 664 632 600 601 602 570 570 571 539 540 541 509 477 
[DBG]    Local path (in submap): 445 
[DBG]    Suffix (out of submap): 413 381 
[DBG]  Original agent path length 91 je: 27
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 0: 787, 755, 755, 755, 756, 757, 725, 726, 727, 728, 696, 664, 632, 600, 601, 602, 570, 570, 571, 539, 540, 541, 509, 477, 445, 413, 381, 
[DBG]  Path for agent 91 updated, resulting length: 27
[DBG]  Update the agent path 109 | Original local length: 4 | New local length: 4
[DBG]  agent 109 t=0 => decoded (sx,sy)=(2,2) => global_id=510
[DBG]  agent 109 t=1 => decoded (sx,sy)=(2,3) => global_id=511
[DBG]  agent 109 t=2 => decoded (sx,sy)=(1,3) => global_id=479
[DBG]  agent 109 t=3 => decoded (sx,sy)=(0,3) => global_id=447
[DBG]  Complete path of agent 109:
[DBG]    Original: 882 850 818 786 787 788 756 724 725 726 727 728 696 664 632 633 601 602 570 571 539 540 541 509 510 511 479 447 415 
[DBG]    New:     882 850 818 786 787 788 756 724 725 726 727 728 696 664 632 633 601 602 570 571 539 540 541 509 510 511 479 447 415 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 882 850 818 786 787 788 756 724 725 726 727 728 696 664 632 633 601 602 570 571 539 540 541 509 
[DBG]    Local path (in submap): 510 511 479 447 
[DBG]    Suffix (out of submap): 415 
[DBG]  Original agent path length 109 je: 29
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 1: 882, 850, 818, 786, 787, 788, 756, 724, 725, 726, 727, 728, 696, 664, 632, 633, 601, 602, 570, 571, 539, 540, 541, 509, 510, 511, 479, 447, 415, 
[DBG]  Path for agent 109 updated, resulting length: 29
[DBG]  Paths successfully updated.
[DBG]  (LNS.cpp) New path for agent 91: 
[DBG]  787, 755, 755, 755, 756, 757, 725, 726, 727, 728, 696, 664, 632, 600, 601, 602, 570, 570, 571, 539, 540, 541, 509, 477, 445, 413, 381, 
[DBG]  (LNS.cpp) New path for agent 109: 
[DBG]  882, 850, 818, 786, 787, 788, 756, 724, 725, 726, 727, 728, 696, 664, 632, 633, 601, 602, 570, 571, 539, 540, 541, 509, 510, 511, 479, 447, 415, 
[DBG]  component_weights = {0.326037, 0.154395, 0.161458, 0.35811}
[DBG]  opSuccess value: 1
[STAT] neighbor.sum_of_costs before recomputation: 54
[STAT] neighbor.old_sum_of_costs before recomputation: 54
[STAT] sum_of_costs before recomputation: 4417
[DBG]  Validate solution immediately after SAT success.
[DBG]  No problems after SAT replan.
[DBG]  Recomputing sum_of_cost by dividing neighbor.sum_of_costs and neighbor.old_sum_of_costs
[STAT] sum_of_costs after recomputation: 4417
[STAT] Iteration 80
[DBG]  Using SAT operator (destroy+repair SAT).
[DBG]  ====================
[DBG]  SAT destroy operator called.
[DBG]  SAT heuristic: 2
[DBG]  key_agent_id: 37
[DBG]  key_agent_id global path length: 16
[DBG]  Submap content (global positions):
[DBG]  807 808 809 810 811 
[DBG]  839 840 841 842 843 
[DBG]  871 872 873 874 875 
[DBG]  903 904 905 906 907 
[DBG]  935 936 937 938 939 
[DBG]  Map content with agents and obstacles:
[DBG]  A A . . A 
[DBG]  . X . X A 
[DBG]  . X A . . 
[DBG]  . A . . X 
[DBG]  . A . X . 
[DBG]  content of the map structure that we pass to the SAT solver:
[DBG]  1  1  1  1  1  
[DBG]  1  -1  1  -1  1  
[DBG]  1  -1  1  1  1  
[DBG]  1  1  1  1  -1  
[DBG]  1  1  1  -1  1  
[DBG]  Identifying agents in a submap for rescheduling (when key_agent is there at the time 5):
[DBG]  Agent 37 found intervals in the sub-map:
[DBG]   [0..8]
[DBG]  Agent 37 (interval in submap: [0..8]) contains time 5, added to replan.
[DBG]  Agent 41 found intervals in the sub-map:
[DBG]   [5..11]
[DBG]  Agent 41 (interval in submap: [5..11]) contains time 5, added to replan.
[DBG]  Agent 68 found intervals in the sub-map:
[DBG]  
[DBG]  Agent 68 is not in sub-map at time 5 (intervals: 
[DBG]  )
[DBG]  Agent 85 found intervals in the sub-map:
[DBG]   [5..13]
[DBG]  Agent 85 (interval in submap: [5..13]) contains time 5, added to replan.
[DBG]  Agent 97 found intervals in the sub-map:
[DBG]   [6..13]
[DBG]  Agent 97 is not in sub-map at time 5 (intervals: 
[DBG]  [6..13] )
[DBG]  Agent 105 found intervals in the sub-map:
[DBG]   [4..6]
[DBG]  Agent 105 (interval in submap: [4..6]) contains time 5, added to replan.
[DBG]  Agent 122 found intervals in the sub-map:
[DBG]   [4..7]
[DBG]  Agent 122 (interval in submap: [4..7]) contains time 5, added to replan.
[DBG]  Agent 132 found intervals in the sub-map:
[DBG]   [5..6]
[DBG]  Agent 132 (interval in submap: [5..6]) contains time 5, added to replan.
[DBG]  Agent 148 found intervals in the sub-map:
[DBG]   [1..8]
[DBG]  Agent 148 (interval in submap: [1..8]) contains time 5, added to replan.
[DBG]  Agent 37 | Start (global): 873 -> (local): (2, 2) at time 5 | Goal (global): 843 -> (local): (1, 4) at time 8
[DBG]  Agent 41 | Start (global): 936 -> (local): (4, 1) at time 5 | Goal (global): 843 -> (local): (1, 4) at time 11
[DBG]  Agent 85 | Start (global): 807 -> (local): (0, 0) at time 5 | Goal (global): 875 -> (local): (2, 4) at time 13
[DBG]  Agent 105 | Start (global): 904 -> (local): (3, 1) at time 5 | Goal (global): 903 -> (local): (3, 0) at time 6
[DBG]  Agent 122 | Start (global): 811 -> (local): (0, 4) at time 5 | Goal (global): 809 -> (local): (0, 2) at time 7
[DBG]  Agent 132 | Start (global): 843 -> (local): (1, 4) at time 5 | Goal (global): 811 -> (local): (0, 4) at time 6
[DBG]  Agent 148 | Start (global): 808 -> (local): (0, 1) at time 5 | Goal (global): 809 -> (local): (0, 2) at time 8
[DBG]  [REPAIR] SAT destroy operator called.
[DBG]  [REPAIR] SAT operator â€“ launching subproblem FOR OPTIMIZATION.
[DBG]  Creating local paths (sx, sy) in the submap for T_sync = 5
[DBG]    Agent 37 (global paths from T=5 to 8) has local path: (2,2) (2,3) (2,4) (1,4) 
[DBG]    Agent 41 (global paths from T=5 to 11) has local path: (4,1) (4,2) (3,2) (2,2) (2,3) (2,4) (1,4) 
[DBG]    Agent 85 (global paths from T=5 to 13) has local path: (0,0) (1,0) (2,0) (3,0) (3,1) (3,2) (3,3) (2,3) (2,4) 
[DBG]    Agent 105 (global paths from T=5 to 6) has local path: (3,1) (3,0) 
[DBG]    Agent 122 (global paths from T=5 to 7) has local path: (0,4) (0,3) (0,2) 
[DBG]    Agent 132 (global paths from T=5 to 6) has local path: (1,4) (0,4) 
[DBG]    Agent 148 (global paths from T=5 to 8) has local path: (0,1) (0,1) (0,1) (0,2) 
[DBG]  Checking input data for SAT solver:
[DBG]    - Number of agents to replan: 7
[DBG]  Agent 37 has the original local path length: 4 => Start (2,2), Goal (1,4)
[DBG]  Agent 41 has the original local path length: 7 => Start (4,1), Goal (1,4)
[DBG]  Agent 85 has the original local path length: 9 => Start (0,0), Goal (2,4)
[DBG]  Agent 105 has the original local path length: 2 => Start (3,1), Goal (3,0)
[DBG]  Agent 122 has the original local path length: 3 => Start (0,4), Goal (0,2)
[DBG]  Agent 132 has the original local path length: 2 => Start (1,4), Goal (0,4)
[DBG]  Agent 148 has the original local path length: 4 => Start (0,1), Goal (0,2)
[DBG]  Start position: (2, 2), (4, 1), (0, 0), (3, 1), (0, 4), (1, 4), (0, 1), 
[DBG]  Goal position: (1, 4), (1, 4), (2, 4), (3, 0), (0, 2), (0, 4), (0, 2), 
[DBG]  SAT instance and solver created.
Currently solving
Instance name: scen
Map name: map
Encoding used: disappear_at_goal
SAT solver used: Kissat
Optimizing function: sum of costs
Number of agents: 7
Mks LB: 7
SoC LB: 27
Delta: 0
Remaining time: 300000 [ms]

[STAT] Solver returned: -1
[DBG]  SAT solver failed.
[STAT] SAT solver failed to find a valid solution.
[DBG]  ====================
[DBG]  SAT destroy operator called.
[DBG]  SAT heuristic: 2
[DBG]  key_agent_id: 37
[DBG]  key_agent_id global path length: 16
[DBG]  Submap content (global positions):
[DBG]  837 838 839 840 841 
[DBG]  869 870 871 872 873 
[DBG]  901 902 903 904 905 
[DBG]  933 934 935 936 937 
[DBG]  965 966 967 968 969 
[DBG]  Map content with agents and obstacles:
[DBG]  A . . X . 
[DBG]  X . . X . 
[DBG]  . . A . . 
[DBG]  X . . . . 
[DBG]  . X X . X 
[DBG]  content of the map structure that we pass to the SAT solver:
[DBG]  1  1  1  -1  1  
[DBG]  -1  1  1  -1  1  
[DBG]  1  1  1  1  1  
[DBG]  -1  1  1  1  1  
[DBG]  1  -1  -1  1  -1  
[DBG]  Identifying agents in a submap for rescheduling (when key_agent is there at the time 2):
[DBG]  Agent 32 found intervals in the sub-map:
[DBG]   [2..4]
[DBG]  Agent 32 (interval in submap: [2..4]) contains time 2, added to replan.
[DBG]  Agent 37 found intervals in the sub-map:
[DBG]   [0..5]
[DBG]  Agent 37 (interval in submap: [0..5]) contains time 2, added to replan.
[DBG]  Agent 68 found intervals in the sub-map:
[DBG]   [0..0]
[DBG]  Agent 68 is not in sub-map at time 2 (intervals: 
[DBG]  [0..0] )
[DBG]  Agent 32 | Start (global): 837 -> (local): (0, 0) at time 2 | Goal (global): 837 -> (local): (0, 0) at time 4
[DBG]  Agent 37 | Start (global): 903 -> (local): (2, 2) at time 2 | Goal (global): 873 -> (local): (1, 4) at time 5
[DBG]  [REPAIR] SAT destroy operator called.
[DBG]  [REPAIR] SAT operator â€“ launching subproblem FOR OPTIMIZATION.
[DBG]  Creating local paths (sx, sy) in the submap for T_sync = 2
[DBG]    Agent 32 (global paths from T=2 to 4) has local path: (0,0) (0,0) (0,0) 
[DBG]    Agent 37 (global paths from T=2 to 5) has local path: (2,2) (2,3) (2,4) (1,4) 
[DBG]  Checking input data for SAT solver:
[DBG]    - Number of agents to replan: 2
[DBG]  Agent 32 has the original local path length: 3 => Start (0,0), Goal (0,0)
[DBG]  Agent 37 has the original local path length: 4 => Start (2,2), Goal (1,4)
[DBG]  Start position: (0, 0), (2, 2), 
[DBG]  Goal position: (0, 0), (1, 4), 
[DBG]  SAT instance and solver created.
Currently solving
Instance name: scen
Map name: map
Encoding used: disappear_at_goal
SAT solver used: Kissat
Optimizing function: sum of costs
Number of agents: 2
Mks LB: 4
SoC LB: 5
Delta: 0
Remaining time: 300000 [ms]

Found plan [agents = 2] [timesteps = 4]
Agent #0 : 0 0 0 0 
Agent #1 : 9 10 11 6 

[STAT] Solver returned: 0
[DBG]  Agent (index) 32 | New local path (submap idx):
[DBG]  0 
[DBG]  Agent (index) 37 | New local path (submap idx):
[DBG]  9 10 11 6 
[DBG]  Update the agent path 32 | Original local length: 3 | New local length: 1
[DBG]  agent 32 t=0 => decoded (sx,sy)=(0,0) => global_id=837
[DBG]  Complete path of agent 32:
[DBG]    Original: 868 836 837 837 837 805 805 805 773 774 775 776 744 
[DBG]    New:     868 836 837 805 805 805 773 774 775 776 744 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 868 836 
[DBG]    Local path (in submap): 837 805 805 
[DBG]    Suffix (out of submap): 805 773 774 775 776 744 
[DBG]  Original agent path length 32 je: 13
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 0: 868, 836, 837, 805, 805, 805, 773, 774, 775, 776, 744, 
[DBG]  Path for agent 32 updated, resulting length: 11
[DBG]  Update the agent path 37 | Original local length: 4 | New local length: 4
[DBG]  agent 37 t=0 => decoded (sx,sy)=(2,2) => global_id=903
[DBG]  agent 37 t=1 => decoded (sx,sy)=(2,3) => global_id=904
[DBG]  agent 37 t=2 => decoded (sx,sy)=(2,4) => global_id=905
[DBG]  agent 37 t=3 => decoded (sx,sy)=(1,4) => global_id=873
[DBG]  Complete path of agent 37:
[DBG]    Original: 839 871 903 904 905 873 874 875 843 844 844 845 813 814 814 782 
[DBG]    New:     839 871 903 904 905 873 874 875 843 844 844 845 813 814 814 782 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 839 871 
[DBG]    Local path (in submap): 903 904 905 873 
[DBG]    Suffix (out of submap): 874 875 843 844 844 845 813 814 814 782 
[DBG]  Original agent path length 37 je: 16
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 1: 839, 871, 903, 904, 905, 873, 874, 875, 843, 844, 844, 845, 813, 814, 814, 782, 
[DBG]  Path for agent 37 updated, resulting length: 16
[DBG]  Paths successfully updated.
[DBG]  (LNS.cpp) New path for agent 32: 
[DBG]  868, 836, 837, 805, 805, 805, 773, 774, 775, 776, 744, 
[DBG]  (LNS.cpp) New path for agent 37: 
[DBG]  839, 871, 903, 904, 905, 873, 874, 875, 843, 844, 844, 845, 813, 814, 814, 782, 
[DBG]  component_weights = {0.323585, 0.153233, 0.160244, 0.362938}
[DBG]  opSuccess value: 1
[STAT] neighbor.sum_of_costs before recomputation: 25
[STAT] neighbor.old_sum_of_costs before recomputation: 27
[STAT] sum_of_costs before recomputation: 4417
[DBG]  Validate solution immediately after SAT success.
[WARNING] Problem after SAT: Vertex conflict between agents 32 and 13 at location 805 at timestep 4
[DBG]  Attempting immediate repair via init_lns because problem occurred after SAT (should be applied only for conflicts...).
[DBG]  Passing 150 agents to init_lns (skip=true).
[DBG]  path_table contents for selected agents (neighbor.agents):
[DBG]    Agent 32 => controlling path length=11
[DBG]    Agent 37 => controlling path length=16
[DBG]  hodnota skip_initial_solution=1
[DBG]  We skip initialSolution => call buildCollisionData()
[DBG]  buildCollisionData() called â€“ skip_initial_solution case.
[DBG]  Agents.size()=150, collision_graph.size()=150
[DBG]  agent 13 => updateCollidingPairs => foundCollision
[DBG]  agent 32 => updateCollidingPairs => foundCollision
[DBG]  agent 122 => updateCollidingPairs => foundCollision
[DBG]  agent 140 => updateCollidingPairs => foundCollision
[DBG]  Conflicting agent pairs:
[DBG]  agent 13 is in conflict with agent 32
[DBG]  agent 32 is in conflict with agent 122
[DBG]  agent 32 is in conflict with agent 140
[DBG]  buildCollisionData() => sum_of_costs=4415, num_of_colliding_pairs=3
[DBG]  buildCollisionData done => sum_of_costs=4415, num_of_colliding_pairs=3
[DBG]  sum_of_cost hodnota: 4415
[DBG]  After skip/init build => iteration_stats.back(): sum_of_costs=4415, collisions=3
[DEBUG] Using default neighbor generation strategy for conflicts: 0
[DEBUG] Using default neighbor generation strategy for conflicts: 0
[DEBUG] Using default neighbor generation strategy for conflicts: 2
	InitLNS(PP): runtime = 0.00940563, iterations = 4, colliding pairs = 0, initial colliding pairs = 3, solution cost = 4411, initial solution cost = 4415, failed iterations = 0
[DBG]  init_lns->sum_of_costs after init_lns->run: 4411
[DBG]  sum_of_costs after assignment from init_lns->run: 4411
[DBG]  Recomputing sum_of_cost by dividing neighbor.sum_of_costs and neighbor.old_sum_of_costs
[STAT] sum_of_costs after recomputation: 4411
[STAT] Iteration 81
[DBG]  Using SAT operator (destroy+repair SAT).
[DBG]  ====================
[DBG]  SAT destroy operator called.
[DBG]  SAT heuristic: 2
[DBG]  key_agent_id: 116
[DBG]  key_agent_id global path length: 45
[DBG]  Submap content (global positions):
[DBG]  357 358 359 360 361 
[DBG]  389 390 391 392 393 
[DBG]  421 422 423 424 425 
[DBG]  453 454 455 456 457 
[DBG]  485 486 487 488 489 
[DBG]  Map content with agents and obstacles:
[DBG]  . . . . . 
[DBG]  . . A X . 
[DBG]  . . A . . 
[DBG]  X . . . . 
[DBG]  . . . X . 
[DBG]  content of the map structure that we pass to the SAT solver:
[DBG]  1  1  1  1  1  
[DBG]  1  1  1  -1  1  
[DBG]  1  1  1  1  1  
[DBG]  -1  1  1  1  1  
[DBG]  1  1  1  -1  1  
[DBG]  Identifying agents in a submap for rescheduling (when key_agent is there at the time 31):
[DBG]  Agent 101 found intervals in the sub-map:
[DBG]   [35..40]
[DBG]  Agent 101 is not in sub-map at time 31 (intervals: 
[DBG]  [35..40] )
[DBG]  Agent 112 found intervals in the sub-map:
[DBG]   [11..19]
[DBG]  Agent 112 is not in sub-map at time 31 (intervals: 
[DBG]  [11..19] )
[DBG]  Agent 116 found intervals in the sub-map:
[DBG]   [24..24] [27..34]
[DBG]  Agent 116 (interval in submap: [27..34]) contains time 31, added to replan.
[DBG]  Agent 118 found intervals in the sub-map:
[DBG]   [28..33]
[DBG]  Agent 118 (interval in submap: [28..33]) contains time 31, added to replan.
[DBG]  Agent 135 found intervals in the sub-map:
[DBG]  
[DBG]  Agent 135 is not in sub-map at time 31 (intervals: 
[DBG]  )
[DBG]  Agent 116 | Start (global): 423 -> (local): (2, 2) at time 31 | Goal (global): 360 -> (local): (0, 3) at time 34
[DBG]  Agent 118 | Start (global): 391 -> (local): (1, 2) at time 31 | Goal (global): 389 -> (local): (1, 0) at time 33
[DBG]  [REPAIR] SAT destroy operator called.
[DBG]  [REPAIR] SAT operator â€“ launching subproblem FOR OPTIMIZATION.
[DBG]  Creating local paths (sx, sy) in the submap for T_sync = 31
[DBG]    Agent 116 (global paths from T=31 to 34) has local path: (2,2) (1,2) (0,2) (0,3) 
[DBG]    Agent 118 (global paths from T=31 to 33) has local path: (1,2) (1,1) (1,0) 
[DBG]  Checking input data for SAT solver:
[DBG]    - Number of agents to replan: 2
[DBG]  Agent 116 has the original local path length: 4 => Start (2,2), Goal (0,3)
[DBG]  Agent 118 has the original local path length: 3 => Start (1,2), Goal (1,0)
[DBG]  Start position: (2, 2), (1, 2), 
[DBG]  Goal position: (0, 3), (1, 0), 
[DBG]  SAT instance and solver created.
Currently solving
Instance name: scen
Map name: map
Encoding used: disappear_at_goal
SAT solver used: Kissat
Optimizing function: sum of costs
Number of agents: 2
Mks LB: 4
SoC LB: 7
Delta: 0
Remaining time: 300000 [ms]

Found plan [agents = 2] [timesteps = 4]
Agent #0 : 11 7 2 3 
Agent #1 : 7 6 5 0 

[STAT] Solver returned: 0
[DBG]  Agent (index) 116 | New local path (submap idx):
[DBG]  11 7 2 3 
[DBG]  Agent (index) 118 | New local path (submap idx):
[DBG]  7 6 5 
[DBG]  Update the agent path 116 | Original local length: 4 | New local length: 4
[DBG]  agent 116 t=0 => decoded (sx,sy)=(2,2) => global_id=423
[DBG]  agent 116 t=1 => decoded (sx,sy)=(1,2) => global_id=391
[DBG]  agent 116 t=2 => decoded (sx,sy)=(0,2) => global_id=359
[DBG]  agent 116 t=3 => decoded (sx,sy)=(0,3) => global_id=360
[DBG]  Complete path of agent 116:
[DBG]    Original: 549 549 549 581 581 581 581 581 581 613 581 581 581 580 580 580 580 580 581 582 550 550 549 517 485 484 484 485 486 454 455 423 391 359 360 328 296 264 232 200 168 136 104 105 137 
[DBG]    New:     549 549 549 581 581 581 581 581 581 613 581 581 581 580 580 580 580 580 581 582 550 550 549 517 485 484 484 485 486 454 455 423 391 359 360 328 296 264 232 200 168 136 104 105 137 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 549 549 549 581 581 581 581 581 581 613 581 581 581 580 580 580 580 580 581 582 550 550 549 517 485 484 484 485 486 454 455 
[DBG]    Local path (in submap): 423 391 359 360 
[DBG]    Suffix (out of submap): 328 296 264 232 200 168 136 104 105 137 
[DBG]  Original agent path length 116 je: 45
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 0: 549, 549, 549, 581, 581, 581, 581, 581, 581, 613, 581, 581, 581, 580, 580, 580, 580, 580, 581, 582, 550, 550, 549, 517, 485, 484, 484, 485, 486, 454, 455, 423, 391, 359, 360, 328, 296, 264, 232, 200, 168, 136, 104, 105, 137, 
[DBG]  Path for agent 116 updated, resulting length: 45
[DBG]  Update the agent path 118 | Original local length: 3 | New local length: 3
[DBG]  agent 118 t=0 => decoded (sx,sy)=(1,2) => global_id=391
[DBG]  agent 118 t=1 => decoded (sx,sy)=(1,1) => global_id=390
[DBG]  agent 118 t=2 => decoded (sx,sy)=(1,0) => global_id=389
[DBG]  Complete path of agent 118:
[DBG]    Original: 887 886 885 884 883 882 850 849 848 847 815 783 751 719 718 686 654 622 590 589 588 556 524 492 460 428 427 426 425 424 423 391 390 389 388 356 324 323 291 259 227 
[DBG]    New:     887 886 885 884 883 882 850 849 848 847 815 783 751 719 718 686 654 622 590 589 588 556 524 492 460 428 427 426 425 424 423 391 390 389 388 356 324 323 291 259 227 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 887 886 885 884 883 882 850 849 848 847 815 783 751 719 718 686 654 622 590 589 588 556 524 492 460 428 427 426 425 424 423 
[DBG]    Local path (in submap): 391 390 389 
[DBG]    Suffix (out of submap): 388 356 324 323 291 259 227 
[DBG]  Original agent path length 118 je: 41
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 1: 887, 886, 885, 884, 883, 882, 850, 849, 848, 847, 815, 783, 751, 719, 718, 686, 654, 622, 590, 589, 588, 556, 524, 492, 460, 428, 427, 426, 425, 424, 423, 391, 390, 389, 388, 356, 324, 323, 291, 259, 227, 
[DBG]  Path for agent 118 updated, resulting length: 41
[DBG]  Paths successfully updated.
[DBG]  (LNS.cpp) New path for agent 116: 
[DBG]  549, 549, 549, 581, 581, 581, 581, 581, 581, 613, 581, 581, 581, 580, 580, 580, 580, 580, 581, 582, 550, 550, 549, 517, 485, 484, 484, 485, 486, 454, 455, 423, 391, 359, 360, 328, 296, 264, 232, 200, 168, 136, 104, 105, 137, 
[DBG]  (LNS.cpp) New path for agent 118: 
[DBG]  887, 886, 885, 884, 883, 882, 850, 849, 848, 847, 815, 783, 751, 719, 718, 686, 654, 622, 590, 589, 588, 556, 524, 492, 460, 428, 427, 426, 425, 424, 423, 391, 390, 389, 388, 356, 324, 323, 291, 259, 227, 
[DBG]  component_weights = {0.328022, 0.152228, 0.159192, 0.360557}
[DBG]  opSuccess value: 1
[STAT] neighbor.sum_of_costs before recomputation: 84
[STAT] neighbor.old_sum_of_costs before recomputation: 84
[STAT] sum_of_costs before recomputation: 4411
[DBG]  Validate solution immediately after SAT success.
[DBG]  No problems after SAT replan.
[DBG]  Recomputing sum_of_cost by dividing neighbor.sum_of_costs and neighbor.old_sum_of_costs
[STAT] sum_of_costs after recomputation: 4411
[STAT] Iteration 82
[DBG]  Using SAT operator (destroy+repair SAT).
[DBG]  ====================
[DBG]  SAT destroy operator called.
[DBG]  SAT heuristic: 2
[DBG]  key_agent_id: 34
[DBG]  key_agent_id global path length: 27
[DBG]  Submap content (global positions):
[DBG]  53 54 55 56 57 
[DBG]  85 86 87 88 89 
[DBG]  117 118 119 120 121 
[DBG]  149 150 151 152 153 
[DBG]  181 182 183 184 185 
[DBG]  Map content with agents and obstacles:
[DBG]  X A . . X 
[DBG]  . . X X . 
[DBG]  . . A A A 
[DBG]  . . . X . 
[DBG]  . X . . . 
[DBG]  content of the map structure that we pass to the SAT solver:
[DBG]  -1  1  1  1  -1  
[DBG]  1  1  -1  -1  1  
[DBG]  1  1  1  1  1  
[DBG]  1  1  1  -1  1  
[DBG]  1  -1  1  1  1  
[DBG]  Identifying agents in a submap for rescheduling (when key_agent is there at the time 10):
[DBG]  Agent 34 found intervals in the sub-map:
[DBG]   [7..13]
[DBG]  Agent 34 (interval in submap: [7..13]) contains time 10, added to replan.
[DBG]  Agent 126 found intervals in the sub-map:
[DBG]   [8..12]
[DBG]  Agent 126 (interval in submap: [8..12]) contains time 10, added to replan.
[DBG]  Agent 139 found intervals in the sub-map:
[DBG]   [9..14]
[DBG]  Agent 139 (interval in submap: [9..14]) contains time 10, added to replan.
[DBG]  Agent 147 found intervals in the sub-map:
[DBG]   [10..16]
[DBG]  Agent 147 (interval in submap: [10..16]) contains time 10, added to replan.
[DBG]  Agent 34 | Start (global): 119 -> (local): (2, 2) at time 10 | Goal (global): 149 -> (local): (3, 0) at time 13
[DBG]  Agent 126 | Start (global): 54 -> (local): (0, 1) at time 10 | Goal (global): 56 -> (local): (0, 3) at time 12
[DBG]  Agent 139 | Start (global): 120 -> (local): (2, 3) at time 10 | Goal (global): 85 -> (local): (1, 0) at time 14
[DBG]  Agent 147 | Start (global): 121 -> (local): (2, 4) at time 10 | Goal (global): 181 -> (local): (4, 0) at time 16
[DBG]  [REPAIR] SAT destroy operator called.
[DBG]  [REPAIR] SAT operator â€“ launching subproblem FOR OPTIMIZATION.
[DBG]  Creating local paths (sx, sy) in the submap for T_sync = 10
[DBG]    Agent 34 (global paths from T=10 to 13) has local path: (2,2) (3,2) (3,1) (3,0) 
[DBG]    Agent 126 (global paths from T=10 to 12) has local path: (0,1) (0,2) (0,3) 
[DBG]    Agent 139 (global paths from T=10 to 14) has local path: (2,3) (2,2) (2,1) (2,0) (1,0) 
[DBG]    Agent 147 (global paths from T=10 to 16) has local path: (2,4) (2,3) (2,2) (3,2) (3,1) (3,0) (4,0) 
[DBG]  Checking input data for SAT solver:
[DBG]    - Number of agents to replan: 4
[DBG]  Agent 34 has the original local path length: 4 => Start (2,2), Goal (3,0)
[DBG]  Agent 126 has the original local path length: 3 => Start (0,1), Goal (0,3)
[DBG]  Agent 139 has the original local path length: 5 => Start (2,3), Goal (1,0)
[DBG]  Agent 147 has the original local path length: 7 => Start (2,4), Goal (4,0)
[DBG]  Start position: (2, 2), (0, 1), (2, 3), (2, 4), 
[DBG]  Goal position: (3, 0), (0, 3), (1, 0), (4, 0), 
[DBG]  SAT instance and solver created.
Currently solving
Instance name: scen
Map name: map
Encoding used: disappear_at_goal
SAT solver used: Kissat
Optimizing function: sum of costs
Number of agents: 4
Mks LB: 7
SoC LB: 19
Delta: 0
Remaining time: 300000 [ms]

Vertex conflict! Agents 0, 1, timestep 4, location 0
Swapping conflict! Agents 0, 1, timestep 4, edge (0,0)
Vertex conflict! Agents 0, 1, timestep 5, location 0
Swapping conflict! Agents 0, 1, timestep 5, edge (0,0)
Vertex conflict! Agents 0, 1, timestep 6, location 0
Vertex conflict! Agents 0, 2, timestep 5, location 0
Swapping conflict! Agents 0, 2, timestep 5, edge (0,0)
Vertex conflict! Agents 0, 2, timestep 6, location 0
Vertex conflict! Agents 1, 2, timestep 5, location 0
Swapping conflict! Agents 1, 2, timestep 5, edge (0,0)
Vertex conflict! Agents 1, 2, timestep 6, location 0
Found plan [agents = 4] [timesteps = 7]
Agent #0 : 8 13 12 11 0 0 0 
Agent #1 : 0 1 2 0 0 0 0 
Agent #2 : 9 8 7 6 3 0 0 
Agent #3 : 10 9 8 13 12 11 15 

[STAT] Solver returned: 0
[DBG]  Agent (index) 34 | New local path (submap idx):
[DBG]  8 13 12 11 
[DBG]  Agent (index) 126 | New local path (submap idx):
[DBG]  0 1 2 
[DBG]  Agent (index) 139 | New local path (submap idx):
[DBG]  9 8 7 6 3 
[DBG]  Agent (index) 147 | New local path (submap idx):
[DBG]  10 9 8 13 12 11 15 
[DBG]  Update the agent path 34 | Original local length: 4 | New local length: 4
[DBG]  agent 34 t=0 => decoded (sx,sy)=(2,2) => global_id=119
[DBG]  agent 34 t=1 => decoded (sx,sy)=(3,2) => global_id=151
[DBG]  agent 34 t=2 => decoded (sx,sy)=(3,1) => global_id=150
[DBG]  agent 34 t=3 => decoded (sx,sy)=(3,0) => global_id=149
[DBG]  Complete path of agent 34:
[DBG]    Original: 63 62 61 60 59 58 90 89 121 120 119 151 150 149 148 147 146 178 210 209 208 207 206 205 237 269 301 
[DBG]    New:     63 62 61 60 59 58 90 89 121 120 119 151 150 149 148 147 146 178 210 209 208 207 206 205 237 269 301 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 63 62 61 60 59 58 90 89 121 120 
[DBG]    Local path (in submap): 119 151 150 149 
[DBG]    Suffix (out of submap): 148 147 146 178 210 209 208 207 206 205 237 269 301 
[DBG]  Original agent path length 34 je: 27
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 0: 63, 62, 61, 60, 59, 58, 90, 89, 121, 120, 119, 151, 150, 149, 148, 147, 146, 178, 210, 209, 208, 207, 206, 205, 237, 269, 301, 
[DBG]  Path for agent 34 updated, resulting length: 27
[DBG]  Update the agent path 126 | Original local length: 3 | New local length: 3
[DBG]  agent 126 t=0 => decoded (sx,sy)=(0,1) => global_id=54
[DBG]  agent 126 t=1 => decoded (sx,sy)=(0,2) => global_id=55
[DBG]  agent 126 t=2 => decoded (sx,sy)=(0,3) => global_id=56
[DBG]  Complete path of agent 126:
[DBG]    Original: 15 47 48 49 50 82 83 84 85 86 54 55 56 24 25 26 27 28 29 
[DBG]    New:     15 47 48 49 50 82 83 84 85 86 54 55 56 24 25 26 27 28 29 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 15 47 48 49 50 82 83 84 85 86 
[DBG]    Local path (in submap): 54 55 56 
[DBG]    Suffix (out of submap): 24 25 26 27 28 29 
[DBG]  Original agent path length 126 je: 19
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 1: 15, 47, 48, 49, 50, 82, 83, 84, 85, 86, 54, 55, 56, 24, 25, 26, 27, 28, 29, 
[DBG]  Path for agent 126 updated, resulting length: 19
[DBG]  Update the agent path 139 | Original local length: 5 | New local length: 5
[DBG]  agent 139 t=0 => decoded (sx,sy)=(2,3) => global_id=120
[DBG]  agent 139 t=1 => decoded (sx,sy)=(2,2) => global_id=119
[DBG]  agent 139 t=2 => decoded (sx,sy)=(2,1) => global_id=118
[DBG]  agent 139 t=3 => decoded (sx,sy)=(2,0) => global_id=117
[DBG]  agent 139 t=4 => decoded (sx,sy)=(1,0) => global_id=85
[DBG]  Complete path of agent 139:
[DBG]    Original: 285 284 252 220 188 156 124 123 122 121 120 119 118 117 85 84 83 82 81 80 79 47 46 45 44 43 42 41 9 8 7 6 5 4 3 
[DBG]    New:     285 284 252 220 188 156 124 123 122 121 120 119 118 117 85 84 83 82 81 80 79 47 46 45 44 43 42 41 9 8 7 6 5 4 3 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 285 284 252 220 188 156 124 123 122 121 
[DBG]    Local path (in submap): 120 119 118 117 85 
[DBG]    Suffix (out of submap): 84 83 82 81 80 79 47 46 45 44 43 42 41 9 8 7 6 5 4 3 
[DBG]  Original agent path length 139 je: 35
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 2: 285, 284, 252, 220, 188, 156, 124, 123, 122, 121, 120, 119, 118, 117, 85, 84, 83, 82, 81, 80, 79, 47, 46, 45, 44, 43, 42, 41, 9, 8, 7, 6, 5, 4, 3, 
[DBG]  Path for agent 139 updated, resulting length: 35
[DBG]  Update the agent path 147 | Original local length: 7 | New local length: 7
[DBG]  agent 147 t=0 => decoded (sx,sy)=(2,4) => global_id=121
[DBG]  agent 147 t=1 => decoded (sx,sy)=(2,3) => global_id=120
[DBG]  agent 147 t=2 => decoded (sx,sy)=(2,2) => global_id=119
[DBG]  agent 147 t=3 => decoded (sx,sy)=(3,2) => global_id=151
[DBG]  agent 147 t=4 => decoded (sx,sy)=(3,1) => global_id=150
[DBG]  agent 147 t=5 => decoded (sx,sy)=(3,0) => global_id=149
[DBG]  agent 147 t=6 => decoded (sx,sy)=(4,0) => global_id=181
[DBG]  Complete path of agent 147:
[DBG]    Original: 284 252 220 188 156 124 123 122 90 122 121 120 119 151 150 149 181 180 179 178 210 209 209 208 207 206 205 237 236 235 234 233 265 264 263 295 294 326 
[DBG]    New:     284 252 220 188 156 124 123 122 90 122 121 120 119 151 150 149 181 180 179 178 210 209 209 208 207 206 205 237 236 235 234 233 265 264 263 295 294 326 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 284 252 220 188 156 124 123 122 90 122 
[DBG]    Local path (in submap): 121 120 119 151 150 149 181 
[DBG]    Suffix (out of submap): 180 179 178 210 209 209 208 207 206 205 237 236 235 234 233 265 264 263 295 294 326 
[DBG]  Original agent path length 147 je: 38
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 3: 284, 252, 220, 188, 156, 124, 123, 122, 90, 122, 121, 120, 119, 151, 150, 149, 181, 180, 179, 178, 210, 209, 209, 208, 207, 206, 205, 237, 236, 235, 234, 233, 265, 264, 263, 295, 294, 326, 
[DBG]  Path for agent 147 updated, resulting length: 38
[DBG]  Paths successfully updated.
[DBG]  (LNS.cpp) New path for agent 34: 
[DBG]  63, 62, 61, 60, 59, 58, 90, 89, 121, 120, 119, 151, 150, 149, 148, 147, 146, 178, 210, 209, 208, 207, 206, 205, 237, 269, 301, 
[DBG]  (LNS.cpp) New path for agent 126: 
[DBG]  15, 47, 48, 49, 50, 82, 83, 84, 85, 86, 54, 55, 56, 24, 25, 26, 27, 28, 29, 
[DBG]  (LNS.cpp) New path for agent 139: 
[DBG]  285, 284, 252, 220, 188, 156, 124, 123, 122, 121, 120, 119, 118, 117, 85, 84, 83, 82, 81, 80, 79, 47, 46, 45, 44, 43, 42, 41, 9, 8, 7, 6, 5, 4, 3, 
[DBG]  (LNS.cpp) New path for agent 147: 
[DBG]  284, 252, 220, 188, 156, 124, 123, 122, 90, 122, 121, 120, 119, 151, 150, 149, 181, 180, 179, 178, 210, 209, 209, 208, 207, 206, 205, 237, 236, 235, 234, 233, 265, 264, 263, 295, 294, 326, 
[DBG]  component_weights = {0.332491, 0.151216, 0.158134, 0.35816}
[DBG]  opSuccess value: 1
[STAT] neighbor.sum_of_costs before recomputation: 115
[STAT] neighbor.old_sum_of_costs before recomputation: 115
[STAT] sum_of_costs before recomputation: 4411
[DBG]  Validate solution immediately after SAT success.
[DBG]  No problems after SAT replan.
[DBG]  Recomputing sum_of_cost by dividing neighbor.sum_of_costs and neighbor.old_sum_of_costs
[STAT] sum_of_costs after recomputation: 4411
[STAT] Iteration 83
[DBG]  Using SAT operator (destroy+repair SAT).
[DBG]  ====================
[DBG]  SAT destroy operator called.
[DBG]  SAT heuristic: 2
[DBG]  key_agent_id: 26
[DBG]  key_agent_id global path length: 38
[DBG]  Submap content (global positions):
[DBG]  107 108 109 110 111 
[DBG]  139 140 141 142 143 
[DBG]  171 172 173 174 175 
[DBG]  203 204 205 206 207 
[DBG]  235 236 237 238 239 
[DBG]  Map content with agents and obstacles:
[DBG]  . . A A . 
[DBG]  A . . X X 
[DBG]  X A A X X 
[DBG]  A . . . . 
[DBG]  . . . . A 
[DBG]  content of the map structure that we pass to the SAT solver:
[DBG]  1  1  1  1  1  
[DBG]  1  1  1  -1  -1  
[DBG]  -1  1  1  -1  -1  
[DBG]  1  1  1  1  1  
[DBG]  1  1  1  1  1  
[DBG]  Identifying agents in a submap for rescheduling (when key_agent is there at the time 5):
[DBG]  Agent 20 found intervals in the sub-map:
[DBG]   [3..4]
[DBG]  Agent 20 is not in sub-map at time 5 (intervals: 
[DBG]  [3..4] )
[DBG]  Agent 26 found intervals in the sub-map:
[DBG]   [3..9]
[DBG]  Agent 26 (interval in submap: [3..9]) contains time 5, added to replan.
[DBG]  Agent 66 found intervals in the sub-map:
[DBG]   [5..10]
[DBG]  Agent 66 (interval in submap: [5..10]) contains time 5, added to replan.
[DBG]  Agent 72 found intervals in the sub-map:
[DBG]   [3..5]
[DBG]  Agent 72 (interval in submap: [3..5]) contains time 5, added to replan.
[DBG]  Agent 80 found intervals in the sub-map:
[DBG]   [0..8]
[DBG]  Agent 80 (interval in submap: [0..8]) contains time 5, added to replan.
[DBG]  Agent 82 found intervals in the sub-map:
[DBG]   [10..15]
[DBG]  Agent 82 is not in sub-map at time 5 (intervals: 
[DBG]  [10..15] )
[DBG]  Agent 106 found intervals in the sub-map:
[DBG]   [5..5]
[DBG]  Agent 106 (interval in submap: [5..5]) contains time 5, added to replan.
[DBG]  Agent 107 found intervals in the sub-map:
[DBG]   [4..11]
[DBG]  Agent 107 (interval in submap: [4..11]) contains time 5, added to replan.
[DBG]  Agent 120 found intervals in the sub-map:
[DBG]   [0..36]
[DBG]  Agent 120 (interval in submap: [0..36]) contains time 5, added to replan.
[DBG]  Agent 145 found intervals in the sub-map:
[DBG]  
[DBG]  Agent 145 is not in sub-map at time 5 (intervals: 
[DBG]  )
[DBG]  Agent 26 | Start (global): 173 -> (local): (2, 2) at time 5 | Goal (global): 237 -> (local): (4, 2) at time 9
[DBG]  Agent 66 | Start (global): 139 -> (local): (1, 0) at time 5 | Goal (global): 111 -> (local): (0, 4) at time 10
[DBG]  Agent 72 | Start (global): 109 -> (local): (0, 2) at time 5 | Goal (global): 109 -> (local): (0, 2) at time 5
[DBG]  Agent 80 | Start (global): 172 -> (local): (2, 1) at time 5 | Goal (global): 235 -> (local): (4, 0) at time 8
[DBG]  Agent 106 | Start (global): 239 -> (local): (4, 4) at time 5 | Goal (global): 239 -> (local): (4, 4) at time 5
[DBG]  Agent 107 | Start (global): 110 -> (local): (0, 3) at time 5 | Goal (global): 236 -> (local): (4, 1) at time 11
[DBG]  Agent 120 | Start (global): 203 -> (local): (3, 0) at time 5 | Goal (global): 109 -> (local): (0, 2) at time 36
[DBG]  [REPAIR] SAT destroy operator called.
[DBG]  [REPAIR] SAT operator â€“ launching subproblem FOR OPTIMIZATION.
[DBG]  Creating local paths (sx, sy) in the submap for T_sync = 5
[DBG]    Agent 26 (global paths from T=5 to 9) has local path: (2,2) (3,2) (4,2) (4,2) (4,2) 
[DBG]    Agent 66 (global paths from T=5 to 10) has local path: (1,0) (1,1) (0,1) (0,2) (0,3) (0,4) 
[DBG]    Agent 72 (global paths from T=5 to 5) has local path: (0,2) 
[DBG]    Agent 80 (global paths from T=5 to 8) has local path: (2,1) (3,1) (4,1) (4,0) 
[DBG]    Agent 106 (global paths from T=5 to 5) has local path: (4,4) 
[DBG]    Agent 107 (global paths from T=5 to 11) has local path: (0,3) (0,2) (1,2) (1,1) (2,1) (3,1) (4,1) 
[DBG]    Agent 120 (global paths from T=5 to 36) has local path: (3,0) (3,0) (3,0) (3,0) (3,0) (3,0) (3,0) (3,0) (3,0) (3,0) (3,0) (3,0) (3,0) (3,0) (3,0) (3,0) (3,0) (3,0) (3,0) (3,0) (3,0) (3,0) (3,0) (3,0) (3,0) (3,0) (3,0) (3,1) (2,1) (2,2) (1,2) (0,2) 
[DBG]  Checking input data for SAT solver:
[DBG]    - Number of agents to replan: 7
[DBG]  Agent 26 has the original local path length: 5 => Start (2,2), Goal (4,2)
[DBG]  Agent 66 has the original local path length: 6 => Start (1,0), Goal (0,4)
[DBG]  Agent 72 has the original local path length: 1 => Start (0,2), Goal (0,2)
[DBG]  Agent 80 has the original local path length: 4 => Start (2,1), Goal (4,0)
[DBG]  Agent 106 has the original local path length: 1 => Start (4,4), Goal (4,4)
[DBG]  Agent 107 has the original local path length: 7 => Start (0,3), Goal (4,1)
[DBG]  Agent 120 has the original local path length: 32 => Start (3,0), Goal (0,2)
[DBG]  Start position: (2, 2), (1, 0), (0, 2), (2, 1), (4, 4), (0, 3), (3, 0), 
[DBG]  Goal position: (4, 2), (0, 4), (0, 2), (4, 0), (4, 4), (4, 1), (0, 2), 
[DBG]  SAT instance and solver created.
Currently solving
Instance name: scen
Map name: map
Encoding used: disappear_at_goal
SAT solver used: Kissat
Optimizing function: sum of costs
Number of agents: 7
Mks LB: 7
SoC LB: 28
Delta: 0
Remaining time: 300000 [ms]

[STAT] Solver returned: -1
[DBG]  SAT solver failed.
[STAT] SAT solver failed to find a valid solution.
[DBG]  ====================
[DBG]  SAT destroy operator called.
[DBG]  SAT heuristic: 2
[DBG]  key_agent_id: 26
[DBG]  key_agent_id global path length: 38
[DBG]  Submap content (global positions):
[DBG]  203 204 205 206 207 
[DBG]  235 236 237 238 239 
[DBG]  267 268 269 270 271 
[DBG]  299 300 301 302 303 
[DBG]  331 332 333 334 335 
[DBG]  Map content with agents and obstacles:
[DBG]  A A . . . 
[DBG]  . . . . A 
[DBG]  A A A . A 
[DBG]  A . . A . 
[DBG]  A X . X . 
[DBG]  content of the map structure that we pass to the SAT solver:
[DBG]  1  1  1  1  1  
[DBG]  1  1  1  1  1  
[DBG]  1  1  1  1  1  
[DBG]  1  1  1  1  1  
[DBG]  1  -1  1  -1  1  
[DBG]  Identifying agents in a submap for rescheduling (when key_agent is there at the time 10):
[DBG]  Agent 16 found intervals in the sub-map:
[DBG]   [10..18]
[DBG]  Agent 16 (interval in submap: [10..18]) contains time 10, added to replan.
[DBG]  Agent 20 found intervals in the sub-map:
[DBG]   [3..10]
[DBG]  Agent 20 (interval in submap: [3..10]) contains time 10, added to replan.
[DBG]  Agent 22 found intervals in the sub-map:
[DBG]   [21..21]
[DBG]  Agent 22 is not in sub-map at time 10 (intervals: 
[DBG]  [21..21] )
[DBG]  Agent 26 found intervals in the sub-map:
[DBG]   [6..12]
[DBG]  Agent 26 (interval in submap: [6..12]) contains time 10, added to replan.
[DBG]  Agent 66 found intervals in the sub-map:
[DBG]  
[DBG]  Agent 66 is not in sub-map at time 10 (intervals: 
[DBG]  )
[DBG]  Agent 76 found intervals in the sub-map:
[DBG]   [8..12]
[DBG]  Agent 76 (interval in submap: [8..12]) contains time 10, added to replan.
[DBG]  Agent 83 found intervals in the sub-map:
[DBG]   [10..15]
[DBG]  Agent 83 (interval in submap: [10..15]) contains time 10, added to replan.
[DBG]  Agent 107 found intervals in the sub-map:
[DBG]   [10..14]
[DBG]  Agent 107 (interval in submap: [10..14]) contains time 10, added to replan.
[DBG]  Agent 112 found intervals in the sub-map:
[DBG]   [2..8]
[DBG]  Agent 112 is not in sub-map at time 10 (intervals: 
[DBG]  [2..8] )
[DBG]  Agent 120 found intervals in the sub-map:
[DBG]   [0..32]
[DBG]  Agent 120 (interval in submap: [0..32]) contains time 10, added to replan.
[DBG]  Agent 125 found intervals in the sub-map:
[DBG]   [4..11]
[DBG]  Agent 125 (interval in submap: [4..11]) contains time 10, added to replan.
[DBG]  Agent 131 found intervals in the sub-map:
[DBG]   [9..16]
[DBG]  Agent 131 (interval in submap: [9..16]) contains time 10, added to replan.
[DBG]  Agent 145 found intervals in the sub-map:
[DBG]   [0..10]
[DBG]  Agent 145 (interval in submap: [0..10]) contains time 10, added to replan.
[DBG]  Agent 16 | Start (global): 299 -> (local): (3, 0) at time 10 | Goal (global): 239 -> (local): (1, 4) at time 18
[DBG]  Agent 20 | Start (global): 331 -> (local): (4, 0) at time 10 | Goal (global): 331 -> (local): (4, 0) at time 10
[DBG]  Agent 26 | Start (global): 269 -> (local): (2, 2) at time 10 | Goal (global): 333 -> (local): (4, 2) at time 12
[DBG]  Agent 76 | Start (global): 302 -> (local): (3, 3) at time 10 | Goal (global): 238 -> (local): (1, 3) at time 12
[DBG]  Agent 83 | Start (global): 239 -> (local): (1, 4) at time 10 | Goal (global): 335 -> (local): (4, 4) at time 15
[DBG]  Agent 107 | Start (global): 204 -> (local): (0, 1) at time 10 | Goal (global): 299 -> (local): (3, 0) at time 14
[DBG]  Agent 120 | Start (global): 203 -> (local): (0, 0) at time 10 | Goal (global): 204 -> (local): (0, 1) at time 32
[DBG]  Agent 125 | Start (global): 268 -> (local): (2, 1) at time 10 | Goal (global): 267 -> (local): (2, 0) at time 11
[DBG]  Agent 131 | Start (global): 271 -> (local): (2, 4) at time 10 | Goal (global): 331 -> (local): (4, 0) at time 16
[DBG]  Agent 145 | Start (global): 267 -> (local): (2, 0) at time 10 | Goal (global): 267 -> (local): (2, 0) at time 10
[DBG]  [REPAIR] SAT destroy operator called.
[DBG]  [REPAIR] SAT operator â€“ launching subproblem FOR OPTIMIZATION.
[DBG]  Creating local paths (sx, sy) in the submap for T_sync = 10
[DBG]    Agent 16 (global paths from T=10 to 18) has local path: (3,0) (3,1) (3,2) (4,2) (3,2) (3,3) (3,4) (2,4) (1,4) 
[DBG]    Agent 20 (global paths from T=10 to 10) has local path: (4,0) 
[DBG]    Agent 26 (global paths from T=10 to 12) has local path: (2,2) (3,2) (4,2) 
[DBG]    Agent 76 (global paths from T=10 to 12) has local path: (3,3) (2,3) (1,3) 
[DBG]    Agent 83 (global paths from T=10 to 15) has local path: (1,4) (2,4) (3,4) (3,4) (4,4) (4,4) 
[DBG]    Agent 107 (global paths from T=10 to 14) has local path: (0,1) (1,1) (2,1) (3,1) (3,0) 
[DBG]    Agent 120 (global paths from T=10 to 32) has local path: (0,0) (0,0) (0,0) (0,0) (0,0) (0,0) (0,0) (0,0) (0,0) (0,0) (0,0) (0,0) (0,0) (0,0) (0,0) (0,0) (0,0) (0,0) (0,0) (0,0) (0,0) (0,0) (0,1) 
[DBG]    Agent 125 (global paths from T=10 to 11) has local path: (2,1) (2,0) 
[DBG]    Agent 131 (global paths from T=10 to 16) has local path: (2,4) (3,4) (3,3) (3,2) (3,1) (3,0) (4,0) 
[DBG]    Agent 145 (global paths from T=10 to 10) has local path: (2,0) 
[DBG]  Checking input data for SAT solver:
[DBG]    - Number of agents to replan: 10
[DBG]  Agent 16 has the original local path length: 9 => Start (3,0), Goal (1,4)
[DBG]  Agent 20 has the original local path length: 1 => Start (4,0), Goal (4,0)
[DBG]  Agent 26 has the original local path length: 3 => Start (2,2), Goal (4,2)
[DBG]  Agent 76 has the original local path length: 3 => Start (3,3), Goal (1,3)
[DBG]  Agent 83 has the original local path length: 6 => Start (1,4), Goal (4,4)
[DBG]  Agent 107 has the original local path length: 5 => Start (0,1), Goal (3,0)
[DBG]  Agent 120 has the original local path length: 23 => Start (0,0), Goal (0,1)
[DBG]  Agent 125 has the original local path length: 2 => Start (2,1), Goal (2,0)
[DBG]  Agent 131 has the original local path length: 7 => Start (2,4), Goal (4,0)
[DBG]  Agent 145 has the original local path length: 1 => Start (2,0), Goal (2,0)
[DBG]  Start position: (3, 0), (4, 0), (2, 2), (3, 3), (1, 4), (0, 1), (0, 0), (2, 1), (2, 4), (2, 0), 
[DBG]  Goal position: (1, 4), (4, 0), (4, 2), (1, 3), (4, 4), (3, 0), (0, 1), (2, 0), (4, 0), (2, 0), 
[DBG]  SAT instance and solver created.
Currently solving
Instance name: scen
Map name: map
Encoding used: disappear_at_goal
SAT solver used: Kissat
Optimizing function: sum of costs
Number of agents: 10
Mks LB: 7
SoC LB: 35
Delta: 0
Remaining time: 300000 [ms]

Vertex conflict! Agents 1, 2, timestep 3, location 0
Swapping conflict! Agents 1, 2, timestep 3, edge (0,0)
Vertex conflict! Agents 1, 2, timestep 4, location 0
Swapping conflict! Agents 1, 2, timestep 4, edge (0,0)
Vertex conflict! Agents 1, 2, timestep 5, location 0
Swapping conflict! Agents 1, 2, timestep 5, edge (0,0)
Vertex conflict! Agents 1, 2, timestep 6, location 0
Vertex conflict! Agents 1, 3, timestep 3, location 0
Swapping conflict! Agents 1, 3, timestep 3, edge (0,0)
Vertex conflict! Agents 1, 3, timestep 4, location 0
Swapping conflict! Agents 1, 3, timestep 4, edge (0,0)
Vertex conflict! Agents 1, 3, timestep 5, location 0
Swapping conflict! Agents 1, 3, timestep 5, edge (0,0)
Vertex conflict! Agents 1, 3, timestep 6, location 0
Vertex conflict! Agents 1, 4, timestep 4, location 0
Swapping conflict! Agents 1, 4, timestep 4, edge (0,0)
Vertex conflict! Agents 1, 4, timestep 5, location 0
Swapping conflict! Agents 1, 4, timestep 5, edge (0,0)
Vertex conflict! Agents 1, 4, timestep 6, location 0
Vertex conflict! Agents 1, 5, timestep 5, location 0
Swapping conflict! Agents 1, 5, timestep 5, edge (0,0)
Vertex conflict! Agents 1, 5, timestep 6, location 0
Vertex conflict! Agents 1, 6, timestep 2, location 0
Swapping conflict! Agents 1, 6, timestep 2, edge (0,0)
Vertex conflict! Agents 1, 6, timestep 3, location 0
Swapping conflict! Agents 1, 6, timestep 3, edge (0,0)
Vertex conflict! Agents 1, 6, timestep 4, location 0
Swapping conflict! Agents 1, 6, timestep 4, edge (0,0)
Vertex conflict! Agents 1, 6, timestep 5, location 0
Swapping conflict! Agents 1, 6, timestep 5, edge (0,0)
Vertex conflict! Agents 1, 6, timestep 6, location 0
Vertex conflict! Agents 1, 7, timestep 2, location 0
Swapping conflict! Agents 1, 7, timestep 2, edge (0,0)
Vertex conflict! Agents 1, 7, timestep 3, location 0
Swapping conflict! Agents 1, 7, timestep 3, edge (0,0)
Vertex conflict! Agents 1, 7, timestep 4, location 0
Swapping conflict! Agents 1, 7, timestep 4, edge (0,0)
Vertex conflict! Agents 1, 7, timestep 5, location 0
Swapping conflict! Agents 1, 7, timestep 5, edge (0,0)
Vertex conflict! Agents 1, 7, timestep 6, location 0
Vertex conflict! Agents 1, 9, timestep 1, location 0
Swapping conflict! Agents 1, 9, timestep 1, edge (0,0)
Vertex conflict! Agents 1, 9, timestep 2, location 0
Swapping conflict! Agents 1, 9, timestep 2, edge (0,0)
Vertex conflict! Agents 1, 9, timestep 3, location 0
Swapping conflict! Agents 1, 9, timestep 3, edge (0,0)
Vertex conflict! Agents 1, 9, timestep 4, location 0
Swapping conflict! Agents 1, 9, timestep 4, edge (0,0)
Vertex conflict! Agents 1, 9, timestep 5, location 0
Swapping conflict! Agents 1, 9, timestep 5, edge (0,0)
Vertex conflict! Agents 1, 9, timestep 6, location 0
Vertex conflict! Agents 2, 3, timestep 3, location 0
Swapping conflict! Agents 2, 3, timestep 3, edge (0,0)
Vertex conflict! Agents 2, 3, timestep 4, location 0
Swapping conflict! Agents 2, 3, timestep 4, edge (0,0)
Vertex conflict! Agents 2, 3, timestep 5, location 0
Swapping conflict! Agents 2, 3, timestep 5, edge (0,0)
Vertex conflict! Agents 2, 3, timestep 6, location 0
Vertex conflict! Agents 2, 4, timestep 4, location 0
Swapping conflict! Agents 2, 4, timestep 4, edge (0,0)
Vertex conflict! Agents 2, 4, timestep 5, location 0
Swapping conflict! Agents 2, 4, timestep 5, edge (0,0)
Vertex conflict! Agents 2, 4, timestep 6, location 0
Vertex conflict! Agents 2, 5, timestep 5, location 0
Swapping conflict! Agents 2, 5, timestep 5, edge (0,0)
Vertex conflict! Agents 2, 5, timestep 6, location 0
Vertex conflict! Agents 2, 6, timestep 3, location 0
Swapping conflict! Agents 2, 6, timestep 3, edge (0,0)
Vertex conflict! Agents 2, 6, timestep 4, location 0
Swapping conflict! Agents 2, 6, timestep 4, edge (0,0)
Vertex conflict! Agents 2, 6, timestep 5, location 0
Swapping conflict! Agents 2, 6, timestep 5, edge (0,0)
Vertex conflict! Agents 2, 6, timestep 6, location 0
Vertex conflict! Agents 2, 7, timestep 3, location 0
Swapping conflict! Agents 2, 7, timestep 3, edge (0,0)
Vertex conflict! Agents 2, 7, timestep 4, location 0
Swapping conflict! Agents 2, 7, timestep 4, edge (0,0)
Vertex conflict! Agents 2, 7, timestep 5, location 0
Swapping conflict! Agents 2, 7, timestep 5, edge (0,0)
Vertex conflict! Agents 2, 7, timestep 6, location 0
Vertex conflict! Agents 2, 9, timestep 3, location 0
Swapping conflict! Agents 2, 9, timestep 3, edge (0,0)
Vertex conflict! Agents 2, 9, timestep 4, location 0
Swapping conflict! Agents 2, 9, timestep 4, edge (0,0)
Vertex conflict! Agents 2, 9, timestep 5, location 0
Swapping conflict! Agents 2, 9, timestep 5, edge (0,0)
Vertex conflict! Agents 2, 9, timestep 6, location 0
Vertex conflict! Agents 3, 4, timestep 4, location 0
Swapping conflict! Agents 3, 4, timestep 4, edge (0,0)
Vertex conflict! Agents 3, 4, timestep 5, location 0
Swapping conflict! Agents 3, 4, timestep 5, edge (0,0)
Vertex conflict! Agents 3, 4, timestep 6, location 0
Vertex conflict! Agents 3, 5, timestep 5, location 0
Swapping conflict! Agents 3, 5, timestep 5, edge (0,0)
Vertex conflict! Agents 3, 5, timestep 6, location 0
Vertex conflict! Agents 3, 6, timestep 3, location 0
Swapping conflict! Agents 3, 6, timestep 3, edge (0,0)
Vertex conflict! Agents 3, 6, timestep 4, location 0
Swapping conflict! Agents 3, 6, timestep 4, edge (0,0)
Vertex conflict! Agents 3, 6, timestep 5, location 0
Swapping conflict! Agents 3, 6, timestep 5, edge (0,0)
Vertex conflict! Agents 3, 6, timestep 6, location 0
Vertex conflict! Agents 3, 7, timestep 3, location 0
Swapping conflict! Agents 3, 7, timestep 3, edge (0,0)
Vertex conflict! Agents 3, 7, timestep 4, location 0
Swapping conflict! Agents 3, 7, timestep 4, edge (0,0)
Vertex conflict! Agents 3, 7, timestep 5, location 0
Swapping conflict! Agents 3, 7, timestep 5, edge (0,0)
Vertex conflict! Agents 3, 7, timestep 6, location 0
Vertex conflict! Agents 3, 9, timestep 3, location 0
Swapping conflict! Agents 3, 9, timestep 3, edge (0,0)
Vertex conflict! Agents 3, 9, timestep 4, location 0
Swapping conflict! Agents 3, 9, timestep 4, edge (0,0)
Vertex conflict! Agents 3, 9, timestep 5, location 0
Swapping conflict! Agents 3, 9, timestep 5, edge (0,0)
Vertex conflict! Agents 3, 9, timestep 6, location 0
Vertex conflict! Agents 4, 5, timestep 5, location 0
Swapping conflict! Agents 4, 5, timestep 5, edge (0,0)
Vertex conflict! Agents 4, 5, timestep 6, location 0
Vertex conflict! Agents 4, 6, timestep 4, location 0
Swapping conflict! Agents 4, 6, timestep 4, edge (0,0)
Vertex conflict! Agents 4, 6, timestep 5, location 0
Swapping conflict! Agents 4, 6, timestep 5, edge (0,0)
Vertex conflict! Agents 4, 6, timestep 6, location 0
Vertex conflict! Agents 4, 7, timestep 4, location 0
Swapping conflict! Agents 4, 7, timestep 4, edge (0,0)
Vertex conflict! Agents 4, 7, timestep 5, location 0
Swapping conflict! Agents 4, 7, timestep 5, edge (0,0)
Vertex conflict! Agents 4, 7, timestep 6, location 0
Vertex conflict! Agents 4, 9, timestep 4, location 0
Swapping conflict! Agents 4, 9, timestep 4, edge (0,0)
Vertex conflict! Agents 4, 9, timestep 5, location 0
Swapping conflict! Agents 4, 9, timestep 5, edge (0,0)
Vertex conflict! Agents 4, 9, timestep 6, location 0
Vertex conflict! Agents 5, 6, timestep 5, location 0
Swapping conflict! Agents 5, 6, timestep 5, edge (0,0)
Vertex conflict! Agents 5, 6, timestep 6, location 0
Vertex conflict! Agents 5, 7, timestep 5, location 0
Swapping conflict! Agents 5, 7, timestep 5, edge (0,0)
Vertex conflict! Agents 5, 7, timestep 6, location 0
Vertex conflict! Agents 5, 9, timestep 5, location 0
Swapping conflict! Agents 5, 9, timestep 5, edge (0,0)
Vertex conflict! Agents 5, 9, timestep 6, location 0
Vertex conflict! Agents 6, 7, timestep 2, location 0
Swapping conflict! Agents 6, 7, timestep 2, edge (0,0)
Vertex conflict! Agents 6, 7, timestep 3, location 0
Swapping conflict! Agents 6, 7, timestep 3, edge (0,0)
Vertex conflict! Agents 6, 7, timestep 4, location 0
Swapping conflict! Agents 6, 7, timestep 4, edge (0,0)
Vertex conflict! Agents 6, 7, timestep 5, location 0
Swapping conflict! Agents 6, 7, timestep 5, edge (0,0)
Vertex conflict! Agents 6, 7, timestep 6, location 0
Vertex conflict! Agents 6, 9, timestep 2, location 0
Swapping conflict! Agents 6, 9, timestep 2, edge (0,0)
Vertex conflict! Agents 6, 9, timestep 3, location 0
Swapping conflict! Agents 6, 9, timestep 3, edge (0,0)
Vertex conflict! Agents 6, 9, timestep 4, location 0
Swapping conflict! Agents 6, 9, timestep 4, edge (0,0)
Vertex conflict! Agents 6, 9, timestep 5, location 0
Swapping conflict! Agents 6, 9, timestep 5, edge (0,0)
Vertex conflict! Agents 6, 9, timestep 6, location 0
Vertex conflict! Agents 7, 9, timestep 2, location 0
Swapping conflict! Agents 7, 9, timestep 2, edge (0,0)
Vertex conflict! Agents 7, 9, timestep 3, location 0
Swapping conflict! Agents 7, 9, timestep 3, edge (0,0)
Vertex conflict! Agents 7, 9, timestep 4, location 0
Swapping conflict! Agents 7, 9, timestep 4, edge (0,0)
Vertex conflict! Agents 7, 9, timestep 5, location 0
Swapping conflict! Agents 7, 9, timestep 5, edge (0,0)
Vertex conflict! Agents 7, 9, timestep 6, location 0
Found plan [agents = 10] [timesteps = 7]
Agent #0 : 15 16 17 12 13 14 9 
Agent #1 : 20 0 0 0 0 0 0 
Agent #2 : 12 17 21 0 0 0 0 
Agent #3 : 18 13 8 0 0 0 0 
Agent #4 : 9 14 19 22 0 0 0 
Agent #5 : 1 6 11 16 15 0 0 
Agent #6 : 0 1 0 0 0 0 0 
Agent #7 : 11 10 0 0 0 0 0 
Agent #8 : 14 19 18 17 16 15 20 
Agent #9 : 10 0 0 0 0 0 0 

[STAT] Solver returned: 0
[DBG]  Agent (index) 16 | New local path (submap idx):
[DBG]  15 16 17 12 13 14 9 
[DBG]  Agent (index) 20 | New local path (submap idx):
[DBG]  20 
[DBG]  Agent (index) 26 | New local path (submap idx):
[DBG]  12 17 21 
[DBG]  Agent (index) 76 | New local path (submap idx):
[DBG]  18 13 8 
[DBG]  Agent (index) 83 | New local path (submap idx):
[DBG]  9 14 19 22 
[DBG]  Agent (index) 107 | New local path (submap idx):
[DBG]  1 6 11 16 15 
[DBG]  Agent (index) 120 | New local path (submap idx):
[DBG]  0 1 
[DBG]  Agent (index) 125 | New local path (submap idx):
[DBG]  11 10 
[DBG]  Agent (index) 131 | New local path (submap idx):
[DBG]  14 19 18 17 16 15 20 
[DBG]  Agent (index) 145 | New local path (submap idx):
[DBG]  10 
[DBG]  Update the agent path 16 | Original local length: 9 | New local length: 7
[DBG]  agent 16 t=0 => decoded (sx,sy)=(3,0) => global_id=299
[DBG]  agent 16 t=1 => decoded (sx,sy)=(3,1) => global_id=300
[DBG]  agent 16 t=2 => decoded (sx,sy)=(3,2) => global_id=301
[DBG]  agent 16 t=3 => decoded (sx,sy)=(2,2) => global_id=269
[DBG]  agent 16 t=4 => decoded (sx,sy)=(2,3) => global_id=270
[DBG]  agent 16 t=5 => decoded (sx,sy)=(2,4) => global_id=271
[DBG]  agent 16 t=6 => decoded (sx,sy)=(1,4) => global_id=239
[DBG]  Complete path of agent 16:
[DBG]    Original: 454 422 390 358 359 360 328 296 297 298 299 300 301 333 301 302 303 271 239 240 241 242 274 
[DBG]    New:     454 422 390 358 359 360 328 296 297 298 299 300 301 269 270 271 239 240 241 242 274 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 454 422 390 358 359 360 328 296 297 298 
[DBG]    Local path (in submap): 299 300 301 269 270 271 239 240 241 
[DBG]    Suffix (out of submap): 242 274 
[DBG]  Original agent path length 16 je: 23
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 0: 454, 422, 390, 358, 359, 360, 328, 296, 297, 298, 299, 300, 301, 269, 270, 271, 239, 240, 241, 242, 274, 
[DBG]  Path for agent 16 updated, resulting length: 21
[DBG]  Update the agent path 20 | Original local length: 1 | New local length: 1
[DBG]  agent 20 t=0 => decoded (sx,sy)=(4,0) => global_id=331
[DBG]  Complete path of agent 20:
[DBG]    Original: 242 241 240 239 238 270 269 268 267 299 331 363 395 395 427 459 491 523 555 587 619 651 650 649 648 647 646 678 710 742 774 775 807 839 871 903 904 
[DBG]    New:     242 241 240 239 238 270 269 268 267 299 331 363 395 395 427 459 491 523 555 587 619 651 650 649 648 647 646 678 710 742 774 775 807 839 871 903 904 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 242 241 240 239 238 270 269 268 267 299 
[DBG]    Local path (in submap): 331 
[DBG]    Suffix (out of submap): 363 395 395 427 459 491 523 555 587 619 651 650 649 648 647 646 678 710 742 774 775 807 839 871 903 904 
[DBG]  Original agent path length 20 je: 37
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 1: 242, 241, 240, 239, 238, 270, 269, 268, 267, 299, 331, 363, 395, 395, 427, 459, 491, 523, 555, 587, 619, 651, 650, 649, 648, 647, 646, 678, 710, 742, 774, 775, 807, 839, 871, 903, 904, 
[DBG]  Path for agent 20 updated, resulting length: 37
[DBG]  Update the agent path 26 | Original local length: 3 | New local length: 3
[DBG]  agent 26 t=0 => decoded (sx,sy)=(2,2) => global_id=269
[DBG]  agent 26 t=1 => decoded (sx,sy)=(3,2) => global_id=301
[DBG]  agent 26 t=2 => decoded (sx,sy)=(4,2) => global_id=333
[DBG]  Complete path of agent 26:
[DBG]    Original: 13 45 77 109 141 173 205 237 237 237 269 301 333 365 366 398 398 430 462 494 526 558 590 591 623 655 656 656 656 656 657 658 659 691 692 724 756 755 
[DBG]    New:     13 45 77 109 141 173 205 237 237 237 269 301 333 365 366 398 398 430 462 494 526 558 590 591 623 655 656 656 656 656 657 658 659 691 692 724 756 755 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 13 45 77 109 141 173 205 237 237 237 
[DBG]    Local path (in submap): 269 301 333 
[DBG]    Suffix (out of submap): 365 366 398 398 430 462 494 526 558 590 591 623 655 656 656 656 656 657 658 659 691 692 724 756 755 
[DBG]  Original agent path length 26 je: 38
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 2: 13, 45, 77, 109, 141, 173, 205, 237, 237, 237, 269, 301, 333, 365, 366, 398, 398, 430, 462, 494, 526, 558, 590, 591, 623, 655, 656, 656, 656, 656, 657, 658, 659, 691, 692, 724, 756, 755, 
[DBG]  Path for agent 26 updated, resulting length: 38
[DBG]  Update the agent path 76 | Original local length: 3 | New local length: 3
[DBG]  agent 76 t=0 => decoded (sx,sy)=(3,3) => global_id=302
[DBG]  agent 76 t=1 => decoded (sx,sy)=(2,3) => global_id=270
[DBG]  agent 76 t=2 => decoded (sx,sy)=(1,3) => global_id=238
[DBG]  Complete path of agent 76:
[DBG]    Original: 492 460 428 429 430 398 366 365 333 301 302 270 238 
[DBG]    New:     492 460 428 429 430 398 366 365 333 301 302 270 238 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 492 460 428 429 430 398 366 365 333 301 
[DBG]    Local path (in submap): 302 270 238 
[DBG]    Suffix (out of submap): 
[DBG]  Original agent path length 76 je: 13
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 3: 492, 460, 428, 429, 430, 398, 366, 365, 333, 301, 302, 270, 238, 
[DBG]  Path for agent 76 updated, resulting length: 13
[DBG]  Update the agent path 83 | Original local length: 6 | New local length: 4
[DBG]  agent 83 t=0 => decoded (sx,sy)=(1,4) => global_id=239
[DBG]  agent 83 t=1 => decoded (sx,sy)=(2,4) => global_id=271
[DBG]  agent 83 t=2 => decoded (sx,sy)=(3,4) => global_id=303
[DBG]  agent 83 t=3 => decoded (sx,sy)=(4,4) => global_id=335
[DBG]  Complete path of agent 83:
[DBG]    Original: 18 50 49 81 113 112 144 176 208 240 239 271 303 303 335 335 367 366 398 430 462 494 526 558 558 590 591 623 655 687 719 751 783 815 847 848 880 912 944 976 977 1009 
[DBG]    New:     18 50 49 81 113 112 144 176 208 240 239 271 303 335 367 366 398 430 462 494 526 558 558 590 591 623 655 687 719 751 783 815 847 848 880 912 944 976 977 1009 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 18 50 49 81 113 112 144 176 208 240 
[DBG]    Local path (in submap): 239 271 303 335 367 366 
[DBG]    Suffix (out of submap): 398 430 462 494 526 558 558 590 591 623 655 687 719 751 783 815 847 848 880 912 944 976 977 1009 
[DBG]  Original agent path length 83 je: 42
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 4: 18, 50, 49, 81, 113, 112, 144, 176, 208, 240, 239, 271, 303, 335, 367, 366, 398, 430, 462, 494, 526, 558, 558, 590, 591, 623, 655, 687, 719, 751, 783, 815, 847, 848, 880, 912, 944, 976, 977, 1009, 
[DBG]  Path for agent 83 updated, resulting length: 40
[DBG]  Update the agent path 107 | Original local length: 5 | New local length: 5
[DBG]  agent 107 t=0 => decoded (sx,sy)=(0,1) => global_id=204
[DBG]  agent 107 t=1 => decoded (sx,sy)=(1,1) => global_id=236
[DBG]  agent 107 t=2 => decoded (sx,sy)=(2,1) => global_id=268
[DBG]  agent 107 t=3 => decoded (sx,sy)=(3,1) => global_id=300
[DBG]  agent 107 t=4 => decoded (sx,sy)=(3,0) => global_id=299
[DBG]  Complete path of agent 107:
[DBG]    Original: 16 15 47 79 111 110 109 141 140 172 204 236 268 300 299 298 297 296 295 294 326 358 390 422 454 486 485 517 549 581 613 645 677 709 741 773 805 804 836 
[DBG]    New:     16 15 47 79 111 110 109 141 140 172 204 236 268 300 299 298 297 296 295 294 326 358 390 422 454 486 485 517 549 581 613 645 677 709 741 773 805 804 836 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 16 15 47 79 111 110 109 141 140 172 
[DBG]    Local path (in submap): 204 236 268 300 299 
[DBG]    Suffix (out of submap): 298 297 296 295 294 326 358 390 422 454 486 485 517 549 581 613 645 677 709 741 773 805 804 836 
[DBG]  Original agent path length 107 je: 39
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 5: 16, 15, 47, 79, 111, 110, 109, 141, 140, 172, 204, 236, 268, 300, 299, 298, 297, 296, 295, 294, 326, 358, 390, 422, 454, 486, 485, 517, 549, 581, 613, 645, 677, 709, 741, 773, 805, 804, 836, 
[DBG]  Path for agent 107 updated, resulting length: 39
[DBG]  Update the agent path 120 | Original local length: 23 | New local length: 2
[DBG]  agent 120 t=0 => decoded (sx,sy)=(0,0) => global_id=203
[DBG]  agent 120 t=1 => decoded (sx,sy)=(0,1) => global_id=204
[DBG]  Complete path of agent 120:
[DBG]    Original: 203 203 203 203 203 203 203 203 203 203 203 203 203 203 203 203 203 203 203 203 203 203 203 203 203 203 203 203 203 203 203 203 204 172 173 141 109 77 76 75 74 106 138 137 136 168 200 199 199 200 
[DBG]    New:     203 203 203 203 203 203 203 203 203 203 203 204 172 173 141 109 77 76 75 74 106 138 137 136 168 200 199 199 200 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 203 203 203 203 203 203 203 203 203 203 
[DBG]    Local path (in submap): 203 204 172 173 141 109 77 76 75 74 106 138 137 136 168 200 199 199 200 
[DBG]    Suffix (out of submap): 
[DBG]  Original agent path length 120 je: 50
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 6: 203, 203, 203, 203, 203, 203, 203, 203, 203, 203, 203, 204, 172, 173, 141, 109, 77, 76, 75, 74, 106, 138, 137, 136, 168, 200, 199, 199, 200, 
[DBG]  Path for agent 120 updated, resulting length: 29
[DBG]  Update the agent path 125 | Original local length: 2 | New local length: 2
[DBG]  agent 125 t=0 => decoded (sx,sy)=(2,1) => global_id=268
[DBG]  agent 125 t=1 => decoded (sx,sy)=(2,0) => global_id=267
[DBG]  Complete path of agent 125:
[DBG]    Original: 430 398 366 365 333 333 301 301 301 300 268 267 266 298 297 329 361 393 425 457 489 521 520 519 551 583 615 647 646 678 710 742 774 775 
[DBG]    New:     430 398 366 365 333 333 301 301 301 300 268 267 266 298 297 329 361 393 425 457 489 521 520 519 551 583 615 647 646 678 710 742 774 775 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 430 398 366 365 333 333 301 301 301 300 
[DBG]    Local path (in submap): 268 267 
[DBG]    Suffix (out of submap): 266 298 297 329 361 393 425 457 489 521 520 519 551 583 615 647 646 678 710 742 774 775 
[DBG]  Original agent path length 125 je: 34
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 7: 430, 398, 366, 365, 333, 333, 301, 301, 301, 300, 268, 267, 266, 298, 297, 329, 361, 393, 425, 457, 489, 521, 520, 519, 551, 583, 615, 647, 646, 678, 710, 742, 774, 775, 
[DBG]  Path for agent 125 updated, resulting length: 34
[DBG]  Update the agent path 131 | Original local length: 7 | New local length: 7
[DBG]  agent 131 t=0 => decoded (sx,sy)=(2,4) => global_id=271
[DBG]  agent 131 t=1 => decoded (sx,sy)=(3,4) => global_id=303
[DBG]  agent 131 t=2 => decoded (sx,sy)=(3,3) => global_id=302
[DBG]  agent 131 t=3 => decoded (sx,sy)=(3,2) => global_id=301
[DBG]  agent 131 t=4 => decoded (sx,sy)=(3,1) => global_id=300
[DBG]  agent 131 t=5 => decoded (sx,sy)=(3,0) => global_id=299
[DBG]  agent 131 t=6 => decoded (sx,sy)=(4,0) => global_id=331
[DBG]  Complete path of agent 131:
[DBG]    Original: 341 309 277 276 244 243 242 241 240 239 271 303 302 301 300 299 331 363 395 427 426 458 457 489 521 520 519 551 583 615 616 616 616 616 616 648 680 712 
[DBG]    New:     341 309 277 276 244 243 242 241 240 239 271 303 302 301 300 299 331 363 395 427 426 458 457 489 521 520 519 551 583 615 616 616 616 616 616 648 680 712 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 341 309 277 276 244 243 242 241 240 239 
[DBG]    Local path (in submap): 271 303 302 301 300 299 331 
[DBG]    Suffix (out of submap): 363 395 427 426 458 457 489 521 520 519 551 583 615 616 616 616 616 616 648 680 712 
[DBG]  Original agent path length 131 je: 38
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 8: 341, 309, 277, 276, 244, 243, 242, 241, 240, 239, 271, 303, 302, 301, 300, 299, 331, 363, 395, 427, 426, 458, 457, 489, 521, 520, 519, 551, 583, 615, 616, 616, 616, 616, 616, 648, 680, 712, 
[DBG]  Path for agent 131 updated, resulting length: 38
[DBG]  Update the agent path 145 | Original local length: 1 | New local length: 1
[DBG]  agent 145 t=0 => decoded (sx,sy)=(2,0) => global_id=267
[DBG]  Complete path of agent 145:
[DBG]    Original: 335 303 271 271 271 271 270 269 268 267 267 266 298 330 330 330 329 361 393 425 457 489 521 520 519 551 583 615 647 646 
[DBG]    New:     335 303 271 271 271 271 270 269 268 267 267 266 298 330 330 330 329 361 393 425 457 489 521 520 519 551 583 615 647 646 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 335 303 271 271 271 271 270 269 268 267 
[DBG]    Local path (in submap): 267 
[DBG]    Suffix (out of submap): 266 298 330 330 330 329 361 393 425 457 489 521 520 519 551 583 615 647 646 
[DBG]  Original agent path length 145 je: 30
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 9: 335, 303, 271, 271, 271, 271, 270, 269, 268, 267, 267, 266, 298, 330, 330, 330, 329, 361, 393, 425, 457, 489, 521, 520, 519, 551, 583, 615, 647, 646, 
[DBG]  Path for agent 145 updated, resulting length: 30
[DBG]  Paths successfully updated.
[DBG]  (LNS.cpp) New path for agent 16: 
[DBG]  454, 422, 390, 358, 359, 360, 328, 296, 297, 298, 299, 300, 301, 269, 270, 271, 239, 240, 241, 242, 274, 
[DBG]  (LNS.cpp) New path for agent 20: 
[DBG]  242, 241, 240, 239, 238, 270, 269, 268, 267, 299, 331, 363, 395, 395, 427, 459, 491, 523, 555, 587, 619, 651, 650, 649, 648, 647, 646, 678, 710, 742, 774, 775, 807, 839, 871, 903, 904, 
[DBG]  (LNS.cpp) New path for agent 26: 
[DBG]  13, 45, 77, 109, 141, 173, 205, 237, 237, 237, 269, 301, 333, 365, 366, 398, 398, 430, 462, 494, 526, 558, 590, 591, 623, 655, 656, 656, 656, 656, 657, 658, 659, 691, 692, 724, 756, 755, 
[DBG]  (LNS.cpp) New path for agent 76: 
[DBG]  492, 460, 428, 429, 430, 398, 366, 365, 333, 301, 302, 270, 238, 
[DBG]  (LNS.cpp) New path for agent 83: 
[DBG]  18, 50, 49, 81, 113, 112, 144, 176, 208, 240, 239, 271, 303, 335, 367, 366, 398, 430, 462, 494, 526, 558, 558, 590, 591, 623, 655, 687, 719, 751, 783, 815, 847, 848, 880, 912, 944, 976, 977, 1009, 
[DBG]  (LNS.cpp) New path for agent 107: 
[DBG]  16, 15, 47, 79, 111, 110, 109, 141, 140, 172, 204, 236, 268, 300, 299, 298, 297, 296, 295, 294, 326, 358, 390, 422, 454, 486, 485, 517, 549, 581, 613, 645, 677, 709, 741, 773, 805, 804, 836, 
[DBG]  (LNS.cpp) New path for agent 120: 
[DBG]  203, 203, 203, 203, 203, 203, 203, 203, 203, 203, 203, 204, 172, 173, 141, 109, 77, 76, 75, 74, 106, 138, 137, 136, 168, 200, 199, 199, 200, 
[DBG]  (LNS.cpp) New path for agent 125: 
[DBG]  430, 398, 366, 365, 333, 333, 301, 301, 301, 300, 268, 267, 266, 298, 297, 329, 361, 393, 425, 457, 489, 521, 520, 519, 551, 583, 615, 647, 646, 678, 710, 742, 774, 775, 
[DBG]  (LNS.cpp) New path for agent 131: 
[DBG]  341, 309, 277, 276, 244, 243, 242, 241, 240, 239, 271, 303, 302, 301, 300, 299, 331, 363, 395, 427, 426, 458, 457, 489, 521, 520, 519, 551, 583, 615, 616, 616, 616, 616, 616, 648, 680, 712, 
[DBG]  (LNS.cpp) New path for agent 145: 
[DBG]  335, 303, 271, 271, 271, 271, 270, 269, 268, 267, 267, 266, 298, 330, 330, 330, 329, 361, 393, 425, 457, 489, 521, 520, 519, 551, 583, 615, 647, 646, 
[DBG]  component_weights = {0.329989, 0.150078, 0.156944, 0.36299}
[DBG]  opSuccess value: 1
[STAT] neighbor.sum_of_costs before recomputation: 309
[STAT] neighbor.old_sum_of_costs before recomputation: 334
[STAT] sum_of_costs before recomputation: 4411
[DBG]  Validate solution immediately after SAT success.
[WARNING] Problem after SAT: Edge conflict between agents 16 and 5 at edge (271,239) at timestep 16
[DBG]  Attempting immediate repair via init_lns because problem occurred after SAT (should be applied only for conflicts...).
[DBG]  Passing 150 agents to init_lns (skip=true).
[DBG]  path_table contents for selected agents (neighbor.agents):
[DBG]    Agent 16 => controlling path length=21
[DBG]    Agent 20 => controlling path length=37
[DBG]    Agent 26 => controlling path length=38
[DBG]    Agent 76 => controlling path length=13
[DBG]    Agent 83 => controlling path length=40
[DBG]    Agent 107 => controlling path length=39
[DBG]    Agent 120 => controlling path length=29
[DBG]    Agent 125 => controlling path length=34
[DBG]    Agent 131 => controlling path length=38
[DBG]    Agent 145 => controlling path length=30
[DBG]  hodnota skip_initial_solution=1
[DBG]  We skip initialSolution => call buildCollisionData()
[DBG]  buildCollisionData() called â€“ skip_initial_solution case.
[DBG]  Agents.size()=150, collision_graph.size()=150
[DBG]  agent 5 => updateCollidingPairs => foundCollision
[DBG]  agent 16 => updateCollidingPairs => foundCollision
[DBG]  agent 26 => updateCollidingPairs => foundCollision
[DBG]  agent 82 => updateCollidingPairs => foundCollision
[DBG]  agent 83 => updateCollidingPairs => foundCollision
[DBG]  agent 101 => updateCollidingPairs => foundCollision
[DBG]  agent 116 => updateCollidingPairs => foundCollision
[DBG]  agent 120 => updateCollidingPairs => foundCollision
[DBG]  agent 148 => updateCollidingPairs => foundCollision
[DBG]  Conflicting agent pairs:
[DBG]  agent 5 is in conflict with agent 16
[DBG]  agent 26 is in conflict with agent 83
[DBG]  agent 82 is in conflict with agent 120
[DBG]  agent 83 is in conflict with agent 148
[DBG]  agent 101 is in conflict with agent 120
[DBG]  agent 116 is in conflict with agent 120
[DBG]  buildCollisionData() => sum_of_costs=4386, num_of_colliding_pairs=6
[DBG]  buildCollisionData done => sum_of_costs=4386, num_of_colliding_pairs=6
[DBG]  sum_of_cost hodnota: 4386
[DBG]  After skip/init build => iteration_stats.back(): sum_of_costs=4386, collisions=6
[DEBUG] Using default neighbor generation strategy for conflicts: 1
[DEBUG] Using default neighbor generation strategy for conflicts: 1
[DEBUG] Using default neighbor generation strategy for conflicts: 0
	InitLNS(PP): runtime = 0.0251165, iterations = 4, colliding pairs = 0, initial colliding pairs = 6, solution cost = 4413, initial solution cost = 4386, failed iterations = 0
[DBG]  init_lns->sum_of_costs after init_lns->run: 4413
[DBG]  sum_of_costs after assignment from init_lns->run: 4413
[DBG]  Recomputing sum_of_cost by dividing neighbor.sum_of_costs and neighbor.old_sum_of_costs
[STAT] sum_of_costs after recomputation: 4413
[STAT] Iteration 84
[DBG]  Using SAT operator (destroy+repair SAT).
[DBG]  ====================
[DBG]  SAT destroy operator called.
[DBG]  SAT heuristic: 2
[DBG]  key_agent_id: 7
[DBG]  key_agent_id global path length: 18
[DBG]  Submap content (global positions):
[DBG]  758 759 760 761 762 
[DBG]  790 791 792 793 794 
[DBG]  822 823 824 825 826 
[DBG]  854 855 856 857 858 
[DBG]  886 887 888 889 890 
[DBG]  Map content with agents and obstacles:
[DBG]  X . X . X 
[DBG]  . X A . X 
[DBG]  . . A X . 
[DBG]  A A A A . 
[DBG]  . A . . . 
[DBG]  content of the map structure that we pass to the SAT solver:
[DBG]  -1  1  -1  1  -1  
[DBG]  1  -1  1  1  -1  
[DBG]  1  1  1  -1  1  
[DBG]  1  1  1  1  1  
[DBG]  1  1  1  1  1  
[DBG]  Identifying agents in a submap for rescheduling (when key_agent is there at the time 13):
[DBG]  Agent 7 found intervals in the sub-map:
[DBG]   [8..16]
[DBG]  Agent 7 (interval in submap: [8..16]) contains time 13, added to replan.
[DBG]  Agent 11 found intervals in the sub-map:
[DBG]   [11..19]
[DBG]  Agent 11 (interval in submap: [11..19]) contains time 13, added to replan.
[DBG]  Agent 14 found intervals in the sub-map:
[DBG]   [2..15]
[DBG]  Agent 14 (interval in submap: [2..15]) contains time 13, added to replan.
[DBG]  Agent 30 found intervals in the sub-map:
[DBG]   [11..14]
[DBG]  Agent 30 (interval in submap: [11..14]) contains time 13, added to replan.
[DBG]  Agent 35 found intervals in the sub-map:
[DBG]   [9..14]
[DBG]  Agent 35 (interval in submap: [9..14]) contains time 13, added to replan.
[DBG]  Agent 49 found intervals in the sub-map:
[DBG]   [3..5]
[DBG]  Agent 49 is not in sub-map at time 13 (intervals: 
[DBG]  [3..5] )
[DBG]  Agent 58 found intervals in the sub-map:
[DBG]   [0..6]
[DBG]  Agent 58 is not in sub-map at time 13 (intervals: 
[DBG]  [0..6] )
[DBG]  Agent 102 found intervals in the sub-map:
[DBG]   [12..26]
[DBG]  Agent 102 (interval in submap: [12..26]) contains time 13, added to replan.
[DBG]  Agent 133 found intervals in the sub-map:
[DBG]  
[DBG]  Agent 133 is not in sub-map at time 13 (intervals: 
[DBG]  )
[DBG]  Agent 142 found intervals in the sub-map:
[DBG]   [3..6] [9..15]
[DBG]  Agent 142 (interval in submap: [9..15]) contains time 13, added to replan.
[DBG]  Agent 7 | Start (global): 824 -> (local): (2, 2) at time 13 | Goal (global): 889 -> (local): (4, 3) at time 16
[DBG]  Agent 11 | Start (global): 856 -> (local): (3, 2) at time 13 | Goal (global): 761 -> (local): (0, 3) at time 19
[DBG]  Agent 14 | Start (global): 855 -> (local): (3, 1) at time 13 | Goal (global): 887 -> (local): (4, 1) at time 15
[DBG]  Agent 30 | Start (global): 854 -> (local): (3, 0) at time 13 | Goal (global): 822 -> (local): (2, 0) at time 14
[DBG]  Agent 35 | Start (global): 887 -> (local): (4, 1) at time 13 | Goal (global): 886 -> (local): (4, 0) at time 14
[DBG]  Agent 102 | Start (global): 857 -> (local): (3, 3) at time 13 | Goal (global): 890 -> (local): (4, 4) at time 26
[DBG]  Agent 142 | Start (global): 792 -> (local): (1, 2) at time 13 | Goal (global): 761 -> (local): (0, 3) at time 15
[DBG]  [REPAIR] SAT destroy operator called.
[DBG]  [REPAIR] SAT operator â€“ launching subproblem FOR OPTIMIZATION.
[DBG]  Creating local paths (sx, sy) in the submap for T_sync = 13
[DBG]    Agent 7 (global paths from T=13 to 16) has local path: (2,2) (3,2) (4,2) (4,3) 
[DBG]    Agent 11 (global paths from T=13 to 19) has local path: (3,2) (3,1) (3,2) (2,2) (1,2) (1,3) (0,3) 
[DBG]    Agent 14 (global paths from T=13 to 15) has local path: (3,1) (4,1) (4,1) 
[DBG]    Agent 30 (global paths from T=13 to 14) has local path: (3,0) (2,0) 
[DBG]    Agent 35 (global paths from T=13 to 14) has local path: (4,1) (4,0) 
[DBG]    Agent 102 (global paths from T=13 to 26) has local path: (3,3) (3,3) (3,3) (3,3) (3,3) (3,3) (3,3) (3,3) (3,3) (3,3) (3,3) (3,3) (4,3) (4,4) 
[DBG]    Agent 142 (global paths from T=13 to 15) has local path: (1,2) (1,3) (0,3) 
[DBG]  Checking input data for SAT solver:
[DBG]    - Number of agents to replan: 7
[DBG]  Agent 7 has the original local path length: 4 => Start (2,2), Goal (4,3)
[DBG]  Agent 11 has the original local path length: 7 => Start (3,2), Goal (0,3)
[DBG]  Agent 14 has the original local path length: 3 => Start (3,1), Goal (4,1)
[DBG]  Agent 30 has the original local path length: 2 => Start (3,0), Goal (2,0)
[DBG]  Agent 35 has the original local path length: 2 => Start (4,1), Goal (4,0)
[DBG]  Agent 102 has the original local path length: 14 => Start (3,3), Goal (4,4)
[DBG]  Agent 142 has the original local path length: 3 => Start (1,2), Goal (0,3)
[DBG]  Start position: (2, 2), (3, 2), (3, 1), (3, 0), (4, 1), (3, 3), (1, 2), 
[DBG]  Goal position: (4, 3), (0, 3), (4, 1), (2, 0), (4, 0), (4, 4), (0, 3), 
[DBG]  SAT instance and solver created.
Currently solving
Instance name: scen
Map name: map
Encoding used: disappear_at_goal
SAT solver used: Kissat
Optimizing function: sum of costs
Number of agents: 7
Mks LB: 5
SoC LB: 21
Delta: 0
Remaining time: 300000 [ms]

[STAT] Solver returned: -1
[DBG]  SAT solver failed.
[STAT] SAT solver failed to find a valid solution.
[DBG]  ====================
[DBG]  SAT destroy operator called.
[DBG]  SAT heuristic: 2
[DBG]  key_agent_id: 7
[DBG]  key_agent_id global path length: 18
[DBG]  Submap content (global positions):
[DBG]  660 661 662 663 664 
[DBG]  692 693 694 695 696 
[DBG]  724 725 726 727 728 
[DBG]  756 757 758 759 760 
[DBG]  788 789 790 791 792 
[DBG]  Map content with agents and obstacles:
[DBG]  . A X X . 
[DBG]  . X X X A 
[DBG]  A . A . A 
[DBG]  A . X . X 
[DBG]  . X . X . 
[DBG]  content of the map structure that we pass to the SAT solver:
[DBG]  1  1  -1  -1  1  
[DBG]  1  -1  -1  -1  1  
[DBG]  1  1  1  1  1  
[DBG]  1  1  -1  1  -1  
[DBG]  1  -1  1  -1  1  
[DBG]  Identifying agents in a submap for rescheduling (when key_agent is there at the time 3):
[DBG]  Agent 7 found intervals in the sub-map:
[DBG]   [0..6] [10..10]
[DBG]  Agent 7 (interval in submap: [0..6]) contains time 3, added to replan.
[DBG]  Agent 17 found intervals in the sub-map:
[DBG]   [0..3]
[DBG]  Agent 17 (interval in submap: [0..3]) contains time 3, added to replan.
[DBG]  Agent 28 found intervals in the sub-map:
[DBG]   [0..28] [35..51]
[DBG]  Agent 28 (interval in submap: [0..28]) contains time 3, added to replan.
[DBG]  Agent 46 found intervals in the sub-map:
[DBG]   [2..10]
[DBG]  Agent 46 (interval in submap: [2..10]) contains time 3, added to replan.
[DBG]  Agent 70 found intervals in the sub-map:
[DBG]   [1..4] [8..8]
[DBG]  Agent 70 (interval in submap: [1..4]) contains time 3, added to replan.
[DBG]  Agent 91 found intervals in the sub-map:
[DBG]   [4..11]
[DBG]  Agent 91 is not in sub-map at time 3 (intervals: 
[DBG]  [4..11] )
[DBG]  Agent 108 found intervals in the sub-map:
[DBG]   [1..7]
[DBG]  Agent 108 (interval in submap: [1..7]) contains time 3, added to replan.
[DBG]  Agent 7 | Start (global): 726 -> (local): (2, 2) at time 3 | Goal (global): 728 -> (local): (2, 4) at time 6
[DBG]  Agent 17 | Start (global): 728 -> (local): (2, 4) at time 3 | Goal (global): 728 -> (local): (2, 4) at time 3
[DBG]  Agent 28 | Start (global): 661 -> (local): (0, 1) at time 3 | Goal (global): 661 -> (local): (0, 1) at time 28
[DBG]  Agent 46 | Start (global): 756 -> (local): (3, 0) at time 3 | Goal (global): 664 -> (local): (0, 4) at time 10
[DBG]  Agent 70 | Start (global): 696 -> (local): (1, 4) at time 3 | Goal (global): 728 -> (local): (2, 4) at time 4
[DBG]  Agent 108 | Start (global): 724 -> (local): (2, 0) at time 3 | Goal (global): 728 -> (local): (2, 4) at time 7
[DBG]  [REPAIR] SAT destroy operator called.
[DBG]  [REPAIR] SAT operator â€“ launching subproblem FOR OPTIMIZATION.
[DBG]  Creating local paths (sx, sy) in the submap for T_sync = 3
[DBG]    Agent 7 (global paths from T=3 to 6) has local path: (2,2) (2,3) (2,3) (2,4) 
[DBG]    Agent 17 (global paths from T=3 to 3) has local path: (2,4) 
[DBG]    Agent 28 (global paths from T=3 to 28) has local path: (0,1) (0,1) (0,1) (0,1) (0,1) (0,1) (0,1) (0,1) (0,1) (0,1) (0,1) (0,1) (0,1) (0,1) (0,1) (0,1) (0,1) (0,1) (0,1) (0,1) (0,1) (0,1) (0,1) (0,1) (0,1) (0,1) 
[DBG]    Agent 46 (global paths from T=3 to 10) has local path: (3,0) (2,0) (2,1) (2,2) (2,3) (2,4) (1,4) (0,4) 
[DBG]    Agent 70 (global paths from T=3 to 4) has local path: (1,4) (2,4) 
[DBG]    Agent 108 (global paths from T=3 to 7) has local path: (2,0) (2,1) (2,2) (2,3) (2,4) 
[DBG]  Checking input data for SAT solver:
[DBG]    - Number of agents to replan: 6
[DBG]  Agent 7 has the original local path length: 4 => Start (2,2), Goal (2,4)
[DBG]  Agent 17 has the original local path length: 1 => Start (2,4), Goal (2,4)
[DBG]  Agent 28 has the original local path length: 26 => Start (0,1), Goal (0,1)
[DBG]  Agent 46 has the original local path length: 8 => Start (3,0), Goal (0,4)
[DBG]  Agent 70 has the original local path length: 2 => Start (1,4), Goal (2,4)
[DBG]  Agent 108 has the original local path length: 5 => Start (2,0), Goal (2,4)
[DBG]  Start position: (2, 2), (2, 4), (0, 1), (3, 0), (1, 4), (2, 0), 
[DBG]  Goal position: (2, 4), (2, 4), (0, 1), (0, 4), (2, 4), (2, 4), 
[DBG]  SAT instance and solver created.
Currently solving
Instance name: scen
Map name: map
Encoding used: disappear_at_goal
SAT solver used: Kissat
Optimizing function: sum of costs
Number of agents: 6
Mks LB: 8
SoC LB: 20
Delta: 0
Remaining time: 300000 [ms]

Vertex conflict! Agents 0, 1, timestep 3, location 0
Swapping conflict! Agents 0, 1, timestep 3, edge (0,0)
Vertex conflict! Agents 0, 1, timestep 4, location 0
Swapping conflict! Agents 0, 1, timestep 4, edge (0,0)
Vertex conflict! Agents 0, 1, timestep 5, location 0
Swapping conflict! Agents 0, 1, timestep 5, edge (0,0)
Vertex conflict! Agents 0, 1, timestep 6, location 0
Swapping conflict! Agents 0, 1, timestep 6, edge (0,0)
Vertex conflict! Agents 0, 1, timestep 7, location 0
Vertex conflict! Agents 0, 2, timestep 3, location 0
Swapping conflict! Agents 0, 2, timestep 3, edge (0,0)
Vertex conflict! Agents 0, 2, timestep 4, location 0
Swapping conflict! Agents 0, 2, timestep 4, edge (0,0)
Vertex conflict! Agents 0, 2, timestep 5, location 0
Swapping conflict! Agents 0, 2, timestep 5, edge (0,0)
Vertex conflict! Agents 0, 2, timestep 6, location 0
Swapping conflict! Agents 0, 2, timestep 6, edge (0,0)
Vertex conflict! Agents 0, 2, timestep 7, location 0
Vertex conflict! Agents 0, 4, timestep 3, location 0
Swapping conflict! Agents 0, 4, timestep 3, edge (0,0)
Vertex conflict! Agents 0, 4, timestep 4, location 0
Swapping conflict! Agents 0, 4, timestep 4, edge (0,0)
Vertex conflict! Agents 0, 4, timestep 5, location 0
Swapping conflict! Agents 0, 4, timestep 5, edge (0,0)
Vertex conflict! Agents 0, 4, timestep 6, location 0
Swapping conflict! Agents 0, 4, timestep 6, edge (0,0)
Vertex conflict! Agents 0, 4, timestep 7, location 0
Vertex conflict! Agents 0, 5, timestep 5, location 0
Swapping conflict! Agents 0, 5, timestep 5, edge (0,0)
Vertex conflict! Agents 0, 5, timestep 6, location 0
Swapping conflict! Agents 0, 5, timestep 6, edge (0,0)
Vertex conflict! Agents 0, 5, timestep 7, location 0
Vertex conflict! Agents 1, 2, timestep 1, location 0
Swapping conflict! Agents 1, 2, timestep 1, edge (0,0)
Vertex conflict! Agents 1, 2, timestep 2, location 0
Swapping conflict! Agents 1, 2, timestep 2, edge (0,0)
Vertex conflict! Agents 1, 2, timestep 3, location 0
Swapping conflict! Agents 1, 2, timestep 3, edge (0,0)
Vertex conflict! Agents 1, 2, timestep 4, location 0
Swapping conflict! Agents 1, 2, timestep 4, edge (0,0)
Vertex conflict! Agents 1, 2, timestep 5, location 0
Swapping conflict! Agents 1, 2, timestep 5, edge (0,0)
Vertex conflict! Agents 1, 2, timestep 6, location 0
Swapping conflict! Agents 1, 2, timestep 6, edge (0,0)
Vertex conflict! Agents 1, 2, timestep 7, location 0
Vertex conflict! Agents 1, 4, timestep 2, location 0
Swapping conflict! Agents 1, 4, timestep 2, edge (0,0)
Vertex conflict! Agents 1, 4, timestep 3, location 0
Swapping conflict! Agents 1, 4, timestep 3, edge (0,0)
Vertex conflict! Agents 1, 4, timestep 4, location 0
Swapping conflict! Agents 1, 4, timestep 4, edge (0,0)
Vertex conflict! Agents 1, 4, timestep 5, location 0
Swapping conflict! Agents 1, 4, timestep 5, edge (0,0)
Vertex conflict! Agents 1, 4, timestep 6, location 0
Swapping conflict! Agents 1, 4, timestep 6, edge (0,0)
Vertex conflict! Agents 1, 4, timestep 7, location 0
Vertex conflict! Agents 1, 5, timestep 5, location 0
Swapping conflict! Agents 1, 5, timestep 5, edge (0,0)
Vertex conflict! Agents 1, 5, timestep 6, location 0
Swapping conflict! Agents 1, 5, timestep 6, edge (0,0)
Vertex conflict! Agents 1, 5, timestep 7, location 0
Vertex conflict! Agents 2, 4, timestep 2, location 0
Swapping conflict! Agents 2, 4, timestep 2, edge (0,0)
Vertex conflict! Agents 2, 4, timestep 3, location 0
Swapping conflict! Agents 2, 4, timestep 3, edge (0,0)
Vertex conflict! Agents 2, 4, timestep 4, location 0
Swapping conflict! Agents 2, 4, timestep 4, edge (0,0)
Vertex conflict! Agents 2, 4, timestep 5, location 0
Swapping conflict! Agents 2, 4, timestep 5, edge (0,0)
Vertex conflict! Agents 2, 4, timestep 6, location 0
Swapping conflict! Agents 2, 4, timestep 6, edge (0,0)
Vertex conflict! Agents 2, 4, timestep 7, location 0
Vertex conflict! Agents 2, 5, timestep 5, location 0
Swapping conflict! Agents 2, 5, timestep 5, edge (0,0)
Vertex conflict! Agents 2, 5, timestep 6, location 0
Swapping conflict! Agents 2, 5, timestep 6, edge (0,0)
Vertex conflict! Agents 2, 5, timestep 7, location 0
Vertex conflict! Agents 4, 5, timestep 5, location 0
Swapping conflict! Agents 4, 5, timestep 5, edge (0,0)
Vertex conflict! Agents 4, 5, timestep 6, location 0
Swapping conflict! Agents 4, 5, timestep 6, edge (0,0)
Vertex conflict! Agents 4, 5, timestep 7, location 0
Found plan [agents = 6] [timesteps = 8]
Agent #0 : 7 8 9 0 0 0 0 0 
Agent #1 : 9 0 0 0 0 0 0 0 
Agent #2 : 1 0 0 0 0 0 0 0 
Agent #3 : 10 11 6 7 8 9 4 2 
Agent #4 : 4 9 0 0 0 0 0 0 
Agent #5 : 5 6 7 8 9 0 0 0 

[STAT] Solver returned: 0
[DBG]  Agent (index) 7 | New local path (submap idx):
[DBG]  7 8 9 
[DBG]  Agent (index) 17 | New local path (submap idx):
[DBG]  9 
[DBG]  Agent (index) 28 | New local path (submap idx):
[DBG]  1 
[DBG]  Agent (index) 46 | New local path (submap idx):
[DBG]  10 11 6 7 8 9 4 2 
[DBG]  Agent (index) 70 | New local path (submap idx):
[DBG]  4 9 
[DBG]  Agent (index) 108 | New local path (submap idx):
[DBG]  5 6 7 8 9 
[DBG]  Update the agent path 7 | Original local length: 4 | New local length: 3
[DBG]  agent 7 t=0 => decoded (sx,sy)=(2,2) => global_id=726
[DBG]  agent 7 t=1 => decoded (sx,sy)=(2,3) => global_id=727
[DBG]  agent 7 t=2 => decoded (sx,sy)=(2,4) => global_id=728
[DBG]  Complete path of agent 7:
[DBG]    Original: 756 724 725 726 727 727 728 729 761 793 792 824 823 824 856 888 889 921 
[DBG]    New:     756 724 725 726 727 728 729 761 793 792 824 823 824 856 888 889 921 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 756 724 725 
[DBG]    Local path (in submap): 726 727 728 729 
[DBG]    Suffix (out of submap): 761 793 792 824 823 824 856 888 889 921 
[DBG]  Original agent path length 7 je: 18
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 0: 756, 724, 725, 726, 727, 728, 729, 761, 793, 792, 824, 823, 824, 856, 888, 889, 921, 
[DBG]  Path for agent 7 updated, resulting length: 17
[DBG]  Update the agent path 17 | Original local length: 1 | New local length: 1
[DBG]  agent 17 t=0 => decoded (sx,sy)=(2,4) => global_id=728
[DBG]  Complete path of agent 17:
[DBG]    Original: 664 696 696 728 729 730 731 732 733 701 702 670 638 637 636 636 604 603 603 603 603 604 572 
[DBG]    New:     664 696 696 728 729 730 731 732 733 701 702 670 638 637 636 636 604 603 603 603 603 604 572 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 664 696 696 
[DBG]    Local path (in submap): 728 
[DBG]    Suffix (out of submap): 729 730 731 732 733 701 702 670 638 637 636 636 604 603 603 603 603 604 572 
[DBG]  Original agent path length 17 je: 23
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 1: 664, 696, 696, 728, 729, 730, 731, 732, 733, 701, 702, 670, 638, 637, 636, 636, 604, 603, 603, 603, 603, 604, 572, 
[DBG]  Path for agent 17 updated, resulting length: 23
[DBG]  Update the agent path 28 | Original local length: 26 | New local length: 1
[DBG]  agent 28 t=0 => decoded (sx,sy)=(0,1) => global_id=661
[DBG]  Complete path of agent 28:
[DBG]    Original: 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 629 628 627 627 659 691 692 724 725 726 726 726 726 726 726 726 726 726 726 726 726 726 727 
[DBG]    New:     661 661 661 661 629 628 627 627 659 691 692 724 725 726 726 726 726 726 726 726 726 726 726 726 726 726 727 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 661 661 661 
[DBG]    Local path (in submap): 661 629 628 627 627 659 691 692 724 725 726 726 726 726 726 726 726 726 726 726 726 726 726 727 
[DBG]    Suffix (out of submap): 
[DBG]  Original agent path length 28 je: 52
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 2: 661, 661, 661, 661, 629, 628, 627, 627, 659, 691, 692, 724, 725, 726, 726, 726, 726, 726, 726, 726, 726, 726, 726, 726, 726, 726, 727, 
[DBG]  Path for agent 28 updated, resulting length: 27
[DBG]  Update the agent path 46 | Original local length: 8 | New local length: 8
[DBG]  agent 46 t=0 => decoded (sx,sy)=(3,0) => global_id=756
[DBG]  agent 46 t=1 => decoded (sx,sy)=(3,1) => global_id=757
[DBG]  agent 46 t=2 => decoded (sx,sy)=(2,1) => global_id=725
[DBG]  agent 46 t=3 => decoded (sx,sy)=(2,2) => global_id=726
[DBG]  agent 46 t=4 => decoded (sx,sy)=(2,3) => global_id=727
[DBG]  agent 46 t=5 => decoded (sx,sy)=(2,4) => global_id=728
[DBG]  agent 46 t=6 => decoded (sx,sy)=(1,4) => global_id=696
[DBG]  agent 46 t=7 => decoded (sx,sy)=(0,4) => global_id=664
[DBG]  Complete path of agent 46:
[DBG]    Original: 786 787 788 756 724 725 726 727 728 696 664 632 600 601 602 603 571 539 540 541 509 477 445 413 381 349 317 285 284 252 
[DBG]    New:     786 787 788 756 757 725 726 727 728 696 664 632 600 601 602 603 571 539 540 541 509 477 445 413 381 349 317 285 284 252 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 786 787 788 
[DBG]    Local path (in submap): 756 757 725 726 727 728 696 664 
[DBG]    Suffix (out of submap): 632 600 601 602 603 571 539 540 541 509 477 445 413 381 349 317 285 284 252 
[DBG]  Original agent path length 46 je: 30
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 3: 786, 787, 788, 756, 757, 725, 726, 727, 728, 696, 664, 632, 600, 601, 602, 603, 571, 539, 540, 541, 509, 477, 445, 413, 381, 349, 317, 285, 284, 252, 
[DBG]  Path for agent 46 updated, resulting length: 30
[DBG]  Update the agent path 70 | Original local length: 2 | New local length: 2
[DBG]  agent 70 t=0 => decoded (sx,sy)=(1,4) => global_id=696
[DBG]  agent 70 t=1 => decoded (sx,sy)=(2,4) => global_id=728
[DBG]  Complete path of agent 70:
[DBG]    Original: 632 664 664 696 728 729 761 793 792 824 823 822 821 820 819 818 850 850 882 914 913 912 944 976 975 974 
[DBG]    New:     632 664 664 696 728 729 761 793 792 824 823 822 821 820 819 818 850 850 882 914 913 912 944 976 975 974 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 632 664 664 
[DBG]    Local path (in submap): 696 728 
[DBG]    Suffix (out of submap): 729 761 793 792 824 823 822 821 820 819 818 850 850 882 914 913 912 944 976 975 974 
[DBG]  Original agent path length 70 je: 26
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 4: 632, 664, 664, 696, 728, 729, 761, 793, 792, 824, 823, 822, 821, 820, 819, 818, 850, 850, 882, 914, 913, 912, 944, 976, 975, 974, 
[DBG]  Path for agent 70 updated, resulting length: 26
[DBG]  Update the agent path 108 | Original local length: 5 | New local length: 5
[DBG]  agent 108 t=0 => decoded (sx,sy)=(2,0) => global_id=724
[DBG]  agent 108 t=1 => decoded (sx,sy)=(2,1) => global_id=725
[DBG]  agent 108 t=2 => decoded (sx,sy)=(2,2) => global_id=726
[DBG]  agent 108 t=3 => decoded (sx,sy)=(2,3) => global_id=727
[DBG]  agent 108 t=4 => decoded (sx,sy)=(2,4) => global_id=728
[DBG]  Complete path of agent 108:
[DBG]    Original: 628 660 692 724 725 726 727 728 729 730 731 732 764 765 797 829 861 860 892 924 956 957 989 1021 
[DBG]    New:     628 660 692 724 725 726 727 728 729 730 731 732 764 765 797 829 861 860 892 924 956 957 989 1021 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 628 660 692 
[DBG]    Local path (in submap): 724 725 726 727 728 
[DBG]    Suffix (out of submap): 729 730 731 732 764 765 797 829 861 860 892 924 956 957 989 1021 
[DBG]  Original agent path length 108 je: 24
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 5: 628, 660, 692, 724, 725, 726, 727, 728, 729, 730, 731, 732, 764, 765, 797, 829, 861, 860, 892, 924, 956, 957, 989, 1021, 
[DBG]  Path for agent 108 updated, resulting length: 24
[DBG]  Paths successfully updated.
[DBG]  (LNS.cpp) New path for agent 7: 
[DBG]  756, 724, 725, 726, 727, 728, 729, 761, 793, 792, 824, 823, 824, 856, 888, 889, 921, 
[DBG]  (LNS.cpp) New path for agent 17: 
[DBG]  664, 696, 696, 728, 729, 730, 731, 732, 733, 701, 702, 670, 638, 637, 636, 636, 604, 603, 603, 603, 603, 604, 572, 
[DBG]  (LNS.cpp) New path for agent 28: 
[DBG]  661, 661, 661, 661, 629, 628, 627, 627, 659, 691, 692, 724, 725, 726, 726, 726, 726, 726, 726, 726, 726, 726, 726, 726, 726, 726, 727, 
[DBG]  (LNS.cpp) New path for agent 46: 
[DBG]  786, 787, 788, 756, 757, 725, 726, 727, 728, 696, 664, 632, 600, 601, 602, 603, 571, 539, 540, 541, 509, 477, 445, 413, 381, 349, 317, 285, 284, 252, 
[DBG]  (LNS.cpp) New path for agent 70: 
[DBG]  632, 664, 664, 696, 728, 729, 761, 793, 792, 824, 823, 822, 821, 820, 819, 818, 850, 850, 882, 914, 913, 912, 944, 976, 975, 974, 
[DBG]  (LNS.cpp) New path for agent 108: 
[DBG]  628, 660, 692, 724, 725, 726, 727, 728, 729, 730, 731, 732, 764, 765, 797, 829, 861, 860, 892, 924, 956, 957, 989, 1021, 
[DBG]  component_weights = {0.327375, 0.148889, 0.1557, 0.368036}
[DBG]  opSuccess value: 1
[STAT] neighbor.sum_of_costs before recomputation: 141
[STAT] neighbor.old_sum_of_costs before recomputation: 167
[STAT] sum_of_costs before recomputation: 4413
[DBG]  Validate solution immediately after SAT success.
[WARNING] Problem after SAT: Target conflict: agent 3 (len 44) traverses target of agent 28 (len 26) at location 727 at timestep 31
[DBG]  Attempting immediate repair via init_lns because problem occurred after SAT (should be applied only for conflicts...).
[DBG]  Passing 150 agents to init_lns (skip=true).
[DBG]  path_table contents for selected agents (neighbor.agents):
[DBG]    Agent 7 => controlling path length=17
[DBG]    Agent 17 => controlling path length=23
[DBG]    Agent 28 => controlling path length=27
[DBG]    Agent 46 => controlling path length=30
[DBG]    Agent 70 => controlling path length=26
[DBG]    Agent 108 => controlling path length=24
[DBG]  hodnota skip_initial_solution=1
[DBG]  We skip initialSolution => call buildCollisionData()
[DBG]  buildCollisionData() called â€“ skip_initial_solution case.
[DBG]  Agents.size()=150, collision_graph.size()=150
[DBG]  agent 3 => updateCollidingPairs => foundCollision
[DBG]  agent 7 => updateCollidingPairs => foundCollision
[DBG]  agent 11 => updateCollidingPairs => foundCollision
[DBG]  agent 28 => updateCollidingPairs => foundCollision
[DBG]  agent 42 => updateCollidingPairs => foundCollision
[DBG]  agent 58 => updateCollidingPairs => foundCollision
[DBG]  agent 113 => updateCollidingPairs => foundCollision
[DBG]  agent 142 => updateCollidingPairs => foundCollision
[DBG]  Conflicting agent pairs:
[DBG]  agent 3 is in conflict with agent 28
[DBG]  agent 7 is in conflict with agent 11
[DBG]  agent 7 is in conflict with agent 142
[DBG]  agent 11 is in conflict with agent 28
[DBG]  agent 28 is in conflict with agent 42
[DBG]  agent 28 is in conflict with agent 58
[DBG]  agent 28 is in conflict with agent 113
[DBG]  buildCollisionData() => sum_of_costs=4387, num_of_colliding_pairs=7
[DBG]  buildCollisionData done => sum_of_costs=4387, num_of_colliding_pairs=7
[DBG]  sum_of_cost hodnota: 4387
[DBG]  After skip/init build => iteration_stats.back(): sum_of_costs=4387, collisions=7
[DEBUG] Using default neighbor generation strategy for conflicts: 2
[DEBUG] Using default neighbor generation strategy for conflicts: 1
	InitLNS(PP): runtime = 0.008549, iterations = 3, colliding pairs = 0, initial colliding pairs = 7, solution cost = 4386, initial solution cost = 4387, failed iterations = 0
[DBG]  init_lns->sum_of_costs after init_lns->run: 4386
[DBG]  sum_of_costs after assignment from init_lns->run: 4386
[DBG]  Recomputing sum_of_cost by dividing neighbor.sum_of_costs and neighbor.old_sum_of_costs
[STAT] sum_of_costs after recomputation: 4386
[STAT] Iteration 85
[DBG]  Using SAT operator (destroy+repair SAT).
[DBG]  ====================
[DBG]  SAT destroy operator called.
[DBG]  SAT heuristic: 2
[DBG]  key_agent_id: 62
[DBG]  key_agent_id global path length: 25
[DBG]  Submap content (global positions):
[DBG]  336 337 338 339 340 
[DBG]  368 369 370 371 372 
[DBG]  400 401 402 403 404 
[DBG]  432 433 434 435 436 
[DBG]  464 465 466 467 468 
[DBG]  Map content with agents and obstacles:
[DBG]  . A . . . 
[DBG]  . . X A X 
[DBG]  A . A A . 
[DBG]  A A X . X 
[DBG]  A A A A . 
[DBG]  content of the map structure that we pass to the SAT solver:
[DBG]  1  1  1  1  1  
[DBG]  1  1  -1  1  -1  
[DBG]  1  1  1  1  1  
[DBG]  1  1  -1  1  -1  
[DBG]  1  1  1  1  1  
[DBG]  Identifying agents in a submap for rescheduling (when key_agent is there at the time 18):
[DBG]  Agent 3 found intervals in the sub-map:
[DBG]   [0..9] [14..24]
[DBG]  Agent 3 (interval in submap: [14..24]) contains time 18, added to replan.
[DBG]  Agent 16 found intervals in the sub-map:
[DBG]   [12..14] [17..19]
[DBG]  Agent 16 (interval in submap: [17..19]) contains time 18, added to replan.
[DBG]  Agent 22 found intervals in the sub-map:
[DBG]   [17..20] [22..25]
[DBG]  Agent 22 (interval in submap: [17..20]) contains time 18, added to replan.
[DBG]  Agent 29 found intervals in the sub-map:
[DBG]   [18..23]
[DBG]  Agent 29 (interval in submap: [18..23]) contains time 18, added to replan.
[DBG]  Agent 36 found intervals in the sub-map:
[DBG]   [9..18]
[DBG]  Agent 36 (interval in submap: [9..18]) contains time 18, added to replan.
[DBG]  Agent 43 found intervals in the sub-map:
[DBG]   [12..18]
[DBG]  Agent 43 (interval in submap: [12..18]) contains time 18, added to replan.
[DBG]  Agent 44 found intervals in the sub-map:
[DBG]   [19..23]
[DBG]  Agent 44 is not in sub-map at time 18 (intervals: 
[DBG]  [19..23] )
[DBG]  Agent 62 found intervals in the sub-map:
[DBG]   [12..22]
[DBG]  Agent 62 (interval in submap: [12..22]) contains time 18, added to replan.
[DBG]  Agent 63 found intervals in the sub-map:
[DBG]   [10..14]
[DBG]  Agent 63 is not in sub-map at time 18 (intervals: 
[DBG]  [10..14] )
[DBG]  Agent 81 found intervals in the sub-map:
[DBG]   [15..20]
[DBG]  Agent 81 (interval in submap: [15..20]) contains time 18, added to replan.
[DBG]  Agent 84 found intervals in the sub-map:
[DBG]   [17..20]
[DBG]  Agent 84 (interval in submap: [17..20]) contains time 18, added to replan.
[DBG]  Agent 88 found intervals in the sub-map:
[DBG]   [14..17]
[DBG]  Agent 88 is not in sub-map at time 18 (intervals: 
[DBG]  [14..17] )
[DBG]  Agent 92 found intervals in the sub-map:
[DBG]  
[DBG]  Agent 92 is not in sub-map at time 18 (intervals: 
[DBG]  )
[DBG]  Agent 100 found intervals in the sub-map:
[DBG]   [17..20]
[DBG]  Agent 100 (interval in submap: [17..20]) contains time 18, added to replan.
[DBG]  Agent 128 found intervals in the sub-map:
[DBG]   [14..18] [25..25]
[DBG]  Agent 128 (interval in submap: [14..18]) contains time 18, added to replan.
[DBG]  Agent 3 | Start (global): 433 -> (local): (3, 1) at time 18 | Goal (global): 467 -> (local): (4, 3) at time 24
[DBG]  Agent 16 | Start (global): 337 -> (local): (0, 1) at time 18 | Goal (global): 338 -> (local): (0, 2) at time 19
[DBG]  Agent 22 | Start (global): 400 -> (local): (2, 0) at time 18 | Goal (global): 336 -> (local): (0, 0) at time 20
[DBG]  Agent 29 | Start (global): 432 -> (local): (3, 0) at time 18 | Goal (global): 404 -> (local): (2, 4) at time 23
[DBG]  Agent 36 | Start (global): 371 -> (local): (1, 3) at time 18 | Goal (global): 371 -> (local): (1, 3) at time 18
[DBG]  Agent 43 | Start (global): 464 -> (local): (4, 0) at time 18 | Goal (global): 464 -> (local): (4, 0) at time 18
[DBG]  Agent 62 | Start (global): 402 -> (local): (2, 2) at time 18 | Goal (global): 404 -> (local): (2, 4) at time 22
[DBG]  Agent 81 | Start (global): 465 -> (local): (4, 1) at time 18 | Goal (global): 466 -> (local): (4, 2) at time 20
[DBG]  Agent 84 | Start (global): 466 -> (local): (4, 2) at time 18 | Goal (global): 468 -> (local): (4, 4) at time 20
[DBG]  Agent 100 | Start (global): 403 -> (local): (2, 3) at time 18 | Goal (global): 467 -> (local): (4, 3) at time 20
[DBG]  Agent 128 | Start (global): 467 -> (local): (4, 3) at time 18 | Goal (global): 467 -> (local): (4, 3) at time 18
[DBG]  [REPAIR] SAT destroy operator called.
[DBG]  [REPAIR] SAT operator â€“ launching subproblem FOR OPTIMIZATION.
[DBG]  Creating local paths (sx, sy) in the submap for T_sync = 18
[DBG]    Agent 3 (global paths from T=18 to 24) has local path: (3,1) (4,1) (4,1) (4,2) (4,2) (4,2) (4,3) 
[DBG]    Agent 16 (global paths from T=18 to 19) has local path: (0,1) (0,2) 
[DBG]    Agent 22 (global paths from T=18 to 20) has local path: (2,0) (1,0) (0,0) 
[DBG]    Agent 29 (global paths from T=18 to 23) has local path: (3,0) (2,0) (2,1) (2,2) (2,3) (2,4) 
[DBG]    Agent 36 (global paths from T=18 to 18) has local path: (1,3) 
[DBG]    Agent 43 (global paths from T=18 to 18) has local path: (4,0) 
[DBG]    Agent 62 (global paths from T=18 to 22) has local path: (2,2) (2,2) (2,2) (2,3) (2,4) 
[DBG]    Agent 81 (global paths from T=18 to 20) has local path: (4,1) (4,2) (4,2) 
[DBG]    Agent 84 (global paths from T=18 to 20) has local path: (4,2) (4,3) (4,4) 
[DBG]    Agent 100 (global paths from T=18 to 20) has local path: (2,3) (3,3) (4,3) 
[DBG]    Agent 128 (global paths from T=18 to 18) has local path: (4,3) 
[DBG]  Checking input data for SAT solver:
[DBG]    - Number of agents to replan: 11
[DBG]  Agent 3 has the original local path length: 7 => Start (3,1), Goal (4,3)
[DBG]  Agent 16 has the original local path length: 2 => Start (0,1), Goal (0,2)
[DBG]  Agent 22 has the original local path length: 3 => Start (2,0), Goal (0,0)
[DBG]  Agent 29 has the original local path length: 6 => Start (3,0), Goal (2,4)
[DBG]  Agent 36 has the original local path length: 1 => Start (1,3), Goal (1,3)
[DBG]  Agent 43 has the original local path length: 1 => Start (4,0), Goal (4,0)
[DBG]  Agent 62 has the original local path length: 5 => Start (2,2), Goal (2,4)
[DBG]  Agent 81 has the original local path length: 3 => Start (4,1), Goal (4,2)
[DBG]  Agent 84 has the original local path length: 3 => Start (4,2), Goal (4,4)
[DBG]  Agent 100 has the original local path length: 3 => Start (2,3), Goal (4,3)
[DBG]  Agent 128 has the original local path length: 1 => Start (4,3), Goal (4,3)
[DBG]  Start position: (3, 1), (0, 1), (2, 0), (3, 0), (1, 3), (4, 0), (2, 2), (4, 1), (4, 2), (2, 3), (4, 3), 
[DBG]  Goal position: (4, 3), (0, 2), (0, 0), (2, 4), (1, 3), (4, 0), (2, 4), (4, 2), (4, 4), (4, 3), (4, 3), 
[DBG]  SAT instance and solver created.
Currently solving
Instance name: scen
Map name: map
Encoding used: disappear_at_goal
SAT solver used: Kissat
Optimizing function: sum of costs
Number of agents: 11
Mks LB: 6
SoC LB: 29
Delta: 0
Remaining time: 300000 [ms]

Vertex conflict! Agents 0, 1, timestep 4, location 0
Swapping conflict! Agents 0, 1, timestep 4, edge (0,0)
Vertex conflict! Agents 0, 1, timestep 5, location 0
Vertex conflict! Agents 0, 2, timestep 4, location 0
Swapping conflict! Agents 0, 2, timestep 4, edge (0,0)
Vertex conflict! Agents 0, 2, timestep 5, location 0
Vertex conflict! Agents 0, 4, timestep 4, location 0
Swapping conflict! Agents 0, 4, timestep 4, edge (0,0)
Vertex conflict! Agents 0, 4, timestep 5, location 0
Vertex conflict! Agents 0, 5, timestep 4, location 0
Swapping conflict! Agents 0, 5, timestep 4, edge (0,0)
Vertex conflict! Agents 0, 5, timestep 5, location 0
Vertex conflict! Agents 0, 6, timestep 4, location 0
Swapping conflict! Agents 0, 6, timestep 4, edge (0,0)
Vertex conflict! Agents 0, 6, timestep 5, location 0
Vertex conflict! Agents 0, 7, timestep 4, location 0
Swapping conflict! Agents 0, 7, timestep 4, edge (0,0)
Vertex conflict! Agents 0, 7, timestep 5, location 0
Vertex conflict! Agents 0, 8, timestep 4, location 0
Swapping conflict! Agents 0, 8, timestep 4, edge (0,0)
Vertex conflict! Agents 0, 8, timestep 5, location 0
Vertex conflict! Agents 0, 9, timestep 4, location 0
Swapping conflict! Agents 0, 9, timestep 4, edge (0,0)
Vertex conflict! Agents 0, 9, timestep 5, location 0
Vertex conflict! Agents 0, 10, timestep 4, location 0
Swapping conflict! Agents 0, 10, timestep 4, edge (0,0)
Vertex conflict! Agents 0, 10, timestep 5, location 0
Vertex conflict! Agents 1, 2, timestep 2, location 0
Swapping conflict! Agents 1, 2, timestep 2, edge (0,0)
Vertex conflict! Agents 1, 2, timestep 3, location 0
Swapping conflict! Agents 1, 2, timestep 3, edge (0,0)
Vertex conflict! Agents 1, 2, timestep 4, location 0
Swapping conflict! Agents 1, 2, timestep 4, edge (0,0)
Vertex conflict! Agents 1, 2, timestep 5, location 0
Vertex conflict! Agents 1, 4, timestep 2, location 0
Swapping conflict! Agents 1, 4, timestep 2, edge (0,0)
Vertex conflict! Agents 1, 4, timestep 3, location 0
Swapping conflict! Agents 1, 4, timestep 3, edge (0,0)
Vertex conflict! Agents 1, 4, timestep 4, location 0
Swapping conflict! Agents 1, 4, timestep 4, edge (0,0)
Vertex conflict! Agents 1, 4, timestep 5, location 0
Vertex conflict! Agents 1, 5, timestep 2, location 0
Swapping conflict! Agents 1, 5, timestep 2, edge (0,0)
Vertex conflict! Agents 1, 5, timestep 3, location 0
Swapping conflict! Agents 1, 5, timestep 3, edge (0,0)
Vertex conflict! Agents 1, 5, timestep 4, location 0
Swapping conflict! Agents 1, 5, timestep 4, edge (0,0)
Vertex conflict! Agents 1, 5, timestep 5, location 0
Vertex conflict! Agents 1, 6, timestep 3, location 0
Swapping conflict! Agents 1, 6, timestep 3, edge (0,0)
Vertex conflict! Agents 1, 6, timestep 4, location 0
Swapping conflict! Agents 1, 6, timestep 4, edge (0,0)
Vertex conflict! Agents 1, 6, timestep 5, location 0
Vertex conflict! Agents 1, 7, timestep 2, location 0
Swapping conflict! Agents 1, 7, timestep 2, edge (0,0)
Vertex conflict! Agents 1, 7, timestep 3, location 0
Swapping conflict! Agents 1, 7, timestep 3, edge (0,0)
Vertex conflict! Agents 1, 7, timestep 4, location 0
Swapping conflict! Agents 1, 7, timestep 4, edge (0,0)
Vertex conflict! Agents 1, 7, timestep 5, location 0
Vertex conflict! Agents 1, 8, timestep 3, location 0
Swapping conflict! Agents 1, 8, timestep 3, edge (0,0)
Vertex conflict! Agents 1, 8, timestep 4, location 0
Swapping conflict! Agents 1, 8, timestep 4, edge (0,0)
Vertex conflict! Agents 1, 8, timestep 5, location 0
Vertex conflict! Agents 1, 9, timestep 3, location 0
Swapping conflict! Agents 1, 9, timestep 3, edge (0,0)
Vertex conflict! Agents 1, 9, timestep 4, location 0
Swapping conflict! Agents 1, 9, timestep 4, edge (0,0)
Vertex conflict! Agents 1, 9, timestep 5, location 0
Vertex conflict! Agents 1, 10, timestep 2, location 0
Swapping conflict! Agents 1, 10, timestep 2, edge (0,0)
Vertex conflict! Agents 1, 10, timestep 3, location 0
Swapping conflict! Agents 1, 10, timestep 3, edge (0,0)
Vertex conflict! Agents 1, 10, timestep 4, location 0
Swapping conflict! Agents 1, 10, timestep 4, edge (0,0)
Vertex conflict! Agents 1, 10, timestep 5, location 0
Vertex conflict! Agents 2, 4, timestep 2, location 0
Swapping conflict! Agents 2, 4, timestep 2, edge (0,0)
Vertex conflict! Agents 2, 4, timestep 3, location 0
Swapping conflict! Agents 2, 4, timestep 3, edge (0,0)
Vertex conflict! Agents 2, 4, timestep 4, location 0
Swapping conflict! Agents 2, 4, timestep 4, edge (0,0)
Vertex conflict! Agents 2, 4, timestep 5, location 0
Vertex conflict! Agents 2, 5, timestep 2, location 0
Swapping conflict! Agents 2, 5, timestep 2, edge (0,0)
Vertex conflict! Agents 2, 5, timestep 3, location 0
Swapping conflict! Agents 2, 5, timestep 3, edge (0,0)
Vertex conflict! Agents 2, 5, timestep 4, location 0
Swapping conflict! Agents 2, 5, timestep 4, edge (0,0)
Vertex conflict! Agents 2, 5, timestep 5, location 0
Vertex conflict! Agents 2, 6, timestep 3, location 0
Swapping conflict! Agents 2, 6, timestep 3, edge (0,0)
Vertex conflict! Agents 2, 6, timestep 4, location 0
Swapping conflict! Agents 2, 6, timestep 4, edge (0,0)
Vertex conflict! Agents 2, 6, timestep 5, location 0
Vertex conflict! Agents 2, 7, timestep 2, location 0
Swapping conflict! Agents 2, 7, timestep 2, edge (0,0)
Vertex conflict! Agents 2, 7, timestep 3, location 0
Swapping conflict! Agents 2, 7, timestep 3, edge (0,0)
Vertex conflict! Agents 2, 7, timestep 4, location 0
Swapping conflict! Agents 2, 7, timestep 4, edge (0,0)
Vertex conflict! Agents 2, 7, timestep 5, location 0
Vertex conflict! Agents 2, 8, timestep 3, location 0
Swapping conflict! Agents 2, 8, timestep 3, edge (0,0)
Vertex conflict! Agents 2, 8, timestep 4, location 0
Swapping conflict! Agents 2, 8, timestep 4, edge (0,0)
Vertex conflict! Agents 2, 8, timestep 5, location 0
Vertex conflict! Agents 2, 9, timestep 3, location 0
Swapping conflict! Agents 2, 9, timestep 3, edge (0,0)
Vertex conflict! Agents 2, 9, timestep 4, location 0
Swapping conflict! Agents 2, 9, timestep 4, edge (0,0)
Vertex conflict! Agents 2, 9, timestep 5, location 0
Vertex conflict! Agents 2, 10, timestep 2, location 0
Swapping conflict! Agents 2, 10, timestep 2, edge (0,0)
Vertex conflict! Agents 2, 10, timestep 3, location 0
Swapping conflict! Agents 2, 10, timestep 3, edge (0,0)
Vertex conflict! Agents 2, 10, timestep 4, location 0
Swapping conflict! Agents 2, 10, timestep 4, edge (0,0)
Vertex conflict! Agents 2, 10, timestep 5, location 0
Vertex conflict! Agents 4, 5, timestep 1, location 0
Swapping conflict! Agents 4, 5, timestep 1, edge (0,0)
Vertex conflict! Agents 4, 5, timestep 2, location 0
Swapping conflict! Agents 4, 5, timestep 2, edge (0,0)
Vertex conflict! Agents 4, 5, timestep 3, location 0
Swapping conflict! Agents 4, 5, timestep 3, edge (0,0)
Vertex conflict! Agents 4, 5, timestep 4, location 0
Swapping conflict! Agents 4, 5, timestep 4, edge (0,0)
Vertex conflict! Agents 4, 5, timestep 5, location 0
Vertex conflict! Agents 4, 6, timestep 3, location 0
Swapping conflict! Agents 4, 6, timestep 3, edge (0,0)
Vertex conflict! Agents 4, 6, timestep 4, location 0
Swapping conflict! Agents 4, 6, timestep 4, edge (0,0)
Vertex conflict! Agents 4, 6, timestep 5, location 0
Vertex conflict! Agents 4, 7, timestep 2, location 0
Swapping conflict! Agents 4, 7, timestep 2, edge (0,0)
Vertex conflict! Agents 4, 7, timestep 3, location 0
Swapping conflict! Agents 4, 7, timestep 3, edge (0,0)
Vertex conflict! Agents 4, 7, timestep 4, location 0
Swapping conflict! Agents 4, 7, timestep 4, edge (0,0)
Vertex conflict! Agents 4, 7, timestep 5, location 0
Vertex conflict! Agents 4, 8, timestep 3, location 0
Swapping conflict! Agents 4, 8, timestep 3, edge (0,0)
Vertex conflict! Agents 4, 8, timestep 4, location 0
Swapping conflict! Agents 4, 8, timestep 4, edge (0,0)
Vertex conflict! Agents 4, 8, timestep 5, location 0
Vertex conflict! Agents 4, 9, timestep 3, location 0
Swapping conflict! Agents 4, 9, timestep 3, edge (0,0)
Vertex conflict! Agents 4, 9, timestep 4, location 0
Swapping conflict! Agents 4, 9, timestep 4, edge (0,0)
Vertex conflict! Agents 4, 9, timestep 5, location 0
Vertex conflict! Agents 4, 10, timestep 1, location 0
Swapping conflict! Agents 4, 10, timestep 1, edge (0,0)
Vertex conflict! Agents 4, 10, timestep 2, location 0
Swapping conflict! Agents 4, 10, timestep 2, edge (0,0)
Vertex conflict! Agents 4, 10, timestep 3, location 0
Swapping conflict! Agents 4, 10, timestep 3, edge (0,0)
Vertex conflict! Agents 4, 10, timestep 4, location 0
Swapping conflict! Agents 4, 10, timestep 4, edge (0,0)
Vertex conflict! Agents 4, 10, timestep 5, location 0
Vertex conflict! Agents 5, 6, timestep 3, location 0
Swapping conflict! Agents 5, 6, timestep 3, edge (0,0)
Vertex conflict! Agents 5, 6, timestep 4, location 0
Swapping conflict! Agents 5, 6, timestep 4, edge (0,0)
Vertex conflict! Agents 5, 6, timestep 5, location 0
Vertex conflict! Agents 5, 7, timestep 2, location 0
Swapping conflict! Agents 5, 7, timestep 2, edge (0,0)
Vertex conflict! Agents 5, 7, timestep 3, location 0
Swapping conflict! Agents 5, 7, timestep 3, edge (0,0)
Vertex conflict! Agents 5, 7, timestep 4, location 0
Swapping conflict! Agents 5, 7, timestep 4, edge (0,0)
Vertex conflict! Agents 5, 7, timestep 5, location 0
Vertex conflict! Agents 5, 8, timestep 3, location 0
Swapping conflict! Agents 5, 8, timestep 3, edge (0,0)
Vertex conflict! Agents 5, 8, timestep 4, location 0
Swapping conflict! Agents 5, 8, timestep 4, edge (0,0)
Vertex conflict! Agents 5, 8, timestep 5, location 0
Vertex conflict! Agents 5, 9, timestep 3, location 0
Swapping conflict! Agents 5, 9, timestep 3, edge (0,0)
Vertex conflict! Agents 5, 9, timestep 4, location 0
Swapping conflict! Agents 5, 9, timestep 4, edge (0,0)
Vertex conflict! Agents 5, 9, timestep 5, location 0
Vertex conflict! Agents 5, 10, timestep 1, location 0
Swapping conflict! Agents 5, 10, timestep 1, edge (0,0)
Vertex conflict! Agents 5, 10, timestep 2, location 0
Swapping conflict! Agents 5, 10, timestep 2, edge (0,0)
Vertex conflict! Agents 5, 10, timestep 3, location 0
Swapping conflict! Agents 5, 10, timestep 3, edge (0,0)
Vertex conflict! Agents 5, 10, timestep 4, location 0
Swapping conflict! Agents 5, 10, timestep 4, edge (0,0)
Vertex conflict! Agents 5, 10, timestep 5, location 0
Vertex conflict! Agents 6, 7, timestep 3, location 0
Swapping conflict! Agents 6, 7, timestep 3, edge (0,0)
Vertex conflict! Agents 6, 7, timestep 4, location 0
Swapping conflict! Agents 6, 7, timestep 4, edge (0,0)
Vertex conflict! Agents 6, 7, timestep 5, location 0
Vertex conflict! Agents 6, 8, timestep 3, location 0
Swapping conflict! Agents 6, 8, timestep 3, edge (0,0)
Vertex conflict! Agents 6, 8, timestep 4, location 0
Swapping conflict! Agents 6, 8, timestep 4, edge (0,0)
Vertex conflict! Agents 6, 8, timestep 5, location 0
Vertex conflict! Agents 6, 9, timestep 3, location 0
Swapping conflict! Agents 6, 9, timestep 3, edge (0,0)
Vertex conflict! Agents 6, 9, timestep 4, location 0
Swapping conflict! Agents 6, 9, timestep 4, edge (0,0)
Vertex conflict! Agents 6, 9, timestep 5, location 0
Vertex conflict! Agents 6, 10, timestep 3, location 0
Swapping conflict! Agents 6, 10, timestep 3, edge (0,0)
Vertex conflict! Agents 6, 10, timestep 4, location 0
Swapping conflict! Agents 6, 10, timestep 4, edge (0,0)
Vertex conflict! Agents 6, 10, timestep 5, location 0
Vertex conflict! Agents 7, 8, timestep 3, location 0
Swapping conflict! Agents 7, 8, timestep 3, edge (0,0)
Vertex conflict! Agents 7, 8, timestep 4, location 0
Swapping conflict! Agents 7, 8, timestep 4, edge (0,0)
Vertex conflict! Agents 7, 8, timestep 5, location 0
Vertex conflict! Agents 7, 9, timestep 3, location 0
Swapping conflict! Agents 7, 9, timestep 3, edge (0,0)
Vertex conflict! Agents 7, 9, timestep 4, location 0
Swapping conflict! Agents 7, 9, timestep 4, edge (0,0)
Vertex conflict! Agents 7, 9, timestep 5, location 0
Vertex conflict! Agents 7, 10, timestep 2, location 0
Swapping conflict! Agents 7, 10, timestep 2, edge (0,0)
Vertex conflict! Agents 7, 10, timestep 3, location 0
Swapping conflict! Agents 7, 10, timestep 3, edge (0,0)
Vertex conflict! Agents 7, 10, timestep 4, location 0
Swapping conflict! Agents 7, 10, timestep 4, edge (0,0)
Vertex conflict! Agents 7, 10, timestep 5, location 0
Vertex conflict! Agents 8, 9, timestep 3, location 0
Swapping conflict! Agents 8, 9, timestep 3, edge (0,0)
Vertex conflict! Agents 8, 9, timestep 4, location 0
Swapping conflict! Agents 8, 9, timestep 4, edge (0,0)
Vertex conflict! Agents 8, 9, timestep 5, location 0
Vertex conflict! Agents 8, 10, timestep 3, location 0
Swapping conflict! Agents 8, 10, timestep 3, edge (0,0)
Vertex conflict! Agents 8, 10, timestep 4, location 0
Swapping conflict! Agents 8, 10, timestep 4, edge (0,0)
Vertex conflict! Agents 8, 10, timestep 5, location 0
Vertex conflict! Agents 9, 10, timestep 3, location 0
Swapping conflict! Agents 9, 10, timestep 3, edge (0,0)
Vertex conflict! Agents 9, 10, timestep 4, location 0
Swapping conflict! Agents 9, 10, timestep 4, edge (0,0)
Vertex conflict! Agents 9, 10, timestep 5, location 0
Found plan [agents = 11] [timesteps = 6]
Agent #0 : 14 17 18 19 0 0 
Agent #1 : 1 2 0 0 0 0 
Agent #2 : 8 5 0 0 0 0 
Agent #3 : 13 14 9 10 11 12 
Agent #4 : 7 0 0 0 0 0 
Agent #5 : 16 0 0 0 0 0 
Agent #6 : 10 11 12 0 0 0 
Agent #7 : 17 18 0 0 0 0 
Agent #8 : 18 19 20 0 0 0 
Agent #9 : 11 15 19 0 0 0 
Agent #10 : 19 0 0 0 0 0 

[STAT] Solver returned: 0
[DBG]  Agent (index) 3 | New local path (submap idx):
[DBG]  14 17 18 19 
[DBG]  Agent (index) 16 | New local path (submap idx):
[DBG]  1 2 
[DBG]  Agent (index) 22 | New local path (submap idx):
[DBG]  8 5 0 
[DBG]  Agent (index) 29 | New local path (submap idx):
[DBG]  13 14 9 10 11 12 
[DBG]  Agent (index) 36 | New local path (submap idx):
[DBG]  7 
[DBG]  Agent (index) 43 | New local path (submap idx):
[DBG]  16 
[DBG]  Agent (index) 62 | New local path (submap idx):
[DBG]  10 11 12 
[DBG]  Agent (index) 81 | New local path (submap idx):
[DBG]  17 18 
[DBG]  Agent (index) 84 | New local path (submap idx):
[DBG]  18 19 20 
[DBG]  Agent (index) 100 | New local path (submap idx):
[DBG]  11 15 19 
[DBG]  Agent (index) 128 | New local path (submap idx):
[DBG]  19 
[DBG]  Update the agent path 3 | Original local length: 7 | New local length: 4
[DBG]  agent 3 t=0 => decoded (sx,sy)=(3,1) => global_id=433
[DBG]  agent 3 t=1 => decoded (sx,sy)=(4,1) => global_id=465
[DBG]  agent 3 t=2 => decoded (sx,sy)=(4,2) => global_id=466
[DBG]  agent 3 t=3 => decoded (sx,sy)=(4,3) => global_id=467
[DBG]  Complete path of agent 3:
[DBG]    Original: 468 468 468 468 467 466 466 466 466 466 498 498 498 498 466 465 433 401 433 465 465 466 466 466 467 499 498 530 529 561 593 592 591 623 655 687 719 719 751 783 815 847 879 880 912 
[DBG]    New:     468 468 468 468 467 466 466 466 466 466 498 498 498 498 466 465 433 401 433 465 466 467 499 498 530 529 561 593 592 591 623 655 687 719 719 751 783 815 847 879 880 912 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 468 468 468 468 467 466 466 466 466 466 498 498 498 498 466 465 433 401 
[DBG]    Local path (in submap): 433 465 466 467 499 498 530 
[DBG]    Suffix (out of submap): 529 561 593 592 591 623 655 687 719 719 751 783 815 847 879 880 912 
[DBG]  Original agent path length 3 je: 45
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 0: 468, 468, 468, 468, 467, 466, 466, 466, 466, 466, 498, 498, 498, 498, 466, 465, 433, 401, 433, 465, 466, 467, 499, 498, 530, 529, 561, 593, 592, 591, 623, 655, 687, 719, 719, 751, 783, 815, 847, 879, 880, 912, 
[DBG]  Path for agent 3 updated, resulting length: 42
[DBG]  Update the agent path 16 | Original local length: 2 | New local length: 2
[DBG]  agent 16 t=0 => decoded (sx,sy)=(0,1) => global_id=337
[DBG]  agent 16 t=1 => decoded (sx,sy)=(0,2) => global_id=338
[DBG]  Complete path of agent 16:
[DBG]    Original: 454 422 423 424 425 426 427 428 429 430 430 431 432 400 368 367 335 336 337 338 306 274 
[DBG]    New:     454 422 423 424 425 426 427 428 429 430 430 431 432 400 368 367 335 336 337 338 306 274 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 454 422 423 424 425 426 427 428 429 430 430 431 432 400 368 367 335 336 
[DBG]    Local path (in submap): 337 338 
[DBG]    Suffix (out of submap): 306 274 
[DBG]  Original agent path length 16 je: 22
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 1: 454, 422, 423, 424, 425, 426, 427, 428, 429, 430, 430, 431, 432, 400, 368, 367, 335, 336, 337, 338, 306, 274, 
[DBG]  Path for agent 16 updated, resulting length: 22
[DBG]  Update the agent path 22 | Original local length: 3 | New local length: 3
[DBG]  agent 22 t=0 => decoded (sx,sy)=(2,0) => global_id=400
[DBG]  agent 22 t=1 => decoded (sx,sy)=(1,0) => global_id=368
[DBG]  agent 22 t=2 => decoded (sx,sy)=(0,0) => global_id=336
[DBG]  Complete path of agent 22:
[DBG]    Original: 329 329 329 329 329 329 361 362 363 395 427 428 429 430 430 431 431 432 400 368 336 335 336 337 338 339 
[DBG]    New:     329 329 329 329 329 329 361 362 363 395 427 428 429 430 430 431 431 432 400 368 336 335 336 337 338 339 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 329 329 329 329 329 329 361 362 363 395 427 428 429 430 430 431 431 432 
[DBG]    Local path (in submap): 400 368 336 
[DBG]    Suffix (out of submap): 335 336 337 338 339 
[DBG]  Original agent path length 22 je: 26
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 2: 329, 329, 329, 329, 329, 329, 361, 362, 363, 395, 427, 428, 429, 430, 430, 431, 431, 432, 400, 368, 336, 335, 336, 337, 338, 339, 
[DBG]  Path for agent 22 updated, resulting length: 26
[DBG]  Update the agent path 29 | Original local length: 6 | New local length: 6
[DBG]  agent 29 t=0 => decoded (sx,sy)=(3,0) => global_id=432
[DBG]  agent 29 t=1 => decoded (sx,sy)=(3,1) => global_id=433
[DBG]  agent 29 t=2 => decoded (sx,sy)=(2,1) => global_id=401
[DBG]  agent 29 t=3 => decoded (sx,sy)=(2,2) => global_id=402
[DBG]  agent 29 t=4 => decoded (sx,sy)=(2,3) => global_id=403
[DBG]  agent 29 t=5 => decoded (sx,sy)=(2,4) => global_id=404
[DBG]  Complete path of agent 29:
[DBG]    Original: 579 580 548 549 517 485 486 487 455 423 424 425 426 427 428 429 430 431 432 400 401 402 403 404 405 373 341 309 310 311 
[DBG]    New:     579 580 548 549 517 485 486 487 455 423 424 425 426 427 428 429 430 431 432 433 401 402 403 404 405 373 341 309 310 311 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 579 580 548 549 517 485 486 487 455 423 424 425 426 427 428 429 430 431 
[DBG]    Local path (in submap): 432 433 401 402 403 404 
[DBG]    Suffix (out of submap): 405 373 341 309 310 311 
[DBG]  Original agent path length 29 je: 30
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 3: 579, 580, 548, 549, 517, 485, 486, 487, 455, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 401, 402, 403, 404, 405, 373, 341, 309, 310, 311, 
[DBG]  Path for agent 29 updated, resulting length: 30
[DBG]  Update the agent path 36 | Original local length: 1 | New local length: 1
[DBG]  agent 36 t=0 => decoded (sx,sy)=(1,3) => global_id=371
[DBG]  Complete path of agent 36:
[DBG]    Original: 431 431 431 431 431 430 398 366 367 368 400 401 402 402 402 402 402 403 371 
[DBG]    New:     431 431 431 431 431 430 398 366 367 368 400 401 402 402 402 402 402 403 371 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 431 431 431 431 431 430 398 366 367 368 400 401 402 402 402 402 402 403 
[DBG]    Local path (in submap): 371 
[DBG]    Suffix (out of submap): 
[DBG]  Original agent path length 36 je: 19
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 4: 431, 431, 431, 431, 431, 430, 398, 366, 367, 368, 400, 401, 402, 402, 402, 402, 402, 403, 371, 
[DBG]  Path for agent 36 updated, resulting length: 19
[DBG]  Update the agent path 43 | Original local length: 1 | New local length: 1
[DBG]  agent 43 t=0 => decoded (sx,sy)=(4,0) => global_id=464
[DBG]  Complete path of agent 43:
[DBG]    Original: 414 413 381 380 379 378 377 409 408 407 406 405 404 403 435 467 466 465 464 463 431 430 462 494 526 525 524 523 522 521 520 519 551 550 549 581 613 645 677 709 741 740 739 707 
[DBG]    New:     414 413 381 380 379 378 377 409 408 407 406 405 404 403 435 467 466 465 464 463 431 430 462 494 526 525 524 523 522 521 520 519 551 550 549 581 613 645 677 709 741 740 739 707 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 414 413 381 380 379 378 377 409 408 407 406 405 404 403 435 467 466 465 
[DBG]    Local path (in submap): 464 
[DBG]    Suffix (out of submap): 463 431 430 462 494 526 525 524 523 522 521 520 519 551 550 549 581 613 645 677 709 741 740 739 707 
[DBG]  Original agent path length 43 je: 44
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 5: 414, 413, 381, 380, 379, 378, 377, 409, 408, 407, 406, 405, 404, 403, 435, 467, 466, 465, 464, 463, 431, 430, 462, 494, 526, 525, 524, 523, 522, 521, 520, 519, 551, 550, 549, 581, 613, 645, 677, 709, 741, 740, 739, 707, 
[DBG]  Path for agent 43 updated, resulting length: 44
[DBG]  Update the agent path 62 | Original local length: 5 | New local length: 3
[DBG]  agent 62 t=0 => decoded (sx,sy)=(2,2) => global_id=402
[DBG]  agent 62 t=1 => decoded (sx,sy)=(2,3) => global_id=403
[DBG]  agent 62 t=2 => decoded (sx,sy)=(2,4) => global_id=404
[DBG]  Complete path of agent 62:
[DBG]    Original: 753 721 720 688 687 655 623 591 592 560 528 496 464 464 432 433 401 402 402 402 402 403 404 405 406 
[DBG]    New:     753 721 720 688 687 655 623 591 592 560 528 496 464 464 432 433 401 402 402 403 404 405 406 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 753 721 720 688 687 655 623 591 592 560 528 496 464 464 432 433 401 402 
[DBG]    Local path (in submap): 402 403 404 405 406 
[DBG]    Suffix (out of submap): 
[DBG]  Original agent path length 62 je: 25
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 6: 753, 721, 720, 688, 687, 655, 623, 591, 592, 560, 528, 496, 464, 464, 432, 433, 401, 402, 402, 403, 404, 405, 406, 
[DBG]  Path for agent 62 updated, resulting length: 23
[DBG]  Update the agent path 81 | Original local length: 3 | New local length: 2
[DBG]  agent 81 t=0 => decoded (sx,sy)=(4,1) => global_id=465
[DBG]  agent 81 t=1 => decoded (sx,sy)=(4,2) => global_id=466
[DBG]  Complete path of agent 81:
[DBG]    Original: 419 420 421 422 423 424 425 426 427 428 429 430 431 431 463 464 432 433 465 466 466 498 530 531 563 
[DBG]    New:     419 420 421 422 423 424 425 426 427 428 429 430 431 431 463 464 432 433 465 466 498 530 531 563 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 419 420 421 422 423 424 425 426 427 428 429 430 431 431 463 464 432 433 
[DBG]    Local path (in submap): 465 466 498 
[DBG]    Suffix (out of submap): 530 531 563 
[DBG]  Original agent path length 81 je: 25
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 7: 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 431, 463, 464, 432, 433, 465, 466, 498, 530, 531, 563, 
[DBG]  Path for agent 81 updated, resulting length: 24
[DBG]  Update the agent path 84 | Original local length: 3 | New local length: 3
[DBG]  agent 84 t=0 => decoded (sx,sy)=(4,2) => global_id=466
[DBG]  agent 84 t=1 => decoded (sx,sy)=(4,3) => global_id=467
[DBG]  agent 84 t=2 => decoded (sx,sy)=(4,4) => global_id=468
[DBG]  Complete path of agent 84:
[DBG]    Original: 878 846 847 815 783 784 752 720 688 689 657 625 593 561 529 530 498 466 466 467 468 469 437 438 439 407 375 343 311 312 313 281 249 217 218 186 154 154 122 90 58 26 25 
[DBG]    New:     878 846 847 815 783 784 752 720 688 689 657 625 593 561 529 530 498 466 466 467 468 469 437 438 439 407 375 343 311 312 313 281 249 217 218 186 154 154 122 90 58 26 25 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 878 846 847 815 783 784 752 720 688 689 657 625 593 561 529 530 498 466 
[DBG]    Local path (in submap): 466 467 468 
[DBG]    Suffix (out of submap): 469 437 438 439 407 375 343 311 312 313 281 249 217 218 186 154 154 122 90 58 26 25 
[DBG]  Original agent path length 84 je: 43
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 8: 878, 846, 847, 815, 783, 784, 752, 720, 688, 689, 657, 625, 593, 561, 529, 530, 498, 466, 466, 467, 468, 469, 437, 438, 439, 407, 375, 343, 311, 312, 313, 281, 249, 217, 218, 186, 154, 154, 122, 90, 58, 26, 25, 
[DBG]  Path for agent 84 updated, resulting length: 43
[DBG]  Update the agent path 100 | Original local length: 3 | New local length: 3
[DBG]  agent 100 t=0 => decoded (sx,sy)=(2,3) => global_id=403
[DBG]  agent 100 t=1 => decoded (sx,sy)=(3,3) => global_id=435
[DBG]  agent 100 t=2 => decoded (sx,sy)=(4,3) => global_id=467
[DBG]  Complete path of agent 100:
[DBG]    Original: 287 286 285 317 349 381 380 379 378 377 376 375 407 406 406 406 405 404 403 435 467 499 498 530 529 561 561 593 592 591 623 655 687 719 751 783 815 847 846 878 877 909 941 973 1005 1004 1003 
[DBG]    New:     287 286 285 317 349 381 380 379 378 377 376 375 407 406 406 406 405 404 403 435 467 499 498 530 529 561 561 593 592 591 623 655 687 719 751 783 815 847 846 878 877 909 941 973 1005 1004 1003 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 287 286 285 317 349 381 380 379 378 377 376 375 407 406 406 406 405 404 
[DBG]    Local path (in submap): 403 435 467 
[DBG]    Suffix (out of submap): 499 498 530 529 561 561 593 592 591 623 655 687 719 751 783 815 847 846 878 877 909 941 973 1005 1004 1003 
[DBG]  Original agent path length 100 je: 47
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 9: 287, 286, 285, 317, 349, 381, 380, 379, 378, 377, 376, 375, 407, 406, 406, 406, 405, 404, 403, 435, 467, 499, 498, 530, 529, 561, 561, 593, 592, 591, 623, 655, 687, 719, 751, 783, 815, 847, 846, 878, 877, 909, 941, 973, 1005, 1004, 1003, 
[DBG]  Path for agent 100 updated, resulting length: 47
[DBG]  Update the agent path 128 | Original local length: 1 | New local length: 1
[DBG]  agent 128 t=0 => decoded (sx,sy)=(4,3) => global_id=467
[DBG]  Complete path of agent 128:
[DBG]    Original: 604 603 571 570 538 506 505 504 503 502 501 469 437 405 404 404 403 435 467 499 498 530 529 528 496 464 463 462 494 526 525 524 523 522 521 520 519 551 550 549 548 547 
[DBG]    New:     604 603 571 570 538 506 505 504 503 502 501 469 437 405 404 404 403 435 467 499 498 530 529 528 496 464 463 462 494 526 525 524 523 522 521 520 519 551 550 549 548 547 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 604 603 571 570 538 506 505 504 503 502 501 469 437 405 404 404 403 435 
[DBG]    Local path (in submap): 467 
[DBG]    Suffix (out of submap): 499 498 530 529 528 496 464 463 462 494 526 525 524 523 522 521 520 519 551 550 549 548 547 
[DBG]  Original agent path length 128 je: 42
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 10: 604, 603, 571, 570, 538, 506, 505, 504, 503, 502, 501, 469, 437, 405, 404, 404, 403, 435, 467, 499, 498, 530, 529, 528, 496, 464, 463, 462, 494, 526, 525, 524, 523, 522, 521, 520, 519, 551, 550, 549, 548, 547, 
[DBG]  Path for agent 128 updated, resulting length: 42
[DBG]  Paths successfully updated.
[DBG]  (LNS.cpp) New path for agent 3: 
[DBG]  468, 468, 468, 468, 467, 466, 466, 466, 466, 466, 498, 498, 498, 498, 466, 465, 433, 401, 433, 465, 466, 467, 499, 498, 530, 529, 561, 593, 592, 591, 623, 655, 687, 719, 719, 751, 783, 815, 847, 879, 880, 912, 
[DBG]  (LNS.cpp) New path for agent 16: 
[DBG]  454, 422, 423, 424, 425, 426, 427, 428, 429, 430, 430, 431, 432, 400, 368, 367, 335, 336, 337, 338, 306, 274, 
[DBG]  (LNS.cpp) New path for agent 22: 
[DBG]  329, 329, 329, 329, 329, 329, 361, 362, 363, 395, 427, 428, 429, 430, 430, 431, 431, 432, 400, 368, 336, 335, 336, 337, 338, 339, 
[DBG]  (LNS.cpp) New path for agent 29: 
[DBG]  579, 580, 548, 549, 517, 485, 486, 487, 455, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 401, 402, 403, 404, 405, 373, 341, 309, 310, 311, 
[DBG]  (LNS.cpp) New path for agent 36: 
[DBG]  431, 431, 431, 431, 431, 430, 398, 366, 367, 368, 400, 401, 402, 402, 402, 402, 402, 403, 371, 
[DBG]  (LNS.cpp) New path for agent 43: 
[DBG]  414, 413, 381, 380, 379, 378, 377, 409, 408, 407, 406, 405, 404, 403, 435, 467, 466, 465, 464, 463, 431, 430, 462, 494, 526, 525, 524, 523, 522, 521, 520, 519, 551, 550, 549, 581, 613, 645, 677, 709, 741, 740, 739, 707, 
[DBG]  (LNS.cpp) New path for agent 62: 
[DBG]  753, 721, 720, 688, 687, 655, 623, 591, 592, 560, 528, 496, 464, 464, 432, 433, 401, 402, 402, 403, 404, 405, 406, 
[DBG]  (LNS.cpp) New path for agent 81: 
[DBG]  419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 431, 463, 464, 432, 433, 465, 466, 498, 530, 531, 563, 
[DBG]  (LNS.cpp) New path for agent 84: 
[DBG]  878, 846, 847, 815, 783, 784, 752, 720, 688, 689, 657, 625, 593, 561, 529, 530, 498, 466, 466, 467, 468, 469, 437, 438, 439, 407, 375, 343, 311, 312, 313, 281, 249, 217, 218, 186, 154, 154, 122, 90, 58, 26, 25, 
[DBG]  (LNS.cpp) New path for agent 100: 
[DBG]  287, 286, 285, 317, 349, 381, 380, 379, 378, 377, 376, 375, 407, 406, 406, 406, 405, 404, 403, 435, 467, 499, 498, 530, 529, 561, 561, 593, 592, 591, 623, 655, 687, 719, 751, 783, 815, 847, 846, 878, 877, 909, 941, 973, 1005, 1004, 1003, 
[DBG]  (LNS.cpp) New path for agent 128: 
[DBG]  604, 603, 571, 570, 538, 506, 505, 504, 503, 502, 501, 469, 437, 405, 404, 404, 403, 435, 467, 499, 498, 530, 529, 528, 496, 464, 463, 462, 494, 526, 525, 524, 523, 522, 521, 520, 519, 551, 550, 549, 548, 547, 
[DBG]  component_weights = {0.324914, 0.14777, 0.15453, 0.372787}
[DBG]  opSuccess value: 1
[STAT] neighbor.sum_of_costs before recomputation: 351
[STAT] neighbor.old_sum_of_costs before recomputation: 357
[STAT] sum_of_costs before recomputation: 4386
[DBG]  Validate solution immediately after SAT success.
[WARNING] Problem after SAT: Vertex conflict between agents 3 and 69 at location 719 at timestep 34
[DBG]  Attempting immediate repair via init_lns because problem occurred after SAT (should be applied only for conflicts...).
[DBG]  Passing 150 agents to init_lns (skip=true).
[DBG]  path_table contents for selected agents (neighbor.agents):
[DBG]    Agent 3 => controlling path length=42
[DBG]    Agent 16 => controlling path length=22
[DBG]    Agent 22 => controlling path length=26
[DBG]    Agent 29 => controlling path length=30
[DBG]    Agent 36 => controlling path length=19
[DBG]    Agent 43 => controlling path length=44
[DBG]    Agent 62 => controlling path length=23
[DBG]    Agent 81 => controlling path length=24
[DBG]    Agent 84 => controlling path length=43
[DBG]    Agent 100 => controlling path length=47
[DBG]    Agent 128 => controlling path length=42
[DBG]  hodnota skip_initial_solution=1
[DBG]  We skip initialSolution => call buildCollisionData()
[DBG]  buildCollisionData() called â€“ skip_initial_solution case.
[DBG]  Agents.size()=150, collision_graph.size()=150
[DBG]  agent 3 => updateCollidingPairs => foundCollision
[DBG]  agent 44 => updateCollidingPairs => foundCollision
[DBG]  agent 62 => updateCollidingPairs => foundCollision
[DBG]  agent 69 => updateCollidingPairs => foundCollision
[DBG]  agent 81 => updateCollidingPairs => foundCollision
[DBG]  agent 83 => updateCollidingPairs => foundCollision
[DBG]  agent 100 => updateCollidingPairs => foundCollision
[DBG]  agent 128 => updateCollidingPairs => foundCollision
[DBG]  Conflicting agent pairs:
[DBG]  agent 3 is in conflict with agent 69
[DBG]  agent 3 is in conflict with agent 83
[DBG]  agent 3 is in conflict with agent 100
[DBG]  agent 44 is in conflict with agent 62
[DBG]  agent 81 is in conflict with agent 128
[DBG]  buildCollisionData() => sum_of_costs=4380, num_of_colliding_pairs=5
[DBG]  buildCollisionData done => sum_of_costs=4380, num_of_colliding_pairs=5
[DBG]  sum_of_cost hodnota: 4380
[DBG]  After skip/init build => iteration_stats.back(): sum_of_costs=4380, collisions=5
[DEBUG] Using default neighbor generation strategy for conflicts: 0
[DEBUG] Using default neighbor generation strategy for conflicts: 1
[DEBUG] Using default neighbor generation strategy for conflicts: 2
	InitLNS(PP): runtime = 0.0149274, iterations = 4, colliding pairs = 0, initial colliding pairs = 5, solution cost = 4354, initial solution cost = 4380, failed iterations = 0
[DBG]  init_lns->sum_of_costs after init_lns->run: 4354
[DBG]  sum_of_costs after assignment from init_lns->run: 4354
[DBG]  Recomputing sum_of_cost by dividing neighbor.sum_of_costs and neighbor.old_sum_of_costs
[STAT] sum_of_costs after recomputation: 4354
[STAT] Iteration 86
[DBG]  Using SAT operator (destroy+repair SAT).
[DBG]  ====================
[DBG]  SAT destroy operator called.
[DBG]  SAT heuristic: 2
[DBG]  key_agent_id: 87
[DBG]  key_agent_id global path length: 32
[DBG]  Submap content (global positions):
[DBG]  582 583 584 585 586 
[DBG]  614 615 616 617 618 
[DBG]  646 647 648 649 650 
[DBG]  678 679 680 681 682 
[DBG]  710 711 712 713 714 
[DBG]  Map content with agents and obstacles:
[DBG]  . . . . X 
[DBG]  X A A . X 
[DBG]  . A A A A 
[DBG]  . X A X . 
[DBG]  . X . . A 
[DBG]  content of the map structure that we pass to the SAT solver:
[DBG]  1  1  1  1  -1  
[DBG]  -1  1  1  1  -1  
[DBG]  1  1  1  1  1  
[DBG]  1  -1  1  -1  1  
[DBG]  1  -1  1  1  1  
[DBG]  Identifying agents in a submap for rescheduling (when key_agent is there at the time 27):
[DBG]  Agent 19 found intervals in the sub-map:
[DBG]  
[DBG]  Agent 19 is not in sub-map at time 27 (intervals: 
[DBG]  )
[DBG]  Agent 20 found intervals in the sub-map:
[DBG]  
[DBG]  Agent 20 is not in sub-map at time 27 (intervals: 
[DBG]  )
[DBG]  Agent 65 found intervals in the sub-map:
[DBG]   [23..29]
[DBG]  Agent 65 (interval in submap: [23..29]) contains time 27, added to replan.
[DBG]  Agent 87 found intervals in the sub-map:
[DBG]   [19..31]
[DBG]  Agent 87 (interval in submap: [19..31]) contains time 27, added to replan.
[DBG]  Agent 101 found intervals in the sub-map:
[DBG]   [23..27]
[DBG]  Agent 101 (interval in submap: [23..27]) contains time 27, added to replan.
[DBG]  Agent 103 found intervals in the sub-map:
[DBG]   [23..25]
[DBG]  Agent 103 is not in sub-map at time 27 (intervals: 
[DBG]  [23..25] )
[DBG]  Agent 106 found intervals in the sub-map:
[DBG]   [24..31]
[DBG]  Agent 106 (interval in submap: [24..31]) contains time 27, added to replan.
[DBG]  Agent 125 found intervals in the sub-map:
[DBG]   [25..30]
[DBG]  Agent 125 (interval in submap: [25..30]) contains time 27, added to replan.
[DBG]  Agent 130 found intervals in the sub-map:
[DBG]   [20..28]
[DBG]  Agent 130 (interval in submap: [20..28]) contains time 27, added to replan.
[DBG]  Agent 135 found intervals in the sub-map:
[DBG]   [27..36]
[DBG]  Agent 135 (interval in submap: [27..36]) contains time 27, added to replan.
[DBG]  Agent 145 found intervals in the sub-map:
[DBG]   [26..29]
[DBG]  Agent 145 (interval in submap: [26..29]) contains time 27, added to replan.
[DBG]  Agent 65 | Start (global): 680 -> (local): (3, 2) at time 27 | Goal (global): 713 -> (local): (4, 3) at time 29
[DBG]  Agent 87 | Start (global): 648 -> (local): (2, 2) at time 27 | Goal (global): 714 -> (local): (4, 4) at time 31
[DBG]  Agent 101 | Start (global): 650 -> (local): (2, 4) at time 27 | Goal (global): 650 -> (local): (2, 4) at time 27
[DBG]  Agent 106 | Start (global): 616 -> (local): (1, 2) at time 27 | Goal (global): 713 -> (local): (4, 3) at time 31
[DBG]  Agent 125 | Start (global): 647 -> (local): (2, 1) at time 27 | Goal (global): 710 -> (local): (4, 0) at time 30
[DBG]  Agent 130 | Start (global): 649 -> (local): (2, 3) at time 27 | Goal (global): 650 -> (local): (2, 4) at time 28
[DBG]  Agent 135 | Start (global): 714 -> (local): (4, 4) at time 27 | Goal (global): 582 -> (local): (0, 0) at time 36
[DBG]  Agent 145 | Start (global): 615 -> (local): (1, 1) at time 27 | Goal (global): 646 -> (local): (2, 0) at time 29
[DBG]  [REPAIR] SAT destroy operator called.
[DBG]  [REPAIR] SAT operator â€“ launching subproblem FOR OPTIMIZATION.
[DBG]  Creating local paths (sx, sy) in the submap for T_sync = 27
[DBG]    Agent 65 (global paths from T=27 to 29) has local path: (3,2) (4,2) (4,3) 
[DBG]    Agent 87 (global paths from T=27 to 31) has local path: (2,2) (3,2) (4,2) (4,3) (4,4) 
[DBG]    Agent 101 (global paths from T=27 to 27) has local path: (2,4) 
[DBG]    Agent 106 (global paths from T=27 to 31) has local path: (1,2) (2,2) (3,2) (4,2) (4,3) 
[DBG]    Agent 125 (global paths from T=27 to 30) has local path: (2,1) (2,0) (3,0) (4,0) 
[DBG]    Agent 130 (global paths from T=27 to 28) has local path: (2,3) (2,4) 
[DBG]    Agent 135 (global paths from T=27 to 36) has local path: (4,4) (3,4) (2,4) (2,3) (1,3) (0,3) (0,2) (0,2) (0,1) (0,0) 
[DBG]    Agent 145 (global paths from T=27 to 29) has local path: (1,1) (2,1) (2,0) 
[DBG]  Checking input data for SAT solver:
[DBG]    - Number of agents to replan: 8
[DBG]  Agent 65 has the original local path length: 3 => Start (3,2), Goal (4,3)
[DBG]  Agent 87 has the original local path length: 5 => Start (2,2), Goal (4,4)
[DBG]  Agent 101 has the original local path length: 1 => Start (2,4), Goal (2,4)
[DBG]  Agent 106 has the original local path length: 5 => Start (1,2), Goal (4,3)
[DBG]  Agent 125 has the original local path length: 4 => Start (2,1), Goal (4,0)
[DBG]  Agent 130 has the original local path length: 2 => Start (2,3), Goal (2,4)
[DBG]  Agent 135 has the original local path length: 10 => Start (4,4), Goal (0,0)
[DBG]  Agent 145 has the original local path length: 3 => Start (1,1), Goal (2,0)
[DBG]  Start position: (3, 2), (2, 2), (2, 4), (1, 2), (2, 1), (2, 3), (4, 4), (1, 1), 
[DBG]  Goal position: (4, 3), (4, 4), (2, 4), (4, 3), (4, 0), (2, 4), (0, 0), (2, 0), 
[DBG]  SAT instance and solver created.
Currently solving
Instance name: scen
Map name: map
Encoding used: disappear_at_goal
SAT solver used: Kissat
Optimizing function: sum of costs
Number of agents: 8
Mks LB: 9
SoC LB: 32
Delta: 0
Remaining time: 300000 [ms]

Vertex conflict! Agents 0, 1, timestep 5, location 0
Swapping conflict! Agents 0, 1, timestep 5, edge (0,0)
Vertex conflict! Agents 0, 1, timestep 6, location 0
Swapping conflict! Agents 0, 1, timestep 6, edge (0,0)
Vertex conflict! Agents 0, 1, timestep 7, location 0
Swapping conflict! Agents 0, 1, timestep 7, edge (0,0)
Vertex conflict! Agents 0, 1, timestep 8, location 0
Vertex conflict! Agents 0, 2, timestep 3, location 0
Swapping conflict! Agents 0, 2, timestep 3, edge (0,0)
Vertex conflict! Agents 0, 2, timestep 4, location 0
Swapping conflict! Agents 0, 2, timestep 4, edge (0,0)
Vertex conflict! Agents 0, 2, timestep 5, location 0
Swapping conflict! Agents 0, 2, timestep 5, edge (0,0)
Vertex conflict! Agents 0, 2, timestep 6, location 0
Swapping conflict! Agents 0, 2, timestep 6, edge (0,0)
Vertex conflict! Agents 0, 2, timestep 7, location 0
Swapping conflict! Agents 0, 2, timestep 7, edge (0,0)
Vertex conflict! Agents 0, 2, timestep 8, location 0
Vertex conflict! Agents 0, 3, timestep 5, location 0
Swapping conflict! Agents 0, 3, timestep 5, edge (0,0)
Vertex conflict! Agents 0, 3, timestep 6, location 0
Swapping conflict! Agents 0, 3, timestep 6, edge (0,0)
Vertex conflict! Agents 0, 3, timestep 7, location 0
Swapping conflict! Agents 0, 3, timestep 7, edge (0,0)
Vertex conflict! Agents 0, 3, timestep 8, location 0
Vertex conflict! Agents 0, 4, timestep 4, location 0
Swapping conflict! Agents 0, 4, timestep 4, edge (0,0)
Vertex conflict! Agents 0, 4, timestep 5, location 0
Swapping conflict! Agents 0, 4, timestep 5, edge (0,0)
Vertex conflict! Agents 0, 4, timestep 6, location 0
Swapping conflict! Agents 0, 4, timestep 6, edge (0,0)
Vertex conflict! Agents 0, 4, timestep 7, location 0
Swapping conflict! Agents 0, 4, timestep 7, edge (0,0)
Vertex conflict! Agents 0, 4, timestep 8, location 0
Vertex conflict! Agents 0, 5, timestep 3, location 0
Swapping conflict! Agents 0, 5, timestep 3, edge (0,0)
Vertex conflict! Agents 0, 5, timestep 4, location 0
Swapping conflict! Agents 0, 5, timestep 4, edge (0,0)
Vertex conflict! Agents 0, 5, timestep 5, location 0
Swapping conflict! Agents 0, 5, timestep 5, edge (0,0)
Vertex conflict! Agents 0, 5, timestep 6, location 0
Swapping conflict! Agents 0, 5, timestep 6, edge (0,0)
Vertex conflict! Agents 0, 5, timestep 7, location 0
Swapping conflict! Agents 0, 5, timestep 7, edge (0,0)
Vertex conflict! Agents 0, 5, timestep 8, location 0
Vertex conflict! Agents 0, 6, timestep 8, location 0
Vertex conflict! Agents 0, 7, timestep 3, location 0
Swapping conflict! Agents 0, 7, timestep 3, edge (0,0)
Vertex conflict! Agents 0, 7, timestep 4, location 0
Swapping conflict! Agents 0, 7, timestep 4, edge (0,0)
Vertex conflict! Agents 0, 7, timestep 5, location 0
Swapping conflict! Agents 0, 7, timestep 5, edge (0,0)
Vertex conflict! Agents 0, 7, timestep 6, location 0
Swapping conflict! Agents 0, 7, timestep 6, edge (0,0)
Vertex conflict! Agents 0, 7, timestep 7, location 0
Swapping conflict! Agents 0, 7, timestep 7, edge (0,0)
Vertex conflict! Agents 0, 7, timestep 8, location 0
Vertex conflict! Agents 1, 2, timestep 5, location 0
Swapping conflict! Agents 1, 2, timestep 5, edge (0,0)
Vertex conflict! Agents 1, 2, timestep 6, location 0
Swapping conflict! Agents 1, 2, timestep 6, edge (0,0)
Vertex conflict! Agents 1, 2, timestep 7, location 0
Swapping conflict! Agents 1, 2, timestep 7, edge (0,0)
Vertex conflict! Agents 1, 2, timestep 8, location 0
Vertex conflict! Agents 1, 3, timestep 5, location 0
Swapping conflict! Agents 1, 3, timestep 5, edge (0,0)
Vertex conflict! Agents 1, 3, timestep 6, location 0
Swapping conflict! Agents 1, 3, timestep 6, edge (0,0)
Vertex conflict! Agents 1, 3, timestep 7, location 0
Swapping conflict! Agents 1, 3, timestep 7, edge (0,0)
Vertex conflict! Agents 1, 3, timestep 8, location 0
Vertex conflict! Agents 1, 4, timestep 5, location 0
Swapping conflict! Agents 1, 4, timestep 5, edge (0,0)
Vertex conflict! Agents 1, 4, timestep 6, location 0
Swapping conflict! Agents 1, 4, timestep 6, edge (0,0)
Vertex conflict! Agents 1, 4, timestep 7, location 0
Swapping conflict! Agents 1, 4, timestep 7, edge (0,0)
Vertex conflict! Agents 1, 4, timestep 8, location 0
Vertex conflict! Agents 1, 5, timestep 5, location 0
Swapping conflict! Agents 1, 5, timestep 5, edge (0,0)
Vertex conflict! Agents 1, 5, timestep 6, location 0
Swapping conflict! Agents 1, 5, timestep 6, edge (0,0)
Vertex conflict! Agents 1, 5, timestep 7, location 0
Swapping conflict! Agents 1, 5, timestep 7, edge (0,0)
Vertex conflict! Agents 1, 5, timestep 8, location 0
Vertex conflict! Agents 1, 6, timestep 8, location 0
Vertex conflict! Agents 1, 7, timestep 5, location 0
Swapping conflict! Agents 1, 7, timestep 5, edge (0,0)
Vertex conflict! Agents 1, 7, timestep 6, location 0
Swapping conflict! Agents 1, 7, timestep 6, edge (0,0)
Vertex conflict! Agents 1, 7, timestep 7, location 0
Swapping conflict! Agents 1, 7, timestep 7, edge (0,0)
Vertex conflict! Agents 1, 7, timestep 8, location 0
Vertex conflict! Agents 2, 3, timestep 5, location 0
Swapping conflict! Agents 2, 3, timestep 5, edge (0,0)
Vertex conflict! Agents 2, 3, timestep 6, location 0
Swapping conflict! Agents 2, 3, timestep 6, edge (0,0)
Vertex conflict! Agents 2, 3, timestep 7, location 0
Swapping conflict! Agents 2, 3, timestep 7, edge (0,0)
Vertex conflict! Agents 2, 3, timestep 8, location 0
Vertex conflict! Agents 2, 4, timestep 4, location 0
Swapping conflict! Agents 2, 4, timestep 4, edge (0,0)
Vertex conflict! Agents 2, 4, timestep 5, location 0
Swapping conflict! Agents 2, 4, timestep 5, edge (0,0)
Vertex conflict! Agents 2, 4, timestep 6, location 0
Swapping conflict! Agents 2, 4, timestep 6, edge (0,0)
Vertex conflict! Agents 2, 4, timestep 7, location 0
Swapping conflict! Agents 2, 4, timestep 7, edge (0,0)
Vertex conflict! Agents 2, 4, timestep 8, location 0
Vertex conflict! Agents 2, 5, timestep 2, location 0
Swapping conflict! Agents 2, 5, timestep 2, edge (0,0)
Vertex conflict! Agents 2, 5, timestep 3, location 0
Swapping conflict! Agents 2, 5, timestep 3, edge (0,0)
Vertex conflict! Agents 2, 5, timestep 4, location 0
Swapping conflict! Agents 2, 5, timestep 4, edge (0,0)
Vertex conflict! Agents 2, 5, timestep 5, location 0
Swapping conflict! Agents 2, 5, timestep 5, edge (0,0)
Vertex conflict! Agents 2, 5, timestep 6, location 0
Swapping conflict! Agents 2, 5, timestep 6, edge (0,0)
Vertex conflict! Agents 2, 5, timestep 7, location 0
Swapping conflict! Agents 2, 5, timestep 7, edge (0,0)
Vertex conflict! Agents 2, 5, timestep 8, location 0
Vertex conflict! Agents 2, 6, timestep 8, location 0
Vertex conflict! Agents 2, 7, timestep 3, location 0
Swapping conflict! Agents 2, 7, timestep 3, edge (0,0)
Vertex conflict! Agents 2, 7, timestep 4, location 0
Swapping conflict! Agents 2, 7, timestep 4, edge (0,0)
Vertex conflict! Agents 2, 7, timestep 5, location 0
Swapping conflict! Agents 2, 7, timestep 5, edge (0,0)
Vertex conflict! Agents 2, 7, timestep 6, location 0
Swapping conflict! Agents 2, 7, timestep 6, edge (0,0)
Vertex conflict! Agents 2, 7, timestep 7, location 0
Swapping conflict! Agents 2, 7, timestep 7, edge (0,0)
Vertex conflict! Agents 2, 7, timestep 8, location 0
Vertex conflict! Agents 3, 4, timestep 5, location 0
Swapping conflict! Agents 3, 4, timestep 5, edge (0,0)
Vertex conflict! Agents 3, 4, timestep 6, location 0
Swapping conflict! Agents 3, 4, timestep 6, edge (0,0)
Vertex conflict! Agents 3, 4, timestep 7, location 0
Swapping conflict! Agents 3, 4, timestep 7, edge (0,0)
Vertex conflict! Agents 3, 4, timestep 8, location 0
Vertex conflict! Agents 3, 5, timestep 5, location 0
Swapping conflict! Agents 3, 5, timestep 5, edge (0,0)
Vertex conflict! Agents 3, 5, timestep 6, location 0
Swapping conflict! Agents 3, 5, timestep 6, edge (0,0)
Vertex conflict! Agents 3, 5, timestep 7, location 0
Swapping conflict! Agents 3, 5, timestep 7, edge (0,0)
Vertex conflict! Agents 3, 5, timestep 8, location 0
Vertex conflict! Agents 3, 6, timestep 8, location 0
Vertex conflict! Agents 3, 7, timestep 5, location 0
Swapping conflict! Agents 3, 7, timestep 5, edge (0,0)
Vertex conflict! Agents 3, 7, timestep 6, location 0
Swapping conflict! Agents 3, 7, timestep 6, edge (0,0)
Vertex conflict! Agents 3, 7, timestep 7, location 0
Swapping conflict! Agents 3, 7, timestep 7, edge (0,0)
Vertex conflict! Agents 3, 7, timestep 8, location 0
Vertex conflict! Agents 4, 5, timestep 4, location 0
Swapping conflict! Agents 4, 5, timestep 4, edge (0,0)
Vertex conflict! Agents 4, 5, timestep 5, location 0
Swapping conflict! Agents 4, 5, timestep 5, edge (0,0)
Vertex conflict! Agents 4, 5, timestep 6, location 0
Swapping conflict! Agents 4, 5, timestep 6, edge (0,0)
Vertex conflict! Agents 4, 5, timestep 7, location 0
Swapping conflict! Agents 4, 5, timestep 7, edge (0,0)
Vertex conflict! Agents 4, 5, timestep 8, location 0
Vertex conflict! Agents 4, 6, timestep 8, location 0
Vertex conflict! Agents 4, 7, timestep 4, location 0
Swapping conflict! Agents 4, 7, timestep 4, edge (0,0)
Vertex conflict! Agents 4, 7, timestep 5, location 0
Swapping conflict! Agents 4, 7, timestep 5, edge (0,0)
Vertex conflict! Agents 4, 7, timestep 6, location 0
Swapping conflict! Agents 4, 7, timestep 6, edge (0,0)
Vertex conflict! Agents 4, 7, timestep 7, location 0
Swapping conflict! Agents 4, 7, timestep 7, edge (0,0)
Vertex conflict! Agents 4, 7, timestep 8, location 0
Vertex conflict! Agents 5, 6, timestep 8, location 0
Vertex conflict! Agents 5, 7, timestep 3, location 0
Swapping conflict! Agents 5, 7, timestep 3, edge (0,0)
Vertex conflict! Agents 5, 7, timestep 4, location 0
Swapping conflict! Agents 5, 7, timestep 4, edge (0,0)
Vertex conflict! Agents 5, 7, timestep 5, location 0
Swapping conflict! Agents 5, 7, timestep 5, edge (0,0)
Vertex conflict! Agents 5, 7, timestep 6, location 0
Swapping conflict! Agents 5, 7, timestep 6, edge (0,0)
Vertex conflict! Agents 5, 7, timestep 7, location 0
Swapping conflict! Agents 5, 7, timestep 7, edge (0,0)
Vertex conflict! Agents 5, 7, timestep 8, location 0
Vertex conflict! Agents 6, 7, timestep 8, location 0
Found plan [agents = 8] [timesteps = 9]
Agent #0 : 13 16 17 0 0 0 0 0 0 
Agent #1 : 9 13 16 17 18 0 0 0 0 
Agent #2 : 11 0 0 0 0 0 0 0 0 
Agent #3 : 5 9 13 16 17 0 0 0 0 
Agent #4 : 8 7 12 15 0 0 0 0 0 
Agent #5 : 10 11 0 0 0 0 0 0 0 
Agent #6 : 18 14 11 10 9 8 4 1 0 
Agent #7 : 4 8 7 0 0 0 0 0 0 

[STAT] Solver returned: 0
[DBG]  Agent (index) 65 | New local path (submap idx):
[DBG]  13 16 17 
[DBG]  Agent (index) 87 | New local path (submap idx):
[DBG]  9 13 16 17 18 
[DBG]  Agent (index) 101 | New local path (submap idx):
[DBG]  11 
[DBG]  Agent (index) 106 | New local path (submap idx):
[DBG]  5 9 13 16 17 
[DBG]  Agent (index) 125 | New local path (submap idx):
[DBG]  8 7 12 15 
[DBG]  Agent (index) 130 | New local path (submap idx):
[DBG]  10 11 
[DBG]  Agent (index) 135 | New local path (submap idx):
[DBG]  18 14 11 10 9 8 4 1 0 
[DBG]  Agent (index) 145 | New local path (submap idx):
[DBG]  4 8 7 
[DBG]  Update the agent path 65 | Original local length: 3 | New local length: 3
[DBG]  agent 65 t=0 => decoded (sx,sy)=(3,2) => global_id=680
[DBG]  agent 65 t=1 => decoded (sx,sy)=(4,2) => global_id=712
[DBG]  agent 65 t=2 => decoded (sx,sy)=(4,3) => global_id=713
[DBG]  Complete path of agent 65:
[DBG]    Original: 66 98 99 131 163 164 196 228 260 261 293 325 326 358 390 422 454 486 485 517 549 550 551 583 615 616 648 680 712 713 745 746 778 779 811 843 
[DBG]    New:     66 98 99 131 163 164 196 228 260 261 293 325 326 358 390 422 454 486 485 517 549 550 551 583 615 616 648 680 712 713 745 746 778 779 811 843 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 66 98 99 131 163 164 196 228 260 261 293 325 326 358 390 422 454 486 485 517 549 550 551 583 615 616 648 
[DBG]    Local path (in submap): 680 712 713 
[DBG]    Suffix (out of submap): 745 746 778 779 811 843 
[DBG]  Original agent path length 65 je: 36
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 0: 66, 98, 99, 131, 163, 164, 196, 228, 260, 261, 293, 325, 326, 358, 390, 422, 454, 486, 485, 517, 549, 550, 551, 583, 615, 616, 648, 680, 712, 713, 745, 746, 778, 779, 811, 843, 
[DBG]  Path for agent 65 updated, resulting length: 36
[DBG]  Update the agent path 87 | Original local length: 5 | New local length: 5
[DBG]  agent 87 t=0 => decoded (sx,sy)=(2,2) => global_id=648
[DBG]  agent 87 t=1 => decoded (sx,sy)=(3,2) => global_id=680
[DBG]  agent 87 t=2 => decoded (sx,sy)=(4,2) => global_id=712
[DBG]  agent 87 t=3 => decoded (sx,sy)=(4,3) => global_id=713
[DBG]  agent 87 t=4 => decoded (sx,sy)=(4,4) => global_id=714
[DBG]  Complete path of agent 87:
[DBG]    Original: 231 232 264 264 263 295 327 326 358 390 422 454 486 485 484 516 548 549 581 582 583 615 647 647 647 615 616 648 680 712 713 714 
[DBG]    New:     231 232 264 264 263 295 327 326 358 390 422 454 486 485 484 516 548 549 581 582 583 615 647 647 647 615 616 648 680 712 713 714 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 231 232 264 264 263 295 327 326 358 390 422 454 486 485 484 516 548 549 581 582 583 615 647 647 647 615 616 
[DBG]    Local path (in submap): 648 680 712 713 714 
[DBG]    Suffix (out of submap): 
[DBG]  Original agent path length 87 je: 32
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 1: 231, 232, 264, 264, 263, 295, 327, 326, 358, 390, 422, 454, 486, 485, 484, 516, 548, 549, 581, 582, 583, 615, 647, 647, 647, 615, 616, 648, 680, 712, 713, 714, 
[DBG]  Path for agent 87 updated, resulting length: 32
[DBG]  Update the agent path 101 | Original local length: 1 | New local length: 1
[DBG]  agent 101 t=0 => decoded (sx,sy)=(2,4) => global_id=650
[DBG]  Complete path of agent 101:
[DBG]    Original: 985 984 952 920 888 887 886 885 884 883 882 850 849 848 847 815 814 813 781 780 779 747 715 714 714 714 682 650 651 619 587 588 556 524 492 491 490 489 457 425 393 361 360 328 296 264 232 200 168 
[DBG]    New:     985 984 952 920 888 887 886 885 884 883 882 850 849 848 847 815 814 813 781 780 779 747 715 714 714 714 682 650 651 619 587 588 556 524 492 491 490 489 457 425 393 361 360 328 296 264 232 200 168 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 985 984 952 920 888 887 886 885 884 883 882 850 849 848 847 815 814 813 781 780 779 747 715 714 714 714 682 
[DBG]    Local path (in submap): 650 
[DBG]    Suffix (out of submap): 651 619 587 588 556 524 492 491 490 489 457 425 393 361 360 328 296 264 232 200 168 
[DBG]  Original agent path length 101 je: 49
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 2: 985, 984, 952, 920, 888, 887, 886, 885, 884, 883, 882, 850, 849, 848, 847, 815, 814, 813, 781, 780, 779, 747, 715, 714, 714, 714, 682, 650, 651, 619, 587, 588, 556, 524, 492, 491, 490, 489, 457, 425, 393, 361, 360, 328, 296, 264, 232, 200, 168, 
[DBG]  Path for agent 101 updated, resulting length: 49
[DBG]  Update the agent path 106 | Original local length: 5 | New local length: 5
[DBG]  agent 106 t=0 => decoded (sx,sy)=(1,2) => global_id=616
[DBG]  agent 106 t=1 => decoded (sx,sy)=(2,2) => global_id=648
[DBG]  agent 106 t=2 => decoded (sx,sy)=(3,2) => global_id=680
[DBG]  agent 106 t=3 => decoded (sx,sy)=(4,2) => global_id=712
[DBG]  agent 106 t=4 => decoded (sx,sy)=(4,3) => global_id=713
[DBG]  Complete path of agent 106:
[DBG]    Original: 244 243 242 241 240 239 271 303 335 367 366 398 430 462 494 526 525 524 523 522 521 520 519 551 583 584 584 616 648 680 712 713 745 746 747 715 
[DBG]    New:     244 243 242 241 240 239 271 303 335 367 366 398 430 462 494 526 525 524 523 522 521 520 519 551 583 584 584 616 648 680 712 713 745 746 747 715 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 244 243 242 241 240 239 271 303 335 367 366 398 430 462 494 526 525 524 523 522 521 520 519 551 583 584 584 
[DBG]    Local path (in submap): 616 648 680 712 713 
[DBG]    Suffix (out of submap): 745 746 747 715 
[DBG]  Original agent path length 106 je: 36
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 3: 244, 243, 242, 241, 240, 239, 271, 303, 335, 367, 366, 398, 430, 462, 494, 526, 525, 524, 523, 522, 521, 520, 519, 551, 583, 584, 584, 616, 648, 680, 712, 713, 745, 746, 747, 715, 
[DBG]  Path for agent 106 updated, resulting length: 36
[DBG]  Update the agent path 125 | Original local length: 4 | New local length: 4
[DBG]  agent 125 t=0 => decoded (sx,sy)=(2,1) => global_id=647
[DBG]  agent 125 t=1 => decoded (sx,sy)=(2,0) => global_id=646
[DBG]  agent 125 t=2 => decoded (sx,sy)=(3,0) => global_id=678
[DBG]  agent 125 t=3 => decoded (sx,sy)=(4,0) => global_id=710
[DBG]  Complete path of agent 125:
[DBG]    Original: 430 398 366 365 333 333 301 301 301 300 268 267 266 298 297 329 361 393 425 457 489 521 520 519 551 583 615 647 646 678 710 742 774 775 
[DBG]    New:     430 398 366 365 333 333 301 301 301 300 268 267 266 298 297 329 361 393 425 457 489 521 520 519 551 583 615 647 646 678 710 742 774 775 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 430 398 366 365 333 333 301 301 301 300 268 267 266 298 297 329 361 393 425 457 489 521 520 519 551 583 615 
[DBG]    Local path (in submap): 647 646 678 710 
[DBG]    Suffix (out of submap): 742 774 775 
[DBG]  Original agent path length 125 je: 34
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 4: 430, 398, 366, 365, 333, 333, 301, 301, 301, 300, 268, 267, 266, 298, 297, 329, 361, 393, 425, 457, 489, 521, 520, 519, 551, 583, 615, 647, 646, 678, 710, 742, 774, 775, 
[DBG]  Path for agent 125 updated, resulting length: 34
[DBG]  Update the agent path 130 | Original local length: 2 | New local length: 2
[DBG]  agent 130 t=0 => decoded (sx,sy)=(2,3) => global_id=649
[DBG]  agent 130 t=1 => decoded (sx,sy)=(2,4) => global_id=650
[DBG]  Complete path of agent 130:
[DBG]    Original: 944 976 976 976 975 974 973 941 940 908 876 875 843 811 811 811 779 778 746 745 713 712 680 648 616 617 617 649 650 651 
[DBG]    New:     944 976 976 976 975 974 973 941 940 908 876 875 843 811 811 811 779 778 746 745 713 712 680 648 616 617 617 649 650 651 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 944 976 976 976 975 974 973 941 940 908 876 875 843 811 811 811 779 778 746 745 713 712 680 648 616 617 617 
[DBG]    Local path (in submap): 649 650 
[DBG]    Suffix (out of submap): 651 
[DBG]  Original agent path length 130 je: 30
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 5: 944, 976, 976, 976, 975, 974, 973, 941, 940, 908, 876, 875, 843, 811, 811, 811, 779, 778, 746, 745, 713, 712, 680, 648, 616, 617, 617, 649, 650, 651, 
[DBG]  Path for agent 130 updated, resulting length: 30
[DBG]  Update the agent path 135 | Original local length: 10 | New local length: 9
[DBG]  agent 135 t=0 => decoded (sx,sy)=(4,4) => global_id=714
[DBG]  agent 135 t=1 => decoded (sx,sy)=(3,4) => global_id=682
[DBG]  agent 135 t=2 => decoded (sx,sy)=(2,4) => global_id=650
[DBG]  agent 135 t=3 => decoded (sx,sy)=(2,3) => global_id=649
[DBG]  agent 135 t=4 => decoded (sx,sy)=(2,2) => global_id=648
[DBG]  agent 135 t=5 => decoded (sx,sy)=(2,1) => global_id=647
[DBG]  agent 135 t=6 => decoded (sx,sy)=(1,1) => global_id=615
[DBG]  agent 135 t=7 => decoded (sx,sy)=(0,1) => global_id=583
[DBG]  agent 135 t=8 => decoded (sx,sy)=(0,0) => global_id=582
[DBG]  Complete path of agent 135:
[DBG]    Original: 696 728 729 761 793 792 824 823 822 821 820 819 818 850 849 848 847 879 878 877 876 875 843 811 779 747 746 714 682 650 649 617 585 584 584 583 582 581 580 548 516 515 483 482 450 449 448 416 384 
[DBG]    New:     696 728 729 761 793 792 824 823 822 821 820 819 818 850 849 848 847 879 878 877 876 875 843 811 779 747 746 714 682 650 649 648 647 615 583 582 581 580 548 516 515 483 482 450 449 448 416 384 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 696 728 729 761 793 792 824 823 822 821 820 819 818 850 849 848 847 879 878 877 876 875 843 811 779 747 746 
[DBG]    Local path (in submap): 714 682 650 649 648 647 615 583 582 581 
[DBG]    Suffix (out of submap): 580 548 516 515 483 482 450 449 448 416 384 
[DBG]  Original agent path length 135 je: 49
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 6: 696, 728, 729, 761, 793, 792, 824, 823, 822, 821, 820, 819, 818, 850, 849, 848, 847, 879, 878, 877, 876, 875, 843, 811, 779, 747, 746, 714, 682, 650, 649, 648, 647, 615, 583, 582, 581, 580, 548, 516, 515, 483, 482, 450, 449, 448, 416, 384, 
[DBG]  Path for agent 135 updated, resulting length: 48
[DBG]  Update the agent path 145 | Original local length: 3 | New local length: 3
[DBG]  agent 145 t=0 => decoded (sx,sy)=(1,1) => global_id=615
[DBG]  agent 145 t=1 => decoded (sx,sy)=(2,1) => global_id=647
[DBG]  agent 145 t=2 => decoded (sx,sy)=(2,0) => global_id=646
[DBG]  Complete path of agent 145:
[DBG]    Original: 335 303 271 271 271 271 270 269 268 267 267 266 298 330 330 330 329 361 393 425 457 489 521 520 519 551 583 615 647 646 
[DBG]    New:     335 303 271 271 271 271 270 269 268 267 267 266 298 330 330 330 329 361 393 425 457 489 521 520 519 551 583 615 647 646 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 335 303 271 271 271 271 270 269 268 267 267 266 298 330 330 330 329 361 393 425 457 489 521 520 519 551 583 
[DBG]    Local path (in submap): 615 647 646 
[DBG]    Suffix (out of submap): 
[DBG]  Original agent path length 145 je: 30
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 7: 335, 303, 271, 271, 271, 271, 270, 269, 268, 267, 267, 266, 298, 330, 330, 330, 329, 361, 393, 425, 457, 489, 521, 520, 519, 551, 583, 615, 647, 646, 
[DBG]  Path for agent 145 updated, resulting length: 30
[DBG]  Paths successfully updated.
[DBG]  (LNS.cpp) New path for agent 65: 
[DBG]  66, 98, 99, 131, 163, 164, 196, 228, 260, 261, 293, 325, 326, 358, 390, 422, 454, 486, 485, 517, 549, 550, 551, 583, 615, 616, 648, 680, 712, 713, 745, 746, 778, 779, 811, 843, 
[DBG]  (LNS.cpp) New path for agent 87: 
[DBG]  231, 232, 264, 264, 263, 295, 327, 326, 358, 390, 422, 454, 486, 485, 484, 516, 548, 549, 581, 582, 583, 615, 647, 647, 647, 615, 616, 648, 680, 712, 713, 714, 
[DBG]  (LNS.cpp) New path for agent 101: 
[DBG]  985, 984, 952, 920, 888, 887, 886, 885, 884, 883, 882, 850, 849, 848, 847, 815, 814, 813, 781, 780, 779, 747, 715, 714, 714, 714, 682, 650, 651, 619, 587, 588, 556, 524, 492, 491, 490, 489, 457, 425, 393, 361, 360, 328, 296, 264, 232, 200, 168, 
[DBG]  (LNS.cpp) New path for agent 106: 
[DBG]  244, 243, 242, 241, 240, 239, 271, 303, 335, 367, 366, 398, 430, 462, 494, 526, 525, 524, 523, 522, 521, 520, 519, 551, 583, 584, 584, 616, 648, 680, 712, 713, 745, 746, 747, 715, 
[DBG]  (LNS.cpp) New path for agent 125: 
[DBG]  430, 398, 366, 365, 333, 333, 301, 301, 301, 300, 268, 267, 266, 298, 297, 329, 361, 393, 425, 457, 489, 521, 520, 519, 551, 583, 615, 647, 646, 678, 710, 742, 774, 775, 
[DBG]  (LNS.cpp) New path for agent 130: 
[DBG]  944, 976, 976, 976, 975, 974, 973, 941, 940, 908, 876, 875, 843, 811, 811, 811, 779, 778, 746, 745, 713, 712, 680, 648, 616, 617, 617, 649, 650, 651, 
[DBG]  (LNS.cpp) New path for agent 135: 
[DBG]  696, 728, 729, 761, 793, 792, 824, 823, 822, 821, 820, 819, 818, 850, 849, 848, 847, 879, 878, 877, 876, 875, 843, 811, 779, 747, 746, 714, 682, 650, 649, 648, 647, 615, 583, 582, 581, 580, 548, 516, 515, 483, 482, 450, 449, 448, 416, 384, 
[DBG]  (LNS.cpp) New path for agent 145: 
[DBG]  335, 303, 271, 271, 271, 271, 270, 269, 268, 267, 267, 266, 298, 330, 330, 330, 329, 361, 393, 425, 457, 489, 521, 520, 519, 551, 583, 615, 647, 646, 
[DBG]  component_weights = {0.322456, 0.146652, 0.153361, 0.377531}
[DBG]  opSuccess value: 1
[STAT] neighbor.sum_of_costs before recomputation: 287
[STAT] neighbor.old_sum_of_costs before recomputation: 288
[STAT] sum_of_costs before recomputation: 4354
[DBG]  Validate solution immediately after SAT success.
[WARNING] Problem after SAT: Vertex conflict between agents 43 and 135 at location 583 at timestep 34
[DBG]  Attempting immediate repair via init_lns because problem occurred after SAT (should be applied only for conflicts...).
[DBG]  Passing 150 agents to init_lns (skip=true).
[DBG]  path_table contents for selected agents (neighbor.agents):
[DBG]    Agent 65 => controlling path length=36
[DBG]    Agent 87 => controlling path length=32
[DBG]    Agent 101 => controlling path length=49
[DBG]    Agent 106 => controlling path length=36
[DBG]    Agent 125 => controlling path length=34
[DBG]    Agent 130 => controlling path length=30
[DBG]    Agent 135 => controlling path length=48
[DBG]    Agent 145 => controlling path length=30
[DBG]  hodnota skip_initial_solution=1
[DBG]  We skip initialSolution => call buildCollisionData()
[DBG]  buildCollisionData() called â€“ skip_initial_solution case.
[DBG]  Agents.size()=150, collision_graph.size()=150
[DBG]  agent 43 => updateCollidingPairs => foundCollision
[DBG]  agent 131 => updateCollidingPairs => foundCollision
[DBG]  agent 135 => updateCollidingPairs => foundCollision
[DBG]  Conflicting agent pairs:
[DBG]  agent 43 is in conflict with agent 135
[DBG]  agent 131 is in conflict with agent 135
[DBG]  buildCollisionData() => sum_of_costs=4353, num_of_colliding_pairs=2
[DBG]  buildCollisionData done => sum_of_costs=4353, num_of_colliding_pairs=2
[DBG]  sum_of_cost hodnota: 4353
[DBG]  After skip/init build => iteration_stats.back(): sum_of_costs=4353, collisions=2
[DEBUG] Using default neighbor generation strategy for conflicts: 0
	InitLNS(PP): runtime = 0.00454338, iterations = 2, colliding pairs = 0, initial colliding pairs = 2, solution cost = 4361, initial solution cost = 4353, failed iterations = 0
[DBG]  init_lns->sum_of_costs after init_lns->run: 4361
[DBG]  sum_of_costs after assignment from init_lns->run: 4361
[DBG]  Recomputing sum_of_cost by dividing neighbor.sum_of_costs and neighbor.old_sum_of_costs
[STAT] sum_of_costs after recomputation: 4361
[STAT] Iteration 87
[DBG]  Using SAT operator (destroy+repair SAT).
[DBG]  ====================
[DBG]  SAT destroy operator called.
[DBG]  SAT heuristic: 2
[DBG]  key_agent_id: 138
[DBG]  key_agent_id global path length: 7
[DBG]  Submap content (global positions):
[DBG]  133 134 135 136 137 
[DBG]  165 166 167 168 169 
[DBG]  197 198 199 200 201 
[DBG]  229 230 231 232 233 
[DBG]  261 262 263 264 265 
[DBG]  Map content with agents and obstacles:
[DBG]  . . . . . 
[DBG]  . X . . X 
[DBG]  . X A A X 
[DBG]  X . A . . 
[DBG]  A X . . . 
[DBG]  content of the map structure that we pass to the SAT solver:
[DBG]  1  1  1  1  1  
[DBG]  1  -1  1  1  -1  
[DBG]  1  -1  1  1  -1  
[DBG]  -1  1  1  1  1  
[DBG]  1  -1  1  1  1  
[DBG]  Identifying agents in a submap for rescheduling (when key_agent is there at the time 5):
[DBG]  Agent 9 found intervals in the sub-map:
[DBG]   [2..12]
[DBG]  Agent 9 (interval in submap: [2..12]) contains time 5, added to replan.
[DBG]  Agent 22 found intervals in the sub-map:
[DBG]  
[DBG]  Agent 22 is not in sub-map at time 5 (intervals: 
[DBG]  )
[DBG]  Agent 59 found intervals in the sub-map:
[DBG]   [5..5]
[DBG]  Agent 59 (interval in submap: [5..5]) contains time 5, added to replan.
[DBG]  Agent 87 found intervals in the sub-map:
[DBG]   [0..4]
[DBG]  Agent 87 is not in sub-map at time 5 (intervals: 
[DBG]  [0..4] )
[DBG]  Agent 103 found intervals in the sub-map:
[DBG]   [3..8]
[DBG]  Agent 103 (interval in submap: [3..8]) contains time 5, added to replan.
[DBG]  Agent 115 found intervals in the sub-map:
[DBG]   [20..20]
[DBG]  Agent 115 is not in sub-map at time 5 (intervals: 
[DBG]  [20..20] )
[DBG]  Agent 138 found intervals in the sub-map:
[DBG]   [3..6]
[DBG]  Agent 138 (interval in submap: [3..6]) contains time 5, added to replan.
[DBG]  Agent 9 | Start (global): 231 -> (local): (3, 2) at time 5 | Goal (global): 133 -> (local): (0, 0) at time 12
[DBG]  Agent 59 | Start (global): 261 -> (local): (4, 0) at time 5 | Goal (global): 261 -> (local): (4, 0) at time 5
[DBG]  Agent 103 | Start (global): 200 -> (local): (2, 3) at time 5 | Goal (global): 263 -> (local): (4, 2) at time 8
[DBG]  Agent 138 | Start (global): 199 -> (local): (2, 2) at time 5 | Goal (global): 167 -> (local): (1, 2) at time 6
[DBG]  [REPAIR] SAT destroy operator called.
[DBG]  [REPAIR] SAT operator â€“ launching subproblem FOR OPTIMIZATION.
[DBG]  Creating local paths (sx, sy) in the submap for T_sync = 5
[DBG]    Agent 9 (global paths from T=5 to 12) has local path: (3,2) (2,2) (2,3) (1,3) (0,3) (0,2) (0,1) (0,0) 
[DBG]    Agent 59 (global paths from T=5 to 5) has local path: (4,0) 
[DBG]    Agent 103 (global paths from T=5 to 8) has local path: (2,3) (3,3) (3,2) (4,2) 
[DBG]    Agent 138 (global paths from T=5 to 6) has local path: (2,2) (1,2) 
[DBG]  Checking input data for SAT solver:
[DBG]    - Number of agents to replan: 4
[DBG]  Agent 9 has the original local path length: 8 => Start (3,2), Goal (0,0)
[DBG]  Agent 59 has the original local path length: 1 => Start (4,0), Goal (4,0)
[DBG]  Agent 103 has the original local path length: 4 => Start (2,3), Goal (4,2)
[DBG]  Agent 138 has the original local path length: 2 => Start (2,2), Goal (1,2)
[DBG]  Start position: (3, 2), (4, 0), (2, 3), (2, 2), 
[DBG]  Goal position: (0, 0), (4, 0), (4, 2), (1, 2), 
[DBG]  SAT instance and solver created.
Currently solving
Instance name: scen
Map name: map
Encoding used: disappear_at_goal
SAT solver used: Kissat
Optimizing function: sum of costs
Number of agents: 4
Mks LB: 6
SoC LB: 13
Delta: 0
Remaining time: 300000 [ms]

Vertex conflict! Agents 0, 1, timestep 5, location 0
Vertex conflict! Agents 0, 2, timestep 5, location 0
Vertex conflict! Agents 0, 3, timestep 5, location 0
Vertex conflict! Agents 1, 2, timestep 4, location 0
Swapping conflict! Agents 1, 2, timestep 4, edge (0,0)
Vertex conflict! Agents 1, 2, timestep 5, location 0
Vertex conflict! Agents 1, 3, timestep 2, location 0
Swapping conflict! Agents 1, 3, timestep 2, edge (0,0)
Vertex conflict! Agents 1, 3, timestep 3, location 0
Swapping conflict! Agents 1, 3, timestep 3, edge (0,0)
Vertex conflict! Agents 1, 3, timestep 4, location 0
Swapping conflict! Agents 1, 3, timestep 4, edge (0,0)
Vertex conflict! Agents 1, 3, timestep 5, location 0
Vertex conflict! Agents 2, 3, timestep 4, location 0
Swapping conflict! Agents 2, 3, timestep 4, edge (0,0)
Vertex conflict! Agents 2, 3, timestep 5, location 0
Found plan [agents = 4] [timesteps = 6]
Agent #0 : 12 9 6 2 1 0 
Agent #1 : 15 0 0 0 0 0 
Agent #2 : 10 13 17 16 0 0 
Agent #3 : 9 6 0 0 0 0 

[STAT] Solver returned: 0
[DBG]  Agent (index) 9 | New local path (submap idx):
[DBG]  12 9 6 2 1 0 
[DBG]  Agent (index) 59 | New local path (submap idx):
[DBG]  15 
[DBG]  Agent (index) 103 | New local path (submap idx):
[DBG]  10 13 17 16 
[DBG]  Agent (index) 138 | New local path (submap idx):
[DBG]  9 6 
[DBG]  Update the agent path 9 | Original local length: 8 | New local length: 6
[DBG]  agent 9 t=0 => decoded (sx,sy)=(3,2) => global_id=231
[DBG]  agent 9 t=1 => decoded (sx,sy)=(2,2) => global_id=199
[DBG]  agent 9 t=2 => decoded (sx,sy)=(1,2) => global_id=167
[DBG]  agent 9 t=3 => decoded (sx,sy)=(0,2) => global_id=135
[DBG]  agent 9 t=4 => decoded (sx,sy)=(0,1) => global_id=134
[DBG]  agent 9 t=5 => decoded (sx,sy)=(0,0) => global_id=133
[DBG]  Complete path of agent 9:
[DBG]    Original: 235 234 233 232 232 231 199 200 168 136 135 134 133 132 131 99 98 97 96 
[DBG]    New:     235 234 233 232 232 231 199 167 135 134 133 132 131 99 98 97 96 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 235 234 233 232 232 
[DBG]    Local path (in submap): 231 199 167 135 134 133 132 131 
[DBG]    Suffix (out of submap): 99 98 97 96 
[DBG]  Original agent path length 9 je: 19
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 0: 235, 234, 233, 232, 232, 231, 199, 167, 135, 134, 133, 132, 131, 99, 98, 97, 96, 
[DBG]  Path for agent 9 updated, resulting length: 17
[DBG]  Update the agent path 59 | Original local length: 1 | New local length: 1
[DBG]  agent 59 t=0 => decoded (sx,sy)=(4,0) => global_id=261
[DBG]  Complete path of agent 59:
[DBG]    Original: 256 257 258 259 260 261 293 294 295 327 328 329 361 393 425 426 427 428 429 430 462 494 526 558 590 622 623 655 687 719 719 751 783 815 847 848 880 881 882 883 884 916 917 
[DBG]    New:     256 257 258 259 260 261 293 294 295 327 328 329 361 393 425 426 427 428 429 430 462 494 526 558 590 622 623 655 687 719 719 751 783 815 847 848 880 881 882 883 884 916 917 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 256 257 258 259 260 
[DBG]    Local path (in submap): 261 
[DBG]    Suffix (out of submap): 293 294 295 327 328 329 361 393 425 426 427 428 429 430 462 494 526 558 590 622 623 655 687 719 719 751 783 815 847 848 880 881 882 883 884 916 917 
[DBG]  Original agent path length 59 je: 43
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 1: 256, 257, 258, 259, 260, 261, 293, 294, 295, 327, 328, 329, 361, 393, 425, 426, 427, 428, 429, 430, 462, 494, 526, 558, 590, 622, 623, 655, 687, 719, 719, 751, 783, 815, 847, 848, 880, 881, 882, 883, 884, 916, 917, 
[DBG]  Path for agent 59 updated, resulting length: 43
[DBG]  Update the agent path 103 | Original local length: 4 | New local length: 4
[DBG]  agent 103 t=0 => decoded (sx,sy)=(2,3) => global_id=200
[DBG]  agent 103 t=1 => decoded (sx,sy)=(3,3) => global_id=232
[DBG]  agent 103 t=2 => decoded (sx,sy)=(4,3) => global_id=264
[DBG]  agent 103 t=3 => decoded (sx,sy)=(4,2) => global_id=263
[DBG]  Complete path of agent 103:
[DBG]    Original: 40 72 104 136 168 200 232 231 263 295 327 359 391 423 455 487 486 485 517 549 581 613 645 646 678 710 742 774 775 807 839 871 903 904 905 
[DBG]    New:     40 72 104 136 168 200 232 264 263 295 327 359 391 423 455 487 486 485 517 549 581 613 645 646 678 710 742 774 775 807 839 871 903 904 905 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 40 72 104 136 168 
[DBG]    Local path (in submap): 200 232 264 263 
[DBG]    Suffix (out of submap): 295 327 359 391 423 455 487 486 485 517 549 581 613 645 646 678 710 742 774 775 807 839 871 903 904 905 
[DBG]  Original agent path length 103 je: 35
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 2: 40, 72, 104, 136, 168, 200, 232, 264, 263, 295, 327, 359, 391, 423, 455, 487, 486, 485, 517, 549, 581, 613, 645, 646, 678, 710, 742, 774, 775, 807, 839, 871, 903, 904, 905, 
[DBG]  Path for agent 103 updated, resulting length: 35
[DBG]  Update the agent path 138 | Original local length: 2 | New local length: 2
[DBG]  agent 138 t=0 => decoded (sx,sy)=(2,2) => global_id=199
[DBG]  agent 138 t=1 => decoded (sx,sy)=(1,2) => global_id=167
[DBG]  Complete path of agent 138:
[DBG]    Original: 293 294 295 263 231 199 167 
[DBG]    New:     293 294 295 263 231 199 167 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 293 294 295 263 231 
[DBG]    Local path (in submap): 199 167 
[DBG]    Suffix (out of submap): 
[DBG]  Original agent path length 138 je: 7
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 3: 293, 294, 295, 263, 231, 199, 167, 
[DBG]  Path for agent 138 updated, resulting length: 7
[DBG]  Paths successfully updated.
[DBG]  (LNS.cpp) New path for agent 9: 
[DBG]  235, 234, 233, 232, 232, 231, 199, 167, 135, 134, 133, 132, 131, 99, 98, 97, 96, 
[DBG]  (LNS.cpp) New path for agent 59: 
[DBG]  256, 257, 258, 259, 260, 261, 293, 294, 295, 327, 328, 329, 361, 393, 425, 426, 427, 428, 429, 430, 462, 494, 526, 558, 590, 622, 623, 655, 687, 719, 719, 751, 783, 815, 847, 848, 880, 881, 882, 883, 884, 916, 917, 
[DBG]  (LNS.cpp) New path for agent 103: 
[DBG]  40, 72, 104, 136, 168, 200, 232, 264, 263, 295, 327, 359, 391, 423, 455, 487, 486, 485, 517, 549, 581, 613, 645, 646, 678, 710, 742, 774, 775, 807, 839, 871, 903, 904, 905, 
[DBG]  (LNS.cpp) New path for agent 138: 
[DBG]  293, 294, 295, 263, 231, 199, 167, 
[DBG]  component_weights = {0.319966, 0.14552, 0.152177, 0.382337}
[DBG]  opSuccess value: 1
[STAT] neighbor.sum_of_costs before recomputation: 98
[STAT] neighbor.old_sum_of_costs before recomputation: 100
[STAT] sum_of_costs before recomputation: 4361
[DBG]  Validate solution immediately after SAT success.
[WARNING] Problem after SAT: Target conflict: agent 9 (len 16) traverses target of agent 138 (len 6) at location 167 at timestep 7
[DBG]  Attempting immediate repair via init_lns because problem occurred after SAT (should be applied only for conflicts...).
[DBG]  Passing 150 agents to init_lns (skip=true).
[DBG]  path_table contents for selected agents (neighbor.agents):
[DBG]    Agent 9 => controlling path length=17
[DBG]    Agent 59 => controlling path length=43
[DBG]    Agent 103 => controlling path length=35
[DBG]    Agent 138 => controlling path length=7
[DBG]  hodnota skip_initial_solution=1
[DBG]  We skip initialSolution => call buildCollisionData()
[DBG]  buildCollisionData() called â€“ skip_initial_solution case.
[DBG]  Agents.size()=150, collision_graph.size()=150
[DBG]  agent 9 => updateCollidingPairs => foundCollision
[DBG]  agent 138 => updateCollidingPairs => foundCollision
[DBG]  Conflicting agent pairs:
[DBG]  agent 9 is in conflict with agent 138
[DBG]  buildCollisionData() => sum_of_costs=4359, num_of_colliding_pairs=1
[DBG]  buildCollisionData done => sum_of_costs=4359, num_of_colliding_pairs=1
[DBG]  sum_of_cost hodnota: 4359
[DBG]  After skip/init build => iteration_stats.back(): sum_of_costs=4359, collisions=1
[DEBUG] Using default neighbor generation strategy for conflicts: 2
	InitLNS(PP): runtime = 0.00313275, iterations = 2, colliding pairs = 0, initial colliding pairs = 1, solution cost = 4358, initial solution cost = 4359, failed iterations = 0
[DBG]  init_lns->sum_of_costs after init_lns->run: 4358
[DBG]  sum_of_costs after assignment from init_lns->run: 4358
[DBG]  Recomputing sum_of_cost by dividing neighbor.sum_of_costs and neighbor.old_sum_of_costs
[STAT] sum_of_costs after recomputation: 4358
[STAT] Iteration 88
[DBG]  Using SAT operator (destroy+repair SAT).
[DBG]  ====================
[DBG]  SAT destroy operator called.
[DBG]  SAT heuristic: 2
[DBG]  key_agent_id: 89
[DBG]  key_agent_id global path length: 28
[DBG]  Submap content (global positions):
[DBG]  467 468 469 470 471 
[DBG]  499 500 501 502 503 
[DBG]  531 532 533 534 535 
[DBG]  563 564 565 566 567 
[DBG]  595 596 597 598 599 
[DBG]  Map content with agents and obstacles:
[DBG]  A A . . X 
[DBG]  . X . . . 
[DBG]  . X A . X 
[DBG]  . X . A X 
[DBG]  X . . X . 
[DBG]  content of the map structure that we pass to the SAT solver:
[DBG]  1  1  1  1  -1  
[DBG]  1  -1  1  1  1  
[DBG]  1  -1  1  1  -1  
[DBG]  1  -1  1  1  -1  
[DBG]  -1  1  1  -1  1  
[DBG]  Identifying agents in a submap for rescheduling (when key_agent is there at the time 3):
[DBG]  Agent 3 found intervals in the sub-map:
[DBG]   [0..4] [13..16]
[DBG]  Agent 3 (interval in submap: [0..4]) contains time 3, added to replan.
[DBG]  Agent 54 found intervals in the sub-map:
[DBG]   [3..3]
[DBG]  Agent 54 (interval in submap: [3..3]) contains time 3, added to replan.
[DBG]  Agent 89 found intervals in the sub-map:
[DBG]   [1..6]
[DBG]  Agent 89 (interval in submap: [1..6]) contains time 3, added to replan.
[DBG]  Agent 104 found intervals in the sub-map:
[DBG]   [0..8]
[DBG]  Agent 104 (interval in submap: [0..8]) contains time 3, added to replan.
[DBG]  Agent 3 | Start (global): 468 -> (local): (0, 1) at time 3 | Goal (global): 467 -> (local): (0, 0) at time 4
[DBG]  Agent 54 | Start (global): 467 -> (local): (0, 0) at time 3 | Goal (global): 467 -> (local): (0, 0) at time 3
[DBG]  Agent 89 | Start (global): 533 -> (local): (2, 2) at time 3 | Goal (global): 596 -> (local): (4, 1) at time 6
[DBG]  Agent 104 | Start (global): 566 -> (local): (3, 3) at time 3 | Goal (global): 469 -> (local): (0, 2) at time 8
[DBG]  [REPAIR] SAT destroy operator called.
[DBG]  [REPAIR] SAT operator â€“ launching subproblem FOR OPTIMIZATION.
[DBG]  Creating local paths (sx, sy) in the submap for T_sync = 3
[DBG]    Agent 3 (global paths from T=3 to 4) has local path: (0,1) (0,0) 
[DBG]    Agent 54 (global paths from T=3 to 3) has local path: (0,0) 
[DBG]    Agent 89 (global paths from T=3 to 6) has local path: (2,2) (3,2) (4,2) (4,1) 
[DBG]    Agent 104 (global paths from T=3 to 8) has local path: (3,3) (3,3) (3,2) (2,2) (1,2) (0,2) 
[DBG]  Checking input data for SAT solver:
[DBG]    - Number of agents to replan: 4
[DBG]  Agent 3 has the original local path length: 2 => Start (0,1), Goal (0,0)
[DBG]  Agent 54 has the original local path length: 1 => Start (0,0), Goal (0,0)
[DBG]  Agent 89 has the original local path length: 4 => Start (2,2), Goal (4,1)
[DBG]  Agent 104 has the original local path length: 6 => Start (3,3), Goal (0,2)
[DBG]  Start position: (0, 1), (0, 0), (2, 2), (3, 3), 
[DBG]  Goal position: (0, 0), (0, 0), (4, 1), (0, 2), 
[DBG]  SAT instance and solver created.
Currently solving
Instance name: scen
Map name: map
Encoding used: disappear_at_goal
SAT solver used: Kissat
Optimizing function: sum of costs
Number of agents: 4
Mks LB: 5
SoC LB: 12
Delta: 0
Remaining time: 300000 [ms]

Vertex conflict! Agents 0, 1, timestep 1, location 0
Swapping conflict! Agents 0, 1, timestep 1, edge (0,0)
Vertex conflict! Agents 0, 1, timestep 2, location 0
Swapping conflict! Agents 0, 1, timestep 2, edge (0,0)
Vertex conflict! Agents 0, 1, timestep 3, location 0
Swapping conflict! Agents 0, 1, timestep 3, edge (0,0)
Vertex conflict! Agents 0, 1, timestep 4, location 0
Vertex conflict! Agents 0, 2, timestep 4, location 0
Vertex conflict! Agents 1, 2, timestep 4, location 0
Found plan [agents = 4] [timesteps = 5]
Agent #0 : 1 0 0 0 0 
Agent #1 : 0 0 0 0 0 
Agent #2 : 9 12 15 14 0 
Agent #3 : 13 10 9 5 2 

[STAT] Solver returned: 0
[DBG]  Agent (index) 3 | New local path (submap idx):
[DBG]  1 0 
[DBG]  Agent (index) 54 | New local path (submap idx):
[DBG]  0 
[DBG]  Agent (index) 89 | New local path (submap idx):
[DBG]  9 12 15 14 
[DBG]  Agent (index) 104 | New local path (submap idx):
[DBG]  13 10 9 5 2 
[DBG]  Update the agent path 3 | Original local length: 2 | New local length: 2
[DBG]  agent 3 t=0 => decoded (sx,sy)=(0,1) => global_id=468
[DBG]  agent 3 t=1 => decoded (sx,sy)=(0,0) => global_id=467
[DBG]  Complete path of agent 3:
[DBG]    Original: 468 468 468 468 467 435 435 435 435 435 435 435 435 467 499 499 499 498 530 530 529 561 593 625 657 658 659 660 692 724 756 755 787 786 818 850 882 914 913 913 912 
[DBG]    New:     468 468 468 468 467 435 435 435 435 435 435 435 435 467 499 499 499 498 530 530 529 561 593 625 657 658 659 660 692 724 756 755 787 786 818 850 882 914 913 913 912 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 468 468 468 
[DBG]    Local path (in submap): 468 467 
[DBG]    Suffix (out of submap): 435 435 435 435 435 435 435 435 467 499 499 499 498 530 530 529 561 593 625 657 658 659 660 692 724 756 755 787 786 818 850 882 914 913 913 912 
[DBG]  Original agent path length 3 je: 41
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 0: 468, 468, 468, 468, 467, 435, 435, 435, 435, 435, 435, 435, 435, 467, 499, 499, 499, 498, 530, 530, 529, 561, 593, 625, 657, 658, 659, 660, 692, 724, 756, 755, 787, 786, 818, 850, 882, 914, 913, 913, 912, 
[DBG]  Path for agent 3 updated, resulting length: 41
[DBG]  Update the agent path 54 | Original local length: 1 | New local length: 1
[DBG]  agent 54 t=0 => decoded (sx,sy)=(0,0) => global_id=467
[DBG]  Complete path of agent 54:
[DBG]    Original: 464 465 466 467 435 403 371 339 339 339 340 308 308 308 308 308 309 341 373 405 406 438 439 440 472 473 474 506 538 570 571 
[DBG]    New:     464 465 466 467 435 403 371 339 339 339 340 308 308 308 308 308 309 341 373 405 406 438 439 440 472 473 474 506 538 570 571 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 464 465 466 
[DBG]    Local path (in submap): 467 
[DBG]    Suffix (out of submap): 435 403 371 339 339 339 340 308 308 308 308 308 309 341 373 405 406 438 439 440 472 473 474 506 538 570 571 
[DBG]  Original agent path length 54 je: 31
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 1: 464, 465, 466, 467, 435, 403, 371, 339, 339, 339, 340, 308, 308, 308, 308, 308, 309, 341, 373, 405, 406, 438, 439, 440, 472, 473, 474, 506, 538, 570, 571, 
[DBG]  Path for agent 54 updated, resulting length: 31
[DBG]  Update the agent path 89 | Original local length: 4 | New local length: 4
[DBG]  agent 89 t=0 => decoded (sx,sy)=(2,2) => global_id=533
[DBG]  agent 89 t=1 => decoded (sx,sy)=(3,2) => global_id=565
[DBG]  agent 89 t=2 => decoded (sx,sy)=(4,2) => global_id=597
[DBG]  agent 89 t=3 => decoded (sx,sy)=(4,1) => global_id=596
[DBG]  Complete path of agent 89:
[DBG]    Original: 437 469 501 533 565 597 596 628 660 692 724 756 788 787 787 787 819 820 821 822 854 854 886 918 950 982 983 1015 
[DBG]    New:     437 469 501 533 565 597 596 628 660 692 724 756 788 787 787 787 819 820 821 822 854 854 886 918 950 982 983 1015 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 437 469 501 
[DBG]    Local path (in submap): 533 565 597 596 
[DBG]    Suffix (out of submap): 628 660 692 724 756 788 787 787 787 819 820 821 822 854 854 886 918 950 982 983 1015 
[DBG]  Original agent path length 89 je: 28
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 2: 437, 469, 501, 533, 565, 597, 596, 628, 660, 692, 724, 756, 788, 787, 787, 787, 819, 820, 821, 822, 854, 854, 886, 918, 950, 982, 983, 1015, 
[DBG]  Path for agent 89 updated, resulting length: 28
[DBG]  Update the agent path 104 | Original local length: 6 | New local length: 5
[DBG]  agent 104 t=0 => decoded (sx,sy)=(3,3) => global_id=566
[DBG]  agent 104 t=1 => decoded (sx,sy)=(2,3) => global_id=534
[DBG]  agent 104 t=2 => decoded (sx,sy)=(2,2) => global_id=533
[DBG]  agent 104 t=3 => decoded (sx,sy)=(1,2) => global_id=501
[DBG]  agent 104 t=4 => decoded (sx,sy)=(0,2) => global_id=469
[DBG]  Complete path of agent 104:
[DBG]    Original: 566 566 566 566 566 565 533 501 469 437 405 373 341 340 340 340 308 308 308 308 276 
[DBG]    New:     566 566 566 566 534 533 501 469 437 405 373 341 340 340 340 308 308 308 308 276 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 566 566 566 
[DBG]    Local path (in submap): 566 534 533 501 469 437 
[DBG]    Suffix (out of submap): 405 373 341 340 340 340 308 308 308 308 276 
[DBG]  Original agent path length 104 je: 21
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 3: 566, 566, 566, 566, 534, 533, 501, 469, 437, 405, 373, 341, 340, 340, 340, 308, 308, 308, 308, 276, 
[DBG]  Path for agent 104 updated, resulting length: 20
[DBG]  Paths successfully updated.
[DBG]  (LNS.cpp) New path for agent 3: 
[DBG]  468, 468, 468, 468, 467, 435, 435, 435, 435, 435, 435, 435, 435, 467, 499, 499, 499, 498, 530, 530, 529, 561, 593, 625, 657, 658, 659, 660, 692, 724, 756, 755, 787, 786, 818, 850, 882, 914, 913, 913, 912, 
[DBG]  (LNS.cpp) New path for agent 54: 
[DBG]  464, 465, 466, 467, 435, 403, 371, 339, 339, 339, 340, 308, 308, 308, 308, 308, 309, 341, 373, 405, 406, 438, 439, 440, 472, 473, 474, 506, 538, 570, 571, 
[DBG]  (LNS.cpp) New path for agent 89: 
[DBG]  437, 469, 501, 533, 565, 597, 596, 628, 660, 692, 724, 756, 788, 787, 787, 787, 819, 820, 821, 822, 854, 854, 886, 918, 950, 982, 983, 1015, 
[DBG]  (LNS.cpp) New path for agent 104: 
[DBG]  566, 566, 566, 566, 534, 533, 501, 469, 437, 405, 373, 341, 340, 340, 340, 308, 308, 308, 308, 276, 
[DBG]  component_weights = {0.317479, 0.144388, 0.150994, 0.38714}
[DBG]  opSuccess value: 1
[STAT] neighbor.sum_of_costs before recomputation: 116
[STAT] neighbor.old_sum_of_costs before recomputation: 117
[STAT] sum_of_costs before recomputation: 4358
[DBG]  Validate solution immediately after SAT success.
[WARNING] Problem after SAT: Vertex conflict between agents 104 and 54 at location 308 at timestep 15
[DBG]  Attempting immediate repair via init_lns because problem occurred after SAT (should be applied only for conflicts...).
[DBG]  Passing 150 agents to init_lns (skip=true).
[DBG]  path_table contents for selected agents (neighbor.agents):
[DBG]    Agent 3 => controlling path length=41
[DBG]    Agent 54 => controlling path length=31
[DBG]    Agent 89 => controlling path length=28
[DBG]    Agent 104 => controlling path length=20
[DBG]  hodnota skip_initial_solution=1
[DBG]  We skip initialSolution => call buildCollisionData()
[DBG]  buildCollisionData() called â€“ skip_initial_solution case.
[DBG]  Agents.size()=150, collision_graph.size()=150
[DBG]  agent 54 => updateCollidingPairs => foundCollision
[DBG]  agent 57 => updateCollidingPairs => foundCollision
[DBG]  agent 92 => updateCollidingPairs => foundCollision
[DBG]  agent 104 => updateCollidingPairs => foundCollision
[DBG]  agent 137 => updateCollidingPairs => foundCollision
[DBG]  Conflicting agent pairs:
[DBG]  agent 54 is in conflict with agent 104
[DBG]  agent 57 is in conflict with agent 104
[DBG]  agent 92 is in conflict with agent 104
[DBG]  agent 104 is in conflict with agent 137
[DBG]  buildCollisionData() => sum_of_costs=4357, num_of_colliding_pairs=4
[DBG]  buildCollisionData done => sum_of_costs=4357, num_of_colliding_pairs=4
[DBG]  sum_of_cost hodnota: 4357
[DBG]  After skip/init build => iteration_stats.back(): sum_of_costs=4357, collisions=4
[DEBUG] Using default neighbor generation strategy for conflicts: 2
[DEBUG] Using default neighbor generation strategy for conflicts: 1
	InitLNS(PP): runtime = 0.0115662, iterations = 3, colliding pairs = 0, initial colliding pairs = 4, solution cost = 4350, initial solution cost = 4357, failed iterations = 0
[DBG]  init_lns->sum_of_costs after init_lns->run: 4350
[DBG]  sum_of_costs after assignment from init_lns->run: 4350
[DBG]  Recomputing sum_of_cost by dividing neighbor.sum_of_costs and neighbor.old_sum_of_costs
[STAT] sum_of_costs after recomputation: 4350
[STAT] Iteration 89
[DBG]  Using SAT operator (destroy+repair SAT).
[DBG]  ====================
[DBG]  SAT destroy operator called.
[DBG]  SAT heuristic: 2
[DBG]  key_agent_id: 136
[DBG]  key_agent_id global path length: 12
[DBG]  Submap content (global positions):
[DBG]  150 151 152 153 154 
[DBG]  182 183 184 185 186 
[DBG]  214 215 216 217 218 
[DBG]  246 247 248 249 250 
[DBG]  278 279 280 281 282 
[DBG]  Map content with agents and obstacles:
[DBG]  . . X . . 
[DBG]  X . . . . 
[DBG]  . . A . . 
[DBG]  X . . A X 
[DBG]  . . X A X 
[DBG]  content of the map structure that we pass to the SAT solver:
[DBG]  1  1  -1  1  1  
[DBG]  -1  1  1  1  1  
[DBG]  1  1  1  1  1  
[DBG]  -1  1  1  1  -1  
[DBG]  1  1  -1  1  -1  
[DBG]  Identifying agents in a submap for rescheduling (when key_agent is there at the time 10):
[DBG]  Agent 2 found intervals in the sub-map:
[DBG]   [6..10]
[DBG]  Agent 2 (interval in submap: [6..10]) contains time 10, added to replan.
[DBG]  Agent 44 found intervals in the sub-map:
[DBG]  
[DBG]  Agent 44 is not in sub-map at time 10 (intervals: 
[DBG]  )
[DBG]  Agent 45 found intervals in the sub-map:
[DBG]   [0..7]
[DBG]  Agent 45 is not in sub-map at time 10 (intervals: 
[DBG]  [0..7] )
[DBG]  Agent 52 found intervals in the sub-map:
[DBG]   [7..11]
[DBG]  Agent 52 (interval in submap: [7..11]) contains time 10, added to replan.
[DBG]  Agent 136 found intervals in the sub-map:
[DBG]   [7..11]
[DBG]  Agent 136 (interval in submap: [7..11]) contains time 10, added to replan.
[DBG]  Agent 2 | Start (global): 281 -> (local): (4, 3) at time 10 | Goal (global): 281 -> (local): (4, 3) at time 10
[DBG]  Agent 52 | Start (global): 249 -> (local): (3, 3) at time 10 | Goal (global): 281 -> (local): (4, 3) at time 11
[DBG]  Agent 136 | Start (global): 216 -> (local): (2, 2) at time 10 | Goal (global): 184 -> (local): (1, 2) at time 11
[DBG]  [REPAIR] SAT destroy operator called.
[DBG]  [REPAIR] SAT operator â€“ launching subproblem FOR OPTIMIZATION.
[DBG]  Creating local paths (sx, sy) in the submap for T_sync = 10
[DBG]    Agent 2 (global paths from T=10 to 10) has local path: (4,3) 
[DBG]    Agent 52 (global paths from T=10 to 11) has local path: (3,3) (4,3) 
[DBG]    Agent 136 (global paths from T=10 to 11) has local path: (2,2) (1,2) 
[DBG]  Checking input data for SAT solver:
[DBG]    - Number of agents to replan: 3
[DBG]  Agent 2 has the original local path length: 1 => Start (4,3), Goal (4,3)
[DBG]  Agent 52 has the original local path length: 2 => Start (3,3), Goal (4,3)
[DBG]  Agent 136 has the original local path length: 2 => Start (2,2), Goal (1,2)
[DBG]  Start position: (4, 3), (3, 3), (2, 2), 
[DBG]  Goal position: (4, 3), (4, 3), (1, 2), 
[DBG]  SAT instance and solver created.
Currently solving
Instance name: scen
Map name: map
Encoding used: disappear_at_goal
SAT solver used: Kissat
Optimizing function: sum of costs
Number of agents: 3
Mks LB: 2
SoC LB: 5
Delta: 0
Remaining time: 300000 [ms]

Found plan [agents = 3] [timesteps = 2]
Agent #0 : 18 0 
Agent #1 : 15 18 
Agent #2 : 10 5 

[STAT] Solver returned: 0
[DBG]  Agent (index) 2 | New local path (submap idx):
[DBG]  18 
[DBG]  Agent (index) 52 | New local path (submap idx):
[DBG]  15 18 
[DBG]  Agent (index) 136 | New local path (submap idx):
[DBG]  10 5 
[DBG]  Update the agent path 2 | Original local length: 1 | New local length: 1
[DBG]  agent 2 t=0 => decoded (sx,sy)=(4,3) => global_id=281
[DBG]  Complete path of agent 2:
[DBG]    Original: 59 91 90 89 89 121 153 185 217 249 281 313 345 377 409 441 440 439 438 438 470 502 503 504 505 506 538 538 539 571 603 635 636 637 638 670 702 701 733 765 764 
[DBG]    New:     59 91 90 89 89 121 153 185 217 249 281 313 345 377 409 441 440 439 438 438 470 502 503 504 505 506 538 538 539 571 603 635 636 637 638 670 702 701 733 765 764 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 59 91 90 89 89 121 153 185 217 249 
[DBG]    Local path (in submap): 281 
[DBG]    Suffix (out of submap): 313 345 377 409 441 440 439 438 438 470 502 503 504 505 506 538 538 539 571 603 635 636 637 638 670 702 701 733 765 764 
[DBG]  Original agent path length 2 je: 41
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 0: 59, 91, 90, 89, 89, 121, 153, 185, 217, 249, 281, 313, 345, 377, 409, 441, 440, 439, 438, 438, 470, 502, 503, 504, 505, 506, 538, 538, 539, 571, 603, 635, 636, 637, 638, 670, 702, 701, 733, 765, 764, 
[DBG]  Path for agent 2 updated, resulting length: 41
[DBG]  Update the agent path 52 | Original local length: 2 | New local length: 2
[DBG]  agent 52 t=0 => decoded (sx,sy)=(3,3) => global_id=249
[DBG]  agent 52 t=1 => decoded (sx,sy)=(4,3) => global_id=281
[DBG]  Complete path of agent 52:
[DBG]    Original: 28 60 59 58 90 89 121 153 185 217 249 281 313 345 377 409 441 
[DBG]    New:     28 60 59 58 90 89 121 153 185 217 249 281 313 345 377 409 441 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 28 60 59 58 90 89 121 153 185 217 
[DBG]    Local path (in submap): 249 281 
[DBG]    Suffix (out of submap): 313 345 377 409 441 
[DBG]  Original agent path length 52 je: 17
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 1: 28, 60, 59, 58, 90, 89, 121, 153, 185, 217, 249, 281, 313, 345, 377, 409, 441, 
[DBG]  Path for agent 52 updated, resulting length: 17
[DBG]  Update the agent path 136 | Original local length: 2 | New local length: 2
[DBG]  agent 136 t=0 => decoded (sx,sy)=(2,2) => global_id=216
[DBG]  agent 136 t=1 => decoded (sx,sy)=(1,2) => global_id=184
[DBG]  Complete path of agent 136:
[DBG]    Original: 440 439 407 375 375 343 311 279 247 215 216 184 
[DBG]    New:     440 439 407 375 375 343 311 279 247 215 216 184 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 440 439 407 375 375 343 311 279 247 215 
[DBG]    Local path (in submap): 216 184 
[DBG]    Suffix (out of submap): 
[DBG]  Original agent path length 136 je: 12
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 2: 440, 439, 407, 375, 375, 343, 311, 279, 247, 215, 216, 184, 
[DBG]  Path for agent 136 updated, resulting length: 12
[DBG]  Paths successfully updated.
[DBG]  (LNS.cpp) New path for agent 2: 
[DBG]  59, 91, 90, 89, 89, 121, 153, 185, 217, 249, 281, 313, 345, 377, 409, 441, 440, 439, 438, 438, 470, 502, 503, 504, 505, 506, 538, 538, 539, 571, 603, 635, 636, 637, 638, 670, 702, 701, 733, 765, 764, 
[DBG]  (LNS.cpp) New path for agent 52: 
[DBG]  28, 60, 59, 58, 90, 89, 121, 153, 185, 217, 249, 281, 313, 345, 377, 409, 441, 
[DBG]  (LNS.cpp) New path for agent 136: 
[DBG]  440, 439, 407, 375, 375, 343, 311, 279, 247, 215, 216, 184, 
[DBG]  component_weights = {0.321872, 0.143459, 0.150022, 0.384647}
[DBG]  opSuccess value: 1
[STAT] neighbor.sum_of_costs before recomputation: 67
[STAT] neighbor.old_sum_of_costs before recomputation: 67
[STAT] sum_of_costs before recomputation: 4350
[DBG]  Validate solution immediately after SAT success.
[DBG]  No problems after SAT replan.
[DBG]  Recomputing sum_of_cost by dividing neighbor.sum_of_costs and neighbor.old_sum_of_costs
[STAT] sum_of_costs after recomputation: 4350
[STAT] Iteration 90
[DBG]  Using SAT operator (destroy+repair SAT).
[DBG]  ====================
[DBG]  SAT destroy operator called.
[DBG]  SAT heuristic: 2
[DBG]  key_agent_id: 14
[DBG]  key_agent_id global path length: 37
[DBG]  Submap content (global positions):
[DBG]  823 824 825 826 827 
[DBG]  855 856 857 858 859 
[DBG]  887 888 889 890 891 
[DBG]  919 920 921 922 923 
[DBG]  951 952 953 954 955 
[DBG]  Map content with agents and obstacles:
[DBG]  . A X . . 
[DBG]  . . A . . 
[DBG]  A . A . A 
[DBG]  . . . . A 
[DBG]  X . A . . 
[DBG]  content of the map structure that we pass to the SAT solver:
[DBG]  1  1  -1  1  1  
[DBG]  1  1  1  1  1  
[DBG]  1  1  1  1  1  
[DBG]  1  1  1  1  1  
[DBG]  -1  1  1  1  1  
[DBG]  Identifying agents in a submap for rescheduling (when key_agent is there at the time 5):
[DBG]  Agent 4 found intervals in the sub-map:
[DBG]   [5..10]
[DBG]  Agent 4 (interval in submap: [5..10]) contains time 5, added to replan.
[DBG]  Agent 6 found intervals in the sub-map:
[DBG]  
[DBG]  Agent 6 is not in sub-map at time 5 (intervals: 
[DBG]  )
[DBG]  Agent 11 found intervals in the sub-map:
[DBG]  
[DBG]  Agent 11 is not in sub-map at time 5 (intervals: 
[DBG]  )
[DBG]  Agent 14 found intervals in the sub-map:
[DBG]   [0..16]
[DBG]  Agent 14 (interval in submap: [0..16]) contains time 5, added to replan.
[DBG]  Agent 24 found intervals in the sub-map:
[DBG]   [0..9]
[DBG]  Agent 24 (interval in submap: [0..9]) contains time 5, added to replan.
[DBG]  Agent 30 found intervals in the sub-map:
[DBG]   [0..11]
[DBG]  Agent 30 (interval in submap: [0..11]) contains time 5, added to replan.
[DBG]  Agent 47 found intervals in the sub-map:
[DBG]   [5..6]
[DBG]  Agent 47 (interval in submap: [5..6]) contains time 5, added to replan.
[DBG]  Agent 49 found intervals in the sub-map:
[DBG]   [1..4]
[DBG]  Agent 49 is not in sub-map at time 5 (intervals: 
[DBG]  [1..4] )
[DBG]  Agent 58 found intervals in the sub-map:
[DBG]   [0..2]
[DBG]  Agent 58 is not in sub-map at time 5 (intervals: 
[DBG]  [0..2] )
[DBG]  Agent 101 found intervals in the sub-map:
[DBG]   [2..5]
[DBG]  Agent 101 (interval in submap: [2..5]) contains time 5, added to replan.
[DBG]  Agent 102 found intervals in the sub-map:
[DBG]   [7..26]
[DBG]  Agent 102 is not in sub-map at time 5 (intervals: 
[DBG]  [7..26] )
[DBG]  Agent 133 found intervals in the sub-map:
[DBG]  
[DBG]  Agent 133 is not in sub-map at time 5 (intervals: 
[DBG]  )
[DBG]  Agent 142 found intervals in the sub-map:
[DBG]   [2..11]
[DBG]  Agent 142 (interval in submap: [2..11]) contains time 5, added to replan.
[DBG]  Agent 4 | Start (global): 923 -> (local): (3, 4) at time 5 | Goal (global): 887 -> (local): (2, 0) at time 10
[DBG]  Agent 14 | Start (global): 889 -> (local): (2, 2) at time 5 | Goal (global): 919 -> (local): (3, 0) at time 16
[DBG]  Agent 24 | Start (global): 891 -> (local): (2, 4) at time 5 | Goal (global): 859 -> (local): (1, 4) at time 9
[DBG]  Agent 30 | Start (global): 953 -> (local): (4, 2) at time 5 | Goal (global): 887 -> (local): (2, 0) at time 11
[DBG]  Agent 47 | Start (global): 824 -> (local): (0, 1) at time 5 | Goal (global): 823 -> (local): (0, 0) at time 6
[DBG]  Agent 101 | Start (global): 887 -> (local): (2, 0) at time 5 | Goal (global): 887 -> (local): (2, 0) at time 5
[DBG]  Agent 142 | Start (global): 857 -> (local): (1, 2) at time 5 | Goal (global): 824 -> (local): (0, 1) at time 11
[DBG]  [REPAIR] SAT destroy operator called.
[DBG]  [REPAIR] SAT operator â€“ launching subproblem FOR OPTIMIZATION.
[DBG]  Creating local paths (sx, sy) in the submap for T_sync = 5
[DBG]    Agent 4 (global paths from T=5 to 10) has local path: (3,4) (3,3) (2,3) (2,2) (2,1) (2,0) 
[DBG]    Agent 14 (global paths from T=5 to 16) has local path: (2,2) (2,1) (2,1) (2,0) (1,0) (1,0) (1,0) (1,0) (1,0) (2,0) (2,0) (3,0) 
[DBG]    Agent 24 (global paths from T=5 to 9) has local path: (2,4) (2,4) (2,4) (2,4) (1,4) 
[DBG]    Agent 30 (global paths from T=5 to 11) has local path: (4,2) (4,1) (4,1) (3,1) (3,0) (3,0) (2,0) 
[DBG]    Agent 47 (global paths from T=5 to 6) has local path: (0,1) (0,0) 
[DBG]    Agent 101 (global paths from T=5 to 5) has local path: (2,0) 
[DBG]    Agent 142 (global paths from T=5 to 11) has local path: (1,2) (1,1) (0,1) (0,0) (0,0) (0,0) (0,1) 
[DBG]  Checking input data for SAT solver:
[DBG]    - Number of agents to replan: 7
[DBG]  Agent 4 has the original local path length: 6 => Start (3,4), Goal (2,0)
[DBG]  Agent 14 has the original local path length: 12 => Start (2,2), Goal (3,0)
[DBG]  Agent 24 has the original local path length: 5 => Start (2,4), Goal (1,4)
[DBG]  Agent 30 has the original local path length: 7 => Start (4,2), Goal (2,0)
[DBG]  Agent 47 has the original local path length: 2 => Start (0,1), Goal (0,0)
[DBG]  Agent 101 has the original local path length: 1 => Start (2,0), Goal (2,0)
[DBG]  Agent 142 has the original local path length: 7 => Start (1,2), Goal (0,1)
[DBG]  Start position: (3, 4), (2, 2), (2, 4), (4, 2), (0, 1), (2, 0), (1, 2), 
[DBG]  Goal position: (2, 0), (3, 0), (1, 4), (2, 0), (0, 0), (2, 0), (0, 1), 
[DBG]  SAT instance and solver created.
Currently solving
Instance name: scen
Map name: map
Encoding used: disappear_at_goal
SAT solver used: Kissat
Optimizing function: sum of costs
Number of agents: 7
Mks LB: 6
SoC LB: 23
Delta: 0
Remaining time: 300000 [ms]

Vertex conflict! Agents 1, 2, timestep 4, location 0
Swapping conflict! Agents 1, 2, timestep 4, edge (0,0)
Vertex conflict! Agents 1, 2, timestep 5, location 0
Vertex conflict! Agents 1, 3, timestep 5, location 0
Vertex conflict! Agents 1, 4, timestep 4, location 0
Swapping conflict! Agents 1, 4, timestep 4, edge (0,0)
Vertex conflict! Agents 1, 4, timestep 5, location 0
Vertex conflict! Agents 1, 5, timestep 4, location 0
Swapping conflict! Agents 1, 5, timestep 4, edge (0,0)
Vertex conflict! Agents 1, 5, timestep 5, location 0
Vertex conflict! Agents 1, 6, timestep 4, location 0
Swapping conflict! Agents 1, 6, timestep 4, edge (0,0)
Vertex conflict! Agents 1, 6, timestep 5, location 0
Vertex conflict! Agents 2, 3, timestep 5, location 0
Vertex conflict! Agents 2, 4, timestep 2, location 0
Swapping conflict! Agents 2, 4, timestep 2, edge (0,0)
Vertex conflict! Agents 2, 4, timestep 3, location 0
Swapping conflict! Agents 2, 4, timestep 3, edge (0,0)
Vertex conflict! Agents 2, 4, timestep 4, location 0
Swapping conflict! Agents 2, 4, timestep 4, edge (0,0)
Vertex conflict! Agents 2, 4, timestep 5, location 0
Vertex conflict! Agents 2, 5, timestep 2, location 0
Swapping conflict! Agents 2, 5, timestep 2, edge (0,0)
Vertex conflict! Agents 2, 5, timestep 3, location 0
Swapping conflict! Agents 2, 5, timestep 3, edge (0,0)
Vertex conflict! Agents 2, 5, timestep 4, location 0
Swapping conflict! Agents 2, 5, timestep 4, edge (0,0)
Vertex conflict! Agents 2, 5, timestep 5, location 0
Vertex conflict! Agents 2, 6, timestep 3, location 0
Swapping conflict! Agents 2, 6, timestep 3, edge (0,0)
Vertex conflict! Agents 2, 6, timestep 4, location 0
Swapping conflict! Agents 2, 6, timestep 4, edge (0,0)
Vertex conflict! Agents 2, 6, timestep 5, location 0
Vertex conflict! Agents 3, 4, timestep 5, location 0
Vertex conflict! Agents 3, 5, timestep 5, location 0
Vertex conflict! Agents 3, 6, timestep 5, location 0
Vertex conflict! Agents 4, 5, timestep 1, location 0
Swapping conflict! Agents 4, 5, timestep 1, edge (0,0)
Vertex conflict! Agents 4, 5, timestep 2, location 0
Swapping conflict! Agents 4, 5, timestep 2, edge (0,0)
Vertex conflict! Agents 4, 5, timestep 3, location 0
Swapping conflict! Agents 4, 5, timestep 3, edge (0,0)
Vertex conflict! Agents 4, 5, timestep 4, location 0
Swapping conflict! Agents 4, 5, timestep 4, edge (0,0)
Vertex conflict! Agents 4, 5, timestep 5, location 0
Vertex conflict! Agents 4, 6, timestep 3, location 0
Swapping conflict! Agents 4, 6, timestep 3, edge (0,0)
Vertex conflict! Agents 4, 6, timestep 4, location 0
Swapping conflict! Agents 4, 6, timestep 4, edge (0,0)
Vertex conflict! Agents 4, 6, timestep 5, location 0
Vertex conflict! Agents 5, 6, timestep 3, location 0
Swapping conflict! Agents 5, 6, timestep 3, edge (0,0)
Vertex conflict! Agents 5, 6, timestep 4, location 0
Swapping conflict! Agents 5, 6, timestep 4, edge (0,0)
Vertex conflict! Agents 5, 6, timestep 5, location 0
Found plan [agents = 7] [timesteps = 6]
Agent #0 : 18 17 16 15 14 9 
Agent #1 : 11 10 15 14 0 0 
Agent #2 : 13 8 0 0 0 0 
Agent #3 : 20 16 11 10 9 0 
Agent #4 : 1 0 0 0 0 0 
Agent #5 : 9 0 0 0 0 0 
Agent #6 : 6 5 1 0 0 0 

[STAT] Solver returned: 0
[DBG]  Agent (index) 4 | New local path (submap idx):
[DBG]  18 17 16 15 14 9 
[DBG]  Agent (index) 14 | New local path (submap idx):
[DBG]  11 10 15 14 
[DBG]  Agent (index) 24 | New local path (submap idx):
[DBG]  13 8 
[DBG]  Agent (index) 30 | New local path (submap idx):
[DBG]  20 16 11 10 9 
[DBG]  Agent (index) 47 | New local path (submap idx):
[DBG]  1 0 
[DBG]  Agent (index) 101 | New local path (submap idx):
[DBG]  9 
[DBG]  Agent (index) 142 | New local path (submap idx):
[DBG]  6 5 1 
[DBG]  Update the agent path 4 | Original local length: 6 | New local length: 6
[DBG]  agent 4 t=0 => decoded (sx,sy)=(3,4) => global_id=923
[DBG]  agent 4 t=1 => decoded (sx,sy)=(3,3) => global_id=922
[DBG]  agent 4 t=2 => decoded (sx,sy)=(3,2) => global_id=921
[DBG]  agent 4 t=3 => decoded (sx,sy)=(3,1) => global_id=920
[DBG]  agent 4 t=4 => decoded (sx,sy)=(3,0) => global_id=919
[DBG]  agent 4 t=5 => decoded (sx,sy)=(2,0) => global_id=887
[DBG]  Complete path of agent 4:
[DBG]    Original: 829 861 893 892 924 923 922 890 889 888 887 886 885 884 883 882 914 913 912 880 879 878 877 876 875 843 811 779 747 746 714 682 650 649 648 647 615 583 
[DBG]    New:     829 861 893 892 924 923 922 921 920 919 887 886 885 884 883 882 914 913 912 880 879 878 877 876 875 843 811 779 747 746 714 682 650 649 648 647 615 583 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 829 861 893 892 924 
[DBG]    Local path (in submap): 923 922 921 920 919 887 
[DBG]    Suffix (out of submap): 886 885 884 883 882 914 913 912 880 879 878 877 876 875 843 811 779 747 746 714 682 650 649 648 647 615 583 
[DBG]  Original agent path length 4 je: 38
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 0: 829, 861, 893, 892, 924, 923, 922, 921, 920, 919, 887, 886, 885, 884, 883, 882, 914, 913, 912, 880, 879, 878, 877, 876, 875, 843, 811, 779, 747, 746, 714, 682, 650, 649, 648, 647, 615, 583, 
[DBG]  Path for agent 4 updated, resulting length: 38
[DBG]  Update the agent path 14 | Original local length: 12 | New local length: 4
[DBG]  agent 14 t=0 => decoded (sx,sy)=(2,2) => global_id=889
[DBG]  agent 14 t=1 => decoded (sx,sy)=(2,1) => global_id=888
[DBG]  agent 14 t=2 => decoded (sx,sy)=(3,1) => global_id=920
[DBG]  agent 14 t=3 => decoded (sx,sy)=(3,0) => global_id=919
[DBG]  Complete path of agent 14:
[DBG]    Original: 859 859 858 890 889 889 888 888 887 855 855 855 855 855 887 887 919 918 917 916 916 884 883 882 881 880 879 878 877 876 875 874 873 841 809 808 807 
[DBG]    New:     859 859 858 890 889 889 888 920 919 918 917 916 916 884 883 882 881 880 879 878 877 876 875 874 873 841 809 808 807 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 859 859 858 890 889 
[DBG]    Local path (in submap): 889 888 920 919 918 917 916 916 884 883 882 881 
[DBG]    Suffix (out of submap): 880 879 878 877 876 875 874 873 841 809 808 807 
[DBG]  Original agent path length 14 je: 37
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 1: 859, 859, 858, 890, 889, 889, 888, 920, 919, 918, 917, 916, 916, 884, 883, 882, 881, 880, 879, 878, 877, 876, 875, 874, 873, 841, 809, 808, 807, 
[DBG]  Path for agent 14 updated, resulting length: 29
[DBG]  Update the agent path 24 | Original local length: 5 | New local length: 2
[DBG]  agent 24 t=0 => decoded (sx,sy)=(2,4) => global_id=891
[DBG]  agent 24 t=1 => decoded (sx,sy)=(1,4) => global_id=859
[DBG]  Complete path of agent 24:
[DBG]    Original: 891 891 891 891 891 891 891 891 891 859 860 861 862 830 830 830 830 830 829 797 765 764 732 731 730 730 730 730 730 730 730 730 729 697 696 664 632 633 
[DBG]    New:     891 891 891 891 891 891 859 860 861 862 830 830 830 830 830 829 797 765 764 732 731 730 730 730 730 730 730 730 730 729 697 696 664 632 633 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 891 891 891 891 891 
[DBG]    Local path (in submap): 891 859 860 861 862 
[DBG]    Suffix (out of submap): 830 830 830 830 830 829 797 765 764 732 731 730 730 730 730 730 730 730 730 729 697 696 664 632 633 
[DBG]  Original agent path length 24 je: 38
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 2: 891, 891, 891, 891, 891, 891, 859, 860, 861, 862, 830, 830, 830, 830, 830, 829, 797, 765, 764, 732, 731, 730, 730, 730, 730, 730, 730, 730, 730, 729, 697, 696, 664, 632, 633, 
[DBG]  Path for agent 24 updated, resulting length: 35
[DBG]  Update the agent path 30 | Original local length: 7 | New local length: 5
[DBG]  agent 30 t=0 => decoded (sx,sy)=(4,2) => global_id=953
[DBG]  agent 30 t=1 => decoded (sx,sy)=(3,2) => global_id=921
[DBG]  agent 30 t=2 => decoded (sx,sy)=(2,2) => global_id=889
[DBG]  agent 30 t=3 => decoded (sx,sy)=(2,1) => global_id=888
[DBG]  agent 30 t=4 => decoded (sx,sy)=(2,0) => global_id=887
[DBG]  Complete path of agent 30:
[DBG]    Original: 922 922 922 921 953 953 952 952 920 919 919 887 886 854 822 821 820 788 756 724 692 660 628 629 597 565 566 534 502 503 
[DBG]    New:     922 922 922 921 953 953 921 889 888 887 886 854 822 821 820 788 756 724 692 660 628 629 597 565 566 534 502 503 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 922 922 922 921 953 
[DBG]    Local path (in submap): 953 921 889 888 887 886 854 
[DBG]    Suffix (out of submap): 822 821 820 788 756 724 692 660 628 629 597 565 566 534 502 503 
[DBG]  Original agent path length 30 je: 30
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 3: 922, 922, 922, 921, 953, 953, 921, 889, 888, 887, 886, 854, 822, 821, 820, 788, 756, 724, 692, 660, 628, 629, 597, 565, 566, 534, 502, 503, 
[DBG]  Path for agent 30 updated, resulting length: 28
[DBG]  Update the agent path 47 | Original local length: 2 | New local length: 2
[DBG]  agent 47 t=0 => decoded (sx,sy)=(0,1) => global_id=824
[DBG]  agent 47 t=1 => decoded (sx,sy)=(0,0) => global_id=823
[DBG]  Complete path of agent 47:
[DBG]    Original: 730 729 761 793 792 824 823 822 821 820 819 851 850 849 848 847 815 814 813 812 811 810 
[DBG]    New:     730 729 761 793 792 824 823 822 821 820 819 851 850 849 848 847 815 814 813 812 811 810 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 730 729 761 793 792 
[DBG]    Local path (in submap): 824 823 
[DBG]    Suffix (out of submap): 822 821 820 819 851 850 849 848 847 815 814 813 812 811 810 
[DBG]  Original agent path length 47 je: 22
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 4: 730, 729, 761, 793, 792, 824, 823, 822, 821, 820, 819, 851, 850, 849, 848, 847, 815, 814, 813, 812, 811, 810, 
[DBG]  Path for agent 47 updated, resulting length: 22
[DBG]  Update the agent path 101 | Original local length: 1 | New local length: 1
[DBG]  agent 101 t=0 => decoded (sx,sy)=(2,0) => global_id=887
[DBG]  Complete path of agent 101:
[DBG]    Original: 985 984 952 920 888 887 886 885 884 883 882 850 849 848 847 815 814 813 781 780 779 747 715 714 714 714 682 650 651 619 587 588 556 524 492 491 490 489 457 425 393 361 360 328 296 264 232 200 168 
[DBG]    New:     985 984 952 920 888 887 886 885 884 883 882 850 849 848 847 815 814 813 781 780 779 747 715 714 714 714 682 650 651 619 587 588 556 524 492 491 490 489 457 425 393 361 360 328 296 264 232 200 168 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 985 984 952 920 888 
[DBG]    Local path (in submap): 887 
[DBG]    Suffix (out of submap): 886 885 884 883 882 850 849 848 847 815 814 813 781 780 779 747 715 714 714 714 682 650 651 619 587 588 556 524 492 491 490 489 457 425 393 361 360 328 296 264 232 200 168 
[DBG]  Original agent path length 101 je: 49
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 5: 985, 984, 952, 920, 888, 887, 886, 885, 884, 883, 882, 850, 849, 848, 847, 815, 814, 813, 781, 780, 779, 747, 715, 714, 714, 714, 682, 650, 651, 619, 587, 588, 556, 524, 492, 491, 490, 489, 457, 425, 393, 361, 360, 328, 296, 264, 232, 200, 168, 
[DBG]  Path for agent 101 updated, resulting length: 49
[DBG]  Update the agent path 142 | Original local length: 7 | New local length: 3
[DBG]  agent 142 t=0 => decoded (sx,sy)=(1,2) => global_id=857
[DBG]  agent 142 t=1 => decoded (sx,sy)=(1,1) => global_id=856
[DBG]  agent 142 t=2 => decoded (sx,sy)=(0,1) => global_id=824
[DBG]  Complete path of agent 142:
[DBG]    Original: 795 795 827 826 858 857 856 824 823 823 823 824 792 793 761 761 761 729 697 696 664 632 600 601 602 603 571 539 507 
[DBG]    New:     795 795 827 826 858 857 856 824 792 793 761 761 761 729 697 696 664 632 600 601 602 603 571 539 507 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 795 795 827 826 858 
[DBG]    Local path (in submap): 857 856 824 792 793 761 761 
[DBG]    Suffix (out of submap): 761 729 697 696 664 632 600 601 602 603 571 539 507 
[DBG]  Original agent path length 142 je: 29
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 6: 795, 795, 827, 826, 858, 857, 856, 824, 792, 793, 761, 761, 761, 729, 697, 696, 664, 632, 600, 601, 602, 603, 571, 539, 507, 
[DBG]  Path for agent 142 updated, resulting length: 25
[DBG]  Paths successfully updated.
[DBG]  (LNS.cpp) New path for agent 4: 
[DBG]  829, 861, 893, 892, 924, 923, 922, 921, 920, 919, 887, 886, 885, 884, 883, 882, 914, 913, 912, 880, 879, 878, 877, 876, 875, 843, 811, 779, 747, 746, 714, 682, 650, 649, 648, 647, 615, 583, 
[DBG]  (LNS.cpp) New path for agent 14: 
[DBG]  859, 859, 858, 890, 889, 889, 888, 920, 919, 918, 917, 916, 916, 884, 883, 882, 881, 880, 879, 878, 877, 876, 875, 874, 873, 841, 809, 808, 807, 
[DBG]  (LNS.cpp) New path for agent 24: 
[DBG]  891, 891, 891, 891, 891, 891, 859, 860, 861, 862, 830, 830, 830, 830, 830, 829, 797, 765, 764, 732, 731, 730, 730, 730, 730, 730, 730, 730, 730, 729, 697, 696, 664, 632, 633, 
[DBG]  (LNS.cpp) New path for agent 30: 
[DBG]  922, 922, 922, 921, 953, 953, 921, 889, 888, 887, 886, 854, 822, 821, 820, 788, 756, 724, 692, 660, 628, 629, 597, 565, 566, 534, 502, 503, 
[DBG]  (LNS.cpp) New path for agent 47: 
[DBG]  730, 729, 761, 793, 792, 824, 823, 822, 821, 820, 819, 851, 850, 849, 848, 847, 815, 814, 813, 812, 811, 810, 
[DBG]  (LNS.cpp) New path for agent 101: 
[DBG]  985, 984, 952, 920, 888, 887, 886, 885, 884, 883, 882, 850, 849, 848, 847, 815, 814, 813, 781, 780, 779, 747, 715, 714, 714, 714, 682, 650, 651, 619, 587, 588, 556, 524, 492, 491, 490, 489, 457, 425, 393, 361, 360, 328, 296, 264, 232, 200, 168, 
[DBG]  (LNS.cpp) New path for agent 142: 
[DBG]  795, 795, 827, 826, 858, 857, 856, 824, 792, 793, 761, 761, 761, 729, 697, 696, 664, 632, 600, 601, 602, 603, 571, 539, 507, 
[DBG]  component_weights = {0.319276, 0.142301, 0.148811, 0.389612}
[DBG]  opSuccess value: 1
[STAT] neighbor.sum_of_costs before recomputation: 219
[STAT] neighbor.old_sum_of_costs before recomputation: 236
[STAT] sum_of_costs before recomputation: 4350
[DBG]  Validate solution immediately after SAT success.
[WARNING] Problem after SAT: Vertex conflict between agents 14 and 4 at location 884 at timestep 13
[DBG]  Attempting immediate repair via init_lns because problem occurred after SAT (should be applied only for conflicts...).
[DBG]  Passing 150 agents to init_lns (skip=true).
[DBG]  path_table contents for selected agents (neighbor.agents):
[DBG]    Agent 4 => controlling path length=38
[DBG]    Agent 14 => controlling path length=29
[DBG]    Agent 24 => controlling path length=35
[DBG]    Agent 30 => controlling path length=28
[DBG]    Agent 47 => controlling path length=22
[DBG]    Agent 101 => controlling path length=49
[DBG]    Agent 142 => controlling path length=25
[DBG]  hodnota skip_initial_solution=1
[DBG]  We skip initialSolution => call buildCollisionData()
[DBG]  buildCollisionData() called â€“ skip_initial_solution case.
[DBG]  Agents.size()=150, collision_graph.size()=150
[DBG]  agent 4 => updateCollidingPairs => foundCollision
[DBG]  agent 7 => updateCollidingPairs => foundCollision
[DBG]  agent 11 => updateCollidingPairs => foundCollision
[DBG]  agent 14 => updateCollidingPairs => foundCollision
[DBG]  agent 20 => updateCollidingPairs => foundCollision
[DBG]  agent 24 => updateCollidingPairs => foundCollision
[DBG]  agent 30 => updateCollidingPairs => foundCollision
[DBG]  agent 33 => updateCollidingPairs => foundCollision
[DBG]  agent 35 => updateCollidingPairs => foundCollision
[DBG]  agent 39 => updateCollidingPairs => foundCollision
[DBG]  agent 56 => updateCollidingPairs => foundCollision
[DBG]  agent 70 => updateCollidingPairs => foundCollision
[DBG]  agent 79 => updateCollidingPairs => foundCollision
[DBG]  agent 86 => updateCollidingPairs => foundCollision
[DBG]  agent 103 => updateCollidingPairs => foundCollision
[DBG]  agent 108 => updateCollidingPairs => foundCollision
[DBG]  agent 109 => updateCollidingPairs => foundCollision
[DBG]  agent 111 => updateCollidingPairs => foundCollision
[DBG]  agent 133 => updateCollidingPairs => foundCollision
[DBG]  agent 137 => updateCollidingPairs => foundCollision
[DBG]  agent 142 => updateCollidingPairs => foundCollision
[DBG]  Conflicting agent pairs:
[DBG]  agent 4 is in conflict with agent 14
[DBG]  agent 7 is in conflict with agent 142
[DBG]  agent 11 is in conflict with agent 24
[DBG]  agent 14 is in conflict with agent 20
[DBG]  agent 14 is in conflict with agent 35
[DBG]  agent 14 is in conflict with agent 39
[DBG]  agent 14 is in conflict with agent 103
[DBG]  agent 14 is in conflict with agent 111
[DBG]  agent 14 is in conflict with agent 137
[DBG]  agent 24 is in conflict with agent 35
[DBG]  agent 24 is in conflict with agent 108
[DBG]  agent 30 is in conflict with agent 56
[DBG]  agent 30 is in conflict with agent 79
[DBG]  agent 33 is in conflict with agent 142
[DBG]  agent 70 is in conflict with agent 142
[DBG]  agent 86 is in conflict with agent 142
[DBG]  agent 109 is in conflict with agent 142
[DBG]  agent 133 is in conflict with agent 142
[DBG]  buildCollisionData() => sum_of_costs=4333, num_of_colliding_pairs=18
[DBG]  buildCollisionData done => sum_of_costs=4333, num_of_colliding_pairs=18
[DBG]  sum_of_cost hodnota: 4333
[DBG]  After skip/init build => iteration_stats.back(): sum_of_costs=4333, collisions=18
[DEBUG] Using default neighbor generation strategy for conflicts: 0
[DEBUG] Using default neighbor generation strategy for conflicts: 0
[DEBUG] Using default neighbor generation strategy for conflicts: 0
[DEBUG] Using default neighbor generation strategy for conflicts: 2
[DEBUG] Using default neighbor generation strategy for conflicts: 2
[DEBUG] Using default neighbor generation strategy for conflicts: 2
[DEBUG] Using default neighbor generation strategy for conflicts: 0
	InitLNS(PP): runtime = 0.0531085, iterations = 8, colliding pairs = 0, initial colliding pairs = 18, solution cost = 4346, initial solution cost = 4333, failed iterations = 0
[DBG]  init_lns->sum_of_costs after init_lns->run: 4346
[DBG]  sum_of_costs after assignment from init_lns->run: 4346
[DBG]  Recomputing sum_of_cost by dividing neighbor.sum_of_costs and neighbor.old_sum_of_costs
[STAT] sum_of_costs after recomputation: 4346
[STAT] Iteration 91
[DBG]  Using SAT operator (destroy+repair SAT).
[DBG]  ====================
[DBG]  SAT destroy operator called.
[DBG]  SAT heuristic: 2
[DBG]  key_agent_id: 33
[DBG]  key_agent_id global path length: 29
[DBG]  Submap content (global positions):
[DBG]  329 330 331 332 333 
[DBG]  361 362 363 364 365 
[DBG]  393 394 395 396 397 
[DBG]  425 426 427 428 429 
[DBG]  457 458 459 460 461 
[DBG]  Map content with agents and obstacles:
[DBG]  A . . X A 
[DBG]  . . . X . 
[DBG]  A X A X X 
[DBG]  A . . . . 
[DBG]  . . . . X 
[DBG]  content of the map structure that we pass to the SAT solver:
[DBG]  1  1  1  -1  1  
[DBG]  1  1  1  -1  1  
[DBG]  1  -1  1  -1  -1  
[DBG]  1  1  1  1  1  
[DBG]  1  1  1  1  -1  
[DBG]  Identifying agents in a submap for rescheduling (when key_agent is there at the time 4):
[DBG]  Agent 16 found intervals in the sub-map:
[DBG]   [4..8]
[DBG]  Agent 16 (interval in submap: [4..8]) contains time 4, added to replan.
[DBG]  Agent 22 found intervals in the sub-map:
[DBG]   [0..12]
[DBG]  Agent 22 (interval in submap: [0..12]) contains time 4, added to replan.
[DBG]  Agent 33 found intervals in the sub-map:
[DBG]   [1..7]
[DBG]  Agent 33 (interval in submap: [1..7]) contains time 4, added to replan.
[DBG]  Agent 125 found intervals in the sub-map:
[DBG]   [3..5] [15..19]
[DBG]  Agent 125 (interval in submap: [3..5]) contains time 4, added to replan.
[DBG]  Agent 127 found intervals in the sub-map:
[DBG]   [0..5]
[DBG]  Agent 127 (interval in submap: [0..5]) contains time 4, added to replan.
[DBG]  Agent 16 | Start (global): 425 -> (local): (3, 0) at time 4 | Goal (global): 429 -> (local): (3, 4) at time 8
[DBG]  Agent 22 | Start (global): 329 -> (local): (0, 0) at time 4 | Goal (global): 429 -> (local): (3, 4) at time 12
[DBG]  Agent 33 | Start (global): 395 -> (local): (2, 2) at time 4 | Goal (global): 429 -> (local): (3, 4) at time 7
[DBG]  Agent 125 | Start (global): 333 -> (local): (0, 4) at time 4 | Goal (global): 333 -> (local): (0, 4) at time 5
[DBG]  Agent 127 | Start (global): 393 -> (local): (2, 0) at time 4 | Goal (global): 361 -> (local): (1, 0) at time 5
[DBG]  [REPAIR] SAT destroy operator called.
[DBG]  [REPAIR] SAT operator â€“ launching subproblem FOR OPTIMIZATION.
[DBG]  Creating local paths (sx, sy) in the submap for T_sync = 4
[DBG]    Agent 16 (global paths from T=4 to 8) has local path: (3,0) (3,1) (3,2) (3,3) (3,4) 
[DBG]    Agent 22 (global paths from T=4 to 12) has local path: (0,0) (0,0) (1,0) (1,1) (1,2) (2,2) (3,2) (3,3) (3,4) 
[DBG]    Agent 33 (global paths from T=4 to 7) has local path: (2,2) (3,2) (3,3) (3,4) 
[DBG]    Agent 125 (global paths from T=4 to 5) has local path: (0,4) (0,4) 
[DBG]    Agent 127 (global paths from T=4 to 5) has local path: (2,0) (1,0) 
[DBG]  Checking input data for SAT solver:
[DBG]    - Number of agents to replan: 5
[DBG]  Agent 16 has the original local path length: 5 => Start (3,0), Goal (3,4)
[DBG]  Agent 22 has the original local path length: 9 => Start (0,0), Goal (3,4)
[DBG]  Agent 33 has the original local path length: 4 => Start (2,2), Goal (3,4)
[DBG]  Agent 125 has the original local path length: 2 => Start (0,4), Goal (0,4)
[DBG]  Agent 127 has the original local path length: 2 => Start (2,0), Goal (1,0)
[DBG]  Start position: (3, 0), (0, 0), (2, 2), (0, 4), (2, 0), 
[DBG]  Goal position: (3, 4), (3, 4), (3, 4), (0, 4), (1, 0), 
[DBG]  SAT instance and solver created.
Currently solving
Instance name: scen
Map name: map
Encoding used: disappear_at_goal
SAT solver used: Kissat
Optimizing function: sum of costs
Number of agents: 5
Mks LB: 8
SoC LB: 20
Delta: 0
Remaining time: 300000 [ms]

Vertex conflict! Agents 0, 2, timestep 5, location 0
Swapping conflict! Agents 0, 2, timestep 5, edge (0,0)
Vertex conflict! Agents 0, 2, timestep 6, location 0
Swapping conflict! Agents 0, 2, timestep 6, edge (0,0)
Vertex conflict! Agents 0, 2, timestep 7, location 0
Vertex conflict! Agents 0, 3, timestep 5, location 0
Swapping conflict! Agents 0, 3, timestep 5, edge (0,0)
Vertex conflict! Agents 0, 3, timestep 6, location 0
Swapping conflict! Agents 0, 3, timestep 6, edge (0,0)
Vertex conflict! Agents 0, 3, timestep 7, location 0
Vertex conflict! Agents 0, 4, timestep 5, location 0
Swapping conflict! Agents 0, 4, timestep 5, edge (0,0)
Vertex conflict! Agents 0, 4, timestep 6, location 0
Swapping conflict! Agents 0, 4, timestep 6, edge (0,0)
Vertex conflict! Agents 0, 4, timestep 7, location 0
Vertex conflict! Agents 2, 3, timestep 4, location 0
Swapping conflict! Agents 2, 3, timestep 4, edge (0,0)
Vertex conflict! Agents 2, 3, timestep 5, location 0
Swapping conflict! Agents 2, 3, timestep 5, edge (0,0)
Vertex conflict! Agents 2, 3, timestep 6, location 0
Swapping conflict! Agents 2, 3, timestep 6, edge (0,0)
Vertex conflict! Agents 2, 3, timestep 7, location 0
Vertex conflict! Agents 2, 4, timestep 4, location 0
Swapping conflict! Agents 2, 4, timestep 4, edge (0,0)
Vertex conflict! Agents 2, 4, timestep 5, location 0
Swapping conflict! Agents 2, 4, timestep 5, edge (0,0)
Vertex conflict! Agents 2, 4, timestep 6, location 0
Swapping conflict! Agents 2, 4, timestep 6, edge (0,0)
Vertex conflict! Agents 2, 4, timestep 7, location 0
Vertex conflict! Agents 3, 4, timestep 2, location 0
Swapping conflict! Agents 3, 4, timestep 2, edge (0,0)
Vertex conflict! Agents 3, 4, timestep 3, location 0
Swapping conflict! Agents 3, 4, timestep 3, edge (0,0)
Vertex conflict! Agents 3, 4, timestep 4, location 0
Swapping conflict! Agents 3, 4, timestep 4, edge (0,0)
Vertex conflict! Agents 3, 4, timestep 5, location 0
Swapping conflict! Agents 3, 4, timestep 5, edge (0,0)
Vertex conflict! Agents 3, 4, timestep 6, location 0
Swapping conflict! Agents 3, 4, timestep 6, edge (0,0)
Vertex conflict! Agents 3, 4, timestep 7, location 0
Found plan [agents = 5] [timesteps = 8]
Agent #0 : 10 11 12 13 14 0 0 0 
Agent #1 : 0 1 5 6 9 12 13 14 
Agent #2 : 9 12 13 14 0 0 0 0 
Agent #3 : 3 0 0 0 0 0 0 0 
Agent #4 : 8 4 0 0 0 0 0 0 

[STAT] Solver returned: 0
[DBG]  Agent (index) 16 | New local path (submap idx):
[DBG]  10 11 12 13 14 
[DBG]  Agent (index) 22 | New local path (submap idx):
[DBG]  0 1 5 6 9 12 13 14 
[DBG]  Agent (index) 33 | New local path (submap idx):
[DBG]  9 12 13 14 
[DBG]  Agent (index) 125 | New local path (submap idx):
[DBG]  3 
[DBG]  Agent (index) 127 | New local path (submap idx):
[DBG]  8 4 
[DBG]  Update the agent path 16 | Original local length: 5 | New local length: 5
[DBG]  agent 16 t=0 => decoded (sx,sy)=(3,0) => global_id=425
[DBG]  agent 16 t=1 => decoded (sx,sy)=(3,1) => global_id=426
[DBG]  agent 16 t=2 => decoded (sx,sy)=(3,2) => global_id=427
[DBG]  agent 16 t=3 => decoded (sx,sy)=(3,3) => global_id=428
[DBG]  agent 16 t=4 => decoded (sx,sy)=(3,4) => global_id=429
[DBG]  Complete path of agent 16:
[DBG]    Original: 454 422 423 424 425 426 427 428 429 430 430 431 432 400 368 367 335 336 337 338 306 274 
[DBG]    New:     454 422 423 424 425 426 427 428 429 430 430 431 432 400 368 367 335 336 337 338 306 274 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 454 422 423 424 
[DBG]    Local path (in submap): 425 426 427 428 429 
[DBG]    Suffix (out of submap): 430 430 431 432 400 368 367 335 336 337 338 306 274 
[DBG]  Original agent path length 16 je: 22
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 0: 454, 422, 423, 424, 425, 426, 427, 428, 429, 430, 430, 431, 432, 400, 368, 367, 335, 336, 337, 338, 306, 274, 
[DBG]  Path for agent 16 updated, resulting length: 22
[DBG]  Update the agent path 22 | Original local length: 9 | New local length: 8
[DBG]  agent 22 t=0 => decoded (sx,sy)=(0,0) => global_id=329
[DBG]  agent 22 t=1 => decoded (sx,sy)=(0,1) => global_id=330
[DBG]  agent 22 t=2 => decoded (sx,sy)=(1,1) => global_id=362
[DBG]  agent 22 t=3 => decoded (sx,sy)=(1,2) => global_id=363
[DBG]  agent 22 t=4 => decoded (sx,sy)=(2,2) => global_id=395
[DBG]  agent 22 t=5 => decoded (sx,sy)=(3,2) => global_id=427
[DBG]  agent 22 t=6 => decoded (sx,sy)=(3,3) => global_id=428
[DBG]  agent 22 t=7 => decoded (sx,sy)=(3,4) => global_id=429
[DBG]  Complete path of agent 22:
[DBG]    Original: 329 329 329 329 329 329 361 362 363 395 427 428 429 430 430 431 431 432 400 368 336 335 336 337 338 339 
[DBG]    New:     329 329 329 329 329 330 362 363 395 427 428 429 430 430 431 431 432 400 368 336 335 336 337 338 339 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 329 329 329 329 
[DBG]    Local path (in submap): 329 330 362 363 395 427 428 429 430 
[DBG]    Suffix (out of submap): 430 431 431 432 400 368 336 335 336 337 338 339 
[DBG]  Original agent path length 22 je: 26
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 1: 329, 329, 329, 329, 329, 330, 362, 363, 395, 427, 428, 429, 430, 430, 431, 431, 432, 400, 368, 336, 335, 336, 337, 338, 339, 
[DBG]  Path for agent 22 updated, resulting length: 25
[DBG]  Update the agent path 33 | Original local length: 4 | New local length: 4
[DBG]  agent 33 t=0 => decoded (sx,sy)=(2,2) => global_id=395
[DBG]  agent 33 t=1 => decoded (sx,sy)=(3,2) => global_id=427
[DBG]  agent 33 t=2 => decoded (sx,sy)=(3,3) => global_id=428
[DBG]  agent 33 t=3 => decoded (sx,sy)=(3,4) => global_id=429
[DBG]  Complete path of agent 33:
[DBG]    Original: 360 361 362 363 395 427 428 429 430 462 463 464 465 466 467 468 469 501 502 503 504 505 506 506 506 507 508 509 510 
[DBG]    New:     360 361 362 363 395 427 428 429 430 462 463 464 465 466 467 468 469 501 502 503 504 505 506 506 506 507 508 509 510 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 360 361 362 363 
[DBG]    Local path (in submap): 395 427 428 429 
[DBG]    Suffix (out of submap): 430 462 463 464 465 466 467 468 469 501 502 503 504 505 506 506 506 507 508 509 510 
[DBG]  Original agent path length 33 je: 29
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 2: 360, 361, 362, 363, 395, 427, 428, 429, 430, 462, 463, 464, 465, 466, 467, 468, 469, 501, 502, 503, 504, 505, 506, 506, 506, 507, 508, 509, 510, 
[DBG]  Path for agent 33 updated, resulting length: 29
[DBG]  Update the agent path 125 | Original local length: 2 | New local length: 1
[DBG]  agent 125 t=0 => decoded (sx,sy)=(0,4) => global_id=333
[DBG]  Complete path of agent 125:
[DBG]    Original: 430 398 366 365 333 333 301 301 301 300 268 267 266 298 297 329 361 393 425 457 489 521 520 519 551 583 615 647 646 678 710 742 774 775 
[DBG]    New:     430 398 366 365 333 301 301 301 300 268 267 266 298 297 329 361 393 425 457 489 521 520 519 551 583 615 647 646 678 710 742 774 775 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 430 398 366 365 
[DBG]    Local path (in submap): 333 301 
[DBG]    Suffix (out of submap): 301 301 300 268 267 266 298 297 329 361 393 425 457 489 521 520 519 551 583 615 647 646 678 710 742 774 775 
[DBG]  Original agent path length 125 je: 34
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 3: 430, 398, 366, 365, 333, 301, 301, 301, 300, 268, 267, 266, 298, 297, 329, 361, 393, 425, 457, 489, 521, 520, 519, 551, 583, 615, 647, 646, 678, 710, 742, 774, 775, 
[DBG]  Path for agent 125 updated, resulting length: 33
[DBG]  Update the agent path 127 | Original local length: 2 | New local length: 2
[DBG]  agent 127 t=0 => decoded (sx,sy)=(2,0) => global_id=393
[DBG]  agent 127 t=1 => decoded (sx,sy)=(1,0) => global_id=361
[DBG]  Complete path of agent 127:
[DBG]    Original: 428 427 426 425 393 361 360 328 328 296 264 232 200 168 136 104 105 73 
[DBG]    New:     428 427 426 425 393 361 360 328 328 296 264 232 200 168 136 104 105 73 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 428 427 426 425 
[DBG]    Local path (in submap): 393 361 
[DBG]    Suffix (out of submap): 360 328 328 296 264 232 200 168 136 104 105 73 
[DBG]  Original agent path length 127 je: 18
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 4: 428, 427, 426, 425, 393, 361, 360, 328, 328, 296, 264, 232, 200, 168, 136, 104, 105, 73, 
[DBG]  Path for agent 127 updated, resulting length: 18
[DBG]  Paths successfully updated.
[DBG]  (LNS.cpp) New path for agent 16: 
[DBG]  454, 422, 423, 424, 425, 426, 427, 428, 429, 430, 430, 431, 432, 400, 368, 367, 335, 336, 337, 338, 306, 274, 
[DBG]  (LNS.cpp) New path for agent 22: 
[DBG]  329, 329, 329, 329, 329, 330, 362, 363, 395, 427, 428, 429, 430, 430, 431, 431, 432, 400, 368, 336, 335, 336, 337, 338, 339, 
[DBG]  (LNS.cpp) New path for agent 33: 
[DBG]  360, 361, 362, 363, 395, 427, 428, 429, 430, 462, 463, 464, 465, 466, 467, 468, 469, 501, 502, 503, 504, 505, 506, 506, 506, 507, 508, 509, 510, 
[DBG]  (LNS.cpp) New path for agent 125: 
[DBG]  430, 398, 366, 365, 333, 301, 301, 301, 300, 268, 267, 266, 298, 297, 329, 361, 393, 425, 457, 489, 521, 520, 519, 551, 583, 615, 647, 646, 678, 710, 742, 774, 775, 
[DBG]  (LNS.cpp) New path for agent 127: 
[DBG]  428, 427, 426, 425, 393, 361, 360, 328, 328, 296, 264, 232, 200, 168, 136, 104, 105, 73, 
[DBG]  component_weights = {0.316737, 0.14117, 0.147628, 0.394465}
[DBG]  opSuccess value: 1
[STAT] neighbor.sum_of_costs before recomputation: 122
[STAT] neighbor.old_sum_of_costs before recomputation: 124
[STAT] sum_of_costs before recomputation: 4346
[DBG]  Validate solution immediately after SAT success.
[WARNING] Problem after SAT: Vertex conflict between agents 125 and 20 at location 300 at timestep 8
[DBG]  Attempting immediate repair via init_lns because problem occurred after SAT (should be applied only for conflicts...).
[DBG]  Passing 150 agents to init_lns (skip=true).
[DBG]  path_table contents for selected agents (neighbor.agents):
[DBG]    Agent 16 => controlling path length=22
[DBG]    Agent 22 => controlling path length=25
[DBG]    Agent 33 => controlling path length=29
[DBG]    Agent 125 => controlling path length=33
[DBG]    Agent 127 => controlling path length=18
[DBG]  hodnota skip_initial_solution=1
[DBG]  We skip initialSolution => call buildCollisionData()
[DBG]  buildCollisionData() called â€“ skip_initial_solution case.
[DBG]  Agents.size()=150, collision_graph.size()=150
[DBG]  agent 20 => updateCollidingPairs => foundCollision
[DBG]  agent 22 => updateCollidingPairs => foundCollision
[DBG]  agent 87 => updateCollidingPairs => foundCollision
[DBG]  agent 106 => updateCollidingPairs => foundCollision
[DBG]  agent 112 => updateCollidingPairs => foundCollision
[DBG]  agent 125 => updateCollidingPairs => foundCollision
[DBG]  agent 131 => updateCollidingPairs => foundCollision
[DBG]  agent 145 => updateCollidingPairs => foundCollision
[DBG]  Conflicting agent pairs:
[DBG]  agent 20 is in conflict with agent 125
[DBG]  agent 22 is in conflict with agent 106
[DBG]  agent 22 is in conflict with agent 131
[DBG]  agent 87 is in conflict with agent 125
[DBG]  agent 112 is in conflict with agent 125
[DBG]  agent 125 is in conflict with agent 145
[DBG]  buildCollisionData() => sum_of_costs=4344, num_of_colliding_pairs=6
[DBG]  buildCollisionData done => sum_of_costs=4344, num_of_colliding_pairs=6
[DBG]  sum_of_cost hodnota: 4344
[DBG]  After skip/init build => iteration_stats.back(): sum_of_costs=4344, collisions=6
[DEBUG] Using default neighbor generation strategy for conflicts: 2
[DEBUG] Using default neighbor generation strategy for conflicts: 0
	InitLNS(PP): runtime = 0.00709225, iterations = 3, colliding pairs = 0, initial colliding pairs = 6, solution cost = 4332, initial solution cost = 4344, failed iterations = 0
[DBG]  init_lns->sum_of_costs after init_lns->run: 4332
[DBG]  sum_of_costs after assignment from init_lns->run: 4332
[DBG]  Recomputing sum_of_cost by dividing neighbor.sum_of_costs and neighbor.old_sum_of_costs
[STAT] sum_of_costs after recomputation: 4332
[STAT] Iteration 92
[DBG]  Using SAT operator (destroy+repair SAT).
[DBG]  ====================
[DBG]  SAT destroy operator called.
[DBG]  SAT heuristic: 2
[DBG]  key_agent_id: 94
[DBG]  key_agent_id global path length: 24
[DBG]  Submap content (global positions):
[DBG]  572 573 574 575 -1 
[DBG]  604 605 606 607 -1 
[DBG]  636 637 638 639 -1 
[DBG]  668 669 670 671 -1 
[DBG]  700 701 702 703 -1 
[DBG]  Map content with agents and obstacles:
[DBG]  . X X X X 
[DBG]  . X X X X 
[DBG]  A . A . X 
[DBG]  . X . . X 
[DBG]  X . . . X 
[DBG]  content of the map structure that we pass to the SAT solver:
[DBG]  1  -1  -1  -1  1  
[DBG]  1  -1  -1  -1  1  
[DBG]  1  1  1  1  1  
[DBG]  1  -1  1  1  1  
[DBG]  -1  1  1  1  1  
[DBG]  Identifying agents in a submap for rescheduling (when key_agent is there at the time 3):
[DBG]  Agent 64 found intervals in the sub-map:
[DBG]   [0..4]
[DBG]  Agent 64 (interval in submap: [0..4]) contains time 3, added to replan.
[DBG]  Agent 94 found intervals in the sub-map:
[DBG]   [0..7]
[DBG]  Agent 94 (interval in submap: [0..7]) contains time 3, added to replan.
[DBG]  Agent 64 | Start (global): 636 -> (local): (2, 0) at time 3 | Goal (global): 604 -> (local): (1, 0) at time 4
[DBG]  Agent 94 | Start (global): 638 -> (local): (2, 2) at time 3 | Goal (global): 572 -> (local): (0, 0) at time 7
[DBG]  [REPAIR] SAT destroy operator called.
[DBG]  [REPAIR] SAT operator â€“ launching subproblem FOR OPTIMIZATION.
[DBG]  Creating local paths (sx, sy) in the submap for T_sync = 3
[DBG]    Agent 64 (global paths from T=3 to 4) has local path: (2,0) (1,0) 
[DBG]    Agent 94 (global paths from T=3 to 7) has local path: (2,2) (2,1) (2,0) (1,0) (0,0) 
[DBG]  Checking input data for SAT solver:
[DBG]    - Number of agents to replan: 2
[DBG]  Agent 64 has the original local path length: 2 => Start (2,0), Goal (1,0)
[DBG]  Agent 94 has the original local path length: 5 => Start (2,2), Goal (0,0)
[DBG]  Start position: (2, 0), (2, 2), 
[DBG]  Goal position: (1, 0), (0, 0), 
[DBG]  SAT instance and solver created.
Currently solving
Instance name: scen
Map name: map
Encoding used: disappear_at_goal
SAT solver used: Kissat
Optimizing function: sum of costs
Number of agents: 2
Mks LB: 5
SoC LB: 7
Delta: 0
Remaining time: 300000 [ms]

Vertex conflict! Agents 0, 1, timestep 4, location 0
Found plan [agents = 2] [timesteps = 5]
Agent #0 : 4 2 0 0 0 
Agent #1 : 6 5 4 2 0 

[STAT] Solver returned: 0
[DBG]  Agent (index) 64 | New local path (submap idx):
[DBG]  4 2 
[DBG]  Agent (index) 94 | New local path (submap idx):
[DBG]  6 5 4 2 0 
[DBG]  Update the agent path 64 | Original local length: 2 | New local length: 2
[DBG]  agent 64 t=0 => decoded (sx,sy)=(2,0) => global_id=636
[DBG]  agent 64 t=1 => decoded (sx,sy)=(1,0) => global_id=604
[DBG]  Complete path of agent 64:
[DBG]    Original: 639 638 637 636 604 603 571 570 538 506 474 473 472 440 439 407 375 343 311 279 247 215 214 213 181 180 
[DBG]    New:     639 638 637 636 604 603 571 570 538 506 474 473 472 440 439 407 375 343 311 279 247 215 214 213 181 180 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 639 638 637 
[DBG]    Local path (in submap): 636 604 
[DBG]    Suffix (out of submap): 603 571 570 538 506 474 473 472 440 439 407 375 343 311 279 247 215 214 213 181 180 
[DBG]  Original agent path length 64 je: 26
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 0: 639, 638, 637, 636, 604, 603, 571, 570, 538, 506, 474, 473, 472, 440, 439, 407, 375, 343, 311, 279, 247, 215, 214, 213, 181, 180, 
[DBG]  Path for agent 64 updated, resulting length: 26
[DBG]  Update the agent path 94 | Original local length: 5 | New local length: 5
[DBG]  agent 94 t=0 => decoded (sx,sy)=(2,2) => global_id=638
[DBG]  agent 94 t=1 => decoded (sx,sy)=(2,1) => global_id=637
[DBG]  agent 94 t=2 => decoded (sx,sy)=(2,0) => global_id=636
[DBG]  agent 94 t=3 => decoded (sx,sy)=(1,0) => global_id=604
[DBG]  agent 94 t=4 => decoded (sx,sy)=(0,0) => global_id=572
[DBG]  Complete path of agent 94:
[DBG]    Original: 701 702 670 638 637 636 604 572 540 540 508 507 475 443 411 379 378 377 345 313 281 249 248 216 
[DBG]    New:     701 702 670 638 637 636 604 572 540 540 508 507 475 443 411 379 378 377 345 313 281 249 248 216 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 701 702 670 
[DBG]    Local path (in submap): 638 637 636 604 572 
[DBG]    Suffix (out of submap): 540 540 508 507 475 443 411 379 378 377 345 313 281 249 248 216 
[DBG]  Original agent path length 94 je: 24
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 1: 701, 702, 670, 638, 637, 636, 604, 572, 540, 540, 508, 507, 475, 443, 411, 379, 378, 377, 345, 313, 281, 249, 248, 216, 
[DBG]  Path for agent 94 updated, resulting length: 24
[DBG]  Paths successfully updated.
[DBG]  (LNS.cpp) New path for agent 64: 
[DBG]  639, 638, 637, 636, 604, 603, 571, 570, 538, 506, 474, 473, 472, 440, 439, 407, 375, 343, 311, 279, 247, 215, 214, 213, 181, 180, 
[DBG]  (LNS.cpp) New path for agent 94: 
[DBG]  701, 702, 670, 638, 637, 636, 604, 572, 540, 540, 508, 507, 475, 443, 411, 379, 378, 377, 345, 313, 281, 249, 248, 216, 
[DBG]  component_weights = {0.321125, 0.140263, 0.14668, 0.391932}
[DBG]  opSuccess value: 1
[STAT] neighbor.sum_of_costs before recomputation: 48
[STAT] neighbor.old_sum_of_costs before recomputation: 48
[STAT] sum_of_costs before recomputation: 4332
[DBG]  Validate solution immediately after SAT success.
[DBG]  No problems after SAT replan.
[DBG]  Recomputing sum_of_cost by dividing neighbor.sum_of_costs and neighbor.old_sum_of_costs
[STAT] sum_of_costs after recomputation: 4332
[STAT] Iteration 93
[DBG]  Using SAT operator (destroy+repair SAT).
[DBG]  ====================
[DBG]  SAT destroy operator called.
[DBG]  SAT heuristic: 2
[DBG]  key_agent_id: 102
[DBG]  key_agent_id global path length: 30
[DBG]  Submap content (global positions):
[DBG]  890 891 892 893 894 
[DBG]  922 923 924 925 926 
[DBG]  954 955 956 957 958 
[DBG]  986 987 988 989 990 
[DBG]  1018 1019 1020 1021 1022 
[DBG]  Map content with agents and obstacles:
[DBG]  A . A . A 
[DBG]  A . . X X 
[DBG]  . . A . X 
[DBG]  . X . . . 
[DBG]  . . X . . 
[DBG]  content of the map structure that we pass to the SAT solver:
[DBG]  1  1  1  1  1  
[DBG]  1  1  1  -1  -1  
[DBG]  1  1  1  1  -1  
[DBG]  1  -1  1  1  1  
[DBG]  1  1  -1  1  1  
[DBG]  Identifying agents in a submap for rescheduling (when key_agent is there at the time 6):
[DBG]  Agent 4 found intervals in the sub-map:
[DBG]   [2..6]
[DBG]  Agent 4 (interval in submap: [2..6]) contains time 6, added to replan.
[DBG]  Agent 11 found intervals in the sub-map:
[DBG]   [0..7]
[DBG]  Agent 11 (interval in submap: [0..7]) contains time 6, added to replan.
[DBG]  Agent 30 found intervals in the sub-map:
[DBG]   [0..7]
[DBG]  Agent 30 (interval in submap: [0..7]) contains time 6, added to replan.
[DBG]  Agent 35 found intervals in the sub-map:
[DBG]   [6..12]
[DBG]  Agent 35 (interval in submap: [6..12]) contains time 6, added to replan.
[DBG]  Agent 58 found intervals in the sub-map:
[DBG]  
[DBG]  Agent 58 is not in sub-map at time 6 (intervals: 
[DBG]  )
[DBG]  Agent 102 found intervals in the sub-map:
[DBG]   [2..23] [29..29]
[DBG]  Agent 102 (interval in submap: [2..23]) contains time 6, added to replan.
[DBG]  Agent 133 found intervals in the sub-map:
[DBG]   [0..4]
[DBG]  Agent 133 is not in sub-map at time 6 (intervals: 
[DBG]  [0..4] )
[DBG]  Agent 4 | Start (global): 890 -> (local): (0, 0) at time 6 | Goal (global): 890 -> (local): (0, 0) at time 6
[DBG]  Agent 11 | Start (global): 892 -> (local): (0, 2) at time 6 | Goal (global): 893 -> (local): (0, 3) at time 7
[DBG]  Agent 30 | Start (global): 922 -> (local): (1, 0) at time 6 | Goal (global): 890 -> (local): (0, 0) at time 7
[DBG]  Agent 35 | Start (global): 894 -> (local): (0, 4) at time 6 | Goal (global): 890 -> (local): (0, 0) at time 12
[DBG]  Agent 102 | Start (global): 956 -> (local): (2, 2) at time 6 | Goal (global): 892 -> (local): (0, 2) at time 23
[DBG]  [REPAIR] SAT destroy operator called.
[DBG]  [REPAIR] SAT operator â€“ launching subproblem FOR OPTIMIZATION.
[DBG]  Creating local paths (sx, sy) in the submap for T_sync = 6
[DBG]    Agent 4 (global paths from T=6 to 6) has local path: (0,0) 
[DBG]    Agent 11 (global paths from T=6 to 7) has local path: (0,2) (0,3) 
[DBG]    Agent 30 (global paths from T=6 to 7) has local path: (1,0) (0,0) 
[DBG]    Agent 35 (global paths from T=6 to 12) has local path: (0,4) (0,4) (0,4) (0,3) (0,2) (0,1) (0,0) 
[DBG]    Agent 102 (global paths from T=6 to 23) has local path: (2,2) (2,1) (2,1) (2,1) (2,1) (2,1) (2,1) (2,1) (2,1) (2,1) (2,1) (2,1) (2,1) (2,1) (2,1) (2,2) (1,2) (0,2) 
[DBG]  Checking input data for SAT solver:
[DBG]    - Number of agents to replan: 5
[DBG]  Agent 4 has the original local path length: 1 => Start (0,0), Goal (0,0)
[DBG]  Agent 11 has the original local path length: 2 => Start (0,2), Goal (0,3)
[DBG]  Agent 30 has the original local path length: 2 => Start (1,0), Goal (0,0)
[DBG]  Agent 35 has the original local path length: 7 => Start (0,4), Goal (0,0)
[DBG]  Agent 102 has the original local path length: 18 => Start (2,2), Goal (0,2)
[DBG]  Start position: (0, 0), (0, 2), (1, 0), (0, 4), (2, 2), 
[DBG]  Goal position: (0, 0), (0, 3), (0, 0), (0, 0), (0, 2), 
[DBG]  SAT instance and solver created.
Currently solving
Instance name: scen
Map name: map
Encoding used: disappear_at_goal
SAT solver used: Kissat
Optimizing function: sum of costs
Number of agents: 5
Mks LB: 5
SoC LB: 13
Delta: 0
Remaining time: 300000 [ms]

[STAT] Solver returned: -1
[DBG]  SAT solver failed.
[STAT] SAT solver failed to find a valid solution.
[DBG]  ====================
[DBG]  SAT destroy operator called.
[DBG]  SAT heuristic: 2
[DBG]  key_agent_id: 102
[DBG]  key_agent_id global path length: 30
[DBG]  Submap content (global positions):
[DBG]  889 890 891 892 893 
[DBG]  921 922 923 924 925 
[DBG]  953 954 955 956 957 
[DBG]  985 986 987 988 989 
[DBG]  1017 1018 1019 1020 1021 
[DBG]  Map content with agents and obstacles:
[DBG]  . . . . A 
[DBG]  . . . . X 
[DBG]  . . A . . 
[DBG]  . . X . . 
[DBG]  . . . X . 
[DBG]  content of the map structure that we pass to the SAT solver:
[DBG]  1  1  1  1  1  
[DBG]  1  1  1  1  -1  
[DBG]  1  1  1  1  1  
[DBG]  1  1  -1  1  1  
[DBG]  1  1  1  -1  1  
[DBG]  Identifying agents in a submap for rescheduling (when key_agent is there at the time 9):
[DBG]  Agent 11 found intervals in the sub-map:
[DBG]   [1..7]
[DBG]  Agent 11 is not in sub-map at time 9 (intervals: 
[DBG]  [1..7] )
[DBG]  Agent 35 found intervals in the sub-map:
[DBG]   [9..14]
[DBG]  Agent 35 (interval in submap: [9..14]) contains time 9, added to replan.
[DBG]  Agent 102 found intervals in the sub-map:
[DBG]   [3..23] [29..29]
[DBG]  Agent 102 (interval in submap: [3..23]) contains time 9, added to replan.
[DBG]  Agent 142 found intervals in the sub-map:
[DBG]  
[DBG]  Agent 142 is not in sub-map at time 9 (intervals: 
[DBG]  )
[DBG]  Agent 35 | Start (global): 893 -> (local): (0, 4) at time 9 | Goal (global): 921 -> (local): (1, 0) at time 14
[DBG]  Agent 102 | Start (global): 955 -> (local): (2, 2) at time 9 | Goal (global): 892 -> (local): (0, 3) at time 23
[DBG]  [REPAIR] SAT destroy operator called.
[DBG]  [REPAIR] SAT operator â€“ launching subproblem FOR OPTIMIZATION.
[DBG]  Creating local paths (sx, sy) in the submap for T_sync = 9
[DBG]    Agent 35 (global paths from T=9 to 14) has local path: (0,4) (0,3) (0,2) (0,1) (0,0) (1,0) 
[DBG]    Agent 102 (global paths from T=9 to 23) has local path: (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,3) (1,3) (0,3) 
[DBG]  Checking input data for SAT solver:
[DBG]    - Number of agents to replan: 2
[DBG]  Agent 35 has the original local path length: 6 => Start (0,4), Goal (1,0)
[DBG]  Agent 102 has the original local path length: 15 => Start (2,2), Goal (0,3)
[DBG]  Start position: (0, 4), (2, 2), 
[DBG]  Goal position: (1, 0), (0, 3), 
[DBG]  SAT instance and solver created.
Currently solving
Instance name: scen
Map name: map
Encoding used: disappear_at_goal
SAT solver used: Kissat
Optimizing function: sum of costs
Number of agents: 2
Mks LB: 6
SoC LB: 10
Delta: 0
Remaining time: 300000 [ms]

Found plan [agents = 2] [timesteps = 6]
Agent #0 : 4 3 8 7 6 5 
Agent #1 : 11 7 2 3 0 0 

[STAT] Solver returned: 0
[DBG]  Agent (index) 35 | New local path (submap idx):
[DBG]  4 3 8 7 6 5 
[DBG]  Agent (index) 102 | New local path (submap idx):
[DBG]  11 7 2 3 
[DBG]  Update the agent path 35 | Original local length: 6 | New local length: 6
[DBG]  agent 35 t=0 => decoded (sx,sy)=(0,4) => global_id=893
[DBG]  agent 35 t=1 => decoded (sx,sy)=(0,3) => global_id=892
[DBG]  agent 35 t=2 => decoded (sx,sy)=(1,3) => global_id=924
[DBG]  agent 35 t=3 => decoded (sx,sy)=(1,2) => global_id=923
[DBG]  agent 35 t=4 => decoded (sx,sy)=(1,1) => global_id=922
[DBG]  agent 35 t=5 => decoded (sx,sy)=(1,0) => global_id=921
[DBG]  Complete path of agent 35:
[DBG]    Original: 735 767 799 798 830 862 894 894 894 893 892 891 890 889 921 920 919 918 917 916 916 916 916 884 883 882 881 880 879 878 877 909 941 973 1005 1004 1003 1002 1001 1000 968 936 935 934 902 870 838 837 805 773 741 740 739 738 737 736 
[DBG]    New:     735 767 799 798 830 862 894 894 894 893 892 924 923 922 921 920 919 918 917 916 916 916 916 884 883 882 881 880 879 878 877 909 941 973 1005 1004 1003 1002 1001 1000 968 936 935 934 902 870 838 837 805 773 741 740 739 738 737 736 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 735 767 799 798 830 862 894 894 894 
[DBG]    Local path (in submap): 893 892 924 923 922 921 
[DBG]    Suffix (out of submap): 920 919 918 917 916 916 916 916 884 883 882 881 880 879 878 877 909 941 973 1005 1004 1003 1002 1001 1000 968 936 935 934 902 870 838 837 805 773 741 740 739 738 737 736 
[DBG]  Original agent path length 35 je: 56
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 0: 735, 767, 799, 798, 830, 862, 894, 894, 894, 893, 892, 924, 923, 922, 921, 920, 919, 918, 917, 916, 916, 916, 916, 884, 883, 882, 881, 880, 879, 878, 877, 909, 941, 973, 1005, 1004, 1003, 1002, 1001, 1000, 968, 936, 935, 934, 902, 870, 838, 837, 805, 773, 741, 740, 739, 738, 737, 736, 
[DBG]  Path for agent 35 updated, resulting length: 56
[DBG]  Update the agent path 102 | Original local length: 15 | New local length: 4
[DBG]  agent 102 t=0 => decoded (sx,sy)=(2,2) => global_id=955
[DBG]  agent 102 t=1 => decoded (sx,sy)=(1,2) => global_id=923
[DBG]  agent 102 t=2 => decoded (sx,sy)=(0,2) => global_id=891
[DBG]  agent 102 t=3 => decoded (sx,sy)=(0,3) => global_id=892
[DBG]  Complete path of agent 102:
[DBG]    Original: 991 1023 1022 1021 989 957 956 955 955 955 955 955 955 955 955 955 955 955 955 955 955 956 924 892 860 859 858 858 858 890 
[DBG]    New:     991 1023 1022 1021 989 957 956 955 955 955 923 891 892 860 859 858 858 858 890 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 991 1023 1022 1021 989 957 956 955 955 
[DBG]    Local path (in submap): 955 923 891 892 860 859 858 858 858 890 
[DBG]    Suffix (out of submap): 
[DBG]  Original agent path length 102 je: 30
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 1: 991, 1023, 1022, 1021, 989, 957, 956, 955, 955, 955, 923, 891, 892, 860, 859, 858, 858, 858, 890, 
[DBG]  Path for agent 102 updated, resulting length: 19
[DBG]  Paths successfully updated.
[DBG]  (LNS.cpp) New path for agent 35: 
[DBG]  735, 767, 799, 798, 830, 862, 894, 894, 894, 893, 892, 924, 923, 922, 921, 920, 919, 918, 917, 916, 916, 916, 916, 884, 883, 882, 881, 880, 879, 878, 877, 909, 941, 973, 1005, 1004, 1003, 1002, 1001, 1000, 968, 936, 935, 934, 902, 870, 838, 837, 805, 773, 741, 740, 739, 738, 737, 736, 
[DBG]  (LNS.cpp) New path for agent 102: 
[DBG]  991, 1023, 1022, 1021, 989, 957, 956, 955, 955, 955, 923, 891, 892, 860, 859, 858, 858, 858, 890, 
[DBG]  component_weights = {0.318412, 0.139078, 0.145441, 0.39707}
[DBG]  opSuccess value: 1
[STAT] neighbor.sum_of_costs before recomputation: 73
[STAT] neighbor.old_sum_of_costs before recomputation: 84
[STAT] sum_of_costs before recomputation: 4332
[DBG]  Validate solution immediately after SAT success.
[WARNING] Problem after SAT: Target conflict: agent 39 (len 30) traverses target of agent 102 (len 18) at location 890 at timestep 28
[DBG]  Attempting immediate repair via init_lns because problem occurred after SAT (should be applied only for conflicts...).
[DBG]  Passing 150 agents to init_lns (skip=true).
[DBG]  path_table contents for selected agents (neighbor.agents):
[DBG]    Agent 35 => controlling path length=56
[DBG]    Agent 102 => controlling path length=19
[DBG]  hodnota skip_initial_solution=1
[DBG]  We skip initialSolution => call buildCollisionData()
[DBG]  buildCollisionData() called â€“ skip_initial_solution case.
[DBG]  Agents.size()=150, collision_graph.size()=150
[DBG]  agent 39 => updateCollidingPairs => foundCollision
[DBG]  agent 102 => updateCollidingPairs => foundCollision
[DBG]  Conflicting agent pairs:
[DBG]  agent 39 is in conflict with agent 102
[DBG]  buildCollisionData() => sum_of_costs=4321, num_of_colliding_pairs=1
[DBG]  buildCollisionData done => sum_of_costs=4321, num_of_colliding_pairs=1
[DBG]  sum_of_cost hodnota: 4321
[DBG]  After skip/init build => iteration_stats.back(): sum_of_costs=4321, collisions=1
[DEBUG] Using default neighbor generation strategy for conflicts: 0
	InitLNS(PP): runtime = 0.00358975, iterations = 2, colliding pairs = 0, initial colliding pairs = 1, solution cost = 4321, initial solution cost = 4321, failed iterations = 0
[DBG]  init_lns->sum_of_costs after init_lns->run: 4321
[DBG]  sum_of_costs after assignment from init_lns->run: 4321
[DBG]  Recomputing sum_of_cost by dividing neighbor.sum_of_costs and neighbor.old_sum_of_costs
[STAT] sum_of_costs after recomputation: 4321
[STAT] Iteration 94
[DBG]  Using SAT operator (destroy+repair SAT).
[DBG]  ====================
[DBG]  SAT destroy operator called.
[DBG]  SAT heuristic: 2
[DBG]  key_agent_id: 133
[DBG]  key_agent_id global path length: 35
[DBG]  Submap content (global positions):
[DBG]  572 573 574 575 -1 
[DBG]  604 605 606 607 -1 
[DBG]  636 637 638 639 -1 
[DBG]  668 669 670 671 -1 
[DBG]  700 701 702 703 -1 
[DBG]  Map content with agents and obstacles:
[DBG]  . X X X X 
[DBG]  A X X X X 
[DBG]  A . A . X 
[DBG]  . X . . X 
[DBG]  X . A . X 
[DBG]  content of the map structure that we pass to the SAT solver:
[DBG]  1  -1  -1  -1  1  
[DBG]  1  -1  -1  -1  1  
[DBG]  1  1  1  1  1  
[DBG]  1  -1  1  1  1  
[DBG]  -1  1  1  1  1  
[DBG]  Identifying agents in a submap for rescheduling (when key_agent is there at the time 15):
[DBG]  Agent 25 found intervals in the sub-map:
[DBG]   [8..15]
[DBG]  Agent 25 (interval in submap: [8..15]) contains time 15, added to replan.
[DBG]  Agent 58 found intervals in the sub-map:
[DBG]   [9..17]
[DBG]  Agent 58 (interval in submap: [9..17]) contains time 15, added to replan.
[DBG]  Agent 133 found intervals in the sub-map:
[DBG]   [12..20]
[DBG]  Agent 133 (interval in submap: [12..20]) contains time 15, added to replan.
[DBG]  Agent 142 found intervals in the sub-map:
[DBG]   [14..21]
[DBG]  Agent 142 (interval in submap: [14..21]) contains time 15, added to replan.
[DBG]  Agent 25 | Start (global): 604 -> (local): (1, 0) at time 15 | Goal (global): 604 -> (local): (1, 0) at time 15
[DBG]  Agent 58 | Start (global): 636 -> (local): (2, 0) at time 15 | Goal (global): 572 -> (local): (0, 0) at time 17
[DBG]  Agent 133 | Start (global): 638 -> (local): (2, 2) at time 15 | Goal (global): 572 -> (local): (0, 0) at time 20
[DBG]  Agent 142 | Start (global): 702 -> (local): (4, 2) at time 15 | Goal (global): 604 -> (local): (1, 0) at time 21
[DBG]  [REPAIR] SAT destroy operator called.
[DBG]  [REPAIR] SAT operator â€“ launching subproblem FOR OPTIMIZATION.
[DBG]  Creating local paths (sx, sy) in the submap for T_sync = 15
[DBG]    Agent 25 (global paths from T=15 to 15) has local path: (1,0) 
[DBG]    Agent 58 (global paths from T=15 to 17) has local path: (2,0) (1,0) (0,0) 
[DBG]    Agent 133 (global paths from T=15 to 20) has local path: (2,2) (2,1) (2,0) (1,0) (0,0) (0,0) 
[DBG]    Agent 142 (global paths from T=15 to 21) has local path: (4,2) (3,2) (2,2) (2,1) (2,0) (1,0) (1,0) 
[DBG]  Checking input data for SAT solver:
[DBG]    - Number of agents to replan: 4
[DBG]  Agent 25 has the original local path length: 1 => Start (1,0), Goal (1,0)
[DBG]  Agent 58 has the original local path length: 3 => Start (2,0), Goal (0,0)
[DBG]  Agent 133 has the original local path length: 6 => Start (2,2), Goal (0,0)
[DBG]  Agent 142 has the original local path length: 7 => Start (4,2), Goal (1,0)
[DBG]  Start position: (1, 0), (2, 0), (2, 2), (4, 2), 
[DBG]  Goal position: (1, 0), (0, 0), (0, 0), (1, 0), 
[DBG]  SAT instance and solver created.
Currently solving
Instance name: scen
Map name: map
Encoding used: disappear_at_goal
SAT solver used: Kissat
Optimizing function: sum of costs
Number of agents: 4
Mks LB: 6
SoC LB: 15
Delta: 0
Remaining time: 300000 [ms]

Vertex conflict! Agents 0, 1, timestep 2, location 0
Swapping conflict! Agents 0, 1, timestep 2, edge (0,0)
Vertex conflict! Agents 0, 1, timestep 3, location 0
Swapping conflict! Agents 0, 1, timestep 3, edge (0,0)
Vertex conflict! Agents 0, 1, timestep 4, location 0
Swapping conflict! Agents 0, 1, timestep 4, edge (0,0)
Vertex conflict! Agents 0, 1, timestep 5, location 0
Vertex conflict! Agents 0, 2, timestep 4, location 0
Swapping conflict! Agents 0, 2, timestep 4, edge (0,0)
Vertex conflict! Agents 0, 2, timestep 5, location 0
Vertex conflict! Agents 1, 2, timestep 4, location 0
Swapping conflict! Agents 1, 2, timestep 4, edge (0,0)
Vertex conflict! Agents 1, 2, timestep 5, location 0
Found plan [agents = 4] [timesteps = 6]
Agent #0 : 2 0 0 0 0 0 
Agent #1 : 4 2 0 0 0 0 
Agent #2 : 6 5 4 2 0 0 
Agent #3 : 14 10 6 5 4 2 

[STAT] Solver returned: 0
[DBG]  Agent (index) 25 | New local path (submap idx):
[DBG]  2 
[DBG]  Agent (index) 58 | New local path (submap idx):
[DBG]  4 2 0 
[DBG]  Agent (index) 133 | New local path (submap idx):
[DBG]  6 5 4 2 0 
[DBG]  Agent (index) 142 | New local path (submap idx):
[DBG]  14 10 6 5 4 2 
[DBG]  Update the agent path 25 | Original local length: 1 | New local length: 1
[DBG]  agent 25 t=0 => decoded (sx,sy)=(1,0) => global_id=604
[DBG]  Complete path of agent 25:
[DBG]    Original: 895 894 862 861 829 797 765 733 701 702 670 638 637 636 604 604 603 571 539 540 508 476 477 445 413 381 349 317 318 319 287 255 254 222 221 189 157 158 159 
[DBG]    New:     895 894 862 861 829 797 765 733 701 702 670 638 637 636 604 604 603 571 539 540 508 476 477 445 413 381 349 317 318 319 287 255 254 222 221 189 157 158 159 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 895 894 862 861 829 797 765 733 701 702 670 638 637 636 604 
[DBG]    Local path (in submap): 604 
[DBG]    Suffix (out of submap): 603 571 539 540 508 476 477 445 413 381 349 317 318 319 287 255 254 222 221 189 157 158 159 
[DBG]  Original agent path length 25 je: 39
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 0: 895, 894, 862, 861, 829, 797, 765, 733, 701, 702, 670, 638, 637, 636, 604, 604, 603, 571, 539, 540, 508, 476, 477, 445, 413, 381, 349, 317, 318, 319, 287, 255, 254, 222, 221, 189, 157, 158, 159, 
[DBG]  Path for agent 25 updated, resulting length: 39
[DBG]  Update the agent path 58 | Original local length: 3 | New local length: 3
[DBG]  agent 58 t=0 => decoded (sx,sy)=(2,0) => global_id=636
[DBG]  agent 58 t=1 => decoded (sx,sy)=(1,0) => global_id=604
[DBG]  agent 58 t=2 => decoded (sx,sy)=(0,0) => global_id=572
[DBG]  Complete path of agent 58:
[DBG]    Original: 826 827 859 860 861 829 797 765 733 701 702 670 638 637 636 636 604 572 540 508 476 444 412 380 380 379 347 
[DBG]    New:     826 827 859 860 861 829 797 765 733 701 702 670 638 637 636 636 604 572 540 508 476 444 412 380 380 379 347 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 826 827 859 860 861 829 797 765 733 701 702 670 638 637 636 
[DBG]    Local path (in submap): 636 604 572 
[DBG]    Suffix (out of submap): 540 508 476 444 412 380 380 379 347 
[DBG]  Original agent path length 58 je: 27
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 1: 826, 827, 859, 860, 861, 829, 797, 765, 733, 701, 702, 670, 638, 637, 636, 636, 604, 572, 540, 508, 476, 444, 412, 380, 380, 379, 347, 
[DBG]  Path for agent 58 updated, resulting length: 27
[DBG]  Update the agent path 133 | Original local length: 6 | New local length: 5
[DBG]  agent 133 t=0 => decoded (sx,sy)=(2,2) => global_id=638
[DBG]  agent 133 t=1 => decoded (sx,sy)=(2,1) => global_id=637
[DBG]  agent 133 t=2 => decoded (sx,sy)=(2,0) => global_id=636
[DBG]  agent 133 t=3 => decoded (sx,sy)=(1,0) => global_id=604
[DBG]  agent 133 t=4 => decoded (sx,sy)=(0,0) => global_id=572
[DBG]  Complete path of agent 133:
[DBG]    Original: 956 924 923 923 891 859 860 861 829 797 765 733 701 702 670 638 637 636 604 572 572 540 508 509 477 445 413 412 380 379 378 377 345 344 376 
[DBG]    New:     956 924 923 923 891 859 860 861 829 797 765 733 701 702 670 638 637 636 604 572 540 508 509 477 445 413 412 380 379 378 377 345 344 376 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 956 924 923 923 891 859 860 861 829 797 765 733 701 702 670 
[DBG]    Local path (in submap): 638 637 636 604 572 540 
[DBG]    Suffix (out of submap): 508 509 477 445 413 412 380 379 378 377 345 344 376 
[DBG]  Original agent path length 133 je: 35
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 2: 956, 924, 923, 923, 891, 859, 860, 861, 829, 797, 765, 733, 701, 702, 670, 638, 637, 636, 604, 572, 540, 508, 509, 477, 445, 413, 412, 380, 379, 378, 377, 345, 344, 376, 
[DBG]  Path for agent 133 updated, resulting length: 34
[DBG]  Update the agent path 142 | Original local length: 7 | New local length: 6
[DBG]  agent 142 t=0 => decoded (sx,sy)=(4,2) => global_id=702
[DBG]  agent 142 t=1 => decoded (sx,sy)=(3,2) => global_id=670
[DBG]  agent 142 t=2 => decoded (sx,sy)=(2,2) => global_id=638
[DBG]  agent 142 t=3 => decoded (sx,sy)=(2,1) => global_id=637
[DBG]  agent 142 t=4 => decoded (sx,sy)=(2,0) => global_id=636
[DBG]  agent 142 t=5 => decoded (sx,sy)=(1,0) => global_id=604
[DBG]  Complete path of agent 142:
[DBG]    Original: 795 795 827 827 827 827 859 860 860 861 829 797 765 733 701 702 670 638 637 636 604 604 603 571 539 539 539 507 
[DBG]    New:     795 795 827 827 827 827 859 860 860 861 829 797 765 733 701 702 670 638 637 636 604 603 571 539 539 539 507 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 795 795 827 827 827 827 859 860 860 861 829 797 765 733 701 
[DBG]    Local path (in submap): 702 670 638 637 636 604 603 
[DBG]    Suffix (out of submap): 571 539 539 539 507 
[DBG]  Original agent path length 142 je: 28
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 3: 795, 795, 827, 827, 827, 827, 859, 860, 860, 861, 829, 797, 765, 733, 701, 702, 670, 638, 637, 636, 604, 603, 571, 539, 539, 539, 507, 
[DBG]  Path for agent 142 updated, resulting length: 27
[DBG]  Paths successfully updated.
[DBG]  (LNS.cpp) New path for agent 25: 
[DBG]  895, 894, 862, 861, 829, 797, 765, 733, 701, 702, 670, 638, 637, 636, 604, 604, 603, 571, 539, 540, 508, 476, 477, 445, 413, 381, 349, 317, 318, 319, 287, 255, 254, 222, 221, 189, 157, 158, 159, 
[DBG]  (LNS.cpp) New path for agent 58: 
[DBG]  826, 827, 859, 860, 861, 829, 797, 765, 733, 701, 702, 670, 638, 637, 636, 636, 604, 572, 540, 508, 476, 444, 412, 380, 380, 379, 347, 
[DBG]  (LNS.cpp) New path for agent 133: 
[DBG]  956, 924, 923, 923, 891, 859, 860, 861, 829, 797, 765, 733, 701, 702, 670, 638, 637, 636, 604, 572, 540, 508, 509, 477, 445, 413, 412, 380, 379, 378, 377, 345, 344, 376, 
[DBG]  (LNS.cpp) New path for agent 142: 
[DBG]  795, 795, 827, 827, 827, 827, 859, 860, 860, 861, 829, 797, 765, 733, 701, 702, 670, 638, 637, 636, 604, 603, 571, 539, 539, 539, 507, 
[DBG]  component_weights = {0.315832, 0.137951, 0.144262, 0.401955}
[DBG]  opSuccess value: 1
[STAT] neighbor.sum_of_costs before recomputation: 123
[STAT] neighbor.old_sum_of_costs before recomputation: 125
[STAT] sum_of_costs before recomputation: 4321
[DBG]  Validate solution immediately after SAT success.
[WARNING] Problem after SAT: Vertex conflict between agents 133 and 56 at location 376 at timestep 33
[DBG]  Attempting immediate repair via init_lns because problem occurred after SAT (should be applied only for conflicts...).
[DBG]  Passing 150 agents to init_lns (skip=true).
[DBG]  path_table contents for selected agents (neighbor.agents):
[DBG]    Agent 25 => controlling path length=39
[DBG]    Agent 58 => controlling path length=27
[DBG]    Agent 133 => controlling path length=34
[DBG]    Agent 142 => controlling path length=27
[DBG]  hodnota skip_initial_solution=1
[DBG]  We skip initialSolution => call buildCollisionData()
[DBG]  buildCollisionData() called â€“ skip_initial_solution case.
[DBG]  Agents.size()=150, collision_graph.size()=150
[DBG]  agent 56 => updateCollidingPairs => foundCollision
[DBG]  agent 86 => updateCollidingPairs => foundCollision
[DBG]  agent 91 => updateCollidingPairs => foundCollision
[DBG]  agent 109 => updateCollidingPairs => foundCollision
[DBG]  agent 133 => updateCollidingPairs => foundCollision
[DBG]  agent 142 => updateCollidingPairs => foundCollision
[DBG]  Conflicting agent pairs:
[DBG]  agent 56 is in conflict with agent 133
[DBG]  agent 86 is in conflict with agent 142
[DBG]  agent 91 is in conflict with agent 133
[DBG]  agent 109 is in conflict with agent 142
[DBG]  buildCollisionData() => sum_of_costs=4319, num_of_colliding_pairs=4
[DBG]  buildCollisionData done => sum_of_costs=4319, num_of_colliding_pairs=4
[DBG]  sum_of_cost hodnota: 4319
[DBG]  After skip/init build => iteration_stats.back(): sum_of_costs=4319, collisions=4
[DEBUG] Using default neighbor generation strategy for conflicts: 0
[DEBUG] Using default neighbor generation strategy for conflicts: 0
[DEBUG] Using default neighbor generation strategy for conflicts: 0
	InitLNS(PP): runtime = 0.0194419, iterations = 4, colliding pairs = 0, initial colliding pairs = 4, solution cost = 4344, initial solution cost = 4319, failed iterations = 0
[DBG]  init_lns->sum_of_costs after init_lns->run: 4344
[DBG]  sum_of_costs after assignment from init_lns->run: 4344
[DBG]  Recomputing sum_of_cost by dividing neighbor.sum_of_costs and neighbor.old_sum_of_costs
[STAT] sum_of_costs after recomputation: 4344
[STAT] Iteration 95
[DBG]  Using SAT operator (destroy+repair SAT).
[DBG]  ====================
[DBG]  SAT destroy operator called.
[DBG]  SAT heuristic: 2
[DBG]  key_agent_id: 56
[DBG]  key_agent_id global path length: 45
[DBG]  Submap content (global positions):
[DBG]  592 593 594 595 596 
[DBG]  624 625 626 627 628 
[DBG]  656 657 658 659 660 
[DBG]  688 689 690 691 692 
[DBG]  720 721 722 723 724 
[DBG]  Map content with agents and obstacles:
[DBG]  . . . X . 
[DBG]  X . X . . 
[DBG]  A . A A . 
[DBG]  . . X . . 
[DBG]  . . . X A 
[DBG]  content of the map structure that we pass to the SAT solver:
[DBG]  1  1  1  -1  1  
[DBG]  -1  1  -1  1  1  
[DBG]  1  1  1  1  1  
[DBG]  1  1  -1  1  1  
[DBG]  1  1  1  -1  1  
[DBG]  Identifying agents in a submap for rescheduling (when key_agent is there at the time 18):
[DBG]  Agent 0 found intervals in the sub-map:
[DBG]   [18..24]
[DBG]  Agent 0 (interval in submap: [18..24]) contains time 18, added to replan.
[DBG]  Agent 3 found intervals in the sub-map:
[DBG]   [30..30]
[DBG]  Agent 3 is not in sub-map at time 18 (intervals: 
[DBG]  [30..30] )
[DBG]  Agent 30 found intervals in the sub-map:
[DBG]   [18..22]
[DBG]  Agent 30 (interval in submap: [18..22]) contains time 18, added to replan.
[DBG]  Agent 49 found intervals in the sub-map:
[DBG]   [22..31]
[DBG]  Agent 49 is not in sub-map at time 18 (intervals: 
[DBG]  [22..31] )
[DBG]  Agent 56 found intervals in the sub-map:
[DBG]   [16..21]
[DBG]  Agent 56 (interval in submap: [16..21]) contains time 18, added to replan.
[DBG]  Agent 58 found intervals in the sub-map:
[DBG]  
[DBG]  Agent 58 is not in sub-map at time 18 (intervals: 
[DBG]  )
[DBG]  Agent 62 found intervals in the sub-map:
[DBG]   [1..3] [8..8]
[DBG]  Agent 62 is not in sub-map at time 18 (intervals: 
[DBG]  [1..3] [8..8] )
[DBG]  Agent 74 found intervals in the sub-map:
[DBG]   [8..16]
[DBG]  Agent 74 is not in sub-map at time 18 (intervals: 
[DBG]  [8..16] )
[DBG]  Agent 79 found intervals in the sub-map:
[DBG]   [13..20]
[DBG]  Agent 79 (interval in submap: [13..20]) contains time 18, added to replan.
[DBG]  Agent 137 found intervals in the sub-map:
[DBG]  
[DBG]  Agent 137 is not in sub-map at time 18 (intervals: 
[DBG]  )
[DBG]  Agent 148 found intervals in the sub-map:
[DBG]   [24..31]
[DBG]  Agent 148 is not in sub-map at time 18 (intervals: 
[DBG]  [24..31] )
[DBG]  Agent 0 | Start (global): 656 -> (local): (2, 0) at time 18 | Goal (global): 724 -> (local): (4, 4) at time 24
[DBG]  Agent 30 | Start (global): 724 -> (local): (4, 4) at time 18 | Goal (global): 628 -> (local): (1, 4) at time 22
[DBG]  Agent 56 | Start (global): 658 -> (local): (2, 2) at time 18 | Goal (global): 628 -> (local): (1, 4) at time 21
[DBG]  Agent 79 | Start (global): 659 -> (local): (2, 3) at time 18 | Goal (global): 628 -> (local): (1, 4) at time 20
[DBG]  [REPAIR] SAT destroy operator called.
[DBG]  [REPAIR] SAT operator â€“ launching subproblem FOR OPTIMIZATION.
[DBG]  Creating local paths (sx, sy) in the submap for T_sync = 18
[DBG]    Agent 0 (global paths from T=18 to 24) has local path: (2,0) (2,1) (2,2) (2,3) (3,3) (3,4) (4,4) 
[DBG]    Agent 30 (global paths from T=18 to 22) has local path: (4,4) (3,4) (2,4) (2,4) (1,4) 
[DBG]    Agent 56 (global paths from T=18 to 21) has local path: (2,2) (2,3) (1,3) (1,4) 
[DBG]    Agent 79 (global paths from T=18 to 20) has local path: (2,3) (1,3) (1,4) 
[DBG]  Checking input data for SAT solver:
[DBG]    - Number of agents to replan: 4
[DBG]  Agent 0 has the original local path length: 7 => Start (2,0), Goal (4,4)
[DBG]  Agent 30 has the original local path length: 5 => Start (4,4), Goal (1,4)
[DBG]  Agent 56 has the original local path length: 4 => Start (2,2), Goal (1,4)
[DBG]  Agent 79 has the original local path length: 3 => Start (2,3), Goal (1,4)
[DBG]  Start position: (2, 0), (4, 4), (2, 2), (2, 3), 
[DBG]  Goal position: (4, 4), (1, 4), (1, 4), (1, 4), 
[DBG]  SAT instance and solver created.
Currently solving
Instance name: scen
Map name: map
Encoding used: disappear_at_goal
SAT solver used: Kissat
Optimizing function: sum of costs
Number of agents: 4
Mks LB: 7
SoC LB: 18
Delta: 0
Remaining time: 300000 [ms]

[STAT] Solver returned: -1
[DBG]  SAT solver failed.
[STAT] SAT solver failed to find a valid solution.
[DBG]  ====================
[DBG]  SAT destroy operator called.
[DBG]  SAT heuristic: 2
[DBG]  key_agent_id: 56
[DBG]  key_agent_id global path length: 45
[DBG]  Submap content (global positions):
[DBG]  710 711 712 713 714 
[DBG]  742 743 744 745 746 
[DBG]  774 775 776 777 778 
[DBG]  806 807 808 809 810 
[DBG]  838 839 840 841 842 
[DBG]  Map content with agents and obstacles:
[DBG]  . X . A . 
[DBG]  . X A A A 
[DBG]  A A A . . 
[DBG]  A . . . . 
[DBG]  . . X . X 
[DBG]  content of the map structure that we pass to the SAT solver:
[DBG]  1  -1  1  1  1  
[DBG]  1  -1  1  1  1  
[DBG]  1  1  1  1  1  
[DBG]  1  1  1  1  1  
[DBG]  1  1  -1  1  -1  
[DBG]  Identifying agents in a submap for rescheduling (when key_agent is there at the time 4):
[DBG]  Agent 13 found intervals in the sub-map:
[DBG]   [6..8]
[DBG]  Agent 13 is not in sub-map at time 4 (intervals: 
[DBG]  [6..8] )
[DBG]  Agent 32 found intervals in the sub-map:
[DBG]   [4..9]
[DBG]  Agent 32 (interval in submap: [4..9]) contains time 4, added to replan.
[DBG]  Agent 39 found intervals in the sub-map:
[DBG]   [1..6]
[DBG]  Agent 39 (interval in submap: [1..6]) contains time 4, added to replan.
[DBG]  Agent 56 found intervals in the sub-map:
[DBG]   [1..8]
[DBG]  Agent 56 (interval in submap: [1..8]) contains time 4, added to replan.
[DBG]  Agent 67 found intervals in the sub-map:
[DBG]   [4..11]
[DBG]  Agent 67 (interval in submap: [4..11]) contains time 4, added to replan.
[DBG]  Agent 85 found intervals in the sub-map:
[DBG]   [1..9]
[DBG]  Agent 85 (interval in submap: [1..9]) contains time 4, added to replan.
[DBG]  Agent 96 found intervals in the sub-map:
[DBG]   [3..8]
[DBG]  Agent 96 (interval in submap: [3..8]) contains time 4, added to replan.
[DBG]  Agent 97 found intervals in the sub-map:
[DBG]   [2..8]
[DBG]  Agent 97 (interval in submap: [2..8]) contains time 4, added to replan.
[DBG]  Agent 148 found intervals in the sub-map:
[DBG]   [0..15]
[DBG]  Agent 148 (interval in submap: [0..15]) contains time 4, added to replan.
[DBG]  Agent 32 | Start (global): 806 -> (local): (3, 0) at time 4 | Goal (global): 744 -> (local): (1, 2) at time 9
[DBG]  Agent 39 | Start (global): 746 -> (local): (1, 4) at time 4 | Goal (global): 810 -> (local): (3, 4) at time 6
[DBG]  Agent 56 | Start (global): 776 -> (local): (2, 2) at time 4 | Goal (global): 714 -> (local): (0, 4) at time 8
[DBG]  Agent 67 | Start (global): 774 -> (local): (2, 0) at time 4 | Goal (global): 714 -> (local): (0, 4) at time 11
[DBG]  Agent 85 | Start (global): 775 -> (local): (2, 1) at time 4 | Goal (global): 810 -> (local): (3, 4) at time 9
[DBG]  Agent 96 | Start (global): 713 -> (local): (0, 3) at time 4 | Goal (global): 810 -> (local): (3, 4) at time 8
[DBG]  Agent 97 | Start (global): 745 -> (local): (1, 3) at time 4 | Goal (global): 841 -> (local): (4, 3) at time 8
[DBG]  Agent 148 | Start (global): 744 -> (local): (1, 2) at time 4 | Goal (global): 714 -> (local): (0, 4) at time 15
[DBG]  [REPAIR] SAT destroy operator called.
[DBG]  [REPAIR] SAT operator â€“ launching subproblem FOR OPTIMIZATION.
[DBG]  Creating local paths (sx, sy) in the submap for T_sync = 4
[DBG]    Agent 32 (global paths from T=4 to 9) has local path: (3,0) (3,1) (3,1) (2,1) (2,2) (1,2) 
[DBG]    Agent 39 (global paths from T=4 to 6) has local path: (1,4) (2,4) (3,4) 
[DBG]    Agent 56 (global paths from T=4 to 8) has local path: (2,2) (1,2) (1,3) (1,4) (0,4) 
[DBG]    Agent 67 (global paths from T=4 to 11) has local path: (2,0) (2,1) (2,1) (2,2) (1,2) (1,3) (0,3) (0,4) 
[DBG]    Agent 85 (global paths from T=4 to 9) has local path: (2,1) (2,2) (2,2) (2,3) (2,4) (3,4) 
[DBG]    Agent 96 (global paths from T=4 to 8) has local path: (0,3) (0,4) (1,4) (2,4) (3,4) 
[DBG]    Agent 97 (global paths from T=4 to 8) has local path: (1,3) (2,3) (3,3) (4,3) (4,3) 
[DBG]    Agent 148 (global paths from T=4 to 15) has local path: (1,2) (1,3) (2,3) (3,3) (3,3) (3,3) (3,3) (3,3) (2,3) (2,4) (1,4) (0,4) 
[DBG]  Checking input data for SAT solver:
[DBG]    - Number of agents to replan: 8
[DBG]  Agent 32 has the original local path length: 6 => Start (3,0), Goal (1,2)
[DBG]  Agent 39 has the original local path length: 3 => Start (1,4), Goal (3,4)
[DBG]  Agent 56 has the original local path length: 5 => Start (2,2), Goal (0,4)
[DBG]  Agent 67 has the original local path length: 8 => Start (2,0), Goal (0,4)
[DBG]  Agent 85 has the original local path length: 6 => Start (2,1), Goal (3,4)
[DBG]  Agent 96 has the original local path length: 5 => Start (0,3), Goal (3,4)
[DBG]  Agent 97 has the original local path length: 5 => Start (1,3), Goal (4,3)
[DBG]  Agent 148 has the original local path length: 12 => Start (1,2), Goal (0,4)
[DBG]  Start position: (3, 0), (1, 4), (2, 2), (2, 0), (2, 1), (0, 3), (1, 3), (1, 2), 
[DBG]  Goal position: (1, 2), (3, 4), (0, 4), (0, 4), (3, 4), (3, 4), (4, 3), (0, 4), 
[DBG]  SAT instance and solver created.
Currently solving
Instance name: scen
Map name: map
Encoding used: disappear_at_goal
SAT solver used: Kissat
Optimizing function: sum of costs
Number of agents: 8
Mks LB: 7
SoC LB: 38
Delta: 0
Remaining time: 300000 [ms]

[STAT] Solver returned: -1
[DBG]  SAT solver failed.
[STAT] SAT solver failed to find a valid solution.
[DBG]  ====================
[DBG]  SAT destroy operator called.
[DBG]  SAT heuristic: 2
[DBG]  key_agent_id: 56
[DBG]  key_agent_id global path length: 45
[DBG]  Submap content (global positions):
[DBG]  709 710 711 712 713 
[DBG]  741 742 743 744 745 
[DBG]  773 774 775 776 777 
[DBG]  805 806 807 808 809 
[DBG]  837 838 839 840 841 
[DBG]  Map content with agents and obstacles:
[DBG]  . . X A A 
[DBG]  . . X A A 
[DBG]  A A A . . 
[DBG]  A . . . . 
[DBG]  . . . X . 
[DBG]  content of the map structure that we pass to the SAT solver:
[DBG]  1  1  -1  1  1  
[DBG]  1  1  -1  1  1  
[DBG]  1  1  1  1  1  
[DBG]  1  1  1  1  1  
[DBG]  1  1  1  -1  1  
[DBG]  Identifying agents in a submap for rescheduling (when key_agent is there at the time 3):
[DBG]  Agent 13 found intervals in the sub-map:
[DBG]   [5..8]
[DBG]  Agent 13 is not in sub-map at time 3 (intervals: 
[DBG]  [5..8] )
[DBG]  Agent 32 found intervals in the sub-map:
[DBG]   [2..9]
[DBG]  Agent 32 (interval in submap: [2..9]) contains time 3, added to replan.
[DBG]  Agent 37 found intervals in the sub-map:
[DBG]   [0..0]
[DBG]  Agent 37 is not in sub-map at time 3 (intervals: 
[DBG]  [0..0] )
[DBG]  Agent 39 found intervals in the sub-map:
[DBG]   [1..3]
[DBG]  Agent 39 (interval in submap: [1..3]) contains time 3, added to replan.
[DBG]  Agent 56 found intervals in the sub-map:
[DBG]   [0..6]
[DBG]  Agent 56 (interval in submap: [0..6]) contains time 3, added to replan.
[DBG]  Agent 67 found intervals in the sub-map:
[DBG]   [0..10]
[DBG]  Agent 67 (interval in submap: [0..10]) contains time 3, added to replan.
[DBG]  Agent 85 found intervals in the sub-map:
[DBG]   [0..7]
[DBG]  Agent 85 (interval in submap: [0..7]) contains time 3, added to replan.
[DBG]  Agent 96 found intervals in the sub-map:
[DBG]   [3..4]
[DBG]  Agent 96 (interval in submap: [3..4]) contains time 3, added to replan.
[DBG]  Agent 97 found intervals in the sub-map:
[DBG]   [3..8]
[DBG]  Agent 97 (interval in submap: [3..8]) contains time 3, added to replan.
[DBG]  Agent 148 found intervals in the sub-map:
[DBG]   [0..12]
[DBG]  Agent 148 (interval in submap: [0..12]) contains time 3, added to replan.
[DBG]  Agent 32 | Start (global): 805 -> (local): (3, 0) at time 3 | Goal (global): 744 -> (local): (1, 3) at time 9
[DBG]  Agent 39 | Start (global): 745 -> (local): (1, 4) at time 3 | Goal (global): 745 -> (local): (1, 4) at time 3
[DBG]  Agent 56 | Start (global): 775 -> (local): (2, 2) at time 3 | Goal (global): 745 -> (local): (1, 4) at time 6
[DBG]  Agent 67 | Start (global): 773 -> (local): (2, 0) at time 3 | Goal (global): 713 -> (local): (0, 4) at time 10
[DBG]  Agent 85 | Start (global): 774 -> (local): (2, 1) at time 3 | Goal (global): 777 -> (local): (2, 4) at time 7
[DBG]  Agent 96 | Start (global): 712 -> (local): (0, 3) at time 3 | Goal (global): 713 -> (local): (0, 4) at time 4
[DBG]  Agent 97 | Start (global): 713 -> (local): (0, 4) at time 3 | Goal (global): 841 -> (local): (4, 4) at time 8
[DBG]  Agent 148 | Start (global): 744 -> (local): (1, 3) at time 3 | Goal (global): 777 -> (local): (2, 4) at time 12
[DBG]  [REPAIR] SAT destroy operator called.
[DBG]  [REPAIR] SAT operator â€“ launching subproblem FOR OPTIMIZATION.
[DBG]  Creating local paths (sx, sy) in the submap for T_sync = 3
[DBG]    Agent 32 (global paths from T=3 to 9) has local path: (3,0) (3,1) (3,2) (3,2) (2,2) (2,3) (1,3) 
[DBG]    Agent 39 (global paths from T=3 to 3) has local path: (1,4) 
[DBG]    Agent 56 (global paths from T=3 to 6) has local path: (2,2) (2,3) (1,3) (1,4) 
[DBG]    Agent 67 (global paths from T=3 to 10) has local path: (2,0) (2,1) (2,2) (2,2) (2,3) (1,3) (1,4) (0,4) 
[DBG]    Agent 85 (global paths from T=3 to 7) has local path: (2,1) (2,2) (2,3) (2,3) (2,4) 
[DBG]    Agent 96 (global paths from T=3 to 4) has local path: (0,3) (0,4) 
[DBG]    Agent 97 (global paths from T=3 to 8) has local path: (0,4) (1,4) (2,4) (3,4) (4,4) (4,4) 
[DBG]    Agent 148 (global paths from T=3 to 12) has local path: (1,3) (1,3) (1,4) (2,4) (3,4) (3,4) (3,4) (3,4) (3,4) (2,4) 
[DBG]  Checking input data for SAT solver:
[DBG]    - Number of agents to replan: 8
[DBG]  Agent 32 has the original local path length: 7 => Start (3,0), Goal (1,3)
[DBG]  Agent 39 has the original local path length: 1 => Start (1,4), Goal (1,4)
[DBG]  Agent 56 has the original local path length: 4 => Start (2,2), Goal (1,4)
[DBG]  Agent 67 has the original local path length: 8 => Start (2,0), Goal (0,4)
[DBG]  Agent 85 has the original local path length: 5 => Start (2,1), Goal (2,4)
[DBG]  Agent 96 has the original local path length: 2 => Start (0,3), Goal (0,4)
[DBG]  Agent 97 has the original local path length: 6 => Start (0,4), Goal (4,4)
[DBG]  Agent 148 has the original local path length: 10 => Start (1,3), Goal (2,4)
[DBG]  Start position: (3, 0), (1, 4), (2, 2), (2, 0), (2, 1), (0, 3), (0, 4), (1, 3), 
[DBG]  Goal position: (1, 3), (1, 4), (1, 4), (0, 4), (2, 4), (0, 4), (4, 4), (2, 4), 
[DBG]  SAT instance and solver created.
Currently solving
Instance name: scen
Map name: map
Encoding used: disappear_at_goal
SAT solver used: Kissat
Optimizing function: sum of costs
Number of agents: 8
Mks LB: 7
SoC LB: 32
Delta: 0
Remaining time: 300000 [ms]

[STAT] Solver returned: -1
[DBG]  SAT solver failed.
[STAT] SAT solver failed to find a valid solution.
[DBG]  ====================
[DBG]  SAT destroy operator called.
[DBG]  SAT heuristic: 2
[DBG]  key_agent_id: 56
[DBG]  key_agent_id global path length: 45
[DBG]  Submap content (global positions):
[DBG]  563 564 565 566 567 
[DBG]  595 596 597 598 599 
[DBG]  627 628 629 630 631 
[DBG]  659 660 661 662 663 
[DBG]  691 692 693 694 695 
[DBG]  Map content with agents and obstacles:
[DBG]  . X . . X 
[DBG]  X . A X . 
[DBG]  . A A X . 
[DBG]  . . A X X 
[DBG]  A A X X X 
[DBG]  content of the map structure that we pass to the SAT solver:
[DBG]  1  -1  1  1  -1  
[DBG]  -1  1  1  -1  1  
[DBG]  1  1  1  -1  1  
[DBG]  1  1  1  -1  -1  
[DBG]  1  1  -1  -1  -1  
[DBG]  Identifying agents in a submap for rescheduling (when key_agent is there at the time 22):
[DBG]  Agent 0 found intervals in the sub-map:
[DBG]   [21..23]
[DBG]  Agent 0 (interval in submap: [21..23]) contains time 22, added to replan.
[DBG]  Agent 3 found intervals in the sub-map:
[DBG]   [20..21]
[DBG]  Agent 3 is not in sub-map at time 22 (intervals: 
[DBG]  [20..21] )
[DBG]  Agent 11 found intervals in the sub-map:
[DBG]   [22..31]
[DBG]  Agent 11 (interval in submap: [22..31]) contains time 22, added to replan.
[DBG]  Agent 28 found intervals in the sub-map:
[DBG]   [0..42]
[DBG]  Agent 28 (interval in submap: [0..42]) contains time 22, added to replan.
[DBG]  Agent 30 found intervals in the sub-map:
[DBG]   [19..26]
[DBG]  Agent 30 (interval in submap: [19..26]) contains time 22, added to replan.
[DBG]  Agent 49 found intervals in the sub-map:
[DBG]  
[DBG]  Agent 49 is not in sub-map at time 22 (intervals: 
[DBG]  )
[DBG]  Agent 56 found intervals in the sub-map:
[DBG]   [19..24]
[DBG]  Agent 56 (interval in submap: [19..24]) contains time 22, added to replan.
[DBG]  Agent 58 found intervals in the sub-map:
[DBG]  
[DBG]  Agent 58 is not in sub-map at time 22 (intervals: 
[DBG]  )
[DBG]  Agent 74 found intervals in the sub-map:
[DBG]   [13..19]
[DBG]  Agent 74 is not in sub-map at time 22 (intervals: 
[DBG]  [13..19] )
[DBG]  Agent 79 found intervals in the sub-map:
[DBG]   [18..24]
[DBG]  Agent 79 (interval in submap: [18..24]) contains time 22, added to replan.
[DBG]  Agent 81 found intervals in the sub-map:
[DBG]   [23..23]
[DBG]  Agent 81 is not in sub-map at time 22 (intervals: 
[DBG]  [23..23] )
[DBG]  Agent 101 found intervals in the sub-map:
[DBG]  
[DBG]  Agent 101 is not in sub-map at time 22 (intervals: 
[DBG]  )
[DBG]  Agent 0 | Start (global): 691 -> (local): (4, 0) at time 22 | Goal (global): 692 -> (local): (4, 1) at time 23
[DBG]  Agent 11 | Start (global): 692 -> (local): (4, 1) at time 22 | Goal (global): 659 -> (local): (3, 0) at time 31
[DBG]  Agent 28 | Start (global): 661 -> (local): (3, 2) at time 22 | Goal (global): 692 -> (local): (4, 1) at time 42
[DBG]  Agent 30 | Start (global): 628 -> (local): (2, 1) at time 22 | Goal (global): 566 -> (local): (0, 3) at time 26
[DBG]  Agent 56 | Start (global): 629 -> (local): (2, 2) at time 22 | Goal (global): 565 -> (local): (0, 2) at time 24
[DBG]  Agent 79 | Start (global): 597 -> (local): (1, 2) at time 22 | Goal (global): 566 -> (local): (0, 3) at time 24
[DBG]  [REPAIR] SAT destroy operator called.
[DBG]  [REPAIR] SAT operator â€“ launching subproblem FOR OPTIMIZATION.
[DBG]  Creating local paths (sx, sy) in the submap for T_sync = 22
[DBG]    Agent 0 (global paths from T=22 to 23) has local path: (4,0) (4,1) 
[DBG]    Agent 11 (global paths from T=22 to 31) has local path: (4,1) (3,1) (3,0) (4,0) (4,0) (3,0) (2,0) (2,0) (2,0) (3,0) 
[DBG]    Agent 28 (global paths from T=22 to 42) has local path: (3,2) (3,2) (3,2) (3,2) (3,2) (3,2) (3,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,1) (2,0) (3,0) (4,0) (4,1) 
[DBG]    Agent 30 (global paths from T=22 to 26) has local path: (2,1) (2,2) (1,2) (0,2) (0,3) 
[DBG]    Agent 56 (global paths from T=22 to 24) has local path: (2,2) (1,2) (0,2) 
[DBG]    Agent 79 (global paths from T=22 to 24) has local path: (1,2) (0,2) (0,3) 
[DBG]  Checking input data for SAT solver:
[DBG]    - Number of agents to replan: 6
[DBG]  Agent 0 has the original local path length: 2 => Start (4,0), Goal (4,1)
[DBG]  Agent 11 has the original local path length: 10 => Start (4,1), Goal (3,0)
[DBG]  Agent 28 has the original local path length: 21 => Start (3,2), Goal (4,1)
[DBG]  Agent 30 has the original local path length: 5 => Start (2,1), Goal (0,3)
[DBG]  Agent 56 has the original local path length: 3 => Start (2,2), Goal (0,2)
[DBG]  Agent 79 has the original local path length: 3 => Start (1,2), Goal (0,3)
[DBG]  Start position: (4, 0), (4, 1), (3, 2), (2, 1), (2, 2), (1, 2), 
[DBG]  Goal position: (4, 1), (3, 0), (4, 1), (0, 3), (0, 2), (0, 3), 
[DBG]  SAT instance and solver created.
Currently solving
Instance name: scen
Map name: map
Encoding used: disappear_at_goal
SAT solver used: Kissat
Optimizing function: sum of costs
Number of agents: 6
Mks LB: 5
SoC LB: 19
Delta: 0
Remaining time: 300000 [ms]

[STAT] Solver returned: -1
[DBG]  SAT solver failed.
[STAT] SAT solver failed to find a valid solution.
[DBG]  ====================
[DBG]  SAT destroy operator called.
[DBG]  SAT heuristic: 2
[DBG]  key_agent_id: 56
[DBG]  key_agent_id global path length: 45
[DBG]  Submap content (global positions):
[DBG]  220 221 222 223 -1 
[DBG]  252 253 254 255 -1 
[DBG]  284 285 286 287 -1 
[DBG]  316 317 318 319 -1 
[DBG]  348 349 350 351 -1 
[DBG]  Map content with agents and obstacles:
[DBG]  . . . X X 
[DBG]  . X . . X 
[DBG]  . . A . X 
[DBG]  X . A . X 
[DBG]  . . . . X 
[DBG]  content of the map structure that we pass to the SAT solver:
[DBG]  1  1  1  -1  1  
[DBG]  1  -1  1  1  1  
[DBG]  1  1  1  1  1  
[DBG]  -1  1  1  1  1  
[DBG]  1  1  1  1  1  
[DBG]  Identifying agents in a submap for rescheduling (when key_agent is there at the time 42):
[DBG]  Agent 56 found intervals in the sub-map:
[DBG]   [38..44]
[DBG]  Agent 56 (interval in submap: [38..44]) contains time 42, added to replan.
[DBG]  Agent 75 found intervals in the sub-map:
[DBG]   [39..43]
[DBG]  Agent 75 (interval in submap: [39..43]) contains time 42, added to replan.
[DBG]  Agent 56 | Start (global): 286 -> (local): (2, 2) at time 42 | Goal (global): 255 -> (local): (1, 3) at time 44
[DBG]  Agent 75 | Start (global): 318 -> (local): (3, 2) at time 42 | Goal (global): 286 -> (local): (2, 2) at time 43
[DBG]  [REPAIR] SAT destroy operator called.
[DBG]  [REPAIR] SAT operator â€“ launching subproblem FOR OPTIMIZATION.
[DBG]  Creating local paths (sx, sy) in the submap for T_sync = 42
[DBG]    Agent 56 (global paths from T=42 to 44) has local path: (2,2) (1,2) (1,3) 
[DBG]    Agent 75 (global paths from T=42 to 43) has local path: (3,2) (2,2) 
[DBG]  Checking input data for SAT solver:
[DBG]    - Number of agents to replan: 2
[DBG]  Agent 56 has the original local path length: 3 => Start (2,2), Goal (1,3)
[DBG]  Agent 75 has the original local path length: 2 => Start (3,2), Goal (2,2)
[DBG]  Start position: (2, 2), (3, 2), 
[DBG]  Goal position: (1, 3), (2, 2), 
[DBG]  SAT instance and solver created.
Currently solving
Instance name: scen
Map name: map
Encoding used: disappear_at_goal
SAT solver used: Kissat
Optimizing function: sum of costs
Number of agents: 2
Mks LB: 3
SoC LB: 5
Delta: 0
Remaining time: 300000 [ms]

Found plan [agents = 2] [timesteps = 3]
Agent #0 : 10 11 6 
Agent #1 : 14 10 0 

[STAT] Solver returned: 0
[DBG]  Agent (index) 56 | New local path (submap idx):
[DBG]  10 11 6 
[DBG]  Agent (index) 75 | New local path (submap idx):
[DBG]  14 10 
[DBG]  Update the agent path 56 | Original local length: 3 | New local length: 3
[DBG]  agent 56 t=0 => decoded (sx,sy)=(2,2) => global_id=286
[DBG]  agent 56 t=1 => decoded (sx,sy)=(2,3) => global_id=287
[DBG]  agent 56 t=2 => decoded (sx,sy)=(1,3) => global_id=255
[DBG]  Complete path of agent 56:
[DBG]    Original: 805 806 774 775 776 744 745 746 714 715 683 684 685 686 654 655 656 657 658 659 627 628 629 597 565 533 501 469 470 438 439 407 408 409 377 378 379 380 348 349 350 318 286 254 255 
[DBG]    New:     805 806 774 775 776 744 745 746 714 715 683 684 685 686 654 655 656 657 658 659 627 628 629 597 565 533 501 469 470 438 439 407 408 409 377 378 379 380 348 349 350 318 286 287 255 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 805 806 774 775 776 744 745 746 714 715 683 684 685 686 654 655 656 657 658 659 627 628 629 597 565 533 501 469 470 438 439 407 408 409 377 378 379 380 348 349 350 318 
[DBG]    Local path (in submap): 286 287 255 
[DBG]    Suffix (out of submap): 
[DBG]  Original agent path length 56 je: 45
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 0: 805, 806, 774, 775, 776, 744, 745, 746, 714, 715, 683, 684, 685, 686, 654, 655, 656, 657, 658, 659, 627, 628, 629, 597, 565, 533, 501, 469, 470, 438, 439, 407, 408, 409, 377, 378, 379, 380, 348, 349, 350, 318, 286, 287, 255, 
[DBG]  Path for agent 56 updated, resulting length: 45
[DBG]  Update the agent path 75 | Original local length: 2 | New local length: 2
[DBG]  agent 75 t=0 => decoded (sx,sy)=(3,2) => global_id=318
[DBG]  agent 75 t=1 => decoded (sx,sy)=(2,2) => global_id=286
[DBG]  Complete path of agent 75:
[DBG]    Original: 340 308 276 275 275 275 275 276 276 276 276 276 275 274 306 338 339 340 340 340 308 309 310 311 311 311 311 312 344 376 376 377 378 379 411 411 411 379 380 348 349 350 318 286 
[DBG]    New:     340 308 276 275 275 275 275 276 276 276 276 276 275 274 306 338 339 340 340 340 308 309 310 311 311 311 311 312 344 376 376 377 378 379 411 411 411 379 380 348 349 350 318 286 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 340 308 276 275 275 275 275 276 276 276 276 276 275 274 306 338 339 340 340 340 308 309 310 311 311 311 311 312 344 376 376 377 378 379 411 411 411 379 380 348 349 350 
[DBG]    Local path (in submap): 318 286 
[DBG]    Suffix (out of submap): 
[DBG]  Original agent path length 75 je: 44
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 1: 340, 308, 276, 275, 275, 275, 275, 276, 276, 276, 276, 276, 275, 274, 306, 338, 339, 340, 340, 340, 308, 309, 310, 311, 311, 311, 311, 312, 344, 376, 376, 377, 378, 379, 411, 411, 411, 379, 380, 348, 349, 350, 318, 286, 
[DBG]  Path for agent 75 updated, resulting length: 44
[DBG]  Paths successfully updated.
[DBG]  (LNS.cpp) New path for agent 56: 
[DBG]  805, 806, 774, 775, 776, 744, 745, 746, 714, 715, 683, 684, 685, 686, 654, 655, 656, 657, 658, 659, 627, 628, 629, 597, 565, 533, 501, 469, 470, 438, 439, 407, 408, 409, 377, 378, 379, 380, 348, 349, 350, 318, 286, 287, 255, 
[DBG]  (LNS.cpp) New path for agent 75: 
[DBG]  340, 308, 276, 275, 275, 275, 275, 276, 276, 276, 276, 276, 275, 274, 306, 338, 339, 340, 340, 340, 308, 309, 310, 311, 311, 311, 311, 312, 344, 376, 376, 377, 378, 379, 411, 411, 411, 379, 380, 348, 349, 350, 318, 286, 
[DBG]  component_weights = {0.320213, 0.137068, 0.143338, 0.399381}
[DBG]  opSuccess value: 1
[STAT] neighbor.sum_of_costs before recomputation: 87
[STAT] neighbor.old_sum_of_costs before recomputation: 87
[STAT] sum_of_costs before recomputation: 4344
[DBG]  Validate solution immediately after SAT success.
[DBG]  No problems after SAT replan.
[DBG]  Recomputing sum_of_cost by dividing neighbor.sum_of_costs and neighbor.old_sum_of_costs
[STAT] sum_of_costs after recomputation: 4344
[STAT] Iteration 96
[DBG]  Using SAT operator (destroy+repair SAT).
[DBG]  ====================
[DBG]  SAT destroy operator called.
[DBG]  SAT heuristic: 2
[DBG]  key_agent_id: 68
[DBG]  key_agent_id global path length: 15
[DBG]  Submap content (global positions):
[DBG]  935 936 937 938 939 
[DBG]  967 968 969 970 971 
[DBG]  999 1000 1001 1002 1003 
[DBG]  -1 -1 -1 -1 -1 
[DBG]  -1 -1 -1 -1 -1 
[DBG]  Map content with agents and obstacles:
[DBG]  . A . X . 
[DBG]  X . X . X 
[DBG]  . A A . . 
[DBG]  X X X X X 
[DBG]  X X X X X 
[DBG]  content of the map structure that we pass to the SAT solver:
[DBG]  1  1  1  -1  1  
[DBG]  -1  1  -1  1  -1  
[DBG]  1  1  1  1  1  
[DBG]  1  1  1  1  1  
[DBG]  1  1  1  1  1  
[DBG]  Identifying agents in a submap for rescheduling (when key_agent is there at the time 5):
[DBG]  Agent 41 found intervals in the sub-map:
[DBG]   [0..6]
[DBG]  Agent 41 (interval in submap: [0..6]) contains time 5, added to replan.
[DBG]  Agent 68 found intervals in the sub-map:
[DBG]   [0..7]
[DBG]  Agent 68 (interval in submap: [0..7]) contains time 5, added to replan.
[DBG]  Agent 105 found intervals in the sub-map:
[DBG]   [0..4]
[DBG]  Agent 105 is not in sub-map at time 5 (intervals: 
[DBG]  [0..4] )
[DBG]  Agent 111 found intervals in the sub-map:
[DBG]   [4..8]
[DBG]  Agent 111 (interval in submap: [4..8]) contains time 5, added to replan.
[DBG]  Agent 41 | Start (global): 936 -> (local): (0, 1) at time 5 | Goal (global): 937 -> (local): (0, 2) at time 6
[DBG]  Agent 68 | Start (global): 1001 -> (local): (2, 2) at time 5 | Goal (global): 1003 -> (local): (2, 4) at time 7
[DBG]  Agent 111 | Start (global): 1000 -> (local): (2, 1) at time 5 | Goal (global): 1003 -> (local): (2, 4) at time 8
[DBG]  [REPAIR] SAT destroy operator called.
[DBG]  [REPAIR] SAT operator â€“ launching subproblem FOR OPTIMIZATION.
[DBG]  Creating local paths (sx, sy) in the submap for T_sync = 5
[DBG]    Agent 41 (global paths from T=5 to 6) has local path: (0,1) (0,2) 
[DBG]    Agent 68 (global paths from T=5 to 7) has local path: (2,2) (2,3) (2,4) 
[DBG]    Agent 111 (global paths from T=5 to 8) has local path: (2,1) (2,2) (2,3) (2,4) 
[DBG]  Checking input data for SAT solver:
[DBG]    - Number of agents to replan: 3
[DBG]  Agent 41 has the original local path length: 2 => Start (0,1), Goal (0,2)
[DBG]  Agent 68 has the original local path length: 3 => Start (2,2), Goal (2,4)
[DBG]  Agent 111 has the original local path length: 4 => Start (2,1), Goal (2,4)
[DBG]  Start position: (0, 1), (2, 2), (2, 1), 
[DBG]  Goal position: (0, 2), (2, 4), (2, 4), 
[DBG]  SAT instance and solver created.
Currently solving
Instance name: scen
Map name: map
Encoding used: disappear_at_goal
SAT solver used: Kissat
Optimizing function: sum of costs
Number of agents: 3
Mks LB: 4
SoC LB: 9
Delta: 0
Remaining time: 300000 [ms]

Vertex conflict! Agents 0, 1, timestep 3, location 0
Found plan [agents = 3] [timesteps = 4]
Agent #0 : 1 2 0 0 
Agent #1 : 8 9 10 0 
Agent #2 : 7 8 9 10 

[STAT] Solver returned: 0
[DBG]  Agent (index) 41 | New local path (submap idx):
[DBG]  1 2 
[DBG]  Agent (index) 68 | New local path (submap idx):
[DBG]  8 9 10 
[DBG]  Agent (index) 111 | New local path (submap idx):
[DBG]  7 8 9 10 
[DBG]  Update the agent path 41 | Original local length: 2 | New local length: 2
[DBG]  agent 41 t=0 => decoded (sx,sy)=(0,1) => global_id=936
[DBG]  agent 41 t=1 => decoded (sx,sy)=(0,2) => global_id=937
[DBG]  Complete path of agent 41:
[DBG]    Original: 970 1002 1001 1000 968 936 937 905 873 874 875 843 844 
[DBG]    New:     970 1002 1001 1000 968 936 937 905 873 874 875 843 844 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 970 1002 1001 1000 968 
[DBG]    Local path (in submap): 936 937 
[DBG]    Suffix (out of submap): 905 873 874 875 843 844 
[DBG]  Original agent path length 41 je: 13
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 0: 970, 1002, 1001, 1000, 968, 936, 937, 905, 873, 874, 875, 843, 844, 
[DBG]  Path for agent 41 updated, resulting length: 13
[DBG]  Update the agent path 68 | Original local length: 3 | New local length: 3
[DBG]  agent 68 t=0 => decoded (sx,sy)=(2,2) => global_id=1001
[DBG]  agent 68 t=1 => decoded (sx,sy)=(2,3) => global_id=1002
[DBG]  agent 68 t=2 => decoded (sx,sy)=(2,4) => global_id=1003
[DBG]  Complete path of agent 68:
[DBG]    Original: 968 1000 999 999 1000 1001 1002 1003 1004 1005 973 941 942 942 910 
[DBG]    New:     968 1000 999 999 1000 1001 1002 1003 1004 1005 973 941 942 942 910 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 968 1000 999 999 1000 
[DBG]    Local path (in submap): 1001 1002 1003 
[DBG]    Suffix (out of submap): 1004 1005 973 941 942 942 910 
[DBG]  Original agent path length 68 je: 15
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 1: 968, 1000, 999, 999, 1000, 1001, 1002, 1003, 1004, 1005, 973, 941, 942, 942, 910, 
[DBG]  Path for agent 68 updated, resulting length: 15
[DBG]  Update the agent path 111 | Original local length: 4 | New local length: 4
[DBG]  agent 111 t=0 => decoded (sx,sy)=(2,1) => global_id=1000
[DBG]  agent 111 t=1 => decoded (sx,sy)=(2,2) => global_id=1001
[DBG]  agent 111 t=2 => decoded (sx,sy)=(2,3) => global_id=1002
[DBG]  agent 111 t=3 => decoded (sx,sy)=(2,4) => global_id=1003
[DBG]  Complete path of agent 111:
[DBG]    Original: 964 996 997 998 999 1000 1001 1002 1003 1004 1005 1006 974 975 976 944 912 880 848 849 817 818 819 820 821 822 823 823 824 792 793 761 729 697 696 664 632 600 601 569 570 538 539 540 
[DBG]    New:     964 996 997 998 999 1000 1001 1002 1003 1004 1005 1006 974 975 976 944 912 880 848 849 817 818 819 820 821 822 823 823 824 792 793 761 729 697 696 664 632 600 601 569 570 538 539 540 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 964 996 997 998 999 
[DBG]    Local path (in submap): 1000 1001 1002 1003 
[DBG]    Suffix (out of submap): 1004 1005 1006 974 975 976 944 912 880 848 849 817 818 819 820 821 822 823 823 824 792 793 761 729 697 696 664 632 600 601 569 570 538 539 540 
[DBG]  Original agent path length 111 je: 44
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 2: 964, 996, 997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 974, 975, 976, 944, 912, 880, 848, 849, 817, 818, 819, 820, 821, 822, 823, 823, 824, 792, 793, 761, 729, 697, 696, 664, 632, 600, 601, 569, 570, 538, 539, 540, 
[DBG]  Path for agent 111 updated, resulting length: 44
[DBG]  Paths successfully updated.
[DBG]  (LNS.cpp) New path for agent 41: 
[DBG]  970, 1002, 1001, 1000, 968, 936, 937, 905, 873, 874, 875, 843, 844, 
[DBG]  (LNS.cpp) New path for agent 68: 
[DBG]  968, 1000, 999, 999, 1000, 1001, 1002, 1003, 1004, 1005, 973, 941, 942, 942, 910, 
[DBG]  (LNS.cpp) New path for agent 111: 
[DBG]  964, 996, 997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 974, 975, 976, 944, 912, 880, 848, 849, 817, 818, 819, 820, 821, 822, 823, 823, 824, 792, 793, 761, 729, 697, 696, 664, 632, 600, 601, 569, 570, 538, 539, 540, 
[DBG]  component_weights = {0.324627, 0.136178, 0.142408, 0.396788}
[DBG]  opSuccess value: 1
[STAT] neighbor.sum_of_costs before recomputation: 69
[STAT] neighbor.old_sum_of_costs before recomputation: 69
[STAT] sum_of_costs before recomputation: 4344
[DBG]  Validate solution immediately after SAT success.
[DBG]  No problems after SAT replan.
[DBG]  Recomputing sum_of_cost by dividing neighbor.sum_of_costs and neighbor.old_sum_of_costs
[STAT] sum_of_costs after recomputation: 4344
[STAT] Iteration 97
[DBG]  Using SAT operator (destroy+repair SAT).
[DBG]  ====================
[DBG]  SAT destroy operator called.
[DBG]  SAT heuristic: 2
[DBG]  key_agent_id: 57
[DBG]  key_agent_id global path length: 40
[DBG]  Submap content (global positions):
[DBG]  401 402 403 404 405 
[DBG]  433 434 435 436 437 
[DBG]  465 466 467 468 469 
[DBG]  497 498 499 500 501 
[DBG]  529 530 531 532 533 
[DBG]  Map content with agents and obstacles:
[DBG]  A A A . A 
[DBG]  . X . X . 
[DBG]  A A A . A 
[DBG]  X A . X . 
[DBG]  . A . X A 
[DBG]  content of the map structure that we pass to the SAT solver:
[DBG]  1  1  1  1  1  
[DBG]  1  -1  1  -1  1  
[DBG]  1  1  1  1  1  
[DBG]  -1  1  1  -1  1  
[DBG]  1  1  1  -1  1  
[DBG]  Identifying agents in a submap for rescheduling (when key_agent is there at the time 16):
[DBG]  Agent 3 found intervals in the sub-map:
[DBG]   [0..2]
[DBG]  Agent 3 is not in sub-map at time 16 (intervals: 
[DBG]  [0..2] )
[DBG]  Agent 33 found intervals in the sub-map:
[DBG]   [12..17]
[DBG]  Agent 33 (interval in submap: [12..17]) contains time 16, added to replan.
[DBG]  Agent 36 found intervals in the sub-map:
[DBG]   [11..17]
[DBG]  Agent 36 (interval in submap: [11..17]) contains time 16, added to replan.
[DBG]  Agent 43 found intervals in the sub-map:
[DBG]   [11..17]
[DBG]  Agent 43 (interval in submap: [11..17]) contains time 16, added to replan.
[DBG]  Agent 53 found intervals in the sub-map:
[DBG]   [11..20]
[DBG]  Agent 53 (interval in submap: [11..20]) contains time 16, added to replan.
[DBG]  Agent 54 found intervals in the sub-map:
[DBG]   [2..3] [19..20]
[DBG]  Agent 54 is not in sub-map at time 16 (intervals: 
[DBG]  [2..3] [19..20] )
[DBG]  Agent 57 found intervals in the sub-map:
[DBG]   [14..21]
[DBG]  Agent 57 (interval in submap: [14..21]) contains time 16, added to replan.
[DBG]  Agent 61 found intervals in the sub-map:
[DBG]   [19..19] [23..30]
[DBG]  Agent 61 is not in sub-map at time 16 (intervals: 
[DBG]  [19..19] [23..30] )
[DBG]  Agent 62 found intervals in the sub-map:
[DBG]   [15..21]
[DBG]  Agent 62 (interval in submap: [15..21]) contains time 16, added to replan.
[DBG]  Agent 81 found intervals in the sub-map:
[DBG]   [16..22]
[DBG]  Agent 81 (interval in submap: [16..22]) contains time 16, added to replan.
[DBG]  Agent 84 found intervals in the sub-map:
[DBG]   [14..22]
[DBG]  Agent 84 (interval in submap: [14..22]) contains time 16, added to replan.
[DBG]  Agent 86 found intervals in the sub-map:
[DBG]   [16..16]
[DBG]  Agent 86 (interval in submap: [16..16]) contains time 16, added to replan.
[DBG]  Agent 100 found intervals in the sub-map:
[DBG]   [16..24]
[DBG]  Agent 100 (interval in submap: [16..24]) contains time 16, added to replan.
[DBG]  Agent 128 found intervals in the sub-map:
[DBG]   [11..23]
[DBG]  Agent 128 (interval in submap: [11..23]) contains time 16, added to replan.
[DBG]  Agent 33 | Start (global): 469 -> (local): (2, 4) at time 16 | Goal (global): 501 -> (local): (3, 4) at time 17
[DBG]  Agent 36 | Start (global): 402 -> (local): (0, 1) at time 16 | Goal (global): 403 -> (local): (0, 2) at time 17
[DBG]  Agent 43 | Start (global): 466 -> (local): (2, 1) at time 16 | Goal (global): 465 -> (local): (2, 0) at time 17
[DBG]  Agent 53 | Start (global): 530 -> (local): (4, 1) at time 16 | Goal (global): 529 -> (local): (4, 0) at time 20
[DBG]  Agent 57 | Start (global): 467 -> (local): (2, 2) at time 16 | Goal (global): 529 -> (local): (4, 0) at time 21
[DBG]  Agent 62 | Start (global): 401 -> (local): (0, 0) at time 16 | Goal (global): 405 -> (local): (0, 4) at time 21
[DBG]  Agent 81 | Start (global): 465 -> (local): (2, 0) at time 16 | Goal (global): 531 -> (local): (4, 2) at time 22
[DBG]  Agent 84 | Start (global): 498 -> (local): (3, 1) at time 16 | Goal (global): 437 -> (local): (1, 4) at time 22
[DBG]  Agent 86 | Start (global): 533 -> (local): (4, 4) at time 16 | Goal (global): 533 -> (local): (4, 4) at time 16
[DBG]  Agent 100 | Start (global): 405 -> (local): (0, 4) at time 16 | Goal (global): 529 -> (local): (4, 0) at time 24
[DBG]  Agent 128 | Start (global): 403 -> (local): (0, 2) at time 16 | Goal (global): 529 -> (local): (4, 0) at time 23
[DBG]  [REPAIR] SAT destroy operator called.
[DBG]  [REPAIR] SAT operator â€“ launching subproblem FOR OPTIMIZATION.
[DBG]  Creating local paths (sx, sy) in the submap for T_sync = 16
[DBG]    Agent 33 (global paths from T=16 to 17) has local path: (2,4) (3,4) 
[DBG]    Agent 36 (global paths from T=16 to 17) has local path: (0,1) (0,2) 
[DBG]    Agent 43 (global paths from T=16 to 17) has local path: (2,1) (2,0) 
[DBG]    Agent 53 (global paths from T=16 to 20) has local path: (4,1) (4,1) (4,1) (4,1) (4,0) 
[DBG]    Agent 57 (global paths from T=16 to 21) has local path: (2,2) (3,2) (4,2) (4,2) (4,1) (4,0) 
[DBG]    Agent 62 (global paths from T=16 to 21) has local path: (0,0) (0,1) (0,1) (0,2) (0,3) (0,4) 
[DBG]    Agent 81 (global paths from T=16 to 22) has local path: (2,0) (1,0) (2,0) (2,1) (3,1) (4,1) (4,2) 
[DBG]    Agent 84 (global paths from T=16 to 22) has local path: (3,1) (2,1) (2,1) (2,2) (2,3) (2,4) (1,4) 
[DBG]    Agent 86 (global paths from T=16 to 16) has local path: (4,4) 
[DBG]    Agent 100 (global paths from T=16 to 24) has local path: (0,4) (0,3) (0,2) (1,2) (2,2) (2,1) (3,1) (4,1) (4,0) 
[DBG]    Agent 128 (global paths from T=16 to 23) has local path: (0,2) (1,2) (2,2) (3,2) (3,2) (3,1) (4,1) (4,0) 
[DBG]  Checking input data for SAT solver:
[DBG]    - Number of agents to replan: 11
[DBG]  Agent 33 has the original local path length: 2 => Start (2,4), Goal (3,4)
[DBG]  Agent 36 has the original local path length: 2 => Start (0,1), Goal (0,2)
[DBG]  Agent 43 has the original local path length: 2 => Start (2,1), Goal (2,0)
[DBG]  Agent 53 has the original local path length: 5 => Start (4,1), Goal (4,0)
[DBG]  Agent 57 has the original local path length: 6 => Start (2,2), Goal (4,0)
[DBG]  Agent 62 has the original local path length: 6 => Start (0,0), Goal (0,4)
[DBG]  Agent 81 has the original local path length: 7 => Start (2,0), Goal (4,2)
[DBG]  Agent 84 has the original local path length: 7 => Start (3,1), Goal (1,4)
[DBG]  Agent 86 has the original local path length: 1 => Start (4,4), Goal (4,4)
[DBG]  Agent 100 has the original local path length: 9 => Start (0,4), Goal (4,0)
[DBG]  Agent 128 has the original local path length: 8 => Start (0,2), Goal (4,0)
[DBG]  Start position: (2, 4), (0, 1), (2, 1), (4, 1), (2, 2), (0, 0), (2, 0), (3, 1), (4, 4), (0, 4), (0, 2), 
[DBG]  Goal position: (3, 4), (0, 2), (2, 0), (4, 0), (4, 0), (0, 4), (4, 2), (1, 4), (4, 4), (4, 0), (4, 0), 
[DBG]  SAT instance and solver created.
Currently solving
Instance name: scen
Map name: map
Encoding used: disappear_at_goal
SAT solver used: Kissat
Optimizing function: sum of costs
Number of agents: 11
Mks LB: 9
SoC LB: 46
Delta: 0
Remaining time: 300000 [ms]

[STAT] Solver returned: -1
[DBG]  SAT solver failed.
[STAT] SAT solver failed to find a valid solution.
[DBG]  ====================
[DBG]  SAT destroy operator called.
[DBG]  SAT heuristic: 2
[DBG]  key_agent_id: 57
[DBG]  key_agent_id global path length: 40
[DBG]  Submap content (global positions):
[DBG]  337 338 339 340 341 
[DBG]  369 370 371 372 373 
[DBG]  401 402 403 404 405 
[DBG]  433 434 435 436 437 
[DBG]  465 466 467 468 469 
[DBG]  Map content with agents and obstacles:
[DBG]  A A . . . 
[DBG]  . X . X . 
[DBG]  . A A A A 
[DBG]  . X A X . 
[DBG]  . . A . A 
[DBG]  content of the map structure that we pass to the SAT solver:
[DBG]  1  1  1  1  1  
[DBG]  1  -1  1  -1  1  
[DBG]  1  1  1  1  1  
[DBG]  1  -1  1  -1  1  
[DBG]  1  1  1  1  1  
[DBG]  Identifying agents in a submap for rescheduling (when key_agent is there at the time 14):
[DBG]  Agent 3 found intervals in the sub-map:
[DBG]   [0..2]
[DBG]  Agent 3 is not in sub-map at time 14 (intervals: 
[DBG]  [0..2] )
[DBG]  Agent 33 found intervals in the sub-map:
[DBG]   [12..16]
[DBG]  Agent 33 (interval in submap: [12..16]) contains time 14, added to replan.
[DBG]  Agent 36 found intervals in the sub-map:
[DBG]   [11..18]
[DBG]  Agent 36 (interval in submap: [11..18]) contains time 14, added to replan.
[DBG]  Agent 43 found intervals in the sub-map:
[DBG]   [11..17]
[DBG]  Agent 43 (interval in submap: [11..17]) contains time 14, added to replan.
[DBG]  Agent 45 found intervals in the sub-map:
[DBG]   [10..14]
[DBG]  Agent 45 (interval in submap: [10..14]) contains time 14, added to replan.
[DBG]  Agent 53 found intervals in the sub-map:
[DBG]   [8..13]
[DBG]  Agent 53 is not in sub-map at time 14 (intervals: 
[DBG]  [8..13] )
[DBG]  Agent 54 found intervals in the sub-map:
[DBG]   [2..6] [14..20]
[DBG]  Agent 54 (interval in submap: [14..20]) contains time 14, added to replan.
[DBG]  Agent 57 found intervals in the sub-map:
[DBG]   [9..16]
[DBG]  Agent 57 (interval in submap: [9..16]) contains time 14, added to replan.
[DBG]  Agent 63 found intervals in the sub-map:
[DBG]  
[DBG]  Agent 63 is not in sub-map at time 14 (intervals: 
[DBG]  )
[DBG]  Agent 104 found intervals in the sub-map:
[DBG]   [12..16]
[DBG]  Agent 104 (interval in submap: [12..16]) contains time 14, added to replan.
[DBG]  Agent 113 found intervals in the sub-map:
[DBG]   [12..15]
[DBG]  Agent 113 (interval in submap: [12..15]) contains time 14, added to replan.
[DBG]  Agent 128 found intervals in the sub-map:
[DBG]   [11..18]
[DBG]  Agent 128 (interval in submap: [11..18]) contains time 14, added to replan.
[DBG]  Agent 149 found intervals in the sub-map:
[DBG]  
[DBG]  Agent 149 is not in sub-map at time 14 (intervals: 
[DBG]  )
[DBG]  Agent 33 | Start (global): 467 -> (local): (4, 2) at time 14 | Goal (global): 469 -> (local): (4, 4) at time 16
[DBG]  Agent 36 | Start (global): 402 -> (local): (2, 1) at time 14 | Goal (global): 371 -> (local): (1, 2) at time 18
[DBG]  Agent 43 | Start (global): 435 -> (local): (3, 2) at time 14 | Goal (global): 465 -> (local): (4, 0) at time 17
[DBG]  Agent 45 | Start (global): 337 -> (local): (0, 0) at time 14 | Goal (global): 337 -> (local): (0, 0) at time 14
[DBG]  Agent 54 | Start (global): 338 -> (local): (0, 1) at time 14 | Goal (global): 437 -> (local): (3, 4) at time 20
[DBG]  Agent 57 | Start (global): 403 -> (local): (2, 2) at time 14 | Goal (global): 467 -> (local): (4, 2) at time 16
[DBG]  Agent 104 | Start (global): 405 -> (local): (2, 4) at time 14 | Goal (global): 341 -> (local): (0, 4) at time 16
[DBG]  Agent 113 | Start (global): 469 -> (local): (4, 4) at time 14 | Goal (global): 437 -> (local): (3, 4) at time 15
[DBG]  Agent 128 | Start (global): 404 -> (local): (2, 3) at time 14 | Goal (global): 467 -> (local): (4, 2) at time 18
[DBG]  [REPAIR] SAT destroy operator called.
[DBG]  [REPAIR] SAT operator â€“ launching subproblem FOR OPTIMIZATION.
[DBG]  Creating local paths (sx, sy) in the submap for T_sync = 14
[DBG]    Agent 33 (global paths from T=14 to 16) has local path: (4,2) (4,3) (4,4) 
[DBG]    Agent 36 (global paths from T=14 to 18) has local path: (2,1) (2,1) (2,1) (2,2) (1,2) 
[DBG]    Agent 43 (global paths from T=14 to 17) has local path: (3,2) (4,2) (4,1) (4,0) 
[DBG]    Agent 45 (global paths from T=14 to 14) has local path: (0,0) 
[DBG]    Agent 54 (global paths from T=14 to 20) has local path: (0,1) (0,2) (0,3) (0,4) (1,4) (2,4) (3,4) 
[DBG]    Agent 57 (global paths from T=14 to 16) has local path: (2,2) (3,2) (4,2) 
[DBG]    Agent 104 (global paths from T=14 to 16) has local path: (2,4) (1,4) (0,4) 
[DBG]    Agent 113 (global paths from T=14 to 15) has local path: (4,4) (3,4) 
[DBG]    Agent 128 (global paths from T=14 to 18) has local path: (2,3) (2,3) (2,2) (3,2) (4,2) 
[DBG]  Checking input data for SAT solver:
[DBG]    - Number of agents to replan: 9
[DBG]  Agent 33 has the original local path length: 3 => Start (4,2), Goal (4,4)
[DBG]  Agent 36 has the original local path length: 5 => Start (2,1), Goal (1,2)
[DBG]  Agent 43 has the original local path length: 4 => Start (3,2), Goal (4,0)
[DBG]  Agent 45 has the original local path length: 1 => Start (0,0), Goal (0,0)
[DBG]  Agent 54 has the original local path length: 7 => Start (0,1), Goal (3,4)
[DBG]  Agent 57 has the original local path length: 3 => Start (2,2), Goal (4,2)
[DBG]  Agent 104 has the original local path length: 3 => Start (2,4), Goal (0,4)
[DBG]  Agent 113 has the original local path length: 2 => Start (4,4), Goal (3,4)
[DBG]  Agent 128 has the original local path length: 5 => Start (2,3), Goal (4,2)
[DBG]  Start position: (4, 2), (2, 1), (3, 2), (0, 0), (0, 1), (2, 2), (2, 4), (4, 4), (2, 3), 
[DBG]  Goal position: (4, 4), (1, 2), (4, 0), (0, 0), (3, 4), (4, 2), (0, 4), (3, 4), (4, 2), 
[DBG]  SAT instance and solver created.
Currently solving
Instance name: scen
Map name: map
Encoding used: disappear_at_goal
SAT solver used: Kissat
Optimizing function: sum of costs
Number of agents: 9
Mks LB: 7
SoC LB: 30
Delta: 0
Remaining time: 300000 [ms]

[STAT] Solver returned: -1
[DBG]  SAT solver failed.
[STAT] SAT solver failed to find a valid solution.
[DBG]  ====================
[DBG]  SAT destroy operator called.
[DBG]  SAT heuristic: 2
[DBG]  key_agent_id: 57
[DBG]  key_agent_id global path length: 40
[DBG]  Submap content (global positions):
[DBG]  463 464 465 466 467 
[DBG]  495 496 497 498 499 
[DBG]  527 528 529 530 531 
[DBG]  559 560 561 562 563 
[DBG]  591 592 593 594 595 
[DBG]  Map content with agents and obstacles:
[DBG]  A A . A . 
[DBG]  X A X A . 
[DBG]  X . A A . 
[DBG]  X . A X . 
[DBG]  . . . . X 
[DBG]  content of the map structure that we pass to the SAT solver:
[DBG]  1  1  1  1  1  
[DBG]  -1  1  -1  1  1  
[DBG]  -1  1  1  1  1  
[DBG]  -1  1  1  -1  1  
[DBG]  1  1  1  1  -1  
[DBG]  Identifying agents in a submap for rescheduling (when key_agent is there at the time 21):
[DBG]  Agent 3 found intervals in the sub-map:
[DBG]  
[DBG]  Agent 3 is not in sub-map at time 21 (intervals: 
[DBG]  )
[DBG]  Agent 43 found intervals in the sub-map:
[DBG]   [15..19] [21..22]
[DBG]  Agent 43 (interval in submap: [21..22]) contains time 21, added to replan.
[DBG]  Agent 53 found intervals in the sub-map:
[DBG]   [13..22]
[DBG]  Agent 53 (interval in submap: [13..22]) contains time 21, added to replan.
[DBG]  Agent 57 found intervals in the sub-map:
[DBG]   [16..23]
[DBG]  Agent 57 (interval in submap: [16..23]) contains time 21, added to replan.
[DBG]  Agent 61 found intervals in the sub-map:
[DBG]   [17..25]
[DBG]  Agent 61 (interval in submap: [17..25]) contains time 21, added to replan.
[DBG]  Agent 62 found intervals in the sub-map:
[DBG]   [7..13]
[DBG]  Agent 62 is not in sub-map at time 21 (intervals: 
[DBG]  [7..13] )
[DBG]  Agent 81 found intervals in the sub-map:
[DBG]   [13..16] [18..23]
[DBG]  Agent 81 (interval in submap: [18..23]) contains time 21, added to replan.
[DBG]  Agent 100 found intervals in the sub-map:
[DBG]   [20..28]
[DBG]  Agent 100 (interval in submap: [20..28]) contains time 21, added to replan.
[DBG]  Agent 114 found intervals in the sub-map:
[DBG]   [20..21]
[DBG]  Agent 114 (interval in submap: [20..21]) contains time 21, added to replan.
[DBG]  Agent 128 found intervals in the sub-map:
[DBG]   [18..27]
[DBG]  Agent 128 (interval in submap: [18..27]) contains time 21, added to replan.
[DBG]  Agent 43 | Start (global): 463 -> (local): (0, 0) at time 21 | Goal (global): 463 -> (local): (0, 0) at time 22
[DBG]  Agent 53 | Start (global): 561 -> (local): (3, 2) at time 21 | Goal (global): 593 -> (local): (4, 2) at time 22
[DBG]  Agent 57 | Start (global): 529 -> (local): (2, 2) at time 21 | Goal (global): 593 -> (local): (4, 2) at time 23
[DBG]  Agent 61 | Start (global): 496 -> (local): (1, 1) at time 21 | Goal (global): 467 -> (local): (0, 4) at time 25
[DBG]  Agent 81 | Start (global): 530 -> (local): (2, 3) at time 21 | Goal (global): 563 -> (local): (3, 4) at time 23
[DBG]  Agent 100 | Start (global): 466 -> (local): (0, 3) at time 21 | Goal (global): 591 -> (local): (4, 0) at time 28
[DBG]  Agent 114 | Start (global): 464 -> (local): (0, 1) at time 21 | Goal (global): 464 -> (local): (0, 1) at time 21
[DBG]  Agent 128 | Start (global): 498 -> (local): (1, 3) at time 21 | Goal (global): 463 -> (local): (0, 0) at time 27
[DBG]  [REPAIR] SAT destroy operator called.
[DBG]  [REPAIR] SAT operator â€“ launching subproblem FOR OPTIMIZATION.
[DBG]  Creating local paths (sx, sy) in the submap for T_sync = 21
[DBG]    Agent 43 (global paths from T=21 to 22) has local path: (0,0) (0,0) 
[DBG]    Agent 53 (global paths from T=21 to 22) has local path: (3,2) (4,2) 
[DBG]    Agent 57 (global paths from T=21 to 23) has local path: (2,2) (3,2) (4,2) 
[DBG]    Agent 61 (global paths from T=21 to 25) has local path: (1,1) (0,1) (0,2) (0,3) (0,4) 
[DBG]    Agent 81 (global paths from T=21 to 23) has local path: (2,3) (2,4) (3,4) 
[DBG]    Agent 100 (global paths from T=21 to 28) has local path: (0,3) (1,3) (2,3) (2,2) (3,2) (4,2) (4,1) (4,0) 
[DBG]    Agent 114 (global paths from T=21 to 21) has local path: (0,1) 
[DBG]    Agent 128 (global paths from T=21 to 27) has local path: (1,3) (2,3) (2,2) (2,1) (1,1) (0,1) (0,0) 
[DBG]  Checking input data for SAT solver:
[DBG]    - Number of agents to replan: 8
[DBG]  Agent 43 has the original local path length: 2 => Start (0,0), Goal (0,0)
[DBG]  Agent 53 has the original local path length: 2 => Start (3,2), Goal (4,2)
[DBG]  Agent 57 has the original local path length: 3 => Start (2,2), Goal (4,2)
[DBG]  Agent 61 has the original local path length: 5 => Start (1,1), Goal (0,4)
[DBG]  Agent 81 has the original local path length: 3 => Start (2,3), Goal (3,4)
[DBG]  Agent 100 has the original local path length: 8 => Start (0,3), Goal (4,0)
[DBG]  Agent 114 has the original local path length: 1 => Start (0,1), Goal (0,1)
[DBG]  Agent 128 has the original local path length: 7 => Start (1,3), Goal (0,0)
[DBG]  Start position: (0, 0), (3, 2), (2, 2), (1, 1), (2, 3), (0, 3), (0, 1), (1, 3), 
[DBG]  Goal position: (0, 0), (4, 2), (4, 2), (0, 4), (3, 4), (4, 0), (0, 1), (0, 0), 
[DBG]  SAT instance and solver created.
Currently solving
Instance name: scen
Map name: map
Encoding used: disappear_at_goal
SAT solver used: Kissat
Optimizing function: sum of costs
Number of agents: 8
Mks LB: 8
SoC LB: 28
Delta: 0
Remaining time: 300000 [ms]

[STAT] Solver returned: -1
[DBG]  SAT solver failed.
[STAT] SAT solver failed to find a valid solution.
[DBG]  ====================
[DBG]  SAT destroy operator called.
[DBG]  SAT heuristic: 2
[DBG]  key_agent_id: 57
[DBG]  key_agent_id global path length: 40
[DBG]  Submap content (global positions):
[DBG]  305 306 307 308 309 
[DBG]  337 338 339 340 341 
[DBG]  369 370 371 372 373 
[DBG]  401 402 403 404 405 
[DBG]  433 434 435 436 437 
[DBG]  Map content with agents and obstacles:
[DBG]  X . X . . 
[DBG]  . . A . . 
[DBG]  . X A X . 
[DBG]  . A . A . 
[DBG]  A X A X A 
[DBG]  content of the map structure that we pass to the SAT solver:
[DBG]  -1  1  -1  1  1  
[DBG]  1  1  1  1  1  
[DBG]  1  -1  1  -1  1  
[DBG]  1  1  1  1  1  
[DBG]  1  -1  1  -1  1  
[DBG]  Identifying agents in a submap for rescheduling (when key_agent is there at the time 12):
[DBG]  Agent 5 found intervals in the sub-map:
[DBG]  
[DBG]  Agent 5 is not in sub-map at time 12 (intervals: 
[DBG]  )
[DBG]  Agent 36 found intervals in the sub-map:
[DBG]   [11..18]
[DBG]  Agent 36 (interval in submap: [11..18]) contains time 12, added to replan.
[DBG]  Agent 43 found intervals in the sub-map:
[DBG]   [11..14]
[DBG]  Agent 43 (interval in submap: [11..14]) contains time 12, added to replan.
[DBG]  Agent 45 found intervals in the sub-map:
[DBG]   [9..14]
[DBG]  Agent 45 (interval in submap: [9..14]) contains time 12, added to replan.
[DBG]  Agent 53 found intervals in the sub-map:
[DBG]   [7..12]
[DBG]  Agent 53 (interval in submap: [7..12]) contains time 12, added to replan.
[DBG]  Agent 54 found intervals in the sub-map:
[DBG]   [2..7] [13..20]
[DBG]  Agent 54 is not in sub-map at time 12 (intervals: 
[DBG]  [2..7] [13..20] )
[DBG]  Agent 57 found intervals in the sub-map:
[DBG]   [8..15]
[DBG]  Agent 57 (interval in submap: [8..15]) contains time 12, added to replan.
[DBG]  Agent 104 found intervals in the sub-map:
[DBG]   [13..18]
[DBG]  Agent 104 is not in sub-map at time 12 (intervals: 
[DBG]  [13..18] )
[DBG]  Agent 128 found intervals in the sub-map:
[DBG]   [12..17]
[DBG]  Agent 128 (interval in submap: [12..17]) contains time 12, added to replan.
[DBG]  Agent 137 found intervals in the sub-map:
[DBG]   [12..12]
[DBG]  Agent 137 (interval in submap: [12..12]) contains time 12, added to replan.
[DBG]  Agent 149 found intervals in the sub-map:
[DBG]  
[DBG]  Agent 149 is not in sub-map at time 12 (intervals: 
[DBG]  )
[DBG]  Agent 36 | Start (global): 402 -> (local): (3, 1) at time 12 | Goal (global): 371 -> (local): (2, 2) at time 18
[DBG]  Agent 43 | Start (global): 404 -> (local): (3, 3) at time 12 | Goal (global): 435 -> (local): (4, 2) at time 14
[DBG]  Agent 45 | Start (global): 339 -> (local): (1, 2) at time 12 | Goal (global): 337 -> (local): (1, 0) at time 14
[DBG]  Agent 53 | Start (global): 435 -> (local): (4, 2) at time 12 | Goal (global): 435 -> (local): (4, 2) at time 12
[DBG]  Agent 57 | Start (global): 371 -> (local): (2, 2) at time 12 | Goal (global): 435 -> (local): (4, 2) at time 15
[DBG]  Agent 128 | Start (global): 437 -> (local): (4, 4) at time 12 | Goal (global): 435 -> (local): (4, 2) at time 17
[DBG]  Agent 137 | Start (global): 433 -> (local): (4, 0) at time 12 | Goal (global): 433 -> (local): (4, 0) at time 12
[DBG]  [REPAIR] SAT destroy operator called.
[DBG]  [REPAIR] SAT operator â€“ launching subproblem FOR OPTIMIZATION.
[DBG]  Creating local paths (sx, sy) in the submap for T_sync = 12
[DBG]    Agent 36 (global paths from T=12 to 18) has local path: (3,1) (3,1) (3,1) (3,1) (3,1) (3,2) (2,2) 
[DBG]    Agent 43 (global paths from T=12 to 14) has local path: (3,3) (3,2) (4,2) 
[DBG]    Agent 45 (global paths from T=12 to 14) has local path: (1,2) (1,1) (1,0) 
[DBG]    Agent 53 (global paths from T=12 to 12) has local path: (4,2) 
[DBG]    Agent 57 (global paths from T=12 to 15) has local path: (2,2) (2,2) (3,2) (4,2) 
[DBG]    Agent 128 (global paths from T=12 to 17) has local path: (4,4) (3,4) (3,3) (3,3) (3,2) (4,2) 
[DBG]    Agent 137 (global paths from T=12 to 12) has local path: (4,0) 
[DBG]  Checking input data for SAT solver:
[DBG]    - Number of agents to replan: 7
[DBG]  Agent 36 has the original local path length: 7 => Start (3,1), Goal (2,2)
[DBG]  Agent 43 has the original local path length: 3 => Start (3,3), Goal (4,2)
[DBG]  Agent 45 has the original local path length: 3 => Start (1,2), Goal (1,0)
[DBG]  Agent 53 has the original local path length: 1 => Start (4,2), Goal (4,2)
[DBG]  Agent 57 has the original local path length: 4 => Start (2,2), Goal (4,2)
[DBG]  Agent 128 has the original local path length: 6 => Start (4,4), Goal (4,2)
[DBG]  Agent 137 has the original local path length: 1 => Start (4,0), Goal (4,0)
[DBG]  Start position: (3, 1), (3, 3), (1, 2), (4, 2), (2, 2), (4, 4), (4, 0), 
[DBG]  Goal position: (2, 2), (4, 2), (1, 0), (4, 2), (4, 2), (4, 2), (4, 0), 
[DBG]  SAT instance and solver created.
Currently solving
Instance name: scen
Map name: map
Encoding used: disappear_at_goal
SAT solver used: Kissat
Optimizing function: sum of costs
Number of agents: 7
Mks LB: 5
SoC LB: 19
Delta: 0
Remaining time: 300000 [ms]

[STAT] Solver returned: -1
[DBG]  SAT solver failed.
[STAT] SAT solver failed to find a valid solution.
[DBG]  ====================
[DBG]  SAT destroy operator called.
[DBG]  SAT heuristic: 2
[DBG]  key_agent_id: 57
[DBG]  key_agent_id global path length: 40
[DBG]  Submap content (global positions):
[DBG]  183 184 185 186 187 
[DBG]  215 216 217 218 219 
[DBG]  247 248 249 250 251 
[DBG]  279 280 281 282 283 
[DBG]  311 312 313 314 315 
[DBG]  Map content with agents and obstacles:
[DBG]  . A A . X 
[DBG]  . A . . X 
[DBG]  . . A X . 
[DBG]  . X A X . 
[DBG]  . . . . X 
[DBG]  content of the map structure that we pass to the SAT solver:
[DBG]  1  1  1  1  -1  
[DBG]  1  1  1  1  -1  
[DBG]  1  1  1  -1  1  
[DBG]  1  -1  1  -1  1  
[DBG]  1  1  1  1  -1  
[DBG]  Identifying agents in a submap for rescheduling (when key_agent is there at the time 2):
[DBG]  Agent 5 found intervals in the sub-map:
[DBG]   [0..6]
[DBG]  Agent 5 (interval in submap: [0..6]) contains time 2, added to replan.
[DBG]  Agent 45 found intervals in the sub-map:
[DBG]   [1..6]
[DBG]  Agent 45 (interval in submap: [1..6]) contains time 2, added to replan.
[DBG]  Agent 48 found intervals in the sub-map:
[DBG]   [0..5]
[DBG]  Agent 48 (interval in submap: [0..5]) contains time 2, added to replan.
[DBG]  Agent 57 found intervals in the sub-map:
[DBG]   [0..5]
[DBG]  Agent 57 (interval in submap: [0..5]) contains time 2, added to replan.
[DBG]  Agent 144 found intervals in the sub-map:
[DBG]   [2..9]
[DBG]  Agent 144 (interval in submap: [2..9]) contains time 2, added to replan.
[DBG]  Agent 5 | Start (global): 281 -> (local): (3, 2) at time 2 | Goal (global): 215 -> (local): (1, 0) at time 6
[DBG]  Agent 45 | Start (global): 184 -> (local): (0, 1) at time 2 | Goal (global): 279 -> (local): (3, 0) at time 6
[DBG]  Agent 48 | Start (global): 216 -> (local): (1, 1) at time 2 | Goal (global): 186 -> (local): (0, 3) at time 5
[DBG]  Agent 57 | Start (global): 249 -> (local): (2, 2) at time 2 | Goal (global): 279 -> (local): (3, 0) at time 5
[DBG]  Agent 144 | Start (global): 185 -> (local): (0, 2) at time 2 | Goal (global): 313 -> (local): (4, 2) at time 9
[DBG]  [REPAIR] SAT destroy operator called.
[DBG]  [REPAIR] SAT operator â€“ launching subproblem FOR OPTIMIZATION.
[DBG]  Creating local paths (sx, sy) in the submap for T_sync = 2
[DBG]    Agent 5 (global paths from T=2 to 6) has local path: (3,2) (2,2) (2,1) (1,1) (1,0) 
[DBG]    Agent 45 (global paths from T=2 to 6) has local path: (0,1) (1,1) (1,0) (2,0) (3,0) 
[DBG]    Agent 48 (global paths from T=2 to 5) has local path: (1,1) (1,2) (1,3) (0,3) 
[DBG]    Agent 57 (global paths from T=2 to 5) has local path: (2,2) (2,1) (2,0) (3,0) 
[DBG]    Agent 144 (global paths from T=2 to 9) has local path: (0,2) (0,2) (1,2) (2,2) (3,2) (4,2) (4,2) (4,2) 
[DBG]  Checking input data for SAT solver:
[DBG]    - Number of agents to replan: 5
[DBG]  Agent 5 has the original local path length: 5 => Start (3,2), Goal (1,0)
[DBG]  Agent 45 has the original local path length: 5 => Start (0,1), Goal (3,0)
[DBG]  Agent 48 has the original local path length: 4 => Start (1,1), Goal (0,3)
[DBG]  Agent 57 has the original local path length: 4 => Start (2,2), Goal (3,0)
[DBG]  Agent 144 has the original local path length: 8 => Start (0,2), Goal (4,2)
[DBG]  Start position: (3, 2), (0, 1), (1, 1), (2, 2), (0, 2), 
[DBG]  Goal position: (1, 0), (3, 0), (0, 3), (3, 0), (4, 2), 
[DBG]  SAT instance and solver created.
Currently solving
Instance name: scen
Map name: map
Encoding used: disappear_at_goal
SAT solver used: Kissat
Optimizing function: sum of costs
Number of agents: 5
Mks LB: 5
SoC LB: 23
Delta: 0
Remaining time: 300000 [ms]

Vertex conflict! Agents 2, 3, timestep 4, location 0
Found plan [agents = 5] [timesteps = 5]
Agent #0 : 13 10 9 5 4 
Agent #1 : 1 0 4 8 12 
Agent #2 : 5 1 2 3 0 
Agent #3 : 10 9 8 12 0 
Agent #4 : 2 6 10 13 17 

[STAT] Solver returned: 0
[DBG]  Agent (index) 5 | New local path (submap idx):
[DBG]  13 10 9 5 4 
[DBG]  Agent (index) 45 | New local path (submap idx):
[DBG]  1 0 4 8 12 
[DBG]  Agent (index) 48 | New local path (submap idx):
[DBG]  5 1 2 3 
[DBG]  Agent (index) 57 | New local path (submap idx):
[DBG]  10 9 8 12 
[DBG]  Agent (index) 144 | New local path (submap idx):
[DBG]  2 6 10 13 17 
[DBG]  Update the agent path 5 | Original local length: 5 | New local length: 5
[DBG]  agent 5 t=0 => decoded (sx,sy)=(3,2) => global_id=281
[DBG]  agent 5 t=1 => decoded (sx,sy)=(2,2) => global_id=249
[DBG]  agent 5 t=2 => decoded (sx,sy)=(2,1) => global_id=248
[DBG]  agent 5 t=3 => decoded (sx,sy)=(1,1) => global_id=216
[DBG]  agent 5 t=4 => decoded (sx,sy)=(1,0) => global_id=215
[DBG]  Complete path of agent 5:
[DBG]    Original: 281 281 281 249 248 216 215 214 213 212 244 243 242 241 240 239 271 270 269 268 267 299 298 297 296 295 294 294 293 261 
[DBG]    New:     281 281 281 249 248 216 215 214 213 212 244 243 242 241 240 239 271 270 269 268 267 299 298 297 296 295 294 294 293 261 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 281 281 
[DBG]    Local path (in submap): 281 249 248 216 215 
[DBG]    Suffix (out of submap): 214 213 212 244 243 242 241 240 239 271 270 269 268 267 299 298 297 296 295 294 294 293 261 
[DBG]  Original agent path length 5 je: 30
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 0: 281, 281, 281, 249, 248, 216, 215, 214, 213, 212, 244, 243, 242, 241, 240, 239, 271, 270, 269, 268, 267, 299, 298, 297, 296, 295, 294, 294, 293, 261, 
[DBG]  Path for agent 5 updated, resulting length: 30
[DBG]  Update the agent path 45 | Original local length: 5 | New local length: 5
[DBG]  agent 45 t=0 => decoded (sx,sy)=(0,1) => global_id=184
[DBG]  agent 45 t=1 => decoded (sx,sy)=(0,0) => global_id=183
[DBG]  agent 45 t=2 => decoded (sx,sy)=(1,0) => global_id=215
[DBG]  agent 45 t=3 => decoded (sx,sy)=(2,0) => global_id=247
[DBG]  agent 45 t=4 => decoded (sx,sy)=(3,0) => global_id=279
[DBG]  Complete path of agent 45:
[DBG]    Original: 153 185 184 216 215 247 279 278 310 309 341 340 339 338 337 336 368 367 366 398 430 462 494 526 558 590 622 654 686 718 750 750 751 783 815 847 848 849 
[DBG]    New:     153 185 184 183 215 247 279 278 310 309 341 340 339 338 337 336 368 367 366 398 430 462 494 526 558 590 622 654 686 718 750 750 751 783 815 847 848 849 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 153 185 
[DBG]    Local path (in submap): 184 183 215 247 279 
[DBG]    Suffix (out of submap): 278 310 309 341 340 339 338 337 336 368 367 366 398 430 462 494 526 558 590 622 654 686 718 750 750 751 783 815 847 848 849 
[DBG]  Original agent path length 45 je: 38
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 1: 153, 185, 184, 183, 215, 247, 279, 278, 310, 309, 341, 340, 339, 338, 337, 336, 368, 367, 366, 398, 430, 462, 494, 526, 558, 590, 622, 654, 686, 718, 750, 750, 751, 783, 815, 847, 848, 849, 
[DBG]  Path for agent 45 updated, resulting length: 38
[DBG]  Update the agent path 48 | Original local length: 4 | New local length: 4
[DBG]  agent 48 t=0 => decoded (sx,sy)=(1,1) => global_id=216
[DBG]  agent 48 t=1 => decoded (sx,sy)=(0,1) => global_id=184
[DBG]  agent 48 t=2 => decoded (sx,sy)=(0,2) => global_id=185
[DBG]  agent 48 t=3 => decoded (sx,sy)=(0,3) => global_id=186
[DBG]  Complete path of agent 48:
[DBG]    Original: 247 215 216 217 218 186 154 154 154 154 122 123 124 156 157 158 126 94 
[DBG]    New:     247 215 216 184 185 186 154 154 154 154 122 123 124 156 157 158 126 94 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 247 215 
[DBG]    Local path (in submap): 216 184 185 186 
[DBG]    Suffix (out of submap): 154 154 154 154 122 123 124 156 157 158 126 94 
[DBG]  Original agent path length 48 je: 18
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 2: 247, 215, 216, 184, 185, 186, 154, 154, 154, 154, 122, 123, 124, 156, 157, 158, 126, 94, 
[DBG]  Path for agent 48 updated, resulting length: 18
[DBG]  Update the agent path 57 | Original local length: 4 | New local length: 4
[DBG]  agent 57 t=0 => decoded (sx,sy)=(2,2) => global_id=249
[DBG]  agent 57 t=1 => decoded (sx,sy)=(2,1) => global_id=248
[DBG]  agent 57 t=2 => decoded (sx,sy)=(2,0) => global_id=247
[DBG]  agent 57 t=3 => decoded (sx,sy)=(3,0) => global_id=279
[DBG]  Complete path of agent 57:
[DBG]    Original: 185 217 249 248 247 279 278 277 309 341 340 339 371 371 403 435 467 499 531 531 530 529 561 593 625 657 689 721 753 752 751 783 815 847 848 880 912 944 976 977 
[DBG]    New:     185 217 249 248 247 279 278 277 309 341 340 339 371 371 403 435 467 499 531 531 530 529 561 593 625 657 689 721 753 752 751 783 815 847 848 880 912 944 976 977 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 185 217 
[DBG]    Local path (in submap): 249 248 247 279 
[DBG]    Suffix (out of submap): 278 277 309 341 340 339 371 371 403 435 467 499 531 531 530 529 561 593 625 657 689 721 753 752 751 783 815 847 848 880 912 944 976 977 
[DBG]  Original agent path length 57 je: 40
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 3: 185, 217, 249, 248, 247, 279, 278, 277, 309, 341, 340, 339, 371, 371, 403, 435, 467, 499, 531, 531, 530, 529, 561, 593, 625, 657, 689, 721, 753, 752, 751, 783, 815, 847, 848, 880, 912, 944, 976, 977, 
[DBG]  Path for agent 57 updated, resulting length: 40
[DBG]  Update the agent path 144 | Original local length: 8 | New local length: 5
[DBG]  agent 144 t=0 => decoded (sx,sy)=(0,2) => global_id=185
[DBG]  agent 144 t=1 => decoded (sx,sy)=(1,2) => global_id=217
[DBG]  agent 144 t=2 => decoded (sx,sy)=(2,2) => global_id=249
[DBG]  agent 144 t=3 => decoded (sx,sy)=(3,2) => global_id=281
[DBG]  agent 144 t=4 => decoded (sx,sy)=(4,2) => global_id=313
[DBG]  Complete path of agent 144:
[DBG]    Original: 121 153 185 185 217 249 281 313 313 313 345 377 409 441 473 505 506 538 538 570 569 601 633 632 631 
[DBG]    New:     121 153 185 217 249 281 313 345 377 409 441 473 505 506 538 538 570 569 601 633 632 631 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 121 153 
[DBG]    Local path (in submap): 185 217 249 281 313 345 377 409 
[DBG]    Suffix (out of submap): 441 473 505 506 538 538 570 569 601 633 632 631 
[DBG]  Original agent path length 144 je: 25
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 4: 121, 153, 185, 217, 249, 281, 313, 345, 377, 409, 441, 473, 505, 506, 538, 538, 570, 569, 601, 633, 632, 631, 
[DBG]  Path for agent 144 updated, resulting length: 22
[DBG]  Paths successfully updated.
[DBG]  (LNS.cpp) New path for agent 5: 
[DBG]  281, 281, 281, 249, 248, 216, 215, 214, 213, 212, 244, 243, 242, 241, 240, 239, 271, 270, 269, 268, 267, 299, 298, 297, 296, 295, 294, 294, 293, 261, 
[DBG]  (LNS.cpp) New path for agent 45: 
[DBG]  153, 185, 184, 183, 215, 247, 279, 278, 310, 309, 341, 340, 339, 338, 337, 336, 368, 367, 366, 398, 430, 462, 494, 526, 558, 590, 622, 654, 686, 718, 750, 750, 751, 783, 815, 847, 848, 849, 
[DBG]  (LNS.cpp) New path for agent 48: 
[DBG]  247, 215, 216, 184, 185, 186, 154, 154, 154, 154, 122, 123, 124, 156, 157, 158, 126, 94, 
[DBG]  (LNS.cpp) New path for agent 57: 
[DBG]  185, 217, 249, 248, 247, 279, 278, 277, 309, 341, 340, 339, 371, 371, 403, 435, 467, 499, 531, 531, 530, 529, 561, 593, 625, 657, 689, 721, 753, 752, 751, 783, 815, 847, 848, 880, 912, 944, 976, 977, 
[DBG]  (LNS.cpp) New path for agent 144: 
[DBG]  121, 153, 185, 217, 249, 281, 313, 345, 377, 409, 441, 473, 505, 506, 538, 538, 570, 569, 601, 633, 632, 631, 
[DBG]  component_weights = {0.321993, 0.135073, 0.141252, 0.401683}
[DBG]  opSuccess value: 1
[STAT] neighbor.sum_of_costs before recomputation: 143
[STAT] neighbor.old_sum_of_costs before recomputation: 146
[STAT] sum_of_costs before recomputation: 4344
[DBG]  Validate solution immediately after SAT success.
[WARNING] Problem after SAT: Vertex conflict between agents 144 and 3 at location 538 at timestep 15
[DBG]  Attempting immediate repair via init_lns because problem occurred after SAT (should be applied only for conflicts...).
[DBG]  Passing 150 agents to init_lns (skip=true).
[DBG]  path_table contents for selected agents (neighbor.agents):
[DBG]    Agent 5 => controlling path length=30
[DBG]    Agent 45 => controlling path length=38
[DBG]    Agent 48 => controlling path length=18
[DBG]    Agent 57 => controlling path length=40
[DBG]    Agent 144 => controlling path length=22
[DBG]  hodnota skip_initial_solution=1
[DBG]  We skip initialSolution => call buildCollisionData()
[DBG]  buildCollisionData() called â€“ skip_initial_solution case.
[DBG]  Agents.size()=150, collision_graph.size()=150
[DBG]  agent 3 => updateCollidingPairs => foundCollision
[DBG]  agent 64 => updateCollidingPairs => foundCollision
[DBG]  agent 144 => updateCollidingPairs => foundCollision
[DBG]  Conflicting agent pairs:
[DBG]  agent 3 is in conflict with agent 144
[DBG]  agent 64 is in conflict with agent 144
[DBG]  buildCollisionData() => sum_of_costs=4341, num_of_colliding_pairs=2
[DBG]  buildCollisionData done => sum_of_costs=4341, num_of_colliding_pairs=2
[DBG]  sum_of_cost hodnota: 4341
[DBG]  After skip/init build => iteration_stats.back(): sum_of_costs=4341, collisions=2
[DEBUG] Using default neighbor generation strategy for conflicts: 0
[DEBUG] Using default neighbor generation strategy for conflicts: 2
[DEBUG] Using default neighbor generation strategy for conflicts: 2
[DEBUG] Using default neighbor generation strategy for conflicts: 2
[DEBUG] Using default neighbor generation strategy for conflicts: 1
[DEBUG] Using default neighbor generation strategy for conflicts: 2
[DEBUG] Using default neighbor generation strategy for conflicts: 2
[DEBUG] Using default neighbor generation strategy for conflicts: 2
[DEBUG] Using default neighbor generation strategy for conflicts: 2
[DEBUG] Using default neighbor generation strategy for conflicts: 1
	InitLNS(PP): runtime = 0.0568477, iterations = 11, colliding pairs = 0, initial colliding pairs = 2, solution cost = 4368, initial solution cost = 4341, failed iterations = 1
[DBG]  init_lns->sum_of_costs after init_lns->run: 4368
[DBG]  sum_of_costs after assignment from init_lns->run: 4368
[DBG]  Recomputing sum_of_cost by dividing neighbor.sum_of_costs and neighbor.old_sum_of_costs
[STAT] sum_of_costs after recomputation: 4368
[STAT] Iteration 98
[DBG]  Using SAT operator (destroy+repair SAT).
[DBG]  ====================
[DBG]  SAT destroy operator called.
[DBG]  SAT heuristic: 2
[DBG]  key_agent_id: 148
[DBG]  key_agent_id global path length: 32
[DBG]  Submap content (global positions):
[DBG]  743 744 745 746 747 
[DBG]  775 776 777 778 779 
[DBG]  807 808 809 810 811 
[DBG]  839 840 841 842 843 
[DBG]  871 872 873 874 875 
[DBG]  Map content with agents and obstacles:
[DBG]  X . . A A 
[DBG]  A . A A . 
[DBG]  A . A . A 
[DBG]  . X A X A 
[DBG]  A X . . . 
[DBG]  content of the map structure that we pass to the SAT solver:
[DBG]  -1  1  1  1  1  
[DBG]  1  1  1  1  1  
[DBG]  1  1  1  1  1  
[DBG]  1  -1  1  -1  1  
[DBG]  1  -1  1  1  1  
[DBG]  Identifying agents in a submap for rescheduling (when key_agent is there at the time 7):
[DBG]  Agent 32 found intervals in the sub-map:
[DBG]   [5..9]
[DBG]  Agent 32 (interval in submap: [5..9]) contains time 7, added to replan.
[DBG]  Agent 37 found intervals in the sub-map:
[DBG]   [0..30]
[DBG]  Agent 37 (interval in submap: [0..30]) contains time 7, added to replan.
[DBG]  Agent 39 found intervals in the sub-map:
[DBG]   [3..7]
[DBG]  Agent 39 (interval in submap: [3..7]) contains time 7, added to replan.
[DBG]  Agent 56 found intervals in the sub-map:
[DBG]   [3..7]
[DBG]  Agent 56 (interval in submap: [3..7]) contains time 7, added to replan.
[DBG]  Agent 67 found intervals in the sub-map:
[DBG]  
[DBG]  Agent 67 is not in sub-map at time 7 (intervals: 
[DBG]  )
[DBG]  Agent 68 found intervals in the sub-map:
[DBG]   [5..7]
[DBG]  Agent 68 (interval in submap: [5..7]) contains time 7, added to replan.
[DBG]  Agent 85 found intervals in the sub-map:
[DBG]   [4..13]
[DBG]  Agent 85 (interval in submap: [4..13]) contains time 7, added to replan.
[DBG]  Agent 96 found intervals in the sub-map:
[DBG]   [6..9]
[DBG]  Agent 96 (interval in submap: [6..9]) contains time 7, added to replan.
[DBG]  Agent 97 found intervals in the sub-map:
[DBG]   [4..10]
[DBG]  Agent 97 (interval in submap: [4..10]) contains time 7, added to replan.
[DBG]  Agent 105 found intervals in the sub-map:
[DBG]   [7..7]
[DBG]  Agent 105 (interval in submap: [7..7]) contains time 7, added to replan.
[DBG]  Agent 122 found intervals in the sub-map:
[DBG]   [5..7]
[DBG]  Agent 122 (interval in submap: [5..7]) contains time 7, added to replan.
[DBG]  Agent 132 found intervals in the sub-map:
[DBG]  
[DBG]  Agent 132 is not in sub-map at time 7 (intervals: 
[DBG]  )
[DBG]  Agent 148 found intervals in the sub-map:
[DBG]   [0..14]
[DBG]  Agent 148 (interval in submap: [0..14]) contains time 7, added to replan.
[DBG]  Agent 32 | Start (global): 775 -> (local): (1, 0) at time 7 | Goal (global): 744 -> (local): (0, 1) at time 9
[DBG]  Agent 37 | Start (global): 807 -> (local): (2, 0) at time 7 | Goal (global): 779 -> (local): (1, 4) at time 30
[DBG]  Agent 39 | Start (global): 811 -> (local): (2, 4) at time 7 | Goal (global): 811 -> (local): (2, 4) at time 7
[DBG]  Agent 56 | Start (global): 746 -> (local): (0, 3) at time 7 | Goal (global): 746 -> (local): (0, 3) at time 7
[DBG]  Agent 68 | Start (global): 843 -> (local): (3, 4) at time 7 | Goal (global): 843 -> (local): (3, 4) at time 7
[DBG]  Agent 85 | Start (global): 777 -> (local): (1, 2) at time 7 | Goal (global): 875 -> (local): (4, 4) at time 13
[DBG]  Agent 96 | Start (global): 778 -> (local): (1, 3) at time 7 | Goal (global): 811 -> (local): (2, 4) at time 9
[DBG]  Agent 97 | Start (global): 841 -> (local): (3, 2) at time 7 | Goal (global): 873 -> (local): (4, 2) at time 10
[DBG]  Agent 105 | Start (global): 871 -> (local): (4, 0) at time 7 | Goal (global): 871 -> (local): (4, 0) at time 7
[DBG]  Agent 122 | Start (global): 747 -> (local): (0, 4) at time 7 | Goal (global): 747 -> (local): (0, 4) at time 7
[DBG]  Agent 148 | Start (global): 809 -> (local): (2, 2) at time 7 | Goal (global): 746 -> (local): (0, 3) at time 14
[DBG]  [REPAIR] SAT destroy operator called.
[DBG]  [REPAIR] SAT operator â€“ launching subproblem FOR OPTIMIZATION.
[DBG]  Creating local paths (sx, sy) in the submap for T_sync = 7
[DBG]    Agent 32 (global paths from T=7 to 9) has local path: (1,0) (1,1) (0,1) 
[DBG]    Agent 37 (global paths from T=7 to 30) has local path: (2,0) (1,0) (1,1) (1,2) (0,2) (0,2) (0,2) (0,2) (0,2) (0,2) (0,2) (0,2) (0,2) (0,2) (0,2) (0,2) (0,2) (0,2) (0,2) (0,2) (0,3) (0,3) (0,4) (1,4) 
[DBG]    Agent 39 (global paths from T=7 to 7) has local path: (2,4) 
[DBG]    Agent 56 (global paths from T=7 to 7) has local path: (0,3) 
[DBG]    Agent 68 (global paths from T=7 to 7) has local path: (3,4) 
[DBG]    Agent 85 (global paths from T=7 to 13) has local path: (1,2) (1,3) (1,4) (2,4) (2,4) (3,4) (4,4) 
[DBG]    Agent 96 (global paths from T=7 to 9) has local path: (1,3) (2,3) (2,4) 
[DBG]    Agent 97 (global paths from T=7 to 10) has local path: (3,2) (3,2) (4,2) (4,2) 
[DBG]    Agent 105 (global paths from T=7 to 7) has local path: (4,0) 
[DBG]    Agent 122 (global paths from T=7 to 7) has local path: (0,4) 
[DBG]    Agent 148 (global paths from T=7 to 14) has local path: (2,2) (2,2) (2,2) (2,2) (2,2) (1,2) (1,3) (0,3) 
[DBG]  Checking input data for SAT solver:
[DBG]    - Number of agents to replan: 11
[DBG]  Agent 32 has the original local path length: 3 => Start (1,0), Goal (0,1)
[DBG]  Agent 37 has the original local path length: 24 => Start (2,0), Goal (1,4)
[DBG]  Agent 39 has the original local path length: 1 => Start (2,4), Goal (2,4)
[DBG]  Agent 56 has the original local path length: 1 => Start (0,3), Goal (0,3)
[DBG]  Agent 68 has the original local path length: 1 => Start (3,4), Goal (3,4)
[DBG]  Agent 85 has the original local path length: 7 => Start (1,2), Goal (4,4)
[DBG]  Agent 96 has the original local path length: 3 => Start (1,3), Goal (2,4)
[DBG]  Agent 97 has the original local path length: 4 => Start (3,2), Goal (4,2)
[DBG]  Agent 105 has the original local path length: 1 => Start (4,0), Goal (4,0)
[DBG]  Agent 122 has the original local path length: 1 => Start (0,4), Goal (0,4)
[DBG]  Agent 148 has the original local path length: 8 => Start (2,2), Goal (0,3)
[DBG]  Start position: (1, 0), (2, 0), (2, 4), (0, 3), (3, 4), (1, 2), (1, 3), (3, 2), (4, 0), (0, 4), (2, 2), 
[DBG]  Goal position: (0, 1), (1, 4), (2, 4), (0, 3), (3, 4), (4, 4), (2, 4), (4, 2), (4, 0), (0, 4), (0, 3), 
[DBG]  SAT instance and solver created.
Currently solving
Instance name: scen
Map name: map
Encoding used: disappear_at_goal
SAT solver used: Kissat
Optimizing function: sum of costs
Number of agents: 11
Mks LB: 6
SoC LB: 29
Delta: 0
Remaining time: 300000 [ms]

Vertex conflict! Agents 0, 2, timestep 2, location 0
Swapping conflict! Agents 0, 2, timestep 2, edge (0,0)
Vertex conflict! Agents 0, 2, timestep 3, location 0
Swapping conflict! Agents 0, 2, timestep 3, edge (0,0)
Vertex conflict! Agents 0, 2, timestep 4, location 0
Swapping conflict! Agents 0, 2, timestep 4, edge (0,0)
Vertex conflict! Agents 0, 2, timestep 5, location 0
Vertex conflict! Agents 0, 3, timestep 2, location 0
Swapping conflict! Agents 0, 3, timestep 2, edge (0,0)
Vertex conflict! Agents 0, 3, timestep 3, location 0
Swapping conflict! Agents 0, 3, timestep 3, edge (0,0)
Vertex conflict! Agents 0, 3, timestep 4, location 0
Swapping conflict! Agents 0, 3, timestep 4, edge (0,0)
Vertex conflict! Agents 0, 3, timestep 5, location 0
Vertex conflict! Agents 0, 4, timestep 2, location 0
Swapping conflict! Agents 0, 4, timestep 2, edge (0,0)
Vertex conflict! Agents 0, 4, timestep 3, location 0
Swapping conflict! Agents 0, 4, timestep 3, edge (0,0)
Vertex conflict! Agents 0, 4, timestep 4, location 0
Swapping conflict! Agents 0, 4, timestep 4, edge (0,0)
Vertex conflict! Agents 0, 4, timestep 5, location 0
Vertex conflict! Agents 0, 6, timestep 3, location 0
Swapping conflict! Agents 0, 6, timestep 3, edge (0,0)
Vertex conflict! Agents 0, 6, timestep 4, location 0
Swapping conflict! Agents 0, 6, timestep 4, edge (0,0)
Vertex conflict! Agents 0, 6, timestep 5, location 0
Vertex conflict! Agents 0, 7, timestep 2, location 0
Swapping conflict! Agents 0, 7, timestep 2, edge (0,0)
Vertex conflict! Agents 0, 7, timestep 3, location 0
Swapping conflict! Agents 0, 7, timestep 3, edge (0,0)
Vertex conflict! Agents 0, 7, timestep 4, location 0
Swapping conflict! Agents 0, 7, timestep 4, edge (0,0)
Vertex conflict! Agents 0, 7, timestep 5, location 0
Vertex conflict! Agents 0, 8, timestep 2, location 0
Swapping conflict! Agents 0, 8, timestep 2, edge (0,0)
Vertex conflict! Agents 0, 8, timestep 3, location 0
Swapping conflict! Agents 0, 8, timestep 3, edge (0,0)
Vertex conflict! Agents 0, 8, timestep 4, location 0
Swapping conflict! Agents 0, 8, timestep 4, edge (0,0)
Vertex conflict! Agents 0, 8, timestep 5, location 0
Vertex conflict! Agents 0, 9, timestep 2, location 0
Swapping conflict! Agents 0, 9, timestep 2, edge (0,0)
Vertex conflict! Agents 0, 9, timestep 3, location 0
Swapping conflict! Agents 0, 9, timestep 3, edge (0,0)
Vertex conflict! Agents 0, 9, timestep 4, location 0
Swapping conflict! Agents 0, 9, timestep 4, edge (0,0)
Vertex conflict! Agents 0, 9, timestep 5, location 0
Vertex conflict! Agents 0, 10, timestep 4, location 0
Swapping conflict! Agents 0, 10, timestep 4, edge (0,0)
Vertex conflict! Agents 0, 10, timestep 5, location 0
Vertex conflict! Agents 2, 3, timestep 1, location 0
Swapping conflict! Agents 2, 3, timestep 1, edge (0,0)
Vertex conflict! Agents 2, 3, timestep 2, location 0
Swapping conflict! Agents 2, 3, timestep 2, edge (0,0)
Vertex conflict! Agents 2, 3, timestep 3, location 0
Swapping conflict! Agents 2, 3, timestep 3, edge (0,0)
Vertex conflict! Agents 2, 3, timestep 4, location 0
Swapping conflict! Agents 2, 3, timestep 4, edge (0,0)
Vertex conflict! Agents 2, 3, timestep 5, location 0
Vertex conflict! Agents 2, 4, timestep 1, location 0
Swapping conflict! Agents 2, 4, timestep 1, edge (0,0)
Vertex conflict! Agents 2, 4, timestep 2, location 0
Swapping conflict! Agents 2, 4, timestep 2, edge (0,0)
Vertex conflict! Agents 2, 4, timestep 3, location 0
Swapping conflict! Agents 2, 4, timestep 3, edge (0,0)
Vertex conflict! Agents 2, 4, timestep 4, location 0
Swapping conflict! Agents 2, 4, timestep 4, edge (0,0)
Vertex conflict! Agents 2, 4, timestep 5, location 0
Vertex conflict! Agents 2, 6, timestep 3, location 0
Swapping conflict! Agents 2, 6, timestep 3, edge (0,0)
Vertex conflict! Agents 2, 6, timestep 4, location 0
Swapping conflict! Agents 2, 6, timestep 4, edge (0,0)
Vertex conflict! Agents 2, 6, timestep 5, location 0
Vertex conflict! Agents 2, 7, timestep 2, location 0
Swapping conflict! Agents 2, 7, timestep 2, edge (0,0)
Vertex conflict! Agents 2, 7, timestep 3, location 0
Swapping conflict! Agents 2, 7, timestep 3, edge (0,0)
Vertex conflict! Agents 2, 7, timestep 4, location 0
Swapping conflict! Agents 2, 7, timestep 4, edge (0,0)
Vertex conflict! Agents 2, 7, timestep 5, location 0
Vertex conflict! Agents 2, 8, timestep 1, location 0
Swapping conflict! Agents 2, 8, timestep 1, edge (0,0)
Vertex conflict! Agents 2, 8, timestep 2, location 0
Swapping conflict! Agents 2, 8, timestep 2, edge (0,0)
Vertex conflict! Agents 2, 8, timestep 3, location 0
Swapping conflict! Agents 2, 8, timestep 3, edge (0,0)
Vertex conflict! Agents 2, 8, timestep 4, location 0
Swapping conflict! Agents 2, 8, timestep 4, edge (0,0)
Vertex conflict! Agents 2, 8, timestep 5, location 0
Vertex conflict! Agents 2, 9, timestep 1, location 0
Swapping conflict! Agents 2, 9, timestep 1, edge (0,0)
Vertex conflict! Agents 2, 9, timestep 2, location 0
Swapping conflict! Agents 2, 9, timestep 2, edge (0,0)
Vertex conflict! Agents 2, 9, timestep 3, location 0
Swapping conflict! Agents 2, 9, timestep 3, edge (0,0)
Vertex conflict! Agents 2, 9, timestep 4, location 0
Swapping conflict! Agents 2, 9, timestep 4, edge (0,0)
Vertex conflict! Agents 2, 9, timestep 5, location 0
Vertex conflict! Agents 2, 10, timestep 4, location 0
Swapping conflict! Agents 2, 10, timestep 4, edge (0,0)
Vertex conflict! Agents 2, 10, timestep 5, location 0
Vertex conflict! Agents 3, 4, timestep 1, location 0
Swapping conflict! Agents 3, 4, timestep 1, edge (0,0)
Vertex conflict! Agents 3, 4, timestep 2, location 0
Swapping conflict! Agents 3, 4, timestep 2, edge (0,0)
Vertex conflict! Agents 3, 4, timestep 3, location 0
Swapping conflict! Agents 3, 4, timestep 3, edge (0,0)
Vertex conflict! Agents 3, 4, timestep 4, location 0
Swapping conflict! Agents 3, 4, timestep 4, edge (0,0)
Vertex conflict! Agents 3, 4, timestep 5, location 0
Vertex conflict! Agents 3, 6, timestep 3, location 0
Swapping conflict! Agents 3, 6, timestep 3, edge (0,0)
Vertex conflict! Agents 3, 6, timestep 4, location 0
Swapping conflict! Agents 3, 6, timestep 4, edge (0,0)
Vertex conflict! Agents 3, 6, timestep 5, location 0
Vertex conflict! Agents 3, 7, timestep 2, location 0
Swapping conflict! Agents 3, 7, timestep 2, edge (0,0)
Vertex conflict! Agents 3, 7, timestep 3, location 0
Swapping conflict! Agents 3, 7, timestep 3, edge (0,0)
Vertex conflict! Agents 3, 7, timestep 4, location 0
Swapping conflict! Agents 3, 7, timestep 4, edge (0,0)
Vertex conflict! Agents 3, 7, timestep 5, location 0
Vertex conflict! Agents 3, 8, timestep 1, location 0
Swapping conflict! Agents 3, 8, timestep 1, edge (0,0)
Vertex conflict! Agents 3, 8, timestep 2, location 0
Swapping conflict! Agents 3, 8, timestep 2, edge (0,0)
Vertex conflict! Agents 3, 8, timestep 3, location 0
Swapping conflict! Agents 3, 8, timestep 3, edge (0,0)
Vertex conflict! Agents 3, 8, timestep 4, location 0
Swapping conflict! Agents 3, 8, timestep 4, edge (0,0)
Vertex conflict! Agents 3, 8, timestep 5, location 0
Vertex conflict! Agents 3, 9, timestep 1, location 0
Swapping conflict! Agents 3, 9, timestep 1, edge (0,0)
Vertex conflict! Agents 3, 9, timestep 2, location 0
Swapping conflict! Agents 3, 9, timestep 2, edge (0,0)
Vertex conflict! Agents 3, 9, timestep 3, location 0
Swapping conflict! Agents 3, 9, timestep 3, edge (0,0)
Vertex conflict! Agents 3, 9, timestep 4, location 0
Swapping conflict! Agents 3, 9, timestep 4, edge (0,0)
Vertex conflict! Agents 3, 9, timestep 5, location 0
Vertex conflict! Agents 3, 10, timestep 4, location 0
Swapping conflict! Agents 3, 10, timestep 4, edge (0,0)
Vertex conflict! Agents 3, 10, timestep 5, location 0
Vertex conflict! Agents 4, 6, timestep 3, location 0
Swapping conflict! Agents 4, 6, timestep 3, edge (0,0)
Vertex conflict! Agents 4, 6, timestep 4, location 0
Swapping conflict! Agents 4, 6, timestep 4, edge (0,0)
Vertex conflict! Agents 4, 6, timestep 5, location 0
Vertex conflict! Agents 4, 7, timestep 2, location 0
Swapping conflict! Agents 4, 7, timestep 2, edge (0,0)
Vertex conflict! Agents 4, 7, timestep 3, location 0
Swapping conflict! Agents 4, 7, timestep 3, edge (0,0)
Vertex conflict! Agents 4, 7, timestep 4, location 0
Swapping conflict! Agents 4, 7, timestep 4, edge (0,0)
Vertex conflict! Agents 4, 7, timestep 5, location 0
Vertex conflict! Agents 4, 8, timestep 1, location 0
Swapping conflict! Agents 4, 8, timestep 1, edge (0,0)
Vertex conflict! Agents 4, 8, timestep 2, location 0
Swapping conflict! Agents 4, 8, timestep 2, edge (0,0)
Vertex conflict! Agents 4, 8, timestep 3, location 0
Swapping conflict! Agents 4, 8, timestep 3, edge (0,0)
Vertex conflict! Agents 4, 8, timestep 4, location 0
Swapping conflict! Agents 4, 8, timestep 4, edge (0,0)
Vertex conflict! Agents 4, 8, timestep 5, location 0
Vertex conflict! Agents 4, 9, timestep 1, location 0
Swapping conflict! Agents 4, 9, timestep 1, edge (0,0)
Vertex conflict! Agents 4, 9, timestep 2, location 0
Swapping conflict! Agents 4, 9, timestep 2, edge (0,0)
Vertex conflict! Agents 4, 9, timestep 3, location 0
Swapping conflict! Agents 4, 9, timestep 3, edge (0,0)
Vertex conflict! Agents 4, 9, timestep 4, location 0
Swapping conflict! Agents 4, 9, timestep 4, edge (0,0)
Vertex conflict! Agents 4, 9, timestep 5, location 0
Vertex conflict! Agents 4, 10, timestep 4, location 0
Swapping conflict! Agents 4, 10, timestep 4, edge (0,0)
Vertex conflict! Agents 4, 10, timestep 5, location 0
Vertex conflict! Agents 6, 7, timestep 3, location 0
Swapping conflict! Agents 6, 7, timestep 3, edge (0,0)
Vertex conflict! Agents 6, 7, timestep 4, location 0
Swapping conflict! Agents 6, 7, timestep 4, edge (0,0)
Vertex conflict! Agents 6, 7, timestep 5, location 0
Vertex conflict! Agents 6, 8, timestep 3, location 0
Swapping conflict! Agents 6, 8, timestep 3, edge (0,0)
Vertex conflict! Agents 6, 8, timestep 4, location 0
Swapping conflict! Agents 6, 8, timestep 4, edge (0,0)
Vertex conflict! Agents 6, 8, timestep 5, location 0
Vertex conflict! Agents 6, 9, timestep 3, location 0
Swapping conflict! Agents 6, 9, timestep 3, edge (0,0)
Vertex conflict! Agents 6, 9, timestep 4, location 0
Swapping conflict! Agents 6, 9, timestep 4, edge (0,0)
Vertex conflict! Agents 6, 9, timestep 5, location 0
Vertex conflict! Agents 6, 10, timestep 4, location 0
Swapping conflict! Agents 6, 10, timestep 4, edge (0,0)
Vertex conflict! Agents 6, 10, timestep 5, location 0
Vertex conflict! Agents 7, 8, timestep 2, location 0
Swapping conflict! Agents 7, 8, timestep 2, edge (0,0)
Vertex conflict! Agents 7, 8, timestep 3, location 0
Swapping conflict! Agents 7, 8, timestep 3, edge (0,0)
Vertex conflict! Agents 7, 8, timestep 4, location 0
Swapping conflict! Agents 7, 8, timestep 4, edge (0,0)
Vertex conflict! Agents 7, 8, timestep 5, location 0
Vertex conflict! Agents 7, 9, timestep 2, location 0
Swapping conflict! Agents 7, 9, timestep 2, edge (0,0)
Vertex conflict! Agents 7, 9, timestep 3, location 0
Swapping conflict! Agents 7, 9, timestep 3, edge (0,0)
Vertex conflict! Agents 7, 9, timestep 4, location 0
Swapping conflict! Agents 7, 9, timestep 4, edge (0,0)
Vertex conflict! Agents 7, 9, timestep 5, location 0
Vertex conflict! Agents 7, 10, timestep 4, location 0
Swapping conflict! Agents 7, 10, timestep 4, edge (0,0)
Vertex conflict! Agents 7, 10, timestep 5, location 0
Vertex conflict! Agents 8, 9, timestep 1, location 0
Swapping conflict! Agents 8, 9, timestep 1, edge (0,0)
Vertex conflict! Agents 8, 9, timestep 2, location 0
Swapping conflict! Agents 8, 9, timestep 2, edge (0,0)
Vertex conflict! Agents 8, 9, timestep 3, location 0
Swapping conflict! Agents 8, 9, timestep 3, edge (0,0)
Vertex conflict! Agents 8, 9, timestep 4, location 0
Swapping conflict! Agents 8, 9, timestep 4, edge (0,0)
Vertex conflict! Agents 8, 9, timestep 5, location 0
Vertex conflict! Agents 8, 10, timestep 4, location 0
Swapping conflict! Agents 8, 10, timestep 4, edge (0,0)
Vertex conflict! Agents 8, 10, timestep 5, location 0
Vertex conflict! Agents 9, 10, timestep 4, location 0
Swapping conflict! Agents 9, 10, timestep 4, edge (0,0)
Vertex conflict! Agents 9, 10, timestep 5, location 0
Found plan [agents = 11] [timesteps = 6]
Agent #0 : 4 5 0 0 0 0 
Agent #1 : 9 10 11 12 13 8 
Agent #2 : 13 0 0 0 0 0 
Agent #3 : 2 0 0 0 0 0 
Agent #4 : 16 0 0 0 0 0 
Agent #5 : 6 11 15 18 19 20 
Agent #6 : 7 8 13 0 0 0 
Agent #7 : 15 18 0 0 0 0 
Agent #8 : 17 0 0 0 0 0 
Agent #9 : 3 0 0 0 0 0 
Agent #10 : 11 12 7 2 0 0 

[STAT] Solver returned: 0
[DBG]  Agent (index) 32 | New local path (submap idx):
[DBG]  4 5 0 
[DBG]  Agent (index) 37 | New local path (submap idx):
[DBG]  9 10 11 12 13 8 
[DBG]  Agent (index) 39 | New local path (submap idx):
[DBG]  13 
[DBG]  Agent (index) 56 | New local path (submap idx):
[DBG]  2 
[DBG]  Agent (index) 68 | New local path (submap idx):
[DBG]  16 
[DBG]  Agent (index) 85 | New local path (submap idx):
[DBG]  6 11 15 18 19 20 
[DBG]  Agent (index) 96 | New local path (submap idx):
[DBG]  7 8 13 
[DBG]  Agent (index) 97 | New local path (submap idx):
[DBG]  15 18 
[DBG]  Agent (index) 105 | New local path (submap idx):
[DBG]  17 
[DBG]  Agent (index) 122 | New local path (submap idx):
[DBG]  3 
[DBG]  Agent (index) 148 | New local path (submap idx):
[DBG]  11 12 7 2 
[DBG]  Update the agent path 32 | Original local length: 3 | New local length: 3
[DBG]  agent 32 t=0 => decoded (sx,sy)=(1,0) => global_id=775
[DBG]  agent 32 t=1 => decoded (sx,sy)=(1,1) => global_id=776
[DBG]  agent 32 t=2 => decoded (sx,sy)=(0,1) => global_id=744
[DBG]  Complete path of agent 32:
[DBG]    Original: 868 836 804 805 806 807 807 775 776 744 
[DBG]    New:     868 836 804 805 806 807 807 775 776 744 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 868 836 804 805 806 807 807 
[DBG]    Local path (in submap): 775 776 744 
[DBG]    Suffix (out of submap): 
[DBG]  Original agent path length 32 je: 10
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 0: 868, 836, 804, 805, 806, 807, 807, 775, 776, 744, 
[DBG]  Path for agent 32 updated, resulting length: 10
[DBG]  Update the agent path 37 | Original local length: 24 | New local length: 6
[DBG]  agent 37 t=0 => decoded (sx,sy)=(2,0) => global_id=807
[DBG]  agent 37 t=1 => decoded (sx,sy)=(2,1) => global_id=808
[DBG]  agent 37 t=2 => decoded (sx,sy)=(2,2) => global_id=809
[DBG]  agent 37 t=3 => decoded (sx,sy)=(2,3) => global_id=810
[DBG]  agent 37 t=4 => decoded (sx,sy)=(2,4) => global_id=811
[DBG]  agent 37 t=5 => decoded (sx,sy)=(1,4) => global_id=779
[DBG]  Complete path of agent 37:
[DBG]    Original: 839 839 839 839 839 839 839 807 775 776 777 745 745 745 745 745 745 745 745 745 745 745 745 745 745 745 745 746 746 747 779 780 781 782 
[DBG]    New:     839 839 839 839 839 839 839 807 808 809 810 811 779 780 781 782 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 839 839 839 839 839 839 839 
[DBG]    Local path (in submap): 807 808 809 810 811 779 780 781 782 
[DBG]    Suffix (out of submap): 
[DBG]  Original agent path length 37 je: 34
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 1: 839, 839, 839, 839, 839, 839, 839, 807, 808, 809, 810, 811, 779, 780, 781, 782, 
[DBG]  Path for agent 37 updated, resulting length: 16
[DBG]  Update the agent path 39 | Original local length: 1 | New local length: 1
[DBG]  agent 39 t=0 => decoded (sx,sy)=(2,4) => global_id=811
[DBG]  Complete path of agent 39:
[DBG]    Original: 680 712 713 745 746 778 810 811 812 813 814 846 878 879 880 881 882 883 884 885 886 887 888 889 890 891 892 
[DBG]    New:     680 712 713 745 746 778 810 811 812 813 814 846 878 879 880 881 882 883 884 885 886 887 888 889 890 891 892 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 680 712 713 745 746 778 810 
[DBG]    Local path (in submap): 811 
[DBG]    Suffix (out of submap): 812 813 814 846 878 879 880 881 882 883 884 885 886 887 888 889 890 891 892 
[DBG]  Original agent path length 39 je: 27
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 2: 680, 712, 713, 745, 746, 778, 810, 811, 812, 813, 814, 846, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 889, 890, 891, 892, 
[DBG]  Path for agent 39 updated, resulting length: 27
[DBG]  Update the agent path 56 | Original local length: 1 | New local length: 1
[DBG]  agent 56 t=0 => decoded (sx,sy)=(0,3) => global_id=746
[DBG]  Complete path of agent 56:
[DBG]    Original: 805 806 774 775 776 744 745 746 714 715 683 684 685 686 654 655 656 657 658 659 627 628 629 597 565 533 501 469 470 438 439 407 408 409 377 378 379 380 348 349 350 318 286 287 255 
[DBG]    New:     805 806 774 775 776 744 745 746 714 715 683 684 685 686 654 655 656 657 658 659 627 628 629 597 565 533 501 469 470 438 439 407 408 409 377 378 379 380 348 349 350 318 286 287 255 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 805 806 774 775 776 744 745 
[DBG]    Local path (in submap): 746 
[DBG]    Suffix (out of submap): 714 715 683 684 685 686 654 655 656 657 658 659 627 628 629 597 565 533 501 469 470 438 439 407 408 409 377 378 379 380 348 349 350 318 286 287 255 
[DBG]  Original agent path length 56 je: 45
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 3: 805, 806, 774, 775, 776, 744, 745, 746, 714, 715, 683, 684, 685, 686, 654, 655, 656, 657, 658, 659, 627, 628, 629, 597, 565, 533, 501, 469, 470, 438, 439, 407, 408, 409, 377, 378, 379, 380, 348, 349, 350, 318, 286, 287, 255, 
[DBG]  Path for agent 56 updated, resulting length: 45
[DBG]  Update the agent path 68 | Original local length: 1 | New local length: 1
[DBG]  agent 68 t=0 => decoded (sx,sy)=(3,4) => global_id=843
[DBG]  Complete path of agent 68:
[DBG]    Original: 968 936 937 905 906 874 875 843 844 844 845 877 909 910 
[DBG]    New:     968 936 937 905 906 874 875 843 844 844 845 877 909 910 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 968 936 937 905 906 874 875 
[DBG]    Local path (in submap): 843 
[DBG]    Suffix (out of submap): 844 844 845 877 909 910 
[DBG]  Original agent path length 68 je: 14
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 4: 968, 936, 937, 905, 906, 874, 875, 843, 844, 844, 845, 877, 909, 910, 
[DBG]  Path for agent 68 updated, resulting length: 14
[DBG]  Update the agent path 85 | Original local length: 7 | New local length: 6
[DBG]  agent 85 t=0 => decoded (sx,sy)=(1,2) => global_id=777
[DBG]  agent 85 t=1 => decoded (sx,sy)=(2,2) => global_id=809
[DBG]  agent 85 t=2 => decoded (sx,sy)=(3,2) => global_id=841
[DBG]  agent 85 t=3 => decoded (sx,sy)=(4,2) => global_id=873
[DBG]  agent 85 t=4 => decoded (sx,sy)=(4,3) => global_id=874
[DBG]  agent 85 t=5 => decoded (sx,sy)=(4,4) => global_id=875
[DBG]  Complete path of agent 85:
[DBG]    Original: 709 710 742 774 775 776 776 777 778 779 811 811 843 875 876 877 878 846 847 848 849 817 818 819 820 821 822 790 
[DBG]    New:     709 710 742 774 775 776 776 777 809 841 873 874 875 876 877 878 846 847 848 849 817 818 819 820 821 822 790 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 709 710 742 774 775 776 776 
[DBG]    Local path (in submap): 777 809 841 873 874 875 876 
[DBG]    Suffix (out of submap): 877 878 846 847 848 849 817 818 819 820 821 822 790 
[DBG]  Original agent path length 85 je: 28
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 5: 709, 710, 742, 774, 775, 776, 776, 777, 809, 841, 873, 874, 875, 876, 877, 878, 846, 847, 848, 849, 817, 818, 819, 820, 821, 822, 790, 
[DBG]  Path for agent 85 updated, resulting length: 27
[DBG]  Update the agent path 96 | Original local length: 3 | New local length: 3
[DBG]  agent 96 t=0 => decoded (sx,sy)=(1,3) => global_id=778
[DBG]  agent 96 t=1 => decoded (sx,sy)=(1,4) => global_id=779
[DBG]  agent 96 t=2 => decoded (sx,sy)=(2,4) => global_id=811
[DBG]  Complete path of agent 96:
[DBG]    Original: 647 648 680 712 713 714 746 778 810 811 812 844 845 877 878 879 880 881 882 883 884 884 884 885 886 854 855 856 857 858 859 827 
[DBG]    New:     647 648 680 712 713 714 746 778 779 811 812 844 845 877 878 879 880 881 882 883 884 884 884 885 886 854 855 856 857 858 859 827 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 647 648 680 712 713 714 746 
[DBG]    Local path (in submap): 778 779 811 
[DBG]    Suffix (out of submap): 812 844 845 877 878 879 880 881 882 883 884 884 884 885 886 854 855 856 857 858 859 827 
[DBG]  Original agent path length 96 je: 32
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 6: 647, 648, 680, 712, 713, 714, 746, 778, 779, 811, 812, 844, 845, 877, 878, 879, 880, 881, 882, 883, 884, 884, 884, 885, 886, 854, 855, 856, 857, 858, 859, 827, 
[DBG]  Path for agent 96 updated, resulting length: 32
[DBG]  Update the agent path 97 | Original local length: 4 | New local length: 2
[DBG]  agent 97 t=0 => decoded (sx,sy)=(3,2) => global_id=841
[DBG]  agent 97 t=1 => decoded (sx,sy)=(4,2) => global_id=873
[DBG]  Complete path of agent 97:
[DBG]    Original: 650 682 714 713 745 777 809 841 841 873 873 905 904 936 968 1000 999 998 997 
[DBG]    New:     650 682 714 713 745 777 809 841 873 905 904 936 968 1000 999 998 997 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 650 682 714 713 745 777 809 
[DBG]    Local path (in submap): 841 873 905 904 
[DBG]    Suffix (out of submap): 936 968 1000 999 998 997 
[DBG]  Original agent path length 97 je: 19
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 7: 650, 682, 714, 713, 745, 777, 809, 841, 873, 905, 904, 936, 968, 1000, 999, 998, 997, 
[DBG]  Path for agent 97 updated, resulting length: 17
[DBG]  Update the agent path 105 | Original local length: 1 | New local length: 1
[DBG]  agent 105 t=0 => decoded (sx,sy)=(4,0) => global_id=871
[DBG]  Complete path of agent 105:
[DBG]    Original: 1002 1001 1000 968 936 904 903 871 870 838 806 805 773 741 709 677 645 613 613 581 582 583 551 519 487 455 423 422 421 420 388 356 324 323 291 259 260 228 196 164 132 
[DBG]    New:     1002 1001 1000 968 936 904 903 871 870 838 806 805 773 741 709 677 645 613 613 581 582 583 551 519 487 455 423 422 421 420 388 356 324 323 291 259 260 228 196 164 132 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 1002 1001 1000 968 936 904 903 
[DBG]    Local path (in submap): 871 
[DBG]    Suffix (out of submap): 870 838 806 805 773 741 709 677 645 613 613 581 582 583 551 519 487 455 423 422 421 420 388 356 324 323 291 259 260 228 196 164 132 
[DBG]  Original agent path length 105 je: 41
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 8: 1002, 1001, 1000, 968, 936, 904, 903, 871, 870, 838, 806, 805, 773, 741, 709, 677, 645, 613, 613, 581, 582, 583, 551, 519, 487, 455, 423, 422, 421, 420, 388, 356, 324, 323, 291, 259, 260, 228, 196, 164, 132, 
[DBG]  Path for agent 105 updated, resulting length: 41
[DBG]  Update the agent path 122 | Original local length: 1 | New local length: 1
[DBG]  agent 122 t=0 => decoded (sx,sy)=(0,4) => global_id=747
[DBG]  Complete path of agent 122:
[DBG]    Original: 909 877 845 844 812 811 779 747 715 683 682 650 649 617 616 615 583 551 519 487 486 454 422 421 389 357 325 293 261 260 228 196 197 
[DBG]    New:     909 877 845 844 812 811 779 747 715 683 682 650 649 617 616 615 583 551 519 487 486 454 422 421 389 357 325 293 261 260 228 196 197 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 909 877 845 844 812 811 779 
[DBG]    Local path (in submap): 747 
[DBG]    Suffix (out of submap): 715 683 682 650 649 617 616 615 583 551 519 487 486 454 422 421 389 357 325 293 261 260 228 196 197 
[DBG]  Original agent path length 122 je: 33
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 9: 909, 877, 845, 844, 812, 811, 779, 747, 715, 683, 682, 650, 649, 617, 616, 615, 583, 551, 519, 487, 486, 454, 422, 421, 389, 357, 325, 293, 261, 260, 228, 196, 197, 
[DBG]  Path for agent 122 updated, resulting length: 33
[DBG]  Update the agent path 148 | Original local length: 8 | New local length: 4
[DBG]  agent 148 t=0 => decoded (sx,sy)=(2,2) => global_id=809
[DBG]  agent 148 t=1 => decoded (sx,sy)=(2,3) => global_id=810
[DBG]  agent 148 t=2 => decoded (sx,sy)=(1,3) => global_id=778
[DBG]  agent 148 t=3 => decoded (sx,sy)=(0,3) => global_id=746
[DBG]  Complete path of agent 148:
[DBG]    Original: 776 744 744 744 744 745 777 809 809 809 809 809 777 778 746 714 715 683 684 685 686 654 655 655 656 656 656 656 657 658 659 660 
[DBG]    New:     776 744 744 744 744 745 777 809 810 778 746 714 715 683 684 685 686 654 655 655 656 656 656 656 657 658 659 660 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 776 744 744 744 744 745 777 
[DBG]    Local path (in submap): 809 810 778 746 714 715 683 684 
[DBG]    Suffix (out of submap): 685 686 654 655 655 656 656 656 656 657 658 659 660 
[DBG]  Original agent path length 148 je: 32
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 10: 776, 744, 744, 744, 744, 745, 777, 809, 810, 778, 746, 714, 715, 683, 684, 685, 686, 654, 655, 655, 656, 656, 656, 656, 657, 658, 659, 660, 
[DBG]  Path for agent 148 updated, resulting length: 28
[DBG]  Paths successfully updated.
[DBG]  (LNS.cpp) New path for agent 32: 
[DBG]  868, 836, 804, 805, 806, 807, 807, 775, 776, 744, 
[DBG]  (LNS.cpp) New path for agent 37: 
[DBG]  839, 839, 839, 839, 839, 839, 839, 807, 808, 809, 810, 811, 779, 780, 781, 782, 
[DBG]  (LNS.cpp) New path for agent 39: 
[DBG]  680, 712, 713, 745, 746, 778, 810, 811, 812, 813, 814, 846, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 889, 890, 891, 892, 
[DBG]  (LNS.cpp) New path for agent 56: 
[DBG]  805, 806, 774, 775, 776, 744, 745, 746, 714, 715, 683, 684, 685, 686, 654, 655, 656, 657, 658, 659, 627, 628, 629, 597, 565, 533, 501, 469, 470, 438, 439, 407, 408, 409, 377, 378, 379, 380, 348, 349, 350, 318, 286, 287, 255, 
[DBG]  (LNS.cpp) New path for agent 68: 
[DBG]  968, 936, 937, 905, 906, 874, 875, 843, 844, 844, 845, 877, 909, 910, 
[DBG]  (LNS.cpp) New path for agent 85: 
[DBG]  709, 710, 742, 774, 775, 776, 776, 777, 809, 841, 873, 874, 875, 876, 877, 878, 846, 847, 848, 849, 817, 818, 819, 820, 821, 822, 790, 
[DBG]  (LNS.cpp) New path for agent 96: 
[DBG]  647, 648, 680, 712, 713, 714, 746, 778, 779, 811, 812, 844, 845, 877, 878, 879, 880, 881, 882, 883, 884, 884, 884, 885, 886, 854, 855, 856, 857, 858, 859, 827, 
[DBG]  (LNS.cpp) New path for agent 97: 
[DBG]  650, 682, 714, 713, 745, 777, 809, 841, 873, 905, 904, 936, 968, 1000, 999, 998, 997, 
[DBG]  (LNS.cpp) New path for agent 105: 
[DBG]  1002, 1001, 1000, 968, 936, 904, 903, 871, 870, 838, 806, 805, 773, 741, 709, 677, 645, 613, 613, 581, 582, 583, 551, 519, 487, 455, 423, 422, 421, 420, 388, 356, 324, 323, 291, 259, 260, 228, 196, 164, 132, 
[DBG]  (LNS.cpp) New path for agent 122: 
[DBG]  909, 877, 845, 844, 812, 811, 779, 747, 715, 683, 682, 650, 649, 617, 616, 615, 583, 551, 519, 487, 486, 454, 422, 421, 389, 357, 325, 293, 261, 260, 228, 196, 197, 
[DBG]  (LNS.cpp) New path for agent 148: 
[DBG]  776, 744, 744, 744, 744, 745, 777, 809, 810, 778, 746, 714, 715, 683, 684, 685, 686, 654, 655, 655, 656, 656, 656, 656, 657, 658, 659, 660, 
[DBG]  component_weights = {0.319268, 0.13393, 0.140057, 0.406746}
[DBG]  opSuccess value: 1
[STAT] neighbor.sum_of_costs before recomputation: 279
[STAT] neighbor.old_sum_of_costs before recomputation: 304
[STAT] sum_of_costs before recomputation: 4368
[DBG]  Validate solution immediately after SAT success.
[WARNING] Problem after SAT: Target conflict: agent 45 (len 37) traverses target of agent 37 (len 15) at location 782 at timestep 31
[DBG]  Attempting immediate repair via init_lns because problem occurred after SAT (should be applied only for conflicts...).
[DBG]  Passing 150 agents to init_lns (skip=true).
[DBG]  path_table contents for selected agents (neighbor.agents):
[DBG]    Agent 32 => controlling path length=10
[DBG]    Agent 37 => controlling path length=16
[DBG]    Agent 39 => controlling path length=27
[DBG]    Agent 56 => controlling path length=45
[DBG]    Agent 68 => controlling path length=14
[DBG]    Agent 85 => controlling path length=27
[DBG]    Agent 96 => controlling path length=32
[DBG]    Agent 97 => controlling path length=17
[DBG]    Agent 105 => controlling path length=41
[DBG]    Agent 122 => controlling path length=33
[DBG]    Agent 148 => controlling path length=28
[DBG]  hodnota skip_initial_solution=1
[DBG]  We skip initialSolution => call buildCollisionData()
[DBG]  buildCollisionData() called â€“ skip_initial_solution case.
[DBG]  Agents.size()=150, collision_graph.size()=150
[DBG]  agent 37 => updateCollidingPairs => foundCollision
[DBG]  agent 41 => updateCollidingPairs => foundCollision
[DBG]  agent 45 => updateCollidingPairs => foundCollision
[DBG]  agent 49 => updateCollidingPairs => foundCollision
[DBG]  agent 50 => updateCollidingPairs => foundCollision
[DBG]  agent 53 => updateCollidingPairs => foundCollision
[DBG]  agent 85 => updateCollidingPairs => foundCollision
[DBG]  agent 97 => updateCollidingPairs => foundCollision
[DBG]  agent 111 => updateCollidingPairs => foundCollision
[DBG]  agent 125 => updateCollidingPairs => foundCollision
[DBG]  agent 132 => updateCollidingPairs => foundCollision
[DBG]  agent 140 => updateCollidingPairs => foundCollision
[DBG]  agent 148 => updateCollidingPairs => foundCollision
[DBG]  Conflicting agent pairs:
[DBG]  agent 37 is in conflict with agent 45
[DBG]  agent 41 is in conflict with agent 97
[DBG]  agent 49 is in conflict with agent 85
[DBG]  agent 50 is in conflict with agent 148
[DBG]  agent 53 is in conflict with agent 148
[DBG]  agent 85 is in conflict with agent 111
[DBG]  agent 85 is in conflict with agent 132
[DBG]  agent 125 is in conflict with agent 148
[DBG]  agent 140 is in conflict with agent 148
[DBG]  buildCollisionData() => sum_of_costs=4343, num_of_colliding_pairs=9
[DBG]  buildCollisionData done => sum_of_costs=4343, num_of_colliding_pairs=9
[DBG]  sum_of_cost hodnota: 4343
[DBG]  After skip/init build => iteration_stats.back(): sum_of_costs=4343, collisions=9
[DEBUG] Using default neighbor generation strategy for conflicts: 2
[DEBUG] Using default neighbor generation strategy for conflicts: 0
[DEBUG] Using default neighbor generation strategy for conflicts: 1
	InitLNS(PP): runtime = 0.0139703, iterations = 4, colliding pairs = 0, initial colliding pairs = 9, solution cost = 4333, initial solution cost = 4343, failed iterations = 0
[DBG]  init_lns->sum_of_costs after init_lns->run: 4333
[DBG]  sum_of_costs after assignment from init_lns->run: 4333
[DBG]  Recomputing sum_of_cost by dividing neighbor.sum_of_costs and neighbor.old_sum_of_costs
[STAT] sum_of_costs after recomputation: 4333
[STAT] Iteration 99
[DBG]  Using SAT operator (destroy+repair SAT).
[DBG]  ====================
[DBG]  SAT destroy operator called.
[DBG]  SAT heuristic: 2
[DBG]  key_agent_id: 11
[DBG]  key_agent_id global path length: 41
[DBG]  Submap content (global positions):
[DBG]  531 532 533 534 535 
[DBG]  563 564 565 566 567 
[DBG]  595 596 597 598 599 
[DBG]  627 628 629 630 631 
[DBG]  659 660 661 662 663 
[DBG]  Map content with agents and obstacles:
[DBG]  . X . . X 
[DBG]  . X . . X 
[DBG]  X A A X . 
[DBG]  . . . X . 
[DBG]  . A A X X 
[DBG]  content of the map structure that we pass to the SAT solver:
[DBG]  1  -1  1  1  -1  
[DBG]  1  -1  1  1  -1  
[DBG]  -1  1  1  -1  1  
[DBG]  1  1  1  -1  1  
[DBG]  1  1  1  -1  -1  
[DBG]  Identifying agents in a submap for rescheduling (when key_agent is there at the time 28):
[DBG]  Agent 11 found intervals in the sub-map:
[DBG]   [23..36]
[DBG]  Agent 11 (interval in submap: [23..36]) contains time 28, added to replan.
[DBG]  Agent 28 found intervals in the sub-map:
[DBG]   [0..40]
[DBG]  Agent 28 (interval in submap: [0..40]) contains time 28, added to replan.
[DBG]  Agent 49 found intervals in the sub-map:
[DBG]  
[DBG]  Agent 49 is not in sub-map at time 28 (intervals: 
[DBG]  )
[DBG]  Agent 53 found intervals in the sub-map:
[DBG]   [15..15] [26..27]
[DBG]  Agent 53 is not in sub-map at time 28 (intervals: 
[DBG]  [15..15] [26..27] )
[DBG]  Agent 67 found intervals in the sub-map:
[DBG]  
[DBG]  Agent 67 is not in sub-map at time 28 (intervals: 
[DBG]  )
[DBG]  Agent 140 found intervals in the sub-map:
[DBG]   [25..32]
[DBG]  Agent 140 (interval in submap: [25..32]) contains time 28, added to replan.
[DBG]  Agent 148 found intervals in the sub-map:
[DBG]   [23..23] [27..28]
[DBG]  Agent 148 (interval in submap: [27..28]) contains time 28, added to replan.
[DBG]  Agent 11 | Start (global): 597 -> (local): (2, 2) at time 28 | Goal (global): 659 -> (local): (4, 0) at time 36
[DBG]  Agent 28 | Start (global): 661 -> (local): (4, 2) at time 28 | Goal (global): 659 -> (local): (4, 0) at time 40
[DBG]  Agent 140 | Start (global): 596 -> (local): (2, 1) at time 28 | Goal (global): 534 -> (local): (0, 3) at time 32
[DBG]  Agent 148 | Start (global): 660 -> (local): (4, 1) at time 28 | Goal (global): 660 -> (local): (4, 1) at time 28
[DBG]  [REPAIR] SAT destroy operator called.
[DBG]  [REPAIR] SAT operator â€“ launching subproblem FOR OPTIMIZATION.
[DBG]  Creating local paths (sx, sy) in the submap for T_sync = 28
[DBG]    Agent 11 (global paths from T=28 to 36) has local path: (2,2) (1,2) (0,2) (1,2) (2,2) (2,1) (3,1) (3,0) (4,0) 
[DBG]    Agent 28 (global paths from T=28 to 40) has local path: (4,2) (3,2) (3,2) (3,2) (3,2) (3,2) (3,2) (3,2) (3,2) (3,2) (3,1) (3,0) (4,0) 
[DBG]    Agent 140 (global paths from T=28 to 32) has local path: (2,1) (2,2) (1,2) (1,3) (0,3) 
[DBG]    Agent 148 (global paths from T=28 to 28) has local path: (4,1) 
[DBG]  Checking input data for SAT solver:
[DBG]    - Number of agents to replan: 4
[DBG]  Agent 11 has the original local path length: 9 => Start (2,2), Goal (4,0)
[DBG]  Agent 28 has the original local path length: 13 => Start (4,2), Goal (4,0)
[DBG]  Agent 140 has the original local path length: 5 => Start (2,1), Goal (0,3)
[DBG]  Agent 148 has the original local path length: 1 => Start (4,1), Goal (4,1)
[DBG]  Start position: (2, 2), (4, 2), (2, 1), (4, 1), 
[DBG]  Goal position: (4, 0), (4, 0), (0, 3), (4, 1), 
[DBG]  SAT instance and solver created.
Currently solving
Instance name: scen
Map name: map
Encoding used: disappear_at_goal
SAT solver used: Kissat
Optimizing function: sum of costs
Number of agents: 4
Mks LB: 5
SoC LB: 14
Delta: 0
Remaining time: 300000 [ms]

Vertex conflict! Agents 1, 3, timestep 3, location 0
Swapping conflict! Agents 1, 3, timestep 3, edge (0,0)
Vertex conflict! Agents 1, 3, timestep 4, location 0
Found plan [agents = 4] [timesteps = 5]
Agent #0 : 7 11 15 14 13 
Agent #1 : 15 14 13 0 0 
Agent #2 : 6 7 4 5 2 
Agent #3 : 14 0 0 0 0 

[STAT] Solver returned: 0
[DBG]  Agent (index) 11 | New local path (submap idx):
[DBG]  7 11 15 14 13 
[DBG]  Agent (index) 28 | New local path (submap idx):
[DBG]  15 14 13 
[DBG]  Agent (index) 140 | New local path (submap idx):
[DBG]  6 7 4 5 2 
[DBG]  Agent (index) 148 | New local path (submap idx):
[DBG]  14 
[DBG]  Update the agent path 11 | Original local length: 9 | New local length: 5
[DBG]  agent 11 t=0 => decoded (sx,sy)=(2,2) => global_id=597
[DBG]  agent 11 t=1 => decoded (sx,sy)=(3,2) => global_id=629
[DBG]  agent 11 t=2 => decoded (sx,sy)=(4,2) => global_id=661
[DBG]  agent 11 t=3 => decoded (sx,sy)=(4,1) => global_id=660
[DBG]  agent 11 t=4 => decoded (sx,sy)=(4,0) => global_id=659
[DBG]  Complete path of agent 11:
[DBG]    Original: 990 989 957 956 924 892 893 893 861 829 797 765 733 732 731 730 729 728 727 726 725 724 692 660 659 627 628 596 597 565 533 565 597 596 628 627 659 658 657 625 657 
[DBG]    New:     990 989 957 956 924 892 893 893 861 829 797 765 733 732 731 730 729 728 727 726 725 724 692 660 659 627 628 596 597 629 661 660 659 658 657 625 657 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 990 989 957 956 924 892 893 893 861 829 797 765 733 732 731 730 729 728 727 726 725 724 692 660 659 627 628 596 
[DBG]    Local path (in submap): 597 629 661 660 659 658 657 625 657 
[DBG]    Suffix (out of submap): 
[DBG]  Original agent path length 11 je: 41
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 0: 990, 989, 957, 956, 924, 892, 893, 893, 861, 829, 797, 765, 733, 732, 731, 730, 729, 728, 727, 726, 725, 724, 692, 660, 659, 627, 628, 596, 597, 629, 661, 660, 659, 658, 657, 625, 657, 
[DBG]  Path for agent 11 updated, resulting length: 37
[DBG]  Update the agent path 28 | Original local length: 13 | New local length: 3
[DBG]  agent 28 t=0 => decoded (sx,sy)=(4,2) => global_id=661
[DBG]  agent 28 t=1 => decoded (sx,sy)=(4,1) => global_id=660
[DBG]  agent 28 t=2 => decoded (sx,sy)=(4,0) => global_id=659
[DBG]  Complete path of agent 28:
[DBG]    Original: 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 629 629 629 629 629 629 629 629 629 628 627 659 691 692 724 725 726 727 
[DBG]    New:     661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 660 659 691 692 724 725 726 727 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 
[DBG]    Local path (in submap): 661 660 659 691 692 724 725 726 727 
[DBG]    Suffix (out of submap): 
[DBG]  Original agent path length 28 je: 47
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 1: 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 660, 659, 691, 692, 724, 725, 726, 727, 
[DBG]  Path for agent 28 updated, resulting length: 37
[DBG]  Update the agent path 140 | Original local length: 5 | New local length: 5
[DBG]  agent 140 t=0 => decoded (sx,sy)=(2,1) => global_id=596
[DBG]  agent 140 t=1 => decoded (sx,sy)=(2,2) => global_id=597
[DBG]  agent 140 t=2 => decoded (sx,sy)=(1,2) => global_id=565
[DBG]  agent 140 t=3 => decoded (sx,sy)=(1,3) => global_id=566
[DBG]  agent 140 t=4 => decoded (sx,sy)=(0,3) => global_id=534
[DBG]  Complete path of agent 140:
[DBG]    Original: 832 800 801 802 770 771 772 773 774 775 776 777 778 746 714 715 683 684 685 653 654 655 656 657 658 659 627 628 596 597 565 566 534 502 470 438 439 407 408 409 377 378 379 380 348 349 350 351 
[DBG]    New:     832 800 801 802 770 771 772 773 774 775 776 777 778 746 714 715 683 684 685 653 654 655 656 657 658 659 627 628 596 597 565 566 534 502 470 438 439 407 408 409 377 378 379 380 348 349 350 351 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 832 800 801 802 770 771 772 773 774 775 776 777 778 746 714 715 683 684 685 653 654 655 656 657 658 659 627 628 
[DBG]    Local path (in submap): 596 597 565 566 534 
[DBG]    Suffix (out of submap): 502 470 438 439 407 408 409 377 378 379 380 348 349 350 351 
[DBG]  Original agent path length 140 je: 48
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 2: 832, 800, 801, 802, 770, 771, 772, 773, 774, 775, 776, 777, 778, 746, 714, 715, 683, 684, 685, 653, 654, 655, 656, 657, 658, 659, 627, 628, 596, 597, 565, 566, 534, 502, 470, 438, 439, 407, 408, 409, 377, 378, 379, 380, 348, 349, 350, 351, 
[DBG]  Path for agent 140 updated, resulting length: 48
[DBG]  Update the agent path 148 | Original local length: 1 | New local length: 1
[DBG]  agent 148 t=0 => decoded (sx,sy)=(4,1) => global_id=660
[DBG]  Complete path of agent 148:
[DBG]    Original: 776 777 778 778 779 779 778 779 747 747 715 714 714 715 683 684 685 653 654 655 656 657 658 659 691 691 691 659 660 
[DBG]    New:     776 777 778 778 779 779 778 779 747 747 715 714 714 715 683 684 685 653 654 655 656 657 658 659 691 691 691 659 660 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 776 777 778 778 779 779 778 779 747 747 715 714 714 715 683 684 685 653 654 655 656 657 658 659 691 691 691 659 
[DBG]    Local path (in submap): 660 
[DBG]    Suffix (out of submap): 
[DBG]  Original agent path length 148 je: 29
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 3: 776, 777, 778, 778, 779, 779, 778, 779, 747, 747, 715, 714, 714, 715, 683, 684, 685, 653, 654, 655, 656, 657, 658, 659, 691, 691, 691, 659, 660, 
[DBG]  Path for agent 148 updated, resulting length: 29
[DBG]  Paths successfully updated.
[DBG]  (LNS.cpp) New path for agent 11: 
[DBG]  990, 989, 957, 956, 924, 892, 893, 893, 861, 829, 797, 765, 733, 732, 731, 730, 729, 728, 727, 726, 725, 724, 692, 660, 659, 627, 628, 596, 597, 629, 661, 660, 659, 658, 657, 625, 657, 
[DBG]  (LNS.cpp) New path for agent 28: 
[DBG]  661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 660, 659, 691, 692, 724, 725, 726, 727, 
[DBG]  (LNS.cpp) New path for agent 140: 
[DBG]  832, 800, 801, 802, 770, 771, 772, 773, 774, 775, 776, 777, 778, 746, 714, 715, 683, 684, 685, 653, 654, 655, 656, 657, 658, 659, 627, 628, 596, 597, 565, 566, 534, 502, 470, 438, 439, 407, 408, 409, 377, 378, 379, 380, 348, 349, 350, 351, 
[DBG]  (LNS.cpp) New path for agent 148: 
[DBG]  776, 777, 778, 778, 779, 779, 778, 779, 747, 747, 715, 714, 714, 715, 683, 684, 685, 653, 654, 655, 656, 657, 658, 659, 691, 691, 691, 659, 660, 
[DBG]  component_weights = {0.316526, 0.132779, 0.138854, 0.41184}
[DBG]  opSuccess value: 1
[STAT] neighbor.sum_of_costs before recomputation: 147
[STAT] neighbor.old_sum_of_costs before recomputation: 161
[STAT] sum_of_costs before recomputation: 4333
[DBG]  Validate solution immediately after SAT success.
[WARNING] Problem after SAT: Edge conflict between agents 11 and 42 at edge (658,657) at timestep 34
[DBG]  Attempting immediate repair via init_lns because problem occurred after SAT (should be applied only for conflicts...).
[DBG]  Passing 150 agents to init_lns (skip=true).
[DBG]  path_table contents for selected agents (neighbor.agents):
[DBG]    Agent 11 => controlling path length=37
[DBG]    Agent 28 => controlling path length=37
[DBG]    Agent 140 => controlling path length=48
[DBG]    Agent 148 => controlling path length=29
[DBG]  hodnota skip_initial_solution=1
[DBG]  We skip initialSolution => call buildCollisionData()
[DBG]  buildCollisionData() called â€“ skip_initial_solution case.
[DBG]  Agents.size()=150, collision_graph.size()=150
[DBG]  agent 11 => updateCollidingPairs => foundCollision
[DBG]  agent 28 => updateCollidingPairs => foundCollision
[DBG]  agent 42 => updateCollidingPairs => foundCollision
[DBG]  agent 55 => updateCollidingPairs => foundCollision
[DBG]  agent 148 => updateCollidingPairs => foundCollision
[DBG]  Conflicting agent pairs:
[DBG]  agent 11 is in conflict with agent 42
[DBG]  agent 11 is in conflict with agent 55
[DBG]  agent 11 is in conflict with agent 148
[DBG]  agent 28 is in conflict with agent 42
[DBG]  agent 28 is in conflict with agent 148
[DBG]  buildCollisionData() => sum_of_costs=4319, num_of_colliding_pairs=5
[DBG]  buildCollisionData done => sum_of_costs=4319, num_of_colliding_pairs=5
[DBG]  sum_of_cost hodnota: 4319
[DBG]  After skip/init build => iteration_stats.back(): sum_of_costs=4319, collisions=5
[DEBUG] Using default neighbor generation strategy for conflicts: 2
[DEBUG] Using default neighbor generation strategy for conflicts: 2
[DEBUG] Using default neighbor generation strategy for conflicts: 2
[DEBUG] Using default neighbor generation strategy for conflicts: 1
[DEBUG] Using default neighbor generation strategy for conflicts: 1
[DEBUG] Using default neighbor generation strategy for conflicts: 1
	InitLNS(PP): runtime = 0.0332103, iterations = 7, colliding pairs = 0, initial colliding pairs = 5, solution cost = 4312, initial solution cost = 4319, failed iterations = 0
[DBG]  init_lns->sum_of_costs after init_lns->run: 4312
[DBG]  sum_of_costs after assignment from init_lns->run: 4312
[DBG]  Recomputing sum_of_cost by dividing neighbor.sum_of_costs and neighbor.old_sum_of_costs
[STAT] sum_of_costs after recomputation: 4312
[STAT] Iteration 100
[DBG]  Using SAT operator (destroy+repair SAT).
[DBG]  ====================
[DBG]  SAT destroy operator called.
[DBG]  SAT heuristic: 2
[DBG]  key_agent_id: 6
[DBG]  key_agent_id global path length: 22
[DBG]  Submap content (global positions):
[DBG]  916 917 918 919 920 
[DBG]  948 949 950 951 952 
[DBG]  980 981 982 983 984 
[DBG]  1012 1013 1014 1015 1016 
[DBG]  -1 -1 -1 -1 -1 
[DBG]  Map content with agents and obstacles:
[DBG]  . . . . . 
[DBG]  . A . X . 
[DBG]  . . A A . 
[DBG]  . . . . . 
[DBG]  X X X X X 
[DBG]  content of the map structure that we pass to the SAT solver:
[DBG]  1  1  1  1  1  
[DBG]  1  1  1  -1  1  
[DBG]  1  1  1  1  1  
[DBG]  1  1  1  1  1  
[DBG]  1  1  1  1  1  
[DBG]  Identifying agents in a submap for rescheduling (when key_agent is there at the time 1):
[DBG]  Agent 1 found intervals in the sub-map:
[DBG]   [0..20]
[DBG]  Agent 1 (interval in submap: [0..20]) contains time 1, added to replan.
[DBG]  Agent 6 found intervals in the sub-map:
[DBG]   [0..5]
[DBG]  Agent 6 (interval in submap: [0..5]) contains time 1, added to replan.
[DBG]  Agent 49 found intervals in the sub-map:
[DBG]   [0..4]
[DBG]  Agent 49 (interval in submap: [0..4]) contains time 1, added to replan.
[DBG]  Agent 101 found intervals in the sub-map:
[DBG]  
[DBG]  Agent 101 is not in sub-map at time 1 (intervals: 
[DBG]  )
[DBG]  Agent 1 | Start (global): 949 -> (local): (1, 1) at time 1 | Goal (global): 917 -> (local): (0, 1) at time 20
[DBG]  Agent 6 | Start (global): 982 -> (local): (2, 2) at time 1 | Goal (global): 916 -> (local): (0, 0) at time 5
[DBG]  Agent 49 | Start (global): 983 -> (local): (2, 3) at time 1 | Goal (global): 918 -> (local): (0, 2) at time 4
[DBG]  [REPAIR] SAT destroy operator called.
[DBG]  [REPAIR] SAT operator â€“ launching subproblem FOR OPTIMIZATION.
[DBG]  Creating local paths (sx, sy) in the submap for T_sync = 1
[DBG]    Agent 1 (global paths from T=1 to 20) has local path: (1,1) (1,1) (1,1) (1,1) (1,1) (1,1) (1,1) (1,1) (1,1) (1,1) (1,1) (1,1) (1,1) (1,1) (1,1) (1,1) (1,1) (1,1) (0,1) (0,1) 
[DBG]    Agent 6 (global paths from T=1 to 5) has local path: (2,2) (2,1) (2,0) (1,0) (0,0) 
[DBG]    Agent 49 (global paths from T=1 to 4) has local path: (2,3) (2,2) (1,2) (0,2) 
[DBG]  Checking input data for SAT solver:
[DBG]    - Number of agents to replan: 3
[DBG]  Agent 1 has the original local path length: 20 => Start (1,1), Goal (0,1)
[DBG]  Agent 6 has the original local path length: 5 => Start (2,2), Goal (0,0)
[DBG]  Agent 49 has the original local path length: 4 => Start (2,3), Goal (0,2)
[DBG]  Start position: (1, 1), (2, 2), (2, 3), 
[DBG]  Goal position: (0, 1), (0, 0), (0, 2), 
[DBG]  SAT instance and solver created.
Currently solving
Instance name: scen
Map name: map
Encoding used: disappear_at_goal
SAT solver used: Kissat
Optimizing function: sum of costs
Number of agents: 3
Mks LB: 5
SoC LB: 11
Delta: 0
Remaining time: 300000 [ms]

Vertex conflict! Agents 0, 1, timestep 4, location 0
Vertex conflict! Agents 0, 2, timestep 4, location 0
Vertex conflict! Agents 1, 2, timestep 4, location 0
Found plan [agents = 3] [timesteps = 5]
Agent #0 : 6 1 0 0 0 
Agent #1 : 11 10 9 5 0 
Agent #2 : 12 11 7 2 0 

[STAT] Solver returned: 0
[DBG]  Agent (index) 1 | New local path (submap idx):
[DBG]  6 1 
[DBG]  Agent (index) 6 | New local path (submap idx):
[DBG]  11 10 9 5 0 
[DBG]  Agent (index) 49 | New local path (submap idx):
[DBG]  12 11 7 2 
[DBG]  Update the agent path 1 | Original local length: 20 | New local length: 2
[DBG]  agent 1 t=0 => decoded (sx,sy)=(1,1) => global_id=949
[DBG]  agent 1 t=1 => decoded (sx,sy)=(0,1) => global_id=917
[DBG]  Complete path of agent 1:
[DBG]    Original: 949 949 949 949 949 949 949 949 949 949 949 949 949 949 949 949 949 949 949 917 917 885 885 886 887 888 856 824 792 793 761 729 728 
[DBG]    New:     949 949 917 885 885 886 887 888 856 824 792 793 761 729 728 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 949 
[DBG]    Local path (in submap): 949 917 885 885 886 887 888 856 824 792 793 761 729 728 
[DBG]    Suffix (out of submap): 
[DBG]  Original agent path length 1 je: 33
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 0: 949, 949, 917, 885, 885, 886, 887, 888, 856, 824, 792, 793, 761, 729, 728, 
[DBG]  Path for agent 1 updated, resulting length: 15
[DBG]  Update the agent path 6 | Original local length: 5 | New local length: 5
[DBG]  agent 6 t=0 => decoded (sx,sy)=(2,2) => global_id=982
[DBG]  agent 6 t=1 => decoded (sx,sy)=(2,1) => global_id=981
[DBG]  agent 6 t=2 => decoded (sx,sy)=(2,0) => global_id=980
[DBG]  agent 6 t=3 => decoded (sx,sy)=(1,0) => global_id=948
[DBG]  agent 6 t=4 => decoded (sx,sy)=(0,0) => global_id=916
[DBG]  Complete path of agent 6:
[DBG]    Original: 983 982 981 980 948 916 884 883 882 881 880 912 944 976 977 976 975 974 942 941 909 908 
[DBG]    New:     983 982 981 980 948 916 884 883 882 881 880 912 944 976 977 976 975 974 942 941 909 908 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 983 
[DBG]    Local path (in submap): 982 981 980 948 916 
[DBG]    Suffix (out of submap): 884 883 882 881 880 912 944 976 977 976 975 974 942 941 909 908 
[DBG]  Original agent path length 6 je: 22
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 1: 983, 982, 981, 980, 948, 916, 884, 883, 882, 881, 880, 912, 944, 976, 977, 976, 975, 974, 942, 941, 909, 908, 
[DBG]  Path for agent 6 updated, resulting length: 22
[DBG]  Update the agent path 49 | Original local length: 4 | New local length: 4
[DBG]  agent 49 t=0 => decoded (sx,sy)=(2,3) => global_id=983
[DBG]  agent 49 t=1 => decoded (sx,sy)=(2,2) => global_id=982
[DBG]  agent 49 t=2 => decoded (sx,sy)=(1,2) => global_id=950
[DBG]  agent 49 t=3 => decoded (sx,sy)=(0,2) => global_id=918
[DBG]  Complete path of agent 49:
[DBG]    Original: 984 983 982 950 918 886 885 884 883 882 881 849 848 847 846 846 846 847 815 783 751 719 687 655 623 591 592 593 561 529 528 496 464 432 400 368 
[DBG]    New:     984 983 982 950 918 886 885 884 883 882 881 849 848 847 846 846 846 847 815 783 751 719 687 655 623 591 592 593 561 529 528 496 464 432 400 368 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 984 
[DBG]    Local path (in submap): 983 982 950 918 
[DBG]    Suffix (out of submap): 886 885 884 883 882 881 849 848 847 846 846 846 847 815 783 751 719 687 655 623 591 592 593 561 529 528 496 464 432 400 368 
[DBG]  Original agent path length 49 je: 36
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 2: 984, 983, 982, 950, 918, 886, 885, 884, 883, 882, 881, 849, 848, 847, 846, 846, 846, 847, 815, 783, 751, 719, 687, 655, 623, 591, 592, 593, 561, 529, 528, 496, 464, 432, 400, 368, 
[DBG]  Path for agent 49 updated, resulting length: 36
[DBG]  Paths successfully updated.
[DBG]  (LNS.cpp) New path for agent 1: 
[DBG]  949, 949, 917, 885, 885, 886, 887, 888, 856, 824, 792, 793, 761, 729, 728, 
[DBG]  (LNS.cpp) New path for agent 6: 
[DBG]  983, 982, 981, 980, 948, 916, 884, 883, 882, 881, 880, 912, 944, 976, 977, 976, 975, 974, 942, 941, 909, 908, 
[DBG]  (LNS.cpp) New path for agent 49: 
[DBG]  984, 983, 982, 950, 918, 886, 885, 884, 883, 882, 881, 849, 848, 847, 846, 846, 846, 847, 815, 783, 751, 719, 687, 655, 623, 591, 592, 593, 561, 529, 528, 496, 464, 432, 400, 368, 
[DBG]  component_weights = {0.313621, 0.131561, 0.137579, 0.417239}
[DBG]  opSuccess value: 1
[STAT] neighbor.sum_of_costs before recomputation: 70
[STAT] neighbor.old_sum_of_costs before recomputation: 88
[STAT] sum_of_costs before recomputation: 4312
[DBG]  Validate solution immediately after SAT success.
[WARNING] Problem after SAT: Edge conflict between agents 1 and 7 at edge (824,792) at timestep 10
[DBG]  Attempting immediate repair via init_lns because problem occurred after SAT (should be applied only for conflicts...).
[DBG]  Passing 150 agents to init_lns (skip=true).
[DBG]  path_table contents for selected agents (neighbor.agents):
[DBG]    Agent 1 => controlling path length=15
[DBG]    Agent 6 => controlling path length=22
[DBG]    Agent 49 => controlling path length=36
[DBG]  hodnota skip_initial_solution=1
[DBG]  We skip initialSolution => call buildCollisionData()
[DBG]  buildCollisionData() called â€“ skip_initial_solution case.
[DBG]  Agents.size()=150, collision_graph.size()=150
[DBG]  agent 1 => updateCollidingPairs => foundCollision
[DBG]  agent 7 => updateCollidingPairs => foundCollision
[DBG]  agent 24 => updateCollidingPairs => foundCollision
[DBG]  agent 45 => updateCollidingPairs => foundCollision
[DBG]  agent 49 => updateCollidingPairs => foundCollision
[DBG]  agent 50 => updateCollidingPairs => foundCollision
[DBG]  agent 70 => updateCollidingPairs => foundCollision
[DBG]  agent 101 => updateCollidingPairs => foundCollision
[DBG]  agent 111 => updateCollidingPairs => foundCollision
[DBG]  Conflicting agent pairs:
[DBG]  agent 1 is in conflict with agent 7
[DBG]  agent 1 is in conflict with agent 24
[DBG]  agent 1 is in conflict with agent 45
[DBG]  agent 1 is in conflict with agent 49
[DBG]  agent 1 is in conflict with agent 50
[DBG]  agent 1 is in conflict with agent 70
[DBG]  agent 1 is in conflict with agent 101
[DBG]  agent 1 is in conflict with agent 111
[DBG]  buildCollisionData() => sum_of_costs=4294, num_of_colliding_pairs=8
[DBG]  buildCollisionData done => sum_of_costs=4294, num_of_colliding_pairs=8
[DBG]  sum_of_cost hodnota: 4294
[DBG]  After skip/init build => iteration_stats.back(): sum_of_costs=4294, collisions=8
[DEBUG] Using default neighbor generation strategy for conflicts: 1
	InitLNS(PP): runtime = 0.006947, iterations = 2, colliding pairs = 0, initial colliding pairs = 8, solution cost = 4330, initial solution cost = 4294, failed iterations = 0
[DBG]  init_lns->sum_of_costs after init_lns->run: 4330
[DBG]  sum_of_costs after assignment from init_lns->run: 4330
[DBG]  Recomputing sum_of_cost by dividing neighbor.sum_of_costs and neighbor.old_sum_of_costs
[STAT] sum_of_costs after recomputation: 4330
[STAT] Iteration 101
[DBG]  Using SAT operator (destroy+repair SAT).
[DBG]  ====================
[DBG]  SAT destroy operator called.
[DBG]  SAT heuristic: 2
[DBG]  key_agent_id: 119
[DBG]  key_agent_id global path length: 50
[DBG]  Submap content (global positions):
[DBG]  278 279 280 281 282 
[DBG]  310 311 312 313 314 
[DBG]  342 343 344 345 346 
[DBG]  374 375 376 377 378 
[DBG]  406 407 408 409 410 
[DBG]  Map content with agents and obstacles:
[DBG]  . . X . X 
[DBG]  . A . . . 
[DBG]  X . A . X 
[DBG]  X . . . . 
[DBG]  . . . . X 
[DBG]  content of the map structure that we pass to the SAT solver:
[DBG]  1  1  -1  1  -1  
[DBG]  1  1  1  1  1  
[DBG]  -1  1  1  1  -1  
[DBG]  -1  1  1  1  1  
[DBG]  1  1  1  1  -1  
[DBG]  Identifying agents in a submap for rescheduling (when key_agent is there at the time 25):
[DBG]  Agent 29 found intervals in the sub-map:
[DBG]   [28..29]
[DBG]  Agent 29 is not in sub-map at time 25 (intervals: 
[DBG]  [28..29] )
[DBG]  Agent 75 found intervals in the sub-map:
[DBG]   [22..32]
[DBG]  Agent 75 (interval in submap: [22..32]) contains time 25, added to replan.
[DBG]  Agent 84 found intervals in the sub-map:
[DBG]  
[DBG]  Agent 84 is not in sub-map at time 25 (intervals: 
[DBG]  )
[DBG]  Agent 119 found intervals in the sub-map:
[DBG]   [23..28]
[DBG]  Agent 119 (interval in submap: [23..28]) contains time 25, added to replan.
[DBG]  Agent 136 found intervals in the sub-map:
[DBG]   [2..7]
[DBG]  Agent 136 is not in sub-map at time 25 (intervals: 
[DBG]  [2..7] )
[DBG]  Agent 75 | Start (global): 311 -> (local): (1, 1) at time 25 | Goal (global): 378 -> (local): (3, 4) at time 32
[DBG]  Agent 119 | Start (global): 344 -> (local): (2, 2) at time 25 | Goal (global): 281 -> (local): (0, 3) at time 28
[DBG]  [REPAIR] SAT destroy operator called.
[DBG]  [REPAIR] SAT operator â€“ launching subproblem FOR OPTIMIZATION.
[DBG]  Creating local paths (sx, sy) in the submap for T_sync = 25
[DBG]    Agent 75 (global paths from T=25 to 32) has local path: (1,1) (1,1) (1,2) (2,2) (3,2) (3,2) (3,3) (3,4) 
[DBG]    Agent 119 (global paths from T=25 to 28) has local path: (2,2) (1,2) (1,3) (0,3) 
[DBG]  Checking input data for SAT solver:
[DBG]    - Number of agents to replan: 2
[DBG]  Agent 75 has the original local path length: 8 => Start (1,1), Goal (3,4)
[DBG]  Agent 119 has the original local path length: 4 => Start (2,2), Goal (0,3)
[DBG]  Start position: (1, 1), (2, 2), 
[DBG]  Goal position: (3, 4), (0, 3), 
[DBG]  SAT instance and solver created.
Currently solving
Instance name: scen
Map name: map
Encoding used: disappear_at_goal
SAT solver used: Kissat
Optimizing function: sum of costs
Number of agents: 2
Mks LB: 6
SoC LB: 10
Delta: 0
Remaining time: 300000 [ms]

Found plan [agents = 2] [timesteps = 6]
Agent #0 : 4 8 11 12 13 14 
Agent #1 : 9 10 6 2 0 0 

[STAT] Solver returned: 0
[DBG]  Agent (index) 75 | New local path (submap idx):
[DBG]  4 8 11 12 13 14 
[DBG]  Agent (index) 119 | New local path (submap idx):
[DBG]  9 10 6 2 
[DBG]  Update the agent path 75 | Original local length: 8 | New local length: 6
[DBG]  agent 75 t=0 => decoded (sx,sy)=(1,1) => global_id=311
[DBG]  agent 75 t=1 => decoded (sx,sy)=(2,1) => global_id=343
[DBG]  agent 75 t=2 => decoded (sx,sy)=(3,1) => global_id=375
[DBG]  agent 75 t=3 => decoded (sx,sy)=(3,2) => global_id=376
[DBG]  agent 75 t=4 => decoded (sx,sy)=(3,3) => global_id=377
[DBG]  agent 75 t=5 => decoded (sx,sy)=(3,4) => global_id=378
[DBG]  Complete path of agent 75:
[DBG]    Original: 340 308 276 275 275 275 275 276 276 276 276 276 275 274 306 338 339 340 340 340 308 309 310 311 311 311 311 312 344 376 376 377 378 379 411 411 411 379 380 348 349 350 318 286 
[DBG]    New:     340 308 276 275 275 275 275 276 276 276 276 276 275 274 306 338 339 340 340 340 308 309 310 311 311 311 343 375 376 377 378 379 411 411 411 379 380 348 349 350 318 286 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 340 308 276 275 275 275 275 276 276 276 276 276 275 274 306 338 339 340 340 340 308 309 310 311 311 
[DBG]    Local path (in submap): 311 343 375 376 377 378 379 411 
[DBG]    Suffix (out of submap): 411 411 379 380 348 349 350 318 286 
[DBG]  Original agent path length 75 je: 44
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 0: 340, 308, 276, 275, 275, 275, 275, 276, 276, 276, 276, 276, 275, 274, 306, 338, 339, 340, 340, 340, 308, 309, 310, 311, 311, 311, 343, 375, 376, 377, 378, 379, 411, 411, 411, 379, 380, 348, 349, 350, 318, 286, 
[DBG]  Path for agent 75 updated, resulting length: 42
[DBG]  Update the agent path 119 | Original local length: 4 | New local length: 4
[DBG]  agent 119 t=0 => decoded (sx,sy)=(2,2) => global_id=344
[DBG]  agent 119 t=1 => decoded (sx,sy)=(2,3) => global_id=345
[DBG]  agent 119 t=2 => decoded (sx,sy)=(1,3) => global_id=313
[DBG]  agent 119 t=3 => decoded (sx,sy)=(0,3) => global_id=281
[DBG]  Complete path of agent 119:
[DBG]    Original: 861 860 861 829 797 765 733 701 702 670 638 637 636 604 603 571 539 538 506 505 473 472 440 408 376 344 312 313 281 249 248 247 215 214 213 212 244 243 242 242 242 241 240 208 207 206 205 204 172 140 
[DBG]    New:     861 860 861 829 797 765 733 701 702 670 638 637 636 604 603 571 539 538 506 505 473 472 440 408 376 344 345 313 281 249 248 247 215 214 213 212 244 243 242 242 242 241 240 208 207 206 205 204 172 140 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 861 860 861 829 797 765 733 701 702 670 638 637 636 604 603 571 539 538 506 505 473 472 440 408 376 
[DBG]    Local path (in submap): 344 345 313 281 
[DBG]    Suffix (out of submap): 249 248 247 215 214 213 212 244 243 242 242 242 241 240 208 207 206 205 204 172 140 
[DBG]  Original agent path length 119 je: 50
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 1: 861, 860, 861, 829, 797, 765, 733, 701, 702, 670, 638, 637, 636, 604, 603, 571, 539, 538, 506, 505, 473, 472, 440, 408, 376, 344, 345, 313, 281, 249, 248, 247, 215, 214, 213, 212, 244, 243, 242, 242, 242, 241, 240, 208, 207, 206, 205, 204, 172, 140, 
[DBG]  Path for agent 119 updated, resulting length: 50
[DBG]  Paths successfully updated.
[DBG]  (LNS.cpp) New path for agent 75: 
[DBG]  340, 308, 276, 275, 275, 275, 275, 276, 276, 276, 276, 276, 275, 274, 306, 338, 339, 340, 340, 340, 308, 309, 310, 311, 311, 311, 343, 375, 376, 377, 378, 379, 411, 411, 411, 379, 380, 348, 349, 350, 318, 286, 
[DBG]  (LNS.cpp) New path for agent 119: 
[DBG]  861, 860, 861, 829, 797, 765, 733, 701, 702, 670, 638, 637, 636, 604, 603, 571, 539, 538, 506, 505, 473, 472, 440, 408, 376, 344, 345, 313, 281, 249, 248, 247, 215, 214, 213, 212, 244, 243, 242, 242, 242, 241, 240, 208, 207, 206, 205, 204, 172, 140, 
[DBG]  component_weights = {0.310944, 0.130438, 0.136405, 0.422213}
[DBG]  opSuccess value: 1
[STAT] neighbor.sum_of_costs before recomputation: 90
[STAT] neighbor.old_sum_of_costs before recomputation: 92
[STAT] sum_of_costs before recomputation: 4330
[DBG]  Validate solution immediately after SAT success.
[WARNING] Problem after SAT: Edge conflict between agents 133 and 75 at edge (378,377) at timestep 30
[DBG]  Attempting immediate repair via init_lns because problem occurred after SAT (should be applied only for conflicts...).
[DBG]  Passing 150 agents to init_lns (skip=true).
[DBG]  path_table contents for selected agents (neighbor.agents):
[DBG]    Agent 75 => controlling path length=42
[DBG]    Agent 119 => controlling path length=50
[DBG]  hodnota skip_initial_solution=1
[DBG]  We skip initialSolution => call buildCollisionData()
[DBG]  buildCollisionData() called â€“ skip_initial_solution case.
[DBG]  Agents.size()=150, collision_graph.size()=150
[DBG]  agent 75 => updateCollidingPairs => foundCollision
[DBG]  agent 133 => updateCollidingPairs => foundCollision
[DBG]  Conflicting agent pairs:
[DBG]  agent 75 is in conflict with agent 133
[DBG]  buildCollisionData() => sum_of_costs=4328, num_of_colliding_pairs=1
[DBG]  buildCollisionData done => sum_of_costs=4328, num_of_colliding_pairs=1
[DBG]  sum_of_cost hodnota: 4328
[DBG]  After skip/init build => iteration_stats.back(): sum_of_costs=4328, collisions=1
[DEBUG] Using default neighbor generation strategy for conflicts: 2
[DEBUG] Using default neighbor generation strategy for conflicts: 0
[DEBUG] Using default neighbor generation strategy for conflicts: 1
[DEBUG] Using default neighbor generation strategy for conflicts: 2
[DEBUG] Using default neighbor generation strategy for conflicts: 2
[DEBUG] Using default neighbor generation strategy for conflicts: 2
[DEBUG] Using default neighbor generation strategy for conflicts: 2
[DEBUG] Using default neighbor generation strategy for conflicts: 2
[DEBUG] Using default neighbor generation strategy for conflicts: 1
[DEBUG] Using default neighbor generation strategy for conflicts: 1
[DEBUG] Using default neighbor generation strategy for conflicts: 1
	InitLNS(PP): runtime = 0.0801455, iterations = 12, colliding pairs = 0, initial colliding pairs = 1, solution cost = 4294, initial solution cost = 4328, failed iterations = 1
[DBG]  init_lns->sum_of_costs after init_lns->run: 4294
[DBG]  sum_of_costs after assignment from init_lns->run: 4294
[DBG]  Recomputing sum_of_cost by dividing neighbor.sum_of_costs and neighbor.old_sum_of_costs
[STAT] sum_of_costs after recomputation: 4294
[STAT] Iteration 102
[DBG]  Using SAT operator (destroy+repair SAT).
[DBG]  ====================
[DBG]  SAT destroy operator called.
[DBG]  SAT heuristic: 2
[DBG]  key_agent_id: 143
[DBG]  key_agent_id global path length: 21
[DBG]  Submap content (global positions):
[DBG]  876 877 878 879 880 
[DBG]  908 909 910 911 912 
[DBG]  940 941 942 943 944 
[DBG]  972 973 974 975 976 
[DBG]  1004 1005 1006 1007 1008 
[DBG]  Map content with agents and obstacles:
[DBG]  . . . . . 
[DBG]  . . A X . 
[DBG]  . . A X . 
[DBG]  X . A . . 
[DBG]  . . . X . 
[DBG]  content of the map structure that we pass to the SAT solver:
[DBG]  1  1  1  1  1  
[DBG]  1  1  1  -1  1  
[DBG]  1  1  1  -1  1  
[DBG]  -1  1  1  1  1  
[DBG]  1  1  1  -1  1  
[DBG]  Identifying agents in a submap for rescheduling (when key_agent is there at the time 5):
[DBG]  Agent 61 found intervals in the sub-map:
[DBG]  
[DBG]  Agent 61 is not in sub-map at time 5 (intervals: 
[DBG]  )
[DBG]  Agent 79 found intervals in the sub-map:
[DBG]   [0..7]
[DBG]  Agent 79 (interval in submap: [0..7]) contains time 5, added to replan.
[DBG]  Agent 130 found intervals in the sub-map:
[DBG]   [0..8]
[DBG]  Agent 130 (interval in submap: [0..8]) contains time 5, added to replan.
[DBG]  Agent 132 found intervals in the sub-map:
[DBG]   [0..3]
[DBG]  Agent 132 is not in sub-map at time 5 (intervals: 
[DBG]  [0..3] )
[DBG]  Agent 143 found intervals in the sub-map:
[DBG]   [0..7]
[DBG]  Agent 143 (interval in submap: [0..7]) contains time 5, added to replan.
[DBG]  Agent 79 | Start (global): 910 -> (local): (1, 2) at time 5 | Goal (global): 879 -> (local): (0, 3) at time 7
[DBG]  Agent 130 | Start (global): 974 -> (local): (3, 2) at time 5 | Goal (global): 878 -> (local): (0, 2) at time 8
[DBG]  Agent 143 | Start (global): 942 -> (local): (2, 2) at time 5 | Goal (global): 878 -> (local): (0, 2) at time 7
[DBG]  [REPAIR] SAT destroy operator called.
[DBG]  [REPAIR] SAT operator â€“ launching subproblem FOR OPTIMIZATION.
[DBG]  Creating local paths (sx, sy) in the submap for T_sync = 5
[DBG]    Agent 79 (global paths from T=5 to 7) has local path: (1,2) (0,2) (0,3) 
[DBG]    Agent 130 (global paths from T=5 to 8) has local path: (3,2) (2,2) (1,2) (0,2) 
[DBG]    Agent 143 (global paths from T=5 to 7) has local path: (2,2) (1,2) (0,2) 
[DBG]  Checking input data for SAT solver:
[DBG]    - Number of agents to replan: 3
[DBG]  Agent 79 has the original local path length: 3 => Start (1,2), Goal (0,3)
[DBG]  Agent 130 has the original local path length: 4 => Start (3,2), Goal (0,2)
[DBG]  Agent 143 has the original local path length: 3 => Start (2,2), Goal (0,2)
[DBG]  Start position: (1, 2), (3, 2), (2, 2), 
[DBG]  Goal position: (0, 3), (0, 2), (0, 2), 
[DBG]  SAT instance and solver created.
Currently solving
Instance name: scen
Map name: map
Encoding used: disappear_at_goal
SAT solver used: Kissat
Optimizing function: sum of costs
Number of agents: 3
Mks LB: 4
SoC LB: 10
Delta: 0
Remaining time: 300000 [ms]

Vertex conflict! Agents 0, 2, timestep 3, location 0
Found plan [agents = 3] [timesteps = 4]
Agent #0 : 7 2 3 0 
Agent #1 : 14 11 7 2 
Agent #2 : 11 7 2 0 

[STAT] Solver returned: 0
[DBG]  Agent (index) 79 | New local path (submap idx):
[DBG]  7 2 3 
[DBG]  Agent (index) 130 | New local path (submap idx):
[DBG]  14 11 7 2 
[DBG]  Agent (index) 143 | New local path (submap idx):
[DBG]  11 7 2 
[DBG]  Update the agent path 79 | Original local length: 3 | New local length: 3
[DBG]  agent 79 t=0 => decoded (sx,sy)=(1,2) => global_id=910
[DBG]  agent 79 t=1 => decoded (sx,sy)=(0,2) => global_id=878
[DBG]  agent 79 t=2 => decoded (sx,sy)=(0,3) => global_id=879
[DBG]  Complete path of agent 79:
[DBG]    Original: 1004 1005 1006 974 942 910 878 879 847 815 783 784 752 720 688 689 657 658 659 627 628 629 597 565 566 534 502 503 504 472 440 408 409 377 345 313 281 249 217 218 186 154 122 123 
[DBG]    New:     1004 1005 1006 974 942 910 878 879 847 815 783 784 752 720 688 689 657 658 659 627 628 629 597 565 566 534 502 503 504 472 440 408 409 377 345 313 281 249 217 218 186 154 122 123 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 1004 1005 1006 974 942 
[DBG]    Local path (in submap): 910 878 879 
[DBG]    Suffix (out of submap): 847 815 783 784 752 720 688 689 657 658 659 627 628 629 597 565 566 534 502 503 504 472 440 408 409 377 345 313 281 249 217 218 186 154 122 123 
[DBG]  Original agent path length 79 je: 44
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 0: 1004, 1005, 1006, 974, 942, 910, 878, 879, 847, 815, 783, 784, 752, 720, 688, 689, 657, 658, 659, 627, 628, 629, 597, 565, 566, 534, 502, 503, 504, 472, 440, 408, 409, 377, 345, 313, 281, 249, 217, 218, 186, 154, 122, 123, 
[DBG]  Path for agent 79 updated, resulting length: 44
[DBG]  Update the agent path 130 | Original local length: 4 | New local length: 4
[DBG]  agent 130 t=0 => decoded (sx,sy)=(3,2) => global_id=974
[DBG]  agent 130 t=1 => decoded (sx,sy)=(2,2) => global_id=942
[DBG]  agent 130 t=2 => decoded (sx,sy)=(1,2) => global_id=910
[DBG]  agent 130 t=3 => decoded (sx,sy)=(0,2) => global_id=878
[DBG]  Complete path of agent 130:
[DBG]    Original: 944 976 976 976 975 974 942 910 878 846 845 813 812 811 811 811 779 747 747 715 714 714 714 714 714 714 682 650 651 
[DBG]    New:     944 976 976 976 975 974 942 910 878 846 845 813 812 811 811 811 779 747 747 715 714 714 714 714 714 714 682 650 651 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 944 976 976 976 975 
[DBG]    Local path (in submap): 974 942 910 878 
[DBG]    Suffix (out of submap): 846 845 813 812 811 811 811 779 747 747 715 714 714 714 714 714 714 682 650 651 
[DBG]  Original agent path length 130 je: 29
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 1: 944, 976, 976, 976, 975, 974, 942, 910, 878, 846, 845, 813, 812, 811, 811, 811, 779, 747, 747, 715, 714, 714, 714, 714, 714, 714, 682, 650, 651, 
[DBG]  Path for agent 130 updated, resulting length: 29
[DBG]  Update the agent path 143 | Original local length: 3 | New local length: 3
[DBG]  agent 143 t=0 => decoded (sx,sy)=(2,2) => global_id=942
[DBG]  agent 143 t=1 => decoded (sx,sy)=(1,2) => global_id=910
[DBG]  agent 143 t=2 => decoded (sx,sy)=(0,2) => global_id=878
[DBG]  Complete path of agent 143:
[DBG]    Original: 975 975 975 975 974 942 910 878 846 845 813 781 780 748 747 747 747 715 715 683 684 
[DBG]    New:     975 975 975 975 974 942 910 878 846 845 813 781 780 748 747 747 747 715 715 683 684 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 975 975 975 975 974 
[DBG]    Local path (in submap): 942 910 878 
[DBG]    Suffix (out of submap): 846 845 813 781 780 748 747 747 747 715 715 683 684 
[DBG]  Original agent path length 143 je: 21
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 2: 975, 975, 975, 975, 974, 942, 910, 878, 846, 845, 813, 781, 780, 748, 747, 747, 747, 715, 715, 683, 684, 
[DBG]  Path for agent 143 updated, resulting length: 21
[DBG]  Paths successfully updated.
[DBG]  (LNS.cpp) New path for agent 79: 
[DBG]  1004, 1005, 1006, 974, 942, 910, 878, 879, 847, 815, 783, 784, 752, 720, 688, 689, 657, 658, 659, 627, 628, 629, 597, 565, 566, 534, 502, 503, 504, 472, 440, 408, 409, 377, 345, 313, 281, 249, 217, 218, 186, 154, 122, 123, 
[DBG]  (LNS.cpp) New path for agent 130: 
[DBG]  944, 976, 976, 976, 975, 974, 942, 910, 878, 846, 845, 813, 812, 811, 811, 811, 779, 747, 747, 715, 714, 714, 714, 714, 714, 714, 682, 650, 651, 
[DBG]  (LNS.cpp) New path for agent 143: 
[DBG]  975, 975, 975, 975, 974, 942, 910, 878, 846, 845, 813, 781, 780, 748, 747, 747, 747, 715, 715, 683, 684, 
[DBG]  component_weights = {0.315289, 0.129615, 0.135545, 0.41955}
[DBG]  opSuccess value: 1
[STAT] neighbor.sum_of_costs before recomputation: 91
[STAT] neighbor.old_sum_of_costs before recomputation: 91
[STAT] sum_of_costs before recomputation: 4294
[DBG]  Validate solution immediately after SAT success.
[DBG]  No problems after SAT replan.
[DBG]  Recomputing sum_of_cost by dividing neighbor.sum_of_costs and neighbor.old_sum_of_costs
[STAT] sum_of_costs after recomputation: 4294
[STAT] Iteration 103
[DBG]  Using SAT operator (destroy+repair SAT).
[DBG]  ====================
[DBG]  SAT destroy operator called.
[DBG]  SAT heuristic: 2
[DBG]  key_agent_id: 77
[DBG]  key_agent_id global path length: 29
[DBG]  Submap content (global positions):
[DBG]  443 444 445 446 447 
[DBG]  475 476 477 478 479 
[DBG]  507 508 509 510 511 
[DBG]  539 540 541 542 543 
[DBG]  571 572 573 574 575 
[DBG]  Map content with agents and obstacles:
[DBG]  . A . X . 
[DBG]  . . . . . 
[DBG]  . . A . . 
[DBG]  . A . X . 
[DBG]  . . X X X 
[DBG]  content of the map structure that we pass to the SAT solver:
[DBG]  1  1  1  -1  1  
[DBG]  1  1  1  1  1  
[DBG]  1  1  1  1  1  
[DBG]  1  1  1  -1  1  
[DBG]  1  1  -1  -1  -1  
[DBG]  Identifying agents in a submap for rescheduling (when key_agent is there at the time 8):
[DBG]  Agent 77 found intervals in the sub-map:
[DBG]   [4..11]
[DBG]  Agent 77 (interval in submap: [4..11]) contains time 8, added to replan.
[DBG]  Agent 94 found intervals in the sub-map:
[DBG]   [7..13]
[DBG]  Agent 94 (interval in submap: [7..13]) contains time 8, added to replan.
[DBG]  Agent 124 found intervals in the sub-map:
[DBG]   [6..8]
[DBG]  Agent 124 (interval in submap: [6..8]) contains time 8, added to replan.
[DBG]  Agent 77 | Start (global): 509 -> (local): (2, 2) at time 8 | Goal (global): 572 -> (local): (4, 1) at time 11
[DBG]  Agent 94 | Start (global): 540 -> (local): (3, 1) at time 8 | Goal (global): 443 -> (local): (0, 0) at time 13
[DBG]  Agent 124 | Start (global): 444 -> (local): (0, 1) at time 8 | Goal (global): 444 -> (local): (0, 1) at time 8
[DBG]  [REPAIR] SAT destroy operator called.
[DBG]  [REPAIR] SAT operator â€“ launching subproblem FOR OPTIMIZATION.
[DBG]  Creating local paths (sx, sy) in the submap for T_sync = 8
[DBG]    Agent 77 (global paths from T=8 to 11) has local path: (2,2) (3,2) (3,1) (4,1) 
[DBG]    Agent 94 (global paths from T=8 to 13) has local path: (3,1) (3,1) (2,1) (2,0) (1,0) (0,0) 
[DBG]    Agent 124 (global paths from T=8 to 8) has local path: (0,1) 
[DBG]  Checking input data for SAT solver:
[DBG]    - Number of agents to replan: 3
[DBG]  Agent 77 has the original local path length: 4 => Start (2,2), Goal (4,1)
[DBG]  Agent 94 has the original local path length: 6 => Start (3,1), Goal (0,0)
[DBG]  Agent 124 has the original local path length: 1 => Start (0,1), Goal (0,1)
[DBG]  Start position: (2, 2), (3, 1), (0, 1), 
[DBG]  Goal position: (4, 1), (0, 0), (0, 1), 
[DBG]  SAT instance and solver created.
Currently solving
Instance name: scen
Map name: map
Encoding used: disappear_at_goal
SAT solver used: Kissat
Optimizing function: sum of costs
Number of agents: 3
Mks LB: 5
SoC LB: 10
Delta: 0
Remaining time: 300000 [ms]

Vertex conflict! Agents 0, 1, timestep 4, location 0
Vertex conflict! Agents 0, 2, timestep 4, location 0
Vertex conflict! Agents 1, 2, timestep 4, location 0
Found plan [agents = 3] [timesteps = 5]
Agent #0 : 11 16 15 19 0 
Agent #1 : 15 14 9 4 0 
Agent #2 : 1 0 0 0 0 

[STAT] Solver returned: 0
[DBG]  Agent (index) 77 | New local path (submap idx):
[DBG]  11 16 15 19 
[DBG]  Agent (index) 94 | New local path (submap idx):
[DBG]  15 14 9 4 0 
[DBG]  Agent (index) 124 | New local path (submap idx):
[DBG]  1 
[DBG]  Update the agent path 77 | Original local length: 4 | New local length: 4
[DBG]  agent 77 t=0 => decoded (sx,sy)=(2,2) => global_id=509
[DBG]  agent 77 t=1 => decoded (sx,sy)=(3,2) => global_id=541
[DBG]  agent 77 t=2 => decoded (sx,sy)=(3,1) => global_id=540
[DBG]  agent 77 t=3 => decoded (sx,sy)=(4,1) => global_id=572
[DBG]  Complete path of agent 77:
[DBG]    Original: 319 351 383 415 447 479 478 510 509 541 540 572 604 603 635 635 635 635 635 635 636 637 638 670 702 701 733 732 731 
[DBG]    New:     319 351 383 415 447 479 478 510 509 541 540 572 604 603 635 635 635 635 635 635 636 637 638 670 702 701 733 732 731 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 319 351 383 415 447 479 478 510 
[DBG]    Local path (in submap): 509 541 540 572 
[DBG]    Suffix (out of submap): 604 603 635 635 635 635 635 635 636 637 638 670 702 701 733 732 731 
[DBG]  Original agent path length 77 je: 29
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 0: 319, 351, 383, 415, 447, 479, 478, 510, 509, 541, 540, 572, 604, 603, 635, 635, 635, 635, 635, 635, 636, 637, 638, 670, 702, 701, 733, 732, 731, 
[DBG]  Path for agent 77 updated, resulting length: 29
[DBG]  Update the agent path 94 | Original local length: 6 | New local length: 5
[DBG]  agent 94 t=0 => decoded (sx,sy)=(3,1) => global_id=540
[DBG]  agent 94 t=1 => decoded (sx,sy)=(3,0) => global_id=539
[DBG]  agent 94 t=2 => decoded (sx,sy)=(2,0) => global_id=507
[DBG]  agent 94 t=3 => decoded (sx,sy)=(1,0) => global_id=475
[DBG]  agent 94 t=4 => decoded (sx,sy)=(0,0) => global_id=443
[DBG]  Complete path of agent 94:
[DBG]    Original: 701 702 670 638 637 636 604 572 540 540 508 507 475 443 411 379 378 377 345 313 281 249 248 216 
[DBG]    New:     701 702 670 638 637 636 604 572 540 539 507 475 443 411 379 378 377 345 313 281 249 248 216 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 701 702 670 638 637 636 604 572 
[DBG]    Local path (in submap): 540 539 507 475 443 411 
[DBG]    Suffix (out of submap): 379 378 377 345 313 281 249 248 216 
[DBG]  Original agent path length 94 je: 24
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 1: 701, 702, 670, 638, 637, 636, 604, 572, 540, 539, 507, 475, 443, 411, 379, 378, 377, 345, 313, 281, 249, 248, 216, 
[DBG]  Path for agent 94 updated, resulting length: 23
[DBG]  Update the agent path 124 | Original local length: 1 | New local length: 1
[DBG]  agent 124 t=0 => decoded (sx,sy)=(0,1) => global_id=444
[DBG]  Complete path of agent 124:
[DBG]    Original: 502 503 504 472 473 474 475 443 444 412 380 381 349 317 318 286 254 222 221 189 157 158 159 127 
[DBG]    New:     502 503 504 472 473 474 475 443 444 412 380 381 349 317 318 286 254 222 221 189 157 158 159 127 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 502 503 504 472 473 474 475 443 
[DBG]    Local path (in submap): 444 
[DBG]    Suffix (out of submap): 412 380 381 349 317 318 286 254 222 221 189 157 158 159 127 
[DBG]  Original agent path length 124 je: 24
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 2: 502, 503, 504, 472, 473, 474, 475, 443, 444, 412, 380, 381, 349, 317, 318, 286, 254, 222, 221, 189, 157, 158, 159, 127, 
[DBG]  Path for agent 124 updated, resulting length: 24
[DBG]  Paths successfully updated.
[DBG]  (LNS.cpp) New path for agent 77: 
[DBG]  319, 351, 383, 415, 447, 479, 478, 510, 509, 541, 540, 572, 604, 603, 635, 635, 635, 635, 635, 635, 636, 637, 638, 670, 702, 701, 733, 732, 731, 
[DBG]  (LNS.cpp) New path for agent 94: 
[DBG]  701, 702, 670, 638, 637, 636, 604, 572, 540, 539, 507, 475, 443, 411, 379, 378, 377, 345, 313, 281, 249, 248, 216, 
[DBG]  (LNS.cpp) New path for agent 124: 
[DBG]  502, 503, 504, 472, 473, 474, 475, 443, 444, 412, 380, 381, 349, 317, 318, 286, 254, 222, 221, 189, 157, 158, 159, 127, 
[DBG]  component_weights = {0.312595, 0.128508, 0.134387, 0.424511}
[DBG]  opSuccess value: 1
[STAT] neighbor.sum_of_costs before recomputation: 73
[STAT] neighbor.old_sum_of_costs before recomputation: 74
[STAT] sum_of_costs before recomputation: 4294
[DBG]  Validate solution immediately after SAT success.
[DBG]  No problems after SAT replan.
[DBG]  Recomputing sum_of_cost by dividing neighbor.sum_of_costs and neighbor.old_sum_of_costs
[STAT] sum_of_costs after recomputation: 4293
[STAT] Iteration 104
[DBG]  Using SAT operator (destroy+repair SAT).
[DBG]  ====================
[DBG]  SAT destroy operator called.
[DBG]  SAT heuristic: 2
[DBG]  key_agent_id: 55
[DBG]  key_agent_id global path length: 39
[DBG]  Submap content (global positions):
[DBG]  327 328 329 330 331 
[DBG]  359 360 361 362 363 
[DBG]  391 392 393 394 395 
[DBG]  423 424 425 426 427 
[DBG]  455 456 457 458 459 
[DBG]  Map content with agents and obstacles:
[DBG]  . . . . . 
[DBG]  . . A . . 
[DBG]  . X A X . 
[DBG]  . . . . . 
[DBG]  A . . . . 
[DBG]  content of the map structure that we pass to the SAT solver:
[DBG]  1  1  1  1  1  
[DBG]  1  1  1  1  1  
[DBG]  1  -1  1  -1  1  
[DBG]  1  1  1  1  1  
[DBG]  1  1  1  1  1  
[DBG]  Identifying agents in a submap for rescheduling (when key_agent is there at the time 18):
[DBG]  Agent 13 found intervals in the sub-map:
[DBG]   [18..25]
[DBG]  Agent 13 (interval in submap: [18..25]) contains time 18, added to replan.
[DBG]  Agent 42 found intervals in the sub-map:
[DBG]   [12..16]
[DBG]  Agent 42 is not in sub-map at time 18 (intervals: 
[DBG]  [12..16] )
[DBG]  Agent 51 found intervals in the sub-map:
[DBG]   [12..16]
[DBG]  Agent 51 is not in sub-map at time 18 (intervals: 
[DBG]  [12..16] )
[DBG]  Agent 55 found intervals in the sub-map:
[DBG]   [14..21]
[DBG]  Agent 55 (interval in submap: [14..21]) contains time 18, added to replan.
[DBG]  Agent 67 found intervals in the sub-map:
[DBG]  
[DBG]  Agent 67 is not in sub-map at time 18 (intervals: 
[DBG]  )
[DBG]  Agent 83 found intervals in the sub-map:
[DBG]  
[DBG]  Agent 83 is not in sub-map at time 18 (intervals: 
[DBG]  )
[DBG]  Agent 88 found intervals in the sub-map:
[DBG]  
[DBG]  Agent 88 is not in sub-map at time 18 (intervals: 
[DBG]  )
[DBG]  Agent 107 found intervals in the sub-map:
[DBG]   [15..21]
[DBG]  Agent 107 (interval in submap: [15..21]) contains time 18, added to replan.
[DBG]  Agent 116 found intervals in the sub-map:
[DBG]   [21..26]
[DBG]  Agent 116 is not in sub-map at time 18 (intervals: 
[DBG]  [21..26] )
[DBG]  Agent 125 found intervals in the sub-map:
[DBG]  
[DBG]  Agent 125 is not in sub-map at time 18 (intervals: 
[DBG]  )
[DBG]  Agent 131 found intervals in the sub-map:
[DBG]  
[DBG]  Agent 131 is not in sub-map at time 18 (intervals: 
[DBG]  )
[DBG]  Agent 13 | Start (global): 455 -> (local): (4, 0) at time 18 | Goal (global): 330 -> (local): (0, 3) at time 25
[DBG]  Agent 55 | Start (global): 393 -> (local): (2, 2) at time 18 | Goal (global): 427 -> (local): (3, 4) at time 21
[DBG]  Agent 107 | Start (global): 361 -> (local): (1, 2) at time 18 | Goal (global): 391 -> (local): (2, 0) at time 21
[DBG]  [REPAIR] SAT destroy operator called.
[DBG]  [REPAIR] SAT operator â€“ launching subproblem FOR OPTIMIZATION.
[DBG]  Creating local paths (sx, sy) in the submap for T_sync = 18
[DBG]    Agent 13 (global paths from T=18 to 25) has local path: (4,0) (3,0) (3,1) (3,2) (2,2) (1,2) (1,3) (0,3) 
[DBG]    Agent 55 (global paths from T=18 to 21) has local path: (2,2) (3,2) (3,3) (3,4) 
[DBG]    Agent 107 (global paths from T=18 to 21) has local path: (1,2) (1,1) (1,0) (2,0) 
[DBG]  Checking input data for SAT solver:
[DBG]    - Number of agents to replan: 3
[DBG]  Agent 13 has the original local path length: 8 => Start (4,0), Goal (0,3)
[DBG]  Agent 55 has the original local path length: 4 => Start (2,2), Goal (3,4)
[DBG]  Agent 107 has the original local path length: 4 => Start (1,2), Goal (2,0)
[DBG]  Start position: (4, 0), (2, 2), (1, 2), 
[DBG]  Goal position: (0, 3), (3, 4), (2, 0), 
[DBG]  SAT instance and solver created.
Currently solving
Instance name: scen
Map name: map
Encoding used: disappear_at_goal
SAT solver used: Kissat
Optimizing function: sum of costs
Number of agents: 3
Mks LB: 8
SoC LB: 16
Delta: 0
Remaining time: 300000 [ms]

Vertex conflict! Agents 1, 2, timestep 4, location 0
Swapping conflict! Agents 1, 2, timestep 4, edge (0,0)
Vertex conflict! Agents 1, 2, timestep 5, location 0
Swapping conflict! Agents 1, 2, timestep 5, edge (0,0)
Vertex conflict! Agents 1, 2, timestep 6, location 0
Swapping conflict! Agents 1, 2, timestep 6, edge (0,0)
Vertex conflict! Agents 1, 2, timestep 7, location 0
Found plan [agents = 3] [timesteps = 8]
Agent #0 : 18 19 20 15 11 7 8 3 
Agent #1 : 11 15 16 17 0 0 0 0 
Agent #2 : 7 6 5 10 0 0 0 0 

[STAT] Solver returned: 0
[DBG]  Agent (index) 13 | New local path (submap idx):
[DBG]  18 19 20 15 11 7 8 3 
[DBG]  Agent (index) 55 | New local path (submap idx):
[DBG]  11 15 16 17 
[DBG]  Agent (index) 107 | New local path (submap idx):
[DBG]  7 6 5 10 
[DBG]  Update the agent path 13 | Original local length: 8 | New local length: 8
[DBG]  agent 13 t=0 => decoded (sx,sy)=(4,0) => global_id=455
[DBG]  agent 13 t=1 => decoded (sx,sy)=(4,1) => global_id=456
[DBG]  agent 13 t=2 => decoded (sx,sy)=(4,2) => global_id=457
[DBG]  agent 13 t=3 => decoded (sx,sy)=(3,2) => global_id=425
[DBG]  agent 13 t=4 => decoded (sx,sy)=(2,2) => global_id=393
[DBG]  agent 13 t=5 => decoded (sx,sy)=(1,2) => global_id=361
[DBG]  agent 13 t=6 => decoded (sx,sy)=(1,3) => global_id=362
[DBG]  agent 13 t=7 => decoded (sx,sy)=(0,3) => global_id=330
[DBG]  Complete path of agent 13:
[DBG]    Original: 867 868 836 804 772 773 774 742 710 678 678 646 647 615 583 551 519 487 455 423 424 425 393 361 362 330 298 299 300 268 269 270 271 239 207 208 176 177 178 179 147 148 116 117 85 86 54 55 56 24 
[DBG]    New:     867 868 836 804 772 773 774 742 710 678 678 646 647 615 583 551 519 487 455 456 457 425 393 361 362 330 298 299 300 268 269 270 271 239 207 208 176 177 178 179 147 148 116 117 85 86 54 55 56 24 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 867 868 836 804 772 773 774 742 710 678 678 646 647 615 583 551 519 487 
[DBG]    Local path (in submap): 455 456 457 425 393 361 362 330 
[DBG]    Suffix (out of submap): 298 299 300 268 269 270 271 239 207 208 176 177 178 179 147 148 116 117 85 86 54 55 56 24 
[DBG]  Original agent path length 13 je: 50
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 0: 867, 868, 836, 804, 772, 773, 774, 742, 710, 678, 678, 646, 647, 615, 583, 551, 519, 487, 455, 456, 457, 425, 393, 361, 362, 330, 298, 299, 300, 268, 269, 270, 271, 239, 207, 208, 176, 177, 178, 179, 147, 148, 116, 117, 85, 86, 54, 55, 56, 24, 
[DBG]  Path for agent 13 updated, resulting length: 50
[DBG]  Update the agent path 55 | Original local length: 4 | New local length: 4
[DBG]  agent 55 t=0 => decoded (sx,sy)=(2,2) => global_id=393
[DBG]  agent 55 t=1 => decoded (sx,sy)=(3,2) => global_id=425
[DBG]  agent 55 t=2 => decoded (sx,sy)=(3,3) => global_id=426
[DBG]  agent 55 t=3 => decoded (sx,sy)=(3,4) => global_id=427
[DBG]  Complete path of agent 55:
[DBG]    Original: 34 66 98 99 100 132 164 196 228 260 261 293 294 295 327 328 329 361 393 425 426 427 428 429 430 431 432 464 496 528 529 561 593 625 657 658 659 691 692 
[DBG]    New:     34 66 98 99 100 132 164 196 228 260 261 293 294 295 327 328 329 361 393 425 426 427 428 429 430 431 432 464 496 528 529 561 593 625 657 658 659 691 692 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 34 66 98 99 100 132 164 196 228 260 261 293 294 295 327 328 329 361 
[DBG]    Local path (in submap): 393 425 426 427 
[DBG]    Suffix (out of submap): 428 429 430 431 432 464 496 528 529 561 593 625 657 658 659 691 692 
[DBG]  Original agent path length 55 je: 39
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 1: 34, 66, 98, 99, 100, 132, 164, 196, 228, 260, 261, 293, 294, 295, 327, 328, 329, 361, 393, 425, 426, 427, 428, 429, 430, 431, 432, 464, 496, 528, 529, 561, 593, 625, 657, 658, 659, 691, 692, 
[DBG]  Path for agent 55 updated, resulting length: 39
[DBG]  Update the agent path 107 | Original local length: 4 | New local length: 4
[DBG]  agent 107 t=0 => decoded (sx,sy)=(1,2) => global_id=361
[DBG]  agent 107 t=1 => decoded (sx,sy)=(1,1) => global_id=360
[DBG]  agent 107 t=2 => decoded (sx,sy)=(1,0) => global_id=359
[DBG]  agent 107 t=3 => decoded (sx,sy)=(2,0) => global_id=391
[DBG]  Complete path of agent 107:
[DBG]    Original: 16 48 80 112 144 176 208 240 239 271 270 269 268 267 299 331 363 362 361 360 359 391 390 422 454 486 485 517 549 581 613 645 677 709 741 740 772 804 836 
[DBG]    New:     16 48 80 112 144 176 208 240 239 271 270 269 268 267 299 331 363 362 361 360 359 391 390 422 454 486 485 517 549 581 613 645 677 709 741 740 772 804 836 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 16 48 80 112 144 176 208 240 239 271 270 269 268 267 299 331 363 362 
[DBG]    Local path (in submap): 361 360 359 391 
[DBG]    Suffix (out of submap): 390 422 454 486 485 517 549 581 613 645 677 709 741 740 772 804 836 
[DBG]  Original agent path length 107 je: 39
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 2: 16, 48, 80, 112, 144, 176, 208, 240, 239, 271, 270, 269, 268, 267, 299, 331, 363, 362, 361, 360, 359, 391, 390, 422, 454, 486, 485, 517, 549, 581, 613, 645, 677, 709, 741, 740, 772, 804, 836, 
[DBG]  Path for agent 107 updated, resulting length: 39
[DBG]  Paths successfully updated.
[DBG]  (LNS.cpp) New path for agent 13: 
[DBG]  867, 868, 836, 804, 772, 773, 774, 742, 710, 678, 678, 646, 647, 615, 583, 551, 519, 487, 455, 456, 457, 425, 393, 361, 362, 330, 298, 299, 300, 268, 269, 270, 271, 239, 207, 208, 176, 177, 178, 179, 147, 148, 116, 117, 85, 86, 54, 55, 56, 24, 
[DBG]  (LNS.cpp) New path for agent 55: 
[DBG]  34, 66, 98, 99, 100, 132, 164, 196, 228, 260, 261, 293, 294, 295, 327, 328, 329, 361, 393, 425, 426, 427, 428, 429, 430, 431, 432, 464, 496, 528, 529, 561, 593, 625, 657, 658, 659, 691, 692, 
[DBG]  (LNS.cpp) New path for agent 107: 
[DBG]  16, 48, 80, 112, 144, 176, 208, 240, 239, 271, 270, 269, 268, 267, 299, 331, 363, 362, 361, 360, 359, 391, 390, 422, 454, 486, 485, 517, 549, 581, 613, 645, 677, 709, 741, 740, 772, 804, 836, 
[DBG]  component_weights = {0.316952, 0.127693, 0.133535, 0.42182}
[DBG]  opSuccess value: 1
[STAT] neighbor.sum_of_costs before recomputation: 125
[STAT] neighbor.old_sum_of_costs before recomputation: 125
[STAT] sum_of_costs before recomputation: 4293
[DBG]  Validate solution immediately after SAT success.
[WARNING] Problem after SAT: Target conflict: agent 13 (len 49) traverses target of agent 73 (len 12) at location 456 at timestep 19
[DBG]  Attempting immediate repair via init_lns because problem occurred after SAT (should be applied only for conflicts...).
[DBG]  Passing 150 agents to init_lns (skip=true).
[DBG]  path_table contents for selected agents (neighbor.agents):
[DBG]    Agent 13 => controlling path length=50
[DBG]    Agent 55 => controlling path length=39
[DBG]    Agent 107 => controlling path length=39
[DBG]  hodnota skip_initial_solution=1
[DBG]  We skip initialSolution => call buildCollisionData()
[DBG]  buildCollisionData() called â€“ skip_initial_solution case.
[DBG]  Agents.size()=150, collision_graph.size()=150
[DBG]  agent 13 => updateCollidingPairs => foundCollision
[DBG]  agent 73 => updateCollidingPairs => foundCollision
[DBG]  Conflicting agent pairs:
[DBG]  agent 13 is in conflict with agent 73
[DBG]  buildCollisionData() => sum_of_costs=4293, num_of_colliding_pairs=1
[DBG]  buildCollisionData done => sum_of_costs=4293, num_of_colliding_pairs=1
[DBG]  sum_of_cost hodnota: 4293
[DBG]  After skip/init build => iteration_stats.back(): sum_of_costs=4293, collisions=1
[DEBUG] Using default neighbor generation strategy for conflicts: 1
	InitLNS(PP): runtime = 0.00404758, iterations = 2, colliding pairs = 0, initial colliding pairs = 1, solution cost = 4295, initial solution cost = 4293, failed iterations = 0
[DBG]  init_lns->sum_of_costs after init_lns->run: 4295
[DBG]  sum_of_costs after assignment from init_lns->run: 4295
[DBG]  Recomputing sum_of_cost by dividing neighbor.sum_of_costs and neighbor.old_sum_of_costs
[STAT] sum_of_costs after recomputation: 4295
[STAT] Iteration 105
[DBG]  Using SAT operator (destroy+repair SAT).
[DBG]  ====================
[DBG]  SAT destroy operator called.
[DBG]  SAT heuristic: 2
[DBG]  key_agent_id: 69
[DBG]  key_agent_id global path length: 42
[DBG]  Submap content (global positions):
[DBG]  754 755 756 757 758 
[DBG]  786 787 788 789 790 
[DBG]  818 819 820 821 822 
[DBG]  850 851 852 853 854 
[DBG]  882 883 884 885 886 
[DBG]  Map content with agents and obstacles:
[DBG]  X . . . X 
[DBG]  . . . X . 
[DBG]  . . A . . 
[DBG]  . . X X . 
[DBG]  . . . A . 
[DBG]  content of the map structure that we pass to the SAT solver:
[DBG]  -1  1  1  1  -1  
[DBG]  1  1  1  -1  1  
[DBG]  1  1  1  1  1  
[DBG]  1  1  -1  -1  1  
[DBG]  1  1  1  1  1  
[DBG]  Identifying agents in a submap for rescheduling (when key_agent is there at the time 41):
[DBG]  Agent 3 found intervals in the sub-map:
[DBG]   [29..35]
[DBG]  Agent 3 is not in sub-map at time 41 (intervals: 
[DBG]  [29..35] )
[DBG]  Agent 59 found intervals in the sub-map:
[DBG]   [38..41]
[DBG]  Agent 59 (interval in submap: [38..41]) contains time 41, added to replan.
[DBG]  Agent 69 found intervals in the sub-map:
[DBG]   [39..41]
[DBG]  Agent 69 (interval in submap: [39..41]) contains time 41, added to replan.
[DBG]  Agent 59 | Start (global): 885 -> (local): (4, 3) at time 41 | Goal (global): 885 -> (local): (4, 3) at time 41
[DBG]  Agent 69 | Start (global): 820 -> (local): (2, 2) at time 41 | Goal (global): 820 -> (local): (2, 2) at time 41
[DBG]  [REPAIR] SAT destroy operator called.
[DBG]  [REPAIR] SAT operator â€“ launching subproblem FOR OPTIMIZATION.
[DBG]  Creating local paths (sx, sy) in the submap for T_sync = 41
[DBG]    Agent 59 (global paths from T=41 to 41) has local path: (4,3) 
[DBG]    Agent 69 (global paths from T=41 to 41) has local path: (2,2) 
[DBG]  Checking input data for SAT solver:
[DBG]    - Number of agents to replan: 2
[DBG]  Agent 59 has the original local path length: 1 => Start (4,3), Goal (4,3)
[DBG]  Agent 69 has the original local path length: 1 => Start (2,2), Goal (2,2)
[DBG]  Start position: (4, 3), (2, 2), 
[DBG]  Goal position: (4, 3), (2, 2), 
[DBG]  SAT instance and solver created.
Currently solving
Instance name: scen
Map name: map
Encoding used: disappear_at_goal
SAT solver used: Kissat
Optimizing function: sum of costs
Number of agents: 2
Mks LB: 1
SoC LB: 2
Delta: 0
Remaining time: 300000 [ms]

Found plan [agents = 2] [timesteps = 1]
Agent #0 : 18 
Agent #1 : 9 

[STAT] Solver returned: 0
[DBG]  Agent (index) 59 | New local path (submap idx):
[DBG]  18 
[DBG]  Agent (index) 69 | New local path (submap idx):
[DBG]  9 
[DBG]  Update the agent path 59 | Original local length: 1 | New local length: 1
[DBG]  agent 59 t=0 => decoded (sx,sy)=(4,3) => global_id=885
[DBG]  Complete path of agent 59:
[DBG]    Original: 256 257 258 259 260 261 293 325 357 358 359 360 361 362 363 395 427 428 429 430 462 494 526 558 590 622 623 655 687 719 719 751 783 815 847 879 880 881 882 883 884 885 917 
[DBG]    New:     256 257 258 259 260 261 293 325 357 358 359 360 361 362 363 395 427 428 429 430 462 494 526 558 590 622 623 655 687 719 719 751 783 815 847 879 880 881 882 883 884 885 917 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 256 257 258 259 260 261 293 325 357 358 359 360 361 362 363 395 427 428 429 430 462 494 526 558 590 622 623 655 687 719 719 751 783 815 847 879 880 881 882 883 884 
[DBG]    Local path (in submap): 885 
[DBG]    Suffix (out of submap): 917 
[DBG]  Original agent path length 59 je: 43
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 0: 256, 257, 258, 259, 260, 261, 293, 325, 357, 358, 359, 360, 361, 362, 363, 395, 427, 428, 429, 430, 462, 494, 526, 558, 590, 622, 623, 655, 687, 719, 719, 751, 783, 815, 847, 879, 880, 881, 882, 883, 884, 885, 917, 
[DBG]  Path for agent 59 updated, resulting length: 43
[DBG]  Update the agent path 69 | Original local length: 1 | New local length: 1
[DBG]  agent 69 t=0 => decoded (sx,sy)=(2,2) => global_id=820
[DBG]  Complete path of agent 69:
[DBG]    Original: 4 5 6 7 8 9 41 42 74 106 138 139 140 172 204 236 237 269 301 333 365 366 398 430 462 494 526 558 590 591 623 655 656 657 658 659 691 692 724 756 788 820 
[DBG]    New:     4 5 6 7 8 9 41 42 74 106 138 139 140 172 204 236 237 269 301 333 365 366 398 430 462 494 526 558 590 591 623 655 656 657 658 659 691 692 724 756 788 820 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 4 5 6 7 8 9 41 42 74 106 138 139 140 172 204 236 237 269 301 333 365 366 398 430 462 494 526 558 590 591 623 655 656 657 658 659 691 692 724 756 788 
[DBG]    Local path (in submap): 820 
[DBG]    Suffix (out of submap): 
[DBG]  Original agent path length 69 je: 42
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 1: 4, 5, 6, 7, 8, 9, 41, 42, 74, 106, 138, 139, 140, 172, 204, 236, 237, 269, 301, 333, 365, 366, 398, 430, 462, 494, 526, 558, 590, 591, 623, 655, 656, 657, 658, 659, 691, 692, 724, 756, 788, 820, 
[DBG]  Path for agent 69 updated, resulting length: 42
[DBG]  Paths successfully updated.
[DBG]  (LNS.cpp) New path for agent 59: 
[DBG]  256, 257, 258, 259, 260, 261, 293, 325, 357, 358, 359, 360, 361, 362, 363, 395, 427, 428, 429, 430, 462, 494, 526, 558, 590, 622, 623, 655, 687, 719, 719, 751, 783, 815, 847, 879, 880, 881, 882, 883, 884, 885, 917, 
[DBG]  (LNS.cpp) New path for agent 69: 
[DBG]  4, 5, 6, 7, 8, 9, 41, 42, 74, 106, 138, 139, 140, 172, 204, 236, 237, 269, 301, 333, 365, 366, 398, 430, 462, 494, 526, 558, 590, 591, 623, 655, 656, 657, 658, 659, 691, 692, 724, 756, 788, 820, 
[DBG]  component_weights = {0.321342, 0.126872, 0.132677, 0.419109}
[DBG]  opSuccess value: 1
[STAT] neighbor.sum_of_costs before recomputation: 83
[STAT] neighbor.old_sum_of_costs before recomputation: 83
[STAT] sum_of_costs before recomputation: 4295
[DBG]  Validate solution immediately after SAT success.
[DBG]  No problems after SAT replan.
[DBG]  Recomputing sum_of_cost by dividing neighbor.sum_of_costs and neighbor.old_sum_of_costs
[STAT] sum_of_costs after recomputation: 4295
[STAT] Iteration 106
[DBG]  Using SAT operator (destroy+repair SAT).
[DBG]  ====================
[DBG]  SAT destroy operator called.
[DBG]  SAT heuristic: 2
[DBG]  key_agent_id: 72
[DBG]  key_agent_id global path length: 17
[DBG]  Submap content (global positions):
[DBG]  7 8 9 10 11 
[DBG]  39 40 41 42 43 
[DBG]  71 72 73 74 75 
[DBG]  103 104 105 106 107 
[DBG]  135 136 137 138 139 
[DBG]  Map content with agents and obstacles:
[DBG]  . . . X . 
[DBG]  X . . . . 
[DBG]  . . A . . 
[DBG]  X . . . . 
[DBG]  A . . A A 
[DBG]  content of the map structure that we pass to the SAT solver:
[DBG]  1  1  1  -1  1  
[DBG]  -1  1  1  1  1  
[DBG]  1  1  1  1  1  
[DBG]  -1  1  1  1  1  
[DBG]  1  1  1  1  1  
[DBG]  Identifying agents in a submap for rescheduling (when key_agent is there at the time 10):
[DBG]  Agent 9 found intervals in the sub-map:
[DBG]   [9..10]
[DBG]  Agent 9 (interval in submap: [9..10]) contains time 10, added to replan.
[DBG]  Agent 55 found intervals in the sub-map:
[DBG]  
[DBG]  Agent 55 is not in sub-map at time 10 (intervals: 
[DBG]  )
[DBG]  Agent 69 found intervals in the sub-map:
[DBG]   [3..11]
[DBG]  Agent 69 (interval in submap: [3..11]) contains time 10, added to replan.
[DBG]  Agent 72 found intervals in the sub-map:
[DBG]   [8..12]
[DBG]  Agent 72 (interval in submap: [8..12]) contains time 10, added to replan.
[DBG]  Agent 82 found intervals in the sub-map:
[DBG]   [0..10]
[DBG]  Agent 82 (interval in submap: [0..10]) contains time 10, added to replan.
[DBG]  Agent 9 | Start (global): 135 -> (local): (4, 0) at time 10 | Goal (global): 135 -> (local): (4, 0) at time 10
[DBG]  Agent 69 | Start (global): 138 -> (local): (4, 3) at time 10 | Goal (global): 139 -> (local): (4, 4) at time 11
[DBG]  Agent 72 | Start (global): 73 -> (local): (2, 2) at time 10 | Goal (global): 71 -> (local): (2, 0) at time 12
[DBG]  Agent 82 | Start (global): 139 -> (local): (4, 4) at time 10 | Goal (global): 139 -> (local): (4, 4) at time 10
[DBG]  [REPAIR] SAT destroy operator called.
[DBG]  [REPAIR] SAT operator â€“ launching subproblem FOR OPTIMIZATION.
[DBG]  Creating local paths (sx, sy) in the submap for T_sync = 10
[DBG]    Agent 9 (global paths from T=10 to 10) has local path: (4,0) 
[DBG]    Agent 69 (global paths from T=10 to 11) has local path: (4,3) (4,4) 
[DBG]    Agent 72 (global paths from T=10 to 12) has local path: (2,2) (2,1) (2,0) 
[DBG]    Agent 82 (global paths from T=10 to 10) has local path: (4,4) 
[DBG]  Checking input data for SAT solver:
[DBG]    - Number of agents to replan: 4
[DBG]  Agent 9 has the original local path length: 1 => Start (4,0), Goal (4,0)
[DBG]  Agent 69 has the original local path length: 2 => Start (4,3), Goal (4,4)
[DBG]  Agent 72 has the original local path length: 3 => Start (2,2), Goal (2,0)
[DBG]  Agent 82 has the original local path length: 1 => Start (4,4), Goal (4,4)
[DBG]  Start position: (4, 0), (4, 3), (2, 2), (4, 4), 
[DBG]  Goal position: (4, 0), (4, 4), (2, 0), (4, 4), 
[DBG]  SAT instance and solver created.
Currently solving
Instance name: scen
Map name: map
Encoding used: disappear_at_goal
SAT solver used: Kissat
Optimizing function: sum of costs
Number of agents: 4
Mks LB: 3
SoC LB: 7
Delta: 0
Remaining time: 300000 [ms]

Vertex conflict! Agents 0, 1, timestep 2, location 0
Vertex conflict! Agents 0, 3, timestep 1, location 0
Swapping conflict! Agents 0, 3, timestep 1, edge (0,0)
Vertex conflict! Agents 0, 3, timestep 2, location 0
Vertex conflict! Agents 1, 3, timestep 2, location 0
Found plan [agents = 4] [timesteps = 3]
Agent #0 : 17 0 0 
Agent #1 : 20 21 0 
Agent #2 : 10 9 8 
Agent #3 : 21 0 0 

[STAT] Solver returned: 0
[DBG]  Agent (index) 9 | New local path (submap idx):
[DBG]  17 
[DBG]  Agent (index) 69 | New local path (submap idx):
[DBG]  20 21 
[DBG]  Agent (index) 72 | New local path (submap idx):
[DBG]  10 9 8 
[DBG]  Agent (index) 82 | New local path (submap idx):
[DBG]  21 
[DBG]  Update the agent path 9 | Original local length: 1 | New local length: 1
[DBG]  agent 9 t=0 => decoded (sx,sy)=(4,0) => global_id=135
[DBG]  Complete path of agent 9:
[DBG]    Original: 235 234 233 232 232 231 199 200 168 136 135 134 133 132 100 99 98 97 96 
[DBG]    New:     235 234 233 232 232 231 199 200 168 136 135 134 133 132 100 99 98 97 96 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 235 234 233 232 232 231 199 200 168 136 
[DBG]    Local path (in submap): 135 
[DBG]    Suffix (out of submap): 134 133 132 100 99 98 97 96 
[DBG]  Original agent path length 9 je: 19
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 0: 235, 234, 233, 232, 232, 231, 199, 200, 168, 136, 135, 134, 133, 132, 100, 99, 98, 97, 96, 
[DBG]  Path for agent 9 updated, resulting length: 19
[DBG]  Update the agent path 69 | Original local length: 2 | New local length: 2
[DBG]  agent 69 t=0 => decoded (sx,sy)=(4,3) => global_id=138
[DBG]  agent 69 t=1 => decoded (sx,sy)=(4,4) => global_id=139
[DBG]  Complete path of agent 69:
[DBG]    Original: 4 5 6 7 8 9 41 42 74 106 138 139 140 172 204 236 237 269 301 333 365 366 398 430 462 494 526 558 590 591 623 655 656 657 658 659 691 692 724 756 788 820 
[DBG]    New:     4 5 6 7 8 9 41 42 74 106 138 139 140 172 204 236 237 269 301 333 365 366 398 430 462 494 526 558 590 591 623 655 656 657 658 659 691 692 724 756 788 820 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 4 5 6 7 8 9 41 42 74 106 
[DBG]    Local path (in submap): 138 139 
[DBG]    Suffix (out of submap): 140 172 204 236 237 269 301 333 365 366 398 430 462 494 526 558 590 591 623 655 656 657 658 659 691 692 724 756 788 820 
[DBG]  Original agent path length 69 je: 42
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 1: 4, 5, 6, 7, 8, 9, 41, 42, 74, 106, 138, 139, 140, 172, 204, 236, 237, 269, 301, 333, 365, 366, 398, 430, 462, 494, 526, 558, 590, 591, 623, 655, 656, 657, 658, 659, 691, 692, 724, 756, 788, 820, 
[DBG]  Path for agent 69 updated, resulting length: 42
[DBG]  Update the agent path 72 | Original local length: 3 | New local length: 3
[DBG]  agent 72 t=0 => decoded (sx,sy)=(2,2) => global_id=73
[DBG]  agent 72 t=1 => decoded (sx,sy)=(2,1) => global_id=72
[DBG]  agent 72 t=2 => decoded (sx,sy)=(2,0) => global_id=71
[DBG]  Complete path of agent 72:
[DBG]    Original: 81 80 112 111 110 109 77 76 75 74 73 72 71 70 69 68 67 
[DBG]    New:     81 80 112 111 110 109 77 76 75 74 73 72 71 70 69 68 67 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 81 80 112 111 110 109 77 76 75 74 
[DBG]    Local path (in submap): 73 72 71 
[DBG]    Suffix (out of submap): 70 69 68 67 
[DBG]  Original agent path length 72 je: 17
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 2: 81, 80, 112, 111, 110, 109, 77, 76, 75, 74, 73, 72, 71, 70, 69, 68, 67, 
[DBG]  Path for agent 72 updated, resulting length: 17
[DBG]  Update the agent path 82 | Original local length: 1 | New local length: 1
[DBG]  agent 82 t=0 => decoded (sx,sy)=(4,4) => global_id=139
[DBG]  Complete path of agent 82:
[DBG]    Original: 75 74 73 105 105 105 105 105 137 138 139 140 141 173 205 237 269 301 333 365 366 367 366 398 
[DBG]    New:     75 74 73 105 105 105 105 105 137 138 139 140 141 173 205 237 269 301 333 365 366 367 366 398 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 75 74 73 105 105 105 105 105 137 138 
[DBG]    Local path (in submap): 139 
[DBG]    Suffix (out of submap): 140 141 173 205 237 269 301 333 365 366 367 366 398 
[DBG]  Original agent path length 82 je: 24
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 3: 75, 74, 73, 105, 105, 105, 105, 105, 137, 138, 139, 140, 141, 173, 205, 237, 269, 301, 333, 365, 366, 367, 366, 398, 
[DBG]  Path for agent 82 updated, resulting length: 24
[DBG]  Paths successfully updated.
[DBG]  (LNS.cpp) New path for agent 9: 
[DBG]  235, 234, 233, 232, 232, 231, 199, 200, 168, 136, 135, 134, 133, 132, 100, 99, 98, 97, 96, 
[DBG]  (LNS.cpp) New path for agent 69: 
[DBG]  4, 5, 6, 7, 8, 9, 41, 42, 74, 106, 138, 139, 140, 172, 204, 236, 237, 269, 301, 333, 365, 366, 398, 430, 462, 494, 526, 558, 590, 591, 623, 655, 656, 657, 658, 659, 691, 692, 724, 756, 788, 820, 
[DBG]  (LNS.cpp) New path for agent 72: 
[DBG]  81, 80, 112, 111, 110, 109, 77, 76, 75, 74, 73, 72, 71, 70, 69, 68, 67, 
[DBG]  (LNS.cpp) New path for agent 82: 
[DBG]  75, 74, 73, 105, 105, 105, 105, 105, 137, 138, 139, 140, 141, 173, 205, 237, 269, 301, 333, 365, 366, 367, 366, 398, 
[DBG]  component_weights = {0.325764, 0.126046, 0.131812, 0.416379}
[DBG]  opSuccess value: 1
[STAT] neighbor.sum_of_costs before recomputation: 98
[STAT] neighbor.old_sum_of_costs before recomputation: 98
[STAT] sum_of_costs before recomputation: 4295
[DBG]  Validate solution immediately after SAT success.
[DBG]  No problems after SAT replan.
[DBG]  Recomputing sum_of_cost by dividing neighbor.sum_of_costs and neighbor.old_sum_of_costs
[STAT] sum_of_costs after recomputation: 4295
[STAT] Iteration 107
[DBG]  Using SAT operator (destroy+repair SAT).
[DBG]  ====================
[DBG]  SAT destroy operator called.
[DBG]  SAT heuristic: 2
[DBG]  key_agent_id: 50
[DBG]  key_agent_id global path length: 44
[DBG]  Submap content (global positions):
[DBG]  819 820 821 822 823 
[DBG]  851 852 853 854 855 
[DBG]  883 884 885 886 887 
[DBG]  915 916 917 918 919 
[DBG]  947 948 949 950 951 
[DBG]  Map content with agents and obstacles:
[DBG]  A . . . A 
[DBG]  . X X . . 
[DBG]  . A A . . 
[DBG]  X . . A . 
[DBG]  X . A . X 
[DBG]  content of the map structure that we pass to the SAT solver:
[DBG]  1  1  1  1  1  
[DBG]  1  -1  -1  1  1  
[DBG]  1  1  1  1  1  
[DBG]  -1  1  1  1  1  
[DBG]  -1  1  1  1  -1  
[DBG]  Identifying agents in a submap for rescheduling (when key_agent is there at the time 3):
[DBG]  Agent 1 found intervals in the sub-map:
[DBG]   [0..15]
[DBG]  Agent 1 (interval in submap: [0..15]) contains time 3, added to replan.
[DBG]  Agent 6 found intervals in the sub-map:
[DBG]   [2..7]
[DBG]  Agent 6 (interval in submap: [2..7]) contains time 3, added to replan.
[DBG]  Agent 38 found intervals in the sub-map:
[DBG]   [3..7]
[DBG]  Agent 38 (interval in submap: [3..7]) contains time 3, added to replan.
[DBG]  Agent 49 found intervals in the sub-map:
[DBG]   [5..8]
[DBG]  Agent 49 is not in sub-map at time 3 (intervals: 
[DBG]  [5..8] )
[DBG]  Agent 50 found intervals in the sub-map:
[DBG]   [1..5]
[DBG]  Agent 50 (interval in submap: [1..5]) contains time 3, added to replan.
[DBG]  Agent 109 found intervals in the sub-map:
[DBG]   [1..3]
[DBG]  Agent 109 (interval in submap: [1..3]) contains time 3, added to replan.
[DBG]  Agent 118 found intervals in the sub-map:
[DBG]   [0..5]
[DBG]  Agent 118 (interval in submap: [0..5]) contains time 3, added to replan.
[DBG]  Agent 1 | Start (global): 949 -> (local): (4, 2) at time 3 | Goal (global): 950 -> (local): (4, 3) at time 15
[DBG]  Agent 6 | Start (global): 918 -> (local): (3, 3) at time 3 | Goal (global): 883 -> (local): (2, 0) at time 7
[DBG]  Agent 38 | Start (global): 823 -> (local): (0, 4) at time 3 | Goal (global): 819 -> (local): (0, 0) at time 7
[DBG]  Agent 50 | Start (global): 885 -> (local): (2, 2) at time 3 | Goal (global): 883 -> (local): (2, 0) at time 5
[DBG]  Agent 109 | Start (global): 819 -> (local): (0, 0) at time 3 | Goal (global): 819 -> (local): (0, 0) at time 3
[DBG]  Agent 118 | Start (global): 884 -> (local): (2, 1) at time 3 | Goal (global): 851 -> (local): (1, 0) at time 5
[DBG]  [REPAIR] SAT destroy operator called.
[DBG]  [REPAIR] SAT operator â€“ launching subproblem FOR OPTIMIZATION.
[DBG]  Creating local paths (sx, sy) in the submap for T_sync = 3
[DBG]    Agent 1 (global paths from T=3 to 15) has local path: (4,2) (4,2) (4,2) (4,2) (4,2) (4,2) (4,2) (4,2) (4,2) (4,2) (4,2) (4,2) (4,3) 
[DBG]    Agent 6 (global paths from T=3 to 7) has local path: (3,3) (2,3) (2,2) (2,1) (2,0) 
[DBG]    Agent 38 (global paths from T=3 to 7) has local path: (0,4) (0,3) (0,2) (0,1) (0,0) 
[DBG]    Agent 50 (global paths from T=3 to 5) has local path: (2,2) (2,1) (2,0) 
[DBG]    Agent 109 (global paths from T=3 to 3) has local path: (0,0) 
[DBG]    Agent 118 (global paths from T=3 to 5) has local path: (2,1) (2,0) (1,0) 
[DBG]  Checking input data for SAT solver:
[DBG]    - Number of agents to replan: 6
[DBG]  Agent 1 has the original local path length: 13 => Start (4,2), Goal (4,3)
[DBG]  Agent 6 has the original local path length: 5 => Start (3,3), Goal (2,0)
[DBG]  Agent 38 has the original local path length: 5 => Start (0,4), Goal (0,0)
[DBG]  Agent 50 has the original local path length: 3 => Start (2,2), Goal (2,0)
[DBG]  Agent 109 has the original local path length: 1 => Start (0,0), Goal (0,0)
[DBG]  Agent 118 has the original local path length: 3 => Start (2,1), Goal (1,0)
[DBG]  Start position: (4, 2), (3, 3), (0, 4), (2, 2), (0, 0), (2, 1), 
[DBG]  Goal position: (4, 3), (2, 0), (0, 0), (2, 0), (0, 0), (1, 0), 
[DBG]  SAT instance and solver created.
Currently solving
Instance name: scen
Map name: map
Encoding used: disappear_at_goal
SAT solver used: Kissat
Optimizing function: sum of costs
Number of agents: 6
Mks LB: 5
SoC LB: 19
Delta: 0
Remaining time: 300000 [ms]

Vertex conflict! Agents 0, 2, timestep 4, location 0
Vertex conflict! Agents 0, 3, timestep 3, location 0
Swapping conflict! Agents 0, 3, timestep 3, edge (0,0)
Vertex conflict! Agents 0, 3, timestep 4, location 0
Vertex conflict! Agents 0, 4, timestep 2, location 0
Swapping conflict! Agents 0, 4, timestep 2, edge (0,0)
Vertex conflict! Agents 0, 4, timestep 3, location 0
Swapping conflict! Agents 0, 4, timestep 3, edge (0,0)
Vertex conflict! Agents 0, 4, timestep 4, location 0
Vertex conflict! Agents 0, 5, timestep 3, location 0
Swapping conflict! Agents 0, 5, timestep 3, edge (0,0)
Vertex conflict! Agents 0, 5, timestep 4, location 0
Vertex conflict! Agents 2, 3, timestep 4, location 0
Vertex conflict! Agents 2, 4, timestep 4, location 0
Vertex conflict! Agents 2, 5, timestep 4, location 0
Vertex conflict! Agents 3, 4, timestep 3, location 0
Swapping conflict! Agents 3, 4, timestep 3, edge (0,0)
Vertex conflict! Agents 3, 4, timestep 4, location 0
Vertex conflict! Agents 3, 5, timestep 3, location 0
Swapping conflict! Agents 3, 5, timestep 3, edge (0,0)
Vertex conflict! Agents 3, 5, timestep 4, location 0
Vertex conflict! Agents 4, 5, timestep 3, location 0
Swapping conflict! Agents 4, 5, timestep 3, edge (0,0)
Vertex conflict! Agents 4, 5, timestep 4, location 0
Found plan [agents = 6] [timesteps = 5]
Agent #0 : 18 19 0 0 0 
Agent #1 : 15 14 13 9 8 
Agent #2 : 4 3 2 1 0 
Agent #3 : 10 9 8 0 0 
Agent #4 : 0 0 0 0 0 
Agent #5 : 9 8 5 0 0 

[STAT] Solver returned: 0
[DBG]  Agent (index) 1 | New local path (submap idx):
[DBG]  18 19 
[DBG]  Agent (index) 6 | New local path (submap idx):
[DBG]  15 14 13 9 8 
[DBG]  Agent (index) 38 | New local path (submap idx):
[DBG]  4 3 2 1 0 
[DBG]  Agent (index) 50 | New local path (submap idx):
[DBG]  10 9 8 
[DBG]  Agent (index) 109 | New local path (submap idx):
[DBG]  0 
[DBG]  Agent (index) 118 | New local path (submap idx):
[DBG]  9 8 5 
[DBG]  Update the agent path 1 | Original local length: 13 | New local length: 2
[DBG]  agent 1 t=0 => decoded (sx,sy)=(4,2) => global_id=949
[DBG]  agent 1 t=1 => decoded (sx,sy)=(4,3) => global_id=950
[DBG]  Complete path of agent 1:
[DBG]    Original: 949 949 949 949 949 949 949 949 949 949 949 949 949 949 949 950 982 983 1015 1016 1017 985 953 952 920 888 856 824 792 793 761 729 728 
[DBG]    New:     949 949 949 949 950 982 983 1015 1016 1017 985 953 952 920 888 856 824 792 793 761 729 728 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 949 949 949 
[DBG]    Local path (in submap): 949 950 982 983 1015 1016 1017 985 953 952 920 888 856 
[DBG]    Suffix (out of submap): 824 792 793 761 729 728 
[DBG]  Original agent path length 1 je: 33
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 0: 949, 949, 949, 949, 950, 982, 983, 1015, 1016, 1017, 985, 953, 952, 920, 888, 856, 824, 792, 793, 761, 729, 728, 
[DBG]  Path for agent 1 updated, resulting length: 22
[DBG]  Update the agent path 6 | Original local length: 5 | New local length: 5
[DBG]  agent 6 t=0 => decoded (sx,sy)=(3,3) => global_id=918
[DBG]  agent 6 t=1 => decoded (sx,sy)=(3,2) => global_id=917
[DBG]  agent 6 t=2 => decoded (sx,sy)=(3,1) => global_id=916
[DBG]  agent 6 t=3 => decoded (sx,sy)=(2,1) => global_id=884
[DBG]  agent 6 t=4 => decoded (sx,sy)=(2,0) => global_id=883
[DBG]  Complete path of agent 6:
[DBG]    Original: 983 982 950 918 886 885 884 883 882 881 880 912 944 976 977 976 975 974 942 941 909 908 
[DBG]    New:     983 982 950 918 917 916 884 883 882 881 880 912 944 976 977 976 975 974 942 941 909 908 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 983 982 950 
[DBG]    Local path (in submap): 918 917 916 884 883 
[DBG]    Suffix (out of submap): 882 881 880 912 944 976 977 976 975 974 942 941 909 908 
[DBG]  Original agent path length 6 je: 22
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 1: 983, 982, 950, 918, 917, 916, 884, 883, 882, 881, 880, 912, 944, 976, 977, 976, 975, 974, 942, 941, 909, 908, 
[DBG]  Path for agent 6 updated, resulting length: 22
[DBG]  Update the agent path 38 | Original local length: 5 | New local length: 5
[DBG]  agent 38 t=0 => decoded (sx,sy)=(0,4) => global_id=823
[DBG]  agent 38 t=1 => decoded (sx,sy)=(0,3) => global_id=822
[DBG]  agent 38 t=2 => decoded (sx,sy)=(0,2) => global_id=821
[DBG]  agent 38 t=3 => decoded (sx,sy)=(0,1) => global_id=820
[DBG]  agent 38 t=4 => decoded (sx,sy)=(0,0) => global_id=819
[DBG]  Complete path of agent 38:
[DBG]    Original: 793 792 824 823 822 821 820 819 818 817 849 848 847 846 845 
[DBG]    New:     793 792 824 823 822 821 820 819 818 817 849 848 847 846 845 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 793 792 824 
[DBG]    Local path (in submap): 823 822 821 820 819 
[DBG]    Suffix (out of submap): 818 817 849 848 847 846 845 
[DBG]  Original agent path length 38 je: 15
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 2: 793, 792, 824, 823, 822, 821, 820, 819, 818, 817, 849, 848, 847, 846, 845, 
[DBG]  Path for agent 38 updated, resulting length: 15
[DBG]  Update the agent path 50 | Original local length: 3 | New local length: 3
[DBG]  agent 50 t=0 => decoded (sx,sy)=(2,2) => global_id=885
[DBG]  agent 50 t=1 => decoded (sx,sy)=(2,1) => global_id=884
[DBG]  agent 50 t=2 => decoded (sx,sy)=(2,0) => global_id=883
[DBG]  Complete path of agent 50:
[DBG]    Original: 888 887 886 885 884 883 882 881 849 848 847 815 783 751 750 718 686 654 622 590 589 588 587 587 588 556 524 492 460 428 427 395 363 331 299 298 266 234 235 236 204 172 173 141 
[DBG]    New:     888 887 886 885 884 883 882 881 849 848 847 815 783 751 750 718 686 654 622 590 589 588 587 587 588 556 524 492 460 428 427 395 363 331 299 298 266 234 235 236 204 172 173 141 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 888 887 886 
[DBG]    Local path (in submap): 885 884 883 
[DBG]    Suffix (out of submap): 882 881 849 848 847 815 783 751 750 718 686 654 622 590 589 588 587 587 588 556 524 492 460 428 427 395 363 331 299 298 266 234 235 236 204 172 173 141 
[DBG]  Original agent path length 50 je: 44
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 3: 888, 887, 886, 885, 884, 883, 882, 881, 849, 848, 847, 815, 783, 751, 750, 718, 686, 654, 622, 590, 589, 588, 587, 587, 588, 556, 524, 492, 460, 428, 427, 395, 363, 331, 299, 298, 266, 234, 235, 236, 204, 172, 173, 141, 
[DBG]  Path for agent 50 updated, resulting length: 44
[DBG]  Update the agent path 109 | Original local length: 1 | New local length: 1
[DBG]  agent 109 t=0 => decoded (sx,sy)=(0,0) => global_id=819
[DBG]  Complete path of agent 109:
[DBG]    Original: 882 883 851 819 787 755 756 724 725 726 727 728 696 664 632 600 600 600 600 601 602 570 571 539 540 508 509 477 478 479 447 415 
[DBG]    New:     882 883 851 819 787 755 756 724 725 726 727 728 696 664 632 600 600 600 600 601 602 570 571 539 540 508 509 477 478 479 447 415 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 882 883 851 
[DBG]    Local path (in submap): 819 
[DBG]    Suffix (out of submap): 787 755 756 724 725 726 727 728 696 664 632 600 600 600 600 601 602 570 571 539 540 508 509 477 478 479 447 415 
[DBG]  Original agent path length 109 je: 32
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 4: 882, 883, 851, 819, 787, 755, 756, 724, 725, 726, 727, 728, 696, 664, 632, 600, 600, 600, 600, 601, 602, 570, 571, 539, 540, 508, 509, 477, 478, 479, 447, 415, 
[DBG]  Path for agent 109 updated, resulting length: 32
[DBG]  Update the agent path 118 | Original local length: 3 | New local length: 3
[DBG]  agent 118 t=0 => decoded (sx,sy)=(2,1) => global_id=884
[DBG]  agent 118 t=1 => decoded (sx,sy)=(2,0) => global_id=883
[DBG]  agent 118 t=2 => decoded (sx,sy)=(1,0) => global_id=851
[DBG]  Complete path of agent 118:
[DBG]    Original: 887 886 885 884 883 851 850 849 848 847 846 845 813 812 780 779 778 746 714 682 650 649 617 616 615 583 582 550 551 519 487 455 454 422 421 420 419 387 355 323 291 259 227 
[DBG]    New:     887 886 885 884 883 851 850 849 848 847 846 845 813 812 780 779 778 746 714 682 650 649 617 616 615 583 582 550 551 519 487 455 454 422 421 420 419 387 355 323 291 259 227 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 887 886 885 
[DBG]    Local path (in submap): 884 883 851 
[DBG]    Suffix (out of submap): 850 849 848 847 846 845 813 812 780 779 778 746 714 682 650 649 617 616 615 583 582 550 551 519 487 455 454 422 421 420 419 387 355 323 291 259 227 
[DBG]  Original agent path length 118 je: 43
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 5: 887, 886, 885, 884, 883, 851, 850, 849, 848, 847, 846, 845, 813, 812, 780, 779, 778, 746, 714, 682, 650, 649, 617, 616, 615, 583, 582, 550, 551, 519, 487, 455, 454, 422, 421, 420, 419, 387, 355, 323, 291, 259, 227, 
[DBG]  Path for agent 118 updated, resulting length: 43
[DBG]  Paths successfully updated.
[DBG]  (LNS.cpp) New path for agent 1: 
[DBG]  949, 949, 949, 949, 950, 982, 983, 1015, 1016, 1017, 985, 953, 952, 920, 888, 856, 824, 792, 793, 761, 729, 728, 
[DBG]  (LNS.cpp) New path for agent 6: 
[DBG]  983, 982, 950, 918, 917, 916, 884, 883, 882, 881, 880, 912, 944, 976, 977, 976, 975, 974, 942, 941, 909, 908, 
[DBG]  (LNS.cpp) New path for agent 38: 
[DBG]  793, 792, 824, 823, 822, 821, 820, 819, 818, 817, 849, 848, 847, 846, 845, 
[DBG]  (LNS.cpp) New path for agent 50: 
[DBG]  888, 887, 886, 885, 884, 883, 882, 881, 849, 848, 847, 815, 783, 751, 750, 718, 686, 654, 622, 590, 589, 588, 587, 587, 588, 556, 524, 492, 460, 428, 427, 395, 363, 331, 299, 298, 266, 234, 235, 236, 204, 172, 173, 141, 
[DBG]  (LNS.cpp) New path for agent 109: 
[DBG]  882, 883, 851, 819, 787, 755, 756, 724, 725, 726, 727, 728, 696, 664, 632, 600, 600, 600, 600, 601, 602, 570, 571, 539, 540, 508, 509, 477, 478, 479, 447, 415, 
[DBG]  (LNS.cpp) New path for agent 118: 
[DBG]  887, 886, 885, 884, 883, 851, 850, 849, 848, 847, 846, 845, 813, 812, 780, 779, 778, 746, 714, 682, 650, 649, 617, 616, 615, 583, 582, 550, 551, 519, 487, 455, 454, 422, 421, 420, 419, 387, 355, 323, 291, 259, 227, 
[DBG]  component_weights = {0.322937, 0.124952, 0.130668, 0.421443}
[DBG]  opSuccess value: 1
[STAT] neighbor.sum_of_costs before recomputation: 172
[STAT] neighbor.old_sum_of_costs before recomputation: 183
[STAT] sum_of_costs before recomputation: 4295
[DBG]  Validate solution immediately after SAT success.
[WARNING] Problem after SAT: Vertex conflict between agents 1 and 101 at location 950 at timestep 4
[DBG]  Attempting immediate repair via init_lns because problem occurred after SAT (should be applied only for conflicts...).
[DBG]  Passing 150 agents to init_lns (skip=true).
[DBG]  path_table contents for selected agents (neighbor.agents):
[DBG]    Agent 1 => controlling path length=22
[DBG]    Agent 6 => controlling path length=22
[DBG]    Agent 38 => controlling path length=15
[DBG]    Agent 50 => controlling path length=44
[DBG]    Agent 109 => controlling path length=32
[DBG]    Agent 118 => controlling path length=43
[DBG]  hodnota skip_initial_solution=1
[DBG]  We skip initialSolution => call buildCollisionData()
[DBG]  buildCollisionData() called â€“ skip_initial_solution case.
[DBG]  Agents.size()=150, collision_graph.size()=150
[DBG]  agent 1 => updateCollidingPairs => foundCollision
[DBG]  agent 101 => updateCollidingPairs => foundCollision
[DBG]  agent 111 => updateCollidingPairs => foundCollision
[DBG]  Conflicting agent pairs:
[DBG]  agent 1 is in conflict with agent 101
[DBG]  agent 1 is in conflict with agent 111
[DBG]  buildCollisionData() => sum_of_costs=4284, num_of_colliding_pairs=2
[DBG]  buildCollisionData done => sum_of_costs=4284, num_of_colliding_pairs=2
[DBG]  sum_of_cost hodnota: 4284
[DBG]  After skip/init build => iteration_stats.back(): sum_of_costs=4284, collisions=2
[DEBUG] Using default neighbor generation strategy for conflicts: 0
	InitLNS(PP): runtime = 0.0012265, iterations = 2, colliding pairs = 0, initial colliding pairs = 2, solution cost = 4295, initial solution cost = 4284, failed iterations = 0
[DBG]  init_lns->sum_of_costs after init_lns->run: 4295
[DBG]  sum_of_costs after assignment from init_lns->run: 4295
[DBG]  Recomputing sum_of_cost by dividing neighbor.sum_of_costs and neighbor.old_sum_of_costs
[STAT] sum_of_costs after recomputation: 4295
[STAT] Iteration 108
[DBG]  Using SAT operator (destroy+repair SAT).
[DBG]  ====================
[DBG]  SAT destroy operator called.
[DBG]  SAT heuristic: 2
[DBG]  key_agent_id: 90
[DBG]  key_agent_id global path length: 17
[DBG]  Submap content (global positions):
[DBG]  -1 544 545 546 547 
[DBG]  -1 576 577 578 579 
[DBG]  -1 608 609 610 611 
[DBG]  -1 640 641 642 643 
[DBG]  -1 672 673 674 675 
[DBG]  Map content with agents and obstacles:
[DBG]  X . X . . 
[DBG]  X X . . . 
[DBG]  X . A . . 
[DBG]  X . X . X 
[DBG]  X . . . . 
[DBG]  content of the map structure that we pass to the SAT solver:
[DBG]  1  1  -1  1  1  
[DBG]  1  -1  1  1  1  
[DBG]  1  1  1  1  1  
[DBG]  1  1  -1  1  -1  
[DBG]  1  1  1  1  1  
[DBG]  Identifying agents in a submap for rescheduling (when key_agent is there at the time 14):
[DBG]  Agent 32 found intervals in the sub-map:
[DBG]  
[DBG]  Agent 32 is not in sub-map at time 14 (intervals: 
[DBG]  )
[DBG]  Agent 73 found intervals in the sub-map:
[DBG]   [0..3]
[DBG]  Agent 73 is not in sub-map at time 14 (intervals: 
[DBG]  [0..3] )
[DBG]  Agent 90 found intervals in the sub-map:
[DBG]   [11..16]
[DBG]  Agent 90 (interval in submap: [11..16]) contains time 14, added to replan.
[DBG]  Agent 116 found intervals in the sub-map:
[DBG]  
[DBG]  Agent 116 is not in sub-map at time 14 (intervals: 
[DBG]  )
[DBG]  Agent 90 | Start (global): 609 -> (local): (2, 2) at time 14 | Goal (global): 642 -> (local): (3, 3) at time 16
[DBG]  [REPAIR] SAT destroy operator called.
[DBG]  [REPAIR] SAT operator â€“ launching subproblem FOR OPTIMIZATION.
[DBG]  Creating local paths (sx, sy) in the submap for T_sync = 14
[DBG]    Agent 90 (global paths from T=14 to 16) has local path: (2,2) (2,3) (3,3) 
[DBG]  Checking input data for SAT solver:
[DBG]    - Number of agents to replan: 1
[DBG]  Agent 90 has the original local path length: 3 => Start (2,2), Goal (3,3)
[DBG]  Start position: (2, 2), 
[DBG]  Goal position: (3, 3), 
[DBG]  SAT instance and solver created.
Currently solving
Instance name: scen
Map name: map
Encoding used: disappear_at_goal
SAT solver used: Kissat
Optimizing function: sum of costs
Number of agents: 1
Mks LB: 3
SoC LB: 3
Delta: 0
Remaining time: 300000 [ms]

Found plan [agents = 1] [timesteps = 3]
Agent #0 : 10 11 15 

[STAT] Solver returned: 0
[DBG]  Agent (index) 90 | New local path (submap idx):
[DBG]  10 11 15 
[DBG]  Update the agent path 90 | Original local length: 3 | New local length: 3
[DBG]  agent 90 t=0 => decoded (sx,sy)=(2,2) => global_id=609
[DBG]  agent 90 t=1 => decoded (sx,sy)=(2,3) => global_id=610
[DBG]  agent 90 t=2 => decoded (sx,sy)=(3,3) => global_id=642
[DBG]  Complete path of agent 90:
[DBG]    Original: 962 930 898 897 865 864 832 800 768 736 704 672 640 608 609 610 642 
[DBG]    New:     962 930 898 897 865 864 832 800 768 736 704 672 640 608 609 610 642 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 962 930 898 897 865 864 832 800 768 736 704 672 640 608 
[DBG]    Local path (in submap): 609 610 642 
[DBG]    Suffix (out of submap): 
[DBG]  Original agent path length 90 je: 17
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 0: 962, 930, 898, 897, 865, 864, 832, 800, 768, 736, 704, 672, 640, 608, 609, 610, 642, 
[DBG]  Path for agent 90 updated, resulting length: 17
[DBG]  Paths successfully updated.
[DBG]  (LNS.cpp) New path for agent 90: 
[DBG]  962, 930, 898, 897, 865, 864, 832, 800, 768, 736, 704, 672, 640, 608, 609, 610, 642, 
[DBG]  component_weights = {0.32737, 0.124134, 0.129813, 0.418683}
[DBG]  opSuccess value: 1
[STAT] neighbor.sum_of_costs before recomputation: 16
[STAT] neighbor.old_sum_of_costs before recomputation: 16
[STAT] sum_of_costs before recomputation: 4295
[DBG]  Validate solution immediately after SAT success.
[DBG]  No problems after SAT replan.
[DBG]  Recomputing sum_of_cost by dividing neighbor.sum_of_costs and neighbor.old_sum_of_costs
[STAT] sum_of_costs after recomputation: 4295
[STAT] Iteration 109
[DBG]  Using SAT operator (destroy+repair SAT).
[DBG]  ====================
[DBG]  SAT destroy operator called.
[DBG]  SAT heuristic: 2
[DBG]  key_agent_id: 129
[DBG]  key_agent_id global path length: 14
[DBG]  Submap content (global positions):
[DBG]  251 252 253 254 255 
[DBG]  283 284 285 286 287 
[DBG]  315 316 317 318 319 
[DBG]  347 348 349 350 351 
[DBG]  379 380 381 382 383 
[DBG]  Map content with agents and obstacles:
[DBG]  . . X . . 
[DBG]  . . . . . 
[DBG]  X X A . . 
[DBG]  . . . . . 
[DBG]  . A . X . 
[DBG]  content of the map structure that we pass to the SAT solver:
[DBG]  1  1  -1  1  1  
[DBG]  1  1  1  1  1  
[DBG]  -1  -1  1  1  1  
[DBG]  1  1  1  1  1  
[DBG]  1  1  1  -1  1  
[DBG]  Identifying agents in a submap for rescheduling (when key_agent is there at the time 10):
[DBG]  Agent 44 found intervals in the sub-map:
[DBG]  
[DBG]  Agent 44 is not in sub-map at time 10 (intervals: 
[DBG]  )
[DBG]  Agent 124 found intervals in the sub-map:
[DBG]   [10..16]
[DBG]  Agent 124 (interval in submap: [10..16]) contains time 10, added to replan.
[DBG]  Agent 129 found intervals in the sub-map:
[DBG]   [8..13]
[DBG]  Agent 129 (interval in submap: [8..13]) contains time 10, added to replan.
[DBG]  Agent 124 | Start (global): 380 -> (local): (4, 1) at time 10 | Goal (global): 254 -> (local): (0, 3) at time 16
[DBG]  Agent 129 | Start (global): 317 -> (local): (2, 2) at time 10 | Goal (global): 283 -> (local): (1, 0) at time 13
[DBG]  [REPAIR] SAT destroy operator called.
[DBG]  [REPAIR] SAT operator â€“ launching subproblem FOR OPTIMIZATION.
[DBG]  Creating local paths (sx, sy) in the submap for T_sync = 10
[DBG]    Agent 124 (global paths from T=10 to 16) has local path: (4,1) (4,2) (3,2) (2,2) (2,3) (1,3) (0,3) 
[DBG]    Agent 129 (global paths from T=10 to 13) has local path: (2,2) (1,2) (1,1) (1,0) 
[DBG]  Checking input data for SAT solver:
[DBG]    - Number of agents to replan: 2
[DBG]  Agent 124 has the original local path length: 7 => Start (4,1), Goal (0,3)
[DBG]  Agent 129 has the original local path length: 4 => Start (2,2), Goal (1,0)
[DBG]  Start position: (4, 1), (2, 2), 
[DBG]  Goal position: (0, 3), (1, 0), 
[DBG]  SAT instance and solver created.
Currently solving
Instance name: scen
Map name: map
Encoding used: disappear_at_goal
SAT solver used: Kissat
Optimizing function: sum of costs
Number of agents: 2
Mks LB: 7
SoC LB: 11
Delta: 0
Remaining time: 300000 [ms]

Found plan [agents = 2] [timesteps = 7]
Agent #0 : 18 19 14 15 10 7 2 
Agent #1 : 9 6 5 4 0 0 0 

[STAT] Solver returned: 0
[DBG]  Agent (index) 124 | New local path (submap idx):
[DBG]  18 19 14 15 10 7 2 
[DBG]  Agent (index) 129 | New local path (submap idx):
[DBG]  9 6 5 4 
[DBG]  Update the agent path 124 | Original local length: 7 | New local length: 7
[DBG]  agent 124 t=0 => decoded (sx,sy)=(4,1) => global_id=380
[DBG]  agent 124 t=1 => decoded (sx,sy)=(4,2) => global_id=381
[DBG]  agent 124 t=2 => decoded (sx,sy)=(3,2) => global_id=349
[DBG]  agent 124 t=3 => decoded (sx,sy)=(3,3) => global_id=350
[DBG]  agent 124 t=4 => decoded (sx,sy)=(2,3) => global_id=318
[DBG]  agent 124 t=5 => decoded (sx,sy)=(1,3) => global_id=286
[DBG]  agent 124 t=6 => decoded (sx,sy)=(0,3) => global_id=254
[DBG]  Complete path of agent 124:
[DBG]    Original: 502 503 504 472 473 474 475 443 444 412 380 381 349 317 318 286 254 222 221 189 157 158 159 127 
[DBG]    New:     502 503 504 472 473 474 475 443 444 412 380 381 349 350 318 286 254 222 221 189 157 158 159 127 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 502 503 504 472 473 474 475 443 444 412 
[DBG]    Local path (in submap): 380 381 349 350 318 286 254 
[DBG]    Suffix (out of submap): 222 221 189 157 158 159 127 
[DBG]  Original agent path length 124 je: 24
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 0: 502, 503, 504, 472, 473, 474, 475, 443, 444, 412, 380, 381, 349, 350, 318, 286, 254, 222, 221, 189, 157, 158, 159, 127, 
[DBG]  Path for agent 124 updated, resulting length: 24
[DBG]  Update the agent path 129 | Original local length: 4 | New local length: 4
[DBG]  agent 129 t=0 => decoded (sx,sy)=(2,2) => global_id=317
[DBG]  agent 129 t=1 => decoded (sx,sy)=(1,2) => global_id=285
[DBG]  agent 129 t=2 => decoded (sx,sy)=(1,1) => global_id=284
[DBG]  agent 129 t=3 => decoded (sx,sy)=(1,0) => global_id=283
[DBG]  Complete path of agent 129:
[DBG]    Original: 505 473 474 475 476 477 445 413 381 349 317 285 284 283 
[DBG]    New:     505 473 474 475 476 477 445 413 381 349 317 285 284 283 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 505 473 474 475 476 477 445 413 381 349 
[DBG]    Local path (in submap): 317 285 284 283 
[DBG]    Suffix (out of submap): 
[DBG]  Original agent path length 129 je: 14
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 1: 505, 473, 474, 475, 476, 477, 445, 413, 381, 349, 317, 285, 284, 283, 
[DBG]  Path for agent 129 updated, resulting length: 14
[DBG]  Paths successfully updated.
[DBG]  (LNS.cpp) New path for agent 124: 
[DBG]  502, 503, 504, 472, 473, 474, 475, 443, 444, 412, 380, 381, 349, 350, 318, 286, 254, 222, 221, 189, 157, 158, 159, 127, 
[DBG]  (LNS.cpp) New path for agent 129: 
[DBG]  505, 473, 474, 475, 476, 477, 445, 413, 381, 349, 317, 285, 284, 283, 
[DBG]  component_weights = {0.331834, 0.12331, 0.128951, 0.415905}
[DBG]  opSuccess value: 1
[STAT] neighbor.sum_of_costs before recomputation: 36
[STAT] neighbor.old_sum_of_costs before recomputation: 36
[STAT] sum_of_costs before recomputation: 4295
[DBG]  Validate solution immediately after SAT success.
[DBG]  No problems after SAT replan.
[DBG]  Recomputing sum_of_cost by dividing neighbor.sum_of_costs and neighbor.old_sum_of_costs
[STAT] sum_of_costs after recomputation: 4295
[STAT] Iteration 110
[DBG]  Using SAT operator (destroy+repair SAT).
[DBG]  ====================
[DBG]  SAT destroy operator called.
[DBG]  SAT heuristic: 2
[DBG]  key_agent_id: 98
[DBG]  key_agent_id global path length: 34
[DBG]  Submap content (global positions):
[DBG]  492 493 494 495 496 
[DBG]  524 525 526 527 528 
[DBG]  556 557 558 559 560 
[DBG]  588 589 590 591 592 
[DBG]  620 621 622 623 624 
[DBG]  Map content with agents and obstacles:
[DBG]  . X . X . 
[DBG]  . A . X . 
[DBG]  . X A X . 
[DBG]  . . . . . 
[DBG]  . X . . X 
[DBG]  content of the map structure that we pass to the SAT solver:
[DBG]  1  -1  1  -1  1  
[DBG]  1  1  1  -1  1  
[DBG]  1  -1  1  -1  1  
[DBG]  1  1  1  1  1  
[DBG]  1  -1  1  1  -1  
[DBG]  Identifying agents in a submap for rescheduling (when key_agent is there at the time 33):
[DBG]  Agent 43 found intervals in the sub-map:
[DBG]   [31..34]
[DBG]  Agent 43 (interval in submap: [31..34]) contains time 33, added to replan.
[DBG]  Agent 44 found intervals in the sub-map:
[DBG]  
[DBG]  Agent 44 is not in sub-map at time 33 (intervals: 
[DBG]  )
[DBG]  Agent 49 found intervals in the sub-map:
[DBG]  
[DBG]  Agent 49 is not in sub-map at time 33 (intervals: 
[DBG]  )
[DBG]  Agent 55 found intervals in the sub-map:
[DBG]   [24..31]
[DBG]  Agent 55 is not in sub-map at time 33 (intervals: 
[DBG]  [24..31] )
[DBG]  Agent 98 found intervals in the sub-map:
[DBG]   [29..33]
[DBG]  Agent 98 (interval in submap: [29..33]) contains time 33, added to replan.
[DBG]  Agent 100 found intervals in the sub-map:
[DBG]  
[DBG]  Agent 100 is not in sub-map at time 33 (intervals: 
[DBG]  )
[DBG]  Agent 132 found intervals in the sub-map:
[DBG]  
[DBG]  Agent 132 is not in sub-map at time 33 (intervals: 
[DBG]  )
[DBG]  Agent 137 found intervals in the sub-map:
[DBG]   [20..23]
[DBG]  Agent 137 is not in sub-map at time 33 (intervals: 
[DBG]  [20..23] )
[DBG]  Agent 43 | Start (global): 525 -> (local): (1, 1) at time 33 | Goal (global): 524 -> (local): (1, 0) at time 34
[DBG]  Agent 98 | Start (global): 558 -> (local): (2, 2) at time 33 | Goal (global): 558 -> (local): (2, 2) at time 33
[DBG]  [REPAIR] SAT destroy operator called.
[DBG]  [REPAIR] SAT operator â€“ launching subproblem FOR OPTIMIZATION.
[DBG]  Creating local paths (sx, sy) in the submap for T_sync = 33
[DBG]    Agent 43 (global paths from T=33 to 34) has local path: (1,1) (1,0) 
[DBG]    Agent 98 (global paths from T=33 to 33) has local path: (2,2) 
[DBG]  Checking input data for SAT solver:
[DBG]    - Number of agents to replan: 2
[DBG]  Agent 43 has the original local path length: 2 => Start (1,1), Goal (1,0)
[DBG]  Agent 98 has the original local path length: 1 => Start (2,2), Goal (2,2)
[DBG]  Start position: (1, 1), (2, 2), 
[DBG]  Goal position: (1, 0), (2, 2), 
[DBG]  SAT instance and solver created.
Currently solving
Instance name: scen
Map name: map
Encoding used: disappear_at_goal
SAT solver used: Kissat
Optimizing function: sum of costs
Number of agents: 2
Mks LB: 2
SoC LB: 3
Delta: 0
Remaining time: 300000 [ms]

Found plan [agents = 2] [timesteps = 2]
Agent #0 : 4 3 
Agent #1 : 8 0 

[STAT] Solver returned: 0
[DBG]  Agent (index) 43 | New local path (submap idx):
[DBG]  4 3 
[DBG]  Agent (index) 98 | New local path (submap idx):
[DBG]  8 
[DBG]  Update the agent path 43 | Original local length: 2 | New local length: 2
[DBG]  agent 43 t=0 => decoded (sx,sy)=(1,1) => global_id=525
[DBG]  agent 43 t=1 => decoded (sx,sy)=(1,0) => global_id=524
[DBG]  Complete path of agent 43:
[DBG]    Original: 414 413 412 411 379 378 377 409 441 440 439 439 439 439 407 406 405 437 469 468 467 435 467 467 499 498 466 465 464 463 462 494 526 525 524 523 522 521 520 519 551 550 582 581 613 645 677 709 741 740 739 707 
[DBG]    New:     414 413 412 411 379 378 377 409 441 440 439 439 439 439 407 406 405 437 469 468 467 435 467 467 499 498 466 465 464 463 462 494 526 525 524 523 522 521 520 519 551 550 582 581 613 645 677 709 741 740 739 707 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 414 413 412 411 379 378 377 409 441 440 439 439 439 439 407 406 405 437 469 468 467 435 467 467 499 498 466 465 464 463 462 494 526 
[DBG]    Local path (in submap): 525 524 
[DBG]    Suffix (out of submap): 523 522 521 520 519 551 550 582 581 613 645 677 709 741 740 739 707 
[DBG]  Original agent path length 43 je: 52
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 0: 414, 413, 412, 411, 379, 378, 377, 409, 441, 440, 439, 439, 439, 439, 407, 406, 405, 437, 469, 468, 467, 435, 467, 467, 499, 498, 466, 465, 464, 463, 462, 494, 526, 525, 524, 523, 522, 521, 520, 519, 551, 550, 582, 581, 613, 645, 677, 709, 741, 740, 739, 707, 
[DBG]  Path for agent 43 updated, resulting length: 52
[DBG]  Update the agent path 98 | Original local length: 1 | New local length: 1
[DBG]  agent 98 t=0 => decoded (sx,sy)=(2,2) => global_id=558
[DBG]  Complete path of agent 98:
[DBG]    Original: 897 865 864 832 800 768 769 770 738 738 738 738 739 740 741 742 710 678 646 647 615 616 648 649 650 682 650 651 619 620 588 589 590 558 
[DBG]    New:     897 865 864 832 800 768 769 770 738 738 738 738 739 740 741 742 710 678 646 647 615 616 648 649 650 682 650 651 619 620 588 589 590 558 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 897 865 864 832 800 768 769 770 738 738 738 738 739 740 741 742 710 678 646 647 615 616 648 649 650 682 650 651 619 620 588 589 590 
[DBG]    Local path (in submap): 558 
[DBG]    Suffix (out of submap): 
[DBG]  Original agent path length 98 je: 34
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 1: 897, 865, 864, 832, 800, 768, 769, 770, 738, 738, 738, 738, 739, 740, 741, 742, 710, 678, 646, 647, 615, 616, 648, 649, 650, 682, 650, 651, 619, 620, 588, 589, 590, 558, 
[DBG]  Path for agent 98 updated, resulting length: 34
[DBG]  Paths successfully updated.
[DBG]  (LNS.cpp) New path for agent 43: 
[DBG]  414, 413, 412, 411, 379, 378, 377, 409, 441, 440, 439, 439, 439, 439, 407, 406, 405, 437, 469, 468, 467, 435, 467, 467, 499, 498, 466, 465, 464, 463, 462, 494, 526, 525, 524, 523, 522, 521, 520, 519, 551, 550, 582, 581, 613, 645, 677, 709, 741, 740, 739, 707, 
[DBG]  (LNS.cpp) New path for agent 98: 
[DBG]  897, 865, 864, 832, 800, 768, 769, 770, 738, 738, 738, 738, 739, 740, 741, 742, 710, 678, 646, 647, 615, 616, 648, 649, 650, 682, 650, 651, 619, 620, 588, 589, 590, 558, 
[DBG]  component_weights = {0.336328, 0.122481, 0.128084, 0.413107}
[DBG]  opSuccess value: 1
[STAT] neighbor.sum_of_costs before recomputation: 84
[STAT] neighbor.old_sum_of_costs before recomputation: 84
[STAT] sum_of_costs before recomputation: 4295
[DBG]  Validate solution immediately after SAT success.
[DBG]  No problems after SAT replan.
[DBG]  Recomputing sum_of_cost by dividing neighbor.sum_of_costs and neighbor.old_sum_of_costs
[STAT] sum_of_costs after recomputation: 4295
[STAT] Iteration 111
[DBG]  Using SAT operator (destroy+repair SAT).
[DBG]  ====================
[DBG]  SAT destroy operator called.
[DBG]  SAT heuristic: 2
[DBG]  key_agent_id: 23
[DBG]  key_agent_id global path length: 55
[DBG]  Submap content (global positions):
[DBG]  175 176 177 178 179 
[DBG]  207 208 209 210 211 
[DBG]  239 240 241 242 243 
[DBG]  271 272 273 274 275 
[DBG]  303 304 305 306 307 
[DBG]  Map content with agents and obstacles:
[DBG]  X . . . . 
[DBG]  . . . . X 
[DBG]  . A A . . 
[DBG]  . X . . . 
[DBG]  . . X . X 
[DBG]  content of the map structure that we pass to the SAT solver:
[DBG]  -1  1  1  1  1  
[DBG]  1  1  1  1  -1  
[DBG]  1  1  1  1  1  
[DBG]  1  -1  1  1  1  
[DBG]  1  1  -1  1  -1  
[DBG]  Identifying agents in a submap for rescheduling (when key_agent is there at the time 42):
[DBG]  Agent 23 found intervals in the sub-map:
[DBG]   [37..44]
[DBG]  Agent 23 (interval in submap: [37..44]) contains time 42, added to replan.
[DBG]  Agent 101 found intervals in the sub-map:
[DBG]  
[DBG]  Agent 101 is not in sub-map at time 42 (intervals: 
[DBG]  )
[DBG]  Agent 119 found intervals in the sub-map:
[DBG]   [37..44]
[DBG]  Agent 119 (interval in submap: [37..44]) contains time 42, added to replan.
[DBG]  Agent 23 | Start (global): 241 -> (local): (2, 2) at time 42 | Goal (global): 243 -> (local): (2, 4) at time 44
[DBG]  Agent 119 | Start (global): 240 -> (local): (2, 1) at time 42 | Goal (global): 207 -> (local): (1, 0) at time 44
[DBG]  [REPAIR] SAT destroy operator called.
[DBG]  [REPAIR] SAT operator â€“ launching subproblem FOR OPTIMIZATION.
[DBG]  Creating local paths (sx, sy) in the submap for T_sync = 42
[DBG]    Agent 23 (global paths from T=42 to 44) has local path: (2,2) (2,3) (2,4) 
[DBG]    Agent 119 (global paths from T=42 to 44) has local path: (2,1) (1,1) (1,0) 
[DBG]  Checking input data for SAT solver:
[DBG]    - Number of agents to replan: 2
[DBG]  Agent 23 has the original local path length: 3 => Start (2,2), Goal (2,4)
[DBG]  Agent 119 has the original local path length: 3 => Start (2,1), Goal (1,0)
[DBG]  Start position: (2, 2), (2, 1), 
[DBG]  Goal position: (2, 4), (1, 0), 
[DBG]  SAT instance and solver created.
Currently solving
Instance name: scen
Map name: map
Encoding used: disappear_at_goal
SAT solver used: Kissat
Optimizing function: sum of costs
Number of agents: 2
Mks LB: 3
SoC LB: 6
Delta: 0
Remaining time: 300000 [ms]

Found plan [agents = 2] [timesteps = 3]
Agent #0 : 10 11 12 
Agent #1 : 9 8 4 

[STAT] Solver returned: 0
[DBG]  Agent (index) 23 | New local path (submap idx):
[DBG]  10 11 12 
[DBG]  Agent (index) 119 | New local path (submap idx):
[DBG]  9 8 4 
[DBG]  Update the agent path 23 | Original local length: 3 | New local length: 3
[DBG]  agent 23 t=0 => decoded (sx,sy)=(2,2) => global_id=241
[DBG]  agent 23 t=1 => decoded (sx,sy)=(2,3) => global_id=242
[DBG]  agent 23 t=2 => decoded (sx,sy)=(2,4) => global_id=243
[DBG]  Complete path of agent 23:
[DBG]    Original: 864 832 800 801 769 737 738 739 740 741 709 677 645 613 581 549 550 550 550 550 551 519 487 455 423 391 359 360 361 362 363 331 299 267 268 269 270 271 239 240 241 273 241 242 243 244 212 213 214 215 247 248 249 217 218 
[DBG]    New:     864 832 800 801 769 737 738 739 740 741 709 677 645 613 581 549 550 550 550 550 551 519 487 455 423 391 359 360 361 362 363 331 299 267 268 269 270 271 239 240 241 273 241 242 243 244 212 213 214 215 247 248 249 217 218 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 864 832 800 801 769 737 738 739 740 741 709 677 645 613 581 549 550 550 550 550 551 519 487 455 423 391 359 360 361 362 363 331 299 267 268 269 270 271 239 240 241 273 
[DBG]    Local path (in submap): 241 242 243 
[DBG]    Suffix (out of submap): 244 212 213 214 215 247 248 249 217 218 
[DBG]  Original agent path length 23 je: 55
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 0: 864, 832, 800, 801, 769, 737, 738, 739, 740, 741, 709, 677, 645, 613, 581, 549, 550, 550, 550, 550, 551, 519, 487, 455, 423, 391, 359, 360, 361, 362, 363, 331, 299, 267, 268, 269, 270, 271, 239, 240, 241, 273, 241, 242, 243, 244, 212, 213, 214, 215, 247, 248, 249, 217, 218, 
[DBG]  Path for agent 23 updated, resulting length: 55
[DBG]  Update the agent path 119 | Original local length: 3 | New local length: 3
[DBG]  agent 119 t=0 => decoded (sx,sy)=(2,1) => global_id=240
[DBG]  agent 119 t=1 => decoded (sx,sy)=(2,0) => global_id=239
[DBG]  agent 119 t=2 => decoded (sx,sy)=(1,0) => global_id=207
[DBG]  Complete path of agent 119:
[DBG]    Original: 861 860 861 829 797 765 733 701 702 670 638 637 636 604 603 571 539 538 506 505 473 472 440 408 376 344 345 313 281 249 248 247 215 214 213 212 244 243 242 242 242 241 240 208 207 206 205 204 172 140 
[DBG]    New:     861 860 861 829 797 765 733 701 702 670 638 637 636 604 603 571 539 538 506 505 473 472 440 408 376 344 345 313 281 249 248 247 215 214 213 212 244 243 242 242 242 241 240 239 207 206 205 204 172 140 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 861 860 861 829 797 765 733 701 702 670 638 637 636 604 603 571 539 538 506 505 473 472 440 408 376 344 345 313 281 249 248 247 215 214 213 212 244 243 242 242 242 241 
[DBG]    Local path (in submap): 240 239 207 
[DBG]    Suffix (out of submap): 206 205 204 172 140 
[DBG]  Original agent path length 119 je: 50
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 1: 861, 860, 861, 829, 797, 765, 733, 701, 702, 670, 638, 637, 636, 604, 603, 571, 539, 538, 506, 505, 473, 472, 440, 408, 376, 344, 345, 313, 281, 249, 248, 247, 215, 214, 213, 212, 244, 243, 242, 242, 242, 241, 240, 239, 207, 206, 205, 204, 172, 140, 
[DBG]  Path for agent 119 updated, resulting length: 50
[DBG]  Paths successfully updated.
[DBG]  (LNS.cpp) New path for agent 23: 
[DBG]  864, 832, 800, 801, 769, 737, 738, 739, 740, 741, 709, 677, 645, 613, 581, 549, 550, 550, 550, 550, 551, 519, 487, 455, 423, 391, 359, 360, 361, 362, 363, 331, 299, 267, 268, 269, 270, 271, 239, 240, 241, 273, 241, 242, 243, 244, 212, 213, 214, 215, 247, 248, 249, 217, 218, 
[DBG]  (LNS.cpp) New path for agent 119: 
[DBG]  861, 860, 861, 829, 797, 765, 733, 701, 702, 670, 638, 637, 636, 604, 603, 571, 539, 538, 506, 505, 473, 472, 440, 408, 376, 344, 345, 313, 281, 249, 248, 247, 215, 214, 213, 212, 244, 243, 242, 242, 242, 241, 240, 239, 207, 206, 205, 204, 172, 140, 
[DBG]  component_weights = {0.340853, 0.121646, 0.127211, 0.410291}
[DBG]  opSuccess value: 1
[STAT] neighbor.sum_of_costs before recomputation: 103
[STAT] neighbor.old_sum_of_costs before recomputation: 103
[STAT] sum_of_costs before recomputation: 4295
[DBG]  Validate solution immediately after SAT success.
[DBG]  No problems after SAT replan.
[DBG]  Recomputing sum_of_cost by dividing neighbor.sum_of_costs and neighbor.old_sum_of_costs
[STAT] sum_of_costs after recomputation: 4295
[STAT] Iteration 112
[DBG]  Using SAT operator (destroy+repair SAT).
[DBG]  ====================
[DBG]  SAT destroy operator called.
[DBG]  SAT heuristic: 2
[DBG]  key_agent_id: 18
[DBG]  key_agent_id global path length: 13
[DBG]  Submap content (global positions):
[DBG]  482 483 484 485 486 
[DBG]  514 515 516 517 518 
[DBG]  546 547 548 549 550 
[DBG]  578 579 580 581 582 
[DBG]  610 611 612 613 614 
[DBG]  Map content with agents and obstacles:
[DBG]  . . . A . 
[DBG]  X . . . X 
[DBG]  . . A A . 
[DBG]  . A A . . 
[DBG]  . . . . X 
[DBG]  content of the map structure that we pass to the SAT solver:
[DBG]  1  1  1  1  1  
[DBG]  -1  1  1  1  -1  
[DBG]  1  1  1  1  1  
[DBG]  1  1  1  1  1  
[DBG]  1  1  1  1  -1  
[DBG]  Identifying agents in a submap for rescheduling (when key_agent is there at the time 4):
[DBG]  Agent 0 found intervals in the sub-map:
[DBG]   [0..3]
[DBG]  Agent 0 is not in sub-map at time 4 (intervals: 
[DBG]  [0..3] )
[DBG]  Agent 18 found intervals in the sub-map:
[DBG]   [0..6]
[DBG]  Agent 18 (interval in submap: [0..6]) contains time 4, added to replan.
[DBG]  Agent 21 found intervals in the sub-map:
[DBG]   [0..5]
[DBG]  Agent 21 (interval in submap: [0..5]) contains time 4, added to replan.
[DBG]  Agent 29 found intervals in the sub-map:
[DBG]   [0..3]
[DBG]  Agent 29 is not in sub-map at time 4 (intervals: 
[DBG]  [0..3] )
[DBG]  Agent 71 found intervals in the sub-map:
[DBG]   [0..8]
[DBG]  Agent 71 (interval in submap: [0..8]) contains time 4, added to replan.
[DBG]  Agent 73 found intervals in the sub-map:
[DBG]   [2..7]
[DBG]  Agent 73 (interval in submap: [2..7]) contains time 4, added to replan.
[DBG]  Agent 116 found intervals in the sub-map:
[DBG]   [0..16]
[DBG]  Agent 116 (interval in submap: [0..16]) contains time 4, added to replan.
[DBG]  Agent 18 | Start (global): 548 -> (local): (2, 2) at time 4 | Goal (global): 612 -> (local): (4, 2) at time 6
[DBG]  Agent 21 | Start (global): 485 -> (local): (0, 3) at time 4 | Goal (global): 486 -> (local): (0, 4) at time 5
[DBG]  Agent 71 | Start (global): 579 -> (local): (3, 1) at time 4 | Goal (global): 613 -> (local): (4, 3) at time 8
[DBG]  Agent 73 | Start (global): 580 -> (local): (3, 2) at time 4 | Goal (global): 550 -> (local): (2, 4) at time 7
[DBG]  Agent 116 | Start (global): 549 -> (local): (2, 3) at time 4 | Goal (global): 582 -> (local): (3, 4) at time 16
[DBG]  [REPAIR] SAT destroy operator called.
[DBG]  [REPAIR] SAT operator â€“ launching subproblem FOR OPTIMIZATION.
[DBG]  Creating local paths (sx, sy) in the submap for T_sync = 4
[DBG]    Agent 18 (global paths from T=4 to 6) has local path: (2,2) (3,2) (4,2) 
[DBG]    Agent 21 (global paths from T=4 to 5) has local path: (0,3) (0,4) 
[DBG]    Agent 71 (global paths from T=4 to 8) has local path: (3,1) (4,1) (4,1) (4,2) (4,3) 
[DBG]    Agent 73 (global paths from T=4 to 7) has local path: (3,2) (3,3) (3,4) (2,4) 
[DBG]    Agent 116 (global paths from T=4 to 16) has local path: (2,3) (2,3) (2,3) (2,3) (2,3) (2,3) (2,3) (2,3) (2,2) (3,2) (3,2) (3,3) (3,4) 
[DBG]  Checking input data for SAT solver:
[DBG]    - Number of agents to replan: 5
[DBG]  Agent 18 has the original local path length: 3 => Start (2,2), Goal (4,2)
[DBG]  Agent 21 has the original local path length: 2 => Start (0,3), Goal (0,4)
[DBG]  Agent 71 has the original local path length: 5 => Start (3,1), Goal (4,3)
[DBG]  Agent 73 has the original local path length: 4 => Start (3,2), Goal (2,4)
[DBG]  Agent 116 has the original local path length: 13 => Start (2,3), Goal (3,4)
[DBG]  Start position: (2, 2), (0, 3), (3, 1), (3, 2), (2, 3), 
[DBG]  Goal position: (4, 2), (0, 4), (4, 3), (2, 4), (3, 4), 
[DBG]  SAT instance and solver created.
Currently solving
Instance name: scen
Map name: map
Encoding used: disappear_at_goal
SAT solver used: Kissat
Optimizing function: sum of costs
Number of agents: 5
Mks LB: 4
SoC LB: 16
Delta: 0
Remaining time: 300000 [ms]

[STAT] Solver returned: -1
[DBG]  SAT solver failed.
[STAT] SAT solver failed to find a valid solution.
[DBG]  ====================
[DBG]  SAT destroy operator called.
[DBG]  SAT heuristic: 2
[DBG]  key_agent_id: 18
[DBG]  key_agent_id global path length: 13
[DBG]  Submap content (global positions):
[DBG]  450 451 452 453 454 
[DBG]  482 483 484 485 486 
[DBG]  514 515 516 517 518 
[DBG]  546 547 548 549 550 
[DBG]  578 579 580 581 582 
[DBG]  Map content with agents and obstacles:
[DBG]  . X X X . 
[DBG]  . . A . A 
[DBG]  X . A . X 
[DBG]  . A . A . 
[DBG]  . A . . A 
[DBG]  content of the map structure that we pass to the SAT solver:
[DBG]  1  -1  -1  -1  1  
[DBG]  1  1  1  1  1  
[DBG]  -1  1  1  1  -1  
[DBG]  1  1  1  1  1  
[DBG]  1  1  1  1  1  
[DBG]  Identifying agents in a submap for rescheduling (when key_agent is there at the time 3):
[DBG]  Agent 0 found intervals in the sub-map:
[DBG]   [0..3]
[DBG]  Agent 0 (interval in submap: [0..3]) contains time 3, added to replan.
[DBG]  Agent 16 found intervals in the sub-map:
[DBG]   [0..0]
[DBG]  Agent 16 is not in sub-map at time 3 (intervals: 
[DBG]  [0..0] )
[DBG]  Agent 18 found intervals in the sub-map:
[DBG]   [0..5]
[DBG]  Agent 18 (interval in submap: [0..5]) contains time 3, added to replan.
[DBG]  Agent 21 found intervals in the sub-map:
[DBG]   [0..5] [8..8]
[DBG]  Agent 21 (interval in submap: [0..5]) contains time 3, added to replan.
[DBG]  Agent 29 found intervals in the sub-map:
[DBG]   [0..3]
[DBG]  Agent 29 (interval in submap: [0..3]) contains time 3, added to replan.
[DBG]  Agent 71 found intervals in the sub-map:
[DBG]   [0..4]
[DBG]  Agent 71 (interval in submap: [0..4]) contains time 3, added to replan.
[DBG]  Agent 73 found intervals in the sub-map:
[DBG]   [2..7]
[DBG]  Agent 73 (interval in submap: [2..7]) contains time 3, added to replan.
[DBG]  Agent 116 found intervals in the sub-map:
[DBG]   [0..16]
[DBG]  Agent 116 (interval in submap: [0..16]) contains time 3, added to replan.
[DBG]  Agent 0 | Start (global): 486 -> (local): (1, 4) at time 3 | Goal (global): 486 -> (local): (1, 4) at time 3
[DBG]  Agent 18 | Start (global): 516 -> (local): (2, 2) at time 3 | Goal (global): 580 -> (local): (4, 2) at time 5
[DBG]  Agent 21 | Start (global): 484 -> (local): (1, 2) at time 3 | Goal (global): 486 -> (local): (1, 4) at time 5
[DBG]  Agent 29 | Start (global): 582 -> (local): (4, 4) at time 3 | Goal (global): 582 -> (local): (4, 4) at time 3
[DBG]  Agent 71 | Start (global): 547 -> (local): (3, 1) at time 3 | Goal (global): 579 -> (local): (4, 1) at time 4
[DBG]  Agent 73 | Start (global): 579 -> (local): (4, 1) at time 3 | Goal (global): 550 -> (local): (3, 4) at time 7
[DBG]  Agent 116 | Start (global): 549 -> (local): (3, 3) at time 3 | Goal (global): 582 -> (local): (4, 4) at time 16
[DBG]  [REPAIR] SAT destroy operator called.
[DBG]  [REPAIR] SAT operator â€“ launching subproblem FOR OPTIMIZATION.
[DBG]  Creating local paths (sx, sy) in the submap for T_sync = 3
[DBG]    Agent 0 (global paths from T=3 to 3) has local path: (1,4) 
[DBG]    Agent 18 (global paths from T=3 to 5) has local path: (2,2) (3,2) (4,2) 
[DBG]    Agent 21 (global paths from T=3 to 5) has local path: (1,2) (1,3) (1,4) 
[DBG]    Agent 29 (global paths from T=3 to 3) has local path: (4,4) 
[DBG]    Agent 71 (global paths from T=3 to 4) has local path: (3,1) (4,1) 
[DBG]    Agent 73 (global paths from T=3 to 7) has local path: (4,1) (4,2) (4,3) (4,4) (3,4) 
[DBG]    Agent 116 (global paths from T=3 to 16) has local path: (3,3) (3,3) (3,3) (3,3) (3,3) (3,3) (3,3) (3,3) (3,3) (3,2) (4,2) (4,2) (4,3) (4,4) 
[DBG]  Checking input data for SAT solver:
[DBG]    - Number of agents to replan: 7
[DBG]  Agent 0 has the original local path length: 1 => Start (1,4), Goal (1,4)
[DBG]  Agent 18 has the original local path length: 3 => Start (2,2), Goal (4,2)
[DBG]  Agent 21 has the original local path length: 3 => Start (1,2), Goal (1,4)
[DBG]  Agent 29 has the original local path length: 1 => Start (4,4), Goal (4,4)
[DBG]  Agent 71 has the original local path length: 2 => Start (3,1), Goal (4,1)
[DBG]  Agent 73 has the original local path length: 5 => Start (4,1), Goal (3,4)
[DBG]  Agent 116 has the original local path length: 14 => Start (3,3), Goal (4,4)
[DBG]  Start position: (1, 4), (2, 2), (1, 2), (4, 4), (3, 1), (4, 1), (3, 3), 
[DBG]  Goal position: (1, 4), (4, 2), (1, 4), (4, 4), (4, 1), (3, 4), (4, 4), 
[DBG]  SAT instance and solver created.
Currently solving
Instance name: scen
Map name: map
Encoding used: disappear_at_goal
SAT solver used: Kissat
Optimizing function: sum of costs
Number of agents: 7
Mks LB: 5
SoC LB: 18
Delta: 0
Remaining time: 300000 [ms]

Vertex conflict! Agents 0, 1, timestep 3, location 0
Swapping conflict! Agents 0, 1, timestep 3, edge (0,0)
Vertex conflict! Agents 0, 1, timestep 4, location 0
Vertex conflict! Agents 0, 2, timestep 3, location 0
Swapping conflict! Agents 0, 2, timestep 3, edge (0,0)
Vertex conflict! Agents 0, 2, timestep 4, location 0
Vertex conflict! Agents 0, 3, timestep 1, location 0
Swapping conflict! Agents 0, 3, timestep 1, edge (0,0)
Vertex conflict! Agents 0, 3, timestep 2, location 0
Swapping conflict! Agents 0, 3, timestep 2, edge (0,0)
Vertex conflict! Agents 0, 3, timestep 3, location 0
Swapping conflict! Agents 0, 3, timestep 3, edge (0,0)
Vertex conflict! Agents 0, 3, timestep 4, location 0
Vertex conflict! Agents 0, 4, timestep 2, location 0
Swapping conflict! Agents 0, 4, timestep 2, edge (0,0)
Vertex conflict! Agents 0, 4, timestep 3, location 0
Swapping conflict! Agents 0, 4, timestep 3, edge (0,0)
Vertex conflict! Agents 0, 4, timestep 4, location 0
Vertex conflict! Agents 0, 6, timestep 3, location 0
Swapping conflict! Agents 0, 6, timestep 3, edge (0,0)
Vertex conflict! Agents 0, 6, timestep 4, location 0
Vertex conflict! Agents 1, 2, timestep 3, location 0
Swapping conflict! Agents 1, 2, timestep 3, edge (0,0)
Vertex conflict! Agents 1, 2, timestep 4, location 0
Vertex conflict! Agents 1, 3, timestep 3, location 0
Swapping conflict! Agents 1, 3, timestep 3, edge (0,0)
Vertex conflict! Agents 1, 3, timestep 4, location 0
Vertex conflict! Agents 1, 4, timestep 3, location 0
Swapping conflict! Agents 1, 4, timestep 3, edge (0,0)
Vertex conflict! Agents 1, 4, timestep 4, location 0
Vertex conflict! Agents 1, 6, timestep 3, location 0
Swapping conflict! Agents 1, 6, timestep 3, edge (0,0)
Vertex conflict! Agents 1, 6, timestep 4, location 0
Vertex conflict! Agents 2, 3, timestep 3, location 0
Swapping conflict! Agents 2, 3, timestep 3, edge (0,0)
Vertex conflict! Agents 2, 3, timestep 4, location 0
Vertex conflict! Agents 2, 4, timestep 3, location 0
Swapping conflict! Agents 2, 4, timestep 3, edge (0,0)
Vertex conflict! Agents 2, 4, timestep 4, location 0
Vertex conflict! Agents 2, 6, timestep 3, location 0
Swapping conflict! Agents 2, 6, timestep 3, edge (0,0)
Vertex conflict! Agents 2, 6, timestep 4, location 0
Vertex conflict! Agents 3, 4, timestep 2, location 0
Swapping conflict! Agents 3, 4, timestep 2, edge (0,0)
Vertex conflict! Agents 3, 4, timestep 3, location 0
Swapping conflict! Agents 3, 4, timestep 3, edge (0,0)
Vertex conflict! Agents 3, 4, timestep 4, location 0
Vertex conflict! Agents 3, 6, timestep 3, location 0
Swapping conflict! Agents 3, 6, timestep 3, edge (0,0)
Vertex conflict! Agents 3, 6, timestep 4, location 0
Vertex conflict! Agents 4, 6, timestep 3, location 0
Swapping conflict! Agents 4, 6, timestep 3, edge (0,0)
Vertex conflict! Agents 4, 6, timestep 4, location 0
Found plan [agents = 7] [timesteps = 5]
Agent #0 : 6 0 0 0 0 
Agent #1 : 8 12 17 0 0 
Agent #2 : 4 5 6 0 0 
Agent #3 : 19 0 0 0 0 
Agent #4 : 11 16 0 0 0 
Agent #5 : 16 17 18 19 14 
Agent #6 : 13 18 19 0 0 

[STAT] Solver returned: 0
[DBG]  Agent (index) 0 | New local path (submap idx):
[DBG]  6 
[DBG]  Agent (index) 18 | New local path (submap idx):
[DBG]  8 12 17 
[DBG]  Agent (index) 21 | New local path (submap idx):
[DBG]  4 5 6 
[DBG]  Agent (index) 29 | New local path (submap idx):
[DBG]  19 
[DBG]  Agent (index) 71 | New local path (submap idx):
[DBG]  11 16 
[DBG]  Agent (index) 73 | New local path (submap idx):
[DBG]  16 17 18 19 14 
[DBG]  Agent (index) 116 | New local path (submap idx):
[DBG]  13 18 19 
[DBG]  Update the agent path 0 | Original local length: 1 | New local length: 1
[DBG]  agent 0 t=0 => decoded (sx,sy)=(1,4) => global_id=486
[DBG]  Complete path of agent 0:
[DBG]    Original: 517 517 485 486 487 519 520 521 522 523 555 587 588 589 590 591 623 655 656 657 658 659 691 692 724 756 788 820 821 822 823 855 856 857 858 859 860 861 829 797 798 799 
[DBG]    New:     517 517 485 486 487 519 520 521 522 523 555 587 588 589 590 591 623 655 656 657 658 659 691 692 724 756 788 820 821 822 823 855 856 857 858 859 860 861 829 797 798 799 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 517 517 485 
[DBG]    Local path (in submap): 486 
[DBG]    Suffix (out of submap): 487 519 520 521 522 523 555 587 588 589 590 591 623 655 656 657 658 659 691 692 724 756 788 820 821 822 823 855 856 857 858 859 860 861 829 797 798 799 
[DBG]  Original agent path length 0 je: 42
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 0: 517, 517, 485, 486, 487, 519, 520, 521, 522, 523, 555, 587, 588, 589, 590, 591, 623, 655, 656, 657, 658, 659, 691, 692, 724, 756, 788, 820, 821, 822, 823, 855, 856, 857, 858, 859, 860, 861, 829, 797, 798, 799, 
[DBG]  Path for agent 0 updated, resulting length: 42
[DBG]  Update the agent path 18 | Original local length: 3 | New local length: 3
[DBG]  agent 18 t=0 => decoded (sx,sy)=(2,2) => global_id=516
[DBG]  agent 18 t=1 => decoded (sx,sy)=(3,2) => global_id=548
[DBG]  agent 18 t=2 => decoded (sx,sy)=(4,2) => global_id=580
[DBG]  Complete path of agent 18:
[DBG]    Original: 486 485 484 516 548 580 612 644 676 675 707 739 771 
[DBG]    New:     486 485 484 516 548 580 612 644 676 675 707 739 771 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 486 485 484 
[DBG]    Local path (in submap): 516 548 580 
[DBG]    Suffix (out of submap): 612 644 676 675 707 739 771 
[DBG]  Original agent path length 18 je: 13
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 1: 486, 485, 484, 516, 548, 580, 612, 644, 676, 675, 707, 739, 771, 
[DBG]  Path for agent 18 updated, resulting length: 13
[DBG]  Update the agent path 21 | Original local length: 3 | New local length: 3
[DBG]  agent 21 t=0 => decoded (sx,sy)=(1,2) => global_id=484
[DBG]  agent 21 t=1 => decoded (sx,sy)=(1,3) => global_id=485
[DBG]  agent 21 t=2 => decoded (sx,sy)=(1,4) => global_id=486
[DBG]  Complete path of agent 21:
[DBG]    Original: 484 484 483 484 485 486 487 455 454 422 421 422 390 391 359 358 326 327 
[DBG]    New:     484 484 483 484 485 486 487 455 454 422 421 422 390 391 359 358 326 327 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 484 484 483 
[DBG]    Local path (in submap): 484 485 486 
[DBG]    Suffix (out of submap): 487 455 454 422 421 422 390 391 359 358 326 327 
[DBG]  Original agent path length 21 je: 18
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 2: 484, 484, 483, 484, 485, 486, 487, 455, 454, 422, 421, 422, 390, 391, 359, 358, 326, 327, 
[DBG]  Path for agent 21 updated, resulting length: 18
[DBG]  Update the agent path 29 | Original local length: 1 | New local length: 1
[DBG]  agent 29 t=0 => decoded (sx,sy)=(4,4) => global_id=582
[DBG]  Complete path of agent 29:
[DBG]    Original: 579 580 581 582 583 551 519 520 521 489 457 458 459 460 428 429 430 431 432 400 401 402 403 404 405 373 341 309 310 311 
[DBG]    New:     579 580 581 582 583 551 519 520 521 489 457 458 459 460 428 429 430 431 432 400 401 402 403 404 405 373 341 309 310 311 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 579 580 581 
[DBG]    Local path (in submap): 582 
[DBG]    Suffix (out of submap): 583 551 519 520 521 489 457 458 459 460 428 429 430 431 432 400 401 402 403 404 405 373 341 309 310 311 
[DBG]  Original agent path length 29 je: 30
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 3: 579, 580, 581, 582, 583, 551, 519, 520, 521, 489, 457, 458, 459, 460, 428, 429, 430, 431, 432, 400, 401, 402, 403, 404, 405, 373, 341, 309, 310, 311, 
[DBG]  Path for agent 29 updated, resulting length: 30
[DBG]  Update the agent path 71 | Original local length: 2 | New local length: 2
[DBG]  agent 71 t=0 => decoded (sx,sy)=(3,1) => global_id=547
[DBG]  agent 71 t=1 => decoded (sx,sy)=(4,1) => global_id=579
[DBG]  Complete path of agent 71:
[DBG]    Original: 482 483 515 547 579 611 611 612 613 645 646 647 648 649 650 682 682 683 684 685 717 718 750 751 783 815 847 848 849 881 882 883 884 885 917 918 919 
[DBG]    New:     482 483 515 547 579 611 611 612 613 645 646 647 648 649 650 682 682 683 684 685 717 718 750 751 783 815 847 848 849 881 882 883 884 885 917 918 919 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 482 483 515 
[DBG]    Local path (in submap): 547 579 
[DBG]    Suffix (out of submap): 611 611 612 613 645 646 647 648 649 650 682 682 683 684 685 717 718 750 751 783 815 847 848 849 881 882 883 884 885 917 918 919 
[DBG]  Original agent path length 71 je: 37
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 4: 482, 483, 515, 547, 579, 611, 611, 612, 613, 645, 646, 647, 648, 649, 650, 682, 682, 683, 684, 685, 717, 718, 750, 751, 783, 815, 847, 848, 849, 881, 882, 883, 884, 885, 917, 918, 919, 
[DBG]  Path for agent 71 updated, resulting length: 37
[DBG]  Update the agent path 73 | Original local length: 5 | New local length: 5
[DBG]  agent 73 t=0 => decoded (sx,sy)=(4,1) => global_id=579
[DBG]  agent 73 t=1 => decoded (sx,sy)=(4,2) => global_id=580
[DBG]  agent 73 t=2 => decoded (sx,sy)=(4,3) => global_id=581
[DBG]  agent 73 t=3 => decoded (sx,sy)=(4,4) => global_id=582
[DBG]  agent 73 t=4 => decoded (sx,sy)=(3,4) => global_id=550
[DBG]  Complete path of agent 73:
[DBG]    Original: 609 577 578 579 580 581 582 550 551 519 520 521 489 489 457 456 
[DBG]    New:     609 577 578 579 580 581 582 550 551 519 520 521 489 489 457 456 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 609 577 578 
[DBG]    Local path (in submap): 579 580 581 582 550 
[DBG]    Suffix (out of submap): 551 519 520 521 489 489 457 456 
[DBG]  Original agent path length 73 je: 16
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 5: 609, 577, 578, 579, 580, 581, 582, 550, 551, 519, 520, 521, 489, 489, 457, 456, 
[DBG]  Path for agent 73 updated, resulting length: 16
[DBG]  Update the agent path 116 | Original local length: 14 | New local length: 3
[DBG]  agent 116 t=0 => decoded (sx,sy)=(3,3) => global_id=549
[DBG]  agent 116 t=1 => decoded (sx,sy)=(4,3) => global_id=581
[DBG]  agent 116 t=2 => decoded (sx,sy)=(4,4) => global_id=582
[DBG]  Complete path of agent 116:
[DBG]    Original: 549 549 549 549 549 549 549 549 549 549 549 549 548 580 580 581 582 583 551 519 487 455 423 391 359 360 328 296 264 232 200 168 136 137 105 137 
[DBG]    New:     549 549 549 549 581 582 583 551 519 487 455 423 391 359 360 328 296 264 232 200 168 136 137 105 137 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 549 549 549 
[DBG]    Local path (in submap): 549 581 582 583 551 519 487 455 423 391 359 360 328 296 
[DBG]    Suffix (out of submap): 264 232 200 168 136 137 105 137 
[DBG]  Original agent path length 116 je: 36
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 6: 549, 549, 549, 549, 581, 582, 583, 551, 519, 487, 455, 423, 391, 359, 360, 328, 296, 264, 232, 200, 168, 136, 137, 105, 137, 
[DBG]  Path for agent 116 updated, resulting length: 25
[DBG]  Paths successfully updated.
[DBG]  (LNS.cpp) New path for agent 0: 
[DBG]  517, 517, 485, 486, 487, 519, 520, 521, 522, 523, 555, 587, 588, 589, 590, 591, 623, 655, 656, 657, 658, 659, 691, 692, 724, 756, 788, 820, 821, 822, 823, 855, 856, 857, 858, 859, 860, 861, 829, 797, 798, 799, 
[DBG]  (LNS.cpp) New path for agent 18: 
[DBG]  486, 485, 484, 516, 548, 580, 612, 644, 676, 675, 707, 739, 771, 
[DBG]  (LNS.cpp) New path for agent 21: 
[DBG]  484, 484, 483, 484, 485, 486, 487, 455, 454, 422, 421, 422, 390, 391, 359, 358, 326, 327, 
[DBG]  (LNS.cpp) New path for agent 29: 
[DBG]  579, 580, 581, 582, 583, 551, 519, 520, 521, 489, 457, 458, 459, 460, 428, 429, 430, 431, 432, 400, 401, 402, 403, 404, 405, 373, 341, 309, 310, 311, 
[DBG]  (LNS.cpp) New path for agent 71: 
[DBG]  482, 483, 515, 547, 579, 611, 611, 612, 613, 645, 646, 647, 648, 649, 650, 682, 682, 683, 684, 685, 717, 718, 750, 751, 783, 815, 847, 848, 849, 881, 882, 883, 884, 885, 917, 918, 919, 
[DBG]  (LNS.cpp) New path for agent 73: 
[DBG]  609, 577, 578, 579, 580, 581, 582, 550, 551, 519, 520, 521, 489, 489, 457, 456, 
[DBG]  (LNS.cpp) New path for agent 116: 
[DBG]  549, 549, 549, 549, 581, 582, 583, 551, 519, 487, 455, 423, 391, 359, 360, 328, 296, 264, 232, 200, 168, 136, 137, 105, 137, 
[DBG]  component_weights = {0.337939, 0.120606, 0.126123, 0.415332}
[DBG]  opSuccess value: 1
[STAT] neighbor.sum_of_costs before recomputation: 174
[STAT] neighbor.old_sum_of_costs before recomputation: 185
[STAT] sum_of_costs before recomputation: 4295
[DBG]  Validate solution immediately after SAT success.
[WARNING] Problem after SAT: Vertex conflict between agents 116 and 42 at location 391 at timestep 12
[DBG]  Attempting immediate repair via init_lns because problem occurred after SAT (should be applied only for conflicts...).
[DBG]  Passing 150 agents to init_lns (skip=true).
[DBG]  path_table contents for selected agents (neighbor.agents):
[DBG]    Agent 0 => controlling path length=42
[DBG]    Agent 18 => controlling path length=13
[DBG]    Agent 21 => controlling path length=18
[DBG]    Agent 29 => controlling path length=30
[DBG]    Agent 71 => controlling path length=37
[DBG]    Agent 73 => controlling path length=16
[DBG]    Agent 116 => controlling path length=25
[DBG]  hodnota skip_initial_solution=1
[DBG]  We skip initialSolution => call buildCollisionData()
[DBG]  buildCollisionData() called â€“ skip_initial_solution case.
[DBG]  Agents.size()=150, collision_graph.size()=150
[DBG]  agent 42 => updateCollidingPairs => foundCollision
[DBG]  agent 92 => updateCollidingPairs => foundCollision
[DBG]  agent 116 => updateCollidingPairs => foundCollision
[DBG]  Conflicting agent pairs:
[DBG]  agent 42 is in conflict with agent 116
[DBG]  agent 92 is in conflict with agent 116
[DBG]  buildCollisionData() => sum_of_costs=4284, num_of_colliding_pairs=2
[DBG]  buildCollisionData done => sum_of_costs=4284, num_of_colliding_pairs=2
[DBG]  sum_of_cost hodnota: 4284
[DBG]  After skip/init build => iteration_stats.back(): sum_of_costs=4284, collisions=2
[DEBUG] Using default neighbor generation strategy for conflicts: 2
[DEBUG] Using default neighbor generation strategy for conflicts: 1
	InitLNS(PP): runtime = 0.00734633, iterations = 3, colliding pairs = 0, initial colliding pairs = 2, solution cost = 4297, initial solution cost = 4284, failed iterations = 0
[DBG]  init_lns->sum_of_costs after init_lns->run: 4297
[DBG]  sum_of_costs after assignment from init_lns->run: 4297
[DBG]  Recomputing sum_of_cost by dividing neighbor.sum_of_costs and neighbor.old_sum_of_costs
[STAT] sum_of_costs after recomputation: 4297
[STAT] Iteration 113
[DBG]  Using SAT operator (destroy+repair SAT).
[DBG]  ====================
[DBG]  SAT destroy operator called.
[DBG]  SAT heuristic: 2
[DBG]  key_agent_id: 117
[DBG]  key_agent_id global path length: 29
[DBG]  Submap content (global positions):
[DBG]  -1 -1 -1 -1 -1 
[DBG]  -1 -1 -1 -1 -1 
[DBG]  0 1 2 3 4 
[DBG]  32 33 34 35 36 
[DBG]  64 65 66 67 68 
[DBG]  Map content with agents and obstacles:
[DBG]  X X X X X 
[DBG]  X X X X X 
[DBG]  . . A . . 
[DBG]  X . . . X 
[DBG]  . . . . . 
[DBG]  content of the map structure that we pass to the SAT solver:
[DBG]  1  1  1  1  1  
[DBG]  1  1  1  1  1  
[DBG]  1  1  1  1  1  
[DBG]  -1  1  1  1  -1  
[DBG]  1  1  1  1  1  
[DBG]  Identifying agents in a submap for rescheduling (when key_agent is there at the time 26):
[DBG]  Agent 117 found intervals in the sub-map:
[DBG]   [24..28]
[DBG]  Agent 117 (interval in submap: [24..28]) contains time 26, added to replan.
[DBG]  Agent 117 | Start (global): 2 -> (local): (2, 2) at time 26 | Goal (global): 0 -> (local): (2, 0) at time 28
[DBG]  [REPAIR] SAT destroy operator called.
[DBG]  [REPAIR] SAT operator â€“ launching subproblem FOR OPTIMIZATION.
[DBG]  Creating local paths (sx, sy) in the submap for T_sync = 26
[DBG]    Agent 117 (global paths from T=26 to 28) has local path: (2,2) (2,1) (2,0) 
[DBG]  Checking input data for SAT solver:
[DBG]    - Number of agents to replan: 1
[DBG]  Agent 117 has the original local path length: 3 => Start (2,2), Goal (2,0)
[DBG]  Start position: (2, 2), 
[DBG]  Goal position: (2, 0), 
[DBG]  SAT instance and solver created.
Currently solving
Instance name: scen
Map name: map
Encoding used: disappear_at_goal
SAT solver used: Kissat
Optimizing function: sum of costs
Number of agents: 1
Mks LB: 3
SoC LB: 3
Delta: 0
Remaining time: 300000 [ms]

Found plan [agents = 1] [timesteps = 3]
Agent #0 : 12 11 10 

[STAT] Solver returned: 0
[DBG]  Agent (index) 117 | New local path (submap idx):
[DBG]  12 11 10 
[DBG]  Update the agent path 117 | Original local length: 3 | New local length: 3
[DBG]  agent 117 t=0 => decoded (sx,sy)=(2,2) => global_id=2
[DBG]  agent 117 t=1 => decoded (sx,sy)=(2,1) => global_id=1
[DBG]  agent 117 t=2 => decoded (sx,sy)=(2,0) => global_id=0
[DBG]  Complete path of agent 117:
[DBG]    Original: 214 213 181 149 148 147 115 83 82 81 49 48 47 46 45 44 43 42 41 40 8 7 6 5 4 3 2 1 0 
[DBG]    New:     214 213 181 149 148 147 115 83 82 81 49 48 47 46 45 44 43 42 41 40 8 7 6 5 4 3 2 1 0 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 214 213 181 149 148 147 115 83 82 81 49 48 47 46 45 44 43 42 41 40 8 7 6 5 4 3 
[DBG]    Local path (in submap): 2 1 0 
[DBG]    Suffix (out of submap): 
[DBG]  Original agent path length 117 je: 29
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 0: 214, 213, 181, 149, 148, 147, 115, 83, 82, 81, 49, 48, 47, 46, 45, 44, 43, 42, 41, 40, 8, 7, 6, 5, 4, 3, 2, 1, 0, 
[DBG]  Path for agent 117 updated, resulting length: 29
[DBG]  Paths successfully updated.
[DBG]  (LNS.cpp) New path for agent 117: 
[DBG]  214, 213, 181, 149, 148, 147, 115, 83, 82, 81, 49, 48, 47, 46, 45, 44, 43, 42, 41, 40, 8, 7, 6, 5, 4, 3, 2, 1, 0, 
[DBG]  component_weights = {0.342474, 0.11978, 0.12526, 0.412487}
[DBG]  opSuccess value: 1
[STAT] neighbor.sum_of_costs before recomputation: 28
[STAT] neighbor.old_sum_of_costs before recomputation: 28
[STAT] sum_of_costs before recomputation: 4297
[DBG]  Validate solution immediately after SAT success.
[DBG]  No problems after SAT replan.
[DBG]  Recomputing sum_of_cost by dividing neighbor.sum_of_costs and neighbor.old_sum_of_costs
[STAT] sum_of_costs after recomputation: 4297
[STAT] Iteration 114
[DBG]  Using SAT operator (destroy+repair SAT).
[DBG]  ====================
[DBG]  SAT destroy operator called.
[DBG]  SAT heuristic: 2
[DBG]  key_agent_id: 12
[DBG]  key_agent_id global path length: 11
[DBG]  Submap content (global positions):
[DBG]  699 700 701 702 703 
[DBG]  731 732 733 734 735 
[DBG]  763 764 765 766 767 
[DBG]  795 796 797 798 799 
[DBG]  827 828 829 830 831 
[DBG]  Map content with agents and obstacles:
[DBG]  X X A A . 
[DBG]  . . A X . 
[DBG]  X . A . . 
[DBG]  . X . . . 
[DBG]  . X A . X 
[DBG]  content of the map structure that we pass to the SAT solver:
[DBG]  -1  -1  1  1  1  
[DBG]  1  1  1  -1  1  
[DBG]  -1  1  1  1  1  
[DBG]  1  -1  1  1  1  
[DBG]  1  -1  1  1  -1  
[DBG]  Identifying agents in a submap for rescheduling (when key_agent is there at the time 8):
[DBG]  Agent 12 found intervals in the sub-map:
[DBG]   [5..10]
[DBG]  Agent 12 (interval in submap: [5..10]) contains time 8, added to replan.
[DBG]  Agent 14 found intervals in the sub-map:
[DBG]  
[DBG]  Agent 14 is not in sub-map at time 8 (intervals: 
[DBG]  )
[DBG]  Agent 25 found intervals in the sub-map:
[DBG]   [3..9]
[DBG]  Agent 25 (interval in submap: [3..9]) contains time 8, added to replan.
[DBG]  Agent 58 found intervals in the sub-map:
[DBG]   [1..1] [5..10]
[DBG]  Agent 58 (interval in submap: [5..10]) contains time 8, added to replan.
[DBG]  Agent 94 found intervals in the sub-map:
[DBG]   [0..1]
[DBG]  Agent 94 is not in sub-map at time 8 (intervals: 
[DBG]  [0..1] )
[DBG]  Agent 119 found intervals in the sub-map:
[DBG]   [3..8]
[DBG]  Agent 119 (interval in submap: [3..8]) contains time 8, added to replan.
[DBG]  Agent 133 found intervals in the sub-map:
[DBG]   [8..13]
[DBG]  Agent 133 (interval in submap: [8..13]) contains time 8, added to replan.
[DBG]  Agent 142 found intervals in the sub-map:
[DBG]   [0..5] [10..15]
[DBG]  Agent 142 is not in sub-map at time 8 (intervals: 
[DBG]  [0..5] [10..15] )
[DBG]  Agent 12 | Start (global): 765 -> (local): (2, 2) at time 8 | Goal (global): 767 -> (local): (2, 4) at time 10
[DBG]  Agent 25 | Start (global): 701 -> (local): (0, 2) at time 8 | Goal (global): 702 -> (local): (0, 3) at time 9
[DBG]  Agent 58 | Start (global): 733 -> (local): (1, 2) at time 8 | Goal (global): 702 -> (local): (0, 3) at time 10
[DBG]  Agent 119 | Start (global): 702 -> (local): (0, 3) at time 8 | Goal (global): 702 -> (local): (0, 3) at time 8
[DBG]  Agent 133 | Start (global): 829 -> (local): (4, 2) at time 8 | Goal (global): 702 -> (local): (0, 3) at time 13
[DBG]  [REPAIR] SAT destroy operator called.
[DBG]  [REPAIR] SAT operator â€“ launching subproblem FOR OPTIMIZATION.
[DBG]  Creating local paths (sx, sy) in the submap for T_sync = 8
[DBG]    Agent 12 (global paths from T=8 to 10) has local path: (2,2) (2,3) (2,4) 
[DBG]    Agent 25 (global paths from T=8 to 9) has local path: (0,2) (0,3) 
[DBG]    Agent 58 (global paths from T=8 to 10) has local path: (1,2) (0,2) (0,3) 
[DBG]    Agent 119 (global paths from T=8 to 8) has local path: (0,3) 
[DBG]    Agent 133 (global paths from T=8 to 13) has local path: (4,2) (3,2) (2,2) (1,2) (0,2) (0,3) 
[DBG]  Checking input data for SAT solver:
[DBG]    - Number of agents to replan: 5
[DBG]  Agent 12 has the original local path length: 3 => Start (2,2), Goal (2,4)
[DBG]  Agent 25 has the original local path length: 2 => Start (0,2), Goal (0,3)
[DBG]  Agent 58 has the original local path length: 3 => Start (1,2), Goal (0,3)
[DBG]  Agent 119 has the original local path length: 1 => Start (0,3), Goal (0,3)
[DBG]  Agent 133 has the original local path length: 6 => Start (4,2), Goal (0,3)
[DBG]  Start position: (2, 2), (0, 2), (1, 2), (0, 3), (4, 2), 
[DBG]  Goal position: (2, 4), (0, 3), (0, 3), (0, 3), (0, 3), 
[DBG]  SAT instance and solver created.
Currently solving
Instance name: scen
Map name: map
Encoding used: disappear_at_goal
SAT solver used: Kissat
Optimizing function: sum of costs
Number of agents: 5
Mks LB: 6
SoC LB: 15
Delta: 0
Remaining time: 300000 [ms]

Vertex conflict! Agents 0, 1, timestep 3, location 0
Swapping conflict! Agents 0, 1, timestep 3, edge (0,0)
Vertex conflict! Agents 0, 1, timestep 4, location 0
Swapping conflict! Agents 0, 1, timestep 4, edge (0,0)
Vertex conflict! Agents 0, 1, timestep 5, location 0
Vertex conflict! Agents 0, 2, timestep 3, location 0
Swapping conflict! Agents 0, 2, timestep 3, edge (0,0)
Vertex conflict! Agents 0, 2, timestep 4, location 0
Swapping conflict! Agents 0, 2, timestep 4, edge (0,0)
Vertex conflict! Agents 0, 2, timestep 5, location 0
Vertex conflict! Agents 0, 3, timestep 3, location 0
Swapping conflict! Agents 0, 3, timestep 3, edge (0,0)
Vertex conflict! Agents 0, 3, timestep 4, location 0
Swapping conflict! Agents 0, 3, timestep 4, edge (0,0)
Vertex conflict! Agents 0, 3, timestep 5, location 0
Vertex conflict! Agents 0, 4, timestep 4, location 0
Swapping conflict! Agents 1, 2, timestep 1, edge (1,0)
Vertex conflict! Agents 1, 2, timestep 3, location 0
Swapping conflict! Agents 1, 2, timestep 3, edge (0,0)
Vertex conflict! Agents 1, 2, timestep 4, location 0
Swapping conflict! Agents 1, 2, timestep 4, edge (0,0)
Vertex conflict! Agents 1, 2, timestep 5, location 0
Swapping conflict! Agents 1, 3, timestep 0, edge (0,1)
Vertex conflict! Agents 1, 3, timestep 2, location 0
Swapping conflict! Agents 1, 3, timestep 2, edge (0,0)
Vertex conflict! Agents 1, 3, timestep 3, location 0
Swapping conflict! Agents 1, 3, timestep 3, edge (0,0)
Vertex conflict! Agents 1, 3, timestep 4, location 0
Swapping conflict! Agents 1, 3, timestep 4, edge (0,0)
Vertex conflict! Agents 1, 3, timestep 5, location 0
Vertex conflict! Agents 1, 4, timestep 4, location 0
Vertex conflict! Agents 2, 3, timestep 1, location 0
Vertex conflict! Agents 2, 3, timestep 3, location 0
Swapping conflict! Agents 2, 3, timestep 3, edge (0,0)
Vertex conflict! Agents 2, 3, timestep 4, location 0
Swapping conflict! Agents 2, 3, timestep 4, edge (0,0)
Vertex conflict! Agents 2, 3, timestep 5, location 0
Vertex conflict! Agents 2, 4, timestep 4, location 0
Vertex conflict! Agents 3, 4, timestep 4, location 0
Found plan [agents = 5] [timesteps = 6]
Agent #0 : 8 9 10 0 0 0 
Agent #1 : 0 1 0 0 0 0 
Agent #2 : 5 0 1 0 0 0 
Agent #3 : 1 0 0 0 0 0 
Agent #4 : 16 12 8 5 0 1 

[STAT] Solver returned: 0
[DBG]  Agent (index) 12 | New local path (submap idx):
[DBG]  8 9 10 
[DBG]  Agent (index) 25 | New local path (submap idx):
[DBG]  0 1 
[DBG]  Agent (index) 58 | New local path (submap idx):
[DBG]  5 0 1 
[DBG]  Agent (index) 119 | New local path (submap idx):
[DBG]  1 
[DBG]  Agent (index) 133 | New local path (submap idx):
[DBG]  16 12 8 5 0 1 
[DBG]  Update the agent path 12 | Original local length: 3 | New local length: 3
[DBG]  agent 12 t=0 => decoded (sx,sy)=(2,2) => global_id=765
[DBG]  agent 12 t=1 => decoded (sx,sy)=(2,3) => global_id=766
[DBG]  agent 12 t=2 => decoded (sx,sy)=(2,4) => global_id=767
[DBG]  Complete path of agent 12:
[DBG]    Original: 726 727 728 729 730 731 732 764 765 766 767 
[DBG]    New:     726 727 728 729 730 731 732 764 765 766 767 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 726 727 728 729 730 731 732 764 
[DBG]    Local path (in submap): 765 766 767 
[DBG]    Suffix (out of submap): 
[DBG]  Original agent path length 12 je: 11
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 0: 726, 727, 728, 729, 730, 731, 732, 764, 765, 766, 767, 
[DBG]  Path for agent 12 updated, resulting length: 11
[DBG]  Update the agent path 25 | Original local length: 2 | New local length: 2
[DBG]  agent 25 t=0 => decoded (sx,sy)=(0,2) => global_id=701
[DBG]  agent 25 t=1 => decoded (sx,sy)=(0,3) => global_id=702
[DBG]  Complete path of agent 25:
[DBG]    Original: 895 894 862 830 829 797 765 733 701 702 670 638 637 636 604 572 540 508 476 444 445 413 381 349 317 285 284 252 220 221 189 157 158 159 
[DBG]    New:     895 894 862 830 829 797 765 733 701 702 670 638 637 636 604 572 540 508 476 444 445 413 381 349 317 285 284 252 220 221 189 157 158 159 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 895 894 862 830 829 797 765 733 
[DBG]    Local path (in submap): 701 702 
[DBG]    Suffix (out of submap): 670 638 637 636 604 572 540 508 476 444 445 413 381 349 317 285 284 252 220 221 189 157 158 159 
[DBG]  Original agent path length 25 je: 34
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 1: 895, 894, 862, 830, 829, 797, 765, 733, 701, 702, 670, 638, 637, 636, 604, 572, 540, 508, 476, 444, 445, 413, 381, 349, 317, 285, 284, 252, 220, 221, 189, 157, 158, 159, 
[DBG]  Path for agent 25 updated, resulting length: 34
[DBG]  Update the agent path 58 | Original local length: 3 | New local length: 3
[DBG]  agent 58 t=0 => decoded (sx,sy)=(1,2) => global_id=733
[DBG]  agent 58 t=1 => decoded (sx,sy)=(0,2) => global_id=701
[DBG]  agent 58 t=2 => decoded (sx,sy)=(0,3) => global_id=702
[DBG]  Complete path of agent 58:
[DBG]    Original: 826 827 859 860 861 829 797 765 733 701 702 670 638 637 636 636 604 572 540 508 476 444 412 380 380 379 347 
[DBG]    New:     826 827 859 860 861 829 797 765 733 701 702 670 638 637 636 636 604 572 540 508 476 444 412 380 380 379 347 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 826 827 859 860 861 829 797 765 
[DBG]    Local path (in submap): 733 701 702 
[DBG]    Suffix (out of submap): 670 638 637 636 636 604 572 540 508 476 444 412 380 380 379 347 
[DBG]  Original agent path length 58 je: 27
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 2: 826, 827, 859, 860, 861, 829, 797, 765, 733, 701, 702, 670, 638, 637, 636, 636, 604, 572, 540, 508, 476, 444, 412, 380, 380, 379, 347, 
[DBG]  Path for agent 58 updated, resulting length: 27
[DBG]  Update the agent path 119 | Original local length: 1 | New local length: 1
[DBG]  agent 119 t=0 => decoded (sx,sy)=(0,3) => global_id=702
[DBG]  Complete path of agent 119:
[DBG]    Original: 861 860 861 829 797 765 733 701 702 670 638 637 636 604 572 540 539 538 506 505 473 472 440 408 376 344 312 313 281 249 248 247 215 214 213 212 244 243 242 242 242 241 240 239 207 206 205 204 172 140 
[DBG]    New:     861 860 861 829 797 765 733 701 702 670 638 637 636 604 572 540 539 538 506 505 473 472 440 408 376 344 312 313 281 249 248 247 215 214 213 212 244 243 242 242 242 241 240 239 207 206 205 204 172 140 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 861 860 861 829 797 765 733 701 
[DBG]    Local path (in submap): 702 
[DBG]    Suffix (out of submap): 670 638 637 636 604 572 540 539 538 506 505 473 472 440 408 376 344 312 313 281 249 248 247 215 214 213 212 244 243 242 242 242 241 240 239 207 206 205 204 172 140 
[DBG]  Original agent path length 119 je: 50
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 3: 861, 860, 861, 829, 797, 765, 733, 701, 702, 670, 638, 637, 636, 604, 572, 540, 539, 538, 506, 505, 473, 472, 440, 408, 376, 344, 312, 313, 281, 249, 248, 247, 215, 214, 213, 212, 244, 243, 242, 242, 242, 241, 240, 239, 207, 206, 205, 204, 172, 140, 
[DBG]  Path for agent 119 updated, resulting length: 50
[DBG]  Update the agent path 133 | Original local length: 6 | New local length: 6
[DBG]  agent 133 t=0 => decoded (sx,sy)=(4,2) => global_id=829
[DBG]  agent 133 t=1 => decoded (sx,sy)=(3,2) => global_id=797
[DBG]  agent 133 t=2 => decoded (sx,sy)=(2,2) => global_id=765
[DBG]  agent 133 t=3 => decoded (sx,sy)=(1,2) => global_id=733
[DBG]  agent 133 t=4 => decoded (sx,sy)=(0,2) => global_id=701
[DBG]  agent 133 t=5 => decoded (sx,sy)=(0,3) => global_id=702
[DBG]  Complete path of agent 133:
[DBG]    Original: 956 924 923 923 891 859 860 861 829 797 765 733 701 702 670 638 637 636 604 572 540 508 509 477 445 413 412 380 379 378 377 345 344 376 
[DBG]    New:     956 924 923 923 891 859 860 861 829 797 765 733 701 702 670 638 637 636 604 572 540 508 509 477 445 413 412 380 379 378 377 345 344 376 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 956 924 923 923 891 859 860 861 
[DBG]    Local path (in submap): 829 797 765 733 701 702 
[DBG]    Suffix (out of submap): 670 638 637 636 604 572 540 508 509 477 445 413 412 380 379 378 377 345 344 376 
[DBG]  Original agent path length 133 je: 34
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 4: 956, 924, 923, 923, 891, 859, 860, 861, 829, 797, 765, 733, 701, 702, 670, 638, 637, 636, 604, 572, 540, 508, 509, 477, 445, 413, 412, 380, 379, 378, 377, 345, 344, 376, 
[DBG]  Path for agent 133 updated, resulting length: 34
[DBG]  Paths successfully updated.
[DBG]  (LNS.cpp) New path for agent 12: 
[DBG]  726, 727, 728, 729, 730, 731, 732, 764, 765, 766, 767, 
[DBG]  (LNS.cpp) New path for agent 25: 
[DBG]  895, 894, 862, 830, 829, 797, 765, 733, 701, 702, 670, 638, 637, 636, 604, 572, 540, 508, 476, 444, 445, 413, 381, 349, 317, 285, 284, 252, 220, 221, 189, 157, 158, 159, 
[DBG]  (LNS.cpp) New path for agent 58: 
[DBG]  826, 827, 859, 860, 861, 829, 797, 765, 733, 701, 702, 670, 638, 637, 636, 636, 604, 572, 540, 508, 476, 444, 412, 380, 380, 379, 347, 
[DBG]  (LNS.cpp) New path for agent 119: 
[DBG]  861, 860, 861, 829, 797, 765, 733, 701, 702, 670, 638, 637, 636, 604, 572, 540, 539, 538, 506, 505, 473, 472, 440, 408, 376, 344, 312, 313, 281, 249, 248, 247, 215, 214, 213, 212, 244, 243, 242, 242, 242, 241, 240, 239, 207, 206, 205, 204, 172, 140, 
[DBG]  (LNS.cpp) New path for agent 133: 
[DBG]  956, 924, 923, 923, 891, 859, 860, 861, 829, 797, 765, 733, 701, 702, 670, 638, 637, 636, 604, 572, 540, 508, 509, 477, 445, 413, 412, 380, 379, 378, 377, 345, 344, 376, 
[DBG]  component_weights = {0.347037, 0.118948, 0.12439, 0.409624}
[DBG]  opSuccess value: 1
[STAT] neighbor.sum_of_costs before recomputation: 151
[STAT] neighbor.old_sum_of_costs before recomputation: 151
[STAT] sum_of_costs before recomputation: 4297
[DBG]  Validate solution immediately after SAT success.
[DBG]  No problems after SAT replan.
[DBG]  Recomputing sum_of_cost by dividing neighbor.sum_of_costs and neighbor.old_sum_of_costs
[STAT] sum_of_costs after recomputation: 4297
[STAT] Iteration 115
[DBG]  Using SAT operator (destroy+repair SAT).
[DBG]  ====================
[DBG]  SAT destroy operator called.
[DBG]  SAT heuristic: 2
[DBG]  key_agent_id: 63
[DBG]  key_agent_id global path length: 22
[DBG]  Submap content (global positions):
[DBG]  237 238 239 240 241 
[DBG]  269 270 271 272 273 
[DBG]  301 302 303 304 305 
[DBG]  333 334 335 336 337 
[DBG]  365 366 367 368 369 
[DBG]  Map content with agents and obstacles:
[DBG]  A . A . . 
[DBG]  A . A X . 
[DBG]  . A A . X 
[DBG]  . X A . . 
[DBG]  . . . . . 
[DBG]  content of the map structure that we pass to the SAT solver:
[DBG]  1  1  1  1  1  
[DBG]  1  1  1  -1  1  
[DBG]  1  1  1  1  -1  
[DBG]  1  -1  1  1  1  
[DBG]  1  1  1  1  1  
[DBG]  Identifying agents in a submap for rescheduling (when key_agent is there at the time 16):
[DBG]  Agent 5 found intervals in the sub-map:
[DBG]   [12..18]
[DBG]  Agent 5 (interval in submap: [12..18]) contains time 16, added to replan.
[DBG]  Agent 8 found intervals in the sub-map:
[DBG]   [0..7] [10..20] [22..23]
[DBG]  Agent 8 (interval in submap: [10..20]) contains time 16, added to replan.
[DBG]  Agent 16 found intervals in the sub-map:
[DBG]   [14..18]
[DBG]  Agent 16 (interval in submap: [14..18]) contains time 16, added to replan.
[DBG]  Agent 63 found intervals in the sub-map:
[DBG]   [13..21]
[DBG]  Agent 63 (interval in submap: [13..21]) contains time 16, added to replan.
[DBG]  Agent 69 found intervals in the sub-map:
[DBG]   [16..21]
[DBG]  Agent 69 (interval in submap: [16..21]) contains time 16, added to replan.
[DBG]  Agent 82 found intervals in the sub-map:
[DBG]   [15..22]
[DBG]  Agent 82 (interval in submap: [15..22]) contains time 16, added to replan.
[DBG]  Agent 83 found intervals in the sub-map:
[DBG]   [10..15]
[DBG]  Agent 83 is not in sub-map at time 16 (intervals: 
[DBG]  [10..15] )
[DBG]  Agent 112 found intervals in the sub-map:
[DBG]   [0..2]
[DBG]  Agent 112 is not in sub-map at time 16 (intervals: 
[DBG]  [0..2] )
[DBG]  Agent 115 found intervals in the sub-map:
[DBG]   [16..22]
[DBG]  Agent 115 (interval in submap: [16..22]) contains time 16, added to replan.
[DBG]  Agent 121 found intervals in the sub-map:
[DBG]  
[DBG]  Agent 121 is not in sub-map at time 16 (intervals: 
[DBG]  )
[DBG]  Agent 5 | Start (global): 302 -> (local): (2, 1) at time 16 | Goal (global): 269 -> (local): (1, 0) at time 18
[DBG]  Agent 8 | Start (global): 271 -> (local): (1, 2) at time 16 | Goal (global): 368 -> (local): (4, 3) at time 20
[DBG]  Agent 16 | Start (global): 335 -> (local): (3, 2) at time 16 | Goal (global): 337 -> (local): (3, 4) at time 18
[DBG]  Agent 63 | Start (global): 303 -> (local): (2, 2) at time 16 | Goal (global): 302 -> (local): (2, 1) at time 21
[DBG]  Agent 69 | Start (global): 237 -> (local): (0, 0) at time 16 | Goal (global): 366 -> (local): (4, 1) at time 21
[DBG]  Agent 82 | Start (global): 269 -> (local): (1, 0) at time 16 | Goal (global): 366 -> (local): (4, 1) at time 22
[DBG]  Agent 115 | Start (global): 239 -> (local): (0, 2) at time 16 | Goal (global): 369 -> (local): (4, 4) at time 22
[DBG]  [REPAIR] SAT destroy operator called.
[DBG]  [REPAIR] SAT operator â€“ launching subproblem FOR OPTIMIZATION.
[DBG]  Creating local paths (sx, sy) in the submap for T_sync = 16
[DBG]    Agent 5 (global paths from T=16 to 18) has local path: (2,1) (1,1) (1,0) 
[DBG]    Agent 8 (global paths from T=16 to 20) has local path: (1,2) (2,2) (2,3) (3,3) (4,3) 
[DBG]    Agent 16 (global paths from T=16 to 18) has local path: (3,2) (3,3) (3,4) 
[DBG]    Agent 63 (global paths from T=16 to 21) has local path: (2,2) (2,1) (1,1) (1,1) (1,1) (2,1) 
[DBG]    Agent 69 (global paths from T=16 to 21) has local path: (0,0) (1,0) (2,0) (3,0) (4,0) (4,1) 
[DBG]    Agent 82 (global paths from T=16 to 22) has local path: (1,0) (2,0) (3,0) (4,0) (4,1) (4,2) (4,1) 
[DBG]    Agent 115 (global paths from T=16 to 22) has local path: (0,2) (1,2) (2,2) (3,2) (3,3) (4,3) (4,4) 
[DBG]  Checking input data for SAT solver:
[DBG]    - Number of agents to replan: 7
[DBG]  Agent 5 has the original local path length: 3 => Start (2,1), Goal (1,0)
[DBG]  Agent 8 has the original local path length: 5 => Start (1,2), Goal (4,3)
[DBG]  Agent 16 has the original local path length: 3 => Start (3,2), Goal (3,4)
[DBG]  Agent 63 has the original local path length: 6 => Start (2,2), Goal (2,1)
[DBG]  Agent 69 has the original local path length: 6 => Start (0,0), Goal (4,1)
[DBG]  Agent 82 has the original local path length: 7 => Start (1,0), Goal (4,1)
[DBG]  Agent 115 has the original local path length: 7 => Start (0,2), Goal (4,4)
[DBG]  Start position: (2, 1), (1, 2), (3, 2), (2, 2), (0, 0), (1, 0), (0, 2), 
[DBG]  Goal position: (1, 0), (4, 3), (3, 4), (2, 1), (4, 1), (4, 1), (4, 4), 
[DBG]  SAT instance and solver created.
Currently solving
Instance name: scen
Map name: map
Encoding used: disappear_at_goal
SAT solver used: Kissat
Optimizing function: sum of costs
Number of agents: 7
Mks LB: 7
SoC LB: 31
Delta: 0
Remaining time: 300000 [ms]

Vertex conflict! Agents 0, 1, timestep 5, location 0
Swapping conflict! Agents 0, 1, timestep 5, edge (0,0)
Vertex conflict! Agents 0, 1, timestep 6, location 0
Vertex conflict! Agents 0, 2, timestep 3, location 0
Swapping conflict! Agents 0, 2, timestep 3, edge (0,0)
Vertex conflict! Agents 0, 2, timestep 4, location 0
Swapping conflict! Agents 0, 2, timestep 4, edge (0,0)
Vertex conflict! Agents 0, 2, timestep 5, location 0
Swapping conflict! Agents 0, 2, timestep 5, edge (0,0)
Vertex conflict! Agents 0, 2, timestep 6, location 0
Vertex conflict! Agents 0, 3, timestep 3, location 0
Swapping conflict! Agents 0, 3, timestep 3, edge (0,0)
Vertex conflict! Agents 0, 3, timestep 4, location 0
Swapping conflict! Agents 0, 3, timestep 4, edge (0,0)
Vertex conflict! Agents 0, 3, timestep 5, location 0
Swapping conflict! Agents 0, 3, timestep 5, edge (0,0)
Vertex conflict! Agents 0, 3, timestep 6, location 0
Vertex conflict! Agents 0, 4, timestep 6, location 0
Vertex conflict! Agents 0, 5, timestep 5, location 0
Swapping conflict! Agents 0, 5, timestep 5, edge (0,0)
Vertex conflict! Agents 0, 5, timestep 6, location 0
Vertex conflict! Agents 1, 2, timestep 5, location 0
Swapping conflict! Agents 1, 2, timestep 5, edge (0,0)
Vertex conflict! Agents 1, 2, timestep 6, location 0
Vertex conflict! Agents 1, 3, timestep 5, location 0
Swapping conflict! Agents 1, 3, timestep 5, edge (0,0)
Vertex conflict! Agents 1, 3, timestep 6, location 0
Vertex conflict! Agents 1, 4, timestep 6, location 0
Vertex conflict! Agents 1, 5, timestep 5, location 0
Swapping conflict! Agents 1, 5, timestep 5, edge (0,0)
Vertex conflict! Agents 1, 5, timestep 6, location 0
Vertex conflict! Agents 2, 3, timestep 3, location 0
Swapping conflict! Agents 2, 3, timestep 3, edge (0,0)
Vertex conflict! Agents 2, 3, timestep 4, location 0
Swapping conflict! Agents 2, 3, timestep 4, edge (0,0)
Vertex conflict! Agents 2, 3, timestep 5, location 0
Swapping conflict! Agents 2, 3, timestep 5, edge (0,0)
Vertex conflict! Agents 2, 3, timestep 6, location 0
Vertex conflict! Agents 2, 4, timestep 6, location 0
Vertex conflict! Agents 2, 5, timestep 5, location 0
Swapping conflict! Agents 2, 5, timestep 5, edge (0,0)
Vertex conflict! Agents 2, 5, timestep 6, location 0
Vertex conflict! Agents 3, 4, timestep 6, location 0
Vertex conflict! Agents 3, 5, timestep 5, location 0
Swapping conflict! Agents 3, 5, timestep 5, edge (0,0)
Vertex conflict! Agents 3, 5, timestep 6, location 0
Vertex conflict! Agents 4, 5, timestep 6, location 0
Found plan [agents = 7] [timesteps = 7]
Agent #0 : 10 6 5 0 0 0 0 
Agent #1 : 7 11 14 19 20 0 0 
Agent #2 : 14 15 16 0 0 0 0 
Agent #3 : 11 10 0 0 0 0 0 
Agent #4 : 0 5 9 13 17 18 0 
Agent #5 : 5 9 13 17 18 0 0 
Agent #6 : 2 7 11 14 19 20 21 

[STAT] Solver returned: 0
[DBG]  Agent (index) 5 | New local path (submap idx):
[DBG]  10 6 5 
[DBG]  Agent (index) 8 | New local path (submap idx):
[DBG]  7 11 14 19 20 
[DBG]  Agent (index) 16 | New local path (submap idx):
[DBG]  14 15 16 
[DBG]  Agent (index) 63 | New local path (submap idx):
[DBG]  11 10 
[DBG]  Agent (index) 69 | New local path (submap idx):
[DBG]  0 5 9 13 17 18 
[DBG]  Agent (index) 82 | New local path (submap idx):
[DBG]  5 9 13 17 18 
[DBG]  Agent (index) 115 | New local path (submap idx):
[DBG]  2 7 11 14 19 20 21 
[DBG]  Update the agent path 5 | Original local length: 3 | New local length: 3
[DBG]  agent 5 t=0 => decoded (sx,sy)=(2,1) => global_id=302
[DBG]  agent 5 t=1 => decoded (sx,sy)=(1,1) => global_id=270
[DBG]  agent 5 t=2 => decoded (sx,sy)=(1,0) => global_id=269
[DBG]  Complete path of agent 5:
[DBG]    Original: 281 313 312 344 343 311 310 309 341 340 339 338 337 336 304 303 302 270 269 268 267 266 298 297 296 295 294 294 293 261 
[DBG]    New:     281 313 312 344 343 311 310 309 341 340 339 338 337 336 304 303 302 270 269 268 267 266 298 297 296 295 294 294 293 261 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 281 313 312 344 343 311 310 309 341 340 339 338 337 336 304 303 
[DBG]    Local path (in submap): 302 270 269 
[DBG]    Suffix (out of submap): 268 267 266 298 297 296 295 294 294 293 261 
[DBG]  Original agent path length 5 je: 30
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 0: 281, 313, 312, 344, 343, 311, 310, 309, 341, 340, 339, 338, 337, 336, 304, 303, 302, 270, 269, 268, 267, 266, 298, 297, 296, 295, 294, 294, 293, 261, 
[DBG]  Path for agent 5 updated, resulting length: 30
[DBG]  Update the agent path 8 | Original local length: 5 | New local length: 5
[DBG]  agent 8 t=0 => decoded (sx,sy)=(1,2) => global_id=271
[DBG]  agent 8 t=1 => decoded (sx,sy)=(2,2) => global_id=303
[DBG]  agent 8 t=2 => decoded (sx,sy)=(3,2) => global_id=335
[DBG]  agent 8 t=3 => decoded (sx,sy)=(4,2) => global_id=367
[DBG]  agent 8 t=4 => decoded (sx,sy)=(4,3) => global_id=368
[DBG]  Complete path of agent 8:
[DBG]    Original: 303 302 270 238 237 237 237 269 268 268 269 301 269 270 271 271 271 303 304 336 368 400 368 369 
[DBG]    New:     303 302 270 238 237 237 237 269 268 268 269 301 269 270 271 271 271 303 335 367 368 400 368 369 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 303 302 270 238 237 237 237 269 268 268 269 301 269 270 271 271 
[DBG]    Local path (in submap): 271 303 335 367 368 
[DBG]    Suffix (out of submap): 400 368 369 
[DBG]  Original agent path length 8 je: 24
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 1: 303, 302, 270, 238, 237, 237, 237, 269, 268, 268, 269, 301, 269, 270, 271, 271, 271, 303, 335, 367, 368, 400, 368, 369, 
[DBG]  Path for agent 8 updated, resulting length: 24
[DBG]  Update the agent path 16 | Original local length: 3 | New local length: 3
[DBG]  agent 16 t=0 => decoded (sx,sy)=(3,2) => global_id=335
[DBG]  agent 16 t=1 => decoded (sx,sy)=(3,3) => global_id=336
[DBG]  agent 16 t=2 => decoded (sx,sy)=(3,4) => global_id=337
[DBG]  Complete path of agent 16:
[DBG]    Original: 454 422 423 424 425 426 427 428 429 430 430 431 432 400 368 367 335 336 337 338 306 274 
[DBG]    New:     454 422 423 424 425 426 427 428 429 430 430 431 432 400 368 367 335 336 337 338 306 274 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 454 422 423 424 425 426 427 428 429 430 430 431 432 400 368 367 
[DBG]    Local path (in submap): 335 336 337 
[DBG]    Suffix (out of submap): 338 306 274 
[DBG]  Original agent path length 16 je: 22
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 2: 454, 422, 423, 424, 425, 426, 427, 428, 429, 430, 430, 431, 432, 400, 368, 367, 335, 336, 337, 338, 306, 274, 
[DBG]  Path for agent 16 updated, resulting length: 22
[DBG]  Update the agent path 63 | Original local length: 6 | New local length: 2
[DBG]  agent 63 t=0 => decoded (sx,sy)=(2,2) => global_id=303
[DBG]  agent 63 t=1 => decoded (sx,sy)=(2,1) => global_id=302
[DBG]  Complete path of agent 63:
[DBG]    Original: 689 657 625 593 561 560 560 560 528 496 464 432 400 368 336 304 303 302 270 270 270 302 
[DBG]    New:     689 657 625 593 561 560 560 560 528 496 464 432 400 368 336 304 303 302 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 689 657 625 593 561 560 560 560 528 496 464 432 400 368 336 304 
[DBG]    Local path (in submap): 303 302 
[DBG]    Suffix (out of submap): 
[DBG]  Original agent path length 63 je: 22
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 3: 689, 657, 625, 593, 561, 560, 560, 560, 528, 496, 464, 432, 400, 368, 336, 304, 303, 302, 
[DBG]  Path for agent 63 updated, resulting length: 18
[DBG]  Update the agent path 69 | Original local length: 6 | New local length: 6
[DBG]  agent 69 t=0 => decoded (sx,sy)=(0,0) => global_id=237
[DBG]  agent 69 t=1 => decoded (sx,sy)=(1,0) => global_id=269
[DBG]  agent 69 t=2 => decoded (sx,sy)=(2,0) => global_id=301
[DBG]  agent 69 t=3 => decoded (sx,sy)=(3,0) => global_id=333
[DBG]  agent 69 t=4 => decoded (sx,sy)=(4,0) => global_id=365
[DBG]  agent 69 t=5 => decoded (sx,sy)=(4,1) => global_id=366
[DBG]  Complete path of agent 69:
[DBG]    Original: 4 5 6 7 8 9 41 42 74 106 138 139 140 172 204 236 237 269 301 333 365 366 398 430 462 494 526 558 590 591 623 655 656 657 658 659 691 692 724 756 788 820 
[DBG]    New:     4 5 6 7 8 9 41 42 74 106 138 139 140 172 204 236 237 269 301 333 365 366 398 430 462 494 526 558 590 591 623 655 656 657 658 659 691 692 724 756 788 820 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 4 5 6 7 8 9 41 42 74 106 138 139 140 172 204 236 
[DBG]    Local path (in submap): 237 269 301 333 365 366 
[DBG]    Suffix (out of submap): 398 430 462 494 526 558 590 591 623 655 656 657 658 659 691 692 724 756 788 820 
[DBG]  Original agent path length 69 je: 42
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 4: 4, 5, 6, 7, 8, 9, 41, 42, 74, 106, 138, 139, 140, 172, 204, 236, 237, 269, 301, 333, 365, 366, 398, 430, 462, 494, 526, 558, 590, 591, 623, 655, 656, 657, 658, 659, 691, 692, 724, 756, 788, 820, 
[DBG]  Path for agent 69 updated, resulting length: 42
[DBG]  Update the agent path 82 | Original local length: 7 | New local length: 5
[DBG]  agent 82 t=0 => decoded (sx,sy)=(1,0) => global_id=269
[DBG]  agent 82 t=1 => decoded (sx,sy)=(2,0) => global_id=301
[DBG]  agent 82 t=2 => decoded (sx,sy)=(3,0) => global_id=333
[DBG]  agent 82 t=3 => decoded (sx,sy)=(4,0) => global_id=365
[DBG]  agent 82 t=4 => decoded (sx,sy)=(4,1) => global_id=366
[DBG]  Complete path of agent 82:
[DBG]    Original: 75 74 73 105 105 105 105 105 137 138 139 140 141 173 205 237 269 301 333 365 366 367 366 398 
[DBG]    New:     75 74 73 105 105 105 105 105 137 138 139 140 141 173 205 237 269 301 333 365 366 398 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 75 74 73 105 105 105 105 105 137 138 139 140 141 173 205 237 
[DBG]    Local path (in submap): 269 301 333 365 366 398 
[DBG]    Suffix (out of submap): 
[DBG]  Original agent path length 82 je: 24
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 5: 75, 74, 73, 105, 105, 105, 105, 105, 137, 138, 139, 140, 141, 173, 205, 237, 269, 301, 333, 365, 366, 398, 
[DBG]  Path for agent 82 updated, resulting length: 22
[DBG]  Update the agent path 115 | Original local length: 7 | New local length: 7
[DBG]  agent 115 t=0 => decoded (sx,sy)=(0,2) => global_id=239
[DBG]  agent 115 t=1 => decoded (sx,sy)=(1,2) => global_id=271
[DBG]  agent 115 t=2 => decoded (sx,sy)=(2,2) => global_id=303
[DBG]  agent 115 t=3 => decoded (sx,sy)=(3,2) => global_id=335
[DBG]  agent 115 t=4 => decoded (sx,sy)=(4,2) => global_id=367
[DBG]  agent 115 t=5 => decoded (sx,sy)=(4,3) => global_id=368
[DBG]  agent 115 t=6 => decoded (sx,sy)=(4,4) => global_id=369
[DBG]  Complete path of agent 115:
[DBG]    Original: 99 131 132 133 134 135 136 137 138 139 140 141 173 205 206 207 239 271 303 335 336 368 369 401 402 
[DBG]    New:     99 131 132 133 134 135 136 137 138 139 140 141 173 205 206 207 239 271 303 335 367 368 369 401 402 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 99 131 132 133 134 135 136 137 138 139 140 141 173 205 206 207 
[DBG]    Local path (in submap): 239 271 303 335 367 368 369 
[DBG]    Suffix (out of submap): 401 402 
[DBG]  Original agent path length 115 je: 25
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 6: 99, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 173, 205, 206, 207, 239, 271, 303, 335, 367, 368, 369, 401, 402, 
[DBG]  Path for agent 115 updated, resulting length: 25
[DBG]  Paths successfully updated.
[DBG]  (LNS.cpp) New path for agent 5: 
[DBG]  281, 313, 312, 344, 343, 311, 310, 309, 341, 340, 339, 338, 337, 336, 304, 303, 302, 270, 269, 268, 267, 266, 298, 297, 296, 295, 294, 294, 293, 261, 
[DBG]  (LNS.cpp) New path for agent 8: 
[DBG]  303, 302, 270, 238, 237, 237, 237, 269, 268, 268, 269, 301, 269, 270, 271, 271, 271, 303, 335, 367, 368, 400, 368, 369, 
[DBG]  (LNS.cpp) New path for agent 16: 
[DBG]  454, 422, 423, 424, 425, 426, 427, 428, 429, 430, 430, 431, 432, 400, 368, 367, 335, 336, 337, 338, 306, 274, 
[DBG]  (LNS.cpp) New path for agent 63: 
[DBG]  689, 657, 625, 593, 561, 560, 560, 560, 528, 496, 464, 432, 400, 368, 336, 304, 303, 302, 
[DBG]  (LNS.cpp) New path for agent 69: 
[DBG]  4, 5, 6, 7, 8, 9, 41, 42, 74, 106, 138, 139, 140, 172, 204, 236, 237, 269, 301, 333, 365, 366, 398, 430, 462, 494, 526, 558, 590, 591, 623, 655, 656, 657, 658, 659, 691, 692, 724, 756, 788, 820, 
[DBG]  (LNS.cpp) New path for agent 82: 
[DBG]  75, 74, 73, 105, 105, 105, 105, 105, 137, 138, 139, 140, 141, 173, 205, 237, 269, 301, 333, 365, 366, 398, 
[DBG]  (LNS.cpp) New path for agent 115: 
[DBG]  99, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 173, 205, 206, 207, 239, 271, 303, 335, 367, 368, 369, 401, 402, 
[DBG]  component_weights = {0.344113, 0.117946, 0.123342, 0.414599}
[DBG]  opSuccess value: 1
[STAT] neighbor.sum_of_costs before recomputation: 176
[STAT] neighbor.old_sum_of_costs before recomputation: 182
[STAT] sum_of_costs before recomputation: 4297
[DBG]  Validate solution immediately after SAT success.
[WARNING] Problem after SAT: Edge conflict between agents 8 and 84 at edge (367,368) at timestep 20
[DBG]  Attempting immediate repair via init_lns because problem occurred after SAT (should be applied only for conflicts...).
[DBG]  Passing 150 agents to init_lns (skip=true).
[DBG]  path_table contents for selected agents (neighbor.agents):
[DBG]    Agent 5 => controlling path length=30
[DBG]    Agent 8 => controlling path length=24
[DBG]    Agent 16 => controlling path length=22
[DBG]    Agent 63 => controlling path length=18
[DBG]    Agent 69 => controlling path length=42
[DBG]    Agent 82 => controlling path length=22
[DBG]    Agent 115 => controlling path length=25
[DBG]  hodnota skip_initial_solution=1
[DBG]  We skip initialSolution => call buildCollisionData()
[DBG]  buildCollisionData() called â€“ skip_initial_solution case.
[DBG]  Agents.size()=150, collision_graph.size()=150
[DBG]  agent 8 => updateCollidingPairs => foundCollision
[DBG]  agent 69 => updateCollidingPairs => foundCollision
[DBG]  agent 82 => updateCollidingPairs => foundCollision
[DBG]  agent 84 => updateCollidingPairs => foundCollision
[DBG]  agent 115 => updateCollidingPairs => foundCollision
[DBG]  Conflicting agent pairs:
[DBG]  agent 8 is in conflict with agent 84
[DBG]  agent 69 is in conflict with agent 82
[DBG]  agent 84 is in conflict with agent 115
[DBG]  buildCollisionData() => sum_of_costs=4291, num_of_colliding_pairs=3
[DBG]  buildCollisionData done => sum_of_costs=4291, num_of_colliding_pairs=3
[DBG]  sum_of_cost hodnota: 4291
[DBG]  After skip/init build => iteration_stats.back(): sum_of_costs=4291, collisions=3
[DEBUG] Using default neighbor generation strategy for conflicts: 0
[DEBUG] Using default neighbor generation strategy for conflicts: 0
	InitLNS(PP): runtime = 0.00659388, iterations = 3, colliding pairs = 0, initial colliding pairs = 3, solution cost = 4277, initial solution cost = 4291, failed iterations = 0
[DBG]  init_lns->sum_of_costs after init_lns->run: 4277
[DBG]  sum_of_costs after assignment from init_lns->run: 4277
[DBG]  Recomputing sum_of_cost by dividing neighbor.sum_of_costs and neighbor.old_sum_of_costs
[STAT] sum_of_costs after recomputation: 4277
[STAT] Iteration 116
[DBG]  Using SAT operator (destroy+repair SAT).
[DBG]  ====================
[DBG]  SAT destroy operator called.
[DBG]  SAT heuristic: 2
[DBG]  key_agent_id: 44
[DBG]  key_agent_id global path length: 41
[DBG]  Submap content (global positions):
[DBG]  623 624 625 626 627 
[DBG]  655 656 657 658 659 
[DBG]  687 688 689 690 691 
[DBG]  719 720 721 722 723 
[DBG]  751 752 753 754 755 
[DBG]  Map content with agents and obstacles:
[DBG]  A X . X A 
[DBG]  . . . . A 
[DBG]  . . A X . 
[DBG]  . A . . X 
[DBG]  . A A X . 
[DBG]  content of the map structure that we pass to the SAT solver:
[DBG]  1  -1  1  -1  1  
[DBG]  1  1  1  1  1  
[DBG]  1  1  1  -1  1  
[DBG]  1  1  1  1  -1  
[DBG]  1  1  1  -1  1  
[DBG]  Identifying agents in a submap for rescheduling (when key_agent is there at the time 32):
[DBG]  Agent 3 found intervals in the sub-map:
[DBG]  
[DBG]  Agent 3 is not in sub-map at time 32 (intervals: 
[DBG]  )
[DBG]  Agent 11 found intervals in the sub-map:
[DBG]   [30..40]
[DBG]  Agent 11 (interval in submap: [30..40]) contains time 32, added to replan.
[DBG]  Agent 28 found intervals in the sub-map:
[DBG]   [6..7] [20..22] [32..34]
[DBG]  Agent 28 (interval in submap: [32..34]) contains time 32, added to replan.
[DBG]  Agent 42 found intervals in the sub-map:
[DBG]   [29..33]
[DBG]  Agent 42 (interval in submap: [29..33]) contains time 32, added to replan.
[DBG]  Agent 44 found intervals in the sub-map:
[DBG]   [30..36]
[DBG]  Agent 44 (interval in submap: [30..36]) contains time 32, added to replan.
[DBG]  Agent 45 found intervals in the sub-map:
[DBG]   [28..35]
[DBG]  Agent 45 (interval in submap: [28..35]) contains time 32, added to replan.
[DBG]  Agent 53 found intervals in the sub-map:
[DBG]   [23..26]
[DBG]  Agent 53 is not in sub-map at time 32 (intervals: 
[DBG]  [23..26] )
[DBG]  Agent 55 found intervals in the sub-map:
[DBG]   [32..38]
[DBG]  Agent 55 (interval in submap: [32..38]) contains time 32, added to replan.
[DBG]  Agent 69 found intervals in the sub-map:
[DBG]   [33..37]
[DBG]  Agent 69 is not in sub-map at time 32 (intervals: 
[DBG]  [33..37] )
[DBG]  Agent 83 found intervals in the sub-map:
[DBG]   [24..29]
[DBG]  Agent 83 is not in sub-map at time 32 (intervals: 
[DBG]  [24..29] )
[DBG]  Agent 100 found intervals in the sub-map:
[DBG]   [27..32]
[DBG]  Agent 100 (interval in submap: [27..32]) contains time 32, added to replan.
[DBG]  Agent 11 | Start (global): 753 -> (local): (4, 2) at time 32 | Goal (global): 657 -> (local): (1, 2) at time 40
[DBG]  Agent 28 | Start (global): 627 -> (local): (0, 4) at time 32 | Goal (global): 691 -> (local): (2, 4) at time 34
[DBG]  Agent 42 | Start (global): 659 -> (local): (1, 4) at time 32 | Goal (global): 691 -> (local): (2, 4) at time 33
[DBG]  Agent 44 | Start (global): 689 -> (local): (2, 2) at time 32 | Goal (global): 751 -> (local): (4, 0) at time 36
[DBG]  Agent 45 | Start (global): 720 -> (local): (3, 1) at time 32 | Goal (global): 751 -> (local): (4, 0) at time 35
[DBG]  Agent 55 | Start (global): 623 -> (local): (0, 0) at time 32 | Goal (global): 691 -> (local): (2, 4) at time 38
[DBG]  Agent 100 | Start (global): 752 -> (local): (4, 1) at time 32 | Goal (global): 752 -> (local): (4, 1) at time 32
[DBG]  [REPAIR] SAT destroy operator called.
[DBG]  [REPAIR] SAT operator â€“ launching subproblem FOR OPTIMIZATION.
[DBG]  Creating local paths (sx, sy) in the submap for T_sync = 32
[DBG]    Agent 11 (global paths from T=32 to 40) has local path: (4,2) (4,1) (4,0) (3,0) (2,0) (2,1) (2,1) (1,1) (1,2) 
[DBG]    Agent 28 (global paths from T=32 to 34) has local path: (0,4) (1,4) (2,4) 
[DBG]    Agent 42 (global paths from T=32 to 33) has local path: (1,4) (2,4) 
[DBG]    Agent 44 (global paths from T=32 to 36) has local path: (2,2) (3,2) (4,2) (4,1) (4,0) 
[DBG]    Agent 45 (global paths from T=32 to 35) has local path: (3,1) (3,1) (4,1) (4,0) 
[DBG]    Agent 55 (global paths from T=32 to 38) has local path: (0,0) (1,0) (1,1) (1,2) (1,3) (1,4) (2,4) 
[DBG]    Agent 100 (global paths from T=32 to 32) has local path: (4,1) 
[DBG]  Checking input data for SAT solver:
[DBG]    - Number of agents to replan: 7
[DBG]  Agent 11 has the original local path length: 9 => Start (4,2), Goal (1,2)
[DBG]  Agent 28 has the original local path length: 3 => Start (0,4), Goal (2,4)
[DBG]  Agent 42 has the original local path length: 2 => Start (1,4), Goal (2,4)
[DBG]  Agent 44 has the original local path length: 5 => Start (2,2), Goal (4,0)
[DBG]  Agent 45 has the original local path length: 4 => Start (3,1), Goal (4,0)
[DBG]  Agent 55 has the original local path length: 7 => Start (0,0), Goal (2,4)
[DBG]  Agent 100 has the original local path length: 1 => Start (4,1), Goal (4,1)
[DBG]  Start position: (4, 2), (0, 4), (1, 4), (2, 2), (3, 1), (0, 0), (4, 1), 
[DBG]  Goal position: (1, 2), (2, 4), (2, 4), (4, 0), (4, 0), (2, 4), (4, 1), 
[DBG]  SAT instance and solver created.
Currently solving
Instance name: scen
Map name: map
Encoding used: disappear_at_goal
SAT solver used: Kissat
Optimizing function: sum of costs
Number of agents: 7
Mks LB: 7
SoC LB: 25
Delta: 0
Remaining time: 300000 [ms]

[STAT] Solver returned: -1
[DBG]  SAT solver failed.
[STAT] SAT solver failed to find a valid solution.
[DBG]  ====================
[DBG]  SAT destroy operator called.
[DBG]  SAT heuristic: 2
[DBG]  key_agent_id: 44
[DBG]  key_agent_id global path length: 41
[DBG]  Submap content (global positions):
[DBG]  279 280 281 282 283 
[DBG]  311 312 313 314 315 
[DBG]  343 344 345 346 347 
[DBG]  375 376 377 378 379 
[DBG]  407 408 409 410 411 
[DBG]  Map content with agents and obstacles:
[DBG]  . X A X . 
[DBG]  . . A . X 
[DBG]  . A A X . 
[DBG]  A A A A . 
[DBG]  . A . X . 
[DBG]  content of the map structure that we pass to the SAT solver:
[DBG]  1  -1  1  -1  1  
[DBG]  1  1  1  1  -1  
[DBG]  1  1  1  -1  1  
[DBG]  1  1  1  1  1  
[DBG]  1  1  1  -1  1  
[DBG]  Identifying agents in a submap for rescheduling (when key_agent is there at the time 11):
[DBG]  Agent 2 found intervals in the sub-map:
[DBG]   [10..14]
[DBG]  Agent 2 (interval in submap: [10..14]) contains time 11, added to replan.
[DBG]  Agent 31 found intervals in the sub-map:
[DBG]   [8..14]
[DBG]  Agent 31 (interval in submap: [8..14]) contains time 11, added to replan.
[DBG]  Agent 44 found intervals in the sub-map:
[DBG]   [9..14]
[DBG]  Agent 44 (interval in submap: [9..14]) contains time 11, added to replan.
[DBG]  Agent 45 found intervals in the sub-map:
[DBG]  
[DBG]  Agent 45 is not in sub-map at time 11 (intervals: 
[DBG]  )
[DBG]  Agent 52 found intervals in the sub-map:
[DBG]   [11..15]
[DBG]  Agent 52 (interval in submap: [11..15]) contains time 11, added to replan.
[DBG]  Agent 53 found intervals in the sub-map:
[DBG]  
[DBG]  Agent 53 is not in sub-map at time 11 (intervals: 
[DBG]  )
[DBG]  Agent 75 found intervals in the sub-map:
[DBG]   [4..13]
[DBG]  Agent 75 (interval in submap: [4..13]) contains time 11, added to replan.
[DBG]  Agent 92 found intervals in the sub-map:
[DBG]   [11..15]
[DBG]  Agent 92 (interval in submap: [11..15]) contains time 11, added to replan.
[DBG]  Agent 100 found intervals in the sub-map:
[DBG]   [7..12]
[DBG]  Agent 100 (interval in submap: [7..12]) contains time 11, added to replan.
[DBG]  Agent 104 found intervals in the sub-map:
[DBG]  
[DBG]  Agent 104 is not in sub-map at time 11 (intervals: 
[DBG]  )
[DBG]  Agent 144 found intervals in the sub-map:
[DBG]   [5..12]
[DBG]  Agent 144 (interval in submap: [5..12]) contains time 11, added to replan.
[DBG]  Agent 147 found intervals in the sub-map:
[DBG]  
[DBG]  Agent 147 is not in sub-map at time 11 (intervals: 
[DBG]  )
[DBG]  Agent 149 found intervals in the sub-map:
[DBG]   [9..15]
[DBG]  Agent 149 (interval in submap: [9..15]) contains time 11, added to replan.
[DBG]  Agent 2 | Start (global): 313 -> (local): (1, 2) at time 11 | Goal (global): 409 -> (local): (4, 2) at time 14
[DBG]  Agent 31 | Start (global): 344 -> (local): (2, 1) at time 11 | Goal (global): 281 -> (local): (0, 2) at time 14
[DBG]  Agent 44 | Start (global): 345 -> (local): (2, 2) at time 11 | Goal (global): 408 -> (local): (4, 1) at time 14
[DBG]  Agent 52 | Start (global): 281 -> (local): (0, 2) at time 11 | Goal (global): 409 -> (local): (4, 2) at time 15
[DBG]  Agent 75 | Start (global): 378 -> (local): (3, 3) at time 11 | Goal (global): 347 -> (local): (2, 4) at time 13
[DBG]  Agent 92 | Start (global): 408 -> (local): (4, 1) at time 11 | Goal (global): 311 -> (local): (1, 0) at time 15
[DBG]  Agent 100 | Start (global): 375 -> (local): (3, 0) at time 11 | Goal (global): 407 -> (local): (4, 0) at time 12
[DBG]  Agent 144 | Start (global): 377 -> (local): (3, 2) at time 11 | Goal (global): 409 -> (local): (4, 2) at time 12
[DBG]  Agent 149 | Start (global): 376 -> (local): (3, 1) at time 11 | Goal (global): 279 -> (local): (0, 0) at time 15
[DBG]  [REPAIR] SAT destroy operator called.
[DBG]  [REPAIR] SAT operator â€“ launching subproblem FOR OPTIMIZATION.
[DBG]  Creating local paths (sx, sy) in the submap for T_sync = 11
[DBG]    Agent 2 (global paths from T=11 to 14) has local path: (1,2) (2,2) (3,2) (4,2) 
[DBG]    Agent 31 (global paths from T=11 to 14) has local path: (2,1) (1,1) (1,2) (0,2) 
[DBG]    Agent 44 (global paths from T=11 to 14) has local path: (2,2) (3,2) (3,1) (4,1) 
[DBG]    Agent 52 (global paths from T=11 to 15) has local path: (0,2) (1,2) (2,2) (3,2) (4,2) 
[DBG]    Agent 75 (global paths from T=11 to 13) has local path: (3,3) (3,4) (2,4) 
[DBG]    Agent 92 (global paths from T=11 to 15) has local path: (4,1) (3,1) (3,0) (2,0) (1,0) 
[DBG]    Agent 100 (global paths from T=11 to 12) has local path: (3,0) (4,0) 
[DBG]    Agent 144 (global paths from T=11 to 12) has local path: (3,2) (4,2) 
[DBG]    Agent 149 (global paths from T=11 to 15) has local path: (3,1) (3,0) (2,0) (1,0) (0,0) 
[DBG]  Checking input data for SAT solver:
[DBG]    - Number of agents to replan: 9
[DBG]  Agent 2 has the original local path length: 4 => Start (1,2), Goal (4,2)
[DBG]  Agent 31 has the original local path length: 4 => Start (2,1), Goal (0,2)
[DBG]  Agent 44 has the original local path length: 4 => Start (2,2), Goal (4,1)
[DBG]  Agent 52 has the original local path length: 5 => Start (0,2), Goal (4,2)
[DBG]  Agent 75 has the original local path length: 3 => Start (3,3), Goal (2,4)
[DBG]  Agent 92 has the original local path length: 5 => Start (4,1), Goal (1,0)
[DBG]  Agent 100 has the original local path length: 2 => Start (3,0), Goal (4,0)
[DBG]  Agent 144 has the original local path length: 2 => Start (3,2), Goal (4,2)
[DBG]  Agent 149 has the original local path length: 5 => Start (3,1), Goal (0,0)
[DBG]  Start position: (1, 2), (2, 1), (2, 2), (0, 2), (3, 3), (4, 1), (3, 0), (3, 2), (3, 1), 
[DBG]  Goal position: (4, 2), (0, 2), (4, 1), (4, 2), (2, 4), (1, 0), (4, 0), (4, 2), (0, 0), 
[DBG]  SAT instance and solver created.
Currently solving
Instance name: scen
Map name: map
Encoding used: disappear_at_goal
SAT solver used: Kissat
Optimizing function: sum of costs
Number of agents: 9
Mks LB: 5
SoC LB: 34
Delta: 0
Remaining time: 300000 [ms]

Vertex conflict! Agents 0, 1, timestep 4, location 0
Vertex conflict! Agents 0, 2, timestep 4, location 0
Vertex conflict! Agents 0, 4, timestep 4, location 0
Vertex conflict! Agents 0, 6, timestep 4, location 0
Vertex conflict! Agents 0, 7, timestep 4, location 0
Vertex conflict! Agents 0, 8, timestep 4, location 0
Vertex conflict! Agents 1, 2, timestep 4, location 0
Vertex conflict! Agents 1, 4, timestep 4, location 0
Vertex conflict! Agents 1, 6, timestep 4, location 0
Vertex conflict! Agents 1, 7, timestep 4, location 0
Vertex conflict! Agents 1, 8, timestep 4, location 0
Vertex conflict! Agents 2, 4, timestep 4, location 0
Vertex conflict! Agents 2, 6, timestep 4, location 0
Vertex conflict! Agents 2, 7, timestep 4, location 0
Vertex conflict! Agents 2, 8, timestep 4, location 0
Vertex conflict! Agents 4, 6, timestep 3, location 0
Swapping conflict! Agents 4, 6, timestep 3, edge (0,0)
Vertex conflict! Agents 4, 6, timestep 4, location 0
Vertex conflict! Agents 4, 7, timestep 3, location 0
Swapping conflict! Agents 4, 7, timestep 3, edge (0,0)
Vertex conflict! Agents 4, 7, timestep 4, location 0
Vertex conflict! Agents 4, 8, timestep 4, location 0
Vertex conflict! Agents 6, 7, timestep 2, location 0
Swapping conflict! Agents 6, 7, timestep 2, edge (0,0)
Vertex conflict! Agents 6, 7, timestep 3, location 0
Swapping conflict! Agents 6, 7, timestep 3, edge (0,0)
Vertex conflict! Agents 6, 7, timestep 4, location 0
Vertex conflict! Agents 6, 8, timestep 4, location 0
Vertex conflict! Agents 7, 8, timestep 4, location 0
Found plan [agents = 9] [timesteps = 5]
Agent #0 : 5 9 13 18 0 
Agent #1 : 8 4 5 1 0 
Agent #2 : 9 13 18 17 0 
Agent #3 : 1 5 9 13 18 
Agent #4 : 14 15 10 0 0 
Agent #5 : 17 12 11 7 3 
Agent #6 : 11 16 0 0 0 
Agent #7 : 13 18 0 0 0 
Agent #8 : 12 11 7 3 0 

[STAT] Solver returned: 0
[DBG]  Agent (index) 2 | New local path (submap idx):
[DBG]  5 9 13 18 
[DBG]  Agent (index) 31 | New local path (submap idx):
[DBG]  8 4 5 1 
[DBG]  Agent (index) 44 | New local path (submap idx):
[DBG]  9 13 18 17 
[DBG]  Agent (index) 52 | New local path (submap idx):
[DBG]  1 5 9 13 18 
[DBG]  Agent (index) 75 | New local path (submap idx):
[DBG]  14 15 10 
[DBG]  Agent (index) 92 | New local path (submap idx):
[DBG]  17 12 11 7 3 
[DBG]  Agent (index) 100 | New local path (submap idx):
[DBG]  11 16 
[DBG]  Agent (index) 144 | New local path (submap idx):
[DBG]  13 18 
[DBG]  Agent (index) 149 | New local path (submap idx):
[DBG]  12 11 7 3 0 
[DBG]  Update the agent path 2 | Original local length: 4 | New local length: 4
[DBG]  agent 2 t=0 => decoded (sx,sy)=(1,2) => global_id=313
[DBG]  agent 2 t=1 => decoded (sx,sy)=(2,2) => global_id=345
[DBG]  agent 2 t=2 => decoded (sx,sy)=(3,2) => global_id=377
[DBG]  agent 2 t=3 => decoded (sx,sy)=(4,2) => global_id=409
[DBG]  Complete path of agent 2:
[DBG]    Original: 59 91 90 89 89 121 153 185 217 249 281 313 345 377 409 441 440 439 438 438 470 502 503 504 505 506 538 538 539 571 603 635 636 637 638 670 702 701 733 765 764 
[DBG]    New:     59 91 90 89 89 121 153 185 217 249 281 313 345 377 409 441 440 439 438 438 470 502 503 504 505 506 538 538 539 571 603 635 636 637 638 670 702 701 733 765 764 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 59 91 90 89 89 121 153 185 217 249 281 
[DBG]    Local path (in submap): 313 345 377 409 
[DBG]    Suffix (out of submap): 441 440 439 438 438 470 502 503 504 505 506 538 538 539 571 603 635 636 637 638 670 702 701 733 765 764 
[DBG]  Original agent path length 2 je: 41
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 0: 59, 91, 90, 89, 89, 121, 153, 185, 217, 249, 281, 313, 345, 377, 409, 441, 440, 439, 438, 438, 470, 502, 503, 504, 505, 506, 538, 538, 539, 571, 603, 635, 636, 637, 638, 670, 702, 701, 733, 765, 764, 
[DBG]  Path for agent 2 updated, resulting length: 41
[DBG]  Update the agent path 31 | Original local length: 4 | New local length: 4
[DBG]  agent 31 t=0 => decoded (sx,sy)=(2,1) => global_id=344
[DBG]  agent 31 t=1 => decoded (sx,sy)=(1,1) => global_id=312
[DBG]  agent 31 t=2 => decoded (sx,sy)=(1,2) => global_id=313
[DBG]  agent 31 t=3 => decoded (sx,sy)=(0,2) => global_id=281
[DBG]  Complete path of agent 31:
[DBG]    Original: 432 400 401 402 403 404 405 406 407 375 343 344 312 313 281 249 217 185 153 121 89 
[DBG]    New:     432 400 401 402 403 404 405 406 407 375 343 344 312 313 281 249 217 185 153 121 89 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 432 400 401 402 403 404 405 406 407 375 343 
[DBG]    Local path (in submap): 344 312 313 281 
[DBG]    Suffix (out of submap): 249 217 185 153 121 89 
[DBG]  Original agent path length 31 je: 21
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 1: 432, 400, 401, 402, 403, 404, 405, 406, 407, 375, 343, 344, 312, 313, 281, 249, 217, 185, 153, 121, 89, 
[DBG]  Path for agent 31 updated, resulting length: 21
[DBG]  Update the agent path 44 | Original local length: 4 | New local length: 4
[DBG]  agent 44 t=0 => decoded (sx,sy)=(2,2) => global_id=345
[DBG]  agent 44 t=1 => decoded (sx,sy)=(3,2) => global_id=377
[DBG]  agent 44 t=2 => decoded (sx,sy)=(4,2) => global_id=409
[DBG]  agent 44 t=3 => decoded (sx,sy)=(4,1) => global_id=408
[DBG]  Complete path of agent 44:
[DBG]    Original: 156 124 123 122 154 153 185 217 249 281 313 345 377 376 408 440 439 438 437 469 468 467 499 499 498 530 529 561 561 593 625 657 689 721 753 752 751 783 815 847 848 
[DBG]    New:     156 124 123 122 154 153 185 217 249 281 313 345 377 409 408 440 439 438 437 469 468 467 499 499 498 530 529 561 561 593 625 657 689 721 753 752 751 783 815 847 848 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 156 124 123 122 154 153 185 217 249 281 313 
[DBG]    Local path (in submap): 345 377 409 408 
[DBG]    Suffix (out of submap): 440 439 438 437 469 468 467 499 499 498 530 529 561 561 593 625 657 689 721 753 752 751 783 815 847 848 
[DBG]  Original agent path length 44 je: 41
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 2: 156, 124, 123, 122, 154, 153, 185, 217, 249, 281, 313, 345, 377, 409, 408, 440, 439, 438, 437, 469, 468, 467, 499, 499, 498, 530, 529, 561, 561, 593, 625, 657, 689, 721, 753, 752, 751, 783, 815, 847, 848, 
[DBG]  Path for agent 44 updated, resulting length: 41
[DBG]  Update the agent path 52 | Original local length: 5 | New local length: 5
[DBG]  agent 52 t=0 => decoded (sx,sy)=(0,2) => global_id=281
[DBG]  agent 52 t=1 => decoded (sx,sy)=(1,2) => global_id=313
[DBG]  agent 52 t=2 => decoded (sx,sy)=(2,2) => global_id=345
[DBG]  agent 52 t=3 => decoded (sx,sy)=(3,2) => global_id=377
[DBG]  agent 52 t=4 => decoded (sx,sy)=(4,2) => global_id=409
[DBG]  Complete path of agent 52:
[DBG]    Original: 28 27 59 91 123 122 121 153 185 217 249 281 313 345 377 409 441 
[DBG]    New:     28 27 59 91 123 122 121 153 185 217 249 281 313 345 377 409 441 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 28 27 59 91 123 122 121 153 185 217 249 
[DBG]    Local path (in submap): 281 313 345 377 409 
[DBG]    Suffix (out of submap): 441 
[DBG]  Original agent path length 52 je: 17
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 3: 28, 27, 59, 91, 123, 122, 121, 153, 185, 217, 249, 281, 313, 345, 377, 409, 441, 
[DBG]  Path for agent 52 updated, resulting length: 17
[DBG]  Update the agent path 75 | Original local length: 3 | New local length: 3
[DBG]  agent 75 t=0 => decoded (sx,sy)=(3,3) => global_id=378
[DBG]  agent 75 t=1 => decoded (sx,sy)=(3,4) => global_id=379
[DBG]  agent 75 t=2 => decoded (sx,sy)=(2,4) => global_id=347
[DBG]  Complete path of agent 75:
[DBG]    Original: 340 341 309 310 311 312 313 345 345 345 377 378 379 347 348 349 350 318 286 
[DBG]    New:     340 341 309 310 311 312 313 345 345 345 377 378 379 347 348 349 350 318 286 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 340 341 309 310 311 312 313 345 345 345 377 
[DBG]    Local path (in submap): 378 379 347 
[DBG]    Suffix (out of submap): 348 349 350 318 286 
[DBG]  Original agent path length 75 je: 19
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 4: 340, 341, 309, 310, 311, 312, 313, 345, 345, 345, 377, 378, 379, 347, 348, 349, 350, 318, 286, 
[DBG]  Path for agent 75 updated, resulting length: 19
[DBG]  Update the agent path 92 | Original local length: 5 | New local length: 5
[DBG]  agent 92 t=0 => decoded (sx,sy)=(4,1) => global_id=408
[DBG]  agent 92 t=1 => decoded (sx,sy)=(3,1) => global_id=376
[DBG]  agent 92 t=2 => decoded (sx,sy)=(3,0) => global_id=375
[DBG]  agent 92 t=3 => decoded (sx,sy)=(2,0) => global_id=343
[DBG]  agent 92 t=4 => decoded (sx,sy)=(1,0) => global_id=311
[DBG]  Complete path of agent 92:
[DBG]    Original: 667 635 603 602 570 538 506 505 504 472 440 408 376 375 343 311 310 278 277 276 275 243 242 241 209 208 207 206 205 204 172 140 139 138 137 136 135 134 133 132 131 99 98 
[DBG]    New:     667 635 603 602 570 538 506 505 504 472 440 408 376 375 343 311 310 278 277 276 275 243 242 241 209 208 207 206 205 204 172 140 139 138 137 136 135 134 133 132 131 99 98 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 667 635 603 602 570 538 506 505 504 472 440 
[DBG]    Local path (in submap): 408 376 375 343 311 
[DBG]    Suffix (out of submap): 310 278 277 276 275 243 242 241 209 208 207 206 205 204 172 140 139 138 137 136 135 134 133 132 131 99 98 
[DBG]  Original agent path length 92 je: 43
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 5: 667, 635, 603, 602, 570, 538, 506, 505, 504, 472, 440, 408, 376, 375, 343, 311, 310, 278, 277, 276, 275, 243, 242, 241, 209, 208, 207, 206, 205, 204, 172, 140, 139, 138, 137, 136, 135, 134, 133, 132, 131, 99, 98, 
[DBG]  Path for agent 92 updated, resulting length: 43
[DBG]  Update the agent path 100 | Original local length: 2 | New local length: 2
[DBG]  agent 100 t=0 => decoded (sx,sy)=(3,0) => global_id=375
[DBG]  agent 100 t=1 => decoded (sx,sy)=(4,0) => global_id=407
[DBG]  Complete path of agent 100:
[DBG]    Original: 287 319 351 350 349 381 380 379 378 377 376 375 407 406 438 437 469 468 468 467 466 466 498 530 529 561 593 625 657 656 688 720 752 784 784 783 815 847 879 878 877 909 941 973 1005 1004 1003 
[DBG]    New:     287 319 351 350 349 381 380 379 378 377 376 375 407 406 438 437 469 468 468 467 466 466 498 530 529 561 593 625 657 656 688 720 752 784 784 783 815 847 879 878 877 909 941 973 1005 1004 1003 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 287 319 351 350 349 381 380 379 378 377 376 
[DBG]    Local path (in submap): 375 407 
[DBG]    Suffix (out of submap): 406 438 437 469 468 468 467 466 466 498 530 529 561 593 625 657 656 688 720 752 784 784 783 815 847 879 878 877 909 941 973 1005 1004 1003 
[DBG]  Original agent path length 100 je: 47
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 6: 287, 319, 351, 350, 349, 381, 380, 379, 378, 377, 376, 375, 407, 406, 438, 437, 469, 468, 468, 467, 466, 466, 498, 530, 529, 561, 593, 625, 657, 656, 688, 720, 752, 784, 784, 783, 815, 847, 879, 878, 877, 909, 941, 973, 1005, 1004, 1003, 
[DBG]  Path for agent 100 updated, resulting length: 47
[DBG]  Update the agent path 144 | Original local length: 2 | New local length: 2
[DBG]  agent 144 t=0 => decoded (sx,sy)=(3,2) => global_id=377
[DBG]  agent 144 t=1 => decoded (sx,sy)=(4,2) => global_id=409
[DBG]  Complete path of agent 144:
[DBG]    Original: 121 153 185 217 249 281 281 313 313 313 345 377 409 441 473 505 506 507 539 571 603 602 601 600 599 631 
[DBG]    New:     121 153 185 217 249 281 281 313 313 313 345 377 409 441 473 505 506 507 539 571 603 602 601 600 599 631 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 121 153 185 217 249 281 281 313 313 313 345 
[DBG]    Local path (in submap): 377 409 
[DBG]    Suffix (out of submap): 441 473 505 506 507 539 571 603 602 601 600 599 631 
[DBG]  Original agent path length 144 je: 26
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 7: 121, 153, 185, 217, 249, 281, 281, 313, 313, 313, 345, 377, 409, 441, 473, 505, 506, 507, 539, 571, 603, 602, 601, 600, 599, 631, 
[DBG]  Path for agent 144 updated, resulting length: 26
[DBG]  Update the agent path 149 | Original local length: 5 | New local length: 5
[DBG]  agent 149 t=0 => decoded (sx,sy)=(3,1) => global_id=376
[DBG]  agent 149 t=1 => decoded (sx,sy)=(3,0) => global_id=375
[DBG]  agent 149 t=2 => decoded (sx,sy)=(2,0) => global_id=343
[DBG]  agent 149 t=3 => decoded (sx,sy)=(1,0) => global_id=311
[DBG]  agent 149 t=4 => decoded (sx,sy)=(0,0) => global_id=279
[DBG]  Complete path of agent 149:
[DBG]    Original: 603 602 570 538 506 505 473 472 440 408 408 376 375 343 311 279 247 215 183 151 119 118 117 85 84 83 82 50 49 48 47 
[DBG]    New:     603 602 570 538 506 505 473 472 440 408 408 376 375 343 311 279 247 215 183 151 119 118 117 85 84 83 82 50 49 48 47 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 603 602 570 538 506 505 473 472 440 408 408 
[DBG]    Local path (in submap): 376 375 343 311 279 
[DBG]    Suffix (out of submap): 247 215 183 151 119 118 117 85 84 83 82 50 49 48 47 
[DBG]  Original agent path length 149 je: 31
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 8: 603, 602, 570, 538, 506, 505, 473, 472, 440, 408, 408, 376, 375, 343, 311, 279, 247, 215, 183, 151, 119, 118, 117, 85, 84, 83, 82, 50, 49, 48, 47, 
[DBG]  Path for agent 149 updated, resulting length: 31
[DBG]  Paths successfully updated.
[DBG]  (LNS.cpp) New path for agent 2: 
[DBG]  59, 91, 90, 89, 89, 121, 153, 185, 217, 249, 281, 313, 345, 377, 409, 441, 440, 439, 438, 438, 470, 502, 503, 504, 505, 506, 538, 538, 539, 571, 603, 635, 636, 637, 638, 670, 702, 701, 733, 765, 764, 
[DBG]  (LNS.cpp) New path for agent 31: 
[DBG]  432, 400, 401, 402, 403, 404, 405, 406, 407, 375, 343, 344, 312, 313, 281, 249, 217, 185, 153, 121, 89, 
[DBG]  (LNS.cpp) New path for agent 44: 
[DBG]  156, 124, 123, 122, 154, 153, 185, 217, 249, 281, 313, 345, 377, 409, 408, 440, 439, 438, 437, 469, 468, 467, 499, 499, 498, 530, 529, 561, 561, 593, 625, 657, 689, 721, 753, 752, 751, 783, 815, 847, 848, 
[DBG]  (LNS.cpp) New path for agent 52: 
[DBG]  28, 27, 59, 91, 123, 122, 121, 153, 185, 217, 249, 281, 313, 345, 377, 409, 441, 
[DBG]  (LNS.cpp) New path for agent 75: 
[DBG]  340, 341, 309, 310, 311, 312, 313, 345, 345, 345, 377, 378, 379, 347, 348, 349, 350, 318, 286, 
[DBG]  (LNS.cpp) New path for agent 92: 
[DBG]  667, 635, 603, 602, 570, 538, 506, 505, 504, 472, 440, 408, 376, 375, 343, 311, 310, 278, 277, 276, 275, 243, 242, 241, 209, 208, 207, 206, 205, 204, 172, 140, 139, 138, 137, 136, 135, 134, 133, 132, 131, 99, 98, 
[DBG]  (LNS.cpp) New path for agent 100: 
[DBG]  287, 319, 351, 350, 349, 381, 380, 379, 378, 377, 376, 375, 407, 406, 438, 437, 469, 468, 468, 467, 466, 466, 498, 530, 529, 561, 593, 625, 657, 656, 688, 720, 752, 784, 784, 783, 815, 847, 879, 878, 877, 909, 941, 973, 1005, 1004, 1003, 
[DBG]  (LNS.cpp) New path for agent 144: 
[DBG]  121, 153, 185, 217, 249, 281, 281, 313, 313, 313, 345, 377, 409, 441, 473, 505, 506, 507, 539, 571, 603, 602, 601, 600, 599, 631, 
[DBG]  (LNS.cpp) New path for agent 149: 
[DBG]  603, 602, 570, 538, 506, 505, 473, 472, 440, 408, 408, 376, 375, 343, 311, 279, 247, 215, 183, 151, 119, 118, 117, 85, 84, 83, 82, 50, 49, 48, 47, 
[DBG]  component_weights = {0.348687, 0.117124, 0.122482, 0.411707}
[DBG]  opSuccess value: 1
[STAT] neighbor.sum_of_costs before recomputation: 277
[STAT] neighbor.old_sum_of_costs before recomputation: 277
[STAT] sum_of_costs before recomputation: 4277
[DBG]  Validate solution immediately after SAT success.
[DBG]  No problems after SAT replan.
[DBG]  Recomputing sum_of_cost by dividing neighbor.sum_of_costs and neighbor.old_sum_of_costs
[STAT] sum_of_costs after recomputation: 4277
[STAT] Iteration 117
[DBG]  Using SAT operator (destroy+repair SAT).
[DBG]  ====================
[DBG]  SAT destroy operator called.
[DBG]  SAT heuristic: 2
[DBG]  key_agent_id: 53
[DBG]  key_agent_id global path length: 34
[DBG]  Submap content (global positions):
[DBG]  243 244 245 246 247 
[DBG]  275 276 277 278 279 
[DBG]  307 308 309 310 311 
[DBG]  339 340 341 342 343 
[DBG]  371 372 373 374 375 
[DBG]  Map content with agents and obstacles:
[DBG]  . A X X A 
[DBG]  . . . . . 
[DBG]  X . A . . 
[DBG]  . . A X . 
[DBG]  . X . X . 
[DBG]  content of the map structure that we pass to the SAT solver:
[DBG]  1  1  -1  -1  1  
[DBG]  1  1  1  1  1  
[DBG]  -1  1  1  1  1  
[DBG]  1  1  1  -1  1  
[DBG]  1  -1  1  -1  1  
[DBG]  Identifying agents in a submap for rescheduling (when key_agent is there at the time 8):
[DBG]  Agent 5 found intervals in the sub-map:
[DBG]   [4..10]
[DBG]  Agent 5 (interval in submap: [4..10]) contains time 8, added to replan.
[DBG]  Agent 31 found intervals in the sub-map:
[DBG]   [9..10]
[DBG]  Agent 31 is not in sub-map at time 8 (intervals: 
[DBG]  [9..10] )
[DBG]  Agent 43 found intervals in the sub-map:
[DBG]  
[DBG]  Agent 43 is not in sub-map at time 8 (intervals: 
[DBG]  )
[DBG]  Agent 45 found intervals in the sub-map:
[DBG]   [8..10]
[DBG]  Agent 45 (interval in submap: [8..10]) contains time 8, added to replan.
[DBG]  Agent 53 found intervals in the sub-map:
[DBG]   [5..11]
[DBG]  Agent 53 (interval in submap: [5..11]) contains time 8, added to replan.
[DBG]  Agent 54 found intervals in the sub-map:
[DBG]  
[DBG]  Agent 54 is not in sub-map at time 8 (intervals: 
[DBG]  )
[DBG]  Agent 75 found intervals in the sub-map:
[DBG]   [0..4]
[DBG]  Agent 75 is not in sub-map at time 8 (intervals: 
[DBG]  [0..4] )
[DBG]  Agent 136 found intervals in the sub-map:
[DBG]   [3..8]
[DBG]  Agent 136 (interval in submap: [3..8]) contains time 8, added to replan.
[DBG]  Agent 5 | Start (global): 341 -> (local): (3, 2) at time 8 | Goal (global): 339 -> (local): (3, 0) at time 10
[DBG]  Agent 45 | Start (global): 244 -> (local): (0, 1) at time 8 | Goal (global): 275 -> (local): (1, 0) at time 10
[DBG]  Agent 53 | Start (global): 309 -> (local): (2, 2) at time 8 | Goal (global): 373 -> (local): (4, 2) at time 11
[DBG]  Agent 136 | Start (global): 247 -> (local): (0, 4) at time 8 | Goal (global): 247 -> (local): (0, 4) at time 8
[DBG]  [REPAIR] SAT destroy operator called.
[DBG]  [REPAIR] SAT operator â€“ launching subproblem FOR OPTIMIZATION.
[DBG]  Creating local paths (sx, sy) in the submap for T_sync = 8
[DBG]    Agent 5 (global paths from T=8 to 10) has local path: (3,2) (3,1) (3,0) 
[DBG]    Agent 45 (global paths from T=8 to 10) has local path: (0,1) (0,0) (1,0) 
[DBG]    Agent 53 (global paths from T=8 to 11) has local path: (2,2) (3,2) (4,2) (4,2) 
[DBG]    Agent 136 (global paths from T=8 to 8) has local path: (0,4) 
[DBG]  Checking input data for SAT solver:
[DBG]    - Number of agents to replan: 4
[DBG]  Agent 5 has the original local path length: 3 => Start (3,2), Goal (3,0)
[DBG]  Agent 45 has the original local path length: 3 => Start (0,1), Goal (1,0)
[DBG]  Agent 53 has the original local path length: 4 => Start (2,2), Goal (4,2)
[DBG]  Agent 136 has the original local path length: 1 => Start (0,4), Goal (0,4)
[DBG]  Start position: (3, 2), (0, 1), (2, 2), (0, 4), 
[DBG]  Goal position: (3, 0), (1, 0), (4, 2), (0, 4), 
[DBG]  SAT instance and solver created.
Currently solving
Instance name: scen
Map name: map
Encoding used: disappear_at_goal
SAT solver used: Kissat
Optimizing function: sum of costs
Number of agents: 4
Mks LB: 3
SoC LB: 10
Delta: 0
Remaining time: 300000 [ms]

Found plan [agents = 4] [timesteps = 3]
Agent #0 : 14 13 12 
Agent #1 : 1 4 3 
Agent #2 : 9 14 17 
Agent #3 : 2 0 0 

[STAT] Solver returned: 0
[DBG]  Agent (index) 5 | New local path (submap idx):
[DBG]  14 13 12 
[DBG]  Agent (index) 45 | New local path (submap idx):
[DBG]  1 4 3 
[DBG]  Agent (index) 53 | New local path (submap idx):
[DBG]  9 14 17 
[DBG]  Agent (index) 136 | New local path (submap idx):
[DBG]  2 
[DBG]  Update the agent path 5 | Original local length: 3 | New local length: 3
[DBG]  agent 5 t=0 => decoded (sx,sy)=(3,2) => global_id=341
[DBG]  agent 5 t=1 => decoded (sx,sy)=(3,1) => global_id=340
[DBG]  agent 5 t=2 => decoded (sx,sy)=(3,0) => global_id=339
[DBG]  Complete path of agent 5:
[DBG]    Original: 281 313 312 344 343 311 310 309 341 340 339 338 337 336 304 303 302 270 269 268 267 266 298 297 296 295 294 294 293 261 
[DBG]    New:     281 313 312 344 343 311 310 309 341 340 339 338 337 336 304 303 302 270 269 268 267 266 298 297 296 295 294 294 293 261 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 281 313 312 344 343 311 310 309 
[DBG]    Local path (in submap): 341 340 339 
[DBG]    Suffix (out of submap): 338 337 336 304 303 302 270 269 268 267 266 298 297 296 295 294 294 293 261 
[DBG]  Original agent path length 5 je: 30
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 0: 281, 313, 312, 344, 343, 311, 310, 309, 341, 340, 339, 338, 337, 336, 304, 303, 302, 270, 269, 268, 267, 266, 298, 297, 296, 295, 294, 294, 293, 261, 
[DBG]  Path for agent 5 updated, resulting length: 30
[DBG]  Update the agent path 45 | Original local length: 3 | New local length: 3
[DBG]  agent 45 t=0 => decoded (sx,sy)=(0,1) => global_id=244
[DBG]  agent 45 t=1 => decoded (sx,sy)=(1,1) => global_id=276
[DBG]  agent 45 t=2 => decoded (sx,sy)=(1,0) => global_id=275
[DBG]  Complete path of agent 45:
[DBG]    Original: 153 185 184 216 215 214 213 212 244 243 275 274 306 338 337 369 401 400 401 433 465 465 466 498 530 529 561 593 625 657 689 721 720 720 752 751 783 815 847 848 849 
[DBG]    New:     153 185 184 216 215 214 213 212 244 276 275 274 306 338 337 369 401 400 401 433 465 465 466 498 530 529 561 593 625 657 689 721 720 720 752 751 783 815 847 848 849 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 153 185 184 216 215 214 213 212 
[DBG]    Local path (in submap): 244 276 275 
[DBG]    Suffix (out of submap): 274 306 338 337 369 401 400 401 433 465 465 466 498 530 529 561 593 625 657 689 721 720 720 752 751 783 815 847 848 849 
[DBG]  Original agent path length 45 je: 41
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 1: 153, 185, 184, 216, 215, 214, 213, 212, 244, 276, 275, 274, 306, 338, 337, 369, 401, 400, 401, 433, 465, 465, 466, 498, 530, 529, 561, 593, 625, 657, 689, 721, 720, 720, 752, 751, 783, 815, 847, 848, 849, 
[DBG]  Path for agent 45 updated, resulting length: 41
[DBG]  Update the agent path 53 | Original local length: 4 | New local length: 3
[DBG]  agent 53 t=0 => decoded (sx,sy)=(2,2) => global_id=309
[DBG]  agent 53 t=1 => decoded (sx,sy)=(3,2) => global_id=341
[DBG]  agent 53 t=2 => decoded (sx,sy)=(4,2) => global_id=373
[DBG]  Complete path of agent 53:
[DBG]    Original: 84 116 148 180 212 244 276 277 309 341 373 373 405 404 403 435 467 466 498 530 529 561 593 625 657 658 659 660 692 724 756 788 820 821 
[DBG]    New:     84 116 148 180 212 244 276 277 309 341 373 405 404 403 435 467 466 498 530 529 561 593 625 657 658 659 660 692 724 756 788 820 821 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 84 116 148 180 212 244 276 277 
[DBG]    Local path (in submap): 309 341 373 405 
[DBG]    Suffix (out of submap): 404 403 435 467 466 498 530 529 561 593 625 657 658 659 660 692 724 756 788 820 821 
[DBG]  Original agent path length 53 je: 34
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 2: 84, 116, 148, 180, 212, 244, 276, 277, 309, 341, 373, 405, 404, 403, 435, 467, 466, 498, 530, 529, 561, 593, 625, 657, 658, 659, 660, 692, 724, 756, 788, 820, 821, 
[DBG]  Path for agent 53 updated, resulting length: 33
[DBG]  Update the agent path 136 | Original local length: 1 | New local length: 1
[DBG]  agent 136 t=0 => decoded (sx,sy)=(0,4) => global_id=247
[DBG]  Complete path of agent 136:
[DBG]    Original: 440 439 407 375 375 343 311 279 247 215 216 184 
[DBG]    New:     440 439 407 375 375 343 311 279 247 215 216 184 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 440 439 407 375 375 343 311 279 
[DBG]    Local path (in submap): 247 
[DBG]    Suffix (out of submap): 215 216 184 
[DBG]  Original agent path length 136 je: 12
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 3: 440, 439, 407, 375, 375, 343, 311, 279, 247, 215, 216, 184, 
[DBG]  Path for agent 136 updated, resulting length: 12
[DBG]  Paths successfully updated.
[DBG]  (LNS.cpp) New path for agent 5: 
[DBG]  281, 313, 312, 344, 343, 311, 310, 309, 341, 340, 339, 338, 337, 336, 304, 303, 302, 270, 269, 268, 267, 266, 298, 297, 296, 295, 294, 294, 293, 261, 
[DBG]  (LNS.cpp) New path for agent 45: 
[DBG]  153, 185, 184, 216, 215, 214, 213, 212, 244, 276, 275, 274, 306, 338, 337, 369, 401, 400, 401, 433, 465, 465, 466, 498, 530, 529, 561, 593, 625, 657, 689, 721, 720, 720, 752, 751, 783, 815, 847, 848, 849, 
[DBG]  (LNS.cpp) New path for agent 53: 
[DBG]  84, 116, 148, 180, 212, 244, 276, 277, 309, 341, 373, 405, 404, 403, 435, 467, 466, 498, 530, 529, 561, 593, 625, 657, 658, 659, 660, 692, 724, 756, 788, 820, 821, 
[DBG]  (LNS.cpp) New path for agent 136: 
[DBG]  440, 439, 407, 375, 375, 343, 311, 279, 247, 215, 216, 184, 
[DBG]  component_weights = {0.345769, 0.116143, 0.121457, 0.416631}
[DBG]  opSuccess value: 1
[STAT] neighbor.sum_of_costs before recomputation: 112
[STAT] neighbor.old_sum_of_costs before recomputation: 113
[STAT] sum_of_costs before recomputation: 4277
[DBG]  Validate solution immediately after SAT success.
[WARNING] Problem after SAT: Vertex conflict between agents 53 and 3 at location 692 at timestep 27
[DBG]  Attempting immediate repair via init_lns because problem occurred after SAT (should be applied only for conflicts...).
[DBG]  Passing 150 agents to init_lns (skip=true).
[DBG]  path_table contents for selected agents (neighbor.agents):
[DBG]    Agent 5 => controlling path length=30
[DBG]    Agent 45 => controlling path length=41
[DBG]    Agent 53 => controlling path length=33
[DBG]    Agent 136 => controlling path length=12
[DBG]  hodnota skip_initial_solution=1
[DBG]  We skip initialSolution => call buildCollisionData()
[DBG]  buildCollisionData() called â€“ skip_initial_solution case.
[DBG]  Agents.size()=150, collision_graph.size()=150
[DBG]  agent 3 => updateCollidingPairs => foundCollision
[DBG]  agent 53 => updateCollidingPairs => foundCollision
[DBG]  agent 57 => updateCollidingPairs => foundCollision
[DBG]  agent 148 => updateCollidingPairs => foundCollision
[DBG]  Conflicting agent pairs:
[DBG]  agent 3 is in conflict with agent 53
[DBG]  agent 53 is in conflict with agent 57
[DBG]  agent 53 is in conflict with agent 148
[DBG]  buildCollisionData() => sum_of_costs=4276, num_of_colliding_pairs=3
[DBG]  buildCollisionData done => sum_of_costs=4276, num_of_colliding_pairs=3
[DBG]  sum_of_cost hodnota: 4276
[DBG]  After skip/init build => iteration_stats.back(): sum_of_costs=4276, collisions=3
[DEBUG] Using default neighbor generation strategy for conflicts: 2
	InitLNS(PP): runtime = 0.00480542, iterations = 2, colliding pairs = 0, initial colliding pairs = 3, solution cost = 4274, initial solution cost = 4276, failed iterations = 0
[DBG]  init_lns->sum_of_costs after init_lns->run: 4274
[DBG]  sum_of_costs after assignment from init_lns->run: 4274
[DBG]  Recomputing sum_of_cost by dividing neighbor.sum_of_costs and neighbor.old_sum_of_costs
[STAT] sum_of_costs after recomputation: 4274
[STAT] Iteration 118
[DBG]  Using SAT operator (destroy+repair SAT).
[DBG]  ====================
[DBG]  SAT destroy operator called.
[DBG]  SAT heuristic: 2
[DBG]  key_agent_id: 40
[DBG]  key_agent_id global path length: 19
[DBG]  Submap content (global positions):
[DBG]  7 8 9 10 11 
[DBG]  39 40 41 42 43 
[DBG]  71 72 73 74 75 
[DBG]  103 104 105 106 107 
[DBG]  135 136 137 138 139 
[DBG]  Map content with agents and obstacles:
[DBG]  . . . X . 
[DBG]  X . . . . 
[DBG]  . . A . . 
[DBG]  X A . . . 
[DBG]  . . . . . 
[DBG]  content of the map structure that we pass to the SAT solver:
[DBG]  1  1  1  -1  1  
[DBG]  -1  1  1  1  1  
[DBG]  1  1  1  1  1  
[DBG]  -1  1  1  1  1  
[DBG]  1  1  1  1  1  
[DBG]  Identifying agents in a submap for rescheduling (when key_agent is there at the time 15):
[DBG]  Agent 40 found intervals in the sub-map:
[DBG]   [13..17]
[DBG]  Agent 40 (interval in submap: [13..17]) contains time 15, added to replan.
[DBG]  Agent 55 found intervals in the sub-map:
[DBG]  
[DBG]  Agent 55 is not in sub-map at time 15 (intervals: 
[DBG]  )
[DBG]  Agent 127 found intervals in the sub-map:
[DBG]   [14..17]
[DBG]  Agent 127 (interval in submap: [14..17]) contains time 15, added to replan.
[DBG]  Agent 40 | Start (global): 73 -> (local): (2, 2) at time 15 | Goal (global): 71 -> (local): (2, 0) at time 17
[DBG]  Agent 127 | Start (global): 104 -> (local): (3, 1) at time 15 | Goal (global): 73 -> (local): (2, 2) at time 17
[DBG]  [REPAIR] SAT destroy operator called.
[DBG]  [REPAIR] SAT operator â€“ launching subproblem FOR OPTIMIZATION.
[DBG]  Creating local paths (sx, sy) in the submap for T_sync = 15
[DBG]    Agent 40 (global paths from T=15 to 17) has local path: (2,2) (2,1) (2,0) 
[DBG]    Agent 127 (global paths from T=15 to 17) has local path: (3,1) (3,2) (2,2) 
[DBG]  Checking input data for SAT solver:
[DBG]    - Number of agents to replan: 2
[DBG]  Agent 40 has the original local path length: 3 => Start (2,2), Goal (2,0)
[DBG]  Agent 127 has the original local path length: 3 => Start (3,1), Goal (2,2)
[DBG]  Start position: (2, 2), (3, 1), 
[DBG]  Goal position: (2, 0), (2, 2), 
[DBG]  SAT instance and solver created.
Currently solving
Instance name: scen
Map name: map
Encoding used: disappear_at_goal
SAT solver used: Kissat
Optimizing function: sum of costs
Number of agents: 2
Mks LB: 3
SoC LB: 6
Delta: 0
Remaining time: 300000 [ms]

Found plan [agents = 2] [timesteps = 3]
Agent #0 : 10 9 8 
Agent #1 : 13 14 10 

[STAT] Solver returned: 0
[DBG]  Agent (index) 40 | New local path (submap idx):
[DBG]  10 9 8 
[DBG]  Agent (index) 127 | New local path (submap idx):
[DBG]  13 14 10 
[DBG]  Update the agent path 40 | Original local length: 3 | New local length: 3
[DBG]  agent 40 t=0 => decoded (sx,sy)=(2,2) => global_id=73
[DBG]  agent 40 t=1 => decoded (sx,sy)=(2,1) => global_id=72
[DBG]  agent 40 t=2 => decoded (sx,sy)=(2,0) => global_id=71
[DBG]  Complete path of agent 40:
[DBG]    Original: 117 85 84 83 82 50 49 48 47 46 45 44 76 75 74 73 72 71 70 
[DBG]    New:     117 85 84 83 82 50 49 48 47 46 45 44 76 75 74 73 72 71 70 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 117 85 84 83 82 50 49 48 47 46 45 44 76 75 74 
[DBG]    Local path (in submap): 73 72 71 
[DBG]    Suffix (out of submap): 70 
[DBG]  Original agent path length 40 je: 19
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 0: 117, 85, 84, 83, 82, 50, 49, 48, 47, 46, 45, 44, 76, 75, 74, 73, 72, 71, 70, 
[DBG]  Path for agent 40 updated, resulting length: 19
[DBG]  Update the agent path 127 | Original local length: 3 | New local length: 3
[DBG]  agent 127 t=0 => decoded (sx,sy)=(3,1) => global_id=104
[DBG]  agent 127 t=1 => decoded (sx,sy)=(3,2) => global_id=105
[DBG]  agent 127 t=2 => decoded (sx,sy)=(2,2) => global_id=73
[DBG]  Complete path of agent 127:
[DBG]    Original: 428 427 426 425 393 361 360 328 328 296 264 232 200 168 136 104 105 73 
[DBG]    New:     428 427 426 425 393 361 360 328 328 296 264 232 200 168 136 104 105 73 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 428 427 426 425 393 361 360 328 328 296 264 232 200 168 136 
[DBG]    Local path (in submap): 104 105 73 
[DBG]    Suffix (out of submap): 
[DBG]  Original agent path length 127 je: 18
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 1: 428, 427, 426, 425, 393, 361, 360, 328, 328, 296, 264, 232, 200, 168, 136, 104, 105, 73, 
[DBG]  Path for agent 127 updated, resulting length: 18
[DBG]  Paths successfully updated.
[DBG]  (LNS.cpp) New path for agent 40: 
[DBG]  117, 85, 84, 83, 82, 50, 49, 48, 47, 46, 45, 44, 76, 75, 74, 73, 72, 71, 70, 
[DBG]  (LNS.cpp) New path for agent 127: 
[DBG]  428, 427, 426, 425, 393, 361, 360, 328, 328, 296, 264, 232, 200, 168, 136, 104, 105, 73, 
[DBG]  component_weights = {0.350353, 0.11533, 0.120606, 0.413711}
[DBG]  opSuccess value: 1
[STAT] neighbor.sum_of_costs before recomputation: 35
[STAT] neighbor.old_sum_of_costs before recomputation: 35
[STAT] sum_of_costs before recomputation: 4274
[DBG]  Validate solution immediately after SAT success.
[DBG]  No problems after SAT replan.
[DBG]  Recomputing sum_of_cost by dividing neighbor.sum_of_costs and neighbor.old_sum_of_costs
[STAT] sum_of_costs after recomputation: 4274
[STAT] Iteration 119
[DBG]  Using SAT operator (destroy+repair SAT).
[DBG]  ====================
[DBG]  SAT destroy operator called.
[DBG]  SAT heuristic: 2
[DBG]  key_agent_id: 95
[DBG]  key_agent_id global path length: 7
[DBG]  Submap content (global positions):
[DBG]  609 610 611 612 613 
[DBG]  641 642 643 644 645 
[DBG]  673 674 675 676 677 
[DBG]  705 706 707 708 709 
[DBG]  737 738 739 740 741 
[DBG]  Map content with agents and obstacles:
[DBG]  . . . . . 
[DBG]  X . X . . 
[DBG]  . . A . . 
[DBG]  . X . X . 
[DBG]  . . . . . 
[DBG]  content of the map structure that we pass to the SAT solver:
[DBG]  1  1  1  1  1  
[DBG]  -1  1  -1  1  1  
[DBG]  1  1  1  1  1  
[DBG]  1  -1  1  -1  1  
[DBG]  1  1  1  1  1  
[DBG]  Identifying agents in a submap for rescheduling (when key_agent is there at the time 3):
[DBG]  Agent 67 found intervals in the sub-map:
[DBG]  
[DBG]  Agent 67 is not in sub-map at time 3 (intervals: 
[DBG]  )
[DBG]  Agent 95 found intervals in the sub-map:
[DBG]   [1..6]
[DBG]  Agent 95 (interval in submap: [1..6]) contains time 3, added to replan.
[DBG]  Agent 95 | Start (global): 675 -> (local): (2, 2) at time 3 | Goal (global): 705 -> (local): (3, 0) at time 6
[DBG]  [REPAIR] SAT destroy operator called.
[DBG]  [REPAIR] SAT operator â€“ launching subproblem FOR OPTIMIZATION.
[DBG]  Creating local paths (sx, sy) in the submap for T_sync = 3
[DBG]    Agent 95 (global paths from T=3 to 6) has local path: (2,2) (2,1) (2,0) (3,0) 
[DBG]  Checking input data for SAT solver:
[DBG]    - Number of agents to replan: 1
[DBG]  Agent 95 has the original local path length: 4 => Start (2,2), Goal (3,0)
[DBG]  Start position: (2, 2), 
[DBG]  Goal position: (3, 0), 
[DBG]  SAT instance and solver created.
Currently solving
Instance name: scen
Map name: map
Encoding used: disappear_at_goal
SAT solver used: Kissat
Optimizing function: sum of costs
Number of agents: 1
Mks LB: 4
SoC LB: 4
Delta: 0
Remaining time: 300000 [ms]

Found plan [agents = 1] [timesteps = 4]
Agent #0 : 10 9 8 13 

[STAT] Solver returned: 0
[DBG]  Agent (index) 95 | New local path (submap idx):
[DBG]  10 9 8 13 
[DBG]  Update the agent path 95 | Original local length: 4 | New local length: 4
[DBG]  agent 95 t=0 => decoded (sx,sy)=(2,2) => global_id=675
[DBG]  agent 95 t=1 => decoded (sx,sy)=(2,1) => global_id=674
[DBG]  agent 95 t=2 => decoded (sx,sy)=(2,0) => global_id=673
[DBG]  agent 95 t=3 => decoded (sx,sy)=(3,0) => global_id=705
[DBG]  Complete path of agent 95:
[DBG]    Original: 678 677 676 675 674 673 705 
[DBG]    New:     678 677 676 675 674 673 705 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 678 677 676 
[DBG]    Local path (in submap): 675 674 673 705 
[DBG]    Suffix (out of submap): 
[DBG]  Original agent path length 95 je: 7
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 0: 678, 677, 676, 675, 674, 673, 705, 
[DBG]  Path for agent 95 updated, resulting length: 7
[DBG]  Paths successfully updated.
[DBG]  (LNS.cpp) New path for agent 95: 
[DBG]  678, 677, 676, 675, 674, 673, 705, 
[DBG]  component_weights = {0.354966, 0.114511, 0.11975, 0.410774}
[DBG]  opSuccess value: 1
[STAT] neighbor.sum_of_costs before recomputation: 6
[STAT] neighbor.old_sum_of_costs before recomputation: 6
[STAT] sum_of_costs before recomputation: 4274
[DBG]  Validate solution immediately after SAT success.
[DBG]  No problems after SAT replan.
[DBG]  Recomputing sum_of_cost by dividing neighbor.sum_of_costs and neighbor.old_sum_of_costs
[STAT] sum_of_costs after recomputation: 4274
[STAT] Iteration 120
[DBG]  Using SAT operator (destroy+repair SAT).
[DBG]  ====================
[DBG]  SAT destroy operator called.
[DBG]  SAT heuristic: 2
[DBG]  key_agent_id: 99
[DBG]  key_agent_id global path length: 8
[DBG]  Submap content (global positions):
[DBG]  612 613 614 615 616 
[DBG]  644 645 646 647 648 
[DBG]  676 677 678 679 680 
[DBG]  708 709 710 711 712 
[DBG]  740 741 742 743 744 
[DBG]  Map content with agents and obstacles:
[DBG]  . . X . . 
[DBG]  . . . . . 
[DBG]  . . A X . 
[DBG]  X . . X A 
[DBG]  . . . X A 
[DBG]  content of the map structure that we pass to the SAT solver:
[DBG]  1  1  -1  1  1  
[DBG]  1  1  1  1  1  
[DBG]  1  1  1  -1  1  
[DBG]  -1  1  1  -1  1  
[DBG]  1  1  1  -1  1  
[DBG]  Identifying agents in a submap for rescheduling (when key_agent is there at the time 3):
[DBG]  Agent 67 found intervals in the sub-map:
[DBG]  
[DBG]  Agent 67 is not in sub-map at time 3 (intervals: 
[DBG]  )
[DBG]  Agent 96 found intervals in the sub-map:
[DBG]   [0..3]
[DBG]  Agent 96 (interval in submap: [0..3]) contains time 3, added to replan.
[DBG]  Agent 99 found intervals in the sub-map:
[DBG]   [0..5]
[DBG]  Agent 99 (interval in submap: [0..5]) contains time 3, added to replan.
[DBG]  Agent 148 found intervals in the sub-map:
[DBG]   [1..5]
[DBG]  Agent 148 (interval in submap: [1..5]) contains time 3, added to replan.
[DBG]  Agent 96 | Start (global): 712 -> (local): (3, 4) at time 3 | Goal (global): 712 -> (local): (3, 4) at time 3
[DBG]  Agent 99 | Start (global): 678 -> (local): (2, 2) at time 3 | Goal (global): 676 -> (local): (2, 0) at time 5
[DBG]  Agent 148 | Start (global): 744 -> (local): (4, 4) at time 3 | Goal (global): 744 -> (local): (4, 4) at time 5
[DBG]  [REPAIR] SAT destroy operator called.
[DBG]  [REPAIR] SAT operator â€“ launching subproblem FOR OPTIMIZATION.
[DBG]  Creating local paths (sx, sy) in the submap for T_sync = 3
[DBG]    Agent 96 (global paths from T=3 to 3) has local path: (3,4) 
[DBG]    Agent 99 (global paths from T=3 to 5) has local path: (2,2) (2,1) (2,0) 
[DBG]    Agent 148 (global paths from T=3 to 5) has local path: (4,4) (4,4) (4,4) 
[DBG]  Checking input data for SAT solver:
[DBG]    - Number of agents to replan: 3
[DBG]  Agent 96 has the original local path length: 1 => Start (3,4), Goal (3,4)
[DBG]  Agent 99 has the original local path length: 3 => Start (2,2), Goal (2,0)
[DBG]  Agent 148 has the original local path length: 3 => Start (4,4), Goal (4,4)
[DBG]  Start position: (3, 4), (2, 2), (4, 4), 
[DBG]  Goal position: (3, 4), (2, 0), (4, 4), 
[DBG]  SAT instance and solver created.
Currently solving
Instance name: scen
Map name: map
Encoding used: disappear_at_goal
SAT solver used: Kissat
Optimizing function: sum of costs
Number of agents: 3
Mks LB: 3
SoC LB: 5
Delta: 0
Remaining time: 300000 [ms]

Vertex conflict! Agents 0, 2, timestep 1, location 0
Swapping conflict! Agents 0, 2, timestep 1, edge (0,0)
Vertex conflict! Agents 0, 2, timestep 2, location 0
Found plan [agents = 3] [timesteps = 3]
Agent #0 : 15 0 0 
Agent #1 : 11 10 9 
Agent #2 : 19 0 0 

[STAT] Solver returned: 0
[DBG]  Agent (index) 96 | New local path (submap idx):
[DBG]  15 
[DBG]  Agent (index) 99 | New local path (submap idx):
[DBG]  11 10 9 
[DBG]  Agent (index) 148 | New local path (submap idx):
[DBG]  19 
[DBG]  Update the agent path 96 | Original local length: 1 | New local length: 1
[DBG]  agent 96 t=0 => decoded (sx,sy)=(3,4) => global_id=712
[DBG]  Complete path of agent 96:
[DBG]    Original: 647 648 680 712 713 714 746 746 747 748 780 781 782 814 814 814 814 846 847 848 849 817 818 819 820 821 822 854 855 856 857 858 859 827 
[DBG]    New:     647 648 680 712 713 714 746 746 747 748 780 781 782 814 814 814 814 846 847 848 849 817 818 819 820 821 822 854 855 856 857 858 859 827 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 647 648 680 
[DBG]    Local path (in submap): 712 
[DBG]    Suffix (out of submap): 713 714 746 746 747 748 780 781 782 814 814 814 814 846 847 848 849 817 818 819 820 821 822 854 855 856 857 858 859 827 
[DBG]  Original agent path length 96 je: 34
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 0: 647, 648, 680, 712, 713, 714, 746, 746, 747, 748, 780, 781, 782, 814, 814, 814, 814, 846, 847, 848, 849, 817, 818, 819, 820, 821, 822, 854, 855, 856, 857, 858, 859, 827, 
[DBG]  Path for agent 96 updated, resulting length: 34
[DBG]  Update the agent path 99 | Original local length: 3 | New local length: 3
[DBG]  agent 99 t=0 => decoded (sx,sy)=(2,2) => global_id=678
[DBG]  agent 99 t=1 => decoded (sx,sy)=(2,1) => global_id=677
[DBG]  agent 99 t=2 => decoded (sx,sy)=(2,0) => global_id=676
[DBG]  Complete path of agent 99:
[DBG]    Original: 615 647 646 678 677 676 675 674 
[DBG]    New:     615 647 646 678 677 676 675 674 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 615 647 646 
[DBG]    Local path (in submap): 678 677 676 
[DBG]    Suffix (out of submap): 675 674 
[DBG]  Original agent path length 99 je: 8
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 1: 615, 647, 646, 678, 677, 676, 675, 674, 
[DBG]  Path for agent 99 updated, resulting length: 8
[DBG]  Update the agent path 148 | Original local length: 3 | New local length: 1
[DBG]  agent 148 t=0 => decoded (sx,sy)=(4,4) => global_id=744
[DBG]  Complete path of agent 148:
[DBG]    Original: 776 744 744 744 744 744 776 808 809 810 778 778 778 746 714 715 683 684 685 653 654 655 656 657 658 659 627 628 660 
[DBG]    New:     776 744 744 744 776 808 809 810 778 778 778 746 714 715 683 684 685 653 654 655 656 657 658 659 627 628 660 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 776 744 744 
[DBG]    Local path (in submap): 744 776 808 
[DBG]    Suffix (out of submap): 809 810 778 778 778 746 714 715 683 684 685 653 654 655 656 657 658 659 627 628 660 
[DBG]  Original agent path length 148 je: 29
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 2: 776, 744, 744, 744, 776, 808, 809, 810, 778, 778, 778, 746, 714, 715, 683, 684, 685, 653, 654, 655, 656, 657, 658, 659, 627, 628, 660, 
[DBG]  Path for agent 148 updated, resulting length: 27
[DBG]  Paths successfully updated.
[DBG]  (LNS.cpp) New path for agent 96: 
[DBG]  647, 648, 680, 712, 713, 714, 746, 746, 747, 748, 780, 781, 782, 814, 814, 814, 814, 846, 847, 848, 849, 817, 818, 819, 820, 821, 822, 854, 855, 856, 857, 858, 859, 827, 
[DBG]  (LNS.cpp) New path for agent 99: 
[DBG]  615, 647, 646, 678, 677, 676, 675, 674, 
[DBG]  (LNS.cpp) New path for agent 148: 
[DBG]  776, 744, 744, 744, 776, 808, 809, 810, 778, 778, 778, 746, 714, 715, 683, 684, 685, 653, 654, 655, 656, 657, 658, 659, 627, 628, 660, 
[DBG]  component_weights = {0.351971, 0.113545, 0.11874, 0.415744}
[DBG]  opSuccess value: 1
[STAT] neighbor.sum_of_costs before recomputation: 66
[STAT] neighbor.old_sum_of_costs before recomputation: 68
[STAT] sum_of_costs before recomputation: 4274
[DBG]  Validate solution immediately after SAT success.
[WARNING] Problem after SAT: Vertex conflict between agents 37 and 148 at location 778 at timestep 9
[DBG]  Attempting immediate repair via init_lns because problem occurred after SAT (should be applied only for conflicts...).
[DBG]  Passing 150 agents to init_lns (skip=true).
[DBG]  path_table contents for selected agents (neighbor.agents):
[DBG]    Agent 96 => controlling path length=34
[DBG]    Agent 99 => controlling path length=8
[DBG]    Agent 148 => controlling path length=27
[DBG]  hodnota skip_initial_solution=1
[DBG]  We skip initialSolution => call buildCollisionData()
[DBG]  buildCollisionData() called â€“ skip_initial_solution case.
[DBG]  Agents.size()=150, collision_graph.size()=150
[DBG]  agent 37 => updateCollidingPairs => foundCollision
[DBG]  agent 53 => updateCollidingPairs => foundCollision
[DBG]  agent 97 => updateCollidingPairs => foundCollision
[DBG]  agent 132 => updateCollidingPairs => foundCollision
[DBG]  agent 148 => updateCollidingPairs => foundCollision
[DBG]  Conflicting agent pairs:
[DBG]  agent 37 is in conflict with agent 148
[DBG]  agent 53 is in conflict with agent 148
[DBG]  agent 97 is in conflict with agent 148
[DBG]  agent 132 is in conflict with agent 148
[DBG]  buildCollisionData() => sum_of_costs=4272, num_of_colliding_pairs=4
[DBG]  buildCollisionData done => sum_of_costs=4272, num_of_colliding_pairs=4
[DBG]  sum_of_cost hodnota: 4272
[DBG]  After skip/init build => iteration_stats.back(): sum_of_costs=4272, collisions=4
[DEBUG] Using default neighbor generation strategy for conflicts: 0
[DEBUG] Using default neighbor generation strategy for conflicts: 0
[DEBUG] Using default neighbor generation strategy for conflicts: 0
[DEBUG] Using default neighbor generation strategy for conflicts: 2
[DEBUG] Using default neighbor generation strategy for conflicts: 0
	InitLNS(PP): runtime = 0.0191901, iterations = 6, colliding pairs = 0, initial colliding pairs = 4, solution cost = 4296, initial solution cost = 4272, failed iterations = 0
[DBG]  init_lns->sum_of_costs after init_lns->run: 4296
[DBG]  sum_of_costs after assignment from init_lns->run: 4296
[DBG]  Recomputing sum_of_cost by dividing neighbor.sum_of_costs and neighbor.old_sum_of_costs
[STAT] sum_of_costs after recomputation: 4296
[STAT] Iteration 121
[DBG]  Using SAT operator (destroy+repair SAT).
[DBG]  ====================
[DBG]  SAT destroy operator called.
[DBG]  SAT heuristic: 2
[DBG]  key_agent_id: 141
[DBG]  key_agent_id global path length: 13
[DBG]  Submap content (global positions):
[DBG]  -1 -1 -1 -1 -1 
[DBG]  -1 -1 -1 -1 -1 
[DBG]  14 15 16 17 18 
[DBG]  46 47 48 49 50 
[DBG]  78 79 80 81 82 
[DBG]  Map content with agents and obstacles:
[DBG]  X X X X X 
[DBG]  X X X X X 
[DBG]  . . A X . 
[DBG]  . . . A . 
[DBG]  X . . . . 
[DBG]  content of the map structure that we pass to the SAT solver:
[DBG]  1  1  1  1  1  
[DBG]  1  1  1  1  1  
[DBG]  1  1  1  -1  1  
[DBG]  1  1  1  1  1  
[DBG]  -1  1  1  1  1  
[DBG]  Identifying agents in a submap for rescheduling (when key_agent is there at the time 6):
[DBG]  Agent 26 found intervals in the sub-map:
[DBG]  
[DBG]  Agent 26 is not in sub-map at time 6 (intervals: 
[DBG]  )
[DBG]  Agent 40 found intervals in the sub-map:
[DBG]   [4..9]
[DBG]  Agent 40 (interval in submap: [4..9]) contains time 6, added to replan.
[DBG]  Agent 141 found intervals in the sub-map:
[DBG]   [0..10]
[DBG]  Agent 141 (interval in submap: [0..10]) contains time 6, added to replan.
[DBG]  Agent 40 | Start (global): 49 -> (local): (3, 3) at time 6 | Goal (global): 46 -> (local): (3, 0) at time 9
[DBG]  Agent 141 | Start (global): 16 -> (local): (2, 2) at time 6 | Goal (global): 46 -> (local): (3, 0) at time 10
[DBG]  [REPAIR] SAT destroy operator called.
[DBG]  [REPAIR] SAT operator â€“ launching subproblem FOR OPTIMIZATION.
[DBG]  Creating local paths (sx, sy) in the submap for T_sync = 6
[DBG]    Agent 40 (global paths from T=6 to 9) has local path: (3,3) (3,2) (3,1) (3,0) 
[DBG]    Agent 141 (global paths from T=6 to 10) has local path: (2,2) (2,2) (3,2) (3,1) (3,0) 
[DBG]  Checking input data for SAT solver:
[DBG]    - Number of agents to replan: 2
[DBG]  Agent 40 has the original local path length: 4 => Start (3,3), Goal (3,0)
[DBG]  Agent 141 has the original local path length: 5 => Start (2,2), Goal (3,0)
[DBG]  Start position: (3, 3), (2, 2), 
[DBG]  Goal position: (3, 0), (3, 0), 
[DBG]  SAT instance and solver created.
Currently solving
Instance name: scen
Map name: map
Encoding used: disappear_at_goal
SAT solver used: Kissat
Optimizing function: sum of costs
Number of agents: 2
Mks LB: 4
SoC LB: 8
Delta: 0
Remaining time: 300000 [ms]

[STAT] Solver returned: -1
[DBG]  SAT solver failed.
[STAT] SAT solver failed to find a valid solution.
[DBG]  ====================
[DBG]  SAT destroy operator called.
[DBG]  SAT heuristic: 2
[DBG]  key_agent_id: 141
[DBG]  key_agent_id global path length: 13
[DBG]  Submap content (global positions):
[DBG]  -1 -1 -1 -1 -1 
[DBG]  11 12 13 14 15 
[DBG]  43 44 45 46 47 
[DBG]  75 76 77 78 79 
[DBG]  107 108 109 110 111 
[DBG]  Map content with agents and obstacles:
[DBG]  X X X X X 
[DBG]  . . . . . 
[DBG]  . . A . . 
[DBG]  . . A X . 
[DBG]  . . . . A 
[DBG]  content of the map structure that we pass to the SAT solver:
[DBG]  1  1  1  1  1  
[DBG]  1  1  1  1  1  
[DBG]  1  1  1  1  1  
[DBG]  1  1  1  -1  1  
[DBG]  1  1  1  1  1  
[DBG]  Identifying agents in a submap for rescheduling (when key_agent is there at the time 11):
[DBG]  Agent 40 found intervals in the sub-map:
[DBG]   [8..13]
[DBG]  Agent 40 (interval in submap: [8..13]) contains time 11, added to replan.
[DBG]  Agent 66 found intervals in the sub-map:
[DBG]  
[DBG]  Agent 66 is not in sub-map at time 11 (intervals: 
[DBG]  )
[DBG]  Agent 69 found intervals in the sub-map:
[DBG]  
[DBG]  Agent 69 is not in sub-map at time 11 (intervals: 
[DBG]  )
[DBG]  Agent 82 found intervals in the sub-map:
[DBG]   [0..0]
[DBG]  Agent 82 is not in sub-map at time 11 (intervals: 
[DBG]  [0..0] )
[DBG]  Agent 117 found intervals in the sub-map:
[DBG]   [11..17]
[DBG]  Agent 117 (interval in submap: [11..17]) contains time 11, added to replan.
[DBG]  Agent 141 found intervals in the sub-map:
[DBG]   [0..2] [9..12]
[DBG]  Agent 141 (interval in submap: [9..12]) contains time 11, added to replan.
[DBG]  Agent 40 | Start (global): 77 -> (local): (3, 2) at time 11 | Goal (global): 75 -> (local): (3, 0) at time 13
[DBG]  Agent 117 | Start (global): 111 -> (local): (4, 4) at time 11 | Goal (global): 43 -> (local): (2, 0) at time 17
[DBG]  Agent 141 | Start (global): 45 -> (local): (2, 2) at time 11 | Goal (global): 44 -> (local): (2, 1) at time 12
[DBG]  [REPAIR] SAT destroy operator called.
[DBG]  [REPAIR] SAT operator â€“ launching subproblem FOR OPTIMIZATION.
[DBG]  Creating local paths (sx, sy) in the submap for T_sync = 11
[DBG]    Agent 40 (global paths from T=11 to 13) has local path: (3,2) (3,1) (3,0) 
[DBG]    Agent 117 (global paths from T=11 to 17) has local path: (4,4) (4,3) (4,2) (3,2) (3,1) (3,0) (2,0) 
[DBG]    Agent 141 (global paths from T=11 to 12) has local path: (2,2) (2,1) 
[DBG]  Checking input data for SAT solver:
[DBG]    - Number of agents to replan: 3
[DBG]  Agent 40 has the original local path length: 3 => Start (3,2), Goal (3,0)
[DBG]  Agent 117 has the original local path length: 7 => Start (4,4), Goal (2,0)
[DBG]  Agent 141 has the original local path length: 2 => Start (2,2), Goal (2,1)
[DBG]  Start position: (3, 2), (4, 4), (2, 2), 
[DBG]  Goal position: (3, 0), (2, 0), (2, 1), 
[DBG]  SAT instance and solver created.
Currently solving
Instance name: scen
Map name: map
Encoding used: disappear_at_goal
SAT solver used: Kissat
Optimizing function: sum of costs
Number of agents: 3
Mks LB: 7
SoC LB: 12
Delta: 0
Remaining time: 300000 [ms]

Vertex conflict! Agents 0, 2, timestep 3, location 0
Swapping conflict! Agents 0, 2, timestep 3, edge (0,0)
Vertex conflict! Agents 0, 2, timestep 4, location 0
Swapping conflict! Agents 0, 2, timestep 4, edge (0,0)
Vertex conflict! Agents 0, 2, timestep 5, location 0
Swapping conflict! Agents 0, 2, timestep 5, edge (0,0)
Vertex conflict! Agents 0, 2, timestep 6, location 0
Found plan [agents = 3] [timesteps = 7]
Agent #0 : 17 16 15 0 0 0 0 
Agent #1 : 23 22 21 20 19 15 10 
Agent #2 : 12 11 0 0 0 0 0 

[STAT] Solver returned: 0
[DBG]  Agent (index) 40 | New local path (submap idx):
[DBG]  17 16 15 
[DBG]  Agent (index) 117 | New local path (submap idx):
[DBG]  23 22 21 20 19 15 10 
[DBG]  Agent (index) 141 | New local path (submap idx):
[DBG]  12 11 
[DBG]  Update the agent path 40 | Original local length: 3 | New local length: 3
[DBG]  agent 40 t=0 => decoded (sx,sy)=(3,2) => global_id=77
[DBG]  agent 40 t=1 => decoded (sx,sy)=(3,1) => global_id=76
[DBG]  agent 40 t=2 => decoded (sx,sy)=(3,0) => global_id=75
[DBG]  Complete path of agent 40:
[DBG]    Original: 117 85 84 83 82 50 49 48 47 46 45 77 76 75 74 73 72 71 70 
[DBG]    New:     117 85 84 83 82 50 49 48 47 46 45 77 76 75 74 73 72 71 70 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 117 85 84 83 82 50 49 48 47 46 45 
[DBG]    Local path (in submap): 77 76 75 
[DBG]    Suffix (out of submap): 74 73 72 71 70 
[DBG]  Original agent path length 40 je: 19
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 0: 117, 85, 84, 83, 82, 50, 49, 48, 47, 46, 45, 77, 76, 75, 74, 73, 72, 71, 70, 
[DBG]  Path for agent 40 updated, resulting length: 19
[DBG]  Update the agent path 117 | Original local length: 7 | New local length: 7
[DBG]  agent 117 t=0 => decoded (sx,sy)=(4,4) => global_id=111
[DBG]  agent 117 t=1 => decoded (sx,sy)=(4,3) => global_id=110
[DBG]  agent 117 t=2 => decoded (sx,sy)=(4,2) => global_id=109
[DBG]  agent 117 t=3 => decoded (sx,sy)=(4,1) => global_id=108
[DBG]  agent 117 t=4 => decoded (sx,sy)=(4,0) => global_id=107
[DBG]  agent 117 t=5 => decoded (sx,sy)=(3,0) => global_id=75
[DBG]  agent 117 t=6 => decoded (sx,sy)=(2,0) => global_id=43
[DBG]  Complete path of agent 117:
[DBG]    Original: 214 213 181 181 180 179 178 177 176 144 112 111 110 109 77 76 75 43 42 41 40 8 7 6 5 4 3 2 1 0 
[DBG]    New:     214 213 181 181 180 179 178 177 176 144 112 111 110 109 108 107 75 43 42 41 40 8 7 6 5 4 3 2 1 0 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 214 213 181 181 180 179 178 177 176 144 112 
[DBG]    Local path (in submap): 111 110 109 108 107 75 43 
[DBG]    Suffix (out of submap): 42 41 40 8 7 6 5 4 3 2 1 0 
[DBG]  Original agent path length 117 je: 30
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 1: 214, 213, 181, 181, 180, 179, 178, 177, 176, 144, 112, 111, 110, 109, 108, 107, 75, 43, 42, 41, 40, 8, 7, 6, 5, 4, 3, 2, 1, 0, 
[DBG]  Path for agent 117 updated, resulting length: 30
[DBG]  Update the agent path 141 | Original local length: 2 | New local length: 2
[DBG]  agent 141 t=0 => decoded (sx,sy)=(2,2) => global_id=45
[DBG]  agent 141 t=1 => decoded (sx,sy)=(2,1) => global_id=44
[DBG]  Complete path of agent 141:
[DBG]    Original: 46 46 47 48 16 16 16 16 48 47 46 45 44 
[DBG]    New:     46 46 47 48 16 16 16 16 48 47 46 45 44 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 46 46 47 48 16 16 16 16 48 47 46 
[DBG]    Local path (in submap): 45 44 
[DBG]    Suffix (out of submap): 
[DBG]  Original agent path length 141 je: 13
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 2: 46, 46, 47, 48, 16, 16, 16, 16, 48, 47, 46, 45, 44, 
[DBG]  Path for agent 141 updated, resulting length: 13
[DBG]  Paths successfully updated.
[DBG]  (LNS.cpp) New path for agent 40: 
[DBG]  117, 85, 84, 83, 82, 50, 49, 48, 47, 46, 45, 77, 76, 75, 74, 73, 72, 71, 70, 
[DBG]  (LNS.cpp) New path for agent 117: 
[DBG]  214, 213, 181, 181, 180, 179, 178, 177, 176, 144, 112, 111, 110, 109, 108, 107, 75, 43, 42, 41, 40, 8, 7, 6, 5, 4, 3, 2, 1, 0, 
[DBG]  (LNS.cpp) New path for agent 141: 
[DBG]  46, 46, 47, 48, 16, 16, 16, 16, 48, 47, 46, 45, 44, 
[DBG]  component_weights = {0.356593, 0.112735, 0.117893, 0.412779}
[DBG]  opSuccess value: 1
[STAT] neighbor.sum_of_costs before recomputation: 59
[STAT] neighbor.old_sum_of_costs before recomputation: 59
[STAT] sum_of_costs before recomputation: 4296
[DBG]  Validate solution immediately after SAT success.
[DBG]  No problems after SAT replan.
[DBG]  Recomputing sum_of_cost by dividing neighbor.sum_of_costs and neighbor.old_sum_of_costs
[STAT] sum_of_costs after recomputation: 4296
[STAT] Iteration 122
[DBG]  Using SAT operator (destroy+repair SAT).
[DBG]  ====================
[DBG]  SAT destroy operator called.
[DBG]  SAT heuristic: 2
[DBG]  key_agent_id: 66
[DBG]  key_agent_id global path length: 24
[DBG]  Submap content (global positions):
[DBG]  212 213 214 215 216 
[DBG]  244 245 246 247 248 
[DBG]  276 277 278 279 280 
[DBG]  308 309 310 311 312 
[DBG]  340 341 342 343 344 
[DBG]  Map content with agents and obstacles:
[DBG]  . . A . A 
[DBG]  . X X . . 
[DBG]  . . A . X 
[DBG]  . . . . . 
[DBG]  . . X . . 
[DBG]  content of the map structure that we pass to the SAT solver:
[DBG]  1  1  1  1  1  
[DBG]  1  -1  -1  1  1  
[DBG]  1  1  1  1  -1  
[DBG]  1  1  1  1  1  
[DBG]  1  1  -1  1  1  
[DBG]  Identifying agents in a submap for rescheduling (when key_agent is there at the time 22):
[DBG]  Agent 22 found intervals in the sub-map:
[DBG]  
[DBG]  Agent 22 is not in sub-map at time 22 (intervals: 
[DBG]  )
[DBG]  Agent 26 found intervals in the sub-map:
[DBG]  
[DBG]  Agent 26 is not in sub-map at time 22 (intervals: 
[DBG]  )
[DBG]  Agent 64 found intervals in the sub-map:
[DBG]   [17..23]
[DBG]  Agent 64 (interval in submap: [17..23]) contains time 22, added to replan.
[DBG]  Agent 66 found intervals in the sub-map:
[DBG]   [18..23]
[DBG]  Agent 66 (interval in submap: [18..23]) contains time 22, added to replan.
[DBG]  Agent 75 found intervals in the sub-map:
[DBG]   [0..5]
[DBG]  Agent 75 is not in sub-map at time 22 (intervals: 
[DBG]  [0..5] )
[DBG]  Agent 94 found intervals in the sub-map:
[DBG]   [21..22]
[DBG]  Agent 94 (interval in submap: [21..22]) contains time 22, added to replan.
[DBG]  Agent 123 found intervals in the sub-map:
[DBG]   [15..21]
[DBG]  Agent 123 is not in sub-map at time 22 (intervals: 
[DBG]  [15..21] )
[DBG]  Agent 64 | Start (global): 214 -> (local): (0, 2) at time 22 | Goal (global): 213 -> (local): (0, 1) at time 23
[DBG]  Agent 66 | Start (global): 278 -> (local): (2, 2) at time 22 | Goal (global): 279 -> (local): (2, 3) at time 23
[DBG]  Agent 94 | Start (global): 216 -> (local): (0, 4) at time 22 | Goal (global): 216 -> (local): (0, 4) at time 22
[DBG]  [REPAIR] SAT destroy operator called.
[DBG]  [REPAIR] SAT operator â€“ launching subproblem FOR OPTIMIZATION.
[DBG]  Creating local paths (sx, sy) in the submap for T_sync = 22
[DBG]    Agent 64 (global paths from T=22 to 23) has local path: (0,2) (0,1) 
[DBG]    Agent 66 (global paths from T=22 to 23) has local path: (2,2) (2,3) 
[DBG]    Agent 94 (global paths from T=22 to 22) has local path: (0,4) 
[DBG]  Checking input data for SAT solver:
[DBG]    - Number of agents to replan: 3
[DBG]  Agent 64 has the original local path length: 2 => Start (0,2), Goal (0,1)
[DBG]  Agent 66 has the original local path length: 2 => Start (2,2), Goal (2,3)
[DBG]  Agent 94 has the original local path length: 1 => Start (0,4), Goal (0,4)
[DBG]  Start position: (0, 2), (2, 2), (0, 4), 
[DBG]  Goal position: (0, 1), (2, 3), (0, 4), 
[DBG]  SAT instance and solver created.
Currently solving
Instance name: scen
Map name: map
Encoding used: disappear_at_goal
SAT solver used: Kissat
Optimizing function: sum of costs
Number of agents: 3
Mks LB: 2
SoC LB: 5
Delta: 0
Remaining time: 300000 [ms]

Found plan [agents = 3] [timesteps = 2]
Agent #0 : 2 1 
Agent #1 : 10 11 
Agent #2 : 4 0 

[STAT] Solver returned: 0
[DBG]  Agent (index) 64 | New local path (submap idx):
[DBG]  2 1 
[DBG]  Agent (index) 66 | New local path (submap idx):
[DBG]  10 11 
[DBG]  Agent (index) 94 | New local path (submap idx):
[DBG]  4 
[DBG]  Update the agent path 64 | Original local length: 2 | New local length: 2
[DBG]  agent 64 t=0 => decoded (sx,sy)=(0,2) => global_id=214
[DBG]  agent 64 t=1 => decoded (sx,sy)=(0,1) => global_id=213
[DBG]  Complete path of agent 64:
[DBG]    Original: 639 638 637 636 635 603 602 570 538 506 505 504 472 440 439 407 375 343 311 279 247 215 214 213 181 180 
[DBG]    New:     639 638 637 636 635 603 602 570 538 506 505 504 472 440 439 407 375 343 311 279 247 215 214 213 181 180 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 639 638 637 636 635 603 602 570 538 506 505 504 472 440 439 407 375 343 311 279 247 215 
[DBG]    Local path (in submap): 214 213 
[DBG]    Suffix (out of submap): 181 180 
[DBG]  Original agent path length 64 je: 26
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 0: 639, 638, 637, 636, 635, 603, 602, 570, 538, 506, 505, 504, 472, 440, 439, 407, 375, 343, 311, 279, 247, 215, 214, 213, 181, 180, 
[DBG]  Path for agent 64 updated, resulting length: 26
[DBG]  Update the agent path 66 | Original local length: 2 | New local length: 2
[DBG]  agent 66 t=0 => decoded (sx,sy)=(2,2) => global_id=278
[DBG]  agent 66 t=1 => decoded (sx,sy)=(2,3) => global_id=279
[DBG]  Complete path of agent 66:
[DBG]    Original: 134 135 136 137 138 139 140 172 173 205 206 238 239 240 241 242 243 275 276 308 309 277 278 279 
[DBG]    New:     134 135 136 137 138 139 140 172 173 205 206 238 239 240 241 242 243 275 276 308 309 277 278 279 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 134 135 136 137 138 139 140 172 173 205 206 238 239 240 241 242 243 275 276 308 309 277 
[DBG]    Local path (in submap): 278 279 
[DBG]    Suffix (out of submap): 
[DBG]  Original agent path length 66 je: 24
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 1: 134, 135, 136, 137, 138, 139, 140, 172, 173, 205, 206, 238, 239, 240, 241, 242, 243, 275, 276, 308, 309, 277, 278, 279, 
[DBG]  Path for agent 66 updated, resulting length: 24
[DBG]  Update the agent path 94 | Original local length: 1 | New local length: 1
[DBG]  agent 94 t=0 => decoded (sx,sy)=(0,4) => global_id=216
[DBG]  Complete path of agent 94:
[DBG]    Original: 701 702 670 638 637 636 604 572 540 539 507 475 443 411 379 378 377 345 313 281 249 248 216 
[DBG]    New:     701 702 670 638 637 636 604 572 540 539 507 475 443 411 379 378 377 345 313 281 249 248 216 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 701 702 670 638 637 636 604 572 540 539 507 475 443 411 379 378 377 345 313 281 249 248 
[DBG]    Local path (in submap): 216 
[DBG]    Suffix (out of submap): 
[DBG]  Original agent path length 94 je: 23
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 2: 701, 702, 670, 638, 637, 636, 604, 572, 540, 539, 507, 475, 443, 411, 379, 378, 377, 345, 313, 281, 249, 248, 216, 
[DBG]  Path for agent 94 updated, resulting length: 23
[DBG]  Paths successfully updated.
[DBG]  (LNS.cpp) New path for agent 64: 
[DBG]  639, 638, 637, 636, 635, 603, 602, 570, 538, 506, 505, 504, 472, 440, 439, 407, 375, 343, 311, 279, 247, 215, 214, 213, 181, 180, 
[DBG]  (LNS.cpp) New path for agent 66: 
[DBG]  134, 135, 136, 137, 138, 139, 140, 172, 173, 205, 206, 238, 239, 240, 241, 242, 243, 275, 276, 308, 309, 277, 278, 279, 
[DBG]  (LNS.cpp) New path for agent 94: 
[DBG]  701, 702, 670, 638, 637, 636, 604, 572, 540, 539, 507, 475, 443, 411, 379, 378, 377, 345, 313, 281, 249, 248, 216, 
[DBG]  component_weights = {0.361242, 0.111921, 0.117041, 0.409797}
[DBG]  opSuccess value: 1
[STAT] neighbor.sum_of_costs before recomputation: 70
[STAT] neighbor.old_sum_of_costs before recomputation: 70
[STAT] sum_of_costs before recomputation: 4296
[DBG]  Validate solution immediately after SAT success.
[DBG]  No problems after SAT replan.
[DBG]  Recomputing sum_of_cost by dividing neighbor.sum_of_costs and neighbor.old_sum_of_costs
[STAT] sum_of_costs after recomputation: 4296
[STAT] Iteration 123
[DBG]  Using SAT operator (destroy+repair SAT).
[DBG]  ====================
[DBG]  SAT destroy operator called.
[DBG]  SAT heuristic: 2
[DBG]  key_agent_id: 134
[DBG]  key_agent_id global path length: 16
[DBG]  Submap content (global positions):
[DBG]  321 322 323 324 325 
[DBG]  353 354 355 356 357 
[DBG]  385 386 387 388 389 
[DBG]  417 418 419 420 421 
[DBG]  449 450 451 452 453 
[DBG]  Map content with agents and obstacles:
[DBG]  . X . . . 
[DBG]  . . . . . 
[DBG]  . X A . A 
[DBG]  X . A . . 
[DBG]  . . X X X 
[DBG]  content of the map structure that we pass to the SAT solver:
[DBG]  1  -1  1  1  1  
[DBG]  1  1  1  1  1  
[DBG]  1  -1  1  1  1  
[DBG]  -1  1  1  1  1  
[DBG]  1  1  -1  -1  -1  
[DBG]  Identifying agents in a submap for rescheduling (when key_agent is there at the time 10):
[DBG]  Agent 21 found intervals in the sub-map:
[DBG]   [5..10]
[DBG]  Agent 21 (interval in submap: [5..10]) contains time 10, added to replan.
[DBG]  Agent 42 found intervals in the sub-map:
[DBG]   [4..9]
[DBG]  Agent 42 is not in sub-map at time 10 (intervals: 
[DBG]  [4..9] )
[DBG]  Agent 55 found intervals in the sub-map:
[DBG]   [13..13]
[DBG]  Agent 55 is not in sub-map at time 10 (intervals: 
[DBG]  [13..13] )
[DBG]  Agent 59 found intervals in the sub-map:
[DBG]   [7..8]
[DBG]  Agent 59 is not in sub-map at time 10 (intervals: 
[DBG]  [7..8] )
[DBG]  Agent 78 found intervals in the sub-map:
[DBG]   [0..4]
[DBG]  Agent 78 is not in sub-map at time 10 (intervals: 
[DBG]  [0..4] )
[DBG]  Agent 110 found intervals in the sub-map:
[DBG]   [6..12]
[DBG]  Agent 110 (interval in submap: [6..12]) contains time 10, added to replan.
[DBG]  Agent 134 found intervals in the sub-map:
[DBG]   [8..14]
[DBG]  Agent 134 (interval in submap: [8..14]) contains time 10, added to replan.
[DBG]  Agent 21 | Start (global): 389 -> (local): (2, 4) at time 10 | Goal (global): 389 -> (local): (2, 4) at time 10
[DBG]  Agent 110 | Start (global): 419 -> (local): (3, 2) at time 10 | Goal (global): 450 -> (local): (4, 1) at time 12
[DBG]  Agent 134 | Start (global): 387 -> (local): (2, 2) at time 10 | Goal (global): 449 -> (local): (4, 0) at time 14
[DBG]  [REPAIR] SAT destroy operator called.
[DBG]  [REPAIR] SAT operator â€“ launching subproblem FOR OPTIMIZATION.
[DBG]  Creating local paths (sx, sy) in the submap for T_sync = 10
[DBG]    Agent 21 (global paths from T=10 to 10) has local path: (2,4) 
[DBG]    Agent 110 (global paths from T=10 to 12) has local path: (3,2) (3,1) (4,1) 
[DBG]    Agent 134 (global paths from T=10 to 14) has local path: (2,2) (3,2) (3,1) (4,1) (4,0) 
[DBG]  Checking input data for SAT solver:
[DBG]    - Number of agents to replan: 3
[DBG]  Agent 21 has the original local path length: 1 => Start (2,4), Goal (2,4)
[DBG]  Agent 110 has the original local path length: 3 => Start (3,2), Goal (4,1)
[DBG]  Agent 134 has the original local path length: 5 => Start (2,2), Goal (4,0)
[DBG]  Start position: (2, 4), (3, 2), (2, 2), 
[DBG]  Goal position: (2, 4), (4, 1), (4, 0), 
[DBG]  SAT instance and solver created.
Currently solving
Instance name: scen
Map name: map
Encoding used: disappear_at_goal
SAT solver used: Kissat
Optimizing function: sum of costs
Number of agents: 3
Mks LB: 5
SoC LB: 9
Delta: 0
Remaining time: 300000 [ms]

Vertex conflict! Agents 0, 1, timestep 3, location 0
Swapping conflict! Agents 0, 1, timestep 3, edge (0,0)
Vertex conflict! Agents 0, 1, timestep 4, location 0
Found plan [agents = 3] [timesteps = 5]
Agent #0 : 12 0 0 0 0 
Agent #1 : 14 13 18 0 0 
Agent #2 : 10 14 13 18 17 

[STAT] Solver returned: 0
[DBG]  Agent (index) 21 | New local path (submap idx):
[DBG]  12 
[DBG]  Agent (index) 110 | New local path (submap idx):
[DBG]  14 13 18 
[DBG]  Agent (index) 134 | New local path (submap idx):
[DBG]  10 14 13 18 17 
[DBG]  Update the agent path 21 | Original local length: 1 | New local length: 1
[DBG]  agent 21 t=0 => decoded (sx,sy)=(2,4) => global_id=389
[DBG]  Complete path of agent 21:
[DBG]    Original: 484 484 483 482 482 450 418 419 387 388 389 390 391 359 327 
[DBG]    New:     484 484 483 482 482 450 418 419 387 388 389 390 391 359 327 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 484 484 483 482 482 450 418 419 387 388 
[DBG]    Local path (in submap): 389 
[DBG]    Suffix (out of submap): 390 391 359 327 
[DBG]  Original agent path length 21 je: 15
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 0: 484, 484, 483, 482, 482, 450, 418, 419, 387, 388, 389, 390, 391, 359, 327, 
[DBG]  Path for agent 21 updated, resulting length: 15
[DBG]  Update the agent path 110 | Original local length: 3 | New local length: 3
[DBG]  agent 110 t=0 => decoded (sx,sy)=(3,2) => global_id=419
[DBG]  agent 110 t=1 => decoded (sx,sy)=(3,1) => global_id=418
[DBG]  agent 110 t=2 => decoded (sx,sy)=(4,1) => global_id=450
[DBG]  Complete path of agent 110:
[DBG]    Original: 193 194 226 258 259 291 323 323 355 387 419 418 450 482 483 515 547 579 611 610 609 608 640 672 704 736 768 769 770 
[DBG]    New:     193 194 226 258 259 291 323 323 355 387 419 418 450 482 483 515 547 579 611 610 609 608 640 672 704 736 768 769 770 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 193 194 226 258 259 291 323 323 355 387 
[DBG]    Local path (in submap): 419 418 450 
[DBG]    Suffix (out of submap): 482 483 515 547 579 611 610 609 608 640 672 704 736 768 769 770 
[DBG]  Original agent path length 110 je: 29
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 1: 193, 194, 226, 258, 259, 291, 323, 323, 355, 387, 419, 418, 450, 482, 483, 515, 547, 579, 611, 610, 609, 608, 640, 672, 704, 736, 768, 769, 770, 
[DBG]  Path for agent 110 updated, resulting length: 29
[DBG]  Update the agent path 134 | Original local length: 5 | New local length: 5
[DBG]  agent 134 t=0 => decoded (sx,sy)=(2,2) => global_id=387
[DBG]  agent 134 t=1 => decoded (sx,sy)=(3,2) => global_id=419
[DBG]  agent 134 t=2 => decoded (sx,sy)=(3,1) => global_id=418
[DBG]  agent 134 t=3 => decoded (sx,sy)=(4,1) => global_id=450
[DBG]  agent 134 t=4 => decoded (sx,sy)=(4,0) => global_id=449
[DBG]  Complete path of agent 134:
[DBG]    Original: 133 132 164 196 228 227 259 291 323 355 387 419 418 450 449 481 
[DBG]    New:     133 132 164 196 228 227 259 291 323 355 387 419 418 450 449 481 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 133 132 164 196 228 227 259 291 323 355 
[DBG]    Local path (in submap): 387 419 418 450 449 
[DBG]    Suffix (out of submap): 481 
[DBG]  Original agent path length 134 je: 16
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 2: 133, 132, 164, 196, 228, 227, 259, 291, 323, 355, 387, 419, 418, 450, 449, 481, 
[DBG]  Path for agent 134 updated, resulting length: 16
[DBG]  Paths successfully updated.
[DBG]  (LNS.cpp) New path for agent 21: 
[DBG]  484, 484, 483, 482, 482, 450, 418, 419, 387, 388, 389, 390, 391, 359, 327, 
[DBG]  (LNS.cpp) New path for agent 110: 
[DBG]  193, 194, 226, 258, 259, 291, 323, 323, 355, 387, 419, 418, 450, 482, 483, 515, 547, 579, 611, 610, 609, 608, 640, 672, 704, 736, 768, 769, 770, 
[DBG]  (LNS.cpp) New path for agent 134: 
[DBG]  133, 132, 164, 196, 228, 227, 259, 291, 323, 355, 387, 419, 418, 450, 449, 481, 
[DBG]  component_weights = {0.365916, 0.111102, 0.116184, 0.406798}
[DBG]  opSuccess value: 1
[STAT] neighbor.sum_of_costs before recomputation: 57
[STAT] neighbor.old_sum_of_costs before recomputation: 57
[STAT] sum_of_costs before recomputation: 4296
[DBG]  Validate solution immediately after SAT success.
[DBG]  No problems after SAT replan.
[DBG]  Recomputing sum_of_cost by dividing neighbor.sum_of_costs and neighbor.old_sum_of_costs
[STAT] sum_of_costs after recomputation: 4296
[STAT] Iteration 124
[DBG]  Using SAT operator (destroy+repair SAT).
[DBG]  ====================
[DBG]  SAT destroy operator called.
[DBG]  SAT heuristic: 2
[DBG]  key_agent_id: 123
[DBG]  key_agent_id global path length: 31
[DBG]  Submap content (global positions):
[DBG]  78 79 80 81 82 
[DBG]  110 111 112 113 114 
[DBG]  142 143 144 145 146 
[DBG]  174 175 176 177 178 
[DBG]  206 207 208 209 210 
[DBG]  Map content with agents and obstacles:
[DBG]  X . . . A 
[DBG]  . A . . X 
[DBG]  X X A X . 
[DBG]  X X . . . 
[DBG]  . . . A . 
[DBG]  content of the map structure that we pass to the SAT solver:
[DBG]  -1  1  1  1  1  
[DBG]  1  1  1  1  -1  
[DBG]  -1  -1  1  -1  1  
[DBG]  -1  -1  1  1  1  
[DBG]  1  1  1  1  1  
[DBG]  Identifying agents in a submap for rescheduling (when key_agent is there at the time 28):
[DBG]  Agent 15 found intervals in the sub-map:
[DBG]   [23..28]
[DBG]  Agent 15 (interval in submap: [23..28]) contains time 28, added to replan.
[DBG]  Agent 88 found intervals in the sub-map:
[DBG]   [27..28]
[DBG]  Agent 88 (interval in submap: [27..28]) contains time 28, added to replan.
[DBG]  Agent 123 found intervals in the sub-map:
[DBG]   [25..30]
[DBG]  Agent 123 (interval in submap: [25..30]) contains time 28, added to replan.
[DBG]  Agent 146 found intervals in the sub-map:
[DBG]   [27..30]
[DBG]  Agent 146 (interval in submap: [27..30]) contains time 28, added to replan.
[DBG]  Agent 149 found intervals in the sub-map:
[DBG]   [26..26]
[DBG]  Agent 149 is not in sub-map at time 28 (intervals: 
[DBG]  [26..26] )
[DBG]  Agent 15 | Start (global): 82 -> (local): (0, 4) at time 28 | Goal (global): 82 -> (local): (0, 4) at time 28
[DBG]  Agent 88 | Start (global): 209 -> (local): (4, 3) at time 28 | Goal (global): 209 -> (local): (4, 3) at time 28
[DBG]  Agent 123 | Start (global): 144 -> (local): (2, 2) at time 28 | Goal (global): 113 -> (local): (1, 3) at time 30
[DBG]  Agent 146 | Start (global): 111 -> (local): (1, 1) at time 28 | Goal (global): 80 -> (local): (0, 2) at time 30
[DBG]  [REPAIR] SAT destroy operator called.
[DBG]  [REPAIR] SAT operator â€“ launching subproblem FOR OPTIMIZATION.
[DBG]  Creating local paths (sx, sy) in the submap for T_sync = 28
[DBG]    Agent 15 (global paths from T=28 to 28) has local path: (0,4) 
[DBG]    Agent 88 (global paths from T=28 to 28) has local path: (4,3) 
[DBG]    Agent 123 (global paths from T=28 to 30) has local path: (2,2) (1,2) (1,3) 
[DBG]    Agent 146 (global paths from T=28 to 30) has local path: (1,1) (0,1) (0,2) 
[DBG]  Checking input data for SAT solver:
[DBG]    - Number of agents to replan: 4
[DBG]  Agent 15 has the original local path length: 1 => Start (0,4), Goal (0,4)
[DBG]  Agent 88 has the original local path length: 1 => Start (4,3), Goal (4,3)
[DBG]  Agent 123 has the original local path length: 3 => Start (2,2), Goal (1,3)
[DBG]  Agent 146 has the original local path length: 3 => Start (1,1), Goal (0,2)
[DBG]  Start position: (0, 4), (4, 3), (2, 2), (1, 1), 
[DBG]  Goal position: (0, 4), (4, 3), (1, 3), (0, 2), 
[DBG]  SAT instance and solver created.
Currently solving
Instance name: scen
Map name: map
Encoding used: disappear_at_goal
SAT solver used: Kissat
Optimizing function: sum of costs
Number of agents: 4
Mks LB: 3
SoC LB: 8
Delta: 0
Remaining time: 300000 [ms]

Vertex conflict! Agents 0, 1, timestep 1, location 0
Swapping conflict! Agents 0, 1, timestep 1, edge (0,0)
Vertex conflict! Agents 0, 1, timestep 2, location 0
Vertex conflict! Agents 0, 3, timestep 1, location 0
Vertex conflict! Agents 1, 3, timestep 1, location 0
Found plan [agents = 4] [timesteps = 3]
Agent #0 : 3 0 0 
Agent #1 : 16 0 0 
Agent #2 : 8 6 7 
Agent #3 : 5 0 1 

[STAT] Solver returned: 0
[DBG]  Agent (index) 15 | New local path (submap idx):
[DBG]  3 
[DBG]  Agent (index) 88 | New local path (submap idx):
[DBG]  16 
[DBG]  Agent (index) 123 | New local path (submap idx):
[DBG]  8 6 7 
[DBG]  Agent (index) 146 | New local path (submap idx):
[DBG]  5 0 1 
[DBG]  Update the agent path 15 | Original local length: 1 | New local length: 1
[DBG]  agent 15 t=0 => decoded (sx,sy)=(0,4) => global_id=82
[DBG]  Complete path of agent 15:
[DBG]    Original: 288 289 257 257 258 259 260 261 293 294 295 296 297 298 266 234 235 203 204 205 173 141 109 110 111 112 113 81 82 83 115 116 117 118 119 120 121 122 123 124 156 157 
[DBG]    New:     288 289 257 257 258 259 260 261 293 294 295 296 297 298 266 234 235 203 204 205 173 141 109 110 111 112 113 81 82 83 115 116 117 118 119 120 121 122 123 124 156 157 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 288 289 257 257 258 259 260 261 293 294 295 296 297 298 266 234 235 203 204 205 173 141 109 110 111 112 113 81 
[DBG]    Local path (in submap): 82 
[DBG]    Suffix (out of submap): 83 115 116 117 118 119 120 121 122 123 124 156 157 
[DBG]  Original agent path length 15 je: 42
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 0: 288, 289, 257, 257, 258, 259, 260, 261, 293, 294, 295, 296, 297, 298, 266, 234, 235, 203, 204, 205, 173, 141, 109, 110, 111, 112, 113, 81, 82, 83, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 156, 157, 
[DBG]  Path for agent 15 updated, resulting length: 42
[DBG]  Update the agent path 88 | Original local length: 1 | New local length: 1
[DBG]  agent 88 t=0 => decoded (sx,sy)=(4,3) => global_id=209
[DBG]  Complete path of agent 88:
[DBG]    Original: 783 783 782 750 718 686 654 622 590 591 592 560 528 496 464 465 433 401 369 337 337 336 304 303 271 239 240 208 209 
[DBG]    New:     783 783 782 750 718 686 654 622 590 591 592 560 528 496 464 465 433 401 369 337 337 336 304 303 271 239 240 208 209 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 783 783 782 750 718 686 654 622 590 591 592 560 528 496 464 465 433 401 369 337 337 336 304 303 271 239 240 208 
[DBG]    Local path (in submap): 209 
[DBG]    Suffix (out of submap): 
[DBG]  Original agent path length 88 je: 29
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 1: 783, 783, 782, 750, 718, 686, 654, 622, 590, 591, 592, 560, 528, 496, 464, 465, 433, 401, 369, 337, 337, 336, 304, 303, 271, 239, 240, 208, 209, 
[DBG]  Path for agent 88 updated, resulting length: 29
[DBG]  Update the agent path 123 | Original local length: 3 | New local length: 3
[DBG]  agent 123 t=0 => decoded (sx,sy)=(2,2) => global_id=144
[DBG]  agent 123 t=1 => decoded (sx,sy)=(1,2) => global_id=112
[DBG]  agent 123 t=2 => decoded (sx,sy)=(1,3) => global_id=113
[DBG]  Complete path of agent 123:
[DBG]    Original: 637 636 604 572 571 570 538 506 505 504 472 440 408 407 375 343 311 279 247 215 214 213 181 180 179 178 177 176 144 112 113 
[DBG]    New:     637 636 604 572 571 570 538 506 505 504 472 440 408 407 375 343 311 279 247 215 214 213 181 180 179 178 177 176 144 112 113 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 637 636 604 572 571 570 538 506 505 504 472 440 408 407 375 343 311 279 247 215 214 213 181 180 179 178 177 176 
[DBG]    Local path (in submap): 144 112 113 
[DBG]    Suffix (out of submap): 
[DBG]  Original agent path length 123 je: 31
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 2: 637, 636, 604, 572, 571, 570, 538, 506, 505, 504, 472, 440, 408, 407, 375, 343, 311, 279, 247, 215, 214, 213, 181, 180, 179, 178, 177, 176, 144, 112, 113, 
[DBG]  Path for agent 123 updated, resulting length: 31
[DBG]  Update the agent path 146 | Original local length: 3 | New local length: 3
[DBG]  agent 146 t=0 => decoded (sx,sy)=(1,1) => global_id=111
[DBG]  agent 146 t=1 => decoded (sx,sy)=(0,1) => global_id=79
[DBG]  agent 146 t=2 => decoded (sx,sy)=(0,2) => global_id=80
[DBG]  Complete path of agent 146:
[DBG]    Original: 512 480 448 449 450 418 419 387 388 389 390 358 359 327 328 296 264 265 233 234 235 236 204 172 140 141 109 110 111 79 80 48 49 50 18 19 
[DBG]    New:     512 480 448 449 450 418 419 387 388 389 390 358 359 327 328 296 264 265 233 234 235 236 204 172 140 141 109 110 111 79 80 48 49 50 18 19 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 512 480 448 449 450 418 419 387 388 389 390 358 359 327 328 296 264 265 233 234 235 236 204 172 140 141 109 110 
[DBG]    Local path (in submap): 111 79 80 
[DBG]    Suffix (out of submap): 48 49 50 18 19 
[DBG]  Original agent path length 146 je: 36
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 3: 512, 480, 448, 449, 450, 418, 419, 387, 388, 389, 390, 358, 359, 327, 328, 296, 264, 265, 233, 234, 235, 236, 204, 172, 140, 141, 109, 110, 111, 79, 80, 48, 49, 50, 18, 19, 
[DBG]  Path for agent 146 updated, resulting length: 36
[DBG]  Paths successfully updated.
[DBG]  (LNS.cpp) New path for agent 15: 
[DBG]  288, 289, 257, 257, 258, 259, 260, 261, 293, 294, 295, 296, 297, 298, 266, 234, 235, 203, 204, 205, 173, 141, 109, 110, 111, 112, 113, 81, 82, 83, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 156, 157, 
[DBG]  (LNS.cpp) New path for agent 88: 
[DBG]  783, 783, 782, 750, 718, 686, 654, 622, 590, 591, 592, 560, 528, 496, 464, 465, 433, 401, 369, 337, 337, 336, 304, 303, 271, 239, 240, 208, 209, 
[DBG]  (LNS.cpp) New path for agent 123: 
[DBG]  637, 636, 604, 572, 571, 570, 538, 506, 505, 504, 472, 440, 408, 407, 375, 343, 311, 279, 247, 215, 214, 213, 181, 180, 179, 178, 177, 176, 144, 112, 113, 
[DBG]  (LNS.cpp) New path for agent 146: 
[DBG]  512, 480, 448, 449, 450, 418, 419, 387, 388, 389, 390, 358, 359, 327, 328, 296, 264, 265, 233, 234, 235, 236, 204, 172, 140, 141, 109, 110, 111, 79, 80, 48, 49, 50, 18, 19, 
[DBG]  component_weights = {0.370616, 0.110278, 0.115323, 0.403782}
[DBG]  opSuccess value: 1
[STAT] neighbor.sum_of_costs before recomputation: 134
[STAT] neighbor.old_sum_of_costs before recomputation: 134
[STAT] sum_of_costs before recomputation: 4296
[DBG]  Validate solution immediately after SAT success.
[DBG]  No problems after SAT replan.
[DBG]  Recomputing sum_of_cost by dividing neighbor.sum_of_costs and neighbor.old_sum_of_costs
[STAT] sum_of_costs after recomputation: 4296
[STAT] Iteration 125
[DBG]  Using SAT operator (destroy+repair SAT).
[DBG]  ====================
[DBG]  SAT destroy operator called.
[DBG]  SAT heuristic: 2
[DBG]  key_agent_id: 137
[DBG]  key_agent_id global path length: 55
[DBG]  Submap content (global positions):
[DBG]  458 459 460 461 462 
[DBG]  490 491 492 493 494 
[DBG]  522 523 524 525 526 
[DBG]  554 555 556 557 558 
[DBG]  586 587 588 589 590 
[DBG]  Map content with agents and obstacles:
[DBG]  . . . X . 
[DBG]  . . A X . 
[DBG]  . . A . A 
[DBG]  X . . X A 
[DBG]  X A A . . 
[DBG]  content of the map structure that we pass to the SAT solver:
[DBG]  1  1  1  -1  1  
[DBG]  1  1  1  -1  1  
[DBG]  1  1  1  1  1  
[DBG]  -1  1  1  -1  1  
[DBG]  -1  1  1  1  1  
[DBG]  Identifying agents in a submap for rescheduling (when key_agent is there at the time 23):
[DBG]  Agent 42 found intervals in the sub-map:
[DBG]   [19..25]
[DBG]  Agent 42 (interval in submap: [19..25]) contains time 23, added to replan.
[DBG]  Agent 43 found intervals in the sub-map:
[DBG]   [30..36]
[DBG]  Agent 43 is not in sub-map at time 23 (intervals: 
[DBG]  [30..36] )
[DBG]  Agent 45 found intervals in the sub-map:
[DBG]   [21..26]
[DBG]  Agent 45 (interval in submap: [21..26]) contains time 23, added to replan.
[DBG]  Agent 50 found intervals in the sub-map:
[DBG]   [19..28]
[DBG]  Agent 50 (interval in submap: [19..28]) contains time 23, added to replan.
[DBG]  Agent 55 found intervals in the sub-map:
[DBG]  
[DBG]  Agent 55 is not in sub-map at time 23 (intervals: 
[DBG]  )
[DBG]  Agent 59 found intervals in the sub-map:
[DBG]   [20..24]
[DBG]  Agent 59 (interval in submap: [20..24]) contains time 23, added to replan.
[DBG]  Agent 65 found intervals in the sub-map:
[DBG]  
[DBG]  Agent 65 is not in sub-map at time 23 (intervals: 
[DBG]  )
[DBG]  Agent 83 found intervals in the sub-map:
[DBG]   [18..22]
[DBG]  Agent 83 is not in sub-map at time 23 (intervals: 
[DBG]  [18..22] )
[DBG]  Agent 132 found intervals in the sub-map:
[DBG]  
[DBG]  Agent 132 is not in sub-map at time 23 (intervals: 
[DBG]  )
[DBG]  Agent 137 found intervals in the sub-map:
[DBG]   [19..25]
[DBG]  Agent 137 (interval in submap: [19..25]) contains time 23, added to replan.
[DBG]  Agent 140 found intervals in the sub-map:
[DBG]   [20..24]
[DBG]  Agent 140 (interval in submap: [20..24]) contains time 23, added to replan.
[DBG]  Agent 42 | Start (global): 588 -> (local): (4, 2) at time 23 | Goal (global): 590 -> (local): (4, 4) at time 25
[DBG]  Agent 45 | Start (global): 526 -> (local): (2, 4) at time 23 | Goal (global): 590 -> (local): (4, 4) at time 26
[DBG]  Agent 50 | Start (global): 587 -> (local): (4, 1) at time 23 | Goal (global): 460 -> (local): (0, 2) at time 28
[DBG]  Agent 59 | Start (global): 558 -> (local): (3, 4) at time 23 | Goal (global): 590 -> (local): (4, 4) at time 24
[DBG]  Agent 137 | Start (global): 524 -> (local): (2, 2) at time 23 | Goal (global): 522 -> (local): (2, 0) at time 25
[DBG]  Agent 140 | Start (global): 492 -> (local): (1, 2) at time 23 | Goal (global): 460 -> (local): (0, 2) at time 24
[DBG]  [REPAIR] SAT destroy operator called.
[DBG]  [REPAIR] SAT operator â€“ launching subproblem FOR OPTIMIZATION.
[DBG]  Creating local paths (sx, sy) in the submap for T_sync = 23
[DBG]    Agent 42 (global paths from T=23 to 25) has local path: (4,2) (4,3) (4,4) 
[DBG]    Agent 45 (global paths from T=23 to 26) has local path: (2,4) (3,4) (3,4) (4,4) 
[DBG]    Agent 50 (global paths from T=23 to 28) has local path: (4,1) (4,2) (3,2) (2,2) (1,2) (0,2) 
[DBG]    Agent 59 (global paths from T=23 to 24) has local path: (3,4) (4,4) 
[DBG]    Agent 137 (global paths from T=23 to 25) has local path: (2,2) (2,1) (2,0) 
[DBG]    Agent 140 (global paths from T=23 to 24) has local path: (1,2) (0,2) 
[DBG]  Checking input data for SAT solver:
[DBG]    - Number of agents to replan: 6
[DBG]  Agent 42 has the original local path length: 3 => Start (4,2), Goal (4,4)
[DBG]  Agent 45 has the original local path length: 4 => Start (2,4), Goal (4,4)
[DBG]  Agent 50 has the original local path length: 6 => Start (4,1), Goal (0,2)
[DBG]  Agent 59 has the original local path length: 2 => Start (3,4), Goal (4,4)
[DBG]  Agent 137 has the original local path length: 3 => Start (2,2), Goal (2,0)
[DBG]  Agent 140 has the original local path length: 2 => Start (1,2), Goal (0,2)
[DBG]  Start position: (4, 2), (2, 4), (4, 1), (3, 4), (2, 2), (1, 2), 
[DBG]  Goal position: (4, 4), (4, 4), (0, 2), (4, 4), (2, 0), (0, 2), 
[DBG]  SAT instance and solver created.
Currently solving
Instance name: scen
Map name: map
Encoding used: disappear_at_goal
SAT solver used: Kissat
Optimizing function: sum of costs
Number of agents: 6
Mks LB: 6
SoC LB: 19
Delta: 0
Remaining time: 300000 [ms]

[STAT] Solver returned: -1
[DBG]  SAT solver failed.
[STAT] SAT solver failed to find a valid solution.
[DBG]  ====================
[DBG]  SAT destroy operator called.
[DBG]  SAT heuristic: 2
[DBG]  key_agent_id: 137
[DBG]  key_agent_id global path length: 55
[DBG]  Submap content (global positions):
[DBG]  -1 832 833 834 835 
[DBG]  -1 864 865 866 867 
[DBG]  -1 896 897 898 899 
[DBG]  -1 928 929 930 931 
[DBG]  -1 960 961 962 963 
[DBG]  Map content with agents and obstacles:
[DBG]  X . X . . 
[DBG]  X . . X . 
[DBG]  X X A . X 
[DBG]  X X . . . 
[DBG]  X X X . X 
[DBG]  content of the map structure that we pass to the SAT solver:
[DBG]  1  1  -1  1  1  
[DBG]  1  1  1  -1  1  
[DBG]  1  -1  1  1  -1  
[DBG]  1  -1  1  1  1  
[DBG]  1  -1  -1  1  -1  
[DBG]  Identifying agents in a submap for rescheduling (when key_agent is there at the time 50):
[DBG]  Agent 137 found intervals in the sub-map:
[DBG]   [47..53]
[DBG]  Agent 137 (interval in submap: [47..53]) contains time 50, added to replan.
[DBG]  Agent 137 | Start (global): 897 -> (local): (2, 2) at time 50 | Goal (global): 931 -> (local): (3, 4) at time 53
[DBG]  [REPAIR] SAT destroy operator called.
[DBG]  [REPAIR] SAT operator â€“ launching subproblem FOR OPTIMIZATION.
[DBG]  Creating local paths (sx, sy) in the submap for T_sync = 50
[DBG]    Agent 137 (global paths from T=50 to 53) has local path: (2,2) (2,3) (3,3) (3,4) 
[DBG]  Checking input data for SAT solver:
[DBG]    - Number of agents to replan: 1
[DBG]  Agent 137 has the original local path length: 4 => Start (2,2), Goal (3,4)
[DBG]  Start position: (2, 2), 
[DBG]  Goal position: (3, 4), 
[DBG]  SAT instance and solver created.
Currently solving
Instance name: scen
Map name: map
Encoding used: disappear_at_goal
SAT solver used: Kissat
Optimizing function: sum of costs
Number of agents: 1
Mks LB: 4
SoC LB: 4
Delta: 0
Remaining time: 300000 [ms]

Found plan [agents = 1] [timesteps = 4]
Agent #0 : 9 12 13 14 

[STAT] Solver returned: 0
[DBG]  Agent (index) 137 | New local path (submap idx):
[DBG]  9 12 13 14 
[DBG]  Update the agent path 137 | Original local length: 4 | New local length: 4
[DBG]  agent 137 t=0 => decoded (sx,sy)=(2,2) => global_id=897
[DBG]  agent 137 t=1 => decoded (sx,sy)=(3,2) => global_id=929
[DBG]  agent 137 t=2 => decoded (sx,sy)=(3,3) => global_id=930
[DBG]  agent 137 t=3 => decoded (sx,sy)=(3,4) => global_id=931
[DBG]  Complete path of agent 137:
[DBG]    Original: 538 506 505 504 503 502 470 469 437 405 404 404 403 435 467 466 465 464 463 462 494 526 525 524 523 522 521 520 520 520 519 551 550 549 548 547 579 611 610 609 608 640 672 704 736 768 800 832 864 865 897 898 930 931 932 
[DBG]    New:     538 506 505 504 503 502 470 469 437 405 404 404 403 435 467 466 465 464 463 462 494 526 525 524 523 522 521 520 520 520 519 551 550 549 548 547 579 611 610 609 608 640 672 704 736 768 800 832 864 865 897 929 930 931 932 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 538 506 505 504 503 502 470 469 437 405 404 404 403 435 467 466 465 464 463 462 494 526 525 524 523 522 521 520 520 520 519 551 550 549 548 547 579 611 610 609 608 640 672 704 736 768 800 832 864 865 
[DBG]    Local path (in submap): 897 929 930 931 
[DBG]    Suffix (out of submap): 932 
[DBG]  Original agent path length 137 je: 55
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 0: 538, 506, 505, 504, 503, 502, 470, 469, 437, 405, 404, 404, 403, 435, 467, 466, 465, 464, 463, 462, 494, 526, 525, 524, 523, 522, 521, 520, 520, 520, 519, 551, 550, 549, 548, 547, 579, 611, 610, 609, 608, 640, 672, 704, 736, 768, 800, 832, 864, 865, 897, 929, 930, 931, 932, 
[DBG]  Path for agent 137 updated, resulting length: 55
[DBG]  Paths successfully updated.
[DBG]  (LNS.cpp) New path for agent 137: 
[DBG]  538, 506, 505, 504, 503, 502, 470, 469, 437, 405, 404, 404, 403, 435, 467, 466, 465, 464, 463, 462, 494, 526, 525, 524, 523, 522, 521, 520, 520, 520, 519, 551, 550, 549, 548, 547, 579, 611, 610, 609, 608, 640, 672, 704, 736, 768, 800, 832, 864, 865, 897, 929, 930, 931, 932, 
[DBG]  component_weights = {0.375341, 0.10945, 0.114457, 0.400751}
[DBG]  opSuccess value: 1
[STAT] neighbor.sum_of_costs before recomputation: 54
[STAT] neighbor.old_sum_of_costs before recomputation: 54
[STAT] sum_of_costs before recomputation: 4296
[DBG]  Validate solution immediately after SAT success.
[DBG]  No problems after SAT replan.
[DBG]  Recomputing sum_of_cost by dividing neighbor.sum_of_costs and neighbor.old_sum_of_costs
[STAT] sum_of_costs after recomputation: 4296
[STAT] Iteration 126
[DBG]  Using SAT operator (destroy+repair SAT).
[DBG]  ====================
[DBG]  SAT destroy operator called.
[DBG]  SAT heuristic: 2
[DBG]  key_agent_id: 27
[DBG]  key_agent_id global path length: 19
[DBG]  Submap content (global positions):
[DBG]  749 750 751 752 753 
[DBG]  781 782 783 784 785 
[DBG]  813 814 815 816 817 
[DBG]  845 846 847 848 849 
[DBG]  877 878 879 880 881 
[DBG]  Map content with agents and obstacles:
[DBG]  X . . . . 
[DBG]  . . . . X 
[DBG]  . A A X . 
[DBG]  . A A . A 
[DBG]  . . A A A 
[DBG]  content of the map structure that we pass to the SAT solver:
[DBG]  -1  1  1  1  1  
[DBG]  1  1  1  1  -1  
[DBG]  1  1  1  -1  1  
[DBG]  1  1  1  1  1  
[DBG]  1  1  1  1  1  
[DBG]  Identifying agents in a submap for rescheduling (when key_agent is there at the time 17):
[DBG]  Agent 14 found intervals in the sub-map:
[DBG]   [11..23]
[DBG]  Agent 14 (interval in submap: [11..23]) contains time 17, added to replan.
[DBG]  Agent 27 found intervals in the sub-map:
[DBG]   [14..18]
[DBG]  Agent 27 (interval in submap: [14..18]) contains time 17, added to replan.
[DBG]  Agent 37 found intervals in the sub-map:
[DBG]   [9..13]
[DBG]  Agent 37 is not in sub-map at time 17 (intervals: 
[DBG]  [9..13] )
[DBG]  Agent 47 found intervals in the sub-map:
[DBG]   [13..18]
[DBG]  Agent 47 (interval in submap: [13..18]) contains time 17, added to replan.
[DBG]  Agent 49 found intervals in the sub-map:
[DBG]  
[DBG]  Agent 49 is not in sub-map at time 17 (intervals: 
[DBG]  )
[DBG]  Agent 61 found intervals in the sub-map:
[DBG]   [0..10]
[DBG]  Agent 61 is not in sub-map at time 17 (intervals: 
[DBG]  [0..10] )
[DBG]  Agent 85 found intervals in the sub-map:
[DBG]   [12..17]
[DBG]  Agent 85 (interval in submap: [12..17]) contains time 17, added to replan.
[DBG]  Agent 96 found intervals in the sub-map:
[DBG]   [11..21]
[DBG]  Agent 96 (interval in submap: [11..21]) contains time 17, added to replan.
[DBG]  Agent 101 found intervals in the sub-map:
[DBG]   [12..20]
[DBG]  Agent 101 (interval in submap: [12..20]) contains time 17, added to replan.
[DBG]  Agent 111 found intervals in the sub-map:
[DBG]   [17..20]
[DBG]  Agent 111 (interval in submap: [17..20]) contains time 17, added to replan.
[DBG]  Agent 130 found intervals in the sub-map:
[DBG]   [10..16]
[DBG]  Agent 130 is not in sub-map at time 17 (intervals: 
[DBG]  [10..16] )
[DBG]  Agent 132 found intervals in the sub-map:
[DBG]  
[DBG]  Agent 132 is not in sub-map at time 17 (intervals: 
[DBG]  )
[DBG]  Agent 135 found intervals in the sub-map:
[DBG]   [14..19]
[DBG]  Agent 135 (interval in submap: [14..19]) contains time 17, added to replan.
[DBG]  Agent 14 | Start (global): 849 -> (local): (3, 4) at time 17 | Goal (global): 877 -> (local): (4, 0) at time 23
[DBG]  Agent 27 | Start (global): 815 -> (local): (2, 2) at time 17 | Goal (global): 814 -> (local): (2, 1) at time 18
[DBG]  Agent 47 | Start (global): 814 -> (local): (2, 1) at time 17 | Goal (global): 813 -> (local): (2, 0) at time 18
[DBG]  Agent 85 | Start (global): 881 -> (local): (4, 4) at time 17 | Goal (global): 881 -> (local): (4, 4) at time 17
[DBG]  Agent 96 | Start (global): 846 -> (local): (3, 1) at time 17 | Goal (global): 817 -> (local): (2, 4) at time 21
[DBG]  Agent 101 | Start (global): 847 -> (local): (3, 2) at time 17 | Goal (global): 751 -> (local): (0, 2) at time 20
[DBG]  Agent 111 | Start (global): 880 -> (local): (4, 3) at time 17 | Goal (global): 817 -> (local): (2, 4) at time 20
[DBG]  Agent 135 | Start (global): 879 -> (local): (4, 2) at time 17 | Goal (global): 877 -> (local): (4, 0) at time 19
[DBG]  [REPAIR] SAT destroy operator called.
[DBG]  [REPAIR] SAT operator â€“ launching subproblem FOR OPTIMIZATION.
[DBG]  Creating local paths (sx, sy) in the submap for T_sync = 17
[DBG]    Agent 14 (global paths from T=17 to 23) has local path: (3,4) (4,4) (4,4) (4,3) (4,2) (4,1) (4,0) 
[DBG]    Agent 27 (global paths from T=17 to 18) has local path: (2,2) (2,1) 
[DBG]    Agent 47 (global paths from T=17 to 18) has local path: (2,1) (2,0) 
[DBG]    Agent 85 (global paths from T=17 to 17) has local path: (4,4) 
[DBG]    Agent 96 (global paths from T=17 to 21) has local path: (3,1) (3,2) (3,3) (3,4) (2,4) 
[DBG]    Agent 101 (global paths from T=17 to 20) has local path: (3,2) (2,2) (1,2) (0,2) 
[DBG]    Agent 111 (global paths from T=17 to 20) has local path: (4,3) (3,3) (3,4) (2,4) 
[DBG]    Agent 135 (global paths from T=17 to 19) has local path: (4,2) (4,1) (4,0) 
[DBG]  Checking input data for SAT solver:
[DBG]    - Number of agents to replan: 8
[DBG]  Agent 14 has the original local path length: 7 => Start (3,4), Goal (4,0)
[DBG]  Agent 27 has the original local path length: 2 => Start (2,2), Goal (2,1)
[DBG]  Agent 47 has the original local path length: 2 => Start (2,1), Goal (2,0)
[DBG]  Agent 85 has the original local path length: 1 => Start (4,4), Goal (4,4)
[DBG]  Agent 96 has the original local path length: 5 => Start (3,1), Goal (2,4)
[DBG]  Agent 101 has the original local path length: 4 => Start (3,2), Goal (0,2)
[DBG]  Agent 111 has the original local path length: 4 => Start (4,3), Goal (2,4)
[DBG]  Agent 135 has the original local path length: 3 => Start (4,2), Goal (4,0)
[DBG]  Start position: (3, 4), (2, 2), (2, 1), (4, 4), (3, 1), (3, 2), (4, 3), (4, 2), 
[DBG]  Goal position: (4, 0), (2, 1), (2, 0), (4, 4), (2, 4), (0, 2), (2, 4), (4, 0), 
[DBG]  SAT instance and solver created.
Currently solving
Instance name: scen
Map name: map
Encoding used: disappear_at_goal
SAT solver used: Kissat
Optimizing function: sum of costs
Number of agents: 8
Mks LB: 6
SoC LB: 27
Delta: 0
Remaining time: 300000 [ms]

Vertex conflict! Agents 1, 2, timestep 2, location 0
Swapping conflict! Agents 1, 2, timestep 2, edge (0,0)
Vertex conflict! Agents 1, 2, timestep 3, location 0
Swapping conflict! Agents 1, 2, timestep 3, edge (0,0)
Vertex conflict! Agents 1, 2, timestep 4, location 0
Swapping conflict! Agents 1, 2, timestep 4, edge (0,0)
Vertex conflict! Agents 1, 2, timestep 5, location 0
Vertex conflict! Agents 1, 3, timestep 2, location 0
Swapping conflict! Agents 1, 3, timestep 2, edge (0,0)
Vertex conflict! Agents 1, 3, timestep 3, location 0
Swapping conflict! Agents 1, 3, timestep 3, edge (0,0)
Vertex conflict! Agents 1, 3, timestep 4, location 0
Swapping conflict! Agents 1, 3, timestep 4, edge (0,0)
Vertex conflict! Agents 1, 3, timestep 5, location 0
Vertex conflict! Agents 1, 4, timestep 5, location 0
Vertex conflict! Agents 1, 5, timestep 4, location 0
Swapping conflict! Agents 1, 5, timestep 4, edge (0,0)
Vertex conflict! Agents 1, 5, timestep 5, location 0
Vertex conflict! Agents 1, 6, timestep 4, location 0
Swapping conflict! Agents 1, 6, timestep 4, edge (0,0)
Vertex conflict! Agents 1, 6, timestep 5, location 0
Vertex conflict! Agents 1, 7, timestep 3, location 0
Swapping conflict! Agents 1, 7, timestep 3, edge (0,0)
Vertex conflict! Agents 1, 7, timestep 4, location 0
Swapping conflict! Agents 1, 7, timestep 4, edge (0,0)
Vertex conflict! Agents 1, 7, timestep 5, location 0
Vertex conflict! Agents 2, 3, timestep 2, location 0
Swapping conflict! Agents 2, 3, timestep 2, edge (0,0)
Vertex conflict! Agents 2, 3, timestep 3, location 0
Swapping conflict! Agents 2, 3, timestep 3, edge (0,0)
Vertex conflict! Agents 2, 3, timestep 4, location 0
Swapping conflict! Agents 2, 3, timestep 4, edge (0,0)
Vertex conflict! Agents 2, 3, timestep 5, location 0
Vertex conflict! Agents 2, 4, timestep 5, location 0
Vertex conflict! Agents 2, 5, timestep 4, location 0
Swapping conflict! Agents 2, 5, timestep 4, edge (0,0)
Vertex conflict! Agents 2, 5, timestep 5, location 0
Vertex conflict! Agents 2, 6, timestep 4, location 0
Swapping conflict! Agents 2, 6, timestep 4, edge (0,0)
Vertex conflict! Agents 2, 6, timestep 5, location 0
Vertex conflict! Agents 2, 7, timestep 3, location 0
Swapping conflict! Agents 2, 7, timestep 3, edge (0,0)
Vertex conflict! Agents 2, 7, timestep 4, location 0
Swapping conflict! Agents 2, 7, timestep 4, edge (0,0)
Vertex conflict! Agents 2, 7, timestep 5, location 0
Vertex conflict! Agents 3, 4, timestep 5, location 0
Vertex conflict! Agents 3, 5, timestep 4, location 0
Swapping conflict! Agents 3, 5, timestep 4, edge (0,0)
Vertex conflict! Agents 3, 5, timestep 5, location 0
Vertex conflict! Agents 3, 6, timestep 4, location 0
Swapping conflict! Agents 3, 6, timestep 4, edge (0,0)
Vertex conflict! Agents 3, 6, timestep 5, location 0
Vertex conflict! Agents 3, 7, timestep 3, location 0
Swapping conflict! Agents 3, 7, timestep 3, edge (0,0)
Vertex conflict! Agents 3, 7, timestep 4, location 0
Swapping conflict! Agents 3, 7, timestep 4, edge (0,0)
Vertex conflict! Agents 3, 7, timestep 5, location 0
Vertex conflict! Agents 4, 5, timestep 5, location 0
Vertex conflict! Agents 4, 6, timestep 5, location 0
Vertex conflict! Agents 4, 7, timestep 5, location 0
Vertex conflict! Agents 5, 6, timestep 4, location 0
Swapping conflict! Agents 5, 6, timestep 4, edge (0,0)
Vertex conflict! Agents 5, 6, timestep 5, location 0
Vertex conflict! Agents 5, 7, timestep 4, location 0
Swapping conflict! Agents 5, 7, timestep 4, edge (0,0)
Vertex conflict! Agents 5, 7, timestep 5, location 0
Vertex conflict! Agents 6, 7, timestep 4, location 0
Swapping conflict! Agents 6, 7, timestep 4, edge (0,0)
Vertex conflict! Agents 6, 7, timestep 5, location 0
Found plan [agents = 8] [timesteps = 6]
Agent #0 : 16 21 20 19 18 17 
Agent #1 : 10 9 0 0 0 0 
Agent #2 : 9 8 0 0 0 0 
Agent #3 : 21 0 0 0 0 0 
Agent #4 : 13 14 15 16 11 0 
Agent #5 : 14 10 6 1 0 0 
Agent #6 : 20 15 16 11 0 0 
Agent #7 : 19 18 17 0 0 0 

[STAT] Solver returned: 0
[DBG]  Agent (index) 14 | New local path (submap idx):
[DBG]  16 21 20 19 18 17 
[DBG]  Agent (index) 27 | New local path (submap idx):
[DBG]  10 9 
[DBG]  Agent (index) 47 | New local path (submap idx):
[DBG]  9 8 
[DBG]  Agent (index) 85 | New local path (submap idx):
[DBG]  21 
[DBG]  Agent (index) 96 | New local path (submap idx):
[DBG]  13 14 15 16 11 
[DBG]  Agent (index) 101 | New local path (submap idx):
[DBG]  14 10 6 1 
[DBG]  Agent (index) 111 | New local path (submap idx):
[DBG]  20 15 16 11 
[DBG]  Agent (index) 135 | New local path (submap idx):
[DBG]  19 18 17 
[DBG]  Update the agent path 14 | Original local length: 7 | New local length: 6
[DBG]  agent 14 t=0 => decoded (sx,sy)=(3,4) => global_id=849
[DBG]  agent 14 t=1 => decoded (sx,sy)=(4,4) => global_id=881
[DBG]  agent 14 t=2 => decoded (sx,sy)=(4,3) => global_id=880
[DBG]  agent 14 t=3 => decoded (sx,sy)=(4,2) => global_id=879
[DBG]  agent 14 t=4 => decoded (sx,sy)=(4,1) => global_id=878
[DBG]  agent 14 t=5 => decoded (sx,sy)=(4,0) => global_id=877
[DBG]  Complete path of agent 14:
[DBG]    Original: 859 858 857 856 824 823 822 821 820 819 818 817 817 817 817 849 849 849 881 881 880 879 878 877 876 875 843 811 779 778 777 809 808 807 
[DBG]    New:     859 858 857 856 824 823 822 821 820 819 818 817 817 817 817 849 849 849 881 880 879 878 877 876 875 843 811 779 778 777 809 808 807 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 859 858 857 856 824 823 822 821 820 819 818 817 817 817 817 849 849 
[DBG]    Local path (in submap): 849 881 880 879 878 877 876 
[DBG]    Suffix (out of submap): 875 843 811 779 778 777 809 808 807 
[DBG]  Original agent path length 14 je: 34
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 0: 859, 858, 857, 856, 824, 823, 822, 821, 820, 819, 818, 817, 817, 817, 817, 849, 849, 849, 881, 880, 879, 878, 877, 876, 875, 843, 811, 779, 778, 777, 809, 808, 807, 
[DBG]  Path for agent 14 updated, resulting length: 33
[DBG]  Update the agent path 27 | Original local length: 2 | New local length: 2
[DBG]  agent 27 t=0 => decoded (sx,sy)=(2,2) => global_id=815
[DBG]  agent 27 t=1 => decoded (sx,sy)=(2,1) => global_id=814
[DBG]  Complete path of agent 27:
[DBG]    Original: 653 653 653 653 653 653 653 653 653 653 654 655 687 719 751 783 783 815 814 
[DBG]    New:     653 653 653 653 653 653 653 653 653 653 654 655 687 719 751 783 783 815 814 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 653 653 653 653 653 653 653 653 653 653 654 655 687 719 751 783 783 
[DBG]    Local path (in submap): 815 814 
[DBG]    Suffix (out of submap): 
[DBG]  Original agent path length 27 je: 19
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 1: 653, 653, 653, 653, 653, 653, 653, 653, 653, 653, 654, 655, 687, 719, 751, 783, 783, 815, 814, 
[DBG]  Path for agent 27 updated, resulting length: 19
[DBG]  Update the agent path 47 | Original local length: 2 | New local length: 2
[DBG]  agent 47 t=0 => decoded (sx,sy)=(2,1) => global_id=814
[DBG]  agent 47 t=1 => decoded (sx,sy)=(2,0) => global_id=813
[DBG]  Complete path of agent 47:
[DBG]    Original: 730 729 761 793 792 824 823 822 821 820 819 818 850 849 848 847 815 814 813 812 811 810 
[DBG]    New:     730 729 761 793 792 824 823 822 821 820 819 818 850 849 848 847 815 814 813 812 811 810 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 730 729 761 793 792 824 823 822 821 820 819 818 850 849 848 847 815 
[DBG]    Local path (in submap): 814 813 
[DBG]    Suffix (out of submap): 812 811 810 
[DBG]  Original agent path length 47 je: 22
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 2: 730, 729, 761, 793, 792, 824, 823, 822, 821, 820, 819, 818, 850, 849, 848, 847, 815, 814, 813, 812, 811, 810, 
[DBG]  Path for agent 47 updated, resulting length: 22
[DBG]  Update the agent path 85 | Original local length: 1 | New local length: 1
[DBG]  agent 85 t=0 => decoded (sx,sy)=(4,4) => global_id=881
[DBG]  Complete path of agent 85:
[DBG]    Original: 709 741 742 774 775 776 808 809 810 811 843 844 845 877 878 879 880 881 882 850 851 819 820 821 822 790 
[DBG]    New:     709 741 742 774 775 776 808 809 810 811 843 844 845 877 878 879 880 881 882 850 851 819 820 821 822 790 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 709 741 742 774 775 776 808 809 810 811 843 844 845 877 878 879 880 
[DBG]    Local path (in submap): 881 
[DBG]    Suffix (out of submap): 882 850 851 819 820 821 822 790 
[DBG]  Original agent path length 85 je: 26
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 3: 709, 741, 742, 774, 775, 776, 808, 809, 810, 811, 843, 844, 845, 877, 878, 879, 880, 881, 882, 850, 851, 819, 820, 821, 822, 790, 
[DBG]  Path for agent 85 updated, resulting length: 26
[DBG]  Update the agent path 96 | Original local length: 5 | New local length: 5
[DBG]  agent 96 t=0 => decoded (sx,sy)=(3,1) => global_id=846
[DBG]  agent 96 t=1 => decoded (sx,sy)=(3,2) => global_id=847
[DBG]  agent 96 t=2 => decoded (sx,sy)=(3,3) => global_id=848
[DBG]  agent 96 t=3 => decoded (sx,sy)=(3,4) => global_id=849
[DBG]  agent 96 t=4 => decoded (sx,sy)=(2,4) => global_id=817
[DBG]  Complete path of agent 96:
[DBG]    Original: 647 648 680 712 713 714 746 746 747 748 780 781 782 814 814 814 814 846 847 848 849 817 818 819 820 821 822 854 855 856 857 858 859 827 
[DBG]    New:     647 648 680 712 713 714 746 746 747 748 780 781 782 814 814 814 814 846 847 848 849 817 818 819 820 821 822 854 855 856 857 858 859 827 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 647 648 680 712 713 714 746 746 747 748 780 781 782 814 814 814 814 
[DBG]    Local path (in submap): 846 847 848 849 817 
[DBG]    Suffix (out of submap): 818 819 820 821 822 854 855 856 857 858 859 827 
[DBG]  Original agent path length 96 je: 34
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 4: 647, 648, 680, 712, 713, 714, 746, 746, 747, 748, 780, 781, 782, 814, 814, 814, 814, 846, 847, 848, 849, 817, 818, 819, 820, 821, 822, 854, 855, 856, 857, 858, 859, 827, 
[DBG]  Path for agent 96 updated, resulting length: 34
[DBG]  Update the agent path 101 | Original local length: 4 | New local length: 4
[DBG]  agent 101 t=0 => decoded (sx,sy)=(3,2) => global_id=847
[DBG]  agent 101 t=1 => decoded (sx,sy)=(2,2) => global_id=815
[DBG]  agent 101 t=2 => decoded (sx,sy)=(1,2) => global_id=783
[DBG]  agent 101 t=3 => decoded (sx,sy)=(0,2) => global_id=751
[DBG]  Complete path of agent 101:
[DBG]    Original: 985 984 983 982 950 918 917 885 884 883 882 850 849 848 847 846 846 847 815 783 751 719 718 686 654 654 622 590 589 588 556 524 492 460 428 427 426 425 393 361 329 328 296 264 232 200 168 
[DBG]    New:     985 984 983 982 950 918 917 885 884 883 882 850 849 848 847 846 846 847 815 783 751 719 718 686 654 654 622 590 589 588 556 524 492 460 428 427 426 425 393 361 329 328 296 264 232 200 168 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 985 984 983 982 950 918 917 885 884 883 882 850 849 848 847 846 846 
[DBG]    Local path (in submap): 847 815 783 751 
[DBG]    Suffix (out of submap): 719 718 686 654 654 622 590 589 588 556 524 492 460 428 427 426 425 393 361 329 328 296 264 232 200 168 
[DBG]  Original agent path length 101 je: 47
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 5: 985, 984, 983, 982, 950, 918, 917, 885, 884, 883, 882, 850, 849, 848, 847, 846, 846, 847, 815, 783, 751, 719, 718, 686, 654, 654, 622, 590, 589, 588, 556, 524, 492, 460, 428, 427, 426, 425, 393, 361, 329, 328, 296, 264, 232, 200, 168, 
[DBG]  Path for agent 101 updated, resulting length: 47
[DBG]  Update the agent path 111 | Original local length: 4 | New local length: 4
[DBG]  agent 111 t=0 => decoded (sx,sy)=(4,3) => global_id=880
[DBG]  agent 111 t=1 => decoded (sx,sy)=(3,3) => global_id=848
[DBG]  agent 111 t=2 => decoded (sx,sy)=(3,4) => global_id=849
[DBG]  agent 111 t=3 => decoded (sx,sy)=(2,4) => global_id=817
[DBG]  Complete path of agent 111:
[DBG]    Original: 964 965 997 998 999 1000 1001 1002 1003 1004 1005 973 974 975 976 944 912 880 848 849 817 818 786 787 755 755 756 724 725 726 727 728 696 664 632 600 601 569 570 538 539 540 
[DBG]    New:     964 965 997 998 999 1000 1001 1002 1003 1004 1005 973 974 975 976 944 912 880 848 849 817 818 786 787 755 755 756 724 725 726 727 728 696 664 632 600 601 569 570 538 539 540 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 964 965 997 998 999 1000 1001 1002 1003 1004 1005 973 974 975 976 944 912 
[DBG]    Local path (in submap): 880 848 849 817 
[DBG]    Suffix (out of submap): 818 786 787 755 755 756 724 725 726 727 728 696 664 632 600 601 569 570 538 539 540 
[DBG]  Original agent path length 111 je: 42
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 6: 964, 965, 997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 973, 974, 975, 976, 944, 912, 880, 848, 849, 817, 818, 786, 787, 755, 755, 756, 724, 725, 726, 727, 728, 696, 664, 632, 600, 601, 569, 570, 538, 539, 540, 
[DBG]  Path for agent 111 updated, resulting length: 42
[DBG]  Update the agent path 135 | Original local length: 3 | New local length: 3
[DBG]  agent 135 t=0 => decoded (sx,sy)=(4,2) => global_id=879
[DBG]  agent 135 t=1 => decoded (sx,sy)=(4,1) => global_id=878
[DBG]  agent 135 t=2 => decoded (sx,sy)=(4,0) => global_id=877
[DBG]  Complete path of agent 135:
[DBG]    Original: 696 728 729 761 793 792 824 823 822 821 820 819 818 850 849 848 847 879 878 877 876 875 843 811 779 747 715 714 682 650 649 617 616 584 583 551 550 549 517 485 484 483 482 450 449 448 416 384 
[DBG]    New:     696 728 729 761 793 792 824 823 822 821 820 819 818 850 849 848 847 879 878 877 876 875 843 811 779 747 715 714 682 650 649 617 616 584 583 551 550 549 517 485 484 483 482 450 449 448 416 384 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 696 728 729 761 793 792 824 823 822 821 820 819 818 850 849 848 847 
[DBG]    Local path (in submap): 879 878 877 
[DBG]    Suffix (out of submap): 876 875 843 811 779 747 715 714 682 650 649 617 616 584 583 551 550 549 517 485 484 483 482 450 449 448 416 384 
[DBG]  Original agent path length 135 je: 48
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 7: 696, 728, 729, 761, 793, 792, 824, 823, 822, 821, 820, 819, 818, 850, 849, 848, 847, 879, 878, 877, 876, 875, 843, 811, 779, 747, 715, 714, 682, 650, 649, 617, 616, 584, 583, 551, 550, 549, 517, 485, 484, 483, 482, 450, 449, 448, 416, 384, 
[DBG]  Path for agent 135 updated, resulting length: 48
[DBG]  Paths successfully updated.
[DBG]  (LNS.cpp) New path for agent 14: 
[DBG]  859, 858, 857, 856, 824, 823, 822, 821, 820, 819, 818, 817, 817, 817, 817, 849, 849, 849, 881, 880, 879, 878, 877, 876, 875, 843, 811, 779, 778, 777, 809, 808, 807, 
[DBG]  (LNS.cpp) New path for agent 27: 
[DBG]  653, 653, 653, 653, 653, 653, 653, 653, 653, 653, 654, 655, 687, 719, 751, 783, 783, 815, 814, 
[DBG]  (LNS.cpp) New path for agent 47: 
[DBG]  730, 729, 761, 793, 792, 824, 823, 822, 821, 820, 819, 818, 850, 849, 848, 847, 815, 814, 813, 812, 811, 810, 
[DBG]  (LNS.cpp) New path for agent 85: 
[DBG]  709, 741, 742, 774, 775, 776, 808, 809, 810, 811, 843, 844, 845, 877, 878, 879, 880, 881, 882, 850, 851, 819, 820, 821, 822, 790, 
[DBG]  (LNS.cpp) New path for agent 96: 
[DBG]  647, 648, 680, 712, 713, 714, 746, 746, 747, 748, 780, 781, 782, 814, 814, 814, 814, 846, 847, 848, 849, 817, 818, 819, 820, 821, 822, 854, 855, 856, 857, 858, 859, 827, 
[DBG]  (LNS.cpp) New path for agent 101: 
[DBG]  985, 984, 983, 982, 950, 918, 917, 885, 884, 883, 882, 850, 849, 848, 847, 846, 846, 847, 815, 783, 751, 719, 718, 686, 654, 654, 622, 590, 589, 588, 556, 524, 492, 460, 428, 427, 426, 425, 393, 361, 329, 328, 296, 264, 232, 200, 168, 
[DBG]  (LNS.cpp) New path for agent 111: 
[DBG]  964, 965, 997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 973, 974, 975, 976, 944, 912, 880, 848, 849, 817, 818, 786, 787, 755, 755, 756, 724, 725, 726, 727, 728, 696, 664, 632, 600, 601, 569, 570, 538, 539, 540, 
[DBG]  (LNS.cpp) New path for agent 135: 
[DBG]  696, 728, 729, 761, 793, 792, 824, 823, 822, 821, 820, 819, 818, 850, 849, 848, 847, 879, 878, 877, 876, 875, 843, 811, 779, 747, 715, 714, 682, 650, 649, 617, 616, 584, 583, 551, 550, 549, 517, 485, 484, 483, 482, 450, 449, 448, 416, 384, 
[DBG]  component_weights = {0.37229, 0.108561, 0.113527, 0.405622}
[DBG]  opSuccess value: 1
[STAT] neighbor.sum_of_costs before recomputation: 263
[STAT] neighbor.old_sum_of_costs before recomputation: 264
[STAT] sum_of_costs before recomputation: 4296
[DBG]  Validate solution immediately after SAT success.
[WARNING] Problem after SAT: Vertex conflict between agents 14 and 39 at location 880 at timestep 19
[DBG]  Attempting immediate repair via init_lns because problem occurred after SAT (should be applied only for conflicts...).
[DBG]  Passing 150 agents to init_lns (skip=true).
[DBG]  path_table contents for selected agents (neighbor.agents):
[DBG]    Agent 14 => controlling path length=33
[DBG]    Agent 27 => controlling path length=19
[DBG]    Agent 47 => controlling path length=22
[DBG]    Agent 85 => controlling path length=26
[DBG]    Agent 96 => controlling path length=34
[DBG]    Agent 101 => controlling path length=47
[DBG]    Agent 111 => controlling path length=42
[DBG]    Agent 135 => controlling path length=48
[DBG]  hodnota skip_initial_solution=1
[DBG]  We skip initialSolution => call buildCollisionData()
[DBG]  buildCollisionData() called â€“ skip_initial_solution case.
[DBG]  Agents.size()=150, collision_graph.size()=150
[DBG]  agent 14 => updateCollidingPairs => foundCollision
[DBG]  agent 39 => updateCollidingPairs => foundCollision
[DBG]  Conflicting agent pairs:
[DBG]  agent 14 is in conflict with agent 39
[DBG]  buildCollisionData() => sum_of_costs=4295, num_of_colliding_pairs=1
[DBG]  buildCollisionData done => sum_of_costs=4295, num_of_colliding_pairs=1
[DBG]  sum_of_cost hodnota: 4295
[DBG]  After skip/init build => iteration_stats.back(): sum_of_costs=4295, collisions=1
[DEBUG] Using default neighbor generation strategy for conflicts: 0
	InitLNS(PP): runtime = 0.0140823, iterations = 2, colliding pairs = 0, initial colliding pairs = 1, solution cost = 4289, initial solution cost = 4295, failed iterations = 0
[DBG]  init_lns->sum_of_costs after init_lns->run: 4289
[DBG]  sum_of_costs after assignment from init_lns->run: 4289
[DBG]  Recomputing sum_of_cost by dividing neighbor.sum_of_costs and neighbor.old_sum_of_costs
[STAT] sum_of_costs after recomputation: 4289
[STAT] Iteration 127
[DBG]  Using SAT operator (destroy+repair SAT).
[DBG]  ====================
[DBG]  SAT destroy operator called.
[DBG]  SAT heuristic: 2
[DBG]  key_agent_id: 93
[DBG]  key_agent_id global path length: 16
[DBG]  Submap content (global positions):
[DBG]  425 426 427 428 429 
[DBG]  457 458 459 460 461 
[DBG]  489 490 491 492 493 
[DBG]  521 522 523 524 525 
[DBG]  553 554 555 556 557 
[DBG]  Map content with agents and obstacles:
[DBG]  A . A A . 
[DBG]  . . . . X 
[DBG]  . . A . X 
[DBG]  . . . . . 
[DBG]  X X . . X 
[DBG]  content of the map structure that we pass to the SAT solver:
[DBG]  1  1  1  1  1  
[DBG]  1  1  1  1  -1  
[DBG]  1  1  1  1  -1  
[DBG]  1  1  1  1  1  
[DBG]  -1  -1  1  1  -1  
[DBG]  Identifying agents in a submap for rescheduling (when key_agent is there at the time 6):
[DBG]  Agent 16 found intervals in the sub-map:
[DBG]   [4..8]
[DBG]  Agent 16 (interval in submap: [4..8]) contains time 6, added to replan.
[DBG]  Agent 33 found intervals in the sub-map:
[DBG]   [5..7]
[DBG]  Agent 33 (interval in submap: [5..7]) contains time 6, added to replan.
[DBG]  Agent 81 found intervals in the sub-map:
[DBG]   [6..10]
[DBG]  Agent 81 (interval in submap: [6..10]) contains time 6, added to replan.
[DBG]  Agent 93 found intervals in the sub-map:
[DBG]   [2..9]
[DBG]  Agent 93 (interval in submap: [2..9]) contains time 6, added to replan.
[DBG]  Agent 125 found intervals in the sub-map:
[DBG]   [11..15]
[DBG]  Agent 125 is not in sub-map at time 6 (intervals: 
[DBG]  [11..15] )
[DBG]  Agent 16 | Start (global): 427 -> (local): (0, 2) at time 6 | Goal (global): 429 -> (local): (0, 4) at time 8
[DBG]  Agent 33 | Start (global): 428 -> (local): (0, 3) at time 6 | Goal (global): 429 -> (local): (0, 4) at time 7
[DBG]  Agent 81 | Start (global): 425 -> (local): (0, 0) at time 6 | Goal (global): 429 -> (local): (0, 4) at time 10
[DBG]  Agent 93 | Start (global): 491 -> (local): (2, 2) at time 6 | Goal (global): 556 -> (local): (4, 3) at time 9
[DBG]  [REPAIR] SAT destroy operator called.
[DBG]  [REPAIR] SAT operator â€“ launching subproblem FOR OPTIMIZATION.
[DBG]  Creating local paths (sx, sy) in the submap for T_sync = 6
[DBG]    Agent 16 (global paths from T=6 to 8) has local path: (0,2) (0,3) (0,4) 
[DBG]    Agent 33 (global paths from T=6 to 7) has local path: (0,3) (0,4) 
[DBG]    Agent 81 (global paths from T=6 to 10) has local path: (0,0) (0,1) (0,2) (0,3) (0,4) 
[DBG]    Agent 93 (global paths from T=6 to 9) has local path: (2,2) (3,2) (3,3) (4,3) 
[DBG]  Checking input data for SAT solver:
[DBG]    - Number of agents to replan: 4
[DBG]  Agent 16 has the original local path length: 3 => Start (0,2), Goal (0,4)
[DBG]  Agent 33 has the original local path length: 2 => Start (0,3), Goal (0,4)
[DBG]  Agent 81 has the original local path length: 5 => Start (0,0), Goal (0,4)
[DBG]  Agent 93 has the original local path length: 4 => Start (2,2), Goal (4,3)
[DBG]  Start position: (0, 2), (0, 3), (0, 0), (2, 2), 
[DBG]  Goal position: (0, 4), (0, 4), (0, 4), (4, 3), 
[DBG]  SAT instance and solver created.
Currently solving
Instance name: scen
Map name: map
Encoding used: disappear_at_goal
SAT solver used: Kissat
Optimizing function: sum of costs
Number of agents: 4
Mks LB: 5
SoC LB: 14
Delta: 0
Remaining time: 300000 [ms]

Vertex conflict! Agents 0, 1, timestep 3, location 0
Swapping conflict! Agents 0, 1, timestep 3, edge (0,0)
Vertex conflict! Agents 0, 1, timestep 4, location 0
Vertex conflict! Agents 0, 3, timestep 4, location 0
Vertex conflict! Agents 1, 3, timestep 4, location 0
Found plan [agents = 4] [timesteps = 5]
Agent #0 : 2 3 4 0 0 
Agent #1 : 3 4 0 0 0 
Agent #2 : 0 1 2 3 4 
Agent #3 : 11 15 18 19 0 

[STAT] Solver returned: 0
[DBG]  Agent (index) 16 | New local path (submap idx):
[DBG]  2 3 4 
[DBG]  Agent (index) 33 | New local path (submap idx):
[DBG]  3 4 
[DBG]  Agent (index) 81 | New local path (submap idx):
[DBG]  0 1 2 3 4 
[DBG]  Agent (index) 93 | New local path (submap idx):
[DBG]  11 15 18 19 
[DBG]  Update the agent path 16 | Original local length: 3 | New local length: 3
[DBG]  agent 16 t=0 => decoded (sx,sy)=(0,2) => global_id=427
[DBG]  agent 16 t=1 => decoded (sx,sy)=(0,3) => global_id=428
[DBG]  agent 16 t=2 => decoded (sx,sy)=(0,4) => global_id=429
[DBG]  Complete path of agent 16:
[DBG]    Original: 454 422 423 424 425 426 427 428 429 430 430 431 432 400 368 367 335 336 337 338 306 274 
[DBG]    New:     454 422 423 424 425 426 427 428 429 430 430 431 432 400 368 367 335 336 337 338 306 274 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 454 422 423 424 425 426 
[DBG]    Local path (in submap): 427 428 429 
[DBG]    Suffix (out of submap): 430 430 431 432 400 368 367 335 336 337 338 306 274 
[DBG]  Original agent path length 16 je: 22
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 0: 454, 422, 423, 424, 425, 426, 427, 428, 429, 430, 430, 431, 432, 400, 368, 367, 335, 336, 337, 338, 306, 274, 
[DBG]  Path for agent 16 updated, resulting length: 22
[DBG]  Update the agent path 33 | Original local length: 2 | New local length: 2
[DBG]  agent 33 t=0 => decoded (sx,sy)=(0,3) => global_id=428
[DBG]  agent 33 t=1 => decoded (sx,sy)=(0,4) => global_id=429
[DBG]  Complete path of agent 33:
[DBG]    Original: 360 361 362 363 395 427 428 429 430 462 463 464 465 433 401 402 402 403 404 405 437 469 470 502 503 504 505 506 538 539 540 508 509 510 
[DBG]    New:     360 361 362 363 395 427 428 429 430 462 463 464 465 433 401 402 402 403 404 405 437 469 470 502 503 504 505 506 538 539 540 508 509 510 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 360 361 362 363 395 427 
[DBG]    Local path (in submap): 428 429 
[DBG]    Suffix (out of submap): 430 462 463 464 465 433 401 402 402 403 404 405 437 469 470 502 503 504 505 506 538 539 540 508 509 510 
[DBG]  Original agent path length 33 je: 34
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 1: 360, 361, 362, 363, 395, 427, 428, 429, 430, 462, 463, 464, 465, 433, 401, 402, 402, 403, 404, 405, 437, 469, 470, 502, 503, 504, 505, 506, 538, 539, 540, 508, 509, 510, 
[DBG]  Path for agent 33 updated, resulting length: 34
[DBG]  Update the agent path 81 | Original local length: 5 | New local length: 5
[DBG]  agent 81 t=0 => decoded (sx,sy)=(0,0) => global_id=425
[DBG]  agent 81 t=1 => decoded (sx,sy)=(0,1) => global_id=426
[DBG]  agent 81 t=2 => decoded (sx,sy)=(0,2) => global_id=427
[DBG]  agent 81 t=3 => decoded (sx,sy)=(0,3) => global_id=428
[DBG]  agent 81 t=4 => decoded (sx,sy)=(0,4) => global_id=429
[DBG]  Complete path of agent 81:
[DBG]    Original: 419 420 421 422 423 424 425 426 427 428 429 430 431 432 432 432 432 433 465 466 498 530 531 563 
[DBG]    New:     419 420 421 422 423 424 425 426 427 428 429 430 431 432 432 432 432 433 465 466 498 530 531 563 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 419 420 421 422 423 424 
[DBG]    Local path (in submap): 425 426 427 428 429 
[DBG]    Suffix (out of submap): 430 431 432 432 432 432 433 465 466 498 530 531 563 
[DBG]  Original agent path length 81 je: 24
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 2: 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 432, 432, 432, 433, 465, 466, 498, 530, 531, 563, 
[DBG]  Path for agent 81 updated, resulting length: 24
[DBG]  Update the agent path 93 | Original local length: 4 | New local length: 4
[DBG]  agent 93 t=0 => decoded (sx,sy)=(2,2) => global_id=491
[DBG]  agent 93 t=1 => decoded (sx,sy)=(3,2) => global_id=523
[DBG]  agent 93 t=2 => decoded (sx,sy)=(4,2) => global_id=555
[DBG]  agent 93 t=3 => decoded (sx,sy)=(4,3) => global_id=556
[DBG]  Complete path of agent 93:
[DBG]    Original: 423 424 425 457 458 459 491 523 524 556 588 589 590 591 592 560 
[DBG]    New:     423 424 425 457 458 459 491 523 555 556 588 589 590 591 592 560 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 423 424 425 457 458 459 
[DBG]    Local path (in submap): 491 523 555 556 
[DBG]    Suffix (out of submap): 588 589 590 591 592 560 
[DBG]  Original agent path length 93 je: 16
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 3: 423, 424, 425, 457, 458, 459, 491, 523, 555, 556, 588, 589, 590, 591, 592, 560, 
[DBG]  Path for agent 93 updated, resulting length: 16
[DBG]  Paths successfully updated.
[DBG]  (LNS.cpp) New path for agent 16: 
[DBG]  454, 422, 423, 424, 425, 426, 427, 428, 429, 430, 430, 431, 432, 400, 368, 367, 335, 336, 337, 338, 306, 274, 
[DBG]  (LNS.cpp) New path for agent 33: 
[DBG]  360, 361, 362, 363, 395, 427, 428, 429, 430, 462, 463, 464, 465, 433, 401, 402, 402, 403, 404, 405, 437, 469, 470, 502, 503, 504, 505, 506, 538, 539, 540, 508, 509, 510, 
[DBG]  (LNS.cpp) New path for agent 81: 
[DBG]  419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 432, 432, 432, 433, 465, 466, 498, 530, 531, 563, 
[DBG]  (LNS.cpp) New path for agent 93: 
[DBG]  423, 424, 425, 457, 458, 459, 491, 523, 555, 556, 588, 589, 590, 591, 592, 560, 
[DBG]  component_weights = {0.377024, 0.107742, 0.112671, 0.402563}
[DBG]  opSuccess value: 1
[STAT] neighbor.sum_of_costs before recomputation: 92
[STAT] neighbor.old_sum_of_costs before recomputation: 92
[STAT] sum_of_costs before recomputation: 4289
[DBG]  Validate solution immediately after SAT success.
[DBG]  No problems after SAT replan.
[DBG]  Recomputing sum_of_cost by dividing neighbor.sum_of_costs and neighbor.old_sum_of_costs
[STAT] sum_of_costs after recomputation: 4289
[STAT] Iteration 128
[DBG]  Using SAT operator (destroy+repair SAT).
[DBG]  ====================
[DBG]  SAT destroy operator called.
[DBG]  SAT heuristic: 2
[DBG]  key_agent_id: 114
[DBG]  key_agent_id global path length: 43
[DBG]  Submap content (global positions):
[DBG]  591 592 593 594 595 
[DBG]  623 624 625 626 627 
[DBG]  655 656 657 658 659 
[DBG]  687 688 689 690 691 
[DBG]  719 720 721 722 723 
[DBG]  Map content with agents and obstacles:
[DBG]  A A . . X 
[DBG]  . X . X . 
[DBG]  . . A . A 
[DBG]  . . A X . 
[DBG]  . A A . X 
[DBG]  content of the map structure that we pass to the SAT solver:
[DBG]  1  1  1  1  -1  
[DBG]  1  -1  1  -1  1  
[DBG]  1  1  1  1  1  
[DBG]  1  1  1  -1  1  
[DBG]  1  1  1  1  -1  
[DBG]  Identifying agents in a submap for rescheduling (when key_agent is there at the time 14):
[DBG]  Agent 3 found intervals in the sub-map:
[DBG]  
[DBG]  Agent 3 is not in sub-map at time 14 (intervals: 
[DBG]  )
[DBG]  Agent 19 found intervals in the sub-map:
[DBG]   [0..1] [5..16]
[DBG]  Agent 19 (interval in submap: [5..16]) contains time 14, added to replan.
[DBG]  Agent 27 found intervals in the sub-map:
[DBG]   [11..13]
[DBG]  Agent 27 is not in sub-map at time 14 (intervals: 
[DBG]  [11..13] )
[DBG]  Agent 56 found intervals in the sub-map:
[DBG]   [14..20]
[DBG]  Agent 56 (interval in submap: [14..20]) contains time 14, added to replan.
[DBG]  Agent 61 found intervals in the sub-map:
[DBG]   [11..18]
[DBG]  Agent 61 (interval in submap: [11..18]) contains time 14, added to replan.
[DBG]  Agent 74 found intervals in the sub-map:
[DBG]   [10..15]
[DBG]  Agent 74 (interval in submap: [10..15]) contains time 14, added to replan.
[DBG]  Agent 79 found intervals in the sub-map:
[DBG]   [14..19]
[DBG]  Agent 79 (interval in submap: [14..19]) contains time 14, added to replan.
[DBG]  Agent 93 found intervals in the sub-map:
[DBG]   [13..14]
[DBG]  Agent 93 (interval in submap: [13..14]) contains time 14, added to replan.
[DBG]  Agent 114 found intervals in the sub-map:
[DBG]   [10..16]
[DBG]  Agent 114 (interval in submap: [10..16]) contains time 14, added to replan.
[DBG]  Agent 19 | Start (global): 591 -> (local): (0, 0) at time 14 | Goal (global): 591 -> (local): (0, 0) at time 16
[DBG]  Agent 56 | Start (global): 720 -> (local): (4, 1) at time 14 | Goal (global): 627 -> (local): (1, 4) at time 20
[DBG]  Agent 61 | Start (global): 689 -> (local): (3, 2) at time 14 | Goal (global): 627 -> (local): (1, 4) at time 18
[DBG]  Agent 74 | Start (global): 659 -> (local): (2, 4) at time 14 | Goal (global): 627 -> (local): (1, 4) at time 15
[DBG]  Agent 79 | Start (global): 721 -> (local): (4, 2) at time 14 | Goal (global): 627 -> (local): (1, 4) at time 19
[DBG]  Agent 93 | Start (global): 592 -> (local): (0, 1) at time 14 | Goal (global): 592 -> (local): (0, 1) at time 14
[DBG]  Agent 114 | Start (global): 657 -> (local): (2, 2) at time 14 | Goal (global): 593 -> (local): (0, 2) at time 16
[DBG]  [REPAIR] SAT destroy operator called.
[DBG]  [REPAIR] SAT operator â€“ launching subproblem FOR OPTIMIZATION.
[DBG]  Creating local paths (sx, sy) in the submap for T_sync = 14
[DBG]    Agent 19 (global paths from T=14 to 16) has local path: (0,0) (0,1) (0,0) 
[DBG]    Agent 56 (global paths from T=14 to 20) has local path: (4,1) (3,1) (3,2) (2,2) (2,3) (2,4) (1,4) 
[DBG]    Agent 61 (global paths from T=14 to 18) has local path: (3,2) (2,2) (2,3) (2,4) (1,4) 
[DBG]    Agent 74 (global paths from T=14 to 15) has local path: (2,4) (1,4) 
[DBG]    Agent 79 (global paths from T=14 to 19) has local path: (4,2) (3,2) (2,2) (2,3) (2,4) (1,4) 
[DBG]    Agent 93 (global paths from T=14 to 14) has local path: (0,1) 
[DBG]    Agent 114 (global paths from T=14 to 16) has local path: (2,2) (1,2) (0,2) 
[DBG]  Checking input data for SAT solver:
[DBG]    - Number of agents to replan: 7
[DBG]  Agent 19 has the original local path length: 3 => Start (0,0), Goal (0,0)
[DBG]  Agent 56 has the original local path length: 7 => Start (4,1), Goal (1,4)
[DBG]  Agent 61 has the original local path length: 5 => Start (3,2), Goal (1,4)
[DBG]  Agent 74 has the original local path length: 2 => Start (2,4), Goal (1,4)
[DBG]  Agent 79 has the original local path length: 6 => Start (4,2), Goal (1,4)
[DBG]  Agent 93 has the original local path length: 1 => Start (0,1), Goal (0,1)
[DBG]  Agent 114 has the original local path length: 3 => Start (2,2), Goal (0,2)
[DBG]  Start position: (0, 0), (4, 1), (3, 2), (2, 4), (4, 2), (0, 1), (2, 2), 
[DBG]  Goal position: (0, 0), (1, 4), (1, 4), (1, 4), (1, 4), (0, 1), (0, 2), 
[DBG]  SAT instance and solver created.
Currently solving
Instance name: scen
Map name: map
Encoding used: disappear_at_goal
SAT solver used: Kissat
Optimizing function: sum of costs
Number of agents: 7
Mks LB: 7
SoC LB: 25
Delta: 0
Remaining time: 300000 [ms]

Vertex conflict! Agents 0, 2, timestep 5, location 0
Swapping conflict! Agents 0, 2, timestep 5, edge (0,0)
Vertex conflict! Agents 0, 2, timestep 6, location 0
Vertex conflict! Agents 0, 3, timestep 2, location 0
Swapping conflict! Agents 0, 3, timestep 2, edge (0,0)
Vertex conflict! Agents 0, 3, timestep 3, location 0
Swapping conflict! Agents 0, 3, timestep 3, edge (0,0)
Vertex conflict! Agents 0, 3, timestep 4, location 0
Swapping conflict! Agents 0, 3, timestep 4, edge (0,0)
Vertex conflict! Agents 0, 3, timestep 5, location 0
Swapping conflict! Agents 0, 3, timestep 5, edge (0,0)
Vertex conflict! Agents 0, 3, timestep 6, location 0
Vertex conflict! Agents 0, 4, timestep 6, location 0
Vertex conflict! Agents 0, 5, timestep 1, location 0
Swapping conflict! Agents 0, 5, timestep 1, edge (0,0)
Vertex conflict! Agents 0, 5, timestep 2, location 0
Swapping conflict! Agents 0, 5, timestep 2, edge (0,0)
Vertex conflict! Agents 0, 5, timestep 3, location 0
Swapping conflict! Agents 0, 5, timestep 3, edge (0,0)
Vertex conflict! Agents 0, 5, timestep 4, location 0
Swapping conflict! Agents 0, 5, timestep 4, edge (0,0)
Vertex conflict! Agents 0, 5, timestep 5, location 0
Swapping conflict! Agents 0, 5, timestep 5, edge (0,0)
Vertex conflict! Agents 0, 5, timestep 6, location 0
Vertex conflict! Agents 0, 6, timestep 3, location 0
Swapping conflict! Agents 0, 6, timestep 3, edge (0,0)
Vertex conflict! Agents 0, 6, timestep 4, location 0
Swapping conflict! Agents 0, 6, timestep 4, edge (0,0)
Vertex conflict! Agents 0, 6, timestep 5, location 0
Swapping conflict! Agents 0, 6, timestep 5, edge (0,0)
Vertex conflict! Agents 0, 6, timestep 6, location 0
Vertex conflict! Agents 2, 3, timestep 5, location 0
Swapping conflict! Agents 2, 3, timestep 5, edge (0,0)
Vertex conflict! Agents 2, 3, timestep 6, location 0
Vertex conflict! Agents 2, 4, timestep 6, location 0
Vertex conflict! Agents 2, 5, timestep 5, location 0
Swapping conflict! Agents 2, 5, timestep 5, edge (0,0)
Vertex conflict! Agents 2, 5, timestep 6, location 0
Vertex conflict! Agents 2, 6, timestep 5, location 0
Swapping conflict! Agents 2, 6, timestep 5, edge (0,0)
Vertex conflict! Agents 2, 6, timestep 6, location 0
Vertex conflict! Agents 3, 4, timestep 6, location 0
Vertex conflict! Agents 3, 5, timestep 2, location 0
Swapping conflict! Agents 3, 5, timestep 2, edge (0,0)
Vertex conflict! Agents 3, 5, timestep 3, location 0
Swapping conflict! Agents 3, 5, timestep 3, edge (0,0)
Vertex conflict! Agents 3, 5, timestep 4, location 0
Swapping conflict! Agents 3, 5, timestep 4, edge (0,0)
Vertex conflict! Agents 3, 5, timestep 5, location 0
Swapping conflict! Agents 3, 5, timestep 5, edge (0,0)
Vertex conflict! Agents 3, 5, timestep 6, location 0
Vertex conflict! Agents 3, 6, timestep 3, location 0
Swapping conflict! Agents 3, 6, timestep 3, edge (0,0)
Vertex conflict! Agents 3, 6, timestep 4, location 0
Swapping conflict! Agents 3, 6, timestep 4, edge (0,0)
Vertex conflict! Agents 3, 6, timestep 5, location 0
Swapping conflict! Agents 3, 6, timestep 5, edge (0,0)
Vertex conflict! Agents 3, 6, timestep 6, location 0
Vertex conflict! Agents 4, 5, timestep 6, location 0
Vertex conflict! Agents 4, 6, timestep 6, location 0
Vertex conflict! Agents 5, 6, timestep 3, location 0
Swapping conflict! Agents 5, 6, timestep 3, edge (0,0)
Vertex conflict! Agents 5, 6, timestep 4, location 0
Swapping conflict! Agents 5, 6, timestep 4, edge (0,0)
Vertex conflict! Agents 5, 6, timestep 5, location 0
Swapping conflict! Agents 5, 6, timestep 5, edge (0,0)
Vertex conflict! Agents 5, 6, timestep 6, location 0
Found plan [agents = 7] [timesteps = 7]
Agent #0 : 0 0 0 0 0 0 0 
Agent #1 : 17 18 14 9 10 11 6 
Agent #2 : 14 9 10 11 6 0 0 
Agent #3 : 11 6 0 0 0 0 0 
Agent #4 : 18 14 9 10 11 6 0 
Agent #5 : 1 0 0 0 0 0 0 
Agent #6 : 9 5 2 0 0 0 0 

[STAT] Solver returned: 0
[DBG]  Agent (index) 19 | New local path (submap idx):
[DBG]  0 
[DBG]  Agent (index) 56 | New local path (submap idx):
[DBG]  17 18 14 9 10 11 6 
[DBG]  Agent (index) 61 | New local path (submap idx):
[DBG]  14 9 10 11 6 
[DBG]  Agent (index) 74 | New local path (submap idx):
[DBG]  11 6 
[DBG]  Agent (index) 79 | New local path (submap idx):
[DBG]  18 14 9 10 11 6 
[DBG]  Agent (index) 93 | New local path (submap idx):
[DBG]  1 
[DBG]  Agent (index) 114 | New local path (submap idx):
[DBG]  9 5 2 
[DBG]  Update the agent path 19 | Original local length: 3 | New local length: 1
[DBG]  agent 19 t=0 => decoded (sx,sy)=(0,0) => global_id=591
[DBG]  Complete path of agent 19:
[DBG]    Original: 625 593 561 560 560 592 591 623 623 623 623 623 623 623 591 592 591 590 589 588 587 619 651 683 
[DBG]    New:     625 593 561 560 560 592 591 623 623 623 623 623 623 623 591 590 589 588 587 619 651 683 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 625 593 561 560 560 592 591 623 623 623 623 623 623 623 
[DBG]    Local path (in submap): 591 590 589 
[DBG]    Suffix (out of submap): 588 587 619 651 683 
[DBG]  Original agent path length 19 je: 24
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 0: 625, 593, 561, 560, 560, 592, 591, 623, 623, 623, 623, 623, 623, 623, 591, 590, 589, 588, 587, 619, 651, 683, 
[DBG]  Path for agent 19 updated, resulting length: 22
[DBG]  Update the agent path 56 | Original local length: 7 | New local length: 7
[DBG]  agent 56 t=0 => decoded (sx,sy)=(4,1) => global_id=720
[DBG]  agent 56 t=1 => decoded (sx,sy)=(4,2) => global_id=721
[DBG]  agent 56 t=2 => decoded (sx,sy)=(3,2) => global_id=689
[DBG]  agent 56 t=3 => decoded (sx,sy)=(2,2) => global_id=657
[DBG]  agent 56 t=4 => decoded (sx,sy)=(2,3) => global_id=658
[DBG]  agent 56 t=5 => decoded (sx,sy)=(2,4) => global_id=659
[DBG]  agent 56 t=6 => decoded (sx,sy)=(1,4) => global_id=627
[DBG]  Complete path of agent 56:
[DBG]    Original: 805 806 807 808 809 810 811 812 813 814 815 783 751 752 720 688 689 657 658 659 627 628 629 597 565 533 501 469 470 438 439 440 408 409 377 378 379 380 348 349 350 351 319 287 255 
[DBG]    New:     805 806 807 808 809 810 811 812 813 814 815 783 751 752 720 721 689 657 658 659 627 628 629 597 565 533 501 469 470 438 439 440 408 409 377 378 379 380 348 349 350 351 319 287 255 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 805 806 807 808 809 810 811 812 813 814 815 783 751 752 
[DBG]    Local path (in submap): 720 721 689 657 658 659 627 
[DBG]    Suffix (out of submap): 628 629 597 565 533 501 469 470 438 439 440 408 409 377 378 379 380 348 349 350 351 319 287 255 
[DBG]  Original agent path length 56 je: 45
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 1: 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 783, 751, 752, 720, 721, 689, 657, 658, 659, 627, 628, 629, 597, 565, 533, 501, 469, 470, 438, 439, 440, 408, 409, 377, 378, 379, 380, 348, 349, 350, 351, 319, 287, 255, 
[DBG]  Path for agent 56 updated, resulting length: 45
[DBG]  Update the agent path 61 | Original local length: 5 | New local length: 5
[DBG]  agent 61 t=0 => decoded (sx,sy)=(3,2) => global_id=689
[DBG]  agent 61 t=1 => decoded (sx,sy)=(2,2) => global_id=657
[DBG]  agent 61 t=2 => decoded (sx,sy)=(2,3) => global_id=658
[DBG]  agent 61 t=3 => decoded (sx,sy)=(2,4) => global_id=659
[DBG]  agent 61 t=4 => decoded (sx,sy)=(1,4) => global_id=627
[DBG]  Complete path of agent 61:
[DBG]    Original: 813 813 813 814 814 814 814 814 782 750 751 719 720 688 689 657 658 659 627 628 596 597 565 533 534 502 503 504 505 473 472 472 440 408 409 377 345 313 
[DBG]    New:     813 813 813 814 814 814 814 814 782 750 751 719 720 688 689 657 658 659 627 628 596 597 565 533 534 502 503 504 505 473 472 472 440 408 409 377 345 313 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 813 813 813 814 814 814 814 814 782 750 751 719 720 688 
[DBG]    Local path (in submap): 689 657 658 659 627 
[DBG]    Suffix (out of submap): 628 596 597 565 533 534 502 503 504 505 473 472 472 440 408 409 377 345 313 
[DBG]  Original agent path length 61 je: 38
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 2: 813, 813, 813, 814, 814, 814, 814, 814, 782, 750, 751, 719, 720, 688, 689, 657, 658, 659, 627, 628, 596, 597, 565, 533, 534, 502, 503, 504, 505, 473, 472, 472, 440, 408, 409, 377, 345, 313, 
[DBG]  Path for agent 61 updated, resulting length: 38
[DBG]  Update the agent path 74 | Original local length: 2 | New local length: 2
[DBG]  agent 74 t=0 => decoded (sx,sy)=(2,4) => global_id=659
[DBG]  agent 74 t=1 => decoded (sx,sy)=(1,4) => global_id=627
[DBG]  Complete path of agent 74:
[DBG]    Original: 752 784 783 783 782 750 718 718 686 654 655 656 657 658 659 627 628 596 596 596 597 565 533 534 502 470 470 502 503 504 
[DBG]    New:     752 784 783 783 782 750 718 718 686 654 655 656 657 658 659 627 628 596 596 596 597 565 533 534 502 470 470 502 503 504 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 752 784 783 783 782 750 718 718 686 654 655 656 657 658 
[DBG]    Local path (in submap): 659 627 
[DBG]    Suffix (out of submap): 628 596 596 596 597 565 533 534 502 470 470 502 503 504 
[DBG]  Original agent path length 74 je: 30
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 3: 752, 784, 783, 783, 782, 750, 718, 718, 686, 654, 655, 656, 657, 658, 659, 627, 628, 596, 596, 596, 597, 565, 533, 534, 502, 470, 470, 502, 503, 504, 
[DBG]  Path for agent 74 updated, resulting length: 30
[DBG]  Update the agent path 79 | Original local length: 6 | New local length: 6
[DBG]  agent 79 t=0 => decoded (sx,sy)=(4,2) => global_id=721
[DBG]  agent 79 t=1 => decoded (sx,sy)=(3,2) => global_id=689
[DBG]  agent 79 t=2 => decoded (sx,sy)=(2,2) => global_id=657
[DBG]  agent 79 t=3 => decoded (sx,sy)=(2,3) => global_id=658
[DBG]  agent 79 t=4 => decoded (sx,sy)=(2,4) => global_id=659
[DBG]  agent 79 t=5 => decoded (sx,sy)=(1,4) => global_id=627
[DBG]  Complete path of agent 79:
[DBG]    Original: 1004 1005 1006 974 942 910 878 879 847 815 783 751 752 753 721 689 657 658 659 627 628 629 597 565 566 534 502 503 504 472 440 441 409 377 345 313 281 249 217 185 153 121 122 123 
[DBG]    New:     1004 1005 1006 974 942 910 878 879 847 815 783 751 752 753 721 689 657 658 659 627 628 629 597 565 566 534 502 503 504 472 440 441 409 377 345 313 281 249 217 185 153 121 122 123 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 1004 1005 1006 974 942 910 878 879 847 815 783 751 752 753 
[DBG]    Local path (in submap): 721 689 657 658 659 627 
[DBG]    Suffix (out of submap): 628 629 597 565 566 534 502 503 504 472 440 441 409 377 345 313 281 249 217 185 153 121 122 123 
[DBG]  Original agent path length 79 je: 44
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 4: 1004, 1005, 1006, 974, 942, 910, 878, 879, 847, 815, 783, 751, 752, 753, 721, 689, 657, 658, 659, 627, 628, 629, 597, 565, 566, 534, 502, 503, 504, 472, 440, 441, 409, 377, 345, 313, 281, 249, 217, 185, 153, 121, 122, 123, 
[DBG]  Path for agent 79 updated, resulting length: 44
[DBG]  Update the agent path 93 | Original local length: 1 | New local length: 1
[DBG]  agent 93 t=0 => decoded (sx,sy)=(0,1) => global_id=592
[DBG]  Complete path of agent 93:
[DBG]    Original: 423 424 425 457 458 459 491 523 555 556 588 589 590 591 592 560 
[DBG]    New:     423 424 425 457 458 459 491 523 555 556 588 589 590 591 592 560 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 423 424 425 457 458 459 491 523 555 556 588 589 590 591 
[DBG]    Local path (in submap): 592 
[DBG]    Suffix (out of submap): 560 
[DBG]  Original agent path length 93 je: 16
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 5: 423, 424, 425, 457, 458, 459, 491, 523, 555, 556, 588, 589, 590, 591, 592, 560, 
[DBG]  Path for agent 93 updated, resulting length: 16
[DBG]  Update the agent path 114 | Original local length: 3 | New local length: 3
[DBG]  agent 114 t=0 => decoded (sx,sy)=(2,2) => global_id=657
[DBG]  agent 114 t=1 => decoded (sx,sy)=(1,2) => global_id=625
[DBG]  agent 114 t=2 => decoded (sx,sy)=(0,2) => global_id=593
[DBG]  Complete path of agent 114:
[DBG]    Original: 875 843 844 812 813 781 782 782 783 751 719 687 688 656 657 625 593 561 529 528 496 464 465 466 467 468 469 470 438 439 407 375 343 344 344 345 313 281 249 217 185 186 154 
[DBG]    New:     875 843 844 812 813 781 782 782 783 751 719 687 688 656 657 625 593 561 529 528 496 464 465 466 467 468 469 470 438 439 407 375 343 344 344 345 313 281 249 217 185 186 154 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 875 843 844 812 813 781 782 782 783 751 719 687 688 656 
[DBG]    Local path (in submap): 657 625 593 
[DBG]    Suffix (out of submap): 561 529 528 496 464 465 466 467 468 469 470 438 439 407 375 343 344 344 345 313 281 249 217 185 186 154 
[DBG]  Original agent path length 114 je: 43
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 6: 875, 843, 844, 812, 813, 781, 782, 782, 783, 751, 719, 687, 688, 656, 657, 625, 593, 561, 529, 528, 496, 464, 465, 466, 467, 468, 469, 470, 438, 439, 407, 375, 343, 344, 344, 345, 313, 281, 249, 217, 185, 186, 154, 
[DBG]  Path for agent 114 updated, resulting length: 43
[DBG]  Paths successfully updated.
[DBG]  (LNS.cpp) New path for agent 19: 
[DBG]  625, 593, 561, 560, 560, 592, 591, 623, 623, 623, 623, 623, 623, 623, 591, 590, 589, 588, 587, 619, 651, 683, 
[DBG]  (LNS.cpp) New path for agent 56: 
[DBG]  805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 783, 751, 752, 720, 721, 689, 657, 658, 659, 627, 628, 629, 597, 565, 533, 501, 469, 470, 438, 439, 440, 408, 409, 377, 378, 379, 380, 348, 349, 350, 351, 319, 287, 255, 
[DBG]  (LNS.cpp) New path for agent 61: 
[DBG]  813, 813, 813, 814, 814, 814, 814, 814, 782, 750, 751, 719, 720, 688, 689, 657, 658, 659, 627, 628, 596, 597, 565, 533, 534, 502, 503, 504, 505, 473, 472, 472, 440, 408, 409, 377, 345, 313, 
[DBG]  (LNS.cpp) New path for agent 74: 
[DBG]  752, 784, 783, 783, 782, 750, 718, 718, 686, 654, 655, 656, 657, 658, 659, 627, 628, 596, 596, 596, 597, 565, 533, 534, 502, 470, 470, 502, 503, 504, 
[DBG]  (LNS.cpp) New path for agent 79: 
[DBG]  1004, 1005, 1006, 974, 942, 910, 878, 879, 847, 815, 783, 751, 752, 753, 721, 689, 657, 658, 659, 627, 628, 629, 597, 565, 566, 534, 502, 503, 504, 472, 440, 441, 409, 377, 345, 313, 281, 249, 217, 185, 153, 121, 122, 123, 
[DBG]  (LNS.cpp) New path for agent 93: 
[DBG]  423, 424, 425, 457, 458, 459, 491, 523, 555, 556, 588, 589, 590, 591, 592, 560, 
[DBG]  (LNS.cpp) New path for agent 114: 
[DBG]  875, 843, 844, 812, 813, 781, 782, 782, 783, 751, 719, 687, 688, 656, 657, 625, 593, 561, 529, 528, 496, 464, 465, 466, 467, 468, 469, 470, 438, 439, 407, 375, 343, 344, 344, 345, 313, 281, 249, 217, 185, 186, 154, 
[DBG]  component_weights = {0.373938, 0.10686, 0.111749, 0.407452}
[DBG]  opSuccess value: 1
[STAT] neighbor.sum_of_costs before recomputation: 231
[STAT] neighbor.old_sum_of_costs before recomputation: 233
[STAT] sum_of_costs before recomputation: 4289
[DBG]  Validate solution immediately after SAT success.
[WARNING] Problem after SAT: Edge conflict between agents 19 and 0 at edge (591,590) at timestep 15
[DBG]  Attempting immediate repair via init_lns because problem occurred after SAT (should be applied only for conflicts...).
[DBG]  Passing 150 agents to init_lns (skip=true).
[DBG]  path_table contents for selected agents (neighbor.agents):
[DBG]    Agent 19 => controlling path length=22
[DBG]    Agent 56 => controlling path length=45
[DBG]    Agent 61 => controlling path length=38
[DBG]    Agent 74 => controlling path length=30
[DBG]    Agent 79 => controlling path length=44
[DBG]    Agent 93 => controlling path length=16
[DBG]    Agent 114 => controlling path length=43
[DBG]  hodnota skip_initial_solution=1
[DBG]  We skip initialSolution => call buildCollisionData()
[DBG]  buildCollisionData() called â€“ skip_initial_solution case.
[DBG]  Agents.size()=150, collision_graph.size()=150
[DBG]  agent 0 => updateCollidingPairs => foundCollision
[DBG]  agent 19 => updateCollidingPairs => foundCollision
[DBG]  agent 20 => updateCollidingPairs => foundCollision
[DBG]  Conflicting agent pairs:
[DBG]  agent 0 is in conflict with agent 19
[DBG]  agent 19 is in conflict with agent 20
[DBG]  buildCollisionData() => sum_of_costs=4287, num_of_colliding_pairs=2
[DBG]  buildCollisionData done => sum_of_costs=4287, num_of_colliding_pairs=2
[DBG]  sum_of_cost hodnota: 4287
[DBG]  After skip/init build => iteration_stats.back(): sum_of_costs=4287, collisions=2
[DEBUG] Using default neighbor generation strategy for conflicts: 1
	InitLNS(PP): runtime = 0.008161, iterations = 2, colliding pairs = 0, initial colliding pairs = 2, solution cost = 4303, initial solution cost = 4287, failed iterations = 0
[DBG]  init_lns->sum_of_costs after init_lns->run: 4303
[DBG]  sum_of_costs after assignment from init_lns->run: 4303
[DBG]  Recomputing sum_of_cost by dividing neighbor.sum_of_costs and neighbor.old_sum_of_costs
[STAT] sum_of_costs after recomputation: 4303
[STAT] Iteration 129
[DBG]  Using SAT operator (destroy+repair SAT).
[DBG]  ====================
[DBG]  SAT destroy operator called.
[DBG]  SAT heuristic: 2
[DBG]  key_agent_id: 113
[DBG]  key_agent_id global path length: 35
[DBG]  Submap content (global positions):
[DBG]  462 463 464 465 466 
[DBG]  494 495 496 497 498 
[DBG]  526 527 528 529 530 
[DBG]  558 559 560 561 562 
[DBG]  590 591 592 593 594 
[DBG]  Map content with agents and obstacles:
[DBG]  . . A . . 
[DBG]  . X . X . 
[DBG]  . X A . . 
[DBG]  . X . . X 
[DBG]  . A . A . 
[DBG]  content of the map structure that we pass to the SAT solver:
[DBG]  1  1  1  1  1  
[DBG]  1  -1  1  -1  1  
[DBG]  1  -1  1  1  1  
[DBG]  1  -1  1  1  -1  
[DBG]  1  1  1  1  1  
[DBG]  Identifying agents in a submap for rescheduling (when key_agent is there at the time 5):
[DBG]  Agent 3 found intervals in the sub-map:
[DBG]  
[DBG]  Agent 3 is not in sub-map at time 5 (intervals: 
[DBG]  )
[DBG]  Agent 10 found intervals in the sub-map:
[DBG]   [2..9]
[DBG]  Agent 10 (interval in submap: [2..9]) contains time 5, added to replan.
[DBG]  Agent 19 found intervals in the sub-map:
[DBG]   [6..13]
[DBG]  Agent 19 is not in sub-map at time 5 (intervals: 
[DBG]  [6..13] )
[DBG]  Agent 63 found intervals in the sub-map:
[DBG]   [5..11]
[DBG]  Agent 63 (interval in submap: [5..11]) contains time 5, added to replan.
[DBG]  Agent 112 found intervals in the sub-map:
[DBG]   [5..9]
[DBG]  Agent 112 (interval in submap: [5..9]) contains time 5, added to replan.
[DBG]  Agent 113 found intervals in the sub-map:
[DBG]   [0..10]
[DBG]  Agent 113 (interval in submap: [0..10]) contains time 5, added to replan.
[DBG]  Agent 121 found intervals in the sub-map:
[DBG]   [11..14]
[DBG]  Agent 121 is not in sub-map at time 5 (intervals: 
[DBG]  [11..14] )
[DBG]  Agent 125 found intervals in the sub-map:
[DBG]   [1..4] [8..10]
[DBG]  Agent 125 is not in sub-map at time 5 (intervals: 
[DBG]  [1..4] [8..10] )
[DBG]  Agent 10 | Start (global): 593 -> (local): (4, 3) at time 5 | Goal (global): 498 -> (local): (1, 4) at time 9
[DBG]  Agent 63 | Start (global): 591 -> (local): (4, 1) at time 5 | Goal (global): 465 -> (local): (0, 3) at time 11
[DBG]  Agent 112 | Start (global): 464 -> (local): (0, 2) at time 5 | Goal (global): 526 -> (local): (2, 0) at time 9
[DBG]  Agent 113 | Start (global): 528 -> (local): (2, 2) at time 5 | Goal (global): 466 -> (local): (0, 4) at time 10
[DBG]  [REPAIR] SAT destroy operator called.
[DBG]  [REPAIR] SAT operator â€“ launching subproblem FOR OPTIMIZATION.
[DBG]  Creating local paths (sx, sy) in the submap for T_sync = 5
[DBG]    Agent 10 (global paths from T=5 to 9) has local path: (4,3) (3,3) (2,3) (2,4) (1,4) 
[DBG]    Agent 63 (global paths from T=5 to 11) has local path: (4,1) (4,2) (3,2) (2,2) (1,2) (0,2) (0,3) 
[DBG]    Agent 112 (global paths from T=5 to 9) has local path: (0,2) (0,1) (0,0) (1,0) (2,0) 
[DBG]    Agent 113 (global paths from T=5 to 10) has local path: (2,2) (1,2) (1,2) (0,2) (0,3) (0,4) 
[DBG]  Checking input data for SAT solver:
[DBG]    - Number of agents to replan: 4
[DBG]  Agent 10 has the original local path length: 5 => Start (4,3), Goal (1,4)
[DBG]  Agent 63 has the original local path length: 7 => Start (4,1), Goal (0,3)
[DBG]  Agent 112 has the original local path length: 5 => Start (0,2), Goal (2,0)
[DBG]  Agent 113 has the original local path length: 6 => Start (2,2), Goal (0,4)
[DBG]  Start position: (4, 3), (4, 1), (0, 2), (2, 2), 
[DBG]  Goal position: (1, 4), (0, 3), (2, 0), (0, 4), 
[DBG]  SAT instance and solver created.
Currently solving
Instance name: scen
Map name: map
Encoding used: disappear_at_goal
SAT solver used: Kissat
Optimizing function: sum of costs
Number of agents: 4
Mks LB: 7
SoC LB: 22
Delta: 0
Remaining time: 300000 [ms]

Vertex conflict! Agents 0, 2, timestep 5, location 0
Swapping conflict! Agents 0, 2, timestep 5, edge (0,0)
Vertex conflict! Agents 0, 2, timestep 6, location 0
Vertex conflict! Agents 0, 3, timestep 5, location 0
Swapping conflict! Agents 0, 3, timestep 5, edge (0,0)
Vertex conflict! Agents 0, 3, timestep 6, location 0
Vertex conflict! Agents 2, 3, timestep 5, location 0
Swapping conflict! Agents 2, 3, timestep 5, edge (0,0)
Vertex conflict! Agents 2, 3, timestep 6, location 0
Found plan [agents = 4] [timesteps = 7]
Agent #0 : 18 14 10 11 7 0 0 
Agent #1 : 16 17 13 9 6 2 3 
Agent #2 : 2 1 0 5 8 0 0 
Agent #3 : 9 10 11 7 4 0 0 

[STAT] Solver returned: 0
[DBG]  Agent (index) 10 | New local path (submap idx):
[DBG]  18 14 10 11 7 
[DBG]  Agent (index) 63 | New local path (submap idx):
[DBG]  16 17 13 9 6 2 3 
[DBG]  Agent (index) 112 | New local path (submap idx):
[DBG]  2 1 0 5 8 
[DBG]  Agent (index) 113 | New local path (submap idx):
[DBG]  9 10 11 7 4 
[DBG]  Update the agent path 10 | Original local length: 5 | New local length: 5
[DBG]  agent 10 t=0 => decoded (sx,sy)=(4,3) => global_id=593
[DBG]  agent 10 t=1 => decoded (sx,sy)=(3,3) => global_id=561
[DBG]  agent 10 t=2 => decoded (sx,sy)=(2,3) => global_id=529
[DBG]  agent 10 t=3 => decoded (sx,sy)=(2,4) => global_id=530
[DBG]  agent 10 t=4 => decoded (sx,sy)=(1,4) => global_id=498
[DBG]  Complete path of agent 10:
[DBG]    Original: 588 589 590 591 592 593 561 529 530 498 499 499 499 467 468 469 470 502 503 504 505 506 507 475 476 
[DBG]    New:     588 589 590 591 592 593 561 529 530 498 499 499 499 467 468 469 470 502 503 504 505 506 507 475 476 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 588 589 590 591 592 
[DBG]    Local path (in submap): 593 561 529 530 498 
[DBG]    Suffix (out of submap): 499 499 499 467 468 469 470 502 503 504 505 506 507 475 476 
[DBG]  Original agent path length 10 je: 25
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 0: 588, 589, 590, 591, 592, 593, 561, 529, 530, 498, 499, 499, 499, 467, 468, 469, 470, 502, 503, 504, 505, 506, 507, 475, 476, 
[DBG]  Path for agent 10 updated, resulting length: 25
[DBG]  Update the agent path 63 | Original local length: 7 | New local length: 7
[DBG]  agent 63 t=0 => decoded (sx,sy)=(4,1) => global_id=591
[DBG]  agent 63 t=1 => decoded (sx,sy)=(4,2) => global_id=592
[DBG]  agent 63 t=2 => decoded (sx,sy)=(3,2) => global_id=560
[DBG]  agent 63 t=3 => decoded (sx,sy)=(2,2) => global_id=528
[DBG]  agent 63 t=4 => decoded (sx,sy)=(1,2) => global_id=496
[DBG]  agent 63 t=5 => decoded (sx,sy)=(0,2) => global_id=464
[DBG]  agent 63 t=6 => decoded (sx,sy)=(0,3) => global_id=465
[DBG]  Complete path of agent 63:
[DBG]    Original: 689 688 656 655 623 591 592 560 528 496 464 465 433 401 369 337 336 304 304 303 302 
[DBG]    New:     689 688 656 655 623 591 592 560 528 496 464 465 433 401 369 337 336 304 304 303 302 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 689 688 656 655 623 
[DBG]    Local path (in submap): 591 592 560 528 496 464 465 
[DBG]    Suffix (out of submap): 433 401 369 337 336 304 304 303 302 
[DBG]  Original agent path length 63 je: 21
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 1: 689, 688, 656, 655, 623, 591, 592, 560, 528, 496, 464, 465, 433, 401, 369, 337, 336, 304, 304, 303, 302, 
[DBG]  Path for agent 63 updated, resulting length: 21
[DBG]  Update the agent path 112 | Original local length: 5 | New local length: 5
[DBG]  agent 112 t=0 => decoded (sx,sy)=(0,2) => global_id=464
[DBG]  agent 112 t=1 => decoded (sx,sy)=(0,1) => global_id=463
[DBG]  agent 112 t=2 => decoded (sx,sy)=(0,0) => global_id=462
[DBG]  agent 112 t=3 => decoded (sx,sy)=(1,0) => global_id=494
[DBG]  agent 112 t=4 => decoded (sx,sy)=(2,0) => global_id=526
[DBG]  Complete path of agent 112:
[DBG]    Original: 337 369 368 400 432 464 463 462 494 526 525 524 556 555 587 619 651 650 649 648 647 646 645 644 676 675 
[DBG]    New:     337 369 368 400 432 464 463 462 494 526 525 524 556 555 587 619 651 650 649 648 647 646 645 644 676 675 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 337 369 368 400 432 
[DBG]    Local path (in submap): 464 463 462 494 526 
[DBG]    Suffix (out of submap): 525 524 556 555 587 619 651 650 649 648 647 646 645 644 676 675 
[DBG]  Original agent path length 112 je: 26
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 2: 337, 369, 368, 400, 432, 464, 463, 462, 494, 526, 525, 524, 556, 555, 587, 619, 651, 650, 649, 648, 647, 646, 645, 644, 676, 675, 
[DBG]  Path for agent 112 updated, resulting length: 26
[DBG]  Update the agent path 113 | Original local length: 6 | New local length: 5
[DBG]  agent 113 t=0 => decoded (sx,sy)=(2,2) => global_id=528
[DBG]  agent 113 t=1 => decoded (sx,sy)=(2,3) => global_id=529
[DBG]  agent 113 t=2 => decoded (sx,sy)=(2,4) => global_id=530
[DBG]  agent 113 t=3 => decoded (sx,sy)=(1,4) => global_id=498
[DBG]  agent 113 t=4 => decoded (sx,sy)=(0,4) => global_id=466
[DBG]  Complete path of agent 113:
[DBG]    Original: 529 529 529 529 529 528 496 496 464 465 466 467 467 468 469 470 438 406 407 375 376 377 378 379 347 348 348 349 350 351 319 287 255 254 222 
[DBG]    New:     529 529 529 529 529 528 529 530 498 466 467 467 468 469 470 438 406 407 375 376 377 378 379 347 348 348 349 350 351 319 287 255 254 222 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 529 529 529 529 529 
[DBG]    Local path (in submap): 528 529 530 498 466 467 
[DBG]    Suffix (out of submap): 467 468 469 470 438 406 407 375 376 377 378 379 347 348 348 349 350 351 319 287 255 254 222 
[DBG]  Original agent path length 113 je: 35
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 3: 529, 529, 529, 529, 529, 528, 529, 530, 498, 466, 467, 467, 468, 469, 470, 438, 406, 407, 375, 376, 377, 378, 379, 347, 348, 348, 349, 350, 351, 319, 287, 255, 254, 222, 
[DBG]  Path for agent 113 updated, resulting length: 34
[DBG]  Paths successfully updated.
[DBG]  (LNS.cpp) New path for agent 10: 
[DBG]  588, 589, 590, 591, 592, 593, 561, 529, 530, 498, 499, 499, 499, 467, 468, 469, 470, 502, 503, 504, 505, 506, 507, 475, 476, 
[DBG]  (LNS.cpp) New path for agent 63: 
[DBG]  689, 688, 656, 655, 623, 591, 592, 560, 528, 496, 464, 465, 433, 401, 369, 337, 336, 304, 304, 303, 302, 
[DBG]  (LNS.cpp) New path for agent 112: 
[DBG]  337, 369, 368, 400, 432, 464, 463, 462, 494, 526, 525, 524, 556, 555, 587, 619, 651, 650, 649, 648, 647, 646, 645, 644, 676, 675, 
[DBG]  (LNS.cpp) New path for agent 113: 
[DBG]  529, 529, 529, 529, 529, 528, 529, 530, 498, 466, 467, 467, 468, 469, 470, 438, 406, 407, 375, 376, 377, 378, 379, 347, 348, 348, 349, 350, 351, 319, 287, 255, 254, 222, 
[DBG]  component_weights = {0.37084, 0.105975, 0.110823, 0.412362}
[DBG]  opSuccess value: 1
[STAT] neighbor.sum_of_costs before recomputation: 102
[STAT] neighbor.old_sum_of_costs before recomputation: 103
[STAT] sum_of_costs before recomputation: 4303
[DBG]  Validate solution immediately after SAT success.
[WARNING] Problem after SAT: Vertex conflict between agents 113 and 3 at location 468 at timestep 12
[DBG]  Attempting immediate repair via init_lns because problem occurred after SAT (should be applied only for conflicts...).
[DBG]  Passing 150 agents to init_lns (skip=true).
[DBG]  path_table contents for selected agents (neighbor.agents):
[DBG]    Agent 10 => controlling path length=25
[DBG]    Agent 63 => controlling path length=21
[DBG]    Agent 112 => controlling path length=26
[DBG]    Agent 113 => controlling path length=34
[DBG]  hodnota skip_initial_solution=1
[DBG]  We skip initialSolution => call buildCollisionData()
[DBG]  buildCollisionData() called â€“ skip_initial_solution case.
[DBG]  Agents.size()=150, collision_graph.size()=150
[DBG]  agent 3 => updateCollidingPairs => foundCollision
[DBG]  agent 46 => updateCollidingPairs => foundCollision
[DBG]  agent 62 => updateCollidingPairs => foundCollision
[DBG]  agent 113 => updateCollidingPairs => foundCollision
[DBG]  Conflicting agent pairs:
[DBG]  agent 3 is in conflict with agent 113
[DBG]  agent 46 is in conflict with agent 113
[DBG]  agent 62 is in conflict with agent 113
[DBG]  buildCollisionData() => sum_of_costs=4302, num_of_colliding_pairs=3
[DBG]  buildCollisionData done => sum_of_costs=4302, num_of_colliding_pairs=3
[DBG]  sum_of_cost hodnota: 4302
[DBG]  After skip/init build => iteration_stats.back(): sum_of_costs=4302, collisions=3
[DEBUG] Using default neighbor generation strategy for conflicts: 0
	InitLNS(PP): runtime = 0.00794033, iterations = 2, colliding pairs = 0, initial colliding pairs = 3, solution cost = 4301, initial solution cost = 4302, failed iterations = 0
[DBG]  init_lns->sum_of_costs after init_lns->run: 4301
[DBG]  sum_of_costs after assignment from init_lns->run: 4301
[DBG]  Recomputing sum_of_cost by dividing neighbor.sum_of_costs and neighbor.old_sum_of_costs
[STAT] sum_of_costs after recomputation: 4301
[STAT] Iteration 130
[DBG]  Using SAT operator (destroy+repair SAT).
[DBG]  ====================
[DBG]  SAT destroy operator called.
[DBG]  SAT heuristic: 2
[DBG]  key_agent_id: 67
[DBG]  key_agent_id global path length: 49
[DBG]  Submap content (global positions):
[DBG]  707 708 709 710 711 
[DBG]  739 740 741 742 743 
[DBG]  771 772 773 774 775 
[DBG]  803 804 805 806 807 
[DBG]  835 836 837 838 839 
[DBG]  Map content with agents and obstacles:
[DBG]  . X . . X 
[DBG]  . . . A X 
[DBG]  . . A . A 
[DBG]  . A . . A 
[DBG]  . A . . . 
[DBG]  content of the map structure that we pass to the SAT solver:
[DBG]  1  -1  1  1  -1  
[DBG]  1  1  1  1  -1  
[DBG]  1  1  1  1  1  
[DBG]  1  1  1  1  1  
[DBG]  1  1  1  1  1  
[DBG]  Identifying agents in a submap for rescheduling (when key_agent is there at the time 2):
[DBG]  Agent 13 found intervals in the sub-map:
[DBG]   [2..8]
[DBG]  Agent 13 (interval in submap: [2..8]) contains time 2, added to replan.
[DBG]  Agent 32 found intervals in the sub-map:
[DBG]   [1..7]
[DBG]  Agent 32 (interval in submap: [1..7]) contains time 2, added to replan.
[DBG]  Agent 37 found intervals in the sub-map:
[DBG]   [0..2]
[DBG]  Agent 37 (interval in submap: [0..2]) contains time 2, added to replan.
[DBG]  Agent 56 found intervals in the sub-map:
[DBG]   [0..2]
[DBG]  Agent 56 (interval in submap: [0..2]) contains time 2, added to replan.
[DBG]  Agent 67 found intervals in the sub-map:
[DBG]   [0..8]
[DBG]  Agent 67 (interval in submap: [0..8]) contains time 2, added to replan.
[DBG]  Agent 85 found intervals in the sub-map:
[DBG]   [0..4]
[DBG]  Agent 85 (interval in submap: [0..4]) contains time 2, added to replan.
[DBG]  Agent 13 | Start (global): 836 -> (local): (4, 1) at time 2 | Goal (global): 710 -> (local): (0, 3) at time 8
[DBG]  Agent 32 | Start (global): 804 -> (local): (3, 1) at time 2 | Goal (global): 775 -> (local): (2, 4) at time 7
[DBG]  Agent 37 | Start (global): 775 -> (local): (2, 4) at time 2 | Goal (global): 775 -> (local): (2, 4) at time 2
[DBG]  Agent 56 | Start (global): 807 -> (local): (3, 4) at time 2 | Goal (global): 807 -> (local): (3, 4) at time 2
[DBG]  Agent 67 | Start (global): 773 -> (local): (2, 2) at time 2 | Goal (global): 807 -> (local): (3, 4) at time 8
[DBG]  Agent 85 | Start (global): 742 -> (local): (1, 3) at time 2 | Goal (global): 775 -> (local): (2, 4) at time 4
[DBG]  [REPAIR] SAT destroy operator called.
[DBG]  [REPAIR] SAT operator â€“ launching subproblem FOR OPTIMIZATION.
[DBG]  Creating local paths (sx, sy) in the submap for T_sync = 2
[DBG]    Agent 13 (global paths from T=2 to 8) has local path: (4,1) (3,1) (2,1) (1,1) (1,2) (1,3) (0,3) 
[DBG]    Agent 32 (global paths from T=2 to 7) has local path: (3,1) (3,2) (3,3) (3,4) (3,4) (2,4) 
[DBG]    Agent 37 (global paths from T=2 to 2) has local path: (2,4) 
[DBG]    Agent 56 (global paths from T=2 to 2) has local path: (3,4) 
[DBG]    Agent 67 (global paths from T=2 to 8) has local path: (2,2) (2,2) (2,3) (3,3) (3,3) (3,3) (3,4) 
[DBG]    Agent 85 (global paths from T=2 to 4) has local path: (1,3) (2,3) (2,4) 
[DBG]  Checking input data for SAT solver:
[DBG]    - Number of agents to replan: 6
[DBG]  Agent 13 has the original local path length: 7 => Start (4,1), Goal (0,3)
[DBG]  Agent 32 has the original local path length: 6 => Start (3,1), Goal (2,4)
[DBG]  Agent 37 has the original local path length: 1 => Start (2,4), Goal (2,4)
[DBG]  Agent 56 has the original local path length: 1 => Start (3,4), Goal (3,4)
[DBG]  Agent 67 has the original local path length: 7 => Start (2,2), Goal (3,4)
[DBG]  Agent 85 has the original local path length: 3 => Start (1,3), Goal (2,4)
[DBG]  Start position: (4, 1), (3, 1), (2, 4), (3, 4), (2, 2), (1, 3), 
[DBG]  Goal position: (0, 3), (2, 4), (2, 4), (3, 4), (3, 4), (2, 4), 
[DBG]  SAT instance and solver created.
Currently solving
Instance name: scen
Map name: map
Encoding used: disappear_at_goal
SAT solver used: Kissat
Optimizing function: sum of costs
Number of agents: 6
Mks LB: 7
SoC LB: 21
Delta: 0
Remaining time: 300000 [ms]

Vertex conflict! Agents 1, 2, timestep 5, location 0
Swapping conflict! Agents 1, 2, timestep 5, edge (0,0)
Vertex conflict! Agents 1, 2, timestep 6, location 0
Vertex conflict! Agents 1, 3, timestep 5, location 0
Swapping conflict! Agents 1, 3, timestep 5, edge (0,0)
Vertex conflict! Agents 1, 3, timestep 6, location 0
Vertex conflict! Agents 1, 4, timestep 5, location 0
Swapping conflict! Agents 1, 4, timestep 5, edge (0,0)
Vertex conflict! Agents 1, 4, timestep 6, location 0
Vertex conflict! Agents 1, 5, timestep 5, location 0
Swapping conflict! Agents 1, 5, timestep 5, edge (0,0)
Vertex conflict! Agents 1, 5, timestep 6, location 0
Vertex conflict! Agents 2, 3, timestep 1, location 0
Swapping conflict! Agents 2, 3, timestep 1, edge (0,0)
Vertex conflict! Agents 2, 3, timestep 2, location 0
Swapping conflict! Agents 2, 3, timestep 2, edge (0,0)
Vertex conflict! Agents 2, 3, timestep 3, location 0
Swapping conflict! Agents 2, 3, timestep 3, edge (0,0)
Vertex conflict! Agents 2, 3, timestep 4, location 0
Swapping conflict! Agents 2, 3, timestep 4, edge (0,0)
Vertex conflict! Agents 2, 3, timestep 5, location 0
Swapping conflict! Agents 2, 3, timestep 5, edge (0,0)
Vertex conflict! Agents 2, 3, timestep 6, location 0
Vertex conflict! Agents 2, 4, timestep 4, location 0
Swapping conflict! Agents 2, 4, timestep 4, edge (0,0)
Vertex conflict! Agents 2, 4, timestep 5, location 0
Swapping conflict! Agents 2, 4, timestep 5, edge (0,0)
Vertex conflict! Agents 2, 4, timestep 6, location 0
Vertex conflict! Agents 2, 5, timestep 3, location 0
Swapping conflict! Agents 2, 5, timestep 3, edge (0,0)
Vertex conflict! Agents 2, 5, timestep 4, location 0
Swapping conflict! Agents 2, 5, timestep 4, edge (0,0)
Vertex conflict! Agents 2, 5, timestep 5, location 0
Swapping conflict! Agents 2, 5, timestep 5, edge (0,0)
Vertex conflict! Agents 2, 5, timestep 6, location 0
Vertex conflict! Agents 3, 4, timestep 4, location 0
Swapping conflict! Agents 3, 4, timestep 4, edge (0,0)
Vertex conflict! Agents 3, 4, timestep 5, location 0
Swapping conflict! Agents 3, 4, timestep 5, edge (0,0)
Vertex conflict! Agents 3, 4, timestep 6, location 0
Vertex conflict! Agents 3, 5, timestep 3, location 0
Swapping conflict! Agents 3, 5, timestep 3, edge (0,0)
Vertex conflict! Agents 3, 5, timestep 4, location 0
Swapping conflict! Agents 3, 5, timestep 4, edge (0,0)
Vertex conflict! Agents 3, 5, timestep 5, location 0
Swapping conflict! Agents 3, 5, timestep 5, edge (0,0)
Vertex conflict! Agents 3, 5, timestep 6, location 0
Vertex conflict! Agents 4, 5, timestep 4, location 0
Swapping conflict! Agents 4, 5, timestep 4, edge (0,0)
Vertex conflict! Agents 4, 5, timestep 5, location 0
Swapping conflict! Agents 4, 5, timestep 5, edge (0,0)
Vertex conflict! Agents 4, 5, timestep 6, location 0
Found plan [agents = 6] [timesteps = 7]
Agent #0 : 18 19 20 15 10 6 2 
Agent #1 : 13 8 9 10 11 0 0 
Agent #2 : 11 0 0 0 0 0 0 
Agent #3 : 16 0 0 0 0 0 0 
Agent #4 : 9 14 15 16 0 0 0 
Agent #5 : 6 10 11 0 0 0 0 

[STAT] Solver returned: 0
[DBG]  Agent (index) 13 | New local path (submap idx):
[DBG]  18 19 20 15 10 6 2 
[DBG]  Agent (index) 32 | New local path (submap idx):
[DBG]  13 8 9 10 11 
[DBG]  Agent (index) 37 | New local path (submap idx):
[DBG]  11 
[DBG]  Agent (index) 56 | New local path (submap idx):
[DBG]  16 
[DBG]  Agent (index) 67 | New local path (submap idx):
[DBG]  9 14 15 16 
[DBG]  Agent (index) 85 | New local path (submap idx):
[DBG]  6 10 11 
[DBG]  Update the agent path 13 | Original local length: 7 | New local length: 7
[DBG]  agent 13 t=0 => decoded (sx,sy)=(4,1) => global_id=836
[DBG]  agent 13 t=1 => decoded (sx,sy)=(4,2) => global_id=837
[DBG]  agent 13 t=2 => decoded (sx,sy)=(4,3) => global_id=838
[DBG]  agent 13 t=3 => decoded (sx,sy)=(3,3) => global_id=806
[DBG]  agent 13 t=4 => decoded (sx,sy)=(2,3) => global_id=774
[DBG]  agent 13 t=5 => decoded (sx,sy)=(1,3) => global_id=742
[DBG]  agent 13 t=6 => decoded (sx,sy)=(0,3) => global_id=710
[DBG]  Complete path of agent 13:
[DBG]    Original: 867 868 836 804 772 740 741 742 710 678 678 646 647 615 583 551 519 487 455 423 424 425 393 361 329 330 298 299 300 268 269 270 271 239 207 208 176 177 178 146 147 148 149 117 118 86 54 55 56 24 
[DBG]    New:     867 868 836 837 838 806 774 742 710 678 678 646 647 615 583 551 519 487 455 423 424 425 393 361 329 330 298 299 300 268 269 270 271 239 207 208 176 177 178 146 147 148 149 117 118 86 54 55 56 24 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 867 868 
[DBG]    Local path (in submap): 836 837 838 806 774 742 710 
[DBG]    Suffix (out of submap): 678 678 646 647 615 583 551 519 487 455 423 424 425 393 361 329 330 298 299 300 268 269 270 271 239 207 208 176 177 178 146 147 148 149 117 118 86 54 55 56 24 
[DBG]  Original agent path length 13 je: 50
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 0: 867, 868, 836, 837, 838, 806, 774, 742, 710, 678, 678, 646, 647, 615, 583, 551, 519, 487, 455, 423, 424, 425, 393, 361, 329, 330, 298, 299, 300, 268, 269, 270, 271, 239, 207, 208, 176, 177, 178, 146, 147, 148, 149, 117, 118, 86, 54, 55, 56, 24, 
[DBG]  Path for agent 13 updated, resulting length: 50
[DBG]  Update the agent path 32 | Original local length: 6 | New local length: 5
[DBG]  agent 32 t=0 => decoded (sx,sy)=(3,1) => global_id=804
[DBG]  agent 32 t=1 => decoded (sx,sy)=(2,1) => global_id=772
[DBG]  agent 32 t=2 => decoded (sx,sy)=(2,2) => global_id=773
[DBG]  agent 32 t=3 => decoded (sx,sy)=(2,3) => global_id=774
[DBG]  agent 32 t=4 => decoded (sx,sy)=(2,4) => global_id=775
[DBG]  Complete path of agent 32:
[DBG]    Original: 868 836 804 805 806 807 807 775 776 744 
[DBG]    New:     868 836 804 772 773 774 775 776 744 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 868 836 
[DBG]    Local path (in submap): 804 772 773 774 775 776 
[DBG]    Suffix (out of submap): 744 
[DBG]  Original agent path length 32 je: 10
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 1: 868, 836, 804, 772, 773, 774, 775, 776, 744, 
[DBG]  Path for agent 32 updated, resulting length: 9
[DBG]  Update the agent path 37 | Original local length: 1 | New local length: 1
[DBG]  agent 37 t=0 => decoded (sx,sy)=(2,4) => global_id=775
[DBG]  Complete path of agent 37:
[DBG]    Original: 839 807 775 776 777 778 778 779 780 781 782 750 750 782 
[DBG]    New:     839 807 775 776 777 778 778 779 780 781 782 750 750 782 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 839 807 
[DBG]    Local path (in submap): 775 
[DBG]    Suffix (out of submap): 776 777 778 778 779 780 781 782 750 750 782 
[DBG]  Original agent path length 37 je: 14
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 2: 839, 807, 775, 776, 777, 778, 778, 779, 780, 781, 782, 750, 750, 782, 
[DBG]  Path for agent 37 updated, resulting length: 14
[DBG]  Update the agent path 56 | Original local length: 1 | New local length: 1
[DBG]  agent 56 t=0 => decoded (sx,sy)=(3,4) => global_id=807
[DBG]  Complete path of agent 56:
[DBG]    Original: 805 806 807 808 809 810 811 812 813 814 815 783 751 752 720 721 689 657 658 659 627 628 629 597 565 533 501 469 470 438 439 440 408 409 377 378 379 380 348 349 350 351 319 287 255 
[DBG]    New:     805 806 807 808 809 810 811 812 813 814 815 783 751 752 720 721 689 657 658 659 627 628 629 597 565 533 501 469 470 438 439 440 408 409 377 378 379 380 348 349 350 351 319 287 255 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 805 806 
[DBG]    Local path (in submap): 807 
[DBG]    Suffix (out of submap): 808 809 810 811 812 813 814 815 783 751 752 720 721 689 657 658 659 627 628 629 597 565 533 501 469 470 438 439 440 408 409 377 378 379 380 348 349 350 351 319 287 255 
[DBG]  Original agent path length 56 je: 45
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 3: 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 783, 751, 752, 720, 721, 689, 657, 658, 659, 627, 628, 629, 597, 565, 533, 501, 469, 470, 438, 439, 440, 408, 409, 377, 378, 379, 380, 348, 349, 350, 351, 319, 287, 255, 
[DBG]  Path for agent 56 updated, resulting length: 45
[DBG]  Update the agent path 67 | Original local length: 7 | New local length: 4
[DBG]  agent 67 t=0 => decoded (sx,sy)=(2,2) => global_id=773
[DBG]  agent 67 t=1 => decoded (sx,sy)=(3,2) => global_id=805
[DBG]  agent 67 t=2 => decoded (sx,sy)=(3,3) => global_id=806
[DBG]  agent 67 t=3 => decoded (sx,sy)=(3,4) => global_id=807
[DBG]  Complete path of agent 67:
[DBG]    Original: 773 773 773 773 774 806 806 806 807 808 809 777 777 778 746 714 714 682 683 684 685 653 654 654 655 656 657 658 659 627 628 629 597 565 533 501 469 437 438 439 407 408 409 377 378 379 380 348 349 
[DBG]    New:     773 773 773 805 806 807 808 809 777 777 778 746 714 714 682 683 684 685 653 654 654 655 656 657 658 659 627 628 629 597 565 533 501 469 437 438 439 407 408 409 377 378 379 380 348 349 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 773 773 
[DBG]    Local path (in submap): 773 805 806 807 808 809 777 
[DBG]    Suffix (out of submap): 777 778 746 714 714 682 683 684 685 653 654 654 655 656 657 658 659 627 628 629 597 565 533 501 469 437 438 439 407 408 409 377 378 379 380 348 349 
[DBG]  Original agent path length 67 je: 49
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 4: 773, 773, 773, 805, 806, 807, 808, 809, 777, 777, 778, 746, 714, 714, 682, 683, 684, 685, 653, 654, 654, 655, 656, 657, 658, 659, 627, 628, 629, 597, 565, 533, 501, 469, 437, 438, 439, 407, 408, 409, 377, 378, 379, 380, 348, 349, 
[DBG]  Path for agent 67 updated, resulting length: 46
[DBG]  Update the agent path 85 | Original local length: 3 | New local length: 3
[DBG]  agent 85 t=0 => decoded (sx,sy)=(1,3) => global_id=742
[DBG]  agent 85 t=1 => decoded (sx,sy)=(2,3) => global_id=774
[DBG]  agent 85 t=2 => decoded (sx,sy)=(2,4) => global_id=775
[DBG]  Complete path of agent 85:
[DBG]    Original: 709 741 742 774 775 776 808 809 810 811 843 844 845 877 878 879 880 881 882 850 851 819 820 821 822 790 
[DBG]    New:     709 741 742 774 775 776 808 809 810 811 843 844 845 877 878 879 880 881 882 850 851 819 820 821 822 790 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 709 741 
[DBG]    Local path (in submap): 742 774 775 
[DBG]    Suffix (out of submap): 776 808 809 810 811 843 844 845 877 878 879 880 881 882 850 851 819 820 821 822 790 
[DBG]  Original agent path length 85 je: 26
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 5: 709, 741, 742, 774, 775, 776, 808, 809, 810, 811, 843, 844, 845, 877, 878, 879, 880, 881, 882, 850, 851, 819, 820, 821, 822, 790, 
[DBG]  Path for agent 85 updated, resulting length: 26
[DBG]  Paths successfully updated.
[DBG]  (LNS.cpp) New path for agent 13: 
[DBG]  867, 868, 836, 837, 838, 806, 774, 742, 710, 678, 678, 646, 647, 615, 583, 551, 519, 487, 455, 423, 424, 425, 393, 361, 329, 330, 298, 299, 300, 268, 269, 270, 271, 239, 207, 208, 176, 177, 178, 146, 147, 148, 149, 117, 118, 86, 54, 55, 56, 24, 
[DBG]  (LNS.cpp) New path for agent 32: 
[DBG]  868, 836, 804, 772, 773, 774, 775, 776, 744, 
[DBG]  (LNS.cpp) New path for agent 37: 
[DBG]  839, 807, 775, 776, 777, 778, 778, 779, 780, 781, 782, 750, 750, 782, 
[DBG]  (LNS.cpp) New path for agent 56: 
[DBG]  805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 783, 751, 752, 720, 721, 689, 657, 658, 659, 627, 628, 629, 597, 565, 533, 501, 469, 470, 438, 439, 440, 408, 409, 377, 378, 379, 380, 348, 349, 350, 351, 319, 287, 255, 
[DBG]  (LNS.cpp) New path for agent 67: 
[DBG]  773, 773, 773, 805, 806, 807, 808, 809, 777, 777, 778, 746, 714, 714, 682, 683, 684, 685, 653, 654, 654, 655, 656, 657, 658, 659, 627, 628, 629, 597, 565, 533, 501, 469, 437, 438, 439, 407, 408, 409, 377, 378, 379, 380, 348, 349, 
[DBG]  (LNS.cpp) New path for agent 85: 
[DBG]  709, 741, 742, 774, 775, 776, 808, 809, 810, 811, 843, 844, 845, 877, 878, 879, 880, 881, 882, 850, 851, 819, 820, 821, 822, 790, 
[DBG]  component_weights = {0.367712, 0.105081, 0.109889, 0.417318}
[DBG]  opSuccess value: 1
[STAT] neighbor.sum_of_costs before recomputation: 184
[STAT] neighbor.old_sum_of_costs before recomputation: 188
[STAT] sum_of_costs before recomputation: 4301
[DBG]  Validate solution immediately after SAT success.
[WARNING] Problem after SAT: Vertex conflict between agents 0 and 67 at location 683 at timestep 15
[DBG]  Attempting immediate repair via init_lns because problem occurred after SAT (should be applied only for conflicts...).
[DBG]  Passing 150 agents to init_lns (skip=true).
[DBG]  path_table contents for selected agents (neighbor.agents):
[DBG]    Agent 13 => controlling path length=50
[DBG]    Agent 32 => controlling path length=9
[DBG]    Agent 37 => controlling path length=14
[DBG]    Agent 56 => controlling path length=45
[DBG]    Agent 67 => controlling path length=46
[DBG]    Agent 85 => controlling path length=26
[DBG]  hodnota skip_initial_solution=1
[DBG]  We skip initialSolution => call buildCollisionData()
[DBG]  buildCollisionData() called â€“ skip_initial_solution case.
[DBG]  Agents.size()=150, collision_graph.size()=150
[DBG]  agent 0 => updateCollidingPairs => foundCollision
[DBG]  agent 67 => updateCollidingPairs => foundCollision
[DBG]  agent 85 => updateCollidingPairs => foundCollision
[DBG]  agent 97 => updateCollidingPairs => foundCollision
[DBG]  agent 140 => updateCollidingPairs => foundCollision
[DBG]  agent 148 => updateCollidingPairs => foundCollision
[DBG]  Conflicting agent pairs:
[DBG]  agent 0 is in conflict with agent 67
[DBG]  agent 67 is in conflict with agent 85
[DBG]  agent 67 is in conflict with agent 97
[DBG]  agent 67 is in conflict with agent 140
[DBG]  agent 67 is in conflict with agent 148
[DBG]  buildCollisionData() => sum_of_costs=4297, num_of_colliding_pairs=5
[DBG]  buildCollisionData done => sum_of_costs=4297, num_of_colliding_pairs=5
[DBG]  sum_of_cost hodnota: 4297
[DBG]  After skip/init build => iteration_stats.back(): sum_of_costs=4297, collisions=5
[DEBUG] Using default neighbor generation strategy for conflicts: 0
	InitLNS(PP): runtime = 0.00504962, iterations = 2, colliding pairs = 0, initial colliding pairs = 5, solution cost = 4298, initial solution cost = 4297, failed iterations = 0
[DBG]  init_lns->sum_of_costs after init_lns->run: 4298
[DBG]  sum_of_costs after assignment from init_lns->run: 4298
[DBG]  Recomputing sum_of_cost by dividing neighbor.sum_of_costs and neighbor.old_sum_of_costs
[STAT] sum_of_costs after recomputation: 4298
[STAT] Iteration 131
[DBG]  Using SAT operator (destroy+repair SAT).
[DBG]  ====================
[DBG]  SAT destroy operator called.
[DBG]  SAT heuristic: 2
[DBG]  key_agent_id: 60
[DBG]  key_agent_id global path length: 14
[DBG]  Submap content (global positions):
[DBG]  515 516 517 518 519 
[DBG]  547 548 549 550 551 
[DBG]  579 580 581 582 583 
[DBG]  611 612 613 614 615 
[DBG]  643 644 645 646 647 
[DBG]  Map content with agents and obstacles:
[DBG]  . . A X A 
[DBG]  . . A . . 
[DBG]  . . A . . 
[DBG]  . . . X . 
[DBG]  X . A . . 
[DBG]  content of the map structure that we pass to the SAT solver:
[DBG]  1  1  1  -1  1  
[DBG]  1  1  1  1  1  
[DBG]  1  1  1  1  1  
[DBG]  1  1  1  -1  1  
[DBG]  -1  1  1  1  1  
[DBG]  Identifying agents in a submap for rescheduling (when key_agent is there at the time 9):
[DBG]  Agent 21 found intervals in the sub-map:
[DBG]  
[DBG]  Agent 21 is not in sub-map at time 9 (intervals: 
[DBG]  )
[DBG]  Agent 60 found intervals in the sub-map:
[DBG]   [5..11]
[DBG]  Agent 60 (interval in submap: [5..11]) contains time 9, added to replan.
[DBG]  Agent 67 found intervals in the sub-map:
[DBG]   [12..17]
[DBG]  Agent 67 is not in sub-map at time 9 (intervals: 
[DBG]  [12..17] )
[DBG]  Agent 71 found intervals in the sub-map:
[DBG]   [2..11]
[DBG]  Agent 71 (interval in submap: [2..11]) contains time 9, added to replan.
[DBG]  Agent 73 found intervals in the sub-map:
[DBG]   [3..9]
[DBG]  Agent 73 (interval in submap: [3..9]) contains time 9, added to replan.
[DBG]  Agent 78 found intervals in the sub-map:
[DBG]   [9..13]
[DBG]  Agent 78 (interval in submap: [9..13]) contains time 9, added to replan.
[DBG]  Agent 116 found intervals in the sub-map:
[DBG]   [0..14]
[DBG]  Agent 116 (interval in submap: [0..14]) contains time 9, added to replan.
[DBG]  Agent 60 | Start (global): 581 -> (local): (2, 2) at time 9 | Goal (global): 579 -> (local): (2, 0) at time 11
[DBG]  Agent 71 | Start (global): 645 -> (local): (4, 2) at time 9 | Goal (global): 647 -> (local): (4, 4) at time 11
[DBG]  Agent 73 | Start (global): 519 -> (local): (0, 4) at time 9 | Goal (global): 519 -> (local): (0, 4) at time 9
[DBG]  Agent 78 | Start (global): 517 -> (local): (0, 2) at time 9 | Goal (global): 612 -> (local): (3, 1) at time 13
[DBG]  Agent 116 | Start (global): 549 -> (local): (1, 2) at time 9 | Goal (global): 519 -> (local): (0, 4) at time 14
[DBG]  [REPAIR] SAT destroy operator called.
[DBG]  [REPAIR] SAT operator â€“ launching subproblem FOR OPTIMIZATION.
[DBG]  Creating local paths (sx, sy) in the submap for T_sync = 9
[DBG]    Agent 60 (global paths from T=9 to 11) has local path: (2,2) (2,1) (2,0) 
[DBG]    Agent 71 (global paths from T=9 to 11) has local path: (4,2) (4,3) (4,4) 
[DBG]    Agent 73 (global paths from T=9 to 9) has local path: (0,4) 
[DBG]    Agent 78 (global paths from T=9 to 13) has local path: (0,2) (0,1) (1,1) (2,1) (3,1) 
[DBG]    Agent 116 (global paths from T=9 to 14) has local path: (1,2) (2,2) (2,3) (2,4) (1,4) (0,4) 
[DBG]  Checking input data for SAT solver:
[DBG]    - Number of agents to replan: 5
[DBG]  Agent 60 has the original local path length: 3 => Start (2,2), Goal (2,0)
[DBG]  Agent 71 has the original local path length: 3 => Start (4,2), Goal (4,4)
[DBG]  Agent 73 has the original local path length: 1 => Start (0,4), Goal (0,4)
[DBG]  Agent 78 has the original local path length: 5 => Start (0,2), Goal (3,1)
[DBG]  Agent 116 has the original local path length: 6 => Start (1,2), Goal (0,4)
[DBG]  Start position: (2, 2), (4, 2), (0, 4), (0, 2), (1, 2), 
[DBG]  Goal position: (2, 0), (4, 4), (0, 4), (3, 1), (0, 4), 
[DBG]  SAT instance and solver created.
Currently solving
Instance name: scen
Map name: map
Encoding used: disappear_at_goal
SAT solver used: Kissat
Optimizing function: sum of costs
Number of agents: 5
Mks LB: 5
SoC LB: 16
Delta: 0
Remaining time: 300000 [ms]

Vertex conflict! Agents 0, 1, timestep 3, location 0
Swapping conflict! Agents 0, 1, timestep 3, edge (0,0)
Vertex conflict! Agents 0, 1, timestep 4, location 0
Vertex conflict! Agents 0, 2, timestep 3, location 0
Swapping conflict! Agents 0, 2, timestep 3, edge (0,0)
Vertex conflict! Agents 0, 2, timestep 4, location 0
Vertex conflict! Agents 0, 4, timestep 4, location 0
Vertex conflict! Agents 1, 2, timestep 3, location 0
Swapping conflict! Agents 1, 2, timestep 3, edge (0,0)
Vertex conflict! Agents 1, 2, timestep 4, location 0
Vertex conflict! Agents 1, 4, timestep 4, location 0
Vertex conflict! Agents 2, 4, timestep 4, location 0
Found plan [agents = 5] [timesteps = 5]
Agent #0 : 11 10 9 0 0 
Agent #1 : 19 20 21 0 0 
Agent #2 : 3 0 0 0 0 
Agent #3 : 2 6 11 16 15 
Agent #4 : 6 7 8 3 0 

[STAT] Solver returned: 0
[DBG]  Agent (index) 60 | New local path (submap idx):
[DBG]  11 10 9 
[DBG]  Agent (index) 71 | New local path (submap idx):
[DBG]  19 20 21 
[DBG]  Agent (index) 73 | New local path (submap idx):
[DBG]  3 
[DBG]  Agent (index) 78 | New local path (submap idx):
[DBG]  2 6 11 16 15 
[DBG]  Agent (index) 116 | New local path (submap idx):
[DBG]  6 7 8 3 
[DBG]  Update the agent path 60 | Original local length: 3 | New local length: 3
[DBG]  agent 60 t=0 => decoded (sx,sy)=(2,2) => global_id=581
[DBG]  agent 60 t=1 => decoded (sx,sy)=(2,1) => global_id=580
[DBG]  agent 60 t=2 => decoded (sx,sy)=(2,0) => global_id=579
[DBG]  Complete path of agent 60:
[DBG]    Original: 619 651 650 649 648 647 615 583 582 581 580 579 578 577 
[DBG]    New:     619 651 650 649 648 647 615 583 582 581 580 579 578 577 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 619 651 650 649 648 647 615 583 582 
[DBG]    Local path (in submap): 581 580 579 
[DBG]    Suffix (out of submap): 578 577 
[DBG]  Original agent path length 60 je: 14
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 0: 619, 651, 650, 649, 648, 647, 615, 583, 582, 581, 580, 579, 578, 577, 
[DBG]  Path for agent 60 updated, resulting length: 14
[DBG]  Update the agent path 71 | Original local length: 3 | New local length: 3
[DBG]  agent 71 t=0 => decoded (sx,sy)=(4,2) => global_id=645
[DBG]  agent 71 t=1 => decoded (sx,sy)=(4,3) => global_id=646
[DBG]  agent 71 t=2 => decoded (sx,sy)=(4,4) => global_id=647
[DBG]  Complete path of agent 71:
[DBG]    Original: 482 483 515 547 579 611 611 612 613 645 646 647 648 649 650 682 683 684 685 717 718 750 751 783 815 847 848 849 881 882 883 884 885 917 918 919 
[DBG]    New:     482 483 515 547 579 611 611 612 613 645 646 647 648 649 650 682 683 684 685 717 718 750 751 783 815 847 848 849 881 882 883 884 885 917 918 919 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 482 483 515 547 579 611 611 612 613 
[DBG]    Local path (in submap): 645 646 647 
[DBG]    Suffix (out of submap): 648 649 650 682 683 684 685 717 718 750 751 783 815 847 848 849 881 882 883 884 885 917 918 919 
[DBG]  Original agent path length 71 je: 36
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 1: 482, 483, 515, 547, 579, 611, 611, 612, 613, 645, 646, 647, 648, 649, 650, 682, 683, 684, 685, 717, 718, 750, 751, 783, 815, 847, 848, 849, 881, 882, 883, 884, 885, 917, 918, 919, 
[DBG]  Path for agent 71 updated, resulting length: 36
[DBG]  Update the agent path 73 | Original local length: 1 | New local length: 1
[DBG]  agent 73 t=0 => decoded (sx,sy)=(0,4) => global_id=519
[DBG]  Complete path of agent 73:
[DBG]    Original: 609 577 578 579 580 581 582 550 551 519 520 521 489 489 457 456 
[DBG]    New:     609 577 578 579 580 581 582 550 551 519 520 521 489 489 457 456 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 609 577 578 579 580 581 582 550 551 
[DBG]    Local path (in submap): 519 
[DBG]    Suffix (out of submap): 520 521 489 489 457 456 
[DBG]  Original agent path length 73 je: 16
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 2: 609, 577, 578, 579, 580, 581, 582, 550, 551, 519, 520, 521, 489, 489, 457, 456, 
[DBG]  Path for agent 73 updated, resulting length: 16
[DBG]  Update the agent path 78 | Original local length: 5 | New local length: 5
[DBG]  agent 78 t=0 => decoded (sx,sy)=(0,2) => global_id=517
[DBG]  agent 78 t=1 => decoded (sx,sy)=(1,2) => global_id=549
[DBG]  agent 78 t=2 => decoded (sx,sy)=(2,2) => global_id=581
[DBG]  agent 78 t=3 => decoded (sx,sy)=(3,2) => global_id=613
[DBG]  agent 78 t=4 => decoded (sx,sy)=(3,1) => global_id=612
[DBG]  Complete path of agent 78:
[DBG]    Original: 355 387 419 420 421 422 454 486 485 517 516 548 580 612 
[DBG]    New:     355 387 419 420 421 422 454 486 485 517 549 581 613 612 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 355 387 419 420 421 422 454 486 485 
[DBG]    Local path (in submap): 517 549 581 613 612 
[DBG]    Suffix (out of submap): 
[DBG]  Original agent path length 78 je: 14
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 3: 355, 387, 419, 420, 421, 422, 454, 486, 485, 517, 549, 581, 613, 612, 
[DBG]  Path for agent 78 updated, resulting length: 14
[DBG]  Update the agent path 116 | Original local length: 6 | New local length: 4
[DBG]  agent 116 t=0 => decoded (sx,sy)=(1,2) => global_id=549
[DBG]  agent 116 t=1 => decoded (sx,sy)=(1,3) => global_id=550
[DBG]  agent 116 t=2 => decoded (sx,sy)=(1,4) => global_id=551
[DBG]  agent 116 t=3 => decoded (sx,sy)=(0,4) => global_id=519
[DBG]  Complete path of agent 116:
[DBG]    Original: 549 549 549 549 549 549 549 549 549 549 581 582 583 551 519 520 521 489 457 458 426 427 395 363 331 299 300 268 236 236 204 172 140 139 138 137 
[DBG]    New:     549 549 549 549 549 549 549 549 549 549 550 551 519 520 521 489 457 458 426 427 395 363 331 299 300 268 236 236 204 172 140 139 138 137 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 549 549 549 549 549 549 549 549 549 
[DBG]    Local path (in submap): 549 550 551 519 520 521 
[DBG]    Suffix (out of submap): 489 457 458 426 427 395 363 331 299 300 268 236 236 204 172 140 139 138 137 
[DBG]  Original agent path length 116 je: 36
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 4: 549, 549, 549, 549, 549, 549, 549, 549, 549, 549, 550, 551, 519, 520, 521, 489, 457, 458, 426, 427, 395, 363, 331, 299, 300, 268, 236, 236, 204, 172, 140, 139, 138, 137, 
[DBG]  Path for agent 116 updated, resulting length: 34
[DBG]  Paths successfully updated.
[DBG]  (LNS.cpp) New path for agent 60: 
[DBG]  619, 651, 650, 649, 648, 647, 615, 583, 582, 581, 580, 579, 578, 577, 
[DBG]  (LNS.cpp) New path for agent 71: 
[DBG]  482, 483, 515, 547, 579, 611, 611, 612, 613, 645, 646, 647, 648, 649, 650, 682, 683, 684, 685, 717, 718, 750, 751, 783, 815, 847, 848, 849, 881, 882, 883, 884, 885, 917, 918, 919, 
[DBG]  (LNS.cpp) New path for agent 73: 
[DBG]  609, 577, 578, 579, 580, 581, 582, 550, 551, 519, 520, 521, 489, 489, 457, 456, 
[DBG]  (LNS.cpp) New path for agent 78: 
[DBG]  355, 387, 419, 420, 421, 422, 454, 486, 485, 517, 549, 581, 613, 612, 
[DBG]  (LNS.cpp) New path for agent 116: 
[DBG]  549, 549, 549, 549, 549, 549, 549, 549, 549, 549, 550, 551, 519, 520, 521, 489, 457, 458, 426, 427, 395, 363, 331, 299, 300, 268, 236, 236, 204, 172, 140, 139, 138, 137, 
[DBG]  component_weights = {0.364579, 0.104186, 0.108952, 0.422283}
[DBG]  opSuccess value: 1
[STAT] neighbor.sum_of_costs before recomputation: 109
[STAT] neighbor.old_sum_of_costs before recomputation: 111
[STAT] sum_of_costs before recomputation: 4298
[DBG]  Validate solution immediately after SAT success.
[WARNING] Problem after SAT: Target conflict: agent 92 (len 42) traverses target of agent 116 (len 33) at location 137 at timestep 34
[DBG]  Attempting immediate repair via init_lns because problem occurred after SAT (should be applied only for conflicts...).
[DBG]  Passing 150 agents to init_lns (skip=true).
[DBG]  path_table contents for selected agents (neighbor.agents):
[DBG]    Agent 60 => controlling path length=14
[DBG]    Agent 71 => controlling path length=36
[DBG]    Agent 73 => controlling path length=16
[DBG]    Agent 78 => controlling path length=14
[DBG]    Agent 116 => controlling path length=34
[DBG]  hodnota skip_initial_solution=1
[DBG]  We skip initialSolution => call buildCollisionData()
[DBG]  buildCollisionData() called â€“ skip_initial_solution case.
[DBG]  Agents.size()=150, collision_graph.size()=150
[DBG]  agent 92 => updateCollidingPairs => foundCollision
[DBG]  agent 116 => updateCollidingPairs => foundCollision
[DBG]  Conflicting agent pairs:
[DBG]  agent 92 is in conflict with agent 116
[DBG]  buildCollisionData() => sum_of_costs=4296, num_of_colliding_pairs=1
[DBG]  buildCollisionData done => sum_of_costs=4296, num_of_colliding_pairs=1
[DBG]  sum_of_cost hodnota: 4296
[DBG]  After skip/init build => iteration_stats.back(): sum_of_costs=4296, collisions=1
[DEBUG] Using default neighbor generation strategy for conflicts: 0
	InitLNS(PP): runtime = 0.00205238, iterations = 2, colliding pairs = 0, initial colliding pairs = 1, solution cost = 4300, initial solution cost = 4296, failed iterations = 0
[DBG]  init_lns->sum_of_costs after init_lns->run: 4300
[DBG]  sum_of_costs after assignment from init_lns->run: 4300
[DBG]  Recomputing sum_of_cost by dividing neighbor.sum_of_costs and neighbor.old_sum_of_costs
[STAT] sum_of_costs after recomputation: 4300
[STAT] Iteration 132
[DBG]  Using SAT operator (destroy+repair SAT).
[DBG]  ====================
[DBG]  SAT destroy operator called.
[DBG]  SAT heuristic: 2
[DBG]  key_agent_id: 121
[DBG]  key_agent_id global path length: 19
[DBG]  Submap content (global positions):
[DBG]  366 367 368 369 370 
[DBG]  398 399 400 401 402 
[DBG]  430 431 432 433 434 
[DBG]  462 463 464 465 466 
[DBG]  494 495 496 497 498 
[DBG]  Map content with agents and obstacles:
[DBG]  . . . A X 
[DBG]  . X . . . 
[DBG]  A . A . X 
[DBG]  A . . . . 
[DBG]  . X . X . 
[DBG]  content of the map structure that we pass to the SAT solver:
[DBG]  1  1  1  1  -1  
[DBG]  1  -1  1  1  1  
[DBG]  1  1  1  1  -1  
[DBG]  1  1  1  1  1  
[DBG]  1  -1  1  -1  1  
[DBG]  Identifying agents in a submap for rescheduling (when key_agent is there at the time 7):
[DBG]  Agent 19 found intervals in the sub-map:
[DBG]  
[DBG]  Agent 19 is not in sub-map at time 7 (intervals: 
[DBG]  )
[DBG]  Agent 36 found intervals in the sub-map:
[DBG]   [0..4]
[DBG]  Agent 36 is not in sub-map at time 7 (intervals: 
[DBG]  [0..4] )
[DBG]  Agent 54 found intervals in the sub-map:
[DBG]   [0..5]
[DBG]  Agent 54 is not in sub-map at time 7 (intervals: 
[DBG]  [0..5] )
[DBG]  Agent 106 found intervals in the sub-map:
[DBG]   [7..15]
[DBG]  Agent 106 (interval in submap: [7..15]) contains time 7, added to replan.
[DBG]  Agent 112 found intervals in the sub-map:
[DBG]   [1..8]
[DBG]  Agent 112 (interval in submap: [1..8]) contains time 7, added to replan.
[DBG]  Agent 121 found intervals in the sub-map:
[DBG]   [0..13]
[DBG]  Agent 121 (interval in submap: [0..13]) contains time 7, added to replan.
[DBG]  Agent 125 found intervals in the sub-map:
[DBG]   [0..9]
[DBG]  Agent 125 (interval in submap: [0..9]) contains time 7, added to replan.
[DBG]  Agent 131 found intervals in the sub-map:
[DBG]   [10..16]
[DBG]  Agent 131 is not in sub-map at time 7 (intervals: 
[DBG]  [10..16] )
[DBG]  Agent 145 found intervals in the sub-map:
[DBG]  
[DBG]  Agent 145 is not in sub-map at time 7 (intervals: 
[DBG]  )
[DBG]  Agent 106 | Start (global): 369 -> (local): (0, 3) at time 7 | Goal (global): 494 -> (local): (4, 0) at time 15
[DBG]  Agent 112 | Start (global): 462 -> (local): (3, 0) at time 7 | Goal (global): 494 -> (local): (4, 0) at time 8
[DBG]  Agent 121 | Start (global): 432 -> (local): (2, 2) at time 7 | Goal (global): 494 -> (local): (4, 0) at time 13
[DBG]  Agent 125 | Start (global): 430 -> (local): (2, 0) at time 7 | Goal (global): 494 -> (local): (4, 0) at time 9
[DBG]  [REPAIR] SAT destroy operator called.
[DBG]  [REPAIR] SAT operator â€“ launching subproblem FOR OPTIMIZATION.
[DBG]  Creating local paths (sx, sy) in the submap for T_sync = 7
[DBG]    Agent 106 (global paths from T=7 to 15) has local path: (0,3) (0,2) (1,2) (2,2) (2,2) (3,2) (3,1) (3,0) (4,0) 
[DBG]    Agent 112 (global paths from T=7 to 8) has local path: (3,0) (4,0) 
[DBG]    Agent 121 (global paths from T=7 to 13) has local path: (2,2) (2,1) (2,1) (2,1) (3,1) (3,0) (4,0) 
[DBG]    Agent 125 (global paths from T=7 to 9) has local path: (2,0) (3,0) (4,0) 
[DBG]  Checking input data for SAT solver:
[DBG]    - Number of agents to replan: 4
[DBG]  Agent 106 has the original local path length: 9 => Start (0,3), Goal (4,0)
[DBG]  Agent 112 has the original local path length: 2 => Start (3,0), Goal (4,0)
[DBG]  Agent 121 has the original local path length: 7 => Start (2,2), Goal (4,0)
[DBG]  Agent 125 has the original local path length: 3 => Start (2,0), Goal (4,0)
[DBG]  Start position: (0, 3), (3, 0), (2, 2), (2, 0), 
[DBG]  Goal position: (4, 0), (4, 0), (4, 0), (4, 0), 
[DBG]  SAT instance and solver created.
Currently solving
Instance name: scen
Map name: map
Encoding used: disappear_at_goal
SAT solver used: Kissat
Optimizing function: sum of costs
Number of agents: 4
Mks LB: 8
SoC LB: 18
Delta: 0
Remaining time: 300000 [ms]

Vertex conflict! Agents 1, 2, timestep 5, location 0
Swapping conflict! Agents 1, 2, timestep 5, edge (0,0)
Vertex conflict! Agents 1, 2, timestep 6, location 0
Swapping conflict! Agents 1, 2, timestep 6, edge (0,0)
Vertex conflict! Agents 1, 2, timestep 7, location 0
Vertex conflict! Agents 1, 3, timestep 3, location 0
Swapping conflict! Agents 1, 3, timestep 3, edge (0,0)
Vertex conflict! Agents 1, 3, timestep 4, location 0
Swapping conflict! Agents 1, 3, timestep 4, edge (0,0)
Vertex conflict! Agents 1, 3, timestep 5, location 0
Swapping conflict! Agents 1, 3, timestep 5, edge (0,0)
Vertex conflict! Agents 1, 3, timestep 6, location 0
Swapping conflict! Agents 1, 3, timestep 6, edge (0,0)
Vertex conflict! Agents 1, 3, timestep 7, location 0
Vertex conflict! Agents 2, 3, timestep 5, location 0
Swapping conflict! Agents 2, 3, timestep 5, edge (0,0)
Vertex conflict! Agents 2, 3, timestep 6, location 0
Swapping conflict! Agents 2, 3, timestep 6, edge (0,0)
Vertex conflict! Agents 2, 3, timestep 7, location 0
Found plan [agents = 4] [timesteps = 8]
Agent #0 : 3 6 11 15 14 13 12 17 
Agent #1 : 12 17 0 0 0 0 0 0 
Agent #2 : 10 14 13 12 17 0 0 0 
Agent #3 : 8 12 17 0 0 0 0 0 

[STAT] Solver returned: 0
[DBG]  Agent (index) 106 | New local path (submap idx):
[DBG]  3 6 11 15 14 13 12 17 
[DBG]  Agent (index) 112 | New local path (submap idx):
[DBG]  12 17 
[DBG]  Agent (index) 121 | New local path (submap idx):
[DBG]  10 14 13 12 17 
[DBG]  Agent (index) 125 | New local path (submap idx):
[DBG]  8 12 17 
[DBG]  Update the agent path 106 | Original local length: 9 | New local length: 8
[DBG]  agent 106 t=0 => decoded (sx,sy)=(0,3) => global_id=369
[DBG]  agent 106 t=1 => decoded (sx,sy)=(1,3) => global_id=401
[DBG]  agent 106 t=2 => decoded (sx,sy)=(2,3) => global_id=433
[DBG]  agent 106 t=3 => decoded (sx,sy)=(3,3) => global_id=465
[DBG]  agent 106 t=4 => decoded (sx,sy)=(3,2) => global_id=464
[DBG]  agent 106 t=5 => decoded (sx,sy)=(3,1) => global_id=463
[DBG]  agent 106 t=6 => decoded (sx,sy)=(3,0) => global_id=462
[DBG]  agent 106 t=7 => decoded (sx,sy)=(4,0) => global_id=494
[DBG]  Complete path of agent 106:
[DBG]    Original: 244 243 275 274 306 338 337 369 368 400 432 432 464 463 462 494 526 525 524 556 588 587 619 651 651 650 649 649 648 680 712 713 745 746 747 715 
[DBG]    New:     244 243 275 274 306 338 337 369 401 433 465 464 463 462 494 526 525 524 556 588 587 619 651 651 650 649 649 648 680 712 713 745 746 747 715 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 244 243 275 274 306 338 337 
[DBG]    Local path (in submap): 369 401 433 465 464 463 462 494 526 
[DBG]    Suffix (out of submap): 525 524 556 588 587 619 651 651 650 649 649 648 680 712 713 745 746 747 715 
[DBG]  Original agent path length 106 je: 36
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 0: 244, 243, 275, 274, 306, 338, 337, 369, 401, 433, 465, 464, 463, 462, 494, 526, 525, 524, 556, 588, 587, 619, 651, 651, 650, 649, 649, 648, 680, 712, 713, 745, 746, 747, 715, 
[DBG]  Path for agent 106 updated, resulting length: 35
[DBG]  Update the agent path 112 | Original local length: 2 | New local length: 2
[DBG]  agent 112 t=0 => decoded (sx,sy)=(3,0) => global_id=462
[DBG]  agent 112 t=1 => decoded (sx,sy)=(4,0) => global_id=494
[DBG]  Complete path of agent 112:
[DBG]    Original: 337 369 368 400 432 464 463 462 494 526 525 524 556 555 587 619 651 650 649 648 647 646 645 644 676 675 
[DBG]    New:     337 369 368 400 432 464 463 462 494 526 525 524 556 555 587 619 651 650 649 648 647 646 645 644 676 675 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 337 369 368 400 432 464 463 
[DBG]    Local path (in submap): 462 494 
[DBG]    Suffix (out of submap): 526 525 524 556 555 587 619 651 650 649 648 647 646 645 644 676 675 
[DBG]  Original agent path length 112 je: 26
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 1: 337, 369, 368, 400, 432, 464, 463, 462, 494, 526, 525, 524, 556, 555, 587, 619, 651, 650, 649, 648, 647, 646, 645, 644, 676, 675, 
[DBG]  Path for agent 112 updated, resulting length: 26
[DBG]  Update the agent path 121 | Original local length: 7 | New local length: 5
[DBG]  agent 121 t=0 => decoded (sx,sy)=(2,2) => global_id=432
[DBG]  agent 121 t=1 => decoded (sx,sy)=(3,2) => global_id=464
[DBG]  agent 121 t=2 => decoded (sx,sy)=(3,1) => global_id=463
[DBG]  agent 121 t=3 => decoded (sx,sy)=(3,0) => global_id=462
[DBG]  agent 121 t=4 => decoded (sx,sy)=(4,0) => global_id=494
[DBG]  Complete path of agent 121:
[DBG]    Original: 401 401 369 369 369 401 433 432 431 431 431 463 462 494 526 525 524 556 555 
[DBG]    New:     401 401 369 369 369 401 433 432 464 463 462 494 526 525 524 556 555 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 401 401 369 369 369 401 433 
[DBG]    Local path (in submap): 432 464 463 462 494 526 525 
[DBG]    Suffix (out of submap): 524 556 555 
[DBG]  Original agent path length 121 je: 19
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 2: 401, 401, 369, 369, 369, 401, 433, 432, 464, 463, 462, 494, 526, 525, 524, 556, 555, 
[DBG]  Path for agent 121 updated, resulting length: 17
[DBG]  Update the agent path 125 | Original local length: 3 | New local length: 3
[DBG]  agent 125 t=0 => decoded (sx,sy)=(2,0) => global_id=430
[DBG]  agent 125 t=1 => decoded (sx,sy)=(3,0) => global_id=462
[DBG]  agent 125 t=2 => decoded (sx,sy)=(4,0) => global_id=494
[DBG]  Complete path of agent 125:
[DBG]    Original: 430 462 462 462 462 430 430 430 462 494 526 525 524 524 523 555 587 619 651 651 683 682 714 713 745 777 809 808 807 807 775 
[DBG]    New:     430 462 462 462 462 430 430 430 462 494 526 525 524 524 523 555 587 619 651 651 683 682 714 713 745 777 809 808 807 807 775 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 430 462 462 462 462 430 430 
[DBG]    Local path (in submap): 430 462 494 
[DBG]    Suffix (out of submap): 526 525 524 524 523 555 587 619 651 651 683 682 714 713 745 777 809 808 807 807 775 
[DBG]  Original agent path length 125 je: 31
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 3: 430, 462, 462, 462, 462, 430, 430, 430, 462, 494, 526, 525, 524, 524, 523, 555, 587, 619, 651, 651, 683, 682, 714, 713, 745, 777, 809, 808, 807, 807, 775, 
[DBG]  Path for agent 125 updated, resulting length: 31
[DBG]  Paths successfully updated.
[DBG]  (LNS.cpp) New path for agent 106: 
[DBG]  244, 243, 275, 274, 306, 338, 337, 369, 401, 433, 465, 464, 463, 462, 494, 526, 525, 524, 556, 588, 587, 619, 651, 651, 650, 649, 649, 648, 680, 712, 713, 745, 746, 747, 715, 
[DBG]  (LNS.cpp) New path for agent 112: 
[DBG]  337, 369, 368, 400, 432, 464, 463, 462, 494, 526, 525, 524, 556, 555, 587, 619, 651, 650, 649, 648, 647, 646, 645, 644, 676, 675, 
[DBG]  (LNS.cpp) New path for agent 121: 
[DBG]  401, 401, 369, 369, 369, 401, 433, 432, 464, 463, 462, 494, 526, 525, 524, 556, 555, 
[DBG]  (LNS.cpp) New path for agent 125: 
[DBG]  430, 462, 462, 462, 462, 430, 430, 430, 462, 494, 526, 525, 524, 524, 523, 555, 587, 619, 651, 651, 683, 682, 714, 713, 745, 777, 809, 808, 807, 807, 775, 
[DBG]  component_weights = {0.361421, 0.103283, 0.108009, 0.427287}
[DBG]  opSuccess value: 1
[STAT] neighbor.sum_of_costs before recomputation: 105
[STAT] neighbor.old_sum_of_costs before recomputation: 108
[STAT] sum_of_costs before recomputation: 4300
[DBG]  Validate solution immediately after SAT success.
[WARNING] Problem after SAT: Target conflict: agent 20 (len 32) traverses target of agent 121 (len 16) at location 555 at timestep 17
[DBG]  Attempting immediate repair via init_lns because problem occurred after SAT (should be applied only for conflicts...).
[DBG]  Passing 150 agents to init_lns (skip=true).
[DBG]  path_table contents for selected agents (neighbor.agents):
[DBG]    Agent 106 => controlling path length=35
[DBG]    Agent 112 => controlling path length=26
[DBG]    Agent 121 => controlling path length=17
[DBG]    Agent 125 => controlling path length=31
[DBG]  hodnota skip_initial_solution=1
[DBG]  We skip initialSolution => call buildCollisionData()
[DBG]  buildCollisionData() called â€“ skip_initial_solution case.
[DBG]  Agents.size()=150, collision_graph.size()=150
[DBG]  agent 20 => updateCollidingPairs => foundCollision
[DBG]  agent 33 => updateCollidingPairs => foundCollision
[DBG]  agent 63 => updateCollidingPairs => foundCollision
[DBG]  agent 98 => updateCollidingPairs => foundCollision
[DBG]  agent 103 => updateCollidingPairs => foundCollision
[DBG]  agent 106 => updateCollidingPairs => foundCollision
[DBG]  agent 121 => updateCollidingPairs => foundCollision
[DBG]  Conflicting agent pairs:
[DBG]  agent 20 is in conflict with agent 121
[DBG]  agent 33 is in conflict with agent 106
[DBG]  agent 33 is in conflict with agent 121
[DBG]  agent 63 is in conflict with agent 106
[DBG]  agent 98 is in conflict with agent 106
[DBG]  agent 103 is in conflict with agent 106
[DBG]  buildCollisionData() => sum_of_costs=4297, num_of_colliding_pairs=6
[DBG]  buildCollisionData done => sum_of_costs=4297, num_of_colliding_pairs=6
[DBG]  sum_of_cost hodnota: 4297
[DBG]  After skip/init build => iteration_stats.back(): sum_of_costs=4297, collisions=6
[DEBUG] Using default neighbor generation strategy for conflicts: 1
	InitLNS(PP): runtime = 0.00606717, iterations = 2, colliding pairs = 0, initial colliding pairs = 6, solution cost = 4285, initial solution cost = 4297, failed iterations = 0
[DBG]  init_lns->sum_of_costs after init_lns->run: 4285
[DBG]  sum_of_costs after assignment from init_lns->run: 4285
[DBG]  Recomputing sum_of_cost by dividing neighbor.sum_of_costs and neighbor.old_sum_of_costs
[STAT] sum_of_costs after recomputation: 4285
[STAT] Iteration 133
[DBG]  Using SAT operator (destroy+repair SAT).
[DBG]  ====================
[DBG]  SAT destroy operator called.
[DBG]  SAT heuristic: 2
[DBG]  key_agent_id: 80
[DBG]  key_agent_id global path length: 24
[DBG]  Submap content (global positions):
[DBG]  198 199 200 201 202 
[DBG]  230 231 232 233 234 
[DBG]  262 263 264 265 266 
[DBG]  294 295 296 297 298 
[DBG]  326 327 328 329 330 
[DBG]  Map content with agents and obstacles:
[DBG]  X . A X X 
[DBG]  . . A . . 
[DBG]  X . A . . 
[DBG]  . . . A . 
[DBG]  A A . . . 
[DBG]  content of the map structure that we pass to the SAT solver:
[DBG]  -1  1  1  -1  -1  
[DBG]  1  1  1  1  1  
[DBG]  -1  1  1  1  1  
[DBG]  1  1  1  1  1  
[DBG]  1  1  1  1  1  
[DBG]  Identifying agents in a submap for rescheduling (when key_agent is there at the time 12):
[DBG]  Agent 15 found intervals in the sub-map:
[DBG]   [9..15]
[DBG]  Agent 15 (interval in submap: [9..15]) contains time 12, added to replan.
[DBG]  Agent 55 found intervals in the sub-map:
[DBG]   [14..14]
[DBG]  Agent 55 is not in sub-map at time 12 (intervals: 
[DBG]  [14..14] )
[DBG]  Agent 65 found intervals in the sub-map:
[DBG]   [11..12]
[DBG]  Agent 65 (interval in submap: [11..12]) contains time 12, added to replan.
[DBG]  Agent 80 found intervals in the sub-map:
[DBG]   [9..15]
[DBG]  Agent 80 (interval in submap: [9..15]) contains time 12, added to replan.
[DBG]  Agent 103 found intervals in the sub-map:
[DBG]   [5..13]
[DBG]  Agent 103 (interval in submap: [5..13]) contains time 12, added to replan.
[DBG]  Agent 120 found intervals in the sub-map:
[DBG]   [3..46]
[DBG]  Agent 120 (interval in submap: [3..46]) contains time 12, added to replan.
[DBG]  Agent 125 found intervals in the sub-map:
[DBG]  
[DBG]  Agent 125 is not in sub-map at time 12 (intervals: 
[DBG]  )
[DBG]  Agent 127 found intervals in the sub-map:
[DBG]   [6..12]
[DBG]  Agent 127 (interval in submap: [6..12]) contains time 12, added to replan.
[DBG]  Agent 15 | Start (global): 297 -> (local): (3, 3) at time 12 | Goal (global): 234 -> (local): (1, 4) at time 15
[DBG]  Agent 65 | Start (global): 326 -> (local): (4, 0) at time 12 | Goal (global): 326 -> (local): (4, 0) at time 12
[DBG]  Agent 80 | Start (global): 264 -> (local): (2, 2) at time 12 | Goal (global): 294 -> (local): (3, 0) at time 15
[DBG]  Agent 103 | Start (global): 327 -> (local): (4, 1) at time 12 | Goal (global): 326 -> (local): (4, 0) at time 13
[DBG]  Agent 120 | Start (global): 232 -> (local): (1, 2) at time 12 | Goal (global): 200 -> (local): (0, 2) at time 46
[DBG]  Agent 127 | Start (global): 200 -> (local): (0, 2) at time 12 | Goal (global): 200 -> (local): (0, 2) at time 12
[DBG]  [REPAIR] SAT destroy operator called.
[DBG]  [REPAIR] SAT operator â€“ launching subproblem FOR OPTIMIZATION.
[DBG]  Creating local paths (sx, sy) in the submap for T_sync = 12
[DBG]    Agent 15 (global paths from T=12 to 15) has local path: (3,3) (3,4) (2,4) (1,4) 
[DBG]    Agent 65 (global paths from T=12 to 12) has local path: (4,0) 
[DBG]    Agent 80 (global paths from T=12 to 15) has local path: (2,2) (3,2) (3,1) (3,0) 
[DBG]    Agent 103 (global paths from T=12 to 13) has local path: (4,1) (4,0) 
[DBG]    Agent 120 (global paths from T=12 to 46) has local path: (1,2) (2,2) (3,2) (3,1) (3,1) (3,2) (4,2) (4,2) (4,2) (4,2) (4,2) (4,2) (4,2) (4,2) (4,2) (4,2) (4,2) (4,2) (4,2) (4,2) (4,2) (4,2) (3,2) (3,1) (3,1) (3,1) (3,1) (3,1) (3,1) (3,1) (3,1) (3,2) (2,2) (1,2) (0,2) 
[DBG]    Agent 127 (global paths from T=12 to 12) has local path: (0,2) 
[DBG]  Checking input data for SAT solver:
[DBG]    - Number of agents to replan: 6
[DBG]  Agent 15 has the original local path length: 4 => Start (3,3), Goal (1,4)
[DBG]  Agent 65 has the original local path length: 1 => Start (4,0), Goal (4,0)
[DBG]  Agent 80 has the original local path length: 4 => Start (2,2), Goal (3,0)
[DBG]  Agent 103 has the original local path length: 2 => Start (4,1), Goal (4,0)
[DBG]  Agent 120 has the original local path length: 35 => Start (1,2), Goal (0,2)
[DBG]  Agent 127 has the original local path length: 1 => Start (0,2), Goal (0,2)
[DBG]  Start position: (3, 3), (4, 0), (2, 2), (4, 1), (1, 2), (0, 2), 
[DBG]  Goal position: (1, 4), (4, 0), (3, 0), (4, 0), (0, 2), (0, 2), 
[DBG]  SAT instance and solver created.
Currently solving
Instance name: scen
Map name: map
Encoding used: disappear_at_goal
SAT solver used: Kissat
Optimizing function: sum of costs
Number of agents: 6
Mks LB: 4
SoC LB: 14
Delta: 0
Remaining time: 300000 [ms]

Vertex conflict! Agents 1, 3, timestep 2, location 0
Swapping conflict! Agents 1, 3, timestep 2, edge (0,0)
Vertex conflict! Agents 1, 3, timestep 3, location 0
Vertex conflict! Agents 1, 4, timestep 2, location 0
Swapping conflict! Agents 1, 4, timestep 2, edge (0,0)
Vertex conflict! Agents 1, 4, timestep 3, location 0
Vertex conflict! Agents 1, 5, timestep 1, location 0
Swapping conflict! Agents 1, 5, timestep 1, edge (0,0)
Vertex conflict! Agents 1, 5, timestep 2, location 0
Swapping conflict! Agents 1, 5, timestep 2, edge (0,0)
Vertex conflict! Agents 1, 5, timestep 3, location 0
Vertex conflict! Agents 3, 4, timestep 2, location 0
Swapping conflict! Agents 3, 4, timestep 2, edge (0,0)
Vertex conflict! Agents 3, 4, timestep 3, location 0
Vertex conflict! Agents 3, 5, timestep 2, location 0
Swapping conflict! Agents 3, 5, timestep 2, edge (0,0)
Vertex conflict! Agents 3, 5, timestep 3, location 0
Vertex conflict! Agents 4, 5, timestep 2, location 0
Swapping conflict! Agents 4, 5, timestep 2, edge (0,0)
Vertex conflict! Agents 4, 5, timestep 3, location 0
Found plan [agents = 6] [timesteps = 4]
Agent #0 : 14 15 10 6 
Agent #1 : 16 0 0 0 
Agent #2 : 8 13 12 11 
Agent #3 : 17 16 0 0 
Agent #4 : 4 1 0 0 
Agent #5 : 1 0 0 0 

[STAT] Solver returned: 0
[DBG]  Agent (index) 15 | New local path (submap idx):
[DBG]  14 15 10 6 
[DBG]  Agent (index) 65 | New local path (submap idx):
[DBG]  16 
[DBG]  Agent (index) 80 | New local path (submap idx):
[DBG]  8 13 12 11 
[DBG]  Agent (index) 103 | New local path (submap idx):
[DBG]  17 16 
[DBG]  Agent (index) 120 | New local path (submap idx):
[DBG]  4 1 
[DBG]  Agent (index) 127 | New local path (submap idx):
[DBG]  1 
[DBG]  Update the agent path 15 | Original local length: 4 | New local length: 4
[DBG]  agent 15 t=0 => decoded (sx,sy)=(3,3) => global_id=297
[DBG]  agent 15 t=1 => decoded (sx,sy)=(3,4) => global_id=298
[DBG]  agent 15 t=2 => decoded (sx,sy)=(2,4) => global_id=266
[DBG]  agent 15 t=3 => decoded (sx,sy)=(1,4) => global_id=234
[DBG]  Complete path of agent 15:
[DBG]    Original: 288 289 257 257 258 259 260 261 293 294 295 296 297 298 266 234 235 203 204 205 173 141 109 110 111 112 113 81 82 83 115 116 117 118 119 120 121 122 123 124 156 157 
[DBG]    New:     288 289 257 257 258 259 260 261 293 294 295 296 297 298 266 234 235 203 204 205 173 141 109 110 111 112 113 81 82 83 115 116 117 118 119 120 121 122 123 124 156 157 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 288 289 257 257 258 259 260 261 293 294 295 296 
[DBG]    Local path (in submap): 297 298 266 234 
[DBG]    Suffix (out of submap): 235 203 204 205 173 141 109 110 111 112 113 81 82 83 115 116 117 118 119 120 121 122 123 124 156 157 
[DBG]  Original agent path length 15 je: 42
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 0: 288, 289, 257, 257, 258, 259, 260, 261, 293, 294, 295, 296, 297, 298, 266, 234, 235, 203, 204, 205, 173, 141, 109, 110, 111, 112, 113, 81, 82, 83, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 156, 157, 
[DBG]  Path for agent 15 updated, resulting length: 42
[DBG]  Update the agent path 65 | Original local length: 1 | New local length: 1
[DBG]  agent 65 t=0 => decoded (sx,sy)=(4,0) => global_id=326
[DBG]  Complete path of agent 65:
[DBG]    Original: 66 98 99 100 132 164 196 228 260 261 293 294 326 358 390 422 454 486 485 517 549 581 582 583 584 616 648 680 712 713 745 746 778 779 811 843 
[DBG]    New:     66 98 99 100 132 164 196 228 260 261 293 294 326 358 390 422 454 486 485 517 549 581 582 583 584 616 648 680 712 713 745 746 778 779 811 843 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 66 98 99 100 132 164 196 228 260 261 293 294 
[DBG]    Local path (in submap): 326 
[DBG]    Suffix (out of submap): 358 390 422 454 486 485 517 549 581 582 583 584 616 648 680 712 713 745 746 778 779 811 843 
[DBG]  Original agent path length 65 je: 36
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 1: 66, 98, 99, 100, 132, 164, 196, 228, 260, 261, 293, 294, 326, 358, 390, 422, 454, 486, 485, 517, 549, 581, 582, 583, 584, 616, 648, 680, 712, 713, 745, 746, 778, 779, 811, 843, 
[DBG]  Path for agent 65 updated, resulting length: 36
[DBG]  Update the agent path 80 | Original local length: 4 | New local length: 4
[DBG]  agent 80 t=0 => decoded (sx,sy)=(2,2) => global_id=264
[DBG]  agent 80 t=1 => decoded (sx,sy)=(3,2) => global_id=296
[DBG]  agent 80 t=2 => decoded (sx,sy)=(3,1) => global_id=295
[DBG]  agent 80 t=3 => decoded (sx,sy)=(3,0) => global_id=294
[DBG]  Complete path of agent 80:
[DBG]    Original: 111 110 109 141 173 172 204 236 235 234 266 265 264 296 295 294 293 325 357 389 421 420 419 418 
[DBG]    New:     111 110 109 141 173 172 204 236 235 234 266 265 264 296 295 294 293 325 357 389 421 420 419 418 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 111 110 109 141 173 172 204 236 235 234 266 265 
[DBG]    Local path (in submap): 264 296 295 294 
[DBG]    Suffix (out of submap): 293 325 357 389 421 420 419 418 
[DBG]  Original agent path length 80 je: 24
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 2: 111, 110, 109, 141, 173, 172, 204, 236, 235, 234, 266, 265, 264, 296, 295, 294, 293, 325, 357, 389, 421, 420, 419, 418, 
[DBG]  Path for agent 80 updated, resulting length: 24
[DBG]  Update the agent path 103 | Original local length: 2 | New local length: 2
[DBG]  agent 103 t=0 => decoded (sx,sy)=(4,1) => global_id=327
[DBG]  agent 103 t=1 => decoded (sx,sy)=(4,0) => global_id=326
[DBG]  Complete path of agent 103:
[DBG]    Original: 40 72 104 136 168 200 232 264 296 328 327 327 327 326 358 390 422 454 486 485 517 549 550 551 583 584 616 648 680 712 713 745 777 809 841 873 905 
[DBG]    New:     40 72 104 136 168 200 232 264 296 328 327 327 327 326 358 390 422 454 486 485 517 549 550 551 583 584 616 648 680 712 713 745 777 809 841 873 905 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 40 72 104 136 168 200 232 264 296 328 327 327 
[DBG]    Local path (in submap): 327 326 
[DBG]    Suffix (out of submap): 358 390 422 454 486 485 517 549 550 551 583 584 616 648 680 712 713 745 777 809 841 873 905 
[DBG]  Original agent path length 103 je: 37
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 3: 40, 72, 104, 136, 168, 200, 232, 264, 296, 328, 327, 327, 327, 326, 358, 390, 422, 454, 486, 485, 517, 549, 550, 551, 583, 584, 616, 648, 680, 712, 713, 745, 777, 809, 841, 873, 905, 
[DBG]  Path for agent 103 updated, resulting length: 37
[DBG]  Update the agent path 120 | Original local length: 35 | New local length: 2
[DBG]  agent 120 t=0 => decoded (sx,sy)=(1,2) => global_id=232
[DBG]  agent 120 t=1 => decoded (sx,sy)=(0,2) => global_id=200
[DBG]  Complete path of agent 120:
[DBG]    Original: 203 235 267 266 266 266 266 266 265 265 265 264 232 264 296 295 295 296 328 328 328 328 328 328 328 328 328 328 328 328 328 328 328 328 296 295 295 295 295 295 295 295 295 296 264 232 200 
[DBG]    New:     203 235 267 266 266 266 266 266 265 265 265 264 232 200 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 203 235 267 266 266 266 266 266 265 265 265 264 
[DBG]    Local path (in submap): 232 200 
[DBG]    Suffix (out of submap): 
[DBG]  Original agent path length 120 je: 47
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 4: 203, 235, 267, 266, 266, 266, 266, 266, 265, 265, 265, 264, 232, 200, 
[DBG]  Path for agent 120 updated, resulting length: 14
[DBG]  Update the agent path 127 | Original local length: 1 | New local length: 1
[DBG]  agent 127 t=0 => decoded (sx,sy)=(0,2) => global_id=200
[DBG]  Complete path of agent 127:
[DBG]    Original: 428 427 426 425 393 361 329 297 297 296 264 232 200 168 136 104 105 73 
[DBG]    New:     428 427 426 425 393 361 329 297 297 296 264 232 200 168 136 104 105 73 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 428 427 426 425 393 361 329 297 297 296 264 232 
[DBG]    Local path (in submap): 200 
[DBG]    Suffix (out of submap): 168 136 104 105 73 
[DBG]  Original agent path length 127 je: 18
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 5: 428, 427, 426, 425, 393, 361, 329, 297, 297, 296, 264, 232, 200, 168, 136, 104, 105, 73, 
[DBG]  Path for agent 127 updated, resulting length: 18
[DBG]  Paths successfully updated.
[DBG]  (LNS.cpp) New path for agent 15: 
[DBG]  288, 289, 257, 257, 258, 259, 260, 261, 293, 294, 295, 296, 297, 298, 266, 234, 235, 203, 204, 205, 173, 141, 109, 110, 111, 112, 113, 81, 82, 83, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 156, 157, 
[DBG]  (LNS.cpp) New path for agent 65: 
[DBG]  66, 98, 99, 100, 132, 164, 196, 228, 260, 261, 293, 294, 326, 358, 390, 422, 454, 486, 485, 517, 549, 581, 582, 583, 584, 616, 648, 680, 712, 713, 745, 746, 778, 779, 811, 843, 
[DBG]  (LNS.cpp) New path for agent 80: 
[DBG]  111, 110, 109, 141, 173, 172, 204, 236, 235, 234, 266, 265, 264, 296, 295, 294, 293, 325, 357, 389, 421, 420, 419, 418, 
[DBG]  (LNS.cpp) New path for agent 103: 
[DBG]  40, 72, 104, 136, 168, 200, 232, 264, 296, 328, 327, 327, 327, 326, 358, 390, 422, 454, 486, 485, 517, 549, 550, 551, 583, 584, 616, 648, 680, 712, 713, 745, 777, 809, 841, 873, 905, 
[DBG]  (LNS.cpp) New path for agent 120: 
[DBG]  203, 235, 267, 266, 266, 266, 266, 266, 265, 265, 265, 264, 232, 200, 
[DBG]  (LNS.cpp) New path for agent 127: 
[DBG]  428, 427, 426, 425, 393, 361, 329, 297, 297, 296, 264, 232, 200, 168, 136, 104, 105, 73, 
[DBG]  component_weights = {0.358039, 0.102317, 0.106998, 0.432646}
[DBG]  opSuccess value: 1
[STAT] neighbor.sum_of_costs before recomputation: 165
[STAT] neighbor.old_sum_of_costs before recomputation: 198
[STAT] sum_of_costs before recomputation: 4285
[DBG]  Validate solution immediately after SAT success.
[DBG]  No problems after SAT replan.
[DBG]  Recomputing sum_of_cost by dividing neighbor.sum_of_costs and neighbor.old_sum_of_costs
[STAT] sum_of_costs after recomputation: 4252
[STAT] Iteration 134
[DBG]  Using SAT operator (destroy+repair SAT).
[DBG]  ====================
[DBG]  SAT destroy operator called.
[DBG]  SAT heuristic: 2
[DBG]  key_agent_id: 51
[DBG]  key_agent_id global path length: 17
[DBG]  Submap content (global positions):
[DBG]  325 326 327 328 329 
[DBG]  357 358 359 360 361 
[DBG]  389 390 391 392 393 
[DBG]  421 422 423 424 425 
[DBG]  453 454 455 456 457 
[DBG]  Map content with agents and obstacles:
[DBG]  . . A . . 
[DBG]  . A A . . 
[DBG]  A A A X . 
[DBG]  . A . . . 
[DBG]  X . . . . 
[DBG]  content of the map structure that we pass to the SAT solver:
[DBG]  1  1  1  1  1  
[DBG]  1  1  1  1  1  
[DBG]  1  1  1  -1  1  
[DBG]  1  1  1  1  1  
[DBG]  -1  1  1  1  1  
[DBG]  Identifying agents in a submap for rescheduling (when key_agent is there at the time 10):
[DBG]  Agent 16 found intervals in the sub-map:
[DBG]   [0..4]
[DBG]  Agent 16 is not in sub-map at time 10 (intervals: 
[DBG]  [0..4] )
[DBG]  Agent 21 found intervals in the sub-map:
[DBG]   [10..14]
[DBG]  Agent 21 (interval in submap: [10..14]) contains time 10, added to replan.
[DBG]  Agent 29 found intervals in the sub-map:
[DBG]  
[DBG]  Agent 29 is not in sub-map at time 10 (intervals: 
[DBG]  )
[DBG]  Agent 42 found intervals in the sub-map:
[DBG]   [9..13]
[DBG]  Agent 42 (interval in submap: [9..13]) contains time 10, added to replan.
[DBG]  Agent 51 found intervals in the sub-map:
[DBG]   [6..13]
[DBG]  Agent 51 (interval in submap: [6..13]) contains time 10, added to replan.
[DBG]  Agent 59 found intervals in the sub-map:
[DBG]   [7..12]
[DBG]  Agent 59 (interval in submap: [7..12]) contains time 10, added to replan.
[DBG]  Agent 78 found intervals in the sub-map:
[DBG]   [4..6]
[DBG]  Agent 78 is not in sub-map at time 10 (intervals: 
[DBG]  [4..6] )
[DBG]  Agent 87 found intervals in the sub-map:
[DBG]   [6..11]
[DBG]  Agent 87 (interval in submap: [6..11]) contains time 10, added to replan.
[DBG]  Agent 103 found intervals in the sub-map:
[DBG]   [9..17]
[DBG]  Agent 103 (interval in submap: [9..17]) contains time 10, added to replan.
[DBG]  Agent 112 found intervals in the sub-map:
[DBG]  
[DBG]  Agent 112 is not in sub-map at time 10 (intervals: 
[DBG]  )
[DBG]  Agent 116 found intervals in the sub-map:
[DBG]   [16..16]
[DBG]  Agent 116 is not in sub-map at time 10 (intervals: 
[DBG]  [16..16] )
[DBG]  Agent 146 found intervals in the sub-map:
[DBG]   [9..14]
[DBG]  Agent 146 (interval in submap: [9..14]) contains time 10, added to replan.
[DBG]  Agent 21 | Start (global): 389 -> (local): (2, 0) at time 10 | Goal (global): 327 -> (local): (0, 2) at time 14
[DBG]  Agent 42 | Start (global): 358 -> (local): (1, 1) at time 10 | Goal (global): 361 -> (local): (1, 4) at time 13
[DBG]  Agent 51 | Start (global): 391 -> (local): (2, 2) at time 10 | Goal (global): 425 -> (local): (3, 4) at time 13
[DBG]  Agent 59 | Start (global): 359 -> (local): (1, 2) at time 10 | Goal (global): 361 -> (local): (1, 4) at time 12
[DBG]  Agent 87 | Start (global): 422 -> (local): (3, 1) at time 10 | Goal (global): 454 -> (local): (4, 1) at time 11
[DBG]  Agent 103 | Start (global): 327 -> (local): (0, 2) at time 10 | Goal (global): 454 -> (local): (4, 1) at time 17
[DBG]  Agent 146 | Start (global): 390 -> (local): (2, 1) at time 10 | Goal (global): 328 -> (local): (0, 3) at time 14
[DBG]  [REPAIR] SAT destroy operator called.
[DBG]  [REPAIR] SAT operator â€“ launching subproblem FOR OPTIMIZATION.
[DBG]  Creating local paths (sx, sy) in the submap for T_sync = 10
[DBG]    Agent 21 (global paths from T=10 to 14) has local path: (2,0) (2,1) (2,2) (1,2) (0,2) 
[DBG]    Agent 42 (global paths from T=10 to 13) has local path: (1,1) (1,2) (1,3) (1,4) 
[DBG]    Agent 51 (global paths from T=10 to 13) has local path: (2,2) (3,2) (3,3) (3,4) 
[DBG]    Agent 59 (global paths from T=10 to 12) has local path: (1,2) (1,3) (1,4) 
[DBG]    Agent 87 (global paths from T=10 to 11) has local path: (3,1) (4,1) 
[DBG]    Agent 103 (global paths from T=10 to 17) has local path: (0,2) (0,2) (0,2) (0,1) (1,1) (2,1) (3,1) (4,1) 
[DBG]    Agent 146 (global paths from T=10 to 14) has local path: (2,1) (1,1) (1,2) (0,2) (0,3) 
[DBG]  Checking input data for SAT solver:
[DBG]    - Number of agents to replan: 7
[DBG]  Agent 21 has the original local path length: 5 => Start (2,0), Goal (0,2)
[DBG]  Agent 42 has the original local path length: 4 => Start (1,1), Goal (1,4)
[DBG]  Agent 51 has the original local path length: 4 => Start (2,2), Goal (3,4)
[DBG]  Agent 59 has the original local path length: 3 => Start (1,2), Goal (1,4)
[DBG]  Agent 87 has the original local path length: 2 => Start (3,1), Goal (4,1)
[DBG]  Agent 103 has the original local path length: 8 => Start (0,2), Goal (4,1)
[DBG]  Agent 146 has the original local path length: 5 => Start (2,1), Goal (0,3)
[DBG]  Start position: (2, 0), (1, 1), (2, 2), (1, 2), (3, 1), (0, 2), (2, 1), 
[DBG]  Goal position: (0, 2), (1, 4), (3, 4), (1, 4), (4, 1), (4, 1), (0, 3), 
[DBG]  SAT instance and solver created.
Currently solving
Instance name: scen
Map name: map
Encoding used: disappear_at_goal
SAT solver used: Kissat
Optimizing function: sum of costs
Number of agents: 7
Mks LB: 6
SoC LB: 29
Delta: 0
Remaining time: 300000 [ms]

Vertex conflict! Agents 0, 1, timestep 5, location 0
Vertex conflict! Agents 0, 2, timestep 5, location 0
Vertex conflict! Agents 0, 3, timestep 5, location 0
Vertex conflict! Agents 0, 4, timestep 5, location 0
Vertex conflict! Agents 0, 6, timestep 5, location 0
Vertex conflict! Agents 1, 2, timestep 4, location 0
Swapping conflict! Agents 1, 2, timestep 4, edge (0,0)
Vertex conflict! Agents 1, 2, timestep 5, location 0
Vertex conflict! Agents 1, 3, timestep 4, location 0
Swapping conflict! Agents 1, 3, timestep 4, edge (0,0)
Vertex conflict! Agents 1, 3, timestep 5, location 0
Vertex conflict! Agents 1, 4, timestep 4, location 0
Swapping conflict! Agents 1, 4, timestep 4, edge (0,0)
Vertex conflict! Agents 1, 4, timestep 5, location 0
Vertex conflict! Agents 1, 6, timestep 5, location 0
Vertex conflict! Agents 2, 3, timestep 4, location 0
Swapping conflict! Agents 2, 3, timestep 4, edge (0,0)
Vertex conflict! Agents 2, 3, timestep 5, location 0
Vertex conflict! Agents 2, 4, timestep 4, location 0
Swapping conflict! Agents 2, 4, timestep 4, edge (0,0)
Vertex conflict! Agents 2, 4, timestep 5, location 0
Vertex conflict! Agents 2, 6, timestep 5, location 0
Vertex conflict! Agents 3, 4, timestep 3, location 0
Swapping conflict! Agents 3, 4, timestep 3, edge (0,0)
Vertex conflict! Agents 3, 4, timestep 4, location 0
Swapping conflict! Agents 3, 4, timestep 4, edge (0,0)
Vertex conflict! Agents 3, 4, timestep 5, location 0
Vertex conflict! Agents 3, 6, timestep 5, location 0
Vertex conflict! Agents 4, 6, timestep 5, location 0
Found plan [agents = 7] [timesteps = 6]
Agent #0 : 10 11 12 7 2 0 
Agent #1 : 6 7 8 9 0 0 
Agent #2 : 12 16 17 18 0 0 
Agent #3 : 7 8 9 0 0 0 
Agent #4 : 15 19 0 0 0 0 
Agent #5 : 2 1 6 11 15 19 
Agent #6 : 11 12 7 8 3 0 

[STAT] Solver returned: 0
[DBG]  Agent (index) 21 | New local path (submap idx):
[DBG]  10 11 12 7 2 
[DBG]  Agent (index) 42 | New local path (submap idx):
[DBG]  6 7 8 9 
[DBG]  Agent (index) 51 | New local path (submap idx):
[DBG]  12 16 17 18 
[DBG]  Agent (index) 59 | New local path (submap idx):
[DBG]  7 8 9 
[DBG]  Agent (index) 87 | New local path (submap idx):
[DBG]  15 19 
[DBG]  Agent (index) 103 | New local path (submap idx):
[DBG]  2 1 6 11 15 19 
[DBG]  Agent (index) 146 | New local path (submap idx):
[DBG]  11 12 7 8 3 
[DBG]  Update the agent path 21 | Original local length: 5 | New local length: 5
[DBG]  agent 21 t=0 => decoded (sx,sy)=(2,0) => global_id=389
[DBG]  agent 21 t=1 => decoded (sx,sy)=(2,1) => global_id=390
[DBG]  agent 21 t=2 => decoded (sx,sy)=(2,2) => global_id=391
[DBG]  agent 21 t=3 => decoded (sx,sy)=(1,2) => global_id=359
[DBG]  agent 21 t=4 => decoded (sx,sy)=(0,2) => global_id=327
[DBG]  Complete path of agent 21:
[DBG]    Original: 484 484 483 482 482 450 418 419 387 388 389 390 391 359 327 
[DBG]    New:     484 484 483 482 482 450 418 419 387 388 389 390 391 359 327 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 484 484 483 482 482 450 418 419 387 388 
[DBG]    Local path (in submap): 389 390 391 359 327 
[DBG]    Suffix (out of submap): 
[DBG]  Original agent path length 21 je: 15
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 0: 484, 484, 483, 482, 482, 450, 418, 419, 387, 388, 389, 390, 391, 359, 327, 
[DBG]  Path for agent 21 updated, resulting length: 15
[DBG]  Update the agent path 42 | Original local length: 4 | New local length: 4
[DBG]  agent 42 t=0 => decoded (sx,sy)=(1,1) => global_id=358
[DBG]  agent 42 t=1 => decoded (sx,sy)=(1,2) => global_id=359
[DBG]  agent 42 t=2 => decoded (sx,sy)=(1,3) => global_id=360
[DBG]  agent 42 t=3 => decoded (sx,sy)=(1,4) => global_id=361
[DBG]  Complete path of agent 42:
[DBG]    Original: 224 256 288 289 321 353 354 355 356 357 358 359 360 361 362 363 395 427 428 460 492 524 556 588 589 590 591 592 593 625 657 658 659 691 692 724 725 726 727 759 
[DBG]    New:     224 256 288 289 321 353 354 355 356 357 358 359 360 361 362 363 395 427 428 460 492 524 556 588 589 590 591 592 593 625 657 658 659 691 692 724 725 726 727 759 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 224 256 288 289 321 353 354 355 356 357 
[DBG]    Local path (in submap): 358 359 360 361 
[DBG]    Suffix (out of submap): 362 363 395 427 428 460 492 524 556 588 589 590 591 592 593 625 657 658 659 691 692 724 725 726 727 759 
[DBG]  Original agent path length 42 je: 40
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 1: 224, 256, 288, 289, 321, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 395, 427, 428, 460, 492, 524, 556, 588, 589, 590, 591, 592, 593, 625, 657, 658, 659, 691, 692, 724, 725, 726, 727, 759, 
[DBG]  Path for agent 42 updated, resulting length: 40
[DBG]  Update the agent path 51 | Original local length: 4 | New local length: 4
[DBG]  agent 51 t=0 => decoded (sx,sy)=(2,2) => global_id=391
[DBG]  agent 51 t=1 => decoded (sx,sy)=(3,2) => global_id=423
[DBG]  agent 51 t=2 => decoded (sx,sy)=(3,3) => global_id=424
[DBG]  agent 51 t=3 => decoded (sx,sy)=(3,4) => global_id=425
[DBG]  Complete path of agent 51:
[DBG]    Original: 257 258 259 260 261 293 325 357 358 359 391 423 424 425 426 427 459 
[DBG]    New:     257 258 259 260 261 293 325 357 358 359 391 423 424 425 426 427 459 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 257 258 259 260 261 293 325 357 358 359 
[DBG]    Local path (in submap): 391 423 424 425 
[DBG]    Suffix (out of submap): 426 427 459 
[DBG]  Original agent path length 51 je: 17
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 2: 257, 258, 259, 260, 261, 293, 325, 357, 358, 359, 391, 423, 424, 425, 426, 427, 459, 
[DBG]  Path for agent 51 updated, resulting length: 17
[DBG]  Update the agent path 59 | Original local length: 3 | New local length: 3
[DBG]  agent 59 t=0 => decoded (sx,sy)=(1,2) => global_id=359
[DBG]  agent 59 t=1 => decoded (sx,sy)=(1,3) => global_id=360
[DBG]  agent 59 t=2 => decoded (sx,sy)=(1,4) => global_id=361
[DBG]  Complete path of agent 59:
[DBG]    Original: 256 257 258 259 260 261 293 325 357 358 359 360 361 362 363 395 427 428 429 430 462 494 526 558 590 622 623 655 687 719 719 751 783 815 847 879 880 881 882 883 884 885 917 
[DBG]    New:     256 257 258 259 260 261 293 325 357 358 359 360 361 362 363 395 427 428 429 430 462 494 526 558 590 622 623 655 687 719 719 751 783 815 847 879 880 881 882 883 884 885 917 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 256 257 258 259 260 261 293 325 357 358 
[DBG]    Local path (in submap): 359 360 361 
[DBG]    Suffix (out of submap): 362 363 395 427 428 429 430 462 494 526 558 590 622 623 655 687 719 719 751 783 815 847 879 880 881 882 883 884 885 917 
[DBG]  Original agent path length 59 je: 43
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 3: 256, 257, 258, 259, 260, 261, 293, 325, 357, 358, 359, 360, 361, 362, 363, 395, 427, 428, 429, 430, 462, 494, 526, 558, 590, 622, 623, 655, 687, 719, 719, 751, 783, 815, 847, 879, 880, 881, 882, 883, 884, 885, 917, 
[DBG]  Path for agent 59 updated, resulting length: 43
[DBG]  Update the agent path 87 | Original local length: 2 | New local length: 2
[DBG]  agent 87 t=0 => decoded (sx,sy)=(3,1) => global_id=422
[DBG]  agent 87 t=1 => decoded (sx,sy)=(4,1) => global_id=454
[DBG]  Complete path of agent 87:
[DBG]    Original: 231 263 264 264 263 295 327 359 391 390 422 454 486 485 517 517 549 581 582 583 584 584 616 648 680 712 713 713 714 715 714 
[DBG]    New:     231 263 264 264 263 295 327 359 391 390 422 454 486 485 517 517 549 581 582 583 584 584 616 648 680 712 713 713 714 715 714 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 231 263 264 264 263 295 327 359 391 390 
[DBG]    Local path (in submap): 422 454 
[DBG]    Suffix (out of submap): 486 485 517 517 549 581 582 583 584 584 616 648 680 712 713 713 714 715 714 
[DBG]  Original agent path length 87 je: 31
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 4: 231, 263, 264, 264, 263, 295, 327, 359, 391, 390, 422, 454, 486, 485, 517, 517, 549, 581, 582, 583, 584, 584, 616, 648, 680, 712, 713, 713, 714, 715, 714, 
[DBG]  Path for agent 87 updated, resulting length: 31
[DBG]  Update the agent path 103 | Original local length: 8 | New local length: 6
[DBG]  agent 103 t=0 => decoded (sx,sy)=(0,2) => global_id=327
[DBG]  agent 103 t=1 => decoded (sx,sy)=(0,1) => global_id=326
[DBG]  agent 103 t=2 => decoded (sx,sy)=(1,1) => global_id=358
[DBG]  agent 103 t=3 => decoded (sx,sy)=(2,1) => global_id=390
[DBG]  agent 103 t=4 => decoded (sx,sy)=(3,1) => global_id=422
[DBG]  agent 103 t=5 => decoded (sx,sy)=(4,1) => global_id=454
[DBG]  Complete path of agent 103:
[DBG]    Original: 40 72 104 136 168 200 232 264 296 328 327 327 327 326 358 390 422 454 486 485 517 549 550 551 583 584 616 648 680 712 713 745 777 809 841 873 905 
[DBG]    New:     40 72 104 136 168 200 232 264 296 328 327 326 358 390 422 454 486 485 517 549 550 551 583 584 616 648 680 712 713 745 777 809 841 873 905 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 40 72 104 136 168 200 232 264 296 328 
[DBG]    Local path (in submap): 327 326 358 390 422 454 486 485 
[DBG]    Suffix (out of submap): 517 549 550 551 583 584 616 648 680 712 713 745 777 809 841 873 905 
[DBG]  Original agent path length 103 je: 37
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 5: 40, 72, 104, 136, 168, 200, 232, 264, 296, 328, 327, 326, 358, 390, 422, 454, 486, 485, 517, 549, 550, 551, 583, 584, 616, 648, 680, 712, 713, 745, 777, 809, 841, 873, 905, 
[DBG]  Path for agent 103 updated, resulting length: 35
[DBG]  Update the agent path 146 | Original local length: 5 | New local length: 5
[DBG]  agent 146 t=0 => decoded (sx,sy)=(2,1) => global_id=390
[DBG]  agent 146 t=1 => decoded (sx,sy)=(2,2) => global_id=391
[DBG]  agent 146 t=2 => decoded (sx,sy)=(1,2) => global_id=359
[DBG]  agent 146 t=3 => decoded (sx,sy)=(1,3) => global_id=360
[DBG]  agent 146 t=4 => decoded (sx,sy)=(0,3) => global_id=328
[DBG]  Complete path of agent 146:
[DBG]    Original: 512 480 448 449 450 418 419 387 388 389 390 358 359 327 328 296 264 265 233 234 235 236 204 172 140 141 109 110 111 79 80 48 49 50 18 19 
[DBG]    New:     512 480 448 449 450 418 419 387 388 389 390 391 359 360 328 296 264 265 233 234 235 236 204 172 140 141 109 110 111 79 80 48 49 50 18 19 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 512 480 448 449 450 418 419 387 388 389 
[DBG]    Local path (in submap): 390 391 359 360 328 
[DBG]    Suffix (out of submap): 296 264 265 233 234 235 236 204 172 140 141 109 110 111 79 80 48 49 50 18 19 
[DBG]  Original agent path length 146 je: 36
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 6: 512, 480, 448, 449, 450, 418, 419, 387, 388, 389, 390, 391, 359, 360, 328, 296, 264, 265, 233, 234, 235, 236, 204, 172, 140, 141, 109, 110, 111, 79, 80, 48, 49, 50, 18, 19, 
[DBG]  Path for agent 146 updated, resulting length: 36
[DBG]  Paths successfully updated.
[DBG]  (LNS.cpp) New path for agent 21: 
[DBG]  484, 484, 483, 482, 482, 450, 418, 419, 387, 388, 389, 390, 391, 359, 327, 
[DBG]  (LNS.cpp) New path for agent 42: 
[DBG]  224, 256, 288, 289, 321, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 395, 427, 428, 460, 492, 524, 556, 588, 589, 590, 591, 592, 593, 625, 657, 658, 659, 691, 692, 724, 725, 726, 727, 759, 
[DBG]  (LNS.cpp) New path for agent 51: 
[DBG]  257, 258, 259, 260, 261, 293, 325, 357, 358, 359, 391, 423, 424, 425, 426, 427, 459, 
[DBG]  (LNS.cpp) New path for agent 59: 
[DBG]  256, 257, 258, 259, 260, 261, 293, 325, 357, 358, 359, 360, 361, 362, 363, 395, 427, 428, 429, 430, 462, 494, 526, 558, 590, 622, 623, 655, 687, 719, 719, 751, 783, 815, 847, 879, 880, 881, 882, 883, 884, 885, 917, 
[DBG]  (LNS.cpp) New path for agent 87: 
[DBG]  231, 263, 264, 264, 263, 295, 327, 359, 391, 390, 422, 454, 486, 485, 517, 517, 549, 581, 582, 583, 584, 584, 616, 648, 680, 712, 713, 713, 714, 715, 714, 
[DBG]  (LNS.cpp) New path for agent 103: 
[DBG]  40, 72, 104, 136, 168, 200, 232, 264, 296, 328, 327, 326, 358, 390, 422, 454, 486, 485, 517, 549, 550, 551, 583, 584, 616, 648, 680, 712, 713, 745, 777, 809, 841, 873, 905, 
[DBG]  (LNS.cpp) New path for agent 146: 
[DBG]  512, 480, 448, 449, 450, 418, 419, 387, 388, 389, 390, 391, 359, 360, 328, 296, 264, 265, 233, 234, 235, 236, 204, 172, 140, 141, 109, 110, 111, 79, 80, 48, 49, 50, 18, 19, 
[DBG]  component_weights = {0.354891, 0.101417, 0.106057, 0.437635}
[DBG]  opSuccess value: 1
[STAT] neighbor.sum_of_costs before recomputation: 210
[STAT] neighbor.old_sum_of_costs before recomputation: 212
[STAT] sum_of_costs before recomputation: 4252
[DBG]  Validate solution immediately after SAT success.
[WARNING] Problem after SAT: Target conflict: agent 35 (len 51) traverses target of agent 103 (len 34) at location 905 at timestep 35
[DBG]  Attempting immediate repair via init_lns because problem occurred after SAT (should be applied only for conflicts...).
[DBG]  Passing 150 agents to init_lns (skip=true).
[DBG]  path_table contents for selected agents (neighbor.agents):
[DBG]    Agent 21 => controlling path length=15
[DBG]    Agent 42 => controlling path length=40
[DBG]    Agent 51 => controlling path length=17
[DBG]    Agent 59 => controlling path length=43
[DBG]    Agent 87 => controlling path length=31
[DBG]    Agent 103 => controlling path length=35
[DBG]    Agent 146 => controlling path length=36
[DBG]  hodnota skip_initial_solution=1
[DBG]  We skip initialSolution => call buildCollisionData()
[DBG]  buildCollisionData() called â€“ skip_initial_solution case.
[DBG]  Agents.size()=150, collision_graph.size()=150
[DBG]  agent 35 => updateCollidingPairs => foundCollision
[DBG]  agent 103 => updateCollidingPairs => foundCollision
[DBG]  agent 105 => updateCollidingPairs => foundCollision
[DBG]  agent 132 => updateCollidingPairs => foundCollision
[DBG]  Conflicting agent pairs:
[DBG]  agent 35 is in conflict with agent 103
[DBG]  agent 103 is in conflict with agent 105
[DBG]  agent 103 is in conflict with agent 132
[DBG]  buildCollisionData() => sum_of_costs=4250, num_of_colliding_pairs=3
[DBG]  buildCollisionData done => sum_of_costs=4250, num_of_colliding_pairs=3
[DBG]  sum_of_cost hodnota: 4250
[DBG]  After skip/init build => iteration_stats.back(): sum_of_costs=4250, collisions=3
[DEBUG] Using default neighbor generation strategy for conflicts: 0
[DEBUG] Using default neighbor generation strategy for conflicts: 1
	InitLNS(PP): runtime = 0.00664208, iterations = 3, colliding pairs = 0, initial colliding pairs = 3, solution cost = 4236, initial solution cost = 4250, failed iterations = 0
[DBG]  init_lns->sum_of_costs after init_lns->run: 4236
[DBG]  sum_of_costs after assignment from init_lns->run: 4236
[DBG]  Recomputing sum_of_cost by dividing neighbor.sum_of_costs and neighbor.old_sum_of_costs
[STAT] sum_of_costs after recomputation: 4236
[STAT] Iteration 135
[DBG]  Using SAT operator (destroy+repair SAT).
[DBG]  ====================
[DBG]  SAT destroy operator called.
[DBG]  SAT heuristic: 2
[DBG]  key_agent_id: 86
[DBG]  key_agent_id global path length: 27
[DBG]  Submap content (global positions):
[DBG]  468 469 470 471 472 
[DBG]  500 501 502 503 504 
[DBG]  532 533 534 535 536 
[DBG]  564 565 566 567 568 
[DBG]  596 597 598 599 600 
[DBG]  Map content with agents and obstacles:
[DBG]  A A A X A 
[DBG]  X . A . . 
[DBG]  X A A X X 
[DBG]  X A . X X 
[DBG]  A . X . A 
[DBG]  content of the map structure that we pass to the SAT solver:
[DBG]  1  1  1  -1  1  
[DBG]  -1  1  1  1  1  
[DBG]  -1  1  1  -1  -1  
[DBG]  -1  1  1  -1  -1  
[DBG]  1  1  -1  1  1  
[DBG]  Identifying agents in a submap for rescheduling (when key_agent is there at the time 17):
[DBG]  Agent 3 found intervals in the sub-map:
[DBG]   [0..19]
[DBG]  Agent 3 (interval in submap: [0..19]) contains time 17, added to replan.
[DBG]  Agent 10 found intervals in the sub-map:
[DBG]   [12..19]
[DBG]  Agent 10 (interval in submap: [12..19]) contains time 17, added to replan.
[DBG]  Agent 43 found intervals in the sub-map:
[DBG]   [10..19]
[DBG]  Agent 43 (interval in submap: [10..19]) contains time 17, added to replan.
[DBG]  Agent 54 found intervals in the sub-map:
[DBG]   [17..21]
[DBG]  Agent 54 (interval in submap: [17..21]) contains time 17, added to replan.
[DBG]  Agent 74 found intervals in the sub-map:
[DBG]   [17..29]
[DBG]  Agent 74 (interval in submap: [17..29]) contains time 17, added to replan.
[DBG]  Agent 84 found intervals in the sub-map:
[DBG]   [16..23]
[DBG]  Agent 84 (interval in submap: [16..23]) contains time 17, added to replan.
[DBG]  Agent 86 found intervals in the sub-map:
[DBG]   [13..20]
[DBG]  Agent 86 (interval in submap: [13..20]) contains time 17, added to replan.
[DBG]  Agent 91 found intervals in the sub-map:
[DBG]   [10..17]
[DBG]  Agent 91 (interval in submap: [10..17]) contains time 17, added to replan.
[DBG]  Agent 100 found intervals in the sub-map:
[DBG]   [16..17]
[DBG]  Agent 100 (interval in submap: [16..17]) contains time 17, added to replan.
[DBG]  Agent 109 found intervals in the sub-map:
[DBG]   [15..18]
[DBG]  Agent 109 (interval in submap: [15..18]) contains time 17, added to replan.
[DBG]  Agent 3 | Start (global): 533 -> (local): (2, 1) at time 17 | Goal (global): 597 -> (local): (4, 1) at time 19
[DBG]  Agent 10 | Start (global): 502 -> (local): (1, 2) at time 17 | Goal (global): 504 -> (local): (1, 4) at time 19
[DBG]  Agent 43 | Start (global): 470 -> (local): (0, 2) at time 17 | Goal (global): 468 -> (local): (0, 0) at time 19
[DBG]  Agent 54 | Start (global): 469 -> (local): (0, 1) at time 17 | Goal (global): 504 -> (local): (1, 4) at time 21
[DBG]  Agent 74 | Start (global): 596 -> (local): (4, 0) at time 17 | Goal (global): 504 -> (local): (1, 4) at time 29
[DBG]  Agent 84 | Start (global): 565 -> (local): (3, 1) at time 17 | Goal (global): 472 -> (local): (0, 4) at time 23
[DBG]  Agent 86 | Start (global): 534 -> (local): (2, 2) at time 17 | Goal (global): 504 -> (local): (1, 4) at time 20
[DBG]  Agent 91 | Start (global): 472 -> (local): (0, 4) at time 17 | Goal (global): 472 -> (local): (0, 4) at time 17
[DBG]  Agent 100 | Start (global): 468 -> (local): (0, 0) at time 17 | Goal (global): 468 -> (local): (0, 0) at time 17
[DBG]  Agent 109 | Start (global): 600 -> (local): (4, 4) at time 17 | Goal (global): 600 -> (local): (4, 4) at time 18
[DBG]  [REPAIR] SAT destroy operator called.
[DBG]  [REPAIR] SAT operator â€“ launching subproblem FOR OPTIMIZATION.
[DBG]  Creating local paths (sx, sy) in the submap for T_sync = 17
[DBG]    Agent 3 (global paths from T=17 to 19) has local path: (2,1) (3,1) (4,1) 
[DBG]    Agent 10 (global paths from T=17 to 19) has local path: (1,2) (1,3) (1,4) 
[DBG]    Agent 43 (global paths from T=17 to 19) has local path: (0,2) (0,1) (0,0) 
[DBG]    Agent 54 (global paths from T=17 to 21) has local path: (0,1) (1,1) (1,2) (1,3) (1,4) 
[DBG]    Agent 74 (global paths from T=17 to 29) has local path: (4,0) (4,0) (4,0) (4,1) (3,1) (2,1) (2,2) (1,2) (0,2) (0,2) (1,2) (1,3) (1,4) 
[DBG]    Agent 84 (global paths from T=17 to 23) has local path: (3,1) (3,2) (2,2) (1,2) (1,3) (1,4) (0,4) 
[DBG]    Agent 86 (global paths from T=17 to 20) has local path: (2,2) (1,2) (1,3) (1,4) 
[DBG]    Agent 91 (global paths from T=17 to 17) has local path: (0,4) 
[DBG]    Agent 100 (global paths from T=17 to 17) has local path: (0,0) 
[DBG]    Agent 109 (global paths from T=17 to 18) has local path: (4,4) (4,4) 
[DBG]  Checking input data for SAT solver:
[DBG]    - Number of agents to replan: 10
[DBG]  Agent 3 has the original local path length: 3 => Start (2,1), Goal (4,1)
[DBG]  Agent 10 has the original local path length: 3 => Start (1,2), Goal (1,4)
[DBG]  Agent 43 has the original local path length: 3 => Start (0,2), Goal (0,0)
[DBG]  Agent 54 has the original local path length: 5 => Start (0,1), Goal (1,4)
[DBG]  Agent 74 has the original local path length: 13 => Start (4,0), Goal (1,4)
[DBG]  Agent 84 has the original local path length: 7 => Start (3,1), Goal (0,4)
[DBG]  Agent 86 has the original local path length: 4 => Start (2,2), Goal (1,4)
[DBG]  Agent 91 has the original local path length: 1 => Start (0,4), Goal (0,4)
[DBG]  Agent 100 has the original local path length: 1 => Start (0,0), Goal (0,0)
[DBG]  Agent 109 has the original local path length: 2 => Start (4,4), Goal (4,4)
[DBG]  Start position: (2, 1), (1, 2), (0, 2), (0, 1), (4, 0), (3, 1), (2, 2), (0, 4), (0, 0), (4, 4), 
[DBG]  Goal position: (4, 1), (1, 4), (0, 0), (1, 4), (1, 4), (0, 4), (1, 4), (0, 4), (0, 0), (4, 4), 
[DBG]  SAT instance and solver created.
Currently solving
Instance name: scen
Map name: map
Encoding used: disappear_at_goal
SAT solver used: Kissat
Optimizing function: sum of costs
Number of agents: 10
Mks LB: 8
SoC LB: 36
Delta: 0
Remaining time: 300000 [ms]

[STAT] Solver returned: -1
[DBG]  SAT solver failed.
[STAT] SAT solver failed to find a valid solution.
[DBG]  ====================
[DBG]  SAT destroy operator called.
[DBG]  SAT heuristic: 2
[DBG]  key_agent_id: 86
[DBG]  key_agent_id global path length: 27
[DBG]  Submap content (global positions):
[DBG]  436 437 438 439 440 
[DBG]  468 469 470 471 472 
[DBG]  500 501 502 503 504 
[DBG]  532 533 534 535 536 
[DBG]  564 565 566 567 568 
[DBG]  Map content with agents and obstacles:
[DBG]  X A A . . 
[DBG]  . A . X . 
[DBG]  X A A A . 
[DBG]  X . . X X 
[DBG]  X A A X X 
[DBG]  content of the map structure that we pass to the SAT solver:
[DBG]  -1  1  1  1  1  
[DBG]  1  1  1  -1  1  
[DBG]  -1  1  1  1  1  
[DBG]  -1  1  1  -1  -1  
[DBG]  -1  1  1  -1  -1  
[DBG]  Identifying agents in a submap for rescheduling (when key_agent is there at the time 18):
[DBG]  Agent 2 found intervals in the sub-map:
[DBG]   [16..23]
[DBG]  Agent 2 (interval in submap: [16..23]) contains time 18, added to replan.
[DBG]  Agent 3 found intervals in the sub-map:
[DBG]   [0..18]
[DBG]  Agent 3 (interval in submap: [0..18]) contains time 18, added to replan.
[DBG]  Agent 10 found intervals in the sub-map:
[DBG]   [14..19]
[DBG]  Agent 10 (interval in submap: [14..19]) contains time 18, added to replan.
[DBG]  Agent 43 found intervals in the sub-map:
[DBG]   [10..19]
[DBG]  Agent 43 (interval in submap: [10..19]) contains time 18, added to replan.
[DBG]  Agent 44 found intervals in the sub-map:
[DBG]   [15..20]
[DBG]  Agent 44 (interval in submap: [15..20]) contains time 18, added to replan.
[DBG]  Agent 45 found intervals in the sub-map:
[DBG]  
[DBG]  Agent 45 is not in sub-map at time 18 (intervals: 
[DBG]  )
[DBG]  Agent 54 found intervals in the sub-map:
[DBG]   [10..14] [16..21]
[DBG]  Agent 54 (interval in submap: [16..21]) contains time 18, added to replan.
[DBG]  Agent 84 found intervals in the sub-map:
[DBG]   [17..24]
[DBG]  Agent 84 (interval in submap: [17..24]) contains time 18, added to replan.
[DBG]  Agent 86 found intervals in the sub-map:
[DBG]   [15..20]
[DBG]  Agent 86 (interval in submap: [15..20]) contains time 18, added to replan.
[DBG]  Agent 100 found intervals in the sub-map:
[DBG]   [13..17]
[DBG]  Agent 100 is not in sub-map at time 18 (intervals: 
[DBG]  [13..17] )
[DBG]  Agent 109 found intervals in the sub-map:
[DBG]  
[DBG]  Agent 109 is not in sub-map at time 18 (intervals: 
[DBG]  )
[DBG]  Agent 2 | Start (global): 438 -> (local): (0, 2) at time 18 | Goal (global): 504 -> (local): (2, 4) at time 23
[DBG]  Agent 3 | Start (global): 565 -> (local): (4, 1) at time 18 | Goal (global): 565 -> (local): (4, 1) at time 18
[DBG]  Agent 10 | Start (global): 503 -> (local): (2, 3) at time 18 | Goal (global): 504 -> (local): (2, 4) at time 19
[DBG]  Agent 43 | Start (global): 469 -> (local): (1, 1) at time 18 | Goal (global): 468 -> (local): (1, 0) at time 19
[DBG]  Agent 44 | Start (global): 437 -> (local): (0, 1) at time 18 | Goal (global): 468 -> (local): (1, 0) at time 20
[DBG]  Agent 54 | Start (global): 501 -> (local): (2, 1) at time 18 | Goal (global): 504 -> (local): (2, 4) at time 21
[DBG]  Agent 84 | Start (global): 566 -> (local): (4, 2) at time 18 | Goal (global): 440 -> (local): (0, 4) at time 24
[DBG]  Agent 86 | Start (global): 502 -> (local): (2, 2) at time 18 | Goal (global): 504 -> (local): (2, 4) at time 20
[DBG]  [REPAIR] SAT destroy operator called.
[DBG]  [REPAIR] SAT operator â€“ launching subproblem FOR OPTIMIZATION.
[DBG]  Creating local paths (sx, sy) in the submap for T_sync = 18
[DBG]    Agent 2 (global paths from T=18 to 23) has local path: (0,2) (0,2) (1,2) (2,2) (2,3) (2,4) 
[DBG]    Agent 3 (global paths from T=18 to 18) has local path: (4,1) 
[DBG]    Agent 10 (global paths from T=18 to 19) has local path: (2,3) (2,4) 
[DBG]    Agent 43 (global paths from T=18 to 19) has local path: (1,1) (1,0) 
[DBG]    Agent 44 (global paths from T=18 to 20) has local path: (0,1) (1,1) (1,0) 
[DBG]    Agent 54 (global paths from T=18 to 21) has local path: (2,1) (2,2) (2,3) (2,4) 
[DBG]    Agent 84 (global paths from T=18 to 24) has local path: (4,2) (3,2) (2,2) (2,3) (2,4) (1,4) (0,4) 
[DBG]    Agent 86 (global paths from T=18 to 20) has local path: (2,2) (2,3) (2,4) 
[DBG]  Checking input data for SAT solver:
[DBG]    - Number of agents to replan: 8
[DBG]  Agent 2 has the original local path length: 6 => Start (0,2), Goal (2,4)
[DBG]  Agent 3 has the original local path length: 1 => Start (4,1), Goal (4,1)
[DBG]  Agent 10 has the original local path length: 2 => Start (2,3), Goal (2,4)
[DBG]  Agent 43 has the original local path length: 2 => Start (1,1), Goal (1,0)
[DBG]  Agent 44 has the original local path length: 3 => Start (0,1), Goal (1,0)
[DBG]  Agent 54 has the original local path length: 4 => Start (2,1), Goal (2,4)
[DBG]  Agent 84 has the original local path length: 7 => Start (4,2), Goal (0,4)
[DBG]  Agent 86 has the original local path length: 3 => Start (2,2), Goal (2,4)
[DBG]  Start position: (0, 2), (4, 1), (2, 3), (1, 1), (0, 1), (2, 1), (4, 2), (2, 2), 
[DBG]  Goal position: (2, 4), (4, 1), (2, 4), (1, 0), (1, 0), (2, 4), (0, 4), (2, 4), 
[DBG]  SAT instance and solver created.
Currently solving
Instance name: scen
Map name: map
Encoding used: disappear_at_goal
SAT solver used: Kissat
Optimizing function: sum of costs
Number of agents: 8
Mks LB: 7
SoC LB: 27
Delta: 0
Remaining time: 300000 [ms]

Vertex conflict! Agents 0, 1, timestep 5, location 0
Swapping conflict! Agents 0, 1, timestep 5, edge (0,0)
Vertex conflict! Agents 0, 1, timestep 6, location 0
Vertex conflict! Agents 0, 2, timestep 5, location 0
Swapping conflict! Agents 0, 2, timestep 5, edge (0,0)
Vertex conflict! Agents 0, 2, timestep 6, location 0
Vertex conflict! Agents 0, 3, timestep 5, location 0
Swapping conflict! Agents 0, 3, timestep 5, edge (0,0)
Vertex conflict! Agents 0, 3, timestep 6, location 0
Vertex conflict! Agents 0, 4, timestep 5, location 0
Swapping conflict! Agents 0, 4, timestep 5, edge (0,0)
Vertex conflict! Agents 0, 4, timestep 6, location 0
Vertex conflict! Agents 0, 5, timestep 5, location 0
Swapping conflict! Agents 0, 5, timestep 5, edge (0,0)
Vertex conflict! Agents 0, 5, timestep 6, location 0
Vertex conflict! Agents 0, 7, timestep 5, location 0
Swapping conflict! Agents 0, 7, timestep 5, edge (0,0)
Vertex conflict! Agents 0, 7, timestep 6, location 0
Vertex conflict! Agents 1, 2, timestep 2, location 0
Swapping conflict! Agents 1, 2, timestep 2, edge (0,0)
Vertex conflict! Agents 1, 2, timestep 3, location 0
Swapping conflict! Agents 1, 2, timestep 3, edge (0,0)
Vertex conflict! Agents 1, 2, timestep 4, location 0
Swapping conflict! Agents 1, 2, timestep 4, edge (0,0)
Vertex conflict! Agents 1, 2, timestep 5, location 0
Swapping conflict! Agents 1, 2, timestep 5, edge (0,0)
Vertex conflict! Agents 1, 2, timestep 6, location 0
Vertex conflict! Agents 1, 3, timestep 2, location 0
Swapping conflict! Agents 1, 3, timestep 2, edge (0,0)
Vertex conflict! Agents 1, 3, timestep 3, location 0
Swapping conflict! Agents 1, 3, timestep 3, edge (0,0)
Vertex conflict! Agents 1, 3, timestep 4, location 0
Swapping conflict! Agents 1, 3, timestep 4, edge (0,0)
Vertex conflict! Agents 1, 3, timestep 5, location 0
Swapping conflict! Agents 1, 3, timestep 5, edge (0,0)
Vertex conflict! Agents 1, 3, timestep 6, location 0
Vertex conflict! Agents 1, 4, timestep 3, location 0
Swapping conflict! Agents 1, 4, timestep 3, edge (0,0)
Vertex conflict! Agents 1, 4, timestep 4, location 0
Swapping conflict! Agents 1, 4, timestep 4, edge (0,0)
Vertex conflict! Agents 1, 4, timestep 5, location 0
Swapping conflict! Agents 1, 4, timestep 5, edge (0,0)
Vertex conflict! Agents 1, 4, timestep 6, location 0
Vertex conflict! Agents 1, 5, timestep 4, location 0
Swapping conflict! Agents 1, 5, timestep 4, edge (0,0)
Vertex conflict! Agents 1, 5, timestep 5, location 0
Swapping conflict! Agents 1, 5, timestep 5, edge (0,0)
Vertex conflict! Agents 1, 5, timestep 6, location 0
Vertex conflict! Agents 1, 7, timestep 3, location 0
Swapping conflict! Agents 1, 7, timestep 3, edge (0,0)
Vertex conflict! Agents 1, 7, timestep 4, location 0
Swapping conflict! Agents 1, 7, timestep 4, edge (0,0)
Vertex conflict! Agents 1, 7, timestep 5, location 0
Swapping conflict! Agents 1, 7, timestep 5, edge (0,0)
Vertex conflict! Agents 1, 7, timestep 6, location 0
Vertex conflict! Agents 2, 3, timestep 2, location 0
Swapping conflict! Agents 2, 3, timestep 2, edge (0,0)
Vertex conflict! Agents 2, 3, timestep 3, location 0
Swapping conflict! Agents 2, 3, timestep 3, edge (0,0)
Vertex conflict! Agents 2, 3, timestep 4, location 0
Swapping conflict! Agents 2, 3, timestep 4, edge (0,0)
Vertex conflict! Agents 2, 3, timestep 5, location 0
Swapping conflict! Agents 2, 3, timestep 5, edge (0,0)
Vertex conflict! Agents 2, 3, timestep 6, location 0
Vertex conflict! Agents 2, 4, timestep 3, location 0
Swapping conflict! Agents 2, 4, timestep 3, edge (0,0)
Vertex conflict! Agents 2, 4, timestep 4, location 0
Swapping conflict! Agents 2, 4, timestep 4, edge (0,0)
Vertex conflict! Agents 2, 4, timestep 5, location 0
Swapping conflict! Agents 2, 4, timestep 5, edge (0,0)
Vertex conflict! Agents 2, 4, timestep 6, location 0
Vertex conflict! Agents 2, 5, timestep 4, location 0
Swapping conflict! Agents 2, 5, timestep 4, edge (0,0)
Vertex conflict! Agents 2, 5, timestep 5, location 0
Swapping conflict! Agents 2, 5, timestep 5, edge (0,0)
Vertex conflict! Agents 2, 5, timestep 6, location 0
Vertex conflict! Agents 2, 7, timestep 3, location 0
Swapping conflict! Agents 2, 7, timestep 3, edge (0,0)
Vertex conflict! Agents 2, 7, timestep 4, location 0
Swapping conflict! Agents 2, 7, timestep 4, edge (0,0)
Vertex conflict! Agents 2, 7, timestep 5, location 0
Swapping conflict! Agents 2, 7, timestep 5, edge (0,0)
Vertex conflict! Agents 2, 7, timestep 6, location 0
Vertex conflict! Agents 3, 4, timestep 3, location 0
Swapping conflict! Agents 3, 4, timestep 3, edge (0,0)
Vertex conflict! Agents 3, 4, timestep 4, location 0
Swapping conflict! Agents 3, 4, timestep 4, edge (0,0)
Vertex conflict! Agents 3, 4, timestep 5, location 0
Swapping conflict! Agents 3, 4, timestep 5, edge (0,0)
Vertex conflict! Agents 3, 4, timestep 6, location 0
Vertex conflict! Agents 3, 5, timestep 4, location 0
Swapping conflict! Agents 3, 5, timestep 4, edge (0,0)
Vertex conflict! Agents 3, 5, timestep 5, location 0
Swapping conflict! Agents 3, 5, timestep 5, edge (0,0)
Vertex conflict! Agents 3, 5, timestep 6, location 0
Vertex conflict! Agents 3, 7, timestep 3, location 0
Swapping conflict! Agents 3, 7, timestep 3, edge (0,0)
Vertex conflict! Agents 3, 7, timestep 4, location 0
Swapping conflict! Agents 3, 7, timestep 4, edge (0,0)
Vertex conflict! Agents 3, 7, timestep 5, location 0
Swapping conflict! Agents 3, 7, timestep 5, edge (0,0)
Vertex conflict! Agents 3, 7, timestep 6, location 0
Vertex conflict! Agents 4, 5, timestep 4, location 0
Swapping conflict! Agents 4, 5, timestep 4, edge (0,0)
Vertex conflict! Agents 4, 5, timestep 5, location 0
Swapping conflict! Agents 4, 5, timestep 5, edge (0,0)
Vertex conflict! Agents 4, 5, timestep 6, location 0
Vertex conflict! Agents 4, 7, timestep 3, location 0
Swapping conflict! Agents 4, 7, timestep 3, edge (0,0)
Vertex conflict! Agents 4, 7, timestep 4, location 0
Swapping conflict! Agents 4, 7, timestep 4, edge (0,0)
Vertex conflict! Agents 4, 7, timestep 5, location 0
Swapping conflict! Agents 4, 7, timestep 5, edge (0,0)
Vertex conflict! Agents 4, 7, timestep 6, location 0
Vertex conflict! Agents 5, 7, timestep 4, location 0
Swapping conflict! Agents 5, 7, timestep 4, edge (0,0)
Vertex conflict! Agents 5, 7, timestep 5, location 0
Swapping conflict! Agents 5, 7, timestep 5, edge (0,0)
Vertex conflict! Agents 5, 7, timestep 6, location 0
Found plan [agents = 8] [timesteps = 7]
Agent #0 : 1 2 3 7 11 0 0 
Agent #1 : 14 0 0 0 0 0 0 
Agent #2 : 10 11 0 0 0 0 0 
Agent #3 : 5 4 0 0 0 0 0 
Agent #4 : 0 5 4 0 0 0 0 
Agent #5 : 8 9 10 11 0 0 0 
Agent #6 : 15 13 9 6 1 2 3 
Agent #7 : 9 10 11 0 0 0 0 

[STAT] Solver returned: 0
[DBG]  Agent (index) 2 | New local path (submap idx):
[DBG]  1 2 3 7 11 
[DBG]  Agent (index) 3 | New local path (submap idx):
[DBG]  14 
[DBG]  Agent (index) 10 | New local path (submap idx):
[DBG]  10 11 
[DBG]  Agent (index) 43 | New local path (submap idx):
[DBG]  5 4 
[DBG]  Agent (index) 44 | New local path (submap idx):
[DBG]  0 5 4 
[DBG]  Agent (index) 54 | New local path (submap idx):
[DBG]  8 9 10 11 
[DBG]  Agent (index) 84 | New local path (submap idx):
[DBG]  15 13 9 6 1 2 3 
[DBG]  Agent (index) 86 | New local path (submap idx):
[DBG]  9 10 11 
[DBG]  Update the agent path 2 | Original local length: 6 | New local length: 5
[DBG]  agent 2 t=0 => decoded (sx,sy)=(0,2) => global_id=438
[DBG]  agent 2 t=1 => decoded (sx,sy)=(0,3) => global_id=439
[DBG]  agent 2 t=2 => decoded (sx,sy)=(0,4) => global_id=440
[DBG]  agent 2 t=3 => decoded (sx,sy)=(1,4) => global_id=472
[DBG]  agent 2 t=4 => decoded (sx,sy)=(2,4) => global_id=504
[DBG]  Complete path of agent 2:
[DBG]    Original: 59 91 90 89 89 121 153 185 217 249 281 313 345 377 409 441 440 439 438 438 470 502 503 504 505 506 538 538 539 571 603 635 636 637 638 670 702 701 733 765 764 
[DBG]    New:     59 91 90 89 89 121 153 185 217 249 281 313 345 377 409 441 440 439 438 439 440 472 504 505 506 538 538 539 571 603 635 636 637 638 670 702 701 733 765 764 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 59 91 90 89 89 121 153 185 217 249 281 313 345 377 409 441 440 439 
[DBG]    Local path (in submap): 438 439 440 472 504 505 
[DBG]    Suffix (out of submap): 506 538 538 539 571 603 635 636 637 638 670 702 701 733 765 764 
[DBG]  Original agent path length 2 je: 41
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 0: 59, 91, 90, 89, 89, 121, 153, 185, 217, 249, 281, 313, 345, 377, 409, 441, 440, 439, 438, 439, 440, 472, 504, 505, 506, 538, 538, 539, 571, 603, 635, 636, 637, 638, 670, 702, 701, 733, 765, 764, 
[DBG]  Path for agent 2 updated, resulting length: 40
[DBG]  Update the agent path 3 | Original local length: 1 | New local length: 1
[DBG]  agent 3 t=0 => decoded (sx,sy)=(4,1) => global_id=565
[DBG]  Complete path of agent 3:
[DBG]    Original: 468 468 468 468 468 468 468 468 468 468 468 468 468 469 501 501 501 533 565 597 629 661 660 692 692 692 692 692 724 756 788 820 819 818 817 849 881 913 913 912 
[DBG]    New:     468 468 468 468 468 468 468 468 468 468 468 468 468 469 501 501 501 533 565 597 629 661 660 692 692 692 692 692 724 756 788 820 819 818 817 849 881 913 913 912 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 468 468 468 468 468 468 468 468 468 468 468 468 468 469 501 501 501 533 
[DBG]    Local path (in submap): 565 
[DBG]    Suffix (out of submap): 597 629 661 660 692 692 692 692 692 724 756 788 820 819 818 817 849 881 913 913 912 
[DBG]  Original agent path length 3 je: 40
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 1: 468, 468, 468, 468, 468, 468, 468, 468, 468, 468, 468, 468, 468, 469, 501, 501, 501, 533, 565, 597, 629, 661, 660, 692, 692, 692, 692, 692, 724, 756, 788, 820, 819, 818, 817, 849, 881, 913, 913, 912, 
[DBG]  Path for agent 3 updated, resulting length: 40
[DBG]  Update the agent path 10 | Original local length: 2 | New local length: 2
[DBG]  agent 10 t=0 => decoded (sx,sy)=(2,3) => global_id=503
[DBG]  agent 10 t=1 => decoded (sx,sy)=(2,4) => global_id=504
[DBG]  Complete path of agent 10:
[DBG]    Original: 588 589 590 622 654 655 656 657 658 659 627 628 596 597 565 566 534 502 503 504 505 506 474 475 476 
[DBG]    New:     588 589 590 622 654 655 656 657 658 659 627 628 596 597 565 566 534 502 503 504 505 506 474 475 476 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 588 589 590 622 654 655 656 657 658 659 627 628 596 597 565 566 534 502 
[DBG]    Local path (in submap): 503 504 
[DBG]    Suffix (out of submap): 505 506 474 475 476 
[DBG]  Original agent path length 10 je: 25
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 2: 588, 589, 590, 622, 654, 655, 656, 657, 658, 659, 627, 628, 596, 597, 565, 566, 534, 502, 503, 504, 505, 506, 474, 475, 476, 
[DBG]  Path for agent 10 updated, resulting length: 25
[DBG]  Update the agent path 43 | Original local length: 2 | New local length: 2
[DBG]  agent 43 t=0 => decoded (sx,sy)=(1,1) => global_id=469
[DBG]  agent 43 t=1 => decoded (sx,sy)=(1,0) => global_id=468
[DBG]  Complete path of agent 43:
[DBG]    Original: 414 413 445 444 443 475 507 507 506 505 504 503 502 501 533 534 502 470 469 468 467 466 465 464 463 462 494 526 525 524 523 522 521 520 519 487 519 551 550 582 581 613 645 677 709 741 740 739 707 
[DBG]    New:     414 413 445 444 443 475 507 507 506 505 504 503 502 501 533 534 502 470 469 468 467 466 465 464 463 462 494 526 525 524 523 522 521 520 519 487 519 551 550 582 581 613 645 677 709 741 740 739 707 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 414 413 445 444 443 475 507 507 506 505 504 503 502 501 533 534 502 470 
[DBG]    Local path (in submap): 469 468 
[DBG]    Suffix (out of submap): 467 466 465 464 463 462 494 526 525 524 523 522 521 520 519 487 519 551 550 582 581 613 645 677 709 741 740 739 707 
[DBG]  Original agent path length 43 je: 49
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 3: 414, 413, 445, 444, 443, 475, 507, 507, 506, 505, 504, 503, 502, 501, 533, 534, 502, 470, 469, 468, 467, 466, 465, 464, 463, 462, 494, 526, 525, 524, 523, 522, 521, 520, 519, 487, 519, 551, 550, 582, 581, 613, 645, 677, 709, 741, 740, 739, 707, 
[DBG]  Path for agent 43 updated, resulting length: 49
[DBG]  Update the agent path 44 | Original local length: 3 | New local length: 3
[DBG]  agent 44 t=0 => decoded (sx,sy)=(0,1) => global_id=437
[DBG]  agent 44 t=1 => decoded (sx,sy)=(1,1) => global_id=469
[DBG]  agent 44 t=2 => decoded (sx,sy)=(1,0) => global_id=468
[DBG]  Complete path of agent 44:
[DBG]    Original: 156 124 123 122 121 153 185 217 249 281 313 345 377 409 408 440 439 438 437 469 468 467 466 465 465 465 465 464 496 528 529 561 593 625 657 689 688 720 752 751 783 815 847 848 
[DBG]    New:     156 124 123 122 121 153 185 217 249 281 313 345 377 409 408 440 439 438 437 469 468 467 466 465 465 465 465 464 496 528 529 561 593 625 657 689 688 720 752 751 783 815 847 848 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 156 124 123 122 121 153 185 217 249 281 313 345 377 409 408 440 439 438 
[DBG]    Local path (in submap): 437 469 468 
[DBG]    Suffix (out of submap): 467 466 465 465 465 465 464 496 528 529 561 593 625 657 689 688 720 752 751 783 815 847 848 
[DBG]  Original agent path length 44 je: 44
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 4: 156, 124, 123, 122, 121, 153, 185, 217, 249, 281, 313, 345, 377, 409, 408, 440, 439, 438, 437, 469, 468, 467, 466, 465, 465, 465, 465, 464, 496, 528, 529, 561, 593, 625, 657, 689, 688, 720, 752, 751, 783, 815, 847, 848, 
[DBG]  Path for agent 44 updated, resulting length: 44
[DBG]  Update the agent path 54 | Original local length: 4 | New local length: 4
[DBG]  agent 54 t=0 => decoded (sx,sy)=(2,1) => global_id=501
[DBG]  agent 54 t=1 => decoded (sx,sy)=(2,2) => global_id=502
[DBG]  agent 54 t=2 => decoded (sx,sy)=(2,3) => global_id=503
[DBG]  agent 54 t=3 => decoded (sx,sy)=(2,4) => global_id=504
[DBG]  Complete path of agent 54:
[DBG]    Original: 464 464 432 433 401 402 403 404 405 406 438 438 438 438 437 405 437 469 501 502 503 504 505 506 506 538 570 570 570 570 571 
[DBG]    New:     464 464 432 433 401 402 403 404 405 406 438 438 438 438 437 405 437 469 501 502 503 504 505 506 506 538 570 570 570 570 571 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 464 464 432 433 401 402 403 404 405 406 438 438 438 438 437 405 437 469 
[DBG]    Local path (in submap): 501 502 503 504 
[DBG]    Suffix (out of submap): 505 506 506 538 570 570 570 570 571 
[DBG]  Original agent path length 54 je: 31
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 5: 464, 464, 432, 433, 401, 402, 403, 404, 405, 406, 438, 438, 438, 438, 437, 405, 437, 469, 501, 502, 503, 504, 505, 506, 506, 538, 570, 570, 570, 570, 571, 
[DBG]  Path for agent 54 updated, resulting length: 31
[DBG]  Update the agent path 84 | Original local length: 7 | New local length: 7
[DBG]  agent 84 t=0 => decoded (sx,sy)=(4,2) => global_id=566
[DBG]  agent 84 t=1 => decoded (sx,sy)=(3,2) => global_id=534
[DBG]  agent 84 t=2 => decoded (sx,sy)=(2,2) => global_id=502
[DBG]  agent 84 t=3 => decoded (sx,sy)=(1,2) => global_id=470
[DBG]  agent 84 t=4 => decoded (sx,sy)=(0,2) => global_id=438
[DBG]  agent 84 t=5 => decoded (sx,sy)=(0,3) => global_id=439
[DBG]  agent 84 t=6 => decoded (sx,sy)=(0,4) => global_id=440
[DBG]  Complete path of agent 84:
[DBG]    Original: 878 846 847 815 783 784 752 753 721 689 657 658 659 627 628 629 597 565 566 534 502 503 504 472 440 408 409 377 345 313 281 249 217 218 186 154 122 90 58 26 25 
[DBG]    New:     878 846 847 815 783 784 752 753 721 689 657 658 659 627 628 629 597 565 566 534 502 470 438 439 440 408 409 377 345 313 281 249 217 218 186 154 122 90 58 26 25 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 878 846 847 815 783 784 752 753 721 689 657 658 659 627 628 629 597 565 
[DBG]    Local path (in submap): 566 534 502 470 438 439 440 
[DBG]    Suffix (out of submap): 408 409 377 345 313 281 249 217 218 186 154 122 90 58 26 25 
[DBG]  Original agent path length 84 je: 41
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 6: 878, 846, 847, 815, 783, 784, 752, 753, 721, 689, 657, 658, 659, 627, 628, 629, 597, 565, 566, 534, 502, 470, 438, 439, 440, 408, 409, 377, 345, 313, 281, 249, 217, 218, 186, 154, 122, 90, 58, 26, 25, 
[DBG]  Path for agent 84 updated, resulting length: 41
[DBG]  Update the agent path 86 | Original local length: 3 | New local length: 3
[DBG]  agent 86 t=0 => decoded (sx,sy)=(2,2) => global_id=502
[DBG]  agent 86 t=1 => decoded (sx,sy)=(2,3) => global_id=503
[DBG]  agent 86 t=2 => decoded (sx,sy)=(2,4) => global_id=504
[DBG]  Complete path of agent 86:
[DBG]    Original: 781 782 750 718 686 654 655 656 657 658 659 660 628 596 597 565 533 534 502 503 504 505 506 538 539 540 541 
[DBG]    New:     781 782 750 718 686 654 655 656 657 658 659 660 628 596 597 565 533 534 502 503 504 505 506 538 539 540 541 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 781 782 750 718 686 654 655 656 657 658 659 660 628 596 597 565 533 534 
[DBG]    Local path (in submap): 502 503 504 
[DBG]    Suffix (out of submap): 505 506 538 539 540 541 
[DBG]  Original agent path length 86 je: 27
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 7: 781, 782, 750, 718, 686, 654, 655, 656, 657, 658, 659, 660, 628, 596, 597, 565, 533, 534, 502, 503, 504, 505, 506, 538, 539, 540, 541, 
[DBG]  Path for agent 86 updated, resulting length: 27
[DBG]  Paths successfully updated.
[DBG]  (LNS.cpp) New path for agent 2: 
[DBG]  59, 91, 90, 89, 89, 121, 153, 185, 217, 249, 281, 313, 345, 377, 409, 441, 440, 439, 438, 439, 440, 472, 504, 505, 506, 538, 538, 539, 571, 603, 635, 636, 637, 638, 670, 702, 701, 733, 765, 764, 
[DBG]  (LNS.cpp) New path for agent 3: 
[DBG]  468, 468, 468, 468, 468, 468, 468, 468, 468, 468, 468, 468, 468, 469, 501, 501, 501, 533, 565, 597, 629, 661, 660, 692, 692, 692, 692, 692, 724, 756, 788, 820, 819, 818, 817, 849, 881, 913, 913, 912, 
[DBG]  (LNS.cpp) New path for agent 10: 
[DBG]  588, 589, 590, 622, 654, 655, 656, 657, 658, 659, 627, 628, 596, 597, 565, 566, 534, 502, 503, 504, 505, 506, 474, 475, 476, 
[DBG]  (LNS.cpp) New path for agent 43: 
[DBG]  414, 413, 445, 444, 443, 475, 507, 507, 506, 505, 504, 503, 502, 501, 533, 534, 502, 470, 469, 468, 467, 466, 465, 464, 463, 462, 494, 526, 525, 524, 523, 522, 521, 520, 519, 487, 519, 551, 550, 582, 581, 613, 645, 677, 709, 741, 740, 739, 707, 
[DBG]  (LNS.cpp) New path for agent 44: 
[DBG]  156, 124, 123, 122, 121, 153, 185, 217, 249, 281, 313, 345, 377, 409, 408, 440, 439, 438, 437, 469, 468, 467, 466, 465, 465, 465, 465, 464, 496, 528, 529, 561, 593, 625, 657, 689, 688, 720, 752, 751, 783, 815, 847, 848, 
[DBG]  (LNS.cpp) New path for agent 54: 
[DBG]  464, 464, 432, 433, 401, 402, 403, 404, 405, 406, 438, 438, 438, 438, 437, 405, 437, 469, 501, 502, 503, 504, 505, 506, 506, 538, 570, 570, 570, 570, 571, 
[DBG]  (LNS.cpp) New path for agent 84: 
[DBG]  878, 846, 847, 815, 783, 784, 752, 753, 721, 689, 657, 658, 659, 627, 628, 629, 597, 565, 566, 534, 502, 470, 438, 439, 440, 408, 409, 377, 345, 313, 281, 249, 217, 218, 186, 154, 122, 90, 58, 26, 25, 
[DBG]  (LNS.cpp) New path for agent 86: 
[DBG]  781, 782, 750, 718, 686, 654, 655, 656, 657, 658, 659, 660, 628, 596, 597, 565, 533, 534, 502, 503, 504, 505, 506, 538, 539, 540, 541, 
[DBG]  component_weights = {0.351744, 0.100518, 0.105116, 0.442622}
[DBG]  opSuccess value: 1
[STAT] neighbor.sum_of_costs before recomputation: 289
[STAT] neighbor.old_sum_of_costs before recomputation: 290
[STAT] sum_of_costs before recomputation: 4236
[DBG]  Validate solution immediately after SAT success.
[WARNING] Problem after SAT: Vertex conflict between agents 54 and 2 at location 506 at timestep 24
[DBG]  Attempting immediate repair via init_lns because problem occurred after SAT (should be applied only for conflicts...).
[DBG]  Passing 150 agents to init_lns (skip=true).
[DBG]  path_table contents for selected agents (neighbor.agents):
[DBG]    Agent 2 => controlling path length=40
[DBG]    Agent 3 => controlling path length=40
[DBG]    Agent 10 => controlling path length=25
[DBG]    Agent 43 => controlling path length=49
[DBG]    Agent 44 => controlling path length=44
[DBG]    Agent 54 => controlling path length=31
[DBG]    Agent 84 => controlling path length=41
[DBG]    Agent 86 => controlling path length=27
[DBG]  hodnota skip_initial_solution=1
[DBG]  We skip initialSolution => call buildCollisionData()
[DBG]  buildCollisionData() called â€“ skip_initial_solution case.
[DBG]  Agents.size()=150, collision_graph.size()=150
[DBG]  agent 2 => updateCollidingPairs => foundCollision
[DBG]  agent 33 => updateCollidingPairs => foundCollision
[DBG]  agent 54 => updateCollidingPairs => foundCollision
[DBG]  agent 84 => updateCollidingPairs => foundCollision
[DBG]  agent 119 => updateCollidingPairs => foundCollision
[DBG]  Conflicting agent pairs:
[DBG]  agent 2 is in conflict with agent 54
[DBG]  agent 2 is in conflict with agent 119
[DBG]  agent 33 is in conflict with agent 84
[DBG]  buildCollisionData() => sum_of_costs=4235, num_of_colliding_pairs=3
[DBG]  buildCollisionData done => sum_of_costs=4235, num_of_colliding_pairs=3
[DBG]  sum_of_cost hodnota: 4235
[DBG]  After skip/init build => iteration_stats.back(): sum_of_costs=4235, collisions=3
[DEBUG] Using default neighbor generation strategy for conflicts: 2
	InitLNS(PP): runtime = 0.00568383, iterations = 2, colliding pairs = 0, initial colliding pairs = 3, solution cost = 4217, initial solution cost = 4235, failed iterations = 0
[DBG]  init_lns->sum_of_costs after init_lns->run: 4217
[DBG]  sum_of_costs after assignment from init_lns->run: 4217
[DBG]  Recomputing sum_of_cost by dividing neighbor.sum_of_costs and neighbor.old_sum_of_costs
[STAT] sum_of_costs after recomputation: 4217
[STAT] Iteration 136
[DBG]  Using SAT operator (destroy+repair SAT).
[DBG]  ====================
[DBG]  SAT destroy operator called.
[DBG]  SAT heuristic: 2
[DBG]  key_agent_id: 132
[DBG]  key_agent_id global path length: 35
[DBG]  Submap content (global positions):
[DBG]  518 519 520 521 522 
[DBG]  550 551 552 553 554 
[DBG]  582 583 584 585 586 
[DBG]  614 615 616 617 618 
[DBG]  646 647 648 649 650 
[DBG]  Map content with agents and obstacles:
[DBG]  X A . . . 
[DBG]  A A X X X 
[DBG]  . . A . X 
[DBG]  X A . . X 
[DBG]  . . . . A 
[DBG]  content of the map structure that we pass to the SAT solver:
[DBG]  -1  1  1  1  1  
[DBG]  1  1  -1  -1  -1  
[DBG]  1  1  1  1  -1  
[DBG]  -1  1  1  1  -1  
[DBG]  1  1  1  1  1  
[DBG]  Identifying agents in a submap for rescheduling (when key_agent is there at the time 17):
[DBG]  Agent 13 found intervals in the sub-map:
[DBG]   [11..16]
[DBG]  Agent 13 is not in sub-map at time 17 (intervals: 
[DBG]  [11..16] )
[DBG]  Agent 23 found intervals in the sub-map:
[DBG]   [16..21]
[DBG]  Agent 23 (interval in submap: [16..21]) contains time 17, added to replan.
[DBG]  Agent 67 found intervals in the sub-map:
[DBG]   [12..17]
[DBG]  Agent 67 (interval in submap: [12..17]) contains time 17, added to replan.
[DBG]  Agent 87 found intervals in the sub-map:
[DBG]   [18..23]
[DBG]  Agent 87 is not in sub-map at time 17 (intervals: 
[DBG]  [18..23] )
[DBG]  Agent 98 found intervals in the sub-map:
[DBG]   [15..23]
[DBG]  Agent 98 (interval in submap: [15..23]) contains time 17, added to replan.
[DBG]  Agent 105 found intervals in the sub-map:
[DBG]   [19..23]
[DBG]  Agent 105 is not in sub-map at time 17 (intervals: 
[DBG]  [19..23] )
[DBG]  Agent 116 found intervals in the sub-map:
[DBG]   [1..3]
[DBG]  Agent 116 is not in sub-map at time 17 (intervals: 
[DBG]  [1..3] )
[DBG]  Agent 122 found intervals in the sub-map:
[DBG]   [11..18]
[DBG]  Agent 122 (interval in submap: [11..18]) contains time 17, added to replan.
[DBG]  Agent 132 found intervals in the sub-map:
[DBG]   [15..20]
[DBG]  Agent 132 (interval in submap: [15..20]) contains time 17, added to replan.
[DBG]  Agent 145 found intervals in the sub-map:
[DBG]   [17..21]
[DBG]  Agent 145 (interval in submap: [17..21]) contains time 17, added to replan.
[DBG]  Agent 23 | Start (global): 550 -> (local): (1, 0) at time 17 | Goal (global): 519 -> (local): (0, 1) at time 21
[DBG]  Agent 67 | Start (global): 519 -> (local): (0, 1) at time 17 | Goal (global): 519 -> (local): (0, 1) at time 17
[DBG]  Agent 98 | Start (global): 615 -> (local): (3, 1) at time 17 | Goal (global): 650 -> (local): (4, 4) at time 23
[DBG]  Agent 122 | Start (global): 551 -> (local): (1, 1) at time 17 | Goal (global): 519 -> (local): (0, 1) at time 18
[DBG]  Agent 132 | Start (global): 584 -> (local): (2, 2) at time 17 | Goal (global): 519 -> (local): (0, 1) at time 20
[DBG]  Agent 145 | Start (global): 650 -> (local): (4, 4) at time 17 | Goal (global): 646 -> (local): (4, 0) at time 21
[DBG]  [REPAIR] SAT destroy operator called.
[DBG]  [REPAIR] SAT operator â€“ launching subproblem FOR OPTIMIZATION.
[DBG]  Creating local paths (sx, sy) in the submap for T_sync = 17
[DBG]    Agent 23 (global paths from T=17 to 21) has local path: (1,0) (1,0) (1,0) (1,1) (0,1) 
[DBG]    Agent 67 (global paths from T=17 to 17) has local path: (0,1) 
[DBG]    Agent 98 (global paths from T=17 to 23) has local path: (3,1) (3,2) (3,2) (3,2) (4,2) (4,3) (4,4) 
[DBG]    Agent 122 (global paths from T=17 to 18) has local path: (1,1) (0,1) 
[DBG]    Agent 132 (global paths from T=17 to 20) has local path: (2,2) (2,1) (1,1) (0,1) 
[DBG]    Agent 145 (global paths from T=17 to 21) has local path: (4,4) (4,3) (4,2) (4,1) (4,0) 
[DBG]  Checking input data for SAT solver:
[DBG]    - Number of agents to replan: 6
[DBG]  Agent 23 has the original local path length: 5 => Start (1,0), Goal (0,1)
[DBG]  Agent 67 has the original local path length: 1 => Start (0,1), Goal (0,1)
[DBG]  Agent 98 has the original local path length: 7 => Start (3,1), Goal (4,4)
[DBG]  Agent 122 has the original local path length: 2 => Start (1,1), Goal (0,1)
[DBG]  Agent 132 has the original local path length: 4 => Start (2,2), Goal (0,1)
[DBG]  Agent 145 has the original local path length: 5 => Start (4,4), Goal (4,0)
[DBG]  Start position: (1, 0), (0, 1), (3, 1), (1, 1), (2, 2), (4, 4), 
[DBG]  Goal position: (0, 1), (0, 1), (4, 4), (0, 1), (0, 1), (4, 0), 
[DBG]  SAT instance and solver created.
Currently solving
Instance name: scen
Map name: map
Encoding used: disappear_at_goal
SAT solver used: Kissat
Optimizing function: sum of costs
Number of agents: 6
Mks LB: 5
SoC LB: 20
Delta: 0
Remaining time: 300000 [ms]

Vertex conflict! Agents 0, 1, timestep 2, location 0
Swapping conflict! Agents 0, 1, timestep 2, edge (0,0)
Vertex conflict! Agents 0, 1, timestep 3, location 0
Swapping conflict! Agents 0, 1, timestep 3, edge (0,0)
Vertex conflict! Agents 0, 1, timestep 4, location 0
Vertex conflict! Agents 0, 3, timestep 2, location 0
Swapping conflict! Agents 0, 3, timestep 2, edge (0,0)
Vertex conflict! Agents 0, 3, timestep 3, location 0
Swapping conflict! Agents 0, 3, timestep 3, edge (0,0)
Vertex conflict! Agents 0, 3, timestep 4, location 0
Vertex conflict! Agents 0, 4, timestep 3, location 0
Swapping conflict! Agents 0, 4, timestep 3, edge (0,0)
Vertex conflict! Agents 0, 4, timestep 4, location 0
Vertex conflict! Agents 1, 3, timestep 1, location 0
Swapping conflict! Agents 1, 3, timestep 1, edge (0,0)
Vertex conflict! Agents 1, 3, timestep 2, location 0
Swapping conflict! Agents 1, 3, timestep 2, edge (0,0)
Vertex conflict! Agents 1, 3, timestep 3, location 0
Swapping conflict! Agents 1, 3, timestep 3, edge (0,0)
Vertex conflict! Agents 1, 3, timestep 4, location 0
Vertex conflict! Agents 1, 4, timestep 3, location 0
Swapping conflict! Agents 1, 4, timestep 3, edge (0,0)
Vertex conflict! Agents 1, 4, timestep 4, location 0
Vertex conflict! Agents 3, 4, timestep 3, location 0
Swapping conflict! Agents 3, 4, timestep 3, edge (0,0)
Vertex conflict! Agents 3, 4, timestep 4, location 0
Found plan [agents = 6] [timesteps = 5]
Agent #0 : 4 5 0 0 0 
Agent #1 : 0 0 0 0 0 
Agent #2 : 10 11 12 16 17 
Agent #3 : 5 0 0 0 0 
Agent #4 : 8 7 5 0 0 
Agent #5 : 17 16 15 14 13 

[STAT] Solver returned: 0
[DBG]  Agent (index) 23 | New local path (submap idx):
[DBG]  4 5 0 
[DBG]  Agent (index) 67 | New local path (submap idx):
[DBG]  0 
[DBG]  Agent (index) 98 | New local path (submap idx):
[DBG]  10 11 12 16 17 
[DBG]  Agent (index) 122 | New local path (submap idx):
[DBG]  5 0 
[DBG]  Agent (index) 132 | New local path (submap idx):
[DBG]  8 7 5 0 
[DBG]  Agent (index) 145 | New local path (submap idx):
[DBG]  17 16 15 14 13 
[DBG]  Update the agent path 23 | Original local length: 5 | New local length: 3
[DBG]  agent 23 t=0 => decoded (sx,sy)=(1,0) => global_id=550
[DBG]  agent 23 t=1 => decoded (sx,sy)=(1,1) => global_id=551
[DBG]  agent 23 t=2 => decoded (sx,sy)=(0,1) => global_id=519
[DBG]  Complete path of agent 23:
[DBG]    Original: 864 832 800 801 769 737 738 739 740 741 709 677 645 613 581 549 550 550 550 550 551 519 487 455 423 391 359 360 361 362 363 331 299 267 268 269 270 271 239 240 241 273 241 242 243 244 212 213 214 215 247 248 249 217 218 
[DBG]    New:     864 832 800 801 769 737 738 739 740 741 709 677 645 613 581 549 550 550 551 519 487 455 423 391 359 360 361 362 363 331 299 267 268 269 270 271 239 240 241 273 241 242 243 244 212 213 214 215 247 248 249 217 218 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 864 832 800 801 769 737 738 739 740 741 709 677 645 613 581 549 550 
[DBG]    Local path (in submap): 550 551 519 487 455 
[DBG]    Suffix (out of submap): 423 391 359 360 361 362 363 331 299 267 268 269 270 271 239 240 241 273 241 242 243 244 212 213 214 215 247 248 249 217 218 
[DBG]  Original agent path length 23 je: 55
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 0: 864, 832, 800, 801, 769, 737, 738, 739, 740, 741, 709, 677, 645, 613, 581, 549, 550, 550, 551, 519, 487, 455, 423, 391, 359, 360, 361, 362, 363, 331, 299, 267, 268, 269, 270, 271, 239, 240, 241, 273, 241, 242, 243, 244, 212, 213, 214, 215, 247, 248, 249, 217, 218, 
[DBG]  Path for agent 23 updated, resulting length: 53
[DBG]  Update the agent path 67 | Original local length: 1 | New local length: 1
[DBG]  agent 67 t=0 => decoded (sx,sy)=(0,1) => global_id=519
[DBG]  Complete path of agent 67:
[DBG]    Original: 773 773 773 773 773 773 773 774 742 710 710 678 646 647 615 583 551 519 487 455 423 424 425 426 427 428 429 430 431 432 464 465 466 467 468 469 470 438 439 407 408 409 377 378 379 380 348 349 
[DBG]    New:     773 773 773 773 773 773 773 774 742 710 710 678 646 647 615 583 551 519 487 455 423 424 425 426 427 428 429 430 431 432 464 465 466 467 468 469 470 438 439 407 408 409 377 378 379 380 348 349 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 773 773 773 773 773 773 773 774 742 710 710 678 646 647 615 583 551 
[DBG]    Local path (in submap): 519 
[DBG]    Suffix (out of submap): 487 455 423 424 425 426 427 428 429 430 431 432 464 465 466 467 468 469 470 438 439 407 408 409 377 378 379 380 348 349 
[DBG]  Original agent path length 67 je: 48
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 1: 773, 773, 773, 773, 773, 773, 773, 774, 742, 710, 710, 678, 646, 647, 615, 583, 551, 519, 487, 455, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 464, 465, 466, 467, 468, 469, 470, 438, 439, 407, 408, 409, 377, 378, 379, 380, 348, 349, 
[DBG]  Path for agent 67 updated, resulting length: 48
[DBG]  Update the agent path 98 | Original local length: 7 | New local length: 5
[DBG]  agent 98 t=0 => decoded (sx,sy)=(3,1) => global_id=615
[DBG]  agent 98 t=1 => decoded (sx,sy)=(3,2) => global_id=616
[DBG]  agent 98 t=2 => decoded (sx,sy)=(3,3) => global_id=617
[DBG]  agent 98 t=3 => decoded (sx,sy)=(4,3) => global_id=649
[DBG]  agent 98 t=4 => decoded (sx,sy)=(4,4) => global_id=650
[DBG]  Complete path of agent 98:
[DBG]    Original: 897 865 864 832 800 801 769 737 738 739 740 741 742 710 678 646 647 615 616 616 616 648 649 650 651 619 587 588 589 590 558 
[DBG]    New:     897 865 864 832 800 801 769 737 738 739 740 741 742 710 678 646 647 615 616 617 649 650 651 619 587 588 589 590 558 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 897 865 864 832 800 801 769 737 738 739 740 741 742 710 678 646 647 
[DBG]    Local path (in submap): 615 616 617 649 650 651 619 
[DBG]    Suffix (out of submap): 587 588 589 590 558 
[DBG]  Original agent path length 98 je: 31
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 2: 897, 865, 864, 832, 800, 801, 769, 737, 738, 739, 740, 741, 742, 710, 678, 646, 647, 615, 616, 617, 649, 650, 651, 619, 587, 588, 589, 590, 558, 
[DBG]  Path for agent 98 updated, resulting length: 29
[DBG]  Update the agent path 122 | Original local length: 2 | New local length: 2
[DBG]  agent 122 t=0 => decoded (sx,sy)=(1,1) => global_id=551
[DBG]  agent 122 t=1 => decoded (sx,sy)=(0,1) => global_id=519
[DBG]  Complete path of agent 122:
[DBG]    Original: 909 877 845 844 843 811 779 747 715 683 682 650 649 617 616 615 583 551 519 487 455 454 422 421 389 357 325 293 261 260 228 196 197 
[DBG]    New:     909 877 845 844 843 811 779 747 715 683 682 650 649 617 616 615 583 551 519 487 455 454 422 421 389 357 325 293 261 260 228 196 197 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 909 877 845 844 843 811 779 747 715 683 682 650 649 617 616 615 583 
[DBG]    Local path (in submap): 551 519 
[DBG]    Suffix (out of submap): 487 455 454 422 421 389 357 325 293 261 260 228 196 197 
[DBG]  Original agent path length 122 je: 33
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 3: 909, 877, 845, 844, 843, 811, 779, 747, 715, 683, 682, 650, 649, 617, 616, 615, 583, 551, 519, 487, 455, 454, 422, 421, 389, 357, 325, 293, 261, 260, 228, 196, 197, 
[DBG]  Path for agent 122 updated, resulting length: 33
[DBG]  Update the agent path 132 | Original local length: 4 | New local length: 4
[DBG]  agent 132 t=0 => decoded (sx,sy)=(2,2) => global_id=584
[DBG]  agent 132 t=1 => decoded (sx,sy)=(2,1) => global_id=583
[DBG]  agent 132 t=2 => decoded (sx,sy)=(1,1) => global_id=551
[DBG]  agent 132 t=3 => decoded (sx,sy)=(0,1) => global_id=519
[DBG]  Complete path of agent 132:
[DBG]    Original: 876 876 876 876 844 843 843 811 779 747 715 714 713 712 680 648 616 584 583 551 519 487 486 487 455 423 391 359 360 328 296 297 298 266 267 
[DBG]    New:     876 876 876 876 844 843 843 811 779 747 715 714 713 712 680 648 616 584 583 551 519 487 486 487 455 423 391 359 360 328 296 297 298 266 267 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 876 876 876 876 844 843 843 811 779 747 715 714 713 712 680 648 616 
[DBG]    Local path (in submap): 584 583 551 519 
[DBG]    Suffix (out of submap): 487 486 487 455 423 391 359 360 328 296 297 298 266 267 
[DBG]  Original agent path length 132 je: 35
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 4: 876, 876, 876, 876, 844, 843, 843, 811, 779, 747, 715, 714, 713, 712, 680, 648, 616, 584, 583, 551, 519, 487, 486, 487, 455, 423, 391, 359, 360, 328, 296, 297, 298, 266, 267, 
[DBG]  Path for agent 132 updated, resulting length: 35
[DBG]  Update the agent path 145 | Original local length: 5 | New local length: 5
[DBG]  agent 145 t=0 => decoded (sx,sy)=(4,4) => global_id=650
[DBG]  agent 145 t=1 => decoded (sx,sy)=(4,3) => global_id=649
[DBG]  agent 145 t=2 => decoded (sx,sy)=(4,2) => global_id=648
[DBG]  agent 145 t=3 => decoded (sx,sy)=(4,1) => global_id=647
[DBG]  agent 145 t=4 => decoded (sx,sy)=(4,0) => global_id=646
[DBG]  Complete path of agent 145:
[DBG]    Original: 335 367 368 400 432 431 430 462 494 526 525 524 556 555 587 619 651 650 649 648 647 646 
[DBG]    New:     335 367 368 400 432 431 430 462 494 526 525 524 556 555 587 619 651 650 649 648 647 646 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 335 367 368 400 432 431 430 462 494 526 525 524 556 555 587 619 651 
[DBG]    Local path (in submap): 650 649 648 647 646 
[DBG]    Suffix (out of submap): 
[DBG]  Original agent path length 145 je: 22
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 5: 335, 367, 368, 400, 432, 431, 430, 462, 494, 526, 525, 524, 556, 555, 587, 619, 651, 650, 649, 648, 647, 646, 
[DBG]  Path for agent 145 updated, resulting length: 22
[DBG]  Paths successfully updated.
[DBG]  (LNS.cpp) New path for agent 23: 
[DBG]  864, 832, 800, 801, 769, 737, 738, 739, 740, 741, 709, 677, 645, 613, 581, 549, 550, 550, 551, 519, 487, 455, 423, 391, 359, 360, 361, 362, 363, 331, 299, 267, 268, 269, 270, 271, 239, 240, 241, 273, 241, 242, 243, 244, 212, 213, 214, 215, 247, 248, 249, 217, 218, 
[DBG]  (LNS.cpp) New path for agent 67: 
[DBG]  773, 773, 773, 773, 773, 773, 773, 774, 742, 710, 710, 678, 646, 647, 615, 583, 551, 519, 487, 455, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 464, 465, 466, 467, 468, 469, 470, 438, 439, 407, 408, 409, 377, 378, 379, 380, 348, 349, 
[DBG]  (LNS.cpp) New path for agent 98: 
[DBG]  897, 865, 864, 832, 800, 801, 769, 737, 738, 739, 740, 741, 742, 710, 678, 646, 647, 615, 616, 617, 649, 650, 651, 619, 587, 588, 589, 590, 558, 
[DBG]  (LNS.cpp) New path for agent 122: 
[DBG]  909, 877, 845, 844, 843, 811, 779, 747, 715, 683, 682, 650, 649, 617, 616, 615, 583, 551, 519, 487, 455, 454, 422, 421, 389, 357, 325, 293, 261, 260, 228, 196, 197, 
[DBG]  (LNS.cpp) New path for agent 132: 
[DBG]  876, 876, 876, 876, 844, 843, 843, 811, 779, 747, 715, 714, 713, 712, 680, 648, 616, 584, 583, 551, 519, 487, 486, 487, 455, 423, 391, 359, 360, 328, 296, 297, 298, 266, 267, 
[DBG]  (LNS.cpp) New path for agent 145: 
[DBG]  335, 367, 368, 400, 432, 431, 430, 462, 494, 526, 525, 524, 556, 555, 587, 619, 651, 650, 649, 648, 647, 646, 
[DBG]  component_weights = {0.348566, 0.0996098, 0.104167, 0.447657}
[DBG]  opSuccess value: 1
[STAT] neighbor.sum_of_costs before recomputation: 214
[STAT] neighbor.old_sum_of_costs before recomputation: 218
[STAT] sum_of_costs before recomputation: 4217
[DBG]  Validate solution immediately after SAT success.
[WARNING] Problem after SAT: Edge conflict between agents 98 and 20 at edge (650,651) at timestep 22
[DBG]  Attempting immediate repair via init_lns because problem occurred after SAT (should be applied only for conflicts...).
[DBG]  Passing 150 agents to init_lns (skip=true).
[DBG]  path_table contents for selected agents (neighbor.agents):
[DBG]    Agent 23 => controlling path length=53
[DBG]    Agent 67 => controlling path length=48
[DBG]    Agent 98 => controlling path length=29
[DBG]    Agent 122 => controlling path length=33
[DBG]    Agent 132 => controlling path length=35
[DBG]    Agent 145 => controlling path length=22
[DBG]  hodnota skip_initial_solution=1
[DBG]  We skip initialSolution => call buildCollisionData()
[DBG]  buildCollisionData() called â€“ skip_initial_solution case.
[DBG]  Agents.size()=150, collision_graph.size()=150
[DBG]  agent 20 => updateCollidingPairs => foundCollision
[DBG]  agent 23 => updateCollidingPairs => foundCollision
[DBG]  agent 98 => updateCollidingPairs => foundCollision
[DBG]  agent 101 => updateCollidingPairs => foundCollision
[DBG]  agent 119 => updateCollidingPairs => foundCollision
[DBG]  Conflicting agent pairs:
[DBG]  agent 20 is in conflict with agent 98
[DBG]  agent 23 is in conflict with agent 119
[DBG]  agent 98 is in conflict with agent 101
[DBG]  buildCollisionData() => sum_of_costs=4213, num_of_colliding_pairs=3
[DBG]  buildCollisionData done => sum_of_costs=4213, num_of_colliding_pairs=3
[DBG]  sum_of_cost hodnota: 4213
[DBG]  After skip/init build => iteration_stats.back(): sum_of_costs=4213, collisions=3
[DEBUG] Using default neighbor generation strategy for conflicts: 2
[DEBUG] Using default neighbor generation strategy for conflicts: 1
	InitLNS(PP): runtime = 0.0262181, iterations = 3, colliding pairs = 0, initial colliding pairs = 3, solution cost = 4229, initial solution cost = 4213, failed iterations = 0
[DBG]  init_lns->sum_of_costs after init_lns->run: 4229
[DBG]  sum_of_costs after assignment from init_lns->run: 4229
[DBG]  Recomputing sum_of_cost by dividing neighbor.sum_of_costs and neighbor.old_sum_of_costs
[STAT] sum_of_costs after recomputation: 4229
[STAT] Iteration 137
[DBG]  Using SAT operator (destroy+repair SAT).
[DBG]  ====================
[DBG]  SAT destroy operator called.
[DBG]  SAT heuristic: 2
[DBG]  key_agent_id: 91
[DBG]  key_agent_id global path length: 26
[DBG]  Submap content (global positions):
[DBG]  437 438 439 440 441 
[DBG]  469 470 471 472 473 
[DBG]  501 502 503 504 505 
[DBG]  533 534 535 536 537 
[DBG]  565 566 567 568 569 
[DBG]  Map content with agents and obstacles:
[DBG]  A A . A A 
[DBG]  . A X . . 
[DBG]  A . A . . 
[DBG]  . A X X X 
[DBG]  A A X X . 
[DBG]  content of the map structure that we pass to the SAT solver:
[DBG]  1  1  1  1  1  
[DBG]  1  1  -1  1  1  
[DBG]  1  1  1  1  1  
[DBG]  1  1  -1  -1  -1  
[DBG]  1  1  -1  -1  1  
[DBG]  Identifying agents in a submap for rescheduling (when key_agent is there at the time 15):
[DBG]  Agent 2 found intervals in the sub-map:
[DBG]   [15..16]
[DBG]  Agent 2 (interval in submap: [15..16]) contains time 15, added to replan.
[DBG]  Agent 3 found intervals in the sub-map:
[DBG]   [13..18]
[DBG]  Agent 3 (interval in submap: [13..18]) contains time 15, added to replan.
[DBG]  Agent 10 found intervals in the sub-map:
[DBG]   [14..20]
[DBG]  Agent 10 (interval in submap: [14..20]) contains time 15, added to replan.
[DBG]  Agent 43 found intervals in the sub-map:
[DBG]   [9..18]
[DBG]  Agent 43 (interval in submap: [9..18]) contains time 15, added to replan.
[DBG]  Agent 44 found intervals in the sub-map:
[DBG]   [15..19]
[DBG]  Agent 44 (interval in submap: [15..19]) contains time 15, added to replan.
[DBG]  Agent 46 found intervals in the sub-map:
[DBG]  
[DBG]  Agent 46 is not in sub-map at time 15 (intervals: 
[DBG]  )
[DBG]  Agent 62 found intervals in the sub-map:
[DBG]   [10..15]
[DBG]  Agent 62 (interval in submap: [10..15]) contains time 15, added to replan.
[DBG]  Agent 86 found intervals in the sub-map:
[DBG]   [15..21]
[DBG]  Agent 86 (interval in submap: [15..21]) contains time 15, added to replan.
[DBG]  Agent 91 found intervals in the sub-map:
[DBG]   [11..18]
[DBG]  Agent 91 (interval in submap: [11..18]) contains time 15, added to replan.
[DBG]  Agent 100 found intervals in the sub-map:
[DBG]   [13..16]
[DBG]  Agent 100 (interval in submap: [13..16]) contains time 15, added to replan.
[DBG]  Agent 113 found intervals in the sub-map:
[DBG]   [14..16]
[DBG]  Agent 113 (interval in submap: [14..16]) contains time 15, added to replan.
[DBG]  Agent 144 found intervals in the sub-map:
[DBG]   [13..14]
[DBG]  Agent 144 is not in sub-map at time 15 (intervals: 
[DBG]  [13..14] )
[DBG]  Agent 2 | Start (global): 441 -> (local): (0, 4) at time 15 | Goal (global): 473 -> (local): (1, 4) at time 16
[DBG]  Agent 3 | Start (global): 501 -> (local): (2, 0) at time 15 | Goal (global): 565 -> (local): (4, 0) at time 18
[DBG]  Agent 10 | Start (global): 566 -> (local): (4, 1) at time 15 | Goal (global): 505 -> (local): (2, 4) at time 20
[DBG]  Agent 43 | Start (global): 534 -> (local): (3, 1) at time 15 | Goal (global): 469 -> (local): (1, 0) at time 18
[DBG]  Agent 44 | Start (global): 440 -> (local): (0, 3) at time 15 | Goal (global): 469 -> (local): (1, 0) at time 19
[DBG]  Agent 62 | Start (global): 438 -> (local): (0, 1) at time 15 | Goal (global): 438 -> (local): (0, 1) at time 15
[DBG]  Agent 86 | Start (global): 565 -> (local): (4, 0) at time 15 | Goal (global): 505 -> (local): (2, 4) at time 21
[DBG]  Agent 91 | Start (global): 503 -> (local): (2, 2) at time 15 | Goal (global): 473 -> (local): (1, 4) at time 18
[DBG]  Agent 100 | Start (global): 437 -> (local): (0, 0) at time 15 | Goal (global): 469 -> (local): (1, 0) at time 16
[DBG]  Agent 113 | Start (global): 470 -> (local): (1, 1) at time 15 | Goal (global): 438 -> (local): (0, 1) at time 16
[DBG]  [REPAIR] SAT destroy operator called.
[DBG]  [REPAIR] SAT operator â€“ launching subproblem FOR OPTIMIZATION.
[DBG]  Creating local paths (sx, sy) in the submap for T_sync = 15
[DBG]    Agent 2 (global paths from T=15 to 16) has local path: (0,4) (1,4) 
[DBG]    Agent 3 (global paths from T=15 to 18) has local path: (2,0) (2,0) (3,0) (4,0) 
[DBG]    Agent 10 (global paths from T=15 to 20) has local path: (4,1) (3,1) (2,1) (2,2) (2,3) (2,4) 
[DBG]    Agent 43 (global paths from T=15 to 18) has local path: (3,1) (2,1) (1,1) (1,0) 
[DBG]    Agent 44 (global paths from T=15 to 19) has local path: (0,3) (0,2) (0,1) (1,1) (1,0) 
[DBG]    Agent 62 (global paths from T=15 to 15) has local path: (0,1) 
[DBG]    Agent 86 (global paths from T=15 to 21) has local path: (4,0) (3,0) (3,1) (2,1) (2,2) (2,3) (2,4) 
[DBG]    Agent 91 (global paths from T=15 to 18) has local path: (2,2) (2,3) (1,3) (1,4) 
[DBG]    Agent 100 (global paths from T=15 to 16) has local path: (0,0) (1,0) 
[DBG]    Agent 113 (global paths from T=15 to 16) has local path: (1,1) (0,1) 
[DBG]  Checking input data for SAT solver:
[DBG]    - Number of agents to replan: 10
[DBG]  Agent 2 has the original local path length: 2 => Start (0,4), Goal (1,4)
[DBG]  Agent 3 has the original local path length: 4 => Start (2,0), Goal (4,0)
[DBG]  Agent 10 has the original local path length: 6 => Start (4,1), Goal (2,4)
[DBG]  Agent 43 has the original local path length: 4 => Start (3,1), Goal (1,0)
[DBG]  Agent 44 has the original local path length: 5 => Start (0,3), Goal (1,0)
[DBG]  Agent 62 has the original local path length: 1 => Start (0,1), Goal (0,1)
[DBG]  Agent 86 has the original local path length: 7 => Start (4,0), Goal (2,4)
[DBG]  Agent 91 has the original local path length: 4 => Start (2,2), Goal (1,4)
[DBG]  Agent 100 has the original local path length: 2 => Start (0,0), Goal (1,0)
[DBG]  Agent 113 has the original local path length: 2 => Start (1,1), Goal (0,1)
[DBG]  Start position: (0, 4), (2, 0), (4, 1), (3, 1), (0, 3), (0, 1), (4, 0), (2, 2), (0, 0), (1, 1), 
[DBG]  Goal position: (1, 4), (4, 0), (2, 4), (1, 0), (1, 0), (0, 1), (2, 4), (1, 4), (1, 0), (0, 1), 
[DBG]  SAT instance and solver created.
Currently solving
Instance name: scen
Map name: map
Encoding used: disappear_at_goal
SAT solver used: Kissat
Optimizing function: sum of costs
Number of agents: 10
Mks LB: 7
SoC LB: 36
Delta: 0
Remaining time: 300000 [ms]

Vertex conflict! Agents 0, 1, timestep 3, location 0
Swapping conflict! Agents 0, 1, timestep 3, edge (0,0)
Vertex conflict! Agents 0, 1, timestep 4, location 0
Swapping conflict! Agents 0, 1, timestep 4, edge (0,0)
Vertex conflict! Agents 0, 1, timestep 5, location 0
Swapping conflict! Agents 0, 1, timestep 5, edge (0,0)
Vertex conflict! Agents 0, 1, timestep 6, location 0
Vertex conflict! Agents 0, 2, timestep 6, location 0
Vertex conflict! Agents 0, 3, timestep 4, location 0
Swapping conflict! Agents 0, 3, timestep 4, edge (0,0)
Vertex conflict! Agents 0, 3, timestep 5, location 0
Swapping conflict! Agents 0, 3, timestep 5, edge (0,0)
Vertex conflict! Agents 0, 3, timestep 6, location 0
Vertex conflict! Agents 0, 4, timestep 5, location 0
Swapping conflict! Agents 0, 4, timestep 5, edge (0,0)
Vertex conflict! Agents 0, 4, timestep 6, location 0
Vertex conflict! Agents 0, 5, timestep 2, location 0
Swapping conflict! Agents 0, 5, timestep 2, edge (0,0)
Vertex conflict! Agents 0, 5, timestep 3, location 0
Swapping conflict! Agents 0, 5, timestep 3, edge (0,0)
Vertex conflict! Agents 0, 5, timestep 4, location 0
Swapping conflict! Agents 0, 5, timestep 4, edge (0,0)
Vertex conflict! Agents 0, 5, timestep 5, location 0
Swapping conflict! Agents 0, 5, timestep 5, edge (0,0)
Vertex conflict! Agents 0, 5, timestep 6, location 0
Vertex conflict! Agents 0, 7, timestep 4, location 0
Swapping conflict! Agents 0, 7, timestep 4, edge (0,0)
Vertex conflict! Agents 0, 7, timestep 5, location 0
Swapping conflict! Agents 0, 7, timestep 5, edge (0,0)
Vertex conflict! Agents 0, 7, timestep 6, location 0
Vertex conflict! Agents 0, 8, timestep 2, location 0
Swapping conflict! Agents 0, 8, timestep 2, edge (0,0)
Vertex conflict! Agents 0, 8, timestep 3, location 0
Swapping conflict! Agents 0, 8, timestep 3, edge (0,0)
Vertex conflict! Agents 0, 8, timestep 4, location 0
Swapping conflict! Agents 0, 8, timestep 4, edge (0,0)
Vertex conflict! Agents 0, 8, timestep 5, location 0
Swapping conflict! Agents 0, 8, timestep 5, edge (0,0)
Vertex conflict! Agents 0, 8, timestep 6, location 0
Vertex conflict! Agents 0, 9, timestep 2, location 0
Swapping conflict! Agents 0, 9, timestep 2, edge (0,0)
Vertex conflict! Agents 0, 9, timestep 3, location 0
Swapping conflict! Agents 0, 9, timestep 3, edge (0,0)
Vertex conflict! Agents 0, 9, timestep 4, location 0
Swapping conflict! Agents 0, 9, timestep 4, edge (0,0)
Vertex conflict! Agents 0, 9, timestep 5, location 0
Swapping conflict! Agents 0, 9, timestep 5, edge (0,0)
Vertex conflict! Agents 0, 9, timestep 6, location 0
Vertex conflict! Agents 1, 2, timestep 6, location 0
Vertex conflict! Agents 1, 3, timestep 4, location 0
Swapping conflict! Agents 1, 3, timestep 4, edge (0,0)
Vertex conflict! Agents 1, 3, timestep 5, location 0
Swapping conflict! Agents 1, 3, timestep 5, edge (0,0)
Vertex conflict! Agents 1, 3, timestep 6, location 0
Vertex conflict! Agents 1, 4, timestep 5, location 0
Swapping conflict! Agents 1, 4, timestep 5, edge (0,0)
Vertex conflict! Agents 1, 4, timestep 6, location 0
Vertex conflict! Agents 1, 5, timestep 3, location 0
Swapping conflict! Agents 1, 5, timestep 3, edge (0,0)
Vertex conflict! Agents 1, 5, timestep 4, location 0
Swapping conflict! Agents 1, 5, timestep 4, edge (0,0)
Vertex conflict! Agents 1, 5, timestep 5, location 0
Swapping conflict! Agents 1, 5, timestep 5, edge (0,0)
Vertex conflict! Agents 1, 5, timestep 6, location 0
Vertex conflict! Agents 1, 7, timestep 4, location 0
Swapping conflict! Agents 1, 7, timestep 4, edge (0,0)
Vertex conflict! Agents 1, 7, timestep 5, location 0
Swapping conflict! Agents 1, 7, timestep 5, edge (0,0)
Vertex conflict! Agents 1, 7, timestep 6, location 0
Vertex conflict! Agents 1, 8, timestep 3, location 0
Swapping conflict! Agents 1, 8, timestep 3, edge (0,0)
Vertex conflict! Agents 1, 8, timestep 4, location 0
Swapping conflict! Agents 1, 8, timestep 4, edge (0,0)
Vertex conflict! Agents 1, 8, timestep 5, location 0
Swapping conflict! Agents 1, 8, timestep 5, edge (0,0)
Vertex conflict! Agents 1, 8, timestep 6, location 0
Vertex conflict! Agents 1, 9, timestep 3, location 0
Swapping conflict! Agents 1, 9, timestep 3, edge (0,0)
Vertex conflict! Agents 1, 9, timestep 4, location 0
Swapping conflict! Agents 1, 9, timestep 4, edge (0,0)
Vertex conflict! Agents 1, 9, timestep 5, location 0
Swapping conflict! Agents 1, 9, timestep 5, edge (0,0)
Vertex conflict! Agents 1, 9, timestep 6, location 0
Vertex conflict! Agents 2, 3, timestep 6, location 0
Vertex conflict! Agents 2, 4, timestep 6, location 0
Vertex conflict! Agents 2, 5, timestep 6, location 0
Vertex conflict! Agents 2, 7, timestep 6, location 0
Vertex conflict! Agents 2, 8, timestep 6, location 0
Vertex conflict! Agents 2, 9, timestep 6, location 0
Vertex conflict! Agents 3, 4, timestep 5, location 0
Swapping conflict! Agents 3, 4, timestep 5, edge (0,0)
Vertex conflict! Agents 3, 4, timestep 6, location 0
Vertex conflict! Agents 3, 5, timestep 4, location 0
Swapping conflict! Agents 3, 5, timestep 4, edge (0,0)
Vertex conflict! Agents 3, 5, timestep 5, location 0
Swapping conflict! Agents 3, 5, timestep 5, edge (0,0)
Vertex conflict! Agents 3, 5, timestep 6, location 0
Vertex conflict! Agents 3, 7, timestep 4, location 0
Swapping conflict! Agents 3, 7, timestep 4, edge (0,0)
Vertex conflict! Agents 3, 7, timestep 5, location 0
Swapping conflict! Agents 3, 7, timestep 5, edge (0,0)
Vertex conflict! Agents 3, 7, timestep 6, location 0
Vertex conflict! Agents 3, 8, timestep 4, location 0
Swapping conflict! Agents 3, 8, timestep 4, edge (0,0)
Vertex conflict! Agents 3, 8, timestep 5, location 0
Swapping conflict! Agents 3, 8, timestep 5, edge (0,0)
Vertex conflict! Agents 3, 8, timestep 6, location 0
Vertex conflict! Agents 3, 9, timestep 4, location 0
Swapping conflict! Agents 3, 9, timestep 4, edge (0,0)
Vertex conflict! Agents 3, 9, timestep 5, location 0
Swapping conflict! Agents 3, 9, timestep 5, edge (0,0)
Vertex conflict! Agents 3, 9, timestep 6, location 0
Vertex conflict! Agents 4, 5, timestep 5, location 0
Swapping conflict! Agents 4, 5, timestep 5, edge (0,0)
Vertex conflict! Agents 4, 5, timestep 6, location 0
Vertex conflict! Agents 4, 7, timestep 5, location 0
Swapping conflict! Agents 4, 7, timestep 5, edge (0,0)
Vertex conflict! Agents 4, 7, timestep 6, location 0
Vertex conflict! Agents 4, 8, timestep 5, location 0
Swapping conflict! Agents 4, 8, timestep 5, edge (0,0)
Vertex conflict! Agents 4, 8, timestep 6, location 0
Vertex conflict! Agents 4, 9, timestep 5, location 0
Swapping conflict! Agents 4, 9, timestep 5, edge (0,0)
Vertex conflict! Agents 4, 9, timestep 6, location 0
Vertex conflict! Agents 5, 7, timestep 4, location 0
Swapping conflict! Agents 5, 7, timestep 4, edge (0,0)
Vertex conflict! Agents 5, 7, timestep 5, location 0
Swapping conflict! Agents 5, 7, timestep 5, edge (0,0)
Vertex conflict! Agents 5, 7, timestep 6, location 0
Vertex conflict! Agents 5, 8, timestep 2, location 0
Swapping conflict! Agents 5, 8, timestep 2, edge (0,0)
Vertex conflict! Agents 5, 8, timestep 3, location 0
Swapping conflict! Agents 5, 8, timestep 3, edge (0,0)
Vertex conflict! Agents 5, 8, timestep 4, location 0
Swapping conflict! Agents 5, 8, timestep 4, edge (0,0)
Vertex conflict! Agents 5, 8, timestep 5, location 0
Swapping conflict! Agents 5, 8, timestep 5, edge (0,0)
Vertex conflict! Agents 5, 8, timestep 6, location 0
Vertex conflict! Agents 5, 9, timestep 2, location 0
Swapping conflict! Agents 5, 9, timestep 2, edge (0,0)
Vertex conflict! Agents 5, 9, timestep 3, location 0
Swapping conflict! Agents 5, 9, timestep 3, edge (0,0)
Vertex conflict! Agents 5, 9, timestep 4, location 0
Swapping conflict! Agents 5, 9, timestep 4, edge (0,0)
Vertex conflict! Agents 5, 9, timestep 5, location 0
Swapping conflict! Agents 5, 9, timestep 5, edge (0,0)
Vertex conflict! Agents 5, 9, timestep 6, location 0
Vertex conflict! Agents 7, 8, timestep 4, location 0
Swapping conflict! Agents 7, 8, timestep 4, edge (0,0)
Vertex conflict! Agents 7, 8, timestep 5, location 0
Swapping conflict! Agents 7, 8, timestep 5, edge (0,0)
Vertex conflict! Agents 7, 8, timestep 6, location 0
Vertex conflict! Agents 7, 9, timestep 4, location 0
Swapping conflict! Agents 7, 9, timestep 4, edge (0,0)
Vertex conflict! Agents 7, 9, timestep 5, location 0
Swapping conflict! Agents 7, 9, timestep 5, edge (0,0)
Vertex conflict! Agents 7, 9, timestep 6, location 0
Vertex conflict! Agents 8, 9, timestep 2, location 0
Swapping conflict! Agents 8, 9, timestep 2, edge (0,0)
Vertex conflict! Agents 8, 9, timestep 3, location 0
Swapping conflict! Agents 8, 9, timestep 3, edge (0,0)
Vertex conflict! Agents 8, 9, timestep 4, location 0
Swapping conflict! Agents 8, 9, timestep 4, edge (0,0)
Vertex conflict! Agents 8, 9, timestep 5, location 0
Swapping conflict! Agents 8, 9, timestep 5, edge (0,0)
Vertex conflict! Agents 8, 9, timestep 6, location 0
Found plan [agents = 10] [timesteps = 7]
Agent #0 : 4 8 0 0 0 0 0 
Agent #1 : 9 14 16 0 0 0 0 
Agent #2 : 17 15 10 11 12 13 0 
Agent #3 : 15 10 9 5 0 0 0 
Agent #4 : 3 2 1 6 5 0 0 
Agent #5 : 1 0 0 0 0 0 0 
Agent #6 : 16 17 15 10 11 12 13 
Agent #7 : 11 12 13 8 0 0 0 
Agent #8 : 0 5 0 0 0 0 0 
Agent #9 : 6 1 0 0 0 0 0 

[STAT] Solver returned: 0
[DBG]  Agent (index) 2 | New local path (submap idx):
[DBG]  4 8 
[DBG]  Agent (index) 3 | New local path (submap idx):
[DBG]  9 14 16 
[DBG]  Agent (index) 10 | New local path (submap idx):
[DBG]  17 15 10 11 12 13 
[DBG]  Agent (index) 43 | New local path (submap idx):
[DBG]  15 10 9 5 
[DBG]  Agent (index) 44 | New local path (submap idx):
[DBG]  3 2 1 6 5 
[DBG]  Agent (index) 62 | New local path (submap idx):
[DBG]  1 
[DBG]  Agent (index) 86 | New local path (submap idx):
[DBG]  16 17 15 10 11 12 13 
[DBG]  Agent (index) 91 | New local path (submap idx):
[DBG]  11 12 13 8 
[DBG]  Agent (index) 100 | New local path (submap idx):
[DBG]  0 5 
[DBG]  Agent (index) 113 | New local path (submap idx):
[DBG]  6 1 
[DBG]  Update the agent path 2 | Original local length: 2 | New local length: 2
[DBG]  agent 2 t=0 => decoded (sx,sy)=(0,4) => global_id=441
[DBG]  agent 2 t=1 => decoded (sx,sy)=(1,4) => global_id=473
[DBG]  Complete path of agent 2:
[DBG]    Original: 59 91 90 89 89 121 153 185 217 249 281 313 345 377 409 441 473 474 475 507 539 538 570 602 603 604 636 637 638 670 702 701 733 732 764 
[DBG]    New:     59 91 90 89 89 121 153 185 217 249 281 313 345 377 409 441 473 474 475 507 539 538 570 602 603 604 636 637 638 670 702 701 733 732 764 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 59 91 90 89 89 121 153 185 217 249 281 313 345 377 409 
[DBG]    Local path (in submap): 441 473 
[DBG]    Suffix (out of submap): 474 475 507 539 538 570 602 603 604 636 637 638 670 702 701 733 732 764 
[DBG]  Original agent path length 2 je: 35
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 0: 59, 91, 90, 89, 89, 121, 153, 185, 217, 249, 281, 313, 345, 377, 409, 441, 473, 474, 475, 507, 539, 538, 570, 602, 603, 604, 636, 637, 638, 670, 702, 701, 733, 732, 764, 
[DBG]  Path for agent 2 updated, resulting length: 35
[DBG]  Update the agent path 3 | Original local length: 4 | New local length: 3
[DBG]  agent 3 t=0 => decoded (sx,sy)=(2,0) => global_id=501
[DBG]  agent 3 t=1 => decoded (sx,sy)=(3,0) => global_id=533
[DBG]  agent 3 t=2 => decoded (sx,sy)=(4,0) => global_id=565
[DBG]  Complete path of agent 3:
[DBG]    Original: 468 468 468 468 468 468 468 468 468 468 468 468 468 469 501 501 501 533 565 597 629 661 660 692 692 692 692 692 724 756 788 820 819 818 817 849 881 913 913 912 
[DBG]    New:     468 468 468 468 468 468 468 468 468 468 468 468 468 469 501 501 533 565 597 629 661 660 692 692 692 692 692 724 756 788 820 819 818 817 849 881 913 913 912 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 468 468 468 468 468 468 468 468 468 468 468 468 468 469 501 
[DBG]    Local path (in submap): 501 533 565 597 
[DBG]    Suffix (out of submap): 629 661 660 692 692 692 692 692 724 756 788 820 819 818 817 849 881 913 913 912 
[DBG]  Original agent path length 3 je: 40
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 1: 468, 468, 468, 468, 468, 468, 468, 468, 468, 468, 468, 468, 468, 469, 501, 501, 533, 565, 597, 629, 661, 660, 692, 692, 692, 692, 692, 724, 756, 788, 820, 819, 818, 817, 849, 881, 913, 913, 912, 
[DBG]  Path for agent 3 updated, resulting length: 39
[DBG]  Update the agent path 10 | Original local length: 6 | New local length: 6
[DBG]  agent 10 t=0 => decoded (sx,sy)=(4,1) => global_id=566
[DBG]  agent 10 t=1 => decoded (sx,sy)=(3,1) => global_id=534
[DBG]  agent 10 t=2 => decoded (sx,sy)=(2,1) => global_id=502
[DBG]  agent 10 t=3 => decoded (sx,sy)=(2,2) => global_id=503
[DBG]  agent 10 t=4 => decoded (sx,sy)=(2,3) => global_id=504
[DBG]  agent 10 t=5 => decoded (sx,sy)=(2,4) => global_id=505
[DBG]  Complete path of agent 10:
[DBG]    Original: 588 589 590 591 592 593 625 657 658 659 627 628 596 597 565 566 534 502 503 504 505 506 474 475 476 
[DBG]    New:     588 589 590 591 592 593 625 657 658 659 627 628 596 597 565 566 534 502 503 504 505 506 474 475 476 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 588 589 590 591 592 593 625 657 658 659 627 628 596 597 565 
[DBG]    Local path (in submap): 566 534 502 503 504 505 
[DBG]    Suffix (out of submap): 506 474 475 476 
[DBG]  Original agent path length 10 je: 25
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 2: 588, 589, 590, 591, 592, 593, 625, 657, 658, 659, 627, 628, 596, 597, 565, 566, 534, 502, 503, 504, 505, 506, 474, 475, 476, 
[DBG]  Path for agent 10 updated, resulting length: 25
[DBG]  Update the agent path 43 | Original local length: 4 | New local length: 4
[DBG]  agent 43 t=0 => decoded (sx,sy)=(3,1) => global_id=534
[DBG]  agent 43 t=1 => decoded (sx,sy)=(2,1) => global_id=502
[DBG]  agent 43 t=2 => decoded (sx,sy)=(2,0) => global_id=501
[DBG]  agent 43 t=3 => decoded (sx,sy)=(1,0) => global_id=469
[DBG]  Complete path of agent 43:
[DBG]    Original: 414 413 445 444 443 475 507 507 506 505 504 503 502 501 533 534 502 470 469 468 467 466 465 464 463 462 494 526 525 524 523 522 521 520 519 487 519 551 550 582 581 613 645 677 709 741 740 739 707 
[DBG]    New:     414 413 445 444 443 475 507 507 506 505 504 503 502 501 533 534 502 501 469 468 467 466 465 464 463 462 494 526 525 524 523 522 521 520 519 487 519 551 550 582 581 613 645 677 709 741 740 739 707 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 414 413 445 444 443 475 507 507 506 505 504 503 502 501 533 
[DBG]    Local path (in submap): 534 502 501 469 
[DBG]    Suffix (out of submap): 468 467 466 465 464 463 462 494 526 525 524 523 522 521 520 519 487 519 551 550 582 581 613 645 677 709 741 740 739 707 
[DBG]  Original agent path length 43 je: 49
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 3: 414, 413, 445, 444, 443, 475, 507, 507, 506, 505, 504, 503, 502, 501, 533, 534, 502, 501, 469, 468, 467, 466, 465, 464, 463, 462, 494, 526, 525, 524, 523, 522, 521, 520, 519, 487, 519, 551, 550, 582, 581, 613, 645, 677, 709, 741, 740, 739, 707, 
[DBG]  Path for agent 43 updated, resulting length: 49
[DBG]  Update the agent path 44 | Original local length: 5 | New local length: 5
[DBG]  agent 44 t=0 => decoded (sx,sy)=(0,3) => global_id=440
[DBG]  agent 44 t=1 => decoded (sx,sy)=(0,2) => global_id=439
[DBG]  agent 44 t=2 => decoded (sx,sy)=(0,1) => global_id=438
[DBG]  agent 44 t=3 => decoded (sx,sy)=(1,1) => global_id=470
[DBG]  agent 44 t=4 => decoded (sx,sy)=(1,0) => global_id=469
[DBG]  Complete path of agent 44:
[DBG]    Original: 156 124 123 122 121 153 185 217 249 281 313 345 377 409 408 440 439 438 470 469 468 467 466 465 465 465 465 464 496 528 529 561 593 625 657 689 688 720 752 784 783 815 847 848 
[DBG]    New:     156 124 123 122 121 153 185 217 249 281 313 345 377 409 408 440 439 438 470 469 468 467 466 465 465 465 465 464 496 528 529 561 593 625 657 689 688 720 752 784 783 815 847 848 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 156 124 123 122 121 153 185 217 249 281 313 345 377 409 408 
[DBG]    Local path (in submap): 440 439 438 470 469 
[DBG]    Suffix (out of submap): 468 467 466 465 465 465 465 464 496 528 529 561 593 625 657 689 688 720 752 784 783 815 847 848 
[DBG]  Original agent path length 44 je: 44
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 4: 156, 124, 123, 122, 121, 153, 185, 217, 249, 281, 313, 345, 377, 409, 408, 440, 439, 438, 470, 469, 468, 467, 466, 465, 465, 465, 465, 464, 496, 528, 529, 561, 593, 625, 657, 689, 688, 720, 752, 784, 783, 815, 847, 848, 
[DBG]  Path for agent 44 updated, resulting length: 44
[DBG]  Update the agent path 62 | Original local length: 1 | New local length: 1
[DBG]  agent 62 t=0 => decoded (sx,sy)=(0,1) => global_id=438
[DBG]  Complete path of agent 62:
[DBG]    Original: 753 721 689 657 658 659 627 628 596 597 565 566 534 502 470 438 406 405 406 
[DBG]    New:     753 721 689 657 658 659 627 628 596 597 565 566 534 502 470 438 406 405 406 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 753 721 689 657 658 659 627 628 596 597 565 566 534 502 470 
[DBG]    Local path (in submap): 438 
[DBG]    Suffix (out of submap): 406 405 406 
[DBG]  Original agent path length 62 je: 19
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 5: 753, 721, 689, 657, 658, 659, 627, 628, 596, 597, 565, 566, 534, 502, 470, 438, 406, 405, 406, 
[DBG]  Path for agent 62 updated, resulting length: 19
[DBG]  Update the agent path 86 | Original local length: 7 | New local length: 7
[DBG]  agent 86 t=0 => decoded (sx,sy)=(4,0) => global_id=565
[DBG]  agent 86 t=1 => decoded (sx,sy)=(4,1) => global_id=566
[DBG]  agent 86 t=2 => decoded (sx,sy)=(3,1) => global_id=534
[DBG]  agent 86 t=3 => decoded (sx,sy)=(2,1) => global_id=502
[DBG]  agent 86 t=4 => decoded (sx,sy)=(2,2) => global_id=503
[DBG]  agent 86 t=5 => decoded (sx,sy)=(2,3) => global_id=504
[DBG]  agent 86 t=6 => decoded (sx,sy)=(2,4) => global_id=505
[DBG]  Complete path of agent 86:
[DBG]    Original: 781 782 750 718 686 654 655 656 657 658 659 660 628 596 597 565 533 534 502 503 504 505 506 538 539 540 541 
[DBG]    New:     781 782 750 718 686 654 655 656 657 658 659 660 628 596 597 565 566 534 502 503 504 505 506 538 539 540 541 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 781 782 750 718 686 654 655 656 657 658 659 660 628 596 597 
[DBG]    Local path (in submap): 565 566 534 502 503 504 505 
[DBG]    Suffix (out of submap): 506 538 539 540 541 
[DBG]  Original agent path length 86 je: 27
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 6: 781, 782, 750, 718, 686, 654, 655, 656, 657, 658, 659, 660, 628, 596, 597, 565, 566, 534, 502, 503, 504, 505, 506, 538, 539, 540, 541, 
[DBG]  Path for agent 86 updated, resulting length: 27
[DBG]  Update the agent path 91 | Original local length: 4 | New local length: 4
[DBG]  agent 91 t=0 => decoded (sx,sy)=(2,2) => global_id=503
[DBG]  agent 91 t=1 => decoded (sx,sy)=(2,3) => global_id=504
[DBG]  agent 91 t=2 => decoded (sx,sy)=(2,4) => global_id=505
[DBG]  agent 91 t=3 => decoded (sx,sy)=(1,4) => global_id=473
[DBG]  Complete path of agent 91:
[DBG]    Original: 787 788 756 757 756 724 692 660 661 629 597 565 566 534 502 503 504 472 473 474 475 476 477 445 413 381 
[DBG]    New:     787 788 756 757 756 724 692 660 661 629 597 565 566 534 502 503 504 505 473 474 475 476 477 445 413 381 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 787 788 756 757 756 724 692 660 661 629 597 565 566 534 502 
[DBG]    Local path (in submap): 503 504 505 473 
[DBG]    Suffix (out of submap): 474 475 476 477 445 413 381 
[DBG]  Original agent path length 91 je: 26
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 7: 787, 788, 756, 757, 756, 724, 692, 660, 661, 629, 597, 565, 566, 534, 502, 503, 504, 505, 473, 474, 475, 476, 477, 445, 413, 381, 
[DBG]  Path for agent 91 updated, resulting length: 26
[DBG]  Update the agent path 100 | Original local length: 2 | New local length: 2
[DBG]  agent 100 t=0 => decoded (sx,sy)=(0,0) => global_id=437
[DBG]  agent 100 t=1 => decoded (sx,sy)=(1,0) => global_id=469
[DBG]  Complete path of agent 100:
[DBG]    Original: 287 286 285 317 349 348 380 379 378 377 376 375 407 439 438 437 469 468 467 499 499 498 530 529 561 593 594 593 625 657 689 688 720 720 752 751 783 815 847 879 878 877 909 941 973 1005 1004 1003 
[DBG]    New:     287 286 285 317 349 348 380 379 378 377 376 375 407 439 438 437 469 468 467 499 499 498 530 529 561 593 594 593 625 657 689 688 720 720 752 751 783 815 847 879 878 877 909 941 973 1005 1004 1003 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 287 286 285 317 349 348 380 379 378 377 376 375 407 439 438 
[DBG]    Local path (in submap): 437 469 
[DBG]    Suffix (out of submap): 468 467 499 499 498 530 529 561 593 594 593 625 657 689 688 720 720 752 751 783 815 847 879 878 877 909 941 973 1005 1004 1003 
[DBG]  Original agent path length 100 je: 48
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 8: 287, 286, 285, 317, 349, 348, 380, 379, 378, 377, 376, 375, 407, 439, 438, 437, 469, 468, 467, 499, 499, 498, 530, 529, 561, 593, 594, 593, 625, 657, 689, 688, 720, 720, 752, 751, 783, 815, 847, 879, 878, 877, 909, 941, 973, 1005, 1004, 1003, 
[DBG]  Path for agent 100 updated, resulting length: 48
[DBG]  Update the agent path 113 | Original local length: 2 | New local length: 2
[DBG]  agent 113 t=0 => decoded (sx,sy)=(1,1) => global_id=470
[DBG]  agent 113 t=1 => decoded (sx,sy)=(0,1) => global_id=438
[DBG]  Complete path of agent 113:
[DBG]    Original: 529 530 498 466 467 467 467 467 467 467 467 467 467 468 469 470 438 406 407 408 376 377 378 379 380 348 349 317 318 319 287 255 254 222 
[DBG]    New:     529 530 498 466 467 467 467 467 467 467 467 467 467 468 469 470 438 406 407 408 376 377 378 379 380 348 349 317 318 319 287 255 254 222 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 529 530 498 466 467 467 467 467 467 467 467 467 467 468 469 
[DBG]    Local path (in submap): 470 438 
[DBG]    Suffix (out of submap): 406 407 408 376 377 378 379 380 348 349 317 318 319 287 255 254 222 
[DBG]  Original agent path length 113 je: 34
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 9: 529, 530, 498, 466, 467, 467, 467, 467, 467, 467, 467, 467, 467, 468, 469, 470, 438, 406, 407, 408, 376, 377, 378, 379, 380, 348, 349, 317, 318, 319, 287, 255, 254, 222, 
[DBG]  Path for agent 113 updated, resulting length: 34
[DBG]  Paths successfully updated.
[DBG]  (LNS.cpp) New path for agent 2: 
[DBG]  59, 91, 90, 89, 89, 121, 153, 185, 217, 249, 281, 313, 345, 377, 409, 441, 473, 474, 475, 507, 539, 538, 570, 602, 603, 604, 636, 637, 638, 670, 702, 701, 733, 732, 764, 
[DBG]  (LNS.cpp) New path for agent 3: 
[DBG]  468, 468, 468, 468, 468, 468, 468, 468, 468, 468, 468, 468, 468, 469, 501, 501, 533, 565, 597, 629, 661, 660, 692, 692, 692, 692, 692, 724, 756, 788, 820, 819, 818, 817, 849, 881, 913, 913, 912, 
[DBG]  (LNS.cpp) New path for agent 10: 
[DBG]  588, 589, 590, 591, 592, 593, 625, 657, 658, 659, 627, 628, 596, 597, 565, 566, 534, 502, 503, 504, 505, 506, 474, 475, 476, 
[DBG]  (LNS.cpp) New path for agent 43: 
[DBG]  414, 413, 445, 444, 443, 475, 507, 507, 506, 505, 504, 503, 502, 501, 533, 534, 502, 501, 469, 468, 467, 466, 465, 464, 463, 462, 494, 526, 525, 524, 523, 522, 521, 520, 519, 487, 519, 551, 550, 582, 581, 613, 645, 677, 709, 741, 740, 739, 707, 
[DBG]  (LNS.cpp) New path for agent 44: 
[DBG]  156, 124, 123, 122, 121, 153, 185, 217, 249, 281, 313, 345, 377, 409, 408, 440, 439, 438, 470, 469, 468, 467, 466, 465, 465, 465, 465, 464, 496, 528, 529, 561, 593, 625, 657, 689, 688, 720, 752, 784, 783, 815, 847, 848, 
[DBG]  (LNS.cpp) New path for agent 62: 
[DBG]  753, 721, 689, 657, 658, 659, 627, 628, 596, 597, 565, 566, 534, 502, 470, 438, 406, 405, 406, 
[DBG]  (LNS.cpp) New path for agent 86: 
[DBG]  781, 782, 750, 718, 686, 654, 655, 656, 657, 658, 659, 660, 628, 596, 597, 565, 566, 534, 502, 503, 504, 505, 506, 538, 539, 540, 541, 
[DBG]  (LNS.cpp) New path for agent 91: 
[DBG]  787, 788, 756, 757, 756, 724, 692, 660, 661, 629, 597, 565, 566, 534, 502, 503, 504, 505, 473, 474, 475, 476, 477, 445, 413, 381, 
[DBG]  (LNS.cpp) New path for agent 100: 
[DBG]  287, 286, 285, 317, 349, 348, 380, 379, 378, 377, 376, 375, 407, 439, 438, 437, 469, 468, 467, 499, 499, 498, 530, 529, 561, 593, 594, 593, 625, 657, 689, 688, 720, 720, 752, 751, 783, 815, 847, 879, 878, 877, 909, 941, 973, 1005, 1004, 1003, 
[DBG]  (LNS.cpp) New path for agent 113: 
[DBG]  529, 530, 498, 466, 467, 467, 467, 467, 467, 467, 467, 467, 467, 468, 469, 470, 438, 406, 407, 408, 376, 377, 378, 379, 380, 348, 349, 317, 318, 319, 287, 255, 254, 222, 
[DBG]  component_weights = {0.345406, 0.0987067, 0.103222, 0.452665}
[DBG]  opSuccess value: 1
[STAT] neighbor.sum_of_costs before recomputation: 336
[STAT] neighbor.old_sum_of_costs before recomputation: 337
[STAT] sum_of_costs before recomputation: 4229
[DBG]  Validate solution immediately after SAT success.
[WARNING] Problem after SAT: Vertex conflict between agents 30 and 3 at location 660 at timestep 21
[DBG]  Attempting immediate repair via init_lns because problem occurred after SAT (should be applied only for conflicts...).
[DBG]  Passing 150 agents to init_lns (skip=true).
[DBG]  path_table contents for selected agents (neighbor.agents):
[DBG]    Agent 2 => controlling path length=35
[DBG]    Agent 3 => controlling path length=39
[DBG]    Agent 10 => controlling path length=25
[DBG]    Agent 43 => controlling path length=49
[DBG]    Agent 44 => controlling path length=44
[DBG]    Agent 62 => controlling path length=19
[DBG]    Agent 86 => controlling path length=27
[DBG]    Agent 91 => controlling path length=26
[DBG]    Agent 100 => controlling path length=48
[DBG]    Agent 113 => controlling path length=34
[DBG]  hodnota skip_initial_solution=1
[DBG]  We skip initialSolution => call buildCollisionData()
[DBG]  buildCollisionData() called â€“ skip_initial_solution case.
[DBG]  Agents.size()=150, collision_graph.size()=150
[DBG]  agent 3 => updateCollidingPairs => foundCollision
[DBG]  agent 30 => updateCollidingPairs => foundCollision
[DBG]  agent 43 => updateCollidingPairs => foundCollision
[DBG]  agent 54 => updateCollidingPairs => foundCollision
[DBG]  agent 57 => updateCollidingPairs => foundCollision
[DBG]  agent 84 => updateCollidingPairs => foundCollision
[DBG]  agent 111 => updateCollidingPairs => foundCollision
[DBG]  Conflicting agent pairs:
[DBG]  agent 3 is in conflict with agent 30
[DBG]  agent 3 is in conflict with agent 57
[DBG]  agent 3 is in conflict with agent 84
[DBG]  agent 3 is in conflict with agent 111
[DBG]  agent 43 is in conflict with agent 54
[DBG]  buildCollisionData() => sum_of_costs=4228, num_of_colliding_pairs=5
[DBG]  buildCollisionData done => sum_of_costs=4228, num_of_colliding_pairs=5
[DBG]  sum_of_cost hodnota: 4228
[DBG]  After skip/init build => iteration_stats.back(): sum_of_costs=4228, collisions=5
[DEBUG] Using default neighbor generation strategy for conflicts: 0
[DEBUG] Using default neighbor generation strategy for conflicts: 2
	InitLNS(PP): runtime = 0.010297, iterations = 3, colliding pairs = 0, initial colliding pairs = 5, solution cost = 4218, initial solution cost = 4228, failed iterations = 0
[DBG]  init_lns->sum_of_costs after init_lns->run: 4218
[DBG]  sum_of_costs after assignment from init_lns->run: 4218
[DBG]  Recomputing sum_of_cost by dividing neighbor.sum_of_costs and neighbor.old_sum_of_costs
[STAT] sum_of_costs after recomputation: 4218
[STAT] Iteration 138
[DBG]  Using SAT operator (destroy+repair SAT).
[DBG]  ====================
[DBG]  SAT destroy operator called.
[DBG]  SAT heuristic: 2
[DBG]  key_agent_id: 147
[DBG]  key_agent_id global path length: 37
[DBG]  Submap content (global positions):
[DBG]  143 144 145 146 147 
[DBG]  175 176 177 178 179 
[DBG]  207 208 209 210 211 
[DBG]  239 240 241 242 243 
[DBG]  271 272 273 274 275 
[DBG]  Map content with agents and obstacles:
[DBG]  X . X . . 
[DBG]  X . . . . 
[DBG]  . . A . X 
[DBG]  . A . . A 
[DBG]  . X A A . 
[DBG]  content of the map structure that we pass to the SAT solver:
[DBG]  -1  1  -1  1  1  
[DBG]  -1  1  1  1  1  
[DBG]  1  1  1  1  -1  
[DBG]  1  1  1  1  1  
[DBG]  1  -1  1  1  1  
[DBG]  Identifying agents in a submap for rescheduling (when key_agent is there at the time 21):
[DBG]  Agent 16 found intervals in the sub-map:
[DBG]   [21..21]
[DBG]  Agent 16 (interval in submap: [21..21]) contains time 21, added to replan.
[DBG]  Agent 34 found intervals in the sub-map:
[DBG]   [18..23]
[DBG]  Agent 34 (interval in submap: [18..23]) contains time 21, added to replan.
[DBG]  Agent 88 found intervals in the sub-map:
[DBG]   [20..23]
[DBG]  Agent 88 (interval in submap: [20..23]) contains time 21, added to replan.
[DBG]  Agent 92 found intervals in the sub-map:
[DBG]   [21..26]
[DBG]  Agent 92 (interval in submap: [21..26]) contains time 21, added to replan.
[DBG]  Agent 147 found intervals in the sub-map:
[DBG]   [18..23]
[DBG]  Agent 147 (interval in submap: [18..23]) contains time 21, added to replan.
[DBG]  Agent 149 found intervals in the sub-map:
[DBG]  
[DBG]  Agent 149 is not in sub-map at time 21 (intervals: 
[DBG]  )
[DBG]  Agent 16 | Start (global): 274 -> (local): (4, 3) at time 21 | Goal (global): 274 -> (local): (4, 3) at time 21
[DBG]  Agent 34 | Start (global): 240 -> (local): (3, 1) at time 21 | Goal (global): 271 -> (local): (4, 0) at time 23
[DBG]  Agent 88 | Start (global): 273 -> (local): (4, 2) at time 21 | Goal (global): 209 -> (local): (2, 2) at time 23
[DBG]  Agent 92 | Start (global): 243 -> (local): (3, 4) at time 21 | Goal (global): 207 -> (local): (2, 0) at time 26
[DBG]  Agent 147 | Start (global): 209 -> (local): (2, 2) at time 21 | Goal (global): 207 -> (local): (2, 0) at time 23
[DBG]  [REPAIR] SAT destroy operator called.
[DBG]  [REPAIR] SAT operator â€“ launching subproblem FOR OPTIMIZATION.
[DBG]  Creating local paths (sx, sy) in the submap for T_sync = 21
[DBG]    Agent 16 (global paths from T=21 to 21) has local path: (4,3) 
[DBG]    Agent 34 (global paths from T=21 to 23) has local path: (3,1) (3,0) (4,0) 
[DBG]    Agent 88 (global paths from T=21 to 23) has local path: (4,2) (3,2) (2,2) 
[DBG]    Agent 92 (global paths from T=21 to 26) has local path: (3,4) (3,3) (3,2) (3,1) (2,1) (2,0) 
[DBG]    Agent 147 (global paths from T=21 to 23) has local path: (2,2) (2,1) (2,0) 
[DBG]  Checking input data for SAT solver:
[DBG]    - Number of agents to replan: 5
[DBG]  Agent 16 has the original local path length: 1 => Start (4,3), Goal (4,3)
[DBG]  Agent 34 has the original local path length: 3 => Start (3,1), Goal (4,0)
[DBG]  Agent 88 has the original local path length: 3 => Start (4,2), Goal (2,2)
[DBG]  Agent 92 has the original local path length: 6 => Start (3,4), Goal (2,0)
[DBG]  Agent 147 has the original local path length: 3 => Start (2,2), Goal (2,0)
[DBG]  Start position: (4, 3), (3, 1), (4, 2), (3, 4), (2, 2), 
[DBG]  Goal position: (4, 3), (4, 0), (2, 2), (2, 0), (2, 0), 
[DBG]  SAT instance and solver created.
Currently solving
Instance name: scen
Map name: map
Encoding used: disappear_at_goal
SAT solver used: Kissat
Optimizing function: sum of costs
Number of agents: 5
Mks LB: 6
SoC LB: 16
Delta: 0
Remaining time: 300000 [ms]

Vertex conflict! Agents 0, 1, timestep 3, location 0
Swapping conflict! Agents 0, 1, timestep 3, edge (0,0)
Vertex conflict! Agents 0, 1, timestep 4, location 0
Swapping conflict! Agents 0, 1, timestep 4, edge (0,0)
Vertex conflict! Agents 0, 1, timestep 5, location 0
Vertex conflict! Agents 0, 2, timestep 3, location 0
Swapping conflict! Agents 0, 2, timestep 3, edge (0,0)
Vertex conflict! Agents 0, 2, timestep 4, location 0
Swapping conflict! Agents 0, 2, timestep 4, edge (0,0)
Vertex conflict! Agents 0, 2, timestep 5, location 0
Vertex conflict! Agents 0, 4, timestep 3, location 0
Swapping conflict! Agents 0, 4, timestep 3, edge (0,0)
Vertex conflict! Agents 0, 4, timestep 4, location 0
Swapping conflict! Agents 0, 4, timestep 4, edge (0,0)
Vertex conflict! Agents 0, 4, timestep 5, location 0
Vertex conflict! Agents 1, 2, timestep 3, location 0
Swapping conflict! Agents 1, 2, timestep 3, edge (0,0)
Vertex conflict! Agents 1, 2, timestep 4, location 0
Swapping conflict! Agents 1, 2, timestep 4, edge (0,0)
Vertex conflict! Agents 1, 2, timestep 5, location 0
Vertex conflict! Agents 1, 4, timestep 3, location 0
Swapping conflict! Agents 1, 4, timestep 3, edge (0,0)
Vertex conflict! Agents 1, 4, timestep 4, location 0
Swapping conflict! Agents 1, 4, timestep 4, edge (0,0)
Vertex conflict! Agents 1, 4, timestep 5, location 0
Vertex conflict! Agents 2, 4, timestep 3, location 0
Swapping conflict! Agents 2, 4, timestep 3, edge (0,0)
Vertex conflict! Agents 2, 4, timestep 4, location 0
Swapping conflict! Agents 2, 4, timestep 4, edge (0,0)
Vertex conflict! Agents 2, 4, timestep 5, location 0
Found plan [agents = 5] [timesteps = 6]
Agent #0 : 18 0 0 0 0 0 
Agent #1 : 12 11 16 0 0 0 
Agent #2 : 17 13 9 0 0 0 
Agent #3 : 15 14 13 12 11 7 
Agent #4 : 9 8 7 0 0 0 

[STAT] Solver returned: 0
[DBG]  Agent (index) 16 | New local path (submap idx):
[DBG]  18 
[DBG]  Agent (index) 34 | New local path (submap idx):
[DBG]  12 11 16 
[DBG]  Agent (index) 88 | New local path (submap idx):
[DBG]  17 13 9 
[DBG]  Agent (index) 92 | New local path (submap idx):
[DBG]  15 14 13 12 11 7 
[DBG]  Agent (index) 147 | New local path (submap idx):
[DBG]  9 8 7 
[DBG]  Update the agent path 16 | Original local length: 1 | New local length: 1
[DBG]  agent 16 t=0 => decoded (sx,sy)=(4,3) => global_id=274
[DBG]  Complete path of agent 16:
[DBG]    Original: 454 422 423 424 425 426 427 428 429 430 430 431 432 400 368 367 335 336 337 338 306 274 
[DBG]    New:     454 422 423 424 425 426 427 428 429 430 430 431 432 400 368 367 335 336 337 338 306 274 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 454 422 423 424 425 426 427 428 429 430 430 431 432 400 368 367 335 336 337 338 306 
[DBG]    Local path (in submap): 274 
[DBG]    Suffix (out of submap): 
[DBG]  Original agent path length 16 je: 22
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 0: 454, 422, 423, 424, 425, 426, 427, 428, 429, 430, 430, 431, 432, 400, 368, 367, 335, 336, 337, 338, 306, 274, 
[DBG]  Path for agent 16 updated, resulting length: 22
[DBG]  Update the agent path 34 | Original local length: 3 | New local length: 3
[DBG]  agent 34 t=0 => decoded (sx,sy)=(3,1) => global_id=240
[DBG]  agent 34 t=1 => decoded (sx,sy)=(3,0) => global_id=239
[DBG]  agent 34 t=2 => decoded (sx,sy)=(4,0) => global_id=271
[DBG]  Complete path of agent 34:
[DBG]    Original: 63 62 61 60 59 91 90 89 121 120 119 151 183 215 214 213 212 244 243 242 241 240 239 271 270 269 301 
[DBG]    New:     63 62 61 60 59 91 90 89 121 120 119 151 183 215 214 213 212 244 243 242 241 240 239 271 270 269 301 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 63 62 61 60 59 91 90 89 121 120 119 151 183 215 214 213 212 244 243 242 241 
[DBG]    Local path (in submap): 240 239 271 
[DBG]    Suffix (out of submap): 270 269 301 
[DBG]  Original agent path length 34 je: 27
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 1: 63, 62, 61, 60, 59, 91, 90, 89, 121, 120, 119, 151, 183, 215, 214, 213, 212, 244, 243, 242, 241, 240, 239, 271, 270, 269, 301, 
[DBG]  Path for agent 34 updated, resulting length: 27
[DBG]  Update the agent path 88 | Original local length: 3 | New local length: 3
[DBG]  agent 88 t=0 => decoded (sx,sy)=(4,2) => global_id=273
[DBG]  agent 88 t=1 => decoded (sx,sy)=(3,2) => global_id=241
[DBG]  agent 88 t=2 => decoded (sx,sy)=(2,2) => global_id=209
[DBG]  Complete path of agent 88:
[DBG]    Original: 783 751 719 687 655 623 591 592 560 528 496 464 465 433 401 369 337 337 338 306 274 273 241 209 
[DBG]    New:     783 751 719 687 655 623 591 592 560 528 496 464 465 433 401 369 337 337 338 306 274 273 241 209 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 783 751 719 687 655 623 591 592 560 528 496 464 465 433 401 369 337 337 338 306 274 
[DBG]    Local path (in submap): 273 241 209 
[DBG]    Suffix (out of submap): 
[DBG]  Original agent path length 88 je: 24
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 2: 783, 751, 719, 687, 655, 623, 591, 592, 560, 528, 496, 464, 465, 433, 401, 369, 337, 337, 338, 306, 274, 273, 241, 209, 
[DBG]  Path for agent 88 updated, resulting length: 24
[DBG]  Update the agent path 92 | Original local length: 6 | New local length: 6
[DBG]  agent 92 t=0 => decoded (sx,sy)=(3,4) => global_id=243
[DBG]  agent 92 t=1 => decoded (sx,sy)=(3,3) => global_id=242
[DBG]  agent 92 t=2 => decoded (sx,sy)=(3,2) => global_id=241
[DBG]  agent 92 t=3 => decoded (sx,sy)=(3,1) => global_id=240
[DBG]  agent 92 t=4 => decoded (sx,sy)=(3,0) => global_id=239
[DBG]  agent 92 t=5 => decoded (sx,sy)=(2,0) => global_id=207
[DBG]  Complete path of agent 92:
[DBG]    Original: 667 635 603 602 570 538 506 474 473 472 440 408 376 344 312 311 279 278 277 276 244 243 242 241 240 208 207 206 205 173 172 140 139 138 106 105 104 136 135 134 133 165 164 163 131 99 98 
[DBG]    New:     667 635 603 602 570 538 506 474 473 472 440 408 376 344 312 311 279 278 277 276 244 243 242 241 240 239 207 206 205 173 172 140 139 138 106 105 104 136 135 134 133 165 164 163 131 99 98 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 667 635 603 602 570 538 506 474 473 472 440 408 376 344 312 311 279 278 277 276 244 
[DBG]    Local path (in submap): 243 242 241 240 239 207 
[DBG]    Suffix (out of submap): 206 205 173 172 140 139 138 106 105 104 136 135 134 133 165 164 163 131 99 98 
[DBG]  Original agent path length 92 je: 47
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 3: 667, 635, 603, 602, 570, 538, 506, 474, 473, 472, 440, 408, 376, 344, 312, 311, 279, 278, 277, 276, 244, 243, 242, 241, 240, 239, 207, 206, 205, 173, 172, 140, 139, 138, 106, 105, 104, 136, 135, 134, 133, 165, 164, 163, 131, 99, 98, 
[DBG]  Path for agent 92 updated, resulting length: 47
[DBG]  Update the agent path 147 | Original local length: 3 | New local length: 3
[DBG]  agent 147 t=0 => decoded (sx,sy)=(2,2) => global_id=209
[DBG]  agent 147 t=1 => decoded (sx,sy)=(2,1) => global_id=208
[DBG]  agent 147 t=2 => decoded (sx,sy)=(2,0) => global_id=207
[DBG]  Complete path of agent 147:
[DBG]    Original: 284 252 220 188 156 124 123 122 90 89 121 120 119 151 150 149 181 180 179 178 210 209 208 207 206 205 204 203 235 234 266 265 297 296 295 294 326 
[DBG]    New:     284 252 220 188 156 124 123 122 90 89 121 120 119 151 150 149 181 180 179 178 210 209 208 207 206 205 204 203 235 234 266 265 297 296 295 294 326 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 284 252 220 188 156 124 123 122 90 89 121 120 119 151 150 149 181 180 179 178 210 
[DBG]    Local path (in submap): 209 208 207 
[DBG]    Suffix (out of submap): 206 205 204 203 235 234 266 265 297 296 295 294 326 
[DBG]  Original agent path length 147 je: 37
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 4: 284, 252, 220, 188, 156, 124, 123, 122, 90, 89, 121, 120, 119, 151, 150, 149, 181, 180, 179, 178, 210, 209, 208, 207, 206, 205, 204, 203, 235, 234, 266, 265, 297, 296, 295, 294, 326, 
[DBG]  Path for agent 147 updated, resulting length: 37
[DBG]  Paths successfully updated.
[DBG]  (LNS.cpp) New path for agent 16: 
[DBG]  454, 422, 423, 424, 425, 426, 427, 428, 429, 430, 430, 431, 432, 400, 368, 367, 335, 336, 337, 338, 306, 274, 
[DBG]  (LNS.cpp) New path for agent 34: 
[DBG]  63, 62, 61, 60, 59, 91, 90, 89, 121, 120, 119, 151, 183, 215, 214, 213, 212, 244, 243, 242, 241, 240, 239, 271, 270, 269, 301, 
[DBG]  (LNS.cpp) New path for agent 88: 
[DBG]  783, 751, 719, 687, 655, 623, 591, 592, 560, 528, 496, 464, 465, 433, 401, 369, 337, 337, 338, 306, 274, 273, 241, 209, 
[DBG]  (LNS.cpp) New path for agent 92: 
[DBG]  667, 635, 603, 602, 570, 538, 506, 474, 473, 472, 440, 408, 376, 344, 312, 311, 279, 278, 277, 276, 244, 243, 242, 241, 240, 239, 207, 206, 205, 173, 172, 140, 139, 138, 106, 105, 104, 136, 135, 134, 133, 165, 164, 163, 131, 99, 98, 
[DBG]  (LNS.cpp) New path for agent 147: 
[DBG]  284, 252, 220, 188, 156, 124, 123, 122, 90, 89, 121, 120, 119, 151, 150, 149, 181, 180, 179, 178, 210, 209, 208, 207, 206, 205, 204, 203, 235, 234, 266, 265, 297, 296, 295, 294, 326, 
[DBG]  component_weights = {0.349988, 0.0980157, 0.1025, 0.449496}
[DBG]  opSuccess value: 1
[STAT] neighbor.sum_of_costs before recomputation: 152
[STAT] neighbor.old_sum_of_costs before recomputation: 152
[STAT] sum_of_costs before recomputation: 4218
[DBG]  Validate solution immediately after SAT success.
[DBG]  No problems after SAT replan.
[DBG]  Recomputing sum_of_cost by dividing neighbor.sum_of_costs and neighbor.old_sum_of_costs
[STAT] sum_of_costs after recomputation: 4218
[STAT] Iteration 139
[DBG]  Using SAT operator (destroy+repair SAT).
[DBG]  ====================
[DBG]  SAT destroy operator called.
[DBG]  SAT heuristic: 2
[DBG]  key_agent_id: 139
[DBG]  key_agent_id global path length: 37
[DBG]  Submap content (global positions):
[DBG]  218 219 220 221 222 
[DBG]  250 251 252 253 254 
[DBG]  282 283 284 285 286 
[DBG]  314 315 316 317 318 
[DBG]  346 347 348 349 350 
[DBG]  Map content with agents and obstacles:
[DBG]  . X . . . 
[DBG]  X . A X . 
[DBG]  X . A . A 
[DBG]  . X X . . 
[DBG]  X . . . . 
[DBG]  content of the map structure that we pass to the SAT solver:
[DBG]  1  -1  1  1  1  
[DBG]  -1  1  1  -1  1  
[DBG]  -1  1  1  1  1  
[DBG]  1  -1  -1  1  1  
[DBG]  -1  1  1  1  1  
[DBG]  Identifying agents in a submap for rescheduling (when key_agent is there at the time 1):
[DBG]  Agent 77 found intervals in the sub-map:
[DBG]  
[DBG]  Agent 77 is not in sub-map at time 1 (intervals: 
[DBG]  )
[DBG]  Agent 100 found intervals in the sub-map:
[DBG]   [1..5]
[DBG]  Agent 100 (interval in submap: [1..5]) contains time 1, added to replan.
[DBG]  Agent 139 found intervals in the sub-map:
[DBG]   [0..3]
[DBG]  Agent 139 (interval in submap: [0..3]) contains time 1, added to replan.
[DBG]  Agent 147 found intervals in the sub-map:
[DBG]   [0..2]
[DBG]  Agent 147 (interval in submap: [0..2]) contains time 1, added to replan.
[DBG]  Agent 100 | Start (global): 286 -> (local): (2, 4) at time 1 | Goal (global): 348 -> (local): (4, 2) at time 5
[DBG]  Agent 139 | Start (global): 284 -> (local): (2, 2) at time 1 | Goal (global): 220 -> (local): (0, 2) at time 3
[DBG]  Agent 147 | Start (global): 252 -> (local): (1, 2) at time 1 | Goal (global): 220 -> (local): (0, 2) at time 2
[DBG]  [REPAIR] SAT destroy operator called.
[DBG]  [REPAIR] SAT operator â€“ launching subproblem FOR OPTIMIZATION.
[DBG]  Creating local paths (sx, sy) in the submap for T_sync = 1
[DBG]    Agent 100 (global paths from T=1 to 5) has local path: (2,4) (2,3) (3,3) (4,3) (4,2) 
[DBG]    Agent 139 (global paths from T=1 to 3) has local path: (2,2) (1,2) (0,2) 
[DBG]    Agent 147 (global paths from T=1 to 2) has local path: (1,2) (0,2) 
[DBG]  Checking input data for SAT solver:
[DBG]    - Number of agents to replan: 3
[DBG]  Agent 100 has the original local path length: 5 => Start (2,4), Goal (4,2)
[DBG]  Agent 139 has the original local path length: 3 => Start (2,2), Goal (0,2)
[DBG]  Agent 147 has the original local path length: 2 => Start (1,2), Goal (0,2)
[DBG]  Start position: (2, 4), (2, 2), (1, 2), 
[DBG]  Goal position: (4, 2), (0, 2), (0, 2), 
[DBG]  SAT instance and solver created.
Currently solving
Instance name: scen
Map name: map
Encoding used: disappear_at_goal
SAT solver used: Kissat
Optimizing function: sum of costs
Number of agents: 3
Mks LB: 5
SoC LB: 10
Delta: 0
Remaining time: 300000 [ms]

Vertex conflict! Agents 1, 2, timestep 3, location 0
Swapping conflict! Agents 1, 2, timestep 3, edge (0,0)
Vertex conflict! Agents 1, 2, timestep 4, location 0
Found plan [agents = 3] [timesteps = 5]
Agent #0 : 10 13 17 16 15 
Agent #1 : 8 5 1 0 0 
Agent #2 : 5 1 0 0 0 

[STAT] Solver returned: 0
[DBG]  Agent (index) 100 | New local path (submap idx):
[DBG]  10 13 17 16 15 
[DBG]  Agent (index) 139 | New local path (submap idx):
[DBG]  8 5 1 
[DBG]  Agent (index) 147 | New local path (submap idx):
[DBG]  5 1 
[DBG]  Update the agent path 100 | Original local length: 5 | New local length: 5
[DBG]  agent 100 t=0 => decoded (sx,sy)=(2,4) => global_id=286
[DBG]  agent 100 t=1 => decoded (sx,sy)=(3,4) => global_id=318
[DBG]  agent 100 t=2 => decoded (sx,sy)=(4,4) => global_id=350
[DBG]  agent 100 t=3 => decoded (sx,sy)=(4,3) => global_id=349
[DBG]  agent 100 t=4 => decoded (sx,sy)=(4,2) => global_id=348
[DBG]  Complete path of agent 100:
[DBG]    Original: 287 286 285 317 349 348 380 379 378 377 376 375 407 439 438 437 469 468 467 499 499 498 530 529 561 593 594 593 625 657 689 688 720 720 752 751 783 815 847 879 878 877 909 941 973 1005 1004 1003 
[DBG]    New:     287 286 318 350 349 348 380 379 378 377 376 375 407 439 438 437 469 468 467 499 499 498 530 529 561 593 594 593 625 657 689 688 720 720 752 751 783 815 847 879 878 877 909 941 973 1005 1004 1003 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 287 
[DBG]    Local path (in submap): 286 318 350 349 348 
[DBG]    Suffix (out of submap): 380 379 378 377 376 375 407 439 438 437 469 468 467 499 499 498 530 529 561 593 594 593 625 657 689 688 720 720 752 751 783 815 847 879 878 877 909 941 973 1005 1004 1003 
[DBG]  Original agent path length 100 je: 48
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 0: 287, 286, 318, 350, 349, 348, 380, 379, 378, 377, 376, 375, 407, 439, 438, 437, 469, 468, 467, 499, 499, 498, 530, 529, 561, 593, 594, 593, 625, 657, 689, 688, 720, 720, 752, 751, 783, 815, 847, 879, 878, 877, 909, 941, 973, 1005, 1004, 1003, 
[DBG]  Path for agent 100 updated, resulting length: 48
[DBG]  Update the agent path 139 | Original local length: 3 | New local length: 3
[DBG]  agent 139 t=0 => decoded (sx,sy)=(2,2) => global_id=284
[DBG]  agent 139 t=1 => decoded (sx,sy)=(1,2) => global_id=252
[DBG]  agent 139 t=2 => decoded (sx,sy)=(0,2) => global_id=220
[DBG]  Complete path of agent 139:
[DBG]    Original: 285 284 252 220 188 156 124 123 122 121 120 119 118 86 85 84 83 82 50 49 48 47 46 45 13 12 11 43 42 41 40 8 7 6 5 4 3 
[DBG]    New:     285 284 252 220 188 156 124 123 122 121 120 119 118 86 85 84 83 82 50 49 48 47 46 45 13 12 11 43 42 41 40 8 7 6 5 4 3 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 285 
[DBG]    Local path (in submap): 284 252 220 
[DBG]    Suffix (out of submap): 188 156 124 123 122 121 120 119 118 86 85 84 83 82 50 49 48 47 46 45 13 12 11 43 42 41 40 8 7 6 5 4 3 
[DBG]  Original agent path length 139 je: 37
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 1: 285, 284, 252, 220, 188, 156, 124, 123, 122, 121, 120, 119, 118, 86, 85, 84, 83, 82, 50, 49, 48, 47, 46, 45, 13, 12, 11, 43, 42, 41, 40, 8, 7, 6, 5, 4, 3, 
[DBG]  Path for agent 139 updated, resulting length: 37
[DBG]  Update the agent path 147 | Original local length: 2 | New local length: 2
[DBG]  agent 147 t=0 => decoded (sx,sy)=(1,2) => global_id=252
[DBG]  agent 147 t=1 => decoded (sx,sy)=(0,2) => global_id=220
[DBG]  Complete path of agent 147:
[DBG]    Original: 284 252 220 188 156 124 123 122 90 89 121 120 119 151 150 149 181 180 179 178 210 209 208 207 206 205 204 203 235 234 266 265 297 296 295 294 326 
[DBG]    New:     284 252 220 188 156 124 123 122 90 89 121 120 119 151 150 149 181 180 179 178 210 209 208 207 206 205 204 203 235 234 266 265 297 296 295 294 326 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 284 
[DBG]    Local path (in submap): 252 220 
[DBG]    Suffix (out of submap): 188 156 124 123 122 90 89 121 120 119 151 150 149 181 180 179 178 210 209 208 207 206 205 204 203 235 234 266 265 297 296 295 294 326 
[DBG]  Original agent path length 147 je: 37
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 2: 284, 252, 220, 188, 156, 124, 123, 122, 90, 89, 121, 120, 119, 151, 150, 149, 181, 180, 179, 178, 210, 209, 208, 207, 206, 205, 204, 203, 235, 234, 266, 265, 297, 296, 295, 294, 326, 
[DBG]  Path for agent 147 updated, resulting length: 37
[DBG]  Paths successfully updated.
[DBG]  (LNS.cpp) New path for agent 100: 
[DBG]  287, 286, 318, 350, 349, 348, 380, 379, 378, 377, 376, 375, 407, 439, 438, 437, 469, 468, 467, 499, 499, 498, 530, 529, 561, 593, 594, 593, 625, 657, 689, 688, 720, 720, 752, 751, 783, 815, 847, 879, 878, 877, 909, 941, 973, 1005, 1004, 1003, 
[DBG]  (LNS.cpp) New path for agent 139: 
[DBG]  285, 284, 252, 220, 188, 156, 124, 123, 122, 121, 120, 119, 118, 86, 85, 84, 83, 82, 50, 49, 48, 47, 46, 45, 13, 12, 11, 43, 42, 41, 40, 8, 7, 6, 5, 4, 3, 
[DBG]  (LNS.cpp) New path for agent 147: 
[DBG]  284, 252, 220, 188, 156, 124, 123, 122, 90, 89, 121, 120, 119, 151, 150, 149, 181, 180, 179, 178, 210, 209, 208, 207, 206, 205, 204, 203, 235, 234, 266, 265, 297, 296, 295, 294, 326, 
[DBG]  component_weights = {0.354598, 0.0973206, 0.101773, 0.446309}
[DBG]  opSuccess value: 1
[STAT] neighbor.sum_of_costs before recomputation: 119
[STAT] neighbor.old_sum_of_costs before recomputation: 119
[STAT] sum_of_costs before recomputation: 4218
[DBG]  Validate solution immediately after SAT success.
[DBG]  No problems after SAT replan.
[DBG]  Recomputing sum_of_cost by dividing neighbor.sum_of_costs and neighbor.old_sum_of_costs
[STAT] sum_of_costs after recomputation: 4218
[STAT] Iteration 140
[DBG]  Using SAT operator (destroy+repair SAT).
[DBG]  ====================
[DBG]  SAT destroy operator called.
[DBG]  SAT heuristic: 2
[DBG]  key_agent_id: 126
[DBG]  key_agent_id global path length: 19
[DBG]  Submap content (global positions):
[DBG]  19 20 21 22 23 
[DBG]  51 52 53 54 55 
[DBG]  83 84 85 86 87 
[DBG]  115 116 117 118 119 
[DBG]  147 148 149 150 151 
[DBG]  Map content with agents and obstacles:
[DBG]  . . X . X 
[DBG]  X . X . . 
[DBG]  . . A . X 
[DBG]  . . . . . 
[DBG]  . . . . . 
[DBG]  content of the map structure that we pass to the SAT solver:
[DBG]  1  1  -1  1  -1  
[DBG]  -1  1  -1  1  1  
[DBG]  1  1  1  1  -1  
[DBG]  1  1  1  1  1  
[DBG]  1  1  1  1  1  
[DBG]  Identifying agents in a submap for rescheduling (when key_agent is there at the time 8):
[DBG]  Agent 26 found intervals in the sub-map:
[DBG]  
[DBG]  Agent 26 is not in sub-map at time 8 (intervals: 
[DBG]  )
[DBG]  Agent 126 found intervals in the sub-map:
[DBG]   [6..11]
[DBG]  Agent 126 (interval in submap: [6..11]) contains time 8, added to replan.
[DBG]  Agent 126 | Start (global): 85 -> (local): (2, 2) at time 8 | Goal (global): 55 -> (local): (1, 4) at time 11
[DBG]  [REPAIR] SAT destroy operator called.
[DBG]  [REPAIR] SAT operator â€“ launching subproblem FOR OPTIMIZATION.
[DBG]  Creating local paths (sx, sy) in the submap for T_sync = 8
[DBG]    Agent 126 (global paths from T=8 to 11) has local path: (2,2) (2,3) (1,3) (1,4) 
[DBG]  Checking input data for SAT solver:
[DBG]    - Number of agents to replan: 1
[DBG]  Agent 126 has the original local path length: 4 => Start (2,2), Goal (1,4)
[DBG]  Start position: (2, 2), 
[DBG]  Goal position: (1, 4), 
[DBG]  SAT instance and solver created.
Currently solving
Instance name: scen
Map name: map
Encoding used: disappear_at_goal
SAT solver used: Kissat
Optimizing function: sum of costs
Number of agents: 1
Mks LB: 4
SoC LB: 4
Delta: 0
Remaining time: 300000 [ms]

Found plan [agents = 1] [timesteps = 4]
Agent #0 : 8 9 4 5 

[STAT] Solver returned: 0
[DBG]  Agent (index) 126 | New local path (submap idx):
[DBG]  8 9 4 5 
[DBG]  Update the agent path 126 | Original local length: 4 | New local length: 4
[DBG]  agent 126 t=0 => decoded (sx,sy)=(2,2) => global_id=85
[DBG]  agent 126 t=1 => decoded (sx,sy)=(2,3) => global_id=86
[DBG]  agent 126 t=2 => decoded (sx,sy)=(1,3) => global_id=54
[DBG]  agent 126 t=3 => decoded (sx,sy)=(1,4) => global_id=55
[DBG]  Complete path of agent 126:
[DBG]    Original: 15 16 48 49 81 82 83 84 85 86 54 55 56 24 25 26 27 28 29 
[DBG]    New:     15 16 48 49 81 82 83 84 85 86 54 55 56 24 25 26 27 28 29 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 15 16 48 49 81 82 83 84 
[DBG]    Local path (in submap): 85 86 54 55 
[DBG]    Suffix (out of submap): 56 24 25 26 27 28 29 
[DBG]  Original agent path length 126 je: 19
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 0: 15, 16, 48, 49, 81, 82, 83, 84, 85, 86, 54, 55, 56, 24, 25, 26, 27, 28, 29, 
[DBG]  Path for agent 126 updated, resulting length: 19
[DBG]  Paths successfully updated.
[DBG]  (LNS.cpp) New path for agent 126: 
[DBG]  15, 16, 48, 49, 81, 82, 83, 84, 85, 86, 54, 55, 56, 24, 25, 26, 27, 28, 29, 
[DBG]  component_weights = {0.359235, 0.0966214, 0.101042, 0.443102}
[DBG]  opSuccess value: 1
[STAT] neighbor.sum_of_costs before recomputation: 18
[STAT] neighbor.old_sum_of_costs before recomputation: 18
[STAT] sum_of_costs before recomputation: 4218
[DBG]  Validate solution immediately after SAT success.
[DBG]  No problems after SAT replan.
[DBG]  Recomputing sum_of_cost by dividing neighbor.sum_of_costs and neighbor.old_sum_of_costs
[STAT] sum_of_costs after recomputation: 4218
[STAT] Iteration 141
[DBG]  Using SAT operator (destroy+repair SAT).
[DBG]  ====================
[DBG]  SAT destroy operator called.
[DBG]  SAT heuristic: 2
[DBG]  key_agent_id: 26
[DBG]  key_agent_id global path length: 42
[DBG]  Submap content (global positions):
[DBG]  690 691 692 693 694 
[DBG]  722 723 724 725 726 
[DBG]  754 755 756 757 758 
[DBG]  786 787 788 789 790 
[DBG]  818 819 820 821 822 
[DBG]  Map content with agents and obstacles:
[DBG]  X . A X X 
[DBG]  . X . . . 
[DBG]  X . A . X 
[DBG]  . . A X . 
[DBG]  . . . . . 
[DBG]  content of the map structure that we pass to the SAT solver:
[DBG]  -1  1  1  -1  -1  
[DBG]  1  -1  1  1  1  
[DBG]  -1  1  1  1  -1  
[DBG]  1  1  1  -1  1  
[DBG]  1  1  1  1  1  
[DBG]  Identifying agents in a submap for rescheduling (when key_agent is there at the time 40):
[DBG]  Agent 26 found intervals in the sub-map:
[DBG]   [37..41]
[DBG]  Agent 26 (interval in submap: [37..41]) contains time 40, added to replan.
[DBG]  Agent 42 found intervals in the sub-map:
[DBG]   [33..37]
[DBG]  Agent 42 is not in sub-map at time 40 (intervals: 
[DBG]  [33..37] )
[DBG]  Agent 55 found intervals in the sub-map:
[DBG]   [39..40]
[DBG]  Agent 55 (interval in submap: [39..40]) contains time 40, added to replan.
[DBG]  Agent 69 found intervals in the sub-map:
[DBG]   [36..41]
[DBG]  Agent 69 (interval in submap: [36..41]) contains time 40, added to replan.
[DBG]  Agent 26 | Start (global): 756 -> (local): (2, 2) at time 40 | Goal (global): 755 -> (local): (2, 1) at time 41
[DBG]  Agent 55 | Start (global): 692 -> (local): (0, 2) at time 40 | Goal (global): 692 -> (local): (0, 2) at time 40
[DBG]  Agent 69 | Start (global): 788 -> (local): (3, 2) at time 40 | Goal (global): 820 -> (local): (4, 2) at time 41
[DBG]  [REPAIR] SAT destroy operator called.
[DBG]  [REPAIR] SAT operator â€“ launching subproblem FOR OPTIMIZATION.
[DBG]  Creating local paths (sx, sy) in the submap for T_sync = 40
[DBG]    Agent 26 (global paths from T=40 to 41) has local path: (2,2) (2,1) 
[DBG]    Agent 55 (global paths from T=40 to 40) has local path: (0,2) 
[DBG]    Agent 69 (global paths from T=40 to 41) has local path: (3,2) (4,2) 
[DBG]  Checking input data for SAT solver:
[DBG]    - Number of agents to replan: 3
[DBG]  Agent 26 has the original local path length: 2 => Start (2,2), Goal (2,1)
[DBG]  Agent 55 has the original local path length: 1 => Start (0,2), Goal (0,2)
[DBG]  Agent 69 has the original local path length: 2 => Start (3,2), Goal (4,2)
[DBG]  Start position: (2, 2), (0, 2), (3, 2), 
[DBG]  Goal position: (2, 1), (0, 2), (4, 2), 
[DBG]  SAT instance and solver created.
Currently solving
Instance name: scen
Map name: map
Encoding used: disappear_at_goal
SAT solver used: Kissat
Optimizing function: sum of costs
Number of agents: 3
Mks LB: 2
SoC LB: 5
Delta: 0
Remaining time: 300000 [ms]

Found plan [agents = 3] [timesteps = 2]
Agent #0 : 7 6 
Agent #1 : 1 0 
Agent #2 : 11 15 

[STAT] Solver returned: 0
[DBG]  Agent (index) 26 | New local path (submap idx):
[DBG]  7 6 
[DBG]  Agent (index) 55 | New local path (submap idx):
[DBG]  1 
[DBG]  Agent (index) 69 | New local path (submap idx):
[DBG]  11 15 
[DBG]  Update the agent path 26 | Original local length: 2 | New local length: 2
[DBG]  agent 26 t=0 => decoded (sx,sy)=(2,2) => global_id=756
[DBG]  agent 26 t=1 => decoded (sx,sy)=(2,1) => global_id=755
[DBG]  Complete path of agent 26:
[DBG]    Original: 13 45 77 109 141 173 205 206 207 239 240 241 242 243 244 276 308 340 341 373 405 437 469 468 468 468 468 468 469 501 533 565 597 596 628 627 659 691 692 724 756 755 
[DBG]    New:     13 45 77 109 141 173 205 206 207 239 240 241 242 243 244 276 308 340 341 373 405 437 469 468 468 468 468 468 469 501 533 565 597 596 628 627 659 691 692 724 756 755 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 13 45 77 109 141 173 205 206 207 239 240 241 242 243 244 276 308 340 341 373 405 437 469 468 468 468 468 468 469 501 533 565 597 596 628 627 659 691 692 724 
[DBG]    Local path (in submap): 756 755 
[DBG]    Suffix (out of submap): 
[DBG]  Original agent path length 26 je: 42
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 0: 13, 45, 77, 109, 141, 173, 205, 206, 207, 239, 240, 241, 242, 243, 244, 276, 308, 340, 341, 373, 405, 437, 469, 468, 468, 468, 468, 468, 469, 501, 533, 565, 597, 596, 628, 627, 659, 691, 692, 724, 756, 755, 
[DBG]  Path for agent 26 updated, resulting length: 42
[DBG]  Update the agent path 55 | Original local length: 1 | New local length: 1
[DBG]  agent 55 t=0 => decoded (sx,sy)=(0,2) => global_id=692
[DBG]  Complete path of agent 55:
[DBG]    Original: 34 66 98 99 100 132 164 196 228 260 261 293 293 325 326 358 390 422 423 424 425 426 427 428 429 430 431 432 432 464 496 528 529 561 593 625 657 658 659 691 692 
[DBG]    New:     34 66 98 99 100 132 164 196 228 260 261 293 293 325 326 358 390 422 423 424 425 426 427 428 429 430 431 432 432 464 496 528 529 561 593 625 657 658 659 691 692 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 34 66 98 99 100 132 164 196 228 260 261 293 293 325 326 358 390 422 423 424 425 426 427 428 429 430 431 432 432 464 496 528 529 561 593 625 657 658 659 691 
[DBG]    Local path (in submap): 692 
[DBG]    Suffix (out of submap): 
[DBG]  Original agent path length 55 je: 41
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 1: 34, 66, 98, 99, 100, 132, 164, 196, 228, 260, 261, 293, 293, 325, 326, 358, 390, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 432, 464, 496, 528, 529, 561, 593, 625, 657, 658, 659, 691, 692, 
[DBG]  Path for agent 55 updated, resulting length: 41
[DBG]  Update the agent path 69 | Original local length: 2 | New local length: 2
[DBG]  agent 69 t=0 => decoded (sx,sy)=(3,2) => global_id=788
[DBG]  agent 69 t=1 => decoded (sx,sy)=(4,2) => global_id=820
[DBG]  Complete path of agent 69:
[DBG]    Original: 4 5 37 69 70 102 134 135 136 137 138 139 140 172 173 205 237 269 301 333 365 366 367 368 400 432 464 496 528 529 561 593 625 657 658 659 691 692 724 756 788 820 
[DBG]    New:     4 5 37 69 70 102 134 135 136 137 138 139 140 172 173 205 237 269 301 333 365 366 367 368 400 432 464 496 528 529 561 593 625 657 658 659 691 692 724 756 788 820 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 4 5 37 69 70 102 134 135 136 137 138 139 140 172 173 205 237 269 301 333 365 366 367 368 400 432 464 496 528 529 561 593 625 657 658 659 691 692 724 756 
[DBG]    Local path (in submap): 788 820 
[DBG]    Suffix (out of submap): 
[DBG]  Original agent path length 69 je: 42
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 2: 4, 5, 37, 69, 70, 102, 134, 135, 136, 137, 138, 139, 140, 172, 173, 205, 237, 269, 301, 333, 365, 366, 367, 368, 400, 432, 464, 496, 528, 529, 561, 593, 625, 657, 658, 659, 691, 692, 724, 756, 788, 820, 
[DBG]  Path for agent 69 updated, resulting length: 42
[DBG]  Paths successfully updated.
[DBG]  (LNS.cpp) New path for agent 26: 
[DBG]  13, 45, 77, 109, 141, 173, 205, 206, 207, 239, 240, 241, 242, 243, 244, 276, 308, 340, 341, 373, 405, 437, 469, 468, 468, 468, 468, 468, 469, 501, 533, 565, 597, 596, 628, 627, 659, 691, 692, 724, 756, 755, 
[DBG]  (LNS.cpp) New path for agent 55: 
[DBG]  34, 66, 98, 99, 100, 132, 164, 196, 228, 260, 261, 293, 293, 325, 326, 358, 390, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 432, 464, 496, 528, 529, 561, 593, 625, 657, 658, 659, 691, 692, 
[DBG]  (LNS.cpp) New path for agent 69: 
[DBG]  4, 5, 37, 69, 70, 102, 134, 135, 136, 137, 138, 139, 140, 172, 173, 205, 237, 269, 301, 333, 365, 366, 367, 368, 400, 432, 464, 496, 528, 529, 561, 593, 625, 657, 658, 659, 691, 692, 724, 756, 788, 820, 
[DBG]  component_weights = {0.363898, 0.0959182, 0.100306, 0.439877}
[DBG]  opSuccess value: 1
[STAT] neighbor.sum_of_costs before recomputation: 122
[STAT] neighbor.old_sum_of_costs before recomputation: 122
[STAT] sum_of_costs before recomputation: 4218
[DBG]  Validate solution immediately after SAT success.
[DBG]  No problems after SAT replan.
[DBG]  Recomputing sum_of_cost by dividing neighbor.sum_of_costs and neighbor.old_sum_of_costs
[STAT] sum_of_costs after recomputation: 4218
[STAT] Iteration 142
[DBG]  Using SAT operator (destroy+repair SAT).
[DBG]  ====================
[DBG]  SAT destroy operator called.
[DBG]  SAT heuristic: 2
[DBG]  key_agent_id: 131
[DBG]  key_agent_id global path length: 33
[DBG]  Submap content (global positions):
[DBG]  300 301 302 303 304 
[DBG]  332 333 334 335 336 
[DBG]  364 365 366 367 368 
[DBG]  396 397 398 399 400 
[DBG]  428 429 430 431 432 
[DBG]  Map content with agents and obstacles:
[DBG]  . . . A . 
[DBG]  X . X . . 
[DBG]  X . A . . 
[DBG]  X X . X A 
[DBG]  . . A A A 
[DBG]  content of the map structure that we pass to the SAT solver:
[DBG]  1  1  1  1  1  
[DBG]  -1  1  -1  1  1  
[DBG]  -1  1  1  1  1  
[DBG]  -1  -1  1  -1  1  
[DBG]  1  1  1  1  1  
[DBG]  Identifying agents in a submap for rescheduling (when key_agent is there at the time 12):
[DBG]  Agent 16 found intervals in the sub-map:
[DBG]   [7..17]
[DBG]  Agent 16 (interval in submap: [7..17]) contains time 12, added to replan.
[DBG]  Agent 26 found intervals in the sub-map:
[DBG]  
[DBG]  Agent 26 is not in sub-map at time 12 (intervals: 
[DBG]  )
[DBG]  Agent 53 found intervals in the sub-map:
[DBG]  
[DBG]  Agent 53 is not in sub-map at time 12 (intervals: 
[DBG]  )
[DBG]  Agent 63 found intervals in the sub-map:
[DBG]   [11..17]
[DBG]  Agent 63 (interval in submap: [11..17]) contains time 12, added to replan.
[DBG]  Agent 71 found intervals in the sub-map:
[DBG]  
[DBG]  Agent 71 is not in sub-map at time 12 (intervals: 
[DBG]  )
[DBG]  Agent 81 found intervals in the sub-map:
[DBG]   [9..13]
[DBG]  Agent 81 (interval in submap: [9..13]) contains time 12, added to replan.
[DBG]  Agent 83 found intervals in the sub-map:
[DBG]   [12..17]
[DBG]  Agent 83 (interval in submap: [12..17]) contains time 12, added to replan.
[DBG]  Agent 106 found intervals in the sub-map:
[DBG]   [7..12]
[DBG]  Agent 106 (interval in submap: [7..12]) contains time 12, added to replan.
[DBG]  Agent 112 found intervals in the sub-map:
[DBG]   [1..6]
[DBG]  Agent 112 is not in sub-map at time 12 (intervals: 
[DBG]  [1..6] )
[DBG]  Agent 121 found intervals in the sub-map:
[DBG]   [6..8]
[DBG]  Agent 121 is not in sub-map at time 12 (intervals: 
[DBG]  [6..8] )
[DBG]  Agent 131 found intervals in the sub-map:
[DBG]   [9..14]
[DBG]  Agent 131 (interval in submap: [9..14]) contains time 12, added to replan.
[DBG]  Agent 145 found intervals in the sub-map:
[DBG]   [0..6]
[DBG]  Agent 145 is not in sub-map at time 12 (intervals: 
[DBG]  [0..6] )
[DBG]  Agent 16 | Start (global): 432 -> (local): (4, 4) at time 12 | Goal (global): 336 -> (local): (1, 4) at time 17
[DBG]  Agent 63 | Start (global): 400 -> (local): (3, 4) at time 12 | Goal (global): 302 -> (local): (0, 2) at time 17
[DBG]  Agent 81 | Start (global): 431 -> (local): (4, 3) at time 12 | Goal (global): 432 -> (local): (4, 4) at time 13
[DBG]  Agent 83 | Start (global): 303 -> (local): (0, 3) at time 12 | Goal (global): 430 -> (local): (4, 2) at time 17
[DBG]  Agent 106 | Start (global): 430 -> (local): (4, 2) at time 12 | Goal (global): 430 -> (local): (4, 2) at time 12
[DBG]  Agent 131 | Start (global): 366 -> (local): (2, 2) at time 12 | Goal (global): 430 -> (local): (4, 2) at time 14
[DBG]  [REPAIR] SAT destroy operator called.
[DBG]  [REPAIR] SAT operator â€“ launching subproblem FOR OPTIMIZATION.
[DBG]  Creating local paths (sx, sy) in the submap for T_sync = 12
[DBG]    Agent 16 (global paths from T=12 to 17) has local path: (4,4) (3,4) (2,4) (2,3) (1,3) (1,4) 
[DBG]    Agent 63 (global paths from T=12 to 17) has local path: (3,4) (2,4) (1,4) (0,4) (0,3) (0,2) 
[DBG]    Agent 81 (global paths from T=12 to 13) has local path: (4,3) (4,4) 
[DBG]    Agent 83 (global paths from T=12 to 17) has local path: (0,3) (1,3) (2,3) (2,2) (3,2) (4,2) 
[DBG]    Agent 106 (global paths from T=12 to 12) has local path: (4,2) 
[DBG]    Agent 131 (global paths from T=12 to 14) has local path: (2,2) (3,2) (4,2) 
[DBG]  Checking input data for SAT solver:
[DBG]    - Number of agents to replan: 6
[DBG]  Agent 16 has the original local path length: 6 => Start (4,4), Goal (1,4)
[DBG]  Agent 63 has the original local path length: 6 => Start (3,4), Goal (0,2)
[DBG]  Agent 81 has the original local path length: 2 => Start (4,3), Goal (4,4)
[DBG]  Agent 83 has the original local path length: 6 => Start (0,3), Goal (4,2)
[DBG]  Agent 106 has the original local path length: 1 => Start (4,2), Goal (4,2)
[DBG]  Agent 131 has the original local path length: 3 => Start (2,2), Goal (4,2)
[DBG]  Start position: (4, 4), (3, 4), (4, 3), (0, 3), (4, 2), (2, 2), 
[DBG]  Goal position: (1, 4), (0, 2), (4, 4), (4, 2), (4, 2), (4, 2), 
[DBG]  SAT instance and solver created.
Currently solving
Instance name: scen
Map name: map
Encoding used: disappear_at_goal
SAT solver used: Kissat
Optimizing function: sum of costs
Number of agents: 6
Mks LB: 6
SoC LB: 22
Delta: 0
Remaining time: 300000 [ms]

Vertex conflict! Agents 0, 2, timestep 4, location 0
Swapping conflict! Agents 0, 2, timestep 4, edge (0,0)
Vertex conflict! Agents 0, 2, timestep 5, location 0
Vertex conflict! Agents 0, 4, timestep 4, location 0
Swapping conflict! Agents 0, 4, timestep 4, edge (0,0)
Vertex conflict! Agents 0, 4, timestep 5, location 0
Vertex conflict! Agents 0, 5, timestep 4, location 0
Swapping conflict! Agents 0, 5, timestep 4, edge (0,0)
Vertex conflict! Agents 0, 5, timestep 5, location 0
Vertex conflict! Agents 2, 4, timestep 2, location 0
Swapping conflict! Agents 2, 4, timestep 2, edge (0,0)
Vertex conflict! Agents 2, 4, timestep 3, location 0
Swapping conflict! Agents 2, 4, timestep 3, edge (0,0)
Vertex conflict! Agents 2, 4, timestep 4, location 0
Swapping conflict! Agents 2, 4, timestep 4, edge (0,0)
Vertex conflict! Agents 2, 4, timestep 5, location 0
Vertex conflict! Agents 2, 5, timestep 3, location 0
Swapping conflict! Agents 2, 5, timestep 3, edge (0,0)
Vertex conflict! Agents 2, 5, timestep 4, location 0
Swapping conflict! Agents 2, 5, timestep 4, edge (0,0)
Vertex conflict! Agents 2, 5, timestep 5, location 0
Vertex conflict! Agents 4, 5, timestep 3, location 0
Swapping conflict! Agents 4, 5, timestep 3, edge (0,0)
Vertex conflict! Agents 4, 5, timestep 4, location 0
Swapping conflict! Agents 4, 5, timestep 4, edge (0,0)
Vertex conflict! Agents 4, 5, timestep 5, location 0
Found plan [agents = 6] [timesteps = 6]
Agent #0 : 18 13 11 7 0 0 
Agent #1 : 13 11 7 6 3 2 
Agent #2 : 17 18 0 0 0 0 
Agent #3 : 3 6 10 9 12 16 
Agent #4 : 16 0 0 0 0 0 
Agent #5 : 9 12 16 0 0 0 

[STAT] Solver returned: 0
[DBG]  Agent (index) 16 | New local path (submap idx):
[DBG]  18 13 11 7 
[DBG]  Agent (index) 63 | New local path (submap idx):
[DBG]  13 11 7 6 3 2 
[DBG]  Agent (index) 81 | New local path (submap idx):
[DBG]  17 18 
[DBG]  Agent (index) 83 | New local path (submap idx):
[DBG]  3 6 10 9 12 16 
[DBG]  Agent (index) 106 | New local path (submap idx):
[DBG]  16 
[DBG]  Agent (index) 131 | New local path (submap idx):
[DBG]  9 12 16 
[DBG]  Update the agent path 16 | Original local length: 6 | New local length: 4
[DBG]  agent 16 t=0 => decoded (sx,sy)=(4,4) => global_id=432
[DBG]  agent 16 t=1 => decoded (sx,sy)=(3,4) => global_id=400
[DBG]  agent 16 t=2 => decoded (sx,sy)=(2,4) => global_id=368
[DBG]  agent 16 t=3 => decoded (sx,sy)=(1,4) => global_id=336
[DBG]  Complete path of agent 16:
[DBG]    Original: 454 422 423 424 425 426 427 428 429 430 430 431 432 400 368 367 335 336 337 338 306 274 
[DBG]    New:     454 422 423 424 425 426 427 428 429 430 430 431 432 400 368 336 337 338 306 274 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 454 422 423 424 425 426 427 428 429 430 430 431 
[DBG]    Local path (in submap): 432 400 368 336 337 338 
[DBG]    Suffix (out of submap): 306 274 
[DBG]  Original agent path length 16 je: 22
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 0: 454, 422, 423, 424, 425, 426, 427, 428, 429, 430, 430, 431, 432, 400, 368, 336, 337, 338, 306, 274, 
[DBG]  Path for agent 16 updated, resulting length: 20
[DBG]  Update the agent path 63 | Original local length: 6 | New local length: 6
[DBG]  agent 63 t=0 => decoded (sx,sy)=(3,4) => global_id=400
[DBG]  agent 63 t=1 => decoded (sx,sy)=(2,4) => global_id=368
[DBG]  agent 63 t=2 => decoded (sx,sy)=(1,4) => global_id=336
[DBG]  agent 63 t=3 => decoded (sx,sy)=(1,3) => global_id=335
[DBG]  agent 63 t=4 => decoded (sx,sy)=(0,3) => global_id=303
[DBG]  agent 63 t=5 => decoded (sx,sy)=(0,2) => global_id=302
[DBG]  Complete path of agent 63:
[DBG]    Original: 689 688 687 655 623 591 592 560 528 496 464 432 400 368 336 304 303 302 
[DBG]    New:     689 688 687 655 623 591 592 560 528 496 464 432 400 368 336 335 303 302 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 689 688 687 655 623 591 592 560 528 496 464 432 
[DBG]    Local path (in submap): 400 368 336 335 303 302 
[DBG]    Suffix (out of submap): 
[DBG]  Original agent path length 63 je: 18
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 1: 689, 688, 687, 655, 623, 591, 592, 560, 528, 496, 464, 432, 400, 368, 336, 335, 303, 302, 
[DBG]  Path for agent 63 updated, resulting length: 18
[DBG]  Update the agent path 81 | Original local length: 2 | New local length: 2
[DBG]  agent 81 t=0 => decoded (sx,sy)=(4,3) => global_id=431
[DBG]  agent 81 t=1 => decoded (sx,sy)=(4,4) => global_id=432
[DBG]  Complete path of agent 81:
[DBG]    Original: 419 420 421 422 423 424 425 426 427 428 429 430 431 432 433 433 433 465 465 466 498 530 531 563 
[DBG]    New:     419 420 421 422 423 424 425 426 427 428 429 430 431 432 433 433 433 465 465 466 498 530 531 563 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 419 420 421 422 423 424 425 426 427 428 429 430 
[DBG]    Local path (in submap): 431 432 
[DBG]    Suffix (out of submap): 433 433 433 465 465 466 498 530 531 563 
[DBG]  Original agent path length 81 je: 24
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 2: 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 433, 433, 465, 465, 466, 498, 530, 531, 563, 
[DBG]  Path for agent 81 updated, resulting length: 24
[DBG]  Update the agent path 83 | Original local length: 6 | New local length: 6
[DBG]  agent 83 t=0 => decoded (sx,sy)=(0,3) => global_id=303
[DBG]  agent 83 t=1 => decoded (sx,sy)=(1,3) => global_id=335
[DBG]  agent 83 t=2 => decoded (sx,sy)=(2,3) => global_id=367
[DBG]  agent 83 t=3 => decoded (sx,sy)=(2,2) => global_id=366
[DBG]  agent 83 t=4 => decoded (sx,sy)=(3,2) => global_id=398
[DBG]  agent 83 t=5 => decoded (sx,sy)=(4,2) => global_id=430
[DBG]  Complete path of agent 83:
[DBG]    Original: 18 50 49 81 113 112 144 176 208 207 239 271 303 335 367 366 398 430 462 494 526 558 590 622 623 655 687 719 751 752 784 783 815 847 848 880 912 944 976 1008 1009 
[DBG]    New:     18 50 49 81 113 112 144 176 208 207 239 271 303 335 367 366 398 430 462 494 526 558 590 622 623 655 687 719 751 752 784 783 815 847 848 880 912 944 976 1008 1009 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 18 50 49 81 113 112 144 176 208 207 239 271 
[DBG]    Local path (in submap): 303 335 367 366 398 430 
[DBG]    Suffix (out of submap): 462 494 526 558 590 622 623 655 687 719 751 752 784 783 815 847 848 880 912 944 976 1008 1009 
[DBG]  Original agent path length 83 je: 41
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 3: 18, 50, 49, 81, 113, 112, 144, 176, 208, 207, 239, 271, 303, 335, 367, 366, 398, 430, 462, 494, 526, 558, 590, 622, 623, 655, 687, 719, 751, 752, 784, 783, 815, 847, 848, 880, 912, 944, 976, 1008, 1009, 
[DBG]  Path for agent 83 updated, resulting length: 41
[DBG]  Update the agent path 106 | Original local length: 1 | New local length: 1
[DBG]  agent 106 t=0 => decoded (sx,sy)=(4,2) => global_id=430
[DBG]  Complete path of agent 106:
[DBG]    Original: 244 243 242 274 306 338 337 336 335 367 366 398 430 462 494 526 525 524 523 522 521 520 520 520 519 551 583 615 616 648 680 712 713 745 746 747 715 
[DBG]    New:     244 243 242 274 306 338 337 336 335 367 366 398 430 462 494 526 525 524 523 522 521 520 520 520 519 551 583 615 616 648 680 712 713 745 746 747 715 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 244 243 242 274 306 338 337 336 335 367 366 398 
[DBG]    Local path (in submap): 430 
[DBG]    Suffix (out of submap): 462 494 526 525 524 523 522 521 520 520 520 519 551 583 615 616 648 680 712 713 745 746 747 715 
[DBG]  Original agent path length 106 je: 37
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 4: 244, 243, 242, 274, 306, 338, 337, 336, 335, 367, 366, 398, 430, 462, 494, 526, 525, 524, 523, 522, 521, 520, 520, 520, 519, 551, 583, 615, 616, 648, 680, 712, 713, 745, 746, 747, 715, 
[DBG]  Path for agent 106 updated, resulting length: 37
[DBG]  Update the agent path 131 | Original local length: 3 | New local length: 3
[DBG]  agent 131 t=0 => decoded (sx,sy)=(2,2) => global_id=366
[DBG]  agent 131 t=1 => decoded (sx,sy)=(3,2) => global_id=398
[DBG]  agent 131 t=2 => decoded (sx,sy)=(4,2) => global_id=430
[DBG]  Complete path of agent 131:
[DBG]    Original: 341 309 277 276 275 274 306 338 337 336 368 367 366 398 430 462 494 526 526 525 524 523 522 521 520 519 551 583 615 647 648 680 712 
[DBG]    New:     341 309 277 276 275 274 306 338 337 336 368 367 366 398 430 462 494 526 526 525 524 523 522 521 520 519 551 583 615 647 648 680 712 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 341 309 277 276 275 274 306 338 337 336 368 367 
[DBG]    Local path (in submap): 366 398 430 
[DBG]    Suffix (out of submap): 462 494 526 526 525 524 523 522 521 520 519 551 583 615 647 648 680 712 
[DBG]  Original agent path length 131 je: 33
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 5: 341, 309, 277, 276, 275, 274, 306, 338, 337, 336, 368, 367, 366, 398, 430, 462, 494, 526, 526, 525, 524, 523, 522, 521, 520, 519, 551, 583, 615, 647, 648, 680, 712, 
[DBG]  Path for agent 131 updated, resulting length: 33
[DBG]  Paths successfully updated.
[DBG]  (LNS.cpp) New path for agent 16: 
[DBG]  454, 422, 423, 424, 425, 426, 427, 428, 429, 430, 430, 431, 432, 400, 368, 336, 337, 338, 306, 274, 
[DBG]  (LNS.cpp) New path for agent 63: 
[DBG]  689, 688, 687, 655, 623, 591, 592, 560, 528, 496, 464, 432, 400, 368, 336, 335, 303, 302, 
[DBG]  (LNS.cpp) New path for agent 81: 
[DBG]  419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 433, 433, 465, 465, 466, 498, 530, 531, 563, 
[DBG]  (LNS.cpp) New path for agent 83: 
[DBG]  18, 50, 49, 81, 113, 112, 144, 176, 208, 207, 239, 271, 303, 335, 367, 366, 398, 430, 462, 494, 526, 558, 590, 622, 623, 655, 687, 719, 751, 752, 784, 783, 815, 847, 848, 880, 912, 944, 976, 1008, 1009, 
[DBG]  (LNS.cpp) New path for agent 106: 
[DBG]  244, 243, 242, 274, 306, 338, 337, 336, 335, 367, 366, 398, 430, 462, 494, 526, 525, 524, 523, 522, 521, 520, 520, 520, 519, 551, 583, 615, 616, 648, 680, 712, 713, 745, 746, 747, 715, 
[DBG]  (LNS.cpp) New path for agent 131: 
[DBG]  341, 309, 277, 276, 275, 274, 306, 338, 337, 336, 368, 367, 366, 398, 430, 462, 494, 526, 526, 525, 524, 523, 522, 521, 520, 519, 551, 583, 615, 647, 648, 680, 712, 
[DBG]  component_weights = {0.360642, 0.0950598, 0.0994087, 0.44489}
[DBG]  opSuccess value: 1
[STAT] neighbor.sum_of_costs before recomputation: 167
[STAT] neighbor.old_sum_of_costs before recomputation: 169
[STAT] sum_of_costs before recomputation: 4218
[DBG]  Validate solution immediately after SAT success.
[WARNING] Problem after SAT: Vertex conflict between agents 22 and 16 at location 338 at timestep 17
[DBG]  Attempting immediate repair via init_lns because problem occurred after SAT (should be applied only for conflicts...).
[DBG]  Passing 150 agents to init_lns (skip=true).
[DBG]  path_table contents for selected agents (neighbor.agents):
[DBG]    Agent 16 => controlling path length=20
[DBG]    Agent 63 => controlling path length=18
[DBG]    Agent 81 => controlling path length=24
[DBG]    Agent 83 => controlling path length=41
[DBG]    Agent 106 => controlling path length=37
[DBG]    Agent 131 => controlling path length=33
[DBG]  hodnota skip_initial_solution=1
[DBG]  We skip initialSolution => call buildCollisionData()
[DBG]  buildCollisionData() called â€“ skip_initial_solution case.
[DBG]  Agents.size()=150, collision_graph.size()=150
[DBG]  agent 16 => updateCollidingPairs => foundCollision
[DBG]  agent 22 => updateCollidingPairs => foundCollision
[DBG]  agent 45 => updateCollidingPairs => foundCollision
[DBG]  agent 88 => updateCollidingPairs => foundCollision
[DBG]  Conflicting agent pairs:
[DBG]  agent 16 is in conflict with agent 22
[DBG]  agent 16 is in conflict with agent 45
[DBG]  agent 16 is in conflict with agent 88
[DBG]  buildCollisionData() => sum_of_costs=4216, num_of_colliding_pairs=3
[DBG]  buildCollisionData done => sum_of_costs=4216, num_of_colliding_pairs=3
[DBG]  sum_of_cost hodnota: 4216
[DBG]  After skip/init build => iteration_stats.back(): sum_of_costs=4216, collisions=3
[DEBUG] Using default neighbor generation strategy for conflicts: 1
	InitLNS(PP): runtime = 0.005486, iterations = 2, colliding pairs = 0, initial colliding pairs = 3, solution cost = 4203, initial solution cost = 4216, failed iterations = 0
[DBG]  init_lns->sum_of_costs after init_lns->run: 4203
[DBG]  sum_of_costs after assignment from init_lns->run: 4203
[DBG]  Recomputing sum_of_cost by dividing neighbor.sum_of_costs and neighbor.old_sum_of_costs
[STAT] sum_of_costs after recomputation: 4203
[STAT] Iteration 143
[DBG]  Using SAT operator (destroy+repair SAT).
[DBG]  ====================
[DBG]  SAT destroy operator called.
[DBG]  SAT heuristic: 2
[DBG]  key_agent_id: 20
[DBG]  key_agent_id global path length: 33
[DBG]  Submap content (global positions):
[DBG]  334 335 336 337 338 
[DBG]  366 367 368 369 370 
[DBG]  398 399 400 401 402 
[DBG]  430 431 432 433 434 
[DBG]  462 463 464 465 466 
[DBG]  Map content with agents and obstacles:
[DBG]  X . A . A 
[DBG]  . . . . X 
[DBG]  . X A . . 
[DBG]  . . A . X 
[DBG]  A . . . . 
[DBG]  content of the map structure that we pass to the SAT solver:
[DBG]  -1  1  1  1  1  
[DBG]  1  1  1  1  -1  
[DBG]  1  -1  1  1  1  
[DBG]  1  1  1  1  -1  
[DBG]  1  1  1  1  1  
[DBG]  Identifying agents in a submap for rescheduling (when key_agent is there at the time 7):
[DBG]  Agent 19 found intervals in the sub-map:
[DBG]  
[DBG]  Agent 19 is not in sub-map at time 7 (intervals: 
[DBG]  )
[DBG]  Agent 20 found intervals in the sub-map:
[DBG]   [3..11]
[DBG]  Agent 20 (interval in submap: [3..11]) contains time 7, added to replan.
[DBG]  Agent 36 found intervals in the sub-map:
[DBG]   [0..4]
[DBG]  Agent 36 is not in sub-map at time 7 (intervals: 
[DBG]  [0..4] )
[DBG]  Agent 54 found intervals in the sub-map:
[DBG]   [0..5]
[DBG]  Agent 54 is not in sub-map at time 7 (intervals: 
[DBG]  [0..5] )
[DBG]  Agent 106 found intervals in the sub-map:
[DBG]   [5..13]
[DBG]  Agent 106 (interval in submap: [5..13]) contains time 7, added to replan.
[DBG]  Agent 112 found intervals in the sub-map:
[DBG]   [0..2]
[DBG]  Agent 112 is not in sub-map at time 7 (intervals: 
[DBG]  [0..2] )
[DBG]  Agent 121 found intervals in the sub-map:
[DBG]   [0..10]
[DBG]  Agent 121 (interval in submap: [0..10]) contains time 7, added to replan.
[DBG]  Agent 125 found intervals in the sub-map:
[DBG]   [0..1]
[DBG]  Agent 125 is not in sub-map at time 7 (intervals: 
[DBG]  [0..1] )
[DBG]  Agent 131 found intervals in the sub-map:
[DBG]   [7..15]
[DBG]  Agent 131 (interval in submap: [7..15]) contains time 7, added to replan.
[DBG]  Agent 145 found intervals in the sub-map:
[DBG]   [0..7]
[DBG]  Agent 145 (interval in submap: [0..7]) contains time 7, added to replan.
[DBG]  Agent 20 | Start (global): 400 -> (local): (2, 2) at time 7 | Goal (global): 462 -> (local): (4, 0) at time 11
[DBG]  Agent 106 | Start (global): 336 -> (local): (0, 2) at time 7 | Goal (global): 462 -> (local): (4, 0) at time 13
[DBG]  Agent 121 | Start (global): 432 -> (local): (3, 2) at time 7 | Goal (global): 462 -> (local): (4, 0) at time 10
[DBG]  Agent 131 | Start (global): 338 -> (local): (0, 4) at time 7 | Goal (global): 462 -> (local): (4, 0) at time 15
[DBG]  Agent 145 | Start (global): 462 -> (local): (4, 0) at time 7 | Goal (global): 462 -> (local): (4, 0) at time 7
[DBG]  [REPAIR] SAT destroy operator called.
[DBG]  [REPAIR] SAT operator â€“ launching subproblem FOR OPTIMIZATION.
[DBG]  Creating local paths (sx, sy) in the submap for T_sync = 7
[DBG]    Agent 20 (global paths from T=7 to 11) has local path: (2,2) (3,2) (4,2) (4,1) (4,0) 
[DBG]    Agent 106 (global paths from T=7 to 13) has local path: (0,2) (0,1) (1,1) (1,0) (2,0) (3,0) (4,0) 
[DBG]    Agent 121 (global paths from T=7 to 10) has local path: (3,2) (3,1) (4,1) (4,0) 
[DBG]    Agent 131 (global paths from T=7 to 15) has local path: (0,4) (0,3) (0,2) (1,2) (1,1) (1,0) (2,0) (3,0) (4,0) 
[DBG]    Agent 145 (global paths from T=7 to 7) has local path: (4,0) 
[DBG]  Checking input data for SAT solver:
[DBG]    - Number of agents to replan: 5
[DBG]  Agent 20 has the original local path length: 5 => Start (2,2), Goal (4,0)
[DBG]  Agent 106 has the original local path length: 7 => Start (0,2), Goal (4,0)
[DBG]  Agent 121 has the original local path length: 4 => Start (3,2), Goal (4,0)
[DBG]  Agent 131 has the original local path length: 9 => Start (0,4), Goal (4,0)
[DBG]  Agent 145 has the original local path length: 1 => Start (4,0), Goal (4,0)
[DBG]  Start position: (2, 2), (0, 2), (3, 2), (0, 4), (4, 0), 
[DBG]  Goal position: (4, 0), (4, 0), (4, 0), (4, 0), (4, 0), 
[DBG]  SAT instance and solver created.
Currently solving
Instance name: scen
Map name: map
Encoding used: disappear_at_goal
SAT solver used: Kissat
Optimizing function: sum of costs
Number of agents: 5
Mks LB: 9
SoC LB: 26
Delta: 0
Remaining time: 300000 [ms]

Vertex conflict! Agents 0, 1, timestep 7, location 0
Swapping conflict! Agents 0, 1, timestep 7, edge (0,0)
Vertex conflict! Agents 0, 1, timestep 8, location 0
Vertex conflict! Agents 0, 2, timestep 5, location 0
Swapping conflict! Agents 0, 2, timestep 5, edge (0,0)
Vertex conflict! Agents 0, 2, timestep 6, location 0
Swapping conflict! Agents 0, 2, timestep 6, edge (0,0)
Vertex conflict! Agents 0, 2, timestep 7, location 0
Swapping conflict! Agents 0, 2, timestep 7, edge (0,0)
Vertex conflict! Agents 0, 2, timestep 8, location 0
Vertex conflict! Agents 0, 4, timestep 5, location 0
Swapping conflict! Agents 0, 4, timestep 5, edge (0,0)
Vertex conflict! Agents 0, 4, timestep 6, location 0
Swapping conflict! Agents 0, 4, timestep 6, edge (0,0)
Vertex conflict! Agents 0, 4, timestep 7, location 0
Swapping conflict! Agents 0, 4, timestep 7, edge (0,0)
Vertex conflict! Agents 0, 4, timestep 8, location 0
Vertex conflict! Agents 1, 2, timestep 7, location 0
Swapping conflict! Agents 1, 2, timestep 7, edge (0,0)
Vertex conflict! Agents 1, 2, timestep 8, location 0
Vertex conflict! Agents 1, 4, timestep 7, location 0
Swapping conflict! Agents 1, 4, timestep 7, edge (0,0)
Vertex conflict! Agents 1, 4, timestep 8, location 0
Vertex conflict! Agents 2, 4, timestep 4, location 0
Swapping conflict! Agents 2, 4, timestep 4, edge (0,0)
Vertex conflict! Agents 2, 4, timestep 5, location 0
Swapping conflict! Agents 2, 4, timestep 5, edge (0,0)
Vertex conflict! Agents 2, 4, timestep 6, location 0
Swapping conflict! Agents 2, 4, timestep 6, edge (0,0)
Vertex conflict! Agents 2, 4, timestep 7, location 0
Swapping conflict! Agents 2, 4, timestep 7, edge (0,0)
Vertex conflict! Agents 2, 4, timestep 8, location 0
Found plan [agents = 5] [timesteps = 9]
Agent #0 : 9 14 18 17 16 0 0 0 0 
Agent #1 : 1 6 9 14 18 17 16 0 0 
Agent #2 : 14 18 17 16 0 0 0 0 0 
Agent #3 : 3 2 7 10 15 19 18 17 16 
Agent #4 : 16 0 0 0 0 0 0 0 0 

[STAT] Solver returned: 0
[DBG]  Agent (index) 20 | New local path (submap idx):
[DBG]  9 14 18 17 16 
[DBG]  Agent (index) 106 | New local path (submap idx):
[DBG]  1 6 9 14 18 17 16 
[DBG]  Agent (index) 121 | New local path (submap idx):
[DBG]  14 18 17 16 
[DBG]  Agent (index) 131 | New local path (submap idx):
[DBG]  3 2 7 10 15 19 18 17 16 
[DBG]  Agent (index) 145 | New local path (submap idx):
[DBG]  16 
[DBG]  Update the agent path 20 | Original local length: 5 | New local length: 5
[DBG]  agent 20 t=0 => decoded (sx,sy)=(2,2) => global_id=400
[DBG]  agent 20 t=1 => decoded (sx,sy)=(3,2) => global_id=432
[DBG]  agent 20 t=2 => decoded (sx,sy)=(4,2) => global_id=464
[DBG]  agent 20 t=3 => decoded (sx,sy)=(4,1) => global_id=463
[DBG]  agent 20 t=4 => decoded (sx,sy)=(4,0) => global_id=462
[DBG]  Complete path of agent 20:
[DBG]    Original: 242 274 306 338 337 336 368 400 432 464 463 462 494 526 525 524 556 556 588 620 619 651 650 682 714 713 745 777 809 841 873 905 904 
[DBG]    New:     242 274 306 338 337 336 368 400 432 464 463 462 494 526 525 524 556 556 588 620 619 651 650 682 714 713 745 777 809 841 873 905 904 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 242 274 306 338 337 336 368 
[DBG]    Local path (in submap): 400 432 464 463 462 
[DBG]    Suffix (out of submap): 494 526 525 524 556 556 588 620 619 651 650 682 714 713 745 777 809 841 873 905 904 
[DBG]  Original agent path length 20 je: 33
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 0: 242, 274, 306, 338, 337, 336, 368, 400, 432, 464, 463, 462, 494, 526, 525, 524, 556, 556, 588, 620, 619, 651, 650, 682, 714, 713, 745, 777, 809, 841, 873, 905, 904, 
[DBG]  Path for agent 20 updated, resulting length: 33
[DBG]  Update the agent path 106 | Original local length: 7 | New local length: 7
[DBG]  agent 106 t=0 => decoded (sx,sy)=(0,2) => global_id=336
[DBG]  agent 106 t=1 => decoded (sx,sy)=(1,2) => global_id=368
[DBG]  agent 106 t=2 => decoded (sx,sy)=(2,2) => global_id=400
[DBG]  agent 106 t=3 => decoded (sx,sy)=(3,2) => global_id=432
[DBG]  agent 106 t=4 => decoded (sx,sy)=(4,2) => global_id=464
[DBG]  agent 106 t=5 => decoded (sx,sy)=(4,1) => global_id=463
[DBG]  agent 106 t=6 => decoded (sx,sy)=(4,0) => global_id=462
[DBG]  Complete path of agent 106:
[DBG]    Original: 244 243 242 274 306 338 337 336 335 367 366 398 430 462 494 526 525 524 523 522 521 520 520 520 519 551 583 615 616 648 680 712 713 745 746 747 715 
[DBG]    New:     244 243 242 274 306 338 337 336 368 400 432 464 463 462 494 526 525 524 523 522 521 520 520 520 519 551 583 615 616 648 680 712 713 745 746 747 715 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 244 243 242 274 306 338 337 
[DBG]    Local path (in submap): 336 368 400 432 464 463 462 
[DBG]    Suffix (out of submap): 494 526 525 524 523 522 521 520 520 520 519 551 583 615 616 648 680 712 713 745 746 747 715 
[DBG]  Original agent path length 106 je: 37
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 1: 244, 243, 242, 274, 306, 338, 337, 336, 368, 400, 432, 464, 463, 462, 494, 526, 525, 524, 523, 522, 521, 520, 520, 520, 519, 551, 583, 615, 616, 648, 680, 712, 713, 745, 746, 747, 715, 
[DBG]  Path for agent 106 updated, resulting length: 37
[DBG]  Update the agent path 121 | Original local length: 4 | New local length: 4
[DBG]  agent 121 t=0 => decoded (sx,sy)=(3,2) => global_id=432
[DBG]  agent 121 t=1 => decoded (sx,sy)=(4,2) => global_id=464
[DBG]  agent 121 t=2 => decoded (sx,sy)=(4,1) => global_id=463
[DBG]  agent 121 t=3 => decoded (sx,sy)=(4,0) => global_id=462
[DBG]  Complete path of agent 121:
[DBG]    Original: 401 401 369 369 369 401 400 432 431 463 462 494 526 525 524 556 555 
[DBG]    New:     401 401 369 369 369 401 400 432 464 463 462 494 526 525 524 556 555 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 401 401 369 369 369 401 400 
[DBG]    Local path (in submap): 432 464 463 462 
[DBG]    Suffix (out of submap): 494 526 525 524 556 555 
[DBG]  Original agent path length 121 je: 17
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 2: 401, 401, 369, 369, 369, 401, 400, 432, 464, 463, 462, 494, 526, 525, 524, 556, 555, 
[DBG]  Path for agent 121 updated, resulting length: 17
[DBG]  Update the agent path 131 | Original local length: 9 | New local length: 9
[DBG]  agent 131 t=0 => decoded (sx,sy)=(0,4) => global_id=338
[DBG]  agent 131 t=1 => decoded (sx,sy)=(0,3) => global_id=337
[DBG]  agent 131 t=2 => decoded (sx,sy)=(1,3) => global_id=369
[DBG]  agent 131 t=3 => decoded (sx,sy)=(2,3) => global_id=401
[DBG]  agent 131 t=4 => decoded (sx,sy)=(3,3) => global_id=433
[DBG]  agent 131 t=5 => decoded (sx,sy)=(4,3) => global_id=465
[DBG]  agent 131 t=6 => decoded (sx,sy)=(4,2) => global_id=464
[DBG]  agent 131 t=7 => decoded (sx,sy)=(4,1) => global_id=463
[DBG]  agent 131 t=8 => decoded (sx,sy)=(4,0) => global_id=462
[DBG]  Complete path of agent 131:
[DBG]    Original: 341 309 277 276 275 274 306 338 337 336 368 367 366 398 430 462 494 526 526 525 524 523 522 521 520 519 551 583 615 647 648 680 712 
[DBG]    New:     341 309 277 276 275 274 306 338 337 369 401 433 465 464 463 462 494 526 526 525 524 523 522 521 520 519 551 583 615 647 648 680 712 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 341 309 277 276 275 274 306 
[DBG]    Local path (in submap): 338 337 369 401 433 465 464 463 462 
[DBG]    Suffix (out of submap): 494 526 526 525 524 523 522 521 520 519 551 583 615 647 648 680 712 
[DBG]  Original agent path length 131 je: 33
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 3: 341, 309, 277, 276, 275, 274, 306, 338, 337, 369, 401, 433, 465, 464, 463, 462, 494, 526, 526, 525, 524, 523, 522, 521, 520, 519, 551, 583, 615, 647, 648, 680, 712, 
[DBG]  Path for agent 131 updated, resulting length: 33
[DBG]  Update the agent path 145 | Original local length: 1 | New local length: 1
[DBG]  agent 145 t=0 => decoded (sx,sy)=(4,0) => global_id=462
[DBG]  Complete path of agent 145:
[DBG]    Original: 335 367 368 400 432 431 430 462 494 526 525 524 556 555 587 619 651 650 649 648 647 646 
[DBG]    New:     335 367 368 400 432 431 430 462 494 526 525 524 556 555 587 619 651 650 649 648 647 646 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 335 367 368 400 432 431 430 
[DBG]    Local path (in submap): 462 
[DBG]    Suffix (out of submap): 494 526 525 524 556 555 587 619 651 650 649 648 647 646 
[DBG]  Original agent path length 145 je: 22
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 4: 335, 367, 368, 400, 432, 431, 430, 462, 494, 526, 525, 524, 556, 555, 587, 619, 651, 650, 649, 648, 647, 646, 
[DBG]  Path for agent 145 updated, resulting length: 22
[DBG]  Paths successfully updated.
[DBG]  (LNS.cpp) New path for agent 20: 
[DBG]  242, 274, 306, 338, 337, 336, 368, 400, 432, 464, 463, 462, 494, 526, 525, 524, 556, 556, 588, 620, 619, 651, 650, 682, 714, 713, 745, 777, 809, 841, 873, 905, 904, 
[DBG]  (LNS.cpp) New path for agent 106: 
[DBG]  244, 243, 242, 274, 306, 338, 337, 336, 368, 400, 432, 464, 463, 462, 494, 526, 525, 524, 523, 522, 521, 520, 520, 520, 519, 551, 583, 615, 616, 648, 680, 712, 713, 745, 746, 747, 715, 
[DBG]  (LNS.cpp) New path for agent 121: 
[DBG]  401, 401, 369, 369, 369, 401, 400, 432, 464, 463, 462, 494, 526, 525, 524, 556, 555, 
[DBG]  (LNS.cpp) New path for agent 131: 
[DBG]  341, 309, 277, 276, 275, 274, 306, 338, 337, 369, 401, 433, 465, 464, 463, 462, 494, 526, 526, 525, 524, 523, 522, 521, 520, 519, 551, 583, 615, 647, 648, 680, 712, 
[DBG]  (LNS.cpp) New path for agent 145: 
[DBG]  335, 367, 368, 400, 432, 431, 430, 462, 494, 526, 525, 524, 556, 555, 587, 619, 651, 650, 649, 648, 647, 646, 
[DBG]  component_weights = {0.365313, 0.0943653, 0.0986824, 0.441639}
[DBG]  opSuccess value: 1
[STAT] neighbor.sum_of_costs before recomputation: 137
[STAT] neighbor.old_sum_of_costs before recomputation: 137
[STAT] sum_of_costs before recomputation: 4203
[DBG]  Validate solution immediately after SAT success.
[WARNING] Problem after SAT: Vertex conflict between agents 33 and 106 at location 432 at timestep 10
[DBG]  Attempting immediate repair via init_lns because problem occurred after SAT (should be applied only for conflicts...).
[DBG]  Passing 150 agents to init_lns (skip=true).
[DBG]  path_table contents for selected agents (neighbor.agents):
[DBG]    Agent 20 => controlling path length=33
[DBG]    Agent 106 => controlling path length=37
[DBG]    Agent 121 => controlling path length=17
[DBG]    Agent 131 => controlling path length=33
[DBG]    Agent 145 => controlling path length=22
[DBG]  hodnota skip_initial_solution=1
[DBG]  We skip initialSolution => call buildCollisionData()
[DBG]  buildCollisionData() called â€“ skip_initial_solution case.
[DBG]  Agents.size()=150, collision_graph.size()=150
[DBG]  agent 33 => updateCollidingPairs => foundCollision
[DBG]  agent 63 => updateCollidingPairs => foundCollision
[DBG]  agent 88 => updateCollidingPairs => foundCollision
[DBG]  agent 106 => updateCollidingPairs => foundCollision
[DBG]  agent 131 => updateCollidingPairs => foundCollision
[DBG]  Conflicting agent pairs:
[DBG]  agent 33 is in conflict with agent 106
[DBG]  agent 33 is in conflict with agent 131
[DBG]  agent 63 is in conflict with agent 106
[DBG]  agent 88 is in conflict with agent 106
[DBG]  buildCollisionData() => sum_of_costs=4203, num_of_colliding_pairs=4
[DBG]  buildCollisionData done => sum_of_costs=4203, num_of_colliding_pairs=4
[DBG]  sum_of_cost hodnota: 4203
[DBG]  After skip/init build => iteration_stats.back(): sum_of_costs=4203, collisions=4
[DEBUG] Using default neighbor generation strategy for conflicts: 2
[DEBUG] Using default neighbor generation strategy for conflicts: 2
[DEBUG] Using default neighbor generation strategy for conflicts: 0
[DEBUG] Using default neighbor generation strategy for conflicts: 2
[DEBUG] Using default neighbor generation strategy for conflicts: 1
[DEBUG] Using default neighbor generation strategy for conflicts: 1
	InitLNS(PP): runtime = 0.0372648, iterations = 7, colliding pairs = 0, initial colliding pairs = 4, solution cost = 4238, initial solution cost = 4203, failed iterations = 0
[DBG]  init_lns->sum_of_costs after init_lns->run: 4238
[DBG]  sum_of_costs after assignment from init_lns->run: 4238
[DBG]  Recomputing sum_of_cost by dividing neighbor.sum_of_costs and neighbor.old_sum_of_costs
[STAT] sum_of_costs after recomputation: 4238
[STAT] Iteration 144
[DBG]  Using SAT operator (destroy+repair SAT).
[DBG]  ====================
[DBG]  SAT destroy operator called.
[DBG]  SAT heuristic: 2
[DBG]  key_agent_id: 76
[DBG]  key_agent_id global path length: 13
[DBG]  Submap content (global positions):
[DBG]  364 365 366 367 368 
[DBG]  396 397 398 399 400 
[DBG]  428 429 430 431 432 
[DBG]  460 461 462 463 464 
[DBG]  492 493 494 495 496 
[DBG]  Map content with agents and obstacles:
[DBG]  X . . . . 
[DBG]  X X . X A 
[DBG]  . . A A A 
[DBG]  . X . . . 
[DBG]  . X . X . 
[DBG]  content of the map structure that we pass to the SAT solver:
[DBG]  -1  1  1  1  1  
[DBG]  -1  -1  1  -1  1  
[DBG]  1  1  1  1  1  
[DBG]  1  -1  1  1  1  
[DBG]  1  -1  1  -1  1  
[DBG]  Identifying agents in a submap for rescheduling (when key_agent is there at the time 4):
[DBG]  Agent 8 found intervals in the sub-map:
[DBG]   [15..15]
[DBG]  Agent 8 is not in sub-map at time 4 (intervals: 
[DBG]  [15..15] )
[DBG]  Agent 36 found intervals in the sub-map:
[DBG]   [0..10]
[DBG]  Agent 36 (interval in submap: [0..10]) contains time 4, added to replan.
[DBG]  Agent 54 found intervals in the sub-map:
[DBG]   [0..2]
[DBG]  Agent 54 is not in sub-map at time 4 (intervals: 
[DBG]  [0..2] )
[DBG]  Agent 76 found intervals in the sub-map:
[DBG]   [0..7]
[DBG]  Agent 76 (interval in submap: [0..7]) contains time 4, added to replan.
[DBG]  Agent 121 found intervals in the sub-map:
[DBG]   [4..10]
[DBG]  Agent 121 (interval in submap: [4..10]) contains time 4, added to replan.
[DBG]  Agent 125 found intervals in the sub-map:
[DBG]   [0..2]
[DBG]  Agent 125 is not in sub-map at time 4 (intervals: 
[DBG]  [0..2] )
[DBG]  Agent 145 found intervals in the sub-map:
[DBG]   [1..8]
[DBG]  Agent 145 (interval in submap: [1..8]) contains time 4, added to replan.
[DBG]  Agent 36 | Start (global): 431 -> (local): (2, 3) at time 4 | Goal (global): 432 -> (local): (2, 4) at time 10
[DBG]  Agent 76 | Start (global): 430 -> (local): (2, 2) at time 4 | Goal (global): 365 -> (local): (0, 1) at time 7
[DBG]  Agent 121 | Start (global): 400 -> (local): (1, 4) at time 4 | Goal (global): 494 -> (local): (4, 2) at time 10
[DBG]  Agent 145 | Start (global): 432 -> (local): (2, 4) at time 4 | Goal (global): 494 -> (local): (4, 2) at time 8
[DBG]  [REPAIR] SAT destroy operator called.
[DBG]  [REPAIR] SAT operator â€“ launching subproblem FOR OPTIMIZATION.
[DBG]  Creating local paths (sx, sy) in the submap for T_sync = 4
[DBG]    Agent 36 (global paths from T=4 to 10) has local path: (2,3) (2,3) (2,3) (2,3) (2,3) (2,4) (2,4) 
[DBG]    Agent 76 (global paths from T=4 to 7) has local path: (2,2) (1,2) (0,2) (0,1) 
[DBG]    Agent 121 (global paths from T=4 to 10) has local path: (1,4) (2,4) (3,4) (3,3) (3,2) (4,2) (4,2) 
[DBG]    Agent 145 (global paths from T=4 to 8) has local path: (2,4) (3,4) (3,3) (3,2) (4,2) 
[DBG]  Checking input data for SAT solver:
[DBG]    - Number of agents to replan: 4
[DBG]  Agent 36 has the original local path length: 7 => Start (2,3), Goal (2,4)
[DBG]  Agent 76 has the original local path length: 4 => Start (2,2), Goal (0,1)
[DBG]  Agent 121 has the original local path length: 7 => Start (1,4), Goal (4,2)
[DBG]  Agent 145 has the original local path length: 5 => Start (2,4), Goal (4,2)
[DBG]  Start position: (2, 3), (2, 2), (1, 4), (2, 4), 
[DBG]  Goal position: (2, 4), (0, 1), (4, 2), (4, 2), 
[DBG]  SAT instance and solver created.
Currently solving
Instance name: scen
Map name: map
Encoding used: disappear_at_goal
SAT solver used: Kissat
Optimizing function: sum of costs
Number of agents: 4
Mks LB: 6
SoC LB: 17
Delta: 0
Remaining time: 300000 [ms]

[STAT] Solver returned: -1
[DBG]  SAT solver failed.
[STAT] SAT solver failed to find a valid solution.
[DBG]  ====================
[DBG]  SAT destroy operator called.
[DBG]  SAT heuristic: 2
[DBG]  key_agent_id: 76
[DBG]  key_agent_id global path length: 13
[DBG]  Submap content (global positions):
[DBG]  299 300 301 302 303 
[DBG]  331 332 333 334 335 
[DBG]  363 364 365 366 367 
[DBG]  395 396 397 398 399 
[DBG]  427 428 429 430 431 
[DBG]  Map content with agents and obstacles:
[DBG]  A . . . . 
[DBG]  . X . X . 
[DBG]  . X A . . 
[DBG]  . X X . X 
[DBG]  . . . . A 
[DBG]  content of the map structure that we pass to the SAT solver:
[DBG]  1  1  1  1  1  
[DBG]  1  -1  1  -1  1  
[DBG]  1  -1  1  1  1  
[DBG]  1  -1  -1  1  -1  
[DBG]  1  1  1  1  1  
[DBG]  Identifying agents in a submap for rescheduling (when key_agent is there at the time 7):
[DBG]  Agent 16 found intervals in the sub-map:
[DBG]   [9..10]
[DBG]  Agent 16 is not in sub-map at time 7 (intervals: 
[DBG]  [9..10] )
[DBG]  Agent 20 found intervals in the sub-map:
[DBG]  
[DBG]  Agent 20 is not in sub-map at time 7 (intervals: 
[DBG]  )
[DBG]  Agent 33 found intervals in the sub-map:
[DBG]   [3..5]
[DBG]  Agent 33 is not in sub-map at time 7 (intervals: 
[DBG]  [3..5] )
[DBG]  Agent 36 found intervals in the sub-map:
[DBG]   [0..8]
[DBG]  Agent 36 (interval in submap: [0..8]) contains time 7, added to replan.
[DBG]  Agent 76 found intervals in the sub-map:
[DBG]   [2..10]
[DBG]  Agent 76 (interval in submap: [2..10]) contains time 7, added to replan.
[DBG]  Agent 106 found intervals in the sub-map:
[DBG]  
[DBG]  Agent 106 is not in sub-map at time 7 (intervals: 
[DBG]  )
[DBG]  Agent 112 found intervals in the sub-map:
[DBG]   [2..7]
[DBG]  Agent 112 (interval in submap: [2..7]) contains time 7, added to replan.
[DBG]  Agent 125 found intervals in the sub-map:
[DBG]   [0..0]
[DBG]  Agent 125 is not in sub-map at time 7 (intervals: 
[DBG]  [0..0] )
[DBG]  Agent 145 found intervals in the sub-map:
[DBG]   [0..1]
[DBG]  Agent 145 is not in sub-map at time 7 (intervals: 
[DBG]  [0..1] )
[DBG]  Agent 36 | Start (global): 431 -> (local): (4, 4) at time 7 | Goal (global): 431 -> (local): (4, 4) at time 8
[DBG]  Agent 76 | Start (global): 365 -> (local): (2, 2) at time 7 | Goal (global): 302 -> (local): (0, 3) at time 10
[DBG]  Agent 112 | Start (global): 299 -> (local): (0, 0) at time 7 | Goal (global): 299 -> (local): (0, 0) at time 7
[DBG]  [REPAIR] SAT destroy operator called.
[DBG]  [REPAIR] SAT operator â€“ launching subproblem FOR OPTIMIZATION.
[DBG]  Creating local paths (sx, sy) in the submap for T_sync = 7
[DBG]    Agent 36 (global paths from T=7 to 8) has local path: (4,4) (4,4) 
[DBG]    Agent 76 (global paths from T=7 to 10) has local path: (2,2) (1,2) (0,2) (0,3) 
[DBG]    Agent 112 (global paths from T=7 to 7) has local path: (0,0) 
[DBG]  Checking input data for SAT solver:
[DBG]    - Number of agents to replan: 3
[DBG]  Agent 36 has the original local path length: 2 => Start (4,4), Goal (4,4)
[DBG]  Agent 76 has the original local path length: 4 => Start (2,2), Goal (0,3)
[DBG]  Agent 112 has the original local path length: 1 => Start (0,0), Goal (0,0)
[DBG]  Start position: (4, 4), (2, 2), (0, 0), 
[DBG]  Goal position: (4, 4), (0, 3), (0, 0), 
[DBG]  SAT instance and solver created.
Currently solving
Instance name: scen
Map name: map
Encoding used: disappear_at_goal
SAT solver used: Kissat
Optimizing function: sum of costs
Number of agents: 3
Mks LB: 4
SoC LB: 6
Delta: 0
Remaining time: 300000 [ms]

Vertex conflict! Agents 0, 2, timestep 1, location 0
Swapping conflict! Agents 0, 2, timestep 1, edge (0,0)
Vertex conflict! Agents 0, 2, timestep 2, location 0
Swapping conflict! Agents 0, 2, timestep 2, edge (0,0)
Vertex conflict! Agents 0, 2, timestep 3, location 0
Found plan [agents = 3] [timesteps = 4]
Agent #0 : 18 0 0 0 
Agent #1 : 9 6 2 3 
Agent #2 : 0 0 0 0 

[STAT] Solver returned: 0
[DBG]  Agent (index) 36 | New local path (submap idx):
[DBG]  18 
[DBG]  Agent (index) 76 | New local path (submap idx):
[DBG]  9 6 2 3 
[DBG]  Agent (index) 112 | New local path (submap idx):
[DBG]  0 
[DBG]  Update the agent path 36 | Original local length: 2 | New local length: 1
[DBG]  agent 36 t=0 => decoded (sx,sy)=(4,4) => global_id=431
[DBG]  Complete path of agent 36:
[DBG]    Original: 431 431 431 431 431 431 431 431 431 432 432 433 401 402 402 402 403 371 403 435 435 435 435 435 435 435 403 371 
[DBG]    New:     431 431 431 431 431 431 431 431 432 432 433 401 402 402 402 403 371 403 435 435 435 435 435 435 435 403 371 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 431 431 431 431 431 431 431 
[DBG]    Local path (in submap): 431 432 
[DBG]    Suffix (out of submap): 432 433 401 402 402 402 403 371 403 435 435 435 435 435 435 435 403 371 
[DBG]  Original agent path length 36 je: 28
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 0: 431, 431, 431, 431, 431, 431, 431, 431, 432, 432, 433, 401, 402, 402, 402, 403, 371, 403, 435, 435, 435, 435, 435, 435, 435, 403, 371, 
[DBG]  Path for agent 36 updated, resulting length: 27
[DBG]  Update the agent path 76 | Original local length: 4 | New local length: 4
[DBG]  agent 76 t=0 => decoded (sx,sy)=(2,2) => global_id=365
[DBG]  agent 76 t=1 => decoded (sx,sy)=(1,2) => global_id=333
[DBG]  agent 76 t=2 => decoded (sx,sy)=(0,2) => global_id=301
[DBG]  agent 76 t=3 => decoded (sx,sy)=(0,3) => global_id=302
[DBG]  Complete path of agent 76:
[DBG]    Original: 492 460 428 429 430 398 366 365 333 301 302 270 238 
[DBG]    New:     492 460 428 429 430 398 366 365 333 301 302 270 238 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 492 460 428 429 430 398 366 
[DBG]    Local path (in submap): 365 333 301 302 
[DBG]    Suffix (out of submap): 270 238 
[DBG]  Original agent path length 76 je: 13
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 1: 492, 460, 428, 429, 430, 398, 366, 365, 333, 301, 302, 270, 238, 
[DBG]  Path for agent 76 updated, resulting length: 13
[DBG]  Update the agent path 112 | Original local length: 1 | New local length: 1
[DBG]  agent 112 t=0 => decoded (sx,sy)=(0,0) => global_id=299
[DBG]  Complete path of agent 112:
[DBG]    Original: 337 336 335 303 302 301 300 299 298 330 329 328 327 326 358 390 422 454 486 485 517 549 581 613 645 677 676 675 
[DBG]    New:     337 336 335 303 302 301 300 299 298 330 329 328 327 326 358 390 422 454 486 485 517 549 581 613 645 677 676 675 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 337 336 335 303 302 301 300 
[DBG]    Local path (in submap): 299 
[DBG]    Suffix (out of submap): 298 330 329 328 327 326 358 390 422 454 486 485 517 549 581 613 645 677 676 675 
[DBG]  Original agent path length 112 je: 28
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 2: 337, 336, 335, 303, 302, 301, 300, 299, 298, 330, 329, 328, 327, 326, 358, 390, 422, 454, 486, 485, 517, 549, 581, 613, 645, 677, 676, 675, 
[DBG]  Path for agent 112 updated, resulting length: 28
[DBG]  Paths successfully updated.
[DBG]  (LNS.cpp) New path for agent 36: 
[DBG]  431, 431, 431, 431, 431, 431, 431, 431, 432, 432, 433, 401, 402, 402, 402, 403, 371, 403, 435, 435, 435, 435, 435, 435, 435, 403, 371, 
[DBG]  (LNS.cpp) New path for agent 76: 
[DBG]  492, 460, 428, 429, 430, 398, 366, 365, 333, 301, 302, 270, 238, 
[DBG]  (LNS.cpp) New path for agent 112: 
[DBG]  337, 336, 335, 303, 302, 301, 300, 299, 298, 330, 329, 328, 327, 326, 358, 390, 422, 454, 486, 485, 517, 549, 581, 613, 645, 677, 676, 675, 
[DBG]  component_weights = {0.362025, 0.093516, 0.0977943, 0.446664}
[DBG]  opSuccess value: 1
[STAT] neighbor.sum_of_costs before recomputation: 65
[STAT] neighbor.old_sum_of_costs before recomputation: 66
[STAT] sum_of_costs before recomputation: 4238
[DBG]  Validate solution immediately after SAT success.
[WARNING] Problem after SAT: Vertex conflict between agents 36 and 20 at location 432 at timestep 8
[DBG]  Attempting immediate repair via init_lns because problem occurred after SAT (should be applied only for conflicts...).
[DBG]  Passing 150 agents to init_lns (skip=true).
[DBG]  path_table contents for selected agents (neighbor.agents):
[DBG]    Agent 36 => controlling path length=27
[DBG]    Agent 76 => controlling path length=13
[DBG]    Agent 112 => controlling path length=28
[DBG]  hodnota skip_initial_solution=1
[DBG]  We skip initialSolution => call buildCollisionData()
[DBG]  buildCollisionData() called â€“ skip_initial_solution case.
[DBG]  Agents.size()=150, collision_graph.size()=150
[DBG]  agent 20 => updateCollidingPairs => foundCollision
[DBG]  agent 36 => updateCollidingPairs => foundCollision
[DBG]  agent 61 => updateCollidingPairs => foundCollision
[DBG]  agent 106 => updateCollidingPairs => foundCollision
[DBG]  agent 128 => updateCollidingPairs => foundCollision
[DBG]  Conflicting agent pairs:
[DBG]  agent 20 is in conflict with agent 36
[DBG]  agent 36 is in conflict with agent 61
[DBG]  agent 36 is in conflict with agent 106
[DBG]  agent 36 is in conflict with agent 128
[DBG]  buildCollisionData() => sum_of_costs=4237, num_of_colliding_pairs=4
[DBG]  buildCollisionData done => sum_of_costs=4237, num_of_colliding_pairs=4
[DBG]  sum_of_cost hodnota: 4237
[DBG]  After skip/init build => iteration_stats.back(): sum_of_costs=4237, collisions=4
[DEBUG] Using default neighbor generation strategy for conflicts: 1
	InitLNS(PP): runtime = 0.0184547, iterations = 2, colliding pairs = 0, initial colliding pairs = 4, solution cost = 4224, initial solution cost = 4237, failed iterations = 0
[DBG]  init_lns->sum_of_costs after init_lns->run: 4224
[DBG]  sum_of_costs after assignment from init_lns->run: 4224
[DBG]  Recomputing sum_of_cost by dividing neighbor.sum_of_costs and neighbor.old_sum_of_costs
[STAT] sum_of_costs after recomputation: 4224
[STAT] Iteration 145
[DBG]  Using SAT operator (destroy+repair SAT).
[DBG]  ====================
[DBG]  SAT destroy operator called.
[DBG]  SAT heuristic: 2
[DBG]  key_agent_id: 17
[DBG]  key_agent_id global path length: 18
[DBG]  Submap content (global positions):
[DBG]  630 631 632 633 634 
[DBG]  662 663 664 665 666 
[DBG]  694 695 696 697 698 
[DBG]  726 727 728 729 730 
[DBG]  758 759 760 761 762 
[DBG]  Map content with agents and obstacles:
[DBG]  X . . . X 
[DBG]  X X A X . 
[DBG]  X X A . X 
[DBG]  . A A A . 
[DBG]  X . X . X 
[DBG]  content of the map structure that we pass to the SAT solver:
[DBG]  -1  1  1  1  -1  
[DBG]  -1  -1  1  -1  1  
[DBG]  -1  -1  1  1  -1  
[DBG]  1  1  1  1  1  
[DBG]  -1  1  -1  1  -1  
[DBG]  Identifying agents in a submap for rescheduling (when key_agent is there at the time 1):
[DBG]  Agent 12 found intervals in the sub-map:
[DBG]   [0..4]
[DBG]  Agent 12 (interval in submap: [0..4]) contains time 1, added to replan.
[DBG]  Agent 17 found intervals in the sub-map:
[DBG]   [0..6]
[DBG]  Agent 17 (interval in submap: [0..6]) contains time 1, added to replan.
[DBG]  Agent 47 found intervals in the sub-map:
[DBG]   [0..2]
[DBG]  Agent 47 (interval in submap: [0..2]) contains time 1, added to replan.
[DBG]  Agent 70 found intervals in the sub-map:
[DBG]   [0..5]
[DBG]  Agent 70 (interval in submap: [0..5]) contains time 1, added to replan.
[DBG]  Agent 135 found intervals in the sub-map:
[DBG]   [0..3]
[DBG]  Agent 135 (interval in submap: [0..3]) contains time 1, added to replan.
[DBG]  Agent 12 | Start (global): 727 -> (local): (3, 1) at time 1 | Goal (global): 730 -> (local): (3, 4) at time 4
[DBG]  Agent 17 | Start (global): 696 -> (local): (2, 2) at time 1 | Goal (global): 730 -> (local): (3, 4) at time 6
[DBG]  Agent 47 | Start (global): 729 -> (local): (3, 3) at time 1 | Goal (global): 761 -> (local): (4, 3) at time 2
[DBG]  Agent 70 | Start (global): 664 -> (local): (1, 2) at time 1 | Goal (global): 761 -> (local): (4, 3) at time 5
[DBG]  Agent 135 | Start (global): 728 -> (local): (3, 2) at time 1 | Goal (global): 761 -> (local): (4, 3) at time 3
[DBG]  [REPAIR] SAT destroy operator called.
[DBG]  [REPAIR] SAT operator â€“ launching subproblem FOR OPTIMIZATION.
[DBG]  Creating local paths (sx, sy) in the submap for T_sync = 1
[DBG]    Agent 12 (global paths from T=1 to 4) has local path: (3,1) (3,2) (3,3) (3,4) 
[DBG]    Agent 17 (global paths from T=1 to 6) has local path: (2,2) (2,3) (2,3) (2,3) (3,3) (3,4) 
[DBG]    Agent 47 (global paths from T=1 to 2) has local path: (3,3) (4,3) 
[DBG]    Agent 70 (global paths from T=1 to 5) has local path: (1,2) (2,2) (3,2) (3,3) (4,3) 
[DBG]    Agent 135 (global paths from T=1 to 3) has local path: (3,2) (3,3) (4,3) 
[DBG]  Checking input data for SAT solver:
[DBG]    - Number of agents to replan: 5
[DBG]  Agent 12 has the original local path length: 4 => Start (3,1), Goal (3,4)
[DBG]  Agent 17 has the original local path length: 6 => Start (2,2), Goal (3,4)
[DBG]  Agent 47 has the original local path length: 2 => Start (3,3), Goal (4,3)
[DBG]  Agent 70 has the original local path length: 5 => Start (1,2), Goal (4,3)
[DBG]  Agent 135 has the original local path length: 3 => Start (3,2), Goal (4,3)
[DBG]  Start position: (3, 1), (2, 2), (3, 3), (1, 2), (3, 2), 
[DBG]  Goal position: (3, 4), (3, 4), (4, 3), (4, 3), (4, 3), 
[DBG]  SAT instance and solver created.
Currently solving
Instance name: scen
Map name: map
Encoding used: disappear_at_goal
SAT solver used: Kissat
Optimizing function: sum of costs
Number of agents: 5
Mks LB: 5
SoC LB: 18
Delta: 0
Remaining time: 300000 [ms]

[STAT] Solver returned: -1
[DBG]  SAT solver failed.
[STAT] SAT solver failed to find a valid solution.
[DBG]  ====================
[DBG]  SAT destroy operator called.
[DBG]  SAT heuristic: 2
[DBG]  key_agent_id: 17
[DBG]  key_agent_id global path length: 18
[DBG]  Submap content (global positions):
[DBG]  538 539 540 541 542 
[DBG]  570 571 572 573 574 
[DBG]  602 603 604 605 606 
[DBG]  634 635 636 637 638 
[DBG]  666 667 668 669 670 
[DBG]  Map content with agents and obstacles:
[DBG]  A . A . X 
[DBG]  . . A X X 
[DBG]  . . A X X 
[DBG]  X A . . A 
[DBG]  . . . X . 
[DBG]  content of the map structure that we pass to the SAT solver:
[DBG]  1  1  1  1  -1  
[DBG]  1  1  1  -1  -1  
[DBG]  1  1  1  -1  -1  
[DBG]  -1  1  1  1  1  
[DBG]  1  1  1  -1  1  
[DBG]  Identifying agents in a submap for rescheduling (when key_agent is there at the time 16):
[DBG]  Agent 17 found intervals in the sub-map:
[DBG]   [12..17]
[DBG]  Agent 17 (interval in submap: [12..17]) contains time 16, added to replan.
[DBG]  Agent 25 found intervals in the sub-map:
[DBG]   [10..16]
[DBG]  Agent 25 (interval in submap: [10..16]) contains time 16, added to replan.
[DBG]  Agent 46 found intervals in the sub-map:
[DBG]   [14..16]
[DBG]  Agent 46 (interval in submap: [14..16]) contains time 16, added to replan.
[DBG]  Agent 58 found intervals in the sub-map:
[DBG]   [15..25]
[DBG]  Agent 58 (interval in submap: [15..25]) contains time 16, added to replan.
[DBG]  Agent 77 found intervals in the sub-map:
[DBG]   [9..23]
[DBG]  Agent 77 (interval in submap: [9..23]) contains time 16, added to replan.
[DBG]  Agent 119 found intervals in the sub-map:
[DBG]   [9..15]
[DBG]  Agent 119 is not in sub-map at time 16 (intervals: 
[DBG]  [9..15] )
[DBG]  Agent 133 found intervals in the sub-map:
[DBG]   [11..19]
[DBG]  Agent 133 (interval in submap: [11..19]) contains time 16, added to replan.
[DBG]  Agent 142 found intervals in the sub-map:
[DBG]   [26..33]
[DBG]  Agent 142 is not in sub-map at time 16 (intervals: 
[DBG]  [26..33] )
[DBG]  Agent 144 found intervals in the sub-map:
[DBG]   [19..22] [24..31]
[DBG]  Agent 144 is not in sub-map at time 16 (intervals: 
[DBG]  [19..22] [24..31] )
[DBG]  Agent 17 | Start (global): 604 -> (local): (2, 2) at time 16 | Goal (global): 572 -> (local): (1, 2) at time 17
[DBG]  Agent 25 | Start (global): 540 -> (local): (0, 2) at time 16 | Goal (global): 540 -> (local): (0, 2) at time 16
[DBG]  Agent 46 | Start (global): 538 -> (local): (0, 0) at time 16 | Goal (global): 538 -> (local): (0, 0) at time 16
[DBG]  Agent 58 | Start (global): 638 -> (local): (3, 4) at time 16 | Goal (global): 539 -> (local): (0, 1) at time 25
[DBG]  Agent 77 | Start (global): 635 -> (local): (3, 1) at time 16 | Goal (global): 670 -> (local): (4, 4) at time 23
[DBG]  Agent 133 | Start (global): 572 -> (local): (1, 2) at time 16 | Goal (global): 538 -> (local): (0, 0) at time 19
[DBG]  [REPAIR] SAT destroy operator called.
[DBG]  [REPAIR] SAT operator â€“ launching subproblem FOR OPTIMIZATION.
[DBG]  Creating local paths (sx, sy) in the submap for T_sync = 16
[DBG]    Agent 17 (global paths from T=16 to 17) has local path: (2,2) (1,2) 
[DBG]    Agent 25 (global paths from T=16 to 16) has local path: (0,2) 
[DBG]    Agent 46 (global paths from T=16 to 16) has local path: (0,0) 
[DBG]    Agent 58 (global paths from T=16 to 25) has local path: (3,4) (3,3) (3,2) (3,2) (2,2) (2,1) (2,1) (1,1) (1,1) (0,1) 
[DBG]    Agent 77 (global paths from T=16 to 23) has local path: (3,1) (3,1) (3,1) (3,1) (3,2) (3,3) (3,4) (4,4) 
[DBG]    Agent 133 (global paths from T=16 to 19) has local path: (1,2) (1,1) (1,0) (0,0) 
[DBG]  Checking input data for SAT solver:
[DBG]    - Number of agents to replan: 6
[DBG]  Agent 17 has the original local path length: 2 => Start (2,2), Goal (1,2)
[DBG]  Agent 25 has the original local path length: 1 => Start (0,2), Goal (0,2)
[DBG]  Agent 46 has the original local path length: 1 => Start (0,0), Goal (0,0)
[DBG]  Agent 58 has the original local path length: 10 => Start (3,4), Goal (0,1)
[DBG]  Agent 77 has the original local path length: 8 => Start (3,1), Goal (4,4)
[DBG]  Agent 133 has the original local path length: 4 => Start (1,2), Goal (0,0)
[DBG]  Start position: (2, 2), (0, 2), (0, 0), (3, 4), (3, 1), (1, 2), 
[DBG]  Goal position: (1, 2), (0, 2), (0, 0), (0, 1), (4, 4), (0, 0), 
[DBG]  SAT instance and solver created.
Currently solving
Instance name: scen
Map name: map
Encoding used: disappear_at_goal
SAT solver used: Kissat
Optimizing function: sum of costs
Number of agents: 6
Mks LB: 7
SoC LB: 20
Delta: 0
Remaining time: 300000 [ms]

[STAT] Solver returned: -1
[DBG]  SAT solver failed.
[STAT] SAT solver failed to find a valid solution.
[DBG]  ====================
[DBG]  SAT destroy operator called.
[DBG]  SAT heuristic: 2
[DBG]  key_agent_id: 17
[DBG]  key_agent_id global path length: 18
[DBG]  Submap content (global positions):
[DBG]  631 632 633 634 635 
[DBG]  663 664 665 666 667 
[DBG]  695 696 697 698 699 
[DBG]  727 728 729 730 731 
[DBG]  759 760 761 762 763 
[DBG]  Map content with agents and obstacles:
[DBG]  . . . X A 
[DBG]  X . X . . 
[DBG]  X . A X X 
[DBG]  . . A A . 
[DBG]  . X . X X 
[DBG]  content of the map structure that we pass to the SAT solver:
[DBG]  1  1  1  -1  1  
[DBG]  -1  1  -1  1  1  
[DBG]  -1  1  1  -1  -1  
[DBG]  1  1  1  1  1  
[DBG]  1  -1  1  -1  -1  
[DBG]  Identifying agents in a submap for rescheduling (when key_agent is there at the time 4):
[DBG]  Agent 7 found intervals in the sub-map:
[DBG]  
[DBG]  Agent 7 is not in sub-map at time 4 (intervals: 
[DBG]  )
[DBG]  Agent 12 found intervals in the sub-map:
[DBG]   [1..5]
[DBG]  Agent 12 (interval in submap: [1..5]) contains time 4, added to replan.
[DBG]  Agent 17 found intervals in the sub-map:
[DBG]   [0..7]
[DBG]  Agent 17 (interval in submap: [0..7]) contains time 4, added to replan.
[DBG]  Agent 64 found intervals in the sub-map:
[DBG]   [4..4]
[DBG]  Agent 64 (interval in submap: [4..4]) contains time 4, added to replan.
[DBG]  Agent 70 found intervals in the sub-map:
[DBG]   [0..5]
[DBG]  Agent 70 (interval in submap: [0..5]) contains time 4, added to replan.
[DBG]  Agent 12 | Start (global): 730 -> (local): (3, 3) at time 4 | Goal (global): 731 -> (local): (3, 4) at time 5
[DBG]  Agent 17 | Start (global): 697 -> (local): (2, 2) at time 4 | Goal (global): 731 -> (local): (3, 4) at time 7
[DBG]  Agent 64 | Start (global): 635 -> (local): (0, 4) at time 4 | Goal (global): 635 -> (local): (0, 4) at time 4
[DBG]  Agent 70 | Start (global): 729 -> (local): (3, 2) at time 4 | Goal (global): 761 -> (local): (4, 2) at time 5
[DBG]  [REPAIR] SAT destroy operator called.
[DBG]  [REPAIR] SAT operator â€“ launching subproblem FOR OPTIMIZATION.
[DBG]  Creating local paths (sx, sy) in the submap for T_sync = 4
[DBG]    Agent 12 (global paths from T=4 to 5) has local path: (3,3) (3,4) 
[DBG]    Agent 17 (global paths from T=4 to 7) has local path: (2,2) (3,2) (3,3) (3,4) 
[DBG]    Agent 64 (global paths from T=4 to 4) has local path: (0,4) 
[DBG]    Agent 70 (global paths from T=4 to 5) has local path: (3,2) (4,2) 
[DBG]  Checking input data for SAT solver:
[DBG]    - Number of agents to replan: 4
[DBG]  Agent 12 has the original local path length: 2 => Start (3,3), Goal (3,4)
[DBG]  Agent 17 has the original local path length: 4 => Start (2,2), Goal (3,4)
[DBG]  Agent 64 has the original local path length: 1 => Start (0,4), Goal (0,4)
[DBG]  Agent 70 has the original local path length: 2 => Start (3,2), Goal (4,2)
[DBG]  Start position: (3, 3), (2, 2), (0, 4), (3, 2), 
[DBG]  Goal position: (3, 4), (3, 4), (0, 4), (4, 2), 
[DBG]  SAT instance and solver created.
Currently solving
Instance name: scen
Map name: map
Encoding used: disappear_at_goal
SAT solver used: Kissat
Optimizing function: sum of costs
Number of agents: 4
Mks LB: 4
SoC LB: 9
Delta: 0
Remaining time: 300000 [ms]

Vertex conflict! Agents 0, 2, timestep 2, location 0
Swapping conflict! Agents 0, 2, timestep 2, edge (0,0)
Vertex conflict! Agents 0, 2, timestep 3, location 0
Vertex conflict! Agents 0, 3, timestep 2, location 0
Swapping conflict! Agents 0, 3, timestep 2, edge (0,0)
Vertex conflict! Agents 0, 3, timestep 3, location 0
Vertex conflict! Agents 2, 3, timestep 2, location 0
Swapping conflict! Agents 2, 3, timestep 2, edge (0,0)
Vertex conflict! Agents 2, 3, timestep 3, location 0
Found plan [agents = 4] [timesteps = 4]
Agent #0 : 12 13 0 0 
Agent #1 : 8 11 12 13 
Agent #2 : 3 0 0 0 
Agent #3 : 11 15 0 0 

[STAT] Solver returned: 0
[DBG]  Agent (index) 12 | New local path (submap idx):
[DBG]  12 13 
[DBG]  Agent (index) 17 | New local path (submap idx):
[DBG]  8 11 12 13 
[DBG]  Agent (index) 64 | New local path (submap idx):
[DBG]  3 
[DBG]  Agent (index) 70 | New local path (submap idx):
[DBG]  11 15 
[DBG]  Update the agent path 12 | Original local length: 2 | New local length: 2
[DBG]  agent 12 t=0 => decoded (sx,sy)=(3,3) => global_id=730
[DBG]  agent 12 t=1 => decoded (sx,sy)=(3,4) => global_id=731
[DBG]  Complete path of agent 12:
[DBG]    Original: 726 727 728 729 730 731 732 764 765 766 767 
[DBG]    New:     726 727 728 729 730 731 732 764 765 766 767 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 726 727 728 729 
[DBG]    Local path (in submap): 730 731 
[DBG]    Suffix (out of submap): 732 764 765 766 767 
[DBG]  Original agent path length 12 je: 11
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 0: 726, 727, 728, 729, 730, 731, 732, 764, 765, 766, 767, 
[DBG]  Path for agent 12 updated, resulting length: 11
[DBG]  Update the agent path 17 | Original local length: 4 | New local length: 4
[DBG]  agent 17 t=0 => decoded (sx,sy)=(2,2) => global_id=697
[DBG]  agent 17 t=1 => decoded (sx,sy)=(3,2) => global_id=729
[DBG]  agent 17 t=2 => decoded (sx,sy)=(3,3) => global_id=730
[DBG]  agent 17 t=3 => decoded (sx,sy)=(3,4) => global_id=731
[DBG]  Complete path of agent 17:
[DBG]    Original: 664 696 697 697 697 729 730 731 732 733 701 702 670 638 637 636 604 572 
[DBG]    New:     664 696 697 697 697 729 730 731 732 733 701 702 670 638 637 636 604 572 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 664 696 697 697 
[DBG]    Local path (in submap): 697 729 730 731 
[DBG]    Suffix (out of submap): 732 733 701 702 670 638 637 636 604 572 
[DBG]  Original agent path length 17 je: 18
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 1: 664, 696, 697, 697, 697, 729, 730, 731, 732, 733, 701, 702, 670, 638, 637, 636, 604, 572, 
[DBG]  Path for agent 17 updated, resulting length: 18
[DBG]  Update the agent path 64 | Original local length: 1 | New local length: 1
[DBG]  agent 64 t=0 => decoded (sx,sy)=(0,4) => global_id=635
[DBG]  Complete path of agent 64:
[DBG]    Original: 639 638 637 636 635 603 602 570 538 506 505 504 472 440 439 407 375 343 311 279 247 215 214 213 181 180 
[DBG]    New:     639 638 637 636 635 603 602 570 538 506 505 504 472 440 439 407 375 343 311 279 247 215 214 213 181 180 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 639 638 637 636 
[DBG]    Local path (in submap): 635 
[DBG]    Suffix (out of submap): 603 602 570 538 506 505 504 472 440 439 407 375 343 311 279 247 215 214 213 181 180 
[DBG]  Original agent path length 64 je: 26
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 2: 639, 638, 637, 636, 635, 603, 602, 570, 538, 506, 505, 504, 472, 440, 439, 407, 375, 343, 311, 279, 247, 215, 214, 213, 181, 180, 
[DBG]  Path for agent 64 updated, resulting length: 26
[DBG]  Update the agent path 70 | Original local length: 2 | New local length: 2
[DBG]  agent 70 t=0 => decoded (sx,sy)=(3,2) => global_id=729
[DBG]  agent 70 t=1 => decoded (sx,sy)=(4,2) => global_id=761
[DBG]  Complete path of agent 70:
[DBG]    Original: 632 664 696 728 729 761 793 792 824 823 822 821 820 819 851 850 850 882 914 913 912 944 976 975 974 
[DBG]    New:     632 664 696 728 729 761 793 792 824 823 822 821 820 819 851 850 850 882 914 913 912 944 976 975 974 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 632 664 696 728 
[DBG]    Local path (in submap): 729 761 
[DBG]    Suffix (out of submap): 793 792 824 823 822 821 820 819 851 850 850 882 914 913 912 944 976 975 974 
[DBG]  Original agent path length 70 je: 25
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 3: 632, 664, 696, 728, 729, 761, 793, 792, 824, 823, 822, 821, 820, 819, 851, 850, 850, 882, 914, 913, 912, 944, 976, 975, 974, 
[DBG]  Path for agent 70 updated, resulting length: 25
[DBG]  Paths successfully updated.
[DBG]  (LNS.cpp) New path for agent 12: 
[DBG]  726, 727, 728, 729, 730, 731, 732, 764, 765, 766, 767, 
[DBG]  (LNS.cpp) New path for agent 17: 
[DBG]  664, 696, 697, 697, 697, 729, 730, 731, 732, 733, 701, 702, 670, 638, 637, 636, 604, 572, 
[DBG]  (LNS.cpp) New path for agent 64: 
[DBG]  639, 638, 637, 636, 635, 603, 602, 570, 538, 506, 505, 504, 472, 440, 439, 407, 375, 343, 311, 279, 247, 215, 214, 213, 181, 180, 
[DBG]  (LNS.cpp) New path for agent 70: 
[DBG]  632, 664, 696, 728, 729, 761, 793, 792, 824, 823, 822, 821, 820, 819, 851, 850, 850, 882, 914, 913, 912, 944, 976, 975, 974, 
[DBG]  component_weights = {0.366704, 0.0928301, 0.0970771, 0.443389}
[DBG]  opSuccess value: 1
[STAT] neighbor.sum_of_costs before recomputation: 76
[STAT] neighbor.old_sum_of_costs before recomputation: 76
[STAT] sum_of_costs before recomputation: 4224
[DBG]  Validate solution immediately after SAT success.
[DBG]  No problems after SAT replan.
[DBG]  Recomputing sum_of_cost by dividing neighbor.sum_of_costs and neighbor.old_sum_of_costs
[STAT] sum_of_costs after recomputation: 4224
[STAT] Iteration 146
[DBG]  Using SAT operator (destroy+repair SAT).
[DBG]  ====================
[DBG]  SAT destroy operator called.
[DBG]  SAT heuristic: 2
[DBG]  key_agent_id: 7
[DBG]  key_agent_id global path length: 24
[DBG]  Submap content (global positions):
[DBG]  852 853 854 855 856 
[DBG]  884 885 886 887 888 
[DBG]  916 917 918 919 920 
[DBG]  948 949 950 951 952 
[DBG]  980 981 982 983 984 
[DBG]  Map content with agents and obstacles:
[DBG]  X X . . . 
[DBG]  A . . . . 
[DBG]  . . A . . 
[DBG]  . A . X . 
[DBG]  . . . . . 
[DBG]  content of the map structure that we pass to the SAT solver:
[DBG]  -1  -1  1  1  1  
[DBG]  1  1  1  1  1  
[DBG]  1  1  1  1  1  
[DBG]  1  1  1  -1  1  
[DBG]  1  1  1  1  1  
[DBG]  Identifying agents in a submap for rescheduling (when key_agent is there at the time 18):
[DBG]  Agent 1 found intervals in the sub-map:
[DBG]   [0..25]
[DBG]  Agent 1 (interval in submap: [0..25]) contains time 18, added to replan.
[DBG]  Agent 7 found intervals in the sub-map:
[DBG]   [15..21]
[DBG]  Agent 7 (interval in submap: [15..21]) contains time 18, added to replan.
[DBG]  Agent 11 found intervals in the sub-map:
[DBG]   [13..18]
[DBG]  Agent 11 (interval in submap: [13..18]) contains time 18, added to replan.
[DBG]  Agent 14 found intervals in the sub-map:
[DBG]   [8..12]
[DBG]  Agent 14 is not in sub-map at time 18 (intervals: 
[DBG]  [8..12] )
[DBG]  Agent 35 found intervals in the sub-map:
[DBG]   [12..16]
[DBG]  Agent 35 is not in sub-map at time 18 (intervals: 
[DBG]  [12..16] )
[DBG]  Agent 70 found intervals in the sub-map:
[DBG]  
[DBG]  Agent 70 is not in sub-map at time 18 (intervals: 
[DBG]  )
[DBG]  Agent 102 found intervals in the sub-map:
[DBG]  
[DBG]  Agent 102 is not in sub-map at time 18 (intervals: 
[DBG]  )
[DBG]  Agent 1 | Start (global): 949 -> (local): (3, 1) at time 18 | Goal (global): 856 -> (local): (0, 4) at time 25
[DBG]  Agent 7 | Start (global): 918 -> (local): (2, 2) at time 18 | Goal (global): 888 -> (local): (1, 4) at time 21
[DBG]  Agent 11 | Start (global): 884 -> (local): (1, 0) at time 18 | Goal (global): 884 -> (local): (1, 0) at time 18
[DBG]  [REPAIR] SAT destroy operator called.
[DBG]  [REPAIR] SAT operator â€“ launching subproblem FOR OPTIMIZATION.
[DBG]  Creating local paths (sx, sy) in the submap for T_sync = 18
[DBG]    Agent 1 (global paths from T=18 to 25) has local path: (3,1) (2,1) (1,1) (1,1) (1,2) (1,3) (1,4) (0,4) 
[DBG]    Agent 7 (global paths from T=18 to 21) has local path: (2,2) (1,2) (1,3) (1,4) 
[DBG]    Agent 11 (global paths from T=18 to 18) has local path: (1,0) 
[DBG]  Checking input data for SAT solver:
[DBG]    - Number of agents to replan: 3
[DBG]  Agent 1 has the original local path length: 8 => Start (3,1), Goal (0,4)
[DBG]  Agent 7 has the original local path length: 4 => Start (2,2), Goal (1,4)
[DBG]  Agent 11 has the original local path length: 1 => Start (1,0), Goal (1,0)
[DBG]  Start position: (3, 1), (2, 2), (1, 0), 
[DBG]  Goal position: (0, 4), (1, 4), (1, 0), 
[DBG]  SAT instance and solver created.
Currently solving
Instance name: scen
Map name: map
Encoding used: disappear_at_goal
SAT solver used: Kissat
Optimizing function: sum of costs
Number of agents: 3
Mks LB: 7
SoC LB: 12
Delta: 0
Remaining time: 300000 [ms]

Vertex conflict! Agents 1, 2, timestep 4, location 0
Swapping conflict! Agents 1, 2, timestep 4, edge (0,0)
Vertex conflict! Agents 1, 2, timestep 5, location 0
Swapping conflict! Agents 1, 2, timestep 5, edge (0,0)
Vertex conflict! Agents 1, 2, timestep 6, location 0
Found plan [agents = 3] [timesteps = 7]
Agent #0 : 14 15 10 11 12 7 2 
Agent #1 : 10 11 12 7 0 0 0 
Agent #2 : 3 0 0 0 0 0 0 

[STAT] Solver returned: 0
[DBG]  Agent (index) 1 | New local path (submap idx):
[DBG]  14 15 10 11 12 7 2 
[DBG]  Agent (index) 7 | New local path (submap idx):
[DBG]  10 11 12 7 
[DBG]  Agent (index) 11 | New local path (submap idx):
[DBG]  3 
[DBG]  Update the agent path 1 | Original local length: 8 | New local length: 7
[DBG]  agent 1 t=0 => decoded (sx,sy)=(3,1) => global_id=949
[DBG]  agent 1 t=1 => decoded (sx,sy)=(3,2) => global_id=950
[DBG]  agent 1 t=2 => decoded (sx,sy)=(2,2) => global_id=918
[DBG]  agent 1 t=3 => decoded (sx,sy)=(2,3) => global_id=919
[DBG]  agent 1 t=4 => decoded (sx,sy)=(2,4) => global_id=920
[DBG]  agent 1 t=5 => decoded (sx,sy)=(1,4) => global_id=888
[DBG]  agent 1 t=6 => decoded (sx,sy)=(0,4) => global_id=856
[DBG]  Complete path of agent 1:
[DBG]    Original: 949 949 949 949 949 949 949 949 949 949 949 949 949 949 949 949 949 949 949 917 885 885 886 887 888 856 824 792 793 761 729 729 728 
[DBG]    New:     949 949 949 949 949 949 949 949 949 949 949 949 949 949 949 949 949 949 949 950 918 919 920 888 856 824 792 793 761 729 729 728 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 949 949 949 949 949 949 949 949 949 949 949 949 949 949 949 949 949 949 
[DBG]    Local path (in submap): 949 950 918 919 920 888 856 824 
[DBG]    Suffix (out of submap): 792 793 761 729 729 728 
[DBG]  Original agent path length 1 je: 33
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 0: 949, 949, 949, 949, 949, 949, 949, 949, 949, 949, 949, 949, 949, 949, 949, 949, 949, 949, 949, 950, 918, 919, 920, 888, 856, 824, 792, 793, 761, 729, 729, 728, 
[DBG]  Path for agent 1 updated, resulting length: 32
[DBG]  Update the agent path 7 | Original local length: 4 | New local length: 4
[DBG]  agent 7 t=0 => decoded (sx,sy)=(2,2) => global_id=918
[DBG]  agent 7 t=1 => decoded (sx,sy)=(2,3) => global_id=919
[DBG]  agent 7 t=2 => decoded (sx,sy)=(2,4) => global_id=920
[DBG]  agent 7 t=3 => decoded (sx,sy)=(1,4) => global_id=888
[DBG]  Complete path of agent 7:
[DBG]    Original: 756 755 787 788 820 819 819 851 851 851 851 883 851 851 883 884 916 917 918 886 887 888 889 921 
[DBG]    New:     756 755 787 788 820 819 819 851 851 851 851 883 851 851 883 884 916 917 918 919 920 888 889 921 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 756 755 787 788 820 819 819 851 851 851 851 883 851 851 883 884 916 917 
[DBG]    Local path (in submap): 918 919 920 888 
[DBG]    Suffix (out of submap): 889 921 
[DBG]  Original agent path length 7 je: 24
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 1: 756, 755, 787, 788, 820, 819, 819, 851, 851, 851, 851, 883, 851, 851, 883, 884, 916, 917, 918, 919, 920, 888, 889, 921, 
[DBG]  Path for agent 7 updated, resulting length: 24
[DBG]  Update the agent path 11 | Original local length: 1 | New local length: 1
[DBG]  agent 11 t=0 => decoded (sx,sy)=(1,0) => global_id=884
[DBG]  Complete path of agent 11:
[DBG]    Original: 990 1022 990 989 957 956 956 956 956 924 923 922 921 920 919 918 917 885 884 883 851 851 883 882 881 880 879 847 815 783 751 752 753 721 721 721 689 657 
[DBG]    New:     990 1022 990 989 957 956 956 956 956 924 923 922 921 920 919 918 917 885 884 883 851 851 883 882 881 880 879 847 815 783 751 752 753 721 721 721 689 657 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 990 1022 990 989 957 956 956 956 956 924 923 922 921 920 919 918 917 885 
[DBG]    Local path (in submap): 884 
[DBG]    Suffix (out of submap): 883 851 851 883 882 881 880 879 847 815 783 751 752 753 721 721 721 689 657 
[DBG]  Original agent path length 11 je: 38
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 2: 990, 1022, 990, 989, 957, 956, 956, 956, 956, 924, 923, 922, 921, 920, 919, 918, 917, 885, 884, 883, 851, 851, 883, 882, 881, 880, 879, 847, 815, 783, 751, 752, 753, 721, 721, 721, 689, 657, 
[DBG]  Path for agent 11 updated, resulting length: 38
[DBG]  Paths successfully updated.
[DBG]  (LNS.cpp) New path for agent 1: 
[DBG]  949, 949, 949, 949, 949, 949, 949, 949, 949, 949, 949, 949, 949, 949, 949, 949, 949, 949, 949, 950, 918, 919, 920, 888, 856, 824, 792, 793, 761, 729, 729, 728, 
[DBG]  (LNS.cpp) New path for agent 7: 
[DBG]  756, 755, 787, 788, 820, 819, 819, 851, 851, 851, 851, 883, 851, 851, 883, 884, 916, 917, 918, 919, 920, 888, 889, 921, 
[DBG]  (LNS.cpp) New path for agent 11: 
[DBG]  990, 1022, 990, 989, 957, 956, 956, 956, 956, 924, 923, 922, 921, 920, 919, 918, 917, 885, 884, 883, 851, 851, 883, 882, 881, 880, 879, 847, 815, 783, 751, 752, 753, 721, 721, 721, 689, 657, 
[DBG]  component_weights = {0.363398, 0.0919932, 0.0962018, 0.448407}
[DBG]  opSuccess value: 1
[STAT] neighbor.sum_of_costs before recomputation: 91
[STAT] neighbor.old_sum_of_costs before recomputation: 92
[STAT] sum_of_costs before recomputation: 4224
[DBG]  Validate solution immediately after SAT success.
[WARNING] Problem after SAT: Vertex conflict between agents 1 and 111 at location 728 at timestep 31
[DBG]  Attempting immediate repair via init_lns because problem occurred after SAT (should be applied only for conflicts...).
[DBG]  Passing 150 agents to init_lns (skip=true).
[DBG]  path_table contents for selected agents (neighbor.agents):
[DBG]    Agent 1 => controlling path length=32
[DBG]    Agent 7 => controlling path length=24
[DBG]    Agent 11 => controlling path length=38
[DBG]  hodnota skip_initial_solution=1
[DBG]  We skip initialSolution => call buildCollisionData()
[DBG]  buildCollisionData() called â€“ skip_initial_solution case.
[DBG]  Agents.size()=150, collision_graph.size()=150
[DBG]  agent 1 => updateCollidingPairs => foundCollision
[DBG]  agent 111 => updateCollidingPairs => foundCollision
[DBG]  Conflicting agent pairs:
[DBG]  agent 1 is in conflict with agent 111
[DBG]  buildCollisionData() => sum_of_costs=4223, num_of_colliding_pairs=1
[DBG]  buildCollisionData done => sum_of_costs=4223, num_of_colliding_pairs=1
[DBG]  sum_of_cost hodnota: 4223
[DBG]  After skip/init build => iteration_stats.back(): sum_of_costs=4223, collisions=1
[DEBUG] Using default neighbor generation strategy for conflicts: 0
	InitLNS(PP): runtime = 0.00123292, iterations = 2, colliding pairs = 0, initial colliding pairs = 1, solution cost = 4224, initial solution cost = 4223, failed iterations = 0
[DBG]  init_lns->sum_of_costs after init_lns->run: 4224
[DBG]  sum_of_costs after assignment from init_lns->run: 4224
[DBG]  Recomputing sum_of_cost by dividing neighbor.sum_of_costs and neighbor.old_sum_of_costs
[STAT] sum_of_costs after recomputation: 4224
[STAT] Iteration 147
[DBG]  Using SAT operator (destroy+repair SAT).
[DBG]  ====================
[DBG]  SAT destroy operator called.
[DBG]  SAT heuristic: 2
[DBG]  key_agent_id: 108
[DBG]  key_agent_id global path length: 24
[DBG]  Submap content (global positions):
[DBG]  923 924 925 926 927 
[DBG]  955 956 957 958 959 
[DBG]  987 988 989 990 991 
[DBG]  1019 1020 1021 1022 1023 
[DBG]  -1 -1 -1 -1 -1 
[DBG]  Map content with agents and obstacles:
[DBG]  . . X X X 
[DBG]  . . . X X 
[DBG]  X . A . . 
[DBG]  . X . . . 
[DBG]  X X X X X 
[DBG]  content of the map structure that we pass to the SAT solver:
[DBG]  1  1  -1  -1  -1  
[DBG]  1  1  1  -1  -1  
[DBG]  -1  1  1  1  1  
[DBG]  1  -1  1  1  1  
[DBG]  1  1  1  1  1  
[DBG]  Identifying agents in a submap for rescheduling (when key_agent is there at the time 22):
[DBG]  Agent 102 found intervals in the sub-map:
[DBG]   [0..8]
[DBG]  Agent 102 is not in sub-map at time 22 (intervals: 
[DBG]  [0..8] )
[DBG]  Agent 108 found intervals in the sub-map:
[DBG]   [19..23]
[DBG]  Agent 108 (interval in submap: [19..23]) contains time 22, added to replan.
[DBG]  Agent 108 | Start (global): 989 -> (local): (2, 2) at time 22 | Goal (global): 1021 -> (local): (3, 2) at time 23
[DBG]  [REPAIR] SAT destroy operator called.
[DBG]  [REPAIR] SAT operator â€“ launching subproblem FOR OPTIMIZATION.
[DBG]  Creating local paths (sx, sy) in the submap for T_sync = 22
[DBG]    Agent 108 (global paths from T=22 to 23) has local path: (2,2) (3,2) 
[DBG]  Checking input data for SAT solver:
[DBG]    - Number of agents to replan: 1
[DBG]  Agent 108 has the original local path length: 2 => Start (2,2), Goal (3,2)
[DBG]  Start position: (2, 2), 
[DBG]  Goal position: (3, 2), 
[DBG]  SAT instance and solver created.
Currently solving
Instance name: scen
Map name: map
Encoding used: disappear_at_goal
SAT solver used: Kissat
Optimizing function: sum of costs
Number of agents: 1
Mks LB: 2
SoC LB: 2
Delta: 0
Remaining time: 300000 [ms]

Found plan [agents = 1] [timesteps = 2]
Agent #0 : 6 10 

[STAT] Solver returned: 0
[DBG]  Agent (index) 108 | New local path (submap idx):
[DBG]  6 10 
[DBG]  Update the agent path 108 | Original local length: 2 | New local length: 2
[DBG]  agent 108 t=0 => decoded (sx,sy)=(2,2) => global_id=989
[DBG]  agent 108 t=1 => decoded (sx,sy)=(3,2) => global_id=1021
[DBG]  Complete path of agent 108:
[DBG]    Original: 628 660 692 724 725 726 727 728 729 730 731 732 764 765 797 829 861 860 892 924 956 957 989 1021 
[DBG]    New:     628 660 692 724 725 726 727 728 729 730 731 732 764 765 797 829 861 860 892 924 956 957 989 1021 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 628 660 692 724 725 726 727 728 729 730 731 732 764 765 797 829 861 860 892 924 956 957 
[DBG]    Local path (in submap): 989 1021 
[DBG]    Suffix (out of submap): 
[DBG]  Original agent path length 108 je: 24
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 0: 628, 660, 692, 724, 725, 726, 727, 728, 729, 730, 731, 732, 764, 765, 797, 829, 861, 860, 892, 924, 956, 957, 989, 1021, 
[DBG]  Path for agent 108 updated, resulting length: 24
[DBG]  Paths successfully updated.
[DBG]  (LNS.cpp) New path for agent 108: 
[DBG]  628, 660, 692, 724, 725, 726, 727, 728, 729, 730, 731, 732, 764, 765, 797, 829, 861, 860, 892, 924, 956, 957, 989, 1021, 
[DBG]  component_weights = {0.368085, 0.091316, 0.0954936, 0.445106}
[DBG]  opSuccess value: 1
[STAT] neighbor.sum_of_costs before recomputation: 23
[STAT] neighbor.old_sum_of_costs before recomputation: 23
[STAT] sum_of_costs before recomputation: 4224
[DBG]  Validate solution immediately after SAT success.
[DBG]  No problems after SAT replan.
[DBG]  Recomputing sum_of_cost by dividing neighbor.sum_of_costs and neighbor.old_sum_of_costs
[STAT] sum_of_costs after recomputation: 4224
[STAT] Iteration 148
[DBG]  Using SAT operator (destroy+repair SAT).
[DBG]  ====================
[DBG]  SAT destroy operator called.
[DBG]  SAT heuristic: 2
[DBG]  key_agent_id: 46
[DBG]  key_agent_id global path length: 30
[DBG]  Submap content (global positions):
[DBG]  345 346 347 348 349 
[DBG]  377 378 379 380 381 
[DBG]  409 410 411 412 413 
[DBG]  441 442 443 444 445 
[DBG]  473 474 475 476 477 
[DBG]  Map content with agents and obstacles:
[DBG]  . X . . . 
[DBG]  A . . . . 
[DBG]  . X A . A 
[DBG]  . X . . . 
[DBG]  A A . A . 
[DBG]  content of the map structure that we pass to the SAT solver:
[DBG]  1  -1  1  1  1  
[DBG]  1  1  1  1  1  
[DBG]  1  -1  1  1  1  
[DBG]  1  -1  1  1  1  
[DBG]  1  1  1  1  1  
[DBG]  Identifying agents in a submap for rescheduling (when key_agent is there at the time 21):
[DBG]  Agent 25 found intervals in the sub-map:
[DBG]   [18..23]
[DBG]  Agent 25 (interval in submap: [18..23]) contains time 21, added to replan.
[DBG]  Agent 46 found intervals in the sub-map:
[DBG]   [18..25]
[DBG]  Agent 46 (interval in submap: [18..25]) contains time 21, added to replan.
[DBG]  Agent 54 found intervals in the sub-map:
[DBG]   [19..21]
[DBG]  Agent 54 (interval in submap: [19..21]) contains time 21, added to replan.
[DBG]  Agent 58 found intervals in the sub-map:
[DBG]   [27..31]
[DBG]  Agent 58 is not in sub-map at time 21 (intervals: 
[DBG]  [27..31] )
[DBG]  Agent 75 found intervals in the sub-map:
[DBG]   [7..15]
[DBG]  Agent 75 is not in sub-map at time 21 (intervals: 
[DBG]  [7..15] )
[DBG]  Agent 91 found intervals in the sub-map:
[DBG]   [18..25]
[DBG]  Agent 91 (interval in submap: [18..25]) contains time 21, added to replan.
[DBG]  Agent 113 found intervals in the sub-map:
[DBG]   [21..26]
[DBG]  Agent 113 (interval in submap: [21..26]) contains time 21, added to replan.
[DBG]  Agent 133 found intervals in the sub-map:
[DBG]   [21..25]
[DBG]  Agent 133 (interval in submap: [21..25]) contains time 21, added to replan.
[DBG]  Agent 25 | Start (global): 413 -> (local): (2, 4) at time 21 | Goal (global): 349 -> (local): (0, 4) at time 23
[DBG]  Agent 46 | Start (global): 411 -> (local): (2, 2) at time 21 | Goal (global): 349 -> (local): (0, 4) at time 25
[DBG]  Agent 54 | Start (global): 473 -> (local): (4, 0) at time 21 | Goal (global): 473 -> (local): (4, 0) at time 21
[DBG]  Agent 91 | Start (global): 476 -> (local): (4, 3) at time 21 | Goal (global): 381 -> (local): (1, 4) at time 25
[DBG]  Agent 113 | Start (global): 377 -> (local): (1, 0) at time 21 | Goal (global): 349 -> (local): (0, 4) at time 26
[DBG]  Agent 133 | Start (global): 474 -> (local): (4, 1) at time 21 | Goal (global): 377 -> (local): (1, 0) at time 25
[DBG]  [REPAIR] SAT destroy operator called.
[DBG]  [REPAIR] SAT operator â€“ launching subproblem FOR OPTIMIZATION.
[DBG]  Creating local paths (sx, sy) in the submap for T_sync = 21
[DBG]    Agent 25 (global paths from T=21 to 23) has local path: (2,4) (1,4) (0,4) 
[DBG]    Agent 46 (global paths from T=21 to 25) has local path: (2,2) (1,2) (0,2) (0,3) (0,4) 
[DBG]    Agent 54 (global paths from T=21 to 21) has local path: (4,0) 
[DBG]    Agent 91 (global paths from T=21 to 25) has local path: (4,3) (4,4) (3,4) (2,4) (1,4) 
[DBG]    Agent 113 (global paths from T=21 to 26) has local path: (1,0) (1,1) (1,2) (1,3) (0,3) (0,4) 
[DBG]    Agent 133 (global paths from T=21 to 25) has local path: (4,1) (4,0) (3,0) (2,0) (1,0) 
[DBG]  Checking input data for SAT solver:
[DBG]    - Number of agents to replan: 6
[DBG]  Agent 25 has the original local path length: 3 => Start (2,4), Goal (0,4)
[DBG]  Agent 46 has the original local path length: 5 => Start (2,2), Goal (0,4)
[DBG]  Agent 54 has the original local path length: 1 => Start (4,0), Goal (4,0)
[DBG]  Agent 91 has the original local path length: 5 => Start (4,3), Goal (1,4)
[DBG]  Agent 113 has the original local path length: 6 => Start (1,0), Goal (0,4)
[DBG]  Agent 133 has the original local path length: 5 => Start (4,1), Goal (1,0)
[DBG]  Start position: (2, 4), (2, 2), (4, 0), (4, 3), (1, 0), (4, 1), 
[DBG]  Goal position: (0, 4), (0, 4), (4, 0), (1, 4), (0, 4), (1, 0), 
[DBG]  SAT instance and solver created.
Currently solving
Instance name: scen
Map name: map
Encoding used: disappear_at_goal
SAT solver used: Kissat
Optimizing function: sum of costs
Number of agents: 6
Mks LB: 6
SoC LB: 25
Delta: 0
Remaining time: 300000 [ms]

Vertex conflict! Agents 0, 1, timestep 5, location 0
Vertex conflict! Agents 0, 2, timestep 3, location 0
Swapping conflict! Agents 0, 2, timestep 3, edge (0,0)
Vertex conflict! Agents 0, 2, timestep 4, location 0
Swapping conflict! Agents 0, 2, timestep 4, edge (0,0)
Vertex conflict! Agents 0, 2, timestep 5, location 0
Vertex conflict! Agents 0, 3, timestep 5, location 0
Vertex conflict! Agents 0, 5, timestep 5, location 0
Vertex conflict! Agents 1, 2, timestep 5, location 0
Vertex conflict! Agents 1, 3, timestep 5, location 0
Vertex conflict! Agents 1, 5, timestep 5, location 0
Vertex conflict! Agents 2, 3, timestep 5, location 0
Vertex conflict! Agents 2, 5, timestep 5, location 0
Vertex conflict! Agents 3, 5, timestep 5, location 0
Found plan [agents = 6] [timesteps = 6]
Agent #0 : 12 8 3 0 0 0 
Agent #1 : 10 11 12 8 3 0 
Agent #2 : 17 0 0 0 0 0 
Agent #3 : 20 21 16 12 8 0 
Agent #4 : 4 5 6 7 2 3 
Agent #5 : 18 17 13 9 4 0 

[STAT] Solver returned: 0
[DBG]  Agent (index) 25 | New local path (submap idx):
[DBG]  12 8 3 
[DBG]  Agent (index) 46 | New local path (submap idx):
[DBG]  10 11 12 8 3 
[DBG]  Agent (index) 54 | New local path (submap idx):
[DBG]  17 
[DBG]  Agent (index) 91 | New local path (submap idx):
[DBG]  20 21 16 12 8 
[DBG]  Agent (index) 113 | New local path (submap idx):
[DBG]  4 5 6 7 2 3 
[DBG]  Agent (index) 133 | New local path (submap idx):
[DBG]  18 17 13 9 4 
[DBG]  Update the agent path 25 | Original local length: 3 | New local length: 3
[DBG]  agent 25 t=0 => decoded (sx,sy)=(2,4) => global_id=413
[DBG]  agent 25 t=1 => decoded (sx,sy)=(1,4) => global_id=381
[DBG]  agent 25 t=2 => decoded (sx,sy)=(0,4) => global_id=349
[DBG]  Complete path of agent 25:
[DBG]    Original: 895 894 862 830 829 797 765 733 701 702 670 638 637 636 604 572 540 508 476 444 445 413 381 349 317 285 284 252 220 221 189 157 158 159 
[DBG]    New:     895 894 862 830 829 797 765 733 701 702 670 638 637 636 604 572 540 508 476 444 445 413 381 349 317 285 284 252 220 221 189 157 158 159 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 895 894 862 830 829 797 765 733 701 702 670 638 637 636 604 572 540 508 476 444 445 
[DBG]    Local path (in submap): 413 381 349 
[DBG]    Suffix (out of submap): 317 285 284 252 220 221 189 157 158 159 
[DBG]  Original agent path length 25 je: 34
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 0: 895, 894, 862, 830, 829, 797, 765, 733, 701, 702, 670, 638, 637, 636, 604, 572, 540, 508, 476, 444, 445, 413, 381, 349, 317, 285, 284, 252, 220, 221, 189, 157, 158, 159, 
[DBG]  Path for agent 25 updated, resulting length: 34
[DBG]  Update the agent path 46 | Original local length: 5 | New local length: 5
[DBG]  agent 46 t=0 => decoded (sx,sy)=(2,2) => global_id=411
[DBG]  agent 46 t=1 => decoded (sx,sy)=(2,3) => global_id=412
[DBG]  agent 46 t=2 => decoded (sx,sy)=(2,4) => global_id=413
[DBG]  agent 46 t=3 => decoded (sx,sy)=(1,4) => global_id=381
[DBG]  agent 46 t=4 => decoded (sx,sy)=(0,4) => global_id=349
[DBG]  Complete path of agent 46:
[DBG]    Original: 786 787 788 756 724 725 726 727 728 696 664 632 633 601 602 570 538 506 474 475 443 411 379 347 348 349 317 285 284 252 
[DBG]    New:     786 787 788 756 724 725 726 727 728 696 664 632 633 601 602 570 538 506 474 475 443 411 412 413 381 349 317 285 284 252 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 786 787 788 756 724 725 726 727 728 696 664 632 633 601 602 570 538 506 474 475 443 
[DBG]    Local path (in submap): 411 412 413 381 349 
[DBG]    Suffix (out of submap): 317 285 284 252 
[DBG]  Original agent path length 46 je: 30
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 1: 786, 787, 788, 756, 724, 725, 726, 727, 728, 696, 664, 632, 633, 601, 602, 570, 538, 506, 474, 475, 443, 411, 412, 413, 381, 349, 317, 285, 284, 252, 
[DBG]  Path for agent 46 updated, resulting length: 30
[DBG]  Update the agent path 54 | Original local length: 1 | New local length: 1
[DBG]  agent 54 t=0 => decoded (sx,sy)=(4,0) => global_id=473
[DBG]  Complete path of agent 54:
[DBG]    Original: 464 464 432 433 401 402 403 404 405 406 438 406 406 406 406 406 407 439 440 441 441 473 505 506 538 570 571 
[DBG]    New:     464 464 432 433 401 402 403 404 405 406 438 406 406 406 406 406 407 439 440 441 441 473 505 506 538 570 571 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 464 464 432 433 401 402 403 404 405 406 438 406 406 406 406 406 407 439 440 441 441 
[DBG]    Local path (in submap): 473 
[DBG]    Suffix (out of submap): 505 506 538 570 571 
[DBG]  Original agent path length 54 je: 27
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 2: 464, 464, 432, 433, 401, 402, 403, 404, 405, 406, 438, 406, 406, 406, 406, 406, 407, 439, 440, 441, 441, 473, 505, 506, 538, 570, 571, 
[DBG]  Path for agent 54 updated, resulting length: 27
[DBG]  Update the agent path 91 | Original local length: 5 | New local length: 5
[DBG]  agent 91 t=0 => decoded (sx,sy)=(4,3) => global_id=476
[DBG]  agent 91 t=1 => decoded (sx,sy)=(4,4) => global_id=477
[DBG]  agent 91 t=2 => decoded (sx,sy)=(3,4) => global_id=445
[DBG]  agent 91 t=3 => decoded (sx,sy)=(2,4) => global_id=413
[DBG]  agent 91 t=4 => decoded (sx,sy)=(1,4) => global_id=381
[DBG]  Complete path of agent 91:
[DBG]    Original: 787 788 756 757 756 724 692 660 661 629 597 565 566 534 502 503 504 505 473 474 475 476 477 445 413 381 
[DBG]    New:     787 788 756 757 756 724 692 660 661 629 597 565 566 534 502 503 504 505 473 474 475 476 477 445 413 381 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 787 788 756 757 756 724 692 660 661 629 597 565 566 534 502 503 504 505 473 474 475 
[DBG]    Local path (in submap): 476 477 445 413 381 
[DBG]    Suffix (out of submap): 
[DBG]  Original agent path length 91 je: 26
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 3: 787, 788, 756, 757, 756, 724, 692, 660, 661, 629, 597, 565, 566, 534, 502, 503, 504, 505, 473, 474, 475, 476, 477, 445, 413, 381, 
[DBG]  Path for agent 91 updated, resulting length: 26
[DBG]  Update the agent path 113 | Original local length: 6 | New local length: 6
[DBG]  agent 113 t=0 => decoded (sx,sy)=(1,0) => global_id=377
[DBG]  agent 113 t=1 => decoded (sx,sy)=(1,1) => global_id=378
[DBG]  agent 113 t=2 => decoded (sx,sy)=(1,2) => global_id=379
[DBG]  agent 113 t=3 => decoded (sx,sy)=(1,3) => global_id=380
[DBG]  agent 113 t=4 => decoded (sx,sy)=(0,3) => global_id=348
[DBG]  agent 113 t=5 => decoded (sx,sy)=(0,4) => global_id=349
[DBG]  Complete path of agent 113:
[DBG]    Original: 529 530 498 466 467 467 467 467 467 467 467 467 467 468 469 470 438 406 407 408 376 377 378 379 380 348 349 317 318 319 287 255 254 222 
[DBG]    New:     529 530 498 466 467 467 467 467 467 467 467 467 467 468 469 470 438 406 407 408 376 377 378 379 380 348 349 317 318 319 287 255 254 222 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 529 530 498 466 467 467 467 467 467 467 467 467 467 468 469 470 438 406 407 408 376 
[DBG]    Local path (in submap): 377 378 379 380 348 349 
[DBG]    Suffix (out of submap): 317 318 319 287 255 254 222 
[DBG]  Original agent path length 113 je: 34
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 4: 529, 530, 498, 466, 467, 467, 467, 467, 467, 467, 467, 467, 467, 468, 469, 470, 438, 406, 407, 408, 376, 377, 378, 379, 380, 348, 349, 317, 318, 319, 287, 255, 254, 222, 
[DBG]  Path for agent 113 updated, resulting length: 34
[DBG]  Update the agent path 133 | Original local length: 5 | New local length: 5
[DBG]  agent 133 t=0 => decoded (sx,sy)=(4,1) => global_id=474
[DBG]  agent 133 t=1 => decoded (sx,sy)=(4,0) => global_id=473
[DBG]  agent 133 t=2 => decoded (sx,sy)=(3,0) => global_id=441
[DBG]  agent 133 t=3 => decoded (sx,sy)=(2,0) => global_id=409
[DBG]  agent 133 t=4 => decoded (sx,sy)=(1,0) => global_id=377
[DBG]  Complete path of agent 133:
[DBG]    Original: 956 924 892 860 861 829 797 765 733 701 702 670 638 637 636 604 572 571 570 538 506 474 473 441 409 377 376 375 376 
[DBG]    New:     956 924 892 860 861 829 797 765 733 701 702 670 638 637 636 604 572 571 570 538 506 474 473 441 409 377 376 375 376 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 956 924 892 860 861 829 797 765 733 701 702 670 638 637 636 604 572 571 570 538 506 
[DBG]    Local path (in submap): 474 473 441 409 377 
[DBG]    Suffix (out of submap): 376 375 376 
[DBG]  Original agent path length 133 je: 29
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 5: 956, 924, 892, 860, 861, 829, 797, 765, 733, 701, 702, 670, 638, 637, 636, 604, 572, 571, 570, 538, 506, 474, 473, 441, 409, 377, 376, 375, 376, 
[DBG]  Path for agent 133 updated, resulting length: 29
[DBG]  Paths successfully updated.
[DBG]  (LNS.cpp) New path for agent 25: 
[DBG]  895, 894, 862, 830, 829, 797, 765, 733, 701, 702, 670, 638, 637, 636, 604, 572, 540, 508, 476, 444, 445, 413, 381, 349, 317, 285, 284, 252, 220, 221, 189, 157, 158, 159, 
[DBG]  (LNS.cpp) New path for agent 46: 
[DBG]  786, 787, 788, 756, 724, 725, 726, 727, 728, 696, 664, 632, 633, 601, 602, 570, 538, 506, 474, 475, 443, 411, 412, 413, 381, 349, 317, 285, 284, 252, 
[DBG]  (LNS.cpp) New path for agent 54: 
[DBG]  464, 464, 432, 433, 401, 402, 403, 404, 405, 406, 438, 406, 406, 406, 406, 406, 407, 439, 440, 441, 441, 473, 505, 506, 538, 570, 571, 
[DBG]  (LNS.cpp) New path for agent 91: 
[DBG]  787, 788, 756, 757, 756, 724, 692, 660, 661, 629, 597, 565, 566, 534, 502, 503, 504, 505, 473, 474, 475, 476, 477, 445, 413, 381, 
[DBG]  (LNS.cpp) New path for agent 113: 
[DBG]  529, 530, 498, 466, 467, 467, 467, 467, 467, 467, 467, 467, 467, 468, 469, 470, 438, 406, 407, 408, 376, 377, 378, 379, 380, 348, 349, 317, 318, 319, 287, 255, 254, 222, 
[DBG]  (LNS.cpp) New path for agent 133: 
[DBG]  956, 924, 892, 860, 861, 829, 797, 765, 733, 701, 702, 670, 638, 637, 636, 604, 572, 571, 570, 538, 506, 474, 473, 441, 409, 377, 376, 375, 376, 
[DBG]  component_weights = {0.372796, 0.0906351, 0.0947816, 0.441787}
[DBG]  opSuccess value: 1
[STAT] neighbor.sum_of_costs before recomputation: 174
[STAT] neighbor.old_sum_of_costs before recomputation: 174
[STAT] sum_of_costs before recomputation: 4224
[DBG]  Validate solution immediately after SAT success.
[DBG]  No problems after SAT replan.
[DBG]  Recomputing sum_of_cost by dividing neighbor.sum_of_costs and neighbor.old_sum_of_costs
[STAT] sum_of_costs after recomputation: 4224
[STAT] Iteration 149
[DBG]  Using SAT operator (destroy+repair SAT).
[DBG]  ====================
[DBG]  SAT destroy operator called.
[DBG]  SAT heuristic: 2
[DBG]  key_agent_id: 128
[DBG]  key_agent_id global path length: 38
[DBG]  Submap content (global positions):
[DBG]  404 405 406 407 408 
[DBG]  436 437 438 439 440 
[DBG]  468 469 470 471 472 
[DBG]  500 501 502 503 504 
[DBG]  532 533 534 535 536 
[DBG]  Map content with agents and obstacles:
[DBG]  A . . . A 
[DBG]  X . A A A 
[DBG]  A . A X A 
[DBG]  X A . . . 
[DBG]  X . . X X 
[DBG]  content of the map structure that we pass to the SAT solver:
[DBG]  1  1  1  1  1  
[DBG]  -1  1  1  1  1  
[DBG]  1  1  1  -1  1  
[DBG]  -1  1  1  1  1  
[DBG]  -1  1  1  -1  -1  
[DBG]  Identifying agents in a submap for rescheduling (when key_agent is there at the time 10):
[DBG]  Agent 3 found intervals in the sub-map:
[DBG]   [0..17]
[DBG]  Agent 3 (interval in submap: [0..17]) contains time 10, added to replan.
[DBG]  Agent 43 found intervals in the sub-map:
[DBG]   [9..16]
[DBG]  Agent 43 (interval in submap: [9..16]) contains time 10, added to replan.
[DBG]  Agent 54 found intervals in the sub-map:
[DBG]   [7..18]
[DBG]  Agent 54 (interval in submap: [7..18]) contains time 10, added to replan.
[DBG]  Agent 57 found intervals in the sub-map:
[DBG]  
[DBG]  Agent 57 is not in sub-map at time 10 (intervals: 
[DBG]  )
[DBG]  Agent 92 found intervals in the sub-map:
[DBG]   [10..11]
[DBG]  Agent 92 (interval in submap: [10..11]) contains time 10, added to replan.
[DBG]  Agent 104 found intervals in the sub-map:
[DBG]   [8..14]
[DBG]  Agent 104 (interval in submap: [8..14]) contains time 10, added to replan.
[DBG]  Agent 123 found intervals in the sub-map:
[DBG]   [9..13]
[DBG]  Agent 123 (interval in submap: [9..13]) contains time 10, added to replan.
[DBG]  Agent 128 found intervals in the sub-map:
[DBG]   [7..14]
[DBG]  Agent 128 (interval in submap: [7..14]) contains time 10, added to replan.
[DBG]  Agent 137 found intervals in the sub-map:
[DBG]   [3..10]
[DBG]  Agent 137 (interval in submap: [3..10]) contains time 10, added to replan.
[DBG]  Agent 149 found intervals in the sub-map:
[DBG]   [8..10]
[DBG]  Agent 149 (interval in submap: [8..10]) contains time 10, added to replan.
[DBG]  Agent 3 | Start (global): 468 -> (local): (2, 0) at time 10 | Goal (global): 533 -> (local): (4, 1) at time 17
[DBG]  Agent 43 | Start (global): 439 -> (local): (1, 3) at time 10 | Goal (global): 468 -> (local): (2, 0) at time 16
[DBG]  Agent 54 | Start (global): 438 -> (local): (1, 2) at time 10 | Goal (global): 440 -> (local): (1, 4) at time 18
[DBG]  Agent 92 | Start (global): 440 -> (local): (1, 4) at time 10 | Goal (global): 408 -> (local): (0, 4) at time 11
[DBG]  Agent 104 | Start (global): 501 -> (local): (3, 1) at time 10 | Goal (global): 405 -> (local): (0, 1) at time 14
[DBG]  Agent 123 | Start (global): 472 -> (local): (2, 4) at time 10 | Goal (global): 407 -> (local): (0, 3) at time 13
[DBG]  Agent 128 | Start (global): 470 -> (local): (2, 2) at time 10 | Goal (global): 404 -> (local): (0, 0) at time 14
[DBG]  Agent 137 | Start (global): 404 -> (local): (0, 0) at time 10 | Goal (global): 404 -> (local): (0, 0) at time 10
[DBG]  Agent 149 | Start (global): 408 -> (local): (0, 4) at time 10 | Goal (global): 408 -> (local): (0, 4) at time 10
[DBG]  [REPAIR] SAT destroy operator called.
[DBG]  [REPAIR] SAT operator â€“ launching subproblem FOR OPTIMIZATION.
[DBG]  Creating local paths (sx, sy) in the submap for T_sync = 10
[DBG]    Agent 3 (global paths from T=10 to 17) has local path: (2,0) (2,0) (2,0) (2,1) (3,1) (4,1) (4,1) (4,1) 
[DBG]    Agent 43 (global paths from T=10 to 16) has local path: (1,3) (1,2) (1,2) (1,2) (1,1) (2,1) (2,0) 
[DBG]    Agent 54 (global paths from T=10 to 18) has local path: (1,2) (0,2) (0,2) (0,2) (0,2) (0,2) (0,3) (1,3) (1,4) 
[DBG]    Agent 92 (global paths from T=10 to 11) has local path: (1,4) (0,4) 
[DBG]    Agent 104 (global paths from T=10 to 14) has local path: (3,1) (3,1) (2,1) (1,1) (0,1) 
[DBG]    Agent 123 (global paths from T=10 to 13) has local path: (2,4) (1,4) (0,4) (0,3) 
[DBG]    Agent 128 (global paths from T=10 to 14) has local path: (2,2) (2,1) (1,1) (0,1) (0,0) 
[DBG]    Agent 137 (global paths from T=10 to 10) has local path: (0,0) 
[DBG]    Agent 149 (global paths from T=10 to 10) has local path: (0,4) 
[DBG]  Checking input data for SAT solver:
[DBG]    - Number of agents to replan: 9
[DBG]  Agent 3 has the original local path length: 8 => Start (2,0), Goal (4,1)
[DBG]  Agent 43 has the original local path length: 7 => Start (1,3), Goal (2,0)
[DBG]  Agent 54 has the original local path length: 9 => Start (1,2), Goal (1,4)
[DBG]  Agent 92 has the original local path length: 2 => Start (1,4), Goal (0,4)
[DBG]  Agent 104 has the original local path length: 5 => Start (3,1), Goal (0,1)
[DBG]  Agent 123 has the original local path length: 4 => Start (2,4), Goal (0,3)
[DBG]  Agent 128 has the original local path length: 5 => Start (2,2), Goal (0,0)
[DBG]  Agent 137 has the original local path length: 1 => Start (0,0), Goal (0,0)
[DBG]  Agent 149 has the original local path length: 1 => Start (0,4), Goal (0,4)
[DBG]  Start position: (2, 0), (1, 3), (1, 2), (1, 4), (3, 1), (2, 4), (2, 2), (0, 0), (0, 4), 
[DBG]  Goal position: (4, 1), (2, 0), (1, 4), (0, 4), (0, 1), (0, 3), (0, 0), (0, 0), (0, 4), 
[DBG]  SAT instance and solver created.
Currently solving
Instance name: scen
Map name: map
Encoding used: disappear_at_goal
SAT solver used: Kissat
Optimizing function: sum of costs
Number of agents: 9
Mks LB: 5
SoC LB: 29
Delta: 0
Remaining time: 300000 [ms]

[STAT] Solver returned: -1
[DBG]  SAT solver failed.
[STAT] SAT solver failed to find a valid solution.
[DBG]  ====================
[DBG]  SAT destroy operator called.
[DBG]  SAT heuristic: 2
[DBG]  key_agent_id: 128
[DBG]  key_agent_id global path length: 38
[DBG]  Submap content (global positions):
[DBG]  481 482 483 484 485 
[DBG]  513 514 515 516 517 
[DBG]  545 546 547 548 549 
[DBG]  577 578 579 580 581 
[DBG]  609 610 611 612 613 
[DBG]  Map content with agents and obstacles:
[DBG]  . . . . . 
[DBG]  . X . . . 
[DBG]  X . A . A 
[DBG]  . . . . A 
[DBG]  . . . . . 
[DBG]  content of the map structure that we pass to the SAT solver:
[DBG]  1  1  1  1  1  
[DBG]  1  -1  1  1  1  
[DBG]  -1  1  1  1  1  
[DBG]  1  1  1  1  1  
[DBG]  1  1  1  1  1  
[DBG]  Identifying agents in a submap for rescheduling (when key_agent is there at the time 37):
[DBG]  Agent 43 found intervals in the sub-map:
[DBG]   [36..38]
[DBG]  Agent 43 (interval in submap: [36..38]) contains time 37, added to replan.
[DBG]  Agent 128 found intervals in the sub-map:
[DBG]   [35..37]
[DBG]  Agent 128 (interval in submap: [35..37]) contains time 37, added to replan.
[DBG]  Agent 135 found intervals in the sub-map:
[DBG]   [37..42]
[DBG]  Agent 135 (interval in submap: [37..42]) contains time 37, added to replan.
[DBG]  Agent 137 found intervals in the sub-map:
[DBG]   [33..35]
[DBG]  Agent 137 is not in sub-map at time 37 (intervals: 
[DBG]  [33..35] )
[DBG]  Agent 43 | Start (global): 581 -> (local): (3, 4) at time 37 | Goal (global): 613 -> (local): (4, 4) at time 38
[DBG]  Agent 128 | Start (global): 547 -> (local): (2, 2) at time 37 | Goal (global): 547 -> (local): (2, 2) at time 37
[DBG]  Agent 135 | Start (global): 549 -> (local): (2, 4) at time 37 | Goal (global): 482 -> (local): (0, 1) at time 42
[DBG]  [REPAIR] SAT destroy operator called.
[DBG]  [REPAIR] SAT operator â€“ launching subproblem FOR OPTIMIZATION.
[DBG]  Creating local paths (sx, sy) in the submap for T_sync = 37
[DBG]    Agent 43 (global paths from T=37 to 38) has local path: (3,4) (4,4) 
[DBG]    Agent 128 (global paths from T=37 to 37) has local path: (2,2) 
[DBG]    Agent 135 (global paths from T=37 to 42) has local path: (2,4) (1,4) (0,4) (0,3) (0,2) (0,1) 
[DBG]  Checking input data for SAT solver:
[DBG]    - Number of agents to replan: 3
[DBG]  Agent 43 has the original local path length: 2 => Start (3,4), Goal (4,4)
[DBG]  Agent 128 has the original local path length: 1 => Start (2,2), Goal (2,2)
[DBG]  Agent 135 has the original local path length: 6 => Start (2,4), Goal (0,1)
[DBG]  Start position: (3, 4), (2, 2), (2, 4), 
[DBG]  Goal position: (4, 4), (2, 2), (0, 1), 
[DBG]  SAT instance and solver created.
Currently solving
Instance name: scen
Map name: map
Encoding used: disappear_at_goal
SAT solver used: Kissat
Optimizing function: sum of costs
Number of agents: 3
Mks LB: 6
SoC LB: 9
Delta: 0
Remaining time: 300000 [ms]

Vertex conflict! Agents 0, 1, timestep 2, location 0
Swapping conflict! Agents 0, 1, timestep 2, edge (0,0)
Vertex conflict! Agents 0, 1, timestep 3, location 0
Swapping conflict! Agents 0, 1, timestep 3, edge (0,0)
Vertex conflict! Agents 0, 1, timestep 4, location 0
Swapping conflict! Agents 0, 1, timestep 4, edge (0,0)
Vertex conflict! Agents 0, 1, timestep 5, location 0
Found plan [agents = 3] [timesteps = 6]
Agent #0 : 17 22 0 0 0 0 
Agent #1 : 10 0 0 0 0 0 
Agent #2 : 12 11 10 6 2 1 

[STAT] Solver returned: 0
[DBG]  Agent (index) 43 | New local path (submap idx):
[DBG]  17 22 
[DBG]  Agent (index) 128 | New local path (submap idx):
[DBG]  10 
[DBG]  Agent (index) 135 | New local path (submap idx):
[DBG]  12 11 10 6 2 1 
[DBG]  Update the agent path 43 | Original local length: 2 | New local length: 2
[DBG]  agent 43 t=0 => decoded (sx,sy)=(3,4) => global_id=581
[DBG]  agent 43 t=1 => decoded (sx,sy)=(4,4) => global_id=613
[DBG]  Complete path of agent 43:
[DBG]    Original: 414 413 381 380 379 378 377 409 441 440 439 438 438 438 437 469 468 467 466 467 466 465 464 463 462 494 526 525 524 523 522 521 520 519 551 550 549 581 613 645 677 709 741 740 739 707 
[DBG]    New:     414 413 381 380 379 378 377 409 441 440 439 438 438 438 437 469 468 467 466 467 466 465 464 463 462 494 526 525 524 523 522 521 520 519 551 550 549 581 613 645 677 709 741 740 739 707 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 414 413 381 380 379 378 377 409 441 440 439 438 438 438 437 469 468 467 466 467 466 465 464 463 462 494 526 525 524 523 522 521 520 519 551 550 549 
[DBG]    Local path (in submap): 581 613 
[DBG]    Suffix (out of submap): 645 677 709 741 740 739 707 
[DBG]  Original agent path length 43 je: 46
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 0: 414, 413, 381, 380, 379, 378, 377, 409, 441, 440, 439, 438, 438, 438, 437, 469, 468, 467, 466, 467, 466, 465, 464, 463, 462, 494, 526, 525, 524, 523, 522, 521, 520, 519, 551, 550, 549, 581, 613, 645, 677, 709, 741, 740, 739, 707, 
[DBG]  Path for agent 43 updated, resulting length: 46
[DBG]  Update the agent path 128 | Original local length: 1 | New local length: 1
[DBG]  agent 128 t=0 => decoded (sx,sy)=(2,2) => global_id=547
[DBG]  Complete path of agent 128:
[DBG]    Original: 604 603 571 570 538 506 505 504 503 502 470 469 437 405 404 403 402 401 433 432 464 463 462 494 526 525 525 524 523 522 521 520 519 551 550 549 548 547 
[DBG]    New:     604 603 571 570 538 506 505 504 503 502 470 469 437 405 404 403 402 401 433 432 464 463 462 494 526 525 525 524 523 522 521 520 519 551 550 549 548 547 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 604 603 571 570 538 506 505 504 503 502 470 469 437 405 404 403 402 401 433 432 464 463 462 494 526 525 525 524 523 522 521 520 519 551 550 549 548 
[DBG]    Local path (in submap): 547 
[DBG]    Suffix (out of submap): 
[DBG]  Original agent path length 128 je: 38
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 1: 604, 603, 571, 570, 538, 506, 505, 504, 503, 502, 470, 469, 437, 405, 404, 403, 402, 401, 433, 432, 464, 463, 462, 494, 526, 525, 525, 524, 523, 522, 521, 520, 519, 551, 550, 549, 548, 547, 
[DBG]  Path for agent 128 updated, resulting length: 38
[DBG]  Update the agent path 135 | Original local length: 6 | New local length: 6
[DBG]  agent 135 t=0 => decoded (sx,sy)=(2,4) => global_id=549
[DBG]  agent 135 t=1 => decoded (sx,sy)=(2,3) => global_id=548
[DBG]  agent 135 t=2 => decoded (sx,sy)=(2,2) => global_id=547
[DBG]  agent 135 t=3 => decoded (sx,sy)=(1,2) => global_id=515
[DBG]  agent 135 t=4 => decoded (sx,sy)=(0,2) => global_id=483
[DBG]  agent 135 t=5 => decoded (sx,sy)=(0,1) => global_id=482
[DBG]  Complete path of agent 135:
[DBG]    Original: 696 728 729 761 793 792 824 823 822 821 820 819 818 850 849 848 847 879 878 877 876 875 843 811 779 747 715 714 682 650 649 617 616 584 583 551 550 549 517 485 484 483 482 450 449 448 416 384 
[DBG]    New:     696 728 729 761 793 792 824 823 822 821 820 819 818 850 849 848 847 879 878 877 876 875 843 811 779 747 715 714 682 650 649 617 616 584 583 551 550 549 548 547 515 483 482 450 449 448 416 384 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 696 728 729 761 793 792 824 823 822 821 820 819 818 850 849 848 847 879 878 877 876 875 843 811 779 747 715 714 682 650 649 617 616 584 583 551 550 
[DBG]    Local path (in submap): 549 548 547 515 483 482 
[DBG]    Suffix (out of submap): 450 449 448 416 384 
[DBG]  Original agent path length 135 je: 48
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 2: 696, 728, 729, 761, 793, 792, 824, 823, 822, 821, 820, 819, 818, 850, 849, 848, 847, 879, 878, 877, 876, 875, 843, 811, 779, 747, 715, 714, 682, 650, 649, 617, 616, 584, 583, 551, 550, 549, 548, 547, 515, 483, 482, 450, 449, 448, 416, 384, 
[DBG]  Path for agent 135 updated, resulting length: 48
[DBG]  Paths successfully updated.
[DBG]  (LNS.cpp) New path for agent 43: 
[DBG]  414, 413, 381, 380, 379, 378, 377, 409, 441, 440, 439, 438, 438, 438, 437, 469, 468, 467, 466, 467, 466, 465, 464, 463, 462, 494, 526, 525, 524, 523, 522, 521, 520, 519, 551, 550, 549, 581, 613, 645, 677, 709, 741, 740, 739, 707, 
[DBG]  (LNS.cpp) New path for agent 128: 
[DBG]  604, 603, 571, 570, 538, 506, 505, 504, 503, 502, 470, 469, 437, 405, 404, 403, 402, 401, 433, 432, 464, 463, 462, 494, 526, 525, 525, 524, 523, 522, 521, 520, 519, 551, 550, 549, 548, 547, 
[DBG]  (LNS.cpp) New path for agent 135: 
[DBG]  696, 728, 729, 761, 793, 792, 824, 823, 822, 821, 820, 819, 818, 850, 849, 848, 847, 879, 878, 877, 876, 875, 843, 811, 779, 747, 715, 714, 682, 650, 649, 617, 616, 584, 583, 551, 550, 549, 548, 547, 515, 483, 482, 450, 449, 448, 416, 384, 
[DBG]  component_weights = {0.377532, 0.0899508, 0.094066, 0.438451}
[DBG]  opSuccess value: 1
[STAT] neighbor.sum_of_costs before recomputation: 129
[STAT] neighbor.old_sum_of_costs before recomputation: 129
[STAT] sum_of_costs before recomputation: 4224
[DBG]  Validate solution immediately after SAT success.
[WARNING] Problem after SAT: Target conflict: agent 135 (len 47) traverses target of agent 128 (len 37) at location 547 at timestep 39
[DBG]  Attempting immediate repair via init_lns because problem occurred after SAT (should be applied only for conflicts...).
[DBG]  Passing 150 agents to init_lns (skip=true).
[DBG]  path_table contents for selected agents (neighbor.agents):
[DBG]    Agent 43 => controlling path length=46
[DBG]    Agent 128 => controlling path length=38
[DBG]    Agent 135 => controlling path length=48
[DBG]  hodnota skip_initial_solution=1
[DBG]  We skip initialSolution => call buildCollisionData()
[DBG]  buildCollisionData() called â€“ skip_initial_solution case.
[DBG]  Agents.size()=150, collision_graph.size()=150
[DBG]  agent 128 => updateCollidingPairs => foundCollision
[DBG]  agent 135 => updateCollidingPairs => foundCollision
[DBG]  Conflicting agent pairs:
[DBG]  agent 128 is in conflict with agent 135
[DBG]  buildCollisionData() => sum_of_costs=4224, num_of_colliding_pairs=1
[DBG]  buildCollisionData done => sum_of_costs=4224, num_of_colliding_pairs=1
[DBG]  sum_of_cost hodnota: 4224
[DBG]  After skip/init build => iteration_stats.back(): sum_of_costs=4224, collisions=1
[DEBUG] Using default neighbor generation strategy for conflicts: 1
	InitLNS(PP): runtime = 0.00501133, iterations = 2, colliding pairs = 0, initial colliding pairs = 1, solution cost = 4222, initial solution cost = 4224, failed iterations = 0
[DBG]  init_lns->sum_of_costs after init_lns->run: 4222
[DBG]  sum_of_costs after assignment from init_lns->run: 4222
[DBG]  Recomputing sum_of_cost by dividing neighbor.sum_of_costs and neighbor.old_sum_of_costs
[STAT] sum_of_costs after recomputation: 4222
[STAT] Iteration 150
[DBG]  Using SAT operator (destroy+repair SAT).
[DBG]  ====================
[DBG]  SAT destroy operator called.
[DBG]  SAT heuristic: 2
[DBG]  key_agent_id: 138
[DBG]  key_agent_id global path length: 7
[DBG]  Submap content (global positions):
[DBG]  228 229 230 231 232 
[DBG]  260 261 262 263 264 
[DBG]  292 293 294 295 296 
[DBG]  324 325 326 327 328 
[DBG]  356 357 358 359 360 
[DBG]  Map content with agents and obstacles:
[DBG]  . X . . . 
[DBG]  . . X . . 
[DBG]  X . A . . 
[DBG]  . . . . . 
[DBG]  . . . . . 
[DBG]  content of the map structure that we pass to the SAT solver:
[DBG]  1  -1  1  1  1  
[DBG]  1  1  -1  1  1  
[DBG]  -1  1  1  1  1  
[DBG]  1  1  1  1  1  
[DBG]  1  1  1  1  1  
[DBG]  Identifying agents in a submap for rescheduling (when key_agent is there at the time 1):
[DBG]  Agent 87 found intervals in the sub-map:
[DBG]   [0..0] [5..11]
[DBG]  Agent 87 is not in sub-map at time 1 (intervals: 
[DBG]  [0..0] [5..11] )
[DBG]  Agent 138 found intervals in the sub-map:
[DBG]   [0..4]
[DBG]  Agent 138 (interval in submap: [0..4]) contains time 1, added to replan.
[DBG]  Agent 138 | Start (global): 294 -> (local): (2, 2) at time 1 | Goal (global): 231 -> (local): (0, 3) at time 4
[DBG]  [REPAIR] SAT destroy operator called.
[DBG]  [REPAIR] SAT operator â€“ launching subproblem FOR OPTIMIZATION.
[DBG]  Creating local paths (sx, sy) in the submap for T_sync = 1
[DBG]    Agent 138 (global paths from T=1 to 4) has local path: (2,2) (2,3) (1,3) (0,3) 
[DBG]  Checking input data for SAT solver:
[DBG]    - Number of agents to replan: 1
[DBG]  Agent 138 has the original local path length: 4 => Start (2,2), Goal (0,3)
[DBG]  Start position: (2, 2), 
[DBG]  Goal position: (0, 3), 
[DBG]  SAT instance and solver created.
Currently solving
Instance name: scen
Map name: map
Encoding used: disappear_at_goal
SAT solver used: Kissat
Optimizing function: sum of costs
Number of agents: 1
Mks LB: 4
SoC LB: 4
Delta: 0
Remaining time: 300000 [ms]

Found plan [agents = 1] [timesteps = 4]
Agent #0 : 9 10 6 2 

[STAT] Solver returned: 0
[DBG]  Agent (index) 138 | New local path (submap idx):
[DBG]  9 10 6 2 
[DBG]  Update the agent path 138 | Original local length: 4 | New local length: 4
[DBG]  agent 138 t=0 => decoded (sx,sy)=(2,2) => global_id=294
[DBG]  agent 138 t=1 => decoded (sx,sy)=(2,3) => global_id=295
[DBG]  agent 138 t=2 => decoded (sx,sy)=(1,3) => global_id=263
[DBG]  agent 138 t=3 => decoded (sx,sy)=(0,3) => global_id=231
[DBG]  Complete path of agent 138:
[DBG]    Original: 293 294 295 263 231 199 167 
[DBG]    New:     293 294 295 263 231 199 167 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 293 
[DBG]    Local path (in submap): 294 295 263 231 
[DBG]    Suffix (out of submap): 199 167 
[DBG]  Original agent path length 138 je: 7
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 0: 293, 294, 295, 263, 231, 199, 167, 
[DBG]  Path for agent 138 updated, resulting length: 7
[DBG]  Paths successfully updated.
[DBG]  (LNS.cpp) New path for agent 138: 
[DBG]  293, 294, 295, 263, 231, 199, 167, 
[DBG]  component_weights = {0.382291, 0.089263, 0.0933468, 0.435099}
[DBG]  opSuccess value: 1
[STAT] neighbor.sum_of_costs before recomputation: 6
[STAT] neighbor.old_sum_of_costs before recomputation: 6
[STAT] sum_of_costs before recomputation: 4222
[DBG]  Validate solution immediately after SAT success.
[DBG]  No problems after SAT replan.
[DBG]  Recomputing sum_of_cost by dividing neighbor.sum_of_costs and neighbor.old_sum_of_costs
[STAT] sum_of_costs after recomputation: 4222
[STAT] Iteration 151
[DBG]  Using SAT operator (destroy+repair SAT).
[DBG]  ====================
[DBG]  SAT destroy operator called.
[DBG]  SAT heuristic: 2
[DBG]  key_agent_id: 104
[DBG]  key_agent_id global path length: 21
[DBG]  Submap content (global positions):
[DBG]  499 500 501 502 503 
[DBG]  531 532 533 534 535 
[DBG]  563 564 565 566 567 
[DBG]  595 596 597 598 599 
[DBG]  627 628 629 630 631 
[DBG]  Map content with agents and obstacles:
[DBG]  . X . . . 
[DBG]  . X . . X 
[DBG]  . X A . X 
[DBG]  X . A X . 
[DBG]  . . . X . 
[DBG]  content of the map structure that we pass to the SAT solver:
[DBG]  1  -1  1  1  1  
[DBG]  1  -1  1  1  -1  
[DBG]  1  -1  1  1  -1  
[DBG]  -1  1  1  -1  1  
[DBG]  1  1  1  -1  1  
[DBG]  Identifying agents in a submap for rescheduling (when key_agent is there at the time 7):
[DBG]  Agent 3 found intervals in the sub-map:
[DBG]   [14..20]
[DBG]  Agent 3 is not in sub-map at time 7 (intervals: 
[DBG]  [14..20] )
[DBG]  Agent 28 found intervals in the sub-map:
[DBG]   [21..32]
[DBG]  Agent 28 is not in sub-map at time 7 (intervals: 
[DBG]  [21..32] )
[DBG]  Agent 62 found intervals in the sub-map:
[DBG]   [18..24]
[DBG]  Agent 62 is not in sub-map at time 7 (intervals: 
[DBG]  [18..24] )
[DBG]  Agent 89 found intervals in the sub-map:
[DBG]   [2..9]
[DBG]  Agent 89 (interval in submap: [2..9]) contains time 7, added to replan.
[DBG]  Agent 104 found intervals in the sub-map:
[DBG]   [0..11]
[DBG]  Agent 104 (interval in submap: [0..11]) contains time 7, added to replan.
[DBG]  Agent 136 found intervals in the sub-map:
[DBG]  
[DBG]  Agent 136 is not in sub-map at time 7 (intervals: 
[DBG]  )
[DBG]  Agent 137 found intervals in the sub-map:
[DBG]   [4..5]
[DBG]  Agent 137 is not in sub-map at time 7 (intervals: 
[DBG]  [4..5] )
[DBG]  Agent 89 | Start (global): 597 -> (local): (3, 2) at time 7 | Goal (global): 628 -> (local): (4, 1) at time 9
[DBG]  Agent 104 | Start (global): 565 -> (local): (2, 2) at time 7 | Goal (global): 501 -> (local): (0, 2) at time 11
[DBG]  [REPAIR] SAT destroy operator called.
[DBG]  [REPAIR] SAT operator â€“ launching subproblem FOR OPTIMIZATION.
[DBG]  Creating local paths (sx, sy) in the submap for T_sync = 7
[DBG]    Agent 89 (global paths from T=7 to 9) has local path: (3,2) (4,2) (4,1) 
[DBG]    Agent 104 (global paths from T=7 to 11) has local path: (2,2) (1,2) (0,2) (0,2) (0,2) 
[DBG]  Checking input data for SAT solver:
[DBG]    - Number of agents to replan: 2
[DBG]  Agent 89 has the original local path length: 3 => Start (3,2), Goal (4,1)
[DBG]  Agent 104 has the original local path length: 5 => Start (2,2), Goal (0,2)
[DBG]  Start position: (3, 2), (2, 2), 
[DBG]  Goal position: (4, 1), (0, 2), 
[DBG]  SAT instance and solver created.
Currently solving
Instance name: scen
Map name: map
Encoding used: disappear_at_goal
SAT solver used: Kissat
Optimizing function: sum of costs
Number of agents: 2
Mks LB: 3
SoC LB: 6
Delta: 0
Remaining time: 300000 [ms]

Found plan [agents = 2] [timesteps = 3]
Agent #0 : 11 15 14 
Agent #1 : 8 5 1 

[STAT] Solver returned: 0
[DBG]  Agent (index) 89 | New local path (submap idx):
[DBG]  11 15 14 
[DBG]  Agent (index) 104 | New local path (submap idx):
[DBG]  8 5 1 
[DBG]  Update the agent path 89 | Original local length: 3 | New local length: 3
[DBG]  agent 89 t=0 => decoded (sx,sy)=(3,2) => global_id=597
[DBG]  agent 89 t=1 => decoded (sx,sy)=(4,2) => global_id=629
[DBG]  agent 89 t=2 => decoded (sx,sy)=(4,1) => global_id=628
[DBG]  Complete path of agent 89:
[DBG]    Original: 437 469 501 502 534 533 565 597 629 628 660 692 724 756 788 787 819 820 821 822 854 886 918 950 982 983 1015 
[DBG]    New:     437 469 501 502 534 533 565 597 629 628 660 692 724 756 788 787 819 820 821 822 854 886 918 950 982 983 1015 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 437 469 501 502 534 533 565 
[DBG]    Local path (in submap): 597 629 628 
[DBG]    Suffix (out of submap): 660 692 724 756 788 787 819 820 821 822 854 886 918 950 982 983 1015 
[DBG]  Original agent path length 89 je: 27
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 0: 437, 469, 501, 502, 534, 533, 565, 597, 629, 628, 660, 692, 724, 756, 788, 787, 819, 820, 821, 822, 854, 886, 918, 950, 982, 983, 1015, 
[DBG]  Path for agent 89 updated, resulting length: 27
[DBG]  Update the agent path 104 | Original local length: 5 | New local length: 3
[DBG]  agent 104 t=0 => decoded (sx,sy)=(2,2) => global_id=565
[DBG]  agent 104 t=1 => decoded (sx,sy)=(1,2) => global_id=533
[DBG]  agent 104 t=2 => decoded (sx,sy)=(0,2) => global_id=501
[DBG]  Complete path of agent 104:
[DBG]    Original: 566 566 566 566 566 566 566 565 533 501 501 501 469 437 405 373 341 309 309 277 276 
[DBG]    New:     566 566 566 566 566 566 566 565 533 501 469 437 405 373 341 309 309 277 276 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 566 566 566 566 566 566 566 
[DBG]    Local path (in submap): 565 533 501 469 437 
[DBG]    Suffix (out of submap): 405 373 341 309 309 277 276 
[DBG]  Original agent path length 104 je: 21
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 1: 566, 566, 566, 566, 566, 566, 566, 565, 533, 501, 469, 437, 405, 373, 341, 309, 309, 277, 276, 
[DBG]  Path for agent 104 updated, resulting length: 19
[DBG]  Paths successfully updated.
[DBG]  (LNS.cpp) New path for agent 89: 
[DBG]  437, 469, 501, 502, 534, 533, 565, 597, 629, 628, 660, 692, 724, 756, 788, 787, 819, 820, 821, 822, 854, 886, 918, 950, 982, 983, 1015, 
[DBG]  (LNS.cpp) New path for agent 104: 
[DBG]  566, 566, 566, 566, 566, 566, 566, 565, 533, 501, 469, 437, 405, 373, 341, 309, 309, 277, 276, 
[DBG]  component_weights = {0.378854, 0.0884605, 0.0925075, 0.440178}
[DBG]  opSuccess value: 1
[STAT] neighbor.sum_of_costs before recomputation: 44
[STAT] neighbor.old_sum_of_costs before recomputation: 46
[STAT] sum_of_costs before recomputation: 4222
[DBG]  Validate solution immediately after SAT success.
[WARNING] Problem after SAT: Vertex conflict between agents 104 and 66 at location 276 at timestep 18
[DBG]  Attempting immediate repair via init_lns because problem occurred after SAT (should be applied only for conflicts...).
[DBG]  Passing 150 agents to init_lns (skip=true).
[DBG]  path_table contents for selected agents (neighbor.agents):
[DBG]    Agent 89 => controlling path length=27
[DBG]    Agent 104 => controlling path length=19
[DBG]  hodnota skip_initial_solution=1
[DBG]  We skip initialSolution => call buildCollisionData()
[DBG]  buildCollisionData() called â€“ skip_initial_solution case.
[DBG]  Agents.size()=150, collision_graph.size()=150
[DBG]  agent 66 => updateCollidingPairs => foundCollision
[DBG]  agent 92 => updateCollidingPairs => foundCollision
[DBG]  agent 104 => updateCollidingPairs => foundCollision
[DBG]  Conflicting agent pairs:
[DBG]  agent 66 is in conflict with agent 104
[DBG]  agent 92 is in conflict with agent 104
[DBG]  buildCollisionData() => sum_of_costs=4220, num_of_colliding_pairs=2
[DBG]  buildCollisionData done => sum_of_costs=4220, num_of_colliding_pairs=2
[DBG]  sum_of_cost hodnota: 4220
[DBG]  After skip/init build => iteration_stats.back(): sum_of_costs=4220, collisions=2
[DEBUG] Using default neighbor generation strategy for conflicts: 0
[DEBUG] Using default neighbor generation strategy for conflicts: 0
	InitLNS(PP): runtime = 0.00810629, iterations = 3, colliding pairs = 0, initial colliding pairs = 2, solution cost = 4222, initial solution cost = 4220, failed iterations = 0
[DBG]  init_lns->sum_of_costs after init_lns->run: 4222
[DBG]  sum_of_costs after assignment from init_lns->run: 4222
[DBG]  Recomputing sum_of_cost by dividing neighbor.sum_of_costs and neighbor.old_sum_of_costs
[STAT] sum_of_costs after recomputation: 4222
[STAT] Iteration 152
[DBG]  Using SAT operator (destroy+repair SAT).
[DBG]  ====================
[DBG]  SAT destroy operator called.
[DBG]  SAT heuristic: 2
[DBG]  key_agent_id: 24
[DBG]  key_agent_id global path length: 22
[DBG]  Submap content (global positions):
[DBG]  666 667 668 669 670 
[DBG]  698 699 700 701 702 
[DBG]  730 731 732 733 734 
[DBG]  762 763 764 765 766 
[DBG]  794 795 796 797 798 
[DBG]  Map content with agents and obstacles:
[DBG]  . . . X A 
[DBG]  X X X . . 
[DBG]  . . A A X 
[DBG]  X X A . . 
[DBG]  X . X . . 
[DBG]  content of the map structure that we pass to the SAT solver:
[DBG]  1  1  1  -1  1  
[DBG]  -1  -1  -1  1  1  
[DBG]  1  1  1  1  -1  
[DBG]  -1  -1  1  1  1  
[DBG]  -1  1  -1  1  1  
[DBG]  Identifying agents in a submap for rescheduling (when key_agent is there at the time 12):
[DBG]  Agent 17 found intervals in the sub-map:
[DBG]   [6..12]
[DBG]  Agent 17 (interval in submap: [6..12]) contains time 12, added to replan.
[DBG]  Agent 24 found intervals in the sub-map:
[DBG]   [7..14]
[DBG]  Agent 24 (interval in submap: [7..14]) contains time 12, added to replan.
[DBG]  Agent 58 found intervals in the sub-map:
[DBG]   [9..15]
[DBG]  Agent 58 (interval in submap: [9..15]) contains time 12, added to replan.
[DBG]  Agent 108 found intervals in the sub-map:
[DBG]   [9..14]
[DBG]  Agent 108 (interval in submap: [9..14]) contains time 12, added to replan.
[DBG]  Agent 133 found intervals in the sub-map:
[DBG]   [6..11]
[DBG]  Agent 133 is not in sub-map at time 12 (intervals: 
[DBG]  [6..11] )
[DBG]  Agent 142 found intervals in the sub-map:
[DBG]   [0..3]
[DBG]  Agent 142 is not in sub-map at time 12 (intervals: 
[DBG]  [0..3] )
[DBG]  Agent 17 | Start (global): 670 -> (local): (0, 4) at time 12 | Goal (global): 670 -> (local): (0, 4) at time 12
[DBG]  Agent 24 | Start (global): 732 -> (local): (2, 2) at time 12 | Goal (global): 730 -> (local): (2, 0) at time 14
[DBG]  Agent 58 | Start (global): 733 -> (local): (2, 3) at time 12 | Goal (global): 670 -> (local): (0, 4) at time 15
[DBG]  Agent 108 | Start (global): 764 -> (local): (3, 2) at time 12 | Goal (global): 797 -> (local): (4, 3) at time 14
[DBG]  [REPAIR] SAT destroy operator called.
[DBG]  [REPAIR] SAT operator â€“ launching subproblem FOR OPTIMIZATION.
[DBG]  Creating local paths (sx, sy) in the submap for T_sync = 12
[DBG]    Agent 17 (global paths from T=12 to 12) has local path: (0,4) 
[DBG]    Agent 24 (global paths from T=12 to 14) has local path: (2,2) (2,1) (2,0) 
[DBG]    Agent 58 (global paths from T=12 to 15) has local path: (2,3) (1,3) (1,4) (0,4) 
[DBG]    Agent 108 (global paths from T=12 to 14) has local path: (3,2) (3,3) (4,3) 
[DBG]  Checking input data for SAT solver:
[DBG]    - Number of agents to replan: 4
[DBG]  Agent 17 has the original local path length: 1 => Start (0,4), Goal (0,4)
[DBG]  Agent 24 has the original local path length: 3 => Start (2,2), Goal (2,0)
[DBG]  Agent 58 has the original local path length: 4 => Start (2,3), Goal (0,4)
[DBG]  Agent 108 has the original local path length: 3 => Start (3,2), Goal (4,3)
[DBG]  Start position: (0, 4), (2, 2), (2, 3), (3, 2), 
[DBG]  Goal position: (0, 4), (2, 0), (0, 4), (4, 3), 
[DBG]  SAT instance and solver created.
Currently solving
Instance name: scen
Map name: map
Encoding used: disappear_at_goal
SAT solver used: Kissat
Optimizing function: sum of costs
Number of agents: 4
Mks LB: 4
SoC LB: 11
Delta: 0
Remaining time: 300000 [ms]

Vertex conflict! Agents 0, 1, timestep 3, location 0
Vertex conflict! Agents 0, 3, timestep 3, location 0
Vertex conflict! Agents 1, 3, timestep 3, location 0
Found plan [agents = 4] [timesteps = 4]
Agent #0 : 3 0 0 0 
Agent #1 : 8 7 6 0 
Agent #2 : 9 4 5 3 
Agent #3 : 10 11 14 0 

[STAT] Solver returned: 0
[DBG]  Agent (index) 17 | New local path (submap idx):
[DBG]  3 
[DBG]  Agent (index) 24 | New local path (submap idx):
[DBG]  8 7 6 
[DBG]  Agent (index) 58 | New local path (submap idx):
[DBG]  9 4 5 3 
[DBG]  Agent (index) 108 | New local path (submap idx):
[DBG]  10 11 14 
[DBG]  Update the agent path 17 | Original local length: 1 | New local length: 1
[DBG]  agent 17 t=0 => decoded (sx,sy)=(0,4) => global_id=670
[DBG]  Complete path of agent 17:
[DBG]    Original: 664 696 697 697 697 729 730 731 732 733 701 702 670 638 637 636 604 572 
[DBG]    New:     664 696 697 697 697 729 730 731 732 733 701 702 670 638 637 636 604 572 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 664 696 697 697 697 729 730 731 732 733 701 702 
[DBG]    Local path (in submap): 670 
[DBG]    Suffix (out of submap): 638 637 636 604 572 
[DBG]  Original agent path length 17 je: 18
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 0: 664, 696, 697, 697, 697, 729, 730, 731, 732, 733, 701, 702, 670, 638, 637, 636, 604, 572, 
[DBG]  Path for agent 17 updated, resulting length: 18
[DBG]  Update the agent path 24 | Original local length: 3 | New local length: 3
[DBG]  agent 24 t=0 => decoded (sx,sy)=(2,2) => global_id=732
[DBG]  agent 24 t=1 => decoded (sx,sy)=(2,1) => global_id=731
[DBG]  agent 24 t=2 => decoded (sx,sy)=(2,0) => global_id=730
[DBG]  Complete path of agent 24:
[DBG]    Original: 891 890 858 859 860 861 829 797 797 765 733 733 732 731 730 729 728 696 696 664 632 633 
[DBG]    New:     891 890 858 859 860 861 829 797 797 765 733 733 732 731 730 729 728 696 696 664 632 633 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 891 890 858 859 860 861 829 797 797 765 733 733 
[DBG]    Local path (in submap): 732 731 730 
[DBG]    Suffix (out of submap): 729 728 696 696 664 632 633 
[DBG]  Original agent path length 24 je: 22
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 1: 891, 890, 858, 859, 860, 861, 829, 797, 797, 765, 733, 733, 732, 731, 730, 729, 728, 696, 696, 664, 632, 633, 
[DBG]  Path for agent 24 updated, resulting length: 22
[DBG]  Update the agent path 58 | Original local length: 4 | New local length: 4
[DBG]  agent 58 t=0 => decoded (sx,sy)=(2,3) => global_id=733
[DBG]  agent 58 t=1 => decoded (sx,sy)=(1,3) => global_id=701
[DBG]  agent 58 t=2 => decoded (sx,sy)=(1,4) => global_id=702
[DBG]  agent 58 t=3 => decoded (sx,sy)=(0,4) => global_id=670
[DBG]  Complete path of agent 58:
[DBG]    Original: 826 827 827 827 859 860 860 861 829 797 765 765 733 701 702 670 638 637 636 636 604 603 603 571 571 539 507 475 443 411 379 347 
[DBG]    New:     826 827 827 827 859 860 860 861 829 797 765 765 733 701 702 670 638 637 636 636 604 603 603 571 571 539 507 475 443 411 379 347 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 826 827 827 827 859 860 860 861 829 797 765 765 
[DBG]    Local path (in submap): 733 701 702 670 
[DBG]    Suffix (out of submap): 638 637 636 636 604 603 603 571 571 539 507 475 443 411 379 347 
[DBG]  Original agent path length 58 je: 32
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 2: 826, 827, 827, 827, 859, 860, 860, 861, 829, 797, 765, 765, 733, 701, 702, 670, 638, 637, 636, 636, 604, 603, 603, 571, 571, 539, 507, 475, 443, 411, 379, 347, 
[DBG]  Path for agent 58 updated, resulting length: 32
[DBG]  Update the agent path 108 | Original local length: 3 | New local length: 3
[DBG]  agent 108 t=0 => decoded (sx,sy)=(3,2) => global_id=764
[DBG]  agent 108 t=1 => decoded (sx,sy)=(3,3) => global_id=765
[DBG]  agent 108 t=2 => decoded (sx,sy)=(4,3) => global_id=797
[DBG]  Complete path of agent 108:
[DBG]    Original: 628 660 692 724 725 726 727 728 729 730 731 732 764 765 797 829 861 860 892 924 956 957 989 1021 
[DBG]    New:     628 660 692 724 725 726 727 728 729 730 731 732 764 765 797 829 861 860 892 924 956 957 989 1021 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 628 660 692 724 725 726 727 728 729 730 731 732 
[DBG]    Local path (in submap): 764 765 797 
[DBG]    Suffix (out of submap): 829 861 860 892 924 956 957 989 1021 
[DBG]  Original agent path length 108 je: 24
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 3: 628, 660, 692, 724, 725, 726, 727, 728, 729, 730, 731, 732, 764, 765, 797, 829, 861, 860, 892, 924, 956, 957, 989, 1021, 
[DBG]  Path for agent 108 updated, resulting length: 24
[DBG]  Paths successfully updated.
[DBG]  (LNS.cpp) New path for agent 17: 
[DBG]  664, 696, 697, 697, 697, 729, 730, 731, 732, 733, 701, 702, 670, 638, 637, 636, 604, 572, 
[DBG]  (LNS.cpp) New path for agent 24: 
[DBG]  891, 890, 858, 859, 860, 861, 829, 797, 797, 765, 733, 733, 732, 731, 730, 729, 728, 696, 696, 664, 632, 633, 
[DBG]  (LNS.cpp) New path for agent 58: 
[DBG]  826, 827, 827, 827, 859, 860, 860, 861, 829, 797, 765, 765, 733, 701, 702, 670, 638, 637, 636, 636, 604, 603, 603, 571, 571, 539, 507, 475, 443, 411, 379, 347, 
[DBG]  (LNS.cpp) New path for agent 108: 
[DBG]  628, 660, 692, 724, 725, 726, 727, 728, 729, 730, 731, 732, 764, 765, 797, 829, 861, 860, 892, 924, 956, 957, 989, 1021, 
[DBG]  component_weights = {0.38362, 0.0877818, 0.0917977, 0.436801}
[DBG]  opSuccess value: 1
[STAT] neighbor.sum_of_costs before recomputation: 92
[STAT] neighbor.old_sum_of_costs before recomputation: 92
[STAT] sum_of_costs before recomputation: 4222
[DBG]  Validate solution immediately after SAT success.
[DBG]  No problems after SAT replan.
[DBG]  Recomputing sum_of_cost by dividing neighbor.sum_of_costs and neighbor.old_sum_of_costs
[STAT] sum_of_costs after recomputation: 4222
[STAT] Iteration 153
[DBG]  Using SAT operator (destroy+repair SAT).
[DBG]  ====================
[DBG]  SAT destroy operator called.
[DBG]  SAT heuristic: 2
[DBG]  key_agent_id: 30
[DBG]  key_agent_id global path length: 30
[DBG]  Submap content (global positions):
[DBG]  756 757 758 759 760 
[DBG]  788 789 790 791 792 
[DBG]  820 821 822 823 824 
[DBG]  852 853 854 855 856 
[DBG]  884 885 886 887 888 
[DBG]  Map content with agents and obstacles:
[DBG]  A . X . X 
[DBG]  . X . X . 
[DBG]  . . A . . 
[DBG]  X X . . . 
[DBG]  . . . A A 
[DBG]  content of the map structure that we pass to the SAT solver:
[DBG]  1  1  -1  1  -1  
[DBG]  1  -1  1  -1  1  
[DBG]  1  1  1  1  1  
[DBG]  -1  -1  1  1  1  
[DBG]  1  1  1  1  1  
[DBG]  Identifying agents in a submap for rescheduling (when key_agent is there at the time 13):
[DBG]  Agent 4 found intervals in the sub-map:
[DBG]   [7..11]
[DBG]  Agent 4 is not in sub-map at time 13 (intervals: 
[DBG]  [7..11] )
[DBG]  Agent 11 found intervals in the sub-map:
[DBG]   [17..18]
[DBG]  Agent 11 is not in sub-map at time 13 (intervals: 
[DBG]  [17..18] )
[DBG]  Agent 14 found intervals in the sub-map:
[DBG]   [3..8]
[DBG]  Agent 14 is not in sub-map at time 13 (intervals: 
[DBG]  [3..8] )
[DBG]  Agent 30 found intervals in the sub-map:
[DBG]   [10..17]
[DBG]  Agent 30 (interval in submap: [10..17]) contains time 13, added to replan.
[DBG]  Agent 35 found intervals in the sub-map:
[DBG]   [12..16]
[DBG]  Agent 35 (interval in submap: [12..16]) contains time 13, added to replan.
[DBG]  Agent 70 found intervals in the sub-map:
[DBG]   [7..12]
[DBG]  Agent 70 is not in sub-map at time 13 (intervals: 
[DBG]  [7..12] )
[DBG]  Agent 89 found intervals in the sub-map:
[DBG]   [13..14] [17..21]
[DBG]  Agent 89 (interval in submap: [13..14]) contains time 13, added to replan.
[DBG]  Agent 91 found intervals in the sub-map:
[DBG]   [1..4]
[DBG]  Agent 91 is not in sub-map at time 13 (intervals: 
[DBG]  [1..4] )
[DBG]  Agent 142 found intervals in the sub-map:
[DBG]   [13..18]
[DBG]  Agent 142 (interval in submap: [13..18]) contains time 13, added to replan.
[DBG]  Agent 30 | Start (global): 822 -> (local): (2, 2) at time 13 | Goal (global): 756 -> (local): (0, 0) at time 17
[DBG]  Agent 35 | Start (global): 887 -> (local): (4, 3) at time 13 | Goal (global): 884 -> (local): (4, 0) at time 16
[DBG]  Agent 89 | Start (global): 756 -> (local): (0, 0) at time 13 | Goal (global): 788 -> (local): (1, 0) at time 14
[DBG]  Agent 142 | Start (global): 888 -> (local): (4, 4) at time 13 | Goal (global): 792 -> (local): (1, 4) at time 18
[DBG]  [REPAIR] SAT destroy operator called.
[DBG]  [REPAIR] SAT operator â€“ launching subproblem FOR OPTIMIZATION.
[DBG]  Creating local paths (sx, sy) in the submap for T_sync = 13
[DBG]    Agent 30 (global paths from T=13 to 17) has local path: (2,2) (2,1) (2,0) (1,0) (0,0) 
[DBG]    Agent 35 (global paths from T=13 to 16) has local path: (4,3) (4,2) (4,1) (4,0) 
[DBG]    Agent 89 (global paths from T=13 to 14) has local path: (0,0) (1,0) 
[DBG]    Agent 142 (global paths from T=13 to 18) has local path: (4,4) (4,3) (3,3) (2,3) (2,4) (1,4) 
[DBG]  Checking input data for SAT solver:
[DBG]    - Number of agents to replan: 4
[DBG]  Agent 30 has the original local path length: 5 => Start (2,2), Goal (0,0)
[DBG]  Agent 35 has the original local path length: 4 => Start (4,3), Goal (4,0)
[DBG]  Agent 89 has the original local path length: 2 => Start (0,0), Goal (1,0)
[DBG]  Agent 142 has the original local path length: 6 => Start (4,4), Goal (1,4)
[DBG]  Start position: (2, 2), (4, 3), (0, 0), (4, 4), 
[DBG]  Goal position: (0, 0), (4, 0), (1, 0), (1, 4), 
[DBG]  SAT instance and solver created.
Currently solving
Instance name: scen
Map name: map
Encoding used: disappear_at_goal
SAT solver used: Kissat
Optimizing function: sum of costs
Number of agents: 4
Mks LB: 5
SoC LB: 15
Delta: 0
Remaining time: 300000 [ms]

Vertex conflict! Agents 0, 1, timestep 4, location 0
Vertex conflict! Agents 0, 2, timestep 4, location 0
Vertex conflict! Agents 0, 3, timestep 4, location 0
Vertex conflict! Agents 1, 2, timestep 4, location 0
Vertex conflict! Agents 1, 3, timestep 4, location 0
Vertex conflict! Agents 2, 3, timestep 4, location 0
Found plan [agents = 4] [timesteps = 5]
Agent #0 : 8 7 6 3 0 
Agent #1 : 17 16 15 14 0 
Agent #2 : 0 3 0 0 0 
Agent #3 : 18 13 10 5 0 

[STAT] Solver returned: 0
[DBG]  Agent (index) 30 | New local path (submap idx):
[DBG]  8 7 6 3 0 
[DBG]  Agent (index) 35 | New local path (submap idx):
[DBG]  17 16 15 14 
[DBG]  Agent (index) 89 | New local path (submap idx):
[DBG]  0 3 
[DBG]  Agent (index) 142 | New local path (submap idx):
[DBG]  18 13 10 5 
[DBG]  Update the agent path 30 | Original local length: 5 | New local length: 5
[DBG]  agent 30 t=0 => decoded (sx,sy)=(2,2) => global_id=822
[DBG]  agent 30 t=1 => decoded (sx,sy)=(2,1) => global_id=821
[DBG]  agent 30 t=2 => decoded (sx,sy)=(2,0) => global_id=820
[DBG]  agent 30 t=3 => decoded (sx,sy)=(1,0) => global_id=788
[DBG]  agent 30 t=4 => decoded (sx,sy)=(0,0) => global_id=756
[DBG]  Complete path of agent 30:
[DBG]    Original: 922 922 922 922 922 922 922 890 858 857 856 855 823 822 821 820 788 756 724 692 660 660 628 629 597 565 533 501 502 503 
[DBG]    New:     922 922 922 922 922 922 922 890 858 857 856 855 823 822 821 820 788 756 724 692 660 660 628 629 597 565 533 501 502 503 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 922 922 922 922 922 922 922 890 858 857 856 855 823 
[DBG]    Local path (in submap): 822 821 820 788 756 
[DBG]    Suffix (out of submap): 724 692 660 660 628 629 597 565 533 501 502 503 
[DBG]  Original agent path length 30 je: 30
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 0: 922, 922, 922, 922, 922, 922, 922, 890, 858, 857, 856, 855, 823, 822, 821, 820, 788, 756, 724, 692, 660, 660, 628, 629, 597, 565, 533, 501, 502, 503, 
[DBG]  Path for agent 30 updated, resulting length: 30
[DBG]  Update the agent path 35 | Original local length: 4 | New local length: 4
[DBG]  agent 35 t=0 => decoded (sx,sy)=(4,3) => global_id=887
[DBG]  agent 35 t=1 => decoded (sx,sy)=(4,2) => global_id=886
[DBG]  agent 35 t=2 => decoded (sx,sy)=(4,1) => global_id=885
[DBG]  agent 35 t=3 => decoded (sx,sy)=(4,0) => global_id=884
[DBG]  Complete path of agent 35:
[DBG]    Original: 735 767 766 798 830 862 861 893 892 891 890 889 888 887 886 885 884 883 883 882 914 882 881 880 879 878 877 876 875 874 874 873 905 937 936 935 934 902 870 838 806 805 804 772 740 739 738 737 736 
[DBG]    New:     735 767 766 798 830 862 861 893 892 891 890 889 888 887 886 885 884 883 883 882 914 882 881 880 879 878 877 876 875 874 874 873 905 937 936 935 934 902 870 838 806 805 804 772 740 739 738 737 736 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 735 767 766 798 830 862 861 893 892 891 890 889 888 
[DBG]    Local path (in submap): 887 886 885 884 
[DBG]    Suffix (out of submap): 883 883 882 914 882 881 880 879 878 877 876 875 874 874 873 905 937 936 935 934 902 870 838 806 805 804 772 740 739 738 737 736 
[DBG]  Original agent path length 35 je: 49
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 1: 735, 767, 766, 798, 830, 862, 861, 893, 892, 891, 890, 889, 888, 887, 886, 885, 884, 883, 883, 882, 914, 882, 881, 880, 879, 878, 877, 876, 875, 874, 874, 873, 905, 937, 936, 935, 934, 902, 870, 838, 806, 805, 804, 772, 740, 739, 738, 737, 736, 
[DBG]  Path for agent 35 updated, resulting length: 49
[DBG]  Update the agent path 89 | Original local length: 2 | New local length: 2
[DBG]  agent 89 t=0 => decoded (sx,sy)=(0,0) => global_id=756
[DBG]  agent 89 t=1 => decoded (sx,sy)=(1,0) => global_id=788
[DBG]  Complete path of agent 89:
[DBG]    Original: 437 469 501 502 534 533 565 597 629 628 660 692 724 756 788 787 819 820 821 822 854 886 918 950 982 983 1015 
[DBG]    New:     437 469 501 502 534 533 565 597 629 628 660 692 724 756 788 787 819 820 821 822 854 886 918 950 982 983 1015 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 437 469 501 502 534 533 565 597 629 628 660 692 724 
[DBG]    Local path (in submap): 756 788 
[DBG]    Suffix (out of submap): 787 819 820 821 822 854 886 918 950 982 983 1015 
[DBG]  Original agent path length 89 je: 27
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 2: 437, 469, 501, 502, 534, 533, 565, 597, 629, 628, 660, 692, 724, 756, 788, 787, 819, 820, 821, 822, 854, 886, 918, 950, 982, 983, 1015, 
[DBG]  Path for agent 89 updated, resulting length: 27
[DBG]  Update the agent path 142 | Original local length: 6 | New local length: 4
[DBG]  agent 142 t=0 => decoded (sx,sy)=(4,4) => global_id=888
[DBG]  agent 142 t=1 => decoded (sx,sy)=(3,4) => global_id=856
[DBG]  agent 142 t=2 => decoded (sx,sy)=(2,4) => global_id=824
[DBG]  agent 142 t=3 => decoded (sx,sy)=(1,4) => global_id=792
[DBG]  Complete path of agent 142:
[DBG]    Original: 795 795 795 795 827 859 859 859 859 858 857 857 889 888 887 855 823 824 792 793 761 729 697 696 664 632 600 601 602 570 538 506 507 
[DBG]    New:     795 795 795 795 827 859 859 859 859 858 857 857 889 888 856 824 792 793 761 729 697 696 664 632 600 601 602 570 538 506 507 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 795 795 795 795 827 859 859 859 859 858 857 857 889 
[DBG]    Local path (in submap): 888 856 824 792 793 761 
[DBG]    Suffix (out of submap): 729 697 696 664 632 600 601 602 570 538 506 507 
[DBG]  Original agent path length 142 je: 33
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 3: 795, 795, 795, 795, 827, 859, 859, 859, 859, 858, 857, 857, 889, 888, 856, 824, 792, 793, 761, 729, 697, 696, 664, 632, 600, 601, 602, 570, 538, 506, 507, 
[DBG]  Path for agent 142 updated, resulting length: 31
[DBG]  Paths successfully updated.
[DBG]  (LNS.cpp) New path for agent 30: 
[DBG]  922, 922, 922, 922, 922, 922, 922, 890, 858, 857, 856, 855, 823, 822, 821, 820, 788, 756, 724, 692, 660, 660, 628, 629, 597, 565, 533, 501, 502, 503, 
[DBG]  (LNS.cpp) New path for agent 35: 
[DBG]  735, 767, 766, 798, 830, 862, 861, 893, 892, 891, 890, 889, 888, 887, 886, 885, 884, 883, 883, 882, 914, 882, 881, 880, 879, 878, 877, 876, 875, 874, 874, 873, 905, 937, 936, 935, 934, 902, 870, 838, 806, 805, 804, 772, 740, 739, 738, 737, 736, 
[DBG]  (LNS.cpp) New path for agent 89: 
[DBG]  437, 469, 501, 502, 534, 533, 565, 597, 629, 628, 660, 692, 724, 756, 788, 787, 819, 820, 821, 822, 854, 886, 918, 950, 982, 983, 1015, 
[DBG]  (LNS.cpp) New path for agent 142: 
[DBG]  795, 795, 795, 795, 827, 859, 859, 859, 859, 858, 857, 857, 889, 888, 856, 824, 792, 793, 761, 729, 697, 696, 664, 632, 600, 601, 602, 570, 538, 506, 507, 
[DBG]  component_weights = {0.380205, 0.0870005, 0.0909807, 0.441814}
[DBG]  opSuccess value: 1
[STAT] neighbor.sum_of_costs before recomputation: 133
[STAT] neighbor.old_sum_of_costs before recomputation: 135
[STAT] sum_of_costs before recomputation: 4222
[DBG]  Validate solution immediately after SAT success.
[WARNING] Problem after SAT: Target conflict: agent 33 (len 34) traverses target of agent 142 (len 30) at location 507 at timestep 31
[DBG]  Attempting immediate repair via init_lns because problem occurred after SAT (should be applied only for conflicts...).
[DBG]  Passing 150 agents to init_lns (skip=true).
[DBG]  path_table contents for selected agents (neighbor.agents):
[DBG]    Agent 30 => controlling path length=30
[DBG]    Agent 35 => controlling path length=49
[DBG]    Agent 89 => controlling path length=27
[DBG]    Agent 142 => controlling path length=31
[DBG]  hodnota skip_initial_solution=1
[DBG]  We skip initialSolution => call buildCollisionData()
[DBG]  buildCollisionData() called â€“ skip_initial_solution case.
[DBG]  Agents.size()=150, collision_graph.size()=150
[DBG]  agent 33 => updateCollidingPairs => foundCollision
[DBG]  agent 142 => updateCollidingPairs => foundCollision
[DBG]  Conflicting agent pairs:
[DBG]  agent 33 is in conflict with agent 142
[DBG]  buildCollisionData() => sum_of_costs=4220, num_of_colliding_pairs=1
[DBG]  buildCollisionData done => sum_of_costs=4220, num_of_colliding_pairs=1
[DBG]  sum_of_cost hodnota: 4220
[DBG]  After skip/init build => iteration_stats.back(): sum_of_costs=4220, collisions=1
[DEBUG] Using default neighbor generation strategy for conflicts: 2
[DEBUG] Using default neighbor generation strategy for conflicts: 2
[DEBUG] Using default neighbor generation strategy for conflicts: 2
	InitLNS(PP): runtime = 0.0102246, iterations = 4, colliding pairs = 0, initial colliding pairs = 1, solution cost = 4210, initial solution cost = 4220, failed iterations = 0
[DBG]  init_lns->sum_of_costs after init_lns->run: 4210
[DBG]  sum_of_costs after assignment from init_lns->run: 4210
[DBG]  Recomputing sum_of_cost by dividing neighbor.sum_of_costs and neighbor.old_sum_of_costs
[STAT] sum_of_costs after recomputation: 4210
[STAT] Iteration 154
[DBG]  Using SAT operator (destroy+repair SAT).
[DBG]  ====================
[DBG]  SAT destroy operator called.
[DBG]  SAT heuristic: 2
[DBG]  key_agent_id: 4
[DBG]  key_agent_id global path length: 37
[DBG]  Submap content (global positions):
[DBG]  549 550 551 552 553 
[DBG]  581 582 583 584 585 
[DBG]  613 614 615 616 617 
[DBG]  645 646 647 648 649 
[DBG]  677 678 679 680 681 
[DBG]  Map content with agents and obstacles:
[DBG]  A A . X X 
[DBG]  . A . . . 
[DBG]  A X A . . 
[DBG]  . . . . . 
[DBG]  . . X . X 
[DBG]  content of the map structure that we pass to the SAT solver:
[DBG]  1  1  1  -1  -1  
[DBG]  1  1  1  1  1  
[DBG]  1  -1  1  1  1  
[DBG]  1  1  1  1  1  
[DBG]  1  1  -1  1  -1  
[DBG]  Identifying agents in a submap for rescheduling (when key_agent is there at the time 35):
[DBG]  Agent 4 found intervals in the sub-map:
[DBG]   [32..36]
[DBG]  Agent 4 (interval in submap: [32..36]) contains time 35, added to replan.
[DBG]  Agent 43 found intervals in the sub-map:
[DBG]   [34..40]
[DBG]  Agent 43 (interval in submap: [34..40]) contains time 35, added to replan.
[DBG]  Agent 128 found intervals in the sub-map:
[DBG]   [33..35]
[DBG]  Agent 128 (interval in submap: [33..35]) contains time 35, added to replan.
[DBG]  Agent 131 found intervals in the sub-map:
[DBG]   [25..30]
[DBG]  Agent 131 is not in sub-map at time 35 (intervals: 
[DBG]  [25..30] )
[DBG]  Agent 135 found intervals in the sub-map:
[DBG]   [30..37]
[DBG]  Agent 135 (interval in submap: [30..37]) contains time 35, added to replan.
[DBG]  Agent 137 found intervals in the sub-map:
[DBG]   [31..37]
[DBG]  Agent 137 (interval in submap: [31..37]) contains time 35, added to replan.
[DBG]  Agent 4 | Start (global): 615 -> (local): (2, 2) at time 35 | Goal (global): 583 -> (local): (1, 2) at time 36
[DBG]  Agent 43 | Start (global): 550 -> (local): (0, 1) at time 35 | Goal (global): 677 -> (local): (4, 0) at time 40
[DBG]  Agent 128 | Start (global): 549 -> (local): (0, 0) at time 35 | Goal (global): 549 -> (local): (0, 0) at time 35
[DBG]  Agent 135 | Start (global): 582 -> (local): (1, 1) at time 35 | Goal (global): 549 -> (local): (0, 0) at time 37
[DBG]  Agent 137 | Start (global): 613 -> (local): (2, 0) at time 35 | Goal (global): 677 -> (local): (4, 0) at time 37
[DBG]  [REPAIR] SAT destroy operator called.
[DBG]  [REPAIR] SAT operator â€“ launching subproblem FOR OPTIMIZATION.
[DBG]  Creating local paths (sx, sy) in the submap for T_sync = 35
[DBG]    Agent 4 (global paths from T=35 to 36) has local path: (2,2) (1,2) 
[DBG]    Agent 43 (global paths from T=35 to 40) has local path: (0,1) (0,0) (1,0) (2,0) (3,0) (4,0) 
[DBG]    Agent 128 (global paths from T=35 to 35) has local path: (0,0) 
[DBG]    Agent 135 (global paths from T=35 to 37) has local path: (1,1) (0,1) (0,0) 
[DBG]    Agent 137 (global paths from T=35 to 37) has local path: (2,0) (3,0) (4,0) 
[DBG]  Checking input data for SAT solver:
[DBG]    - Number of agents to replan: 5
[DBG]  Agent 4 has the original local path length: 2 => Start (2,2), Goal (1,2)
[DBG]  Agent 43 has the original local path length: 6 => Start (0,1), Goal (4,0)
[DBG]  Agent 128 has the original local path length: 1 => Start (0,0), Goal (0,0)
[DBG]  Agent 135 has the original local path length: 3 => Start (1,1), Goal (0,0)
[DBG]  Agent 137 has the original local path length: 3 => Start (2,0), Goal (4,0)
[DBG]  Start position: (2, 2), (0, 1), (0, 0), (1, 1), (2, 0), 
[DBG]  Goal position: (1, 2), (4, 0), (0, 0), (0, 0), (4, 0), 
[DBG]  SAT instance and solver created.
Currently solving
Instance name: scen
Map name: map
Encoding used: disappear_at_goal
SAT solver used: Kissat
Optimizing function: sum of costs
Number of agents: 5
Mks LB: 6
SoC LB: 15
Delta: 0
Remaining time: 300000 [ms]

Vertex conflict! Agents 0, 2, timestep 2, location 0
Swapping conflict! Agents 0, 2, timestep 2, edge (0,0)
Vertex conflict! Agents 0, 2, timestep 3, location 0
Swapping conflict! Agents 0, 2, timestep 3, edge (0,0)
Vertex conflict! Agents 0, 2, timestep 4, location 0
Swapping conflict! Agents 0, 2, timestep 4, edge (0,0)
Vertex conflict! Agents 0, 2, timestep 5, location 0
Vertex conflict! Agents 0, 3, timestep 2, location 0
Swapping conflict! Agents 0, 3, timestep 2, edge (0,0)
Vertex conflict! Agents 0, 3, timestep 3, location 0
Swapping conflict! Agents 0, 3, timestep 3, edge (0,0)
Vertex conflict! Agents 0, 3, timestep 4, location 0
Swapping conflict! Agents 0, 3, timestep 4, edge (0,0)
Vertex conflict! Agents 0, 3, timestep 5, location 0
Vertex conflict! Agents 0, 4, timestep 3, location 0
Swapping conflict! Agents 0, 4, timestep 3, edge (0,0)
Vertex conflict! Agents 0, 4, timestep 4, location 0
Swapping conflict! Agents 0, 4, timestep 4, edge (0,0)
Vertex conflict! Agents 0, 4, timestep 5, location 0
Vertex conflict! Agents 2, 3, timestep 2, location 0
Swapping conflict! Agents 2, 3, timestep 2, edge (0,0)
Vertex conflict! Agents 2, 3, timestep 3, location 0
Swapping conflict! Agents 2, 3, timestep 3, edge (0,0)
Vertex conflict! Agents 2, 3, timestep 4, location 0
Swapping conflict! Agents 2, 3, timestep 4, edge (0,0)
Vertex conflict! Agents 2, 3, timestep 5, location 0
Vertex conflict! Agents 2, 4, timestep 3, location 0
Swapping conflict! Agents 2, 4, timestep 3, edge (0,0)
Vertex conflict! Agents 2, 4, timestep 4, location 0
Swapping conflict! Agents 2, 4, timestep 4, edge (0,0)
Vertex conflict! Agents 2, 4, timestep 5, location 0
Vertex conflict! Agents 3, 4, timestep 3, location 0
Swapping conflict! Agents 3, 4, timestep 3, edge (0,0)
Vertex conflict! Agents 3, 4, timestep 4, location 0
Swapping conflict! Agents 3, 4, timestep 4, edge (0,0)
Vertex conflict! Agents 3, 4, timestep 5, location 0
Found plan [agents = 5] [timesteps = 6]
Agent #0 : 9 5 0 0 0 0 
Agent #1 : 1 4 3 8 12 17 
Agent #2 : 0 0 0 0 0 0 
Agent #3 : 4 3 0 0 0 0 
Agent #4 : 8 12 17 0 0 0 

[STAT] Solver returned: 0
[DBG]  Agent (index) 4 | New local path (submap idx):
[DBG]  9 5 
[DBG]  Agent (index) 43 | New local path (submap idx):
[DBG]  1 4 3 8 12 17 
[DBG]  Agent (index) 128 | New local path (submap idx):
[DBG]  0 
[DBG]  Agent (index) 135 | New local path (submap idx):
[DBG]  4 3 0 
[DBG]  Agent (index) 137 | New local path (submap idx):
[DBG]  8 12 17 
[DBG]  Update the agent path 4 | Original local length: 2 | New local length: 2
[DBG]  agent 4 t=0 => decoded (sx,sy)=(2,2) => global_id=615
[DBG]  agent 4 t=1 => decoded (sx,sy)=(1,2) => global_id=583
[DBG]  Complete path of agent 4:
[DBG]    Original: 829 861 893 892 891 890 889 888 887 886 885 884 883 882 881 913 913 912 880 879 878 877 876 875 843 811 779 778 746 714 682 650 649 648 647 615 583 
[DBG]    New:     829 861 893 892 891 890 889 888 887 886 885 884 883 882 881 913 913 912 880 879 878 877 876 875 843 811 779 778 746 714 682 650 649 648 647 615 583 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 829 861 893 892 891 890 889 888 887 886 885 884 883 882 881 913 913 912 880 879 878 877 876 875 843 811 779 778 746 714 682 650 649 648 647 
[DBG]    Local path (in submap): 615 583 
[DBG]    Suffix (out of submap): 
[DBG]  Original agent path length 4 je: 37
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 0: 829, 861, 893, 892, 891, 890, 889, 888, 887, 886, 885, 884, 883, 882, 881, 913, 913, 912, 880, 879, 878, 877, 876, 875, 843, 811, 779, 778, 746, 714, 682, 650, 649, 648, 647, 615, 583, 
[DBG]  Path for agent 4 updated, resulting length: 37
[DBG]  Update the agent path 43 | Original local length: 6 | New local length: 6
[DBG]  agent 43 t=0 => decoded (sx,sy)=(0,1) => global_id=550
[DBG]  agent 43 t=1 => decoded (sx,sy)=(1,1) => global_id=582
[DBG]  agent 43 t=2 => decoded (sx,sy)=(1,0) => global_id=581
[DBG]  agent 43 t=3 => decoded (sx,sy)=(2,0) => global_id=613
[DBG]  agent 43 t=4 => decoded (sx,sy)=(3,0) => global_id=645
[DBG]  agent 43 t=5 => decoded (sx,sy)=(4,0) => global_id=677
[DBG]  Complete path of agent 43:
[DBG]    Original: 414 413 381 380 379 378 377 409 441 440 439 438 438 438 437 469 468 467 466 467 466 465 464 463 462 494 526 525 524 523 522 521 520 519 551 550 549 581 613 645 677 709 741 740 739 707 
[DBG]    New:     414 413 381 380 379 378 377 409 441 440 439 438 438 438 437 469 468 467 466 467 466 465 464 463 462 494 526 525 524 523 522 521 520 519 551 550 582 581 613 645 677 709 741 740 739 707 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 414 413 381 380 379 378 377 409 441 440 439 438 438 438 437 469 468 467 466 467 466 465 464 463 462 494 526 525 524 523 522 521 520 519 551 
[DBG]    Local path (in submap): 550 582 581 613 645 677 
[DBG]    Suffix (out of submap): 709 741 740 739 707 
[DBG]  Original agent path length 43 je: 46
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 1: 414, 413, 381, 380, 379, 378, 377, 409, 441, 440, 439, 438, 438, 438, 437, 469, 468, 467, 466, 467, 466, 465, 464, 463, 462, 494, 526, 525, 524, 523, 522, 521, 520, 519, 551, 550, 582, 581, 613, 645, 677, 709, 741, 740, 739, 707, 
[DBG]  Path for agent 43 updated, resulting length: 46
[DBG]  Update the agent path 128 | Original local length: 1 | New local length: 1
[DBG]  agent 128 t=0 => decoded (sx,sy)=(0,0) => global_id=549
[DBG]  Complete path of agent 128:
[DBG]    Original: 604 603 602 570 538 506 505 504 503 502 470 469 437 405 404 403 402 401 433 432 431 463 462 494 526 525 525 524 523 522 521 520 519 551 550 549 548 547 
[DBG]    New:     604 603 602 570 538 506 505 504 503 502 470 469 437 405 404 403 402 401 433 432 431 463 462 494 526 525 525 524 523 522 521 520 519 551 550 549 548 547 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 604 603 602 570 538 506 505 504 503 502 470 469 437 405 404 403 402 401 433 432 431 463 462 494 526 525 525 524 523 522 521 520 519 551 550 
[DBG]    Local path (in submap): 549 
[DBG]    Suffix (out of submap): 548 547 
[DBG]  Original agent path length 128 je: 38
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 2: 604, 603, 602, 570, 538, 506, 505, 504, 503, 502, 470, 469, 437, 405, 404, 403, 402, 401, 433, 432, 431, 463, 462, 494, 526, 525, 525, 524, 523, 522, 521, 520, 519, 551, 550, 549, 548, 547, 
[DBG]  Path for agent 128 updated, resulting length: 38
[DBG]  Update the agent path 135 | Original local length: 3 | New local length: 3
[DBG]  agent 135 t=0 => decoded (sx,sy)=(1,1) => global_id=582
[DBG]  agent 135 t=1 => decoded (sx,sy)=(1,0) => global_id=581
[DBG]  agent 135 t=2 => decoded (sx,sy)=(0,0) => global_id=549
[DBG]  Complete path of agent 135:
[DBG]    Original: 696 728 729 761 793 792 824 823 822 821 820 819 818 850 849 848 847 879 878 877 876 875 843 811 779 747 746 714 682 650 649 648 616 584 583 582 550 549 548 516 484 483 482 450 449 448 416 384 
[DBG]    New:     696 728 729 761 793 792 824 823 822 821 820 819 818 850 849 848 847 879 878 877 876 875 843 811 779 747 746 714 682 650 649 648 616 584 583 582 581 549 548 516 484 483 482 450 449 448 416 384 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 696 728 729 761 793 792 824 823 822 821 820 819 818 850 849 848 847 879 878 877 876 875 843 811 779 747 746 714 682 650 649 648 616 584 583 
[DBG]    Local path (in submap): 582 581 549 
[DBG]    Suffix (out of submap): 548 516 484 483 482 450 449 448 416 384 
[DBG]  Original agent path length 135 je: 48
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 3: 696, 728, 729, 761, 793, 792, 824, 823, 822, 821, 820, 819, 818, 850, 849, 848, 847, 879, 878, 877, 876, 875, 843, 811, 779, 747, 746, 714, 682, 650, 649, 648, 616, 584, 583, 582, 581, 549, 548, 516, 484, 483, 482, 450, 449, 448, 416, 384, 
[DBG]  Path for agent 135 updated, resulting length: 48
[DBG]  Update the agent path 137 | Original local length: 3 | New local length: 3
[DBG]  agent 137 t=0 => decoded (sx,sy)=(2,0) => global_id=613
[DBG]  agent 137 t=1 => decoded (sx,sy)=(3,0) => global_id=645
[DBG]  agent 137 t=2 => decoded (sx,sy)=(4,0) => global_id=677
[DBG]  Complete path of agent 137:
[DBG]    Original: 538 506 505 504 503 502 470 469 437 405 404 403 435 467 466 465 464 463 463 462 494 526 525 524 523 522 521 520 520 520 519 551 550 549 581 613 645 677 709 741 740 739 738 737 736 768 800 832 864 865 897 898 930 931 932 
[DBG]    New:     538 506 505 504 503 502 470 469 437 405 404 403 435 467 466 465 464 463 463 462 494 526 525 524 523 522 521 520 520 520 519 551 550 549 581 613 645 677 709 741 740 739 738 737 736 768 800 832 864 865 897 898 930 931 932 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 538 506 505 504 503 502 470 469 437 405 404 403 435 467 466 465 464 463 463 462 494 526 525 524 523 522 521 520 520 520 519 551 550 549 581 
[DBG]    Local path (in submap): 613 645 677 
[DBG]    Suffix (out of submap): 709 741 740 739 738 737 736 768 800 832 864 865 897 898 930 931 932 
[DBG]  Original agent path length 137 je: 55
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 4: 538, 506, 505, 504, 503, 502, 470, 469, 437, 405, 404, 403, 435, 467, 466, 465, 464, 463, 463, 462, 494, 526, 525, 524, 523, 522, 521, 520, 520, 520, 519, 551, 550, 549, 581, 613, 645, 677, 709, 741, 740, 739, 738, 737, 736, 768, 800, 832, 864, 865, 897, 898, 930, 931, 932, 
[DBG]  Path for agent 137 updated, resulting length: 55
[DBG]  Paths successfully updated.
[DBG]  (LNS.cpp) New path for agent 4: 
[DBG]  829, 861, 893, 892, 891, 890, 889, 888, 887, 886, 885, 884, 883, 882, 881, 913, 913, 912, 880, 879, 878, 877, 876, 875, 843, 811, 779, 778, 746, 714, 682, 650, 649, 648, 647, 615, 583, 
[DBG]  (LNS.cpp) New path for agent 43: 
[DBG]  414, 413, 381, 380, 379, 378, 377, 409, 441, 440, 439, 438, 438, 438, 437, 469, 468, 467, 466, 467, 466, 465, 464, 463, 462, 494, 526, 525, 524, 523, 522, 521, 520, 519, 551, 550, 582, 581, 613, 645, 677, 709, 741, 740, 739, 707, 
[DBG]  (LNS.cpp) New path for agent 128: 
[DBG]  604, 603, 602, 570, 538, 506, 505, 504, 503, 502, 470, 469, 437, 405, 404, 403, 402, 401, 433, 432, 431, 463, 462, 494, 526, 525, 525, 524, 523, 522, 521, 520, 519, 551, 550, 549, 548, 547, 
[DBG]  (LNS.cpp) New path for agent 135: 
[DBG]  696, 728, 729, 761, 793, 792, 824, 823, 822, 821, 820, 819, 818, 850, 849, 848, 847, 879, 878, 877, 876, 875, 843, 811, 779, 747, 746, 714, 682, 650, 649, 648, 616, 584, 583, 582, 581, 549, 548, 516, 484, 483, 482, 450, 449, 448, 416, 384, 
[DBG]  (LNS.cpp) New path for agent 137: 
[DBG]  538, 506, 505, 504, 503, 502, 470, 469, 437, 405, 404, 403, 435, 467, 466, 465, 464, 463, 463, 462, 494, 526, 525, 524, 523, 522, 521, 520, 520, 520, 519, 551, 550, 549, 581, 613, 645, 677, 709, 741, 740, 739, 738, 737, 736, 768, 800, 832, 864, 865, 897, 898, 930, 931, 932, 
[DBG]  component_weights = {0.384977, 0.0863306, 0.0902802, 0.438412}
[DBG]  opSuccess value: 1
[STAT] neighbor.sum_of_costs before recomputation: 219
[STAT] neighbor.old_sum_of_costs before recomputation: 219
[STAT] sum_of_costs before recomputation: 4210
[DBG]  Validate solution immediately after SAT success.
[DBG]  No problems after SAT replan.
[DBG]  Recomputing sum_of_cost by dividing neighbor.sum_of_costs and neighbor.old_sum_of_costs
[STAT] sum_of_costs after recomputation: 4210
[STAT] Iteration 155
[DBG]  Using SAT operator (destroy+repair SAT).
[DBG]  ====================
[DBG]  SAT destroy operator called.
[DBG]  SAT heuristic: 2
[DBG]  key_agent_id: 22
[DBG]  key_agent_id global path length: 17
[DBG]  Submap content (global positions):
[DBG]  175 176 177 178 179 
[DBG]  207 208 209 210 211 
[DBG]  239 240 241 242 243 
[DBG]  271 272 273 274 275 
[DBG]  303 304 305 306 307 
[DBG]  Map content with agents and obstacles:
[DBG]  X . . . . 
[DBG]  . . . . X 
[DBG]  A . A . . 
[DBG]  A X . . . 
[DBG]  . . X A X 
[DBG]  content of the map structure that we pass to the SAT solver:
[DBG]  -1  1  1  1  1  
[DBG]  1  1  1  1  -1  
[DBG]  1  1  1  1  1  
[DBG]  1  -1  1  1  1  
[DBG]  1  1  -1  1  -1  
[DBG]  Identifying agents in a submap for rescheduling (when key_agent is there at the time 11):
[DBG]  Agent 5 found intervals in the sub-map:
[DBG]   [14..15]
[DBG]  Agent 5 is not in sub-map at time 11 (intervals: 
[DBG]  [14..15] )
[DBG]  Agent 22 found intervals in the sub-map:
[DBG]   [8..14]
[DBG]  Agent 22 (interval in submap: [8..14]) contains time 11, added to replan.
[DBG]  Agent 31 found intervals in the sub-map:
[DBG]  
[DBG]  Agent 31 is not in sub-map at time 11 (intervals: 
[DBG]  )
[DBG]  Agent 33 found intervals in the sub-map:
[DBG]   [11..16]
[DBG]  Agent 33 (interval in submap: [11..16]) contains time 11, added to replan.
[DBG]  Agent 36 found intervals in the sub-map:
[DBG]   [11..13]
[DBG]  Agent 36 (interval in submap: [11..13]) contains time 11, added to replan.
[DBG]  Agent 45 found intervals in the sub-map:
[DBG]  
[DBG]  Agent 45 is not in sub-map at time 11 (intervals: 
[DBG]  )
[DBG]  Agent 54 found intervals in the sub-map:
[DBG]  
[DBG]  Agent 54 is not in sub-map at time 11 (intervals: 
[DBG]  )
[DBG]  Agent 66 found intervals in the sub-map:
[DBG]   [14..19]
[DBG]  Agent 66 is not in sub-map at time 11 (intervals: 
[DBG]  [14..19] )
[DBG]  Agent 83 found intervals in the sub-map:
[DBG]   [7..12]
[DBG]  Agent 83 (interval in submap: [7..12]) contains time 11, added to replan.
[DBG]  Agent 131 found intervals in the sub-map:
[DBG]  
[DBG]  Agent 131 is not in sub-map at time 11 (intervals: 
[DBG]  )
[DBG]  Agent 22 | Start (global): 241 -> (local): (2, 2) at time 11 | Goal (global): 306 -> (local): (4, 3) at time 14
[DBG]  Agent 33 | Start (global): 239 -> (local): (2, 0) at time 11 | Goal (global): 275 -> (local): (3, 4) at time 16
[DBG]  Agent 36 | Start (global): 306 -> (local): (4, 3) at time 11 | Goal (global): 306 -> (local): (4, 3) at time 13
[DBG]  Agent 83 | Start (global): 271 -> (local): (3, 0) at time 11 | Goal (global): 303 -> (local): (4, 0) at time 12
[DBG]  [REPAIR] SAT destroy operator called.
[DBG]  [REPAIR] SAT operator â€“ launching subproblem FOR OPTIMIZATION.
[DBG]  Creating local paths (sx, sy) in the submap for T_sync = 11
[DBG]    Agent 22 (global paths from T=11 to 14) has local path: (2,2) (2,3) (3,3) (4,3) 
[DBG]    Agent 33 (global paths from T=11 to 16) has local path: (2,0) (2,1) (2,2) (3,2) (3,3) (3,4) 
[DBG]    Agent 36 (global paths from T=11 to 13) has local path: (4,3) (4,3) (4,3) 
[DBG]    Agent 83 (global paths from T=11 to 12) has local path: (3,0) (4,0) 
[DBG]  Checking input data for SAT solver:
[DBG]    - Number of agents to replan: 4
[DBG]  Agent 22 has the original local path length: 4 => Start (2,2), Goal (4,3)
[DBG]  Agent 33 has the original local path length: 6 => Start (2,0), Goal (3,4)
[DBG]  Agent 36 has the original local path length: 3 => Start (4,3), Goal (4,3)
[DBG]  Agent 83 has the original local path length: 2 => Start (3,0), Goal (4,0)
[DBG]  Start position: (2, 2), (2, 0), (4, 3), (3, 0), 
[DBG]  Goal position: (4, 3), (3, 4), (4, 3), (4, 0), 
[DBG]  SAT instance and solver created.
Currently solving
Instance name: scen
Map name: map
Encoding used: disappear_at_goal
SAT solver used: Kissat
Optimizing function: sum of costs
Number of agents: 4
Mks LB: 6
SoC LB: 13
Delta: 0
Remaining time: 300000 [ms]

Vertex conflict! Agents 0, 2, timestep 4, location 0
Swapping conflict! Agents 0, 2, timestep 4, edge (0,0)
Vertex conflict! Agents 0, 2, timestep 5, location 0
Vertex conflict! Agents 0, 3, timestep 4, location 0
Swapping conflict! Agents 0, 3, timestep 4, edge (0,0)
Vertex conflict! Agents 0, 3, timestep 5, location 0
Vertex conflict! Agents 2, 3, timestep 2, location 0
Swapping conflict! Agents 2, 3, timestep 2, edge (0,0)
Vertex conflict! Agents 2, 3, timestep 3, location 0
Swapping conflict! Agents 2, 3, timestep 3, edge (0,0)
Vertex conflict! Agents 2, 3, timestep 4, location 0
Swapping conflict! Agents 2, 3, timestep 4, edge (0,0)
Vertex conflict! Agents 2, 3, timestep 5, location 0
Found plan [agents = 4] [timesteps = 6]
Agent #0 : 10 14 15 19 0 0 
Agent #1 : 8 9 10 14 15 16 
Agent #2 : 19 0 0 0 0 0 
Agent #3 : 13 17 0 0 0 0 

[STAT] Solver returned: 0
[DBG]  Agent (index) 22 | New local path (submap idx):
[DBG]  10 14 15 19 
[DBG]  Agent (index) 33 | New local path (submap idx):
[DBG]  8 9 10 14 15 16 
[DBG]  Agent (index) 36 | New local path (submap idx):
[DBG]  19 
[DBG]  Agent (index) 83 | New local path (submap idx):
[DBG]  13 17 
[DBG]  Update the agent path 22 | Original local length: 4 | New local length: 4
[DBG]  agent 22 t=0 => decoded (sx,sy)=(2,2) => global_id=241
[DBG]  agent 22 t=1 => decoded (sx,sy)=(3,2) => global_id=273
[DBG]  agent 22 t=2 => decoded (sx,sy)=(3,3) => global_id=274
[DBG]  agent 22 t=3 => decoded (sx,sy)=(4,3) => global_id=306
[DBG]  Complete path of agent 22:
[DBG]    Original: 329 330 298 299 300 268 269 270 271 239 240 241 242 274 306 338 339 
[DBG]    New:     329 330 298 299 300 268 269 270 271 239 240 241 273 274 306 338 339 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 329 330 298 299 300 268 269 270 271 239 240 
[DBG]    Local path (in submap): 241 273 274 306 
[DBG]    Suffix (out of submap): 338 339 
[DBG]  Original agent path length 22 je: 17
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 0: 329, 330, 298, 299, 300, 268, 269, 270, 271, 239, 240, 241, 273, 274, 306, 338, 339, 
[DBG]  Path for agent 22 updated, resulting length: 17
[DBG]  Update the agent path 33 | Original local length: 6 | New local length: 6
[DBG]  agent 33 t=0 => decoded (sx,sy)=(2,0) => global_id=239
[DBG]  agent 33 t=1 => decoded (sx,sy)=(2,1) => global_id=240
[DBG]  agent 33 t=2 => decoded (sx,sy)=(2,2) => global_id=241
[DBG]  agent 33 t=3 => decoded (sx,sy)=(3,2) => global_id=273
[DBG]  agent 33 t=4 => decoded (sx,sy)=(3,3) => global_id=274
[DBG]  agent 33 t=5 => decoded (sx,sy)=(3,4) => global_id=275
[DBG]  Complete path of agent 33:
[DBG]    Original: 360 361 362 363 331 299 267 268 236 237 238 239 240 241 273 274 275 276 308 309 310 311 312 344 345 345 377 378 379 380 412 413 445 477 509 510 
[DBG]    New:     360 361 362 363 331 299 267 268 236 237 238 239 240 241 273 274 275 276 308 309 310 311 312 344 345 345 377 378 379 380 412 413 445 477 509 510 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 360 361 362 363 331 299 267 268 236 237 238 
[DBG]    Local path (in submap): 239 240 241 273 274 275 
[DBG]    Suffix (out of submap): 276 308 309 310 311 312 344 345 345 377 378 379 380 412 413 445 477 509 510 
[DBG]  Original agent path length 33 je: 36
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 1: 360, 361, 362, 363, 331, 299, 267, 268, 236, 237, 238, 239, 240, 241, 273, 274, 275, 276, 308, 309, 310, 311, 312, 344, 345, 345, 377, 378, 379, 380, 412, 413, 445, 477, 509, 510, 
[DBG]  Path for agent 33 updated, resulting length: 36
[DBG]  Update the agent path 36 | Original local length: 3 | New local length: 1
[DBG]  agent 36 t=0 => decoded (sx,sy)=(4,3) => global_id=306
[DBG]  Complete path of agent 36:
[DBG]    Original: 431 431 431 432 433 401 401 401 369 337 338 306 306 306 338 339 371 
[DBG]    New:     431 431 431 432 433 401 401 401 369 337 338 306 338 339 371 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 431 431 431 432 433 401 401 401 369 337 338 
[DBG]    Local path (in submap): 306 338 339 
[DBG]    Suffix (out of submap): 371 
[DBG]  Original agent path length 36 je: 17
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 2: 431, 431, 431, 432, 433, 401, 401, 401, 369, 337, 338, 306, 338, 339, 371, 
[DBG]  Path for agent 36 updated, resulting length: 15
[DBG]  Update the agent path 83 | Original local length: 2 | New local length: 2
[DBG]  agent 83 t=0 => decoded (sx,sy)=(3,0) => global_id=271
[DBG]  agent 83 t=1 => decoded (sx,sy)=(4,0) => global_id=303
[DBG]  Complete path of agent 83:
[DBG]    Original: 18 50 49 81 113 112 144 176 208 207 239 271 303 335 367 366 398 430 462 494 526 558 590 622 623 655 687 719 751 752 784 783 815 847 879 880 912 944 976 977 1009 
[DBG]    New:     18 50 49 81 113 112 144 176 208 207 239 271 303 335 367 366 398 430 462 494 526 558 590 622 623 655 687 719 751 752 784 783 815 847 879 880 912 944 976 977 1009 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 18 50 49 81 113 112 144 176 208 207 239 
[DBG]    Local path (in submap): 271 303 
[DBG]    Suffix (out of submap): 335 367 366 398 430 462 494 526 558 590 622 623 655 687 719 751 752 784 783 815 847 879 880 912 944 976 977 1009 
[DBG]  Original agent path length 83 je: 41
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 3: 18, 50, 49, 81, 113, 112, 144, 176, 208, 207, 239, 271, 303, 335, 367, 366, 398, 430, 462, 494, 526, 558, 590, 622, 623, 655, 687, 719, 751, 752, 784, 783, 815, 847, 879, 880, 912, 944, 976, 977, 1009, 
[DBG]  Path for agent 83 updated, resulting length: 41
[DBG]  Paths successfully updated.
[DBG]  (LNS.cpp) New path for agent 22: 
[DBG]  329, 330, 298, 299, 300, 268, 269, 270, 271, 239, 240, 241, 273, 274, 306, 338, 339, 
[DBG]  (LNS.cpp) New path for agent 33: 
[DBG]  360, 361, 362, 363, 331, 299, 267, 268, 236, 237, 238, 239, 240, 241, 273, 274, 275, 276, 308, 309, 310, 311, 312, 344, 345, 345, 377, 378, 379, 380, 412, 413, 445, 477, 509, 510, 
[DBG]  (LNS.cpp) New path for agent 36: 
[DBG]  431, 431, 431, 432, 433, 401, 401, 401, 369, 337, 338, 306, 338, 339, 371, 
[DBG]  (LNS.cpp) New path for agent 83: 
[DBG]  18, 50, 49, 81, 113, 112, 144, 176, 208, 207, 239, 271, 303, 335, 367, 366, 398, 430, 462, 494, 526, 558, 590, 622, 623, 655, 687, 719, 751, 752, 784, 783, 815, 847, 879, 880, 912, 944, 976, 977, 1009, 
[DBG]  component_weights = {0.381532, 0.0855579, 0.0894722, 0.443438}
[DBG]  opSuccess value: 1
[STAT] neighbor.sum_of_costs before recomputation: 105
[STAT] neighbor.old_sum_of_costs before recomputation: 107
[STAT] sum_of_costs before recomputation: 4210
[DBG]  Validate solution immediately after SAT success.
[WARNING] Problem after SAT: Edge conflict between agents 36 and 45 at edge (338,339) at timestep 13
[DBG]  Attempting immediate repair via init_lns because problem occurred after SAT (should be applied only for conflicts...).
[DBG]  Passing 150 agents to init_lns (skip=true).
[DBG]  path_table contents for selected agents (neighbor.agents):
[DBG]    Agent 22 => controlling path length=17
[DBG]    Agent 33 => controlling path length=36
[DBG]    Agent 36 => controlling path length=15
[DBG]    Agent 83 => controlling path length=41
[DBG]  hodnota skip_initial_solution=1
[DBG]  We skip initialSolution => call buildCollisionData()
[DBG]  buildCollisionData() called â€“ skip_initial_solution case.
[DBG]  Agents.size()=150, collision_graph.size()=150
[DBG]  agent 36 => updateCollidingPairs => foundCollision
[DBG]  agent 45 => updateCollidingPairs => foundCollision
[DBG]  Conflicting agent pairs:
[DBG]  agent 36 is in conflict with agent 45
[DBG]  buildCollisionData() => sum_of_costs=4208, num_of_colliding_pairs=1
[DBG]  buildCollisionData done => sum_of_costs=4208, num_of_colliding_pairs=1
[DBG]  sum_of_cost hodnota: 4208
[DBG]  After skip/init build => iteration_stats.back(): sum_of_costs=4208, collisions=1
[DEBUG] Using default neighbor generation strategy for conflicts: 0
	InitLNS(PP): runtime = 0.00506083, iterations = 2, colliding pairs = 0, initial colliding pairs = 1, solution cost = 4219, initial solution cost = 4208, failed iterations = 0
[DBG]  init_lns->sum_of_costs after init_lns->run: 4219
[DBG]  sum_of_costs after assignment from init_lns->run: 4219
[DBG]  Recomputing sum_of_cost by dividing neighbor.sum_of_costs and neighbor.old_sum_of_costs
[STAT] sum_of_costs after recomputation: 4219
[STAT] Iteration 156
[DBG]  Using SAT operator (destroy+repair SAT).
[DBG]  ====================
[DBG]  SAT destroy operator called.
[DBG]  SAT heuristic: 2
[DBG]  key_agent_id: 102
[DBG]  key_agent_id global path length: 12
[DBG]  Submap content (global positions):
[DBG]  923 924 925 926 927 
[DBG]  955 956 957 958 959 
[DBG]  987 988 989 990 991 
[DBG]  1019 1020 1021 1022 1023 
[DBG]  -1 -1 -1 -1 -1 
[DBG]  Map content with agents and obstacles:
[DBG]  . . X X X 
[DBG]  . . . X X 
[DBG]  X A A . . 
[DBG]  . X . . . 
[DBG]  X X X X X 
[DBG]  content of the map structure that we pass to the SAT solver:
[DBG]  1  1  -1  -1  -1  
[DBG]  1  1  1  -1  -1  
[DBG]  -1  1  1  1  1  
[DBG]  1  -1  1  1  1  
[DBG]  1  1  1  1  1  
[DBG]  Identifying agents in a submap for rescheduling (when key_agent is there at the time 2):
[DBG]  Agent 11 found intervals in the sub-map:
[DBG]   [0..10]
[DBG]  Agent 11 (interval in submap: [0..10]) contains time 2, added to replan.
[DBG]  Agent 102 found intervals in the sub-map:
[DBG]   [0..8]
[DBG]  Agent 102 (interval in submap: [0..8]) contains time 2, added to replan.
[DBG]  Agent 133 found intervals in the sub-map:
[DBG]   [0..1]
[DBG]  Agent 133 is not in sub-map at time 2 (intervals: 
[DBG]  [0..1] )
[DBG]  Agent 11 | Start (global): 988 -> (local): (2, 1) at time 2 | Goal (global): 923 -> (local): (0, 0) at time 10
[DBG]  Agent 102 | Start (global): 989 -> (local): (2, 2) at time 2 | Goal (global): 924 -> (local): (0, 1) at time 8
[DBG]  [REPAIR] SAT destroy operator called.
[DBG]  [REPAIR] SAT operator â€“ launching subproblem FOR OPTIMIZATION.
[DBG]  Creating local paths (sx, sy) in the submap for T_sync = 2
[DBG]    Agent 11 (global paths from T=2 to 10) has local path: (2,1) (2,1) (2,1) (1,1) (1,1) (1,1) (1,1) (0,1) (0,0) 
[DBG]    Agent 102 (global paths from T=2 to 8) has local path: (2,2) (1,2) (1,1) (0,1) (0,1) (0,1) (0,1) 
[DBG]  Checking input data for SAT solver:
[DBG]    - Number of agents to replan: 2
[DBG]  Agent 11 has the original local path length: 9 => Start (2,1), Goal (0,0)
[DBG]  Agent 102 has the original local path length: 7 => Start (2,2), Goal (0,1)
[DBG]  Start position: (2, 1), (2, 2), 
[DBG]  Goal position: (0, 0), (0, 1), 
[DBG]  SAT instance and solver created.
Currently solving
Instance name: scen
Map name: map
Encoding used: disappear_at_goal
SAT solver used: Kissat
Optimizing function: sum of costs
Number of agents: 2
Mks LB: 4
SoC LB: 8
Delta: 0
Remaining time: 300000 [ms]

Found plan [agents = 2] [timesteps = 4]
Agent #0 : 5 3 2 0 
Agent #1 : 6 5 3 1 

[STAT] Solver returned: 0
[DBG]  Agent (index) 11 | New local path (submap idx):
[DBG]  5 3 2 0 
[DBG]  Agent (index) 102 | New local path (submap idx):
[DBG]  6 5 3 1 
[DBG]  Update the agent path 11 | Original local length: 9 | New local length: 4
[DBG]  agent 11 t=0 => decoded (sx,sy)=(2,1) => global_id=988
[DBG]  agent 11 t=1 => decoded (sx,sy)=(1,1) => global_id=956
[DBG]  agent 11 t=2 => decoded (sx,sy)=(1,0) => global_id=955
[DBG]  agent 11 t=3 => decoded (sx,sy)=(0,0) => global_id=923
[DBG]  Complete path of agent 11:
[DBG]    Original: 990 989 988 988 988 956 956 956 956 924 923 922 921 920 919 918 917 885 884 883 851 851 883 882 881 880 879 847 815 783 751 752 753 721 721 721 689 657 
[DBG]    New:     990 989 988 956 955 923 922 921 920 919 918 917 885 884 883 851 851 883 882 881 880 879 847 815 783 751 752 753 721 721 721 689 657 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 990 989 
[DBG]    Local path (in submap): 988 956 955 923 922 921 920 919 918 
[DBG]    Suffix (out of submap): 917 885 884 883 851 851 883 882 881 880 879 847 815 783 751 752 753 721 721 721 689 657 
[DBG]  Original agent path length 11 je: 38
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 0: 990, 989, 988, 956, 955, 923, 922, 921, 920, 919, 918, 917, 885, 884, 883, 851, 851, 883, 882, 881, 880, 879, 847, 815, 783, 751, 752, 753, 721, 721, 721, 689, 657, 
[DBG]  Path for agent 11 updated, resulting length: 33
[DBG]  Update the agent path 102 | Original local length: 7 | New local length: 4
[DBG]  agent 102 t=0 => decoded (sx,sy)=(2,2) => global_id=989
[DBG]  agent 102 t=1 => decoded (sx,sy)=(2,1) => global_id=988
[DBG]  agent 102 t=2 => decoded (sx,sy)=(1,1) => global_id=956
[DBG]  agent 102 t=3 => decoded (sx,sy)=(0,1) => global_id=924
[DBG]  Complete path of agent 102:
[DBG]    Original: 991 990 989 957 956 924 924 924 924 892 891 890 
[DBG]    New:     991 990 989 988 956 924 892 891 890 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 991 990 
[DBG]    Local path (in submap): 989 988 956 924 892 891 890 
[DBG]    Suffix (out of submap): 
[DBG]  Original agent path length 102 je: 12
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 1: 991, 990, 989, 988, 956, 924, 892, 891, 890, 
[DBG]  Path for agent 102 updated, resulting length: 9
[DBG]  Paths successfully updated.
[DBG]  (LNS.cpp) New path for agent 11: 
[DBG]  990, 989, 988, 956, 955, 923, 922, 921, 920, 919, 918, 917, 885, 884, 883, 851, 851, 883, 882, 881, 880, 879, 847, 815, 783, 751, 752, 753, 721, 721, 721, 689, 657, 
[DBG]  (LNS.cpp) New path for agent 102: 
[DBG]  991, 990, 989, 988, 956, 924, 892, 891, 890, 
[DBG]  component_weights = {0.377828, 0.0847273, 0.0886035, 0.448842}
[DBG]  opSuccess value: 1
[STAT] neighbor.sum_of_costs before recomputation: 40
[STAT] neighbor.old_sum_of_costs before recomputation: 48
[STAT] sum_of_costs before recomputation: 4219
[DBG]  Validate solution immediately after SAT success.
[WARNING] Problem after SAT: Edge conflict between agents 11 and 0 at edge (847,815) at timestep 23
[DBG]  Attempting immediate repair via init_lns because problem occurred after SAT (should be applied only for conflicts...).
[DBG]  Passing 150 agents to init_lns (skip=true).
[DBG]  path_table contents for selected agents (neighbor.agents):
[DBG]    Agent 11 => controlling path length=33
[DBG]    Agent 102 => controlling path length=9
[DBG]  hodnota skip_initial_solution=1
[DBG]  We skip initialSolution => call buildCollisionData()
[DBG]  buildCollisionData() called â€“ skip_initial_solution case.
[DBG]  Agents.size()=150, collision_graph.size()=150
[DBG]  agent 0 => updateCollidingPairs => foundCollision
[DBG]  agent 7 => updateCollidingPairs => foundCollision
[DBG]  agent 11 => updateCollidingPairs => foundCollision
[DBG]  agent 35 => updateCollidingPairs => foundCollision
[DBG]  agent 39 => updateCollidingPairs => foundCollision
[DBG]  agent 44 => updateCollidingPairs => foundCollision
[DBG]  agent 55 => updateCollidingPairs => foundCollision
[DBG]  agent 69 => updateCollidingPairs => foundCollision
[DBG]  agent 71 => updateCollidingPairs => foundCollision
[DBG]  agent 85 => updateCollidingPairs => foundCollision
[DBG]  agent 102 => updateCollidingPairs => foundCollision
[DBG]  agent 106 => updateCollidingPairs => foundCollision
[DBG]  Conflicting agent pairs:
[DBG]  agent 0 is in conflict with agent 11
[DBG]  agent 7 is in conflict with agent 11
[DBG]  agent 11 is in conflict with agent 35
[DBG]  agent 11 is in conflict with agent 39
[DBG]  agent 11 is in conflict with agent 44
[DBG]  agent 11 is in conflict with agent 55
[DBG]  agent 11 is in conflict with agent 69
[DBG]  agent 11 is in conflict with agent 71
[DBG]  agent 11 is in conflict with agent 85
[DBG]  agent 11 is in conflict with agent 106
[DBG]  agent 35 is in conflict with agent 102
[DBG]  buildCollisionData() => sum_of_costs=4211, num_of_colliding_pairs=11
[DBG]  buildCollisionData done => sum_of_costs=4211, num_of_colliding_pairs=11
[DBG]  sum_of_cost hodnota: 4211
[DBG]  After skip/init build => iteration_stats.back(): sum_of_costs=4211, collisions=11
[DEBUG] Using default neighbor generation strategy for conflicts: 2
[DEBUG] Using default neighbor generation strategy for conflicts: 2
[DEBUG] Using default neighbor generation strategy for conflicts: 2
	InitLNS(PP): runtime = 0.0152124, iterations = 4, colliding pairs = 0, initial colliding pairs = 11, solution cost = 4219, initial solution cost = 4211, failed iterations = 0
[DBG]  init_lns->sum_of_costs after init_lns->run: 4219
[DBG]  sum_of_costs after assignment from init_lns->run: 4219
[DBG]  Recomputing sum_of_cost by dividing neighbor.sum_of_costs and neighbor.old_sum_of_costs
[STAT] sum_of_costs after recomputation: 4219
[STAT] Iteration 157
[DBG]  Using SAT operator (destroy+repair SAT).
[DBG]  ====================
[DBG]  SAT destroy operator called.
[DBG]  SAT heuristic: 2
[DBG]  key_agent_id: 41
[DBG]  key_agent_id global path length: 13
[DBG]  Submap content (global positions):
[DBG]  871 872 873 874 875 
[DBG]  903 904 905 906 907 
[DBG]  935 936 937 938 939 
[DBG]  967 968 969 970 971 
[DBG]  999 1000 1001 1002 1003 
[DBG]  Map content with agents and obstacles:
[DBG]  . X . . A 
[DBG]  A . . . X 
[DBG]  . . A X . 
[DBG]  X . X . X 
[DBG]  . . A . . 
[DBG]  content of the map structure that we pass to the SAT solver:
[DBG]  1  -1  1  1  1  
[DBG]  1  1  1  1  -1  
[DBG]  1  1  1  -1  1  
[DBG]  -1  1  -1  1  -1  
[DBG]  1  1  1  1  1  
[DBG]  Identifying agents in a submap for rescheduling (when key_agent is there at the time 6):
[DBG]  Agent 37 found intervals in the sub-map:
[DBG]  
[DBG]  Agent 37 is not in sub-map at time 6 (intervals: 
[DBG]  )
[DBG]  Agent 41 found intervals in the sub-map:
[DBG]   [0..10]
[DBG]  Agent 41 (interval in submap: [0..10]) contains time 6, added to replan.
[DBG]  Agent 68 found intervals in the sub-map:
[DBG]   [0..6]
[DBG]  Agent 68 (interval in submap: [0..6]) contains time 6, added to replan.
[DBG]  Agent 105 found intervals in the sub-map:
[DBG]   [0..7]
[DBG]  Agent 105 (interval in submap: [0..7]) contains time 6, added to replan.
[DBG]  Agent 111 found intervals in the sub-map:
[DBG]   [4..8]
[DBG]  Agent 111 (interval in submap: [4..8]) contains time 6, added to replan.
[DBG]  Agent 41 | Start (global): 937 -> (local): (2, 2) at time 6 | Goal (global): 875 -> (local): (0, 4) at time 10
[DBG]  Agent 68 | Start (global): 875 -> (local): (0, 4) at time 6 | Goal (global): 875 -> (local): (0, 4) at time 6
[DBG]  Agent 105 | Start (global): 903 -> (local): (1, 0) at time 6 | Goal (global): 871 -> (local): (0, 0) at time 7
[DBG]  Agent 111 | Start (global): 1001 -> (local): (4, 2) at time 6 | Goal (global): 1003 -> (local): (4, 4) at time 8
[DBG]  [REPAIR] SAT destroy operator called.
[DBG]  [REPAIR] SAT operator â€“ launching subproblem FOR OPTIMIZATION.
[DBG]  Creating local paths (sx, sy) in the submap for T_sync = 6
[DBG]    Agent 41 (global paths from T=6 to 10) has local path: (2,2) (1,2) (1,3) (0,3) (0,4) 
[DBG]    Agent 68 (global paths from T=6 to 6) has local path: (0,4) 
[DBG]    Agent 105 (global paths from T=6 to 7) has local path: (1,0) (0,0) 
[DBG]    Agent 111 (global paths from T=6 to 8) has local path: (4,2) (4,3) (4,4) 
[DBG]  Checking input data for SAT solver:
[DBG]    - Number of agents to replan: 4
[DBG]  Agent 41 has the original local path length: 5 => Start (2,2), Goal (0,4)
[DBG]  Agent 68 has the original local path length: 1 => Start (0,4), Goal (0,4)
[DBG]  Agent 105 has the original local path length: 2 => Start (1,0), Goal (0,0)
[DBG]  Agent 111 has the original local path length: 3 => Start (4,2), Goal (4,4)
[DBG]  Start position: (2, 2), (0, 4), (1, 0), (4, 2), 
[DBG]  Goal position: (0, 4), (0, 4), (0, 0), (4, 4), 
[DBG]  SAT instance and solver created.
Currently solving
Instance name: scen
Map name: map
Encoding used: disappear_at_goal
SAT solver used: Kissat
Optimizing function: sum of costs
Number of agents: 4
Mks LB: 5
SoC LB: 11
Delta: 0
Remaining time: 300000 [ms]

Vertex conflict! Agents 1, 2, timestep 1, location 0
Swapping conflict! Agents 1, 2, timestep 1, edge (0,0)
Vertex conflict! Agents 1, 2, timestep 2, location 0
Swapping conflict! Agents 1, 2, timestep 2, edge (0,0)
Vertex conflict! Agents 1, 2, timestep 3, location 0
Swapping conflict! Agents 1, 2, timestep 3, edge (0,0)
Vertex conflict! Agents 1, 2, timestep 4, location 0
Vertex conflict! Agents 1, 3, timestep 3, location 0
Swapping conflict! Agents 1, 3, timestep 3, edge (0,0)
Vertex conflict! Agents 1, 3, timestep 4, location 0
Vertex conflict! Agents 2, 3, timestep 3, location 0
Swapping conflict! Agents 2, 3, timestep 3, edge (0,0)
Vertex conflict! Agents 2, 3, timestep 4, location 0
Found plan [agents = 4] [timesteps = 5]
Agent #0 : 10 6 7 2 3 
Agent #1 : 3 0 0 0 0 
Agent #2 : 4 0 0 0 0 
Agent #3 : 16 17 18 0 0 

[STAT] Solver returned: 0
[DBG]  Agent (index) 41 | New local path (submap idx):
[DBG]  10 6 7 2 3 
[DBG]  Agent (index) 68 | New local path (submap idx):
[DBG]  3 
[DBG]  Agent (index) 105 | New local path (submap idx):
[DBG]  4 0 
[DBG]  Agent (index) 111 | New local path (submap idx):
[DBG]  16 17 18 
[DBG]  Update the agent path 41 | Original local length: 5 | New local length: 5
[DBG]  agent 41 t=0 => decoded (sx,sy)=(2,2) => global_id=937
[DBG]  agent 41 t=1 => decoded (sx,sy)=(1,2) => global_id=905
[DBG]  agent 41 t=2 => decoded (sx,sy)=(1,3) => global_id=906
[DBG]  agent 41 t=3 => decoded (sx,sy)=(0,3) => global_id=874
[DBG]  agent 41 t=4 => decoded (sx,sy)=(0,4) => global_id=875
[DBG]  Complete path of agent 41:
[DBG]    Original: 970 1002 1001 1000 968 936 937 905 906 874 875 843 844 
[DBG]    New:     970 1002 1001 1000 968 936 937 905 906 874 875 843 844 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 970 1002 1001 1000 968 936 
[DBG]    Local path (in submap): 937 905 906 874 875 
[DBG]    Suffix (out of submap): 843 844 
[DBG]  Original agent path length 41 je: 13
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 0: 970, 1002, 1001, 1000, 968, 936, 937, 905, 906, 874, 875, 843, 844, 
[DBG]  Path for agent 41 updated, resulting length: 13
[DBG]  Update the agent path 68 | Original local length: 1 | New local length: 1
[DBG]  agent 68 t=0 => decoded (sx,sy)=(0,4) => global_id=875
[DBG]  Complete path of agent 68:
[DBG]    Original: 968 936 937 905 873 874 875 876 877 909 910 
[DBG]    New:     968 936 937 905 873 874 875 876 877 909 910 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 968 936 937 905 873 874 
[DBG]    Local path (in submap): 875 
[DBG]    Suffix (out of submap): 876 877 909 910 
[DBG]  Original agent path length 68 je: 11
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 1: 968, 936, 937, 905, 873, 874, 875, 876, 877, 909, 910, 
[DBG]  Path for agent 68 updated, resulting length: 11
[DBG]  Update the agent path 105 | Original local length: 2 | New local length: 2
[DBG]  agent 105 t=0 => decoded (sx,sy)=(1,0) => global_id=903
[DBG]  agent 105 t=1 => decoded (sx,sy)=(0,0) => global_id=871
[DBG]  Complete path of agent 105:
[DBG]    Original: 1002 1001 1000 968 936 904 903 871 870 838 837 805 773 741 709 677 645 613 581 582 582 550 551 519 487 455 423 391 390 358 357 325 324 323 291 259 260 228 196 164 132 
[DBG]    New:     1002 1001 1000 968 936 904 903 871 870 838 837 805 773 741 709 677 645 613 581 582 582 550 551 519 487 455 423 391 390 358 357 325 324 323 291 259 260 228 196 164 132 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 1002 1001 1000 968 936 904 
[DBG]    Local path (in submap): 903 871 
[DBG]    Suffix (out of submap): 870 838 837 805 773 741 709 677 645 613 581 582 582 550 551 519 487 455 423 391 390 358 357 325 324 323 291 259 260 228 196 164 132 
[DBG]  Original agent path length 105 je: 41
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 2: 1002, 1001, 1000, 968, 936, 904, 903, 871, 870, 838, 837, 805, 773, 741, 709, 677, 645, 613, 581, 582, 582, 550, 551, 519, 487, 455, 423, 391, 390, 358, 357, 325, 324, 323, 291, 259, 260, 228, 196, 164, 132, 
[DBG]  Path for agent 105 updated, resulting length: 41
[DBG]  Update the agent path 111 | Original local length: 3 | New local length: 3
[DBG]  agent 111 t=0 => decoded (sx,sy)=(4,2) => global_id=1001
[DBG]  agent 111 t=1 => decoded (sx,sy)=(4,3) => global_id=1002
[DBG]  agent 111 t=2 => decoded (sx,sy)=(4,4) => global_id=1003
[DBG]  Complete path of agent 111:
[DBG]    Original: 964 965 997 998 999 1000 1001 1002 1003 1004 1005 973 974 975 976 944 912 880 848 849 817 818 786 787 755 755 756 724 725 726 727 728 696 664 632 600 601 569 570 538 539 540 
[DBG]    New:     964 965 997 998 999 1000 1001 1002 1003 1004 1005 973 974 975 976 944 912 880 848 849 817 818 786 787 755 755 756 724 725 726 727 728 696 664 632 600 601 569 570 538 539 540 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 964 965 997 998 999 1000 
[DBG]    Local path (in submap): 1001 1002 1003 
[DBG]    Suffix (out of submap): 1004 1005 973 974 975 976 944 912 880 848 849 817 818 786 787 755 755 756 724 725 726 727 728 696 664 632 600 601 569 570 538 539 540 
[DBG]  Original agent path length 111 je: 42
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 3: 964, 965, 997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 973, 974, 975, 976, 944, 912, 880, 848, 849, 817, 818, 786, 787, 755, 755, 756, 724, 725, 726, 727, 728, 696, 664, 632, 600, 601, 569, 570, 538, 539, 540, 
[DBG]  Path for agent 111 updated, resulting length: 42
[DBG]  Paths successfully updated.
[DBG]  (LNS.cpp) New path for agent 41: 
[DBG]  970, 1002, 1001, 1000, 968, 936, 937, 905, 906, 874, 875, 843, 844, 
[DBG]  (LNS.cpp) New path for agent 68: 
[DBG]  968, 936, 937, 905, 873, 874, 875, 876, 877, 909, 910, 
[DBG]  (LNS.cpp) New path for agent 105: 
[DBG]  1002, 1001, 1000, 968, 936, 904, 903, 871, 870, 838, 837, 805, 773, 741, 709, 677, 645, 613, 581, 582, 582, 550, 551, 519, 487, 455, 423, 391, 390, 358, 357, 325, 324, 323, 291, 259, 260, 228, 196, 164, 132, 
[DBG]  (LNS.cpp) New path for agent 111: 
[DBG]  964, 965, 997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 973, 974, 975, 976, 944, 912, 880, 848, 849, 817, 818, 786, 787, 755, 755, 756, 724, 725, 726, 727, 728, 696, 664, 632, 600, 601, 569, 570, 538, 539, 540, 
[DBG]  component_weights = {0.382588, 0.084079, 0.0879255, 0.445407}
[DBG]  opSuccess value: 1
[STAT] neighbor.sum_of_costs before recomputation: 103
[STAT] neighbor.old_sum_of_costs before recomputation: 103
[STAT] sum_of_costs before recomputation: 4219
[DBG]  Validate solution immediately after SAT success.
[DBG]  No problems after SAT replan.
[DBG]  Recomputing sum_of_cost by dividing neighbor.sum_of_costs and neighbor.old_sum_of_costs
[STAT] sum_of_costs after recomputation: 4219
[STAT] Iteration 158
[DBG]  Using SAT operator (destroy+repair SAT).
[DBG]  ====================
[DBG]  SAT destroy operator called.
[DBG]  SAT heuristic: 2
[DBG]  key_agent_id: 48
[DBG]  key_agent_id global path length: 17
[DBG]  Submap content (global positions):
[DBG]  28 29 30 31 -1 
[DBG]  60 61 62 63 -1 
[DBG]  92 93 94 95 -1 
[DBG]  124 125 126 127 -1 
[DBG]  156 157 158 159 -1 
[DBG]  Map content with agents and obstacles:
[DBG]  . . . . X 
[DBG]  . . . . X 
[DBG]  X . A . X 
[DBG]  . X . . X 
[DBG]  . . . . X 
[DBG]  content of the map structure that we pass to the SAT solver:
[DBG]  1  1  1  1  1  
[DBG]  1  1  1  1  1  
[DBG]  -1  1  1  1  1  
[DBG]  1  -1  1  1  1  
[DBG]  1  1  1  1  1  
[DBG]  Identifying agents in a submap for rescheduling (when key_agent is there at the time 16):
[DBG]  Agent 48 found intervals in the sub-map:
[DBG]   [11..16]
[DBG]  Agent 48 (interval in submap: [11..16]) contains time 16, added to replan.
[DBG]  Agent 48 | Start (global): 94 -> (local): (2, 2) at time 16 | Goal (global): 94 -> (local): (2, 2) at time 16
[DBG]  [REPAIR] SAT destroy operator called.
[DBG]  [REPAIR] SAT operator â€“ launching subproblem FOR OPTIMIZATION.
[DBG]  Creating local paths (sx, sy) in the submap for T_sync = 16
[DBG]    Agent 48 (global paths from T=16 to 16) has local path: (2,2) 
[DBG]  Checking input data for SAT solver:
[DBG]    - Number of agents to replan: 1
[DBG]  Agent 48 has the original local path length: 1 => Start (2,2), Goal (2,2)
[DBG]  Start position: (2, 2), 
[DBG]  Goal position: (2, 2), 
[DBG]  SAT instance and solver created.
Currently solving
Instance name: scen
Map name: map
Encoding used: disappear_at_goal
SAT solver used: Kissat
Optimizing function: sum of costs
Number of agents: 1
Mks LB: 1
SoC LB: 1
Delta: 0
Remaining time: 300000 [ms]

Found plan [agents = 1] [timesteps = 1]
Agent #0 : 11 

[STAT] Solver returned: 0
[DBG]  Agent (index) 48 | New local path (submap idx):
[DBG]  11 
[DBG]  Update the agent path 48 | Original local length: 1 | New local length: 1
[DBG]  agent 48 t=0 => decoded (sx,sy)=(2,2) => global_id=94
[DBG]  Complete path of agent 48:
[DBG]    Original: 247 215 216 184 185 186 154 154 154 122 123 124 156 157 158 126 94 
[DBG]    New:     247 215 216 184 185 186 154 154 154 122 123 124 156 157 158 126 94 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 247 215 216 184 185 186 154 154 154 122 123 124 156 157 158 126 
[DBG]    Local path (in submap): 94 
[DBG]    Suffix (out of submap): 
[DBG]  Original agent path length 48 je: 17
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 0: 247, 215, 216, 184, 185, 186, 154, 154, 154, 122, 123, 124, 156, 157, 158, 126, 94, 
[DBG]  Path for agent 48 updated, resulting length: 17
[DBG]  Paths successfully updated.
[DBG]  (LNS.cpp) New path for agent 48: 
[DBG]  247, 215, 216, 184, 185, 186, 154, 154, 154, 122, 123, 124, 156, 157, 158, 126, 94, 
[DBG]  component_weights = {0.387372, 0.0834276, 0.0872443, 0.441956}
[DBG]  opSuccess value: 1
[STAT] neighbor.sum_of_costs before recomputation: 16
[STAT] neighbor.old_sum_of_costs before recomputation: 16
[STAT] sum_of_costs before recomputation: 4219
[DBG]  Validate solution immediately after SAT success.
[DBG]  No problems after SAT replan.
[DBG]  Recomputing sum_of_cost by dividing neighbor.sum_of_costs and neighbor.old_sum_of_costs
[STAT] sum_of_costs after recomputation: 4219
[STAT] Iteration 159
[DBG]  Using SAT operator (destroy+repair SAT).
[DBG]  ====================
[DBG]  SAT destroy operator called.
[DBG]  SAT heuristic: 2
[DBG]  key_agent_id: 57
[DBG]  key_agent_id global path length: 41
[DBG]  Submap content (global positions):
[DBG]  846 847 848 849 850 
[DBG]  878 879 880 881 882 
[DBG]  910 911 912 913 914 
[DBG]  942 943 944 945 946 
[DBG]  974 975 976 977 978 
[DBG]  Map content with agents and obstacles:
[DBG]  . . A . . 
[DBG]  A . . A . 
[DBG]  . X A A . 
[DBG]  . X A X . 
[DBG]  . . . . X 
[DBG]  content of the map structure that we pass to the SAT solver:
[DBG]  1  1  1  1  1  
[DBG]  1  1  1  1  1  
[DBG]  1  -1  1  1  1  
[DBG]  1  -1  1  -1  1  
[DBG]  1  1  1  1  -1  
[DBG]  Identifying agents in a submap for rescheduling (when key_agent is there at the time 37):
[DBG]  Agent 3 found intervals in the sub-map:
[DBG]   [34..39]
[DBG]  Agent 3 (interval in submap: [34..39]) contains time 37, added to replan.
[DBG]  Agent 45 found intervals in the sub-map:
[DBG]   [36..38]
[DBG]  Agent 45 (interval in submap: [36..38]) contains time 37, added to replan.
[DBG]  Agent 57 found intervals in the sub-map:
[DBG]   [32..40]
[DBG]  Agent 57 (interval in submap: [32..40]) contains time 37, added to replan.
[DBG]  Agent 59 found intervals in the sub-map:
[DBG]   [34..38]
[DBG]  Agent 59 (interval in submap: [34..38]) contains time 37, added to replan.
[DBG]  Agent 83 found intervals in the sub-map:
[DBG]   [33..39]
[DBG]  Agent 83 (interval in submap: [33..39]) contains time 37, added to replan.
[DBG]  Agent 100 found intervals in the sub-map:
[DBG]   [38..40]
[DBG]  Agent 100 is not in sub-map at time 37 (intervals: 
[DBG]  [38..40] )
[DBG]  Agent 106 found intervals in the sub-map:
[DBG]   [35..37]
[DBG]  Agent 106 (interval in submap: [35..37]) contains time 37, added to replan.
[DBG]  Agent 3 | Start (global): 913 -> (local): (2, 3) at time 37 | Goal (global): 912 -> (local): (2, 2) at time 39
[DBG]  Agent 45 | Start (global): 848 -> (local): (0, 2) at time 37 | Goal (global): 849 -> (local): (0, 3) at time 38
[DBG]  Agent 57 | Start (global): 912 -> (local): (2, 2) at time 37 | Goal (global): 977 -> (local): (4, 3) at time 40
[DBG]  Agent 59 | Start (global): 881 -> (local): (1, 3) at time 37 | Goal (global): 882 -> (local): (1, 4) at time 38
[DBG]  Agent 83 | Start (global): 944 -> (local): (3, 2) at time 37 | Goal (global): 977 -> (local): (4, 3) at time 39
[DBG]  Agent 106 | Start (global): 878 -> (local): (1, 0) at time 37 | Goal (global): 878 -> (local): (1, 0) at time 37
[DBG]  [REPAIR] SAT destroy operator called.
[DBG]  [REPAIR] SAT operator â€“ launching subproblem FOR OPTIMIZATION.
[DBG]  Creating local paths (sx, sy) in the submap for T_sync = 37
[DBG]    Agent 3 (global paths from T=37 to 39) has local path: (2,3) (2,3) (2,2) 
[DBG]    Agent 45 (global paths from T=37 to 38) has local path: (0,2) (0,3) 
[DBG]    Agent 57 (global paths from T=37 to 40) has local path: (2,2) (3,2) (4,2) (4,3) 
[DBG]    Agent 59 (global paths from T=37 to 38) has local path: (1,3) (1,4) 
[DBG]    Agent 83 (global paths from T=37 to 39) has local path: (3,2) (4,2) (4,3) 
[DBG]    Agent 106 (global paths from T=37 to 37) has local path: (1,0) 
[DBG]  Checking input data for SAT solver:
[DBG]    - Number of agents to replan: 6
[DBG]  Agent 3 has the original local path length: 3 => Start (2,3), Goal (2,2)
[DBG]  Agent 45 has the original local path length: 2 => Start (0,2), Goal (0,3)
[DBG]  Agent 57 has the original local path length: 4 => Start (2,2), Goal (4,3)
[DBG]  Agent 59 has the original local path length: 2 => Start (1,3), Goal (1,4)
[DBG]  Agent 83 has the original local path length: 3 => Start (3,2), Goal (4,3)
[DBG]  Agent 106 has the original local path length: 1 => Start (1,0), Goal (1,0)
[DBG]  Start position: (2, 3), (0, 2), (2, 2), (1, 3), (3, 2), (1, 0), 
[DBG]  Goal position: (2, 2), (0, 3), (4, 3), (1, 4), (4, 3), (1, 0), 
[DBG]  SAT instance and solver created.
Currently solving
Instance name: scen
Map name: map
Encoding used: disappear_at_goal
SAT solver used: Kissat
Optimizing function: sum of costs
Number of agents: 6
Mks LB: 4
SoC LB: 14
Delta: 0
Remaining time: 300000 [ms]

Vertex conflict! Agents 0, 1, timestep 2, location 0
Swapping conflict! Agents 0, 1, timestep 2, edge (0,0)
Vertex conflict! Agents 0, 1, timestep 3, location 0
Vertex conflict! Agents 0, 3, timestep 2, location 0
Swapping conflict! Agents 0, 3, timestep 2, edge (0,0)
Vertex conflict! Agents 0, 3, timestep 3, location 0
Vertex conflict! Agents 0, 4, timestep 3, location 0
Vertex conflict! Agents 0, 5, timestep 2, location 0
Swapping conflict! Agents 0, 5, timestep 2, edge (0,0)
Vertex conflict! Agents 0, 5, timestep 3, location 0
Vertex conflict! Agents 1, 3, timestep 2, location 0
Swapping conflict! Agents 1, 3, timestep 2, edge (0,0)
Vertex conflict! Agents 1, 3, timestep 3, location 0
Vertex conflict! Agents 1, 4, timestep 3, location 0
Vertex conflict! Agents 1, 5, timestep 2, location 0
Swapping conflict! Agents 1, 5, timestep 2, edge (0,0)
Vertex conflict! Agents 1, 5, timestep 3, location 0
Vertex conflict! Agents 3, 4, timestep 3, location 0
Vertex conflict! Agents 3, 5, timestep 2, location 0
Swapping conflict! Agents 3, 5, timestep 2, edge (0,0)
Vertex conflict! Agents 3, 5, timestep 3, location 0
Vertex conflict! Agents 4, 5, timestep 3, location 0
Found plan [agents = 6] [timesteps = 4]
Agent #0 : 12 11 0 0 
Agent #1 : 2 3 0 0 
Agent #2 : 11 15 19 20 
Agent #3 : 8 9 0 0 
Agent #4 : 15 19 20 0 
Agent #5 : 5 0 0 0 

[STAT] Solver returned: 0
[DBG]  Agent (index) 3 | New local path (submap idx):
[DBG]  12 11 
[DBG]  Agent (index) 45 | New local path (submap idx):
[DBG]  2 3 
[DBG]  Agent (index) 57 | New local path (submap idx):
[DBG]  11 15 19 20 
[DBG]  Agent (index) 59 | New local path (submap idx):
[DBG]  8 9 
[DBG]  Agent (index) 83 | New local path (submap idx):
[DBG]  15 19 20 
[DBG]  Agent (index) 106 | New local path (submap idx):
[DBG]  5 
[DBG]  Update the agent path 3 | Original local length: 3 | New local length: 2
[DBG]  agent 3 t=0 => decoded (sx,sy)=(2,3) => global_id=913
[DBG]  agent 3 t=1 => decoded (sx,sy)=(2,2) => global_id=912
[DBG]  Complete path of agent 3:
[DBG]    Original: 468 468 468 468 468 468 468 468 468 468 468 468 468 469 501 533 533 533 565 597 629 661 660 692 692 692 692 692 724 756 755 787 819 818 850 882 881 913 913 912 
[DBG]    New:     468 468 468 468 468 468 468 468 468 468 468 468 468 469 501 533 533 533 565 597 629 661 660 692 692 692 692 692 724 756 755 787 819 818 850 882 881 913 912 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 468 468 468 468 468 468 468 468 468 468 468 468 468 469 501 533 533 533 565 597 629 661 660 692 692 692 692 692 724 756 755 787 819 818 850 882 881 
[DBG]    Local path (in submap): 913 912 
[DBG]    Suffix (out of submap): 
[DBG]  Original agent path length 3 je: 40
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 0: 468, 468, 468, 468, 468, 468, 468, 468, 468, 468, 468, 468, 468, 469, 501, 533, 533, 533, 565, 597, 629, 661, 660, 692, 692, 692, 692, 692, 724, 756, 755, 787, 819, 818, 850, 882, 881, 913, 912, 
[DBG]  Path for agent 3 updated, resulting length: 39
[DBG]  Update the agent path 45 | Original local length: 2 | New local length: 2
[DBG]  agent 45 t=0 => decoded (sx,sy)=(0,2) => global_id=848
[DBG]  agent 45 t=1 => decoded (sx,sy)=(0,3) => global_id=849
[DBG]  Complete path of agent 45:
[DBG]    Original: 153 185 217 249 248 247 279 278 277 309 341 340 339 338 337 336 368 367 366 398 430 462 494 526 558 558 590 591 623 655 687 719 751 751 783 815 847 848 849 
[DBG]    New:     153 185 217 249 248 247 279 278 277 309 341 340 339 338 337 336 368 367 366 398 430 462 494 526 558 558 590 591 623 655 687 719 751 751 783 815 847 848 849 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 153 185 217 249 248 247 279 278 277 309 341 340 339 338 337 336 368 367 366 398 430 462 494 526 558 558 590 591 623 655 687 719 751 751 783 815 847 
[DBG]    Local path (in submap): 848 849 
[DBG]    Suffix (out of submap): 
[DBG]  Original agent path length 45 je: 39
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 1: 153, 185, 217, 249, 248, 247, 279, 278, 277, 309, 341, 340, 339, 338, 337, 336, 368, 367, 366, 398, 430, 462, 494, 526, 558, 558, 590, 591, 623, 655, 687, 719, 751, 751, 783, 815, 847, 848, 849, 
[DBG]  Path for agent 45 updated, resulting length: 39
[DBG]  Update the agent path 57 | Original local length: 4 | New local length: 4
[DBG]  agent 57 t=0 => decoded (sx,sy)=(2,2) => global_id=912
[DBG]  agent 57 t=1 => decoded (sx,sy)=(3,2) => global_id=944
[DBG]  agent 57 t=2 => decoded (sx,sy)=(4,2) => global_id=976
[DBG]  agent 57 t=3 => decoded (sx,sy)=(4,3) => global_id=977
[DBG]  Complete path of agent 57:
[DBG]    Original: 185 184 183 215 247 279 278 277 276 308 340 339 371 371 403 435 467 466 498 530 529 561 593 625 657 689 688 720 752 784 783 815 847 879 880 912 913 912 944 976 977 
[DBG]    New:     185 184 183 215 247 279 278 277 276 308 340 339 371 371 403 435 467 466 498 530 529 561 593 625 657 689 688 720 752 784 783 815 847 879 880 912 913 912 944 976 977 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 185 184 183 215 247 279 278 277 276 308 340 339 371 371 403 435 467 466 498 530 529 561 593 625 657 689 688 720 752 784 783 815 847 879 880 912 913 
[DBG]    Local path (in submap): 912 944 976 977 
[DBG]    Suffix (out of submap): 
[DBG]  Original agent path length 57 je: 41
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 2: 185, 184, 183, 215, 247, 279, 278, 277, 276, 308, 340, 339, 371, 371, 403, 435, 467, 466, 498, 530, 529, 561, 593, 625, 657, 689, 688, 720, 752, 784, 783, 815, 847, 879, 880, 912, 913, 912, 944, 976, 977, 
[DBG]  Path for agent 57 updated, resulting length: 41
[DBG]  Update the agent path 59 | Original local length: 2 | New local length: 2
[DBG]  agent 59 t=0 => decoded (sx,sy)=(1,3) => global_id=881
[DBG]  agent 59 t=1 => decoded (sx,sy)=(1,4) => global_id=882
[DBG]  Complete path of agent 59:
[DBG]    Original: 256 257 258 259 260 261 293 325 326 358 359 360 361 362 363 395 427 428 460 492 524 556 588 589 590 591 623 655 687 719 719 751 783 815 847 848 880 881 882 883 884 885 917 
[DBG]    New:     256 257 258 259 260 261 293 325 326 358 359 360 361 362 363 395 427 428 460 492 524 556 588 589 590 591 623 655 687 719 719 751 783 815 847 848 880 881 882 883 884 885 917 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 256 257 258 259 260 261 293 325 326 358 359 360 361 362 363 395 427 428 460 492 524 556 588 589 590 591 623 655 687 719 719 751 783 815 847 848 880 
[DBG]    Local path (in submap): 881 882 
[DBG]    Suffix (out of submap): 883 884 885 917 
[DBG]  Original agent path length 59 je: 43
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 3: 256, 257, 258, 259, 260, 261, 293, 325, 326, 358, 359, 360, 361, 362, 363, 395, 427, 428, 460, 492, 524, 556, 588, 589, 590, 591, 623, 655, 687, 719, 719, 751, 783, 815, 847, 848, 880, 881, 882, 883, 884, 885, 917, 
[DBG]  Path for agent 59 updated, resulting length: 43
[DBG]  Update the agent path 83 | Original local length: 3 | New local length: 3
[DBG]  agent 83 t=0 => decoded (sx,sy)=(3,2) => global_id=944
[DBG]  agent 83 t=1 => decoded (sx,sy)=(4,2) => global_id=976
[DBG]  agent 83 t=2 => decoded (sx,sy)=(4,3) => global_id=977
[DBG]  Complete path of agent 83:
[DBG]    Original: 18 50 49 81 113 112 144 176 208 207 239 271 303 335 367 366 398 430 462 494 526 558 590 622 623 655 687 719 751 752 784 783 815 847 879 880 912 944 976 977 1009 
[DBG]    New:     18 50 49 81 113 112 144 176 208 207 239 271 303 335 367 366 398 430 462 494 526 558 590 622 623 655 687 719 751 752 784 783 815 847 879 880 912 944 976 977 1009 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 18 50 49 81 113 112 144 176 208 207 239 271 303 335 367 366 398 430 462 494 526 558 590 622 623 655 687 719 751 752 784 783 815 847 879 880 912 
[DBG]    Local path (in submap): 944 976 977 
[DBG]    Suffix (out of submap): 1009 
[DBG]  Original agent path length 83 je: 41
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 4: 18, 50, 49, 81, 113, 112, 144, 176, 208, 207, 239, 271, 303, 335, 367, 366, 398, 430, 462, 494, 526, 558, 590, 622, 623, 655, 687, 719, 751, 752, 784, 783, 815, 847, 879, 880, 912, 944, 976, 977, 1009, 
[DBG]  Path for agent 83 updated, resulting length: 41
[DBG]  Update the agent path 106 | Original local length: 1 | New local length: 1
[DBG]  agent 106 t=0 => decoded (sx,sy)=(1,0) => global_id=878
[DBG]  Complete path of agent 106:
[DBG]    Original: 244 276 308 308 340 339 371 403 402 401 433 465 466 498 530 529 561 593 625 657 689 721 753 753 753 753 753 753 753 753 752 784 784 783 815 847 846 878 877 876 875 874 873 841 809 777 778 779 747 715 
[DBG]    New:     244 276 308 308 340 339 371 403 402 401 433 465 466 498 530 529 561 593 625 657 689 721 753 753 753 753 753 753 753 753 752 784 784 783 815 847 846 878 877 876 875 874 873 841 809 777 778 779 747 715 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 244 276 308 308 340 339 371 403 402 401 433 465 466 498 530 529 561 593 625 657 689 721 753 753 753 753 753 753 753 753 752 784 784 783 815 847 846 
[DBG]    Local path (in submap): 878 
[DBG]    Suffix (out of submap): 877 876 875 874 873 841 809 777 778 779 747 715 
[DBG]  Original agent path length 106 je: 50
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 5: 244, 276, 308, 308, 340, 339, 371, 403, 402, 401, 433, 465, 466, 498, 530, 529, 561, 593, 625, 657, 689, 721, 753, 753, 753, 753, 753, 753, 753, 753, 752, 784, 784, 783, 815, 847, 846, 878, 877, 876, 875, 874, 873, 841, 809, 777, 778, 779, 747, 715, 
[DBG]  Path for agent 106 updated, resulting length: 50
[DBG]  Paths successfully updated.
[DBG]  (LNS.cpp) New path for agent 3: 
[DBG]  468, 468, 468, 468, 468, 468, 468, 468, 468, 468, 468, 468, 468, 469, 501, 533, 533, 533, 565, 597, 629, 661, 660, 692, 692, 692, 692, 692, 724, 756, 755, 787, 819, 818, 850, 882, 881, 913, 912, 
[DBG]  (LNS.cpp) New path for agent 45: 
[DBG]  153, 185, 217, 249, 248, 247, 279, 278, 277, 309, 341, 340, 339, 338, 337, 336, 368, 367, 366, 398, 430, 462, 494, 526, 558, 558, 590, 591, 623, 655, 687, 719, 751, 751, 783, 815, 847, 848, 849, 
[DBG]  (LNS.cpp) New path for agent 57: 
[DBG]  185, 184, 183, 215, 247, 279, 278, 277, 276, 308, 340, 339, 371, 371, 403, 435, 467, 466, 498, 530, 529, 561, 593, 625, 657, 689, 688, 720, 752, 784, 783, 815, 847, 879, 880, 912, 913, 912, 944, 976, 977, 
[DBG]  (LNS.cpp) New path for agent 59: 
[DBG]  256, 257, 258, 259, 260, 261, 293, 325, 326, 358, 359, 360, 361, 362, 363, 395, 427, 428, 460, 492, 524, 556, 588, 589, 590, 591, 623, 655, 687, 719, 719, 751, 783, 815, 847, 848, 880, 881, 882, 883, 884, 885, 917, 
[DBG]  (LNS.cpp) New path for agent 83: 
[DBG]  18, 50, 49, 81, 113, 112, 144, 176, 208, 207, 239, 271, 303, 335, 367, 366, 398, 430, 462, 494, 526, 558, 590, 622, 623, 655, 687, 719, 751, 752, 784, 783, 815, 847, 879, 880, 912, 944, 976, 977, 1009, 
[DBG]  (LNS.cpp) New path for agent 106: 
[DBG]  244, 276, 308, 308, 340, 339, 371, 403, 402, 401, 433, 465, 466, 498, 530, 529, 561, 593, 625, 657, 689, 721, 753, 753, 753, 753, 753, 753, 753, 753, 752, 784, 784, 783, 815, 847, 846, 878, 877, 876, 875, 874, 873, 841, 809, 777, 778, 779, 747, 715, 
[DBG]  component_weights = {0.383902, 0.0826803, 0.0864629, 0.446955}
[DBG]  opSuccess value: 1
[STAT] neighbor.sum_of_costs before recomputation: 247
[STAT] neighbor.old_sum_of_costs before recomputation: 248
[STAT] sum_of_costs before recomputation: 4219
[DBG]  Validate solution immediately after SAT success.
[DBG]  No problems after SAT replan.
[DBG]  Recomputing sum_of_cost by dividing neighbor.sum_of_costs and neighbor.old_sum_of_costs
[STAT] sum_of_costs after recomputation: 4218
[STAT] Iteration 160
[DBG]  Using SAT operator (destroy+repair SAT).
[DBG]  ====================
[DBG]  SAT destroy operator called.
[DBG]  SAT heuristic: 2
[DBG]  key_agent_id: 28
[DBG]  key_agent_id global path length: 40
[DBG]  Submap content (global positions):
[DBG]  561 562 563 564 565 
[DBG]  593 594 595 596 597 
[DBG]  625 626 627 628 629 
[DBG]  657 658 659 660 661 
[DBG]  689 690 691 692 693 
[DBG]  Map content with agents and obstacles:
[DBG]  . X . X . 
[DBG]  A . X . A 
[DBG]  . X A A A 
[DBG]  A A A A . 
[DBG]  . X . . X 
[DBG]  content of the map structure that we pass to the SAT solver:
[DBG]  1  -1  1  -1  1  
[DBG]  1  1  -1  1  1  
[DBG]  1  -1  1  1  1  
[DBG]  1  1  1  1  1  
[DBG]  1  -1  1  1  -1  
[DBG]  Identifying agents in a submap for rescheduling (when key_agent is there at the time 22):
[DBG]  Agent 0 found intervals in the sub-map:
[DBG]  
[DBG]  Agent 0 is not in sub-map at time 22 (intervals: 
[DBG]  )
[DBG]  Agent 3 found intervals in the sub-map:
[DBG]   [18..27]
[DBG]  Agent 3 (interval in submap: [18..27]) contains time 22, added to replan.
[DBG]  Agent 28 found intervals in the sub-map:
[DBG]   [0..35]
[DBG]  Agent 28 (interval in submap: [0..35]) contains time 22, added to replan.
[DBG]  Agent 30 found intervals in the sub-map:
[DBG]   [19..25]
[DBG]  Agent 30 (interval in submap: [19..25]) contains time 22, added to replan.
[DBG]  Agent 49 found intervals in the sub-map:
[DBG]   [17..24]
[DBG]  Agent 49 (interval in submap: [17..24]) contains time 22, added to replan.
[DBG]  Agent 53 found intervals in the sub-map:
[DBG]   [19..28]
[DBG]  Agent 53 (interval in submap: [19..28]) contains time 22, added to replan.
[DBG]  Agent 56 found intervals in the sub-map:
[DBG]   [16..27]
[DBG]  Agent 56 (interval in submap: [16..27]) contains time 22, added to replan.
[DBG]  Agent 57 found intervals in the sub-map:
[DBG]   [21..25]
[DBG]  Agent 57 (interval in submap: [21..25]) contains time 22, added to replan.
[DBG]  Agent 62 found intervals in the sub-map:
[DBG]   [3..16]
[DBG]  Agent 62 is not in sub-map at time 22 (intervals: 
[DBG]  [3..16] )
[DBG]  Agent 79 found intervals in the sub-map:
[DBG]   [15..23]
[DBG]  Agent 79 (interval in submap: [15..23]) contains time 22, added to replan.
[DBG]  Agent 81 found intervals in the sub-map:
[DBG]   [23..23]
[DBG]  Agent 81 is not in sub-map at time 22 (intervals: 
[DBG]  [23..23] )
[DBG]  Agent 140 found intervals in the sub-map:
[DBG]   [26..27]
[DBG]  Agent 140 is not in sub-map at time 22 (intervals: 
[DBG]  [26..27] )
[DBG]  Agent 148 found intervals in the sub-map:
[DBG]   [21..24]
[DBG]  Agent 148 (interval in submap: [21..24]) contains time 22, added to replan.
[DBG]  Agent 3 | Start (global): 660 -> (local): (3, 3) at time 22 | Goal (global): 692 -> (local): (4, 3) at time 27
[DBG]  Agent 28 | Start (global): 627 -> (local): (2, 2) at time 22 | Goal (global): 692 -> (local): (4, 3) at time 35
[DBG]  Agent 30 | Start (global): 628 -> (local): (2, 3) at time 22 | Goal (global): 565 -> (local): (0, 4) at time 25
[DBG]  Agent 49 | Start (global): 629 -> (local): (2, 4) at time 22 | Goal (global): 565 -> (local): (0, 4) at time 24
[DBG]  Agent 53 | Start (global): 657 -> (local): (3, 0) at time 22 | Goal (global): 692 -> (local): (4, 3) at time 28
[DBG]  Agent 56 | Start (global): 659 -> (local): (3, 2) at time 22 | Goal (global): 565 -> (local): (0, 4) at time 27
[DBG]  Agent 57 | Start (global): 593 -> (local): (1, 0) at time 22 | Goal (global): 689 -> (local): (4, 0) at time 25
[DBG]  Agent 79 | Start (global): 597 -> (local): (1, 4) at time 22 | Goal (global): 565 -> (local): (0, 4) at time 23
[DBG]  Agent 148 | Start (global): 658 -> (local): (3, 1) at time 22 | Goal (global): 660 -> (local): (3, 3) at time 24
[DBG]  [REPAIR] SAT destroy operator called.
[DBG]  [REPAIR] SAT operator â€“ launching subproblem FOR OPTIMIZATION.
[DBG]  Creating local paths (sx, sy) in the submap for T_sync = 22
[DBG]    Agent 3 (global paths from T=22 to 27) has local path: (3,3) (4,3) (4,3) (4,3) (4,3) (4,3) 
[DBG]    Agent 28 (global paths from T=22 to 35) has local path: (2,2) (2,3) (1,3) (1,3) (1,3) (1,3) (1,3) (1,3) (1,3) (2,3) (2,2) (3,2) (4,2) (4,3) 
[DBG]    Agent 30 (global paths from T=22 to 25) has local path: (2,3) (2,4) (1,4) (0,4) 
[DBG]    Agent 49 (global paths from T=22 to 24) has local path: (2,4) (1,4) (0,4) 
[DBG]    Agent 53 (global paths from T=22 to 28) has local path: (3,0) (3,1) (3,2) (4,2) (4,2) (4,2) (4,3) 
[DBG]    Agent 56 (global paths from T=22 to 27) has local path: (3,2) (3,3) (2,3) (2,4) (1,4) (0,4) 
[DBG]    Agent 57 (global paths from T=22 to 25) has local path: (1,0) (2,0) (3,0) (4,0) 
[DBG]    Agent 79 (global paths from T=22 to 23) has local path: (1,4) (0,4) 
[DBG]    Agent 148 (global paths from T=22 to 24) has local path: (3,1) (3,2) (3,3) 
[DBG]  Checking input data for SAT solver:
[DBG]    - Number of agents to replan: 9
[DBG]  Agent 3 has the original local path length: 6 => Start (3,3), Goal (4,3)
[DBG]  Agent 28 has the original local path length: 14 => Start (2,2), Goal (4,3)
[DBG]  Agent 30 has the original local path length: 4 => Start (2,3), Goal (0,4)
[DBG]  Agent 49 has the original local path length: 3 => Start (2,4), Goal (0,4)
[DBG]  Agent 53 has the original local path length: 7 => Start (3,0), Goal (4,3)
[DBG]  Agent 56 has the original local path length: 6 => Start (3,2), Goal (0,4)
[DBG]  Agent 57 has the original local path length: 4 => Start (1,0), Goal (4,0)
[DBG]  Agent 79 has the original local path length: 2 => Start (1,4), Goal (0,4)
[DBG]  Agent 148 has the original local path length: 3 => Start (3,1), Goal (3,3)
[DBG]  Start position: (3, 3), (2, 2), (2, 3), (2, 4), (3, 0), (3, 2), (1, 0), (1, 4), (3, 1), 
[DBG]  Goal position: (4, 3), (4, 3), (0, 4), (0, 4), (4, 3), (0, 4), (4, 0), (0, 4), (3, 3), 
[DBG]  SAT instance and solver created.
Currently solving
Instance name: scen
Map name: map
Encoding used: disappear_at_goal
SAT solver used: Kissat
Optimizing function: sum of costs
Number of agents: 9
Mks LB: 6
SoC LB: 33
Delta: 0
Remaining time: 300000 [ms]

[STAT] Solver returned: -1
[DBG]  SAT solver failed.
[STAT] SAT solver failed to find a valid solution.
[DBG]  ====================
[DBG]  SAT destroy operator called.
[DBG]  SAT heuristic: 2
[DBG]  key_agent_id: 28
[DBG]  key_agent_id global path length: 40
[DBG]  Submap content (global positions):
[DBG]  594 595 596 597 598 
[DBG]  626 627 628 629 630 
[DBG]  658 659 660 661 662 
[DBG]  690 691 692 693 694 
[DBG]  722 723 724 725 726 
[DBG]  Map content with agents and obstacles:
[DBG]  . X A A X 
[DBG]  X A . . X 
[DBG]  . . A . X 
[DBG]  X . . X X 
[DBG]  . X . . . 
[DBG]  content of the map structure that we pass to the SAT solver:
[DBG]  1  -1  1  1  -1  
[DBG]  -1  1  1  1  -1  
[DBG]  1  1  1  1  -1  
[DBG]  -1  1  1  -1  -1  
[DBG]  1  -1  1  1  1  
[DBG]  Identifying agents in a submap for rescheduling (when key_agent is there at the time 15):
[DBG]  Agent 3 found intervals in the sub-map:
[DBG]   [19..28]
[DBG]  Agent 3 is not in sub-map at time 15 (intervals: 
[DBG]  [19..28] )
[DBG]  Agent 28 found intervals in the sub-map:
[DBG]   [0..38]
[DBG]  Agent 28 (interval in submap: [0..38]) contains time 15, added to replan.
[DBG]  Agent 58 found intervals in the sub-map:
[DBG]  
[DBG]  Agent 58 is not in sub-map at time 15 (intervals: 
[DBG]  )
[DBG]  Agent 62 found intervals in the sub-map:
[DBG]   [10..15]
[DBG]  Agent 62 (interval in submap: [10..15]) contains time 15, added to replan.
[DBG]  Agent 74 found intervals in the sub-map:
[DBG]   [13..20]
[DBG]  Agent 74 (interval in submap: [13..20]) contains time 15, added to replan.
[DBG]  Agent 84 found intervals in the sub-map:
[DBG]   [11..16]
[DBG]  Agent 84 (interval in submap: [11..16]) contains time 15, added to replan.
[DBG]  Agent 28 | Start (global): 660 -> (local): (2, 2) at time 15 | Goal (global): 726 -> (local): (4, 4) at time 38
[DBG]  Agent 62 | Start (global): 597 -> (local): (0, 3) at time 15 | Goal (global): 597 -> (local): (0, 3) at time 15
[DBG]  Agent 74 | Start (global): 627 -> (local): (1, 1) at time 15 | Goal (global): 597 -> (local): (0, 3) at time 20
[DBG]  Agent 84 | Start (global): 596 -> (local): (0, 2) at time 15 | Goal (global): 597 -> (local): (0, 3) at time 16
[DBG]  [REPAIR] SAT destroy operator called.
[DBG]  [REPAIR] SAT operator â€“ launching subproblem FOR OPTIMIZATION.
[DBG]  Creating local paths (sx, sy) in the submap for T_sync = 15
[DBG]    Agent 28 (global paths from T=15 to 38) has local path: (2,2) (2,2) (2,2) (2,2) (2,2) (2,1) (1,1) (1,1) (1,2) (0,2) (0,2) (0,2) (0,2) (0,2) (0,2) (0,2) (1,2) (1,1) (2,1) (3,1) (3,2) (4,2) (4,3) (4,4) 
[DBG]    Agent 62 (global paths from T=15 to 15) has local path: (0,3) 
[DBG]    Agent 74 (global paths from T=15 to 20) has local path: (1,1) (1,2) (0,2) (0,2) (0,2) (0,3) 
[DBG]    Agent 84 (global paths from T=15 to 16) has local path: (0,2) (0,3) 
[DBG]  Checking input data for SAT solver:
[DBG]    - Number of agents to replan: 4
[DBG]  Agent 28 has the original local path length: 24 => Start (2,2), Goal (4,4)
[DBG]  Agent 62 has the original local path length: 1 => Start (0,3), Goal (0,3)
[DBG]  Agent 74 has the original local path length: 6 => Start (1,1), Goal (0,3)
[DBG]  Agent 84 has the original local path length: 2 => Start (0,2), Goal (0,3)
[DBG]  Start position: (2, 2), (0, 3), (1, 1), (0, 2), 
[DBG]  Goal position: (4, 4), (0, 3), (0, 3), (0, 3), 
[DBG]  SAT instance and solver created.
Currently solving
Instance name: scen
Map name: map
Encoding used: disappear_at_goal
SAT solver used: Kissat
Optimizing function: sum of costs
Number of agents: 4
Mks LB: 5
SoC LB: 12
Delta: 0
Remaining time: 300000 [ms]

Vertex conflict! Agents 1, 2, timestep 4, location 0
Vertex conflict! Agents 1, 3, timestep 2, location 0
Swapping conflict! Agents 1, 3, timestep 2, edge (0,0)
Vertex conflict! Agents 1, 3, timestep 3, location 0
Swapping conflict! Agents 1, 3, timestep 3, edge (0,0)
Vertex conflict! Agents 1, 3, timestep 4, location 0
Vertex conflict! Agents 2, 3, timestep 4, location 0
Found plan [agents = 4] [timesteps = 5]
Agent #0 : 8 11 13 14 15 
Agent #1 : 2 0 0 0 0 
Agent #2 : 3 4 5 2 0 
Agent #3 : 1 2 0 0 0 

[STAT] Solver returned: 0
[DBG]  Agent (index) 28 | New local path (submap idx):
[DBG]  8 11 13 14 15 
[DBG]  Agent (index) 62 | New local path (submap idx):
[DBG]  2 
[DBG]  Agent (index) 74 | New local path (submap idx):
[DBG]  3 4 5 2 
[DBG]  Agent (index) 84 | New local path (submap idx):
[DBG]  1 2 
[DBG]  Update the agent path 28 | Original local length: 24 | New local length: 5
[DBG]  agent 28 t=0 => decoded (sx,sy)=(2,2) => global_id=660
[DBG]  agent 28 t=1 => decoded (sx,sy)=(3,2) => global_id=692
[DBG]  agent 28 t=2 => decoded (sx,sy)=(4,2) => global_id=724
[DBG]  agent 28 t=3 => decoded (sx,sy)=(4,3) => global_id=725
[DBG]  agent 28 t=4 => decoded (sx,sy)=(4,4) => global_id=726
[DBG]  Complete path of agent 28:
[DBG]    Original: 661 661 660 660 660 660 659 659 660 661 661 661 660 660 660 660 660 660 660 660 659 627 627 628 596 596 596 596 596 596 596 628 627 659 691 692 724 725 726 727 
[DBG]    New:     661 661 660 660 660 660 659 659 660 661 661 661 660 660 660 660 692 724 725 726 727 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 661 661 660 660 660 660 659 659 660 661 661 661 660 660 660 
[DBG]    Local path (in submap): 660 692 724 725 726 727 
[DBG]    Suffix (out of submap): 
[DBG]  Original agent path length 28 je: 40
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 0: 661, 661, 660, 660, 660, 660, 659, 659, 660, 661, 661, 661, 660, 660, 660, 660, 692, 724, 725, 726, 727, 
[DBG]  Path for agent 28 updated, resulting length: 21
[DBG]  Update the agent path 62 | Original local length: 1 | New local length: 1
[DBG]  agent 62 t=0 => decoded (sx,sy)=(0,3) => global_id=597
[DBG]  Complete path of agent 62:
[DBG]    Original: 753 721 721 689 689 689 689 689 689 657 658 659 627 628 596 597 565 566 534 533 533 533 533 533 534 502 470 470 470 438 438 406 
[DBG]    New:     753 721 721 689 689 689 689 689 689 657 658 659 627 628 596 597 565 566 534 533 533 533 533 533 534 502 470 470 470 438 438 406 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 753 721 721 689 689 689 689 689 689 657 658 659 627 628 596 
[DBG]    Local path (in submap): 597 
[DBG]    Suffix (out of submap): 565 566 534 533 533 533 533 533 534 502 470 470 470 438 438 406 
[DBG]  Original agent path length 62 je: 32
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 1: 753, 721, 721, 689, 689, 689, 689, 689, 689, 657, 658, 659, 627, 628, 596, 597, 565, 566, 534, 533, 533, 533, 533, 533, 534, 502, 470, 470, 470, 438, 438, 406, 
[DBG]  Path for agent 62 updated, resulting length: 32
[DBG]  Update the agent path 74 | Original local length: 6 | New local length: 4
[DBG]  agent 74 t=0 => decoded (sx,sy)=(1,1) => global_id=627
[DBG]  agent 74 t=1 => decoded (sx,sy)=(1,2) => global_id=628
[DBG]  agent 74 t=2 => decoded (sx,sy)=(1,3) => global_id=629
[DBG]  agent 74 t=3 => decoded (sx,sy)=(0,3) => global_id=597
[DBG]  Complete path of agent 74:
[DBG]    Original: 752 720 720 720 720 720 720 720 720 720 688 656 657 658 659 627 628 596 596 596 597 565 566 534 502 503 504 505 505 504 
[DBG]    New:     752 720 720 720 720 720 720 720 720 720 688 656 657 658 659 627 628 629 597 565 566 534 502 503 504 505 505 504 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 752 720 720 720 720 720 720 720 720 720 688 656 657 658 659 
[DBG]    Local path (in submap): 627 628 629 597 565 566 
[DBG]    Suffix (out of submap): 534 502 503 504 505 505 504 
[DBG]  Original agent path length 74 je: 30
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 2: 752, 720, 720, 720, 720, 720, 720, 720, 720, 720, 688, 656, 657, 658, 659, 627, 628, 629, 597, 565, 566, 534, 502, 503, 504, 505, 505, 504, 
[DBG]  Path for agent 74 updated, resulting length: 28
[DBG]  Update the agent path 84 | Original local length: 2 | New local length: 2
[DBG]  agent 84 t=0 => decoded (sx,sy)=(0,2) => global_id=596
[DBG]  agent 84 t=1 => decoded (sx,sy)=(0,3) => global_id=597
[DBG]  Complete path of agent 84:
[DBG]    Original: 878 846 847 815 783 751 719 687 688 656 657 658 659 627 628 596 597 565 566 534 502 503 504 505 473 441 409 377 345 313 281 249 217 218 186 154 122 90 58 26 25 
[DBG]    New:     878 846 847 815 783 751 719 687 688 656 657 658 659 627 628 596 597 565 566 534 502 503 504 505 473 441 409 377 345 313 281 249 217 218 186 154 122 90 58 26 25 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 878 846 847 815 783 751 719 687 688 656 657 658 659 627 628 
[DBG]    Local path (in submap): 596 597 
[DBG]    Suffix (out of submap): 565 566 534 502 503 504 505 473 441 409 377 345 313 281 249 217 218 186 154 122 90 58 26 25 
[DBG]  Original agent path length 84 je: 41
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 3: 878, 846, 847, 815, 783, 751, 719, 687, 688, 656, 657, 658, 659, 627, 628, 596, 597, 565, 566, 534, 502, 503, 504, 505, 473, 441, 409, 377, 345, 313, 281, 249, 217, 218, 186, 154, 122, 90, 58, 26, 25, 
[DBG]  Path for agent 84 updated, resulting length: 41
[DBG]  Paths successfully updated.
[DBG]  (LNS.cpp) New path for agent 28: 
[DBG]  661, 661, 660, 660, 660, 660, 659, 659, 660, 661, 661, 661, 660, 660, 660, 660, 692, 724, 725, 726, 727, 
[DBG]  (LNS.cpp) New path for agent 62: 
[DBG]  753, 721, 721, 689, 689, 689, 689, 689, 689, 657, 658, 659, 627, 628, 596, 597, 565, 566, 534, 533, 533, 533, 533, 533, 534, 502, 470, 470, 470, 438, 438, 406, 
[DBG]  (LNS.cpp) New path for agent 74: 
[DBG]  752, 720, 720, 720, 720, 720, 720, 720, 720, 720, 688, 656, 657, 658, 659, 627, 628, 629, 597, 565, 566, 534, 502, 503, 504, 505, 505, 504, 
[DBG]  (LNS.cpp) New path for agent 84: 
[DBG]  878, 846, 847, 815, 783, 751, 719, 687, 688, 656, 657, 658, 659, 627, 628, 596, 597, 565, 566, 534, 502, 503, 504, 505, 473, 441, 409, 377, 345, 313, 281, 249, 217, 218, 186, 154, 122, 90, 58, 26, 25, 
[DBG]  component_weights = {0.380172, 0.0818771, 0.0856229, 0.452328}
[DBG]  opSuccess value: 1
[STAT] neighbor.sum_of_costs before recomputation: 118
[STAT] neighbor.old_sum_of_costs before recomputation: 139
[STAT] sum_of_costs before recomputation: 4218
[DBG]  Validate solution immediately after SAT success.
[WARNING] Problem after SAT: Edge conflict between agents 74 and 3 at edge (597,565) at timestep 19
[DBG]  Attempting immediate repair via init_lns because problem occurred after SAT (should be applied only for conflicts...).
[DBG]  Passing 150 agents to init_lns (skip=true).
[DBG]  path_table contents for selected agents (neighbor.agents):
[DBG]    Agent 28 => controlling path length=21
[DBG]    Agent 62 => controlling path length=32
[DBG]    Agent 74 => controlling path length=28
[DBG]    Agent 84 => controlling path length=41
[DBG]  hodnota skip_initial_solution=1
[DBG]  We skip initialSolution => call buildCollisionData()
[DBG]  buildCollisionData() called â€“ skip_initial_solution case.
[DBG]  Agents.size()=150, collision_graph.size()=150
[DBG]  agent 3 => updateCollidingPairs => foundCollision
[DBG]  agent 28 => updateCollidingPairs => foundCollision
[DBG]  agent 30 => updateCollidingPairs => foundCollision
[DBG]  agent 42 => updateCollidingPairs => foundCollision
[DBG]  agent 49 => updateCollidingPairs => foundCollision
[DBG]  agent 74 => updateCollidingPairs => foundCollision
[DBG]  agent 79 => updateCollidingPairs => foundCollision
[DBG]  agent 111 => updateCollidingPairs => foundCollision
[DBG]  Conflicting agent pairs:
[DBG]  agent 3 is in conflict with agent 74
[DBG]  agent 28 is in conflict with agent 30
[DBG]  agent 28 is in conflict with agent 42
[DBG]  agent 28 is in conflict with agent 49
[DBG]  agent 28 is in conflict with agent 111
[DBG]  agent 74 is in conflict with agent 79
[DBG]  buildCollisionData() => sum_of_costs=4197, num_of_colliding_pairs=6
[DBG]  buildCollisionData done => sum_of_costs=4197, num_of_colliding_pairs=6
[DBG]  sum_of_cost hodnota: 4197
[DBG]  After skip/init build => iteration_stats.back(): sum_of_costs=4197, collisions=6
[DEBUG] Using default neighbor generation strategy for conflicts: 1
[DEBUG] Using default neighbor generation strategy for conflicts: 1
	InitLNS(PP): runtime = 0.0230469, iterations = 3, colliding pairs = 0, initial colliding pairs = 6, solution cost = 4244, initial solution cost = 4197, failed iterations = 0
[DBG]  init_lns->sum_of_costs after init_lns->run: 4244
[DBG]  sum_of_costs after assignment from init_lns->run: 4244
[DBG]  Recomputing sum_of_cost by dividing neighbor.sum_of_costs and neighbor.old_sum_of_costs
[STAT] sum_of_costs after recomputation: 4244
[STAT] Iteration 161
[DBG]  Using SAT operator (destroy+repair SAT).
[DBG]  ====================
[DBG]  SAT destroy operator called.
[DBG]  SAT heuristic: 2
[DBG]  key_agent_id: 39
[DBG]  key_agent_id global path length: 33
[DBG]  Submap content (global positions):
[DBG]  791 792 793 794 795 
[DBG]  823 824 825 826 827 
[DBG]  855 856 857 858 859 
[DBG]  887 888 889 890 891 
[DBG]  919 920 921 922 923 
[DBG]  Map content with agents and obstacles:
[DBG]  X . A X . 
[DBG]  . . X . . 
[DBG]  A . A . . 
[DBG]  . . . . . 
[DBG]  . . . . . 
[DBG]  content of the map structure that we pass to the SAT solver:
[DBG]  -1  1  1  -1  1  
[DBG]  1  1  -1  1  1  
[DBG]  1  1  1  1  1  
[DBG]  1  1  1  1  1  
[DBG]  1  1  1  1  1  
[DBG]  Identifying agents in a submap for rescheduling (when key_agent is there at the time 28):
[DBG]  Agent 1 found intervals in the sub-map:
[DBG]   [24..28]
[DBG]  Agent 1 (interval in submap: [24..28]) contains time 28, added to replan.
[DBG]  Agent 39 found intervals in the sub-map:
[DBG]   [25..31]
[DBG]  Agent 39 (interval in submap: [25..31]) contains time 28, added to replan.
[DBG]  Agent 96 found intervals in the sub-map:
[DBG]   [27..33]
[DBG]  Agent 96 (interval in submap: [27..33]) contains time 28, added to replan.
[DBG]  Agent 102 found intervals in the sub-map:
[DBG]   [8..11]
[DBG]  Agent 102 is not in sub-map at time 28 (intervals: 
[DBG]  [8..11] )
[DBG]  Agent 111 found intervals in the sub-map:
[DBG]  
[DBG]  Agent 111 is not in sub-map at time 28 (intervals: 
[DBG]  )
[DBG]  Agent 1 | Start (global): 793 -> (local): (0, 2) at time 28 | Goal (global): 793 -> (local): (0, 2) at time 28
[DBG]  Agent 39 | Start (global): 857 -> (local): (2, 2) at time 28 | Goal (global): 891 -> (local): (3, 4) at time 31
[DBG]  Agent 96 | Start (global): 855 -> (local): (2, 0) at time 28 | Goal (global): 827 -> (local): (1, 4) at time 33
[DBG]  [REPAIR] SAT destroy operator called.
[DBG]  [REPAIR] SAT operator â€“ launching subproblem FOR OPTIMIZATION.
[DBG]  Creating local paths (sx, sy) in the submap for T_sync = 28
[DBG]    Agent 1 (global paths from T=28 to 28) has local path: (0,2) 
[DBG]    Agent 39 (global paths from T=28 to 31) has local path: (2,2) (2,3) (2,4) (3,4) 
[DBG]    Agent 96 (global paths from T=28 to 33) has local path: (2,0) (2,1) (2,2) (2,3) (1,3) (1,4) 
[DBG]  Checking input data for SAT solver:
[DBG]    - Number of agents to replan: 3
[DBG]  Agent 1 has the original local path length: 1 => Start (0,2), Goal (0,2)
[DBG]  Agent 39 has the original local path length: 4 => Start (2,2), Goal (3,4)
[DBG]  Agent 96 has the original local path length: 6 => Start (2,0), Goal (1,4)
[DBG]  Start position: (0, 2), (2, 2), (2, 0), 
[DBG]  Goal position: (0, 2), (3, 4), (1, 4), 
[DBG]  SAT instance and solver created.
Currently solving
Instance name: scen
Map name: map
Encoding used: disappear_at_goal
SAT solver used: Kissat
Optimizing function: sum of costs
Number of agents: 3
Mks LB: 6
SoC LB: 11
Delta: 0
Remaining time: 300000 [ms]

Vertex conflict! Agents 0, 1, timestep 4, location 0
Swapping conflict! Agents 0, 1, timestep 4, edge (0,0)
Vertex conflict! Agents 0, 1, timestep 5, location 0
Found plan [agents = 3] [timesteps = 6]
Agent #0 : 1 0 0 0 0 0 
Agent #1 : 9 14 15 16 0 0 
Agent #2 : 7 8 9 10 11 6 

[STAT] Solver returned: 0
[DBG]  Agent (index) 1 | New local path (submap idx):
[DBG]  1 
[DBG]  Agent (index) 39 | New local path (submap idx):
[DBG]  9 14 15 16 
[DBG]  Agent (index) 96 | New local path (submap idx):
[DBG]  7 8 9 10 11 6 
[DBG]  Update the agent path 1 | Original local length: 1 | New local length: 1
[DBG]  agent 1 t=0 => decoded (sx,sy)=(0,2) => global_id=793
[DBG]  Complete path of agent 1:
[DBG]    Original: 949 949 949 949 949 949 949 949 949 949 949 949 949 949 949 949 949 949 917 885 885 885 886 854 855 856 824 792 793 761 729 729 728 
[DBG]    New:     949 949 949 949 949 949 949 949 949 949 949 949 949 949 949 949 949 949 917 885 885 885 886 854 855 856 824 792 793 761 729 729 728 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 949 949 949 949 949 949 949 949 949 949 949 949 949 949 949 949 949 949 917 885 885 885 886 854 855 856 824 792 
[DBG]    Local path (in submap): 793 
[DBG]    Suffix (out of submap): 761 729 729 728 
[DBG]  Original agent path length 1 je: 33
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 0: 949, 949, 949, 949, 949, 949, 949, 949, 949, 949, 949, 949, 949, 949, 949, 949, 949, 949, 917, 885, 885, 885, 886, 854, 855, 856, 824, 792, 793, 761, 729, 729, 728, 
[DBG]  Path for agent 1 updated, resulting length: 33
[DBG]  Update the agent path 39 | Original local length: 4 | New local length: 4
[DBG]  agent 39 t=0 => decoded (sx,sy)=(2,2) => global_id=857
[DBG]  agent 39 t=1 => decoded (sx,sy)=(3,2) => global_id=889
[DBG]  agent 39 t=2 => decoded (sx,sy)=(3,3) => global_id=890
[DBG]  agent 39 t=3 => decoded (sx,sy)=(3,4) => global_id=891
[DBG]  Complete path of agent 39:
[DBG]    Original: 680 712 713 745 746 747 748 780 781 813 814 846 878 879 880 881 881 881 882 850 882 883 884 885 886 887 888 889 857 858 859 891 892 
[DBG]    New:     680 712 713 745 746 747 748 780 781 813 814 846 878 879 880 881 881 881 882 850 882 883 884 885 886 887 888 889 857 889 890 891 892 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 680 712 713 745 746 747 748 780 781 813 814 846 878 879 880 881 881 881 882 850 882 883 884 885 886 887 888 889 
[DBG]    Local path (in submap): 857 889 890 891 
[DBG]    Suffix (out of submap): 892 
[DBG]  Original agent path length 39 je: 33
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 1: 680, 712, 713, 745, 746, 747, 748, 780, 781, 813, 814, 846, 878, 879, 880, 881, 881, 881, 882, 850, 882, 883, 884, 885, 886, 887, 888, 889, 857, 889, 890, 891, 892, 
[DBG]  Path for agent 39 updated, resulting length: 33
[DBG]  Update the agent path 96 | Original local length: 6 | New local length: 6
[DBG]  agent 96 t=0 => decoded (sx,sy)=(2,0) => global_id=855
[DBG]  agent 96 t=1 => decoded (sx,sy)=(2,1) => global_id=856
[DBG]  agent 96 t=2 => decoded (sx,sy)=(2,2) => global_id=857
[DBG]  agent 96 t=3 => decoded (sx,sy)=(2,3) => global_id=858
[DBG]  agent 96 t=4 => decoded (sx,sy)=(2,4) => global_id=859
[DBG]  agent 96 t=5 => decoded (sx,sy)=(1,4) => global_id=827
[DBG]  Complete path of agent 96:
[DBG]    Original: 647 648 680 712 713 714 746 778 779 780 781 813 814 814 814 814 814 846 847 848 849 850 851 883 884 885 886 887 855 856 857 858 826 827 
[DBG]    New:     647 648 680 712 713 714 746 778 779 780 781 813 814 814 814 814 814 846 847 848 849 850 851 883 884 885 886 887 855 856 857 858 859 827 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 647 648 680 712 713 714 746 778 779 780 781 813 814 814 814 814 814 846 847 848 849 850 851 883 884 885 886 887 
[DBG]    Local path (in submap): 855 856 857 858 859 827 
[DBG]    Suffix (out of submap): 
[DBG]  Original agent path length 96 je: 34
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 2: 647, 648, 680, 712, 713, 714, 746, 778, 779, 780, 781, 813, 814, 814, 814, 814, 814, 846, 847, 848, 849, 850, 851, 883, 884, 885, 886, 887, 855, 856, 857, 858, 859, 827, 
[DBG]  Path for agent 96 updated, resulting length: 34
[DBG]  Paths successfully updated.
[DBG]  (LNS.cpp) New path for agent 1: 
[DBG]  949, 949, 949, 949, 949, 949, 949, 949, 949, 949, 949, 949, 949, 949, 949, 949, 949, 949, 917, 885, 885, 885, 886, 854, 855, 856, 824, 792, 793, 761, 729, 729, 728, 
[DBG]  (LNS.cpp) New path for agent 39: 
[DBG]  680, 712, 713, 745, 746, 747, 748, 780, 781, 813, 814, 846, 878, 879, 880, 881, 881, 881, 882, 850, 882, 883, 884, 885, 886, 887, 888, 889, 857, 889, 890, 891, 892, 
[DBG]  (LNS.cpp) New path for agent 96: 
[DBG]  647, 648, 680, 712, 713, 714, 746, 778, 779, 780, 781, 813, 814, 814, 814, 814, 814, 846, 847, 848, 849, 850, 851, 883, 884, 885, 886, 887, 855, 856, 857, 858, 859, 827, 
[DBG]  component_weights = {0.384944, 0.0812467, 0.0849637, 0.448845}
[DBG]  opSuccess value: 1
[STAT] neighbor.sum_of_costs before recomputation: 97
[STAT] neighbor.old_sum_of_costs before recomputation: 97
[STAT] sum_of_costs before recomputation: 4244
[DBG]  Validate solution immediately after SAT success.
[WARNING] Problem after SAT: Target conflict: agent 39 (len 32) traverses target of agent 102 (len 11) at location 890 at timestep 30
[DBG]  Attempting immediate repair via init_lns because problem occurred after SAT (should be applied only for conflicts...).
[DBG]  Passing 150 agents to init_lns (skip=true).
[DBG]  path_table contents for selected agents (neighbor.agents):
[DBG]    Agent 1 => controlling path length=33
[DBG]    Agent 39 => controlling path length=33
[DBG]    Agent 96 => controlling path length=34
[DBG]  hodnota skip_initial_solution=1
[DBG]  We skip initialSolution => call buildCollisionData()
[DBG]  buildCollisionData() called â€“ skip_initial_solution case.
[DBG]  Agents.size()=150, collision_graph.size()=150
[DBG]  agent 39 => updateCollidingPairs => foundCollision
[DBG]  agent 102 => updateCollidingPairs => foundCollision
[DBG]  Conflicting agent pairs:
[DBG]  agent 39 is in conflict with agent 102
[DBG]  buildCollisionData() => sum_of_costs=4244, num_of_colliding_pairs=1
[DBG]  buildCollisionData done => sum_of_costs=4244, num_of_colliding_pairs=1
[DBG]  sum_of_cost hodnota: 4244
[DBG]  After skip/init build => iteration_stats.back(): sum_of_costs=4244, collisions=1
[DEBUG] Using default neighbor generation strategy for conflicts: 1
	InitLNS(PP): runtime = 0.00378642, iterations = 2, colliding pairs = 0, initial colliding pairs = 1, solution cost = 4246, initial solution cost = 4244, failed iterations = 0
[DBG]  init_lns->sum_of_costs after init_lns->run: 4246
[DBG]  sum_of_costs after assignment from init_lns->run: 4246
[DBG]  Recomputing sum_of_cost by dividing neighbor.sum_of_costs and neighbor.old_sum_of_costs
[STAT] sum_of_costs after recomputation: 4246
[STAT] Iteration 162
[DBG]  Using SAT operator (destroy+repair SAT).
[DBG]  ====================
[DBG]  SAT destroy operator called.
[DBG]  SAT heuristic: 2
[DBG]  key_agent_id: 97
[DBG]  key_agent_id global path length: 17
[DBG]  Submap content (global positions):
[DBG]  679 680 681 682 683 
[DBG]  711 712 713 714 715 
[DBG]  743 744 745 746 747 
[DBG]  775 776 777 778 779 
[DBG]  807 808 809 810 811 
[DBG]  Map content with agents and obstacles:
[DBG]  X . X . . 
[DBG]  X . A . A 
[DBG]  X A A . . 
[DBG]  A . A . . 
[DBG]  . . A . . 
[DBG]  content of the map structure that we pass to the SAT solver:
[DBG]  -1  1  -1  1  1  
[DBG]  -1  1  1  1  1  
[DBG]  -1  1  1  1  1  
[DBG]  1  1  1  1  1  
[DBG]  1  1  1  1  1  
[DBG]  Identifying agents in a submap for rescheduling (when key_agent is there at the time 4):
[DBG]  Agent 37 found intervals in the sub-map:
[DBG]   [1..7]
[DBG]  Agent 37 (interval in submap: [1..7]) contains time 4, added to replan.
[DBG]  Agent 39 found intervals in the sub-map:
[DBG]   [0..5]
[DBG]  Agent 39 (interval in submap: [0..5]) contains time 4, added to replan.
[DBG]  Agent 56 found intervals in the sub-map:
[DBG]   [2..6]
[DBG]  Agent 56 (interval in submap: [2..6]) contains time 4, added to replan.
[DBG]  Agent 85 found intervals in the sub-map:
[DBG]   [4..9]
[DBG]  Agent 85 (interval in submap: [4..9]) contains time 4, added to replan.
[DBG]  Agent 96 found intervals in the sub-map:
[DBG]   [2..8]
[DBG]  Agent 96 (interval in submap: [2..8]) contains time 4, added to replan.
[DBG]  Agent 97 found intervals in the sub-map:
[DBG]   [1..6]
[DBG]  Agent 97 (interval in submap: [1..6]) contains time 4, added to replan.
[DBG]  Agent 114 found intervals in the sub-map:
[DBG]  
[DBG]  Agent 114 is not in sub-map at time 4 (intervals: 
[DBG]  )
[DBG]  Agent 132 found intervals in the sub-map:
[DBG]  
[DBG]  Agent 132 is not in sub-map at time 4 (intervals: 
[DBG]  )
[DBG]  Agent 148 found intervals in the sub-map:
[DBG]   [0..13]
[DBG]  Agent 148 (interval in submap: [0..13]) contains time 4, added to replan.
[DBG]  Agent 37 | Start (global): 777 -> (local): (3, 2) at time 4 | Goal (global): 779 -> (local): (3, 4) at time 7
[DBG]  Agent 39 | Start (global): 715 -> (local): (1, 4) at time 4 | Goal (global): 747 -> (local): (2, 4) at time 5
[DBG]  Agent 56 | Start (global): 809 -> (local): (4, 2) at time 4 | Goal (global): 811 -> (local): (4, 4) at time 6
[DBG]  Agent 85 | Start (global): 775 -> (local): (3, 0) at time 4 | Goal (global): 811 -> (local): (4, 4) at time 9
[DBG]  Agent 96 | Start (global): 713 -> (local): (1, 2) at time 4 | Goal (global): 779 -> (local): (3, 4) at time 8
[DBG]  Agent 97 | Start (global): 745 -> (local): (2, 2) at time 4 | Goal (global): 809 -> (local): (4, 2) at time 6
[DBG]  Agent 148 | Start (global): 744 -> (local): (2, 1) at time 4 | Goal (global): 683 -> (local): (0, 4) at time 13
[DBG]  [REPAIR] SAT destroy operator called.
[DBG]  [REPAIR] SAT operator â€“ launching subproblem FOR OPTIMIZATION.
[DBG]  Creating local paths (sx, sy) in the submap for T_sync = 4
[DBG]    Agent 37 (global paths from T=4 to 7) has local path: (3,2) (3,3) (3,3) (3,4) 
[DBG]    Agent 39 (global paths from T=4 to 5) has local path: (1,4) (2,4) 
[DBG]    Agent 56 (global paths from T=4 to 6) has local path: (4,2) (4,3) (4,4) 
[DBG]    Agent 85 (global paths from T=4 to 9) has local path: (3,0) (4,0) (4,1) (4,2) (4,3) (4,4) 
[DBG]    Agent 96 (global paths from T=4 to 8) has local path: (1,2) (1,3) (2,3) (3,3) (3,4) 
[DBG]    Agent 97 (global paths from T=4 to 6) has local path: (2,2) (3,2) (4,2) 
[DBG]    Agent 148 (global paths from T=4 to 13) has local path: (2,1) (2,2) (2,2) (2,2) (2,2) (2,2) (1,2) (1,3) (1,4) (0,4) 
[DBG]  Checking input data for SAT solver:
[DBG]    - Number of agents to replan: 7
[DBG]  Agent 37 has the original local path length: 4 => Start (3,2), Goal (3,4)
[DBG]  Agent 39 has the original local path length: 2 => Start (1,4), Goal (2,4)
[DBG]  Agent 56 has the original local path length: 3 => Start (4,2), Goal (4,4)
[DBG]  Agent 85 has the original local path length: 6 => Start (3,0), Goal (4,4)
[DBG]  Agent 96 has the original local path length: 5 => Start (1,2), Goal (3,4)
[DBG]  Agent 97 has the original local path length: 3 => Start (2,2), Goal (4,2)
[DBG]  Agent 148 has the original local path length: 10 => Start (2,1), Goal (0,4)
[DBG]  Start position: (3, 2), (1, 4), (4, 2), (3, 0), (1, 2), (2, 2), (2, 1), 
[DBG]  Goal position: (3, 4), (2, 4), (4, 4), (4, 4), (3, 4), (4, 2), (0, 4), 
[DBG]  SAT instance and solver created.
Currently solving
Instance name: scen
Map name: map
Encoding used: disappear_at_goal
SAT solver used: Kissat
Optimizing function: sum of costs
Number of agents: 7
Mks LB: 6
SoC LB: 28
Delta: 0
Remaining time: 300000 [ms]

Vertex conflict! Agents 0, 1, timestep 3, location 0
Swapping conflict! Agents 0, 1, timestep 3, edge (0,0)
Vertex conflict! Agents 0, 1, timestep 4, location 0
Swapping conflict! Agents 0, 1, timestep 4, edge (0,0)
Vertex conflict! Agents 0, 1, timestep 5, location 0
Vertex conflict! Agents 0, 2, timestep 3, location 0
Swapping conflict! Agents 0, 2, timestep 3, edge (0,0)
Vertex conflict! Agents 0, 2, timestep 4, location 0
Swapping conflict! Agents 0, 2, timestep 4, edge (0,0)
Vertex conflict! Agents 0, 2, timestep 5, location 0
Vertex conflict! Agents 0, 4, timestep 5, location 0
Vertex conflict! Agents 0, 5, timestep 3, location 0
Swapping conflict! Agents 0, 5, timestep 3, edge (0,0)
Vertex conflict! Agents 0, 5, timestep 4, location 0
Swapping conflict! Agents 0, 5, timestep 4, edge (0,0)
Vertex conflict! Agents 0, 5, timestep 5, location 0
Vertex conflict! Agents 1, 2, timestep 3, location 0
Swapping conflict! Agents 1, 2, timestep 3, edge (0,0)
Vertex conflict! Agents 1, 2, timestep 4, location 0
Swapping conflict! Agents 1, 2, timestep 4, edge (0,0)
Vertex conflict! Agents 1, 2, timestep 5, location 0
Vertex conflict! Agents 1, 4, timestep 5, location 0
Vertex conflict! Agents 1, 5, timestep 3, location 0
Swapping conflict! Agents 1, 5, timestep 3, edge (0,0)
Vertex conflict! Agents 1, 5, timestep 4, location 0
Swapping conflict! Agents 1, 5, timestep 4, edge (0,0)
Vertex conflict! Agents 1, 5, timestep 5, location 0
Vertex conflict! Agents 2, 4, timestep 5, location 0
Vertex conflict! Agents 2, 5, timestep 3, location 0
Swapping conflict! Agents 2, 5, timestep 3, edge (0,0)
Vertex conflict! Agents 2, 5, timestep 4, location 0
Swapping conflict! Agents 2, 5, timestep 4, edge (0,0)
Vertex conflict! Agents 2, 5, timestep 5, location 0
Vertex conflict! Agents 4, 5, timestep 5, location 0
Found plan [agents = 7] [timesteps = 6]
Agent #0 : 13 14 15 0 0 0 
Agent #1 : 6 10 0 0 0 0 
Agent #2 : 18 19 20 0 0 0 
Agent #3 : 11 16 17 18 19 20 
Agent #4 : 4 8 13 14 15 0 
Agent #5 : 8 13 18 0 0 0 
Agent #6 : 7 3 4 5 6 2 

[STAT] Solver returned: 0
[DBG]  Agent (index) 37 | New local path (submap idx):
[DBG]  13 14 15 
[DBG]  Agent (index) 39 | New local path (submap idx):
[DBG]  6 10 
[DBG]  Agent (index) 56 | New local path (submap idx):
[DBG]  18 19 20 
[DBG]  Agent (index) 85 | New local path (submap idx):
[DBG]  11 16 17 18 19 20 
[DBG]  Agent (index) 96 | New local path (submap idx):
[DBG]  4 8 13 14 15 
[DBG]  Agent (index) 97 | New local path (submap idx):
[DBG]  8 13 18 
[DBG]  Agent (index) 148 | New local path (submap idx):
[DBG]  7 3 4 5 6 2 
[DBG]  Update the agent path 37 | Original local length: 4 | New local length: 3
[DBG]  agent 37 t=0 => decoded (sx,sy)=(3,2) => global_id=777
[DBG]  agent 37 t=1 => decoded (sx,sy)=(3,3) => global_id=778
[DBG]  agent 37 t=2 => decoded (sx,sy)=(3,4) => global_id=779
[DBG]  Complete path of agent 37:
[DBG]    Original: 839 807 808 776 777 778 778 779 780 781 782 
[DBG]    New:     839 807 808 776 777 778 779 780 781 782 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 839 807 808 776 
[DBG]    Local path (in submap): 777 778 779 780 
[DBG]    Suffix (out of submap): 781 782 
[DBG]  Original agent path length 37 je: 11
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 0: 839, 807, 808, 776, 777, 778, 779, 780, 781, 782, 
[DBG]  Path for agent 37 updated, resulting length: 10
[DBG]  Update the agent path 39 | Original local length: 2 | New local length: 2
[DBG]  agent 39 t=0 => decoded (sx,sy)=(1,4) => global_id=715
[DBG]  agent 39 t=1 => decoded (sx,sy)=(2,4) => global_id=747
[DBG]  Complete path of agent 39:
[DBG]    Original: 680 712 713 714 715 747 748 780 812 813 814 846 878 879 880 881 849 850 850 850 882 883 884 885 886 887 888 889 890 891 892 
[DBG]    New:     680 712 713 714 715 747 748 780 812 813 814 846 878 879 880 881 849 850 850 850 882 883 884 885 886 887 888 889 890 891 892 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 680 712 713 714 
[DBG]    Local path (in submap): 715 747 
[DBG]    Suffix (out of submap): 748 780 812 813 814 846 878 879 880 881 849 850 850 850 882 883 884 885 886 887 888 889 890 891 892 
[DBG]  Original agent path length 39 je: 31
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 1: 680, 712, 713, 714, 715, 747, 748, 780, 812, 813, 814, 846, 878, 879, 880, 881, 849, 850, 850, 850, 882, 883, 884, 885, 886, 887, 888, 889, 890, 891, 892, 
[DBG]  Path for agent 39 updated, resulting length: 31
[DBG]  Update the agent path 56 | Original local length: 3 | New local length: 3
[DBG]  agent 56 t=0 => decoded (sx,sy)=(4,2) => global_id=809
[DBG]  agent 56 t=1 => decoded (sx,sy)=(4,3) => global_id=810
[DBG]  agent 56 t=2 => decoded (sx,sy)=(4,4) => global_id=811
[DBG]  Complete path of agent 56:
[DBG]    Original: 805 806 807 808 809 810 811 812 813 814 815 783 784 752 720 688 689 657 658 659 627 627 627 628 596 597 565 533 534 502 470 470 438 439 407 408 409 377 378 379 380 348 349 350 351 319 287 255 
[DBG]    New:     805 806 807 808 809 810 811 812 813 814 815 783 784 752 720 688 689 657 658 659 627 627 627 628 596 597 565 533 534 502 470 470 438 439 407 408 409 377 378 379 380 348 349 350 351 319 287 255 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 805 806 807 808 
[DBG]    Local path (in submap): 809 810 811 
[DBG]    Suffix (out of submap): 812 813 814 815 783 784 752 720 688 689 657 658 659 627 627 627 628 596 597 565 533 534 502 470 470 438 439 407 408 409 377 378 379 380 348 349 350 351 319 287 255 
[DBG]  Original agent path length 56 je: 48
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 2: 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 783, 784, 752, 720, 688, 689, 657, 658, 659, 627, 627, 627, 628, 596, 597, 565, 533, 534, 502, 470, 470, 438, 439, 407, 408, 409, 377, 378, 379, 380, 348, 349, 350, 351, 319, 287, 255, 
[DBG]  Path for agent 56 updated, resulting length: 48
[DBG]  Update the agent path 85 | Original local length: 6 | New local length: 6
[DBG]  agent 85 t=0 => decoded (sx,sy)=(3,0) => global_id=775
[DBG]  agent 85 t=1 => decoded (sx,sy)=(4,0) => global_id=807
[DBG]  agent 85 t=2 => decoded (sx,sy)=(4,1) => global_id=808
[DBG]  agent 85 t=3 => decoded (sx,sy)=(4,2) => global_id=809
[DBG]  agent 85 t=4 => decoded (sx,sy)=(4,3) => global_id=810
[DBG]  agent 85 t=5 => decoded (sx,sy)=(4,4) => global_id=811
[DBG]  Complete path of agent 85:
[DBG]    Original: 709 710 742 774 775 807 808 809 810 811 843 844 845 877 878 879 880 848 849 881 881 849 817 818 819 820 821 822 790 
[DBG]    New:     709 710 742 774 775 807 808 809 810 811 843 844 845 877 878 879 880 848 849 881 881 849 817 818 819 820 821 822 790 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 709 710 742 774 
[DBG]    Local path (in submap): 775 807 808 809 810 811 
[DBG]    Suffix (out of submap): 843 844 845 877 878 879 880 848 849 881 881 849 817 818 819 820 821 822 790 
[DBG]  Original agent path length 85 je: 29
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 3: 709, 710, 742, 774, 775, 807, 808, 809, 810, 811, 843, 844, 845, 877, 878, 879, 880, 848, 849, 881, 881, 849, 817, 818, 819, 820, 821, 822, 790, 
[DBG]  Path for agent 85 updated, resulting length: 29
[DBG]  Update the agent path 96 | Original local length: 5 | New local length: 5
[DBG]  agent 96 t=0 => decoded (sx,sy)=(1,2) => global_id=713
[DBG]  agent 96 t=1 => decoded (sx,sy)=(2,2) => global_id=745
[DBG]  agent 96 t=2 => decoded (sx,sy)=(3,2) => global_id=777
[DBG]  agent 96 t=3 => decoded (sx,sy)=(3,3) => global_id=778
[DBG]  agent 96 t=4 => decoded (sx,sy)=(3,4) => global_id=779
[DBG]  Complete path of agent 96:
[DBG]    Original: 647 648 680 712 713 714 746 778 779 780 781 813 814 814 814 814 814 846 847 848 849 850 851 883 884 885 886 887 855 856 857 858 859 827 
[DBG]    New:     647 648 680 712 713 745 777 778 779 780 781 813 814 814 814 814 814 846 847 848 849 850 851 883 884 885 886 887 855 856 857 858 859 827 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 647 648 680 712 
[DBG]    Local path (in submap): 713 745 777 778 779 
[DBG]    Suffix (out of submap): 780 781 813 814 814 814 814 814 846 847 848 849 850 851 883 884 885 886 887 855 856 857 858 859 827 
[DBG]  Original agent path length 96 je: 34
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 4: 647, 648, 680, 712, 713, 745, 777, 778, 779, 780, 781, 813, 814, 814, 814, 814, 814, 846, 847, 848, 849, 850, 851, 883, 884, 885, 886, 887, 855, 856, 857, 858, 859, 827, 
[DBG]  Path for agent 96 updated, resulting length: 34
[DBG]  Update the agent path 97 | Original local length: 3 | New local length: 3
[DBG]  agent 97 t=0 => decoded (sx,sy)=(2,2) => global_id=745
[DBG]  agent 97 t=1 => decoded (sx,sy)=(3,2) => global_id=777
[DBG]  agent 97 t=2 => decoded (sx,sy)=(4,2) => global_id=809
[DBG]  Complete path of agent 97:
[DBG]    Original: 650 682 714 746 745 777 809 841 873 905 937 936 968 1000 999 998 997 
[DBG]    New:     650 682 714 746 745 777 809 841 873 905 937 936 968 1000 999 998 997 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 650 682 714 746 
[DBG]    Local path (in submap): 745 777 809 
[DBG]    Suffix (out of submap): 841 873 905 937 936 968 1000 999 998 997 
[DBG]  Original agent path length 97 je: 17
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 5: 650, 682, 714, 746, 745, 777, 809, 841, 873, 905, 937, 936, 968, 1000, 999, 998, 997, 
[DBG]  Path for agent 97 updated, resulting length: 17
[DBG]  Update the agent path 148 | Original local length: 10 | New local length: 6
[DBG]  agent 148 t=0 => decoded (sx,sy)=(2,1) => global_id=744
[DBG]  agent 148 t=1 => decoded (sx,sy)=(1,1) => global_id=712
[DBG]  agent 148 t=2 => decoded (sx,sy)=(1,2) => global_id=713
[DBG]  agent 148 t=3 => decoded (sx,sy)=(1,3) => global_id=714
[DBG]  agent 148 t=4 => decoded (sx,sy)=(1,4) => global_id=715
[DBG]  agent 148 t=5 => decoded (sx,sy)=(0,4) => global_id=683
[DBG]  Complete path of agent 148:
[DBG]    Original: 776 744 744 744 744 745 745 745 745 745 713 714 715 683 684 685 685 686 687 688 656 657 658 659 660 
[DBG]    New:     776 744 744 744 744 712 713 714 715 683 684 685 685 686 687 688 656 657 658 659 660 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 776 744 744 744 
[DBG]    Local path (in submap): 744 712 713 714 715 683 684 685 685 686 
[DBG]    Suffix (out of submap): 687 688 656 657 658 659 660 
[DBG]  Original agent path length 148 je: 25
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 6: 776, 744, 744, 744, 744, 712, 713, 714, 715, 683, 684, 685, 685, 686, 687, 688, 656, 657, 658, 659, 660, 
[DBG]  Path for agent 148 updated, resulting length: 21
[DBG]  Paths successfully updated.
[DBG]  (LNS.cpp) New path for agent 37: 
[DBG]  839, 807, 808, 776, 777, 778, 779, 780, 781, 782, 
[DBG]  (LNS.cpp) New path for agent 39: 
[DBG]  680, 712, 713, 714, 715, 747, 748, 780, 812, 813, 814, 846, 878, 879, 880, 881, 849, 850, 850, 850, 882, 883, 884, 885, 886, 887, 888, 889, 890, 891, 892, 
[DBG]  (LNS.cpp) New path for agent 56: 
[DBG]  805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 783, 784, 752, 720, 688, 689, 657, 658, 659, 627, 627, 627, 628, 596, 597, 565, 533, 534, 502, 470, 470, 438, 439, 407, 408, 409, 377, 378, 379, 380, 348, 349, 350, 351, 319, 287, 255, 
[DBG]  (LNS.cpp) New path for agent 85: 
[DBG]  709, 710, 742, 774, 775, 807, 808, 809, 810, 811, 843, 844, 845, 877, 878, 879, 880, 848, 849, 881, 881, 849, 817, 818, 819, 820, 821, 822, 790, 
[DBG]  (LNS.cpp) New path for agent 96: 
[DBG]  647, 648, 680, 712, 713, 745, 777, 778, 779, 780, 781, 813, 814, 814, 814, 814, 814, 846, 847, 848, 849, 850, 851, 883, 884, 885, 886, 887, 855, 856, 857, 858, 859, 827, 
[DBG]  (LNS.cpp) New path for agent 97: 
[DBG]  650, 682, 714, 746, 745, 777, 809, 841, 873, 905, 937, 936, 968, 1000, 999, 998, 997, 
[DBG]  (LNS.cpp) New path for agent 148: 
[DBG]  776, 744, 744, 744, 744, 712, 713, 714, 715, 683, 684, 685, 685, 686, 687, 688, 656, 657, 658, 659, 660, 
[DBG]  component_weights = {0.381404, 0.0804995, 0.0841823, 0.453914}
[DBG]  opSuccess value: 1
[STAT] neighbor.sum_of_costs before recomputation: 183
[STAT] neighbor.old_sum_of_costs before recomputation: 188
[STAT] sum_of_costs before recomputation: 4246
[DBG]  Validate solution immediately after SAT success.
[WARNING] Problem after SAT: Target conflict: agent 3 (len 38) traverses target of agent 148 (len 20) at location 660 at timestep 22
[DBG]  Attempting immediate repair via init_lns because problem occurred after SAT (should be applied only for conflicts...).
[DBG]  Passing 150 agents to init_lns (skip=true).
[DBG]  path_table contents for selected agents (neighbor.agents):
[DBG]    Agent 37 => controlling path length=10
[DBG]    Agent 39 => controlling path length=31
[DBG]    Agent 56 => controlling path length=48
[DBG]    Agent 85 => controlling path length=29
[DBG]    Agent 96 => controlling path length=34
[DBG]    Agent 97 => controlling path length=17
[DBG]    Agent 148 => controlling path length=21
[DBG]  hodnota skip_initial_solution=1
[DBG]  We skip initialSolution => call buildCollisionData()
[DBG]  buildCollisionData() called â€“ skip_initial_solution case.
[DBG]  Agents.size()=150, collision_graph.size()=150
[DBG]  agent 3 => updateCollidingPairs => foundCollision
[DBG]  agent 28 => updateCollidingPairs => foundCollision
[DBG]  agent 37 => updateCollidingPairs => foundCollision
[DBG]  agent 39 => updateCollidingPairs => foundCollision
[DBG]  agent 56 => updateCollidingPairs => foundCollision
[DBG]  agent 122 => updateCollidingPairs => foundCollision
[DBG]  agent 148 => updateCollidingPairs => foundCollision
[DBG]  Conflicting agent pairs:
[DBG]  agent 3 is in conflict with agent 148
[DBG]  agent 28 is in conflict with agent 148
[DBG]  agent 37 is in conflict with agent 39
[DBG]  agent 37 is in conflict with agent 122
[DBG]  agent 56 is in conflict with agent 148
[DBG]  agent 122 is in conflict with agent 148
[DBG]  buildCollisionData() => sum_of_costs=4241, num_of_colliding_pairs=6
[DBG]  buildCollisionData done => sum_of_costs=4241, num_of_colliding_pairs=6
[DBG]  sum_of_cost hodnota: 4241
[DBG]  After skip/init build => iteration_stats.back(): sum_of_costs=4241, collisions=6
[DEBUG] Using default neighbor generation strategy for conflicts: 0
[DEBUG] Using default neighbor generation strategy for conflicts: 1
	InitLNS(PP): runtime = 0.00820812, iterations = 3, colliding pairs = 0, initial colliding pairs = 6, solution cost = 4273, initial solution cost = 4241, failed iterations = 0
[DBG]  init_lns->sum_of_costs after init_lns->run: 4273
[DBG]  sum_of_costs after assignment from init_lns->run: 4273
[DBG]  Recomputing sum_of_cost by dividing neighbor.sum_of_costs and neighbor.old_sum_of_costs
[STAT] sum_of_costs after recomputation: 4273
[STAT] Iteration 163
[DBG]  Using SAT operator (destroy+repair SAT).
[DBG]  ====================
[DBG]  SAT destroy operator called.
[DBG]  SAT heuristic: 2
[DBG]  key_agent_id: 140
[DBG]  key_agent_id global path length: 49
[DBG]  Submap content (global positions):
[DBG]  681 682 683 684 685 
[DBG]  713 714 715 716 717 
[DBG]  745 746 747 748 749 
[DBG]  777 778 779 780 781 
[DBG]  809 810 811 812 813 
[DBG]  Map content with agents and obstacles:
[DBG]  X A . A . 
[DBG]  . A . X . 
[DBG]  . A A A X 
[DBG]  . A . . . 
[DBG]  A . . . . 
[DBG]  content of the map structure that we pass to the SAT solver:
[DBG]  -1  1  1  1  1  
[DBG]  1  1  1  -1  1  
[DBG]  1  1  1  1  -1  
[DBG]  1  1  1  1  1  
[DBG]  1  1  1  1  1  
[DBG]  Identifying agents in a submap for rescheduling (when key_agent is there at the time 15):
[DBG]  Agent 0 found intervals in the sub-map:
[DBG]   [12..14]
[DBG]  Agent 0 is not in sub-map at time 15 (intervals: 
[DBG]  [12..14] )
[DBG]  Agent 67 found intervals in the sub-map:
[DBG]   [9..17]
[DBG]  Agent 67 (interval in submap: [9..17]) contains time 15, added to replan.
[DBG]  Agent 71 found intervals in the sub-map:
[DBG]   [15..19]
[DBG]  Agent 71 (interval in submap: [15..19]) contains time 15, added to replan.
[DBG]  Agent 98 found intervals in the sub-map:
[DBG]  
[DBG]  Agent 98 is not in sub-map at time 15 (intervals: 
[DBG]  )
[DBG]  Agent 118 found intervals in the sub-map:
[DBG]   [12..19]
[DBG]  Agent 118 (interval in submap: [12..19]) contains time 15, added to replan.
[DBG]  Agent 125 found intervals in the sub-map:
[DBG]   [11..16]
[DBG]  Agent 125 (interval in submap: [11..16]) contains time 15, added to replan.
[DBG]  Agent 130 found intervals in the sub-map:
[DBG]   [10..17]
[DBG]  Agent 130 (interval in submap: [10..17]) contains time 15, added to replan.
[DBG]  Agent 140 found intervals in the sub-map:
[DBG]   [11..19]
[DBG]  Agent 140 (interval in submap: [11..19]) contains time 15, added to replan.
[DBG]  Agent 143 found intervals in the sub-map:
[DBG]   [11..19]
[DBG]  Agent 143 (interval in submap: [11..19]) contains time 15, added to replan.
[DBG]  Agent 148 found intervals in the sub-map:
[DBG]   [6..27]
[DBG]  Agent 148 (interval in submap: [6..27]) contains time 15, added to replan.
[DBG]  Agent 67 | Start (global): 684 -> (local): (0, 3) at time 15 | Goal (global): 685 -> (local): (0, 4) at time 17
[DBG]  Agent 71 | Start (global): 682 -> (local): (0, 1) at time 15 | Goal (global): 717 -> (local): (1, 4) at time 19
[DBG]  Agent 118 | Start (global): 748 -> (local): (2, 3) at time 15 | Goal (global): 713 -> (local): (1, 0) at time 19
[DBG]  Agent 125 | Start (global): 778 -> (local): (3, 1) at time 15 | Goal (global): 777 -> (local): (3, 0) at time 16
[DBG]  Agent 130 | Start (global): 714 -> (local): (1, 1) at time 15 | Goal (global): 682 -> (local): (0, 1) at time 17
[DBG]  Agent 140 | Start (global): 747 -> (local): (2, 2) at time 15 | Goal (global): 685 -> (local): (0, 4) at time 19
[DBG]  Agent 143 | Start (global): 746 -> (local): (2, 1) at time 15 | Goal (global): 684 -> (local): (0, 3) at time 19
[DBG]  Agent 148 | Start (global): 809 -> (local): (4, 0) at time 15 | Goal (global): 813 -> (local): (4, 4) at time 27
[DBG]  [REPAIR] SAT destroy operator called.
[DBG]  [REPAIR] SAT operator â€“ launching subproblem FOR OPTIMIZATION.
[DBG]  Creating local paths (sx, sy) in the submap for T_sync = 15
[DBG]    Agent 67 (global paths from T=15 to 17) has local path: (0,3) (0,3) (0,4) 
[DBG]    Agent 71 (global paths from T=15 to 19) has local path: (0,1) (0,2) (0,3) (0,4) (1,4) 
[DBG]    Agent 118 (global paths from T=15 to 19) has local path: (2,3) (2,2) (2,1) (2,0) (1,0) 
[DBG]    Agent 125 (global paths from T=15 to 16) has local path: (3,1) (3,0) 
[DBG]    Agent 130 (global paths from T=15 to 17) has local path: (1,1) (0,1) (0,1) 
[DBG]    Agent 140 (global paths from T=15 to 19) has local path: (2,2) (1,2) (0,2) (0,3) (0,4) 
[DBG]    Agent 143 (global paths from T=15 to 19) has local path: (2,1) (1,1) (1,2) (0,2) (0,3) 
[DBG]    Agent 148 (global paths from T=15 to 27) has local path: (4,0) (4,0) (3,0) (3,0) (2,0) (1,0) (1,1) (1,2) (2,2) (2,3) (3,3) (4,3) (4,4) 
[DBG]  Checking input data for SAT solver:
[DBG]    - Number of agents to replan: 8
[DBG]  Agent 67 has the original local path length: 3 => Start (0,3), Goal (0,4)
[DBG]  Agent 71 has the original local path length: 5 => Start (0,1), Goal (1,4)
[DBG]  Agent 118 has the original local path length: 5 => Start (2,3), Goal (1,0)
[DBG]  Agent 125 has the original local path length: 2 => Start (3,1), Goal (3,0)
[DBG]  Agent 130 has the original local path length: 3 => Start (1,1), Goal (0,1)
[DBG]  Agent 140 has the original local path length: 5 => Start (2,2), Goal (0,4)
[DBG]  Agent 143 has the original local path length: 5 => Start (2,1), Goal (0,3)
[DBG]  Agent 148 has the original local path length: 13 => Start (4,0), Goal (4,4)
[DBG]  Start position: (0, 3), (0, 1), (2, 3), (3, 1), (1, 1), (2, 2), (2, 1), (4, 0), 
[DBG]  Goal position: (0, 4), (1, 4), (1, 0), (3, 0), (0, 1), (0, 4), (0, 3), (4, 4), 
[DBG]  SAT instance and solver created.
Currently solving
Instance name: scen
Map name: map
Encoding used: disappear_at_goal
SAT solver used: Kissat
Optimizing function: sum of costs
Number of agents: 8
Mks LB: 5
SoC LB: 31
Delta: 0
Remaining time: 300000 [ms]

Vertex conflict! Agents 0, 3, timestep 2, location 0
Swapping conflict! Agents 0, 3, timestep 2, edge (0,0)
Vertex conflict! Agents 0, 3, timestep 3, location 0
Swapping conflict! Agents 0, 3, timestep 3, edge (0,0)
Vertex conflict! Agents 0, 3, timestep 4, location 0
Vertex conflict! Agents 0, 4, timestep 2, location 0
Swapping conflict! Agents 0, 4, timestep 2, edge (0,0)
Vertex conflict! Agents 0, 4, timestep 3, location 0
Swapping conflict! Agents 0, 4, timestep 3, edge (0,0)
Vertex conflict! Agents 0, 4, timestep 4, location 0
Vertex conflict! Agents 3, 4, timestep 2, location 0
Swapping conflict! Agents 3, 4, timestep 2, edge (0,0)
Vertex conflict! Agents 3, 4, timestep 3, location 0
Swapping conflict! Agents 3, 4, timestep 3, edge (0,0)
Vertex conflict! Agents 3, 4, timestep 4, location 0
Found plan [agents = 8] [timesteps = 5]
Agent #0 : 2 3 0 0 0 
Agent #1 : 0 1 2 3 7 
Agent #2 : 11 10 9 8 4 
Agent #3 : 13 12 0 0 0 
Agent #4 : 5 0 0 0 0 
Agent #5 : 10 6 1 2 3 
Agent #6 : 9 5 6 1 2 
Agent #7 : 17 18 19 20 21 

[STAT] Solver returned: 0
[DBG]  Agent (index) 67 | New local path (submap idx):
[DBG]  2 3 
[DBG]  Agent (index) 71 | New local path (submap idx):
[DBG]  0 1 2 3 7 
[DBG]  Agent (index) 118 | New local path (submap idx):
[DBG]  11 10 9 8 4 
[DBG]  Agent (index) 125 | New local path (submap idx):
[DBG]  13 12 
[DBG]  Agent (index) 130 | New local path (submap idx):
[DBG]  5 0 
[DBG]  Agent (index) 140 | New local path (submap idx):
[DBG]  10 6 1 2 3 
[DBG]  Agent (index) 143 | New local path (submap idx):
[DBG]  9 5 6 1 2 
[DBG]  Agent (index) 148 | New local path (submap idx):
[DBG]  17 18 19 20 21 
[DBG]  Update the agent path 67 | Original local length: 3 | New local length: 2
[DBG]  agent 67 t=0 => decoded (sx,sy)=(0,3) => global_id=684
[DBG]  agent 67 t=1 => decoded (sx,sy)=(0,4) => global_id=685
[DBG]  Complete path of agent 67:
[DBG]    Original: 773 773 773 773 774 775 776 808 776 777 745 746 714 715 683 684 684 685 653 654 655 656 656 657 658 659 627 628 596 597 565 533 501 501 501 469 437 438 439 407 408 409 377 378 379 380 348 349 
[DBG]    New:     773 773 773 773 774 775 776 808 776 777 745 746 714 715 683 684 685 653 654 655 656 656 657 658 659 627 628 596 597 565 533 501 501 501 469 437 438 439 407 408 409 377 378 379 380 348 349 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 773 773 773 773 774 775 776 808 776 777 745 746 714 715 683 
[DBG]    Local path (in submap): 684 685 653 
[DBG]    Suffix (out of submap): 654 655 656 656 657 658 659 627 628 596 597 565 533 501 501 501 469 437 438 439 407 408 409 377 378 379 380 348 349 
[DBG]  Original agent path length 67 je: 48
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 0: 773, 773, 773, 773, 774, 775, 776, 808, 776, 777, 745, 746, 714, 715, 683, 684, 685, 653, 654, 655, 656, 656, 657, 658, 659, 627, 628, 596, 597, 565, 533, 501, 501, 501, 469, 437, 438, 439, 407, 408, 409, 377, 378, 379, 380, 348, 349, 
[DBG]  Path for agent 67 updated, resulting length: 47
[DBG]  Update the agent path 71 | Original local length: 5 | New local length: 5
[DBG]  agent 71 t=0 => decoded (sx,sy)=(0,1) => global_id=682
[DBG]  agent 71 t=1 => decoded (sx,sy)=(0,2) => global_id=683
[DBG]  agent 71 t=2 => decoded (sx,sy)=(0,3) => global_id=684
[DBG]  agent 71 t=3 => decoded (sx,sy)=(0,4) => global_id=685
[DBG]  agent 71 t=4 => decoded (sx,sy)=(1,4) => global_id=717
[DBG]  Complete path of agent 71:
[DBG]    Original: 482 483 515 547 579 611 611 612 613 645 646 647 648 649 650 682 683 684 685 717 718 750 751 783 815 847 848 849 881 882 883 884 885 917 918 919 
[DBG]    New:     482 483 515 547 579 611 611 612 613 645 646 647 648 649 650 682 683 684 685 717 718 750 751 783 815 847 848 849 881 882 883 884 885 917 918 919 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 482 483 515 547 579 611 611 612 613 645 646 647 648 649 650 
[DBG]    Local path (in submap): 682 683 684 685 717 
[DBG]    Suffix (out of submap): 718 750 751 783 815 847 848 849 881 882 883 884 885 917 918 919 
[DBG]  Original agent path length 71 je: 36
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 1: 482, 483, 515, 547, 579, 611, 611, 612, 613, 645, 646, 647, 648, 649, 650, 682, 683, 684, 685, 717, 718, 750, 751, 783, 815, 847, 848, 849, 881, 882, 883, 884, 885, 917, 918, 919, 
[DBG]  Path for agent 71 updated, resulting length: 36
[DBG]  Update the agent path 118 | Original local length: 5 | New local length: 5
[DBG]  agent 118 t=0 => decoded (sx,sy)=(2,3) => global_id=748
[DBG]  agent 118 t=1 => decoded (sx,sy)=(2,2) => global_id=747
[DBG]  agent 118 t=2 => decoded (sx,sy)=(2,1) => global_id=746
[DBG]  agent 118 t=3 => decoded (sx,sy)=(2,0) => global_id=745
[DBG]  agent 118 t=4 => decoded (sx,sy)=(1,0) => global_id=713
[DBG]  Complete path of agent 118:
[DBG]    Original: 887 886 885 884 883 851 850 849 848 847 846 845 813 781 780 748 747 746 745 713 712 680 648 647 615 583 582 550 551 519 487 486 454 422 390 358 357 325 324 323 291 259 227 
[DBG]    New:     887 886 885 884 883 851 850 849 848 847 846 845 813 781 780 748 747 746 745 713 712 680 648 647 615 583 582 550 551 519 487 486 454 422 390 358 357 325 324 323 291 259 227 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 887 886 885 884 883 851 850 849 848 847 846 845 813 781 780 
[DBG]    Local path (in submap): 748 747 746 745 713 
[DBG]    Suffix (out of submap): 712 680 648 647 615 583 582 550 551 519 487 486 454 422 390 358 357 325 324 323 291 259 227 
[DBG]  Original agent path length 118 je: 43
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 2: 887, 886, 885, 884, 883, 851, 850, 849, 848, 847, 846, 845, 813, 781, 780, 748, 747, 746, 745, 713, 712, 680, 648, 647, 615, 583, 582, 550, 551, 519, 487, 486, 454, 422, 390, 358, 357, 325, 324, 323, 291, 259, 227, 
[DBG]  Path for agent 118 updated, resulting length: 43
[DBG]  Update the agent path 125 | Original local length: 2 | New local length: 2
[DBG]  agent 125 t=0 => decoded (sx,sy)=(3,1) => global_id=778
[DBG]  agent 125 t=1 => decoded (sx,sy)=(3,0) => global_id=777
[DBG]  Complete path of agent 125:
[DBG]    Original: 430 462 494 526 525 524 556 588 587 619 651 683 682 714 746 778 777 776 775 
[DBG]    New:     430 462 494 526 525 524 556 588 587 619 651 683 682 714 746 778 777 776 775 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 430 462 494 526 525 524 556 588 587 619 651 683 682 714 746 
[DBG]    Local path (in submap): 778 777 
[DBG]    Suffix (out of submap): 776 775 
[DBG]  Original agent path length 125 je: 19
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 3: 430, 462, 494, 526, 525, 524, 556, 588, 587, 619, 651, 683, 682, 714, 746, 778, 777, 776, 775, 
[DBG]  Path for agent 125 updated, resulting length: 19
[DBG]  Update the agent path 130 | Original local length: 3 | New local length: 2
[DBG]  agent 130 t=0 => decoded (sx,sy)=(1,1) => global_id=714
[DBG]  agent 130 t=1 => decoded (sx,sy)=(0,1) => global_id=682
[DBG]  Complete path of agent 130:
[DBG]    Original: 944 912 913 881 849 848 847 846 845 844 812 780 748 747 715 714 682 682 650 649 617 617 617 649 650 651 
[DBG]    New:     944 912 913 881 849 848 847 846 845 844 812 780 748 747 715 714 682 650 649 617 617 617 649 650 651 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 944 912 913 881 849 848 847 846 845 844 812 780 748 747 715 
[DBG]    Local path (in submap): 714 682 650 
[DBG]    Suffix (out of submap): 649 617 617 617 649 650 651 
[DBG]  Original agent path length 130 je: 26
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 4: 944, 912, 913, 881, 849, 848, 847, 846, 845, 844, 812, 780, 748, 747, 715, 714, 682, 650, 649, 617, 617, 617, 649, 650, 651, 
[DBG]  Path for agent 130 updated, resulting length: 25
[DBG]  Update the agent path 140 | Original local length: 5 | New local length: 5
[DBG]  agent 140 t=0 => decoded (sx,sy)=(2,2) => global_id=747
[DBG]  agent 140 t=1 => decoded (sx,sy)=(1,2) => global_id=715
[DBG]  agent 140 t=2 => decoded (sx,sy)=(0,2) => global_id=683
[DBG]  agent 140 t=3 => decoded (sx,sy)=(0,3) => global_id=684
[DBG]  agent 140 t=4 => decoded (sx,sy)=(0,4) => global_id=685
[DBG]  Complete path of agent 140:
[DBG]    Original: 832 800 801 802 770 771 772 773 774 775 776 777 778 778 779 747 715 683 684 685 686 654 655 623 591 592 593 561 529 530 498 466 467 468 469 470 438 439 440 408 409 377 378 379 380 348 349 350 351 
[DBG]    New:     832 800 801 802 770 771 772 773 774 775 776 777 778 778 779 747 715 683 684 685 686 654 655 623 591 592 593 561 529 530 498 466 467 468 469 470 438 439 440 408 409 377 378 379 380 348 349 350 351 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 832 800 801 802 770 771 772 773 774 775 776 777 778 778 779 
[DBG]    Local path (in submap): 747 715 683 684 685 
[DBG]    Suffix (out of submap): 686 654 655 623 591 592 593 561 529 530 498 466 467 468 469 470 438 439 440 408 409 377 378 379 380 348 349 350 351 
[DBG]  Original agent path length 140 je: 49
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 5: 832, 800, 801, 802, 770, 771, 772, 773, 774, 775, 776, 777, 778, 778, 779, 747, 715, 683, 684, 685, 686, 654, 655, 623, 591, 592, 593, 561, 529, 530, 498, 466, 467, 468, 469, 470, 438, 439, 440, 408, 409, 377, 378, 379, 380, 348, 349, 350, 351, 
[DBG]  Path for agent 140 updated, resulting length: 49
[DBG]  Update the agent path 143 | Original local length: 5 | New local length: 5
[DBG]  agent 143 t=0 => decoded (sx,sy)=(2,1) => global_id=746
[DBG]  agent 143 t=1 => decoded (sx,sy)=(1,1) => global_id=714
[DBG]  agent 143 t=2 => decoded (sx,sy)=(1,2) => global_id=715
[DBG]  agent 143 t=3 => decoded (sx,sy)=(0,2) => global_id=683
[DBG]  agent 143 t=4 => decoded (sx,sy)=(0,3) => global_id=684
[DBG]  Complete path of agent 143:
[DBG]    Original: 975 975 975 975 974 942 910 909 908 876 844 812 811 779 747 746 714 715 683 684 
[DBG]    New:     975 975 975 975 974 942 910 909 908 876 844 812 811 779 747 746 714 715 683 684 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 975 975 975 975 974 942 910 909 908 876 844 812 811 779 747 
[DBG]    Local path (in submap): 746 714 715 683 684 
[DBG]    Suffix (out of submap): 
[DBG]  Original agent path length 143 je: 20
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 6: 975, 975, 975, 975, 974, 942, 910, 909, 908, 876, 844, 812, 811, 779, 747, 746, 714, 715, 683, 684, 
[DBG]  Path for agent 143 updated, resulting length: 20
[DBG]  Update the agent path 148 | Original local length: 13 | New local length: 5
[DBG]  agent 148 t=0 => decoded (sx,sy)=(4,0) => global_id=809
[DBG]  agent 148 t=1 => decoded (sx,sy)=(4,1) => global_id=810
[DBG]  agent 148 t=2 => decoded (sx,sy)=(4,2) => global_id=811
[DBG]  agent 148 t=3 => decoded (sx,sy)=(4,3) => global_id=812
[DBG]  agent 148 t=4 => decoded (sx,sy)=(4,4) => global_id=813
[DBG]  Complete path of agent 148:
[DBG]    Original: 776 776 776 776 776 776 777 777 809 809 809 809 809 809 809 809 809 777 777 745 713 714 715 747 748 780 812 813 814 782 750 718 686 687 655 656 657 658 659 660 
[DBG]    New:     776 776 776 776 776 776 777 777 809 809 809 809 809 809 809 809 810 811 812 813 814 782 750 718 686 687 655 656 657 658 659 660 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 776 776 776 776 776 776 777 777 809 809 809 809 809 809 809 
[DBG]    Local path (in submap): 809 810 811 812 813 814 782 750 718 686 687 655 656 
[DBG]    Suffix (out of submap): 657 658 659 660 
[DBG]  Original agent path length 148 je: 40
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 7: 776, 776, 776, 776, 776, 776, 777, 777, 809, 809, 809, 809, 809, 809, 809, 809, 810, 811, 812, 813, 814, 782, 750, 718, 686, 687, 655, 656, 657, 658, 659, 660, 
[DBG]  Path for agent 148 updated, resulting length: 32
[DBG]  Paths successfully updated.
[DBG]  (LNS.cpp) New path for agent 67: 
[DBG]  773, 773, 773, 773, 774, 775, 776, 808, 776, 777, 745, 746, 714, 715, 683, 684, 685, 653, 654, 655, 656, 656, 657, 658, 659, 627, 628, 596, 597, 565, 533, 501, 501, 501, 469, 437, 438, 439, 407, 408, 409, 377, 378, 379, 380, 348, 349, 
[DBG]  (LNS.cpp) New path for agent 71: 
[DBG]  482, 483, 515, 547, 579, 611, 611, 612, 613, 645, 646, 647, 648, 649, 650, 682, 683, 684, 685, 717, 718, 750, 751, 783, 815, 847, 848, 849, 881, 882, 883, 884, 885, 917, 918, 919, 
[DBG]  (LNS.cpp) New path for agent 118: 
[DBG]  887, 886, 885, 884, 883, 851, 850, 849, 848, 847, 846, 845, 813, 781, 780, 748, 747, 746, 745, 713, 712, 680, 648, 647, 615, 583, 582, 550, 551, 519, 487, 486, 454, 422, 390, 358, 357, 325, 324, 323, 291, 259, 227, 
[DBG]  (LNS.cpp) New path for agent 125: 
[DBG]  430, 462, 494, 526, 525, 524, 556, 588, 587, 619, 651, 683, 682, 714, 746, 778, 777, 776, 775, 
[DBG]  (LNS.cpp) New path for agent 130: 
[DBG]  944, 912, 913, 881, 849, 848, 847, 846, 845, 844, 812, 780, 748, 747, 715, 714, 682, 650, 649, 617, 617, 617, 649, 650, 651, 
[DBG]  (LNS.cpp) New path for agent 140: 
[DBG]  832, 800, 801, 802, 770, 771, 772, 773, 774, 775, 776, 777, 778, 778, 779, 747, 715, 683, 684, 685, 686, 654, 655, 623, 591, 592, 593, 561, 529, 530, 498, 466, 467, 468, 469, 470, 438, 439, 440, 408, 409, 377, 378, 379, 380, 348, 349, 350, 351, 
[DBG]  (LNS.cpp) New path for agent 143: 
[DBG]  975, 975, 975, 975, 974, 942, 910, 909, 908, 876, 844, 812, 811, 779, 747, 746, 714, 715, 683, 684, 
[DBG]  (LNS.cpp) New path for agent 148: 
[DBG]  776, 776, 776, 776, 776, 776, 777, 777, 809, 809, 809, 809, 809, 809, 809, 809, 810, 811, 812, 813, 814, 782, 750, 718, 686, 687, 655, 656, 657, 658, 659, 660, 
[DBG]  component_weights = {0.37784, 0.0797473, 0.0833956, 0.459017}
[DBG]  opSuccess value: 1
[STAT] neighbor.sum_of_costs before recomputation: 263
[STAT] neighbor.old_sum_of_costs before recomputation: 273
[STAT] sum_of_costs before recomputation: 4273
[DBG]  Validate solution immediately after SAT success.
[WARNING] Problem after SAT: Vertex conflict between agents 27 and 67 at location 653 at timestep 17
[DBG]  Attempting immediate repair via init_lns because problem occurred after SAT (should be applied only for conflicts...).
[DBG]  Passing 150 agents to init_lns (skip=true).
[DBG]  path_table contents for selected agents (neighbor.agents):
[DBG]    Agent 67 => controlling path length=47
[DBG]    Agent 71 => controlling path length=36
[DBG]    Agent 118 => controlling path length=43
[DBG]    Agent 125 => controlling path length=19
[DBG]    Agent 130 => controlling path length=25
[DBG]    Agent 140 => controlling path length=49
[DBG]    Agent 143 => controlling path length=20
[DBG]    Agent 148 => controlling path length=32
[DBG]  hodnota skip_initial_solution=1
[DBG]  We skip initialSolution => call buildCollisionData()
[DBG]  buildCollisionData() called â€“ skip_initial_solution case.
[DBG]  Agents.size()=150, collision_graph.size()=150
[DBG]  agent 27 => updateCollidingPairs => foundCollision
[DBG]  agent 47 => updateCollidingPairs => foundCollision
[DBG]  agent 53 => updateCollidingPairs => foundCollision
[DBG]  agent 55 => updateCollidingPairs => foundCollision
[DBG]  agent 67 => updateCollidingPairs => foundCollision
[DBG]  agent 83 => updateCollidingPairs => foundCollision
[DBG]  agent 98 => updateCollidingPairs => foundCollision
[DBG]  agent 130 => updateCollidingPairs => foundCollision
[DBG]  agent 140 => updateCollidingPairs => foundCollision
[DBG]  agent 145 => updateCollidingPairs => foundCollision
[DBG]  agent 148 => updateCollidingPairs => foundCollision
[DBG]  Conflicting agent pairs:
[DBG]  agent 27 is in conflict with agent 67
[DBG]  agent 47 is in conflict with agent 148
[DBG]  agent 53 is in conflict with agent 67
[DBG]  agent 55 is in conflict with agent 148
[DBG]  agent 67 is in conflict with agent 140
[DBG]  agent 83 is in conflict with agent 148
[DBG]  agent 98 is in conflict with agent 130
[DBG]  agent 130 is in conflict with agent 145
[DBG]  buildCollisionData() => sum_of_costs=4263, num_of_colliding_pairs=8
[DBG]  buildCollisionData done => sum_of_costs=4263, num_of_colliding_pairs=8
[DBG]  sum_of_cost hodnota: 4263
[DBG]  After skip/init build => iteration_stats.back(): sum_of_costs=4263, collisions=8
[DEBUG] Using default neighbor generation strategy for conflicts: 2
[DEBUG] Using default neighbor generation strategy for conflicts: 1
[DEBUG] Using default neighbor generation strategy for conflicts: 0
[DEBUG] Using default neighbor generation strategy for conflicts: 2
[DEBUG] Using default neighbor generation strategy for conflicts: 1
[DEBUG] Using default neighbor generation strategy for conflicts: 0
	InitLNS(PP): runtime = 0.0361118, iterations = 7, colliding pairs = 0, initial colliding pairs = 8, solution cost = 4227, initial solution cost = 4263, failed iterations = 0
[DBG]  init_lns->sum_of_costs after init_lns->run: 4227
[DBG]  sum_of_costs after assignment from init_lns->run: 4227
[DBG]  Recomputing sum_of_cost by dividing neighbor.sum_of_costs and neighbor.old_sum_of_costs
[STAT] sum_of_costs after recomputation: 4227
[STAT] Iteration 164
[DBG]  Using SAT operator (destroy+repair SAT).
[DBG]  ====================
[DBG]  SAT destroy operator called.
[DBG]  SAT heuristic: 2
[DBG]  key_agent_id: 49
[DBG]  key_agent_id global path length: 36
[DBG]  Submap content (global positions):
[DBG]  531 532 533 534 535 
[DBG]  563 564 565 566 567 
[DBG]  595 596 597 598 599 
[DBG]  627 628 629 630 631 
[DBG]  659 660 661 662 663 
[DBG]  Map content with agents and obstacles:
[DBG]  . X A A X 
[DBG]  . X A . X 
[DBG]  X . A X . 
[DBG]  . A A X . 
[DBG]  . . . X X 
[DBG]  content of the map structure that we pass to the SAT solver:
[DBG]  1  -1  1  1  -1  
[DBG]  1  -1  1  1  -1  
[DBG]  -1  1  1  -1  1  
[DBG]  1  1  1  -1  1  
[DBG]  1  1  1  -1  -1  
[DBG]  Identifying agents in a submap for rescheduling (when key_agent is there at the time 23):
[DBG]  Agent 28 found intervals in the sub-map:
[DBG]   [0..33]
[DBG]  Agent 28 (interval in submap: [0..33]) contains time 23, added to replan.
[DBG]  Agent 30 found intervals in the sub-map:
[DBG]  
[DBG]  Agent 30 is not in sub-map at time 23 (intervals: 
[DBG]  )
[DBG]  Agent 49 found intervals in the sub-map:
[DBG]   [18..25]
[DBG]  Agent 49 (interval in submap: [18..25]) contains time 23, added to replan.
[DBG]  Agent 56 found intervals in the sub-map:
[DBG]   [19..28]
[DBG]  Agent 56 (interval in submap: [19..28]) contains time 23, added to replan.
[DBG]  Agent 58 found intervals in the sub-map:
[DBG]  
[DBG]  Agent 58 is not in sub-map at time 23 (intervals: 
[DBG]  )
[DBG]  Agent 62 found intervals in the sub-map:
[DBG]   [11..24]
[DBG]  Agent 62 (interval in submap: [11..24]) contains time 23, added to replan.
[DBG]  Agent 79 found intervals in the sub-map:
[DBG]   [18..25]
[DBG]  Agent 79 (interval in submap: [18..25]) contains time 23, added to replan.
[DBG]  Agent 81 found intervals in the sub-map:
[DBG]   [21..22]
[DBG]  Agent 81 is not in sub-map at time 23 (intervals: 
[DBG]  [21..22] )
[DBG]  Agent 114 found intervals in the sub-map:
[DBG]   [15..23]
[DBG]  Agent 114 (interval in submap: [15..23]) contains time 23, added to replan.
[DBG]  Agent 144 found intervals in the sub-map:
[DBG]   [34..35]
[DBG]  Agent 144 is not in sub-map at time 23 (intervals: 
[DBG]  [34..35] )
[DBG]  Agent 28 | Start (global): 629 -> (local): (3, 2) at time 23 | Goal (global): 659 -> (local): (4, 0) at time 33
[DBG]  Agent 49 | Start (global): 597 -> (local): (2, 2) at time 23 | Goal (global): 533 -> (local): (0, 2) at time 25
[DBG]  Agent 56 | Start (global): 628 -> (local): (3, 1) at time 23 | Goal (global): 534 -> (local): (0, 3) at time 28
[DBG]  Agent 62 | Start (global): 533 -> (local): (0, 2) at time 23 | Goal (global): 534 -> (local): (0, 3) at time 24
[DBG]  Agent 79 | Start (global): 565 -> (local): (1, 2) at time 23 | Goal (global): 534 -> (local): (0, 3) at time 25
[DBG]  Agent 114 | Start (global): 534 -> (local): (0, 3) at time 23 | Goal (global): 534 -> (local): (0, 3) at time 23
[DBG]  [REPAIR] SAT destroy operator called.
[DBG]  [REPAIR] SAT operator â€“ launching subproblem FOR OPTIMIZATION.
[DBG]  Creating local paths (sx, sy) in the submap for T_sync = 23
[DBG]    Agent 28 (global paths from T=23 to 33) has local path: (3,2) (3,2) (3,2) (3,2) (3,2) (3,1) (3,0) (3,0) (3,0) (3,0) (4,0) 
[DBG]    Agent 49 (global paths from T=23 to 25) has local path: (2,2) (1,2) (0,2) 
[DBG]    Agent 56 (global paths from T=23 to 28) has local path: (3,1) (2,1) (2,2) (1,2) (0,2) (0,3) 
[DBG]    Agent 62 (global paths from T=23 to 24) has local path: (0,2) (0,3) 
[DBG]    Agent 79 (global paths from T=23 to 25) has local path: (1,2) (1,3) (0,3) 
[DBG]    Agent 114 (global paths from T=23 to 23) has local path: (0,3) 
[DBG]  Checking input data for SAT solver:
[DBG]    - Number of agents to replan: 6
[DBG]  Agent 28 has the original local path length: 11 => Start (3,2), Goal (4,0)
[DBG]  Agent 49 has the original local path length: 3 => Start (2,2), Goal (0,2)
[DBG]  Agent 56 has the original local path length: 6 => Start (3,1), Goal (0,3)
[DBG]  Agent 62 has the original local path length: 2 => Start (0,2), Goal (0,3)
[DBG]  Agent 79 has the original local path length: 3 => Start (1,2), Goal (0,3)
[DBG]  Agent 114 has the original local path length: 1 => Start (0,3), Goal (0,3)
[DBG]  Start position: (3, 2), (2, 2), (3, 1), (0, 2), (1, 2), (0, 3), 
[DBG]  Goal position: (4, 0), (0, 2), (0, 3), (0, 3), (0, 3), (0, 3), 
[DBG]  SAT instance and solver created.
Currently solving
Instance name: scen
Map name: map
Encoding used: disappear_at_goal
SAT solver used: Kissat
Optimizing function: sum of costs
Number of agents: 6
Mks LB: 6
SoC LB: 19
Delta: 0
Remaining time: 300000 [ms]

Vertex conflict! Agents 0, 1, timestep 4, location 0
Swapping conflict! Agents 0, 1, timestep 4, edge (0,0)
Vertex conflict! Agents 0, 1, timestep 5, location 0
Vertex conflict! Agents 0, 3, timestep 4, location 0
Swapping conflict! Agents 0, 3, timestep 4, edge (0,0)
Vertex conflict! Agents 0, 3, timestep 5, location 0
Vertex conflict! Agents 0, 4, timestep 4, location 0
Swapping conflict! Agents 0, 4, timestep 4, edge (0,0)
Vertex conflict! Agents 0, 4, timestep 5, location 0
Vertex conflict! Agents 0, 5, timestep 4, location 0
Swapping conflict! Agents 0, 5, timestep 4, edge (0,0)
Vertex conflict! Agents 0, 5, timestep 5, location 0
Vertex conflict! Agents 1, 3, timestep 3, location 0
Swapping conflict! Agents 1, 3, timestep 3, edge (0,0)
Vertex conflict! Agents 1, 3, timestep 4, location 0
Swapping conflict! Agents 1, 3, timestep 4, edge (0,0)
Vertex conflict! Agents 1, 3, timestep 5, location 0
Vertex conflict! Agents 1, 4, timestep 3, location 0
Swapping conflict! Agents 1, 4, timestep 3, edge (0,0)
Vertex conflict! Agents 1, 4, timestep 4, location 0
Swapping conflict! Agents 1, 4, timestep 4, edge (0,0)
Vertex conflict! Agents 1, 4, timestep 5, location 0
Vertex conflict! Agents 1, 5, timestep 3, location 0
Swapping conflict! Agents 1, 5, timestep 3, edge (0,0)
Vertex conflict! Agents 1, 5, timestep 4, location 0
Swapping conflict! Agents 1, 5, timestep 4, edge (0,0)
Vertex conflict! Agents 1, 5, timestep 5, location 0
Vertex conflict! Agents 3, 4, timestep 3, location 0
Swapping conflict! Agents 3, 4, timestep 3, edge (0,0)
Vertex conflict! Agents 3, 4, timestep 4, location 0
Swapping conflict! Agents 3, 4, timestep 4, edge (0,0)
Vertex conflict! Agents 3, 4, timestep 5, location 0
Vertex conflict! Agents 3, 5, timestep 2, location 0
Swapping conflict! Agents 3, 5, timestep 2, edge (0,0)
Vertex conflict! Agents 3, 5, timestep 3, location 0
Swapping conflict! Agents 3, 5, timestep 3, edge (0,0)
Vertex conflict! Agents 3, 5, timestep 4, location 0
Swapping conflict! Agents 3, 5, timestep 4, edge (0,0)
Vertex conflict! Agents 3, 5, timestep 5, location 0
Vertex conflict! Agents 4, 5, timestep 3, location 0
Swapping conflict! Agents 4, 5, timestep 3, edge (0,0)
Vertex conflict! Agents 4, 5, timestep 4, location 0
Swapping conflict! Agents 4, 5, timestep 4, edge (0,0)
Vertex conflict! Agents 4, 5, timestep 5, location 0
Found plan [agents = 6] [timesteps = 6]
Agent #0 : 11 15 14 13 0 0 
Agent #1 : 7 4 1 0 0 0 
Agent #2 : 10 11 7 4 5 2 
Agent #3 : 1 2 0 0 0 0 
Agent #4 : 4 5 2 0 0 0 
Agent #5 : 2 0 0 0 0 0 

[STAT] Solver returned: 0
[DBG]  Agent (index) 28 | New local path (submap idx):
[DBG]  11 15 14 13 
[DBG]  Agent (index) 49 | New local path (submap idx):
[DBG]  7 4 1 
[DBG]  Agent (index) 56 | New local path (submap idx):
[DBG]  10 11 7 4 5 2 
[DBG]  Agent (index) 62 | New local path (submap idx):
[DBG]  1 2 
[DBG]  Agent (index) 79 | New local path (submap idx):
[DBG]  4 5 2 
[DBG]  Agent (index) 114 | New local path (submap idx):
[DBG]  2 
[DBG]  Update the agent path 28 | Original local length: 11 | New local length: 4
[DBG]  agent 28 t=0 => decoded (sx,sy)=(3,2) => global_id=629
[DBG]  agent 28 t=1 => decoded (sx,sy)=(4,2) => global_id=661
[DBG]  agent 28 t=2 => decoded (sx,sy)=(4,1) => global_id=660
[DBG]  agent 28 t=3 => decoded (sx,sy)=(4,0) => global_id=659
[DBG]  Complete path of agent 28:
[DBG]    Original: 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 629 629 629 629 629 628 627 627 627 627 659 691 692 724 725 726 727 
[DBG]    New:     661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 629 661 660 659 691 692 724 725 726 727 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 
[DBG]    Local path (in submap): 629 661 660 659 691 692 724 725 726 727 
[DBG]    Suffix (out of submap): 
[DBG]  Original agent path length 28 je: 40
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 0: 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 629, 661, 660, 659, 691, 692, 724, 725, 726, 727, 
[DBG]  Path for agent 28 updated, resulting length: 33
[DBG]  Update the agent path 49 | Original local length: 3 | New local length: 3
[DBG]  agent 49 t=0 => decoded (sx,sy)=(2,2) => global_id=597
[DBG]  agent 49 t=1 => decoded (sx,sy)=(1,2) => global_id=565
[DBG]  agent 49 t=2 => decoded (sx,sy)=(0,2) => global_id=533
[DBG]  Complete path of agent 49:
[DBG]    Original: 984 983 982 950 918 886 854 854 854 822 821 820 788 787 788 756 724 692 660 628 596 597 629 597 565 533 501 469 468 467 466 465 464 432 400 368 
[DBG]    New:     984 983 982 950 918 886 854 854 854 822 821 820 788 787 788 756 724 692 660 628 596 597 629 597 565 533 501 469 468 467 466 465 464 432 400 368 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 984 983 982 950 918 886 854 854 854 822 821 820 788 787 788 756 724 692 660 628 596 597 629 
[DBG]    Local path (in submap): 597 565 533 
[DBG]    Suffix (out of submap): 501 469 468 467 466 465 464 432 400 368 
[DBG]  Original agent path length 49 je: 36
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 1: 984, 983, 982, 950, 918, 886, 854, 854, 854, 822, 821, 820, 788, 787, 788, 756, 724, 692, 660, 628, 596, 597, 629, 597, 565, 533, 501, 469, 468, 467, 466, 465, 464, 432, 400, 368, 
[DBG]  Path for agent 49 updated, resulting length: 36
[DBG]  Update the agent path 56 | Original local length: 6 | New local length: 6
[DBG]  agent 56 t=0 => decoded (sx,sy)=(3,1) => global_id=628
[DBG]  agent 56 t=1 => decoded (sx,sy)=(3,2) => global_id=629
[DBG]  agent 56 t=2 => decoded (sx,sy)=(2,2) => global_id=597
[DBG]  agent 56 t=3 => decoded (sx,sy)=(1,2) => global_id=565
[DBG]  agent 56 t=4 => decoded (sx,sy)=(1,3) => global_id=566
[DBG]  agent 56 t=5 => decoded (sx,sy)=(0,3) => global_id=534
[DBG]  Complete path of agent 56:
[DBG]    Original: 805 806 807 808 809 810 811 812 813 814 815 783 784 752 720 688 689 657 658 659 627 627 627 628 596 597 565 533 534 502 470 470 438 439 407 408 409 377 378 379 380 348 349 350 351 319 287 255 
[DBG]    New:     805 806 807 808 809 810 811 812 813 814 815 783 784 752 720 688 689 657 658 659 627 627 627 628 629 597 565 566 534 502 470 470 438 439 407 408 409 377 378 379 380 348 349 350 351 319 287 255 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 805 806 807 808 809 810 811 812 813 814 815 783 784 752 720 688 689 657 658 659 627 627 627 
[DBG]    Local path (in submap): 628 629 597 565 566 534 
[DBG]    Suffix (out of submap): 502 470 470 438 439 407 408 409 377 378 379 380 348 349 350 351 319 287 255 
[DBG]  Original agent path length 56 je: 48
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 2: 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 783, 784, 752, 720, 688, 689, 657, 658, 659, 627, 627, 627, 628, 629, 597, 565, 566, 534, 502, 470, 470, 438, 439, 407, 408, 409, 377, 378, 379, 380, 348, 349, 350, 351, 319, 287, 255, 
[DBG]  Path for agent 56 updated, resulting length: 48
[DBG]  Update the agent path 62 | Original local length: 2 | New local length: 2
[DBG]  agent 62 t=0 => decoded (sx,sy)=(0,2) => global_id=533
[DBG]  agent 62 t=1 => decoded (sx,sy)=(0,3) => global_id=534
[DBG]  Complete path of agent 62:
[DBG]    Original: 753 721 721 689 689 689 689 689 689 657 658 659 627 628 596 597 565 566 534 533 533 533 533 533 534 502 470 470 470 438 438 406 
[DBG]    New:     753 721 721 689 689 689 689 689 689 657 658 659 627 628 596 597 565 566 534 533 533 533 533 533 534 502 470 470 470 438 438 406 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 753 721 721 689 689 689 689 689 689 657 658 659 627 628 596 597 565 566 534 533 533 533 533 
[DBG]    Local path (in submap): 533 534 
[DBG]    Suffix (out of submap): 502 470 470 470 438 438 406 
[DBG]  Original agent path length 62 je: 32
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 3: 753, 721, 721, 689, 689, 689, 689, 689, 689, 657, 658, 659, 627, 628, 596, 597, 565, 566, 534, 533, 533, 533, 533, 533, 534, 502, 470, 470, 470, 438, 438, 406, 
[DBG]  Path for agent 62 updated, resulting length: 32
[DBG]  Update the agent path 79 | Original local length: 3 | New local length: 3
[DBG]  agent 79 t=0 => decoded (sx,sy)=(1,2) => global_id=565
[DBG]  agent 79 t=1 => decoded (sx,sy)=(1,3) => global_id=566
[DBG]  agent 79 t=2 => decoded (sx,sy)=(0,3) => global_id=534
[DBG]  Complete path of agent 79:
[DBG]    Original: 1004 1005 973 974 942 910 878 879 847 815 783 751 752 720 688 656 657 658 659 627 628 596 597 565 566 534 502 503 504 472 473 441 409 377 345 313 281 249 217 218 186 154 122 123 
[DBG]    New:     1004 1005 973 974 942 910 878 879 847 815 783 751 752 720 688 656 657 658 659 627 628 596 597 565 566 534 502 503 504 472 473 441 409 377 345 313 281 249 217 218 186 154 122 123 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 1004 1005 973 974 942 910 878 879 847 815 783 751 752 720 688 656 657 658 659 627 628 596 597 
[DBG]    Local path (in submap): 565 566 534 
[DBG]    Suffix (out of submap): 502 503 504 472 473 441 409 377 345 313 281 249 217 218 186 154 122 123 
[DBG]  Original agent path length 79 je: 44
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 4: 1004, 1005, 973, 974, 942, 910, 878, 879, 847, 815, 783, 751, 752, 720, 688, 656, 657, 658, 659, 627, 628, 596, 597, 565, 566, 534, 502, 503, 504, 472, 473, 441, 409, 377, 345, 313, 281, 249, 217, 218, 186, 154, 122, 123, 
[DBG]  Path for agent 79 updated, resulting length: 44
[DBG]  Update the agent path 114 | Original local length: 1 | New local length: 1
[DBG]  agent 114 t=0 => decoded (sx,sy)=(0,3) => global_id=534
[DBG]  Complete path of agent 114:
[DBG]    Original: 875 876 844 812 780 781 782 783 784 752 720 688 689 657 658 659 627 628 596 596 597 565 566 534 502 470 438 406 407 408 409 377 345 313 314 314 313 281 249 217 185 153 154 
[DBG]    New:     875 876 844 812 780 781 782 783 784 752 720 688 689 657 658 659 627 628 596 596 597 565 566 534 502 470 438 406 407 408 409 377 345 313 314 314 313 281 249 217 185 153 154 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 875 876 844 812 780 781 782 783 784 752 720 688 689 657 658 659 627 628 596 596 597 565 566 
[DBG]    Local path (in submap): 534 
[DBG]    Suffix (out of submap): 502 470 438 406 407 408 409 377 345 313 314 314 313 281 249 217 185 153 154 
[DBG]  Original agent path length 114 je: 43
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 5: 875, 876, 844, 812, 780, 781, 782, 783, 784, 752, 720, 688, 689, 657, 658, 659, 627, 628, 596, 596, 597, 565, 566, 534, 502, 470, 438, 406, 407, 408, 409, 377, 345, 313, 314, 314, 313, 281, 249, 217, 185, 153, 154, 
[DBG]  Path for agent 114 updated, resulting length: 43
[DBG]  Paths successfully updated.
[DBG]  (LNS.cpp) New path for agent 28: 
[DBG]  661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 629, 661, 660, 659, 691, 692, 724, 725, 726, 727, 
[DBG]  (LNS.cpp) New path for agent 49: 
[DBG]  984, 983, 982, 950, 918, 886, 854, 854, 854, 822, 821, 820, 788, 787, 788, 756, 724, 692, 660, 628, 596, 597, 629, 597, 565, 533, 501, 469, 468, 467, 466, 465, 464, 432, 400, 368, 
[DBG]  (LNS.cpp) New path for agent 56: 
[DBG]  805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 783, 784, 752, 720, 688, 689, 657, 658, 659, 627, 627, 627, 628, 629, 597, 565, 566, 534, 502, 470, 470, 438, 439, 407, 408, 409, 377, 378, 379, 380, 348, 349, 350, 351, 319, 287, 255, 
[DBG]  (LNS.cpp) New path for agent 62: 
[DBG]  753, 721, 721, 689, 689, 689, 689, 689, 689, 657, 658, 659, 627, 628, 596, 597, 565, 566, 534, 533, 533, 533, 533, 533, 534, 502, 470, 470, 470, 438, 438, 406, 
[DBG]  (LNS.cpp) New path for agent 79: 
[DBG]  1004, 1005, 973, 974, 942, 910, 878, 879, 847, 815, 783, 751, 752, 720, 688, 656, 657, 658, 659, 627, 628, 596, 597, 565, 566, 534, 502, 503, 504, 472, 473, 441, 409, 377, 345, 313, 281, 249, 217, 218, 186, 154, 122, 123, 
[DBG]  (LNS.cpp) New path for agent 114: 
[DBG]  875, 876, 844, 812, 780, 781, 782, 783, 784, 752, 720, 688, 689, 657, 658, 659, 627, 628, 596, 596, 597, 565, 566, 534, 502, 470, 438, 406, 407, 408, 409, 377, 345, 313, 314, 314, 313, 281, 249, 217, 185, 153, 154, 
[DBG]  component_weights = {0.374282, 0.0789963, 0.0826103, 0.464111}
[DBG]  opSuccess value: 1
[STAT] neighbor.sum_of_costs before recomputation: 230
[STAT] neighbor.old_sum_of_costs before recomputation: 237
[STAT] sum_of_costs before recomputation: 4227
[DBG]  Validate solution immediately after SAT success.
[WARNING] Problem after SAT: Target conflict: agent 42 (len 39) traverses target of agent 28 (len 32) at location 727 at timestep 38
[DBG]  Attempting immediate repair via init_lns because problem occurred after SAT (should be applied only for conflicts...).
[DBG]  Passing 150 agents to init_lns (skip=true).
[DBG]  path_table contents for selected agents (neighbor.agents):
[DBG]    Agent 28 => controlling path length=33
[DBG]    Agent 49 => controlling path length=36
[DBG]    Agent 56 => controlling path length=48
[DBG]    Agent 62 => controlling path length=32
[DBG]    Agent 79 => controlling path length=44
[DBG]    Agent 114 => controlling path length=43
[DBG]  hodnota skip_initial_solution=1
[DBG]  We skip initialSolution => call buildCollisionData()
[DBG]  buildCollisionData() called â€“ skip_initial_solution case.
[DBG]  Agents.size()=150, collision_graph.size()=150
[DBG]  agent 28 => updateCollidingPairs => foundCollision
[DBG]  agent 42 => updateCollidingPairs => foundCollision
[DBG]  agent 53 => updateCollidingPairs => foundCollision
[DBG]  Conflicting agent pairs:
[DBG]  agent 28 is in conflict with agent 42
[DBG]  agent 28 is in conflict with agent 53
[DBG]  buildCollisionData() => sum_of_costs=4220, num_of_colliding_pairs=2
[DBG]  buildCollisionData done => sum_of_costs=4220, num_of_colliding_pairs=2
[DBG]  sum_of_cost hodnota: 4220
[DBG]  After skip/init build => iteration_stats.back(): sum_of_costs=4220, collisions=2
[DEBUG] Using default neighbor generation strategy for conflicts: 0
	InitLNS(PP): runtime = 0.00135604, iterations = 2, colliding pairs = 0, initial colliding pairs = 2, solution cost = 4227, initial solution cost = 4220, failed iterations = 0
[DBG]  init_lns->sum_of_costs after init_lns->run: 4227
[DBG]  sum_of_costs after assignment from init_lns->run: 4227
[DBG]  Recomputing sum_of_cost by dividing neighbor.sum_of_costs and neighbor.old_sum_of_costs
[STAT] sum_of_costs after recomputation: 4227
[STAT] Iteration 165
[DBG]  Using SAT operator (destroy+repair SAT).
[DBG]  ====================
[DBG]  SAT destroy operator called.
[DBG]  SAT heuristic: 2
[DBG]  key_agent_id: 77
[DBG]  key_agent_id global path length: 29
[DBG]  Submap content (global positions):
[DBG]  569 570 571 572 573 
[DBG]  601 602 603 604 605 
[DBG]  633 634 635 636 637 
[DBG]  665 666 667 668 669 
[DBG]  697 698 699 700 701 
[DBG]  Map content with agents and obstacles:
[DBG]  . . . A X 
[DBG]  A A . A X 
[DBG]  . X A A . 
[DBG]  X . . . X 
[DBG]  . X X X . 
[DBG]  content of the map structure that we pass to the SAT solver:
[DBG]  1  1  1  1  -1  
[DBG]  1  1  1  1  -1  
[DBG]  1  -1  1  1  1  
[DBG]  -1  1  1  1  -1  
[DBG]  1  -1  -1  -1  1  
[DBG]  Identifying agents in a submap for rescheduling (when key_agent is there at the time 14):
[DBG]  Agent 17 found intervals in the sub-map:
[DBG]   [2..10] [15..20]
[DBG]  Agent 17 is not in sub-map at time 14 (intervals: 
[DBG]  [2..10] [15..20] )
[DBG]  Agent 24 found intervals in the sub-map:
[DBG]   [18..18]
[DBG]  Agent 24 is not in sub-map at time 14 (intervals: 
[DBG]  [18..18] )
[DBG]  Agent 25 found intervals in the sub-map:
[DBG]   [8..8] [12..15]
[DBG]  Agent 25 (interval in submap: [12..15]) contains time 14, added to replan.
[DBG]  Agent 46 found intervals in the sub-map:
[DBG]   [12..15]
[DBG]  Agent 46 (interval in submap: [12..15]) contains time 14, added to replan.
[DBG]  Agent 58 found intervals in the sub-map:
[DBG]   [12..12] [16..19]
[DBG]  Agent 58 is not in sub-map at time 14 (intervals: 
[DBG]  [12..12] [16..19] )
[DBG]  Agent 77 found intervals in the sub-map:
[DBG]   [11..21] [25..25]
[DBG]  Agent 77 (interval in submap: [11..21]) contains time 14, added to replan.
[DBG]  Agent 91 found intervals in the sub-map:
[DBG]   [14..16]
[DBG]  Agent 91 (interval in submap: [14..16]) contains time 14, added to replan.
[DBG]  Agent 119 found intervals in the sub-map:
[DBG]   [7..7] [11..14]
[DBG]  Agent 119 (interval in submap: [11..14]) contains time 14, added to replan.
[DBG]  Agent 133 found intervals in the sub-map:
[DBG]   [9..9] [13..18]
[DBG]  Agent 133 (interval in submap: [13..18]) contains time 14, added to replan.
[DBG]  Agent 142 found intervals in the sub-map:
[DBG]   [21..25]
[DBG]  Agent 142 is not in sub-map at time 14 (intervals: 
[DBG]  [21..25] )
[DBG]  Agent 25 | Start (global): 604 -> (local): (1, 3) at time 14 | Goal (global): 572 -> (local): (0, 3) at time 15
[DBG]  Agent 46 | Start (global): 602 -> (local): (1, 1) at time 14 | Goal (global): 570 -> (local): (0, 1) at time 15
[DBG]  Agent 77 | Start (global): 635 -> (local): (2, 2) at time 14 | Goal (global): 637 -> (local): (2, 4) at time 21
[DBG]  Agent 91 | Start (global): 601 -> (local): (1, 0) at time 14 | Goal (global): 570 -> (local): (0, 1) at time 16
[DBG]  Agent 119 | Start (global): 572 -> (local): (0, 3) at time 14 | Goal (global): 572 -> (local): (0, 3) at time 14
[DBG]  Agent 133 | Start (global): 636 -> (local): (2, 3) at time 14 | Goal (global): 570 -> (local): (0, 1) at time 18
[DBG]  [REPAIR] SAT destroy operator called.
[DBG]  [REPAIR] SAT operator â€“ launching subproblem FOR OPTIMIZATION.
[DBG]  Creating local paths (sx, sy) in the submap for T_sync = 14
[DBG]    Agent 25 (global paths from T=14 to 15) has local path: (1,3) (0,3) 
[DBG]    Agent 46 (global paths from T=14 to 15) has local path: (1,1) (0,1) 
[DBG]    Agent 77 (global paths from T=14 to 21) has local path: (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,3) (2,4) 
[DBG]    Agent 91 (global paths from T=14 to 16) has local path: (1,0) (0,0) (0,1) 
[DBG]    Agent 119 (global paths from T=14 to 14) has local path: (0,3) 
[DBG]    Agent 133 (global paths from T=14 to 18) has local path: (2,3) (1,3) (0,3) (0,2) (0,1) 
[DBG]  Checking input data for SAT solver:
[DBG]    - Number of agents to replan: 6
[DBG]  Agent 25 has the original local path length: 2 => Start (1,3), Goal (0,3)
[DBG]  Agent 46 has the original local path length: 2 => Start (1,1), Goal (0,1)
[DBG]  Agent 77 has the original local path length: 8 => Start (2,2), Goal (2,4)
[DBG]  Agent 91 has the original local path length: 3 => Start (1,0), Goal (0,1)
[DBG]  Agent 119 has the original local path length: 1 => Start (0,3), Goal (0,3)
[DBG]  Agent 133 has the original local path length: 5 => Start (2,3), Goal (0,1)
[DBG]  Start position: (1, 3), (1, 1), (2, 2), (1, 0), (0, 3), (2, 3), 
[DBG]  Goal position: (0, 3), (0, 1), (2, 4), (0, 1), (0, 3), (0, 1), 
[DBG]  SAT instance and solver created.
Currently solving
Instance name: scen
Map name: map
Encoding used: disappear_at_goal
SAT solver used: Kissat
Optimizing function: sum of costs
Number of agents: 6
Mks LB: 5
SoC LB: 16
Delta: 0
Remaining time: 300000 [ms]

Vertex conflict! Agents 0, 1, timestep 2, location 0
Swapping conflict! Agents 0, 1, timestep 2, edge (0,0)
Vertex conflict! Agents 0, 1, timestep 3, location 0
Swapping conflict! Agents 0, 1, timestep 3, edge (0,0)
Vertex conflict! Agents 0, 1, timestep 4, location 0
Vertex conflict! Agents 0, 2, timestep 3, location 0
Swapping conflict! Agents 0, 2, timestep 3, edge (0,0)
Vertex conflict! Agents 0, 2, timestep 4, location 0
Vertex conflict! Agents 0, 3, timestep 3, location 0
Swapping conflict! Agents 0, 3, timestep 3, edge (0,0)
Vertex conflict! Agents 0, 3, timestep 4, location 0
Vertex conflict! Agents 0, 4, timestep 2, location 0
Swapping conflict! Agents 0, 4, timestep 2, edge (0,0)
Vertex conflict! Agents 0, 4, timestep 3, location 0
Swapping conflict! Agents 0, 4, timestep 3, edge (0,0)
Vertex conflict! Agents 0, 4, timestep 4, location 0
Vertex conflict! Agents 1, 2, timestep 3, location 0
Swapping conflict! Agents 1, 2, timestep 3, edge (0,0)
Vertex conflict! Agents 1, 2, timestep 4, location 0
Vertex conflict! Agents 1, 3, timestep 3, location 0
Swapping conflict! Agents 1, 3, timestep 3, edge (0,0)
Vertex conflict! Agents 1, 3, timestep 4, location 0
Vertex conflict! Agents 1, 4, timestep 2, location 0
Swapping conflict! Agents 1, 4, timestep 2, edge (0,0)
Vertex conflict! Agents 1, 4, timestep 3, location 0
Swapping conflict! Agents 1, 4, timestep 3, edge (0,0)
Vertex conflict! Agents 1, 4, timestep 4, location 0
Vertex conflict! Agents 2, 3, timestep 3, location 0
Swapping conflict! Agents 2, 3, timestep 3, edge (0,0)
Vertex conflict! Agents 2, 3, timestep 4, location 0
Vertex conflict! Agents 2, 4, timestep 3, location 0
Swapping conflict! Agents 2, 4, timestep 3, edge (0,0)
Vertex conflict! Agents 2, 4, timestep 4, location 0
Vertex conflict! Agents 3, 4, timestep 3, location 0
Swapping conflict! Agents 3, 4, timestep 3, edge (0,0)
Vertex conflict! Agents 3, 4, timestep 4, location 0
Found plan [agents = 6] [timesteps = 5]
Agent #0 : 7 3 0 0 0 
Agent #1 : 5 1 0 0 0 
Agent #2 : 9 10 11 0 0 
Agent #3 : 4 5 1 0 0 
Agent #4 : 3 0 0 0 0 
Agent #5 : 10 7 6 5 1 

[STAT] Solver returned: 0
[DBG]  Agent (index) 25 | New local path (submap idx):
[DBG]  7 3 
[DBG]  Agent (index) 46 | New local path (submap idx):
[DBG]  5 1 
[DBG]  Agent (index) 77 | New local path (submap idx):
[DBG]  9 10 11 
[DBG]  Agent (index) 91 | New local path (submap idx):
[DBG]  4 5 1 
[DBG]  Agent (index) 119 | New local path (submap idx):
[DBG]  3 
[DBG]  Agent (index) 133 | New local path (submap idx):
[DBG]  10 7 6 5 1 
[DBG]  Update the agent path 25 | Original local length: 2 | New local length: 2
[DBG]  agent 25 t=0 => decoded (sx,sy)=(1,3) => global_id=604
[DBG]  agent 25 t=1 => decoded (sx,sy)=(0,3) => global_id=572
[DBG]  Complete path of agent 25:
[DBG]    Original: 895 894 862 861 829 797 765 733 701 702 670 638 637 636 604 572 540 508 509 477 445 413 381 349 317 285 284 252 220 221 189 157 158 159 
[DBG]    New:     895 894 862 861 829 797 765 733 701 702 670 638 637 636 604 572 540 508 509 477 445 413 381 349 317 285 284 252 220 221 189 157 158 159 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 895 894 862 861 829 797 765 733 701 702 670 638 637 636 
[DBG]    Local path (in submap): 604 572 
[DBG]    Suffix (out of submap): 540 508 509 477 445 413 381 349 317 285 284 252 220 221 189 157 158 159 
[DBG]  Original agent path length 25 je: 34
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 0: 895, 894, 862, 861, 829, 797, 765, 733, 701, 702, 670, 638, 637, 636, 604, 572, 540, 508, 509, 477, 445, 413, 381, 349, 317, 285, 284, 252, 220, 221, 189, 157, 158, 159, 
[DBG]  Path for agent 25 updated, resulting length: 34
[DBG]  Update the agent path 46 | Original local length: 2 | New local length: 2
[DBG]  agent 46 t=0 => decoded (sx,sy)=(1,1) => global_id=602
[DBG]  agent 46 t=1 => decoded (sx,sy)=(0,1) => global_id=570
[DBG]  Complete path of agent 46:
[DBG]    Original: 786 787 788 756 724 725 726 727 728 696 664 632 633 601 602 570 538 506 474 475 443 411 412 413 381 349 317 285 284 252 
[DBG]    New:     786 787 788 756 724 725 726 727 728 696 664 632 633 601 602 570 538 506 474 475 443 411 412 413 381 349 317 285 284 252 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 786 787 788 756 724 725 726 727 728 696 664 632 633 601 
[DBG]    Local path (in submap): 602 570 
[DBG]    Suffix (out of submap): 538 506 474 475 443 411 412 413 381 349 317 285 284 252 
[DBG]  Original agent path length 46 je: 30
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 1: 786, 787, 788, 756, 724, 725, 726, 727, 728, 696, 664, 632, 633, 601, 602, 570, 538, 506, 474, 475, 443, 411, 412, 413, 381, 349, 317, 285, 284, 252, 
[DBG]  Path for agent 46 updated, resulting length: 30
[DBG]  Update the agent path 77 | Original local length: 8 | New local length: 3
[DBG]  agent 77 t=0 => decoded (sx,sy)=(2,2) => global_id=635
[DBG]  agent 77 t=1 => decoded (sx,sy)=(2,3) => global_id=636
[DBG]  agent 77 t=2 => decoded (sx,sy)=(2,4) => global_id=637
[DBG]  Complete path of agent 77:
[DBG]    Original: 319 351 383 415 447 479 478 510 509 541 540 572 604 603 635 635 635 635 635 635 636 637 638 670 702 701 733 732 731 
[DBG]    New:     319 351 383 415 447 479 478 510 509 541 540 572 604 603 635 636 637 638 670 702 701 733 732 731 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 319 351 383 415 447 479 478 510 509 541 540 572 604 603 
[DBG]    Local path (in submap): 635 636 637 638 670 702 701 733 
[DBG]    Suffix (out of submap): 732 731 
[DBG]  Original agent path length 77 je: 29
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 2: 319, 351, 383, 415, 447, 479, 478, 510, 509, 541, 540, 572, 604, 603, 635, 636, 637, 638, 670, 702, 701, 733, 732, 731, 
[DBG]  Path for agent 77 updated, resulting length: 24
[DBG]  Update the agent path 91 | Original local length: 3 | New local length: 3
[DBG]  agent 91 t=0 => decoded (sx,sy)=(1,0) => global_id=601
[DBG]  agent 91 t=1 => decoded (sx,sy)=(1,1) => global_id=602
[DBG]  agent 91 t=2 => decoded (sx,sy)=(0,1) => global_id=570
[DBG]  Complete path of agent 91:
[DBG]    Original: 787 755 755 755 756 757 725 726 727 728 696 664 632 600 601 569 570 538 539 540 541 509 477 445 413 381 
[DBG]    New:     787 755 755 755 756 757 725 726 727 728 696 664 632 600 601 602 570 538 539 540 541 509 477 445 413 381 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 787 755 755 755 756 757 725 726 727 728 696 664 632 600 
[DBG]    Local path (in submap): 601 602 570 
[DBG]    Suffix (out of submap): 538 539 540 541 509 477 445 413 381 
[DBG]  Original agent path length 91 je: 26
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 3: 787, 755, 755, 755, 756, 757, 725, 726, 727, 728, 696, 664, 632, 600, 601, 602, 570, 538, 539, 540, 541, 509, 477, 445, 413, 381, 
[DBG]  Path for agent 91 updated, resulting length: 26
[DBG]  Update the agent path 119 | Original local length: 1 | New local length: 1
[DBG]  agent 119 t=0 => decoded (sx,sy)=(0,3) => global_id=572
[DBG]  Complete path of agent 119:
[DBG]    Original: 861 860 861 829 797 765 733 701 702 670 638 637 636 604 572 540 508 507 506 505 473 472 440 408 376 344 312 313 281 249 248 247 215 214 213 212 244 243 242 241 240 239 207 206 205 204 172 140 
[DBG]    New:     861 860 861 829 797 765 733 701 702 670 638 637 636 604 572 540 508 507 506 505 473 472 440 408 376 344 312 313 281 249 248 247 215 214 213 212 244 243 242 241 240 239 207 206 205 204 172 140 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 861 860 861 829 797 765 733 701 702 670 638 637 636 604 
[DBG]    Local path (in submap): 572 
[DBG]    Suffix (out of submap): 540 508 507 506 505 473 472 440 408 376 344 312 313 281 249 248 247 215 214 213 212 244 243 242 241 240 239 207 206 205 204 172 140 
[DBG]  Original agent path length 119 je: 48
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 4: 861, 860, 861, 829, 797, 765, 733, 701, 702, 670, 638, 637, 636, 604, 572, 540, 508, 507, 506, 505, 473, 472, 440, 408, 376, 344, 312, 313, 281, 249, 248, 247, 215, 214, 213, 212, 244, 243, 242, 241, 240, 239, 207, 206, 205, 204, 172, 140, 
[DBG]  Path for agent 119 updated, resulting length: 48
[DBG]  Update the agent path 133 | Original local length: 5 | New local length: 5
[DBG]  agent 133 t=0 => decoded (sx,sy)=(2,3) => global_id=636
[DBG]  agent 133 t=1 => decoded (sx,sy)=(1,3) => global_id=604
[DBG]  agent 133 t=2 => decoded (sx,sy)=(1,2) => global_id=603
[DBG]  agent 133 t=3 => decoded (sx,sy)=(1,1) => global_id=602
[DBG]  agent 133 t=4 => decoded (sx,sy)=(0,1) => global_id=570
[DBG]  Complete path of agent 133:
[DBG]    Original: 956 924 892 860 861 829 797 765 733 701 702 670 638 637 636 604 572 571 570 538 506 474 473 441 409 377 376 375 376 
[DBG]    New:     956 924 892 860 861 829 797 765 733 701 702 670 638 637 636 604 603 602 570 538 506 474 473 441 409 377 376 375 376 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 956 924 892 860 861 829 797 765 733 701 702 670 638 637 
[DBG]    Local path (in submap): 636 604 603 602 570 
[DBG]    Suffix (out of submap): 538 506 474 473 441 409 377 376 375 376 
[DBG]  Original agent path length 133 je: 29
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 5: 956, 924, 892, 860, 861, 829, 797, 765, 733, 701, 702, 670, 638, 637, 636, 604, 603, 602, 570, 538, 506, 474, 473, 441, 409, 377, 376, 375, 376, 
[DBG]  Path for agent 133 updated, resulting length: 29
[DBG]  Paths successfully updated.
[DBG]  (LNS.cpp) New path for agent 25: 
[DBG]  895, 894, 862, 861, 829, 797, 765, 733, 701, 702, 670, 638, 637, 636, 604, 572, 540, 508, 509, 477, 445, 413, 381, 349, 317, 285, 284, 252, 220, 221, 189, 157, 158, 159, 
[DBG]  (LNS.cpp) New path for agent 46: 
[DBG]  786, 787, 788, 756, 724, 725, 726, 727, 728, 696, 664, 632, 633, 601, 602, 570, 538, 506, 474, 475, 443, 411, 412, 413, 381, 349, 317, 285, 284, 252, 
[DBG]  (LNS.cpp) New path for agent 77: 
[DBG]  319, 351, 383, 415, 447, 479, 478, 510, 509, 541, 540, 572, 604, 603, 635, 636, 637, 638, 670, 702, 701, 733, 732, 731, 
[DBG]  (LNS.cpp) New path for agent 91: 
[DBG]  787, 755, 755, 755, 756, 757, 725, 726, 727, 728, 696, 664, 632, 600, 601, 602, 570, 538, 539, 540, 541, 509, 477, 445, 413, 381, 
[DBG]  (LNS.cpp) New path for agent 119: 
[DBG]  861, 860, 861, 829, 797, 765, 733, 701, 702, 670, 638, 637, 636, 604, 572, 540, 508, 507, 506, 505, 473, 472, 440, 408, 376, 344, 312, 313, 281, 249, 248, 247, 215, 214, 213, 212, 244, 243, 242, 241, 240, 239, 207, 206, 205, 204, 172, 140, 
[DBG]  (LNS.cpp) New path for agent 133: 
[DBG]  956, 924, 892, 860, 861, 829, 797, 765, 733, 701, 702, 670, 638, 637, 636, 604, 603, 602, 570, 538, 506, 474, 473, 441, 409, 377, 376, 375, 376, 
[DBG]  component_weights = {0.370724, 0.0782454, 0.0818251, 0.469205}
[DBG]  opSuccess value: 1
[STAT] neighbor.sum_of_costs before recomputation: 185
[STAT] neighbor.old_sum_of_costs before recomputation: 190
[STAT] sum_of_costs before recomputation: 4227
[DBG]  Validate solution immediately after SAT success.
[WARNING] Problem after SAT: Edge conflict between agents 17 and 133 at edge (602,603) at timestep 17
[DBG]  Attempting immediate repair via init_lns because problem occurred after SAT (should be applied only for conflicts...).
[DBG]  Passing 150 agents to init_lns (skip=true).
[DBG]  path_table contents for selected agents (neighbor.agents):
[DBG]    Agent 25 => controlling path length=34
[DBG]    Agent 46 => controlling path length=30
[DBG]    Agent 77 => controlling path length=24
[DBG]    Agent 91 => controlling path length=26
[DBG]    Agent 119 => controlling path length=48
[DBG]    Agent 133 => controlling path length=29
[DBG]  hodnota skip_initial_solution=1
[DBG]  We skip initialSolution => call buildCollisionData()
[DBG]  buildCollisionData() called â€“ skip_initial_solution case.
[DBG]  Agents.size()=150, collision_graph.size()=150
[DBG]  agent 17 => updateCollidingPairs => foundCollision
[DBG]  agent 30 => updateCollidingPairs => foundCollision
[DBG]  agent 58 => updateCollidingPairs => foundCollision
[DBG]  agent 77 => updateCollidingPairs => foundCollision
[DBG]  agent 109 => updateCollidingPairs => foundCollision
[DBG]  agent 133 => updateCollidingPairs => foundCollision
[DBG]  Conflicting agent pairs:
[DBG]  agent 17 is in conflict with agent 133
[DBG]  agent 30 is in conflict with agent 77
[DBG]  agent 58 is in conflict with agent 77
[DBG]  agent 109 is in conflict with agent 133
[DBG]  buildCollisionData() => sum_of_costs=4222, num_of_colliding_pairs=4
[DBG]  buildCollisionData done => sum_of_costs=4222, num_of_colliding_pairs=4
[DBG]  sum_of_cost hodnota: 4222
[DBG]  After skip/init build => iteration_stats.back(): sum_of_costs=4222, collisions=4
[DEBUG] Using default neighbor generation strategy for conflicts: 2
[DEBUG] Using default neighbor generation strategy for conflicts: 2
[DEBUG] Using default neighbor generation strategy for conflicts: 2
[DEBUG] Using default neighbor generation strategy for conflicts: 0
[DEBUG] Using default neighbor generation strategy for conflicts: 2
[DEBUG] Using default neighbor generation strategy for conflicts: 2
[DEBUG] Using default neighbor generation strategy for conflicts: 2
[DEBUG] Using default neighbor generation strategy for conflicts: 0
[DEBUG] Using default neighbor generation strategy for conflicts: 0
	InitLNS(PP): runtime = 0.034253, iterations = 10, colliding pairs = 0, initial colliding pairs = 4, solution cost = 4198, initial solution cost = 4222, failed iterations = 0
[DBG]  init_lns->sum_of_costs after init_lns->run: 4198
[DBG]  sum_of_costs after assignment from init_lns->run: 4198
[DBG]  Recomputing sum_of_cost by dividing neighbor.sum_of_costs and neighbor.old_sum_of_costs
[STAT] sum_of_costs after recomputation: 4198
[STAT] Iteration 166
[DBG]  Using SAT operator (destroy+repair SAT).
[DBG]  ====================
[DBG]  SAT destroy operator called.
[DBG]  SAT heuristic: 2
[DBG]  key_agent_id: 107
[DBG]  key_agent_id global path length: 39
[DBG]  Submap content (global positions):
[DBG]  643 644 645 646 647 
[DBG]  675 676 677 678 679 
[DBG]  707 708 709 710 711 
[DBG]  739 740 741 742 743 
[DBG]  771 772 773 774 775 
[DBG]  Map content with agents and obstacles:
[DBG]  X . . . . 
[DBG]  . . . . X 
[DBG]  . X A . X 
[DBG]  . . . . X 
[DBG]  . . . . . 
[DBG]  content of the map structure that we pass to the SAT solver:
[DBG]  -1  1  1  1  1  
[DBG]  1  1  1  1  -1  
[DBG]  1  -1  1  1  -1  
[DBG]  1  1  1  1  -1  
[DBG]  1  1  1  1  1  
[DBG]  Identifying agents in a submap for rescheduling (when key_agent is there at the time 33):
[DBG]  Agent 20 found intervals in the sub-map:
[DBG]  
[DBG]  Agent 20 is not in sub-map at time 33 (intervals: 
[DBG]  )
[DBG]  Agent 43 found intervals in the sub-map:
[DBG]   [39..45]
[DBG]  Agent 43 is not in sub-map at time 33 (intervals: 
[DBG]  [39..45] )
[DBG]  Agent 107 found intervals in the sub-map:
[DBG]   [31..36]
[DBG]  Agent 107 (interval in submap: [31..36]) contains time 33, added to replan.
[DBG]  Agent 125 found intervals in the sub-map:
[DBG]   [18..18]
[DBG]  Agent 125 is not in sub-map at time 33 (intervals: 
[DBG]  [18..18] )
[DBG]  Agent 135 found intervals in the sub-map:
[DBG]  
[DBG]  Agent 135 is not in sub-map at time 33 (intervals: 
[DBG]  )
[DBG]  Agent 137 found intervals in the sub-map:
[DBG]   [36..41]
[DBG]  Agent 137 is not in sub-map at time 33 (intervals: 
[DBG]  [36..41] )
[DBG]  Agent 107 | Start (global): 709 -> (local): (2, 2) at time 33 | Goal (global): 772 -> (local): (4, 1) at time 36
[DBG]  [REPAIR] SAT destroy operator called.
[DBG]  [REPAIR] SAT operator â€“ launching subproblem FOR OPTIMIZATION.
[DBG]  Creating local paths (sx, sy) in the submap for T_sync = 33
[DBG]    Agent 107 (global paths from T=33 to 36) has local path: (2,2) (3,2) (3,1) (4,1) 
[DBG]  Checking input data for SAT solver:
[DBG]    - Number of agents to replan: 1
[DBG]  Agent 107 has the original local path length: 4 => Start (2,2), Goal (4,1)
[DBG]  Start position: (2, 2), 
[DBG]  Goal position: (4, 1), 
[DBG]  SAT instance and solver created.
Currently solving
Instance name: scen
Map name: map
Encoding used: disappear_at_goal
SAT solver used: Kissat
Optimizing function: sum of costs
Number of agents: 1
Mks LB: 4
SoC LB: 4
Delta: 0
Remaining time: 300000 [ms]

Found plan [agents = 1] [timesteps = 4]
Agent #0 : 9 13 17 16 

[STAT] Solver returned: 0
[DBG]  Agent (index) 107 | New local path (submap idx):
[DBG]  9 13 17 16 
[DBG]  Update the agent path 107 | Original local length: 4 | New local length: 4
[DBG]  agent 107 t=0 => decoded (sx,sy)=(2,2) => global_id=709
[DBG]  agent 107 t=1 => decoded (sx,sy)=(3,2) => global_id=741
[DBG]  agent 107 t=2 => decoded (sx,sy)=(4,2) => global_id=773
[DBG]  agent 107 t=3 => decoded (sx,sy)=(4,1) => global_id=772
[DBG]  Complete path of agent 107:
[DBG]    Original: 16 15 14 46 45 77 109 141 140 172 204 236 235 234 233 232 231 263 295 294 326 358 390 422 454 486 485 517 549 581 613 645 677 709 741 740 772 804 836 
[DBG]    New:     16 15 14 46 45 77 109 141 140 172 204 236 235 234 233 232 231 263 295 294 326 358 390 422 454 486 485 517 549 581 613 645 677 709 741 773 772 804 836 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 16 15 14 46 45 77 109 141 140 172 204 236 235 234 233 232 231 263 295 294 326 358 390 422 454 486 485 517 549 581 613 645 677 
[DBG]    Local path (in submap): 709 741 773 772 
[DBG]    Suffix (out of submap): 804 836 
[DBG]  Original agent path length 107 je: 39
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 0: 16, 15, 14, 46, 45, 77, 109, 141, 140, 172, 204, 236, 235, 234, 233, 232, 231, 263, 295, 294, 326, 358, 390, 422, 454, 486, 485, 517, 549, 581, 613, 645, 677, 709, 741, 773, 772, 804, 836, 
[DBG]  Path for agent 107 updated, resulting length: 39
[DBG]  Paths successfully updated.
[DBG]  (LNS.cpp) New path for agent 107: 
[DBG]  16, 15, 14, 46, 45, 77, 109, 141, 140, 172, 204, 236, 235, 234, 233, 232, 231, 263, 295, 294, 326, 358, 390, 422, 454, 486, 485, 517, 549, 581, 613, 645, 677, 709, 741, 773, 772, 804, 836, 
[DBG]  component_weights = {0.37545, 0.0776579, 0.0812107, 0.465682}
[DBG]  opSuccess value: 1
[STAT] neighbor.sum_of_costs before recomputation: 38
[STAT] neighbor.old_sum_of_costs before recomputation: 38
[STAT] sum_of_costs before recomputation: 4198
[DBG]  Validate solution immediately after SAT success.
[DBG]  No problems after SAT replan.
[DBG]  Recomputing sum_of_cost by dividing neighbor.sum_of_costs and neighbor.old_sum_of_costs
[STAT] sum_of_costs after recomputation: 4198
[STAT] Iteration 167
[DBG]  Using SAT operator (destroy+repair SAT).
[DBG]  ====================
[DBG]  SAT destroy operator called.
[DBG]  SAT heuristic: 2
[DBG]  key_agent_id: 9
[DBG]  key_agent_id global path length: 20
[DBG]  Submap content (global positions):
[DBG]  -1 32 33 34 35 
[DBG]  -1 64 65 66 67 
[DBG]  -1 96 97 98 99 
[DBG]  -1 128 129 130 131 
[DBG]  -1 160 161 162 163 
[DBG]  Map content with agents and obstacles:
[DBG]  X X . . . 
[DBG]  X . . . . 
[DBG]  X . A . . 
[DBG]  X . X X . 
[DBG]  X . . . . 
[DBG]  content of the map structure that we pass to the SAT solver:
[DBG]  1  -1  1  1  1  
[DBG]  1  1  1  1  1  
[DBG]  1  1  1  1  1  
[DBG]  1  1  -1  -1  1  
[DBG]  1  1  1  1  1  
[DBG]  Identifying agents in a submap for rescheduling (when key_agent is there at the time 18):
[DBG]  Agent 9 found intervals in the sub-map:
[DBG]   [16..19]
[DBG]  Agent 9 (interval in submap: [16..19]) contains time 18, added to replan.
[DBG]  Agent 9 | Start (global): 97 -> (local): (2, 2) at time 18 | Goal (global): 96 -> (local): (2, 1) at time 19
[DBG]  [REPAIR] SAT destroy operator called.
[DBG]  [REPAIR] SAT operator â€“ launching subproblem FOR OPTIMIZATION.
[DBG]  Creating local paths (sx, sy) in the submap for T_sync = 18
[DBG]    Agent 9 (global paths from T=18 to 19) has local path: (2,2) (2,1) 
[DBG]  Checking input data for SAT solver:
[DBG]    - Number of agents to replan: 1
[DBG]  Agent 9 has the original local path length: 2 => Start (2,2), Goal (2,1)
[DBG]  Start position: (2, 2), 
[DBG]  Goal position: (2, 1), 
[DBG]  SAT instance and solver created.
Currently solving
Instance name: scen
Map name: map
Encoding used: disappear_at_goal
SAT solver used: Kissat
Optimizing function: sum of costs
Number of agents: 1
Mks LB: 2
SoC LB: 2
Delta: 0
Remaining time: 300000 [ms]

Found plan [agents = 1] [timesteps = 2]
Agent #0 : 11 10 

[STAT] Solver returned: 0
[DBG]  Agent (index) 9 | New local path (submap idx):
[DBG]  11 10 
[DBG]  Update the agent path 9 | Original local length: 2 | New local length: 2
[DBG]  agent 9 t=0 => decoded (sx,sy)=(2,2) => global_id=97
[DBG]  agent 9 t=1 => decoded (sx,sy)=(2,1) => global_id=96
[DBG]  Complete path of agent 9:
[DBG]    Original: 235 236 204 172 140 139 138 137 136 168 136 135 134 133 132 100 99 98 97 96 
[DBG]    New:     235 236 204 172 140 139 138 137 136 168 136 135 134 133 132 100 99 98 97 96 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 235 236 204 172 140 139 138 137 136 168 136 135 134 133 132 100 99 98 
[DBG]    Local path (in submap): 97 96 
[DBG]    Suffix (out of submap): 
[DBG]  Original agent path length 9 je: 20
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 0: 235, 236, 204, 172, 140, 139, 138, 137, 136, 168, 136, 135, 134, 133, 132, 100, 99, 98, 97, 96, 
[DBG]  Path for agent 9 updated, resulting length: 20
[DBG]  Paths successfully updated.
[DBG]  (LNS.cpp) New path for agent 9: 
[DBG]  235, 236, 204, 172, 140, 139, 138, 137, 136, 168, 136, 135, 134, 133, 132, 100, 99, 98, 97, 96, 
[DBG]  component_weights = {0.380199, 0.0770674, 0.0805932, 0.462141}
[DBG]  opSuccess value: 1
[STAT] neighbor.sum_of_costs before recomputation: 19
[STAT] neighbor.old_sum_of_costs before recomputation: 19
[STAT] sum_of_costs before recomputation: 4198
[DBG]  Validate solution immediately after SAT success.
[DBG]  No problems after SAT replan.
[DBG]  Recomputing sum_of_cost by dividing neighbor.sum_of_costs and neighbor.old_sum_of_costs
[STAT] sum_of_costs after recomputation: 4198
[STAT] Iteration 168
[DBG]  Using SAT operator (destroy+repair SAT).
[DBG]  ====================
[DBG]  SAT destroy operator called.
[DBG]  SAT heuristic: 2
[DBG]  key_agent_id: 72
[DBG]  key_agent_id global path length: 17
[DBG]  Submap content (global positions):
[DBG]  4 5 6 7 8 
[DBG]  36 37 38 39 40 
[DBG]  68 69 70 71 72 
[DBG]  100 101 102 103 104 
[DBG]  132 133 134 135 136 
[DBG]  Map content with agents and obstacles:
[DBG]  . . . . . 
[DBG]  X . X X . 
[DBG]  . . A . . 
[DBG]  . X . X . 
[DBG]  . A . . . 
[DBG]  content of the map structure that we pass to the SAT solver:
[DBG]  1  1  1  1  1  
[DBG]  -1  1  -1  -1  1  
[DBG]  1  1  1  1  1  
[DBG]  1  -1  1  -1  1  
[DBG]  1  1  1  1  1  
[DBG]  Identifying agents in a submap for rescheduling (when key_agent is there at the time 13):
[DBG]  Agent 9 found intervals in the sub-map:
[DBG]   [8..8] [10..15]
[DBG]  Agent 9 (interval in submap: [10..15]) contains time 13, added to replan.
[DBG]  Agent 72 found intervals in the sub-map:
[DBG]   [11..15]
[DBG]  Agent 72 (interval in submap: [11..15]) contains time 13, added to replan.
[DBG]  Agent 127 found intervals in the sub-map:
[DBG]   [14..15]
[DBG]  Agent 127 is not in sub-map at time 13 (intervals: 
[DBG]  [14..15] )
[DBG]  Agent 9 | Start (global): 133 -> (local): (4, 1) at time 13 | Goal (global): 100 -> (local): (3, 0) at time 15
[DBG]  Agent 72 | Start (global): 70 -> (local): (2, 2) at time 13 | Goal (global): 68 -> (local): (2, 0) at time 15
[DBG]  [REPAIR] SAT destroy operator called.
[DBG]  [REPAIR] SAT operator â€“ launching subproblem FOR OPTIMIZATION.
[DBG]  Creating local paths (sx, sy) in the submap for T_sync = 13
[DBG]    Agent 9 (global paths from T=13 to 15) has local path: (4,1) (4,0) (3,0) 
[DBG]    Agent 72 (global paths from T=13 to 15) has local path: (2,2) (2,1) (2,0) 
[DBG]  Checking input data for SAT solver:
[DBG]    - Number of agents to replan: 2
[DBG]  Agent 9 has the original local path length: 3 => Start (4,1), Goal (3,0)
[DBG]  Agent 72 has the original local path length: 3 => Start (2,2), Goal (2,0)
[DBG]  Start position: (4, 1), (2, 2), 
[DBG]  Goal position: (3, 0), (2, 0), 
[DBG]  SAT instance and solver created.
Currently solving
Instance name: scen
Map name: map
Encoding used: disappear_at_goal
SAT solver used: Kissat
Optimizing function: sum of costs
Number of agents: 2
Mks LB: 3
SoC LB: 6
Delta: 0
Remaining time: 300000 [ms]

Found plan [agents = 2] [timesteps = 3]
Agent #0 : 16 15 12 
Agent #1 : 9 8 7 

[STAT] Solver returned: 0
[DBG]  Agent (index) 9 | New local path (submap idx):
[DBG]  16 15 12 
[DBG]  Agent (index) 72 | New local path (submap idx):
[DBG]  9 8 7 
[DBG]  Update the agent path 9 | Original local length: 3 | New local length: 3
[DBG]  agent 9 t=0 => decoded (sx,sy)=(4,1) => global_id=133
[DBG]  agent 9 t=1 => decoded (sx,sy)=(4,0) => global_id=132
[DBG]  agent 9 t=2 => decoded (sx,sy)=(3,0) => global_id=100
[DBG]  Complete path of agent 9:
[DBG]    Original: 235 236 204 172 140 139 138 137 136 168 136 135 134 133 132 100 99 98 97 96 
[DBG]    New:     235 236 204 172 140 139 138 137 136 168 136 135 134 133 132 100 99 98 97 96 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 235 236 204 172 140 139 138 137 136 168 136 135 134 
[DBG]    Local path (in submap): 133 132 100 
[DBG]    Suffix (out of submap): 99 98 97 96 
[DBG]  Original agent path length 9 je: 20
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 0: 235, 236, 204, 172, 140, 139, 138, 137, 136, 168, 136, 135, 134, 133, 132, 100, 99, 98, 97, 96, 
[DBG]  Path for agent 9 updated, resulting length: 20
[DBG]  Update the agent path 72 | Original local length: 3 | New local length: 3
[DBG]  agent 72 t=0 => decoded (sx,sy)=(2,2) => global_id=70
[DBG]  agent 72 t=1 => decoded (sx,sy)=(2,1) => global_id=69
[DBG]  agent 72 t=2 => decoded (sx,sy)=(2,0) => global_id=68
[DBG]  Complete path of agent 72:
[DBG]    Original: 81 80 112 111 110 109 108 76 75 74 73 72 71 70 69 68 67 
[DBG]    New:     81 80 112 111 110 109 108 76 75 74 73 72 71 70 69 68 67 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 81 80 112 111 110 109 108 76 75 74 73 72 71 
[DBG]    Local path (in submap): 70 69 68 
[DBG]    Suffix (out of submap): 67 
[DBG]  Original agent path length 72 je: 17
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 1: 81, 80, 112, 111, 110, 109, 108, 76, 75, 74, 73, 72, 71, 70, 69, 68, 67, 
[DBG]  Path for agent 72 updated, resulting length: 17
[DBG]  Paths successfully updated.
[DBG]  (LNS.cpp) New path for agent 9: 
[DBG]  235, 236, 204, 172, 140, 139, 138, 137, 136, 168, 136, 135, 134, 133, 132, 100, 99, 98, 97, 96, 
[DBG]  (LNS.cpp) New path for agent 72: 
[DBG]  81, 80, 112, 111, 110, 109, 108, 76, 75, 74, 73, 72, 71, 70, 69, 68, 67, 
[DBG]  component_weights = {0.384971, 0.076474, 0.0799727, 0.458582}
[DBG]  opSuccess value: 1
[STAT] neighbor.sum_of_costs before recomputation: 35
[STAT] neighbor.old_sum_of_costs before recomputation: 35
[STAT] sum_of_costs before recomputation: 4198
[DBG]  Validate solution immediately after SAT success.
[DBG]  No problems after SAT replan.
[DBG]  Recomputing sum_of_cost by dividing neighbor.sum_of_costs and neighbor.old_sum_of_costs
[STAT] sum_of_costs after recomputation: 4198
[STAT] Iteration 169
[DBG]  Using SAT operator (destroy+repair SAT).
[DBG]  ====================
[DBG]  SAT destroy operator called.
[DBG]  SAT heuristic: 2
[DBG]  key_agent_id: 50
[DBG]  key_agent_id global path length: 42
[DBG]  Submap content (global positions):
[DBG]  817 818 819 820 821 
[DBG]  849 850 851 852 853 
[DBG]  881 882 883 884 885 
[DBG]  913 914 915 916 917 
[DBG]  945 946 947 948 949 
[DBG]  Map content with agents and obstacles:
[DBG]  . . A . A 
[DBG]  . . . X X 
[DBG]  . A A . . 
[DBG]  . . X A . 
[DBG]  X . X . . 
[DBG]  content of the map structure that we pass to the SAT solver:
[DBG]  1  1  1  1  1  
[DBG]  1  1  1  -1  -1  
[DBG]  1  1  1  1  1  
[DBG]  1  1  -1  1  1  
[DBG]  -1  1  -1  1  1  
[DBG]  Identifying agents in a submap for rescheduling (when key_agent is there at the time 5):
[DBG]  Agent 1 found intervals in the sub-map:
[DBG]   [0..0] [6..7]
[DBG]  Agent 1 is not in sub-map at time 5 (intervals: 
[DBG]  [0..0] [6..7] )
[DBG]  Agent 6 found intervals in the sub-map:
[DBG]   [4..9]
[DBG]  Agent 6 (interval in submap: [4..9]) contains time 5, added to replan.
[DBG]  Agent 7 found intervals in the sub-map:
[DBG]   [2..16]
[DBG]  Agent 7 (interval in submap: [2..16]) contains time 5, added to replan.
[DBG]  Agent 38 found intervals in the sub-map:
[DBG]   [5..10]
[DBG]  Agent 38 (interval in submap: [5..10]) contains time 5, added to replan.
[DBG]  Agent 50 found intervals in the sub-map:
[DBG]   [3..8]
[DBG]  Agent 50 (interval in submap: [3..8]) contains time 5, added to replan.
[DBG]  Agent 109 found intervals in the sub-map:
[DBG]   [0..3]
[DBG]  Agent 109 is not in sub-map at time 5 (intervals: 
[DBG]  [0..3] )
[DBG]  Agent 118 found intervals in the sub-map:
[DBG]   [2..7]
[DBG]  Agent 118 (interval in submap: [2..7]) contains time 5, added to replan.
[DBG]  Agent 130 found intervals in the sub-map:
[DBG]  
[DBG]  Agent 130 is not in sub-map at time 5 (intervals: 
[DBG]  )
[DBG]  Agent 6 | Start (global): 916 -> (local): (3, 3) at time 5 | Goal (global): 881 -> (local): (2, 0) at time 9
[DBG]  Agent 7 | Start (global): 819 -> (local): (0, 2) at time 5 | Goal (global): 917 -> (local): (3, 4) at time 16
[DBG]  Agent 38 | Start (global): 821 -> (local): (0, 4) at time 5 | Goal (global): 849 -> (local): (1, 0) at time 10
[DBG]  Agent 50 | Start (global): 883 -> (local): (2, 2) at time 5 | Goal (global): 849 -> (local): (1, 0) at time 8
[DBG]  Agent 118 | Start (global): 882 -> (local): (2, 1) at time 5 | Goal (global): 849 -> (local): (1, 0) at time 7
[DBG]  [REPAIR] SAT destroy operator called.
[DBG]  [REPAIR] SAT operator â€“ launching subproblem FOR OPTIMIZATION.
[DBG]  Creating local paths (sx, sy) in the submap for T_sync = 5
[DBG]    Agent 6 (global paths from T=5 to 9) has local path: (3,3) (2,3) (2,2) (2,1) (2,0) 
[DBG]    Agent 7 (global paths from T=5 to 16) has local path: (0,2) (1,2) (1,2) (1,2) (1,2) (1,2) (1,2) (1,2) (2,2) (2,3) (3,3) (3,4) 
[DBG]    Agent 38 (global paths from T=5 to 10) has local path: (0,4) (0,3) (0,2) (0,1) (1,1) (1,0) 
[DBG]    Agent 50 (global paths from T=5 to 8) has local path: (2,2) (2,1) (1,1) (1,0) 
[DBG]    Agent 118 (global paths from T=5 to 7) has local path: (2,1) (1,1) (1,0) 
[DBG]  Checking input data for SAT solver:
[DBG]    - Number of agents to replan: 5
[DBG]  Agent 6 has the original local path length: 5 => Start (3,3), Goal (2,0)
[DBG]  Agent 7 has the original local path length: 12 => Start (0,2), Goal (3,4)
[DBG]  Agent 38 has the original local path length: 6 => Start (0,4), Goal (1,0)
[DBG]  Agent 50 has the original local path length: 4 => Start (2,2), Goal (1,0)
[DBG]  Agent 118 has the original local path length: 3 => Start (2,1), Goal (1,0)
[DBG]  Start position: (3, 3), (0, 2), (0, 4), (2, 2), (2, 1), 
[DBG]  Goal position: (2, 0), (3, 4), (1, 0), (1, 0), (1, 0), 
[DBG]  SAT instance and solver created.
Currently solving
Instance name: scen
Map name: map
Encoding used: disappear_at_goal
SAT solver used: Kissat
Optimizing function: sum of costs
Number of agents: 5
Mks LB: 6
SoC LB: 24
Delta: 0
Remaining time: 300000 [ms]

[STAT] Solver returned: -1
[DBG]  SAT solver failed.
[STAT] SAT solver failed to find a valid solution.
[DBG]  ====================
[DBG]  SAT destroy operator called.
[DBG]  SAT heuristic: 2
[DBG]  key_agent_id: 50
[DBG]  key_agent_id global path length: 42
[DBG]  Submap content (global positions):
[DBG]  458 459 460 461 462 
[DBG]  490 491 492 493 494 
[DBG]  522 523 524 525 526 
[DBG]  554 555 556 557 558 
[DBG]  586 587 588 589 590 
[DBG]  Map content with agents and obstacles:
[DBG]  . . . X . 
[DBG]  . . . X . 
[DBG]  . . A A A 
[DBG]  X . . X . 
[DBG]  X . . . . 
[DBG]  content of the map structure that we pass to the SAT solver:
[DBG]  1  1  1  -1  1  
[DBG]  1  1  1  -1  1  
[DBG]  1  1  1  1  1  
[DBG]  -1  1  1  -1  1  
[DBG]  -1  1  1  1  1  
[DBG]  Identifying agents in a submap for rescheduling (when key_agent is there at the time 26):
[DBG]  Agent 43 found intervals in the sub-map:
[DBG]   [23..30]
[DBG]  Agent 43 (interval in submap: [23..30]) contains time 26, added to replan.
[DBG]  Agent 45 found intervals in the sub-map:
[DBG]  
[DBG]  Agent 45 is not in sub-map at time 26 (intervals: 
[DBG]  )
[DBG]  Agent 50 found intervals in the sub-map:
[DBG]   [19..28]
[DBG]  Agent 50 (interval in submap: [19..28]) contains time 26, added to replan.
[DBG]  Agent 51 found intervals in the sub-map:
[DBG]   [15..16]
[DBG]  Agent 51 is not in sub-map at time 26 (intervals: 
[DBG]  [15..16] )
[DBG]  Agent 55 found intervals in the sub-map:
[DBG]  
[DBG]  Agent 55 is not in sub-map at time 26 (intervals: 
[DBG]  )
[DBG]  Agent 98 found intervals in the sub-map:
[DBG]   [27..30]
[DBG]  Agent 98 is not in sub-map at time 26 (intervals: 
[DBG]  [27..30] )
[DBG]  Agent 118 found intervals in the sub-map:
[DBG]  
[DBG]  Agent 118 is not in sub-map at time 26 (intervals: 
[DBG]  )
[DBG]  Agent 128 found intervals in the sub-map:
[DBG]   [22..29]
[DBG]  Agent 128 (interval in submap: [22..29]) contains time 26, added to replan.
[DBG]  Agent 132 found intervals in the sub-map:
[DBG]   [15..23]
[DBG]  Agent 132 is not in sub-map at time 26 (intervals: 
[DBG]  [15..23] )
[DBG]  Agent 43 | Start (global): 526 -> (local): (2, 4) at time 26 | Goal (global): 522 -> (local): (2, 0) at time 30
[DBG]  Agent 50 | Start (global): 524 -> (local): (2, 2) at time 26 | Goal (global): 460 -> (local): (0, 2) at time 28
[DBG]  Agent 128 | Start (global): 525 -> (local): (2, 3) at time 26 | Goal (global): 522 -> (local): (2, 0) at time 29
[DBG]  [REPAIR] SAT destroy operator called.
[DBG]  [REPAIR] SAT operator â€“ launching subproblem FOR OPTIMIZATION.
[DBG]  Creating local paths (sx, sy) in the submap for T_sync = 26
[DBG]    Agent 43 (global paths from T=26 to 30) has local path: (2,4) (2,3) (2,2) (2,1) (2,0) 
[DBG]    Agent 50 (global paths from T=26 to 28) has local path: (2,2) (1,2) (0,2) 
[DBG]    Agent 128 (global paths from T=26 to 29) has local path: (2,3) (2,2) (2,1) (2,0) 
[DBG]  Checking input data for SAT solver:
[DBG]    - Number of agents to replan: 3
[DBG]  Agent 43 has the original local path length: 5 => Start (2,4), Goal (2,0)
[DBG]  Agent 50 has the original local path length: 3 => Start (2,2), Goal (0,2)
[DBG]  Agent 128 has the original local path length: 4 => Start (2,3), Goal (2,0)
[DBG]  Start position: (2, 4), (2, 2), (2, 3), 
[DBG]  Goal position: (2, 0), (0, 2), (2, 0), 
[DBG]  SAT instance and solver created.
Currently solving
Instance name: scen
Map name: map
Encoding used: disappear_at_goal
SAT solver used: Kissat
Optimizing function: sum of costs
Number of agents: 3
Mks LB: 5
SoC LB: 12
Delta: 0
Remaining time: 300000 [ms]

Vertex conflict! Agents 1, 2, timestep 4, location 0
Found plan [agents = 3] [timesteps = 5]
Agent #0 : 12 11 10 9 8 
Agent #1 : 10 6 2 0 0 
Agent #2 : 11 10 9 8 0 

[STAT] Solver returned: 0
[DBG]  Agent (index) 43 | New local path (submap idx):
[DBG]  12 11 10 9 8 
[DBG]  Agent (index) 50 | New local path (submap idx):
[DBG]  10 6 2 
[DBG]  Agent (index) 128 | New local path (submap idx):
[DBG]  11 10 9 8 
[DBG]  Update the agent path 43 | Original local length: 5 | New local length: 5
[DBG]  agent 43 t=0 => decoded (sx,sy)=(2,4) => global_id=526
[DBG]  agent 43 t=1 => decoded (sx,sy)=(2,3) => global_id=525
[DBG]  agent 43 t=2 => decoded (sx,sy)=(2,2) => global_id=524
[DBG]  agent 43 t=3 => decoded (sx,sy)=(2,1) => global_id=523
[DBG]  agent 43 t=4 => decoded (sx,sy)=(2,0) => global_id=522
[DBG]  Complete path of agent 43:
[DBG]    Original: 414 413 381 380 379 378 377 409 441 440 439 438 437 437 469 468 468 467 466 465 464 464 463 462 494 526 526 525 524 523 522 521 520 519 551 550 582 581 613 645 677 709 741 740 739 707 
[DBG]    New:     414 413 381 380 379 378 377 409 441 440 439 438 437 437 469 468 468 467 466 465 464 464 463 462 494 526 526 525 524 523 522 521 520 519 551 550 582 581 613 645 677 709 741 740 739 707 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 414 413 381 380 379 378 377 409 441 440 439 438 437 437 469 468 468 467 466 465 464 464 463 462 494 526 
[DBG]    Local path (in submap): 526 525 524 523 522 
[DBG]    Suffix (out of submap): 521 520 519 551 550 582 581 613 645 677 709 741 740 739 707 
[DBG]  Original agent path length 43 je: 46
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 0: 414, 413, 381, 380, 379, 378, 377, 409, 441, 440, 439, 438, 437, 437, 469, 468, 468, 467, 466, 465, 464, 464, 463, 462, 494, 526, 526, 525, 524, 523, 522, 521, 520, 519, 551, 550, 582, 581, 613, 645, 677, 709, 741, 740, 739, 707, 
[DBG]  Path for agent 43 updated, resulting length: 46
[DBG]  Update the agent path 50 | Original local length: 3 | New local length: 3
[DBG]  agent 50 t=0 => decoded (sx,sy)=(2,2) => global_id=524
[DBG]  agent 50 t=1 => decoded (sx,sy)=(1,2) => global_id=492
[DBG]  agent 50 t=2 => decoded (sx,sy)=(0,2) => global_id=460
[DBG]  Complete path of agent 50:
[DBG]    Original: 888 887 886 885 884 883 882 850 849 848 847 815 783 751 719 718 686 654 622 590 589 588 587 587 588 556 524 492 460 428 427 395 363 331 299 300 268 269 237 205 173 141 
[DBG]    New:     888 887 886 885 884 883 882 850 849 848 847 815 783 751 719 718 686 654 622 590 589 588 587 587 588 556 524 492 460 428 427 395 363 331 299 300 268 269 237 205 173 141 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 888 887 886 885 884 883 882 850 849 848 847 815 783 751 719 718 686 654 622 590 589 588 587 587 588 556 
[DBG]    Local path (in submap): 524 492 460 
[DBG]    Suffix (out of submap): 428 427 395 363 331 299 300 268 269 237 205 173 141 
[DBG]  Original agent path length 50 je: 42
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 1: 888, 887, 886, 885, 884, 883, 882, 850, 849, 848, 847, 815, 783, 751, 719, 718, 686, 654, 622, 590, 589, 588, 587, 587, 588, 556, 524, 492, 460, 428, 427, 395, 363, 331, 299, 300, 268, 269, 237, 205, 173, 141, 
[DBG]  Path for agent 50 updated, resulting length: 42
[DBG]  Update the agent path 128 | Original local length: 4 | New local length: 4
[DBG]  agent 128 t=0 => decoded (sx,sy)=(2,3) => global_id=525
[DBG]  agent 128 t=1 => decoded (sx,sy)=(2,2) => global_id=524
[DBG]  agent 128 t=2 => decoded (sx,sy)=(2,1) => global_id=523
[DBG]  agent 128 t=3 => decoded (sx,sy)=(2,0) => global_id=522
[DBG]  Complete path of agent 128:
[DBG]    Original: 604 572 540 539 507 506 505 504 503 502 470 470 470 469 468 467 466 465 465 464 463 463 462 494 526 525 525 524 523 522 521 520 519 551 550 549 548 547 
[DBG]    New:     604 572 540 539 507 506 505 504 503 502 470 470 470 469 468 467 466 465 465 464 463 463 462 494 526 525 525 524 523 522 521 520 519 551 550 549 548 547 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 604 572 540 539 507 506 505 504 503 502 470 470 470 469 468 467 466 465 465 464 463 463 462 494 526 525 
[DBG]    Local path (in submap): 525 524 523 522 
[DBG]    Suffix (out of submap): 521 520 519 551 550 549 548 547 
[DBG]  Original agent path length 128 je: 38
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 2: 604, 572, 540, 539, 507, 506, 505, 504, 503, 502, 470, 470, 470, 469, 468, 467, 466, 465, 465, 464, 463, 463, 462, 494, 526, 525, 525, 524, 523, 522, 521, 520, 519, 551, 550, 549, 548, 547, 
[DBG]  Path for agent 128 updated, resulting length: 38
[DBG]  Paths successfully updated.
[DBG]  (LNS.cpp) New path for agent 43: 
[DBG]  414, 413, 381, 380, 379, 378, 377, 409, 441, 440, 439, 438, 437, 437, 469, 468, 468, 467, 466, 465, 464, 464, 463, 462, 494, 526, 526, 525, 524, 523, 522, 521, 520, 519, 551, 550, 582, 581, 613, 645, 677, 709, 741, 740, 739, 707, 
[DBG]  (LNS.cpp) New path for agent 50: 
[DBG]  888, 887, 886, 885, 884, 883, 882, 850, 849, 848, 847, 815, 783, 751, 719, 718, 686, 654, 622, 590, 589, 588, 587, 587, 588, 556, 524, 492, 460, 428, 427, 395, 363, 331, 299, 300, 268, 269, 237, 205, 173, 141, 
[DBG]  (LNS.cpp) New path for agent 128: 
[DBG]  604, 572, 540, 539, 507, 506, 505, 504, 503, 502, 470, 470, 470, 469, 468, 467, 466, 465, 465, 464, 463, 463, 462, 494, 526, 525, 525, 524, 523, 522, 521, 520, 519, 551, 550, 549, 548, 547, 
[DBG]  component_weights = {0.389765, 0.0758779, 0.0793492, 0.455008}
[DBG]  opSuccess value: 1
[STAT] neighbor.sum_of_costs before recomputation: 123
[STAT] neighbor.old_sum_of_costs before recomputation: 123
[STAT] sum_of_costs before recomputation: 4198
[DBG]  Validate solution immediately after SAT success.
[DBG]  No problems after SAT replan.
[DBG]  Recomputing sum_of_cost by dividing neighbor.sum_of_costs and neighbor.old_sum_of_costs
[STAT] sum_of_costs after recomputation: 4198
[STAT] Iteration 170
[DBG]  Using SAT operator (destroy+repair SAT).
[DBG]  ====================
[DBG]  SAT destroy operator called.
[DBG]  SAT heuristic: 2
[DBG]  key_agent_id: 6
[DBG]  key_agent_id global path length: 19
[DBG]  Submap content (global positions):
[DBG]  818 819 820 821 822 
[DBG]  850 851 852 853 854 
[DBG]  882 883 884 885 886 
[DBG]  914 915 916 917 918 
[DBG]  946 947 948 949 950 
[DBG]  Map content with agents and obstacles:
[DBG]  . . A A . 
[DBG]  A A X X A 
[DBG]  A . A . A 
[DBG]  . X . A . 
[DBG]  . X . . . 
[DBG]  content of the map structure that we pass to the SAT solver:
[DBG]  1  1  1  1  1  
[DBG]  1  1  -1  -1  1  
[DBG]  1  1  1  1  1  
[DBG]  1  -1  1  1  1  
[DBG]  1  -1  1  1  1  
[DBG]  Identifying agents in a submap for rescheduling (when key_agent is there at the time 6):
[DBG]  Agent 1 found intervals in the sub-map:
[DBG]   [0..7]
[DBG]  Agent 1 (interval in submap: [0..7]) contains time 6, added to replan.
[DBG]  Agent 6 found intervals in the sub-map:
[DBG]   [4..8]
[DBG]  Agent 6 (interval in submap: [4..8]) contains time 6, added to replan.
[DBG]  Agent 7 found intervals in the sub-map:
[DBG]   [2..17]
[DBG]  Agent 7 (interval in submap: [2..17]) contains time 6, added to replan.
[DBG]  Agent 14 found intervals in the sub-map:
[DBG]   [6..11]
[DBG]  Agent 14 (interval in submap: [6..11]) contains time 6, added to replan.
[DBG]  Agent 38 found intervals in the sub-map:
[DBG]   [4..9]
[DBG]  Agent 38 (interval in submap: [4..9]) contains time 6, added to replan.
[DBG]  Agent 49 found intervals in the sub-map:
[DBG]   [3..11]
[DBG]  Agent 49 (interval in submap: [3..11]) contains time 6, added to replan.
[DBG]  Agent 50 found intervals in the sub-map:
[DBG]   [2..7]
[DBG]  Agent 50 (interval in submap: [2..7]) contains time 6, added to replan.
[DBG]  Agent 101 found intervals in the sub-map:
[DBG]   [5..10]
[DBG]  Agent 101 (interval in submap: [5..10]) contains time 6, added to replan.
[DBG]  Agent 109 found intervals in the sub-map:
[DBG]   [0..3]
[DBG]  Agent 109 is not in sub-map at time 6 (intervals: 
[DBG]  [0..3] )
[DBG]  Agent 118 found intervals in the sub-map:
[DBG]   [1..6]
[DBG]  Agent 118 (interval in submap: [1..6]) contains time 6, added to replan.
[DBG]  Agent 1 | Start (global): 821 -> (local): (0, 3) at time 6 | Goal (global): 820 -> (local): (0, 2) at time 7
[DBG]  Agent 6 | Start (global): 884 -> (local): (2, 2) at time 6 | Goal (global): 882 -> (local): (2, 0) at time 8
[DBG]  Agent 7 | Start (global): 851 -> (local): (1, 1) at time 6 | Goal (global): 918 -> (local): (3, 4) at time 17
[DBG]  Agent 14 | Start (global): 886 -> (local): (2, 4) at time 6 | Goal (global): 882 -> (local): (2, 0) at time 11
[DBG]  Agent 38 | Start (global): 820 -> (local): (0, 2) at time 6 | Goal (global): 850 -> (local): (1, 0) at time 9
[DBG]  Agent 49 | Start (global): 854 -> (local): (1, 4) at time 6 | Goal (global): 820 -> (local): (0, 2) at time 11
[DBG]  Agent 50 | Start (global): 882 -> (local): (2, 0) at time 6 | Goal (global): 850 -> (local): (1, 0) at time 7
[DBG]  Agent 101 | Start (global): 917 -> (local): (3, 3) at time 6 | Goal (global): 882 -> (local): (2, 0) at time 10
[DBG]  Agent 118 | Start (global): 850 -> (local): (1, 0) at time 6 | Goal (global): 850 -> (local): (1, 0) at time 6
[DBG]  [REPAIR] SAT destroy operator called.
[DBG]  [REPAIR] SAT operator â€“ launching subproblem FOR OPTIMIZATION.
[DBG]  Creating local paths (sx, sy) in the submap for T_sync = 6
[DBG]    Agent 1 (global paths from T=6 to 7) has local path: (0,3) (0,2) 
[DBG]    Agent 6 (global paths from T=6 to 8) has local path: (2,2) (2,1) (2,0) 
[DBG]    Agent 7 (global paths from T=6 to 17) has local path: (1,1) (1,1) (1,1) (1,1) (1,1) (1,1) (1,1) (2,1) (2,2) (3,2) (3,3) (3,4) 
[DBG]    Agent 14 (global paths from T=6 to 11) has local path: (2,4) (2,4) (2,3) (2,2) (2,1) (2,0) 
[DBG]    Agent 38 (global paths from T=6 to 9) has local path: (0,2) (0,1) (0,0) (1,0) 
[DBG]    Agent 49 (global paths from T=6 to 11) has local path: (1,4) (1,4) (1,4) (0,4) (0,3) (0,2) 
[DBG]    Agent 50 (global paths from T=6 to 7) has local path: (2,0) (1,0) 
[DBG]    Agent 101 (global paths from T=6 to 10) has local path: (3,3) (2,3) (2,2) (2,1) (2,0) 
[DBG]    Agent 118 (global paths from T=6 to 6) has local path: (1,0) 
[DBG]  Checking input data for SAT solver:
[DBG]    - Number of agents to replan: 9
[DBG]  Agent 1 has the original local path length: 2 => Start (0,3), Goal (0,2)
[DBG]  Agent 6 has the original local path length: 3 => Start (2,2), Goal (2,0)
[DBG]  Agent 7 has the original local path length: 12 => Start (1,1), Goal (3,4)
[DBG]  Agent 14 has the original local path length: 6 => Start (2,4), Goal (2,0)
[DBG]  Agent 38 has the original local path length: 4 => Start (0,2), Goal (1,0)
[DBG]  Agent 49 has the original local path length: 6 => Start (1,4), Goal (0,2)
[DBG]  Agent 50 has the original local path length: 2 => Start (2,0), Goal (1,0)
[DBG]  Agent 101 has the original local path length: 5 => Start (3,3), Goal (2,0)
[DBG]  Agent 118 has the original local path length: 1 => Start (1,0), Goal (1,0)
[DBG]  Start position: (0, 3), (2, 2), (1, 1), (2, 4), (0, 2), (1, 4), (2, 0), (3, 3), (1, 0), 
[DBG]  Goal position: (0, 2), (2, 0), (3, 4), (2, 0), (1, 0), (0, 2), (1, 0), (2, 0), (1, 0), 
[DBG]  SAT instance and solver created.
Currently solving
Instance name: scen
Map name: map
Encoding used: disappear_at_goal
SAT solver used: Kissat
Optimizing function: sum of costs
Number of agents: 9
Mks LB: 6
SoC LB: 32
Delta: 0
Remaining time: 300000 [ms]

[STAT] Solver returned: -1
[DBG]  SAT solver failed.
[STAT] SAT solver failed to find a valid solution.
[DBG]  ====================
[DBG]  SAT destroy operator called.
[DBG]  SAT heuristic: 2
[DBG]  key_agent_id: 6
[DBG]  key_agent_id global path length: 19
[DBG]  Submap content (global positions):
[DBG]  781 782 783 784 785 
[DBG]  813 814 815 816 817 
[DBG]  845 846 847 848 849 
[DBG]  877 878 879 880 881 
[DBG]  909 910 911 912 913 
[DBG]  Map content with agents and obstacles:
[DBG]  A . . . X 
[DBG]  . . . X A 
[DBG]  . A A A A 
[DBG]  A . A A . 
[DBG]  . . X . . 
[DBG]  content of the map structure that we pass to the SAT solver:
[DBG]  1  1  1  1  -1  
[DBG]  1  1  1  -1  1  
[DBG]  1  1  1  1  1  
[DBG]  1  1  1  1  1  
[DBG]  1  1  -1  1  1  
[DBG]  Identifying agents in a submap for rescheduling (when key_agent is there at the time 13):
[DBG]  Agent 6 found intervals in the sub-map:
[DBG]   [9..17]
[DBG]  Agent 6 (interval in submap: [9..17]) contains time 13, added to replan.
[DBG]  Agent 14 found intervals in the sub-map:
[DBG]   [12..21]
[DBG]  Agent 14 (interval in submap: [12..21]) contains time 13, added to replan.
[DBG]  Agent 27 found intervals in the sub-map:
[DBG]   [19..21]
[DBG]  Agent 27 is not in sub-map at time 13 (intervals: 
[DBG]  [19..21] )
[DBG]  Agent 37 found intervals in the sub-map:
[DBG]   [7..11]
[DBG]  Agent 37 is not in sub-map at time 13 (intervals: 
[DBG]  [7..11] )
[DBG]  Agent 38 found intervals in the sub-map:
[DBG]   [10..14]
[DBG]  Agent 38 (interval in submap: [10..14]) contains time 13, added to replan.
[DBG]  Agent 39 found intervals in the sub-map:
[DBG]   [8..15]
[DBG]  Agent 39 (interval in submap: [8..15]) contains time 13, added to replan.
[DBG]  Agent 47 found intervals in the sub-map:
[DBG]   [13..18]
[DBG]  Agent 47 (interval in submap: [13..18]) contains time 13, added to replan.
[DBG]  Agent 68 found intervals in the sub-map:
[DBG]   [9..10]
[DBG]  Agent 68 is not in sub-map at time 13 (intervals: 
[DBG]  [9..10] )
[DBG]  Agent 85 found intervals in the sub-map:
[DBG]   [12..22]
[DBG]  Agent 85 (interval in submap: [12..22]) contains time 13, added to replan.
[DBG]  Agent 96 found intervals in the sub-map:
[DBG]  
[DBG]  Agent 96 is not in sub-map at time 13 (intervals: 
[DBG]  )
[DBG]  Agent 101 found intervals in the sub-map:
[DBG]   [11..16]
[DBG]  Agent 101 (interval in submap: [11..16]) contains time 13, added to replan.
[DBG]  Agent 118 found intervals in the sub-map:
[DBG]   [7..13]
[DBG]  Agent 118 (interval in submap: [7..13]) contains time 13, added to replan.
[DBG]  Agent 130 found intervals in the sub-map:
[DBG]  
[DBG]  Agent 130 is not in sub-map at time 13 (intervals: 
[DBG]  )
[DBG]  Agent 135 found intervals in the sub-map:
[DBG]   [13..19]
[DBG]  Agent 135 (interval in submap: [13..19]) contains time 13, added to replan.
[DBG]  Agent 143 found intervals in the sub-map:
[DBG]   [6..9]
[DBG]  Agent 143 is not in sub-map at time 13 (intervals: 
[DBG]  [6..9] )
[DBG]  Agent 6 | Start (global): 847 -> (local): (2, 2) at time 13 | Goal (global): 909 -> (local): (4, 0) at time 17
[DBG]  Agent 14 | Start (global): 880 -> (local): (3, 3) at time 13 | Goal (global): 877 -> (local): (3, 0) at time 21
[DBG]  Agent 38 | Start (global): 846 -> (local): (2, 1) at time 13 | Goal (global): 845 -> (local): (2, 0) at time 14
[DBG]  Agent 39 | Start (global): 879 -> (local): (3, 2) at time 13 | Goal (global): 881 -> (local): (3, 4) at time 15
[DBG]  Agent 47 | Start (global): 849 -> (local): (2, 4) at time 13 | Goal (global): 813 -> (local): (1, 0) at time 18
[DBG]  Agent 85 | Start (global): 877 -> (local): (3, 0) at time 13 | Goal (global): 817 -> (local): (1, 4) at time 22
[DBG]  Agent 101 | Start (global): 848 -> (local): (2, 3) at time 13 | Goal (global): 783 -> (local): (0, 2) at time 16
[DBG]  Agent 118 | Start (global): 781 -> (local): (0, 0) at time 13 | Goal (global): 781 -> (local): (0, 0) at time 13
[DBG]  Agent 135 | Start (global): 817 -> (local): (1, 4) at time 13 | Goal (global): 813 -> (local): (1, 0) at time 19
[DBG]  [REPAIR] SAT destroy operator called.
[DBG]  [REPAIR] SAT operator â€“ launching subproblem FOR OPTIMIZATION.
[DBG]  Creating local paths (sx, sy) in the submap for T_sync = 13
[DBG]    Agent 6 (global paths from T=13 to 17) has local path: (2,2) (2,1) (3,1) (3,0) (4,0) 
[DBG]    Agent 14 (global paths from T=13 to 21) has local path: (3,3) (4,3) (3,3) (3,4) (3,4) (3,3) (3,2) (3,1) (3,0) 
[DBG]    Agent 38 (global paths from T=13 to 14) has local path: (2,1) (2,0) 
[DBG]    Agent 39 (global paths from T=13 to 15) has local path: (3,2) (3,3) (3,4) 
[DBG]    Agent 47 (global paths from T=13 to 18) has local path: (2,4) (2,3) (2,2) (2,1) (1,1) (1,0) 
[DBG]    Agent 85 (global paths from T=13 to 22) has local path: (3,0) (3,1) (3,2) (3,3) (2,3) (2,4) (3,4) (3,4) (2,4) (1,4) 
[DBG]    Agent 101 (global paths from T=13 to 16) has local path: (2,3) (2,2) (1,2) (0,2) 
[DBG]    Agent 118 (global paths from T=13 to 13) has local path: (0,0) 
[DBG]    Agent 135 (global paths from T=13 to 19) has local path: (1,4) (2,4) (2,3) (2,2) (2,1) (1,1) (1,0) 
[DBG]  Checking input data for SAT solver:
[DBG]    - Number of agents to replan: 9
[DBG]  Agent 6 has the original local path length: 5 => Start (2,2), Goal (4,0)
[DBG]  Agent 14 has the original local path length: 9 => Start (3,3), Goal (3,0)
[DBG]  Agent 38 has the original local path length: 2 => Start (2,1), Goal (2,0)
[DBG]  Agent 39 has the original local path length: 3 => Start (3,2), Goal (3,4)
[DBG]  Agent 47 has the original local path length: 6 => Start (2,4), Goal (1,0)
[DBG]  Agent 85 has the original local path length: 10 => Start (3,0), Goal (1,4)
[DBG]  Agent 101 has the original local path length: 4 => Start (2,3), Goal (0,2)
[DBG]  Agent 118 has the original local path length: 1 => Start (0,0), Goal (0,0)
[DBG]  Agent 135 has the original local path length: 7 => Start (1,4), Goal (1,0)
[DBG]  Start position: (2, 2), (3, 3), (2, 1), (3, 2), (2, 4), (3, 0), (2, 3), (0, 0), (1, 4), 
[DBG]  Goal position: (4, 0), (3, 0), (2, 0), (3, 4), (1, 0), (1, 4), (0, 2), (0, 0), (1, 0), 
[DBG]  SAT instance and solver created.
Currently solving
Instance name: scen
Map name: map
Encoding used: disappear_at_goal
SAT solver used: Kissat
Optimizing function: sum of costs
Number of agents: 9
Mks LB: 7
SoC LB: 39
Delta: 0
Remaining time: 300000 [ms]

[STAT] Solver returned: -1
[DBG]  SAT solver failed.
[STAT] SAT solver failed to find a valid solution.
[DBG]  ====================
[DBG]  SAT destroy operator called.
[DBG]  SAT heuristic: 2
[DBG]  key_agent_id: 6
[DBG]  key_agent_id global path length: 19
[DBG]  Submap content (global positions):
[DBG]  914 915 916 917 918 
[DBG]  946 947 948 949 950 
[DBG]  978 979 980 981 982 
[DBG]  1010 1011 1012 1013 1014 
[DBG]  -1 -1 -1 -1 -1 
[DBG]  Map content with agents and obstacles:
[DBG]  . X . . . 
[DBG]  . X . . A 
[DBG]  X . A . . 
[DBG]  X . . . . 
[DBG]  X X X X X 
[DBG]  content of the map structure that we pass to the SAT solver:
[DBG]  1  -1  1  1  1  
[DBG]  1  -1  1  1  1  
[DBG]  -1  1  1  1  1  
[DBG]  -1  1  1  1  1  
[DBG]  1  1  1  1  1  
[DBG]  Identifying agents in a submap for rescheduling (when key_agent is there at the time 3):
[DBG]  Agent 1 found intervals in the sub-map:
[DBG]   [0..2]
[DBG]  Agent 1 is not in sub-map at time 3 (intervals: 
[DBG]  [0..2] )
[DBG]  Agent 6 found intervals in the sub-map:
[DBG]   [1..5]
[DBG]  Agent 6 (interval in submap: [1..5]) contains time 3, added to replan.
[DBG]  Agent 49 found intervals in the sub-map:
[DBG]   [2..4]
[DBG]  Agent 49 (interval in submap: [2..4]) contains time 3, added to replan.
[DBG]  Agent 101 found intervals in the sub-map:
[DBG]   [5..6]
[DBG]  Agent 101 is not in sub-map at time 3 (intervals: 
[DBG]  [5..6] )
[DBG]  Agent 118 found intervals in the sub-map:
[DBG]  
[DBG]  Agent 118 is not in sub-map at time 3 (intervals: 
[DBG]  )
[DBG]  Agent 6 | Start (global): 980 -> (local): (2, 2) at time 3 | Goal (global): 916 -> (local): (0, 2) at time 5
[DBG]  Agent 49 | Start (global): 950 -> (local): (1, 4) at time 3 | Goal (global): 918 -> (local): (0, 4) at time 4
[DBG]  [REPAIR] SAT destroy operator called.
[DBG]  [REPAIR] SAT operator â€“ launching subproblem FOR OPTIMIZATION.
[DBG]  Creating local paths (sx, sy) in the submap for T_sync = 3
[DBG]    Agent 6 (global paths from T=3 to 5) has local path: (2,2) (1,2) (0,2) 
[DBG]    Agent 49 (global paths from T=3 to 4) has local path: (1,4) (0,4) 
[DBG]  Checking input data for SAT solver:
[DBG]    - Number of agents to replan: 2
[DBG]  Agent 6 has the original local path length: 3 => Start (2,2), Goal (0,2)
[DBG]  Agent 49 has the original local path length: 2 => Start (1,4), Goal (0,4)
[DBG]  Start position: (2, 2), (1, 4), 
[DBG]  Goal position: (0, 2), (0, 4), 
[DBG]  SAT instance and solver created.
Currently solving
Instance name: scen
Map name: map
Encoding used: disappear_at_goal
SAT solver used: Kissat
Optimizing function: sum of costs
Number of agents: 2
Mks LB: 3
SoC LB: 5
Delta: 0
Remaining time: 300000 [ms]

Found plan [agents = 2] [timesteps = 3]
Agent #0 : 9 5 1 
Agent #1 : 7 3 0 

[STAT] Solver returned: 0
[DBG]  Agent (index) 6 | New local path (submap idx):
[DBG]  9 5 1 
[DBG]  Agent (index) 49 | New local path (submap idx):
[DBG]  7 3 
[DBG]  Update the agent path 6 | Original local length: 3 | New local length: 3
[DBG]  agent 6 t=0 => decoded (sx,sy)=(2,2) => global_id=980
[DBG]  agent 6 t=1 => decoded (sx,sy)=(1,2) => global_id=948
[DBG]  agent 6 t=2 => decoded (sx,sy)=(0,2) => global_id=916
[DBG]  Complete path of agent 6:
[DBG]    Original: 983 982 981 980 948 916 884 883 882 881 880 879 879 847 846 878 877 909 908 
[DBG]    New:     983 982 981 980 948 916 884 883 882 881 880 879 879 847 846 878 877 909 908 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 983 982 981 
[DBG]    Local path (in submap): 980 948 916 
[DBG]    Suffix (out of submap): 884 883 882 881 880 879 879 847 846 878 877 909 908 
[DBG]  Original agent path length 6 je: 19
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 0: 983, 982, 981, 980, 948, 916, 884, 883, 882, 881, 880, 879, 879, 847, 846, 878, 877, 909, 908, 
[DBG]  Path for agent 6 updated, resulting length: 19
[DBG]  Update the agent path 49 | Original local length: 2 | New local length: 2
[DBG]  agent 49 t=0 => decoded (sx,sy)=(1,4) => global_id=950
[DBG]  agent 49 t=1 => decoded (sx,sy)=(0,4) => global_id=918
[DBG]  Complete path of agent 49:
[DBG]    Original: 984 983 982 950 918 886 854 854 854 822 821 820 788 787 755 756 724 692 660 628 629 629 629 597 565 533 501 469 437 405 404 403 402 401 400 368 
[DBG]    New:     984 983 982 950 918 886 854 854 854 822 821 820 788 787 755 756 724 692 660 628 629 629 629 597 565 533 501 469 437 405 404 403 402 401 400 368 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 984 983 982 
[DBG]    Local path (in submap): 950 918 
[DBG]    Suffix (out of submap): 886 854 854 854 822 821 820 788 787 755 756 724 692 660 628 629 629 629 597 565 533 501 469 437 405 404 403 402 401 400 368 
[DBG]  Original agent path length 49 je: 36
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 1: 984, 983, 982, 950, 918, 886, 854, 854, 854, 822, 821, 820, 788, 787, 755, 756, 724, 692, 660, 628, 629, 629, 629, 597, 565, 533, 501, 469, 437, 405, 404, 403, 402, 401, 400, 368, 
[DBG]  Path for agent 49 updated, resulting length: 36
[DBG]  Paths successfully updated.
[DBG]  (LNS.cpp) New path for agent 6: 
[DBG]  983, 982, 981, 980, 948, 916, 884, 883, 882, 881, 880, 879, 879, 847, 846, 878, 877, 909, 908, 
[DBG]  (LNS.cpp) New path for agent 49: 
[DBG]  984, 983, 982, 950, 918, 886, 854, 854, 854, 822, 821, 820, 788, 787, 755, 756, 724, 692, 660, 628, 629, 629, 629, 597, 565, 533, 501, 469, 437, 405, 404, 403, 402, 401, 400, 368, 
[DBG]  component_weights = {0.394581, 0.0752791, 0.078723, 0.451417}
[DBG]  opSuccess value: 1
[STAT] neighbor.sum_of_costs before recomputation: 53
[STAT] neighbor.old_sum_of_costs before recomputation: 53
[STAT] sum_of_costs before recomputation: 4198
[DBG]  Validate solution immediately after SAT success.
[DBG]  No problems after SAT replan.
[DBG]  Recomputing sum_of_cost by dividing neighbor.sum_of_costs and neighbor.old_sum_of_costs
[STAT] sum_of_costs after recomputation: 4198
[STAT] Iteration 171
[DBG]  Using SAT operator (destroy+repair SAT).
[DBG]  ====================
[DBG]  SAT destroy operator called.
[DBG]  SAT heuristic: 2
[DBG]  key_agent_id: 109
[DBG]  key_agent_id global path length: 30
[DBG]  Submap content (global positions):
[DBG]  503 504 505 506 507 
[DBG]  535 536 537 538 539 
[DBG]  567 568 569 570 571 
[DBG]  599 600 601 602 603 
[DBG]  631 632 633 634 635 
[DBG]  Map content with agents and obstacles:
[DBG]  . . . . A 
[DBG]  X X X . A 
[DBG]  X X A . A 
[DBG]  . A . A . 
[DBG]  . . . X . 
[DBG]  content of the map structure that we pass to the SAT solver:
[DBG]  1  1  1  1  1  
[DBG]  -1  -1  -1  1  1  
[DBG]  -1  -1  1  1  1  
[DBG]  1  1  1  1  1  
[DBG]  1  1  1  -1  1  
[DBG]  Identifying agents in a submap for rescheduling (when key_agent is there at the time 17):
[DBG]  Agent 3 found intervals in the sub-map:
[DBG]  
[DBG]  Agent 3 is not in sub-map at time 17 (intervals: 
[DBG]  )
[DBG]  Agent 10 found intervals in the sub-map:
[DBG]   [18..21]
[DBG]  Agent 10 is not in sub-map at time 17 (intervals: 
[DBG]  [18..21] )
[DBG]  Agent 17 found intervals in the sub-map:
[DBG]   [1..15]
[DBG]  Agent 17 is not in sub-map at time 17 (intervals: 
[DBG]  [1..15] )
[DBG]  Agent 24 found intervals in the sub-map:
[DBG]   [15..16]
[DBG]  Agent 24 is not in sub-map at time 17 (intervals: 
[DBG]  [15..16] )
[DBG]  Agent 30 found intervals in the sub-map:
[DBG]   [16..30]
[DBG]  Agent 30 (interval in submap: [16..30]) contains time 17, added to replan.
[DBG]  Agent 45 found intervals in the sub-map:
[DBG]  
[DBG]  Agent 45 is not in sub-map at time 17 (intervals: 
[DBG]  )
[DBG]  Agent 46 found intervals in the sub-map:
[DBG]   [12..18]
[DBG]  Agent 46 (interval in submap: [12..18]) contains time 17, added to replan.
[DBG]  Agent 91 found intervals in the sub-map:
[DBG]   [11..17]
[DBG]  Agent 91 (interval in submap: [11..17]) contains time 17, added to replan.
[DBG]  Agent 109 found intervals in the sub-map:
[DBG]   [14..22]
[DBG]  Agent 109 (interval in submap: [14..22]) contains time 17, added to replan.
[DBG]  Agent 119 found intervals in the sub-map:
[DBG]   [17..19]
[DBG]  Agent 119 (interval in submap: [17..19]) contains time 17, added to replan.
[DBG]  Agent 133 found intervals in the sub-map:
[DBG]   [16..20]
[DBG]  Agent 133 (interval in submap: [16..20]) contains time 17, added to replan.
[DBG]  Agent 30 | Start (global): 600 -> (local): (3, 1) at time 17 | Goal (global): 503 -> (local): (0, 0) at time 30
[DBG]  Agent 46 | Start (global): 571 -> (local): (2, 4) at time 17 | Goal (global): 539 -> (local): (1, 4) at time 18
[DBG]  Agent 91 | Start (global): 539 -> (local): (1, 4) at time 17 | Goal (global): 539 -> (local): (1, 4) at time 17
[DBG]  Agent 109 | Start (global): 569 -> (local): (2, 2) at time 17 | Goal (global): 507 -> (local): (0, 4) at time 22
[DBG]  Agent 119 | Start (global): 507 -> (local): (0, 4) at time 17 | Goal (global): 505 -> (local): (0, 2) at time 19
[DBG]  Agent 133 | Start (global): 602 -> (local): (3, 3) at time 17 | Goal (global): 506 -> (local): (0, 3) at time 20
[DBG]  [REPAIR] SAT destroy operator called.
[DBG]  [REPAIR] SAT operator â€“ launching subproblem FOR OPTIMIZATION.
[DBG]  Creating local paths (sx, sy) in the submap for T_sync = 17
[DBG]    Agent 30 (global paths from T=17 to 30) has local path: (3,1) (3,2) (2,2) (2,3) (2,4) (1,4) (0,4) (0,3) (1,3) (0,3) (0,2) (0,2) (0,1) (0,0) 
[DBG]    Agent 46 (global paths from T=17 to 18) has local path: (2,4) (1,4) 
[DBG]    Agent 91 (global paths from T=17 to 17) has local path: (1,4) 
[DBG]    Agent 109 (global paths from T=17 to 22) has local path: (2,2) (2,2) (2,3) (2,4) (1,4) (0,4) 
[DBG]    Agent 119 (global paths from T=17 to 19) has local path: (0,4) (0,3) (0,2) 
[DBG]    Agent 133 (global paths from T=17 to 20) has local path: (3,3) (2,3) (1,3) (0,3) 
[DBG]  Checking input data for SAT solver:
[DBG]    - Number of agents to replan: 6
[DBG]  Agent 30 has the original local path length: 14 => Start (3,1), Goal (0,0)
[DBG]  Agent 46 has the original local path length: 2 => Start (2,4), Goal (1,4)
[DBG]  Agent 91 has the original local path length: 1 => Start (1,4), Goal (1,4)
[DBG]  Agent 109 has the original local path length: 6 => Start (2,2), Goal (0,4)
[DBG]  Agent 119 has the original local path length: 3 => Start (0,4), Goal (0,2)
[DBG]  Agent 133 has the original local path length: 4 => Start (3,3), Goal (0,3)
[DBG]  Start position: (3, 1), (2, 4), (1, 4), (2, 2), (0, 4), (3, 3), 
[DBG]  Goal position: (0, 0), (1, 4), (1, 4), (0, 4), (0, 2), (0, 3), 
[DBG]  SAT instance and solver created.
Currently solving
Instance name: scen
Map name: map
Encoding used: disappear_at_goal
SAT solver used: Kissat
Optimizing function: sum of costs
Number of agents: 6
Mks LB: 9
SoC LB: 24
Delta: 0
Remaining time: 300000 [ms]

[STAT] Solver returned: -1
[DBG]  SAT solver failed.
[STAT] SAT solver failed to find a valid solution.
[DBG]  ====================
[DBG]  SAT destroy operator called.
[DBG]  SAT heuristic: 2
[DBG]  key_agent_id: 109
[DBG]  key_agent_id global path length: 30
[DBG]  Submap content (global positions):
[DBG]  630 631 632 633 634 
[DBG]  662 663 664 665 666 
[DBG]  694 695 696 697 698 
[DBG]  726 727 728 729 730 
[DBG]  758 759 760 761 762 
[DBG]  Map content with agents and obstacles:
[DBG]  X . A A X 
[DBG]  X X . X . 
[DBG]  X X A . X 
[DBG]  A . A A . 
[DBG]  X . X . X 
[DBG]  content of the map structure that we pass to the SAT solver:
[DBG]  -1  1  1  1  -1  
[DBG]  -1  -1  1  -1  1  
[DBG]  -1  -1  1  1  -1  
[DBG]  1  1  1  1  1  
[DBG]  -1  1  -1  1  -1  
[DBG]  Identifying agents in a submap for rescheduling (when key_agent is there at the time 12):
[DBG]  Agent 1 found intervals in the sub-map:
[DBG]   [12..15]
[DBG]  Agent 1 (interval in submap: [12..15]) contains time 12, added to replan.
[DBG]  Agent 17 found intervals in the sub-map:
[DBG]   [0..2]
[DBG]  Agent 17 is not in sub-map at time 12 (intervals: 
[DBG]  [0..2] )
[DBG]  Agent 24 found intervals in the sub-map:
[DBG]   [10..16]
[DBG]  Agent 24 (interval in submap: [10..16]) contains time 12, added to replan.
[DBG]  Agent 28 found intervals in the sub-map:
[DBG]   [38..39]
[DBG]  Agent 28 is not in sub-map at time 12 (intervals: 
[DBG]  [38..39] )
[DBG]  Agent 30 found intervals in the sub-map:
[DBG]   [11..16]
[DBG]  Agent 30 (interval in submap: [11..16]) contains time 12, added to replan.
[DBG]  Agent 46 found intervals in the sub-map:
[DBG]   [7..13]
[DBG]  Agent 46 (interval in submap: [7..13]) contains time 12, added to replan.
[DBG]  Agent 91 found intervals in the sub-map:
[DBG]   [6..12]
[DBG]  Agent 91 (interval in submap: [6..12]) contains time 12, added to replan.
[DBG]  Agent 108 found intervals in the sub-map:
[DBG]   [5..9]
[DBG]  Agent 108 is not in sub-map at time 12 (intervals: 
[DBG]  [5..9] )
[DBG]  Agent 109 found intervals in the sub-map:
[DBG]   [9..15]
[DBG]  Agent 109 (interval in submap: [9..15]) contains time 12, added to replan.
[DBG]  Agent 1 | Start (global): 726 -> (local): (3, 0) at time 12 | Goal (global): 728 -> (local): (3, 2) at time 15
[DBG]  Agent 24 | Start (global): 728 -> (local): (3, 2) at time 12 | Goal (global): 633 -> (local): (0, 3) at time 16
[DBG]  Agent 30 | Start (global): 729 -> (local): (3, 3) at time 12 | Goal (global): 632 -> (local): (0, 2) at time 16
[DBG]  Agent 46 | Start (global): 632 -> (local): (0, 2) at time 12 | Goal (global): 633 -> (local): (0, 3) at time 13
[DBG]  Agent 91 | Start (global): 633 -> (local): (0, 3) at time 12 | Goal (global): 633 -> (local): (0, 3) at time 12
[DBG]  Agent 109 | Start (global): 696 -> (local): (2, 2) at time 12 | Goal (global): 633 -> (local): (0, 3) at time 15
[DBG]  [REPAIR] SAT destroy operator called.
[DBG]  [REPAIR] SAT operator â€“ launching subproblem FOR OPTIMIZATION.
[DBG]  Creating local paths (sx, sy) in the submap for T_sync = 12
[DBG]    Agent 1 (global paths from T=12 to 15) has local path: (3,0) (3,1) (3,1) (3,2) 
[DBG]    Agent 24 (global paths from T=12 to 16) has local path: (3,2) (2,2) (1,2) (0,2) (0,3) 
[DBG]    Agent 30 (global paths from T=12 to 16) has local path: (3,3) (3,2) (2,2) (1,2) (0,2) 
[DBG]    Agent 46 (global paths from T=12 to 13) has local path: (0,2) (0,3) 
[DBG]    Agent 91 (global paths from T=12 to 12) has local path: (0,3) 
[DBG]    Agent 109 (global paths from T=12 to 15) has local path: (2,2) (1,2) (0,2) (0,3) 
[DBG]  Checking input data for SAT solver:
[DBG]    - Number of agents to replan: 6
[DBG]  Agent 1 has the original local path length: 4 => Start (3,0), Goal (3,2)
[DBG]  Agent 24 has the original local path length: 5 => Start (3,2), Goal (0,3)
[DBG]  Agent 30 has the original local path length: 5 => Start (3,3), Goal (0,2)
[DBG]  Agent 46 has the original local path length: 2 => Start (0,2), Goal (0,3)
[DBG]  Agent 91 has the original local path length: 1 => Start (0,3), Goal (0,3)
[DBG]  Agent 109 has the original local path length: 4 => Start (2,2), Goal (0,3)
[DBG]  Start position: (3, 0), (3, 2), (3, 3), (0, 2), (0, 3), (2, 2), 
[DBG]  Goal position: (3, 2), (0, 3), (0, 2), (0, 3), (0, 3), (0, 3), 
[DBG]  SAT instance and solver created.
Currently solving
Instance name: scen
Map name: map
Encoding used: disappear_at_goal
SAT solver used: Kissat
Optimizing function: sum of costs
Number of agents: 6
Mks LB: 5
SoC LB: 20
Delta: 0
Remaining time: 300000 [ms]

Vertex conflict! Agents 0, 3, timestep 3, location 0
Swapping conflict! Agents 0, 3, timestep 3, edge (0,0)
Vertex conflict! Agents 0, 3, timestep 4, location 0
Vertex conflict! Agents 0, 4, timestep 3, location 0
Swapping conflict! Agents 0, 4, timestep 3, edge (0,0)
Vertex conflict! Agents 0, 4, timestep 4, location 0
Vertex conflict! Agents 0, 5, timestep 4, location 0
Vertex conflict! Agents 3, 4, timestep 2, location 0
Swapping conflict! Agents 3, 4, timestep 2, edge (0,0)
Vertex conflict! Agents 3, 4, timestep 3, location 0
Swapping conflict! Agents 3, 4, timestep 3, edge (0,0)
Vertex conflict! Agents 3, 4, timestep 4, location 0
Vertex conflict! Agents 3, 5, timestep 4, location 0
Vertex conflict! Agents 4, 5, timestep 4, location 0
Found plan [agents = 6] [timesteps = 5]
Agent #0 : 7 8 9 0 0 
Agent #1 : 9 5 3 1 2 
Agent #2 : 10 9 5 3 1 
Agent #3 : 1 2 0 0 0 
Agent #4 : 2 0 0 0 0 
Agent #5 : 5 3 1 2 0 

[STAT] Solver returned: 0
[DBG]  Agent (index) 1 | New local path (submap idx):
[DBG]  7 8 9 
[DBG]  Agent (index) 24 | New local path (submap idx):
[DBG]  9 5 3 1 2 
[DBG]  Agent (index) 30 | New local path (submap idx):
[DBG]  10 9 5 3 1 
[DBG]  Agent (index) 46 | New local path (submap idx):
[DBG]  1 2 
[DBG]  Agent (index) 91 | New local path (submap idx):
[DBG]  2 
[DBG]  Agent (index) 109 | New local path (submap idx):
[DBG]  5 3 1 2 
[DBG]  Update the agent path 1 | Original local length: 4 | New local length: 3
[DBG]  agent 1 t=0 => decoded (sx,sy)=(3,0) => global_id=726
[DBG]  agent 1 t=1 => decoded (sx,sy)=(3,1) => global_id=727
[DBG]  agent 1 t=2 => decoded (sx,sy)=(3,2) => global_id=728
[DBG]  Complete path of agent 1:
[DBG]    Original: 949 950 918 886 854 822 821 820 788 756 757 725 726 727 727 728 
[DBG]    New:     949 950 918 886 854 822 821 820 788 756 757 725 726 727 728 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 949 950 918 886 854 822 821 820 788 756 757 725 
[DBG]    Local path (in submap): 726 727 728 
[DBG]    Suffix (out of submap): 
[DBG]  Original agent path length 1 je: 16
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 0: 949, 950, 918, 886, 854, 822, 821, 820, 788, 756, 757, 725, 726, 727, 728, 
[DBG]  Path for agent 1 updated, resulting length: 15
[DBG]  Update the agent path 24 | Original local length: 5 | New local length: 5
[DBG]  agent 24 t=0 => decoded (sx,sy)=(3,2) => global_id=728
[DBG]  agent 24 t=1 => decoded (sx,sy)=(2,2) => global_id=696
[DBG]  agent 24 t=2 => decoded (sx,sy)=(1,2) => global_id=664
[DBG]  agent 24 t=3 => decoded (sx,sy)=(0,2) => global_id=632
[DBG]  agent 24 t=4 => decoded (sx,sy)=(0,3) => global_id=633
[DBG]  Complete path of agent 24:
[DBG]    Original: 891 891 891 890 889 857 856 824 792 793 761 729 728 696 664 632 633 
[DBG]    New:     891 891 891 890 889 857 856 824 792 793 761 729 728 696 664 632 633 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 891 891 891 890 889 857 856 824 792 793 761 729 
[DBG]    Local path (in submap): 728 696 664 632 633 
[DBG]    Suffix (out of submap): 
[DBG]  Original agent path length 24 je: 17
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 1: 891, 891, 891, 890, 889, 857, 856, 824, 792, 793, 761, 729, 728, 696, 664, 632, 633, 
[DBG]  Path for agent 24 updated, resulting length: 17
[DBG]  Update the agent path 30 | Original local length: 5 | New local length: 5
[DBG]  agent 30 t=0 => decoded (sx,sy)=(3,3) => global_id=729
[DBG]  agent 30 t=1 => decoded (sx,sy)=(3,2) => global_id=728
[DBG]  agent 30 t=2 => decoded (sx,sy)=(2,2) => global_id=696
[DBG]  agent 30 t=3 => decoded (sx,sy)=(1,2) => global_id=664
[DBG]  agent 30 t=4 => decoded (sx,sy)=(0,2) => global_id=632
[DBG]  Complete path of agent 30:
[DBG]    Original: 922 922 922 922 890 889 888 856 824 792 793 761 729 728 696 664 632 600 601 569 570 571 539 507 506 538 506 505 505 504 503 
[DBG]    New:     922 922 922 922 890 889 888 856 824 792 793 761 729 728 696 664 632 600 601 569 570 571 539 507 506 538 506 505 505 504 503 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 922 922 922 922 890 889 888 856 824 792 793 761 
[DBG]    Local path (in submap): 729 728 696 664 632 
[DBG]    Suffix (out of submap): 600 601 569 570 571 539 507 506 538 506 505 505 504 503 
[DBG]  Original agent path length 30 je: 31
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 2: 922, 922, 922, 922, 890, 889, 888, 856, 824, 792, 793, 761, 729, 728, 696, 664, 632, 600, 601, 569, 570, 571, 539, 507, 506, 538, 506, 505, 505, 504, 503, 
[DBG]  Path for agent 30 updated, resulting length: 31
[DBG]  Update the agent path 46 | Original local length: 2 | New local length: 2
[DBG]  agent 46 t=0 => decoded (sx,sy)=(0,2) => global_id=632
[DBG]  agent 46 t=1 => decoded (sx,sy)=(0,3) => global_id=633
[DBG]  Complete path of agent 46:
[DBG]    Original: 786 787 788 756 724 724 725 726 727 728 696 664 632 633 601 569 570 571 539 540 508 476 444 412 380 348 349 317 285 284 252 
[DBG]    New:     786 787 788 756 724 724 725 726 727 728 696 664 632 633 601 569 570 571 539 540 508 476 444 412 380 348 349 317 285 284 252 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 786 787 788 756 724 724 725 726 727 728 696 664 
[DBG]    Local path (in submap): 632 633 
[DBG]    Suffix (out of submap): 601 569 570 571 539 540 508 476 444 412 380 348 349 317 285 284 252 
[DBG]  Original agent path length 46 je: 31
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 3: 786, 787, 788, 756, 724, 724, 725, 726, 727, 728, 696, 664, 632, 633, 601, 569, 570, 571, 539, 540, 508, 476, 444, 412, 380, 348, 349, 317, 285, 284, 252, 
[DBG]  Path for agent 46 updated, resulting length: 31
[DBG]  Update the agent path 91 | Original local length: 1 | New local length: 1
[DBG]  agent 91 t=0 => decoded (sx,sy)=(0,3) => global_id=633
[DBG]  Complete path of agent 91:
[DBG]    Original: 787 755 756 757 757 725 726 727 728 696 664 632 633 601 569 570 538 539 540 541 509 477 445 413 381 
[DBG]    New:     787 755 756 757 757 725 726 727 728 696 664 632 633 601 569 570 538 539 540 541 509 477 445 413 381 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 787 755 756 757 757 725 726 727 728 696 664 632 
[DBG]    Local path (in submap): 633 
[DBG]    Suffix (out of submap): 601 569 570 538 539 540 541 509 477 445 413 381 
[DBG]  Original agent path length 91 je: 25
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 4: 787, 755, 756, 757, 757, 725, 726, 727, 728, 696, 664, 632, 633, 601, 569, 570, 538, 539, 540, 541, 509, 477, 445, 413, 381, 
[DBG]  Path for agent 91 updated, resulting length: 25
[DBG]  Update the agent path 109 | Original local length: 4 | New local length: 4
[DBG]  agent 109 t=0 => decoded (sx,sy)=(2,2) => global_id=696
[DBG]  agent 109 t=1 => decoded (sx,sy)=(1,2) => global_id=664
[DBG]  agent 109 t=2 => decoded (sx,sy)=(0,2) => global_id=632
[DBG]  agent 109 t=3 => decoded (sx,sy)=(0,3) => global_id=633
[DBG]  Complete path of agent 109:
[DBG]    Original: 882 850 851 819 787 755 756 724 725 726 727 728 696 664 632 633 601 569 569 570 571 539 507 508 509 510 478 479 447 415 
[DBG]    New:     882 850 851 819 787 755 756 724 725 726 727 728 696 664 632 633 601 569 569 570 571 539 507 508 509 510 478 479 447 415 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 882 850 851 819 787 755 756 724 725 726 727 728 
[DBG]    Local path (in submap): 696 664 632 633 
[DBG]    Suffix (out of submap): 601 569 569 570 571 539 507 508 509 510 478 479 447 415 
[DBG]  Original agent path length 109 je: 30
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 5: 882, 850, 851, 819, 787, 755, 756, 724, 725, 726, 727, 728, 696, 664, 632, 633, 601, 569, 569, 570, 571, 539, 507, 508, 509, 510, 478, 479, 447, 415, 
[DBG]  Path for agent 109 updated, resulting length: 30
[DBG]  Paths successfully updated.
[DBG]  (LNS.cpp) New path for agent 1: 
[DBG]  949, 950, 918, 886, 854, 822, 821, 820, 788, 756, 757, 725, 726, 727, 728, 
[DBG]  (LNS.cpp) New path for agent 24: 
[DBG]  891, 891, 891, 890, 889, 857, 856, 824, 792, 793, 761, 729, 728, 696, 664, 632, 633, 
[DBG]  (LNS.cpp) New path for agent 30: 
[DBG]  922, 922, 922, 922, 890, 889, 888, 856, 824, 792, 793, 761, 729, 728, 696, 664, 632, 600, 601, 569, 570, 571, 539, 507, 506, 538, 506, 505, 505, 504, 503, 
[DBG]  (LNS.cpp) New path for agent 46: 
[DBG]  786, 787, 788, 756, 724, 724, 725, 726, 727, 728, 696, 664, 632, 633, 601, 569, 570, 571, 539, 540, 508, 476, 444, 412, 380, 348, 349, 317, 285, 284, 252, 
[DBG]  (LNS.cpp) New path for agent 91: 
[DBG]  787, 755, 756, 757, 757, 725, 726, 727, 728, 696, 664, 632, 633, 601, 569, 570, 538, 539, 540, 541, 509, 477, 445, 413, 381, 
[DBG]  (LNS.cpp) New path for agent 109: 
[DBG]  882, 850, 851, 819, 787, 755, 756, 724, 725, 726, 727, 728, 696, 664, 632, 633, 601, 569, 569, 570, 571, 539, 507, 508, 509, 510, 478, 479, 447, 415, 
[DBG]  component_weights = {0.390967, 0.0745895, 0.078002, 0.456442}
[DBG]  opSuccess value: 1
[STAT] neighbor.sum_of_costs before recomputation: 143
[STAT] neighbor.old_sum_of_costs before recomputation: 144
[STAT] sum_of_costs before recomputation: 4198
[DBG]  Validate solution immediately after SAT success.
[DBG]  No problems after SAT replan.
[DBG]  Recomputing sum_of_cost by dividing neighbor.sum_of_costs and neighbor.old_sum_of_costs
[STAT] sum_of_costs after recomputation: 4197
[STAT] Iteration 172
[DBG]  Using SAT operator (destroy+repair SAT).
[DBG]  ====================
[DBG]  SAT destroy operator called.
[DBG]  SAT heuristic: 2
[DBG]  key_agent_id: 38
[DBG]  key_agent_id global path length: 15
[DBG]  Submap content (global positions):
[DBG]  757 758 759 760 761 
[DBG]  789 790 791 792 793 
[DBG]  821 822 823 824 825 
[DBG]  853 854 855 856 857 
[DBG]  885 886 887 888 889 
[DBG]  Map content with agents and obstacles:
[DBG]  A X . X A 
[DBG]  X . X . A 
[DBG]  . . A . X 
[DBG]  X . . . . 
[DBG]  A A . . A 
[DBG]  content of the map structure that we pass to the SAT solver:
[DBG]  1  -1  1  -1  1  
[DBG]  -1  1  -1  1  1  
[DBG]  1  1  1  1  -1  
[DBG]  -1  1  1  1  1  
[DBG]  1  1  1  1  1  
[DBG]  Identifying agents in a submap for rescheduling (when key_agent is there at the time 3):
[DBG]  Agent 1 found intervals in the sub-map:
[DBG]   [3..6] [10..10]
[DBG]  Agent 1 (interval in submap: [3..6]) contains time 3, added to replan.
[DBG]  Agent 14 found intervals in the sub-map:
[DBG]   [3..8]
[DBG]  Agent 14 (interval in submap: [3..8]) contains time 3, added to replan.
[DBG]  Agent 24 found intervals in the sub-map:
[DBG]   [4..10]
[DBG]  Agent 24 is not in sub-map at time 3 (intervals: 
[DBG]  [4..10] )
[DBG]  Agent 38 found intervals in the sub-map:
[DBG]   [0..5]
[DBG]  Agent 38 (interval in submap: [0..5]) contains time 3, added to replan.
[DBG]  Agent 47 found intervals in the sub-map:
[DBG]   [2..8]
[DBG]  Agent 47 (interval in submap: [2..8]) contains time 3, added to replan.
[DBG]  Agent 49 found intervals in the sub-map:
[DBG]   [5..10]
[DBG]  Agent 49 is not in sub-map at time 3 (intervals: 
[DBG]  [5..10] )
[DBG]  Agent 50 found intervals in the sub-map:
[DBG]   [0..3]
[DBG]  Agent 50 (interval in submap: [0..3]) contains time 3, added to replan.
[DBG]  Agent 91 found intervals in the sub-map:
[DBG]   [3..4]
[DBG]  Agent 91 (interval in submap: [3..4]) contains time 3, added to replan.
[DBG]  Agent 135 found intervals in the sub-map:
[DBG]   [3..9]
[DBG]  Agent 135 (interval in submap: [3..9]) contains time 3, added to replan.
[DBG]  Agent 1 | Start (global): 886 -> (local): (4, 1) at time 3 | Goal (global): 821 -> (local): (2, 0) at time 6
[DBG]  Agent 14 | Start (global): 889 -> (local): (4, 4) at time 3 | Goal (global): 885 -> (local): (4, 0) at time 8
[DBG]  Agent 38 | Start (global): 823 -> (local): (2, 2) at time 3 | Goal (global): 821 -> (local): (2, 0) at time 5
[DBG]  Agent 47 | Start (global): 793 -> (local): (1, 4) at time 3 | Goal (global): 821 -> (local): (2, 0) at time 8
[DBG]  Agent 50 | Start (global): 885 -> (local): (4, 0) at time 3 | Goal (global): 885 -> (local): (4, 0) at time 3
[DBG]  Agent 91 | Start (global): 757 -> (local): (0, 0) at time 3 | Goal (global): 757 -> (local): (0, 0) at time 4
[DBG]  Agent 135 | Start (global): 761 -> (local): (0, 4) at time 3 | Goal (global): 821 -> (local): (2, 0) at time 9
[DBG]  [REPAIR] SAT destroy operator called.
[DBG]  [REPAIR] SAT operator â€“ launching subproblem FOR OPTIMIZATION.
[DBG]  Creating local paths (sx, sy) in the submap for T_sync = 3
[DBG]    Agent 1 (global paths from T=3 to 6) has local path: (4,1) (3,1) (2,1) (2,0) 
[DBG]    Agent 14 (global paths from T=3 to 8) has local path: (4,4) (4,3) (4,2) (4,1) (4,1) (4,0) 
[DBG]    Agent 38 (global paths from T=3 to 5) has local path: (2,2) (2,1) (2,0) 
[DBG]    Agent 47 (global paths from T=3 to 8) has local path: (1,4) (1,3) (2,3) (2,2) (2,1) (2,0) 
[DBG]    Agent 50 (global paths from T=3 to 3) has local path: (4,0) 
[DBG]    Agent 91 (global paths from T=3 to 4) has local path: (0,0) (0,0) 
[DBG]    Agent 135 (global paths from T=3 to 9) has local path: (0,4) (1,4) (1,3) (2,3) (2,2) (2,1) (2,0) 
[DBG]  Checking input data for SAT solver:
[DBG]    - Number of agents to replan: 7
[DBG]  Agent 1 has the original local path length: 4 => Start (4,1), Goal (2,0)
[DBG]  Agent 14 has the original local path length: 6 => Start (4,4), Goal (4,0)
[DBG]  Agent 38 has the original local path length: 3 => Start (2,2), Goal (2,0)
[DBG]  Agent 47 has the original local path length: 6 => Start (1,4), Goal (2,0)
[DBG]  Agent 50 has the original local path length: 1 => Start (4,0), Goal (4,0)
[DBG]  Agent 91 has the original local path length: 2 => Start (0,0), Goal (0,0)
[DBG]  Agent 135 has the original local path length: 7 => Start (0,4), Goal (2,0)
[DBG]  Start position: (4, 1), (4, 4), (2, 2), (1, 4), (4, 0), (0, 0), (0, 4), 
[DBG]  Goal position: (2, 0), (4, 0), (2, 0), (2, 0), (4, 0), (0, 0), (2, 0), 
[DBG]  SAT instance and solver created.
Currently solving
Instance name: scen
Map name: map
Encoding used: disappear_at_goal
SAT solver used: Kissat
Optimizing function: sum of costs
Number of agents: 7
Mks LB: 7
SoC LB: 27
Delta: 0
Remaining time: 300000 [ms]

Vertex conflict! Agents 0, 1, timestep 5, location 0
Swapping conflict! Agents 0, 1, timestep 5, edge (0,0)
Vertex conflict! Agents 0, 1, timestep 6, location 0
Vertex conflict! Agents 0, 2, timestep 4, location 0
Swapping conflict! Agents 0, 2, timestep 4, edge (0,0)
Vertex conflict! Agents 0, 2, timestep 5, location 0
Swapping conflict! Agents 0, 2, timestep 5, edge (0,0)
Vertex conflict! Agents 0, 2, timestep 6, location 0
Vertex conflict! Agents 0, 3, timestep 6, location 0
Vertex conflict! Agents 0, 4, timestep 4, location 0
Swapping conflict! Agents 0, 4, timestep 4, edge (0,0)
Vertex conflict! Agents 0, 4, timestep 5, location 0
Swapping conflict! Agents 0, 4, timestep 5, edge (0,0)
Vertex conflict! Agents 0, 4, timestep 6, location 0
Vertex conflict! Agents 0, 5, timestep 4, location 0
Swapping conflict! Agents 0, 5, timestep 4, edge (0,0)
Vertex conflict! Agents 0, 5, timestep 5, location 0
Swapping conflict! Agents 0, 5, timestep 5, edge (0,0)
Vertex conflict! Agents 0, 5, timestep 6, location 0
Vertex conflict! Agents 1, 2, timestep 5, location 0
Swapping conflict! Agents 1, 2, timestep 5, edge (0,0)
Vertex conflict! Agents 1, 2, timestep 6, location 0
Vertex conflict! Agents 1, 3, timestep 6, location 0
Vertex conflict! Agents 1, 4, timestep 5, location 0
Swapping conflict! Agents 1, 4, timestep 5, edge (0,0)
Vertex conflict! Agents 1, 4, timestep 6, location 0
Vertex conflict! Agents 1, 5, timestep 5, location 0
Swapping conflict! Agents 1, 5, timestep 5, edge (0,0)
Vertex conflict! Agents 1, 5, timestep 6, location 0
Vertex conflict! Agents 2, 3, timestep 6, location 0
Vertex conflict! Agents 2, 4, timestep 3, location 0
Swapping conflict! Agents 2, 4, timestep 3, edge (0,0)
Vertex conflict! Agents 2, 4, timestep 4, location 0
Swapping conflict! Agents 2, 4, timestep 4, edge (0,0)
Vertex conflict! Agents 2, 4, timestep 5, location 0
Swapping conflict! Agents 2, 4, timestep 5, edge (0,0)
Vertex conflict! Agents 2, 4, timestep 6, location 0
Vertex conflict! Agents 2, 5, timestep 3, location 0
Swapping conflict! Agents 2, 5, timestep 3, edge (0,0)
Vertex conflict! Agents 2, 5, timestep 4, location 0
Swapping conflict! Agents 2, 5, timestep 4, edge (0,0)
Vertex conflict! Agents 2, 5, timestep 5, location 0
Swapping conflict! Agents 2, 5, timestep 5, edge (0,0)
Vertex conflict! Agents 2, 5, timestep 6, location 0
Vertex conflict! Agents 3, 4, timestep 6, location 0
Vertex conflict! Agents 3, 5, timestep 6, location 0
Vertex conflict! Agents 4, 5, timestep 1, location 0
Swapping conflict! Agents 4, 5, timestep 1, edge (0,0)
Vertex conflict! Agents 4, 5, timestep 2, location 0
Swapping conflict! Agents 4, 5, timestep 2, edge (0,0)
Vertex conflict! Agents 4, 5, timestep 3, location 0
Swapping conflict! Agents 4, 5, timestep 3, edge (0,0)
Vertex conflict! Agents 4, 5, timestep 4, location 0
Swapping conflict! Agents 4, 5, timestep 4, edge (0,0)
Vertex conflict! Agents 4, 5, timestep 5, location 0
Swapping conflict! Agents 4, 5, timestep 5, edge (0,0)
Vertex conflict! Agents 4, 5, timestep 6, location 0
Found plan [agents = 7] [timesteps = 7]
Agent #0 : 15 10 7 6 0 0 0 
Agent #1 : 18 17 16 15 14 0 0 
Agent #2 : 8 7 6 0 0 0 0 
Agent #3 : 5 4 9 8 7 6 0 
Agent #4 : 14 0 0 0 0 0 0 
Agent #5 : 0 0 0 0 0 0 0 
Agent #6 : 2 5 4 9 8 7 6 

[STAT] Solver returned: 0
[DBG]  Agent (index) 1 | New local path (submap idx):
[DBG]  15 10 7 6 
[DBG]  Agent (index) 14 | New local path (submap idx):
[DBG]  18 17 16 15 14 
[DBG]  Agent (index) 38 | New local path (submap idx):
[DBG]  8 7 6 
[DBG]  Agent (index) 47 | New local path (submap idx):
[DBG]  5 4 9 8 7 6 
[DBG]  Agent (index) 50 | New local path (submap idx):
[DBG]  14 
[DBG]  Agent (index) 91 | New local path (submap idx):
[DBG]  0 
[DBG]  Agent (index) 135 | New local path (submap idx):
[DBG]  2 5 4 9 8 7 6 
[DBG]  Update the agent path 1 | Original local length: 4 | New local length: 4
[DBG]  agent 1 t=0 => decoded (sx,sy)=(4,1) => global_id=886
[DBG]  agent 1 t=1 => decoded (sx,sy)=(3,1) => global_id=854
[DBG]  agent 1 t=2 => decoded (sx,sy)=(2,1) => global_id=822
[DBG]  agent 1 t=3 => decoded (sx,sy)=(2,0) => global_id=821
[DBG]  Complete path of agent 1:
[DBG]    Original: 949 950 918 886 854 822 821 820 788 756 757 725 726 727 728 
[DBG]    New:     949 950 918 886 854 822 821 820 788 756 757 725 726 727 728 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 949 950 918 
[DBG]    Local path (in submap): 886 854 822 821 
[DBG]    Suffix (out of submap): 820 788 756 757 725 726 727 728 
[DBG]  Original agent path length 1 je: 15
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 0: 949, 950, 918, 886, 854, 822, 821, 820, 788, 756, 757, 725, 726, 727, 728, 
[DBG]  Path for agent 1 updated, resulting length: 15
[DBG]  Update the agent path 14 | Original local length: 6 | New local length: 5
[DBG]  agent 14 t=0 => decoded (sx,sy)=(4,4) => global_id=889
[DBG]  agent 14 t=1 => decoded (sx,sy)=(4,3) => global_id=888
[DBG]  agent 14 t=2 => decoded (sx,sy)=(4,2) => global_id=887
[DBG]  agent 14 t=3 => decoded (sx,sy)=(4,1) => global_id=886
[DBG]  agent 14 t=4 => decoded (sx,sy)=(4,0) => global_id=885
[DBG]  Complete path of agent 14:
[DBG]    Original: 859 858 890 889 888 887 886 886 885 884 883 882 881 880 912 880 881 881 880 879 878 877 876 875 874 873 841 809 808 807 
[DBG]    New:     859 858 890 889 888 887 886 885 884 883 882 881 880 912 880 881 881 880 879 878 877 876 875 874 873 841 809 808 807 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 859 858 890 
[DBG]    Local path (in submap): 889 888 887 886 885 884 
[DBG]    Suffix (out of submap): 883 882 881 880 912 880 881 881 880 879 878 877 876 875 874 873 841 809 808 807 
[DBG]  Original agent path length 14 je: 30
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 1: 859, 858, 890, 889, 888, 887, 886, 885, 884, 883, 882, 881, 880, 912, 880, 881, 881, 880, 879, 878, 877, 876, 875, 874, 873, 841, 809, 808, 807, 
[DBG]  Path for agent 14 updated, resulting length: 29
[DBG]  Update the agent path 38 | Original local length: 3 | New local length: 3
[DBG]  agent 38 t=0 => decoded (sx,sy)=(2,2) => global_id=823
[DBG]  agent 38 t=1 => decoded (sx,sy)=(2,1) => global_id=822
[DBG]  agent 38 t=2 => decoded (sx,sy)=(2,0) => global_id=821
[DBG]  Complete path of agent 38:
[DBG]    Original: 793 792 824 823 822 821 820 819 818 850 849 848 847 846 845 
[DBG]    New:     793 792 824 823 822 821 820 819 818 850 849 848 847 846 845 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 793 792 824 
[DBG]    Local path (in submap): 823 822 821 
[DBG]    Suffix (out of submap): 820 819 818 850 849 848 847 846 845 
[DBG]  Original agent path length 38 je: 15
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 2: 793, 792, 824, 823, 822, 821, 820, 819, 818, 850, 849, 848, 847, 846, 845, 
[DBG]  Path for agent 38 updated, resulting length: 15
[DBG]  Update the agent path 47 | Original local length: 6 | New local length: 6
[DBG]  agent 47 t=0 => decoded (sx,sy)=(1,4) => global_id=793
[DBG]  agent 47 t=1 => decoded (sx,sy)=(1,3) => global_id=792
[DBG]  agent 47 t=2 => decoded (sx,sy)=(2,3) => global_id=824
[DBG]  agent 47 t=3 => decoded (sx,sy)=(2,2) => global_id=823
[DBG]  agent 47 t=4 => decoded (sx,sy)=(2,1) => global_id=822
[DBG]  agent 47 t=5 => decoded (sx,sy)=(2,0) => global_id=821
[DBG]  Complete path of agent 47:
[DBG]    Original: 730 729 761 793 792 824 823 822 821 820 819 818 850 849 848 847 846 814 813 812 811 810 
[DBG]    New:     730 729 761 793 792 824 823 822 821 820 819 818 850 849 848 847 846 814 813 812 811 810 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 730 729 761 
[DBG]    Local path (in submap): 793 792 824 823 822 821 
[DBG]    Suffix (out of submap): 820 819 818 850 849 848 847 846 814 813 812 811 810 
[DBG]  Original agent path length 47 je: 22
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 3: 730, 729, 761, 793, 792, 824, 823, 822, 821, 820, 819, 818, 850, 849, 848, 847, 846, 814, 813, 812, 811, 810, 
[DBG]  Path for agent 47 updated, resulting length: 22
[DBG]  Update the agent path 50 | Original local length: 1 | New local length: 1
[DBG]  agent 50 t=0 => decoded (sx,sy)=(4,0) => global_id=885
[DBG]  Complete path of agent 50:
[DBG]    Original: 888 887 886 885 884 883 882 850 849 848 847 815 783 751 719 718 686 654 622 590 589 588 587 587 588 556 524 492 460 428 427 395 363 331 299 300 268 269 237 205 173 141 
[DBG]    New:     888 887 886 885 884 883 882 850 849 848 847 815 783 751 719 718 686 654 622 590 589 588 587 587 588 556 524 492 460 428 427 395 363 331 299 300 268 269 237 205 173 141 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 888 887 886 
[DBG]    Local path (in submap): 885 
[DBG]    Suffix (out of submap): 884 883 882 850 849 848 847 815 783 751 719 718 686 654 622 590 589 588 587 587 588 556 524 492 460 428 427 395 363 331 299 300 268 269 237 205 173 141 
[DBG]  Original agent path length 50 je: 42
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 4: 888, 887, 886, 885, 884, 883, 882, 850, 849, 848, 847, 815, 783, 751, 719, 718, 686, 654, 622, 590, 589, 588, 587, 587, 588, 556, 524, 492, 460, 428, 427, 395, 363, 331, 299, 300, 268, 269, 237, 205, 173, 141, 
[DBG]  Path for agent 50 updated, resulting length: 42
[DBG]  Update the agent path 91 | Original local length: 2 | New local length: 1
[DBG]  agent 91 t=0 => decoded (sx,sy)=(0,0) => global_id=757
[DBG]  Complete path of agent 91:
[DBG]    Original: 787 755 756 757 757 725 726 727 728 696 664 632 633 601 569 570 538 539 540 541 509 477 445 413 381 
[DBG]    New:     787 755 756 757 725 726 727 728 696 664 632 633 601 569 570 538 539 540 541 509 477 445 413 381 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 787 755 756 
[DBG]    Local path (in submap): 757 725 
[DBG]    Suffix (out of submap): 726 727 728 696 664 632 633 601 569 570 538 539 540 541 509 477 445 413 381 
[DBG]  Original agent path length 91 je: 25
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 5: 787, 755, 756, 757, 725, 726, 727, 728, 696, 664, 632, 633, 601, 569, 570, 538, 539, 540, 541, 509, 477, 445, 413, 381, 
[DBG]  Path for agent 91 updated, resulting length: 24
[DBG]  Update the agent path 135 | Original local length: 7 | New local length: 7
[DBG]  agent 135 t=0 => decoded (sx,sy)=(0,4) => global_id=761
[DBG]  agent 135 t=1 => decoded (sx,sy)=(1,4) => global_id=793
[DBG]  agent 135 t=2 => decoded (sx,sy)=(1,3) => global_id=792
[DBG]  agent 135 t=3 => decoded (sx,sy)=(2,3) => global_id=824
[DBG]  agent 135 t=4 => decoded (sx,sy)=(2,2) => global_id=823
[DBG]  agent 135 t=5 => decoded (sx,sy)=(2,1) => global_id=822
[DBG]  agent 135 t=6 => decoded (sx,sy)=(2,0) => global_id=821
[DBG]  Complete path of agent 135:
[DBG]    Original: 696 728 729 761 793 792 824 823 822 821 820 819 818 817 849 848 847 846 814 813 812 780 748 747 715 714 682 650 649 617 585 584 584 583 582 581 549 548 516 515 483 482 450 449 448 416 384 
[DBG]    New:     696 728 729 761 793 792 824 823 822 821 820 819 818 817 849 848 847 846 814 813 812 780 748 747 715 714 682 650 649 617 585 584 584 583 582 581 549 548 516 515 483 482 450 449 448 416 384 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 696 728 729 
[DBG]    Local path (in submap): 761 793 792 824 823 822 821 
[DBG]    Suffix (out of submap): 820 819 818 817 849 848 847 846 814 813 812 780 748 747 715 714 682 650 649 617 585 584 584 583 582 581 549 548 516 515 483 482 450 449 448 416 384 
[DBG]  Original agent path length 135 je: 47
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 6: 696, 728, 729, 761, 793, 792, 824, 823, 822, 821, 820, 819, 818, 817, 849, 848, 847, 846, 814, 813, 812, 780, 748, 747, 715, 714, 682, 650, 649, 617, 585, 584, 584, 583, 582, 581, 549, 548, 516, 515, 483, 482, 450, 449, 448, 416, 384, 
[DBG]  Path for agent 135 updated, resulting length: 47
[DBG]  Paths successfully updated.
[DBG]  (LNS.cpp) New path for agent 1: 
[DBG]  949, 950, 918, 886, 854, 822, 821, 820, 788, 756, 757, 725, 726, 727, 728, 
[DBG]  (LNS.cpp) New path for agent 14: 
[DBG]  859, 858, 890, 889, 888, 887, 886, 885, 884, 883, 882, 881, 880, 912, 880, 881, 881, 880, 879, 878, 877, 876, 875, 874, 873, 841, 809, 808, 807, 
[DBG]  (LNS.cpp) New path for agent 38: 
[DBG]  793, 792, 824, 823, 822, 821, 820, 819, 818, 850, 849, 848, 847, 846, 845, 
[DBG]  (LNS.cpp) New path for agent 47: 
[DBG]  730, 729, 761, 793, 792, 824, 823, 822, 821, 820, 819, 818, 850, 849, 848, 847, 846, 814, 813, 812, 811, 810, 
[DBG]  (LNS.cpp) New path for agent 50: 
[DBG]  888, 887, 886, 885, 884, 883, 882, 850, 849, 848, 847, 815, 783, 751, 719, 718, 686, 654, 622, 590, 589, 588, 587, 587, 588, 556, 524, 492, 460, 428, 427, 395, 363, 331, 299, 300, 268, 269, 237, 205, 173, 141, 
[DBG]  (LNS.cpp) New path for agent 91: 
[DBG]  787, 755, 756, 757, 725, 726, 727, 728, 696, 664, 632, 633, 601, 569, 570, 538, 539, 540, 541, 509, 477, 445, 413, 381, 
[DBG]  (LNS.cpp) New path for agent 135: 
[DBG]  696, 728, 729, 761, 793, 792, 824, 823, 822, 821, 820, 819, 818, 817, 849, 848, 847, 846, 814, 813, 812, 780, 748, 747, 715, 714, 682, 650, 649, 617, 585, 584, 584, 583, 582, 581, 549, 548, 516, 515, 483, 482, 450, 449, 448, 416, 384, 
[DBG]  component_weights = {0.387339, 0.0738975, 0.0772783, 0.461485}
[DBG]  opSuccess value: 1
[STAT] neighbor.sum_of_costs before recomputation: 187
[STAT] neighbor.old_sum_of_costs before recomputation: 189
[STAT] sum_of_costs before recomputation: 4197
[DBG]  Validate solution immediately after SAT success.
[WARNING] Problem after SAT: Vertex conflict between agents 14 and 39 at location 880 at timestep 14
[DBG]  Attempting immediate repair via init_lns because problem occurred after SAT (should be applied only for conflicts...).
[DBG]  Passing 150 agents to init_lns (skip=true).
[DBG]  path_table contents for selected agents (neighbor.agents):
[DBG]    Agent 1 => controlling path length=15
[DBG]    Agent 14 => controlling path length=29
[DBG]    Agent 38 => controlling path length=15
[DBG]    Agent 47 => controlling path length=22
[DBG]    Agent 50 => controlling path length=42
[DBG]    Agent 91 => controlling path length=24
[DBG]    Agent 135 => controlling path length=47
[DBG]  hodnota skip_initial_solution=1
[DBG]  We skip initialSolution => call buildCollisionData()
[DBG]  buildCollisionData() called â€“ skip_initial_solution case.
[DBG]  Agents.size()=150, collision_graph.size()=150
[DBG]  agent 14 => updateCollidingPairs => foundCollision
[DBG]  agent 39 => updateCollidingPairs => foundCollision
[DBG]  agent 91 => updateCollidingPairs => foundCollision
[DBG]  agent 101 => updateCollidingPairs => foundCollision
[DBG]  agent 108 => updateCollidingPairs => foundCollision
[DBG]  agent 111 => updateCollidingPairs => foundCollision
[DBG]  Conflicting agent pairs:
[DBG]  agent 14 is in conflict with agent 39
[DBG]  agent 14 is in conflict with agent 101
[DBG]  agent 14 is in conflict with agent 111
[DBG]  agent 91 is in conflict with agent 108
[DBG]  buildCollisionData() => sum_of_costs=4195, num_of_colliding_pairs=4
[DBG]  buildCollisionData done => sum_of_costs=4195, num_of_colliding_pairs=4
[DBG]  sum_of_cost hodnota: 4195
[DBG]  After skip/init build => iteration_stats.back(): sum_of_costs=4195, collisions=4
[DEBUG] Using default neighbor generation strategy for conflicts: 2
[DEBUG] Using default neighbor generation strategy for conflicts: 2
[DEBUG] Using default neighbor generation strategy for conflicts: 1
	InitLNS(PP): runtime = 0.0120033, iterations = 4, colliding pairs = 0, initial colliding pairs = 4, solution cost = 4197, initial solution cost = 4195, failed iterations = 0
[DBG]  init_lns->sum_of_costs after init_lns->run: 4197
[DBG]  sum_of_costs after assignment from init_lns->run: 4197
[DBG]  Recomputing sum_of_cost by dividing neighbor.sum_of_costs and neighbor.old_sum_of_costs
[STAT] sum_of_costs after recomputation: 4197
[STAT] Iteration 173
[DBG]  Using SAT operator (destroy+repair SAT).
[DBG]  ====================
[DBG]  SAT destroy operator called.
[DBG]  SAT heuristic: 2
[DBG]  key_agent_id: 90
[DBG]  key_agent_id global path length: 17
[DBG]  Submap content (global positions):
[DBG]  -1 -1 608 609 610 
[DBG]  -1 -1 640 641 642 
[DBG]  -1 -1 672 673 674 
[DBG]  -1 -1 704 705 706 
[DBG]  -1 -1 736 737 738 
[DBG]  Map content with agents and obstacles:
[DBG]  X X . . . 
[DBG]  X X . X . 
[DBG]  X X A . . 
[DBG]  X X . . X 
[DBG]  X X . . . 
[DBG]  content of the map structure that we pass to the SAT solver:
[DBG]  1  1  1  1  1  
[DBG]  1  1  1  -1  1  
[DBG]  1  1  1  1  1  
[DBG]  1  1  1  1  -1  
[DBG]  1  1  1  1  1  
[DBG]  Identifying agents in a submap for rescheduling (when key_agent is there at the time 11):
[DBG]  Agent 73 found intervals in the sub-map:
[DBG]   [0..0]
[DBG]  Agent 73 is not in sub-map at time 11 (intervals: 
[DBG]  [0..0] )
[DBG]  Agent 90 found intervals in the sub-map:
[DBG]   [9..16]
[DBG]  Agent 90 (interval in submap: [9..16]) contains time 11, added to replan.
[DBG]  Agent 98 found intervals in the sub-map:
[DBG]   [6..8]
[DBG]  Agent 98 is not in sub-map at time 11 (intervals: 
[DBG]  [6..8] )
[DBG]  Agent 90 | Start (global): 672 -> (local): (2, 2) at time 11 | Goal (global): 642 -> (local): (1, 4) at time 16
[DBG]  [REPAIR] SAT destroy operator called.
[DBG]  [REPAIR] SAT operator â€“ launching subproblem FOR OPTIMIZATION.
[DBG]  Creating local paths (sx, sy) in the submap for T_sync = 11
[DBG]    Agent 90 (global paths from T=11 to 16) has local path: (2,2) (1,2) (0,2) (0,3) (0,4) (1,4) 
[DBG]  Checking input data for SAT solver:
[DBG]    - Number of agents to replan: 1
[DBG]  Agent 90 has the original local path length: 6 => Start (2,2), Goal (1,4)
[DBG]  Start position: (2, 2), 
[DBG]  Goal position: (1, 4), 
[DBG]  SAT instance and solver created.
Currently solving
Instance name: scen
Map name: map
Encoding used: disappear_at_goal
SAT solver used: Kissat
Optimizing function: sum of costs
Number of agents: 1
Mks LB: 4
SoC LB: 4
Delta: 0
Remaining time: 300000 [ms]

Found plan [agents = 1] [timesteps = 4]
Agent #0 : 11 12 13 8 

[STAT] Solver returned: 0
[DBG]  Agent (index) 90 | New local path (submap idx):
[DBG]  11 12 13 8 
[DBG]  Update the agent path 90 | Original local length: 6 | New local length: 4
[DBG]  agent 90 t=0 => decoded (sx,sy)=(2,2) => global_id=672
[DBG]  agent 90 t=1 => decoded (sx,sy)=(2,3) => global_id=673
[DBG]  agent 90 t=2 => decoded (sx,sy)=(2,4) => global_id=674
[DBG]  agent 90 t=3 => decoded (sx,sy)=(1,4) => global_id=642
[DBG]  Complete path of agent 90:
[DBG]    Original: 962 930 929 897 865 864 832 800 768 736 704 672 640 608 609 610 642 
[DBG]    New:     962 930 929 897 865 864 832 800 768 736 704 672 673 674 642 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 962 930 929 897 865 864 832 800 768 736 704 
[DBG]    Local path (in submap): 672 673 674 642 
[DBG]    Suffix (out of submap): 
[DBG]  Original agent path length 90 je: 17
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 0: 962, 930, 929, 897, 865, 864, 832, 800, 768, 736, 704, 672, 673, 674, 642, 
[DBG]  Path for agent 90 updated, resulting length: 15
[DBG]  Paths successfully updated.
[DBG]  (LNS.cpp) New path for agent 90: 
[DBG]  962, 930, 929, 897, 865, 864, 832, 800, 768, 736, 704, 672, 673, 674, 642, 
[DBG]  component_weights = {0.383502, 0.0731654, 0.0765126, 0.46682}
[DBG]  opSuccess value: 1
[STAT] neighbor.sum_of_costs before recomputation: 14
[STAT] neighbor.old_sum_of_costs before recomputation: 16
[STAT] sum_of_costs before recomputation: 4197
[DBG]  Validate solution immediately after SAT success.
[WARNING] Problem after SAT: Target conflict: agent 90 (len 14) traverses target of agent 99 (len 7) at location 674 at timestep 13
[DBG]  Attempting immediate repair via init_lns because problem occurred after SAT (should be applied only for conflicts...).
[DBG]  Passing 150 agents to init_lns (skip=true).
[DBG]  path_table contents for selected agents (neighbor.agents):
[DBG]    Agent 90 => controlling path length=15
[DBG]  hodnota skip_initial_solution=1
[DBG]  We skip initialSolution => call buildCollisionData()
[DBG]  buildCollisionData() called â€“ skip_initial_solution case.
[DBG]  Agents.size()=150, collision_graph.size()=150
[DBG]  agent 90 => updateCollidingPairs => foundCollision
[DBG]  agent 99 => updateCollidingPairs => foundCollision
[DBG]  Conflicting agent pairs:
[DBG]  agent 90 is in conflict with agent 99
[DBG]  buildCollisionData() => sum_of_costs=4195, num_of_colliding_pairs=1
[DBG]  buildCollisionData done => sum_of_costs=4195, num_of_colliding_pairs=1
[DBG]  sum_of_cost hodnota: 4195
[DBG]  After skip/init build => iteration_stats.back(): sum_of_costs=4195, collisions=1
[DEBUG] Using default neighbor generation strategy for conflicts: 2
	InitLNS(PP): runtime = 0.00357129, iterations = 2, colliding pairs = 0, initial colliding pairs = 1, solution cost = 4185, initial solution cost = 4195, failed iterations = 0
[DBG]  init_lns->sum_of_costs after init_lns->run: 4185
[DBG]  sum_of_costs after assignment from init_lns->run: 4185
[DBG]  Recomputing sum_of_cost by dividing neighbor.sum_of_costs and neighbor.old_sum_of_costs
[STAT] sum_of_costs after recomputation: 4185
[STAT] Iteration 174
[DBG]  Using SAT operator (destroy+repair SAT).
[DBG]  ====================
[DBG]  SAT destroy operator called.
[DBG]  SAT heuristic: 2
[DBG]  key_agent_id: 124
[DBG]  key_agent_id global path length: 24
[DBG]  Submap content (global positions):
[DBG]  61 62 63 -1 -1 
[DBG]  93 94 95 -1 -1 
[DBG]  125 126 127 -1 -1 
[DBG]  157 158 159 -1 -1 
[DBG]  189 190 191 -1 -1 
[DBG]  Map content with agents and obstacles:
[DBG]  . . . X X 
[DBG]  . . . X X 
[DBG]  X . A X X 
[DBG]  . . . X X 
[DBG]  . X X X X 
[DBG]  content of the map structure that we pass to the SAT solver:
[DBG]  1  1  1  1  1  
[DBG]  1  1  1  1  1  
[DBG]  -1  1  1  1  1  
[DBG]  1  1  1  1  1  
[DBG]  1  -1  -1  1  1  
[DBG]  Identifying agents in a submap for rescheduling (when key_agent is there at the time 23):
[DBG]  Agent 124 found intervals in the sub-map:
[DBG]   [19..23]
[DBG]  Agent 124 (interval in submap: [19..23]) contains time 23, added to replan.
[DBG]  Agent 124 | Start (global): 127 -> (local): (2, 2) at time 23 | Goal (global): 127 -> (local): (2, 2) at time 23
[DBG]  [REPAIR] SAT destroy operator called.
[DBG]  [REPAIR] SAT operator â€“ launching subproblem FOR OPTIMIZATION.
[DBG]  Creating local paths (sx, sy) in the submap for T_sync = 23
[DBG]    Agent 124 (global paths from T=23 to 23) has local path: (2,2) 
[DBG]  Checking input data for SAT solver:
[DBG]    - Number of agents to replan: 1
[DBG]  Agent 124 has the original local path length: 1 => Start (2,2), Goal (2,2)
[DBG]  Start position: (2, 2), 
[DBG]  Goal position: (2, 2), 
[DBG]  SAT instance and solver created.
Currently solving
Instance name: scen
Map name: map
Encoding used: disappear_at_goal
SAT solver used: Kissat
Optimizing function: sum of costs
Number of agents: 1
Mks LB: 1
SoC LB: 1
Delta: 0
Remaining time: 300000 [ms]

Found plan [agents = 1] [timesteps = 1]
Agent #0 : 11 

[STAT] Solver returned: 0
[DBG]  Agent (index) 124 | New local path (submap idx):
[DBG]  11 
[DBG]  Update the agent path 124 | Original local length: 1 | New local length: 1
[DBG]  agent 124 t=0 => decoded (sx,sy)=(2,2) => global_id=127
[DBG]  Complete path of agent 124:
[DBG]    Original: 502 503 504 472 473 474 475 443 411 379 347 348 349 317 285 284 252 220 221 189 157 158 159 127 
[DBG]    New:     502 503 504 472 473 474 475 443 411 379 347 348 349 317 285 284 252 220 221 189 157 158 159 127 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 502 503 504 472 473 474 475 443 411 379 347 348 349 317 285 284 252 220 221 189 157 158 159 
[DBG]    Local path (in submap): 127 
[DBG]    Suffix (out of submap): 
[DBG]  Original agent path length 124 je: 24
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 0: 502, 503, 504, 472, 473, 474, 475, 443, 411, 379, 347, 348, 349, 317, 285, 284, 252, 220, 221, 189, 157, 158, 159, 127, 
[DBG]  Path for agent 124 updated, resulting length: 24
[DBG]  Paths successfully updated.
[DBG]  (LNS.cpp) New path for agent 124: 
[DBG]  502, 503, 504, 472, 473, 474, 475, 443, 411, 379, 347, 348, 349, 317, 285, 284, 252, 220, 221, 189, 157, 158, 159, 127, 
[DBG]  component_weights = {0.388289, 0.0725972, 0.0759185, 0.463195}
[DBG]  opSuccess value: 1
[STAT] neighbor.sum_of_costs before recomputation: 23
[STAT] neighbor.old_sum_of_costs before recomputation: 23
[STAT] sum_of_costs before recomputation: 4185
[DBG]  Validate solution immediately after SAT success.
[DBG]  No problems after SAT replan.
[DBG]  Recomputing sum_of_cost by dividing neighbor.sum_of_costs and neighbor.old_sum_of_costs
[STAT] sum_of_costs after recomputation: 4185
[STAT] Iteration 175
[DBG]  Using SAT operator (destroy+repair SAT).
[DBG]  ====================
[DBG]  SAT destroy operator called.
[DBG]  SAT heuristic: 2
[DBG]  key_agent_id: 129
[DBG]  key_agent_id global path length: 14
[DBG]  Submap content (global positions):
[DBG]  218 219 220 221 222 
[DBG]  250 251 252 253 254 
[DBG]  282 283 284 285 286 
[DBG]  314 315 316 317 318 
[DBG]  346 347 348 349 350 
[DBG]  Map content with agents and obstacles:
[DBG]  . X . . . 
[DBG]  X . . X . 
[DBG]  X . A . . 
[DBG]  . X X . . 
[DBG]  X . . A . 
[DBG]  content of the map structure that we pass to the SAT solver:
[DBG]  1  -1  1  1  1  
[DBG]  -1  1  1  -1  1  
[DBG]  -1  1  1  1  1  
[DBG]  1  -1  -1  1  1  
[DBG]  -1  1  1  1  1  
[DBG]  Identifying agents in a submap for rescheduling (when key_agent is there at the time 12):
[DBG]  Agent 44 found intervals in the sub-map:
[DBG]  
[DBG]  Agent 44 is not in sub-map at time 12 (intervals: 
[DBG]  )
[DBG]  Agent 124 found intervals in the sub-map:
[DBG]   [10..18]
[DBG]  Agent 124 (interval in submap: [10..18]) contains time 12, added to replan.
[DBG]  Agent 129 found intervals in the sub-map:
[DBG]   [9..13]
[DBG]  Agent 129 (interval in submap: [9..13]) contains time 12, added to replan.
[DBG]  Agent 124 | Start (global): 349 -> (local): (4, 3) at time 12 | Goal (global): 221 -> (local): (0, 3) at time 18
[DBG]  Agent 129 | Start (global): 284 -> (local): (2, 2) at time 12 | Goal (global): 283 -> (local): (2, 1) at time 13
[DBG]  [REPAIR] SAT destroy operator called.
[DBG]  [REPAIR] SAT operator â€“ launching subproblem FOR OPTIMIZATION.
[DBG]  Creating local paths (sx, sy) in the submap for T_sync = 12
[DBG]    Agent 124 (global paths from T=12 to 18) has local path: (4,3) (3,3) (2,3) (2,2) (1,2) (0,2) (0,3) 
[DBG]    Agent 129 (global paths from T=12 to 13) has local path: (2,2) (2,1) 
[DBG]  Checking input data for SAT solver:
[DBG]    - Number of agents to replan: 2
[DBG]  Agent 124 has the original local path length: 7 => Start (4,3), Goal (0,3)
[DBG]  Agent 129 has the original local path length: 2 => Start (2,2), Goal (2,1)
[DBG]  Start position: (4, 3), (2, 2), 
[DBG]  Goal position: (0, 3), (2, 1), 
[DBG]  SAT instance and solver created.
Currently solving
Instance name: scen
Map name: map
Encoding used: disappear_at_goal
SAT solver used: Kissat
Optimizing function: sum of costs
Number of agents: 2
Mks LB: 7
SoC LB: 9
Delta: 0
Remaining time: 300000 [ms]

Found plan [agents = 2] [timesteps = 7]
Agent #0 : 16 17 13 10 6 3 2 
Agent #1 : 8 7 0 0 0 0 0 

[STAT] Solver returned: 0
[DBG]  Agent (index) 124 | New local path (submap idx):
[DBG]  16 17 13 10 6 3 2 
[DBG]  Agent (index) 129 | New local path (submap idx):
[DBG]  8 7 
[DBG]  Update the agent path 124 | Original local length: 7 | New local length: 7
[DBG]  agent 124 t=0 => decoded (sx,sy)=(4,3) => global_id=349
[DBG]  agent 124 t=1 => decoded (sx,sy)=(4,4) => global_id=350
[DBG]  agent 124 t=2 => decoded (sx,sy)=(3,4) => global_id=318
[DBG]  agent 124 t=3 => decoded (sx,sy)=(2,4) => global_id=286
[DBG]  agent 124 t=4 => decoded (sx,sy)=(1,4) => global_id=254
[DBG]  agent 124 t=5 => decoded (sx,sy)=(0,4) => global_id=222
[DBG]  agent 124 t=6 => decoded (sx,sy)=(0,3) => global_id=221
[DBG]  Complete path of agent 124:
[DBG]    Original: 502 503 504 472 473 474 475 443 411 379 347 348 349 317 285 284 252 220 221 189 157 158 159 127 
[DBG]    New:     502 503 504 472 473 474 475 443 411 379 347 348 349 350 318 286 254 222 221 189 157 158 159 127 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 502 503 504 472 473 474 475 443 411 379 347 348 
[DBG]    Local path (in submap): 349 350 318 286 254 222 221 
[DBG]    Suffix (out of submap): 189 157 158 159 127 
[DBG]  Original agent path length 124 je: 24
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 0: 502, 503, 504, 472, 473, 474, 475, 443, 411, 379, 347, 348, 349, 350, 318, 286, 254, 222, 221, 189, 157, 158, 159, 127, 
[DBG]  Path for agent 124 updated, resulting length: 24
[DBG]  Update the agent path 129 | Original local length: 2 | New local length: 2
[DBG]  agent 129 t=0 => decoded (sx,sy)=(2,2) => global_id=284
[DBG]  agent 129 t=1 => decoded (sx,sy)=(2,1) => global_id=283
[DBG]  Complete path of agent 129:
[DBG]    Original: 505 473 474 475 476 477 445 413 381 349 317 285 284 283 
[DBG]    New:     505 473 474 475 476 477 445 413 381 349 317 285 284 283 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 505 473 474 475 476 477 445 413 381 349 317 285 
[DBG]    Local path (in submap): 284 283 
[DBG]    Suffix (out of submap): 
[DBG]  Original agent path length 129 je: 14
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 1: 505, 473, 474, 475, 476, 477, 445, 413, 381, 349, 317, 285, 284, 283, 
[DBG]  Path for agent 129 updated, resulting length: 14
[DBG]  Paths successfully updated.
[DBG]  (LNS.cpp) New path for agent 124: 
[DBG]  502, 503, 504, 472, 473, 474, 475, 443, 411, 379, 347, 348, 349, 350, 318, 286, 254, 222, 221, 189, 157, 158, 159, 127, 
[DBG]  (LNS.cpp) New path for agent 129: 
[DBG]  505, 473, 474, 475, 476, 477, 445, 413, 381, 349, 317, 285, 284, 283, 
[DBG]  component_weights = {0.393099, 0.0720264, 0.0753216, 0.459553}
[DBG]  opSuccess value: 1
[STAT] neighbor.sum_of_costs before recomputation: 36
[STAT] neighbor.old_sum_of_costs before recomputation: 36
[STAT] sum_of_costs before recomputation: 4185
[DBG]  Validate solution immediately after SAT success.
[DBG]  No problems after SAT replan.
[DBG]  Recomputing sum_of_cost by dividing neighbor.sum_of_costs and neighbor.old_sum_of_costs
[STAT] sum_of_costs after recomputation: 4185
[STAT] Iteration 176
[DBG]  Using SAT operator (destroy+repair SAT).
[DBG]  ====================
[DBG]  SAT destroy operator called.
[DBG]  SAT heuristic: 2
[DBG]  key_agent_id: 0
[DBG]  key_agent_id global path length: 43
[DBG]  Submap content (global positions):
[DBG]  755 756 757 758 759 
[DBG]  787 788 789 790 791 
[DBG]  819 820 821 822 823 
[DBG]  851 852 853 854 855 
[DBG]  883 884 885 886 887 
[DBG]  Map content with agents and obstacles:
[DBG]  . A . X . 
[DBG]  . . X . X 
[DBG]  . . A . . 
[DBG]  . X X . . 
[DBG]  . . . . . 
[DBG]  content of the map structure that we pass to the SAT solver:
[DBG]  1  1  1  -1  1  
[DBG]  1  1  -1  1  -1  
[DBG]  1  1  1  1  1  
[DBG]  1  -1  -1  1  1  
[DBG]  1  1  1  1  1  
[DBG]  Identifying agents in a submap for rescheduling (when key_agent is there at the time 29):
[DBG]  Agent 0 found intervals in the sub-map:
[DBG]   [26..31]
[DBG]  Agent 0 (interval in submap: [26..31]) contains time 29, added to replan.
[DBG]  Agent 3 found intervals in the sub-map:
[DBG]   [25..28]
[DBG]  Agent 3 is not in sub-map at time 29 (intervals: 
[DBG]  [25..28] )
[DBG]  Agent 24 found intervals in the sub-map:
[DBG]  
[DBG]  Agent 24 is not in sub-map at time 29 (intervals: 
[DBG]  )
[DBG]  Agent 45 found intervals in the sub-map:
[DBG]  
[DBG]  Agent 45 is not in sub-map at time 29 (intervals: 
[DBG]  )
[DBG]  Agent 53 found intervals in the sub-map:
[DBG]   [28..32]
[DBG]  Agent 53 (interval in submap: [28..32]) contains time 29, added to replan.
[DBG]  Agent 71 found intervals in the sub-map:
[DBG]   [30..32]
[DBG]  Agent 71 is not in sub-map at time 29 (intervals: 
[DBG]  [30..32] )
[DBG]  Agent 0 | Start (global): 821 -> (local): (2, 2) at time 29 | Goal (global): 823 -> (local): (2, 4) at time 31
[DBG]  Agent 53 | Start (global): 756 -> (local): (0, 1) at time 29 | Goal (global): 821 -> (local): (2, 2) at time 32
[DBG]  [REPAIR] SAT destroy operator called.
[DBG]  [REPAIR] SAT operator â€“ launching subproblem FOR OPTIMIZATION.
[DBG]  Creating local paths (sx, sy) in the submap for T_sync = 29
[DBG]    Agent 0 (global paths from T=29 to 31) has local path: (2,2) (2,3) (2,4) 
[DBG]    Agent 53 (global paths from T=29 to 32) has local path: (0,1) (1,1) (2,1) (2,2) 
[DBG]  Checking input data for SAT solver:
[DBG]    - Number of agents to replan: 2
[DBG]  Agent 0 has the original local path length: 3 => Start (2,2), Goal (2,4)
[DBG]  Agent 53 has the original local path length: 4 => Start (0,1), Goal (2,2)
[DBG]  Start position: (2, 2), (0, 1), 
[DBG]  Goal position: (2, 4), (2, 2), 
[DBG]  SAT instance and solver created.
Currently solving
Instance name: scen
Map name: map
Encoding used: disappear_at_goal
SAT solver used: Kissat
Optimizing function: sum of costs
Number of agents: 2
Mks LB: 4
SoC LB: 7
Delta: 0
Remaining time: 300000 [ms]

Found plan [agents = 2] [timesteps = 4]
Agent #0 : 9 10 11 0 
Agent #1 : 1 5 8 9 

[STAT] Solver returned: 0
[DBG]  Agent (index) 0 | New local path (submap idx):
[DBG]  9 10 11 
[DBG]  Agent (index) 53 | New local path (submap idx):
[DBG]  1 5 8 9 
[DBG]  Update the agent path 0 | Original local length: 3 | New local length: 3
[DBG]  agent 0 t=0 => decoded (sx,sy)=(2,2) => global_id=821
[DBG]  agent 0 t=1 => decoded (sx,sy)=(2,3) => global_id=822
[DBG]  agent 0 t=2 => decoded (sx,sy)=(2,4) => global_id=823
[DBG]  Complete path of agent 0:
[DBG]    Original: 517 549 550 550 582 583 584 585 617 649 650 651 683 684 685 653 654 655 656 656 657 658 659 660 692 724 756 788 820 821 822 823 824 856 857 858 859 860 861 862 830 798 799 
[DBG]    New:     517 549 550 550 582 583 584 585 617 649 650 651 683 684 685 653 654 655 656 656 657 658 659 660 692 724 756 788 820 821 822 823 824 856 857 858 859 860 861 862 830 798 799 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 517 549 550 550 582 583 584 585 617 649 650 651 683 684 685 653 654 655 656 656 657 658 659 660 692 724 756 788 820 
[DBG]    Local path (in submap): 821 822 823 
[DBG]    Suffix (out of submap): 824 856 857 858 859 860 861 862 830 798 799 
[DBG]  Original agent path length 0 je: 43
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 0: 517, 549, 550, 550, 582, 583, 584, 585, 617, 649, 650, 651, 683, 684, 685, 653, 654, 655, 656, 656, 657, 658, 659, 660, 692, 724, 756, 788, 820, 821, 822, 823, 824, 856, 857, 858, 859, 860, 861, 862, 830, 798, 799, 
[DBG]  Path for agent 0 updated, resulting length: 43
[DBG]  Update the agent path 53 | Original local length: 4 | New local length: 4
[DBG]  agent 53 t=0 => decoded (sx,sy)=(0,1) => global_id=756
[DBG]  agent 53 t=1 => decoded (sx,sy)=(1,1) => global_id=788
[DBG]  agent 53 t=2 => decoded (sx,sy)=(2,1) => global_id=820
[DBG]  agent 53 t=3 => decoded (sx,sy)=(2,2) => global_id=821
[DBG]  Complete path of agent 53:
[DBG]    Original: 84 116 148 180 212 244 276 308 340 339 371 371 403 435 467 499 531 530 529 561 593 625 657 658 659 660 692 724 756 756 788 820 821 
[DBG]    New:     84 116 148 180 212 244 276 308 340 339 371 371 403 435 467 499 531 530 529 561 593 625 657 658 659 660 692 724 756 756 788 820 821 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 84 116 148 180 212 244 276 308 340 339 371 371 403 435 467 499 531 530 529 561 593 625 657 658 659 660 692 724 756 
[DBG]    Local path (in submap): 756 788 820 821 
[DBG]    Suffix (out of submap): 
[DBG]  Original agent path length 53 je: 33
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 1: 84, 116, 148, 180, 212, 244, 276, 308, 340, 339, 371, 371, 403, 435, 467, 499, 531, 530, 529, 561, 593, 625, 657, 658, 659, 660, 692, 724, 756, 756, 788, 820, 821, 
[DBG]  Path for agent 53 updated, resulting length: 33
[DBG]  Paths successfully updated.
[DBG]  (LNS.cpp) New path for agent 0: 
[DBG]  517, 549, 550, 550, 582, 583, 584, 585, 617, 649, 650, 651, 683, 684, 685, 653, 654, 655, 656, 656, 657, 658, 659, 660, 692, 724, 756, 788, 820, 821, 822, 823, 824, 856, 857, 858, 859, 860, 861, 862, 830, 798, 799, 
[DBG]  (LNS.cpp) New path for agent 53: 
[DBG]  84, 116, 148, 180, 212, 244, 276, 308, 340, 339, 371, 371, 403, 435, 467, 499, 531, 530, 529, 561, 593, 625, 657, 658, 659, 660, 692, 724, 756, 756, 788, 820, 821, 
[DBG]  component_weights = {0.397929, 0.0714532, 0.0747221, 0.455896}
[DBG]  opSuccess value: 1
[STAT] neighbor.sum_of_costs before recomputation: 74
[STAT] neighbor.old_sum_of_costs before recomputation: 74
[STAT] sum_of_costs before recomputation: 4185
[DBG]  Validate solution immediately after SAT success.
[DBG]  No problems after SAT replan.
[DBG]  Recomputing sum_of_cost by dividing neighbor.sum_of_costs and neighbor.old_sum_of_costs
[STAT] sum_of_costs after recomputation: 4185
[STAT] Iteration 177
[DBG]  Using SAT operator (destroy+repair SAT).
[DBG]  ====================
[DBG]  SAT destroy operator called.
[DBG]  SAT heuristic: 2
[DBG]  key_agent_id: 18
[DBG]  key_agent_id global path length: 13
[DBG]  Submap content (global positions):
[DBG]  609 610 611 612 613 
[DBG]  641 642 643 644 645 
[DBG]  673 674 675 676 677 
[DBG]  705 706 707 708 709 
[DBG]  737 738 739 740 741 
[DBG]  Map content with agents and obstacles:
[DBG]  A A . . . 
[DBG]  X . X . A 
[DBG]  . . A . . 
[DBG]  . X . X . 
[DBG]  . . A . . 
[DBG]  content of the map structure that we pass to the SAT solver:
[DBG]  1  1  1  1  1  
[DBG]  -1  1  -1  1  1  
[DBG]  1  1  1  1  1  
[DBG]  1  -1  1  -1  1  
[DBG]  1  1  1  1  1  
[DBG]  Identifying agents in a submap for rescheduling (when key_agent is there at the time 9):
[DBG]  Agent 18 found intervals in the sub-map:
[DBG]   [6..11]
[DBG]  Agent 18 (interval in submap: [6..11]) contains time 9, added to replan.
[DBG]  Agent 23 found intervals in the sub-map:
[DBG]   [9..9]
[DBG]  Agent 23 (interval in submap: [9..9]) contains time 9, added to replan.
[DBG]  Agent 32 found intervals in the sub-map:
[DBG]  
[DBG]  Agent 32 is not in sub-map at time 9 (intervals: 
[DBG]  )
[DBG]  Agent 71 found intervals in the sub-map:
[DBG]   [5..9]
[DBG]  Agent 71 (interval in submap: [5..9]) contains time 9, added to replan.
[DBG]  Agent 98 found intervals in the sub-map:
[DBG]   [7..12]
[DBG]  Agent 98 (interval in submap: [7..12]) contains time 9, added to replan.
[DBG]  Agent 116 found intervals in the sub-map:
[DBG]  
[DBG]  Agent 116 is not in sub-map at time 9 (intervals: 
[DBG]  )
[DBG]  Agent 140 found intervals in the sub-map:
[DBG]   [8..11]
[DBG]  Agent 140 (interval in submap: [8..11]) contains time 9, added to replan.
[DBG]  Agent 18 | Start (global): 675 -> (local): (2, 2) at time 9 | Goal (global): 739 -> (local): (4, 2) at time 11
[DBG]  Agent 23 | Start (global): 609 -> (local): (0, 0) at time 9 | Goal (global): 609 -> (local): (0, 0) at time 9
[DBG]  Agent 71 | Start (global): 645 -> (local): (1, 4) at time 9 | Goal (global): 645 -> (local): (1, 4) at time 9
[DBG]  Agent 98 | Start (global): 739 -> (local): (4, 2) at time 9 | Goal (global): 709 -> (local): (3, 4) at time 12
[DBG]  Agent 140 | Start (global): 610 -> (local): (0, 1) at time 9 | Goal (global): 612 -> (local): (0, 3) at time 11
[DBG]  [REPAIR] SAT destroy operator called.
[DBG]  [REPAIR] SAT operator â€“ launching subproblem FOR OPTIMIZATION.
[DBG]  Creating local paths (sx, sy) in the submap for T_sync = 9
[DBG]    Agent 18 (global paths from T=9 to 11) has local path: (2,2) (3,2) (4,2) 
[DBG]    Agent 23 (global paths from T=9 to 9) has local path: (0,0) 
[DBG]    Agent 71 (global paths from T=9 to 9) has local path: (1,4) 
[DBG]    Agent 98 (global paths from T=9 to 12) has local path: (4,2) (4,3) (4,4) (3,4) 
[DBG]    Agent 140 (global paths from T=9 to 11) has local path: (0,1) (0,2) (0,3) 
[DBG]  Checking input data for SAT solver:
[DBG]    - Number of agents to replan: 5
[DBG]  Agent 18 has the original local path length: 3 => Start (2,2), Goal (4,2)
[DBG]  Agent 23 has the original local path length: 1 => Start (0,0), Goal (0,0)
[DBG]  Agent 71 has the original local path length: 1 => Start (1,4), Goal (1,4)
[DBG]  Agent 98 has the original local path length: 4 => Start (4,2), Goal (3,4)
[DBG]  Agent 140 has the original local path length: 3 => Start (0,1), Goal (0,3)
[DBG]  Start position: (2, 2), (0, 0), (1, 4), (4, 2), (0, 1), 
[DBG]  Goal position: (4, 2), (0, 0), (1, 4), (3, 4), (0, 3), 
[DBG]  SAT instance and solver created.
Currently solving
Instance name: scen
Map name: map
Encoding used: disappear_at_goal
SAT solver used: Kissat
Optimizing function: sum of costs
Number of agents: 5
Mks LB: 4
SoC LB: 12
Delta: 0
Remaining time: 300000 [ms]

Vertex conflict! Agents 0, 1, timestep 3, location 0
Vertex conflict! Agents 0, 2, timestep 3, location 0
Vertex conflict! Agents 0, 4, timestep 3, location 0
Vertex conflict! Agents 1, 2, timestep 1, location 0
Swapping conflict! Agents 1, 2, timestep 1, edge (0,0)
Vertex conflict! Agents 1, 2, timestep 2, location 0
Swapping conflict! Agents 1, 2, timestep 2, edge (0,0)
Vertex conflict! Agents 1, 2, timestep 3, location 0
Vertex conflict! Agents 1, 4, timestep 3, location 0
Vertex conflict! Agents 2, 4, timestep 3, location 0
Found plan [agents = 5] [timesteps = 4]
Agent #0 : 10 14 18 0 
Agent #1 : 0 0 0 0 
Agent #2 : 7 0 0 0 
Agent #3 : 18 19 20 15 
Agent #4 : 1 2 3 0 

[STAT] Solver returned: 0
[DBG]  Agent (index) 18 | New local path (submap idx):
[DBG]  10 14 18 
[DBG]  Agent (index) 23 | New local path (submap idx):
[DBG]  0 
[DBG]  Agent (index) 71 | New local path (submap idx):
[DBG]  7 
[DBG]  Agent (index) 98 | New local path (submap idx):
[DBG]  18 19 20 15 
[DBG]  Agent (index) 140 | New local path (submap idx):
[DBG]  1 2 3 
[DBG]  Update the agent path 18 | Original local length: 3 | New local length: 3
[DBG]  agent 18 t=0 => decoded (sx,sy)=(2,2) => global_id=675
[DBG]  agent 18 t=1 => decoded (sx,sy)=(3,2) => global_id=707
[DBG]  agent 18 t=2 => decoded (sx,sy)=(4,2) => global_id=739
[DBG]  Complete path of agent 18:
[DBG]    Original: 486 485 484 516 548 580 612 644 676 675 707 739 771 
[DBG]    New:     486 485 484 516 548 580 612 644 676 675 707 739 771 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 486 485 484 516 548 580 612 644 676 
[DBG]    Local path (in submap): 675 707 739 
[DBG]    Suffix (out of submap): 771 
[DBG]  Original agent path length 18 je: 13
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 0: 486, 485, 484, 516, 548, 580, 612, 644, 676, 675, 707, 739, 771, 
[DBG]  Path for agent 18 updated, resulting length: 13
[DBG]  Update the agent path 23 | Original local length: 1 | New local length: 1
[DBG]  agent 23 t=0 => decoded (sx,sy)=(0,0) => global_id=609
[DBG]  Complete path of agent 23:
[DBG]    Original: 864 832 800 768 736 704 672 640 608 609 577 578 546 547 515 516 484 484 484 484 485 486 487 455 423 424 425 426 427 395 363 331 299 300 268 269 270 271 239 240 208 176 177 178 179 147 148 149 150 151 183 215 247 248 249 217 218 
[DBG]    New:     864 832 800 768 736 704 672 640 608 609 577 578 546 547 515 516 484 484 484 484 485 486 487 455 423 424 425 426 427 395 363 331 299 300 268 269 270 271 239 240 208 176 177 178 179 147 148 149 150 151 183 215 247 248 249 217 218 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 864 832 800 768 736 704 672 640 608 
[DBG]    Local path (in submap): 609 
[DBG]    Suffix (out of submap): 577 578 546 547 515 516 484 484 484 484 485 486 487 455 423 424 425 426 427 395 363 331 299 300 268 269 270 271 239 240 208 176 177 178 179 147 148 149 150 151 183 215 247 248 249 217 218 
[DBG]  Original agent path length 23 je: 57
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 1: 864, 832, 800, 768, 736, 704, 672, 640, 608, 609, 577, 578, 546, 547, 515, 516, 484, 484, 484, 484, 485, 486, 487, 455, 423, 424, 425, 426, 427, 395, 363, 331, 299, 300, 268, 269, 270, 271, 239, 240, 208, 176, 177, 178, 179, 147, 148, 149, 150, 151, 183, 215, 247, 248, 249, 217, 218, 
[DBG]  Path for agent 23 updated, resulting length: 57
[DBG]  Update the agent path 71 | Original local length: 1 | New local length: 1
[DBG]  agent 71 t=0 => decoded (sx,sy)=(1,4) => global_id=645
[DBG]  Complete path of agent 71:
[DBG]    Original: 482 483 515 547 579 611 611 612 613 645 646 647 648 649 650 682 683 684 685 717 718 750 751 783 815 847 848 849 881 882 883 884 885 917 918 919 
[DBG]    New:     482 483 515 547 579 611 611 612 613 645 646 647 648 649 650 682 683 684 685 717 718 750 751 783 815 847 848 849 881 882 883 884 885 917 918 919 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 482 483 515 547 579 611 611 612 613 
[DBG]    Local path (in submap): 645 
[DBG]    Suffix (out of submap): 646 647 648 649 650 682 683 684 685 717 718 750 751 783 815 847 848 849 881 882 883 884 885 917 918 919 
[DBG]  Original agent path length 71 je: 36
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 2: 482, 483, 515, 547, 579, 611, 611, 612, 613, 645, 646, 647, 648, 649, 650, 682, 683, 684, 685, 717, 718, 750, 751, 783, 815, 847, 848, 849, 881, 882, 883, 884, 885, 917, 918, 919, 
[DBG]  Path for agent 71 updated, resulting length: 36
[DBG]  Update the agent path 98 | Original local length: 4 | New local length: 4
[DBG]  agent 98 t=0 => decoded (sx,sy)=(4,2) => global_id=739
[DBG]  agent 98 t=1 => decoded (sx,sy)=(4,3) => global_id=740
[DBG]  agent 98 t=2 => decoded (sx,sy)=(4,4) => global_id=741
[DBG]  agent 98 t=3 => decoded (sx,sy)=(3,4) => global_id=709
[DBG]  Complete path of agent 98:
[DBG]    Original: 897 865 864 832 800 768 736 737 738 739 740 741 709 710 678 646 647 615 616 616 648 649 649 650 651 619 620 588 589 590 558 
[DBG]    New:     897 865 864 832 800 768 736 737 738 739 740 741 709 710 678 646 647 615 616 616 648 649 649 650 651 619 620 588 589 590 558 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 897 865 864 832 800 768 736 737 738 
[DBG]    Local path (in submap): 739 740 741 709 
[DBG]    Suffix (out of submap): 710 678 646 647 615 616 616 648 649 649 650 651 619 620 588 589 590 558 
[DBG]  Original agent path length 98 je: 31
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 3: 897, 865, 864, 832, 800, 768, 736, 737, 738, 739, 740, 741, 709, 710, 678, 646, 647, 615, 616, 616, 648, 649, 649, 650, 651, 619, 620, 588, 589, 590, 558, 
[DBG]  Path for agent 98 updated, resulting length: 31
[DBG]  Update the agent path 140 | Original local length: 3 | New local length: 3
[DBG]  agent 140 t=0 => decoded (sx,sy)=(0,1) => global_id=610
[DBG]  agent 140 t=1 => decoded (sx,sy)=(0,2) => global_id=611
[DBG]  agent 140 t=2 => decoded (sx,sy)=(0,3) => global_id=612
[DBG]  Complete path of agent 140:
[DBG]    Original: 832 800 768 736 704 672 640 608 609 610 611 612 580 548 549 550 551 519 487 455 423 424 425 426 427 428 429 430 431 432 433 433 465 466 467 468 469 437 438 439 440 408 409 377 378 379 380 348 349 350 351 
[DBG]    New:     832 800 768 736 704 672 640 608 609 610 611 612 580 548 549 550 551 519 487 455 423 424 425 426 427 428 429 430 431 432 433 433 465 466 467 468 469 437 438 439 440 408 409 377 378 379 380 348 349 350 351 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 832 800 768 736 704 672 640 608 609 
[DBG]    Local path (in submap): 610 611 612 
[DBG]    Suffix (out of submap): 580 548 549 550 551 519 487 455 423 424 425 426 427 428 429 430 431 432 433 433 465 466 467 468 469 437 438 439 440 408 409 377 378 379 380 348 349 350 351 
[DBG]  Original agent path length 140 je: 51
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 4: 832, 800, 768, 736, 704, 672, 640, 608, 609, 610, 611, 612, 580, 548, 549, 550, 551, 519, 487, 455, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 433, 465, 466, 467, 468, 469, 437, 438, 439, 440, 408, 409, 377, 378, 379, 380, 348, 349, 350, 351, 
[DBG]  Path for agent 140 updated, resulting length: 51
[DBG]  Paths successfully updated.
[DBG]  (LNS.cpp) New path for agent 18: 
[DBG]  486, 485, 484, 516, 548, 580, 612, 644, 676, 675, 707, 739, 771, 
[DBG]  (LNS.cpp) New path for agent 23: 
[DBG]  864, 832, 800, 768, 736, 704, 672, 640, 608, 609, 577, 578, 546, 547, 515, 516, 484, 484, 484, 484, 485, 486, 487, 455, 423, 424, 425, 426, 427, 395, 363, 331, 299, 300, 268, 269, 270, 271, 239, 240, 208, 176, 177, 178, 179, 147, 148, 149, 150, 151, 183, 215, 247, 248, 249, 217, 218, 
[DBG]  (LNS.cpp) New path for agent 71: 
[DBG]  482, 483, 515, 547, 579, 611, 611, 612, 613, 645, 646, 647, 648, 649, 650, 682, 683, 684, 685, 717, 718, 750, 751, 783, 815, 847, 848, 849, 881, 882, 883, 884, 885, 917, 918, 919, 
[DBG]  (LNS.cpp) New path for agent 98: 
[DBG]  897, 865, 864, 832, 800, 768, 736, 737, 738, 739, 740, 741, 709, 710, 678, 646, 647, 615, 616, 616, 648, 649, 649, 650, 651, 619, 620, 588, 589, 590, 558, 
[DBG]  (LNS.cpp) New path for agent 140: 
[DBG]  832, 800, 768, 736, 704, 672, 640, 608, 609, 610, 611, 612, 580, 548, 549, 550, 551, 519, 487, 455, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 433, 465, 466, 467, 468, 469, 437, 438, 439, 440, 408, 409, 377, 378, 379, 380, 348, 349, 350, 351, 
[DBG]  component_weights = {0.402779, 0.0708776, 0.0741202, 0.452223}
[DBG]  opSuccess value: 1
[STAT] neighbor.sum_of_costs before recomputation: 183
[STAT] neighbor.old_sum_of_costs before recomputation: 183
[STAT] sum_of_costs before recomputation: 4185
[DBG]  Validate solution immediately after SAT success.
[DBG]  No problems after SAT replan.
[DBG]  Recomputing sum_of_cost by dividing neighbor.sum_of_costs and neighbor.old_sum_of_costs
[STAT] sum_of_costs after recomputation: 4185
[STAT] Iteration 178
[DBG]  Using SAT operator (destroy+repair SAT).
[DBG]  ====================
[DBG]  SAT destroy operator called.
[DBG]  SAT heuristic: 2
[DBG]  key_agent_id: 29
[DBG]  key_agent_id global path length: 30
[DBG]  Submap content (global positions):
[DBG]  453 454 455 456 457 
[DBG]  485 486 487 488 489 
[DBG]  517 518 519 520 521 
[DBG]  549 550 551 552 553 
[DBG]  581 582 583 584 585 
[DBG]  Map content with agents and obstacles:
[DBG]  X . . . . 
[DBG]  . . . X . 
[DBG]  . X A . . 
[DBG]  A . . X X 
[DBG]  . . A A . 
[DBG]  content of the map structure that we pass to the SAT solver:
[DBG]  -1  1  1  1  1  
[DBG]  1  1  1  -1  1  
[DBG]  1  -1  1  1  1  
[DBG]  1  1  1  -1  -1  
[DBG]  1  1  1  1  1  
[DBG]  Identifying agents in a submap for rescheduling (when key_agent is there at the time 6):
[DBG]  Agent 0 found intervals in the sub-map:
[DBG]   [0..7]
[DBG]  Agent 0 (interval in submap: [0..7]) contains time 6, added to replan.
[DBG]  Agent 21 found intervals in the sub-map:
[DBG]   [2..5]
[DBG]  Agent 21 is not in sub-map at time 6 (intervals: 
[DBG]  [2..5] )
[DBG]  Agent 29 found intervals in the sub-map:
[DBG]   [2..9]
[DBG]  Agent 29 (interval in submap: [2..9]) contains time 6, added to replan.
[DBG]  Agent 71 found intervals in the sub-map:
[DBG]  
[DBG]  Agent 71 is not in sub-map at time 6 (intervals: 
[DBG]  )
[DBG]  Agent 73 found intervals in the sub-map:
[DBG]   [6..12]
[DBG]  Agent 73 (interval in submap: [6..12]) contains time 6, added to replan.
[DBG]  Agent 78 found intervals in the sub-map:
[DBG]  
[DBG]  Agent 78 is not in sub-map at time 6 (intervals: 
[DBG]  )
[DBG]  Agent 99 found intervals in the sub-map:
[DBG]   [6..8]
[DBG]  Agent 99 (interval in submap: [6..8]) contains time 6, added to replan.
[DBG]  Agent 116 found intervals in the sub-map:
[DBG]   [0..5]
[DBG]  Agent 116 is not in sub-map at time 6 (intervals: 
[DBG]  [0..5] )
[DBG]  Agent 0 | Start (global): 584 -> (local): (4, 3) at time 6 | Goal (global): 585 -> (local): (4, 4) at time 7
[DBG]  Agent 29 | Start (global): 519 -> (local): (2, 2) at time 6 | Goal (global): 456 -> (local): (0, 3) at time 9
[DBG]  Agent 73 | Start (global): 549 -> (local): (3, 0) at time 6 | Goal (global): 456 -> (local): (0, 3) at time 12
[DBG]  Agent 99 | Start (global): 583 -> (local): (4, 2) at time 6 | Goal (global): 581 -> (local): (4, 0) at time 8
[DBG]  [REPAIR] SAT destroy operator called.
[DBG]  [REPAIR] SAT operator â€“ launching subproblem FOR OPTIMIZATION.
[DBG]  Creating local paths (sx, sy) in the submap for T_sync = 6
[DBG]    Agent 0 (global paths from T=6 to 7) has local path: (4,3) (4,4) 
[DBG]    Agent 29 (global paths from T=6 to 9) has local path: (2,2) (1,2) (0,2) (0,3) 
[DBG]    Agent 73 (global paths from T=6 to 12) has local path: (3,0) (2,0) (1,0) (1,1) (0,1) (0,2) (0,3) 
[DBG]    Agent 99 (global paths from T=6 to 8) has local path: (4,2) (4,1) (4,0) 
[DBG]  Checking input data for SAT solver:
[DBG]    - Number of agents to replan: 4
[DBG]  Agent 0 has the original local path length: 2 => Start (4,3), Goal (4,4)
[DBG]  Agent 29 has the original local path length: 4 => Start (2,2), Goal (0,3)
[DBG]  Agent 73 has the original local path length: 7 => Start (3,0), Goal (0,3)
[DBG]  Agent 99 has the original local path length: 3 => Start (4,2), Goal (4,0)
[DBG]  Start position: (4, 3), (2, 2), (3, 0), (4, 2), 
[DBG]  Goal position: (4, 4), (0, 3), (0, 3), (4, 0), 
[DBG]  SAT instance and solver created.
Currently solving
Instance name: scen
Map name: map
Encoding used: disappear_at_goal
SAT solver used: Kissat
Optimizing function: sum of costs
Number of agents: 4
Mks LB: 7
SoC LB: 16
Delta: 0
Remaining time: 300000 [ms]

Vertex conflict! Agents 0, 1, timestep 4, location 0
Swapping conflict! Agents 0, 1, timestep 4, edge (0,0)
Vertex conflict! Agents 0, 1, timestep 5, location 0
Swapping conflict! Agents 0, 1, timestep 5, edge (0,0)
Vertex conflict! Agents 0, 1, timestep 6, location 0
Vertex conflict! Agents 0, 3, timestep 3, location 0
Swapping conflict! Agents 0, 3, timestep 3, edge (0,0)
Vertex conflict! Agents 0, 3, timestep 4, location 0
Swapping conflict! Agents 0, 3, timestep 4, edge (0,0)
Vertex conflict! Agents 0, 3, timestep 5, location 0
Swapping conflict! Agents 0, 3, timestep 5, edge (0,0)
Vertex conflict! Agents 0, 3, timestep 6, location 0
Vertex conflict! Agents 1, 3, timestep 4, location 0
Swapping conflict! Agents 1, 3, timestep 4, edge (0,0)
Vertex conflict! Agents 1, 3, timestep 5, location 0
Swapping conflict! Agents 1, 3, timestep 5, edge (0,0)
Vertex conflict! Agents 1, 3, timestep 6, location 0
Found plan [agents = 4] [timesteps = 7]
Agent #0 : 18 19 0 0 0 0 0 
Agent #1 : 9 6 1 2 0 0 0 
Agent #2 : 12 13 14 9 6 1 2 
Agent #3 : 17 16 15 0 0 0 0 

[STAT] Solver returned: 0
[DBG]  Agent (index) 0 | New local path (submap idx):
[DBG]  18 19 
[DBG]  Agent (index) 29 | New local path (submap idx):
[DBG]  9 6 1 2 
[DBG]  Agent (index) 73 | New local path (submap idx):
[DBG]  12 13 14 9 6 1 2 
[DBG]  Agent (index) 99 | New local path (submap idx):
[DBG]  17 16 15 
[DBG]  Update the agent path 0 | Original local length: 2 | New local length: 2
[DBG]  agent 0 t=0 => decoded (sx,sy)=(4,3) => global_id=584
[DBG]  agent 0 t=1 => decoded (sx,sy)=(4,4) => global_id=585
[DBG]  Complete path of agent 0:
[DBG]    Original: 517 549 550 550 582 583 584 585 617 649 650 651 683 684 685 653 654 655 656 656 657 658 659 660 692 724 756 788 820 821 822 823 824 856 857 858 859 860 861 862 830 798 799 
[DBG]    New:     517 549 550 550 582 583 584 585 617 649 650 651 683 684 685 653 654 655 656 656 657 658 659 660 692 724 756 788 820 821 822 823 824 856 857 858 859 860 861 862 830 798 799 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 517 549 550 550 582 583 
[DBG]    Local path (in submap): 584 585 
[DBG]    Suffix (out of submap): 617 649 650 651 683 684 685 653 654 655 656 656 657 658 659 660 692 724 756 788 820 821 822 823 824 856 857 858 859 860 861 862 830 798 799 
[DBG]  Original agent path length 0 je: 43
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 0: 517, 549, 550, 550, 582, 583, 584, 585, 617, 649, 650, 651, 683, 684, 685, 653, 654, 655, 656, 656, 657, 658, 659, 660, 692, 724, 756, 788, 820, 821, 822, 823, 824, 856, 857, 858, 859, 860, 861, 862, 830, 798, 799, 
[DBG]  Path for agent 0 updated, resulting length: 43
[DBG]  Update the agent path 29 | Original local length: 4 | New local length: 4
[DBG]  agent 29 t=0 => decoded (sx,sy)=(2,2) => global_id=519
[DBG]  agent 29 t=1 => decoded (sx,sy)=(1,2) => global_id=487
[DBG]  agent 29 t=2 => decoded (sx,sy)=(0,2) => global_id=455
[DBG]  agent 29 t=3 => decoded (sx,sy)=(0,3) => global_id=456
[DBG]  Complete path of agent 29:
[DBG]    Original: 579 580 581 582 583 551 519 487 455 456 424 425 426 427 428 429 430 431 432 433 401 402 403 404 405 373 341 309 310 311 
[DBG]    New:     579 580 581 582 583 551 519 487 455 456 424 425 426 427 428 429 430 431 432 433 401 402 403 404 405 373 341 309 310 311 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 579 580 581 582 583 551 
[DBG]    Local path (in submap): 519 487 455 456 
[DBG]    Suffix (out of submap): 424 425 426 427 428 429 430 431 432 433 401 402 403 404 405 373 341 309 310 311 
[DBG]  Original agent path length 29 je: 30
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 1: 579, 580, 581, 582, 583, 551, 519, 487, 455, 456, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 401, 402, 403, 404, 405, 373, 341, 309, 310, 311, 
[DBG]  Path for agent 29 updated, resulting length: 30
[DBG]  Update the agent path 73 | Original local length: 7 | New local length: 7
[DBG]  agent 73 t=0 => decoded (sx,sy)=(3,0) => global_id=549
[DBG]  agent 73 t=1 => decoded (sx,sy)=(3,1) => global_id=550
[DBG]  agent 73 t=2 => decoded (sx,sy)=(3,2) => global_id=551
[DBG]  agent 73 t=3 => decoded (sx,sy)=(2,2) => global_id=519
[DBG]  agent 73 t=4 => decoded (sx,sy)=(1,2) => global_id=487
[DBG]  agent 73 t=5 => decoded (sx,sy)=(0,2) => global_id=455
[DBG]  agent 73 t=6 => decoded (sx,sy)=(0,3) => global_id=456
[DBG]  Complete path of agent 73:
[DBG]    Original: 609 577 578 546 547 548 549 517 485 486 454 455 456 
[DBG]    New:     609 577 578 546 547 548 549 550 551 519 487 455 456 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 609 577 578 546 547 548 
[DBG]    Local path (in submap): 549 550 551 519 487 455 456 
[DBG]    Suffix (out of submap): 
[DBG]  Original agent path length 73 je: 13
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 2: 609, 577, 578, 546, 547, 548, 549, 550, 551, 519, 487, 455, 456, 
[DBG]  Path for agent 73 updated, resulting length: 13
[DBG]  Update the agent path 99 | Original local length: 3 | New local length: 3
[DBG]  agent 99 t=0 => decoded (sx,sy)=(4,2) => global_id=583
[DBG]  agent 99 t=1 => decoded (sx,sy)=(4,1) => global_id=582
[DBG]  agent 99 t=2 => decoded (sx,sy)=(4,0) => global_id=581
[DBG]  Complete path of agent 99:
[DBG]    Original: 615 615 615 615 615 615 583 582 581 580 612 644 676 675 674 
[DBG]    New:     615 615 615 615 615 615 583 582 581 580 612 644 676 675 674 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 615 615 615 615 615 615 
[DBG]    Local path (in submap): 583 582 581 
[DBG]    Suffix (out of submap): 580 612 644 676 675 674 
[DBG]  Original agent path length 99 je: 15
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 3: 615, 615, 615, 615, 615, 615, 583, 582, 581, 580, 612, 644, 676, 675, 674, 
[DBG]  Path for agent 99 updated, resulting length: 15
[DBG]  Paths successfully updated.
[DBG]  (LNS.cpp) New path for agent 0: 
[DBG]  517, 549, 550, 550, 582, 583, 584, 585, 617, 649, 650, 651, 683, 684, 685, 653, 654, 655, 656, 656, 657, 658, 659, 660, 692, 724, 756, 788, 820, 821, 822, 823, 824, 856, 857, 858, 859, 860, 861, 862, 830, 798, 799, 
[DBG]  (LNS.cpp) New path for agent 29: 
[DBG]  579, 580, 581, 582, 583, 551, 519, 487, 455, 456, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 401, 402, 403, 404, 405, 373, 341, 309, 310, 311, 
[DBG]  (LNS.cpp) New path for agent 73: 
[DBG]  609, 577, 578, 546, 547, 548, 549, 550, 551, 519, 487, 455, 456, 
[DBG]  (LNS.cpp) New path for agent 99: 
[DBG]  615, 615, 615, 615, 615, 615, 583, 582, 581, 580, 612, 644, 676, 675, 674, 
[DBG]  component_weights = {0.407648, 0.0702998, 0.0735159, 0.448536}
[DBG]  opSuccess value: 1
[STAT] neighbor.sum_of_costs before recomputation: 97
[STAT] neighbor.old_sum_of_costs before recomputation: 97
[STAT] sum_of_costs before recomputation: 4185
[DBG]  Validate solution immediately after SAT success.
[DBG]  No problems after SAT replan.
[DBG]  Recomputing sum_of_cost by dividing neighbor.sum_of_costs and neighbor.old_sum_of_costs
[STAT] sum_of_costs after recomputation: 4185
[STAT] Iteration 179
[DBG]  Using SAT operator (destroy+repair SAT).
[DBG]  ====================
[DBG]  SAT destroy operator called.
[DBG]  SAT heuristic: 2
[DBG]  key_agent_id: 8
[DBG]  key_agent_id global path length: 17
[DBG]  Submap content (global positions):
[DBG]  238 239 240 241 242 
[DBG]  270 271 272 273 274 
[DBG]  302 303 304 305 306 
[DBG]  334 335 336 337 338 
[DBG]  366 367 368 369 370 
[DBG]  Map content with agents and obstacles:
[DBG]  . . . . . 
[DBG]  . . X . . 
[DBG]  . . A X . 
[DBG]  X . A . A 
[DBG]  . . . . X 
[DBG]  content of the map structure that we pass to the SAT solver:
[DBG]  1  1  1  1  1  
[DBG]  1  1  -1  1  1  
[DBG]  1  1  1  -1  1  
[DBG]  -1  1  1  1  1  
[DBG]  1  1  1  1  -1  
[DBG]  Identifying agents in a submap for rescheduling (when key_agent is there at the time 5):
[DBG]  Agent 8 found intervals in the sub-map:
[DBG]   [0..16]
[DBG]  Agent 8 (interval in submap: [0..16]) contains time 5, added to replan.
[DBG]  Agent 20 found intervals in the sub-map:
[DBG]   [0..6]
[DBG]  Agent 20 (interval in submap: [0..6]) contains time 5, added to replan.
[DBG]  Agent 54 found intervals in the sub-map:
[DBG]  
[DBG]  Agent 54 is not in sub-map at time 5 (intervals: 
[DBG]  )
[DBG]  Agent 106 found intervals in the sub-map:
[DBG]  
[DBG]  Agent 106 is not in sub-map at time 5 (intervals: 
[DBG]  )
[DBG]  Agent 112 found intervals in the sub-map:
[DBG]   [0..4]
[DBG]  Agent 112 is not in sub-map at time 5 (intervals: 
[DBG]  [0..4] )
[DBG]  Agent 131 found intervals in the sub-map:
[DBG]   [5..10]
[DBG]  Agent 131 (interval in submap: [5..10]) contains time 5, added to replan.
[DBG]  Agent 145 found intervals in the sub-map:
[DBG]   [0..2]
[DBG]  Agent 145 is not in sub-map at time 5 (intervals: 
[DBG]  [0..2] )
[DBG]  Agent 8 | Start (global): 304 -> (local): (2, 2) at time 5 | Goal (global): 369 -> (local): (4, 3) at time 16
[DBG]  Agent 20 | Start (global): 336 -> (local): (3, 2) at time 5 | Goal (global): 368 -> (local): (4, 2) at time 6
[DBG]  Agent 131 | Start (global): 338 -> (local): (3, 4) at time 5 | Goal (global): 366 -> (local): (4, 0) at time 10
[DBG]  [REPAIR] SAT destroy operator called.
[DBG]  [REPAIR] SAT operator â€“ launching subproblem FOR OPTIMIZATION.
[DBG]  Creating local paths (sx, sy) in the submap for T_sync = 5
[DBG]    Agent 8 (global paths from T=5 to 16) has local path: (2,2) (2,2) (2,2) (2,2) (2,2) (3,2) (3,3) (4,3) (4,3) (4,3) (4,2) (4,3) 
[DBG]    Agent 20 (global paths from T=5 to 6) has local path: (3,2) (4,2) 
[DBG]    Agent 131 (global paths from T=5 to 10) has local path: (3,4) (3,3) (3,2) (3,1) (4,1) (4,0) 
[DBG]  Checking input data for SAT solver:
[DBG]    - Number of agents to replan: 3
[DBG]  Agent 8 has the original local path length: 12 => Start (2,2), Goal (4,3)
[DBG]  Agent 20 has the original local path length: 2 => Start (3,2), Goal (4,2)
[DBG]  Agent 131 has the original local path length: 6 => Start (3,4), Goal (4,0)
[DBG]  Start position: (2, 2), (3, 2), (3, 4), 
[DBG]  Goal position: (4, 3), (4, 2), (4, 0), 
[DBG]  SAT instance and solver created.
Currently solving
Instance name: scen
Map name: map
Encoding used: disappear_at_goal
SAT solver used: Kissat
Optimizing function: sum of costs
Number of agents: 3
Mks LB: 6
SoC LB: 12
Delta: 0
Remaining time: 300000 [ms]

Vertex conflict! Agents 0, 1, timestep 4, location 0
Swapping conflict! Agents 0, 1, timestep 4, edge (0,0)
Vertex conflict! Agents 0, 1, timestep 5, location 0
Found plan [agents = 3] [timesteps = 6]
Agent #0 : 11 14 19 20 0 0 
Agent #1 : 14 19 0 0 0 0 
Agent #2 : 16 15 14 19 18 17 

[STAT] Solver returned: 0
[DBG]  Agent (index) 8 | New local path (submap idx):
[DBG]  11 14 19 20 
[DBG]  Agent (index) 20 | New local path (submap idx):
[DBG]  14 19 
[DBG]  Agent (index) 131 | New local path (submap idx):
[DBG]  16 15 14 19 18 17 
[DBG]  Update the agent path 8 | Original local length: 12 | New local length: 4
[DBG]  agent 8 t=0 => decoded (sx,sy)=(2,2) => global_id=304
[DBG]  agent 8 t=1 => decoded (sx,sy)=(3,2) => global_id=336
[DBG]  agent 8 t=2 => decoded (sx,sy)=(4,2) => global_id=368
[DBG]  agent 8 t=3 => decoded (sx,sy)=(4,3) => global_id=369
[DBG]  Complete path of agent 8:
[DBG]    Original: 303 304 304 304 304 304 304 304 304 304 336 337 369 369 369 368 369 
[DBG]    New:     303 304 304 304 304 304 336 368 369 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 303 304 304 304 304 
[DBG]    Local path (in submap): 304 336 368 369 
[DBG]    Suffix (out of submap): 
[DBG]  Original agent path length 8 je: 17
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 0: 303, 304, 304, 304, 304, 304, 336, 368, 369, 
[DBG]  Path for agent 8 updated, resulting length: 9
[DBG]  Update the agent path 20 | Original local length: 2 | New local length: 2
[DBG]  agent 20 t=0 => decoded (sx,sy)=(3,2) => global_id=336
[DBG]  agent 20 t=1 => decoded (sx,sy)=(4,2) => global_id=368
[DBG]  Complete path of agent 20:
[DBG]    Original: 242 274 306 338 337 336 368 400 432 464 463 462 494 526 525 524 556 588 620 619 651 651 650 682 714 746 745 777 809 841 873 905 904 
[DBG]    New:     242 274 306 338 337 336 368 400 432 464 463 462 494 526 525 524 556 588 620 619 651 651 650 682 714 746 745 777 809 841 873 905 904 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 242 274 306 338 337 
[DBG]    Local path (in submap): 336 368 
[DBG]    Suffix (out of submap): 400 432 464 463 462 494 526 525 524 556 588 620 619 651 651 650 682 714 746 745 777 809 841 873 905 904 
[DBG]  Original agent path length 20 je: 33
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 1: 242, 274, 306, 338, 337, 336, 368, 400, 432, 464, 463, 462, 494, 526, 525, 524, 556, 588, 620, 619, 651, 651, 650, 682, 714, 746, 745, 777, 809, 841, 873, 905, 904, 
[DBG]  Path for agent 20 updated, resulting length: 33
[DBG]  Update the agent path 131 | Original local length: 6 | New local length: 6
[DBG]  agent 131 t=0 => decoded (sx,sy)=(3,4) => global_id=338
[DBG]  agent 131 t=1 => decoded (sx,sy)=(3,3) => global_id=337
[DBG]  agent 131 t=2 => decoded (sx,sy)=(3,2) => global_id=336
[DBG]  agent 131 t=3 => decoded (sx,sy)=(4,2) => global_id=368
[DBG]  agent 131 t=4 => decoded (sx,sy)=(4,1) => global_id=367
[DBG]  agent 131 t=5 => decoded (sx,sy)=(4,0) => global_id=366
[DBG]  Complete path of agent 131:
[DBG]    Original: 341 373 341 340 339 338 337 336 335 367 366 398 430 462 494 526 525 524 523 522 521 520 520 520 519 551 583 584 616 648 680 712 
[DBG]    New:     341 373 341 340 339 338 337 336 368 367 366 398 430 462 494 526 525 524 523 522 521 520 520 520 519 551 583 584 616 648 680 712 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 341 373 341 340 339 
[DBG]    Local path (in submap): 338 337 336 368 367 366 
[DBG]    Suffix (out of submap): 398 430 462 494 526 525 524 523 522 521 520 520 520 519 551 583 584 616 648 680 712 
[DBG]  Original agent path length 131 je: 32
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 2: 341, 373, 341, 340, 339, 338, 337, 336, 368, 367, 366, 398, 430, 462, 494, 526, 525, 524, 523, 522, 521, 520, 520, 520, 519, 551, 583, 584, 616, 648, 680, 712, 
[DBG]  Path for agent 131 updated, resulting length: 32
[DBG]  Paths successfully updated.
[DBG]  (LNS.cpp) New path for agent 8: 
[DBG]  303, 304, 304, 304, 304, 304, 336, 368, 369, 
[DBG]  (LNS.cpp) New path for agent 20: 
[DBG]  242, 274, 306, 338, 337, 336, 368, 400, 432, 464, 463, 462, 494, 526, 525, 524, 556, 588, 620, 619, 651, 651, 650, 682, 714, 746, 745, 777, 809, 841, 873, 905, 904, 
[DBG]  (LNS.cpp) New path for agent 131: 
[DBG]  341, 373, 341, 340, 339, 338, 337, 336, 368, 367, 366, 398, 430, 462, 494, 526, 525, 524, 523, 522, 521, 520, 520, 520, 519, 551, 583, 584, 616, 648, 680, 712, 
[DBG]  component_weights = {0.403765, 0.0696301, 0.0728156, 0.45379}
[DBG]  opSuccess value: 1
[STAT] neighbor.sum_of_costs before recomputation: 71
[STAT] neighbor.old_sum_of_costs before recomputation: 79
[STAT] sum_of_costs before recomputation: 4185
[DBG]  Validate solution immediately after SAT success.
[WARNING] Problem after SAT: Target conflict: agent 88 (len 22) traverses target of agent 8 (len 8) at location 369 at timestep 15
[DBG]  Attempting immediate repair via init_lns because problem occurred after SAT (should be applied only for conflicts...).
[DBG]  Passing 150 agents to init_lns (skip=true).
[DBG]  path_table contents for selected agents (neighbor.agents):
[DBG]    Agent 8 => controlling path length=9
[DBG]    Agent 20 => controlling path length=33
[DBG]    Agent 131 => controlling path length=32
[DBG]  hodnota skip_initial_solution=1
[DBG]  We skip initialSolution => call buildCollisionData()
[DBG]  buildCollisionData() called â€“ skip_initial_solution case.
[DBG]  Agents.size()=150, collision_graph.size()=150
[DBG]  agent 8 => updateCollidingPairs => foundCollision
[DBG]  agent 88 => updateCollidingPairs => foundCollision
[DBG]  agent 113 => updateCollidingPairs => foundCollision
[DBG]  Conflicting agent pairs:
[DBG]  agent 8 is in conflict with agent 88
[DBG]  agent 8 is in conflict with agent 113
[DBG]  buildCollisionData() => sum_of_costs=4177, num_of_colliding_pairs=2
[DBG]  buildCollisionData done => sum_of_costs=4177, num_of_colliding_pairs=2
[DBG]  sum_of_cost hodnota: 4177
[DBG]  After skip/init build => iteration_stats.back(): sum_of_costs=4177, collisions=2
[DEBUG] Using default neighbor generation strategy for conflicts: 0
	InitLNS(PP): runtime = 0.0037335, iterations = 2, colliding pairs = 0, initial colliding pairs = 2, solution cost = 4177, initial solution cost = 4177, failed iterations = 0
[DBG]  init_lns->sum_of_costs after init_lns->run: 4177
[DBG]  sum_of_costs after assignment from init_lns->run: 4177
[DBG]  Recomputing sum_of_cost by dividing neighbor.sum_of_costs and neighbor.old_sum_of_costs
[STAT] sum_of_costs after recomputation: 4177
[STAT] Iteration 180
[DBG]  Using SAT operator (destroy+repair SAT).
[DBG]  ====================
[DBG]  SAT destroy operator called.
[DBG]  SAT heuristic: 2
[DBG]  key_agent_id: 82
[DBG]  key_agent_id global path length: 18
[DBG]  Submap content (global positions):
[DBG]  170 171 172 173 174 
[DBG]  202 203 204 205 206 
[DBG]  234 235 236 237 238 
[DBG]  266 267 268 269 270 
[DBG]  298 299 300 301 302 
[DBG]  Map content with agents and obstacles:
[DBG]  . X . . X 
[DBG]  X . A . . 
[DBG]  A . A . . 
[DBG]  A . . . . 
[DBG]  . A . A A 
[DBG]  content of the map structure that we pass to the SAT solver:
[DBG]  1  -1  1  1  -1  
[DBG]  -1  1  1  1  1  
[DBG]  1  1  1  1  1  
[DBG]  1  1  1  1  1  
[DBG]  1  1  1  1  1  
[DBG]  Identifying agents in a submap for rescheduling (when key_agent is there at the time 10):
[DBG]  Agent 8 found intervals in the sub-map:
[DBG]  
[DBG]  Agent 8 is not in sub-map at time 10 (intervals: 
[DBG]  )
[DBG]  Agent 16 found intervals in the sub-map:
[DBG]   [10..14]
[DBG]  Agent 16 (interval in submap: [10..14]) contains time 10, added to replan.
[DBG]  Agent 22 found intervals in the sub-map:
[DBG]   [2..9]
[DBG]  Agent 22 is not in sub-map at time 10 (intervals: 
[DBG]  [2..9] )
[DBG]  Agent 26 found intervals in the sub-map:
[DBG]   [5..10]
[DBG]  Agent 26 (interval in submap: [5..10]) contains time 10, added to replan.
[DBG]  Agent 33 found intervals in the sub-map:
[DBG]  
[DBG]  Agent 33 is not in sub-map at time 10 (intervals: 
[DBG]  )
[DBG]  Agent 51 found intervals in the sub-map:
[DBG]  
[DBG]  Agent 51 is not in sub-map at time 10 (intervals: 
[DBG]  )
[DBG]  Agent 66 found intervals in the sub-map:
[DBG]  
[DBG]  Agent 66 is not in sub-map at time 10 (intervals: 
[DBG]  )
[DBG]  Agent 76 found intervals in the sub-map:
[DBG]   [9..12]
[DBG]  Agent 76 (interval in submap: [9..12]) contains time 10, added to replan.
[DBG]  Agent 80 found intervals in the sub-map:
[DBG]   [4..10]
[DBG]  Agent 80 (interval in submap: [4..10]) contains time 10, added to replan.
[DBG]  Agent 82 found intervals in the sub-map:
[DBG]   [8..13]
[DBG]  Agent 82 (interval in submap: [8..13]) contains time 10, added to replan.
[DBG]  Agent 107 found intervals in the sub-map:
[DBG]   [9..13]
[DBG]  Agent 107 (interval in submap: [9..13]) contains time 10, added to replan.
[DBG]  Agent 120 found intervals in the sub-map:
[DBG]   [0..10]
[DBG]  Agent 120 (interval in submap: [0..10]) contains time 10, added to replan.
[DBG]  Agent 125 found intervals in the sub-map:
[DBG]  
[DBG]  Agent 125 is not in sub-map at time 10 (intervals: 
[DBG]  )
[DBG]  Agent 16 | Start (global): 299 -> (local): (4, 1) at time 10 | Goal (global): 270 -> (local): (3, 4) at time 14
[DBG]  Agent 26 | Start (global): 301 -> (local): (4, 3) at time 10 | Goal (global): 301 -> (local): (4, 3) at time 10
[DBG]  Agent 76 | Start (global): 302 -> (local): (4, 4) at time 10 | Goal (global): 238 -> (local): (2, 4) at time 12
[DBG]  Agent 80 | Start (global): 266 -> (local): (3, 0) at time 10 | Goal (global): 266 -> (local): (3, 0) at time 10
[DBG]  Agent 82 | Start (global): 236 -> (local): (2, 2) at time 10 | Goal (global): 301 -> (local): (4, 3) at time 13
[DBG]  Agent 107 | Start (global): 204 -> (local): (1, 2) at time 10 | Goal (global): 234 -> (local): (2, 0) at time 13
[DBG]  Agent 120 | Start (global): 234 -> (local): (2, 0) at time 10 | Goal (global): 234 -> (local): (2, 0) at time 10
[DBG]  [REPAIR] SAT destroy operator called.
[DBG]  [REPAIR] SAT operator â€“ launching subproblem FOR OPTIMIZATION.
[DBG]  Creating local paths (sx, sy) in the submap for T_sync = 10
[DBG]    Agent 16 (global paths from T=10 to 14) has local path: (4,1) (3,1) (3,2) (3,3) (3,4) 
[DBG]    Agent 26 (global paths from T=10 to 10) has local path: (4,3) 
[DBG]    Agent 76 (global paths from T=10 to 12) has local path: (4,4) (3,4) (2,4) 
[DBG]    Agent 80 (global paths from T=10 to 10) has local path: (3,0) 
[DBG]    Agent 82 (global paths from T=10 to 13) has local path: (2,2) (2,3) (3,3) (4,3) 
[DBG]    Agent 107 (global paths from T=10 to 13) has local path: (1,2) (2,2) (2,1) (2,0) 
[DBG]    Agent 120 (global paths from T=10 to 10) has local path: (2,0) 
[DBG]  Checking input data for SAT solver:
[DBG]    - Number of agents to replan: 7
[DBG]  Agent 16 has the original local path length: 5 => Start (4,1), Goal (3,4)
[DBG]  Agent 26 has the original local path length: 1 => Start (4,3), Goal (4,3)
[DBG]  Agent 76 has the original local path length: 3 => Start (4,4), Goal (2,4)
[DBG]  Agent 80 has the original local path length: 1 => Start (3,0), Goal (3,0)
[DBG]  Agent 82 has the original local path length: 4 => Start (2,2), Goal (4,3)
[DBG]  Agent 107 has the original local path length: 4 => Start (1,2), Goal (2,0)
[DBG]  Agent 120 has the original local path length: 1 => Start (2,0), Goal (2,0)
[DBG]  Start position: (4, 1), (4, 3), (4, 4), (3, 0), (2, 2), (1, 2), (2, 0), 
[DBG]  Goal position: (3, 4), (4, 3), (2, 4), (3, 0), (4, 3), (2, 0), (2, 0), 
[DBG]  SAT instance and solver created.
Currently solving
Instance name: scen
Map name: map
Encoding used: disappear_at_goal
SAT solver used: Kissat
Optimizing function: sum of costs
Number of agents: 7
Mks LB: 5
SoC LB: 19
Delta: 0
Remaining time: 300000 [ms]

Vertex conflict! Agents 1, 2, timestep 3, location 0
Swapping conflict! Agents 1, 2, timestep 3, edge (0,0)
Vertex conflict! Agents 1, 2, timestep 4, location 0
Vertex conflict! Agents 1, 3, timestep 1, location 0
Swapping conflict! Agents 1, 3, timestep 1, edge (0,0)
Vertex conflict! Agents 1, 3, timestep 2, location 0
Swapping conflict! Agents 1, 3, timestep 2, edge (0,0)
Vertex conflict! Agents 1, 3, timestep 3, location 0
Swapping conflict! Agents 1, 3, timestep 3, edge (0,0)
Vertex conflict! Agents 1, 3, timestep 4, location 0
Vertex conflict! Agents 1, 4, timestep 4, location 0
Vertex conflict! Agents 1, 5, timestep 4, location 0
Vertex conflict! Agents 1, 6, timestep 1, location 0
Swapping conflict! Agents 1, 6, timestep 1, edge (0,0)
Vertex conflict! Agents 1, 6, timestep 2, location 0
Swapping conflict! Agents 1, 6, timestep 2, edge (0,0)
Vertex conflict! Agents 1, 6, timestep 3, location 0
Swapping conflict! Agents 1, 6, timestep 3, edge (0,0)
Vertex conflict! Agents 1, 6, timestep 4, location 0
Vertex conflict! Agents 2, 3, timestep 3, location 0
Swapping conflict! Agents 2, 3, timestep 3, edge (0,0)
Vertex conflict! Agents 2, 3, timestep 4, location 0
Vertex conflict! Agents 2, 4, timestep 4, location 0
Vertex conflict! Agents 2, 5, timestep 4, location 0
Vertex conflict! Agents 2, 6, timestep 3, location 0
Swapping conflict! Agents 2, 6, timestep 3, edge (0,0)
Vertex conflict! Agents 2, 6, timestep 4, location 0
Vertex conflict! Agents 3, 4, timestep 4, location 0
Vertex conflict! Agents 3, 5, timestep 4, location 0
Vertex conflict! Agents 3, 6, timestep 1, location 0
Swapping conflict! Agents 3, 6, timestep 1, edge (0,0)
Vertex conflict! Agents 3, 6, timestep 2, location 0
Swapping conflict! Agents 3, 6, timestep 2, edge (0,0)
Vertex conflict! Agents 3, 6, timestep 3, location 0
Swapping conflict! Agents 3, 6, timestep 3, edge (0,0)
Vertex conflict! Agents 3, 6, timestep 4, location 0
Vertex conflict! Agents 4, 5, timestep 4, location 0
Vertex conflict! Agents 4, 6, timestep 4, location 0
Vertex conflict! Agents 5, 6, timestep 4, location 0
Found plan [agents = 7] [timesteps = 5]
Agent #0 : 18 19 20 21 16 
Agent #1 : 20 0 0 0 0 
Agent #2 : 21 16 11 0 0 
Agent #3 : 12 0 0 0 0 
Agent #4 : 9 14 19 20 0 
Agent #5 : 4 9 8 7 0 
Agent #6 : 7 0 0 0 0 

[STAT] Solver returned: 0
[DBG]  Agent (index) 16 | New local path (submap idx):
[DBG]  18 19 20 21 16 
[DBG]  Agent (index) 26 | New local path (submap idx):
[DBG]  20 
[DBG]  Agent (index) 76 | New local path (submap idx):
[DBG]  21 16 11 
[DBG]  Agent (index) 80 | New local path (submap idx):
[DBG]  12 
[DBG]  Agent (index) 82 | New local path (submap idx):
[DBG]  9 14 19 20 
[DBG]  Agent (index) 107 | New local path (submap idx):
[DBG]  4 9 8 7 
[DBG]  Agent (index) 120 | New local path (submap idx):
[DBG]  7 
[DBG]  Update the agent path 16 | Original local length: 5 | New local length: 5
[DBG]  agent 16 t=0 => decoded (sx,sy)=(4,1) => global_id=299
[DBG]  agent 16 t=1 => decoded (sx,sy)=(4,2) => global_id=300
[DBG]  agent 16 t=2 => decoded (sx,sy)=(4,3) => global_id=301
[DBG]  agent 16 t=3 => decoded (sx,sy)=(4,4) => global_id=302
[DBG]  agent 16 t=4 => decoded (sx,sy)=(3,4) => global_id=270
[DBG]  Complete path of agent 16:
[DBG]    Original: 454 422 390 358 359 327 328 329 330 331 299 267 268 269 270 271 239 240 241 273 274 
[DBG]    New:     454 422 390 358 359 327 328 329 330 331 299 300 301 302 270 271 239 240 241 273 274 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 454 422 390 358 359 327 328 329 330 331 
[DBG]    Local path (in submap): 299 300 301 302 270 
[DBG]    Suffix (out of submap): 271 239 240 241 273 274 
[DBG]  Original agent path length 16 je: 21
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 0: 454, 422, 390, 358, 359, 327, 328, 329, 330, 331, 299, 300, 301, 302, 270, 271, 239, 240, 241, 273, 274, 
[DBG]  Path for agent 16 updated, resulting length: 21
[DBG]  Update the agent path 26 | Original local length: 1 | New local length: 1
[DBG]  agent 26 t=0 => decoded (sx,sy)=(4,3) => global_id=301
[DBG]  Complete path of agent 26:
[DBG]    Original: 13 45 77 109 141 173 205 237 269 269 301 333 365 366 398 430 462 494 526 558 590 591 592 593 625 657 658 659 660 692 724 756 755 
[DBG]    New:     13 45 77 109 141 173 205 237 269 269 301 333 365 366 398 430 462 494 526 558 590 591 592 593 625 657 658 659 660 692 724 756 755 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 13 45 77 109 141 173 205 237 269 269 
[DBG]    Local path (in submap): 301 
[DBG]    Suffix (out of submap): 333 365 366 398 430 462 494 526 558 590 591 592 593 625 657 658 659 660 692 724 756 755 
[DBG]  Original agent path length 26 je: 33
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 1: 13, 45, 77, 109, 141, 173, 205, 237, 269, 269, 301, 333, 365, 366, 398, 430, 462, 494, 526, 558, 590, 591, 592, 593, 625, 657, 658, 659, 660, 692, 724, 756, 755, 
[DBG]  Path for agent 26 updated, resulting length: 33
[DBG]  Update the agent path 76 | Original local length: 3 | New local length: 3
[DBG]  agent 76 t=0 => decoded (sx,sy)=(4,4) => global_id=302
[DBG]  agent 76 t=1 => decoded (sx,sy)=(3,4) => global_id=270
[DBG]  agent 76 t=2 => decoded (sx,sy)=(2,4) => global_id=238
[DBG]  Complete path of agent 76:
[DBG]    Original: 492 460 428 429 430 398 366 365 333 301 302 270 238 
[DBG]    New:     492 460 428 429 430 398 366 365 333 301 302 270 238 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 492 460 428 429 430 398 366 365 333 301 
[DBG]    Local path (in submap): 302 270 238 
[DBG]    Suffix (out of submap): 
[DBG]  Original agent path length 76 je: 13
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 2: 492, 460, 428, 429, 430, 398, 366, 365, 333, 301, 302, 270, 238, 
[DBG]  Path for agent 76 updated, resulting length: 13
[DBG]  Update the agent path 80 | Original local length: 1 | New local length: 1
[DBG]  agent 80 t=0 => decoded (sx,sy)=(3,0) => global_id=266
[DBG]  Complete path of agent 80:
[DBG]    Original: 111 110 109 141 173 172 204 236 235 234 266 265 264 296 295 294 293 325 357 389 421 420 419 418 
[DBG]    New:     111 110 109 141 173 172 204 236 235 234 266 265 264 296 295 294 293 325 357 389 421 420 419 418 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 111 110 109 141 173 172 204 236 235 234 
[DBG]    Local path (in submap): 266 
[DBG]    Suffix (out of submap): 265 264 296 295 294 293 325 357 389 421 420 419 418 
[DBG]  Original agent path length 80 je: 24
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 3: 111, 110, 109, 141, 173, 172, 204, 236, 235, 234, 266, 265, 264, 296, 295, 294, 293, 325, 357, 389, 421, 420, 419, 418, 
[DBG]  Path for agent 80 updated, resulting length: 24
[DBG]  Update the agent path 82 | Original local length: 4 | New local length: 4
[DBG]  agent 82 t=0 => decoded (sx,sy)=(2,2) => global_id=236
[DBG]  agent 82 t=1 => decoded (sx,sy)=(3,2) => global_id=268
[DBG]  agent 82 t=2 => decoded (sx,sy)=(4,2) => global_id=300
[DBG]  agent 82 t=3 => decoded (sx,sy)=(4,3) => global_id=301
[DBG]  Complete path of agent 82:
[DBG]    Original: 75 107 107 107 107 107 139 140 172 204 236 237 269 301 333 365 366 398 
[DBG]    New:     75 107 107 107 107 107 139 140 172 204 236 268 300 301 333 365 366 398 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 75 107 107 107 107 107 139 140 172 204 
[DBG]    Local path (in submap): 236 268 300 301 
[DBG]    Suffix (out of submap): 333 365 366 398 
[DBG]  Original agent path length 82 je: 18
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 4: 75, 107, 107, 107, 107, 107, 139, 140, 172, 204, 236, 268, 300, 301, 333, 365, 366, 398, 
[DBG]  Path for agent 82 updated, resulting length: 18
[DBG]  Update the agent path 107 | Original local length: 4 | New local length: 4
[DBG]  agent 107 t=0 => decoded (sx,sy)=(1,2) => global_id=204
[DBG]  agent 107 t=1 => decoded (sx,sy)=(2,2) => global_id=236
[DBG]  agent 107 t=2 => decoded (sx,sy)=(2,1) => global_id=235
[DBG]  agent 107 t=3 => decoded (sx,sy)=(2,0) => global_id=234
[DBG]  Complete path of agent 107:
[DBG]    Original: 16 15 14 46 45 77 109 141 140 172 204 236 235 234 233 232 231 263 295 294 326 358 390 422 454 486 485 517 549 581 613 645 677 709 741 773 772 804 836 
[DBG]    New:     16 15 14 46 45 77 109 141 140 172 204 236 235 234 233 232 231 263 295 294 326 358 390 422 454 486 485 517 549 581 613 645 677 709 741 773 772 804 836 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 16 15 14 46 45 77 109 141 140 172 
[DBG]    Local path (in submap): 204 236 235 234 
[DBG]    Suffix (out of submap): 233 232 231 263 295 294 326 358 390 422 454 486 485 517 549 581 613 645 677 709 741 773 772 804 836 
[DBG]  Original agent path length 107 je: 39
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 5: 16, 15, 14, 46, 45, 77, 109, 141, 140, 172, 204, 236, 235, 234, 233, 232, 231, 263, 295, 294, 326, 358, 390, 422, 454, 486, 485, 517, 549, 581, 613, 645, 677, 709, 741, 773, 772, 804, 836, 
[DBG]  Path for agent 107 updated, resulting length: 39
[DBG]  Update the agent path 120 | Original local length: 1 | New local length: 1
[DBG]  agent 120 t=0 => decoded (sx,sy)=(2,0) => global_id=234
[DBG]  Complete path of agent 120:
[DBG]    Original: 203 203 203 203 203 203 203 203 203 235 234 233 232 200 
[DBG]    New:     203 203 203 203 203 203 203 203 203 235 234 233 232 200 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 203 203 203 203 203 203 203 203 203 235 
[DBG]    Local path (in submap): 234 
[DBG]    Suffix (out of submap): 233 232 200 
[DBG]  Original agent path length 120 je: 14
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 6: 203, 203, 203, 203, 203, 203, 203, 203, 203, 235, 234, 233, 232, 200, 
[DBG]  Path for agent 120 updated, resulting length: 14
[DBG]  Paths successfully updated.
[DBG]  (LNS.cpp) New path for agent 16: 
[DBG]  454, 422, 390, 358, 359, 327, 328, 329, 330, 331, 299, 300, 301, 302, 270, 271, 239, 240, 241, 273, 274, 
[DBG]  (LNS.cpp) New path for agent 26: 
[DBG]  13, 45, 77, 109, 141, 173, 205, 237, 269, 269, 301, 333, 365, 366, 398, 430, 462, 494, 526, 558, 590, 591, 592, 593, 625, 657, 658, 659, 660, 692, 724, 756, 755, 
[DBG]  (LNS.cpp) New path for agent 76: 
[DBG]  492, 460, 428, 429, 430, 398, 366, 365, 333, 301, 302, 270, 238, 
[DBG]  (LNS.cpp) New path for agent 80: 
[DBG]  111, 110, 109, 141, 173, 172, 204, 236, 235, 234, 266, 265, 264, 296, 295, 294, 293, 325, 357, 389, 421, 420, 419, 418, 
[DBG]  (LNS.cpp) New path for agent 82: 
[DBG]  75, 107, 107, 107, 107, 107, 139, 140, 172, 204, 236, 268, 300, 301, 333, 365, 366, 398, 
[DBG]  (LNS.cpp) New path for agent 107: 
[DBG]  16, 15, 14, 46, 45, 77, 109, 141, 140, 172, 204, 236, 235, 234, 233, 232, 231, 263, 295, 294, 326, 358, 390, 422, 454, 486, 485, 517, 549, 581, 613, 645, 677, 709, 741, 773, 772, 804, 836, 
[DBG]  (LNS.cpp) New path for agent 120: 
[DBG]  203, 203, 203, 203, 203, 203, 203, 203, 203, 235, 234, 233, 232, 200, 
[DBG]  component_weights = {0.408638, 0.069061, 0.0722205, 0.450081}
[DBG]  opSuccess value: 1
[STAT] neighbor.sum_of_costs before recomputation: 155
[STAT] neighbor.old_sum_of_costs before recomputation: 155
[STAT] sum_of_costs before recomputation: 4177
[DBG]  Validate solution immediately after SAT success.
[DBG]  No problems after SAT replan.
[DBG]  Recomputing sum_of_cost by dividing neighbor.sum_of_costs and neighbor.old_sum_of_costs
[STAT] sum_of_costs after recomputation: 4177
[STAT] Iteration 181
[DBG]  Using SAT operator (destroy+repair SAT).
[DBG]  ====================
[DBG]  SAT destroy operator called.
[DBG]  SAT heuristic: 2
[DBG]  key_agent_id: 115
[DBG]  key_agent_id global path length: 26
[DBG]  Submap content (global positions):
[DBG]  229 230 231 232 233 
[DBG]  261 262 263 264 265 
[DBG]  293 294 295 296 297 
[DBG]  325 326 327 328 329 
[DBG]  357 358 359 360 361 
[DBG]  Map content with agents and obstacles:
[DBG]  X . . A A 
[DBG]  . X . . A 
[DBG]  . . A A . 
[DBG]  A A . A A 
[DBG]  . . A A A 
[DBG]  content of the map structure that we pass to the SAT solver:
[DBG]  -1  1  1  1  1  
[DBG]  1  -1  1  1  1  
[DBG]  1  1  1  1  1  
[DBG]  1  1  1  1  1  
[DBG]  1  1  1  1  1  
[DBG]  Identifying agents in a submap for rescheduling (when key_agent is there at the time 11):
[DBG]  Agent 15 found intervals in the sub-map:
[DBG]   [7..12]
[DBG]  Agent 15 (interval in submap: [7..12]) contains time 11, added to replan.
[DBG]  Agent 21 found intervals in the sub-map:
[DBG]   [9..14]
[DBG]  Agent 21 (interval in submap: [9..14]) contains time 11, added to replan.
[DBG]  Agent 22 found intervals in the sub-map:
[DBG]   [0..1]
[DBG]  Agent 22 is not in sub-map at time 11 (intervals: 
[DBG]  [0..1] )
[DBG]  Agent 55 found intervals in the sub-map:
[DBG]  
[DBG]  Agent 55 is not in sub-map at time 11 (intervals: 
[DBG]  )
[DBG]  Agent 59 found intervals in the sub-map:
[DBG]   [8..12]
[DBG]  Agent 59 (interval in submap: [8..12]) contains time 11, added to replan.
[DBG]  Agent 65 found intervals in the sub-map:
[DBG]   [9..13]
[DBG]  Agent 65 (interval in submap: [9..13]) contains time 11, added to replan.
[DBG]  Agent 80 found intervals in the sub-map:
[DBG]   [11..18]
[DBG]  Agent 80 (interval in submap: [11..18]) contains time 11, added to replan.
[DBG]  Agent 87 found intervals in the sub-map:
[DBG]   [0..12]
[DBG]  Agent 87 (interval in submap: [0..12]) contains time 11, added to replan.
[DBG]  Agent 103 found intervals in the sub-map:
[DBG]   [6..11]
[DBG]  Agent 103 (interval in submap: [6..11]) contains time 11, added to replan.
[DBG]  Agent 112 found intervals in the sub-map:
[DBG]   [10..14]
[DBG]  Agent 112 (interval in submap: [10..14]) contains time 11, added to replan.
[DBG]  Agent 115 found intervals in the sub-map:
[DBG]   [8..13]
[DBG]  Agent 115 (interval in submap: [8..13]) contains time 11, added to replan.
[DBG]  Agent 116 found intervals in the sub-map:
[DBG]   [10..11]
[DBG]  Agent 116 (interval in submap: [10..11]) contains time 11, added to replan.
[DBG]  Agent 120 found intervals in the sub-map:
[DBG]   [11..12]
[DBG]  Agent 120 (interval in submap: [11..12]) contains time 11, added to replan.
[DBG]  Agent 127 found intervals in the sub-map:
[DBG]   [5..11]
[DBG]  Agent 127 (interval in submap: [5..11]) contains time 11, added to replan.
[DBG]  Agent 15 | Start (global): 296 -> (local): (2, 3) at time 11 | Goal (global): 297 -> (local): (2, 4) at time 12
[DBG]  Agent 21 | Start (global): 326 -> (local): (3, 1) at time 11 | Goal (global): 327 -> (local): (3, 2) at time 14
[DBG]  Agent 59 | Start (global): 360 -> (local): (4, 3) at time 11 | Goal (global): 361 -> (local): (4, 4) at time 12
[DBG]  Agent 65 | Start (global): 325 -> (local): (3, 0) at time 11 | Goal (global): 358 -> (local): (4, 1) at time 13
[DBG]  Agent 80 | Start (global): 265 -> (local): (1, 4) at time 11 | Goal (global): 357 -> (local): (4, 0) at time 18
[DBG]  Agent 87 | Start (global): 359 -> (local): (4, 2) at time 11 | Goal (global): 358 -> (local): (4, 1) at time 12
[DBG]  Agent 103 | Start (global): 361 -> (local): (4, 4) at time 11 | Goal (global): 361 -> (local): (4, 4) at time 11
[DBG]  Agent 112 | Start (global): 328 -> (local): (3, 3) at time 11 | Goal (global): 358 -> (local): (4, 1) at time 14
[DBG]  Agent 115 | Start (global): 295 -> (local): (2, 2) at time 11 | Goal (global): 297 -> (local): (2, 4) at time 13
[DBG]  Agent 116 | Start (global): 329 -> (local): (3, 4) at time 11 | Goal (global): 329 -> (local): (3, 4) at time 11
[DBG]  Agent 120 | Start (global): 233 -> (local): (0, 4) at time 11 | Goal (global): 232 -> (local): (0, 3) at time 12
[DBG]  Agent 127 | Start (global): 232 -> (local): (0, 3) at time 11 | Goal (global): 232 -> (local): (0, 3) at time 11
[DBG]  [REPAIR] SAT destroy operator called.
[DBG]  [REPAIR] SAT operator â€“ launching subproblem FOR OPTIMIZATION.
[DBG]  Creating local paths (sx, sy) in the submap for T_sync = 11
[DBG]    Agent 15 (global paths from T=11 to 12) has local path: (2,3) (2,4) 
[DBG]    Agent 21 (global paths from T=11 to 14) has local path: (3,1) (2,1) (2,2) (3,2) 
[DBG]    Agent 59 (global paths from T=11 to 12) has local path: (4,3) (4,4) 
[DBG]    Agent 65 (global paths from T=11 to 13) has local path: (3,0) (3,1) (4,1) 
[DBG]    Agent 80 (global paths from T=11 to 18) has local path: (1,4) (1,3) (2,3) (2,2) (2,1) (2,0) (3,0) (4,0) 
[DBG]    Agent 87 (global paths from T=11 to 12) has local path: (4,2) (4,1) 
[DBG]    Agent 103 (global paths from T=11 to 11) has local path: (4,4) 
[DBG]    Agent 112 (global paths from T=11 to 14) has local path: (3,3) (3,2) (3,1) (4,1) 
[DBG]    Agent 115 (global paths from T=11 to 13) has local path: (2,2) (2,3) (2,4) 
[DBG]    Agent 116 (global paths from T=11 to 11) has local path: (3,4) 
[DBG]    Agent 120 (global paths from T=11 to 12) has local path: (0,4) (0,3) 
[DBG]    Agent 127 (global paths from T=11 to 11) has local path: (0,3) 
[DBG]  Checking input data for SAT solver:
[DBG]    - Number of agents to replan: 12
[DBG]  Agent 15 has the original local path length: 2 => Start (2,3), Goal (2,4)
[DBG]  Agent 21 has the original local path length: 4 => Start (3,1), Goal (3,2)
[DBG]  Agent 59 has the original local path length: 2 => Start (4,3), Goal (4,4)
[DBG]  Agent 65 has the original local path length: 3 => Start (3,0), Goal (4,1)
[DBG]  Agent 80 has the original local path length: 8 => Start (1,4), Goal (4,0)
[DBG]  Agent 87 has the original local path length: 2 => Start (4,2), Goal (4,1)
[DBG]  Agent 103 has the original local path length: 1 => Start (4,4), Goal (4,4)
[DBG]  Agent 112 has the original local path length: 4 => Start (3,3), Goal (4,1)
[DBG]  Agent 115 has the original local path length: 3 => Start (2,2), Goal (2,4)
[DBG]  Agent 116 has the original local path length: 1 => Start (3,4), Goal (3,4)
[DBG]  Agent 120 has the original local path length: 2 => Start (0,4), Goal (0,3)
[DBG]  Agent 127 has the original local path length: 1 => Start (0,3), Goal (0,3)
[DBG]  Start position: (2, 3), (3, 1), (4, 3), (3, 0), (1, 4), (4, 2), (4, 4), (3, 3), (2, 2), (3, 4), (0, 4), (0, 3), 
[DBG]  Goal position: (2, 4), (3, 2), (4, 4), (4, 1), (4, 0), (4, 1), (4, 4), (4, 1), (2, 4), (3, 4), (0, 3), (0, 3), 
[DBG]  SAT instance and solver created.
Currently solving
Instance name: scen
Map name: map
Encoding used: disappear_at_goal
SAT solver used: Kissat
Optimizing function: sum of costs
Number of agents: 12
Mks LB: 8
SoC LB: 31
Delta: 0
Remaining time: 300000 [ms]

Vertex conflict! Agents 0, 1, timestep 2, location 0
Swapping conflict! Agents 0, 1, timestep 2, edge (0,0)
Vertex conflict! Agents 0, 1, timestep 3, location 0
Swapping conflict! Agents 0, 1, timestep 3, edge (0,0)
Vertex conflict! Agents 0, 1, timestep 4, location 0
Swapping conflict! Agents 0, 1, timestep 4, edge (0,0)
Vertex conflict! Agents 0, 1, timestep 5, location 0
Swapping conflict! Agents 0, 1, timestep 5, edge (0,0)
Vertex conflict! Agents 0, 1, timestep 6, location 0
Swapping conflict! Agents 0, 1, timestep 6, edge (0,0)
Vertex conflict! Agents 0, 1, timestep 7, location 0
Vertex conflict! Agents 0, 2, timestep 2, location 0
Swapping conflict! Agents 0, 2, timestep 2, edge (0,0)
Vertex conflict! Agents 0, 2, timestep 3, location 0
Swapping conflict! Agents 0, 2, timestep 3, edge (0,0)
Vertex conflict! Agents 0, 2, timestep 4, location 0
Swapping conflict! Agents 0, 2, timestep 4, edge (0,0)
Vertex conflict! Agents 0, 2, timestep 5, location 0
Swapping conflict! Agents 0, 2, timestep 5, edge (0,0)
Vertex conflict! Agents 0, 2, timestep 6, location 0
Swapping conflict! Agents 0, 2, timestep 6, edge (0,0)
Vertex conflict! Agents 0, 2, timestep 7, location 0
Vertex conflict! Agents 0, 3, timestep 3, location 0
Swapping conflict! Agents 0, 3, timestep 3, edge (0,0)
Vertex conflict! Agents 0, 3, timestep 4, location 0
Swapping conflict! Agents 0, 3, timestep 4, edge (0,0)
Vertex conflict! Agents 0, 3, timestep 5, location 0
Swapping conflict! Agents 0, 3, timestep 5, edge (0,0)
Vertex conflict! Agents 0, 3, timestep 6, location 0
Swapping conflict! Agents 0, 3, timestep 6, edge (0,0)
Vertex conflict! Agents 0, 3, timestep 7, location 0
Vertex conflict! Agents 0, 5, timestep 2, location 0
Swapping conflict! Agents 0, 5, timestep 2, edge (0,0)
Vertex conflict! Agents 0, 5, timestep 3, location 0
Swapping conflict! Agents 0, 5, timestep 3, edge (0,0)
Vertex conflict! Agents 0, 5, timestep 4, location 0
Swapping conflict! Agents 0, 5, timestep 4, edge (0,0)
Vertex conflict! Agents 0, 5, timestep 5, location 0
Swapping conflict! Agents 0, 5, timestep 5, edge (0,0)
Vertex conflict! Agents 0, 5, timestep 6, location 0
Swapping conflict! Agents 0, 5, timestep 6, edge (0,0)
Vertex conflict! Agents 0, 5, timestep 7, location 0
Vertex conflict! Agents 0, 6, timestep 2, location 0
Swapping conflict! Agents 0, 6, timestep 2, edge (0,0)
Vertex conflict! Agents 0, 6, timestep 3, location 0
Swapping conflict! Agents 0, 6, timestep 3, edge (0,0)
Vertex conflict! Agents 0, 6, timestep 4, location 0
Swapping conflict! Agents 0, 6, timestep 4, edge (0,0)
Vertex conflict! Agents 0, 6, timestep 5, location 0
Swapping conflict! Agents 0, 6, timestep 5, edge (0,0)
Vertex conflict! Agents 0, 6, timestep 6, location 0
Swapping conflict! Agents 0, 6, timestep 6, edge (0,0)
Vertex conflict! Agents 0, 6, timestep 7, location 0
Vertex conflict! Agents 0, 7, timestep 4, location 0
Swapping conflict! Agents 0, 7, timestep 4, edge (0,0)
Vertex conflict! Agents 0, 7, timestep 5, location 0
Swapping conflict! Agents 0, 7, timestep 5, edge (0,0)
Vertex conflict! Agents 0, 7, timestep 6, location 0
Swapping conflict! Agents 0, 7, timestep 6, edge (0,0)
Vertex conflict! Agents 0, 7, timestep 7, location 0
Vertex conflict! Agents 0, 8, timestep 3, location 0
Swapping conflict! Agents 0, 8, timestep 3, edge (0,0)
Vertex conflict! Agents 0, 8, timestep 4, location 0
Swapping conflict! Agents 0, 8, timestep 4, edge (0,0)
Vertex conflict! Agents 0, 8, timestep 5, location 0
Swapping conflict! Agents 0, 8, timestep 5, edge (0,0)
Vertex conflict! Agents 0, 8, timestep 6, location 0
Swapping conflict! Agents 0, 8, timestep 6, edge (0,0)
Vertex conflict! Agents 0, 8, timestep 7, location 0
Vertex conflict! Agents 0, 9, timestep 2, location 0
Swapping conflict! Agents 0, 9, timestep 2, edge (0,0)
Vertex conflict! Agents 0, 9, timestep 3, location 0
Swapping conflict! Agents 0, 9, timestep 3, edge (0,0)
Vertex conflict! Agents 0, 9, timestep 4, location 0
Swapping conflict! Agents 0, 9, timestep 4, edge (0,0)
Vertex conflict! Agents 0, 9, timestep 5, location 0
Swapping conflict! Agents 0, 9, timestep 5, edge (0,0)
Vertex conflict! Agents 0, 9, timestep 6, location 0
Swapping conflict! Agents 0, 9, timestep 6, edge (0,0)
Vertex conflict! Agents 0, 9, timestep 7, location 0
Vertex conflict! Agents 0, 10, timestep 2, location 0
Swapping conflict! Agents 0, 10, timestep 2, edge (0,0)
Vertex conflict! Agents 0, 10, timestep 3, location 0
Swapping conflict! Agents 0, 10, timestep 3, edge (0,0)
Vertex conflict! Agents 0, 10, timestep 4, location 0
Swapping conflict! Agents 0, 10, timestep 4, edge (0,0)
Vertex conflict! Agents 0, 10, timestep 5, location 0
Swapping conflict! Agents 0, 10, timestep 5, edge (0,0)
Vertex conflict! Agents 0, 10, timestep 6, location 0
Swapping conflict! Agents 0, 10, timestep 6, edge (0,0)
Vertex conflict! Agents 0, 10, timestep 7, location 0
Vertex conflict! Agents 0, 11, timestep 2, location 0
Swapping conflict! Agents 0, 11, timestep 2, edge (0,0)
Vertex conflict! Agents 0, 11, timestep 3, location 0
Swapping conflict! Agents 0, 11, timestep 3, edge (0,0)
Vertex conflict! Agents 0, 11, timestep 4, location 0
Swapping conflict! Agents 0, 11, timestep 4, edge (0,0)
Vertex conflict! Agents 0, 11, timestep 5, location 0
Swapping conflict! Agents 0, 11, timestep 5, edge (0,0)
Vertex conflict! Agents 0, 11, timestep 6, location 0
Swapping conflict! Agents 0, 11, timestep 6, edge (0,0)
Vertex conflict! Agents 0, 11, timestep 7, location 0
Vertex conflict! Agents 1, 2, timestep 2, location 0
Swapping conflict! Agents 1, 2, timestep 2, edge (0,0)
Vertex conflict! Agents 1, 2, timestep 3, location 0
Swapping conflict! Agents 1, 2, timestep 3, edge (0,0)
Vertex conflict! Agents 1, 2, timestep 4, location 0
Swapping conflict! Agents 1, 2, timestep 4, edge (0,0)
Vertex conflict! Agents 1, 2, timestep 5, location 0
Swapping conflict! Agents 1, 2, timestep 5, edge (0,0)
Vertex conflict! Agents 1, 2, timestep 6, location 0
Swapping conflict! Agents 1, 2, timestep 6, edge (0,0)
Vertex conflict! Agents 1, 2, timestep 7, location 0
Vertex conflict! Agents 1, 3, timestep 3, location 0
Swapping conflict! Agents 1, 3, timestep 3, edge (0,0)
Vertex conflict! Agents 1, 3, timestep 4, location 0
Swapping conflict! Agents 1, 3, timestep 4, edge (0,0)
Vertex conflict! Agents 1, 3, timestep 5, location 0
Swapping conflict! Agents 1, 3, timestep 5, edge (0,0)
Vertex conflict! Agents 1, 3, timestep 6, location 0
Swapping conflict! Agents 1, 3, timestep 6, edge (0,0)
Vertex conflict! Agents 1, 3, timestep 7, location 0
Vertex conflict! Agents 1, 5, timestep 2, location 0
Swapping conflict! Agents 1, 5, timestep 2, edge (0,0)
Vertex conflict! Agents 1, 5, timestep 3, location 0
Swapping conflict! Agents 1, 5, timestep 3, edge (0,0)
Vertex conflict! Agents 1, 5, timestep 4, location 0
Swapping conflict! Agents 1, 5, timestep 4, edge (0,0)
Vertex conflict! Agents 1, 5, timestep 5, location 0
Swapping conflict! Agents 1, 5, timestep 5, edge (0,0)
Vertex conflict! Agents 1, 5, timestep 6, location 0
Swapping conflict! Agents 1, 5, timestep 6, edge (0,0)
Vertex conflict! Agents 1, 5, timestep 7, location 0
Vertex conflict! Agents 1, 6, timestep 2, location 0
Swapping conflict! Agents 1, 6, timestep 2, edge (0,0)
Vertex conflict! Agents 1, 6, timestep 3, location 0
Swapping conflict! Agents 1, 6, timestep 3, edge (0,0)
Vertex conflict! Agents 1, 6, timestep 4, location 0
Swapping conflict! Agents 1, 6, timestep 4, edge (0,0)
Vertex conflict! Agents 1, 6, timestep 5, location 0
Swapping conflict! Agents 1, 6, timestep 5, edge (0,0)
Vertex conflict! Agents 1, 6, timestep 6, location 0
Swapping conflict! Agents 1, 6, timestep 6, edge (0,0)
Vertex conflict! Agents 1, 6, timestep 7, location 0
Vertex conflict! Agents 1, 7, timestep 4, location 0
Swapping conflict! Agents 1, 7, timestep 4, edge (0,0)
Vertex conflict! Agents 1, 7, timestep 5, location 0
Swapping conflict! Agents 1, 7, timestep 5, edge (0,0)
Vertex conflict! Agents 1, 7, timestep 6, location 0
Swapping conflict! Agents 1, 7, timestep 6, edge (0,0)
Vertex conflict! Agents 1, 7, timestep 7, location 0
Vertex conflict! Agents 1, 8, timestep 3, location 0
Swapping conflict! Agents 1, 8, timestep 3, edge (0,0)
Vertex conflict! Agents 1, 8, timestep 4, location 0
Swapping conflict! Agents 1, 8, timestep 4, edge (0,0)
Vertex conflict! Agents 1, 8, timestep 5, location 0
Swapping conflict! Agents 1, 8, timestep 5, edge (0,0)
Vertex conflict! Agents 1, 8, timestep 6, location 0
Swapping conflict! Agents 1, 8, timestep 6, edge (0,0)
Vertex conflict! Agents 1, 8, timestep 7, location 0
Vertex conflict! Agents 1, 9, timestep 2, location 0
Swapping conflict! Agents 1, 9, timestep 2, edge (0,0)
Vertex conflict! Agents 1, 9, timestep 3, location 0
Swapping conflict! Agents 1, 9, timestep 3, edge (0,0)
Vertex conflict! Agents 1, 9, timestep 4, location 0
Swapping conflict! Agents 1, 9, timestep 4, edge (0,0)
Vertex conflict! Agents 1, 9, timestep 5, location 0
Swapping conflict! Agents 1, 9, timestep 5, edge (0,0)
Vertex conflict! Agents 1, 9, timestep 6, location 0
Swapping conflict! Agents 1, 9, timestep 6, edge (0,0)
Vertex conflict! Agents 1, 9, timestep 7, location 0
Vertex conflict! Agents 1, 10, timestep 2, location 0
Swapping conflict! Agents 1, 10, timestep 2, edge (0,0)
Vertex conflict! Agents 1, 10, timestep 3, location 0
Swapping conflict! Agents 1, 10, timestep 3, edge (0,0)
Vertex conflict! Agents 1, 10, timestep 4, location 0
Swapping conflict! Agents 1, 10, timestep 4, edge (0,0)
Vertex conflict! Agents 1, 10, timestep 5, location 0
Swapping conflict! Agents 1, 10, timestep 5, edge (0,0)
Vertex conflict! Agents 1, 10, timestep 6, location 0
Swapping conflict! Agents 1, 10, timestep 6, edge (0,0)
Vertex conflict! Agents 1, 10, timestep 7, location 0
Vertex conflict! Agents 1, 11, timestep 2, location 0
Swapping conflict! Agents 1, 11, timestep 2, edge (0,0)
Vertex conflict! Agents 1, 11, timestep 3, location 0
Swapping conflict! Agents 1, 11, timestep 3, edge (0,0)
Vertex conflict! Agents 1, 11, timestep 4, location 0
Swapping conflict! Agents 1, 11, timestep 4, edge (0,0)
Vertex conflict! Agents 1, 11, timestep 5, location 0
Swapping conflict! Agents 1, 11, timestep 5, edge (0,0)
Vertex conflict! Agents 1, 11, timestep 6, location 0
Swapping conflict! Agents 1, 11, timestep 6, edge (0,0)
Vertex conflict! Agents 1, 11, timestep 7, location 0
Vertex conflict! Agents 2, 3, timestep 3, location 0
Swapping conflict! Agents 2, 3, timestep 3, edge (0,0)
Vertex conflict! Agents 2, 3, timestep 4, location 0
Swapping conflict! Agents 2, 3, timestep 4, edge (0,0)
Vertex conflict! Agents 2, 3, timestep 5, location 0
Swapping conflict! Agents 2, 3, timestep 5, edge (0,0)
Vertex conflict! Agents 2, 3, timestep 6, location 0
Swapping conflict! Agents 2, 3, timestep 6, edge (0,0)
Vertex conflict! Agents 2, 3, timestep 7, location 0
Vertex conflict! Agents 2, 5, timestep 2, location 0
Swapping conflict! Agents 2, 5, timestep 2, edge (0,0)
Vertex conflict! Agents 2, 5, timestep 3, location 0
Swapping conflict! Agents 2, 5, timestep 3, edge (0,0)
Vertex conflict! Agents 2, 5, timestep 4, location 0
Swapping conflict! Agents 2, 5, timestep 4, edge (0,0)
Vertex conflict! Agents 2, 5, timestep 5, location 0
Swapping conflict! Agents 2, 5, timestep 5, edge (0,0)
Vertex conflict! Agents 2, 5, timestep 6, location 0
Swapping conflict! Agents 2, 5, timestep 6, edge (0,0)
Vertex conflict! Agents 2, 5, timestep 7, location 0
Vertex conflict! Agents 2, 6, timestep 2, location 0
Swapping conflict! Agents 2, 6, timestep 2, edge (0,0)
Vertex conflict! Agents 2, 6, timestep 3, location 0
Swapping conflict! Agents 2, 6, timestep 3, edge (0,0)
Vertex conflict! Agents 2, 6, timestep 4, location 0
Swapping conflict! Agents 2, 6, timestep 4, edge (0,0)
Vertex conflict! Agents 2, 6, timestep 5, location 0
Swapping conflict! Agents 2, 6, timestep 5, edge (0,0)
Vertex conflict! Agents 2, 6, timestep 6, location 0
Swapping conflict! Agents 2, 6, timestep 6, edge (0,0)
Vertex conflict! Agents 2, 6, timestep 7, location 0
Vertex conflict! Agents 2, 7, timestep 4, location 0
Swapping conflict! Agents 2, 7, timestep 4, edge (0,0)
Vertex conflict! Agents 2, 7, timestep 5, location 0
Swapping conflict! Agents 2, 7, timestep 5, edge (0,0)
Vertex conflict! Agents 2, 7, timestep 6, location 0
Swapping conflict! Agents 2, 7, timestep 6, edge (0,0)
Vertex conflict! Agents 2, 7, timestep 7, location 0
Vertex conflict! Agents 2, 8, timestep 3, location 0
Swapping conflict! Agents 2, 8, timestep 3, edge (0,0)
Vertex conflict! Agents 2, 8, timestep 4, location 0
Swapping conflict! Agents 2, 8, timestep 4, edge (0,0)
Vertex conflict! Agents 2, 8, timestep 5, location 0
Swapping conflict! Agents 2, 8, timestep 5, edge (0,0)
Vertex conflict! Agents 2, 8, timestep 6, location 0
Swapping conflict! Agents 2, 8, timestep 6, edge (0,0)
Vertex conflict! Agents 2, 8, timestep 7, location 0
Vertex conflict! Agents 2, 9, timestep 2, location 0
Swapping conflict! Agents 2, 9, timestep 2, edge (0,0)
Vertex conflict! Agents 2, 9, timestep 3, location 0
Swapping conflict! Agents 2, 9, timestep 3, edge (0,0)
Vertex conflict! Agents 2, 9, timestep 4, location 0
Swapping conflict! Agents 2, 9, timestep 4, edge (0,0)
Vertex conflict! Agents 2, 9, timestep 5, location 0
Swapping conflict! Agents 2, 9, timestep 5, edge (0,0)
Vertex conflict! Agents 2, 9, timestep 6, location 0
Swapping conflict! Agents 2, 9, timestep 6, edge (0,0)
Vertex conflict! Agents 2, 9, timestep 7, location 0
Vertex conflict! Agents 2, 10, timestep 2, location 0
Swapping conflict! Agents 2, 10, timestep 2, edge (0,0)
Vertex conflict! Agents 2, 10, timestep 3, location 0
Swapping conflict! Agents 2, 10, timestep 3, edge (0,0)
Vertex conflict! Agents 2, 10, timestep 4, location 0
Swapping conflict! Agents 2, 10, timestep 4, edge (0,0)
Vertex conflict! Agents 2, 10, timestep 5, location 0
Swapping conflict! Agents 2, 10, timestep 5, edge (0,0)
Vertex conflict! Agents 2, 10, timestep 6, location 0
Swapping conflict! Agents 2, 10, timestep 6, edge (0,0)
Vertex conflict! Agents 2, 10, timestep 7, location 0
Vertex conflict! Agents 2, 11, timestep 2, location 0
Swapping conflict! Agents 2, 11, timestep 2, edge (0,0)
Vertex conflict! Agents 2, 11, timestep 3, location 0
Swapping conflict! Agents 2, 11, timestep 3, edge (0,0)
Vertex conflict! Agents 2, 11, timestep 4, location 0
Swapping conflict! Agents 2, 11, timestep 4, edge (0,0)
Vertex conflict! Agents 2, 11, timestep 5, location 0
Swapping conflict! Agents 2, 11, timestep 5, edge (0,0)
Vertex conflict! Agents 2, 11, timestep 6, location 0
Swapping conflict! Agents 2, 11, timestep 6, edge (0,0)
Vertex conflict! Agents 2, 11, timestep 7, location 0
Vertex conflict! Agents 3, 5, timestep 3, location 0
Swapping conflict! Agents 3, 5, timestep 3, edge (0,0)
Vertex conflict! Agents 3, 5, timestep 4, location 0
Swapping conflict! Agents 3, 5, timestep 4, edge (0,0)
Vertex conflict! Agents 3, 5, timestep 5, location 0
Swapping conflict! Agents 3, 5, timestep 5, edge (0,0)
Vertex conflict! Agents 3, 5, timestep 6, location 0
Swapping conflict! Agents 3, 5, timestep 6, edge (0,0)
Vertex conflict! Agents 3, 5, timestep 7, location 0
Vertex conflict! Agents 3, 6, timestep 3, location 0
Swapping conflict! Agents 3, 6, timestep 3, edge (0,0)
Vertex conflict! Agents 3, 6, timestep 4, location 0
Swapping conflict! Agents 3, 6, timestep 4, edge (0,0)
Vertex conflict! Agents 3, 6, timestep 5, location 0
Swapping conflict! Agents 3, 6, timestep 5, edge (0,0)
Vertex conflict! Agents 3, 6, timestep 6, location 0
Swapping conflict! Agents 3, 6, timestep 6, edge (0,0)
Vertex conflict! Agents 3, 6, timestep 7, location 0
Vertex conflict! Agents 3, 7, timestep 4, location 0
Swapping conflict! Agents 3, 7, timestep 4, edge (0,0)
Vertex conflict! Agents 3, 7, timestep 5, location 0
Swapping conflict! Agents 3, 7, timestep 5, edge (0,0)
Vertex conflict! Agents 3, 7, timestep 6, location 0
Swapping conflict! Agents 3, 7, timestep 6, edge (0,0)
Vertex conflict! Agents 3, 7, timestep 7, location 0
Vertex conflict! Agents 3, 8, timestep 3, location 0
Swapping conflict! Agents 3, 8, timestep 3, edge (0,0)
Vertex conflict! Agents 3, 8, timestep 4, location 0
Swapping conflict! Agents 3, 8, timestep 4, edge (0,0)
Vertex conflict! Agents 3, 8, timestep 5, location 0
Swapping conflict! Agents 3, 8, timestep 5, edge (0,0)
Vertex conflict! Agents 3, 8, timestep 6, location 0
Swapping conflict! Agents 3, 8, timestep 6, edge (0,0)
Vertex conflict! Agents 3, 8, timestep 7, location 0
Vertex conflict! Agents 3, 9, timestep 3, location 0
Swapping conflict! Agents 3, 9, timestep 3, edge (0,0)
Vertex conflict! Agents 3, 9, timestep 4, location 0
Swapping conflict! Agents 3, 9, timestep 4, edge (0,0)
Vertex conflict! Agents 3, 9, timestep 5, location 0
Swapping conflict! Agents 3, 9, timestep 5, edge (0,0)
Vertex conflict! Agents 3, 9, timestep 6, location 0
Swapping conflict! Agents 3, 9, timestep 6, edge (0,0)
Vertex conflict! Agents 3, 9, timestep 7, location 0
Vertex conflict! Agents 3, 10, timestep 3, location 0
Swapping conflict! Agents 3, 10, timestep 3, edge (0,0)
Vertex conflict! Agents 3, 10, timestep 4, location 0
Swapping conflict! Agents 3, 10, timestep 4, edge (0,0)
Vertex conflict! Agents 3, 10, timestep 5, location 0
Swapping conflict! Agents 3, 10, timestep 5, edge (0,0)
Vertex conflict! Agents 3, 10, timestep 6, location 0
Swapping conflict! Agents 3, 10, timestep 6, edge (0,0)
Vertex conflict! Agents 3, 10, timestep 7, location 0
Vertex conflict! Agents 3, 11, timestep 3, location 0
Swapping conflict! Agents 3, 11, timestep 3, edge (0,0)
Vertex conflict! Agents 3, 11, timestep 4, location 0
Swapping conflict! Agents 3, 11, timestep 4, edge (0,0)
Vertex conflict! Agents 3, 11, timestep 5, location 0
Swapping conflict! Agents 3, 11, timestep 5, edge (0,0)
Vertex conflict! Agents 3, 11, timestep 6, location 0
Swapping conflict! Agents 3, 11, timestep 6, edge (0,0)
Vertex conflict! Agents 3, 11, timestep 7, location 0
Vertex conflict! Agents 5, 6, timestep 2, location 0
Swapping conflict! Agents 5, 6, timestep 2, edge (0,0)
Vertex conflict! Agents 5, 6, timestep 3, location 0
Swapping conflict! Agents 5, 6, timestep 3, edge (0,0)
Vertex conflict! Agents 5, 6, timestep 4, location 0
Swapping conflict! Agents 5, 6, timestep 4, edge (0,0)
Vertex conflict! Agents 5, 6, timestep 5, location 0
Swapping conflict! Agents 5, 6, timestep 5, edge (0,0)
Vertex conflict! Agents 5, 6, timestep 6, location 0
Swapping conflict! Agents 5, 6, timestep 6, edge (0,0)
Vertex conflict! Agents 5, 6, timestep 7, location 0
Vertex conflict! Agents 5, 7, timestep 4, location 0
Swapping conflict! Agents 5, 7, timestep 4, edge (0,0)
Vertex conflict! Agents 5, 7, timestep 5, location 0
Swapping conflict! Agents 5, 7, timestep 5, edge (0,0)
Vertex conflict! Agents 5, 7, timestep 6, location 0
Swapping conflict! Agents 5, 7, timestep 6, edge (0,0)
Vertex conflict! Agents 5, 7, timestep 7, location 0
Vertex conflict! Agents 5, 8, timestep 3, location 0
Swapping conflict! Agents 5, 8, timestep 3, edge (0,0)
Vertex conflict! Agents 5, 8, timestep 4, location 0
Swapping conflict! Agents 5, 8, timestep 4, edge (0,0)
Vertex conflict! Agents 5, 8, timestep 5, location 0
Swapping conflict! Agents 5, 8, timestep 5, edge (0,0)
Vertex conflict! Agents 5, 8, timestep 6, location 0
Swapping conflict! Agents 5, 8, timestep 6, edge (0,0)
Vertex conflict! Agents 5, 8, timestep 7, location 0
Vertex conflict! Agents 5, 9, timestep 2, location 0
Swapping conflict! Agents 5, 9, timestep 2, edge (0,0)
Vertex conflict! Agents 5, 9, timestep 3, location 0
Swapping conflict! Agents 5, 9, timestep 3, edge (0,0)
Vertex conflict! Agents 5, 9, timestep 4, location 0
Swapping conflict! Agents 5, 9, timestep 4, edge (0,0)
Vertex conflict! Agents 5, 9, timestep 5, location 0
Swapping conflict! Agents 5, 9, timestep 5, edge (0,0)
Vertex conflict! Agents 5, 9, timestep 6, location 0
Swapping conflict! Agents 5, 9, timestep 6, edge (0,0)
Vertex conflict! Agents 5, 9, timestep 7, location 0
Vertex conflict! Agents 5, 10, timestep 2, location 0
Swapping conflict! Agents 5, 10, timestep 2, edge (0,0)
Vertex conflict! Agents 5, 10, timestep 3, location 0
Swapping conflict! Agents 5, 10, timestep 3, edge (0,0)
Vertex conflict! Agents 5, 10, timestep 4, location 0
Swapping conflict! Agents 5, 10, timestep 4, edge (0,0)
Vertex conflict! Agents 5, 10, timestep 5, location 0
Swapping conflict! Agents 5, 10, timestep 5, edge (0,0)
Vertex conflict! Agents 5, 10, timestep 6, location 0
Swapping conflict! Agents 5, 10, timestep 6, edge (0,0)
Vertex conflict! Agents 5, 10, timestep 7, location 0
Vertex conflict! Agents 5, 11, timestep 2, location 0
Swapping conflict! Agents 5, 11, timestep 2, edge (0,0)
Vertex conflict! Agents 5, 11, timestep 3, location 0
Swapping conflict! Agents 5, 11, timestep 3, edge (0,0)
Vertex conflict! Agents 5, 11, timestep 4, location 0
Swapping conflict! Agents 5, 11, timestep 4, edge (0,0)
Vertex conflict! Agents 5, 11, timestep 5, location 0
Swapping conflict! Agents 5, 11, timestep 5, edge (0,0)
Vertex conflict! Agents 5, 11, timestep 6, location 0
Swapping conflict! Agents 5, 11, timestep 6, edge (0,0)
Vertex conflict! Agents 5, 11, timestep 7, location 0
Vertex conflict! Agents 6, 7, timestep 4, location 0
Swapping conflict! Agents 6, 7, timestep 4, edge (0,0)
Vertex conflict! Agents 6, 7, timestep 5, location 0
Swapping conflict! Agents 6, 7, timestep 5, edge (0,0)
Vertex conflict! Agents 6, 7, timestep 6, location 0
Swapping conflict! Agents 6, 7, timestep 6, edge (0,0)
Vertex conflict! Agents 6, 7, timestep 7, location 0
Vertex conflict! Agents 6, 8, timestep 3, location 0
Swapping conflict! Agents 6, 8, timestep 3, edge (0,0)
Vertex conflict! Agents 6, 8, timestep 4, location 0
Swapping conflict! Agents 6, 8, timestep 4, edge (0,0)
Vertex conflict! Agents 6, 8, timestep 5, location 0
Swapping conflict! Agents 6, 8, timestep 5, edge (0,0)
Vertex conflict! Agents 6, 8, timestep 6, location 0
Swapping conflict! Agents 6, 8, timestep 6, edge (0,0)
Vertex conflict! Agents 6, 8, timestep 7, location 0
Vertex conflict! Agents 6, 9, timestep 1, location 0
Swapping conflict! Agents 6, 9, timestep 1, edge (0,0)
Vertex conflict! Agents 6, 9, timestep 2, location 0
Swapping conflict! Agents 6, 9, timestep 2, edge (0,0)
Vertex conflict! Agents 6, 9, timestep 3, location 0
Swapping conflict! Agents 6, 9, timestep 3, edge (0,0)
Vertex conflict! Agents 6, 9, timestep 4, location 0
Swapping conflict! Agents 6, 9, timestep 4, edge (0,0)
Vertex conflict! Agents 6, 9, timestep 5, location 0
Swapping conflict! Agents 6, 9, timestep 5, edge (0,0)
Vertex conflict! Agents 6, 9, timestep 6, location 0
Swapping conflict! Agents 6, 9, timestep 6, edge (0,0)
Vertex conflict! Agents 6, 9, timestep 7, location 0
Vertex conflict! Agents 6, 10, timestep 2, location 0
Swapping conflict! Agents 6, 10, timestep 2, edge (0,0)
Vertex conflict! Agents 6, 10, timestep 3, location 0
Swapping conflict! Agents 6, 10, timestep 3, edge (0,0)
Vertex conflict! Agents 6, 10, timestep 4, location 0
Swapping conflict! Agents 6, 10, timestep 4, edge (0,0)
Vertex conflict! Agents 6, 10, timestep 5, location 0
Swapping conflict! Agents 6, 10, timestep 5, edge (0,0)
Vertex conflict! Agents 6, 10, timestep 6, location 0
Swapping conflict! Agents 6, 10, timestep 6, edge (0,0)
Vertex conflict! Agents 6, 10, timestep 7, location 0
Vertex conflict! Agents 6, 11, timestep 1, location 0
Swapping conflict! Agents 6, 11, timestep 1, edge (0,0)
Vertex conflict! Agents 6, 11, timestep 2, location 0
Swapping conflict! Agents 6, 11, timestep 2, edge (0,0)
Vertex conflict! Agents 6, 11, timestep 3, location 0
Swapping conflict! Agents 6, 11, timestep 3, edge (0,0)
Vertex conflict! Agents 6, 11, timestep 4, location 0
Swapping conflict! Agents 6, 11, timestep 4, edge (0,0)
Vertex conflict! Agents 6, 11, timestep 5, location 0
Swapping conflict! Agents 6, 11, timestep 5, edge (0,0)
Vertex conflict! Agents 6, 11, timestep 6, location 0
Swapping conflict! Agents 6, 11, timestep 6, edge (0,0)
Vertex conflict! Agents 6, 11, timestep 7, location 0
Vertex conflict! Agents 7, 8, timestep 4, location 0
Swapping conflict! Agents 7, 8, timestep 4, edge (0,0)
Vertex conflict! Agents 7, 8, timestep 5, location 0
Swapping conflict! Agents 7, 8, timestep 5, edge (0,0)
Vertex conflict! Agents 7, 8, timestep 6, location 0
Swapping conflict! Agents 7, 8, timestep 6, edge (0,0)
Vertex conflict! Agents 7, 8, timestep 7, location 0
Vertex conflict! Agents 7, 9, timestep 4, location 0
Swapping conflict! Agents 7, 9, timestep 4, edge (0,0)
Vertex conflict! Agents 7, 9, timestep 5, location 0
Swapping conflict! Agents 7, 9, timestep 5, edge (0,0)
Vertex conflict! Agents 7, 9, timestep 6, location 0
Swapping conflict! Agents 7, 9, timestep 6, edge (0,0)
Vertex conflict! Agents 7, 9, timestep 7, location 0
Vertex conflict! Agents 7, 10, timestep 4, location 0
Swapping conflict! Agents 7, 10, timestep 4, edge (0,0)
Vertex conflict! Agents 7, 10, timestep 5, location 0
Swapping conflict! Agents 7, 10, timestep 5, edge (0,0)
Vertex conflict! Agents 7, 10, timestep 6, location 0
Swapping conflict! Agents 7, 10, timestep 6, edge (0,0)
Vertex conflict! Agents 7, 10, timestep 7, location 0
Vertex conflict! Agents 7, 11, timestep 4, location 0
Swapping conflict! Agents 7, 11, timestep 4, edge (0,0)
Vertex conflict! Agents 7, 11, timestep 5, location 0
Swapping conflict! Agents 7, 11, timestep 5, edge (0,0)
Vertex conflict! Agents 7, 11, timestep 6, location 0
Swapping conflict! Agents 7, 11, timestep 6, edge (0,0)
Vertex conflict! Agents 7, 11, timestep 7, location 0
Vertex conflict! Agents 8, 9, timestep 3, location 0
Swapping conflict! Agents 8, 9, timestep 3, edge (0,0)
Vertex conflict! Agents 8, 9, timestep 4, location 0
Swapping conflict! Agents 8, 9, timestep 4, edge (0,0)
Vertex conflict! Agents 8, 9, timestep 5, location 0
Swapping conflict! Agents 8, 9, timestep 5, edge (0,0)
Vertex conflict! Agents 8, 9, timestep 6, location 0
Swapping conflict! Agents 8, 9, timestep 6, edge (0,0)
Vertex conflict! Agents 8, 9, timestep 7, location 0
Vertex conflict! Agents 8, 10, timestep 3, location 0
Swapping conflict! Agents 8, 10, timestep 3, edge (0,0)
Vertex conflict! Agents 8, 10, timestep 4, location 0
Swapping conflict! Agents 8, 10, timestep 4, edge (0,0)
Vertex conflict! Agents 8, 10, timestep 5, location 0
Swapping conflict! Agents 8, 10, timestep 5, edge (0,0)
Vertex conflict! Agents 8, 10, timestep 6, location 0
Swapping conflict! Agents 8, 10, timestep 6, edge (0,0)
Vertex conflict! Agents 8, 10, timestep 7, location 0
Vertex conflict! Agents 8, 11, timestep 3, location 0
Swapping conflict! Agents 8, 11, timestep 3, edge (0,0)
Vertex conflict! Agents 8, 11, timestep 4, location 0
Swapping conflict! Agents 8, 11, timestep 4, edge (0,0)
Vertex conflict! Agents 8, 11, timestep 5, location 0
Swapping conflict! Agents 8, 11, timestep 5, edge (0,0)
Vertex conflict! Agents 8, 11, timestep 6, location 0
Swapping conflict! Agents 8, 11, timestep 6, edge (0,0)
Vertex conflict! Agents 8, 11, timestep 7, location 0
Vertex conflict! Agents 9, 10, timestep 2, location 0
Swapping conflict! Agents 9, 10, timestep 2, edge (0,0)
Vertex conflict! Agents 9, 10, timestep 3, location 0
Swapping conflict! Agents 9, 10, timestep 3, edge (0,0)
Vertex conflict! Agents 9, 10, timestep 4, location 0
Swapping conflict! Agents 9, 10, timestep 4, edge (0,0)
Vertex conflict! Agents 9, 10, timestep 5, location 0
Swapping conflict! Agents 9, 10, timestep 5, edge (0,0)
Vertex conflict! Agents 9, 10, timestep 6, location 0
Swapping conflict! Agents 9, 10, timestep 6, edge (0,0)
Vertex conflict! Agents 9, 10, timestep 7, location 0
Vertex conflict! Agents 9, 11, timestep 1, location 0
Swapping conflict! Agents 9, 11, timestep 1, edge (0,0)
Vertex conflict! Agents 9, 11, timestep 2, location 0
Swapping conflict! Agents 9, 11, timestep 2, edge (0,0)
Vertex conflict! Agents 9, 11, timestep 3, location 0
Swapping conflict! Agents 9, 11, timestep 3, edge (0,0)
Vertex conflict! Agents 9, 11, timestep 4, location 0
Swapping conflict! Agents 9, 11, timestep 4, edge (0,0)
Vertex conflict! Agents 9, 11, timestep 5, location 0
Swapping conflict! Agents 9, 11, timestep 5, edge (0,0)
Vertex conflict! Agents 9, 11, timestep 6, location 0
Swapping conflict! Agents 9, 11, timestep 6, edge (0,0)
Vertex conflict! Agents 9, 11, timestep 7, location 0
Vertex conflict! Agents 10, 11, timestep 2, location 0
Swapping conflict! Agents 10, 11, timestep 2, edge (0,0)
Vertex conflict! Agents 10, 11, timestep 3, location 0
Swapping conflict! Agents 10, 11, timestep 3, edge (0,0)
Vertex conflict! Agents 10, 11, timestep 4, location 0
Swapping conflict! Agents 10, 11, timestep 4, edge (0,0)
Vertex conflict! Agents 10, 11, timestep 5, location 0
Swapping conflict! Agents 10, 11, timestep 5, edge (0,0)
Vertex conflict! Agents 10, 11, timestep 6, location 0
Swapping conflict! Agents 10, 11, timestep 6, edge (0,0)
Vertex conflict! Agents 10, 11, timestep 7, location 0
Found plan [agents = 12] [timesteps = 8]
Agent #0 : 11 12 0 0 0 0 0 0 
Agent #1 : 14 15 0 0 0 0 0 0 
Agent #2 : 21 22 0 0 0 0 0 0 
Agent #3 : 13 18 19 0 0 0 0 0 
Agent #4 : 7 6 11 16 21 20 19 18 
Agent #5 : 20 19 0 0 0 0 0 0 
Agent #6 : 22 0 0 0 0 0 0 0 
Agent #7 : 16 21 20 19 0 0 0 0 
Agent #8 : 10 11 12 0 0 0 0 0 
Agent #9 : 17 0 0 0 0 0 0 0 
Agent #10 : 3 2 0 0 0 0 0 0 
Agent #11 : 2 0 0 0 0 0 0 0 

[STAT] Solver returned: 0
[DBG]  Agent (index) 15 | New local path (submap idx):
[DBG]  11 12 
[DBG]  Agent (index) 21 | New local path (submap idx):
[DBG]  14 15 
[DBG]  Agent (index) 59 | New local path (submap idx):
[DBG]  21 22 
[DBG]  Agent (index) 65 | New local path (submap idx):
[DBG]  13 18 19 
[DBG]  Agent (index) 80 | New local path (submap idx):
[DBG]  7 6 11 16 21 20 19 18 
[DBG]  Agent (index) 87 | New local path (submap idx):
[DBG]  20 19 
[DBG]  Agent (index) 103 | New local path (submap idx):
[DBG]  22 
[DBG]  Agent (index) 112 | New local path (submap idx):
[DBG]  16 21 20 19 
[DBG]  Agent (index) 115 | New local path (submap idx):
[DBG]  10 11 12 
[DBG]  Agent (index) 116 | New local path (submap idx):
[DBG]  17 
[DBG]  Agent (index) 120 | New local path (submap idx):
[DBG]  3 2 
[DBG]  Agent (index) 127 | New local path (submap idx):
[DBG]  2 
[DBG]  Update the agent path 15 | Original local length: 2 | New local length: 2
[DBG]  agent 15 t=0 => decoded (sx,sy)=(2,3) => global_id=296
[DBG]  agent 15 t=1 => decoded (sx,sy)=(2,4) => global_id=297
[DBG]  Complete path of agent 15:
[DBG]    Original: 288 289 257 257 258 259 260 261 293 294 295 296 297 298 266 234 235 203 204 205 173 141 109 110 111 112 113 81 82 83 115 116 117 118 119 120 121 122 123 124 156 157 
[DBG]    New:     288 289 257 257 258 259 260 261 293 294 295 296 297 298 266 234 235 203 204 205 173 141 109 110 111 112 113 81 82 83 115 116 117 118 119 120 121 122 123 124 156 157 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 288 289 257 257 258 259 260 261 293 294 295 
[DBG]    Local path (in submap): 296 297 
[DBG]    Suffix (out of submap): 298 266 234 235 203 204 205 173 141 109 110 111 112 113 81 82 83 115 116 117 118 119 120 121 122 123 124 156 157 
[DBG]  Original agent path length 15 je: 42
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 0: 288, 289, 257, 257, 258, 259, 260, 261, 293, 294, 295, 296, 297, 298, 266, 234, 235, 203, 204, 205, 173, 141, 109, 110, 111, 112, 113, 81, 82, 83, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 156, 157, 
[DBG]  Path for agent 15 updated, resulting length: 42
[DBG]  Update the agent path 21 | Original local length: 4 | New local length: 2
[DBG]  agent 21 t=0 => decoded (sx,sy)=(3,1) => global_id=326
[DBG]  agent 21 t=1 => decoded (sx,sy)=(3,2) => global_id=327
[DBG]  Complete path of agent 21:
[DBG]    Original: 484 516 517 485 486 454 422 390 389 357 358 326 294 295 327 
[DBG]    New:     484 516 517 485 486 454 422 390 389 357 358 326 327 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 484 516 517 485 486 454 422 390 389 357 358 
[DBG]    Local path (in submap): 326 327 
[DBG]    Suffix (out of submap): 
[DBG]  Original agent path length 21 je: 15
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 1: 484, 516, 517, 485, 486, 454, 422, 390, 389, 357, 358, 326, 327, 
[DBG]  Path for agent 21 updated, resulting length: 13
[DBG]  Update the agent path 59 | Original local length: 2 | New local length: 2
[DBG]  agent 59 t=0 => decoded (sx,sy)=(4,3) => global_id=360
[DBG]  agent 59 t=1 => decoded (sx,sy)=(4,4) => global_id=361
[DBG]  Complete path of agent 59:
[DBG]    Original: 256 288 289 321 353 354 355 356 357 358 359 360 361 362 363 395 427 428 429 430 462 494 526 558 590 591 623 655 687 719 719 751 783 815 847 879 880 881 882 883 884 916 917 
[DBG]    New:     256 288 289 321 353 354 355 356 357 358 359 360 361 362 363 395 427 428 429 430 462 494 526 558 590 591 623 655 687 719 719 751 783 815 847 879 880 881 882 883 884 916 917 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 256 288 289 321 353 354 355 356 357 358 359 
[DBG]    Local path (in submap): 360 361 
[DBG]    Suffix (out of submap): 362 363 395 427 428 429 430 462 494 526 558 590 591 623 655 687 719 719 751 783 815 847 879 880 881 882 883 884 916 917 
[DBG]  Original agent path length 59 je: 43
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 2: 256, 288, 289, 321, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 395, 427, 428, 429, 430, 462, 494, 526, 558, 590, 591, 623, 655, 687, 719, 719, 751, 783, 815, 847, 879, 880, 881, 882, 883, 884, 916, 917, 
[DBG]  Path for agent 59 updated, resulting length: 43
[DBG]  Update the agent path 65 | Original local length: 3 | New local length: 3
[DBG]  agent 65 t=0 => decoded (sx,sy)=(3,0) => global_id=325
[DBG]  agent 65 t=1 => decoded (sx,sy)=(4,0) => global_id=357
[DBG]  agent 65 t=2 => decoded (sx,sy)=(4,1) => global_id=358
[DBG]  Complete path of agent 65:
[DBG]    Original: 66 67 99 100 132 164 196 228 260 261 293 325 326 358 390 422 454 486 485 517 549 581 582 583 584 616 648 680 712 713 714 715 747 779 811 843 
[DBG]    New:     66 67 99 100 132 164 196 228 260 261 293 325 357 358 390 422 454 486 485 517 549 581 582 583 584 616 648 680 712 713 714 715 747 779 811 843 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 66 67 99 100 132 164 196 228 260 261 293 
[DBG]    Local path (in submap): 325 357 358 
[DBG]    Suffix (out of submap): 390 422 454 486 485 517 549 581 582 583 584 616 648 680 712 713 714 715 747 779 811 843 
[DBG]  Original agent path length 65 je: 36
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 3: 66, 67, 99, 100, 132, 164, 196, 228, 260, 261, 293, 325, 357, 358, 390, 422, 454, 486, 485, 517, 549, 581, 582, 583, 584, 616, 648, 680, 712, 713, 714, 715, 747, 779, 811, 843, 
[DBG]  Path for agent 65 updated, resulting length: 36
[DBG]  Update the agent path 80 | Original local length: 8 | New local length: 8
[DBG]  agent 80 t=0 => decoded (sx,sy)=(1,4) => global_id=265
[DBG]  agent 80 t=1 => decoded (sx,sy)=(1,3) => global_id=264
[DBG]  agent 80 t=2 => decoded (sx,sy)=(2,3) => global_id=296
[DBG]  agent 80 t=3 => decoded (sx,sy)=(3,3) => global_id=328
[DBG]  agent 80 t=4 => decoded (sx,sy)=(4,3) => global_id=360
[DBG]  agent 80 t=5 => decoded (sx,sy)=(4,2) => global_id=359
[DBG]  agent 80 t=6 => decoded (sx,sy)=(4,1) => global_id=358
[DBG]  agent 80 t=7 => decoded (sx,sy)=(4,0) => global_id=357
[DBG]  Complete path of agent 80:
[DBG]    Original: 111 110 109 141 173 172 204 236 235 234 266 265 264 296 295 294 293 325 357 389 421 420 419 418 
[DBG]    New:     111 110 109 141 173 172 204 236 235 234 266 265 264 296 328 360 359 358 357 389 421 420 419 418 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 111 110 109 141 173 172 204 236 235 234 266 
[DBG]    Local path (in submap): 265 264 296 328 360 359 358 357 
[DBG]    Suffix (out of submap): 389 421 420 419 418 
[DBG]  Original agent path length 80 je: 24
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 4: 111, 110, 109, 141, 173, 172, 204, 236, 235, 234, 266, 265, 264, 296, 328, 360, 359, 358, 357, 389, 421, 420, 419, 418, 
[DBG]  Path for agent 80 updated, resulting length: 24
[DBG]  Update the agent path 87 | Original local length: 2 | New local length: 2
[DBG]  agent 87 t=0 => decoded (sx,sy)=(4,2) => global_id=359
[DBG]  agent 87 t=1 => decoded (sx,sy)=(4,1) => global_id=358
[DBG]  Complete path of agent 87:
[DBG]    Original: 231 263 264 264 263 295 327 327 327 327 327 359 358 390 422 454 486 485 517 516 548 580 581 582 583 584 616 648 680 712 713 714 
[DBG]    New:     231 263 264 264 263 295 327 327 327 327 327 359 358 390 422 454 486 485 517 516 548 580 581 582 583 584 616 648 680 712 713 714 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 231 263 264 264 263 295 327 327 327 327 327 
[DBG]    Local path (in submap): 359 358 
[DBG]    Suffix (out of submap): 390 422 454 486 485 517 516 548 580 581 582 583 584 616 648 680 712 713 714 
[DBG]  Original agent path length 87 je: 32
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 5: 231, 263, 264, 264, 263, 295, 327, 327, 327, 327, 327, 359, 358, 390, 422, 454, 486, 485, 517, 516, 548, 580, 581, 582, 583, 584, 616, 648, 680, 712, 713, 714, 
[DBG]  Path for agent 87 updated, resulting length: 32
[DBG]  Update the agent path 103 | Original local length: 1 | New local length: 1
[DBG]  agent 103 t=0 => decoded (sx,sy)=(4,4) => global_id=361
[DBG]  Complete path of agent 103:
[DBG]    Original: 40 72 104 136 168 200 232 264 296 328 360 361 393 393 425 457 489 521 520 520 519 551 583 584 616 648 680 712 713 745 777 809 841 873 905 
[DBG]    New:     40 72 104 136 168 200 232 264 296 328 360 361 393 393 425 457 489 521 520 520 519 551 583 584 616 648 680 712 713 745 777 809 841 873 905 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 40 72 104 136 168 200 232 264 296 328 360 
[DBG]    Local path (in submap): 361 
[DBG]    Suffix (out of submap): 393 393 425 457 489 521 520 520 519 551 583 584 616 648 680 712 713 745 777 809 841 873 905 
[DBG]  Original agent path length 103 je: 35
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 6: 40, 72, 104, 136, 168, 200, 232, 264, 296, 328, 360, 361, 393, 393, 425, 457, 489, 521, 520, 520, 519, 551, 583, 584, 616, 648, 680, 712, 713, 745, 777, 809, 841, 873, 905, 
[DBG]  Path for agent 103 updated, resulting length: 35
[DBG]  Update the agent path 112 | Original local length: 4 | New local length: 4
[DBG]  agent 112 t=0 => decoded (sx,sy)=(3,3) => global_id=328
[DBG]  agent 112 t=1 => decoded (sx,sy)=(4,3) => global_id=360
[DBG]  agent 112 t=2 => decoded (sx,sy)=(4,2) => global_id=359
[DBG]  agent 112 t=3 => decoded (sx,sy)=(4,1) => global_id=358
[DBG]  Complete path of agent 112:
[DBG]    Original: 337 336 335 303 302 301 300 299 298 330 329 328 327 326 358 390 422 454 486 485 517 549 548 580 612 644 676 675 
[DBG]    New:     337 336 335 303 302 301 300 299 298 330 329 328 360 359 358 390 422 454 486 485 517 549 548 580 612 644 676 675 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 337 336 335 303 302 301 300 299 298 330 329 
[DBG]    Local path (in submap): 328 360 359 358 
[DBG]    Suffix (out of submap): 390 422 454 486 485 517 549 548 580 612 644 676 675 
[DBG]  Original agent path length 112 je: 28
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 7: 337, 336, 335, 303, 302, 301, 300, 299, 298, 330, 329, 328, 360, 359, 358, 390, 422, 454, 486, 485, 517, 549, 548, 580, 612, 644, 676, 675, 
[DBG]  Path for agent 112 updated, resulting length: 28
[DBG]  Update the agent path 115 | Original local length: 3 | New local length: 3
[DBG]  agent 115 t=0 => decoded (sx,sy)=(2,2) => global_id=295
[DBG]  agent 115 t=1 => decoded (sx,sy)=(2,3) => global_id=296
[DBG]  agent 115 t=2 => decoded (sx,sy)=(2,4) => global_id=297
[DBG]  Complete path of agent 115:
[DBG]    Original: 99 131 163 164 196 228 228 260 261 293 294 295 296 297 298 299 300 301 302 303 335 367 368 400 401 402 
[DBG]    New:     99 131 163 164 196 228 228 260 261 293 294 295 296 297 298 299 300 301 302 303 335 367 368 400 401 402 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 99 131 163 164 196 228 228 260 261 293 294 
[DBG]    Local path (in submap): 295 296 297 
[DBG]    Suffix (out of submap): 298 299 300 301 302 303 335 367 368 400 401 402 
[DBG]  Original agent path length 115 je: 26
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 8: 99, 131, 163, 164, 196, 228, 228, 260, 261, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 335, 367, 368, 400, 401, 402, 
[DBG]  Path for agent 115 updated, resulting length: 26
[DBG]  Update the agent path 116 | Original local length: 1 | New local length: 1
[DBG]  agent 116 t=0 => decoded (sx,sy)=(3,4) => global_id=329
[DBG]  Complete path of agent 116:
[DBG]    Original: 549 550 551 519 487 455 423 424 425 393 361 329 330 331 299 300 268 236 236 204 172 140 139 138 137 
[DBG]    New:     549 550 551 519 487 455 423 424 425 393 361 329 330 331 299 300 268 236 236 204 172 140 139 138 137 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 549 550 551 519 487 455 423 424 425 393 361 
[DBG]    Local path (in submap): 329 
[DBG]    Suffix (out of submap): 330 331 299 300 268 236 236 204 172 140 139 138 137 
[DBG]  Original agent path length 116 je: 25
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 9: 549, 550, 551, 519, 487, 455, 423, 424, 425, 393, 361, 329, 330, 331, 299, 300, 268, 236, 236, 204, 172, 140, 139, 138, 137, 
[DBG]  Path for agent 116 updated, resulting length: 25
[DBG]  Update the agent path 120 | Original local length: 2 | New local length: 2
[DBG]  agent 120 t=0 => decoded (sx,sy)=(0,4) => global_id=233
[DBG]  agent 120 t=1 => decoded (sx,sy)=(0,3) => global_id=232
[DBG]  Complete path of agent 120:
[DBG]    Original: 203 203 203 203 203 203 203 203 203 235 234 233 232 200 
[DBG]    New:     203 203 203 203 203 203 203 203 203 235 234 233 232 200 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 203 203 203 203 203 203 203 203 203 235 234 
[DBG]    Local path (in submap): 233 232 
[DBG]    Suffix (out of submap): 200 
[DBG]  Original agent path length 120 je: 14
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 10: 203, 203, 203, 203, 203, 203, 203, 203, 203, 235, 234, 233, 232, 200, 
[DBG]  Path for agent 120 updated, resulting length: 14
[DBG]  Update the agent path 127 | Original local length: 1 | New local length: 1
[DBG]  agent 127 t=0 => decoded (sx,sy)=(0,3) => global_id=232
[DBG]  Complete path of agent 127:
[DBG]    Original: 428 427 426 425 393 361 329 297 297 296 264 232 200 168 136 104 105 73 
[DBG]    New:     428 427 426 425 393 361 329 297 297 296 264 232 200 168 136 104 105 73 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 428 427 426 425 393 361 329 297 297 296 264 
[DBG]    Local path (in submap): 232 
[DBG]    Suffix (out of submap): 200 168 136 104 105 73 
[DBG]  Original agent path length 127 je: 18
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 11: 428, 427, 426, 425, 393, 361, 329, 297, 297, 296, 264, 232, 200, 168, 136, 104, 105, 73, 
[DBG]  Path for agent 127 updated, resulting length: 18
[DBG]  Paths successfully updated.
[DBG]  (LNS.cpp) New path for agent 15: 
[DBG]  288, 289, 257, 257, 258, 259, 260, 261, 293, 294, 295, 296, 297, 298, 266, 234, 235, 203, 204, 205, 173, 141, 109, 110, 111, 112, 113, 81, 82, 83, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 156, 157, 
[DBG]  (LNS.cpp) New path for agent 21: 
[DBG]  484, 516, 517, 485, 486, 454, 422, 390, 389, 357, 358, 326, 327, 
[DBG]  (LNS.cpp) New path for agent 59: 
[DBG]  256, 288, 289, 321, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 395, 427, 428, 429, 430, 462, 494, 526, 558, 590, 591, 623, 655, 687, 719, 719, 751, 783, 815, 847, 879, 880, 881, 882, 883, 884, 916, 917, 
[DBG]  (LNS.cpp) New path for agent 65: 
[DBG]  66, 67, 99, 100, 132, 164, 196, 228, 260, 261, 293, 325, 357, 358, 390, 422, 454, 486, 485, 517, 549, 581, 582, 583, 584, 616, 648, 680, 712, 713, 714, 715, 747, 779, 811, 843, 
[DBG]  (LNS.cpp) New path for agent 80: 
[DBG]  111, 110, 109, 141, 173, 172, 204, 236, 235, 234, 266, 265, 264, 296, 328, 360, 359, 358, 357, 389, 421, 420, 419, 418, 
[DBG]  (LNS.cpp) New path for agent 87: 
[DBG]  231, 263, 264, 264, 263, 295, 327, 327, 327, 327, 327, 359, 358, 390, 422, 454, 486, 485, 517, 516, 548, 580, 581, 582, 583, 584, 616, 648, 680, 712, 713, 714, 
[DBG]  (LNS.cpp) New path for agent 103: 
[DBG]  40, 72, 104, 136, 168, 200, 232, 264, 296, 328, 360, 361, 393, 393, 425, 457, 489, 521, 520, 520, 519, 551, 583, 584, 616, 648, 680, 712, 713, 745, 777, 809, 841, 873, 905, 
[DBG]  (LNS.cpp) New path for agent 112: 
[DBG]  337, 336, 335, 303, 302, 301, 300, 299, 298, 330, 329, 328, 360, 359, 358, 390, 422, 454, 486, 485, 517, 549, 548, 580, 612, 644, 676, 675, 
[DBG]  (LNS.cpp) New path for agent 115: 
[DBG]  99, 131, 163, 164, 196, 228, 228, 260, 261, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 335, 367, 368, 400, 401, 402, 
[DBG]  (LNS.cpp) New path for agent 116: 
[DBG]  549, 550, 551, 519, 487, 455, 423, 424, 425, 393, 361, 329, 330, 331, 299, 300, 268, 236, 236, 204, 172, 140, 139, 138, 137, 
[DBG]  (LNS.cpp) New path for agent 120: 
[DBG]  203, 203, 203, 203, 203, 203, 203, 203, 203, 235, 234, 233, 232, 200, 
[DBG]  (LNS.cpp) New path for agent 127: 
[DBG]  428, 427, 426, 425, 393, 361, 329, 297, 297, 296, 264, 232, 200, 168, 136, 104, 105, 73, 
[DBG]  component_weights = {0.404907, 0.0684305, 0.0715612, 0.455101}
[DBG]  opSuccess value: 1
[STAT] neighbor.sum_of_costs before recomputation: 324
[STAT] neighbor.old_sum_of_costs before recomputation: 326
[STAT] sum_of_costs before recomputation: 4177
[DBG]  Validate solution immediately after SAT success.
[WARNING] Problem after SAT: Vertex conflict between agents 80 and 146 at location 328 at timestep 14
[DBG]  Attempting immediate repair via init_lns because problem occurred after SAT (should be applied only for conflicts...).
[DBG]  Passing 150 agents to init_lns (skip=true).
[DBG]  path_table contents for selected agents (neighbor.agents):
[DBG]    Agent 15 => controlling path length=42
[DBG]    Agent 21 => controlling path length=13
[DBG]    Agent 59 => controlling path length=43
[DBG]    Agent 65 => controlling path length=36
[DBG]    Agent 80 => controlling path length=24
[DBG]    Agent 87 => controlling path length=32
[DBG]    Agent 103 => controlling path length=35
[DBG]    Agent 112 => controlling path length=28
[DBG]    Agent 115 => controlling path length=26
[DBG]    Agent 116 => controlling path length=25
[DBG]    Agent 120 => controlling path length=14
[DBG]    Agent 127 => controlling path length=18
[DBG]  hodnota skip_initial_solution=1
[DBG]  We skip initialSolution => call buildCollisionData()
[DBG]  buildCollisionData() called â€“ skip_initial_solution case.
[DBG]  Agents.size()=150, collision_graph.size()=150
[DBG]  agent 80 => updateCollidingPairs => foundCollision
[DBG]  agent 112 => updateCollidingPairs => foundCollision
[DBG]  agent 146 => updateCollidingPairs => foundCollision
[DBG]  Conflicting agent pairs:
[DBG]  agent 80 is in conflict with agent 146
[DBG]  agent 112 is in conflict with agent 146
[DBG]  buildCollisionData() => sum_of_costs=4175, num_of_colliding_pairs=2
[DBG]  buildCollisionData done => sum_of_costs=4175, num_of_colliding_pairs=2
[DBG]  sum_of_cost hodnota: 4175
[DBG]  After skip/init build => iteration_stats.back(): sum_of_costs=4175, collisions=2
[DEBUG] Using default neighbor generation strategy for conflicts: 1
	InitLNS(PP): runtime = 0.00297825, iterations = 2, colliding pairs = 0, initial colliding pairs = 2, solution cost = 4175, initial solution cost = 4175, failed iterations = 0
[DBG]  init_lns->sum_of_costs after init_lns->run: 4175
[DBG]  sum_of_costs after assignment from init_lns->run: 4175
[DBG]  Recomputing sum_of_cost by dividing neighbor.sum_of_costs and neighbor.old_sum_of_costs
[STAT] sum_of_costs after recomputation: 4175
[STAT] Iteration 182
[DBG]  Using SAT operator (destroy+repair SAT).
[DBG]  ====================
[DBG]  SAT destroy operator called.
[DBG]  SAT heuristic: 2
[DBG]  key_agent_id: 52
[DBG]  key_agent_id global path length: 33
[DBG]  Submap content (global positions):
[DBG]  -1 -1 -1 -1 -1 
[DBG]  -1 -1 -1 -1 -1 
[DBG]  26 27 28 29 30 
[DBG]  58 59 60 61 62 
[DBG]  90 91 92 93 94 
[DBG]  Map content with agents and obstacles:
[DBG]  X X X X X 
[DBG]  X X X X X 
[DBG]  . . A . . 
[DBG]  . . . A . 
[DBG]  A . X . . 
[DBG]  content of the map structure that we pass to the SAT solver:
[DBG]  1  1  1  1  1  
[DBG]  1  1  1  1  1  
[DBG]  1  1  1  1  1  
[DBG]  1  1  1  1  1  
[DBG]  1  1  -1  1  1  
[DBG]  Identifying agents in a submap for rescheduling (when key_agent is there at the time 2):
[DBG]  Agent 2 found intervals in the sub-map:
[DBG]   [0..2]
[DBG]  Agent 2 (interval in submap: [0..2]) contains time 2, added to replan.
[DBG]  Agent 34 found intervals in the sub-map:
[DBG]   [1..6]
[DBG]  Agent 34 (interval in submap: [1..6]) contains time 2, added to replan.
[DBG]  Agent 52 found intervals in the sub-map:
[DBG]   [0..9]
[DBG]  Agent 52 (interval in submap: [0..9]) contains time 2, added to replan.
[DBG]  Agent 2 | Start (global): 90 -> (local): (4, 0) at time 2 | Goal (global): 90 -> (local): (4, 0) at time 2
[DBG]  Agent 34 | Start (global): 61 -> (local): (3, 3) at time 2 | Goal (global): 90 -> (local): (4, 0) at time 6
[DBG]  Agent 52 | Start (global): 28 -> (local): (2, 2) at time 2 | Goal (global): 90 -> (local): (4, 0) at time 9
[DBG]  [REPAIR] SAT destroy operator called.
[DBG]  [REPAIR] SAT operator â€“ launching subproblem FOR OPTIMIZATION.
[DBG]  Creating local paths (sx, sy) in the submap for T_sync = 2
[DBG]    Agent 2 (global paths from T=2 to 2) has local path: (4,0) 
[DBG]    Agent 34 (global paths from T=2 to 6) has local path: (3,3) (3,2) (3,1) (3,0) (4,0) 
[DBG]    Agent 52 (global paths from T=2 to 9) has local path: (2,2) (2,2) (3,2) (3,1) (4,1) (4,1) (4,1) (4,0) 
[DBG]  Checking input data for SAT solver:
[DBG]    - Number of agents to replan: 3
[DBG]  Agent 2 has the original local path length: 1 => Start (4,0), Goal (4,0)
[DBG]  Agent 34 has the original local path length: 5 => Start (3,3), Goal (4,0)
[DBG]  Agent 52 has the original local path length: 8 => Start (2,2), Goal (4,0)
[DBG]  Start position: (4, 0), (3, 3), (2, 2), 
[DBG]  Goal position: (4, 0), (4, 0), (4, 0), 
[DBG]  SAT instance and solver created.
Currently solving
Instance name: scen
Map name: map
Encoding used: disappear_at_goal
SAT solver used: Kissat
Optimizing function: sum of costs
Number of agents: 3
Mks LB: 5
SoC LB: 11
Delta: 0
Remaining time: 300000 [ms]

[STAT] Solver returned: -1
[DBG]  SAT solver failed.
[STAT] SAT solver failed to find a valid solution.
[DBG]  ====================
[DBG]  SAT destroy operator called.
[DBG]  SAT heuristic: 2
[DBG]  key_agent_id: 52
[DBG]  key_agent_id global path length: 33
[DBG]  Submap content (global positions):
[DBG]  88 89 90 91 92 
[DBG]  120 121 122 123 124 
[DBG]  152 153 154 155 156 
[DBG]  184 185 186 187 188 
[DBG]  216 217 218 219 220 
[DBG]  Map content with agents and obstacles:
[DBG]  X . . . X 
[DBG]  . . . . . 
[DBG]  X . A X . 
[DBG]  . A . X . 
[DBG]  . . . X . 
[DBG]  content of the map structure that we pass to the SAT solver:
[DBG]  -1  1  1  1  -1  
[DBG]  1  1  1  1  1  
[DBG]  -1  1  1  -1  1  
[DBG]  1  1  1  -1  1  
[DBG]  1  1  1  -1  1  
[DBG]  Identifying agents in a submap for rescheduling (when key_agent is there at the time 17):
[DBG]  Agent 31 found intervals in the sub-map:
[DBG]   [16..20]
[DBG]  Agent 31 (interval in submap: [16..20]) contains time 17, added to replan.
[DBG]  Agent 52 found intervals in the sub-map:
[DBG]   [6..21]
[DBG]  Agent 52 (interval in submap: [6..21]) contains time 17, added to replan.
[DBG]  Agent 136 found intervals in the sub-map:
[DBG]   [10..11]
[DBG]  Agent 136 is not in sub-map at time 17 (intervals: 
[DBG]  [10..11] )
[DBG]  Agent 31 | Start (global): 185 -> (local): (3, 1) at time 17 | Goal (global): 89 -> (local): (0, 1) at time 20
[DBG]  Agent 52 | Start (global): 154 -> (local): (2, 2) at time 17 | Goal (global): 217 -> (local): (4, 1) at time 21
[DBG]  [REPAIR] SAT destroy operator called.
[DBG]  [REPAIR] SAT operator â€“ launching subproblem FOR OPTIMIZATION.
[DBG]  Creating local paths (sx, sy) in the submap for T_sync = 17
[DBG]    Agent 31 (global paths from T=17 to 20) has local path: (3,1) (2,1) (1,1) (0,1) 
[DBG]    Agent 52 (global paths from T=17 to 21) has local path: (2,2) (2,2) (2,1) (3,1) (4,1) 
[DBG]  Checking input data for SAT solver:
[DBG]    - Number of agents to replan: 2
[DBG]  Agent 31 has the original local path length: 4 => Start (3,1), Goal (0,1)
[DBG]  Agent 52 has the original local path length: 5 => Start (2,2), Goal (4,1)
[DBG]  Start position: (3, 1), (2, 2), 
[DBG]  Goal position: (0, 1), (4, 1), 
[DBG]  SAT instance and solver created.
Currently solving
Instance name: scen
Map name: map
Encoding used: disappear_at_goal
SAT solver used: Kissat
Optimizing function: sum of costs
Number of agents: 2
Mks LB: 4
SoC LB: 8
Delta: 0
Remaining time: 300000 [ms]

Found plan [agents = 2] [timesteps = 4]
Agent #0 : 12 8 4 0 
Agent #1 : 9 13 17 16 

[STAT] Solver returned: 0
[DBG]  Agent (index) 31 | New local path (submap idx):
[DBG]  12 8 4 0 
[DBG]  Agent (index) 52 | New local path (submap idx):
[DBG]  9 13 17 16 
[DBG]  Update the agent path 31 | Original local length: 4 | New local length: 4
[DBG]  agent 31 t=0 => decoded (sx,sy)=(3,1) => global_id=185
[DBG]  agent 31 t=1 => decoded (sx,sy)=(2,1) => global_id=153
[DBG]  agent 31 t=2 => decoded (sx,sy)=(1,1) => global_id=121
[DBG]  agent 31 t=3 => decoded (sx,sy)=(0,1) => global_id=89
[DBG]  Complete path of agent 31:
[DBG]    Original: 432 400 401 402 403 404 405 406 407 375 343 344 312 313 281 249 217 185 153 121 89 
[DBG]    New:     432 400 401 402 403 404 405 406 407 375 343 344 312 313 281 249 217 185 153 121 89 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 432 400 401 402 403 404 405 406 407 375 343 344 312 313 281 249 217 
[DBG]    Local path (in submap): 185 153 121 89 
[DBG]    Suffix (out of submap): 
[DBG]  Original agent path length 31 je: 21
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 0: 432, 400, 401, 402, 403, 404, 405, 406, 407, 375, 343, 344, 312, 313, 281, 249, 217, 185, 153, 121, 89, 
[DBG]  Path for agent 31 updated, resulting length: 21
[DBG]  Update the agent path 52 | Original local length: 5 | New local length: 4
[DBG]  agent 52 t=0 => decoded (sx,sy)=(2,2) => global_id=154
[DBG]  agent 52 t=1 => decoded (sx,sy)=(3,2) => global_id=186
[DBG]  agent 52 t=2 => decoded (sx,sy)=(4,2) => global_id=218
[DBG]  agent 52 t=3 => decoded (sx,sy)=(4,1) => global_id=217
[DBG]  Complete path of agent 52:
[DBG]    Original: 28 28 28 28 60 59 91 91 91 90 122 154 154 154 154 154 154 154 154 153 185 217 249 248 247 279 311 343 375 407 408 440 441 
[DBG]    New:     28 28 28 28 60 59 91 91 91 90 122 154 154 154 154 154 154 154 186 218 217 249 248 247 279 311 343 375 407 408 440 441 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 28 28 28 28 60 59 91 91 91 90 122 154 154 154 154 154 154 
[DBG]    Local path (in submap): 154 186 218 217 249 
[DBG]    Suffix (out of submap): 248 247 279 311 343 375 407 408 440 441 
[DBG]  Original agent path length 52 je: 33
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 1: 28, 28, 28, 28, 60, 59, 91, 91, 91, 90, 122, 154, 154, 154, 154, 154, 154, 154, 186, 218, 217, 249, 248, 247, 279, 311, 343, 375, 407, 408, 440, 441, 
[DBG]  Path for agent 52 updated, resulting length: 32
[DBG]  Paths successfully updated.
[DBG]  (LNS.cpp) New path for agent 31: 
[DBG]  432, 400, 401, 402, 403, 404, 405, 406, 407, 375, 343, 344, 312, 313, 281, 249, 217, 185, 153, 121, 89, 
[DBG]  (LNS.cpp) New path for agent 52: 
[DBG]  28, 28, 28, 28, 60, 59, 91, 91, 91, 90, 122, 154, 154, 154, 154, 154, 154, 154, 186, 218, 217, 249, 248, 247, 279, 311, 343, 375, 407, 408, 440, 441, 
[DBG]  component_weights = {0.401145, 0.0677948, 0.0708964, 0.460163}
[DBG]  opSuccess value: 1
[STAT] neighbor.sum_of_costs before recomputation: 51
[STAT] neighbor.old_sum_of_costs before recomputation: 52
[STAT] sum_of_costs before recomputation: 4175
[DBG]  Validate solution immediately after SAT success.
[WARNING] Problem after SAT: Vertex conflict between agents 52 and 79 at location 441 at timestep 31
[DBG]  Attempting immediate repair via init_lns because problem occurred after SAT (should be applied only for conflicts...).
[DBG]  Passing 150 agents to init_lns (skip=true).
[DBG]  path_table contents for selected agents (neighbor.agents):
[DBG]    Agent 31 => controlling path length=21
[DBG]    Agent 52 => controlling path length=32
[DBG]  hodnota skip_initial_solution=1
[DBG]  We skip initialSolution => call buildCollisionData()
[DBG]  buildCollisionData() called â€“ skip_initial_solution case.
[DBG]  Agents.size()=150, collision_graph.size()=150
[DBG]  agent 52 => updateCollidingPairs => foundCollision
[DBG]  agent 79 => updateCollidingPairs => foundCollision
[DBG]  agent 133 => updateCollidingPairs => foundCollision
[DBG]  Conflicting agent pairs:
[DBG]  agent 52 is in conflict with agent 79
[DBG]  agent 52 is in conflict with agent 133
[DBG]  buildCollisionData() => sum_of_costs=4174, num_of_colliding_pairs=2
[DBG]  buildCollisionData done => sum_of_costs=4174, num_of_colliding_pairs=2
[DBG]  sum_of_cost hodnota: 4174
[DBG]  After skip/init build => iteration_stats.back(): sum_of_costs=4174, collisions=2
[DEBUG] Using default neighbor generation strategy for conflicts: 1
	InitLNS(PP): runtime = 0.0030455, iterations = 2, colliding pairs = 0, initial colliding pairs = 2, solution cost = 4161, initial solution cost = 4174, failed iterations = 0
[DBG]  init_lns->sum_of_costs after init_lns->run: 4161
[DBG]  sum_of_costs after assignment from init_lns->run: 4161
[DBG]  Recomputing sum_of_cost by dividing neighbor.sum_of_costs and neighbor.old_sum_of_costs
[STAT] sum_of_costs after recomputation: 4161
[STAT] Iteration 183
[DBG]  Using SAT operator (destroy+repair SAT).
[DBG]  ====================
[DBG]  SAT destroy operator called.
[DBG]  SAT heuristic: 2
[DBG]  key_agent_id: 144
[DBG]  key_agent_id global path length: 36
[DBG]  Submap content (global positions):
[DBG]  537 538 539 540 541 
[DBG]  569 570 571 572 573 
[DBG]  601 602 603 604 605 
[DBG]  633 634 635 636 637 
[DBG]  665 666 667 668 669 
[DBG]  Map content with agents and obstacles:
[DBG]  X . . . . 
[DBG]  . . . . X 
[DBG]  . . A . X 
[DBG]  . X . . . 
[DBG]  X . . . X 
[DBG]  content of the map structure that we pass to the SAT solver:
[DBG]  -1  1  1  1  1  
[DBG]  1  1  1  1  -1  
[DBG]  1  1  1  1  -1  
[DBG]  1  -1  1  1  1  
[DBG]  -1  1  1  1  -1  
[DBG]  Identifying agents in a submap for rescheduling (when key_agent is there at the time 30):
[DBG]  Agent 2 found intervals in the sub-map:
[DBG]   [20..27]
[DBG]  Agent 2 is not in sub-map at time 30 (intervals: 
[DBG]  [20..27] )
[DBG]  Agent 24 found intervals in the sub-map:
[DBG]   [16..16]
[DBG]  Agent 24 is not in sub-map at time 30 (intervals: 
[DBG]  [16..16] )
[DBG]  Agent 33 found intervals in the sub-map:
[DBG]  
[DBG]  Agent 33 is not in sub-map at time 30 (intervals: 
[DBG]  )
[DBG]  Agent 49 found intervals in the sub-map:
[DBG]  
[DBG]  Agent 49 is not in sub-map at time 30 (intervals: 
[DBG]  )
[DBG]  Agent 54 found intervals in the sub-map:
[DBG]   [24..26]
[DBG]  Agent 54 is not in sub-map at time 30 (intervals: 
[DBG]  [24..26] )
[DBG]  Agent 58 found intervals in the sub-map:
[DBG]   [22..27]
[DBG]  Agent 58 is not in sub-map at time 30 (intervals: 
[DBG]  [22..27] )
[DBG]  Agent 86 found intervals in the sub-map:
[DBG]   [23..26]
[DBG]  Agent 86 is not in sub-map at time 30 (intervals: 
[DBG]  [23..26] )
[DBG]  Agent 142 found intervals in the sub-map:
[DBG]   [20..26]
[DBG]  Agent 142 is not in sub-map at time 30 (intervals: 
[DBG]  [20..26] )
[DBG]  Agent 144 found intervals in the sub-map:
[DBG]   [19..32]
[DBG]  Agent 144 (interval in submap: [19..32]) contains time 30, added to replan.
[DBG]  Agent 144 | Start (global): 603 -> (local): (2, 2) at time 30 | Goal (global): 601 -> (local): (2, 0) at time 32
[DBG]  [REPAIR] SAT destroy operator called.
[DBG]  [REPAIR] SAT operator â€“ launching subproblem FOR OPTIMIZATION.
[DBG]  Creating local paths (sx, sy) in the submap for T_sync = 30
[DBG]    Agent 144 (global paths from T=30 to 32) has local path: (2,2) (2,1) (2,0) 
[DBG]  Checking input data for SAT solver:
[DBG]    - Number of agents to replan: 1
[DBG]  Agent 144 has the original local path length: 3 => Start (2,2), Goal (2,0)
[DBG]  Start position: (2, 2), 
[DBG]  Goal position: (2, 0), 
[DBG]  SAT instance and solver created.
Currently solving
Instance name: scen
Map name: map
Encoding used: disappear_at_goal
SAT solver used: Kissat
Optimizing function: sum of costs
Number of agents: 1
Mks LB: 3
SoC LB: 3
Delta: 0
Remaining time: 300000 [ms]

Found plan [agents = 1] [timesteps = 3]
Agent #0 : 10 9 8 

[STAT] Solver returned: 0
[DBG]  Agent (index) 144 | New local path (submap idx):
[DBG]  10 9 8 
[DBG]  Update the agent path 144 | Original local length: 3 | New local length: 3
[DBG]  agent 144 t=0 => decoded (sx,sy)=(2,2) => global_id=603
[DBG]  agent 144 t=1 => decoded (sx,sy)=(2,1) => global_id=602
[DBG]  agent 144 t=2 => decoded (sx,sy)=(2,0) => global_id=601
[DBG]  Complete path of agent 144:
[DBG]    Original: 121 153 185 217 249 281 281 313 313 313 345 377 409 441 473 474 475 475 507 539 538 570 602 601 602 603 603 603 603 603 603 602 601 600 599 631 
[DBG]    New:     121 153 185 217 249 281 281 313 313 313 345 377 409 441 473 474 475 475 507 539 538 570 602 601 602 603 603 603 603 603 603 602 601 600 599 631 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 121 153 185 217 249 281 281 313 313 313 345 377 409 441 473 474 475 475 507 539 538 570 602 601 602 603 603 603 603 603 
[DBG]    Local path (in submap): 603 602 601 
[DBG]    Suffix (out of submap): 600 599 631 
[DBG]  Original agent path length 144 je: 36
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 0: 121, 153, 185, 217, 249, 281, 281, 313, 313, 313, 345, 377, 409, 441, 473, 474, 475, 475, 507, 539, 538, 570, 602, 601, 602, 603, 603, 603, 603, 603, 603, 602, 601, 600, 599, 631, 
[DBG]  Path for agent 144 updated, resulting length: 36
[DBG]  Paths successfully updated.
[DBG]  (LNS.cpp) New path for agent 144: 
[DBG]  121, 153, 185, 217, 249, 281, 281, 313, 313, 313, 345, 377, 409, 441, 473, 474, 475, 475, 507, 539, 538, 570, 602, 601, 602, 603, 603, 603, 603, 603, 603, 602, 601, 600, 599, 631, 
[DBG]  component_weights = {0.406008, 0.0672443, 0.0703207, 0.456427}
[DBG]  opSuccess value: 1
[STAT] neighbor.sum_of_costs before recomputation: 35
[STAT] neighbor.old_sum_of_costs before recomputation: 35
[STAT] sum_of_costs before recomputation: 4161
[DBG]  Validate solution immediately after SAT success.
[DBG]  No problems after SAT replan.
[DBG]  Recomputing sum_of_cost by dividing neighbor.sum_of_costs and neighbor.old_sum_of_costs
[STAT] sum_of_costs after recomputation: 4161
[STAT] Iteration 184
[DBG]  Using SAT operator (destroy+repair SAT).
[DBG]  ====================
[DBG]  SAT destroy operator called.
[DBG]  SAT heuristic: 2
[DBG]  key_agent_id: 75
[DBG]  key_agent_id global path length: 19
[DBG]  Submap content (global positions):
[DBG]  313 314 315 316 317 
[DBG]  345 346 347 348 349 
[DBG]  377 378 379 380 381 
[DBG]  409 410 411 412 413 
[DBG]  441 442 443 444 445 
[DBG]  Map content with agents and obstacles:
[DBG]  . . X X . 
[DBG]  A X . . A 
[DBG]  A . A . . 
[DBG]  A X . . . 
[DBG]  A X A . . 
[DBG]  content of the map structure that we pass to the SAT solver:
[DBG]  1  1  -1  -1  1  
[DBG]  1  -1  1  1  1  
[DBG]  1  1  1  1  1  
[DBG]  1  -1  1  1  1  
[DBG]  1  -1  1  1  1  
[DBG]  Identifying agents in a submap for rescheduling (when key_agent is there at the time 12):
[DBG]  Agent 2 found intervals in the sub-map:
[DBG]   [11..15]
[DBG]  Agent 2 (interval in submap: [11..15]) contains time 12, added to replan.
[DBG]  Agent 44 found intervals in the sub-map:
[DBG]   [10..13]
[DBG]  Agent 44 (interval in submap: [10..13]) contains time 12, added to replan.
[DBG]  Agent 52 found intervals in the sub-map:
[DBG]   [26..26]
[DBG]  Agent 52 is not in sub-map at time 12 (intervals: 
[DBG]  [26..26] )
[DBG]  Agent 64 found intervals in the sub-map:
[DBG]   [12..12]
[DBG]  Agent 64 (interval in submap: [12..12]) contains time 12, added to replan.
[DBG]  Agent 75 found intervals in the sub-map:
[DBG]   [6..16]
[DBG]  Agent 75 (interval in submap: [6..16]) contains time 12, added to replan.
[DBG]  Agent 94 found intervals in the sub-map:
[DBG]   [12..18]
[DBG]  Agent 94 (interval in submap: [12..18]) contains time 12, added to replan.
[DBG]  Agent 124 found intervals in the sub-map:
[DBG]   [7..12]
[DBG]  Agent 124 (interval in submap: [7..12]) contains time 12, added to replan.
[DBG]  Agent 144 found intervals in the sub-map:
[DBG]   [7..13]
[DBG]  Agent 144 (interval in submap: [7..13]) contains time 12, added to replan.
[DBG]  Agent 2 | Start (global): 345 -> (local): (1, 0) at time 12 | Goal (global): 441 -> (local): (4, 0) at time 15
[DBG]  Agent 44 | Start (global): 377 -> (local): (2, 0) at time 12 | Goal (global): 409 -> (local): (3, 0) at time 13
[DBG]  Agent 64 | Start (global): 441 -> (local): (4, 0) at time 12 | Goal (global): 441 -> (local): (4, 0) at time 12
[DBG]  Agent 75 | Start (global): 379 -> (local): (2, 2) at time 12 | Goal (global): 317 -> (local): (0, 4) at time 16
[DBG]  Agent 94 | Start (global): 443 -> (local): (4, 2) at time 12 | Goal (global): 313 -> (local): (0, 0) at time 18
[DBG]  Agent 124 | Start (global): 349 -> (local): (1, 4) at time 12 | Goal (global): 349 -> (local): (1, 4) at time 12
[DBG]  Agent 144 | Start (global): 409 -> (local): (3, 0) at time 12 | Goal (global): 441 -> (local): (4, 0) at time 13
[DBG]  [REPAIR] SAT destroy operator called.
[DBG]  [REPAIR] SAT operator â€“ launching subproblem FOR OPTIMIZATION.
[DBG]  Creating local paths (sx, sy) in the submap for T_sync = 12
[DBG]    Agent 2 (global paths from T=12 to 15) has local path: (1,0) (2,0) (3,0) (4,0) 
[DBG]    Agent 44 (global paths from T=12 to 13) has local path: (2,0) (3,0) 
[DBG]    Agent 64 (global paths from T=12 to 12) has local path: (4,0) 
[DBG]    Agent 75 (global paths from T=12 to 16) has local path: (2,2) (2,3) (2,4) (1,4) (0,4) 
[DBG]    Agent 94 (global paths from T=12 to 18) has local path: (4,2) (3,2) (2,2) (2,1) (2,0) (1,0) (0,0) 
[DBG]    Agent 124 (global paths from T=12 to 12) has local path: (1,4) 
[DBG]    Agent 144 (global paths from T=12 to 13) has local path: (3,0) (4,0) 
[DBG]  Checking input data for SAT solver:
[DBG]    - Number of agents to replan: 7
[DBG]  Agent 2 has the original local path length: 4 => Start (1,0), Goal (4,0)
[DBG]  Agent 44 has the original local path length: 2 => Start (2,0), Goal (3,0)
[DBG]  Agent 64 has the original local path length: 1 => Start (4,0), Goal (4,0)
[DBG]  Agent 75 has the original local path length: 5 => Start (2,2), Goal (0,4)
[DBG]  Agent 94 has the original local path length: 7 => Start (4,2), Goal (0,0)
[DBG]  Agent 124 has the original local path length: 1 => Start (1,4), Goal (1,4)
[DBG]  Agent 144 has the original local path length: 2 => Start (3,0), Goal (4,0)
[DBG]  Start position: (1, 0), (2, 0), (4, 0), (2, 2), (4, 2), (1, 4), (3, 0), 
[DBG]  Goal position: (4, 0), (3, 0), (4, 0), (0, 4), (0, 0), (1, 4), (4, 0), 
[DBG]  SAT instance and solver created.
Currently solving
Instance name: scen
Map name: map
Encoding used: disappear_at_goal
SAT solver used: Kissat
Optimizing function: sum of costs
Number of agents: 7
Mks LB: 7
SoC LB: 22
Delta: 0
Remaining time: 300000 [ms]

Vertex conflict! Agents 0, 1, timestep 4, location 0
Swapping conflict! Agents 0, 1, timestep 4, edge (0,0)
Vertex conflict! Agents 0, 1, timestep 5, location 0
Swapping conflict! Agents 0, 1, timestep 5, edge (0,0)
Vertex conflict! Agents 0, 1, timestep 6, location 0
Vertex conflict! Agents 0, 2, timestep 4, location 0
Swapping conflict! Agents 0, 2, timestep 4, edge (0,0)
Vertex conflict! Agents 0, 2, timestep 5, location 0
Swapping conflict! Agents 0, 2, timestep 5, edge (0,0)
Vertex conflict! Agents 0, 2, timestep 6, location 0
Vertex conflict! Agents 0, 3, timestep 5, location 0
Swapping conflict! Agents 0, 3, timestep 5, edge (0,0)
Vertex conflict! Agents 0, 3, timestep 6, location 0
Vertex conflict! Agents 0, 4, timestep 6, location 0
Vertex conflict! Agents 0, 5, timestep 4, location 0
Swapping conflict! Agents 0, 5, timestep 4, edge (0,0)
Vertex conflict! Agents 0, 5, timestep 5, location 0
Swapping conflict! Agents 0, 5, timestep 5, edge (0,0)
Vertex conflict! Agents 0, 5, timestep 6, location 0
Vertex conflict! Agents 0, 6, timestep 4, location 0
Swapping conflict! Agents 0, 6, timestep 4, edge (0,0)
Vertex conflict! Agents 0, 6, timestep 5, location 0
Swapping conflict! Agents 0, 6, timestep 5, edge (0,0)
Vertex conflict! Agents 0, 6, timestep 6, location 0
Vertex conflict! Agents 1, 2, timestep 2, location 0
Swapping conflict! Agents 1, 2, timestep 2, edge (0,0)
Vertex conflict! Agents 1, 2, timestep 3, location 0
Swapping conflict! Agents 1, 2, timestep 3, edge (0,0)
Vertex conflict! Agents 1, 2, timestep 4, location 0
Swapping conflict! Agents 1, 2, timestep 4, edge (0,0)
Vertex conflict! Agents 1, 2, timestep 5, location 0
Swapping conflict! Agents 1, 2, timestep 5, edge (0,0)
Vertex conflict! Agents 1, 2, timestep 6, location 0
Vertex conflict! Agents 1, 3, timestep 5, location 0
Swapping conflict! Agents 1, 3, timestep 5, edge (0,0)
Vertex conflict! Agents 1, 3, timestep 6, location 0
Vertex conflict! Agents 1, 4, timestep 6, location 0
Vertex conflict! Agents 1, 5, timestep 2, location 0
Swapping conflict! Agents 1, 5, timestep 2, edge (0,0)
Vertex conflict! Agents 1, 5, timestep 3, location 0
Swapping conflict! Agents 1, 5, timestep 3, edge (0,0)
Vertex conflict! Agents 1, 5, timestep 4, location 0
Swapping conflict! Agents 1, 5, timestep 4, edge (0,0)
Vertex conflict! Agents 1, 5, timestep 5, location 0
Swapping conflict! Agents 1, 5, timestep 5, edge (0,0)
Vertex conflict! Agents 1, 5, timestep 6, location 0
Vertex conflict! Agents 1, 6, timestep 2, location 0
Swapping conflict! Agents 1, 6, timestep 2, edge (0,0)
Vertex conflict! Agents 1, 6, timestep 3, location 0
Swapping conflict! Agents 1, 6, timestep 3, edge (0,0)
Vertex conflict! Agents 1, 6, timestep 4, location 0
Swapping conflict! Agents 1, 6, timestep 4, edge (0,0)
Vertex conflict! Agents 1, 6, timestep 5, location 0
Swapping conflict! Agents 1, 6, timestep 5, edge (0,0)
Vertex conflict! Agents 1, 6, timestep 6, location 0
Vertex conflict! Agents 2, 3, timestep 5, location 0
Swapping conflict! Agents 2, 3, timestep 5, edge (0,0)
Vertex conflict! Agents 2, 3, timestep 6, location 0
Vertex conflict! Agents 2, 4, timestep 6, location 0
Vertex conflict! Agents 2, 5, timestep 1, location 0
Swapping conflict! Agents 2, 5, timestep 1, edge (0,0)
Vertex conflict! Agents 2, 5, timestep 2, location 0
Swapping conflict! Agents 2, 5, timestep 2, edge (0,0)
Vertex conflict! Agents 2, 5, timestep 3, location 0
Swapping conflict! Agents 2, 5, timestep 3, edge (0,0)
Vertex conflict! Agents 2, 5, timestep 4, location 0
Swapping conflict! Agents 2, 5, timestep 4, edge (0,0)
Vertex conflict! Agents 2, 5, timestep 5, location 0
Swapping conflict! Agents 2, 5, timestep 5, edge (0,0)
Vertex conflict! Agents 2, 5, timestep 6, location 0
Vertex conflict! Agents 2, 6, timestep 2, location 0
Swapping conflict! Agents 2, 6, timestep 2, edge (0,0)
Vertex conflict! Agents 2, 6, timestep 3, location 0
Swapping conflict! Agents 2, 6, timestep 3, edge (0,0)
Vertex conflict! Agents 2, 6, timestep 4, location 0
Swapping conflict! Agents 2, 6, timestep 4, edge (0,0)
Vertex conflict! Agents 2, 6, timestep 5, location 0
Swapping conflict! Agents 2, 6, timestep 5, edge (0,0)
Vertex conflict! Agents 2, 6, timestep 6, location 0
Vertex conflict! Agents 3, 4, timestep 6, location 0
Vertex conflict! Agents 3, 5, timestep 5, location 0
Swapping conflict! Agents 3, 5, timestep 5, edge (0,0)
Vertex conflict! Agents 3, 5, timestep 6, location 0
Vertex conflict! Agents 3, 6, timestep 5, location 0
Swapping conflict! Agents 3, 6, timestep 5, edge (0,0)
Vertex conflict! Agents 3, 6, timestep 6, location 0
Vertex conflict! Agents 4, 5, timestep 6, location 0
Vertex conflict! Agents 4, 6, timestep 6, location 0
Vertex conflict! Agents 5, 6, timestep 2, location 0
Swapping conflict! Agents 5, 6, timestep 2, edge (0,0)
Vertex conflict! Agents 5, 6, timestep 3, location 0
Swapping conflict! Agents 5, 6, timestep 3, edge (0,0)
Vertex conflict! Agents 5, 6, timestep 4, location 0
Swapping conflict! Agents 5, 6, timestep 4, edge (0,0)
Vertex conflict! Agents 5, 6, timestep 5, location 0
Swapping conflict! Agents 5, 6, timestep 5, edge (0,0)
Vertex conflict! Agents 5, 6, timestep 6, location 0
Found plan [agents = 7] [timesteps = 7]
Agent #0 : 3 7 12 16 0 0 0 
Agent #1 : 7 12 0 0 0 0 0 
Agent #2 : 16 0 0 0 0 0 0 
Agent #3 : 9 10 11 6 2 0 0 
Agent #4 : 17 13 9 8 7 3 0 
Agent #5 : 6 0 0 0 0 0 0 
Agent #6 : 12 16 0 0 0 0 0 

[STAT] Solver returned: 0
[DBG]  Agent (index) 2 | New local path (submap idx):
[DBG]  3 7 12 16 
[DBG]  Agent (index) 44 | New local path (submap idx):
[DBG]  7 12 
[DBG]  Agent (index) 64 | New local path (submap idx):
[DBG]  16 
[DBG]  Agent (index) 75 | New local path (submap idx):
[DBG]  9 10 11 6 2 
[DBG]  Agent (index) 94 | New local path (submap idx):
[DBG]  17 13 9 8 7 3 0 
[DBG]  Agent (index) 124 | New local path (submap idx):
[DBG]  6 
[DBG]  Agent (index) 144 | New local path (submap idx):
[DBG]  12 16 
[DBG]  Update the agent path 2 | Original local length: 4 | New local length: 4
[DBG]  agent 2 t=0 => decoded (sx,sy)=(1,0) => global_id=345
[DBG]  agent 2 t=1 => decoded (sx,sy)=(2,0) => global_id=377
[DBG]  agent 2 t=2 => decoded (sx,sy)=(3,0) => global_id=409
[DBG]  agent 2 t=3 => decoded (sx,sy)=(4,0) => global_id=441
[DBG]  Complete path of agent 2:
[DBG]    Original: 59 91 90 89 89 121 153 185 217 249 281 313 345 377 409 441 473 474 475 507 539 538 570 571 603 604 636 637 638 670 702 701 733 765 764 
[DBG]    New:     59 91 90 89 89 121 153 185 217 249 281 313 345 377 409 441 473 474 475 507 539 538 570 571 603 604 636 637 638 670 702 701 733 765 764 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 59 91 90 89 89 121 153 185 217 249 281 313 
[DBG]    Local path (in submap): 345 377 409 441 
[DBG]    Suffix (out of submap): 473 474 475 507 539 538 570 571 603 604 636 637 638 670 702 701 733 765 764 
[DBG]  Original agent path length 2 je: 35
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 0: 59, 91, 90, 89, 89, 121, 153, 185, 217, 249, 281, 313, 345, 377, 409, 441, 473, 474, 475, 507, 539, 538, 570, 571, 603, 604, 636, 637, 638, 670, 702, 701, 733, 765, 764, 
[DBG]  Path for agent 2 updated, resulting length: 35
[DBG]  Update the agent path 44 | Original local length: 2 | New local length: 2
[DBG]  agent 44 t=0 => decoded (sx,sy)=(2,0) => global_id=377
[DBG]  agent 44 t=1 => decoded (sx,sy)=(3,0) => global_id=409
[DBG]  Complete path of agent 44:
[DBG]    Original: 156 124 123 122 121 153 185 217 249 281 313 345 377 409 408 440 439 438 470 469 468 467 466 465 465 465 465 464 496 528 529 561 593 625 657 689 688 720 752 784 783 815 847 848 
[DBG]    New:     156 124 123 122 121 153 185 217 249 281 313 345 377 409 408 440 439 438 470 469 468 467 466 465 465 465 465 464 496 528 529 561 593 625 657 689 688 720 752 784 783 815 847 848 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 156 124 123 122 121 153 185 217 249 281 313 345 
[DBG]    Local path (in submap): 377 409 
[DBG]    Suffix (out of submap): 408 440 439 438 470 469 468 467 466 465 465 465 465 464 496 528 529 561 593 625 657 689 688 720 752 784 783 815 847 848 
[DBG]  Original agent path length 44 je: 44
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 1: 156, 124, 123, 122, 121, 153, 185, 217, 249, 281, 313, 345, 377, 409, 408, 440, 439, 438, 470, 469, 468, 467, 466, 465, 465, 465, 465, 464, 496, 528, 529, 561, 593, 625, 657, 689, 688, 720, 752, 784, 783, 815, 847, 848, 
[DBG]  Path for agent 44 updated, resulting length: 44
[DBG]  Update the agent path 64 | Original local length: 1 | New local length: 1
[DBG]  agent 64 t=0 => decoded (sx,sy)=(4,0) => global_id=441
[DBG]  Complete path of agent 64:
[DBG]    Original: 639 638 637 636 635 603 571 539 507 506 474 473 441 440 439 407 375 343 311 279 247 215 214 213 181 180 
[DBG]    New:     639 638 637 636 635 603 571 539 507 506 474 473 441 440 439 407 375 343 311 279 247 215 214 213 181 180 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 639 638 637 636 635 603 571 539 507 506 474 473 
[DBG]    Local path (in submap): 441 
[DBG]    Suffix (out of submap): 440 439 407 375 343 311 279 247 215 214 213 181 180 
[DBG]  Original agent path length 64 je: 26
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 2: 639, 638, 637, 636, 635, 603, 571, 539, 507, 506, 474, 473, 441, 440, 439, 407, 375, 343, 311, 279, 247, 215, 214, 213, 181, 180, 
[DBG]  Path for agent 64 updated, resulting length: 26
[DBG]  Update the agent path 75 | Original local length: 5 | New local length: 5
[DBG]  agent 75 t=0 => decoded (sx,sy)=(2,2) => global_id=379
[DBG]  agent 75 t=1 => decoded (sx,sy)=(2,3) => global_id=380
[DBG]  agent 75 t=2 => decoded (sx,sy)=(2,4) => global_id=381
[DBG]  agent 75 t=3 => decoded (sx,sy)=(1,4) => global_id=349
[DBG]  agent 75 t=4 => decoded (sx,sy)=(0,4) => global_id=317
[DBG]  Complete path of agent 75:
[DBG]    Original: 340 341 309 310 311 312 313 345 345 345 377 378 379 380 381 349 317 285 286 
[DBG]    New:     340 341 309 310 311 312 313 345 345 345 377 378 379 380 381 349 317 285 286 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 340 341 309 310 311 312 313 345 345 345 377 378 
[DBG]    Local path (in submap): 379 380 381 349 317 
[DBG]    Suffix (out of submap): 285 286 
[DBG]  Original agent path length 75 je: 19
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 3: 340, 341, 309, 310, 311, 312, 313, 345, 345, 345, 377, 378, 379, 380, 381, 349, 317, 285, 286, 
[DBG]  Path for agent 75 updated, resulting length: 19
[DBG]  Update the agent path 94 | Original local length: 7 | New local length: 7
[DBG]  agent 94 t=0 => decoded (sx,sy)=(4,2) => global_id=443
[DBG]  agent 94 t=1 => decoded (sx,sy)=(3,2) => global_id=411
[DBG]  agent 94 t=2 => decoded (sx,sy)=(2,2) => global_id=379
[DBG]  agent 94 t=3 => decoded (sx,sy)=(2,1) => global_id=378
[DBG]  agent 94 t=4 => decoded (sx,sy)=(2,0) => global_id=377
[DBG]  agent 94 t=5 => decoded (sx,sy)=(1,0) => global_id=345
[DBG]  agent 94 t=6 => decoded (sx,sy)=(0,0) => global_id=313
[DBG]  Complete path of agent 94:
[DBG]    Original: 701 702 670 638 637 636 635 603 571 539 507 475 443 411 379 378 377 345 313 281 249 248 216 
[DBG]    New:     701 702 670 638 637 636 635 603 571 539 507 475 443 411 379 378 377 345 313 281 249 248 216 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 701 702 670 638 637 636 635 603 571 539 507 475 
[DBG]    Local path (in submap): 443 411 379 378 377 345 313 
[DBG]    Suffix (out of submap): 281 249 248 216 
[DBG]  Original agent path length 94 je: 23
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 4: 701, 702, 670, 638, 637, 636, 635, 603, 571, 539, 507, 475, 443, 411, 379, 378, 377, 345, 313, 281, 249, 248, 216, 
[DBG]  Path for agent 94 updated, resulting length: 23
[DBG]  Update the agent path 124 | Original local length: 1 | New local length: 1
[DBG]  agent 124 t=0 => decoded (sx,sy)=(1,4) => global_id=349
[DBG]  Complete path of agent 124:
[DBG]    Original: 502 503 504 472 473 474 475 443 411 379 347 348 349 350 318 286 254 222 221 189 157 158 159 127 
[DBG]    New:     502 503 504 472 473 474 475 443 411 379 347 348 349 350 318 286 254 222 221 189 157 158 159 127 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 502 503 504 472 473 474 475 443 411 379 347 348 
[DBG]    Local path (in submap): 349 
[DBG]    Suffix (out of submap): 350 318 286 254 222 221 189 157 158 159 127 
[DBG]  Original agent path length 124 je: 24
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 5: 502, 503, 504, 472, 473, 474, 475, 443, 411, 379, 347, 348, 349, 350, 318, 286, 254, 222, 221, 189, 157, 158, 159, 127, 
[DBG]  Path for agent 124 updated, resulting length: 24
[DBG]  Update the agent path 144 | Original local length: 2 | New local length: 2
[DBG]  agent 144 t=0 => decoded (sx,sy)=(3,0) => global_id=409
[DBG]  agent 144 t=1 => decoded (sx,sy)=(4,0) => global_id=441
[DBG]  Complete path of agent 144:
[DBG]    Original: 121 153 185 217 249 281 281 313 313 313 345 377 409 441 473 474 475 475 507 539 538 570 602 601 602 603 603 603 603 603 603 602 601 600 599 631 
[DBG]    New:     121 153 185 217 249 281 281 313 313 313 345 377 409 441 473 474 475 475 507 539 538 570 602 601 602 603 603 603 603 603 603 602 601 600 599 631 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 121 153 185 217 249 281 281 313 313 313 345 377 
[DBG]    Local path (in submap): 409 441 
[DBG]    Suffix (out of submap): 473 474 475 475 507 539 538 570 602 601 602 603 603 603 603 603 603 602 601 600 599 631 
[DBG]  Original agent path length 144 je: 36
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 6: 121, 153, 185, 217, 249, 281, 281, 313, 313, 313, 345, 377, 409, 441, 473, 474, 475, 475, 507, 539, 538, 570, 602, 601, 602, 603, 603, 603, 603, 603, 603, 602, 601, 600, 599, 631, 
[DBG]  Path for agent 144 updated, resulting length: 36
[DBG]  Paths successfully updated.
[DBG]  (LNS.cpp) New path for agent 2: 
[DBG]  59, 91, 90, 89, 89, 121, 153, 185, 217, 249, 281, 313, 345, 377, 409, 441, 473, 474, 475, 507, 539, 538, 570, 571, 603, 604, 636, 637, 638, 670, 702, 701, 733, 765, 764, 
[DBG]  (LNS.cpp) New path for agent 44: 
[DBG]  156, 124, 123, 122, 121, 153, 185, 217, 249, 281, 313, 345, 377, 409, 408, 440, 439, 438, 470, 469, 468, 467, 466, 465, 465, 465, 465, 464, 496, 528, 529, 561, 593, 625, 657, 689, 688, 720, 752, 784, 783, 815, 847, 848, 
[DBG]  (LNS.cpp) New path for agent 64: 
[DBG]  639, 638, 637, 636, 635, 603, 571, 539, 507, 506, 474, 473, 441, 440, 439, 407, 375, 343, 311, 279, 247, 215, 214, 213, 181, 180, 
[DBG]  (LNS.cpp) New path for agent 75: 
[DBG]  340, 341, 309, 310, 311, 312, 313, 345, 345, 345, 377, 378, 379, 380, 381, 349, 317, 285, 286, 
[DBG]  (LNS.cpp) New path for agent 94: 
[DBG]  701, 702, 670, 638, 637, 636, 635, 603, 571, 539, 507, 475, 443, 411, 379, 378, 377, 345, 313, 281, 249, 248, 216, 
[DBG]  (LNS.cpp) New path for agent 124: 
[DBG]  502, 503, 504, 472, 473, 474, 475, 443, 411, 379, 347, 348, 349, 350, 318, 286, 254, 222, 221, 189, 157, 158, 159, 127, 
[DBG]  (LNS.cpp) New path for agent 144: 
[DBG]  121, 153, 185, 217, 249, 281, 281, 313, 313, 313, 345, 377, 409, 441, 473, 474, 475, 475, 507, 539, 538, 570, 602, 601, 602, 603, 603, 603, 603, 603, 603, 602, 601, 600, 599, 631, 
[DBG]  component_weights = {0.41089, 0.0666917, 0.0697428, 0.452676}
[DBG]  opSuccess value: 1
[STAT] neighbor.sum_of_costs before recomputation: 200
[STAT] neighbor.old_sum_of_costs before recomputation: 200
[STAT] sum_of_costs before recomputation: 4161
[DBG]  Validate solution immediately after SAT success.
[DBG]  No problems after SAT replan.
[DBG]  Recomputing sum_of_cost by dividing neighbor.sum_of_costs and neighbor.old_sum_of_costs
[STAT] sum_of_costs after recomputation: 4161
[STAT] Iteration 185
[DBG]  Using SAT operator (destroy+repair SAT).
[DBG]  ====================
[DBG]  SAT destroy operator called.
[DBG]  SAT heuristic: 2
[DBG]  key_agent_id: 149
[DBG]  key_agent_id global path length: 31
[DBG]  Submap content (global positions):
[DBG]  342 343 344 345 346 
[DBG]  374 375 376 377 378 
[DBG]  406 407 408 409 410 
[DBG]  438 439 440 441 442 
[DBG]  470 471 472 473 474 
[DBG]  Map content with agents and obstacles:
[DBG]  X . . A X 
[DBG]  X A A A . 
[DBG]  A . A . X 
[DBG]  . . A . X 
[DBG]  . X A . . 
[DBG]  content of the map structure that we pass to the SAT solver:
[DBG]  -1  1  1  1  -1  
[DBG]  -1  1  1  1  1  
[DBG]  1  1  1  1  -1  
[DBG]  1  1  1  1  -1  
[DBG]  1  -1  1  1  1  
[DBG]  Identifying agents in a submap for rescheduling (when key_agent is there at the time 9):
[DBG]  Agent 31 found intervals in the sub-map:
[DBG]   [7..11]
[DBG]  Agent 31 (interval in submap: [7..11]) contains time 9, added to replan.
[DBG]  Agent 43 found intervals in the sub-map:
[DBG]   [5..11]
[DBG]  Agent 43 (interval in submap: [5..11]) contains time 9, added to replan.
[DBG]  Agent 45 found intervals in the sub-map:
[DBG]   [6..13]
[DBG]  Agent 45 (interval in submap: [6..13]) contains time 9, added to replan.
[DBG]  Agent 54 found intervals in the sub-map:
[DBG]   [9..21]
[DBG]  Agent 54 (interval in submap: [9..21]) contains time 9, added to replan.
[DBG]  Agent 75 found intervals in the sub-map:
[DBG]   [7..11]
[DBG]  Agent 75 (interval in submap: [7..11]) contains time 9, added to replan.
[DBG]  Agent 92 found intervals in the sub-map:
[DBG]   [7..14]
[DBG]  Agent 92 (interval in submap: [7..14]) contains time 9, added to replan.
[DBG]  Agent 100 found intervals in the sub-map:
[DBG]   [8..16]
[DBG]  Agent 100 (interval in submap: [8..16]) contains time 9, added to replan.
[DBG]  Agent 123 found intervals in the sub-map:
[DBG]   [10..15]
[DBG]  Agent 123 is not in sub-map at time 9 (intervals: 
[DBG]  [10..15] )
[DBG]  Agent 144 found intervals in the sub-map:
[DBG]   [10..15]
[DBG]  Agent 144 is not in sub-map at time 9 (intervals: 
[DBG]  [10..15] )
[DBG]  Agent 149 found intervals in the sub-map:
[DBG]   [6..13]
[DBG]  Agent 149 (interval in submap: [6..13]) contains time 9, added to replan.
[DBG]  Agent 31 | Start (global): 375 -> (local): (1, 1) at time 9 | Goal (global): 344 -> (local): (0, 2) at time 11
[DBG]  Agent 43 | Start (global): 440 -> (local): (3, 2) at time 9 | Goal (global): 438 -> (local): (3, 0) at time 11
[DBG]  Agent 45 | Start (global): 376 -> (local): (1, 2) at time 9 | Goal (global): 438 -> (local): (3, 0) at time 13
[DBG]  Agent 54 | Start (global): 406 -> (local): (2, 0) at time 9 | Goal (global): 473 -> (local): (4, 3) at time 21
[DBG]  Agent 75 | Start (global): 345 -> (local): (0, 3) at time 9 | Goal (global): 378 -> (local): (1, 4) at time 11
[DBG]  Agent 92 | Start (global): 472 -> (local): (4, 2) at time 9 | Goal (global): 343 -> (local): (0, 1) at time 14
[DBG]  Agent 100 | Start (global): 377 -> (local): (1, 3) at time 9 | Goal (global): 470 -> (local): (4, 0) at time 16
[DBG]  Agent 149 | Start (global): 408 -> (local): (2, 2) at time 9 | Goal (global): 343 -> (local): (0, 1) at time 13
[DBG]  [REPAIR] SAT destroy operator called.
[DBG]  [REPAIR] SAT operator â€“ launching subproblem FOR OPTIMIZATION.
[DBG]  Creating local paths (sx, sy) in the submap for T_sync = 9
[DBG]    Agent 31 (global paths from T=9 to 11) has local path: (1,1) (0,1) (0,2) 
[DBG]    Agent 43 (global paths from T=9 to 11) has local path: (3,2) (3,1) (3,0) 
[DBG]    Agent 45 (global paths from T=9 to 13) has local path: (1,2) (1,1) (2,1) (3,1) (3,0) 
[DBG]    Agent 54 (global paths from T=9 to 21) has local path: (2,0) (3,0) (2,0) (2,0) (2,0) (2,0) (2,0) (2,1) (3,1) (3,2) (3,3) (3,3) (4,3) 
[DBG]    Agent 75 (global paths from T=9 to 11) has local path: (0,3) (1,3) (1,4) 
[DBG]    Agent 92 (global paths from T=9 to 14) has local path: (4,2) (3,2) (2,2) (1,2) (1,1) (0,1) 
[DBG]    Agent 100 (global paths from T=9 to 16) has local path: (1,3) (1,2) (1,1) (2,1) (3,1) (3,0) (4,0) (4,0) 
[DBG]    Agent 149 (global paths from T=9 to 13) has local path: (2,2) (2,2) (1,2) (1,1) (0,1) 
[DBG]  Checking input data for SAT solver:
[DBG]    - Number of agents to replan: 8
[DBG]  Agent 31 has the original local path length: 3 => Start (1,1), Goal (0,2)
[DBG]  Agent 43 has the original local path length: 3 => Start (3,2), Goal (3,0)
[DBG]  Agent 45 has the original local path length: 5 => Start (1,2), Goal (3,0)
[DBG]  Agent 54 has the original local path length: 13 => Start (2,0), Goal (4,3)
[DBG]  Agent 75 has the original local path length: 3 => Start (0,3), Goal (1,4)
[DBG]  Agent 92 has the original local path length: 6 => Start (4,2), Goal (0,1)
[DBG]  Agent 100 has the original local path length: 8 => Start (1,3), Goal (4,0)
[DBG]  Agent 149 has the original local path length: 5 => Start (2,2), Goal (0,1)
[DBG]  Start position: (1, 1), (3, 2), (1, 2), (2, 0), (0, 3), (4, 2), (1, 3), (2, 2), 
[DBG]  Goal position: (0, 2), (3, 0), (3, 0), (4, 3), (1, 4), (0, 1), (4, 0), (0, 1), 
[DBG]  SAT instance and solver created.
Currently solving
Instance name: scen
Map name: map
Encoding used: disappear_at_goal
SAT solver used: Kissat
Optimizing function: sum of costs
Number of agents: 8
Mks LB: 7
SoC LB: 37
Delta: 0
Remaining time: 300000 [ms]

Vertex conflict! Agents 0, 1, timestep 3, location 0
Swapping conflict! Agents 0, 1, timestep 3, edge (0,0)
Vertex conflict! Agents 0, 1, timestep 4, location 0
Swapping conflict! Agents 0, 1, timestep 4, edge (0,0)
Vertex conflict! Agents 0, 1, timestep 5, location 0
Swapping conflict! Agents 0, 1, timestep 5, edge (0,0)
Vertex conflict! Agents 0, 1, timestep 6, location 0
Vertex conflict! Agents 0, 2, timestep 5, location 0
Swapping conflict! Agents 0, 2, timestep 5, edge (0,0)
Vertex conflict! Agents 0, 2, timestep 6, location 0
Vertex conflict! Agents 0, 3, timestep 6, location 0
Vertex conflict! Agents 0, 4, timestep 3, location 0
Swapping conflict! Agents 0, 4, timestep 3, edge (0,0)
Vertex conflict! Agents 0, 4, timestep 4, location 0
Swapping conflict! Agents 0, 4, timestep 4, edge (0,0)
Vertex conflict! Agents 0, 4, timestep 5, location 0
Swapping conflict! Agents 0, 4, timestep 5, edge (0,0)
Vertex conflict! Agents 0, 4, timestep 6, location 0
Vertex conflict! Agents 0, 5, timestep 5, location 0
Swapping conflict! Agents 0, 5, timestep 5, edge (0,0)
Vertex conflict! Agents 0, 5, timestep 6, location 0
Vertex conflict! Agents 0, 7, timestep 3, location 0
Swapping conflict! Agents 0, 7, timestep 3, edge (0,0)
Vertex conflict! Agents 0, 7, timestep 4, location 0
Swapping conflict! Agents 0, 7, timestep 4, edge (0,0)
Vertex conflict! Agents 0, 7, timestep 5, location 0
Swapping conflict! Agents 0, 7, timestep 5, edge (0,0)
Vertex conflict! Agents 0, 7, timestep 6, location 0
Vertex conflict! Agents 1, 2, timestep 5, location 0
Swapping conflict! Agents 1, 2, timestep 5, edge (0,0)
Vertex conflict! Agents 1, 2, timestep 6, location 0
Vertex conflict! Agents 1, 3, timestep 6, location 0
Vertex conflict! Agents 1, 4, timestep 3, location 0
Swapping conflict! Agents 1, 4, timestep 3, edge (0,0)
Vertex conflict! Agents 1, 4, timestep 4, location 0
Swapping conflict! Agents 1, 4, timestep 4, edge (0,0)
Vertex conflict! Agents 1, 4, timestep 5, location 0
Swapping conflict! Agents 1, 4, timestep 5, edge (0,0)
Vertex conflict! Agents 1, 4, timestep 6, location 0
Vertex conflict! Agents 1, 5, timestep 5, location 0
Swapping conflict! Agents 1, 5, timestep 5, edge (0,0)
Vertex conflict! Agents 1, 5, timestep 6, location 0
Vertex conflict! Agents 1, 7, timestep 3, location 0
Swapping conflict! Agents 1, 7, timestep 3, edge (0,0)
Vertex conflict! Agents 1, 7, timestep 4, location 0
Swapping conflict! Agents 1, 7, timestep 4, edge (0,0)
Vertex conflict! Agents 1, 7, timestep 5, location 0
Swapping conflict! Agents 1, 7, timestep 5, edge (0,0)
Vertex conflict! Agents 1, 7, timestep 6, location 0
Vertex conflict! Agents 2, 3, timestep 6, location 0
Vertex conflict! Agents 2, 4, timestep 5, location 0
Swapping conflict! Agents 2, 4, timestep 5, edge (0,0)
Vertex conflict! Agents 2, 4, timestep 6, location 0
Vertex conflict! Agents 2, 5, timestep 5, location 0
Swapping conflict! Agents 2, 5, timestep 5, edge (0,0)
Vertex conflict! Agents 2, 5, timestep 6, location 0
Vertex conflict! Agents 2, 7, timestep 5, location 0
Swapping conflict! Agents 2, 7, timestep 5, edge (0,0)
Vertex conflict! Agents 2, 7, timestep 6, location 0
Vertex conflict! Agents 3, 4, timestep 6, location 0
Vertex conflict! Agents 3, 5, timestep 6, location 0
Vertex conflict! Agents 3, 7, timestep 6, location 0
Vertex conflict! Agents 4, 5, timestep 5, location 0
Swapping conflict! Agents 4, 5, timestep 5, edge (0,0)
Vertex conflict! Agents 4, 5, timestep 6, location 0
Vertex conflict! Agents 4, 7, timestep 3, location 0
Swapping conflict! Agents 4, 7, timestep 3, edge (0,0)
Vertex conflict! Agents 4, 7, timestep 4, location 0
Swapping conflict! Agents 4, 7, timestep 4, edge (0,0)
Vertex conflict! Agents 4, 7, timestep 5, location 0
Swapping conflict! Agents 4, 7, timestep 5, edge (0,0)
Vertex conflict! Agents 4, 7, timestep 6, location 0
Vertex conflict! Agents 5, 7, timestep 5, location 0
Swapping conflict! Agents 5, 7, timestep 5, edge (0,0)
Vertex conflict! Agents 5, 7, timestep 6, location 0
Found plan [agents = 8] [timesteps = 7]
Agent #0 : 3 0 1 0 0 0 0 
Agent #1 : 13 12 11 0 0 0 0 
Agent #2 : 4 3 8 7 11 0 0 
Agent #3 : 7 8 9 10 14 17 0 
Agent #4 : 2 5 6 0 0 0 0 
Agent #5 : 16 13 12 8 3 0 0 
Agent #6 : 5 10 14 13 12 11 15 
Agent #7 : 9 4 3 0 0 0 0 

[STAT] Solver returned: 0
[DBG]  Agent (index) 31 | New local path (submap idx):
[DBG]  3 0 1 
[DBG]  Agent (index) 43 | New local path (submap idx):
[DBG]  13 12 11 
[DBG]  Agent (index) 45 | New local path (submap idx):
[DBG]  4 3 8 7 11 
[DBG]  Agent (index) 54 | New local path (submap idx):
[DBG]  7 8 9 10 14 17 
[DBG]  Agent (index) 75 | New local path (submap idx):
[DBG]  2 5 6 
[DBG]  Agent (index) 92 | New local path (submap idx):
[DBG]  16 13 12 8 3 0 
[DBG]  Agent (index) 100 | New local path (submap idx):
[DBG]  5 10 14 13 12 11 15 
[DBG]  Agent (index) 149 | New local path (submap idx):
[DBG]  9 4 3 0 
[DBG]  Update the agent path 31 | Original local length: 3 | New local length: 3
[DBG]  agent 31 t=0 => decoded (sx,sy)=(1,1) => global_id=375
[DBG]  agent 31 t=1 => decoded (sx,sy)=(0,1) => global_id=343
[DBG]  agent 31 t=2 => decoded (sx,sy)=(0,2) => global_id=344
[DBG]  Complete path of agent 31:
[DBG]    Original: 432 400 401 402 403 404 405 406 407 375 343 344 312 313 281 249 217 185 153 121 89 
[DBG]    New:     432 400 401 402 403 404 405 406 407 375 343 344 312 313 281 249 217 185 153 121 89 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 432 400 401 402 403 404 405 406 407 
[DBG]    Local path (in submap): 375 343 344 
[DBG]    Suffix (out of submap): 312 313 281 249 217 185 153 121 89 
[DBG]  Original agent path length 31 je: 21
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 0: 432, 400, 401, 402, 403, 404, 405, 406, 407, 375, 343, 344, 312, 313, 281, 249, 217, 185, 153, 121, 89, 
[DBG]  Path for agent 31 updated, resulting length: 21
[DBG]  Update the agent path 43 | Original local length: 3 | New local length: 3
[DBG]  agent 43 t=0 => decoded (sx,sy)=(3,2) => global_id=440
[DBG]  agent 43 t=1 => decoded (sx,sy)=(3,1) => global_id=439
[DBG]  agent 43 t=2 => decoded (sx,sy)=(3,0) => global_id=438
[DBG]  Complete path of agent 43:
[DBG]    Original: 414 413 381 380 379 378 377 409 441 440 439 438 437 437 469 468 468 467 466 465 464 464 463 462 494 526 526 525 524 523 522 521 520 519 551 550 582 581 613 645 677 709 741 740 739 707 
[DBG]    New:     414 413 381 380 379 378 377 409 441 440 439 438 437 437 469 468 468 467 466 465 464 464 463 462 494 526 526 525 524 523 522 521 520 519 551 550 582 581 613 645 677 709 741 740 739 707 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 414 413 381 380 379 378 377 409 441 
[DBG]    Local path (in submap): 440 439 438 
[DBG]    Suffix (out of submap): 437 437 469 468 468 467 466 465 464 464 463 462 494 526 526 525 524 523 522 521 520 519 551 550 582 581 613 645 677 709 741 740 739 707 
[DBG]  Original agent path length 43 je: 46
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 1: 414, 413, 381, 380, 379, 378, 377, 409, 441, 440, 439, 438, 437, 437, 469, 468, 468, 467, 466, 465, 464, 464, 463, 462, 494, 526, 526, 525, 524, 523, 522, 521, 520, 519, 551, 550, 582, 581, 613, 645, 677, 709, 741, 740, 739, 707, 
[DBG]  Path for agent 43 updated, resulting length: 46
[DBG]  Update the agent path 45 | Original local length: 5 | New local length: 5
[DBG]  agent 45 t=0 => decoded (sx,sy)=(1,2) => global_id=376
[DBG]  agent 45 t=1 => decoded (sx,sy)=(1,1) => global_id=375
[DBG]  agent 45 t=2 => decoded (sx,sy)=(2,1) => global_id=407
[DBG]  agent 45 t=3 => decoded (sx,sy)=(2,0) => global_id=406
[DBG]  agent 45 t=4 => decoded (sx,sy)=(3,0) => global_id=438
[DBG]  Complete path of agent 45:
[DBG]    Original: 153 185 217 249 281 313 345 344 376 376 375 407 439 438 437 469 469 468 467 499 531 530 529 561 593 625 657 689 721 753 752 784 784 783 815 847 848 849 
[DBG]    New:     153 185 217 249 281 313 345 344 376 376 375 407 406 438 437 469 469 468 467 499 531 530 529 561 593 625 657 689 721 753 752 784 784 783 815 847 848 849 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 153 185 217 249 281 313 345 344 376 
[DBG]    Local path (in submap): 376 375 407 406 438 
[DBG]    Suffix (out of submap): 437 469 469 468 467 499 531 530 529 561 593 625 657 689 721 753 752 784 784 783 815 847 848 849 
[DBG]  Original agent path length 45 je: 38
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 2: 153, 185, 217, 249, 281, 313, 345, 344, 376, 376, 375, 407, 406, 438, 437, 469, 469, 468, 467, 499, 531, 530, 529, 561, 593, 625, 657, 689, 721, 753, 752, 784, 784, 783, 815, 847, 848, 849, 
[DBG]  Path for agent 45 updated, resulting length: 38
[DBG]  Update the agent path 54 | Original local length: 13 | New local length: 6
[DBG]  agent 54 t=0 => decoded (sx,sy)=(2,0) => global_id=406
[DBG]  agent 54 t=1 => decoded (sx,sy)=(2,1) => global_id=407
[DBG]  agent 54 t=2 => decoded (sx,sy)=(2,2) => global_id=408
[DBG]  agent 54 t=3 => decoded (sx,sy)=(2,3) => global_id=409
[DBG]  agent 54 t=4 => decoded (sx,sy)=(3,3) => global_id=441
[DBG]  agent 54 t=5 => decoded (sx,sy)=(4,3) => global_id=473
[DBG]  Complete path of agent 54:
[DBG]    Original: 464 464 432 433 401 402 403 404 405 406 438 406 406 406 406 406 407 439 440 441 441 473 505 506 538 570 571 
[DBG]    New:     464 464 432 433 401 402 403 404 405 406 407 408 409 441 473 505 506 538 570 571 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 464 464 432 433 401 402 403 404 405 
[DBG]    Local path (in submap): 406 407 408 409 441 473 505 506 538 570 571 
[DBG]    Suffix (out of submap): 
[DBG]  Original agent path length 54 je: 27
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 3: 464, 464, 432, 433, 401, 402, 403, 404, 405, 406, 407, 408, 409, 441, 473, 505, 506, 538, 570, 571, 
[DBG]  Path for agent 54 updated, resulting length: 20
[DBG]  Update the agent path 75 | Original local length: 3 | New local length: 3
[DBG]  agent 75 t=0 => decoded (sx,sy)=(0,3) => global_id=345
[DBG]  agent 75 t=1 => decoded (sx,sy)=(1,3) => global_id=377
[DBG]  agent 75 t=2 => decoded (sx,sy)=(1,4) => global_id=378
[DBG]  Complete path of agent 75:
[DBG]    Original: 340 341 309 310 311 312 313 345 345 345 377 378 379 380 381 349 317 285 286 
[DBG]    New:     340 341 309 310 311 312 313 345 345 345 377 378 379 380 381 349 317 285 286 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 340 341 309 310 311 312 313 345 345 
[DBG]    Local path (in submap): 345 377 378 
[DBG]    Suffix (out of submap): 379 380 381 349 317 285 286 
[DBG]  Original agent path length 75 je: 19
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 4: 340, 341, 309, 310, 311, 312, 313, 345, 345, 345, 377, 378, 379, 380, 381, 349, 317, 285, 286, 
[DBG]  Path for agent 75 updated, resulting length: 19
[DBG]  Update the agent path 92 | Original local length: 6 | New local length: 6
[DBG]  agent 92 t=0 => decoded (sx,sy)=(4,2) => global_id=472
[DBG]  agent 92 t=1 => decoded (sx,sy)=(3,2) => global_id=440
[DBG]  agent 92 t=2 => decoded (sx,sy)=(3,1) => global_id=439
[DBG]  agent 92 t=3 => decoded (sx,sy)=(2,1) => global_id=407
[DBG]  agent 92 t=4 => decoded (sx,sy)=(1,1) => global_id=375
[DBG]  agent 92 t=5 => decoded (sx,sy)=(0,1) => global_id=343
[DBG]  Complete path of agent 92:
[DBG]    Original: 667 635 603 602 570 538 506 474 473 472 440 408 376 375 343 311 279 247 215 214 213 181 180 179 178 177 176 144 112 111 110 109 108 107 106 105 104 136 135 134 133 165 164 163 131 99 98 
[DBG]    New:     667 635 603 602 570 538 506 474 473 472 440 439 407 375 343 311 279 247 215 214 213 181 180 179 178 177 176 144 112 111 110 109 108 107 106 105 104 136 135 134 133 165 164 163 131 99 98 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 667 635 603 602 570 538 506 474 473 
[DBG]    Local path (in submap): 472 440 439 407 375 343 
[DBG]    Suffix (out of submap): 311 279 247 215 214 213 181 180 179 178 177 176 144 112 111 110 109 108 107 106 105 104 136 135 134 133 165 164 163 131 99 98 
[DBG]  Original agent path length 92 je: 47
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 5: 667, 635, 603, 602, 570, 538, 506, 474, 473, 472, 440, 439, 407, 375, 343, 311, 279, 247, 215, 214, 213, 181, 180, 179, 178, 177, 176, 144, 112, 111, 110, 109, 108, 107, 106, 105, 104, 136, 135, 134, 133, 165, 164, 163, 131, 99, 98, 
[DBG]  Path for agent 92 updated, resulting length: 47
[DBG]  Update the agent path 100 | Original local length: 8 | New local length: 7
[DBG]  agent 100 t=0 => decoded (sx,sy)=(1,3) => global_id=377
[DBG]  agent 100 t=1 => decoded (sx,sy)=(2,3) => global_id=409
[DBG]  agent 100 t=2 => decoded (sx,sy)=(3,3) => global_id=441
[DBG]  agent 100 t=3 => decoded (sx,sy)=(3,2) => global_id=440
[DBG]  agent 100 t=4 => decoded (sx,sy)=(3,1) => global_id=439
[DBG]  agent 100 t=5 => decoded (sx,sy)=(3,0) => global_id=438
[DBG]  agent 100 t=6 => decoded (sx,sy)=(4,0) => global_id=470
[DBG]  Complete path of agent 100:
[DBG]    Original: 287 319 318 317 349 381 380 379 378 377 376 375 407 439 438 470 470 469 468 468 467 466 498 530 529 561 593 625 625 657 656 655 687 719 751 783 815 847 879 878 877 909 941 973 1005 1004 1003 
[DBG]    New:     287 319 318 317 349 381 380 379 378 377 409 441 440 439 438 470 469 468 468 467 466 498 530 529 561 593 625 625 657 656 655 687 719 751 783 815 847 879 878 877 909 941 973 1005 1004 1003 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 287 319 318 317 349 381 380 379 378 
[DBG]    Local path (in submap): 377 409 441 440 439 438 470 469 
[DBG]    Suffix (out of submap): 468 468 467 466 498 530 529 561 593 625 625 657 656 655 687 719 751 783 815 847 879 878 877 909 941 973 1005 1004 1003 
[DBG]  Original agent path length 100 je: 47
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 6: 287, 319, 318, 317, 349, 381, 380, 379, 378, 377, 409, 441, 440, 439, 438, 470, 469, 468, 468, 467, 466, 498, 530, 529, 561, 593, 625, 625, 657, 656, 655, 687, 719, 751, 783, 815, 847, 879, 878, 877, 909, 941, 973, 1005, 1004, 1003, 
[DBG]  Path for agent 100 updated, resulting length: 46
[DBG]  Update the agent path 149 | Original local length: 5 | New local length: 4
[DBG]  agent 149 t=0 => decoded (sx,sy)=(2,2) => global_id=408
[DBG]  agent 149 t=1 => decoded (sx,sy)=(1,2) => global_id=376
[DBG]  agent 149 t=2 => decoded (sx,sy)=(1,1) => global_id=375
[DBG]  agent 149 t=3 => decoded (sx,sy)=(0,1) => global_id=343
[DBG]  Complete path of agent 149:
[DBG]    Original: 603 571 539 507 506 505 473 441 440 408 408 376 375 343 311 279 247 215 183 151 119 118 86 85 84 83 82 50 49 48 47 
[DBG]    New:     603 571 539 507 506 505 473 441 440 408 376 375 343 311 279 247 215 183 151 119 118 86 85 84 83 82 50 49 48 47 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 603 571 539 507 506 505 473 441 440 
[DBG]    Local path (in submap): 408 376 375 343 311 
[DBG]    Suffix (out of submap): 279 247 215 183 151 119 118 86 85 84 83 82 50 49 48 47 
[DBG]  Original agent path length 149 je: 31
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 7: 603, 571, 539, 507, 506, 505, 473, 441, 440, 408, 376, 375, 343, 311, 279, 247, 215, 183, 151, 119, 118, 86, 85, 84, 83, 82, 50, 49, 48, 47, 
[DBG]  Path for agent 149 updated, resulting length: 30
[DBG]  Paths successfully updated.
[DBG]  (LNS.cpp) New path for agent 31: 
[DBG]  432, 400, 401, 402, 403, 404, 405, 406, 407, 375, 343, 344, 312, 313, 281, 249, 217, 185, 153, 121, 89, 
[DBG]  (LNS.cpp) New path for agent 43: 
[DBG]  414, 413, 381, 380, 379, 378, 377, 409, 441, 440, 439, 438, 437, 437, 469, 468, 468, 467, 466, 465, 464, 464, 463, 462, 494, 526, 526, 525, 524, 523, 522, 521, 520, 519, 551, 550, 582, 581, 613, 645, 677, 709, 741, 740, 739, 707, 
[DBG]  (LNS.cpp) New path for agent 45: 
[DBG]  153, 185, 217, 249, 281, 313, 345, 344, 376, 376, 375, 407, 406, 438, 437, 469, 469, 468, 467, 499, 531, 530, 529, 561, 593, 625, 657, 689, 721, 753, 752, 784, 784, 783, 815, 847, 848, 849, 
[DBG]  (LNS.cpp) New path for agent 54: 
[DBG]  464, 464, 432, 433, 401, 402, 403, 404, 405, 406, 407, 408, 409, 441, 473, 505, 506, 538, 570, 571, 
[DBG]  (LNS.cpp) New path for agent 75: 
[DBG]  340, 341, 309, 310, 311, 312, 313, 345, 345, 345, 377, 378, 379, 380, 381, 349, 317, 285, 286, 
[DBG]  (LNS.cpp) New path for agent 92: 
[DBG]  667, 635, 603, 602, 570, 538, 506, 474, 473, 472, 440, 439, 407, 375, 343, 311, 279, 247, 215, 214, 213, 181, 180, 179, 178, 177, 176, 144, 112, 111, 110, 109, 108, 107, 106, 105, 104, 136, 135, 134, 133, 165, 164, 163, 131, 99, 98, 
[DBG]  (LNS.cpp) New path for agent 100: 
[DBG]  287, 319, 318, 317, 349, 381, 380, 379, 378, 377, 409, 441, 440, 439, 438, 470, 469, 468, 468, 467, 466, 498, 530, 529, 561, 593, 625, 625, 657, 656, 655, 687, 719, 751, 783, 815, 847, 879, 878, 877, 909, 941, 973, 1005, 1004, 1003, 
[DBG]  (LNS.cpp) New path for agent 149: 
[DBG]  603, 571, 539, 507, 506, 505, 473, 441, 440, 408, 376, 375, 343, 311, 279, 247, 215, 183, 151, 119, 118, 86, 85, 84, 83, 82, 50, 49, 48, 47, 
[DBG]  component_weights = {0.407066, 0.0660711, 0.0690938, 0.457769}
[DBG]  opSuccess value: 1
[STAT] neighbor.sum_of_costs before recomputation: 259
[STAT] neighbor.old_sum_of_costs before recomputation: 268
[STAT] sum_of_costs before recomputation: 4161
[DBG]  Validate solution immediately after SAT success.
[WARNING] Problem after SAT: Target conflict: agent 2 (len 34) traverses target of agent 54 (len 19) at location 571 at timestep 23
[DBG]  Attempting immediate repair via init_lns because problem occurred after SAT (should be applied only for conflicts...).
[DBG]  Passing 150 agents to init_lns (skip=true).
[DBG]  path_table contents for selected agents (neighbor.agents):
[DBG]    Agent 31 => controlling path length=21
[DBG]    Agent 43 => controlling path length=46
[DBG]    Agent 45 => controlling path length=38
[DBG]    Agent 54 => controlling path length=20
[DBG]    Agent 75 => controlling path length=19
[DBG]    Agent 92 => controlling path length=47
[DBG]    Agent 100 => controlling path length=46
[DBG]    Agent 149 => controlling path length=30
[DBG]  hodnota skip_initial_solution=1
[DBG]  We skip initialSolution => call buildCollisionData()
[DBG]  buildCollisionData() called â€“ skip_initial_solution case.
[DBG]  Agents.size()=150, collision_graph.size()=150
[DBG]  agent 2 => updateCollidingPairs => foundCollision
[DBG]  agent 30 => updateCollidingPairs => foundCollision
[DBG]  agent 45 => updateCollidingPairs => foundCollision
[DBG]  agent 54 => updateCollidingPairs => foundCollision
[DBG]  agent 81 => updateCollidingPairs => foundCollision
[DBG]  agent 100 => updateCollidingPairs => foundCollision
[DBG]  agent 101 => updateCollidingPairs => foundCollision
[DBG]  agent 109 => updateCollidingPairs => foundCollision
[DBG]  agent 133 => updateCollidingPairs => foundCollision
[DBG]  agent 142 => updateCollidingPairs => foundCollision
[DBG]  agent 144 => updateCollidingPairs => foundCollision
[DBG]  agent 148 => updateCollidingPairs => foundCollision
[DBG]  Conflicting agent pairs:
[DBG]  agent 2 is in conflict with agent 54
[DBG]  agent 30 is in conflict with agent 54
[DBG]  agent 45 is in conflict with agent 100
[DBG]  agent 54 is in conflict with agent 101
[DBG]  agent 54 is in conflict with agent 109
[DBG]  agent 54 is in conflict with agent 133
[DBG]  agent 54 is in conflict with agent 142
[DBG]  agent 54 is in conflict with agent 144
[DBG]  agent 81 is in conflict with agent 100
[DBG]  agent 100 is in conflict with agent 148
[DBG]  buildCollisionData() => sum_of_costs=4152, num_of_colliding_pairs=10
[DBG]  buildCollisionData done => sum_of_costs=4152, num_of_colliding_pairs=10
[DBG]  sum_of_cost hodnota: 4152
[DBG]  After skip/init build => iteration_stats.back(): sum_of_costs=4152, collisions=10
[DEBUG] Using default neighbor generation strategy for conflicts: 1
	InitLNS(PP): runtime = 0.00533496, iterations = 2, colliding pairs = 0, initial colliding pairs = 10, solution cost = 4152, initial solution cost = 4152, failed iterations = 0
[DBG]  init_lns->sum_of_costs after init_lns->run: 4152
[DBG]  sum_of_costs after assignment from init_lns->run: 4152
[DBG]  Recomputing sum_of_cost by dividing neighbor.sum_of_costs and neighbor.old_sum_of_costs
[STAT] sum_of_costs after recomputation: 4152
[STAT] Iteration 186
[DBG]  Using SAT operator (destroy+repair SAT).
[DBG]  ====================
[DBG]  SAT destroy operator called.
[DBG]  SAT heuristic: 2
[DBG]  key_agent_id: 5
[DBG]  key_agent_id global path length: 30
[DBG]  Submap content (global positions):
[DBG]  175 176 177 178 179 
[DBG]  207 208 209 210 211 
[DBG]  239 240 241 242 243 
[DBG]  271 272 273 274 275 
[DBG]  303 304 305 306 307 
[DBG]  Map content with agents and obstacles:
[DBG]  X . . . . 
[DBG]  . . . . X 
[DBG]  . . A . . 
[DBG]  A X . . A 
[DBG]  . A X A X 
[DBG]  content of the map structure that we pass to the SAT solver:
[DBG]  -1  1  1  1  1  
[DBG]  1  1  1  1  -1  
[DBG]  1  1  1  1  1  
[DBG]  1  -1  1  1  1  
[DBG]  1  1  -1  1  -1  
[DBG]  Identifying agents in a submap for rescheduling (when key_agent is there at the time 11):
[DBG]  Agent 5 found intervals in the sub-map:
[DBG]   [8..14]
[DBG]  Agent 5 (interval in submap: [8..14]) contains time 11, added to replan.
[DBG]  Agent 22 found intervals in the sub-map:
[DBG]   [10..11]
[DBG]  Agent 22 (interval in submap: [10..11]) contains time 11, added to replan.
[DBG]  Agent 31 found intervals in the sub-map:
[DBG]  
[DBG]  Agent 31 is not in sub-map at time 11 (intervals: 
[DBG]  )
[DBG]  Agent 33 found intervals in the sub-map:
[DBG]  
[DBG]  Agent 33 is not in sub-map at time 11 (intervals: 
[DBG]  )
[DBG]  Agent 36 found intervals in the sub-map:
[DBG]   [9..11]
[DBG]  Agent 36 (interval in submap: [9..11]) contains time 11, added to replan.
[DBG]  Agent 45 found intervals in the sub-map:
[DBG]  
[DBG]  Agent 45 is not in sub-map at time 11 (intervals: 
[DBG]  )
[DBG]  Agent 66 found intervals in the sub-map:
[DBG]  
[DBG]  Agent 66 is not in sub-map at time 11 (intervals: 
[DBG]  )
[DBG]  Agent 83 found intervals in the sub-map:
[DBG]   [7..12]
[DBG]  Agent 83 (interval in submap: [7..12]) contains time 11, added to replan.
[DBG]  Agent 113 found intervals in the sub-map:
[DBG]   [11..16]
[DBG]  Agent 113 (interval in submap: [11..16]) contains time 11, added to replan.
[DBG]  Agent 131 found intervals in the sub-map:
[DBG]  
[DBG]  Agent 131 is not in sub-map at time 11 (intervals: 
[DBG]  )
[DBG]  Agent 5 | Start (global): 241 -> (local): (2, 2) at time 11 | Goal (global): 207 -> (local): (1, 0) at time 14
[DBG]  Agent 22 | Start (global): 304 -> (local): (4, 1) at time 11 | Goal (global): 304 -> (local): (4, 1) at time 11
[DBG]  Agent 36 | Start (global): 275 -> (local): (3, 4) at time 11 | Goal (global): 275 -> (local): (3, 4) at time 11
[DBG]  Agent 83 | Start (global): 271 -> (local): (3, 0) at time 11 | Goal (global): 303 -> (local): (4, 0) at time 12
[DBG]  Agent 113 | Start (global): 306 -> (local): (4, 3) at time 11 | Goal (global): 179 -> (local): (0, 4) at time 16
[DBG]  [REPAIR] SAT destroy operator called.
[DBG]  [REPAIR] SAT operator â€“ launching subproblem FOR OPTIMIZATION.
[DBG]  Creating local paths (sx, sy) in the submap for T_sync = 11
[DBG]    Agent 5 (global paths from T=11 to 14) has local path: (2,2) (2,1) (1,1) (1,0) 
[DBG]    Agent 22 (global paths from T=11 to 11) has local path: (4,1) 
[DBG]    Agent 36 (global paths from T=11 to 11) has local path: (3,4) 
[DBG]    Agent 83 (global paths from T=11 to 12) has local path: (3,0) (4,0) 
[DBG]    Agent 113 (global paths from T=11 to 16) has local path: (4,3) (3,3) (2,3) (1,3) (0,3) (0,4) 
[DBG]  Checking input data for SAT solver:
[DBG]    - Number of agents to replan: 5
[DBG]  Agent 5 has the original local path length: 4 => Start (2,2), Goal (1,0)
[DBG]  Agent 22 has the original local path length: 1 => Start (4,1), Goal (4,1)
[DBG]  Agent 36 has the original local path length: 1 => Start (3,4), Goal (3,4)
[DBG]  Agent 83 has the original local path length: 2 => Start (3,0), Goal (4,0)
[DBG]  Agent 113 has the original local path length: 6 => Start (4,3), Goal (0,4)
[DBG]  Start position: (2, 2), (4, 1), (3, 4), (3, 0), (4, 3), 
[DBG]  Goal position: (1, 0), (4, 1), (3, 4), (4, 0), (0, 4), 
[DBG]  SAT instance and solver created.
Currently solving
Instance name: scen
Map name: map
Encoding used: disappear_at_goal
SAT solver used: Kissat
Optimizing function: sum of costs
Number of agents: 5
Mks LB: 6
SoC LB: 14
Delta: 0
Remaining time: 300000 [ms]

Vertex conflict! Agents 0, 1, timestep 4, location 0
Swapping conflict! Agents 0, 1, timestep 4, edge (0,0)
Vertex conflict! Agents 0, 1, timestep 5, location 0
Vertex conflict! Agents 0, 2, timestep 4, location 0
Swapping conflict! Agents 0, 2, timestep 4, edge (0,0)
Vertex conflict! Agents 0, 2, timestep 5, location 0
Vertex conflict! Agents 0, 3, timestep 4, location 0
Swapping conflict! Agents 0, 3, timestep 4, edge (0,0)
Vertex conflict! Agents 0, 3, timestep 5, location 0
Vertex conflict! Agents 1, 2, timestep 1, location 0
Swapping conflict! Agents 1, 2, timestep 1, edge (0,0)
Vertex conflict! Agents 1, 2, timestep 2, location 0
Swapping conflict! Agents 1, 2, timestep 2, edge (0,0)
Vertex conflict! Agents 1, 2, timestep 3, location 0
Swapping conflict! Agents 1, 2, timestep 3, edge (0,0)
Vertex conflict! Agents 1, 2, timestep 4, location 0
Swapping conflict! Agents 1, 2, timestep 4, edge (0,0)
Vertex conflict! Agents 1, 2, timestep 5, location 0
Vertex conflict! Agents 1, 3, timestep 2, location 0
Swapping conflict! Agents 1, 3, timestep 2, edge (0,0)
Vertex conflict! Agents 1, 3, timestep 3, location 0
Swapping conflict! Agents 1, 3, timestep 3, edge (0,0)
Vertex conflict! Agents 1, 3, timestep 4, location 0
Swapping conflict! Agents 1, 3, timestep 4, edge (0,0)
Vertex conflict! Agents 1, 3, timestep 5, location 0
Vertex conflict! Agents 2, 3, timestep 2, location 0
Swapping conflict! Agents 2, 3, timestep 2, edge (0,0)
Vertex conflict! Agents 2, 3, timestep 3, location 0
Swapping conflict! Agents 2, 3, timestep 3, edge (0,0)
Vertex conflict! Agents 2, 3, timestep 4, location 0
Swapping conflict! Agents 2, 3, timestep 4, edge (0,0)
Vertex conflict! Agents 2, 3, timestep 5, location 0
Found plan [agents = 5] [timesteps = 6]
Agent #0 : 10 9 8 4 0 0 
Agent #1 : 18 0 0 0 0 0 
Agent #2 : 16 0 0 0 0 0 
Agent #3 : 13 17 0 0 0 0 
Agent #4 : 19 15 11 7 2 3 

[STAT] Solver returned: 0
[DBG]  Agent (index) 5 | New local path (submap idx):
[DBG]  10 9 8 4 
[DBG]  Agent (index) 22 | New local path (submap idx):
[DBG]  18 
[DBG]  Agent (index) 36 | New local path (submap idx):
[DBG]  16 
[DBG]  Agent (index) 83 | New local path (submap idx):
[DBG]  13 17 
[DBG]  Agent (index) 113 | New local path (submap idx):
[DBG]  19 15 11 7 2 3 
[DBG]  Update the agent path 5 | Original local length: 4 | New local length: 4
[DBG]  agent 5 t=0 => decoded (sx,sy)=(2,2) => global_id=241
[DBG]  agent 5 t=1 => decoded (sx,sy)=(2,1) => global_id=240
[DBG]  agent 5 t=2 => decoded (sx,sy)=(2,0) => global_id=239
[DBG]  agent 5 t=3 => decoded (sx,sy)=(1,0) => global_id=207
[DBG]  Complete path of agent 5:
[DBG]    Original: 281 313 312 311 279 278 277 276 275 274 242 241 240 208 207 206 205 205 237 269 268 300 299 298 297 296 295 294 293 261 
[DBG]    New:     281 313 312 311 279 278 277 276 275 274 242 241 240 239 207 206 205 205 237 269 268 300 299 298 297 296 295 294 293 261 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 281 313 312 311 279 278 277 276 275 274 242 
[DBG]    Local path (in submap): 241 240 239 207 
[DBG]    Suffix (out of submap): 206 205 205 237 269 268 300 299 298 297 296 295 294 293 261 
[DBG]  Original agent path length 5 je: 30
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 0: 281, 313, 312, 311, 279, 278, 277, 276, 275, 274, 242, 241, 240, 239, 207, 206, 205, 205, 237, 269, 268, 300, 299, 298, 297, 296, 295, 294, 293, 261, 
[DBG]  Path for agent 5 updated, resulting length: 30
[DBG]  Update the agent path 22 | Original local length: 1 | New local length: 1
[DBG]  agent 22 t=0 => decoded (sx,sy)=(4,1) => global_id=304
[DBG]  Complete path of agent 22:
[DBG]    Original: 329 297 298 299 300 268 268 300 301 302 303 304 336 337 338 338 339 
[DBG]    New:     329 297 298 299 300 268 268 300 301 302 303 304 336 337 338 338 339 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 329 297 298 299 300 268 268 300 301 302 303 
[DBG]    Local path (in submap): 304 
[DBG]    Suffix (out of submap): 336 337 338 338 339 
[DBG]  Original agent path length 22 je: 17
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 1: 329, 297, 298, 299, 300, 268, 268, 300, 301, 302, 303, 304, 336, 337, 338, 338, 339, 
[DBG]  Path for agent 22 updated, resulting length: 17
[DBG]  Update the agent path 36 | Original local length: 1 | New local length: 1
[DBG]  agent 36 t=0 => decoded (sx,sy)=(3,4) => global_id=275
[DBG]  Complete path of agent 36:
[DBG]    Original: 431 431 431 432 433 401 369 337 338 306 274 275 276 308 340 339 371 
[DBG]    New:     431 431 431 432 433 401 369 337 338 306 274 275 276 308 340 339 371 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 431 431 431 432 433 401 369 337 338 306 274 
[DBG]    Local path (in submap): 275 
[DBG]    Suffix (out of submap): 276 308 340 339 371 
[DBG]  Original agent path length 36 je: 17
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 2: 431, 431, 431, 432, 433, 401, 369, 337, 338, 306, 274, 275, 276, 308, 340, 339, 371, 
[DBG]  Path for agent 36 updated, resulting length: 17
[DBG]  Update the agent path 83 | Original local length: 2 | New local length: 2
[DBG]  agent 83 t=0 => decoded (sx,sy)=(3,0) => global_id=271
[DBG]  agent 83 t=1 => decoded (sx,sy)=(4,0) => global_id=303
[DBG]  Complete path of agent 83:
[DBG]    Original: 18 50 49 81 113 112 144 176 208 207 239 271 303 335 367 366 398 430 462 494 526 558 590 622 623 655 687 719 751 752 784 783 815 847 879 880 912 944 976 1008 1009 
[DBG]    New:     18 50 49 81 113 112 144 176 208 207 239 271 303 335 367 366 398 430 462 494 526 558 590 622 623 655 687 719 751 752 784 783 815 847 879 880 912 944 976 1008 1009 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 18 50 49 81 113 112 144 176 208 207 239 
[DBG]    Local path (in submap): 271 303 
[DBG]    Suffix (out of submap): 335 367 366 398 430 462 494 526 558 590 622 623 655 687 719 751 752 784 783 815 847 879 880 912 944 976 1008 1009 
[DBG]  Original agent path length 83 je: 41
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 3: 18, 50, 49, 81, 113, 112, 144, 176, 208, 207, 239, 271, 303, 335, 367, 366, 398, 430, 462, 494, 526, 558, 590, 622, 623, 655, 687, 719, 751, 752, 784, 783, 815, 847, 879, 880, 912, 944, 976, 1008, 1009, 
[DBG]  Path for agent 83 updated, resulting length: 41
[DBG]  Update the agent path 113 | Original local length: 6 | New local length: 6
[DBG]  agent 113 t=0 => decoded (sx,sy)=(4,3) => global_id=306
[DBG]  agent 113 t=1 => decoded (sx,sy)=(3,3) => global_id=274
[DBG]  agent 113 t=2 => decoded (sx,sy)=(2,3) => global_id=242
[DBG]  agent 113 t=3 => decoded (sx,sy)=(1,3) => global_id=210
[DBG]  agent 113 t=4 => decoded (sx,sy)=(0,3) => global_id=178
[DBG]  agent 113 t=5 => decoded (sx,sy)=(0,4) => global_id=179
[DBG]  Complete path of agent 113:
[DBG]    Original: 529 530 498 466 465 433 401 401 369 337 338 306 274 242 210 178 179 180 148 149 150 151 119 120 121 122 123 124 156 188 220 221 222 
[DBG]    New:     529 530 498 466 465 433 401 401 369 337 338 306 274 242 210 178 179 180 148 149 150 151 119 120 121 122 123 124 156 188 220 221 222 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 529 530 498 466 465 433 401 401 369 337 338 
[DBG]    Local path (in submap): 306 274 242 210 178 179 
[DBG]    Suffix (out of submap): 180 148 149 150 151 119 120 121 122 123 124 156 188 220 221 222 
[DBG]  Original agent path length 113 je: 33
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 4: 529, 530, 498, 466, 465, 433, 401, 401, 369, 337, 338, 306, 274, 242, 210, 178, 179, 180, 148, 149, 150, 151, 119, 120, 121, 122, 123, 124, 156, 188, 220, 221, 222, 
[DBG]  Path for agent 113 updated, resulting length: 33
[DBG]  Paths successfully updated.
[DBG]  (LNS.cpp) New path for agent 5: 
[DBG]  281, 313, 312, 311, 279, 278, 277, 276, 275, 274, 242, 241, 240, 239, 207, 206, 205, 205, 237, 269, 268, 300, 299, 298, 297, 296, 295, 294, 293, 261, 
[DBG]  (LNS.cpp) New path for agent 22: 
[DBG]  329, 297, 298, 299, 300, 268, 268, 300, 301, 302, 303, 304, 336, 337, 338, 338, 339, 
[DBG]  (LNS.cpp) New path for agent 36: 
[DBG]  431, 431, 431, 432, 433, 401, 369, 337, 338, 306, 274, 275, 276, 308, 340, 339, 371, 
[DBG]  (LNS.cpp) New path for agent 83: 
[DBG]  18, 50, 49, 81, 113, 112, 144, 176, 208, 207, 239, 271, 303, 335, 367, 366, 398, 430, 462, 494, 526, 558, 590, 622, 623, 655, 687, 719, 751, 752, 784, 783, 815, 847, 879, 880, 912, 944, 976, 1008, 1009, 
[DBG]  (LNS.cpp) New path for agent 113: 
[DBG]  529, 530, 498, 466, 465, 433, 401, 401, 369, 337, 338, 306, 274, 242, 210, 178, 179, 180, 148, 149, 150, 151, 119, 120, 121, 122, 123, 124, 156, 188, 220, 221, 222, 
[DBG]  component_weights = {0.411951, 0.0655267, 0.0685245, 0.453998}
[DBG]  opSuccess value: 1
[STAT] neighbor.sum_of_costs before recomputation: 133
[STAT] neighbor.old_sum_of_costs before recomputation: 133
[STAT] sum_of_costs before recomputation: 4152
[DBG]  Validate solution immediately after SAT success.
[DBG]  No problems after SAT replan.
[DBG]  Recomputing sum_of_cost by dividing neighbor.sum_of_costs and neighbor.old_sum_of_costs
[STAT] sum_of_costs after recomputation: 4152
[STAT] Iteration 187
[DBG]  Using SAT operator (destroy+repair SAT).
[DBG]  ====================
[DBG]  SAT destroy operator called.
[DBG]  SAT heuristic: 2
[DBG]  key_agent_id: 136
[DBG]  key_agent_id global path length: 12
[DBG]  Submap content (global positions):
[DBG]  245 246 247 248 249 
[DBG]  277 278 279 280 281 
[DBG]  309 310 311 312 313 
[DBG]  341 342 343 344 345 
[DBG]  373 374 375 376 377 
[DBG]  Map content with agents and obstacles:
[DBG]  X X . . . 
[DBG]  A A . X A 
[DBG]  . . A . A 
[DBG]  . X . . A 
[DBG]  . X . . A 
[DBG]  content of the map structure that we pass to the SAT solver:
[DBG]  -1  -1  1  1  1  
[DBG]  1  1  1  -1  1  
[DBG]  1  1  1  1  1  
[DBG]  1  -1  1  1  1  
[DBG]  1  -1  1  1  1  
[DBG]  Identifying agents in a submap for rescheduling (when key_agent is there at the time 6):
[DBG]  Agent 5 found intervals in the sub-map:
[DBG]   [0..6]
[DBG]  Agent 5 (interval in submap: [0..6]) contains time 6, added to replan.
[DBG]  Agent 43 found intervals in the sub-map:
[DBG]   [6..6]
[DBG]  Agent 43 (interval in submap: [6..6]) contains time 6, added to replan.
[DBG]  Agent 45 found intervals in the sub-map:
[DBG]   [3..8]
[DBG]  Agent 45 (interval in submap: [3..8]) contains time 6, added to replan.
[DBG]  Agent 57 found intervals in the sub-map:
[DBG]   [4..7]
[DBG]  Agent 57 (interval in submap: [4..7]) contains time 6, added to replan.
[DBG]  Agent 75 found intervals in the sub-map:
[DBG]   [1..10]
[DBG]  Agent 75 (interval in submap: [1..10]) contains time 6, added to replan.
[DBG]  Agent 136 found intervals in the sub-map:
[DBG]   [3..8]
[DBG]  Agent 136 (interval in submap: [3..8]) contains time 6, added to replan.
[DBG]  Agent 144 found intervals in the sub-map:
[DBG]   [4..11]
[DBG]  Agent 144 (interval in submap: [4..11]) contains time 6, added to replan.
[DBG]  Agent 5 | Start (global): 277 -> (local): (1, 0) at time 6 | Goal (global): 277 -> (local): (1, 0) at time 6
[DBG]  Agent 43 | Start (global): 377 -> (local): (4, 4) at time 6 | Goal (global): 377 -> (local): (4, 4) at time 6
[DBG]  Agent 45 | Start (global): 345 -> (local): (3, 4) at time 6 | Goal (global): 376 -> (local): (4, 3) at time 8
[DBG]  Agent 57 | Start (global): 278 -> (local): (1, 1) at time 6 | Goal (global): 277 -> (local): (1, 0) at time 7
[DBG]  Agent 75 | Start (global): 313 -> (local): (2, 4) at time 6 | Goal (global): 377 -> (local): (4, 4) at time 10
[DBG]  Agent 136 | Start (global): 311 -> (local): (2, 2) at time 6 | Goal (global): 247 -> (local): (0, 2) at time 8
[DBG]  Agent 144 | Start (global): 281 -> (local): (1, 4) at time 6 | Goal (global): 377 -> (local): (4, 4) at time 11
[DBG]  [REPAIR] SAT destroy operator called.
[DBG]  [REPAIR] SAT operator â€“ launching subproblem FOR OPTIMIZATION.
[DBG]  Creating local paths (sx, sy) in the submap for T_sync = 6
[DBG]    Agent 5 (global paths from T=6 to 6) has local path: (1,0) 
[DBG]    Agent 43 (global paths from T=6 to 6) has local path: (4,4) 
[DBG]    Agent 45 (global paths from T=6 to 8) has local path: (3,4) (3,3) (4,3) 
[DBG]    Agent 57 (global paths from T=6 to 7) has local path: (1,1) (1,0) 
[DBG]    Agent 75 (global paths from T=6 to 10) has local path: (2,4) (3,4) (3,4) (3,4) (4,4) 
[DBG]    Agent 136 (global paths from T=6 to 8) has local path: (2,2) (1,2) (0,2) 
[DBG]    Agent 144 (global paths from T=6 to 11) has local path: (1,4) (2,4) (2,4) (2,4) (3,4) (4,4) 
[DBG]  Checking input data for SAT solver:
[DBG]    - Number of agents to replan: 7
[DBG]  Agent 5 has the original local path length: 1 => Start (1,0), Goal (1,0)
[DBG]  Agent 43 has the original local path length: 1 => Start (4,4), Goal (4,4)
[DBG]  Agent 45 has the original local path length: 3 => Start (3,4), Goal (4,3)
[DBG]  Agent 57 has the original local path length: 2 => Start (1,1), Goal (1,0)
[DBG]  Agent 75 has the original local path length: 5 => Start (2,4), Goal (4,4)
[DBG]  Agent 136 has the original local path length: 3 => Start (2,2), Goal (0,2)
[DBG]  Agent 144 has the original local path length: 6 => Start (1,4), Goal (4,4)
[DBG]  Start position: (1, 0), (4, 4), (3, 4), (1, 1), (2, 4), (2, 2), (1, 4), 
[DBG]  Goal position: (1, 0), (4, 4), (4, 3), (1, 0), (4, 4), (0, 2), (4, 4), 
[DBG]  SAT instance and solver created.
Currently solving
Instance name: scen
Map name: map
Encoding used: disappear_at_goal
SAT solver used: Kissat
Optimizing function: sum of costs
Number of agents: 7
Mks LB: 4
SoC LB: 17
Delta: 0
Remaining time: 300000 [ms]

Vertex conflict! Agents 0, 1, timestep 1, location 0
Swapping conflict! Agents 0, 1, timestep 1, edge (0,0)
Vertex conflict! Agents 0, 1, timestep 2, location 0
Swapping conflict! Agents 0, 1, timestep 2, edge (0,0)
Vertex conflict! Agents 0, 1, timestep 3, location 0
Vertex conflict! Agents 0, 2, timestep 3, location 0
Vertex conflict! Agents 0, 3, timestep 2, location 0
Swapping conflict! Agents 0, 3, timestep 2, edge (0,0)
Vertex conflict! Agents 0, 3, timestep 3, location 0
Vertex conflict! Agents 0, 4, timestep 3, location 0
Vertex conflict! Agents 0, 5, timestep 2, location 0
Swapping conflict! Agents 0, 5, timestep 2, edge (0,0)
Vertex conflict! Agents 0, 5, timestep 3, location 0
Vertex conflict! Agents 1, 2, timestep 3, location 0
Vertex conflict! Agents 1, 3, timestep 2, location 0
Swapping conflict! Agents 1, 3, timestep 2, edge (0,0)
Vertex conflict! Agents 1, 3, timestep 3, location 0
Vertex conflict! Agents 1, 4, timestep 3, location 0
Vertex conflict! Agents 1, 5, timestep 2, location 0
Swapping conflict! Agents 1, 5, timestep 2, edge (0,0)
Vertex conflict! Agents 1, 5, timestep 3, location 0
Vertex conflict! Agents 2, 3, timestep 3, location 0
Vertex conflict! Agents 2, 4, timestep 3, location 0
Vertex conflict! Agents 2, 5, timestep 3, location 0
Vertex conflict! Agents 3, 4, timestep 3, location 0
Vertex conflict! Agents 3, 5, timestep 2, location 0
Swapping conflict! Agents 3, 5, timestep 2, edge (0,0)
Vertex conflict! Agents 3, 5, timestep 3, location 0
Vertex conflict! Agents 4, 5, timestep 3, location 0
Found plan [agents = 7] [timesteps = 4]
Agent #0 : 3 0 0 0 
Agent #1 : 19 0 0 0 
Agent #2 : 15 19 18 0 
Agent #3 : 4 3 0 0 
Agent #4 : 11 15 19 0 
Agent #5 : 9 5 0 0 
Agent #6 : 6 11 15 19 

[STAT] Solver returned: 0
[DBG]  Agent (index) 5 | New local path (submap idx):
[DBG]  3 
[DBG]  Agent (index) 43 | New local path (submap idx):
[DBG]  19 
[DBG]  Agent (index) 45 | New local path (submap idx):
[DBG]  15 19 18 
[DBG]  Agent (index) 57 | New local path (submap idx):
[DBG]  4 3 
[DBG]  Agent (index) 75 | New local path (submap idx):
[DBG]  11 15 19 
[DBG]  Agent (index) 136 | New local path (submap idx):
[DBG]  9 5 0 
[DBG]  Agent (index) 144 | New local path (submap idx):
[DBG]  6 11 15 19 
[DBG]  Update the agent path 5 | Original local length: 1 | New local length: 1
[DBG]  agent 5 t=0 => decoded (sx,sy)=(1,0) => global_id=277
[DBG]  Complete path of agent 5:
[DBG]    Original: 281 313 312 311 279 278 277 276 275 274 242 241 240 239 207 206 205 205 237 269 268 300 299 298 297 296 295 294 293 261 
[DBG]    New:     281 313 312 311 279 278 277 276 275 274 242 241 240 239 207 206 205 205 237 269 268 300 299 298 297 296 295 294 293 261 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 281 313 312 311 279 278 
[DBG]    Local path (in submap): 277 
[DBG]    Suffix (out of submap): 276 275 274 242 241 240 239 207 206 205 205 237 269 268 300 299 298 297 296 295 294 293 261 
[DBG]  Original agent path length 5 je: 30
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 0: 281, 313, 312, 311, 279, 278, 277, 276, 275, 274, 242, 241, 240, 239, 207, 206, 205, 205, 237, 269, 268, 300, 299, 298, 297, 296, 295, 294, 293, 261, 
[DBG]  Path for agent 5 updated, resulting length: 30
[DBG]  Update the agent path 43 | Original local length: 1 | New local length: 1
[DBG]  agent 43 t=0 => decoded (sx,sy)=(4,4) => global_id=377
[DBG]  Complete path of agent 43:
[DBG]    Original: 414 413 381 380 379 378 377 409 441 440 439 438 437 437 469 468 468 467 466 465 464 464 463 462 494 526 526 525 524 523 522 521 520 519 551 550 582 581 613 645 677 709 741 740 739 707 
[DBG]    New:     414 413 381 380 379 378 377 409 441 440 439 438 437 437 469 468 468 467 466 465 464 464 463 462 494 526 526 525 524 523 522 521 520 519 551 550 582 581 613 645 677 709 741 740 739 707 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 414 413 381 380 379 378 
[DBG]    Local path (in submap): 377 
[DBG]    Suffix (out of submap): 409 441 440 439 438 437 437 469 468 468 467 466 465 464 464 463 462 494 526 526 525 524 523 522 521 520 519 551 550 582 581 613 645 677 709 741 740 739 707 
[DBG]  Original agent path length 43 je: 46
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 1: 414, 413, 381, 380, 379, 378, 377, 409, 441, 440, 439, 438, 437, 437, 469, 468, 468, 467, 466, 465, 464, 464, 463, 462, 494, 526, 526, 525, 524, 523, 522, 521, 520, 519, 551, 550, 582, 581, 613, 645, 677, 709, 741, 740, 739, 707, 
[DBG]  Path for agent 43 updated, resulting length: 46
[DBG]  Update the agent path 45 | Original local length: 3 | New local length: 3
[DBG]  agent 45 t=0 => decoded (sx,sy)=(3,4) => global_id=345
[DBG]  agent 45 t=1 => decoded (sx,sy)=(4,4) => global_id=377
[DBG]  agent 45 t=2 => decoded (sx,sy)=(4,3) => global_id=376
[DBG]  Complete path of agent 45:
[DBG]    Original: 153 185 217 249 281 313 345 344 376 408 408 440 472 504 503 502 501 469 468 468 467 466 498 530 529 561 593 625 657 689 688 720 719 751 783 815 847 848 849 
[DBG]    New:     153 185 217 249 281 313 345 377 376 408 408 440 472 504 503 502 501 469 468 468 467 466 498 530 529 561 593 625 657 689 688 720 719 751 783 815 847 848 849 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 153 185 217 249 281 313 
[DBG]    Local path (in submap): 345 377 376 
[DBG]    Suffix (out of submap): 408 408 440 472 504 503 502 501 469 468 468 467 466 498 530 529 561 593 625 657 689 688 720 719 751 783 815 847 848 849 
[DBG]  Original agent path length 45 je: 39
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 2: 153, 185, 217, 249, 281, 313, 345, 377, 376, 408, 408, 440, 472, 504, 503, 502, 501, 469, 468, 468, 467, 466, 498, 530, 529, 561, 593, 625, 657, 689, 688, 720, 719, 751, 783, 815, 847, 848, 849, 
[DBG]  Path for agent 45 updated, resulting length: 39
[DBG]  Update the agent path 57 | Original local length: 2 | New local length: 2
[DBG]  agent 57 t=0 => decoded (sx,sy)=(1,1) => global_id=278
[DBG]  agent 57 t=1 => decoded (sx,sy)=(1,0) => global_id=277
[DBG]  Complete path of agent 57:
[DBG]    Original: 185 184 183 215 247 279 278 277 276 308 340 339 371 371 403 435 467 466 498 530 529 561 593 625 657 689 688 720 752 784 783 815 847 879 880 912 913 912 944 976 977 
[DBG]    New:     185 184 183 215 247 279 278 277 276 308 340 339 371 371 403 435 467 466 498 530 529 561 593 625 657 689 688 720 752 784 783 815 847 879 880 912 913 912 944 976 977 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 185 184 183 215 247 279 
[DBG]    Local path (in submap): 278 277 
[DBG]    Suffix (out of submap): 276 308 340 339 371 371 403 435 467 466 498 530 529 561 593 625 657 689 688 720 752 784 783 815 847 879 880 912 913 912 944 976 977 
[DBG]  Original agent path length 57 je: 41
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 3: 185, 184, 183, 215, 247, 279, 278, 277, 276, 308, 340, 339, 371, 371, 403, 435, 467, 466, 498, 530, 529, 561, 593, 625, 657, 689, 688, 720, 752, 784, 783, 815, 847, 879, 880, 912, 913, 912, 944, 976, 977, 
[DBG]  Path for agent 57 updated, resulting length: 41
[DBG]  Update the agent path 75 | Original local length: 5 | New local length: 3
[DBG]  agent 75 t=0 => decoded (sx,sy)=(2,4) => global_id=313
[DBG]  agent 75 t=1 => decoded (sx,sy)=(3,4) => global_id=345
[DBG]  agent 75 t=2 => decoded (sx,sy)=(4,4) => global_id=377
[DBG]  Complete path of agent 75:
[DBG]    Original: 340 341 309 310 311 312 313 345 345 345 377 378 379 380 381 349 317 285 286 
[DBG]    New:     340 341 309 310 311 312 313 345 377 378 379 380 381 349 317 285 286 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 340 341 309 310 311 312 
[DBG]    Local path (in submap): 313 345 377 378 379 
[DBG]    Suffix (out of submap): 380 381 349 317 285 286 
[DBG]  Original agent path length 75 je: 19
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 4: 340, 341, 309, 310, 311, 312, 313, 345, 377, 378, 379, 380, 381, 349, 317, 285, 286, 
[DBG]  Path for agent 75 updated, resulting length: 17
[DBG]  Update the agent path 136 | Original local length: 3 | New local length: 3
[DBG]  agent 136 t=0 => decoded (sx,sy)=(2,2) => global_id=311
[DBG]  agent 136 t=1 => decoded (sx,sy)=(1,2) => global_id=279
[DBG]  agent 136 t=2 => decoded (sx,sy)=(0,2) => global_id=247
[DBG]  Complete path of agent 136:
[DBG]    Original: 440 439 407 375 375 343 311 279 247 215 216 184 
[DBG]    New:     440 439 407 375 375 343 311 279 247 215 216 184 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 440 439 407 375 375 343 
[DBG]    Local path (in submap): 311 279 247 
[DBG]    Suffix (out of submap): 215 216 184 
[DBG]  Original agent path length 136 je: 12
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 5: 440, 439, 407, 375, 375, 343, 311, 279, 247, 215, 216, 184, 
[DBG]  Path for agent 136 updated, resulting length: 12
[DBG]  Update the agent path 144 | Original local length: 6 | New local length: 4
[DBG]  agent 144 t=0 => decoded (sx,sy)=(1,4) => global_id=281
[DBG]  agent 144 t=1 => decoded (sx,sy)=(2,4) => global_id=313
[DBG]  agent 144 t=2 => decoded (sx,sy)=(3,4) => global_id=345
[DBG]  agent 144 t=3 => decoded (sx,sy)=(4,4) => global_id=377
[DBG]  Complete path of agent 144:
[DBG]    Original: 121 153 185 217 249 281 281 313 313 313 345 377 409 441 473 474 506 538 539 539 538 570 602 601 600 599 631 
[DBG]    New:     121 153 185 217 249 281 281 313 345 377 409 441 473 474 506 538 539 539 538 570 602 601 600 599 631 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 121 153 185 217 249 281 
[DBG]    Local path (in submap): 281 313 345 377 409 441 
[DBG]    Suffix (out of submap): 473 474 506 538 539 539 538 570 602 601 600 599 631 
[DBG]  Original agent path length 144 je: 27
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 6: 121, 153, 185, 217, 249, 281, 281, 313, 345, 377, 409, 441, 473, 474, 506, 538, 539, 539, 538, 570, 602, 601, 600, 599, 631, 
[DBG]  Path for agent 144 updated, resulting length: 25
[DBG]  Paths successfully updated.
[DBG]  (LNS.cpp) New path for agent 5: 
[DBG]  281, 313, 312, 311, 279, 278, 277, 276, 275, 274, 242, 241, 240, 239, 207, 206, 205, 205, 237, 269, 268, 300, 299, 298, 297, 296, 295, 294, 293, 261, 
[DBG]  (LNS.cpp) New path for agent 43: 
[DBG]  414, 413, 381, 380, 379, 378, 377, 409, 441, 440, 439, 438, 437, 437, 469, 468, 468, 467, 466, 465, 464, 464, 463, 462, 494, 526, 526, 525, 524, 523, 522, 521, 520, 519, 551, 550, 582, 581, 613, 645, 677, 709, 741, 740, 739, 707, 
[DBG]  (LNS.cpp) New path for agent 45: 
[DBG]  153, 185, 217, 249, 281, 313, 345, 377, 376, 408, 408, 440, 472, 504, 503, 502, 501, 469, 468, 468, 467, 466, 498, 530, 529, 561, 593, 625, 657, 689, 688, 720, 719, 751, 783, 815, 847, 848, 849, 
[DBG]  (LNS.cpp) New path for agent 57: 
[DBG]  185, 184, 183, 215, 247, 279, 278, 277, 276, 308, 340, 339, 371, 371, 403, 435, 467, 466, 498, 530, 529, 561, 593, 625, 657, 689, 688, 720, 752, 784, 783, 815, 847, 879, 880, 912, 913, 912, 944, 976, 977, 
[DBG]  (LNS.cpp) New path for agent 75: 
[DBG]  340, 341, 309, 310, 311, 312, 313, 345, 377, 378, 379, 380, 381, 349, 317, 285, 286, 
[DBG]  (LNS.cpp) New path for agent 136: 
[DBG]  440, 439, 407, 375, 375, 343, 311, 279, 247, 215, 216, 184, 
[DBG]  (LNS.cpp) New path for agent 144: 
[DBG]  121, 153, 185, 217, 249, 281, 281, 313, 345, 377, 409, 441, 473, 474, 506, 538, 539, 539, 538, 570, 602, 601, 600, 599, 631, 
[DBG]  component_weights = {0.408133, 0.0649194, 0.0678894, 0.459058}
[DBG]  opSuccess value: 1
[STAT] neighbor.sum_of_costs before recomputation: 203
[STAT] neighbor.old_sum_of_costs before recomputation: 207
[STAT] sum_of_costs before recomputation: 4152
[DBG]  Validate solution immediately after SAT success.
[WARNING] Problem after SAT: Vertex conflict between agents 144 and 46 at location 539 at timestep 17
[DBG]  Attempting immediate repair via init_lns because problem occurred after SAT (should be applied only for conflicts...).
[DBG]  Passing 150 agents to init_lns (skip=true).
[DBG]  path_table contents for selected agents (neighbor.agents):
[DBG]    Agent 5 => controlling path length=30
[DBG]    Agent 43 => controlling path length=46
[DBG]    Agent 45 => controlling path length=39
[DBG]    Agent 57 => controlling path length=41
[DBG]    Agent 75 => controlling path length=17
[DBG]    Agent 136 => controlling path length=12
[DBG]    Agent 144 => controlling path length=25
[DBG]  hodnota skip_initial_solution=1
[DBG]  We skip initialSolution => call buildCollisionData()
[DBG]  buildCollisionData() called â€“ skip_initial_solution case.
[DBG]  Agents.size()=150, collision_graph.size()=150
[DBG]  agent 46 => updateCollidingPairs => foundCollision
[DBG]  agent 58 => updateCollidingPairs => foundCollision
[DBG]  agent 64 => updateCollidingPairs => foundCollision
[DBG]  agent 75 => updateCollidingPairs => foundCollision
[DBG]  agent 91 => updateCollidingPairs => foundCollision
[DBG]  agent 100 => updateCollidingPairs => foundCollision
[DBG]  agent 101 => updateCollidingPairs => foundCollision
[DBG]  agent 109 => updateCollidingPairs => foundCollision
[DBG]  agent 133 => updateCollidingPairs => foundCollision
[DBG]  agent 144 => updateCollidingPairs => foundCollision
[DBG]  Conflicting agent pairs:
[DBG]  agent 46 is in conflict with agent 144
[DBG]  agent 58 is in conflict with agent 144
[DBG]  agent 64 is in conflict with agent 144
[DBG]  agent 75 is in conflict with agent 100
[DBG]  agent 91 is in conflict with agent 144
[DBG]  agent 100 is in conflict with agent 144
[DBG]  agent 101 is in conflict with agent 144
[DBG]  agent 109 is in conflict with agent 144
[DBG]  agent 133 is in conflict with agent 144
[DBG]  buildCollisionData() => sum_of_costs=4148, num_of_colliding_pairs=9
[DBG]  buildCollisionData done => sum_of_costs=4148, num_of_colliding_pairs=9
[DBG]  sum_of_cost hodnota: 4148
[DBG]  After skip/init build => iteration_stats.back(): sum_of_costs=4148, collisions=9
[DEBUG] Using default neighbor generation strategy for conflicts: 2
	InitLNS(PP): runtime = 0.00351287, iterations = 2, colliding pairs = 0, initial colliding pairs = 9, solution cost = 4153, initial solution cost = 4148, failed iterations = 0
[DBG]  init_lns->sum_of_costs after init_lns->run: 4153
[DBG]  sum_of_costs after assignment from init_lns->run: 4153
[DBG]  Recomputing sum_of_cost by dividing neighbor.sum_of_costs and neighbor.old_sum_of_costs
[STAT] sum_of_costs after recomputation: 4153
[STAT] Iteration 188
[DBG]  Using SAT operator (destroy+repair SAT).
[DBG]  ====================
[DBG]  SAT destroy operator called.
[DBG]  SAT heuristic: 2
[DBG]  key_agent_id: 95
[DBG]  key_agent_id global path length: 7
[DBG]  Submap content (global positions):
[DBG]  611 612 613 614 615 
[DBG]  643 644 645 646 647 
[DBG]  675 676 677 678 679 
[DBG]  707 708 709 710 711 
[DBG]  739 740 741 742 743 
[DBG]  Map content with agents and obstacles:
[DBG]  . . . X A 
[DBG]  X . . . . 
[DBG]  . . A . X 
[DBG]  . X . . X 
[DBG]  . . A . X 
[DBG]  content of the map structure that we pass to the SAT solver:
[DBG]  1  1  1  -1  1  
[DBG]  -1  1  1  1  1  
[DBG]  1  1  1  1  -1  
[DBG]  1  -1  1  1  -1  
[DBG]  1  1  1  1  -1  
[DBG]  Identifying agents in a submap for rescheduling (when key_agent is there at the time 1):
[DBG]  Agent 85 found intervals in the sub-map:
[DBG]   [0..2]
[DBG]  Agent 85 (interval in submap: [0..2]) contains time 1, added to replan.
[DBG]  Agent 95 found intervals in the sub-map:
[DBG]   [0..3]
[DBG]  Agent 95 (interval in submap: [0..3]) contains time 1, added to replan.
[DBG]  Agent 99 found intervals in the sub-map:
[DBG]   [0..5] [10..13]
[DBG]  Agent 99 (interval in submap: [0..5]) contains time 1, added to replan.
[DBG]  Agent 85 | Start (global): 741 -> (local): (4, 2) at time 1 | Goal (global): 742 -> (local): (4, 3) at time 2
[DBG]  Agent 95 | Start (global): 677 -> (local): (2, 2) at time 1 | Goal (global): 675 -> (local): (2, 0) at time 3
[DBG]  Agent 99 | Start (global): 615 -> (local): (0, 4) at time 1 | Goal (global): 615 -> (local): (0, 4) at time 5
[DBG]  [REPAIR] SAT destroy operator called.
[DBG]  [REPAIR] SAT operator â€“ launching subproblem FOR OPTIMIZATION.
[DBG]  Creating local paths (sx, sy) in the submap for T_sync = 1
[DBG]    Agent 85 (global paths from T=1 to 2) has local path: (4,2) (4,3) 
[DBG]    Agent 95 (global paths from T=1 to 3) has local path: (2,2) (2,1) (2,0) 
[DBG]    Agent 99 (global paths from T=1 to 5) has local path: (0,4) (0,4) (0,4) (0,4) (0,4) 
[DBG]  Checking input data for SAT solver:
[DBG]    - Number of agents to replan: 3
[DBG]  Agent 85 has the original local path length: 2 => Start (4,2), Goal (4,3)
[DBG]  Agent 95 has the original local path length: 3 => Start (2,2), Goal (2,0)
[DBG]  Agent 99 has the original local path length: 5 => Start (0,4), Goal (0,4)
[DBG]  Start position: (4, 2), (2, 2), (0, 4), 
[DBG]  Goal position: (4, 3), (2, 0), (0, 4), 
[DBG]  SAT instance and solver created.
Currently solving
Instance name: scen
Map name: map
Encoding used: disappear_at_goal
SAT solver used: Kissat
Optimizing function: sum of costs
Number of agents: 3
Mks LB: 3
SoC LB: 6
Delta: 0
Remaining time: 300000 [ms]

Vertex conflict! Agents 0, 2, timestep 2, location 0
Found plan [agents = 3] [timesteps = 3]
Agent #0 : 17 18 0 
Agent #1 : 10 9 8 
Agent #2 : 3 0 0 

[STAT] Solver returned: 0
[DBG]  Agent (index) 85 | New local path (submap idx):
[DBG]  17 18 
[DBG]  Agent (index) 95 | New local path (submap idx):
[DBG]  10 9 8 
[DBG]  Agent (index) 99 | New local path (submap idx):
[DBG]  3 
[DBG]  Update the agent path 85 | Original local length: 2 | New local length: 2
[DBG]  agent 85 t=0 => decoded (sx,sy)=(4,2) => global_id=741
[DBG]  agent 85 t=1 => decoded (sx,sy)=(4,3) => global_id=742
[DBG]  Complete path of agent 85:
[DBG]    Original: 709 741 742 774 775 807 808 809 810 811 812 813 814 814 814 846 878 879 880 881 882 850 851 819 819 820 821 822 790 
[DBG]    New:     709 741 742 774 775 807 808 809 810 811 812 813 814 814 814 846 878 879 880 881 882 850 851 819 819 820 821 822 790 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 709 
[DBG]    Local path (in submap): 741 742 
[DBG]    Suffix (out of submap): 774 775 807 808 809 810 811 812 813 814 814 814 846 878 879 880 881 882 850 851 819 819 820 821 822 790 
[DBG]  Original agent path length 85 je: 29
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 0: 709, 741, 742, 774, 775, 807, 808, 809, 810, 811, 812, 813, 814, 814, 814, 846, 878, 879, 880, 881, 882, 850, 851, 819, 819, 820, 821, 822, 790, 
[DBG]  Path for agent 85 updated, resulting length: 29
[DBG]  Update the agent path 95 | Original local length: 3 | New local length: 3
[DBG]  agent 95 t=0 => decoded (sx,sy)=(2,2) => global_id=677
[DBG]  agent 95 t=1 => decoded (sx,sy)=(2,1) => global_id=676
[DBG]  agent 95 t=2 => decoded (sx,sy)=(2,0) => global_id=675
[DBG]  Complete path of agent 95:
[DBG]    Original: 678 677 676 675 674 673 705 
[DBG]    New:     678 677 676 675 674 673 705 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 678 
[DBG]    Local path (in submap): 677 676 675 
[DBG]    Suffix (out of submap): 674 673 705 
[DBG]  Original agent path length 95 je: 7
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 1: 678, 677, 676, 675, 674, 673, 705, 
[DBG]  Path for agent 95 updated, resulting length: 7
[DBG]  Update the agent path 99 | Original local length: 5 | New local length: 1
[DBG]  agent 99 t=0 => decoded (sx,sy)=(0,4) => global_id=615
[DBG]  Complete path of agent 99:
[DBG]    Original: 615 615 615 615 615 615 583 582 581 580 612 644 676 675 674 
[DBG]    New:     615 615 583 582 581 580 612 644 676 675 674 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 615 
[DBG]    Local path (in submap): 615 583 582 581 580 
[DBG]    Suffix (out of submap): 612 644 676 675 674 
[DBG]  Original agent path length 99 je: 15
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 2: 615, 615, 583, 582, 581, 580, 612, 644, 676, 675, 674, 
[DBG]  Path for agent 99 updated, resulting length: 11
[DBG]  Paths successfully updated.
[DBG]  (LNS.cpp) New path for agent 85: 
[DBG]  709, 741, 742, 774, 775, 807, 808, 809, 810, 811, 812, 813, 814, 814, 814, 846, 878, 879, 880, 881, 882, 850, 851, 819, 819, 820, 821, 822, 790, 
[DBG]  (LNS.cpp) New path for agent 95: 
[DBG]  678, 677, 676, 675, 674, 673, 705, 
[DBG]  (LNS.cpp) New path for agent 99: 
[DBG]  615, 615, 583, 582, 581, 580, 612, 644, 676, 675, 674, 
[DBG]  component_weights = {0.404189, 0.064292, 0.0672333, 0.464286}
[DBG]  opSuccess value: 1
[STAT] neighbor.sum_of_costs before recomputation: 44
[STAT] neighbor.old_sum_of_costs before recomputation: 48
[STAT] sum_of_costs before recomputation: 4153
[DBG]  Validate solution immediately after SAT success.
[WARNING] Problem after SAT: Vertex conflict between agents 99 and 18 at location 580 at timestep 5
[DBG]  Attempting immediate repair via init_lns because problem occurred after SAT (should be applied only for conflicts...).
[DBG]  Passing 150 agents to init_lns (skip=true).
[DBG]  path_table contents for selected agents (neighbor.agents):
[DBG]    Agent 85 => controlling path length=29
[DBG]    Agent 95 => controlling path length=7
[DBG]    Agent 99 => controlling path length=11
[DBG]  hodnota skip_initial_solution=1
[DBG]  We skip initialSolution => call buildCollisionData()
[DBG]  buildCollisionData() called â€“ skip_initial_solution case.
[DBG]  Agents.size()=150, collision_graph.size()=150
[DBG]  agent 18 => updateCollidingPairs => foundCollision
[DBG]  agent 90 => updateCollidingPairs => foundCollision
[DBG]  agent 99 => updateCollidingPairs => foundCollision
[DBG]  Conflicting agent pairs:
[DBG]  agent 18 is in conflict with agent 99
[DBG]  agent 90 is in conflict with agent 99
[DBG]  buildCollisionData() => sum_of_costs=4149, num_of_colliding_pairs=2
[DBG]  buildCollisionData done => sum_of_costs=4149, num_of_colliding_pairs=2
[DBG]  sum_of_cost hodnota: 4149
[DBG]  After skip/init build => iteration_stats.back(): sum_of_costs=4149, collisions=2
[DEBUG] Using default neighbor generation strategy for conflicts: 0
	InitLNS(PP): runtime = 0.00349225, iterations = 2, colliding pairs = 0, initial colliding pairs = 2, solution cost = 4153, initial solution cost = 4149, failed iterations = 0
[DBG]  init_lns->sum_of_costs after init_lns->run: 4153
[DBG]  sum_of_costs after assignment from init_lns->run: 4153
[DBG]  Recomputing sum_of_cost by dividing neighbor.sum_of_costs and neighbor.old_sum_of_costs
[STAT] sum_of_costs after recomputation: 4153
[STAT] Iteration 189
[DBG]  Using SAT operator (destroy+repair SAT).
[DBG]  ====================
[DBG]  SAT destroy operator called.
[DBG]  SAT heuristic: 2
[DBG]  key_agent_id: 141
[DBG]  key_agent_id global path length: 13
[DBG]  Submap content (global positions):
[DBG]  -1 -1 -1 -1 -1 
[DBG]  12 13 14 15 16 
[DBG]  44 45 46 47 48 
[DBG]  76 77 78 79 80 
[DBG]  108 109 110 111 112 
[DBG]  Map content with agents and obstacles:
[DBG]  X X X X X 
[DBG]  . . . . . 
[DBG]  . A A . . 
[DBG]  . . X . . 
[DBG]  . . . A A 
[DBG]  content of the map structure that we pass to the SAT solver:
[DBG]  1  1  1  1  1  
[DBG]  1  1  1  1  1  
[DBG]  1  1  1  1  1  
[DBG]  1  1  -1  1  1  
[DBG]  1  1  1  1  1  
[DBG]  Identifying agents in a submap for rescheduling (when key_agent is there at the time 10):
[DBG]  Agent 40 found intervals in the sub-map:
[DBG]   [7..11]
[DBG]  Agent 40 (interval in submap: [7..11]) contains time 10, added to replan.
[DBG]  Agent 66 found intervals in the sub-map:
[DBG]   [7..12]
[DBG]  Agent 66 (interval in submap: [7..12]) contains time 10, added to replan.
[DBG]  Agent 69 found intervals in the sub-map:
[DBG]  
[DBG]  Agent 69 is not in sub-map at time 10 (intervals: 
[DBG]  )
[DBG]  Agent 117 found intervals in the sub-map:
[DBG]   [10..15]
[DBG]  Agent 117 (interval in submap: [10..15]) contains time 10, added to replan.
[DBG]  Agent 141 found intervals in the sub-map:
[DBG]   [0..12]
[DBG]  Agent 141 (interval in submap: [0..12]) contains time 10, added to replan.
[DBG]  Agent 40 | Start (global): 45 -> (local): (2, 1) at time 10 | Goal (global): 44 -> (local): (2, 0) at time 11
[DBG]  Agent 66 | Start (global): 111 -> (local): (4, 3) at time 10 | Goal (global): 80 -> (local): (3, 4) at time 12
[DBG]  Agent 117 | Start (global): 112 -> (local): (4, 4) at time 10 | Goal (global): 76 -> (local): (3, 0) at time 15
[DBG]  Agent 141 | Start (global): 46 -> (local): (2, 2) at time 10 | Goal (global): 44 -> (local): (2, 0) at time 12
[DBG]  [REPAIR] SAT destroy operator called.
[DBG]  [REPAIR] SAT operator â€“ launching subproblem FOR OPTIMIZATION.
[DBG]  Creating local paths (sx, sy) in the submap for T_sync = 10
[DBG]    Agent 40 (global paths from T=10 to 11) has local path: (2,1) (2,0) 
[DBG]    Agent 66 (global paths from T=10 to 12) has local path: (4,3) (3,3) (3,4) 
[DBG]    Agent 117 (global paths from T=10 to 15) has local path: (4,4) (4,3) (4,2) (4,1) (3,1) (3,0) 
[DBG]    Agent 141 (global paths from T=10 to 12) has local path: (2,2) (2,1) (2,0) 
[DBG]  Checking input data for SAT solver:
[DBG]    - Number of agents to replan: 4
[DBG]  Agent 40 has the original local path length: 2 => Start (2,1), Goal (2,0)
[DBG]  Agent 66 has the original local path length: 3 => Start (4,3), Goal (3,4)
[DBG]  Agent 117 has the original local path length: 6 => Start (4,4), Goal (3,0)
[DBG]  Agent 141 has the original local path length: 3 => Start (2,2), Goal (2,0)
[DBG]  Start position: (2, 1), (4, 3), (4, 4), (2, 2), 
[DBG]  Goal position: (2, 0), (3, 4), (3, 0), (2, 0), 
[DBG]  SAT instance and solver created.
Currently solving
Instance name: scen
Map name: map
Encoding used: disappear_at_goal
SAT solver used: Kissat
Optimizing function: sum of costs
Number of agents: 4
Mks LB: 6
SoC LB: 14
Delta: 0
Remaining time: 300000 [ms]

Vertex conflict! Agents 0, 1, timestep 3, location 0
Swapping conflict! Agents 0, 1, timestep 3, edge (0,0)
Vertex conflict! Agents 0, 1, timestep 4, location 0
Swapping conflict! Agents 0, 1, timestep 4, edge (0,0)
Vertex conflict! Agents 0, 1, timestep 5, location 0
Vertex conflict! Agents 0, 3, timestep 3, location 0
Swapping conflict! Agents 0, 3, timestep 3, edge (0,0)
Vertex conflict! Agents 0, 3, timestep 4, location 0
Swapping conflict! Agents 0, 3, timestep 4, edge (0,0)
Vertex conflict! Agents 0, 3, timestep 5, location 0
Vertex conflict! Agents 1, 3, timestep 3, location 0
Swapping conflict! Agents 1, 3, timestep 3, edge (0,0)
Vertex conflict! Agents 1, 3, timestep 4, location 0
Swapping conflict! Agents 1, 3, timestep 4, edge (0,0)
Vertex conflict! Agents 1, 3, timestep 5, location 0
Found plan [agents = 4] [timesteps = 6]
Agent #0 : 11 10 0 0 0 0 
Agent #1 : 22 17 18 0 0 0 
Agent #2 : 23 22 21 20 19 15 
Agent #3 : 12 11 10 0 0 0 

[STAT] Solver returned: 0
[DBG]  Agent (index) 40 | New local path (submap idx):
[DBG]  11 10 
[DBG]  Agent (index) 66 | New local path (submap idx):
[DBG]  22 17 18 
[DBG]  Agent (index) 117 | New local path (submap idx):
[DBG]  23 22 21 20 19 15 
[DBG]  Agent (index) 141 | New local path (submap idx):
[DBG]  12 11 10 
[DBG]  Update the agent path 40 | Original local length: 2 | New local length: 2
[DBG]  agent 40 t=0 => decoded (sx,sy)=(2,1) => global_id=45
[DBG]  agent 40 t=1 => decoded (sx,sy)=(2,0) => global_id=44
[DBG]  Complete path of agent 40:
[DBG]    Original: 117 85 84 83 82 50 49 48 47 46 45 44 43 75 74 73 72 71 70 
[DBG]    New:     117 85 84 83 82 50 49 48 47 46 45 44 43 75 74 73 72 71 70 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 117 85 84 83 82 50 49 48 47 46 
[DBG]    Local path (in submap): 45 44 
[DBG]    Suffix (out of submap): 43 75 74 73 72 71 70 
[DBG]  Original agent path length 40 je: 19
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 0: 117, 85, 84, 83, 82, 50, 49, 48, 47, 46, 45, 44, 43, 75, 74, 73, 72, 71, 70, 
[DBG]  Path for agent 40 updated, resulting length: 19
[DBG]  Update the agent path 66 | Original local length: 3 | New local length: 3
[DBG]  agent 66 t=0 => decoded (sx,sy)=(4,3) => global_id=111
[DBG]  agent 66 t=1 => decoded (sx,sy)=(3,3) => global_id=79
[DBG]  agent 66 t=2 => decoded (sx,sy)=(3,4) => global_id=80
[DBG]  Complete path of agent 66:
[DBG]    Original: 134 135 136 137 138 106 107 108 109 110 111 79 80 81 82 83 115 147 147 148 149 150 151 183 215 247 279 
[DBG]    New:     134 135 136 137 138 106 107 108 109 110 111 79 80 81 82 83 115 147 147 148 149 150 151 183 215 247 279 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 134 135 136 137 138 106 107 108 109 110 
[DBG]    Local path (in submap): 111 79 80 
[DBG]    Suffix (out of submap): 81 82 83 115 147 147 148 149 150 151 183 215 247 279 
[DBG]  Original agent path length 66 je: 27
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 1: 134, 135, 136, 137, 138, 106, 107, 108, 109, 110, 111, 79, 80, 81, 82, 83, 115, 147, 147, 148, 149, 150, 151, 183, 215, 247, 279, 
[DBG]  Path for agent 66 updated, resulting length: 27
[DBG]  Update the agent path 117 | Original local length: 6 | New local length: 6
[DBG]  agent 117 t=0 => decoded (sx,sy)=(4,4) => global_id=112
[DBG]  agent 117 t=1 => decoded (sx,sy)=(4,3) => global_id=111
[DBG]  agent 117 t=2 => decoded (sx,sy)=(4,2) => global_id=110
[DBG]  agent 117 t=3 => decoded (sx,sy)=(4,1) => global_id=109
[DBG]  agent 117 t=4 => decoded (sx,sy)=(4,0) => global_id=108
[DBG]  agent 117 t=5 => decoded (sx,sy)=(3,0) => global_id=76
[DBG]  Complete path of agent 117:
[DBG]    Original: 214 213 181 181 180 179 178 177 176 144 112 111 110 109 77 76 75 43 42 41 9 8 7 6 5 4 3 2 1 0 
[DBG]    New:     214 213 181 181 180 179 178 177 176 144 112 111 110 109 108 76 75 43 42 41 9 8 7 6 5 4 3 2 1 0 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 214 213 181 181 180 179 178 177 176 144 
[DBG]    Local path (in submap): 112 111 110 109 108 76 
[DBG]    Suffix (out of submap): 75 43 42 41 9 8 7 6 5 4 3 2 1 0 
[DBG]  Original agent path length 117 je: 30
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 2: 214, 213, 181, 181, 180, 179, 178, 177, 176, 144, 112, 111, 110, 109, 108, 76, 75, 43, 42, 41, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 
[DBG]  Path for agent 117 updated, resulting length: 30
[DBG]  Update the agent path 141 | Original local length: 3 | New local length: 3
[DBG]  agent 141 t=0 => decoded (sx,sy)=(2,2) => global_id=46
[DBG]  agent 141 t=1 => decoded (sx,sy)=(2,1) => global_id=45
[DBG]  agent 141 t=2 => decoded (sx,sy)=(2,0) => global_id=44
[DBG]  Complete path of agent 141:
[DBG]    Original: 46 46 47 47 46 14 14 14 14 14 46 45 44 
[DBG]    New:     46 46 47 47 46 14 14 14 14 14 46 45 44 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 46 46 47 47 46 14 14 14 14 14 
[DBG]    Local path (in submap): 46 45 44 
[DBG]    Suffix (out of submap): 
[DBG]  Original agent path length 141 je: 13
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 3: 46, 46, 47, 47, 46, 14, 14, 14, 14, 14, 46, 45, 44, 
[DBG]  Path for agent 141 updated, resulting length: 13
[DBG]  Paths successfully updated.
[DBG]  (LNS.cpp) New path for agent 40: 
[DBG]  117, 85, 84, 83, 82, 50, 49, 48, 47, 46, 45, 44, 43, 75, 74, 73, 72, 71, 70, 
[DBG]  (LNS.cpp) New path for agent 66: 
[DBG]  134, 135, 136, 137, 138, 106, 107, 108, 109, 110, 111, 79, 80, 81, 82, 83, 115, 147, 147, 148, 149, 150, 151, 183, 215, 247, 279, 
[DBG]  (LNS.cpp) New path for agent 117: 
[DBG]  214, 213, 181, 181, 180, 179, 178, 177, 176, 144, 112, 111, 110, 109, 108, 76, 75, 43, 42, 41, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 
[DBG]  (LNS.cpp) New path for agent 141: 
[DBG]  46, 46, 47, 47, 46, 14, 14, 14, 14, 14, 46, 45, 44, 
[DBG]  component_weights = {0.409063, 0.063766, 0.0666833, 0.460488}
[DBG]  opSuccess value: 1
[STAT] neighbor.sum_of_costs before recomputation: 85
[STAT] neighbor.old_sum_of_costs before recomputation: 85
[STAT] sum_of_costs before recomputation: 4153
[DBG]  Validate solution immediately after SAT success.
[DBG]  No problems after SAT replan.
[DBG]  Recomputing sum_of_cost by dividing neighbor.sum_of_costs and neighbor.old_sum_of_costs
[STAT] sum_of_costs after recomputation: 4153
[STAT] Iteration 190
[DBG]  Using SAT operator (destroy+repair SAT).
[DBG]  ====================
[DBG]  SAT destroy operator called.
[DBG]  SAT heuristic: 2
[DBG]  key_agent_id: 110
[DBG]  key_agent_id global path length: 29
[DBG]  Submap content (global positions):
[DBG]  513 514 515 516 517 
[DBG]  545 546 547 548 549 
[DBG]  577 578 579 580 581 
[DBG]  609 610 611 612 613 
[DBG]  641 642 643 644 645 
[DBG]  Map content with agents and obstacles:
[DBG]  . X . . . 
[DBG]  X . . . . 
[DBG]  . . A . . 
[DBG]  . . . . A 
[DBG]  X . X . . 
[DBG]  content of the map structure that we pass to the SAT solver:
[DBG]  1  -1  1  1  1  
[DBG]  -1  1  1  1  1  
[DBG]  1  1  1  1  1  
[DBG]  1  1  1  1  1  
[DBG]  -1  1  -1  1  1  
[DBG]  Identifying agents in a submap for rescheduling (when key_agent is there at the time 17):
[DBG]  Agent 32 found intervals in the sub-map:
[DBG]  
[DBG]  Agent 32 is not in sub-map at time 17 (intervals: 
[DBG]  )
[DBG]  Agent 42 found intervals in the sub-map:
[DBG]  
[DBG]  Agent 42 is not in sub-map at time 17 (intervals: 
[DBG]  )
[DBG]  Agent 78 found intervals in the sub-map:
[DBG]   [22..25]
[DBG]  Agent 78 is not in sub-map at time 17 (intervals: 
[DBG]  [22..25] )
[DBG]  Agent 87 found intervals in the sub-map:
[DBG]   [18..22]
[DBG]  Agent 87 is not in sub-map at time 17 (intervals: 
[DBG]  [18..22] )
[DBG]  Agent 105 found intervals in the sub-map:
[DBG]   [16..19]
[DBG]  Agent 105 (interval in submap: [16..19]) contains time 17, added to replan.
[DBG]  Agent 110 found intervals in the sub-map:
[DBG]   [15..20]
[DBG]  Agent 110 (interval in submap: [15..20]) contains time 17, added to replan.
[DBG]  Agent 116 found intervals in the sub-map:
[DBG]   [0..0]
[DBG]  Agent 116 is not in sub-map at time 17 (intervals: 
[DBG]  [0..0] )
[DBG]  Agent 105 | Start (global): 613 -> (local): (3, 4) at time 17 | Goal (global): 549 -> (local): (1, 4) at time 19
[DBG]  Agent 110 | Start (global): 579 -> (local): (2, 2) at time 17 | Goal (global): 609 -> (local): (3, 0) at time 20
[DBG]  [REPAIR] SAT destroy operator called.
[DBG]  [REPAIR] SAT operator â€“ launching subproblem FOR OPTIMIZATION.
[DBG]  Creating local paths (sx, sy) in the submap for T_sync = 17
[DBG]    Agent 105 (global paths from T=17 to 19) has local path: (3,4) (2,4) (1,4) 
[DBG]    Agent 110 (global paths from T=17 to 20) has local path: (2,2) (3,2) (3,1) (3,0) 
[DBG]  Checking input data for SAT solver:
[DBG]    - Number of agents to replan: 2
[DBG]  Agent 105 has the original local path length: 3 => Start (3,4), Goal (1,4)
[DBG]  Agent 110 has the original local path length: 4 => Start (2,2), Goal (3,0)
[DBG]  Start position: (3, 4), (2, 2), 
[DBG]  Goal position: (1, 4), (3, 0), 
[DBG]  SAT instance and solver created.
Currently solving
Instance name: scen
Map name: map
Encoding used: disappear_at_goal
SAT solver used: Kissat
Optimizing function: sum of costs
Number of agents: 2
Mks LB: 4
SoC LB: 7
Delta: 0
Remaining time: 300000 [ms]

Found plan [agents = 2] [timesteps = 4]
Agent #0 : 17 12 7 0 
Agent #1 : 10 15 14 13 

[STAT] Solver returned: 0
[DBG]  Agent (index) 105 | New local path (submap idx):
[DBG]  17 12 7 
[DBG]  Agent (index) 110 | New local path (submap idx):
[DBG]  10 15 14 13 
[DBG]  Update the agent path 105 | Original local length: 3 | New local length: 3
[DBG]  agent 105 t=0 => decoded (sx,sy)=(3,4) => global_id=613
[DBG]  agent 105 t=1 => decoded (sx,sy)=(2,4) => global_id=581
[DBG]  agent 105 t=2 => decoded (sx,sy)=(1,4) => global_id=549
[DBG]  Complete path of agent 105:
[DBG]    Original: 1002 1001 1000 968 936 904 903 902 870 838 837 805 773 741 709 677 645 613 581 549 550 550 551 519 487 455 423 391 359 358 326 325 324 323 291 259 260 228 196 164 132 
[DBG]    New:     1002 1001 1000 968 936 904 903 902 870 838 837 805 773 741 709 677 645 613 581 549 550 550 551 519 487 455 423 391 359 358 326 325 324 323 291 259 260 228 196 164 132 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 1002 1001 1000 968 936 904 903 902 870 838 837 805 773 741 709 677 645 
[DBG]    Local path (in submap): 613 581 549 
[DBG]    Suffix (out of submap): 550 550 551 519 487 455 423 391 359 358 326 325 324 323 291 259 260 228 196 164 132 
[DBG]  Original agent path length 105 je: 41
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 0: 1002, 1001, 1000, 968, 936, 904, 903, 902, 870, 838, 837, 805, 773, 741, 709, 677, 645, 613, 581, 549, 550, 550, 551, 519, 487, 455, 423, 391, 359, 358, 326, 325, 324, 323, 291, 259, 260, 228, 196, 164, 132, 
[DBG]  Path for agent 105 updated, resulting length: 41
[DBG]  Update the agent path 110 | Original local length: 4 | New local length: 4
[DBG]  agent 110 t=0 => decoded (sx,sy)=(2,2) => global_id=579
[DBG]  agent 110 t=1 => decoded (sx,sy)=(3,2) => global_id=611
[DBG]  agent 110 t=2 => decoded (sx,sy)=(3,1) => global_id=610
[DBG]  agent 110 t=3 => decoded (sx,sy)=(3,0) => global_id=609
[DBG]  Complete path of agent 110:
[DBG]    Original: 193 194 226 258 259 291 323 323 355 387 419 418 450 482 483 515 547 579 611 610 609 608 640 672 704 736 768 769 770 
[DBG]    New:     193 194 226 258 259 291 323 323 355 387 419 418 450 482 483 515 547 579 611 610 609 608 640 672 704 736 768 769 770 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 193 194 226 258 259 291 323 323 355 387 419 418 450 482 483 515 547 
[DBG]    Local path (in submap): 579 611 610 609 
[DBG]    Suffix (out of submap): 608 640 672 704 736 768 769 770 
[DBG]  Original agent path length 110 je: 29
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 1: 193, 194, 226, 258, 259, 291, 323, 323, 355, 387, 419, 418, 450, 482, 483, 515, 547, 579, 611, 610, 609, 608, 640, 672, 704, 736, 768, 769, 770, 
[DBG]  Path for agent 110 updated, resulting length: 29
[DBG]  Paths successfully updated.
[DBG]  (LNS.cpp) New path for agent 105: 
[DBG]  1002, 1001, 1000, 968, 936, 904, 903, 902, 870, 838, 837, 805, 773, 741, 709, 677, 645, 613, 581, 549, 550, 550, 551, 519, 487, 455, 423, 391, 359, 358, 326, 325, 324, 323, 291, 259, 260, 228, 196, 164, 132, 
[DBG]  (LNS.cpp) New path for agent 110: 
[DBG]  193, 194, 226, 258, 259, 291, 323, 323, 355, 387, 419, 418, 450, 482, 483, 515, 547, 579, 611, 610, 609, 608, 640, 672, 704, 736, 768, 769, 770, 
[DBG]  component_weights = {0.413956, 0.0632381, 0.0661312, 0.456675}
[DBG]  opSuccess value: 1
[STAT] neighbor.sum_of_costs before recomputation: 68
[STAT] neighbor.old_sum_of_costs before recomputation: 68
[STAT] sum_of_costs before recomputation: 4153
[DBG]  Validate solution immediately after SAT success.
[DBG]  No problems after SAT replan.
[DBG]  Recomputing sum_of_cost by dividing neighbor.sum_of_costs and neighbor.old_sum_of_costs
[STAT] sum_of_costs after recomputation: 4153
[STAT] Iteration 191
[DBG]  Using SAT operator (destroy+repair SAT).
[DBG]  ====================
[DBG]  SAT destroy operator called.
[DBG]  SAT heuristic: 2
[DBG]  key_agent_id: 134
[DBG]  key_agent_id global path length: 16
[DBG]  Submap content (global positions):
[DBG]  416 417 418 419 420 
[DBG]  448 449 450 451 452 
[DBG]  480 481 482 483 484 
[DBG]  512 513 514 515 516 
[DBG]  544 545 546 547 548 
[DBG]  Map content with agents and obstacles:
[DBG]  . X . . . 
[DBG]  . . A X X 
[DBG]  . . A A . 
[DBG]  . . X A . 
[DBG]  . X . . . 
[DBG]  content of the map structure that we pass to the SAT solver:
[DBG]  1  -1  1  1  1  
[DBG]  1  1  1  -1  -1  
[DBG]  1  1  1  1  1  
[DBG]  1  1  -1  1  1  
[DBG]  1  -1  1  1  1  
[DBG]  Identifying agents in a submap for rescheduling (when key_agent is there at the time 14):
[DBG]  Agent 23 found intervals in the sub-map:
[DBG]   [12..19]
[DBG]  Agent 23 (interval in submap: [12..19]) contains time 14, added to replan.
[DBG]  Agent 55 found intervals in the sub-map:
[DBG]  
[DBG]  Agent 55 is not in sub-map at time 14 (intervals: 
[DBG]  )
[DBG]  Agent 78 found intervals in the sub-map:
[DBG]   [11..23]
[DBG]  Agent 78 (interval in submap: [11..23]) contains time 14, added to replan.
[DBG]  Agent 87 found intervals in the sub-map:
[DBG]   [19..20]
[DBG]  Agent 87 is not in sub-map at time 14 (intervals: 
[DBG]  [19..20] )
[DBG]  Agent 110 found intervals in the sub-map:
[DBG]   [10..16]
[DBG]  Agent 110 (interval in submap: [10..16]) contains time 14, added to replan.
[DBG]  Agent 116 found intervals in the sub-map:
[DBG]  
[DBG]  Agent 116 is not in sub-map at time 14 (intervals: 
[DBG]  )
[DBG]  Agent 134 found intervals in the sub-map:
[DBG]   [11..15]
[DBG]  Agent 134 (interval in submap: [11..15]) contains time 14, added to replan.
[DBG]  Agent 23 | Start (global): 515 -> (local): (3, 3) at time 14 | Goal (global): 484 -> (local): (2, 4) at time 19
[DBG]  Agent 78 | Start (global): 450 -> (local): (1, 2) at time 14 | Goal (global): 548 -> (local): (4, 4) at time 23
[DBG]  Agent 110 | Start (global): 483 -> (local): (2, 3) at time 14 | Goal (global): 547 -> (local): (4, 3) at time 16
[DBG]  Agent 134 | Start (global): 482 -> (local): (2, 2) at time 14 | Goal (global): 481 -> (local): (2, 1) at time 15
[DBG]  [REPAIR] SAT destroy operator called.
[DBG]  [REPAIR] SAT operator â€“ launching subproblem FOR OPTIMIZATION.
[DBG]  Creating local paths (sx, sy) in the submap for T_sync = 14
[DBG]    Agent 23 (global paths from T=14 to 19) has local path: (3,3) (3,4) (2,4) (2,4) (2,4) (2,4) 
[DBG]    Agent 78 (global paths from T=14 to 23) has local path: (1,2) (2,2) (2,3) (2,3) (2,3) (2,3) (2,4) (2,4) (3,4) (4,4) 
[DBG]    Agent 110 (global paths from T=14 to 16) has local path: (2,3) (3,3) (4,3) 
[DBG]    Agent 134 (global paths from T=14 to 15) has local path: (2,2) (2,1) 
[DBG]  Checking input data for SAT solver:
[DBG]    - Number of agents to replan: 4
[DBG]  Agent 23 has the original local path length: 6 => Start (3,3), Goal (2,4)
[DBG]  Agent 78 has the original local path length: 10 => Start (1,2), Goal (4,4)
[DBG]  Agent 110 has the original local path length: 3 => Start (2,3), Goal (4,3)
[DBG]  Agent 134 has the original local path length: 2 => Start (2,2), Goal (2,1)
[DBG]  Start position: (3, 3), (1, 2), (2, 3), (2, 2), 
[DBG]  Goal position: (2, 4), (4, 4), (4, 3), (2, 1), 
[DBG]  SAT instance and solver created.
Currently solving
Instance name: scen
Map name: map
Encoding used: disappear_at_goal
SAT solver used: Kissat
Optimizing function: sum of costs
Number of agents: 4
Mks LB: 6
SoC LB: 14
Delta: 0
Remaining time: 300000 [ms]

Vertex conflict! Agents 0, 2, timestep 3, location 0
Swapping conflict! Agents 0, 2, timestep 3, edge (0,0)
Vertex conflict! Agents 0, 2, timestep 4, location 0
Swapping conflict! Agents 0, 2, timestep 4, edge (0,0)
Vertex conflict! Agents 0, 2, timestep 5, location 0
Vertex conflict! Agents 0, 3, timestep 3, location 0
Swapping conflict! Agents 0, 3, timestep 3, edge (0,0)
Vertex conflict! Agents 0, 3, timestep 4, location 0
Swapping conflict! Agents 0, 3, timestep 4, edge (0,0)
Vertex conflict! Agents 0, 3, timestep 5, location 0
Vertex conflict! Agents 2, 3, timestep 3, location 0
Swapping conflict! Agents 2, 3, timestep 3, edge (0,0)
Vertex conflict! Agents 2, 3, timestep 4, location 0
Swapping conflict! Agents 2, 3, timestep 4, edge (0,0)
Vertex conflict! Agents 2, 3, timestep 5, location 0
Found plan [agents = 4] [timesteps = 6]
Agent #0 : 14 15 11 0 0 0 
Agent #1 : 6 9 10 14 18 19 
Agent #2 : 10 14 18 0 0 0 
Agent #3 : 9 8 0 0 0 0 

[STAT] Solver returned: 0
[DBG]  Agent (index) 23 | New local path (submap idx):
[DBG]  14 15 11 
[DBG]  Agent (index) 78 | New local path (submap idx):
[DBG]  6 9 10 14 18 19 
[DBG]  Agent (index) 110 | New local path (submap idx):
[DBG]  10 14 18 
[DBG]  Agent (index) 134 | New local path (submap idx):
[DBG]  9 8 
[DBG]  Update the agent path 23 | Original local length: 6 | New local length: 3
[DBG]  agent 23 t=0 => decoded (sx,sy)=(3,3) => global_id=515
[DBG]  agent 23 t=1 => decoded (sx,sy)=(3,4) => global_id=516
[DBG]  agent 23 t=2 => decoded (sx,sy)=(2,4) => global_id=484
[DBG]  Complete path of agent 23:
[DBG]    Original: 864 832 800 768 736 704 672 640 608 609 577 578 546 547 515 516 484 484 484 484 485 486 487 455 423 424 425 426 427 395 363 331 299 300 268 269 270 271 239 240 208 176 177 178 179 147 148 149 150 151 183 215 247 248 249 217 218 
[DBG]    New:     864 832 800 768 736 704 672 640 608 609 577 578 546 547 515 516 484 485 486 487 455 423 424 425 426 427 395 363 331 299 300 268 269 270 271 239 240 208 176 177 178 179 147 148 149 150 151 183 215 247 248 249 217 218 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 864 832 800 768 736 704 672 640 608 609 577 578 546 547 
[DBG]    Local path (in submap): 515 516 484 485 486 487 
[DBG]    Suffix (out of submap): 455 423 424 425 426 427 395 363 331 299 300 268 269 270 271 239 240 208 176 177 178 179 147 148 149 150 151 183 215 247 248 249 217 218 
[DBG]  Original agent path length 23 je: 57
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 0: 864, 832, 800, 768, 736, 704, 672, 640, 608, 609, 577, 578, 546, 547, 515, 516, 484, 485, 486, 487, 455, 423, 424, 425, 426, 427, 395, 363, 331, 299, 300, 268, 269, 270, 271, 239, 240, 208, 176, 177, 178, 179, 147, 148, 149, 150, 151, 183, 215, 247, 248, 249, 217, 218, 
[DBG]  Path for agent 23 updated, resulting length: 54
[DBG]  Update the agent path 78 | Original local length: 10 | New local length: 6
[DBG]  agent 78 t=0 => decoded (sx,sy)=(1,2) => global_id=450
[DBG]  agent 78 t=1 => decoded (sx,sy)=(2,2) => global_id=482
[DBG]  agent 78 t=2 => decoded (sx,sy)=(2,3) => global_id=483
[DBG]  agent 78 t=3 => decoded (sx,sy)=(3,3) => global_id=515
[DBG]  agent 78 t=4 => decoded (sx,sy)=(4,3) => global_id=547
[DBG]  agent 78 t=5 => decoded (sx,sy)=(4,4) => global_id=548
[DBG]  Complete path of agent 78:
[DBG]    Original: 355 323 324 324 324 324 324 324 324 356 388 420 419 418 450 482 483 483 483 483 484 484 516 548 580 612 
[DBG]    New:     355 323 324 324 324 324 324 324 324 356 388 420 419 418 450 482 483 515 547 548 580 612 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 355 323 324 324 324 324 324 324 324 356 388 420 419 418 
[DBG]    Local path (in submap): 450 482 483 515 547 548 580 612 
[DBG]    Suffix (out of submap): 
[DBG]  Original agent path length 78 je: 26
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 1: 355, 323, 324, 324, 324, 324, 324, 324, 324, 356, 388, 420, 419, 418, 450, 482, 483, 515, 547, 548, 580, 612, 
[DBG]  Path for agent 78 updated, resulting length: 22
[DBG]  Update the agent path 110 | Original local length: 3 | New local length: 3
[DBG]  agent 110 t=0 => decoded (sx,sy)=(2,3) => global_id=483
[DBG]  agent 110 t=1 => decoded (sx,sy)=(3,3) => global_id=515
[DBG]  agent 110 t=2 => decoded (sx,sy)=(4,3) => global_id=547
[DBG]  Complete path of agent 110:
[DBG]    Original: 193 194 226 258 259 291 323 323 355 387 419 418 450 482 483 515 547 579 611 610 609 608 640 672 704 736 768 769 770 
[DBG]    New:     193 194 226 258 259 291 323 323 355 387 419 418 450 482 483 515 547 579 611 610 609 608 640 672 704 736 768 769 770 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 193 194 226 258 259 291 323 323 355 387 419 418 450 482 
[DBG]    Local path (in submap): 483 515 547 
[DBG]    Suffix (out of submap): 579 611 610 609 608 640 672 704 736 768 769 770 
[DBG]  Original agent path length 110 je: 29
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 2: 193, 194, 226, 258, 259, 291, 323, 323, 355, 387, 419, 418, 450, 482, 483, 515, 547, 579, 611, 610, 609, 608, 640, 672, 704, 736, 768, 769, 770, 
[DBG]  Path for agent 110 updated, resulting length: 29
[DBG]  Update the agent path 134 | Original local length: 2 | New local length: 2
[DBG]  agent 134 t=0 => decoded (sx,sy)=(2,2) => global_id=482
[DBG]  agent 134 t=1 => decoded (sx,sy)=(2,1) => global_id=481
[DBG]  Complete path of agent 134:
[DBG]    Original: 133 132 164 196 228 227 259 291 323 355 387 419 418 450 482 481 
[DBG]    New:     133 132 164 196 228 227 259 291 323 355 387 419 418 450 482 481 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 133 132 164 196 228 227 259 291 323 355 387 419 418 450 
[DBG]    Local path (in submap): 482 481 
[DBG]    Suffix (out of submap): 
[DBG]  Original agent path length 134 je: 16
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 3: 133, 132, 164, 196, 228, 227, 259, 291, 323, 355, 387, 419, 418, 450, 482, 481, 
[DBG]  Path for agent 134 updated, resulting length: 16
[DBG]  Paths successfully updated.
[DBG]  (LNS.cpp) New path for agent 23: 
[DBG]  864, 832, 800, 768, 736, 704, 672, 640, 608, 609, 577, 578, 546, 547, 515, 516, 484, 485, 486, 487, 455, 423, 424, 425, 426, 427, 395, 363, 331, 299, 300, 268, 269, 270, 271, 239, 240, 208, 176, 177, 178, 179, 147, 148, 149, 150, 151, 183, 215, 247, 248, 249, 217, 218, 
[DBG]  (LNS.cpp) New path for agent 78: 
[DBG]  355, 323, 324, 324, 324, 324, 324, 324, 324, 356, 388, 420, 419, 418, 450, 482, 483, 515, 547, 548, 580, 612, 
[DBG]  (LNS.cpp) New path for agent 110: 
[DBG]  193, 194, 226, 258, 259, 291, 323, 323, 355, 387, 419, 418, 450, 482, 483, 515, 547, 579, 611, 610, 609, 608, 640, 672, 704, 736, 768, 769, 770, 
[DBG]  (LNS.cpp) New path for agent 134: 
[DBG]  133, 132, 164, 196, 228, 227, 259, 291, 323, 355, 387, 419, 418, 450, 482, 481, 
[DBG]  component_weights = {0.410026, 0.0626378, 0.0655035, 0.461832}
[DBG]  opSuccess value: 1
[STAT] neighbor.sum_of_costs before recomputation: 117
[STAT] neighbor.old_sum_of_costs before recomputation: 124
[STAT] sum_of_costs before recomputation: 4153
[DBG]  Validate solution immediately after SAT success.
[WARNING] Problem after SAT: Edge conflict between agents 65 and 23 at edge (486,485) at timestep 18
[DBG]  Attempting immediate repair via init_lns because problem occurred after SAT (should be applied only for conflicts...).
[DBG]  Passing 150 agents to init_lns (skip=true).
[DBG]  path_table contents for selected agents (neighbor.agents):
[DBG]    Agent 23 => controlling path length=54
[DBG]    Agent 78 => controlling path length=22
[DBG]    Agent 110 => controlling path length=29
[DBG]    Agent 134 => controlling path length=16
[DBG]  hodnota skip_initial_solution=1
[DBG]  We skip initialSolution => call buildCollisionData()
[DBG]  buildCollisionData() called â€“ skip_initial_solution case.
[DBG]  Agents.size()=150, collision_graph.size()=150
[DBG]  agent 23 => updateCollidingPairs => foundCollision
[DBG]  agent 65 => updateCollidingPairs => foundCollision
[DBG]  agent 87 => updateCollidingPairs => foundCollision
[DBG]  agent 122 => updateCollidingPairs => foundCollision
[DBG]  agent 132 => updateCollidingPairs => foundCollision
[DBG]  Conflicting agent pairs:
[DBG]  agent 23 is in conflict with agent 65
[DBG]  agent 23 is in conflict with agent 87
[DBG]  agent 23 is in conflict with agent 122
[DBG]  agent 23 is in conflict with agent 132
[DBG]  buildCollisionData() => sum_of_costs=4146, num_of_colliding_pairs=4
[DBG]  buildCollisionData done => sum_of_costs=4146, num_of_colliding_pairs=4
[DBG]  sum_of_cost hodnota: 4146
[DBG]  After skip/init build => iteration_stats.back(): sum_of_costs=4146, collisions=4
[DEBUG] Using default neighbor generation strategy for conflicts: 2
[DEBUG] Using default neighbor generation strategy for conflicts: 0
	InitLNS(PP): runtime = 0.0103133, iterations = 3, colliding pairs = 0, initial colliding pairs = 4, solution cost = 4158, initial solution cost = 4146, failed iterations = 0
[DBG]  init_lns->sum_of_costs after init_lns->run: 4158
[DBG]  sum_of_costs after assignment from init_lns->run: 4158
[DBG]  Recomputing sum_of_cost by dividing neighbor.sum_of_costs and neighbor.old_sum_of_costs
[STAT] sum_of_costs after recomputation: 4158
[STAT] Iteration 192
[DBG]  Using SAT operator (destroy+repair SAT).
[DBG]  ====================
[DBG]  SAT destroy operator called.
[DBG]  SAT heuristic: 2
[DBG]  key_agent_id: 123
[DBG]  key_agent_id global path length: 34
[DBG]  Submap content (global positions):
[DBG]  377 378 379 380 381 
[DBG]  409 410 411 412 413 
[DBG]  441 442 443 444 445 
[DBG]  473 474 475 476 477 
[DBG]  505 506 507 508 509 
[DBG]  Map content with agents and obstacles:
[DBG]  A . . . A 
[DBG]  . X A . . 
[DBG]  A X A A . 
[DBG]  A . . A . 
[DBG]  . . A . . 
[DBG]  content of the map structure that we pass to the SAT solver:
[DBG]  1  1  1  1  1  
[DBG]  1  -1  1  1  1  
[DBG]  1  -1  1  1  1  
[DBG]  1  1  1  1  1  
[DBG]  1  1  1  1  1  
[DBG]  Identifying agents in a submap for rescheduling (when key_agent is there at the time 8):
[DBG]  Agent 43 found intervals in the sub-map:
[DBG]   [1..8]
[DBG]  Agent 43 (interval in submap: [1..8]) contains time 8, added to replan.
[DBG]  Agent 64 found intervals in the sub-map:
[DBG]   [8..12]
[DBG]  Agent 64 (interval in submap: [8..12]) contains time 8, added to replan.
[DBG]  Agent 75 found intervals in the sub-map:
[DBG]   [8..12]
[DBG]  Agent 75 (interval in submap: [8..12]) contains time 8, added to replan.
[DBG]  Agent 77 found intervals in the sub-map:
[DBG]   [4..9]
[DBG]  Agent 77 (interval in submap: [4..9]) contains time 8, added to replan.
[DBG]  Agent 92 found intervals in the sub-map:
[DBG]   [6..8]
[DBG]  Agent 92 (interval in submap: [6..8]) contains time 8, added to replan.
[DBG]  Agent 100 found intervals in the sub-map:
[DBG]   [5..13]
[DBG]  Agent 100 (interval in submap: [5..13]) contains time 8, added to replan.
[DBG]  Agent 123 found intervals in the sub-map:
[DBG]   [6..15]
[DBG]  Agent 123 (interval in submap: [6..15]) contains time 8, added to replan.
[DBG]  Agent 124 found intervals in the sub-map:
[DBG]   [4..9]
[DBG]  Agent 124 (interval in submap: [4..9]) contains time 8, added to replan.
[DBG]  Agent 129 found intervals in the sub-map:
[DBG]   [0..8]
[DBG]  Agent 129 (interval in submap: [0..8]) contains time 8, added to replan.
[DBG]  Agent 43 | Start (global): 441 -> (local): (2, 0) at time 8 | Goal (global): 441 -> (local): (2, 0) at time 8
[DBG]  Agent 64 | Start (global): 507 -> (local): (4, 2) at time 8 | Goal (global): 441 -> (local): (2, 0) at time 12
[DBG]  Agent 75 | Start (global): 377 -> (local): (0, 0) at time 8 | Goal (global): 381 -> (local): (0, 4) at time 12
[DBG]  Agent 77 | Start (global): 476 -> (local): (3, 3) at time 8 | Goal (global): 508 -> (local): (4, 3) at time 9
[DBG]  Agent 92 | Start (global): 473 -> (local): (3, 0) at time 8 | Goal (global): 473 -> (local): (3, 0) at time 8
[DBG]  Agent 100 | Start (global): 444 -> (local): (2, 3) at time 8 | Goal (global): 505 -> (local): (4, 0) at time 13
[DBG]  Agent 123 | Start (global): 443 -> (local): (2, 2) at time 8 | Goal (global): 377 -> (local): (0, 0) at time 15
[DBG]  Agent 124 | Start (global): 411 -> (local): (1, 2) at time 8 | Goal (global): 379 -> (local): (0, 2) at time 9
[DBG]  Agent 129 | Start (global): 381 -> (local): (0, 4) at time 8 | Goal (global): 381 -> (local): (0, 4) at time 8
[DBG]  [REPAIR] SAT destroy operator called.
[DBG]  [REPAIR] SAT operator â€“ launching subproblem FOR OPTIMIZATION.
[DBG]  Creating local paths (sx, sy) in the submap for T_sync = 8
[DBG]    Agent 43 (global paths from T=8 to 8) has local path: (2,0) 
[DBG]    Agent 64 (global paths from T=8 to 12) has local path: (4,2) (4,1) (3,1) (3,0) (2,0) 
[DBG]    Agent 75 (global paths from T=8 to 12) has local path: (0,0) (0,1) (0,2) (0,3) (0,4) 
[DBG]    Agent 77 (global paths from T=8 to 9) has local path: (3,3) (4,3) 
[DBG]    Agent 92 (global paths from T=8 to 8) has local path: (3,0) 
[DBG]    Agent 100 (global paths from T=8 to 13) has local path: (2,3) (3,3) (4,3) (4,2) (4,1) (4,0) 
[DBG]    Agent 123 (global paths from T=8 to 15) has local path: (2,2) (1,2) (1,2) (1,2) (1,2) (0,2) (0,1) (0,0) 
[DBG]    Agent 124 (global paths from T=8 to 9) has local path: (1,2) (0,2) 
[DBG]    Agent 129 (global paths from T=8 to 8) has local path: (0,4) 
[DBG]  Checking input data for SAT solver:
[DBG]    - Number of agents to replan: 9
[DBG]  Agent 43 has the original local path length: 1 => Start (2,0), Goal (2,0)
[DBG]  Agent 64 has the original local path length: 5 => Start (4,2), Goal (2,0)
[DBG]  Agent 75 has the original local path length: 5 => Start (0,0), Goal (0,4)
[DBG]  Agent 77 has the original local path length: 2 => Start (3,3), Goal (4,3)
[DBG]  Agent 92 has the original local path length: 1 => Start (3,0), Goal (3,0)
[DBG]  Agent 100 has the original local path length: 6 => Start (2,3), Goal (4,0)
[DBG]  Agent 123 has the original local path length: 8 => Start (2,2), Goal (0,0)
[DBG]  Agent 124 has the original local path length: 2 => Start (1,2), Goal (0,2)
[DBG]  Agent 129 has the original local path length: 1 => Start (0,4), Goal (0,4)
[DBG]  Start position: (2, 0), (4, 2), (0, 0), (3, 3), (3, 0), (2, 3), (2, 2), (1, 2), (0, 4), 
[DBG]  Goal position: (2, 0), (2, 0), (0, 4), (4, 3), (3, 0), (4, 0), (0, 0), (0, 2), (0, 4), 
[DBG]  SAT instance and solver created.
Currently solving
Instance name: scen
Map name: map
Encoding used: disappear_at_goal
SAT solver used: Kissat
Optimizing function: sum of costs
Number of agents: 9
Mks LB: 6
SoC LB: 28
Delta: 0
Remaining time: 300000 [ms]

[STAT] Solver returned: -1
[DBG]  SAT solver failed.
[STAT] SAT solver failed to find a valid solution.
[DBG]  ====================
[DBG]  SAT destroy operator called.
[DBG]  SAT heuristic: 2
[DBG]  key_agent_id: 123
[DBG]  key_agent_id global path length: 34
[DBG]  Submap content (global positions):
[DBG]  15 16 17 18 19 
[DBG]  47 48 49 50 51 
[DBG]  79 80 81 82 83 
[DBG]  111 112 113 114 115 
[DBG]  143 144 145 146 147 
[DBG]  Map content with agents and obstacles:
[DBG]  . . X . . 
[DBG]  . . A . X 
[DBG]  . . A . . 
[DBG]  . . . X . 
[DBG]  X . X . . 
[DBG]  content of the map structure that we pass to the SAT solver:
[DBG]  1  1  -1  1  1  
[DBG]  1  1  1  1  -1  
[DBG]  1  1  1  1  1  
[DBG]  1  1  1  -1  1  
[DBG]  -1  1  -1  1  1  
[DBG]  Identifying agents in a submap for rescheduling (when key_agent is there at the time 32):
[DBG]  Agent 123 found intervals in the sub-map:
[DBG]   [30..33]
[DBG]  Agent 123 (interval in submap: [30..33]) contains time 32, added to replan.
[DBG]  Agent 146 found intervals in the sub-map:
[DBG]   [28..35]
[DBG]  Agent 146 (interval in submap: [28..35]) contains time 32, added to replan.
[DBG]  Agent 123 | Start (global): 81 -> (local): (2, 2) at time 32 | Goal (global): 113 -> (local): (3, 2) at time 33
[DBG]  Agent 146 | Start (global): 49 -> (local): (1, 2) at time 32 | Goal (global): 19 -> (local): (0, 4) at time 35
[DBG]  [REPAIR] SAT destroy operator called.
[DBG]  [REPAIR] SAT operator â€“ launching subproblem FOR OPTIMIZATION.
[DBG]  Creating local paths (sx, sy) in the submap for T_sync = 32
[DBG]    Agent 123 (global paths from T=32 to 33) has local path: (2,2) (3,2) 
[DBG]    Agent 146 (global paths from T=32 to 35) has local path: (1,2) (1,3) (0,3) (0,4) 
[DBG]  Checking input data for SAT solver:
[DBG]    - Number of agents to replan: 2
[DBG]  Agent 123 has the original local path length: 2 => Start (2,2), Goal (3,2)
[DBG]  Agent 146 has the original local path length: 4 => Start (1,2), Goal (0,4)
[DBG]  Start position: (2, 2), (1, 2), 
[DBG]  Goal position: (3, 2), (0, 4), 
[DBG]  SAT instance and solver created.
Currently solving
Instance name: scen
Map name: map
Encoding used: disappear_at_goal
SAT solver used: Kissat
Optimizing function: sum of costs
Number of agents: 2
Mks LB: 4
SoC LB: 6
Delta: 0
Remaining time: 300000 [ms]

Found plan [agents = 2] [timesteps = 4]
Agent #0 : 10 15 0 0 
Agent #1 : 6 7 2 3 

[STAT] Solver returned: 0
[DBG]  Agent (index) 123 | New local path (submap idx):
[DBG]  10 15 
[DBG]  Agent (index) 146 | New local path (submap idx):
[DBG]  6 7 2 3 
[DBG]  Update the agent path 123 | Original local length: 2 | New local length: 2
[DBG]  agent 123 t=0 => decoded (sx,sy)=(2,2) => global_id=81
[DBG]  agent 123 t=1 => decoded (sx,sy)=(3,2) => global_id=113
[DBG]  Complete path of agent 123:
[DBG]    Original: 637 636 604 603 571 539 507 475 443 411 411 411 411 379 378 377 345 313 281 249 248 247 215 214 213 181 149 148 116 84 83 82 81 113 
[DBG]    New:     637 636 604 603 571 539 507 475 443 411 411 411 411 379 378 377 345 313 281 249 248 247 215 214 213 181 149 148 116 84 83 82 81 113 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 637 636 604 603 571 539 507 475 443 411 411 411 411 379 378 377 345 313 281 249 248 247 215 214 213 181 149 148 116 84 83 82 
[DBG]    Local path (in submap): 81 113 
[DBG]    Suffix (out of submap): 
[DBG]  Original agent path length 123 je: 34
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 0: 637, 636, 604, 603, 571, 539, 507, 475, 443, 411, 411, 411, 411, 379, 378, 377, 345, 313, 281, 249, 248, 247, 215, 214, 213, 181, 149, 148, 116, 84, 83, 82, 81, 113, 
[DBG]  Path for agent 123 updated, resulting length: 34
[DBG]  Update the agent path 146 | Original local length: 4 | New local length: 4
[DBG]  agent 146 t=0 => decoded (sx,sy)=(1,2) => global_id=49
[DBG]  agent 146 t=1 => decoded (sx,sy)=(1,3) => global_id=50
[DBG]  agent 146 t=2 => decoded (sx,sy)=(0,3) => global_id=18
[DBG]  agent 146 t=3 => decoded (sx,sy)=(0,4) => global_id=19
[DBG]  Complete path of agent 146:
[DBG]    Original: 512 513 481 482 450 418 419 387 388 389 390 358 326 294 295 263 264 265 233 234 235 236 204 172 140 141 109 110 111 79 80 48 49 50 18 19 
[DBG]    New:     512 513 481 482 450 418 419 387 388 389 390 358 326 294 295 263 264 265 233 234 235 236 204 172 140 141 109 110 111 79 80 48 49 50 18 19 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 512 513 481 482 450 418 419 387 388 389 390 358 326 294 295 263 264 265 233 234 235 236 204 172 140 141 109 110 111 79 80 48 
[DBG]    Local path (in submap): 49 50 18 19 
[DBG]    Suffix (out of submap): 
[DBG]  Original agent path length 146 je: 36
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 1: 512, 513, 481, 482, 450, 418, 419, 387, 388, 389, 390, 358, 326, 294, 295, 263, 264, 265, 233, 234, 235, 236, 204, 172, 140, 141, 109, 110, 111, 79, 80, 48, 49, 50, 18, 19, 
[DBG]  Path for agent 146 updated, resulting length: 36
[DBG]  Paths successfully updated.
[DBG]  (LNS.cpp) New path for agent 123: 
[DBG]  637, 636, 604, 603, 571, 539, 507, 475, 443, 411, 411, 411, 411, 379, 378, 377, 345, 313, 281, 249, 248, 247, 215, 214, 213, 181, 149, 148, 116, 84, 83, 82, 81, 113, 
[DBG]  (LNS.cpp) New path for agent 146: 
[DBG]  512, 513, 481, 482, 450, 418, 419, 387, 388, 389, 390, 358, 326, 294, 295, 263, 264, 265, 233, 234, 235, 236, 204, 172, 140, 141, 109, 110, 111, 79, 80, 48, 49, 50, 18, 19, 
[DBG]  component_weights = {0.414922, 0.062118, 0.0649599, 0.458}
[DBG]  opSuccess value: 1
[STAT] neighbor.sum_of_costs before recomputation: 68
[STAT] neighbor.old_sum_of_costs before recomputation: 68
[STAT] sum_of_costs before recomputation: 4158
[DBG]  Validate solution immediately after SAT success.
[DBG]  No problems after SAT replan.
[DBG]  Recomputing sum_of_cost by dividing neighbor.sum_of_costs and neighbor.old_sum_of_costs
[STAT] sum_of_costs after recomputation: 4158
[STAT] Iteration 193
[DBG]  Using SAT operator (destroy+repair SAT).
[DBG]  ====================
[DBG]  SAT destroy operator called.
[DBG]  SAT heuristic: 2
[DBG]  key_agent_id: 27
[DBG]  key_agent_id global path length: 22
[DBG]  Submap content (global positions):
[DBG]  621 622 623 624 625 
[DBG]  653 654 655 656 657 
[DBG]  685 686 687 688 689 
[DBG]  717 718 719 720 721 
[DBG]  749 750 751 752 753 
[DBG]  Map content with agents and obstacles:
[DBG]  X A . X . 
[DBG]  . . . . A 
[DBG]  A . A A A 
[DBG]  . . A A . 
[DBG]  X . . . . 
[DBG]  content of the map structure that we pass to the SAT solver:
[DBG]  -1  1  1  -1  1  
[DBG]  1  1  1  1  1  
[DBG]  1  1  1  1  1  
[DBG]  1  1  1  1  1  
[DBG]  -1  1  1  1  1  
[DBG]  Identifying agents in a submap for rescheduling (when key_agent is there at the time 14):
[DBG]  Agent 0 found intervals in the sub-map:
[DBG]   [14..20]
[DBG]  Agent 0 (interval in submap: [14..20]) contains time 14, added to replan.
[DBG]  Agent 27 found intervals in the sub-map:
[DBG]   [0..18]
[DBG]  Agent 27 (interval in submap: [0..18]) contains time 14, added to replan.
[DBG]  Agent 39 found intervals in the sub-map:
[DBG]   [7..15]
[DBG]  Agent 39 (interval in submap: [7..15]) contains time 14, added to replan.
[DBG]  Agent 50 found intervals in the sub-map:
[DBG]   [13..18]
[DBG]  Agent 50 (interval in submap: [13..18]) contains time 14, added to replan.
[DBG]  Agent 56 found intervals in the sub-map:
[DBG]   [13..17]
[DBG]  Agent 56 (interval in submap: [13..17]) contains time 14, added to replan.
[DBG]  Agent 62 found intervals in the sub-map:
[DBG]   [0..9]
[DBG]  Agent 62 is not in sub-map at time 14 (intervals: 
[DBG]  [0..9] )
[DBG]  Agent 79 found intervals in the sub-map:
[DBG]   [12..16]
[DBG]  Agent 79 (interval in submap: [12..16]) contains time 14, added to replan.
[DBG]  Agent 96 found intervals in the sub-map:
[DBG]   [9..14]
[DBG]  Agent 96 (interval in submap: [9..14]) contains time 14, added to replan.
[DBG]  Agent 114 found intervals in the sub-map:
[DBG]   [9..13]
[DBG]  Agent 114 is not in sub-map at time 14 (intervals: 
[DBG]  [9..13] )
[DBG]  Agent 118 found intervals in the sub-map:
[DBG]  
[DBG]  Agent 118 is not in sub-map at time 14 (intervals: 
[DBG]  )
[DBG]  Agent 130 found intervals in the sub-map:
[DBG]  
[DBG]  Agent 130 is not in sub-map at time 14 (intervals: 
[DBG]  )
[DBG]  Agent 132 found intervals in the sub-map:
[DBG]   [9..14]
[DBG]  Agent 132 (interval in submap: [9..14]) contains time 14, added to replan.
[DBG]  Agent 0 | Start (global): 685 -> (local): (2, 0) at time 14 | Goal (global): 657 -> (local): (1, 4) at time 20
[DBG]  Agent 27 | Start (global): 687 -> (local): (2, 2) at time 14 | Goal (global): 751 -> (local): (4, 2) at time 18
[DBG]  Agent 39 | Start (global): 689 -> (local): (2, 4) at time 14 | Goal (global): 657 -> (local): (1, 4) at time 15
[DBG]  Agent 50 | Start (global): 719 -> (local): (3, 2) at time 14 | Goal (global): 622 -> (local): (0, 1) at time 18
[DBG]  Agent 56 | Start (global): 720 -> (local): (3, 3) at time 14 | Goal (global): 657 -> (local): (1, 4) at time 17
[DBG]  Agent 79 | Start (global): 688 -> (local): (2, 3) at time 14 | Goal (global): 657 -> (local): (1, 4) at time 16
[DBG]  Agent 96 | Start (global): 657 -> (local): (1, 4) at time 14 | Goal (global): 657 -> (local): (1, 4) at time 14
[DBG]  Agent 132 | Start (global): 622 -> (local): (0, 1) at time 14 | Goal (global): 622 -> (local): (0, 1) at time 14
[DBG]  [REPAIR] SAT destroy operator called.
[DBG]  [REPAIR] SAT operator â€“ launching subproblem FOR OPTIMIZATION.
[DBG]  Creating local paths (sx, sy) in the submap for T_sync = 14
[DBG]    Agent 0 (global paths from T=14 to 20) has local path: (2,0) (1,0) (1,1) (1,2) (1,3) (1,3) (1,4) 
[DBG]    Agent 27 (global paths from T=14 to 18) has local path: (2,2) (3,2) (4,2) (4,1) (4,2) 
[DBG]    Agent 39 (global paths from T=14 to 15) has local path: (2,4) (1,4) 
[DBG]    Agent 50 (global paths from T=14 to 18) has local path: (3,2) (3,1) (2,1) (1,1) (0,1) 
[DBG]    Agent 56 (global paths from T=14 to 17) has local path: (3,3) (2,3) (2,4) (1,4) 
[DBG]    Agent 79 (global paths from T=14 to 16) has local path: (2,3) (1,3) (1,4) 
[DBG]    Agent 96 (global paths from T=14 to 14) has local path: (1,4) 
[DBG]    Agent 132 (global paths from T=14 to 14) has local path: (0,1) 
[DBG]  Checking input data for SAT solver:
[DBG]    - Number of agents to replan: 8
[DBG]  Agent 0 has the original local path length: 7 => Start (2,0), Goal (1,4)
[DBG]  Agent 27 has the original local path length: 5 => Start (2,2), Goal (4,2)
[DBG]  Agent 39 has the original local path length: 2 => Start (2,4), Goal (1,4)
[DBG]  Agent 50 has the original local path length: 5 => Start (3,2), Goal (0,1)
[DBG]  Agent 56 has the original local path length: 4 => Start (3,3), Goal (1,4)
[DBG]  Agent 79 has the original local path length: 3 => Start (2,3), Goal (1,4)
[DBG]  Agent 96 has the original local path length: 1 => Start (1,4), Goal (1,4)
[DBG]  Agent 132 has the original local path length: 1 => Start (0,1), Goal (0,1)
[DBG]  Start position: (2, 0), (2, 2), (2, 4), (3, 2), (3, 3), (2, 3), (1, 4), (0, 1), 
[DBG]  Goal position: (1, 4), (4, 2), (1, 4), (0, 1), (1, 4), (1, 4), (1, 4), (0, 1), 
[DBG]  SAT instance and solver created.
Currently solving
Instance name: scen
Map name: map
Encoding used: disappear_at_goal
SAT solver used: Kissat
Optimizing function: sum of costs
Number of agents: 8
Mks LB: 6
SoC LB: 25
Delta: 0
Remaining time: 300000 [ms]

Vertex conflict! Agents 1, 2, timestep 3, location 0
Swapping conflict! Agents 1, 2, timestep 3, edge (0,0)
Vertex conflict! Agents 1, 2, timestep 4, location 0
Swapping conflict! Agents 1, 2, timestep 4, edge (0,0)
Vertex conflict! Agents 1, 2, timestep 5, location 0
Vertex conflict! Agents 1, 3, timestep 4, location 0
Swapping conflict! Agents 1, 3, timestep 4, edge (0,0)
Vertex conflict! Agents 1, 3, timestep 5, location 0
Vertex conflict! Agents 1, 4, timestep 4, location 0
Swapping conflict! Agents 1, 4, timestep 4, edge (0,0)
Vertex conflict! Agents 1, 4, timestep 5, location 0
Vertex conflict! Agents 1, 5, timestep 3, location 0
Swapping conflict! Agents 1, 5, timestep 3, edge (0,0)
Vertex conflict! Agents 1, 5, timestep 4, location 0
Swapping conflict! Agents 1, 5, timestep 4, edge (0,0)
Vertex conflict! Agents 1, 5, timestep 5, location 0
Vertex conflict! Agents 1, 6, timestep 3, location 0
Swapping conflict! Agents 1, 6, timestep 3, edge (0,0)
Vertex conflict! Agents 1, 6, timestep 4, location 0
Swapping conflict! Agents 1, 6, timestep 4, edge (0,0)
Vertex conflict! Agents 1, 6, timestep 5, location 0
Vertex conflict! Agents 1, 7, timestep 3, location 0
Swapping conflict! Agents 1, 7, timestep 3, edge (0,0)
Vertex conflict! Agents 1, 7, timestep 4, location 0
Swapping conflict! Agents 1, 7, timestep 4, edge (0,0)
Vertex conflict! Agents 1, 7, timestep 5, location 0
Vertex conflict! Agents 2, 3, timestep 4, location 0
Swapping conflict! Agents 2, 3, timestep 4, edge (0,0)
Vertex conflict! Agents 2, 3, timestep 5, location 0
Vertex conflict! Agents 2, 4, timestep 4, location 0
Swapping conflict! Agents 2, 4, timestep 4, edge (0,0)
Vertex conflict! Agents 2, 4, timestep 5, location 0
Vertex conflict! Agents 2, 5, timestep 3, location 0
Swapping conflict! Agents 2, 5, timestep 3, edge (0,0)
Vertex conflict! Agents 2, 5, timestep 4, location 0
Swapping conflict! Agents 2, 5, timestep 4, edge (0,0)
Vertex conflict! Agents 2, 5, timestep 5, location 0
Vertex conflict! Agents 2, 6, timestep 2, location 0
Swapping conflict! Agents 2, 6, timestep 2, edge (0,0)
Vertex conflict! Agents 2, 6, timestep 3, location 0
Swapping conflict! Agents 2, 6, timestep 3, edge (0,0)
Vertex conflict! Agents 2, 6, timestep 4, location 0
Swapping conflict! Agents 2, 6, timestep 4, edge (0,0)
Vertex conflict! Agents 2, 6, timestep 5, location 0
Vertex conflict! Agents 2, 7, timestep 2, location 0
Swapping conflict! Agents 2, 7, timestep 2, edge (0,0)
Vertex conflict! Agents 2, 7, timestep 3, location 0
Swapping conflict! Agents 2, 7, timestep 3, edge (0,0)
Vertex conflict! Agents 2, 7, timestep 4, location 0
Swapping conflict! Agents 2, 7, timestep 4, edge (0,0)
Vertex conflict! Agents 2, 7, timestep 5, location 0
Vertex conflict! Agents 3, 4, timestep 4, location 0
Swapping conflict! Agents 3, 4, timestep 4, edge (0,0)
Vertex conflict! Agents 3, 4, timestep 5, location 0
Vertex conflict! Agents 3, 5, timestep 4, location 0
Swapping conflict! Agents 3, 5, timestep 4, edge (0,0)
Vertex conflict! Agents 3, 5, timestep 5, location 0
Vertex conflict! Agents 3, 6, timestep 4, location 0
Swapping conflict! Agents 3, 6, timestep 4, edge (0,0)
Vertex conflict! Agents 3, 6, timestep 5, location 0
Vertex conflict! Agents 3, 7, timestep 4, location 0
Swapping conflict! Agents 3, 7, timestep 4, edge (0,0)
Vertex conflict! Agents 3, 7, timestep 5, location 0
Vertex conflict! Agents 4, 5, timestep 4, location 0
Swapping conflict! Agents 4, 5, timestep 4, edge (0,0)
Vertex conflict! Agents 4, 5, timestep 5, location 0
Vertex conflict! Agents 4, 6, timestep 4, location 0
Swapping conflict! Agents 4, 6, timestep 4, edge (0,0)
Vertex conflict! Agents 4, 6, timestep 5, location 0
Vertex conflict! Agents 4, 7, timestep 4, location 0
Swapping conflict! Agents 4, 7, timestep 4, edge (0,0)
Vertex conflict! Agents 4, 7, timestep 5, location 0
Vertex conflict! Agents 5, 6, timestep 3, location 0
Swapping conflict! Agents 5, 6, timestep 3, edge (0,0)
Vertex conflict! Agents 5, 6, timestep 4, location 0
Swapping conflict! Agents 5, 6, timestep 4, edge (0,0)
Vertex conflict! Agents 5, 6, timestep 5, location 0
Vertex conflict! Agents 5, 7, timestep 3, location 0
Swapping conflict! Agents 5, 7, timestep 3, edge (0,0)
Vertex conflict! Agents 5, 7, timestep 4, location 0
Swapping conflict! Agents 5, 7, timestep 4, edge (0,0)
Vertex conflict! Agents 5, 7, timestep 5, location 0
Vertex conflict! Agents 6, 7, timestep 1, location 0
Swapping conflict! Agents 6, 7, timestep 1, edge (0,0)
Vertex conflict! Agents 6, 7, timestep 2, location 0
Swapping conflict! Agents 6, 7, timestep 2, edge (0,0)
Vertex conflict! Agents 6, 7, timestep 3, location 0
Swapping conflict! Agents 6, 7, timestep 3, edge (0,0)
Vertex conflict! Agents 6, 7, timestep 4, location 0
Swapping conflict! Agents 6, 7, timestep 4, edge (0,0)
Vertex conflict! Agents 6, 7, timestep 5, location 0
Found plan [agents = 8] [timesteps = 6]
Agent #0 : 8 9 10 11 12 7 
Agent #1 : 10 15 19 0 0 0 
Agent #2 : 12 7 0 0 0 0 
Agent #3 : 15 14 9 4 0 0 
Agent #4 : 16 17 12 7 0 0 
Agent #5 : 11 12 7 0 0 0 
Agent #6 : 7 0 0 0 0 0 
Agent #7 : 0 0 0 0 0 0 

[STAT] Solver returned: 0
[DBG]  Agent (index) 0 | New local path (submap idx):
[DBG]  8 9 10 11 12 7 
[DBG]  Agent (index) 27 | New local path (submap idx):
[DBG]  10 15 19 
[DBG]  Agent (index) 39 | New local path (submap idx):
[DBG]  12 7 
[DBG]  Agent (index) 50 | New local path (submap idx):
[DBG]  15 14 9 4 0 
[DBG]  Agent (index) 56 | New local path (submap idx):
[DBG]  16 17 12 7 
[DBG]  Agent (index) 79 | New local path (submap idx):
[DBG]  11 12 7 
[DBG]  Agent (index) 96 | New local path (submap idx):
[DBG]  7 
[DBG]  Agent (index) 132 | New local path (submap idx):
[DBG]  0 
[DBG]  Update the agent path 0 | Original local length: 7 | New local length: 6
[DBG]  agent 0 t=0 => decoded (sx,sy)=(2,0) => global_id=685
[DBG]  agent 0 t=1 => decoded (sx,sy)=(2,1) => global_id=686
[DBG]  agent 0 t=2 => decoded (sx,sy)=(2,2) => global_id=687
[DBG]  agent 0 t=3 => decoded (sx,sy)=(2,3) => global_id=688
[DBG]  agent 0 t=4 => decoded (sx,sy)=(2,4) => global_id=689
[DBG]  agent 0 t=5 => decoded (sx,sy)=(1,4) => global_id=657
[DBG]  Complete path of agent 0:
[DBG]    Original: 517 549 550 550 582 583 584 585 617 649 650 651 683 684 685 653 654 655 656 656 657 658 659 660 692 724 756 788 820 821 822 823 824 856 857 858 859 860 861 862 830 798 799 
[DBG]    New:     517 549 550 550 582 583 584 585 617 649 650 651 683 684 685 686 687 688 689 657 658 659 660 692 724 756 788 820 821 822 823 824 856 857 858 859 860 861 862 830 798 799 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 517 549 550 550 582 583 584 585 617 649 650 651 683 684 
[DBG]    Local path (in submap): 685 686 687 688 689 657 658 
[DBG]    Suffix (out of submap): 659 660 692 724 756 788 820 821 822 823 824 856 857 858 859 860 861 862 830 798 799 
[DBG]  Original agent path length 0 je: 43
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 0: 517, 549, 550, 550, 582, 583, 584, 585, 617, 649, 650, 651, 683, 684, 685, 686, 687, 688, 689, 657, 658, 659, 660, 692, 724, 756, 788, 820, 821, 822, 823, 824, 856, 857, 858, 859, 860, 861, 862, 830, 798, 799, 
[DBG]  Path for agent 0 updated, resulting length: 42
[DBG]  Update the agent path 27 | Original local length: 5 | New local length: 3
[DBG]  agent 27 t=0 => decoded (sx,sy)=(2,2) => global_id=687
[DBG]  agent 27 t=1 => decoded (sx,sy)=(3,2) => global_id=719
[DBG]  agent 27 t=2 => decoded (sx,sy)=(4,2) => global_id=751
[DBG]  Complete path of agent 27:
[DBG]    Original: 653 653 653 653 653 653 654 654 622 622 622 622 654 655 687 719 751 750 751 783 815 814 
[DBG]    New:     653 653 653 653 653 653 654 654 622 622 622 622 654 655 687 719 751 783 815 814 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 653 653 653 653 653 653 654 654 622 622 622 622 654 655 
[DBG]    Local path (in submap): 687 719 751 783 815 
[DBG]    Suffix (out of submap): 814 
[DBG]  Original agent path length 27 je: 22
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 1: 653, 653, 653, 653, 653, 653, 654, 654, 622, 622, 622, 622, 654, 655, 687, 719, 751, 783, 815, 814, 
[DBG]  Path for agent 27 updated, resulting length: 20
[DBG]  Update the agent path 39 | Original local length: 2 | New local length: 2
[DBG]  agent 39 t=0 => decoded (sx,sy)=(2,4) => global_id=689
[DBG]  agent 39 t=1 => decoded (sx,sy)=(1,4) => global_id=657
[DBG]  Complete path of agent 39:
[DBG]    Original: 680 712 713 714 715 683 684 685 686 687 688 688 688 689 689 657 658 659 691 692 724 756 788 788 820 821 822 823 855 856 857 858 859 860 892 
[DBG]    New:     680 712 713 714 715 683 684 685 686 687 688 688 688 689 689 657 658 659 691 692 724 756 788 788 820 821 822 823 855 856 857 858 859 860 892 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 680 712 713 714 715 683 684 685 686 687 688 688 688 689 
[DBG]    Local path (in submap): 689 657 
[DBG]    Suffix (out of submap): 658 659 691 692 724 756 788 788 820 821 822 823 855 856 857 858 859 860 892 
[DBG]  Original agent path length 39 je: 35
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 2: 680, 712, 713, 714, 715, 683, 684, 685, 686, 687, 688, 688, 688, 689, 689, 657, 658, 659, 691, 692, 724, 756, 788, 788, 820, 821, 822, 823, 855, 856, 857, 858, 859, 860, 892, 
[DBG]  Path for agent 39 updated, resulting length: 35
[DBG]  Update the agent path 50 | Original local length: 5 | New local length: 5
[DBG]  agent 50 t=0 => decoded (sx,sy)=(3,2) => global_id=719
[DBG]  agent 50 t=1 => decoded (sx,sy)=(3,1) => global_id=718
[DBG]  agent 50 t=2 => decoded (sx,sy)=(2,1) => global_id=686
[DBG]  agent 50 t=3 => decoded (sx,sy)=(1,1) => global_id=654
[DBG]  agent 50 t=4 => decoded (sx,sy)=(0,1) => global_id=622
[DBG]  Complete path of agent 50:
[DBG]    Original: 888 887 886 885 884 883 882 850 849 848 847 815 783 751 719 718 686 654 622 590 589 588 587 587 588 556 524 492 460 428 427 395 363 331 299 300 268 269 237 205 173 141 
[DBG]    New:     888 887 886 885 884 883 882 850 849 848 847 815 783 751 719 718 686 654 622 590 589 588 587 587 588 556 524 492 460 428 427 395 363 331 299 300 268 269 237 205 173 141 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 888 887 886 885 884 883 882 850 849 848 847 815 783 751 
[DBG]    Local path (in submap): 719 718 686 654 622 
[DBG]    Suffix (out of submap): 590 589 588 587 587 588 556 524 492 460 428 427 395 363 331 299 300 268 269 237 205 173 141 
[DBG]  Original agent path length 50 je: 42
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 3: 888, 887, 886, 885, 884, 883, 882, 850, 849, 848, 847, 815, 783, 751, 719, 718, 686, 654, 622, 590, 589, 588, 587, 587, 588, 556, 524, 492, 460, 428, 427, 395, 363, 331, 299, 300, 268, 269, 237, 205, 173, 141, 
[DBG]  Path for agent 50 updated, resulting length: 42
[DBG]  Update the agent path 56 | Original local length: 4 | New local length: 4
[DBG]  agent 56 t=0 => decoded (sx,sy)=(3,3) => global_id=720
[DBG]  agent 56 t=1 => decoded (sx,sy)=(3,4) => global_id=721
[DBG]  agent 56 t=2 => decoded (sx,sy)=(2,4) => global_id=689
[DBG]  agent 56 t=3 => decoded (sx,sy)=(1,4) => global_id=657
[DBG]  Complete path of agent 56:
[DBG]    Original: 805 806 807 808 809 810 811 812 813 814 815 783 784 752 720 688 689 657 658 659 627 627 627 628 629 597 565 566 534 502 470 470 438 439 407 408 409 377 378 379 380 348 349 350 351 319 287 255 
[DBG]    New:     805 806 807 808 809 810 811 812 813 814 815 783 784 752 720 721 689 657 658 659 627 627 627 628 629 597 565 566 534 502 470 470 438 439 407 408 409 377 378 379 380 348 349 350 351 319 287 255 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 805 806 807 808 809 810 811 812 813 814 815 783 784 752 
[DBG]    Local path (in submap): 720 721 689 657 
[DBG]    Suffix (out of submap): 658 659 627 627 627 628 629 597 565 566 534 502 470 470 438 439 407 408 409 377 378 379 380 348 349 350 351 319 287 255 
[DBG]  Original agent path length 56 je: 48
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 4: 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 783, 784, 752, 720, 721, 689, 657, 658, 659, 627, 627, 627, 628, 629, 597, 565, 566, 534, 502, 470, 470, 438, 439, 407, 408, 409, 377, 378, 379, 380, 348, 349, 350, 351, 319, 287, 255, 
[DBG]  Path for agent 56 updated, resulting length: 48
[DBG]  Update the agent path 79 | Original local length: 3 | New local length: 3
[DBG]  agent 79 t=0 => decoded (sx,sy)=(2,3) => global_id=688
[DBG]  agent 79 t=1 => decoded (sx,sy)=(2,4) => global_id=689
[DBG]  agent 79 t=2 => decoded (sx,sy)=(1,4) => global_id=657
[DBG]  Complete path of agent 79:
[DBG]    Original: 1004 1005 973 974 942 910 878 879 847 815 783 784 752 720 688 656 657 658 659 627 628 629 597 565 533 534 502 503 504 472 440 408 409 377 345 313 281 249 217 185 153 121 122 123 
[DBG]    New:     1004 1005 973 974 942 910 878 879 847 815 783 784 752 720 688 689 657 658 659 627 628 629 597 565 533 534 502 503 504 472 440 408 409 377 345 313 281 249 217 185 153 121 122 123 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 1004 1005 973 974 942 910 878 879 847 815 783 784 752 720 
[DBG]    Local path (in submap): 688 689 657 
[DBG]    Suffix (out of submap): 658 659 627 628 629 597 565 533 534 502 503 504 472 440 408 409 377 345 313 281 249 217 185 153 121 122 123 
[DBG]  Original agent path length 79 je: 44
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 5: 1004, 1005, 973, 974, 942, 910, 878, 879, 847, 815, 783, 784, 752, 720, 688, 689, 657, 658, 659, 627, 628, 629, 597, 565, 533, 534, 502, 503, 504, 472, 440, 408, 409, 377, 345, 313, 281, 249, 217, 185, 153, 121, 122, 123, 
[DBG]  Path for agent 79 updated, resulting length: 44
[DBG]  Update the agent path 96 | Original local length: 1 | New local length: 1
[DBG]  agent 96 t=0 => decoded (sx,sy)=(1,4) => global_id=657
[DBG]  Complete path of agent 96:
[DBG]    Original: 647 648 680 712 713 714 715 683 684 685 653 654 655 656 657 658 659 691 692 724 756 788 820 821 822 823 824 856 857 858 859 827 
[DBG]    New:     647 648 680 712 713 714 715 683 684 685 653 654 655 656 657 658 659 691 692 724 756 788 820 821 822 823 824 856 857 858 859 827 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 647 648 680 712 713 714 715 683 684 685 653 654 655 656 
[DBG]    Local path (in submap): 657 
[DBG]    Suffix (out of submap): 658 659 691 692 724 756 788 820 821 822 823 824 856 857 858 859 827 
[DBG]  Original agent path length 96 je: 32
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 6: 647, 648, 680, 712, 713, 714, 715, 683, 684, 685, 653, 654, 655, 656, 657, 658, 659, 691, 692, 724, 756, 788, 820, 821, 822, 823, 824, 856, 857, 858, 859, 827, 
[DBG]  Path for agent 96 updated, resulting length: 32
[DBG]  Update the agent path 132 | Original local length: 1 | New local length: 1
[DBG]  agent 132 t=0 => decoded (sx,sy)=(0,1) => global_id=622
[DBG]  Complete path of agent 132:
[DBG]    Original: 876 908 909 910 878 846 814 815 783 751 750 718 686 654 622 590 558 526 525 524 523 491 490 458 426 427 395 363 331 299 267 
[DBG]    New:     876 908 909 910 878 846 814 815 783 751 750 718 686 654 622 590 558 526 525 524 523 491 490 458 426 427 395 363 331 299 267 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 876 908 909 910 878 846 814 815 783 751 750 718 686 654 
[DBG]    Local path (in submap): 622 
[DBG]    Suffix (out of submap): 590 558 526 525 524 523 491 490 458 426 427 395 363 331 299 267 
[DBG]  Original agent path length 132 je: 31
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 7: 876, 908, 909, 910, 878, 846, 814, 815, 783, 751, 750, 718, 686, 654, 622, 590, 558, 526, 525, 524, 523, 491, 490, 458, 426, 427, 395, 363, 331, 299, 267, 
[DBG]  Path for agent 132 updated, resulting length: 31
[DBG]  Paths successfully updated.
[DBG]  (LNS.cpp) New path for agent 0: 
[DBG]  517, 549, 550, 550, 582, 583, 584, 585, 617, 649, 650, 651, 683, 684, 685, 686, 687, 688, 689, 657, 658, 659, 660, 692, 724, 756, 788, 820, 821, 822, 823, 824, 856, 857, 858, 859, 860, 861, 862, 830, 798, 799, 
[DBG]  (LNS.cpp) New path for agent 27: 
[DBG]  653, 653, 653, 653, 653, 653, 654, 654, 622, 622, 622, 622, 654, 655, 687, 719, 751, 783, 815, 814, 
[DBG]  (LNS.cpp) New path for agent 39: 
[DBG]  680, 712, 713, 714, 715, 683, 684, 685, 686, 687, 688, 688, 688, 689, 689, 657, 658, 659, 691, 692, 724, 756, 788, 788, 820, 821, 822, 823, 855, 856, 857, 858, 859, 860, 892, 
[DBG]  (LNS.cpp) New path for agent 50: 
[DBG]  888, 887, 886, 885, 884, 883, 882, 850, 849, 848, 847, 815, 783, 751, 719, 718, 686, 654, 622, 590, 589, 588, 587, 587, 588, 556, 524, 492, 460, 428, 427, 395, 363, 331, 299, 300, 268, 269, 237, 205, 173, 141, 
[DBG]  (LNS.cpp) New path for agent 56: 
[DBG]  805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 783, 784, 752, 720, 721, 689, 657, 658, 659, 627, 627, 627, 628, 629, 597, 565, 566, 534, 502, 470, 470, 438, 439, 407, 408, 409, 377, 378, 379, 380, 348, 349, 350, 351, 319, 287, 255, 
[DBG]  (LNS.cpp) New path for agent 79: 
[DBG]  1004, 1005, 973, 974, 942, 910, 878, 879, 847, 815, 783, 784, 752, 720, 688, 689, 657, 658, 659, 627, 628, 629, 597, 565, 533, 534, 502, 503, 504, 472, 440, 408, 409, 377, 345, 313, 281, 249, 217, 185, 153, 121, 122, 123, 
[DBG]  (LNS.cpp) New path for agent 96: 
[DBG]  647, 648, 680, 712, 713, 714, 715, 683, 684, 685, 653, 654, 655, 656, 657, 658, 659, 691, 692, 724, 756, 788, 820, 821, 822, 823, 824, 856, 857, 858, 859, 827, 
[DBG]  (LNS.cpp) New path for agent 132: 
[DBG]  876, 908, 909, 910, 878, 846, 814, 815, 783, 751, 750, 718, 686, 654, 622, 590, 558, 526, 525, 524, 523, 491, 490, 458, 426, 427, 395, 363, 331, 299, 267, 
[DBG]  component_weights = {0.41106, 0.0615398, 0.0643552, 0.463045}
[DBG]  opSuccess value: 1
[STAT] neighbor.sum_of_costs before recomputation: 286
[STAT] neighbor.old_sum_of_costs before recomputation: 289
[STAT] sum_of_costs before recomputation: 4158
[DBG]  Validate solution immediately after SAT success.
[WARNING] Problem after SAT: Vertex conflict between agents 3 and 0 at location 657 at timestep 19
[DBG]  Attempting immediate repair via init_lns because problem occurred after SAT (should be applied only for conflicts...).
[DBG]  Passing 150 agents to init_lns (skip=true).
[DBG]  path_table contents for selected agents (neighbor.agents):
[DBG]    Agent 0 => controlling path length=42
[DBG]    Agent 27 => controlling path length=20
[DBG]    Agent 39 => controlling path length=35
[DBG]    Agent 50 => controlling path length=42
[DBG]    Agent 56 => controlling path length=48
[DBG]    Agent 79 => controlling path length=44
[DBG]    Agent 96 => controlling path length=32
[DBG]    Agent 132 => controlling path length=31
[DBG]  hodnota skip_initial_solution=1
[DBG]  We skip initialSolution => call buildCollisionData()
[DBG]  buildCollisionData() called â€“ skip_initial_solution case.
[DBG]  Agents.size()=150, collision_graph.size()=150
[DBG]  agent 0 => updateCollidingPairs => foundCollision
[DBG]  agent 3 => updateCollidingPairs => foundCollision
[DBG]  agent 4 => updateCollidingPairs => foundCollision
[DBG]  agent 27 => updateCollidingPairs => foundCollision
[DBG]  agent 49 => updateCollidingPairs => foundCollision
[DBG]  agent 106 => updateCollidingPairs => foundCollision
[DBG]  Conflicting agent pairs:
[DBG]  agent 0 is in conflict with agent 3
[DBG]  agent 0 is in conflict with agent 106
[DBG]  agent 4 is in conflict with agent 27
[DBG]  agent 27 is in conflict with agent 49
[DBG]  buildCollisionData() => sum_of_costs=4155, num_of_colliding_pairs=4
[DBG]  buildCollisionData done => sum_of_costs=4155, num_of_colliding_pairs=4
[DBG]  sum_of_cost hodnota: 4155
[DBG]  After skip/init build => iteration_stats.back(): sum_of_costs=4155, collisions=4
[DEBUG] Using default neighbor generation strategy for conflicts: 2
[DEBUG] Using default neighbor generation strategy for conflicts: 0
[DEBUG] Using default neighbor generation strategy for conflicts: 0
[DEBUG] Using default neighbor generation strategy for conflicts: 2
[DEBUG] Using default neighbor generation strategy for conflicts: 0
	InitLNS(PP): runtime = 0.0180133, iterations = 6, colliding pairs = 0, initial colliding pairs = 4, solution cost = 4179, initial solution cost = 4155, failed iterations = 0
[DBG]  init_lns->sum_of_costs after init_lns->run: 4179
[DBG]  sum_of_costs after assignment from init_lns->run: 4179
[DBG]  Recomputing sum_of_cost by dividing neighbor.sum_of_costs and neighbor.old_sum_of_costs
[STAT] sum_of_costs after recomputation: 4179
[STAT] Iteration 194
[DBG]  Using SAT operator (destroy+repair SAT).
[DBG]  ====================
[DBG]  SAT destroy operator called.
[DBG]  SAT heuristic: 2
[DBG]  key_agent_id: 101
[DBG]  key_agent_id global path length: 60
[DBG]  Submap content (global positions):
[DBG]  345 346 347 348 349 
[DBG]  377 378 379 380 381 
[DBG]  409 410 411 412 413 
[DBG]  441 442 443 444 445 
[DBG]  473 474 475 476 477 
[DBG]  Map content with agents and obstacles:
[DBG]  . X . . . 
[DBG]  A . . . . 
[DBG]  . X A . . 
[DBG]  . X . . . 
[DBG]  . . . . . 
[DBG]  content of the map structure that we pass to the SAT solver:
[DBG]  1  -1  1  1  1  
[DBG]  1  1  1  1  1  
[DBG]  1  -1  1  1  1  
[DBG]  1  -1  1  1  1  
[DBG]  1  1  1  1  1  
[DBG]  Identifying agents in a submap for rescheduling (when key_agent is there at the time 27):
[DBG]  Agent 33 found intervals in the sub-map:
[DBG]  
[DBG]  Agent 33 is not in sub-map at time 27 (intervals: 
[DBG]  )
[DBG]  Agent 46 found intervals in the sub-map:
[DBG]   [20..25]
[DBG]  Agent 46 is not in sub-map at time 27 (intervals: 
[DBG]  [20..25] )
[DBG]  Agent 58 found intervals in the sub-map:
[DBG]   [29..34]
[DBG]  Agent 58 is not in sub-map at time 27 (intervals: 
[DBG]  [29..34] )
[DBG]  Agent 74 found intervals in the sub-map:
[DBG]   [28..28]
[DBG]  Agent 74 is not in sub-map at time 27 (intervals: 
[DBG]  [28..28] )
[DBG]  Agent 84 found intervals in the sub-map:
[DBG]   [24..28]
[DBG]  Agent 84 (interval in submap: [24..28]) contains time 27, added to replan.
[DBG]  Agent 86 found intervals in the sub-map:
[DBG]  
[DBG]  Agent 86 is not in sub-map at time 27 (intervals: 
[DBG]  )
[DBG]  Agent 101 found intervals in the sub-map:
[DBG]   [25..31]
[DBG]  Agent 101 (interval in submap: [25..31]) contains time 27, added to replan.
[DBG]  Agent 109 found intervals in the sub-map:
[DBG]   [25..25]
[DBG]  Agent 109 is not in sub-map at time 27 (intervals: 
[DBG]  [25..25] )
[DBG]  Agent 119 found intervals in the sub-map:
[DBG]   [16..22]
[DBG]  Agent 119 is not in sub-map at time 27 (intervals: 
[DBG]  [16..22] )
[DBG]  Agent 133 found intervals in the sub-map:
[DBG]   [21..24]
[DBG]  Agent 133 is not in sub-map at time 27 (intervals: 
[DBG]  [21..24] )
[DBG]  Agent 84 | Start (global): 377 -> (local): (1, 0) at time 27 | Goal (global): 345 -> (local): (0, 0) at time 28
[DBG]  Agent 101 | Start (global): 411 -> (local): (2, 2) at time 27 | Goal (global): 345 -> (local): (0, 0) at time 31
[DBG]  [REPAIR] SAT destroy operator called.
[DBG]  [REPAIR] SAT operator â€“ launching subproblem FOR OPTIMIZATION.
[DBG]  Creating local paths (sx, sy) in the submap for T_sync = 27
[DBG]    Agent 84 (global paths from T=27 to 28) has local path: (1,0) (0,0) 
[DBG]    Agent 101 (global paths from T=27 to 31) has local path: (2,2) (1,2) (1,1) (1,0) (0,0) 
[DBG]  Checking input data for SAT solver:
[DBG]    - Number of agents to replan: 2
[DBG]  Agent 84 has the original local path length: 2 => Start (1,0), Goal (0,0)
[DBG]  Agent 101 has the original local path length: 5 => Start (2,2), Goal (0,0)
[DBG]  Start position: (1, 0), (2, 2), 
[DBG]  Goal position: (0, 0), (0, 0), 
[DBG]  SAT instance and solver created.
Currently solving
Instance name: scen
Map name: map
Encoding used: disappear_at_goal
SAT solver used: Kissat
Optimizing function: sum of costs
Number of agents: 2
Mks LB: 5
SoC LB: 7
Delta: 0
Remaining time: 300000 [ms]

Vertex conflict! Agents 0, 1, timestep 4, location 0
Found plan [agents = 2] [timesteps = 5]
Agent #0 : 4 0 0 0 0 
Agent #1 : 10 6 5 4 0 

[STAT] Solver returned: 0
[DBG]  Agent (index) 84 | New local path (submap idx):
[DBG]  4 0 
[DBG]  Agent (index) 101 | New local path (submap idx):
[DBG]  10 6 5 4 0 
[DBG]  Update the agent path 84 | Original local length: 2 | New local length: 2
[DBG]  agent 84 t=0 => decoded (sx,sy)=(1,0) => global_id=377
[DBG]  agent 84 t=1 => decoded (sx,sy)=(0,0) => global_id=345
[DBG]  Complete path of agent 84:
[DBG]    Original: 878 846 847 815 783 751 719 687 688 656 657 658 659 627 628 596 597 565 566 534 502 503 504 505 473 441 409 377 345 313 281 249 217 218 186 154 122 90 58 26 25 
[DBG]    New:     878 846 847 815 783 751 719 687 688 656 657 658 659 627 628 596 597 565 566 534 502 503 504 505 473 441 409 377 345 313 281 249 217 218 186 154 122 90 58 26 25 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 878 846 847 815 783 751 719 687 688 656 657 658 659 627 628 596 597 565 566 534 502 503 504 505 473 441 409 
[DBG]    Local path (in submap): 377 345 
[DBG]    Suffix (out of submap): 313 281 249 217 218 186 154 122 90 58 26 25 
[DBG]  Original agent path length 84 je: 41
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 0: 878, 846, 847, 815, 783, 751, 719, 687, 688, 656, 657, 658, 659, 627, 628, 596, 597, 565, 566, 534, 502, 503, 504, 505, 473, 441, 409, 377, 345, 313, 281, 249, 217, 218, 186, 154, 122, 90, 58, 26, 25, 
[DBG]  Path for agent 84 updated, resulting length: 41
[DBG]  Update the agent path 101 | Original local length: 5 | New local length: 5
[DBG]  agent 101 t=0 => decoded (sx,sy)=(2,2) => global_id=411
[DBG]  agent 101 t=1 => decoded (sx,sy)=(1,2) => global_id=379
[DBG]  agent 101 t=2 => decoded (sx,sy)=(1,1) => global_id=378
[DBG]  agent 101 t=3 => decoded (sx,sy)=(1,0) => global_id=377
[DBG]  agent 101 t=4 => decoded (sx,sy)=(0,0) => global_id=345
[DBG]  Complete path of agent 101:
[DBG]    Original: 985 953 921 920 919 919 887 855 823 824 792 793 761 729 697 696 664 632 600 601 602 603 571 539 507 475 443 411 379 378 377 345 313 281 249 248 247 215 214 213 212 244 243 242 241 240 208 176 144 112 111 110 109 108 107 106 105 104 136 168 
[DBG]    New:     985 953 921 920 919 919 887 855 823 824 792 793 761 729 697 696 664 632 600 601 602 603 571 539 507 475 443 411 379 378 377 345 313 281 249 248 247 215 214 213 212 244 243 242 241 240 208 176 144 112 111 110 109 108 107 106 105 104 136 168 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 985 953 921 920 919 919 887 855 823 824 792 793 761 729 697 696 664 632 600 601 602 603 571 539 507 475 443 
[DBG]    Local path (in submap): 411 379 378 377 345 
[DBG]    Suffix (out of submap): 313 281 249 248 247 215 214 213 212 244 243 242 241 240 208 176 144 112 111 110 109 108 107 106 105 104 136 168 
[DBG]  Original agent path length 101 je: 60
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 1: 985, 953, 921, 920, 919, 919, 887, 855, 823, 824, 792, 793, 761, 729, 697, 696, 664, 632, 600, 601, 602, 603, 571, 539, 507, 475, 443, 411, 379, 378, 377, 345, 313, 281, 249, 248, 247, 215, 214, 213, 212, 244, 243, 242, 241, 240, 208, 176, 144, 112, 111, 110, 109, 108, 107, 106, 105, 104, 136, 168, 
[DBG]  Path for agent 101 updated, resulting length: 60
[DBG]  Paths successfully updated.
[DBG]  (LNS.cpp) New path for agent 84: 
[DBG]  878, 846, 847, 815, 783, 751, 719, 687, 688, 656, 657, 658, 659, 627, 628, 596, 597, 565, 566, 534, 502, 503, 504, 505, 473, 441, 409, 377, 345, 313, 281, 249, 217, 218, 186, 154, 122, 90, 58, 26, 25, 
[DBG]  (LNS.cpp) New path for agent 101: 
[DBG]  985, 953, 921, 920, 919, 919, 887, 855, 823, 824, 792, 793, 761, 729, 697, 696, 664, 632, 600, 601, 602, 603, 571, 539, 507, 475, 443, 411, 379, 378, 377, 345, 313, 281, 249, 248, 247, 215, 214, 213, 212, 244, 243, 242, 241, 240, 208, 176, 144, 112, 111, 110, 109, 108, 107, 106, 105, 104, 136, 168, 
[DBG]  component_weights = {0.41596, 0.0610279, 0.0638199, 0.459193}
[DBG]  opSuccess value: 1
[STAT] neighbor.sum_of_costs before recomputation: 99
[STAT] neighbor.old_sum_of_costs before recomputation: 99
[STAT] sum_of_costs before recomputation: 4179
[DBG]  Validate solution immediately after SAT success.
[DBG]  No problems after SAT replan.
[DBG]  Recomputing sum_of_cost by dividing neighbor.sum_of_costs and neighbor.old_sum_of_costs
[STAT] sum_of_costs after recomputation: 4179
[STAT] Iteration 195
[DBG]  Using SAT operator (destroy+repair SAT).
[DBG]  ====================
[DBG]  SAT destroy operator called.
[DBG]  SAT heuristic: 2
[DBG]  key_agent_id: 19
[DBG]  key_agent_id global path length: 20
[DBG]  Submap content (global positions):
[DBG]  522 523 524 525 526 
[DBG]  554 555 556 557 558 
[DBG]  586 587 588 589 590 
[DBG]  618 619 620 621 622 
[DBG]  650 651 652 653 654 
[DBG]  Map content with agents and obstacles:
[DBG]  . . A . A 
[DBG]  X A . X . 
[DBG]  X A A . A 
[DBG]  X A . X . 
[DBG]  . . X . . 
[DBG]  content of the map structure that we pass to the SAT solver:
[DBG]  1  1  1  1  1  
[DBG]  -1  1  1  -1  1  
[DBG]  -1  1  1  1  1  
[DBG]  -1  1  1  -1  1  
[DBG]  1  1  -1  1  1  
[DBG]  Identifying agents in a submap for rescheduling (when key_agent is there at the time 15):
[DBG]  Agent 0 found intervals in the sub-map:
[DBG]   [9..11]
[DBG]  Agent 0 is not in sub-map at time 15 (intervals: 
[DBG]  [9..11] )
[DBG]  Agent 19 found intervals in the sub-map:
[DBG]   [12..18]
[DBG]  Agent 19 (interval in submap: [12..18]) contains time 15, added to replan.
[DBG]  Agent 20 found intervals in the sub-map:
[DBG]   [13..21]
[DBG]  Agent 20 (interval in submap: [13..21]) contains time 15, added to replan.
[DBG]  Agent 67 found intervals in the sub-map:
[DBG]   [18..20]
[DBG]  Agent 67 is not in sub-map at time 15 (intervals: 
[DBG]  [18..20] )
[DBG]  Agent 112 found intervals in the sub-map:
[DBG]   [9..17]
[DBG]  Agent 112 (interval in submap: [9..17]) contains time 15, added to replan.
[DBG]  Agent 121 found intervals in the sub-map:
[DBG]   [11..15]
[DBG]  Agent 121 (interval in submap: [11..15]) contains time 15, added to replan.
[DBG]  Agent 125 found intervals in the sub-map:
[DBG]   [3..10]
[DBG]  Agent 125 is not in sub-map at time 15 (intervals: 
[DBG]  [3..10] )
[DBG]  Agent 130 found intervals in the sub-map:
[DBG]   [19..19] [24..25]
[DBG]  Agent 130 is not in sub-map at time 15 (intervals: 
[DBG]  [19..19] [24..25] )
[DBG]  Agent 131 found intervals in the sub-map:
[DBG]   [15..19]
[DBG]  Agent 131 (interval in submap: [15..19]) contains time 15, added to replan.
[DBG]  Agent 132 found intervals in the sub-map:
[DBG]   [13..20]
[DBG]  Agent 132 (interval in submap: [13..20]) contains time 15, added to replan.
[DBG]  Agent 145 found intervals in the sub-map:
[DBG]   [13..18]
[DBG]  Agent 145 (interval in submap: [13..18]) contains time 15, added to replan.
[DBG]  Agent 19 | Start (global): 588 -> (local): (2, 2) at time 15 | Goal (global): 651 -> (local): (4, 1) at time 18
[DBG]  Agent 20 | Start (global): 524 -> (local): (0, 2) at time 15 | Goal (global): 650 -> (local): (4, 0) at time 21
[DBG]  Agent 112 | Start (global): 619 -> (local): (3, 1) at time 15 | Goal (global): 650 -> (local): (4, 0) at time 17
[DBG]  Agent 121 | Start (global): 555 -> (local): (1, 1) at time 15 | Goal (global): 555 -> (local): (1, 1) at time 15
[DBG]  Agent 131 | Start (global): 526 -> (local): (0, 4) at time 15 | Goal (global): 522 -> (local): (0, 0) at time 19
[DBG]  Agent 132 | Start (global): 590 -> (local): (2, 4) at time 15 | Goal (global): 523 -> (local): (0, 1) at time 20
[DBG]  Agent 145 | Start (global): 587 -> (local): (2, 1) at time 15 | Goal (global): 650 -> (local): (4, 0) at time 18
[DBG]  [REPAIR] SAT destroy operator called.
[DBG]  [REPAIR] SAT operator â€“ launching subproblem FOR OPTIMIZATION.
[DBG]  Creating local paths (sx, sy) in the submap for T_sync = 15
[DBG]    Agent 19 (global paths from T=15 to 18) has local path: (2,2) (3,2) (3,1) (4,1) 
[DBG]    Agent 20 (global paths from T=15 to 21) has local path: (0,2) (1,2) (2,2) (2,1) (3,1) (4,1) (4,0) 
[DBG]    Agent 112 (global paths from T=15 to 17) has local path: (3,1) (4,1) (4,0) 
[DBG]    Agent 121 (global paths from T=15 to 15) has local path: (1,1) 
[DBG]    Agent 131 (global paths from T=15 to 19) has local path: (0,4) (0,3) (0,2) (0,1) (0,0) 
[DBG]    Agent 132 (global paths from T=15 to 20) has local path: (2,4) (1,4) (0,4) (0,3) (0,2) (0,1) 
[DBG]    Agent 145 (global paths from T=15 to 18) has local path: (2,1) (3,1) (4,1) (4,0) 
[DBG]  Checking input data for SAT solver:
[DBG]    - Number of agents to replan: 7
[DBG]  Agent 19 has the original local path length: 4 => Start (2,2), Goal (4,1)
[DBG]  Agent 20 has the original local path length: 7 => Start (0,2), Goal (4,0)
[DBG]  Agent 112 has the original local path length: 3 => Start (3,1), Goal (4,0)
[DBG]  Agent 121 has the original local path length: 1 => Start (1,1), Goal (1,1)
[DBG]  Agent 131 has the original local path length: 5 => Start (0,4), Goal (0,0)
[DBG]  Agent 132 has the original local path length: 6 => Start (2,4), Goal (0,1)
[DBG]  Agent 145 has the original local path length: 4 => Start (2,1), Goal (4,0)
[DBG]  Start position: (2, 2), (0, 2), (3, 1), (1, 1), (0, 4), (2, 4), (2, 1), 
[DBG]  Goal position: (4, 1), (4, 0), (4, 0), (1, 1), (0, 0), (0, 1), (4, 0), 
[DBG]  SAT instance and solver created.
Currently solving
Instance name: scen
Map name: map
Encoding used: disappear_at_goal
SAT solver used: Kissat
Optimizing function: sum of costs
Number of agents: 7
Mks LB: 7
SoC LB: 30
Delta: 0
Remaining time: 300000 [ms]

Vertex conflict! Agents 0, 2, timestep 4, location 0
Swapping conflict! Agents 0, 2, timestep 4, edge (0,0)
Vertex conflict! Agents 0, 2, timestep 5, location 0
Swapping conflict! Agents 0, 2, timestep 5, edge (0,0)
Vertex conflict! Agents 0, 2, timestep 6, location 0
Vertex conflict! Agents 0, 3, timestep 4, location 0
Swapping conflict! Agents 0, 3, timestep 4, edge (0,0)
Vertex conflict! Agents 0, 3, timestep 5, location 0
Swapping conflict! Agents 0, 3, timestep 5, edge (0,0)
Vertex conflict! Agents 0, 3, timestep 6, location 0
Vertex conflict! Agents 0, 4, timestep 4, location 0
Swapping conflict! Agents 0, 4, timestep 4, edge (0,0)
Vertex conflict! Agents 0, 4, timestep 5, location 0
Swapping conflict! Agents 0, 4, timestep 5, edge (0,0)
Vertex conflict! Agents 0, 4, timestep 6, location 0
Vertex conflict! Agents 0, 5, timestep 6, location 0
Vertex conflict! Agents 0, 6, timestep 4, location 0
Swapping conflict! Agents 0, 6, timestep 4, edge (0,0)
Vertex conflict! Agents 0, 6, timestep 5, location 0
Swapping conflict! Agents 0, 6, timestep 5, edge (0,0)
Vertex conflict! Agents 0, 6, timestep 6, location 0
Vertex conflict! Agents 2, 3, timestep 3, location 0
Swapping conflict! Agents 2, 3, timestep 3, edge (0,0)
Vertex conflict! Agents 2, 3, timestep 4, location 0
Swapping conflict! Agents 2, 3, timestep 4, edge (0,0)
Vertex conflict! Agents 2, 3, timestep 5, location 0
Swapping conflict! Agents 2, 3, timestep 5, edge (0,0)
Vertex conflict! Agents 2, 3, timestep 6, location 0
Vertex conflict! Agents 2, 4, timestep 4, location 0
Swapping conflict! Agents 2, 4, timestep 4, edge (0,0)
Vertex conflict! Agents 2, 4, timestep 5, location 0
Swapping conflict! Agents 2, 4, timestep 5, edge (0,0)
Vertex conflict! Agents 2, 4, timestep 6, location 0
Vertex conflict! Agents 2, 5, timestep 6, location 0
Vertex conflict! Agents 2, 6, timestep 4, location 0
Swapping conflict! Agents 2, 6, timestep 4, edge (0,0)
Vertex conflict! Agents 2, 6, timestep 5, location 0
Swapping conflict! Agents 2, 6, timestep 5, edge (0,0)
Vertex conflict! Agents 2, 6, timestep 6, location 0
Vertex conflict! Agents 3, 4, timestep 4, location 0
Swapping conflict! Agents 3, 4, timestep 4, edge (0,0)
Vertex conflict! Agents 3, 4, timestep 5, location 0
Swapping conflict! Agents 3, 4, timestep 5, edge (0,0)
Vertex conflict! Agents 3, 4, timestep 6, location 0
Vertex conflict! Agents 3, 5, timestep 6, location 0
Vertex conflict! Agents 3, 6, timestep 4, location 0
Swapping conflict! Agents 3, 6, timestep 4, edge (0,0)
Vertex conflict! Agents 3, 6, timestep 5, location 0
Swapping conflict! Agents 3, 6, timestep 5, edge (0,0)
Vertex conflict! Agents 3, 6, timestep 6, location 0
Vertex conflict! Agents 4, 5, timestep 6, location 0
Vertex conflict! Agents 4, 6, timestep 4, location 0
Swapping conflict! Agents 4, 6, timestep 4, edge (0,0)
Vertex conflict! Agents 4, 6, timestep 5, location 0
Swapping conflict! Agents 4, 6, timestep 5, edge (0,0)
Vertex conflict! Agents 4, 6, timestep 6, location 0
Vertex conflict! Agents 5, 6, timestep 6, location 0
Found plan [agents = 7] [timesteps = 7]
Agent #0 : 9 13 12 16 0 0 0 
Agent #1 : 2 6 9 13 12 16 15 
Agent #2 : 12 16 15 0 0 0 0 
Agent #3 : 5 0 0 0 0 0 0 
Agent #4 : 4 3 2 1 0 0 0 
Agent #5 : 11 7 4 3 2 1 0 
Agent #6 : 8 12 16 15 0 0 0 

[STAT] Solver returned: 0
[DBG]  Agent (index) 19 | New local path (submap idx):
[DBG]  9 13 12 16 
[DBG]  Agent (index) 20 | New local path (submap idx):
[DBG]  2 6 9 13 12 16 15 
[DBG]  Agent (index) 112 | New local path (submap idx):
[DBG]  12 16 15 
[DBG]  Agent (index) 121 | New local path (submap idx):
[DBG]  5 
[DBG]  Agent (index) 131 | New local path (submap idx):
[DBG]  4 3 2 1 0 
[DBG]  Agent (index) 132 | New local path (submap idx):
[DBG]  11 7 4 3 2 1 
[DBG]  Agent (index) 145 | New local path (submap idx):
[DBG]  8 12 16 15 
[DBG]  Update the agent path 19 | Original local length: 4 | New local length: 4
[DBG]  agent 19 t=0 => decoded (sx,sy)=(2,2) => global_id=588
[DBG]  agent 19 t=1 => decoded (sx,sy)=(3,2) => global_id=620
[DBG]  agent 19 t=2 => decoded (sx,sy)=(3,1) => global_id=619
[DBG]  agent 19 t=3 => decoded (sx,sy)=(4,1) => global_id=651
[DBG]  Complete path of agent 19:
[DBG]    Original: 625 593 594 594 594 594 593 593 592 591 623 623 622 590 589 588 620 619 651 683 
[DBG]    New:     625 593 594 594 594 594 593 593 592 591 623 623 622 590 589 588 620 619 651 683 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 625 593 594 594 594 594 593 593 592 591 623 623 622 590 589 
[DBG]    Local path (in submap): 588 620 619 651 
[DBG]    Suffix (out of submap): 683 
[DBG]  Original agent path length 19 je: 20
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 0: 625, 593, 594, 594, 594, 594, 593, 593, 592, 591, 623, 623, 622, 590, 589, 588, 620, 619, 651, 683, 
[DBG]  Path for agent 19 updated, resulting length: 20
[DBG]  Update the agent path 20 | Original local length: 7 | New local length: 7
[DBG]  agent 20 t=0 => decoded (sx,sy)=(0,2) => global_id=524
[DBG]  agent 20 t=1 => decoded (sx,sy)=(1,2) => global_id=556
[DBG]  agent 20 t=2 => decoded (sx,sy)=(2,2) => global_id=588
[DBG]  agent 20 t=3 => decoded (sx,sy)=(3,2) => global_id=620
[DBG]  agent 20 t=4 => decoded (sx,sy)=(3,1) => global_id=619
[DBG]  agent 20 t=5 => decoded (sx,sy)=(4,1) => global_id=651
[DBG]  agent 20 t=6 => decoded (sx,sy)=(4,0) => global_id=650
[DBG]  Complete path of agent 20:
[DBG]    Original: 242 241 240 239 271 303 335 367 366 398 430 462 494 526 525 524 556 588 587 619 651 650 682 714 746 745 777 809 841 873 905 904 
[DBG]    New:     242 241 240 239 271 303 335 367 366 398 430 462 494 526 525 524 556 588 620 619 651 650 682 714 746 745 777 809 841 873 905 904 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 242 241 240 239 271 303 335 367 366 398 430 462 494 526 525 
[DBG]    Local path (in submap): 524 556 588 620 619 651 650 
[DBG]    Suffix (out of submap): 682 714 746 745 777 809 841 873 905 904 
[DBG]  Original agent path length 20 je: 32
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 1: 242, 241, 240, 239, 271, 303, 335, 367, 366, 398, 430, 462, 494, 526, 525, 524, 556, 588, 620, 619, 651, 650, 682, 714, 746, 745, 777, 809, 841, 873, 905, 904, 
[DBG]  Path for agent 20 updated, resulting length: 32
[DBG]  Update the agent path 112 | Original local length: 3 | New local length: 3
[DBG]  agent 112 t=0 => decoded (sx,sy)=(3,1) => global_id=619
[DBG]  agent 112 t=1 => decoded (sx,sy)=(4,1) => global_id=651
[DBG]  agent 112 t=2 => decoded (sx,sy)=(4,0) => global_id=650
[DBG]  Complete path of agent 112:
[DBG]    Original: 337 369 368 400 432 464 463 462 494 526 525 524 523 555 587 619 651 650 649 648 647 646 645 677 676 675 
[DBG]    New:     337 369 368 400 432 464 463 462 494 526 525 524 523 555 587 619 651 650 649 648 647 646 645 677 676 675 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 337 369 368 400 432 464 463 462 494 526 525 524 523 555 587 
[DBG]    Local path (in submap): 619 651 650 
[DBG]    Suffix (out of submap): 649 648 647 646 645 677 676 675 
[DBG]  Original agent path length 112 je: 26
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 2: 337, 369, 368, 400, 432, 464, 463, 462, 494, 526, 525, 524, 523, 555, 587, 619, 651, 650, 649, 648, 647, 646, 645, 677, 676, 675, 
[DBG]  Path for agent 112 updated, resulting length: 26
[DBG]  Update the agent path 121 | Original local length: 1 | New local length: 1
[DBG]  agent 121 t=0 => decoded (sx,sy)=(1,1) => global_id=555
[DBG]  Complete path of agent 121:
[DBG]    Original: 401 433 433 401 400 432 464 463 462 494 494 526 525 524 523 555 
[DBG]    New:     401 433 433 401 400 432 464 463 462 494 494 526 525 524 523 555 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 401 433 433 401 400 432 464 463 462 494 494 526 525 524 523 
[DBG]    Local path (in submap): 555 
[DBG]    Suffix (out of submap): 
[DBG]  Original agent path length 121 je: 16
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 3: 401, 433, 433, 401, 400, 432, 464, 463, 462, 494, 494, 526, 525, 524, 523, 555, 
[DBG]  Path for agent 121 updated, resulting length: 16
[DBG]  Update the agent path 131 | Original local length: 5 | New local length: 5
[DBG]  agent 131 t=0 => decoded (sx,sy)=(0,4) => global_id=526
[DBG]  agent 131 t=1 => decoded (sx,sy)=(0,3) => global_id=525
[DBG]  agent 131 t=2 => decoded (sx,sy)=(0,2) => global_id=524
[DBG]  agent 131 t=3 => decoded (sx,sy)=(0,1) => global_id=523
[DBG]  agent 131 t=4 => decoded (sx,sy)=(0,0) => global_id=522
[DBG]  Complete path of agent 131:
[DBG]    Original: 341 340 339 338 337 336 336 335 367 366 398 398 430 462 494 526 525 524 523 522 521 520 520 520 519 551 583 584 616 648 680 712 
[DBG]    New:     341 340 339 338 337 336 336 335 367 366 398 398 430 462 494 526 525 524 523 522 521 520 520 520 519 551 583 584 616 648 680 712 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 341 340 339 338 337 336 336 335 367 366 398 398 430 462 494 
[DBG]    Local path (in submap): 526 525 524 523 522 
[DBG]    Suffix (out of submap): 521 520 520 520 519 551 583 584 616 648 680 712 
[DBG]  Original agent path length 131 je: 32
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 4: 341, 340, 339, 338, 337, 336, 336, 335, 367, 366, 398, 398, 430, 462, 494, 526, 525, 524, 523, 522, 521, 520, 520, 520, 519, 551, 583, 584, 616, 648, 680, 712, 
[DBG]  Path for agent 131 updated, resulting length: 32
[DBG]  Update the agent path 132 | Original local length: 6 | New local length: 6
[DBG]  agent 132 t=0 => decoded (sx,sy)=(2,4) => global_id=590
[DBG]  agent 132 t=1 => decoded (sx,sy)=(1,4) => global_id=558
[DBG]  agent 132 t=2 => decoded (sx,sy)=(0,4) => global_id=526
[DBG]  agent 132 t=3 => decoded (sx,sy)=(0,3) => global_id=525
[DBG]  agent 132 t=4 => decoded (sx,sy)=(0,2) => global_id=524
[DBG]  agent 132 t=5 => decoded (sx,sy)=(0,1) => global_id=523
[DBG]  Complete path of agent 132:
[DBG]    Original: 876 908 909 910 878 846 814 815 783 751 750 718 686 654 622 590 558 526 525 524 523 491 490 458 426 427 395 363 331 299 267 
[DBG]    New:     876 908 909 910 878 846 814 815 783 751 750 718 686 654 622 590 558 526 525 524 523 491 490 458 426 427 395 363 331 299 267 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 876 908 909 910 878 846 814 815 783 751 750 718 686 654 622 
[DBG]    Local path (in submap): 590 558 526 525 524 523 
[DBG]    Suffix (out of submap): 491 490 458 426 427 395 363 331 299 267 
[DBG]  Original agent path length 132 je: 31
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 5: 876, 908, 909, 910, 878, 846, 814, 815, 783, 751, 750, 718, 686, 654, 622, 590, 558, 526, 525, 524, 523, 491, 490, 458, 426, 427, 395, 363, 331, 299, 267, 
[DBG]  Path for agent 132 updated, resulting length: 31
[DBG]  Update the agent path 145 | Original local length: 4 | New local length: 4
[DBG]  agent 145 t=0 => decoded (sx,sy)=(2,1) => global_id=587
[DBG]  agent 145 t=1 => decoded (sx,sy)=(3,1) => global_id=619
[DBG]  agent 145 t=2 => decoded (sx,sy)=(4,1) => global_id=651
[DBG]  agent 145 t=3 => decoded (sx,sy)=(4,0) => global_id=650
[DBG]  Complete path of agent 145:
[DBG]    Original: 335 303 302 301 301 300 299 331 363 395 427 459 491 523 555 587 619 651 650 649 617 616 615 647 646 
[DBG]    New:     335 303 302 301 301 300 299 331 363 395 427 459 491 523 555 587 619 651 650 649 617 616 615 647 646 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 335 303 302 301 301 300 299 331 363 395 427 459 491 523 555 
[DBG]    Local path (in submap): 587 619 651 650 
[DBG]    Suffix (out of submap): 649 617 616 615 647 646 
[DBG]  Original agent path length 145 je: 25
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 6: 335, 303, 302, 301, 301, 300, 299, 331, 363, 395, 427, 459, 491, 523, 555, 587, 619, 651, 650, 649, 617, 616, 615, 647, 646, 
[DBG]  Path for agent 145 updated, resulting length: 25
[DBG]  Paths successfully updated.
[DBG]  (LNS.cpp) New path for agent 19: 
[DBG]  625, 593, 594, 594, 594, 594, 593, 593, 592, 591, 623, 623, 622, 590, 589, 588, 620, 619, 651, 683, 
[DBG]  (LNS.cpp) New path for agent 20: 
[DBG]  242, 241, 240, 239, 271, 303, 335, 367, 366, 398, 430, 462, 494, 526, 525, 524, 556, 588, 620, 619, 651, 650, 682, 714, 746, 745, 777, 809, 841, 873, 905, 904, 
[DBG]  (LNS.cpp) New path for agent 112: 
[DBG]  337, 369, 368, 400, 432, 464, 463, 462, 494, 526, 525, 524, 523, 555, 587, 619, 651, 650, 649, 648, 647, 646, 645, 677, 676, 675, 
[DBG]  (LNS.cpp) New path for agent 121: 
[DBG]  401, 433, 433, 401, 400, 432, 464, 463, 462, 494, 494, 526, 525, 524, 523, 555, 
[DBG]  (LNS.cpp) New path for agent 131: 
[DBG]  341, 340, 339, 338, 337, 336, 336, 335, 367, 366, 398, 398, 430, 462, 494, 526, 525, 524, 523, 522, 521, 520, 520, 520, 519, 551, 583, 584, 616, 648, 680, 712, 
[DBG]  (LNS.cpp) New path for agent 132: 
[DBG]  876, 908, 909, 910, 878, 846, 814, 815, 783, 751, 750, 718, 686, 654, 622, 590, 558, 526, 525, 524, 523, 491, 490, 458, 426, 427, 395, 363, 331, 299, 267, 
[DBG]  (LNS.cpp) New path for agent 145: 
[DBG]  335, 303, 302, 301, 301, 300, 299, 331, 363, 395, 427, 459, 491, 523, 555, 587, 619, 651, 650, 649, 617, 616, 615, 647, 646, 
[DBG]  component_weights = {0.420876, 0.0605142, 0.0632827, 0.455327}
[DBG]  opSuccess value: 1
[STAT] neighbor.sum_of_costs before recomputation: 175
[STAT] neighbor.old_sum_of_costs before recomputation: 175
[STAT] sum_of_costs before recomputation: 4179
[DBG]  Validate solution immediately after SAT success.
[DBG]  No problems after SAT replan.
[DBG]  Recomputing sum_of_cost by dividing neighbor.sum_of_costs and neighbor.old_sum_of_costs
[STAT] sum_of_costs after recomputation: 4179
[STAT] Iteration 196
[DBG]  Using SAT operator (destroy+repair SAT).
[DBG]  ====================
[DBG]  SAT destroy operator called.
[DBG]  SAT heuristic: 2
[DBG]  key_agent_id: 61
[DBG]  key_agent_id global path length: 38
[DBG]  Submap content (global positions):
[DBG]  716 717 718 719 720 
[DBG]  748 749 750 751 752 
[DBG]  780 781 782 783 784 
[DBG]  812 813 814 815 816 
[DBG]  844 845 846 847 848 
[DBG]  Map content with agents and obstacles:
[DBG]  X . . A . 
[DBG]  . X A . A 
[DBG]  . . A . . 
[DBG]  . . . . X 
[DBG]  A . . A . 
[DBG]  content of the map structure that we pass to the SAT solver:
[DBG]  -1  1  1  1  1  
[DBG]  1  -1  1  1  1  
[DBG]  1  1  1  1  1  
[DBG]  1  1  1  1  -1  
[DBG]  1  1  1  1  1  
[DBG]  Identifying agents in a submap for rescheduling (when key_agent is there at the time 2):
[DBG]  Agent 61 found intervals in the sub-map:
[DBG]   [0..7]
[DBG]  Agent 61 (interval in submap: [0..7]) contains time 2, added to replan.
[DBG]  Agent 74 found intervals in the sub-map:
[DBG]   [0..8]
[DBG]  Agent 74 (interval in submap: [0..8]) contains time 2, added to replan.
[DBG]  Agent 84 found intervals in the sub-map:
[DBG]   [1..6]
[DBG]  Agent 84 (interval in submap: [1..6]) contains time 2, added to replan.
[DBG]  Agent 86 found intervals in the sub-map:
[DBG]   [0..3]
[DBG]  Agent 86 (interval in submap: [0..3]) contains time 2, added to replan.
[DBG]  Agent 88 found intervals in the sub-map:
[DBG]   [0..2]
[DBG]  Agent 88 (interval in submap: [0..2]) contains time 2, added to replan.
[DBG]  Agent 114 found intervals in the sub-map:
[DBG]   [2..10]
[DBG]  Agent 114 (interval in submap: [2..10]) contains time 2, added to replan.
[DBG]  Agent 122 found intervals in the sub-map:
[DBG]   [3..6]
[DBG]  Agent 122 is not in sub-map at time 2 (intervals: 
[DBG]  [3..6] )
[DBG]  Agent 61 | Start (global): 782 -> (local): (2, 2) at time 2 | Goal (global): 752 -> (local): (1, 4) at time 7
[DBG]  Agent 74 | Start (global): 752 -> (local): (1, 4) at time 2 | Goal (global): 752 -> (local): (1, 4) at time 8
[DBG]  Agent 84 | Start (global): 847 -> (local): (4, 3) at time 2 | Goal (global): 719 -> (local): (0, 3) at time 6
[DBG]  Agent 86 | Start (global): 750 -> (local): (1, 2) at time 2 | Goal (global): 718 -> (local): (0, 2) at time 3
[DBG]  Agent 88 | Start (global): 719 -> (local): (0, 3) at time 2 | Goal (global): 719 -> (local): (0, 3) at time 2
[DBG]  Agent 114 | Start (global): 844 -> (local): (4, 0) at time 2 | Goal (global): 720 -> (local): (0, 4) at time 10
[DBG]  [REPAIR] SAT destroy operator called.
[DBG]  [REPAIR] SAT operator â€“ launching subproblem FOR OPTIMIZATION.
[DBG]  Creating local paths (sx, sy) in the submap for T_sync = 2
[DBG]    Agent 61 (global paths from T=2 to 7) has local path: (2,2) (2,2) (2,2) (2,3) (2,4) (1,4) 
[DBG]    Agent 74 (global paths from T=2 to 8) has local path: (1,4) (1,4) (1,4) (1,4) (1,3) (1,3) (1,4) 
[DBG]    Agent 84 (global paths from T=2 to 6) has local path: (4,3) (3,3) (2,3) (1,3) (0,3) 
[DBG]    Agent 86 (global paths from T=2 to 3) has local path: (1,2) (0,2) 
[DBG]    Agent 88 (global paths from T=2 to 2) has local path: (0,3) 
[DBG]    Agent 114 (global paths from T=2 to 10) has local path: (4,0) (4,1) (3,1) (3,2) (3,3) (2,3) (2,4) (1,4) (0,4) 
[DBG]  Checking input data for SAT solver:
[DBG]    - Number of agents to replan: 6
[DBG]  Agent 61 has the original local path length: 6 => Start (2,2), Goal (1,4)
[DBG]  Agent 74 has the original local path length: 7 => Start (1,4), Goal (1,4)
[DBG]  Agent 84 has the original local path length: 5 => Start (4,3), Goal (0,3)
[DBG]  Agent 86 has the original local path length: 2 => Start (1,2), Goal (0,2)
[DBG]  Agent 88 has the original local path length: 1 => Start (0,3), Goal (0,3)
[DBG]  Agent 114 has the original local path length: 9 => Start (4,0), Goal (0,4)
[DBG]  Start position: (2, 2), (1, 4), (4, 3), (1, 2), (0, 3), (4, 0), 
[DBG]  Goal position: (1, 4), (1, 4), (0, 3), (0, 2), (0, 3), (0, 4), 
[DBG]  SAT instance and solver created.
Currently solving
Instance name: scen
Map name: map
Encoding used: disappear_at_goal
SAT solver used: Kissat
Optimizing function: sum of costs
Number of agents: 6
Mks LB: 9
SoC LB: 22
Delta: 0
Remaining time: 300000 [ms]

Vertex conflict! Agents 0, 1, timestep 4, location 0
Swapping conflict! Agents 0, 1, timestep 4, edge (0,0)
Vertex conflict! Agents 0, 1, timestep 5, location 0
Swapping conflict! Agents 0, 1, timestep 5, edge (0,0)
Vertex conflict! Agents 0, 1, timestep 6, location 0
Swapping conflict! Agents 0, 1, timestep 6, edge (0,0)
Vertex conflict! Agents 0, 1, timestep 7, location 0
Swapping conflict! Agents 0, 1, timestep 7, edge (0,0)
Vertex conflict! Agents 0, 1, timestep 8, location 0
Vertex conflict! Agents 0, 2, timestep 5, location 0
Swapping conflict! Agents 0, 2, timestep 5, edge (0,0)
Vertex conflict! Agents 0, 2, timestep 6, location 0
Swapping conflict! Agents 0, 2, timestep 6, edge (0,0)
Vertex conflict! Agents 0, 2, timestep 7, location 0
Swapping conflict! Agents 0, 2, timestep 7, edge (0,0)
Vertex conflict! Agents 0, 2, timestep 8, location 0
Vertex conflict! Agents 0, 3, timestep 4, location 0
Swapping conflict! Agents 0, 3, timestep 4, edge (0,0)
Vertex conflict! Agents 0, 3, timestep 5, location 0
Swapping conflict! Agents 0, 3, timestep 5, edge (0,0)
Vertex conflict! Agents 0, 3, timestep 6, location 0
Swapping conflict! Agents 0, 3, timestep 6, edge (0,0)
Vertex conflict! Agents 0, 3, timestep 7, location 0
Swapping conflict! Agents 0, 3, timestep 7, edge (0,0)
Vertex conflict! Agents 0, 3, timestep 8, location 0
Vertex conflict! Agents 0, 4, timestep 4, location 0
Swapping conflict! Agents 0, 4, timestep 4, edge (0,0)
Vertex conflict! Agents 0, 4, timestep 5, location 0
Swapping conflict! Agents 0, 4, timestep 5, edge (0,0)
Vertex conflict! Agents 0, 4, timestep 6, location 0
Swapping conflict! Agents 0, 4, timestep 6, edge (0,0)
Vertex conflict! Agents 0, 4, timestep 7, location 0
Swapping conflict! Agents 0, 4, timestep 7, edge (0,0)
Vertex conflict! Agents 0, 4, timestep 8, location 0
Vertex conflict! Agents 1, 2, timestep 5, location 0
Swapping conflict! Agents 1, 2, timestep 5, edge (0,0)
Vertex conflict! Agents 1, 2, timestep 6, location 0
Swapping conflict! Agents 1, 2, timestep 6, edge (0,0)
Vertex conflict! Agents 1, 2, timestep 7, location 0
Swapping conflict! Agents 1, 2, timestep 7, edge (0,0)
Vertex conflict! Agents 1, 2, timestep 8, location 0
Vertex conflict! Agents 1, 3, timestep 2, location 0
Swapping conflict! Agents 1, 3, timestep 2, edge (0,0)
Vertex conflict! Agents 1, 3, timestep 3, location 0
Swapping conflict! Agents 1, 3, timestep 3, edge (0,0)
Vertex conflict! Agents 1, 3, timestep 4, location 0
Swapping conflict! Agents 1, 3, timestep 4, edge (0,0)
Vertex conflict! Agents 1, 3, timestep 5, location 0
Swapping conflict! Agents 1, 3, timestep 5, edge (0,0)
Vertex conflict! Agents 1, 3, timestep 6, location 0
Swapping conflict! Agents 1, 3, timestep 6, edge (0,0)
Vertex conflict! Agents 1, 3, timestep 7, location 0
Swapping conflict! Agents 1, 3, timestep 7, edge (0,0)
Vertex conflict! Agents 1, 3, timestep 8, location 0
Vertex conflict! Agents 1, 4, timestep 1, location 0
Swapping conflict! Agents 1, 4, timestep 1, edge (0,0)
Vertex conflict! Agents 1, 4, timestep 2, location 0
Swapping conflict! Agents 1, 4, timestep 2, edge (0,0)
Vertex conflict! Agents 1, 4, timestep 3, location 0
Swapping conflict! Agents 1, 4, timestep 3, edge (0,0)
Vertex conflict! Agents 1, 4, timestep 4, location 0
Swapping conflict! Agents 1, 4, timestep 4, edge (0,0)
Vertex conflict! Agents 1, 4, timestep 5, location 0
Swapping conflict! Agents 1, 4, timestep 5, edge (0,0)
Vertex conflict! Agents 1, 4, timestep 6, location 0
Swapping conflict! Agents 1, 4, timestep 6, edge (0,0)
Vertex conflict! Agents 1, 4, timestep 7, location 0
Swapping conflict! Agents 1, 4, timestep 7, edge (0,0)
Vertex conflict! Agents 1, 4, timestep 8, location 0
Vertex conflict! Agents 2, 3, timestep 5, location 0
Swapping conflict! Agents 2, 3, timestep 5, edge (0,0)
Vertex conflict! Agents 2, 3, timestep 6, location 0
Swapping conflict! Agents 2, 3, timestep 6, edge (0,0)
Vertex conflict! Agents 2, 3, timestep 7, location 0
Swapping conflict! Agents 2, 3, timestep 7, edge (0,0)
Vertex conflict! Agents 2, 3, timestep 8, location 0
Vertex conflict! Agents 2, 4, timestep 5, location 0
Swapping conflict! Agents 2, 4, timestep 5, edge (0,0)
Vertex conflict! Agents 2, 4, timestep 6, location 0
Swapping conflict! Agents 2, 4, timestep 6, edge (0,0)
Vertex conflict! Agents 2, 4, timestep 7, location 0
Swapping conflict! Agents 2, 4, timestep 7, edge (0,0)
Vertex conflict! Agents 2, 4, timestep 8, location 0
Vertex conflict! Agents 3, 4, timestep 2, location 0
Swapping conflict! Agents 3, 4, timestep 2, edge (0,0)
Vertex conflict! Agents 3, 4, timestep 3, location 0
Swapping conflict! Agents 3, 4, timestep 3, edge (0,0)
Vertex conflict! Agents 3, 4, timestep 4, location 0
Swapping conflict! Agents 3, 4, timestep 4, edge (0,0)
Vertex conflict! Agents 3, 4, timestep 5, location 0
Swapping conflict! Agents 3, 4, timestep 5, edge (0,0)
Vertex conflict! Agents 3, 4, timestep 6, location 0
Swapping conflict! Agents 3, 4, timestep 6, edge (0,0)
Vertex conflict! Agents 3, 4, timestep 7, location 0
Swapping conflict! Agents 3, 4, timestep 7, edge (0,0)
Vertex conflict! Agents 3, 4, timestep 8, location 0
Found plan [agents = 6] [timesteps = 9]
Agent #0 : 10 11 12 7 0 0 0 0 0 
Agent #1 : 7 0 0 0 0 0 0 0 0 
Agent #2 : 20 16 11 6 2 0 0 0 0 
Agent #3 : 5 1 0 0 0 0 0 0 0 
Agent #4 : 2 0 0 0 0 0 0 0 0 
Agent #5 : 17 18 19 20 16 11 12 7 3 

[STAT] Solver returned: 0
[DBG]  Agent (index) 61 | New local path (submap idx):
[DBG]  10 11 12 7 
[DBG]  Agent (index) 74 | New local path (submap idx):
[DBG]  7 
[DBG]  Agent (index) 84 | New local path (submap idx):
[DBG]  20 16 11 6 2 
[DBG]  Agent (index) 86 | New local path (submap idx):
[DBG]  5 1 
[DBG]  Agent (index) 88 | New local path (submap idx):
[DBG]  2 
[DBG]  Agent (index) 114 | New local path (submap idx):
[DBG]  17 18 19 20 16 11 12 7 3 
[DBG]  Update the agent path 61 | Original local length: 6 | New local length: 4
[DBG]  agent 61 t=0 => decoded (sx,sy)=(2,2) => global_id=782
[DBG]  agent 61 t=1 => decoded (sx,sy)=(2,3) => global_id=783
[DBG]  agent 61 t=2 => decoded (sx,sy)=(2,4) => global_id=784
[DBG]  agent 61 t=3 => decoded (sx,sy)=(1,4) => global_id=752
[DBG]  Complete path of agent 61:
[DBG]    Original: 813 781 782 782 782 783 784 752 753 721 689 657 625 593 592 560 528 496 464 432 433 401 402 403 435 403 404 405 406 406 406 407 408 409 377 345 345 313 
[DBG]    New:     813 781 782 783 784 752 753 721 689 657 625 593 592 560 528 496 464 432 433 401 402 403 435 403 404 405 406 406 406 407 408 409 377 345 345 313 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 813 781 
[DBG]    Local path (in submap): 782 783 784 752 753 721 
[DBG]    Suffix (out of submap): 689 657 625 593 592 560 528 496 464 432 433 401 402 403 435 403 404 405 406 406 406 407 408 409 377 345 345 313 
[DBG]  Original agent path length 61 je: 38
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 0: 813, 781, 782, 783, 784, 752, 753, 721, 689, 657, 625, 593, 592, 560, 528, 496, 464, 432, 433, 401, 402, 403, 435, 403, 404, 405, 406, 406, 406, 407, 408, 409, 377, 345, 345, 313, 
[DBG]  Path for agent 61 updated, resulting length: 36
[DBG]  Update the agent path 74 | Original local length: 7 | New local length: 1
[DBG]  agent 74 t=0 => decoded (sx,sy)=(1,4) => global_id=752
[DBG]  Complete path of agent 74:
[DBG]    Original: 752 752 752 752 752 752 751 751 752 753 721 689 657 658 659 627 628 629 597 565 566 534 502 470 438 439 440 472 473 505 504 
[DBG]    New:     752 752 752 753 721 689 657 658 659 627 628 629 597 565 566 534 502 470 438 439 440 472 473 505 504 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 752 752 
[DBG]    Local path (in submap): 752 753 721 689 657 658 659 
[DBG]    Suffix (out of submap): 627 628 629 597 565 566 534 502 470 438 439 440 472 473 505 504 
[DBG]  Original agent path length 74 je: 31
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 1: 752, 752, 752, 753, 721, 689, 657, 658, 659, 627, 628, 629, 597, 565, 566, 534, 502, 470, 438, 439, 440, 472, 473, 505, 504, 
[DBG]  Path for agent 74 updated, resulting length: 25
[DBG]  Update the agent path 84 | Original local length: 5 | New local length: 5
[DBG]  agent 84 t=0 => decoded (sx,sy)=(4,3) => global_id=847
[DBG]  agent 84 t=1 => decoded (sx,sy)=(3,3) => global_id=815
[DBG]  agent 84 t=2 => decoded (sx,sy)=(2,3) => global_id=783
[DBG]  agent 84 t=3 => decoded (sx,sy)=(1,3) => global_id=751
[DBG]  agent 84 t=4 => decoded (sx,sy)=(0,3) => global_id=719
[DBG]  Complete path of agent 84:
[DBG]    Original: 878 846 847 815 783 751 719 687 688 656 657 658 659 627 628 596 597 565 566 534 502 503 504 505 473 441 409 377 345 313 281 249 217 218 186 154 122 90 58 26 25 
[DBG]    New:     878 846 847 815 783 751 719 687 688 656 657 658 659 627 628 596 597 565 566 534 502 503 504 505 473 441 409 377 345 313 281 249 217 218 186 154 122 90 58 26 25 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 878 846 
[DBG]    Local path (in submap): 847 815 783 751 719 
[DBG]    Suffix (out of submap): 687 688 656 657 658 659 627 628 596 597 565 566 534 502 503 504 505 473 441 409 377 345 313 281 249 217 218 186 154 122 90 58 26 25 
[DBG]  Original agent path length 84 je: 41
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 2: 878, 846, 847, 815, 783, 751, 719, 687, 688, 656, 657, 658, 659, 627, 628, 596, 597, 565, 566, 534, 502, 503, 504, 505, 473, 441, 409, 377, 345, 313, 281, 249, 217, 218, 186, 154, 122, 90, 58, 26, 25, 
[DBG]  Path for agent 84 updated, resulting length: 41
[DBG]  Update the agent path 86 | Original local length: 2 | New local length: 2
[DBG]  agent 86 t=0 => decoded (sx,sy)=(1,2) => global_id=750
[DBG]  agent 86 t=1 => decoded (sx,sy)=(0,2) => global_id=718
[DBG]  Complete path of agent 86:
[DBG]    Original: 781 782 750 718 686 654 655 656 657 658 659 660 628 596 597 565 566 534 502 503 504 505 506 538 539 540 541 
[DBG]    New:     781 782 750 718 686 654 655 656 657 658 659 660 628 596 597 565 566 534 502 503 504 505 506 538 539 540 541 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 781 782 
[DBG]    Local path (in submap): 750 718 
[DBG]    Suffix (out of submap): 686 654 655 656 657 658 659 660 628 596 597 565 566 534 502 503 504 505 506 538 539 540 541 
[DBG]  Original agent path length 86 je: 27
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 3: 781, 782, 750, 718, 686, 654, 655, 656, 657, 658, 659, 660, 628, 596, 597, 565, 566, 534, 502, 503, 504, 505, 506, 538, 539, 540, 541, 
[DBG]  Path for agent 86 updated, resulting length: 27
[DBG]  Update the agent path 88 | Original local length: 1 | New local length: 1
[DBG]  agent 88 t=0 => decoded (sx,sy)=(0,3) => global_id=719
[DBG]  Complete path of agent 88:
[DBG]    Original: 783 751 719 687 655 623 591 592 560 528 496 464 465 433 401 369 337 338 306 274 242 210 209 
[DBG]    New:     783 751 719 687 655 623 591 592 560 528 496 464 465 433 401 369 337 338 306 274 242 210 209 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 783 751 
[DBG]    Local path (in submap): 719 
[DBG]    Suffix (out of submap): 687 655 623 591 592 560 528 496 464 465 433 401 369 337 338 306 274 242 210 209 
[DBG]  Original agent path length 88 je: 23
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 4: 783, 751, 719, 687, 655, 623, 591, 592, 560, 528, 496, 464, 465, 433, 401, 369, 337, 338, 306, 274, 242, 210, 209, 
[DBG]  Path for agent 88 updated, resulting length: 23
[DBG]  Update the agent path 114 | Original local length: 9 | New local length: 9
[DBG]  agent 114 t=0 => decoded (sx,sy)=(4,0) => global_id=844
[DBG]  agent 114 t=1 => decoded (sx,sy)=(4,1) => global_id=845
[DBG]  agent 114 t=2 => decoded (sx,sy)=(4,2) => global_id=846
[DBG]  agent 114 t=3 => decoded (sx,sy)=(4,3) => global_id=847
[DBG]  agent 114 t=4 => decoded (sx,sy)=(3,3) => global_id=815
[DBG]  agent 114 t=5 => decoded (sx,sy)=(2,3) => global_id=783
[DBG]  agent 114 t=6 => decoded (sx,sy)=(2,4) => global_id=784
[DBG]  agent 114 t=7 => decoded (sx,sy)=(1,4) => global_id=752
[DBG]  agent 114 t=8 => decoded (sx,sy)=(0,4) => global_id=720
[DBG]  Complete path of agent 114:
[DBG]    Original: 875 843 844 845 813 814 815 783 784 752 720 721 689 657 658 659 627 628 629 597 565 566 534 502 470 438 406 407 375 343 344 312 312 313 281 249 217 185 153 154 
[DBG]    New:     875 843 844 845 846 847 815 783 784 752 720 721 689 657 658 659 627 628 629 597 565 566 534 502 470 438 406 407 375 343 344 312 312 313 281 249 217 185 153 154 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 875 843 
[DBG]    Local path (in submap): 844 845 846 847 815 783 784 752 720 
[DBG]    Suffix (out of submap): 721 689 657 658 659 627 628 629 597 565 566 534 502 470 438 406 407 375 343 344 312 312 313 281 249 217 185 153 154 
[DBG]  Original agent path length 114 je: 40
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 5: 875, 843, 844, 845, 846, 847, 815, 783, 784, 752, 720, 721, 689, 657, 658, 659, 627, 628, 629, 597, 565, 566, 534, 502, 470, 438, 406, 407, 375, 343, 344, 312, 312, 313, 281, 249, 217, 185, 153, 154, 
[DBG]  Path for agent 114 updated, resulting length: 40
[DBG]  Paths successfully updated.
[DBG]  (LNS.cpp) New path for agent 61: 
[DBG]  813, 781, 782, 783, 784, 752, 753, 721, 689, 657, 625, 593, 592, 560, 528, 496, 464, 432, 433, 401, 402, 403, 435, 403, 404, 405, 406, 406, 406, 407, 408, 409, 377, 345, 345, 313, 
[DBG]  (LNS.cpp) New path for agent 74: 
[DBG]  752, 752, 752, 753, 721, 689, 657, 658, 659, 627, 628, 629, 597, 565, 566, 534, 502, 470, 438, 439, 440, 472, 473, 505, 504, 
[DBG]  (LNS.cpp) New path for agent 84: 
[DBG]  878, 846, 847, 815, 783, 751, 719, 687, 688, 656, 657, 658, 659, 627, 628, 596, 597, 565, 566, 534, 502, 503, 504, 505, 473, 441, 409, 377, 345, 313, 281, 249, 217, 218, 186, 154, 122, 90, 58, 26, 25, 
[DBG]  (LNS.cpp) New path for agent 86: 
[DBG]  781, 782, 750, 718, 686, 654, 655, 656, 657, 658, 659, 660, 628, 596, 597, 565, 566, 534, 502, 503, 504, 505, 506, 538, 539, 540, 541, 
[DBG]  (LNS.cpp) New path for agent 88: 
[DBG]  783, 751, 719, 687, 655, 623, 591, 592, 560, 528, 496, 464, 465, 433, 401, 369, 337, 338, 306, 274, 242, 210, 209, 
[DBG]  (LNS.cpp) New path for agent 114: 
[DBG]  875, 843, 844, 845, 846, 847, 815, 783, 784, 752, 720, 721, 689, 657, 658, 659, 627, 628, 629, 597, 565, 566, 534, 502, 470, 438, 406, 407, 375, 343, 344, 312, 312, 313, 281, 249, 217, 185, 153, 154, 
[DBG]  component_weights = {0.416922, 0.0599457, 0.0626881, 0.460445}
[DBG]  opSuccess value: 1
[STAT] neighbor.sum_of_costs before recomputation: 186
[STAT] neighbor.old_sum_of_costs before recomputation: 194
[STAT] sum_of_costs before recomputation: 4179
[DBG]  Validate solution immediately after SAT success.
[WARNING] Problem after SAT: Edge conflict between agents 74 and 4 at edge (439,440) at timestep 20
[DBG]  Attempting immediate repair via init_lns because problem occurred after SAT (should be applied only for conflicts...).
[DBG]  Passing 150 agents to init_lns (skip=true).
[DBG]  path_table contents for selected agents (neighbor.agents):
[DBG]    Agent 61 => controlling path length=36
[DBG]    Agent 74 => controlling path length=25
[DBG]    Agent 84 => controlling path length=41
[DBG]    Agent 86 => controlling path length=27
[DBG]    Agent 88 => controlling path length=23
[DBG]    Agent 114 => controlling path length=40
[DBG]  hodnota skip_initial_solution=1
[DBG]  We skip initialSolution => call buildCollisionData()
[DBG]  buildCollisionData() called â€“ skip_initial_solution case.
[DBG]  Agents.size()=150, collision_graph.size()=150
[DBG]  agent 4 => updateCollidingPairs => foundCollision
[DBG]  agent 30 => updateCollidingPairs => foundCollision
[DBG]  agent 33 => updateCollidingPairs => foundCollision
[DBG]  agent 44 => updateCollidingPairs => foundCollision
[DBG]  agent 61 => updateCollidingPairs => foundCollision
[DBG]  agent 62 => updateCollidingPairs => foundCollision
[DBG]  agent 74 => updateCollidingPairs => foundCollision
[DBG]  agent 75 => updateCollidingPairs => foundCollision
[DBG]  agent 79 => updateCollidingPairs => foundCollision
[DBG]  agent 84 => updateCollidingPairs => foundCollision
[DBG]  agent 100 => updateCollidingPairs => foundCollision
[DBG]  agent 114 => updateCollidingPairs => foundCollision
[DBG]  agent 133 => updateCollidingPairs => foundCollision
[DBG]  agent 137 => updateCollidingPairs => foundCollision
[DBG]  Conflicting agent pairs:
[DBG]  agent 4 is in conflict with agent 74
[DBG]  agent 30 is in conflict with agent 74
[DBG]  agent 33 is in conflict with agent 74
[DBG]  agent 44 is in conflict with agent 74
[DBG]  agent 61 is in conflict with agent 62
[DBG]  agent 61 is in conflict with agent 75
[DBG]  agent 61 is in conflict with agent 79
[DBG]  agent 61 is in conflict with agent 114
[DBG]  agent 61 is in conflict with agent 137
[DBG]  agent 62 is in conflict with agent 74
[DBG]  agent 74 is in conflict with agent 79
[DBG]  agent 74 is in conflict with agent 84
[DBG]  agent 74 is in conflict with agent 100
[DBG]  agent 74 is in conflict with agent 133
[DBG]  buildCollisionData() => sum_of_costs=4171, num_of_colliding_pairs=14
[DBG]  buildCollisionData done => sum_of_costs=4171, num_of_colliding_pairs=14
[DBG]  sum_of_cost hodnota: 4171
[DBG]  After skip/init build => iteration_stats.back(): sum_of_costs=4171, collisions=14
[DEBUG] Using default neighbor generation strategy for conflicts: 2
[DEBUG] Using default neighbor generation strategy for conflicts: 2
[DEBUG] Using default neighbor generation strategy for conflicts: 2
[DEBUG] Using default neighbor generation strategy for conflicts: 0
	InitLNS(PP): runtime = 0.0388148, iterations = 5, colliding pairs = 0, initial colliding pairs = 14, solution cost = 4208, initial solution cost = 4171, failed iterations = 0
[DBG]  init_lns->sum_of_costs after init_lns->run: 4208
[DBG]  sum_of_costs after assignment from init_lns->run: 4208
[DBG]  Recomputing sum_of_cost by dividing neighbor.sum_of_costs and neighbor.old_sum_of_costs
[STAT] sum_of_costs after recomputation: 4208
[STAT] Iteration 197
[DBG]  Using SAT operator (destroy+repair SAT).
[DBG]  ====================
[DBG]  SAT destroy operator called.
[DBG]  SAT heuristic: 2
[DBG]  key_agent_id: 93
[DBG]  key_agent_id global path length: 16
[DBG]  Submap content (global positions):
[DBG]  457 458 459 460 461 
[DBG]  489 490 491 492 493 
[DBG]  521 522 523 524 525 
[DBG]  553 554 555 556 557 
[DBG]  585 586 587 588 589 
[DBG]  Map content with agents and obstacles:
[DBG]  . . . . X 
[DBG]  . . . . X 
[DBG]  . . A . . 
[DBG]  X X A . X 
[DBG]  . X . . . 
[DBG]  content of the map structure that we pass to the SAT solver:
[DBG]  1  1  1  1  -1  
[DBG]  1  1  1  1  -1  
[DBG]  1  1  1  1  1  
[DBG]  -1  -1  1  1  -1  
[DBG]  1  -1  1  1  1  
[DBG]  Identifying agents in a submap for rescheduling (when key_agent is there at the time 7):
[DBG]  Agent 0 found intervals in the sub-map:
[DBG]  
[DBG]  Agent 0 is not in sub-map at time 7 (intervals: 
[DBG]  )
[DBG]  Agent 93 found intervals in the sub-map:
[DBG]   [3..11]
[DBG]  Agent 93 (interval in submap: [3..11]) contains time 7, added to replan.
[DBG]  Agent 125 found intervals in the sub-map:
[DBG]   [4..8]
[DBG]  Agent 125 (interval in submap: [4..8]) contains time 7, added to replan.
[DBG]  Agent 93 | Start (global): 523 -> (local): (2, 2) at time 7 | Goal (global): 589 -> (local): (4, 4) at time 11
[DBG]  Agent 125 | Start (global): 555 -> (local): (3, 2) at time 7 | Goal (global): 587 -> (local): (4, 2) at time 8
[DBG]  [REPAIR] SAT destroy operator called.
[DBG]  [REPAIR] SAT operator â€“ launching subproblem FOR OPTIMIZATION.
[DBG]  Creating local paths (sx, sy) in the submap for T_sync = 7
[DBG]    Agent 93 (global paths from T=7 to 11) has local path: (2,2) (2,3) (3,3) (4,3) (4,4) 
[DBG]    Agent 125 (global paths from T=7 to 8) has local path: (3,2) (4,2) 
[DBG]  Checking input data for SAT solver:
[DBG]    - Number of agents to replan: 2
[DBG]  Agent 93 has the original local path length: 5 => Start (2,2), Goal (4,4)
[DBG]  Agent 125 has the original local path length: 2 => Start (3,2), Goal (4,2)
[DBG]  Start position: (2, 2), (3, 2), 
[DBG]  Goal position: (4, 4), (4, 2), 
[DBG]  SAT instance and solver created.
Currently solving
Instance name: scen
Map name: map
Encoding used: disappear_at_goal
SAT solver used: Kissat
Optimizing function: sum of costs
Number of agents: 2
Mks LB: 5
SoC LB: 7
Delta: 0
Remaining time: 300000 [ms]

Found plan [agents = 2] [timesteps = 5]
Agent #0 : 10 13 16 17 18 
Agent #1 : 13 16 0 0 0 

[STAT] Solver returned: 0
[DBG]  Agent (index) 93 | New local path (submap idx):
[DBG]  10 13 16 17 18 
[DBG]  Agent (index) 125 | New local path (submap idx):
[DBG]  13 16 
[DBG]  Update the agent path 93 | Original local length: 5 | New local length: 5
[DBG]  agent 93 t=0 => decoded (sx,sy)=(2,2) => global_id=523
[DBG]  agent 93 t=1 => decoded (sx,sy)=(3,2) => global_id=555
[DBG]  agent 93 t=2 => decoded (sx,sy)=(4,2) => global_id=587
[DBG]  agent 93 t=3 => decoded (sx,sy)=(4,3) => global_id=588
[DBG]  agent 93 t=4 => decoded (sx,sy)=(4,4) => global_id=589
[DBG]  Complete path of agent 93:
[DBG]    Original: 423 424 425 457 489 521 522 523 524 556 588 589 590 591 592 560 
[DBG]    New:     423 424 425 457 489 521 522 523 555 587 588 589 590 591 592 560 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 423 424 425 457 489 521 522 
[DBG]    Local path (in submap): 523 555 587 588 589 
[DBG]    Suffix (out of submap): 590 591 592 560 
[DBG]  Original agent path length 93 je: 16
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 0: 423, 424, 425, 457, 489, 521, 522, 523, 555, 587, 588, 589, 590, 591, 592, 560, 
[DBG]  Path for agent 93 updated, resulting length: 16
[DBG]  Update the agent path 125 | Original local length: 2 | New local length: 2
[DBG]  agent 125 t=0 => decoded (sx,sy)=(3,2) => global_id=555
[DBG]  agent 125 t=1 => decoded (sx,sy)=(4,2) => global_id=587
[DBG]  Complete path of agent 125:
[DBG]    Original: 430 462 494 526 525 524 556 555 587 619 651 683 715 714 746 745 777 776 775 
[DBG]    New:     430 462 494 526 525 524 556 555 587 619 651 683 715 714 746 745 777 776 775 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 430 462 494 526 525 524 556 
[DBG]    Local path (in submap): 555 587 
[DBG]    Suffix (out of submap): 619 651 683 715 714 746 745 777 776 775 
[DBG]  Original agent path length 125 je: 19
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 1: 430, 462, 494, 526, 525, 524, 556, 555, 587, 619, 651, 683, 715, 714, 746, 745, 777, 776, 775, 
[DBG]  Path for agent 125 updated, resulting length: 19
[DBG]  Paths successfully updated.
[DBG]  (LNS.cpp) New path for agent 93: 
[DBG]  423, 424, 425, 457, 489, 521, 522, 523, 555, 587, 588, 589, 590, 591, 592, 560, 
[DBG]  (LNS.cpp) New path for agent 125: 
[DBG]  430, 462, 494, 526, 525, 524, 556, 555, 587, 619, 651, 683, 715, 714, 746, 745, 777, 776, 775, 
[DBG]  component_weights = {0.421841, 0.0594399, 0.0621592, 0.45656}
[DBG]  opSuccess value: 1
[STAT] neighbor.sum_of_costs before recomputation: 33
[STAT] neighbor.old_sum_of_costs before recomputation: 33
[STAT] sum_of_costs before recomputation: 4208
[DBG]  Validate solution immediately after SAT success.
[DBG]  No problems after SAT replan.
[DBG]  Recomputing sum_of_cost by dividing neighbor.sum_of_costs and neighbor.old_sum_of_costs
[STAT] sum_of_costs after recomputation: 4208
[STAT] Iteration 198
[DBG]  Using SAT operator (destroy+repair SAT).
[DBG]  ====================
[DBG]  SAT destroy operator called.
[DBG]  SAT heuristic: 2
[DBG]  key_agent_id: 32
[DBG]  key_agent_id global path length: 10
[DBG]  Submap content (global positions):
[DBG]  739 740 741 742 743 
[DBG]  771 772 773 774 775 
[DBG]  803 804 805 806 807 
[DBG]  835 836 837 838 839 
[DBG]  867 868 869 870 871 
[DBG]  Map content with agents and obstacles:
[DBG]  . . . . X 
[DBG]  . . A A . 
[DBG]  . A A . . 
[DBG]  . . . . . 
[DBG]  . . X . . 
[DBG]  content of the map structure that we pass to the SAT solver:
[DBG]  1  1  1  1  -1  
[DBG]  1  1  1  1  1  
[DBG]  1  1  1  1  1  
[DBG]  1  1  1  1  1  
[DBG]  1  1  -1  1  1  
[DBG]  Identifying agents in a submap for rescheduling (when key_agent is there at the time 3):
[DBG]  Agent 13 found intervals in the sub-map:
[DBG]   [0..7]
[DBG]  Agent 13 (interval in submap: [0..7]) contains time 3, added to replan.
[DBG]  Agent 32 found intervals in the sub-map:
[DBG]   [0..7]
[DBG]  Agent 32 (interval in submap: [0..7]) contains time 3, added to replan.
[DBG]  Agent 37 found intervals in the sub-map:
[DBG]   [0..1]
[DBG]  Agent 37 is not in sub-map at time 3 (intervals: 
[DBG]  [0..1] )
[DBG]  Agent 56 found intervals in the sub-map:
[DBG]   [0..2]
[DBG]  Agent 56 is not in sub-map at time 3 (intervals: 
[DBG]  [0..2] )
[DBG]  Agent 67 found intervals in the sub-map:
[DBG]   [0..8]
[DBG]  Agent 67 (interval in submap: [0..8]) contains time 3, added to replan.
[DBG]  Agent 85 found intervals in the sub-map:
[DBG]   [1..5]
[DBG]  Agent 85 (interval in submap: [1..5]) contains time 3, added to replan.
[DBG]  Agent 13 | Start (global): 804 -> (local): (2, 1) at time 3 | Goal (global): 742 -> (local): (0, 3) at time 7
[DBG]  Agent 32 | Start (global): 805 -> (local): (2, 2) at time 3 | Goal (global): 775 -> (local): (1, 4) at time 7
[DBG]  Agent 67 | Start (global): 773 -> (local): (1, 2) at time 3 | Goal (global): 775 -> (local): (1, 4) at time 8
[DBG]  Agent 85 | Start (global): 774 -> (local): (1, 3) at time 3 | Goal (global): 807 -> (local): (2, 4) at time 5
[DBG]  [REPAIR] SAT destroy operator called.
[DBG]  [REPAIR] SAT operator â€“ launching subproblem FOR OPTIMIZATION.
[DBG]  Creating local paths (sx, sy) in the submap for T_sync = 3
[DBG]    Agent 13 (global paths from T=3 to 7) has local path: (2,1) (1,1) (1,2) (0,2) (0,3) 
[DBG]    Agent 32 (global paths from T=3 to 7) has local path: (2,2) (2,3) (1,3) (1,4) (1,4) 
[DBG]    Agent 67 (global paths from T=3 to 8) has local path: (1,2) (1,3) (1,4) (2,4) (2,4) (1,4) 
[DBG]    Agent 85 (global paths from T=3 to 5) has local path: (1,3) (1,4) (2,4) 
[DBG]  Checking input data for SAT solver:
[DBG]    - Number of agents to replan: 4
[DBG]  Agent 13 has the original local path length: 5 => Start (2,1), Goal (0,3)
[DBG]  Agent 32 has the original local path length: 5 => Start (2,2), Goal (1,4)
[DBG]  Agent 67 has the original local path length: 6 => Start (1,2), Goal (1,4)
[DBG]  Agent 85 has the original local path length: 3 => Start (1,3), Goal (2,4)
[DBG]  Start position: (2, 1), (2, 2), (1, 2), (1, 3), 
[DBG]  Goal position: (0, 3), (1, 4), (1, 4), (2, 4), 
[DBG]  SAT instance and solver created.
Currently solving
Instance name: scen
Map name: map
Encoding used: disappear_at_goal
SAT solver used: Kissat
Optimizing function: sum of costs
Number of agents: 4
Mks LB: 5
SoC LB: 15
Delta: 0
Remaining time: 300000 [ms]

Vertex conflict! Agents 1, 2, timestep 4, location 0
Vertex conflict! Agents 1, 3, timestep 4, location 0
Vertex conflict! Agents 2, 3, timestep 3, location 0
Swapping conflict! Agents 2, 3, timestep 3, edge (0,0)
Vertex conflict! Agents 2, 3, timestep 4, location 0
Found plan [agents = 4] [timesteps = 5]
Agent #0 : 10 11 12 7 3 
Agent #1 : 11 12 7 8 0 
Agent #2 : 6 7 8 0 0 
Agent #3 : 7 8 13 0 0 

[STAT] Solver returned: 0
[DBG]  Agent (index) 13 | New local path (submap idx):
[DBG]  10 11 12 7 3 
[DBG]  Agent (index) 32 | New local path (submap idx):
[DBG]  11 12 7 8 
[DBG]  Agent (index) 67 | New local path (submap idx):
[DBG]  6 7 8 
[DBG]  Agent (index) 85 | New local path (submap idx):
[DBG]  7 8 13 
[DBG]  Update the agent path 13 | Original local length: 5 | New local length: 5
[DBG]  agent 13 t=0 => decoded (sx,sy)=(2,1) => global_id=804
[DBG]  agent 13 t=1 => decoded (sx,sy)=(2,2) => global_id=805
[DBG]  agent 13 t=2 => decoded (sx,sy)=(2,3) => global_id=806
[DBG]  agent 13 t=3 => decoded (sx,sy)=(1,3) => global_id=774
[DBG]  agent 13 t=4 => decoded (sx,sy)=(0,3) => global_id=742
[DBG]  Complete path of agent 13:
[DBG]    Original: 867 868 836 804 772 773 741 742 710 678 678 646 647 615 583 551 519 487 455 423 391 359 360 361 329 330 331 299 300 268 236 237 205 173 141 109 110 111 79 80 81 82 83 84 85 86 54 55 56 24 
[DBG]    New:     867 868 836 804 805 806 774 742 710 678 678 646 647 615 583 551 519 487 455 423 391 359 360 361 329 330 331 299 300 268 236 237 205 173 141 109 110 111 79 80 81 82 83 84 85 86 54 55 56 24 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 867 868 836 
[DBG]    Local path (in submap): 804 805 806 774 742 
[DBG]    Suffix (out of submap): 710 678 678 646 647 615 583 551 519 487 455 423 391 359 360 361 329 330 331 299 300 268 236 237 205 173 141 109 110 111 79 80 81 82 83 84 85 86 54 55 56 24 
[DBG]  Original agent path length 13 je: 50
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 0: 867, 868, 836, 804, 805, 806, 774, 742, 710, 678, 678, 646, 647, 615, 583, 551, 519, 487, 455, 423, 391, 359, 360, 361, 329, 330, 331, 299, 300, 268, 236, 237, 205, 173, 141, 109, 110, 111, 79, 80, 81, 82, 83, 84, 85, 86, 54, 55, 56, 24, 
[DBG]  Path for agent 13 updated, resulting length: 50
[DBG]  Update the agent path 32 | Original local length: 5 | New local length: 4
[DBG]  agent 32 t=0 => decoded (sx,sy)=(2,2) => global_id=805
[DBG]  agent 32 t=1 => decoded (sx,sy)=(2,3) => global_id=806
[DBG]  agent 32 t=2 => decoded (sx,sy)=(1,3) => global_id=774
[DBG]  agent 32 t=3 => decoded (sx,sy)=(1,4) => global_id=775
[DBG]  Complete path of agent 32:
[DBG]    Original: 868 836 837 805 806 774 775 775 776 744 
[DBG]    New:     868 836 837 805 806 774 775 776 744 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 868 836 837 
[DBG]    Local path (in submap): 805 806 774 775 776 
[DBG]    Suffix (out of submap): 744 
[DBG]  Original agent path length 32 je: 10
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 1: 868, 836, 837, 805, 806, 774, 775, 776, 744, 
[DBG]  Path for agent 32 updated, resulting length: 9
[DBG]  Update the agent path 67 | Original local length: 6 | New local length: 3
[DBG]  agent 67 t=0 => decoded (sx,sy)=(1,2) => global_id=773
[DBG]  agent 67 t=1 => decoded (sx,sy)=(1,3) => global_id=774
[DBG]  agent 67 t=2 => decoded (sx,sy)=(1,4) => global_id=775
[DBG]  Complete path of agent 67:
[DBG]    Original: 773 773 773 773 774 775 807 807 775 776 777 778 746 747 715 683 684 685 653 654 654 655 656 657 658 659 627 628 629 597 565 566 534 502 501 501 501 469 437 438 439 407 408 409 377 378 379 380 348 349 
[DBG]    New:     773 773 773 773 774 775 776 777 778 746 747 715 683 684 685 653 654 654 655 656 657 658 659 627 628 629 597 565 566 534 502 501 501 501 469 437 438 439 407 408 409 377 378 379 380 348 349 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 773 773 773 
[DBG]    Local path (in submap): 773 774 775 776 777 778 
[DBG]    Suffix (out of submap): 746 747 715 683 684 685 653 654 654 655 656 657 658 659 627 628 629 597 565 566 534 502 501 501 501 469 437 438 439 407 408 409 377 378 379 380 348 349 
[DBG]  Original agent path length 67 je: 50
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 2: 773, 773, 773, 773, 774, 775, 776, 777, 778, 746, 747, 715, 683, 684, 685, 653, 654, 654, 655, 656, 657, 658, 659, 627, 628, 629, 597, 565, 566, 534, 502, 501, 501, 501, 469, 437, 438, 439, 407, 408, 409, 377, 378, 379, 380, 348, 349, 
[DBG]  Path for agent 67 updated, resulting length: 47
[DBG]  Update the agent path 85 | Original local length: 3 | New local length: 3
[DBG]  agent 85 t=0 => decoded (sx,sy)=(1,3) => global_id=774
[DBG]  agent 85 t=1 => decoded (sx,sy)=(1,4) => global_id=775
[DBG]  agent 85 t=2 => decoded (sx,sy)=(2,4) => global_id=807
[DBG]  Complete path of agent 85:
[DBG]    Original: 709 741 742 774 775 807 808 809 810 811 812 813 814 814 814 846 878 879 880 881 882 850 851 819 819 820 821 822 790 
[DBG]    New:     709 741 742 774 775 807 808 809 810 811 812 813 814 814 814 846 878 879 880 881 882 850 851 819 819 820 821 822 790 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 709 741 742 
[DBG]    Local path (in submap): 774 775 807 
[DBG]    Suffix (out of submap): 808 809 810 811 812 813 814 814 814 846 878 879 880 881 882 850 851 819 819 820 821 822 790 
[DBG]  Original agent path length 85 je: 29
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 3: 709, 741, 742, 774, 775, 807, 808, 809, 810, 811, 812, 813, 814, 814, 814, 846, 878, 879, 880, 881, 882, 850, 851, 819, 819, 820, 821, 822, 790, 
[DBG]  Path for agent 85 updated, resulting length: 29
[DBG]  Paths successfully updated.
[DBG]  (LNS.cpp) New path for agent 13: 
[DBG]  867, 868, 836, 804, 805, 806, 774, 742, 710, 678, 678, 646, 647, 615, 583, 551, 519, 487, 455, 423, 391, 359, 360, 361, 329, 330, 331, 299, 300, 268, 236, 237, 205, 173, 141, 109, 110, 111, 79, 80, 81, 82, 83, 84, 85, 86, 54, 55, 56, 24, 
[DBG]  (LNS.cpp) New path for agent 32: 
[DBG]  868, 836, 837, 805, 806, 774, 775, 776, 744, 
[DBG]  (LNS.cpp) New path for agent 67: 
[DBG]  773, 773, 773, 773, 774, 775, 776, 777, 778, 746, 747, 715, 683, 684, 685, 653, 654, 654, 655, 656, 657, 658, 659, 627, 628, 629, 597, 565, 566, 534, 502, 501, 501, 501, 469, 437, 438, 439, 407, 408, 409, 377, 378, 379, 380, 348, 349, 
[DBG]  (LNS.cpp) New path for agent 85: 
[DBG]  709, 741, 742, 774, 775, 807, 808, 809, 810, 811, 812, 813, 814, 814, 814, 846, 878, 879, 880, 881, 882, 850, 851, 819, 819, 820, 821, 822, 790, 
[DBG]  component_weights = {0.41789, 0.0588831, 0.061577, 0.46165}
[DBG]  opSuccess value: 1
[STAT] neighbor.sum_of_costs before recomputation: 131
[STAT] neighbor.old_sum_of_costs before recomputation: 135
[STAT] sum_of_costs before recomputation: 4208
[DBG]  Validate solution immediately after SAT success.
[WARNING] Problem after SAT: Vertex conflict between agents 0 and 67 at location 683 at timestep 12
[DBG]  Attempting immediate repair via init_lns because problem occurred after SAT (should be applied only for conflicts...).
[DBG]  Passing 150 agents to init_lns (skip=true).
[DBG]  path_table contents for selected agents (neighbor.agents):
[DBG]    Agent 13 => controlling path length=50
[DBG]    Agent 32 => controlling path length=9
[DBG]    Agent 67 => controlling path length=47
[DBG]    Agent 85 => controlling path length=29
[DBG]  hodnota skip_initial_solution=1
[DBG]  We skip initialSolution => call buildCollisionData()
[DBG]  buildCollisionData() called â€“ skip_initial_solution case.
[DBG]  Agents.size()=150, collision_graph.size()=150
[DBG]  agent 0 => updateCollidingPairs => foundCollision
[DBG]  agent 50 => updateCollidingPairs => foundCollision
[DBG]  agent 67 => updateCollidingPairs => foundCollision
[DBG]  agent 125 => updateCollidingPairs => foundCollision
[DBG]  agent 140 => updateCollidingPairs => foundCollision
[DBG]  agent 148 => updateCollidingPairs => foundCollision
[DBG]  Conflicting agent pairs:
[DBG]  agent 0 is in conflict with agent 67
[DBG]  agent 50 is in conflict with agent 67
[DBG]  agent 67 is in conflict with agent 125
[DBG]  agent 67 is in conflict with agent 140
[DBG]  agent 67 is in conflict with agent 148
[DBG]  buildCollisionData() => sum_of_costs=4204, num_of_colliding_pairs=5
[DBG]  buildCollisionData done => sum_of_costs=4204, num_of_colliding_pairs=5
[DBG]  sum_of_cost hodnota: 4204
[DBG]  After skip/init build => iteration_stats.back(): sum_of_costs=4204, collisions=5
[DEBUG] Using default neighbor generation strategy for conflicts: 0
	InitLNS(PP): runtime = 0.00280846, iterations = 2, colliding pairs = 0, initial colliding pairs = 5, solution cost = 4206, initial solution cost = 4204, failed iterations = 0
[DBG]  init_lns->sum_of_costs after init_lns->run: 4206
[DBG]  sum_of_costs after assignment from init_lns->run: 4206
[DBG]  Recomputing sum_of_cost by dividing neighbor.sum_of_costs and neighbor.old_sum_of_costs
[STAT] sum_of_costs after recomputation: 4206
[STAT] Iteration 199
[DBG]  Using SAT operator (destroy+repair SAT).
[DBG]  ====================
[DBG]  SAT destroy operator called.
[DBG]  SAT heuristic: 2
[DBG]  key_agent_id: 60
[DBG]  key_agent_id global path length: 14
[DBG]  Submap content (global positions):
[DBG]  585 586 587 588 589 
[DBG]  617 618 619 620 621 
[DBG]  649 650 651 652 653 
[DBG]  681 682 683 684 685 
[DBG]  713 714 715 716 717 
[DBG]  Map content with agents and obstacles:
[DBG]  . X . . A 
[DBG]  . X . . X 
[DBG]  . . A X A 
[DBG]  X A . . . 
[DBG]  . . . X . 
[DBG]  content of the map structure that we pass to the SAT solver:
[DBG]  1  -1  1  1  1  
[DBG]  1  -1  1  1  -1  
[DBG]  1  1  1  -1  1  
[DBG]  -1  1  1  1  1  
[DBG]  1  1  1  -1  1  
[DBG]  Identifying agents in a submap for rescheduling (when key_agent is there at the time 1):
[DBG]  Agent 10 found intervals in the sub-map:
[DBG]   [0..1]
[DBG]  Agent 10 (interval in submap: [0..1]) contains time 1, added to replan.
[DBG]  Agent 27 found intervals in the sub-map:
[DBG]   [0..5]
[DBG]  Agent 27 (interval in submap: [0..5]) contains time 1, added to replan.
[DBG]  Agent 60 found intervals in the sub-map:
[DBG]   [0..4]
[DBG]  Agent 60 (interval in submap: [0..4]) contains time 1, added to replan.
[DBG]  Agent 97 found intervals in the sub-map:
[DBG]   [0..2]
[DBG]  Agent 97 (interval in submap: [0..2]) contains time 1, added to replan.
[DBG]  Agent 10 | Start (global): 589 -> (local): (0, 4) at time 1 | Goal (global): 589 -> (local): (0, 4) at time 1
[DBG]  Agent 27 | Start (global): 653 -> (local): (2, 4) at time 1 | Goal (global): 653 -> (local): (2, 4) at time 5
[DBG]  Agent 60 | Start (global): 651 -> (local): (2, 2) at time 1 | Goal (global): 617 -> (local): (1, 0) at time 4
[DBG]  Agent 97 | Start (global): 682 -> (local): (3, 1) at time 1 | Goal (global): 714 -> (local): (4, 1) at time 2
[DBG]  [REPAIR] SAT destroy operator called.
[DBG]  [REPAIR] SAT operator â€“ launching subproblem FOR OPTIMIZATION.
[DBG]  Creating local paths (sx, sy) in the submap for T_sync = 1
[DBG]    Agent 10 (global paths from T=1 to 1) has local path: (0,4) 
[DBG]    Agent 27 (global paths from T=1 to 5) has local path: (2,4) (2,4) (2,4) (2,4) (2,4) 
[DBG]    Agent 60 (global paths from T=1 to 4) has local path: (2,2) (2,1) (2,0) (1,0) 
[DBG]    Agent 97 (global paths from T=1 to 2) has local path: (3,1) (4,1) 
[DBG]  Checking input data for SAT solver:
[DBG]    - Number of agents to replan: 4
[DBG]  Agent 10 has the original local path length: 1 => Start (0,4), Goal (0,4)
[DBG]  Agent 27 has the original local path length: 5 => Start (2,4), Goal (2,4)
[DBG]  Agent 60 has the original local path length: 4 => Start (2,2), Goal (1,0)
[DBG]  Agent 97 has the original local path length: 2 => Start (3,1), Goal (4,1)
[DBG]  Start position: (0, 4), (2, 4), (2, 2), (3, 1), 
[DBG]  Goal position: (0, 4), (2, 4), (1, 0), (4, 1), 
[DBG]  SAT instance and solver created.
Currently solving
Instance name: scen
Map name: map
Encoding used: disappear_at_goal
SAT solver used: Kissat
Optimizing function: sum of costs
Number of agents: 4
Mks LB: 4
SoC LB: 8
Delta: 0
Remaining time: 300000 [ms]

Vertex conflict! Agents 0, 1, timestep 1, location 0
Swapping conflict! Agents 0, 1, timestep 1, edge (0,0)
Vertex conflict! Agents 0, 1, timestep 2, location 0
Swapping conflict! Agents 0, 1, timestep 2, edge (0,0)
Vertex conflict! Agents 0, 1, timestep 3, location 0
Vertex conflict! Agents 0, 3, timestep 2, location 0
Swapping conflict! Agents 0, 3, timestep 2, edge (0,0)
Vertex conflict! Agents 0, 3, timestep 3, location 0
Vertex conflict! Agents 1, 3, timestep 2, location 0
Swapping conflict! Agents 1, 3, timestep 2, edge (0,0)
Vertex conflict! Agents 1, 3, timestep 3, location 0
Found plan [agents = 4] [timesteps = 4]
Agent #0 : 3 0 0 0 
Agent #1 : 10 0 0 0 
Agent #2 : 9 8 7 4 
Agent #3 : 11 16 0 0 

[STAT] Solver returned: 0
[DBG]  Agent (index) 10 | New local path (submap idx):
[DBG]  3 
[DBG]  Agent (index) 27 | New local path (submap idx):
[DBG]  10 
[DBG]  Agent (index) 60 | New local path (submap idx):
[DBG]  9 8 7 4 
[DBG]  Agent (index) 97 | New local path (submap idx):
[DBG]  11 16 
[DBG]  Update the agent path 10 | Original local length: 1 | New local length: 1
[DBG]  agent 10 t=0 => decoded (sx,sy)=(0,4) => global_id=589
[DBG]  Complete path of agent 10:
[DBG]    Original: 588 589 590 591 592 593 625 657 658 659 660 628 629 597 565 533 534 502 503 504 505 506 474 475 476 
[DBG]    New:     588 589 590 591 592 593 625 657 658 659 660 628 629 597 565 533 534 502 503 504 505 506 474 475 476 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 588 
[DBG]    Local path (in submap): 589 
[DBG]    Suffix (out of submap): 590 591 592 593 625 657 658 659 660 628 629 597 565 533 534 502 503 504 505 506 474 475 476 
[DBG]  Original agent path length 10 je: 25
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 0: 588, 589, 590, 591, 592, 593, 625, 657, 658, 659, 660, 628, 629, 597, 565, 533, 534, 502, 503, 504, 505, 506, 474, 475, 476, 
[DBG]  Path for agent 10 updated, resulting length: 25
[DBG]  Update the agent path 27 | Original local length: 5 | New local length: 1
[DBG]  agent 27 t=0 => decoded (sx,sy)=(2,4) => global_id=653
[DBG]  Complete path of agent 27:
[DBG]    Original: 653 653 653 653 653 653 654 654 622 622 622 622 654 655 687 719 751 783 815 814 
[DBG]    New:     653 653 654 654 622 622 622 622 654 655 687 719 751 783 815 814 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 653 
[DBG]    Local path (in submap): 653 654 654 622 622 
[DBG]    Suffix (out of submap): 622 622 654 655 687 719 751 783 815 814 
[DBG]  Original agent path length 27 je: 20
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 1: 653, 653, 654, 654, 622, 622, 622, 622, 654, 655, 687, 719, 751, 783, 815, 814, 
[DBG]  Path for agent 27 updated, resulting length: 16
[DBG]  Update the agent path 60 | Original local length: 4 | New local length: 4
[DBG]  agent 60 t=0 => decoded (sx,sy)=(2,2) => global_id=651
[DBG]  agent 60 t=1 => decoded (sx,sy)=(2,1) => global_id=650
[DBG]  agent 60 t=2 => decoded (sx,sy)=(2,0) => global_id=649
[DBG]  agent 60 t=3 => decoded (sx,sy)=(1,0) => global_id=617
[DBG]  Complete path of agent 60:
[DBG]    Original: 619 651 650 649 617 616 615 583 582 581 580 579 578 577 
[DBG]    New:     619 651 650 649 617 616 615 583 582 581 580 579 578 577 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 619 
[DBG]    Local path (in submap): 651 650 649 617 
[DBG]    Suffix (out of submap): 616 615 583 582 581 580 579 578 577 
[DBG]  Original agent path length 60 je: 14
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 2: 619, 651, 650, 649, 617, 616, 615, 583, 582, 581, 580, 579, 578, 577, 
[DBG]  Path for agent 60 updated, resulting length: 14
[DBG]  Update the agent path 97 | Original local length: 2 | New local length: 2
[DBG]  agent 97 t=0 => decoded (sx,sy)=(3,1) => global_id=682
[DBG]  agent 97 t=1 => decoded (sx,sy)=(4,1) => global_id=714
[DBG]  Complete path of agent 97:
[DBG]    Original: 650 682 714 746 745 777 809 841 873 905 937 936 968 1000 999 998 997 
[DBG]    New:     650 682 714 746 745 777 809 841 873 905 937 936 968 1000 999 998 997 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 650 
[DBG]    Local path (in submap): 682 714 
[DBG]    Suffix (out of submap): 746 745 777 809 841 873 905 937 936 968 1000 999 998 997 
[DBG]  Original agent path length 97 je: 17
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 3: 650, 682, 714, 746, 745, 777, 809, 841, 873, 905, 937, 936, 968, 1000, 999, 998, 997, 
[DBG]  Path for agent 97 updated, resulting length: 17
[DBG]  Paths successfully updated.
[DBG]  (LNS.cpp) New path for agent 10: 
[DBG]  588, 589, 590, 591, 592, 593, 625, 657, 658, 659, 660, 628, 629, 597, 565, 533, 534, 502, 503, 504, 505, 506, 474, 475, 476, 
[DBG]  (LNS.cpp) New path for agent 27: 
[DBG]  653, 653, 654, 654, 622, 622, 622, 622, 654, 655, 687, 719, 751, 783, 815, 814, 
[DBG]  (LNS.cpp) New path for agent 60: 
[DBG]  619, 651, 650, 649, 617, 616, 615, 583, 582, 581, 580, 579, 578, 577, 
[DBG]  (LNS.cpp) New path for agent 97: 
[DBG]  650, 682, 714, 746, 745, 777, 809, 841, 873, 905, 937, 936, 968, 1000, 999, 998, 997, 
[DBG]  component_weights = {0.413882, 0.0583184, 0.0609864, 0.466813}
[DBG]  opSuccess value: 1
[STAT] neighbor.sum_of_costs before recomputation: 68
[STAT] neighbor.old_sum_of_costs before recomputation: 72
[STAT] sum_of_costs before recomputation: 4206
[DBG]  Validate solution immediately after SAT success.
[WARNING] Problem after SAT: Target conflict: agent 47 (len 21) traverses target of agent 27 (len 15) at location 814 at timestep 17
[DBG]  Attempting immediate repair via init_lns because problem occurred after SAT (should be applied only for conflicts...).
[DBG]  Passing 150 agents to init_lns (skip=true).
[DBG]  path_table contents for selected agents (neighbor.agents):
[DBG]    Agent 10 => controlling path length=25
[DBG]    Agent 27 => controlling path length=16
[DBG]    Agent 60 => controlling path length=14
[DBG]    Agent 97 => controlling path length=17
[DBG]  hodnota skip_initial_solution=1
[DBG]  We skip initialSolution => call buildCollisionData()
[DBG]  buildCollisionData() called â€“ skip_initial_solution case.
[DBG]  Agents.size()=150, collision_graph.size()=150
[DBG]  agent 27 => updateCollidingPairs => foundCollision
[DBG]  agent 47 => updateCollidingPairs => foundCollision
[DBG]  agent 49 => updateCollidingPairs => foundCollision
[DBG]  agent 50 => updateCollidingPairs => foundCollision
[DBG]  agent 135 => updateCollidingPairs => foundCollision
[DBG]  Conflicting agent pairs:
[DBG]  agent 27 is in conflict with agent 47
[DBG]  agent 27 is in conflict with agent 49
[DBG]  agent 27 is in conflict with agent 50
[DBG]  agent 27 is in conflict with agent 135
[DBG]  buildCollisionData() => sum_of_costs=4202, num_of_colliding_pairs=4
[DBG]  buildCollisionData done => sum_of_costs=4202, num_of_colliding_pairs=4
[DBG]  sum_of_cost hodnota: 4202
[DBG]  After skip/init build => iteration_stats.back(): sum_of_costs=4202, collisions=4
[DEBUG] Using default neighbor generation strategy for conflicts: 0
	InitLNS(PP): runtime = 0.00431208, iterations = 2, colliding pairs = 0, initial colliding pairs = 4, solution cost = 4213, initial solution cost = 4202, failed iterations = 0
[DBG]  init_lns->sum_of_costs after init_lns->run: 4213
[DBG]  sum_of_costs after assignment from init_lns->run: 4213
[DBG]  Recomputing sum_of_cost by dividing neighbor.sum_of_costs and neighbor.old_sum_of_costs
[STAT] sum_of_costs after recomputation: 4213
[STAT] Iteration 200
[DBG]  Using SAT operator (destroy+repair SAT).
[DBG]  ====================
[DBG]  SAT destroy operator called.
[DBG]  SAT heuristic: 2
[DBG]  key_agent_id: 42
[DBG]  key_agent_id global path length: 40
[DBG]  Submap content (global positions):
[DBG]  -1 256 257 258 259 
[DBG]  -1 288 289 290 291 
[DBG]  -1 320 321 322 323 
[DBG]  -1 352 353 354 355 
[DBG]  -1 384 385 386 387 
[DBG]  Map content with agents and obstacles:
[DBG]  X . . A A 
[DBG]  X . . X . 
[DBG]  X X A X A 
[DBG]  X . A . . 
[DBG]  X . . X . 
[DBG]  content of the map structure that we pass to the SAT solver:
[DBG]  1  1  1  1  1  
[DBG]  1  1  1  -1  1  
[DBG]  1  -1  1  -1  1  
[DBG]  1  1  1  1  1  
[DBG]  1  1  1  -1  1  
[DBG]  Identifying agents in a submap for rescheduling (when key_agent is there at the time 4):
[DBG]  Agent 15 found intervals in the sub-map:
[DBG]   [0..5]
[DBG]  Agent 15 (interval in submap: [0..5]) contains time 4, added to replan.
[DBG]  Agent 42 found intervals in the sub-map:
[DBG]   [1..7]
[DBG]  Agent 42 (interval in submap: [1..7]) contains time 4, added to replan.
[DBG]  Agent 51 found intervals in the sub-map:
[DBG]   [0..5]
[DBG]  Agent 51 (interval in submap: [0..5]) contains time 4, added to replan.
[DBG]  Agent 59 found intervals in the sub-map:
[DBG]   [0..6]
[DBG]  Agent 59 (interval in submap: [0..6]) contains time 4, added to replan.
[DBG]  Agent 78 found intervals in the sub-map:
[DBG]   [0..1]
[DBG]  Agent 78 is not in sub-map at time 4 (intervals: 
[DBG]  [0..1] )
[DBG]  Agent 110 found intervals in the sub-map:
[DBG]   [4..9]
[DBG]  Agent 110 (interval in submap: [4..9]) contains time 4, added to replan.
[DBG]  Agent 15 | Start (global): 258 -> (local): (0, 3) at time 4 | Goal (global): 259 -> (local): (0, 4) at time 5
[DBG]  Agent 42 | Start (global): 321 -> (local): (2, 2) at time 4 | Goal (global): 355 -> (local): (3, 4) at time 7
[DBG]  Agent 51 | Start (global): 323 -> (local): (2, 4) at time 4 | Goal (global): 355 -> (local): (3, 4) at time 5
[DBG]  Agent 59 | Start (global): 353 -> (local): (3, 2) at time 4 | Goal (global): 355 -> (local): (3, 4) at time 6
[DBG]  Agent 110 | Start (global): 259 -> (local): (0, 4) at time 4 | Goal (global): 387 -> (local): (4, 4) at time 9
[DBG]  [REPAIR] SAT destroy operator called.
[DBG]  [REPAIR] SAT operator â€“ launching subproblem FOR OPTIMIZATION.
[DBG]  Creating local paths (sx, sy) in the submap for T_sync = 4
[DBG]    Agent 15 (global paths from T=4 to 5) has local path: (0,3) (0,4) 
[DBG]    Agent 42 (global paths from T=4 to 7) has local path: (2,2) (3,2) (3,3) (3,4) 
[DBG]    Agent 51 (global paths from T=4 to 5) has local path: (2,4) (3,4) 
[DBG]    Agent 59 (global paths from T=4 to 6) has local path: (3,2) (3,3) (3,4) 
[DBG]    Agent 110 (global paths from T=4 to 9) has local path: (0,4) (1,4) (2,4) (2,4) (3,4) (4,4) 
[DBG]  Checking input data for SAT solver:
[DBG]    - Number of agents to replan: 5
[DBG]  Agent 15 has the original local path length: 2 => Start (0,3), Goal (0,4)
[DBG]  Agent 42 has the original local path length: 4 => Start (2,2), Goal (3,4)
[DBG]  Agent 51 has the original local path length: 2 => Start (2,4), Goal (3,4)
[DBG]  Agent 59 has the original local path length: 3 => Start (3,2), Goal (3,4)
[DBG]  Agent 110 has the original local path length: 6 => Start (0,4), Goal (4,4)
[DBG]  Start position: (0, 3), (2, 2), (2, 4), (3, 2), (0, 4), 
[DBG]  Goal position: (0, 4), (3, 4), (3, 4), (3, 4), (4, 4), 
[DBG]  SAT instance and solver created.
Currently solving
Instance name: scen
Map name: map
Encoding used: disappear_at_goal
SAT solver used: Kissat
Optimizing function: sum of costs
Number of agents: 5
Mks LB: 5
SoC LB: 16
Delta: 0
Remaining time: 300000 [ms]

[STAT] Solver returned: -1
[DBG]  SAT solver failed.
[STAT] SAT solver failed to find a valid solution.
[DBG]  ====================
[DBG]  SAT destroy operator called.
[DBG]  SAT heuristic: 2
[DBG]  key_agent_id: 42
[DBG]  key_agent_id global path length: 40
[DBG]  Submap content (global positions):
[DBG]  625 626 627 628 629 
[DBG]  657 658 659 660 661 
[DBG]  689 690 691 692 693 
[DBG]  721 722 723 724 725 
[DBG]  753 754 755 756 757 
[DBG]  Map content with agents and obstacles:
[DBG]  . X . . . 
[DBG]  A . A . . 
[DBG]  . X A . X 
[DBG]  . . X . . 
[DBG]  . X . . . 
[DBG]  content of the map structure that we pass to the SAT solver:
[DBG]  1  -1  1  1  1  
[DBG]  1  1  1  1  1  
[DBG]  1  -1  1  1  -1  
[DBG]  1  1  -1  1  1  
[DBG]  1  -1  1  1  1  
[DBG]  Identifying agents in a submap for rescheduling (when key_agent is there at the time 33):
[DBG]  Agent 11 found intervals in the sub-map:
[DBG]   [36..36]
[DBG]  Agent 11 is not in sub-map at time 33 (intervals: 
[DBG]  [36..36] )
[DBG]  Agent 26 found intervals in the sub-map:
[DBG]   [24..32]
[DBG]  Agent 26 is not in sub-map at time 33 (intervals: 
[DBG]  [24..32] )
[DBG]  Agent 28 found intervals in the sub-map:
[DBG]   [0..37]
[DBG]  Agent 28 (interval in submap: [0..37]) contains time 33, added to replan.
[DBG]  Agent 42 found intervals in the sub-map:
[DBG]   [29..36]
[DBG]  Agent 42 (interval in submap: [29..36]) contains time 33, added to replan.
[DBG]  Agent 44 found intervals in the sub-map:
[DBG]  
[DBG]  Agent 44 is not in sub-map at time 33 (intervals: 
[DBG]  )
[DBG]  Agent 45 found intervals in the sub-map:
[DBG]  
[DBG]  Agent 45 is not in sub-map at time 33 (intervals: 
[DBG]  )
[DBG]  Agent 69 found intervals in the sub-map:
[DBG]   [32..39]
[DBG]  Agent 69 (interval in submap: [32..39]) contains time 33, added to replan.
[DBG]  Agent 100 found intervals in the sub-map:
[DBG]   [30..31]
[DBG]  Agent 100 is not in sub-map at time 33 (intervals: 
[DBG]  [30..31] )
[DBG]  Agent 28 | Start (global): 659 -> (local): (1, 2) at time 33 | Goal (global): 725 -> (local): (3, 4) at time 37
[DBG]  Agent 42 | Start (global): 691 -> (local): (2, 2) at time 33 | Goal (global): 725 -> (local): (3, 4) at time 36
[DBG]  Agent 69 | Start (global): 657 -> (local): (1, 0) at time 33 | Goal (global): 756 -> (local): (4, 3) at time 39
[DBG]  [REPAIR] SAT destroy operator called.
[DBG]  [REPAIR] SAT operator â€“ launching subproblem FOR OPTIMIZATION.
[DBG]  Creating local paths (sx, sy) in the submap for T_sync = 33
[DBG]    Agent 28 (global paths from T=33 to 37) has local path: (1,2) (2,2) (2,3) (3,3) (3,4) 
[DBG]    Agent 42 (global paths from T=33 to 36) has local path: (2,2) (2,3) (3,3) (3,4) 
[DBG]    Agent 69 (global paths from T=33 to 39) has local path: (1,0) (1,1) (1,2) (2,2) (2,3) (3,3) (4,3) 
[DBG]  Checking input data for SAT solver:
[DBG]    - Number of agents to replan: 3
[DBG]  Agent 28 has the original local path length: 5 => Start (1,2), Goal (3,4)
[DBG]  Agent 42 has the original local path length: 4 => Start (2,2), Goal (3,4)
[DBG]  Agent 69 has the original local path length: 7 => Start (1,0), Goal (4,3)
[DBG]  Start position: (1, 2), (2, 2), (1, 0), 
[DBG]  Goal position: (3, 4), (3, 4), (4, 3), 
[DBG]  SAT instance and solver created.
Currently solving
Instance name: scen
Map name: map
Encoding used: disappear_at_goal
SAT solver used: Kissat
Optimizing function: sum of costs
Number of agents: 3
Mks LB: 7
SoC LB: 16
Delta: 0
Remaining time: 300000 [ms]

Vertex conflict! Agents 0, 1, timestep 5, location 0
Swapping conflict! Agents 0, 1, timestep 5, edge (0,0)
Vertex conflict! Agents 0, 1, timestep 6, location 0
Found plan [agents = 3] [timesteps = 7]
Agent #0 : 6 10 11 14 15 0 0 
Agent #1 : 10 11 14 15 0 0 0 
Agent #2 : 4 5 6 10 11 14 18 

[STAT] Solver returned: 0
[DBG]  Agent (index) 28 | New local path (submap idx):
[DBG]  6 10 11 14 15 
[DBG]  Agent (index) 42 | New local path (submap idx):
[DBG]  10 11 14 15 
[DBG]  Agent (index) 69 | New local path (submap idx):
[DBG]  4 5 6 10 11 14 18 
[DBG]  Update the agent path 28 | Original local length: 5 | New local length: 5
[DBG]  agent 28 t=0 => decoded (sx,sy)=(1,2) => global_id=659
[DBG]  agent 28 t=1 => decoded (sx,sy)=(2,2) => global_id=691
[DBG]  agent 28 t=2 => decoded (sx,sy)=(2,3) => global_id=692
[DBG]  agent 28 t=3 => decoded (sx,sy)=(3,3) => global_id=724
[DBG]  agent 28 t=4 => decoded (sx,sy)=(3,4) => global_id=725
[DBG]  Complete path of agent 28:
[DBG]    Original: 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 629 628 627 627 659 691 692 724 725 726 727 
[DBG]    New:     661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 629 628 627 627 659 691 692 724 725 726 727 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 629 628 627 627 
[DBG]    Local path (in submap): 659 691 692 724 725 
[DBG]    Suffix (out of submap): 726 727 
[DBG]  Original agent path length 28 je: 40
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 0: 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 629, 628, 627, 627, 659, 691, 692, 724, 725, 726, 727, 
[DBG]  Path for agent 28 updated, resulting length: 40
[DBG]  Update the agent path 42 | Original local length: 4 | New local length: 4
[DBG]  agent 42 t=0 => decoded (sx,sy)=(2,2) => global_id=691
[DBG]  agent 42 t=1 => decoded (sx,sy)=(2,3) => global_id=692
[DBG]  agent 42 t=2 => decoded (sx,sy)=(3,3) => global_id=724
[DBG]  agent 42 t=3 => decoded (sx,sy)=(3,4) => global_id=725
[DBG]  Complete path of agent 42:
[DBG]    Original: 224 256 288 289 321 353 354 355 356 388 389 421 422 423 424 425 457 458 490 491 492 524 556 588 589 590 591 592 593 625 657 658 659 691 692 724 725 726 727 759 
[DBG]    New:     224 256 288 289 321 353 354 355 356 388 389 421 422 423 424 425 457 458 490 491 492 524 556 588 589 590 591 592 593 625 657 658 659 691 692 724 725 726 727 759 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 224 256 288 289 321 353 354 355 356 388 389 421 422 423 424 425 457 458 490 491 492 524 556 588 589 590 591 592 593 625 657 658 659 
[DBG]    Local path (in submap): 691 692 724 725 
[DBG]    Suffix (out of submap): 726 727 759 
[DBG]  Original agent path length 42 je: 40
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 1: 224, 256, 288, 289, 321, 353, 354, 355, 356, 388, 389, 421, 422, 423, 424, 425, 457, 458, 490, 491, 492, 524, 556, 588, 589, 590, 591, 592, 593, 625, 657, 658, 659, 691, 692, 724, 725, 726, 727, 759, 
[DBG]  Path for agent 42 updated, resulting length: 40
[DBG]  Update the agent path 69 | Original local length: 7 | New local length: 7
[DBG]  agent 69 t=0 => decoded (sx,sy)=(1,0) => global_id=657
[DBG]  agent 69 t=1 => decoded (sx,sy)=(1,1) => global_id=658
[DBG]  agent 69 t=2 => decoded (sx,sy)=(1,2) => global_id=659
[DBG]  agent 69 t=3 => decoded (sx,sy)=(2,2) => global_id=691
[DBG]  agent 69 t=4 => decoded (sx,sy)=(2,3) => global_id=692
[DBG]  agent 69 t=5 => decoded (sx,sy)=(3,3) => global_id=724
[DBG]  agent 69 t=6 => decoded (sx,sy)=(4,3) => global_id=756
[DBG]  Complete path of agent 69:
[DBG]    Original: 4 5 6 7 8 40 41 42 43 44 76 77 109 141 173 205 237 269 301 302 303 335 336 368 400 432 464 496 528 529 561 593 625 657 658 659 691 692 724 756 788 820 
[DBG]    New:     4 5 6 7 8 40 41 42 43 44 76 77 109 141 173 205 237 269 301 302 303 335 336 368 400 432 464 496 528 529 561 593 625 657 658 659 691 692 724 756 788 820 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 4 5 6 7 8 40 41 42 43 44 76 77 109 141 173 205 237 269 301 302 303 335 336 368 400 432 464 496 528 529 561 593 625 
[DBG]    Local path (in submap): 657 658 659 691 692 724 756 
[DBG]    Suffix (out of submap): 788 820 
[DBG]  Original agent path length 69 je: 42
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 2: 4, 5, 6, 7, 8, 40, 41, 42, 43, 44, 76, 77, 109, 141, 173, 205, 237, 269, 301, 302, 303, 335, 336, 368, 400, 432, 464, 496, 528, 529, 561, 593, 625, 657, 658, 659, 691, 692, 724, 756, 788, 820, 
[DBG]  Path for agent 69 updated, resulting length: 42
[DBG]  Paths successfully updated.
[DBG]  (LNS.cpp) New path for agent 28: 
[DBG]  661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 629, 628, 627, 627, 659, 691, 692, 724, 725, 726, 727, 
[DBG]  (LNS.cpp) New path for agent 42: 
[DBG]  224, 256, 288, 289, 321, 353, 354, 355, 356, 388, 389, 421, 422, 423, 424, 425, 457, 458, 490, 491, 492, 524, 556, 588, 589, 590, 591, 592, 593, 625, 657, 658, 659, 691, 692, 724, 725, 726, 727, 759, 
[DBG]  (LNS.cpp) New path for agent 69: 
[DBG]  4, 5, 6, 7, 8, 40, 41, 42, 43, 44, 76, 77, 109, 141, 173, 205, 237, 269, 301, 302, 303, 335, 336, 368, 400, 432, 464, 496, 528, 529, 561, 593, 625, 657, 658, 659, 691, 692, 724, 756, 788, 820, 
[DBG]  component_weights = {0.418791, 0.05783, 0.0604756, 0.462903}
[DBG]  opSuccess value: 1
[STAT] neighbor.sum_of_costs before recomputation: 119
[STAT] neighbor.old_sum_of_costs before recomputation: 119
[STAT] sum_of_costs before recomputation: 4213
[DBG]  Validate solution immediately after SAT success.
[DBG]  No problems after SAT replan.
[DBG]  Recomputing sum_of_cost by dividing neighbor.sum_of_costs and neighbor.old_sum_of_costs
[STAT] sum_of_costs after recomputation: 4213
[STAT] Iteration 201
[DBG]  Using SAT operator (destroy+repair SAT).
[DBG]  ====================
[DBG]  SAT destroy operator called.
[DBG]  SAT heuristic: 2
[DBG]  key_agent_id: 51
[DBG]  key_agent_id global path length: 17
[DBG]  Submap content (global positions):
[DBG]  360 361 362 363 364 
[DBG]  392 393 394 395 396 
[DBG]  424 425 426 427 428 
[DBG]  456 457 458 459 460 
[DBG]  488 489 490 491 492 
[DBG]  Map content with agents and obstacles:
[DBG]  . . . A X 
[DBG]  X . X . X 
[DBG]  A A A . A 
[DBG]  . . . . . 
[DBG]  X . . . . 
[DBG]  content of the map structure that we pass to the SAT solver:
[DBG]  1  1  1  1  -1  
[DBG]  -1  1  -1  1  -1  
[DBG]  1  1  1  1  1  
[DBG]  1  1  1  1  1  
[DBG]  -1  1  1  1  1  
[DBG]  Identifying agents in a submap for rescheduling (when key_agent is there at the time 14):
[DBG]  Agent 20 found intervals in the sub-map:
[DBG]  
[DBG]  Agent 20 is not in sub-map at time 14 (intervals: 
[DBG]  )
[DBG]  Agent 29 found intervals in the sub-map:
[DBG]   [9..14]
[DBG]  Agent 29 (interval in submap: [9..14]) contains time 14, added to replan.
[DBG]  Agent 42 found intervals in the sub-map:
[DBG]   [14..20]
[DBG]  Agent 42 (interval in submap: [14..20]) contains time 14, added to replan.
[DBG]  Agent 51 found intervals in the sub-map:
[DBG]   [12..16]
[DBG]  Agent 51 (interval in submap: [12..16]) contains time 14, added to replan.
[DBG]  Agent 59 found intervals in the sub-map:
[DBG]   [11..17]
[DBG]  Agent 59 (interval in submap: [11..17]) contains time 14, added to replan.
[DBG]  Agent 73 found intervals in the sub-map:
[DBG]   [12..12]
[DBG]  Agent 73 is not in sub-map at time 14 (intervals: 
[DBG]  [12..12] )
[DBG]  Agent 80 found intervals in the sub-map:
[DBG]   [15..15]
[DBG]  Agent 80 is not in sub-map at time 14 (intervals: 
[DBG]  [15..15] )
[DBG]  Agent 87 found intervals in the sub-map:
[DBG]  
[DBG]  Agent 87 is not in sub-map at time 14 (intervals: 
[DBG]  )
[DBG]  Agent 88 found intervals in the sub-map:
[DBG]  
[DBG]  Agent 88 is not in sub-map at time 14 (intervals: 
[DBG]  )
[DBG]  Agent 103 found intervals in the sub-map:
[DBG]   [10..16]
[DBG]  Agent 103 (interval in submap: [10..16]) contains time 14, added to replan.
[DBG]  Agent 114 found intervals in the sub-map:
[DBG]  
[DBG]  Agent 114 is not in sub-map at time 14 (intervals: 
[DBG]  )
[DBG]  Agent 116 found intervals in the sub-map:
[DBG]   [7..10]
[DBG]  Agent 116 is not in sub-map at time 14 (intervals: 
[DBG]  [7..10] )
[DBG]  Agent 29 | Start (global): 428 -> (local): (2, 4) at time 14 | Goal (global): 428 -> (local): (2, 4) at time 14
[DBG]  Agent 42 | Start (global): 424 -> (local): (2, 0) at time 14 | Goal (global): 492 -> (local): (4, 4) at time 20
[DBG]  Agent 51 | Start (global): 426 -> (local): (2, 2) at time 14 | Goal (global): 459 -> (local): (3, 3) at time 16
[DBG]  Agent 59 | Start (global): 363 -> (local): (0, 3) at time 14 | Goal (global): 428 -> (local): (2, 4) at time 17
[DBG]  Agent 103 | Start (global): 425 -> (local): (2, 1) at time 14 | Goal (global): 489 -> (local): (4, 1) at time 16
[DBG]  [REPAIR] SAT destroy operator called.
[DBG]  [REPAIR] SAT operator â€“ launching subproblem FOR OPTIMIZATION.
[DBG]  Creating local paths (sx, sy) in the submap for T_sync = 14
[DBG]    Agent 29 (global paths from T=14 to 14) has local path: (2,4) 
[DBG]    Agent 42 (global paths from T=14 to 20) has local path: (2,0) (2,1) (3,1) (3,2) (4,2) (4,3) (4,4) 
[DBG]    Agent 51 (global paths from T=14 to 16) has local path: (2,2) (3,2) (3,3) 
[DBG]    Agent 59 (global paths from T=14 to 17) has local path: (0,3) (1,3) (2,3) (2,4) 
[DBG]    Agent 103 (global paths from T=14 to 16) has local path: (2,1) (3,1) (4,1) 
[DBG]  Checking input data for SAT solver:
[DBG]    - Number of agents to replan: 5
[DBG]  Agent 29 has the original local path length: 1 => Start (2,4), Goal (2,4)
[DBG]  Agent 42 has the original local path length: 7 => Start (2,0), Goal (4,4)
[DBG]  Agent 51 has the original local path length: 3 => Start (2,2), Goal (3,3)
[DBG]  Agent 59 has the original local path length: 4 => Start (0,3), Goal (2,4)
[DBG]  Agent 103 has the original local path length: 3 => Start (2,1), Goal (4,1)
[DBG]  Start position: (2, 4), (2, 0), (2, 2), (0, 3), (2, 1), 
[DBG]  Goal position: (2, 4), (4, 4), (3, 3), (2, 4), (4, 1), 
[DBG]  SAT instance and solver created.
Currently solving
Instance name: scen
Map name: map
Encoding used: disappear_at_goal
SAT solver used: Kissat
Optimizing function: sum of costs
Number of agents: 5
Mks LB: 7
SoC LB: 18
Delta: 0
Remaining time: 300000 [ms]

Vertex conflict! Agents 0, 2, timestep 3, location 0
Swapping conflict! Agents 0, 2, timestep 3, edge (0,0)
Vertex conflict! Agents 0, 2, timestep 4, location 0
Swapping conflict! Agents 0, 2, timestep 4, edge (0,0)
Vertex conflict! Agents 0, 2, timestep 5, location 0
Swapping conflict! Agents 0, 2, timestep 5, edge (0,0)
Vertex conflict! Agents 0, 2, timestep 6, location 0
Vertex conflict! Agents 0, 3, timestep 4, location 0
Swapping conflict! Agents 0, 3, timestep 4, edge (0,0)
Vertex conflict! Agents 0, 3, timestep 5, location 0
Swapping conflict! Agents 0, 3, timestep 5, edge (0,0)
Vertex conflict! Agents 0, 3, timestep 6, location 0
Vertex conflict! Agents 0, 4, timestep 3, location 0
Swapping conflict! Agents 0, 4, timestep 3, edge (0,0)
Vertex conflict! Agents 0, 4, timestep 4, location 0
Swapping conflict! Agents 0, 4, timestep 4, edge (0,0)
Vertex conflict! Agents 0, 4, timestep 5, location 0
Swapping conflict! Agents 0, 4, timestep 5, edge (0,0)
Vertex conflict! Agents 0, 4, timestep 6, location 0
Vertex conflict! Agents 2, 3, timestep 4, location 0
Swapping conflict! Agents 2, 3, timestep 4, edge (0,0)
Vertex conflict! Agents 2, 3, timestep 5, location 0
Swapping conflict! Agents 2, 3, timestep 5, edge (0,0)
Vertex conflict! Agents 2, 3, timestep 6, location 0
Vertex conflict! Agents 2, 4, timestep 3, location 0
Swapping conflict! Agents 2, 4, timestep 3, edge (0,0)
Vertex conflict! Agents 2, 4, timestep 4, location 0
Swapping conflict! Agents 2, 4, timestep 4, edge (0,0)
Vertex conflict! Agents 2, 4, timestep 5, location 0
Swapping conflict! Agents 2, 4, timestep 5, edge (0,0)
Vertex conflict! Agents 2, 4, timestep 6, location 0
Vertex conflict! Agents 3, 4, timestep 4, location 0
Swapping conflict! Agents 3, 4, timestep 4, edge (0,0)
Vertex conflict! Agents 3, 4, timestep 5, location 0
Swapping conflict! Agents 3, 4, timestep 5, edge (0,0)
Vertex conflict! Agents 3, 4, timestep 6, location 0
Found plan [agents = 5] [timesteps = 7]
Agent #0 : 10 0 0 0 0 0 0 
Agent #1 : 6 11 12 16 17 18 19 
Agent #2 : 8 13 14 0 0 0 0 
Agent #3 : 3 5 9 10 0 0 0 
Agent #4 : 7 12 16 0 0 0 0 

[STAT] Solver returned: 0
[DBG]  Agent (index) 29 | New local path (submap idx):
[DBG]  10 
[DBG]  Agent (index) 42 | New local path (submap idx):
[DBG]  6 11 12 16 17 18 19 
[DBG]  Agent (index) 51 | New local path (submap idx):
[DBG]  8 13 14 
[DBG]  Agent (index) 59 | New local path (submap idx):
[DBG]  3 5 9 10 
[DBG]  Agent (index) 103 | New local path (submap idx):
[DBG]  7 12 16 
[DBG]  Update the agent path 29 | Original local length: 1 | New local length: 1
[DBG]  agent 29 t=0 => decoded (sx,sy)=(2,4) => global_id=428
[DBG]  Complete path of agent 29:
[DBG]    Original: 579 547 548 549 550 551 519 520 521 489 457 425 426 427 428 429 430 431 432 400 401 402 403 404 405 406 407 375 343 311 
[DBG]    New:     579 547 548 549 550 551 519 520 521 489 457 425 426 427 428 429 430 431 432 400 401 402 403 404 405 406 407 375 343 311 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 579 547 548 549 550 551 519 520 521 489 457 425 426 427 
[DBG]    Local path (in submap): 428 
[DBG]    Suffix (out of submap): 429 430 431 432 400 401 402 403 404 405 406 407 375 343 311 
[DBG]  Original agent path length 29 je: 30
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 0: 579, 547, 548, 549, 550, 551, 519, 520, 521, 489, 457, 425, 426, 427, 428, 429, 430, 431, 432, 400, 401, 402, 403, 404, 405, 406, 407, 375, 343, 311, 
[DBG]  Path for agent 29 updated, resulting length: 30
[DBG]  Update the agent path 42 | Original local length: 7 | New local length: 7
[DBG]  agent 42 t=0 => decoded (sx,sy)=(2,0) => global_id=424
[DBG]  agent 42 t=1 => decoded (sx,sy)=(3,0) => global_id=456
[DBG]  agent 42 t=2 => decoded (sx,sy)=(3,1) => global_id=457
[DBG]  agent 42 t=3 => decoded (sx,sy)=(4,1) => global_id=489
[DBG]  agent 42 t=4 => decoded (sx,sy)=(4,2) => global_id=490
[DBG]  agent 42 t=5 => decoded (sx,sy)=(4,3) => global_id=491
[DBG]  agent 42 t=6 => decoded (sx,sy)=(4,4) => global_id=492
[DBG]  Complete path of agent 42:
[DBG]    Original: 224 256 288 289 321 353 354 355 356 388 389 421 422 423 424 425 457 458 490 491 492 524 556 588 589 590 591 592 593 625 657 658 659 691 692 724 725 726 727 759 
[DBG]    New:     224 256 288 289 321 353 354 355 356 388 389 421 422 423 424 456 457 489 490 491 492 524 556 588 589 590 591 592 593 625 657 658 659 691 692 724 725 726 727 759 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 224 256 288 289 321 353 354 355 356 388 389 421 422 423 
[DBG]    Local path (in submap): 424 456 457 489 490 491 492 
[DBG]    Suffix (out of submap): 524 556 588 589 590 591 592 593 625 657 658 659 691 692 724 725 726 727 759 
[DBG]  Original agent path length 42 je: 40
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 1: 224, 256, 288, 289, 321, 353, 354, 355, 356, 388, 389, 421, 422, 423, 424, 456, 457, 489, 490, 491, 492, 524, 556, 588, 589, 590, 591, 592, 593, 625, 657, 658, 659, 691, 692, 724, 725, 726, 727, 759, 
[DBG]  Path for agent 42 updated, resulting length: 40
[DBG]  Update the agent path 51 | Original local length: 3 | New local length: 3
[DBG]  agent 51 t=0 => decoded (sx,sy)=(2,2) => global_id=426
[DBG]  agent 51 t=1 => decoded (sx,sy)=(3,2) => global_id=458
[DBG]  agent 51 t=2 => decoded (sx,sy)=(3,3) => global_id=459
[DBG]  Complete path of agent 51:
[DBG]    Original: 257 258 259 291 323 355 356 357 358 390 391 423 424 425 426 458 459 
[DBG]    New:     257 258 259 291 323 355 356 357 358 390 391 423 424 425 426 458 459 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 257 258 259 291 323 355 356 357 358 390 391 423 424 425 
[DBG]    Local path (in submap): 426 458 459 
[DBG]    Suffix (out of submap): 
[DBG]  Original agent path length 51 je: 17
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 2: 257, 258, 259, 291, 323, 355, 356, 357, 358, 390, 391, 423, 424, 425, 426, 458, 459, 
[DBG]  Path for agent 51 updated, resulting length: 17
[DBG]  Update the agent path 59 | Original local length: 4 | New local length: 4
[DBG]  agent 59 t=0 => decoded (sx,sy)=(0,3) => global_id=363
[DBG]  agent 59 t=1 => decoded (sx,sy)=(1,3) => global_id=395
[DBG]  agent 59 t=2 => decoded (sx,sy)=(2,3) => global_id=427
[DBG]  agent 59 t=3 => decoded (sx,sy)=(2,4) => global_id=428
[DBG]  Complete path of agent 59:
[DBG]    Original: 256 288 289 321 353 354 355 356 357 358 359 360 361 362 363 395 427 428 429 430 462 494 526 558 590 591 623 655 687 719 719 751 783 815 847 879 880 881 882 883 884 916 917 
[DBG]    New:     256 288 289 321 353 354 355 356 357 358 359 360 361 362 363 395 427 428 429 430 462 494 526 558 590 591 623 655 687 719 719 751 783 815 847 879 880 881 882 883 884 916 917 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 256 288 289 321 353 354 355 356 357 358 359 360 361 362 
[DBG]    Local path (in submap): 363 395 427 428 
[DBG]    Suffix (out of submap): 429 430 462 494 526 558 590 591 623 655 687 719 719 751 783 815 847 879 880 881 882 883 884 916 917 
[DBG]  Original agent path length 59 je: 43
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 3: 256, 288, 289, 321, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 395, 427, 428, 429, 430, 462, 494, 526, 558, 590, 591, 623, 655, 687, 719, 719, 751, 783, 815, 847, 879, 880, 881, 882, 883, 884, 916, 917, 
[DBG]  Path for agent 59 updated, resulting length: 43
[DBG]  Update the agent path 103 | Original local length: 3 | New local length: 3
[DBG]  agent 103 t=0 => decoded (sx,sy)=(2,1) => global_id=425
[DBG]  agent 103 t=1 => decoded (sx,sy)=(3,1) => global_id=457
[DBG]  agent 103 t=2 => decoded (sx,sy)=(4,1) => global_id=489
[DBG]  Complete path of agent 103:
[DBG]    Original: 40 72 104 136 168 200 232 264 296 328 360 361 393 393 425 457 489 521 520 520 519 551 583 584 616 648 680 712 713 745 777 809 841 873 905 
[DBG]    New:     40 72 104 136 168 200 232 264 296 328 360 361 393 393 425 457 489 521 520 520 519 551 583 584 616 648 680 712 713 745 777 809 841 873 905 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 40 72 104 136 168 200 232 264 296 328 360 361 393 393 
[DBG]    Local path (in submap): 425 457 489 
[DBG]    Suffix (out of submap): 521 520 520 519 551 583 584 616 648 680 712 713 745 777 809 841 873 905 
[DBG]  Original agent path length 103 je: 35
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 4: 40, 72, 104, 136, 168, 200, 232, 264, 296, 328, 360, 361, 393, 393, 425, 457, 489, 521, 520, 520, 519, 551, 583, 584, 616, 648, 680, 712, 713, 745, 777, 809, 841, 873, 905, 
[DBG]  Path for agent 103 updated, resulting length: 35
[DBG]  Paths successfully updated.
[DBG]  (LNS.cpp) New path for agent 29: 
[DBG]  579, 547, 548, 549, 550, 551, 519, 520, 521, 489, 457, 425, 426, 427, 428, 429, 430, 431, 432, 400, 401, 402, 403, 404, 405, 406, 407, 375, 343, 311, 
[DBG]  (LNS.cpp) New path for agent 42: 
[DBG]  224, 256, 288, 289, 321, 353, 354, 355, 356, 388, 389, 421, 422, 423, 424, 456, 457, 489, 490, 491, 492, 524, 556, 588, 589, 590, 591, 592, 593, 625, 657, 658, 659, 691, 692, 724, 725, 726, 727, 759, 
[DBG]  (LNS.cpp) New path for agent 51: 
[DBG]  257, 258, 259, 291, 323, 355, 356, 357, 358, 390, 391, 423, 424, 425, 426, 458, 459, 
[DBG]  (LNS.cpp) New path for agent 59: 
[DBG]  256, 288, 289, 321, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 395, 427, 428, 429, 430, 462, 494, 526, 558, 590, 591, 623, 655, 687, 719, 719, 751, 783, 815, 847, 879, 880, 881, 882, 883, 884, 916, 917, 
[DBG]  (LNS.cpp) New path for agent 103: 
[DBG]  40, 72, 104, 136, 168, 200, 232, 264, 296, 328, 360, 361, 393, 393, 425, 457, 489, 521, 520, 520, 519, 551, 583, 584, 616, 648, 680, 712, 713, 745, 777, 809, 841, 873, 905, 
[DBG]  component_weights = {0.423716, 0.0573399, 0.0599631, 0.458981}
[DBG]  opSuccess value: 1
[STAT] neighbor.sum_of_costs before recomputation: 160
[STAT] neighbor.old_sum_of_costs before recomputation: 160
[STAT] sum_of_costs before recomputation: 4213
[DBG]  Validate solution immediately after SAT success.
[WARNING] Problem after SAT: Target conflict: agent 42 (len 39) traverses target of agent 73 (len 12) at location 456 at timestep 15
[DBG]  Attempting immediate repair via init_lns because problem occurred after SAT (should be applied only for conflicts...).
[DBG]  Passing 150 agents to init_lns (skip=true).
[DBG]  path_table contents for selected agents (neighbor.agents):
[DBG]    Agent 29 => controlling path length=30
[DBG]    Agent 42 => controlling path length=40
[DBG]    Agent 51 => controlling path length=17
[DBG]    Agent 59 => controlling path length=43
[DBG]    Agent 103 => controlling path length=35
[DBG]  hodnota skip_initial_solution=1
[DBG]  We skip initialSolution => call buildCollisionData()
[DBG]  buildCollisionData() called â€“ skip_initial_solution case.
[DBG]  Agents.size()=150, collision_graph.size()=150
[DBG]  agent 42 => updateCollidingPairs => foundCollision
[DBG]  agent 73 => updateCollidingPairs => foundCollision
[DBG]  Conflicting agent pairs:
[DBG]  agent 42 is in conflict with agent 73
[DBG]  buildCollisionData() => sum_of_costs=4213, num_of_colliding_pairs=1
[DBG]  buildCollisionData done => sum_of_costs=4213, num_of_colliding_pairs=1
[DBG]  sum_of_cost hodnota: 4213
[DBG]  After skip/init build => iteration_stats.back(): sum_of_costs=4213, collisions=1
[DEBUG] Using default neighbor generation strategy for conflicts: 0
[DEBUG] Using default neighbor generation strategy for conflicts: 0
	InitLNS(PP): runtime = 0.0122631, iterations = 3, colliding pairs = 0, initial colliding pairs = 1, solution cost = 4210, initial solution cost = 4213, failed iterations = 0
[DBG]  init_lns->sum_of_costs after init_lns->run: 4210
[DBG]  sum_of_costs after assignment from init_lns->run: 4210
[DBG]  Recomputing sum_of_cost by dividing neighbor.sum_of_costs and neighbor.old_sum_of_costs
[STAT] sum_of_costs after recomputation: 4210
[STAT] Iteration 202
[DBG]  Using SAT operator (destroy+repair SAT).
[DBG]  ====================
[DBG]  SAT destroy operator called.
[DBG]  SAT heuristic: 2
[DBG]  key_agent_id: 122
[DBG]  key_agent_id global path length: 33
[DBG]  Submap content (global positions):
[DBG]  421 422 423 424 425 
[DBG]  453 454 455 456 457 
[DBG]  485 486 487 488 489 
[DBG]  517 518 519 520 521 
[DBG]  549 550 551 552 553 
[DBG]  Map content with agents and obstacles:
[DBG]  . . A A . 
[DBG]  X . A . . 
[DBG]  . . A X . 
[DBG]  A X A A . 
[DBG]  A . . X X 
[DBG]  content of the map structure that we pass to the SAT solver:
[DBG]  1  1  1  1  1  
[DBG]  -1  1  1  1  1  
[DBG]  1  1  1  -1  1  
[DBG]  1  -1  1  1  1  
[DBG]  1  1  1  -1  -1  
[DBG]  Identifying agents in a submap for rescheduling (when key_agent is there at the time 19):
[DBG]  Agent 13 found intervals in the sub-map:
[DBG]   [15..19]
[DBG]  Agent 13 (interval in submap: [15..19]) contains time 19, added to replan.
[DBG]  Agent 23 found intervals in the sub-map:
[DBG]   [15..24]
[DBG]  Agent 23 (interval in submap: [15..24]) contains time 19, added to replan.
[DBG]  Agent 42 found intervals in the sub-map:
[DBG]   [11..17]
[DBG]  Agent 42 is not in sub-map at time 19 (intervals: 
[DBG]  [11..17] )
[DBG]  Agent 55 found intervals in the sub-map:
[DBG]  
[DBG]  Agent 55 is not in sub-map at time 19 (intervals: 
[DBG]  )
[DBG]  Agent 65 found intervals in the sub-map:
[DBG]   [15..20]
[DBG]  Agent 65 (interval in submap: [15..20]) contains time 19, added to replan.
[DBG]  Agent 67 found intervals in the sub-map:
[DBG]   [14..20]
[DBG]  Agent 67 (interval in submap: [14..20]) contains time 19, added to replan.
[DBG]  Agent 87 found intervals in the sub-map:
[DBG]   [9..12] [16..16]
[DBG]  Agent 87 is not in sub-map at time 19 (intervals: 
[DBG]  [9..12] [16..16] )
[DBG]  Agent 103 found intervals in the sub-map:
[DBG]   [14..21]
[DBG]  Agent 103 (interval in submap: [14..21]) contains time 19, added to replan.
[DBG]  Agent 105 found intervals in the sub-map:
[DBG]   [19..27]
[DBG]  Agent 105 (interval in submap: [19..27]) contains time 19, added to replan.
[DBG]  Agent 112 found intervals in the sub-map:
[DBG]  
[DBG]  Agent 112 is not in sub-map at time 19 (intervals: 
[DBG]  )
[DBG]  Agent 122 found intervals in the sub-map:
[DBG]   [17..23]
[DBG]  Agent 122 (interval in submap: [17..23]) contains time 19, added to replan.
[DBG]  Agent 140 found intervals in the sub-map:
[DBG]   [14..22]
[DBG]  Agent 140 (interval in submap: [14..22]) contains time 19, added to replan.
[DBG]  Agent 13 | Start (global): 423 -> (local): (0, 2) at time 19 | Goal (global): 423 -> (local): (0, 2) at time 19
[DBG]  Agent 23 | Start (global): 519 -> (local): (3, 2) at time 19 | Goal (global): 425 -> (local): (0, 4) at time 24
[DBG]  Agent 65 | Start (global): 517 -> (local): (3, 0) at time 19 | Goal (global): 549 -> (local): (4, 0) at time 20
[DBG]  Agent 67 | Start (global): 424 -> (local): (0, 3) at time 19 | Goal (global): 425 -> (local): (0, 4) at time 20
[DBG]  Agent 103 | Start (global): 520 -> (local): (3, 3) at time 19 | Goal (global): 551 -> (local): (4, 2) at time 21
[DBG]  Agent 105 | Start (global): 549 -> (local): (4, 0) at time 19 | Goal (global): 422 -> (local): (0, 1) at time 27
[DBG]  Agent 122 | Start (global): 487 -> (local): (2, 2) at time 19 | Goal (global): 421 -> (local): (0, 0) at time 23
[DBG]  Agent 140 | Start (global): 455 -> (local): (1, 2) at time 19 | Goal (global): 425 -> (local): (0, 4) at time 22
[DBG]  [REPAIR] SAT destroy operator called.
[DBG]  [REPAIR] SAT operator â€“ launching subproblem FOR OPTIMIZATION.
[DBG]  Creating local paths (sx, sy) in the submap for T_sync = 19
[DBG]    Agent 13 (global paths from T=19 to 19) has local path: (0,2) 
[DBG]    Agent 23 (global paths from T=19 to 24) has local path: (3,2) (2,2) (1,2) (0,2) (0,3) (0,4) 
[DBG]    Agent 65 (global paths from T=19 to 20) has local path: (3,0) (4,0) 
[DBG]    Agent 67 (global paths from T=19 to 20) has local path: (0,3) (0,4) 
[DBG]    Agent 103 (global paths from T=19 to 21) has local path: (3,3) (3,2) (4,2) 
[DBG]    Agent 105 (global paths from T=19 to 27) has local path: (4,0) (4,1) (4,1) (4,2) (3,2) (2,2) (1,2) (1,1) (0,1) 
[DBG]    Agent 122 (global paths from T=19 to 23) has local path: (2,2) (2,1) (1,1) (0,1) (0,0) 
[DBG]    Agent 140 (global paths from T=19 to 22) has local path: (1,2) (0,2) (0,3) (0,4) 
[DBG]  Checking input data for SAT solver:
[DBG]    - Number of agents to replan: 8
[DBG]  Agent 13 has the original local path length: 1 => Start (0,2), Goal (0,2)
[DBG]  Agent 23 has the original local path length: 6 => Start (3,2), Goal (0,4)
[DBG]  Agent 65 has the original local path length: 2 => Start (3,0), Goal (4,0)
[DBG]  Agent 67 has the original local path length: 2 => Start (0,3), Goal (0,4)
[DBG]  Agent 103 has the original local path length: 3 => Start (3,3), Goal (4,2)
[DBG]  Agent 105 has the original local path length: 9 => Start (4,0), Goal (0,1)
[DBG]  Agent 122 has the original local path length: 5 => Start (2,2), Goal (0,0)
[DBG]  Agent 140 has the original local path length: 4 => Start (1,2), Goal (0,4)
[DBG]  Start position: (0, 2), (3, 2), (3, 0), (0, 3), (3, 3), (4, 0), (2, 2), (1, 2), 
[DBG]  Goal position: (0, 2), (0, 4), (4, 0), (0, 4), (4, 2), (0, 1), (0, 0), (0, 4), 
[DBG]  SAT instance and solver created.
Currently solving
Instance name: scen
Map name: map
Encoding used: disappear_at_goal
SAT solver used: Kissat
Optimizing function: sum of costs
Number of agents: 8
Mks LB: 6
SoC LB: 29
Delta: 0
Remaining time: 300000 [ms]

[STAT] Solver returned: -1
[DBG]  SAT solver failed.
[STAT] SAT solver failed to find a valid solution.
[DBG]  ====================
[DBG]  SAT destroy operator called.
[DBG]  SAT heuristic: 2
[DBG]  key_agent_id: 122
[DBG]  key_agent_id global path length: 33
[DBG]  Submap content (global positions):
[DBG]  810 811 812 813 814 
[DBG]  842 843 844 845 846 
[DBG]  874 875 876 877 878 
[DBG]  906 907 908 909 910 
[DBG]  938 939 940 941 942 
[DBG]  Map content with agents and obstacles:
[DBG]  . . . . A 
[DBG]  X . A . . 
[DBG]  . . A . . 
[DBG]  . X . A . 
[DBG]  X . . . . 
[DBG]  content of the map structure that we pass to the SAT solver:
[DBG]  1  1  1  1  1  
[DBG]  -1  1  1  1  1  
[DBG]  1  1  1  1  1  
[DBG]  1  -1  1  1  1  
[DBG]  -1  1  1  1  1  
[DBG]  Identifying agents in a submap for rescheduling (when key_agent is there at the time 2):
[DBG]  Agent 61 found intervals in the sub-map:
[DBG]   [0..3]
[DBG]  Agent 61 (interval in submap: [0..3]) contains time 2, added to replan.
[DBG]  Agent 114 found intervals in the sub-map:
[DBG]   [0..4]
[DBG]  Agent 114 (interval in submap: [0..4]) contains time 2, added to replan.
[DBG]  Agent 122 found intervals in the sub-map:
[DBG]   [0..4]
[DBG]  Agent 122 (interval in submap: [0..4]) contains time 2, added to replan.
[DBG]  Agent 132 found intervals in the sub-map:
[DBG]   [0..6]
[DBG]  Agent 132 (interval in submap: [0..6]) contains time 2, added to replan.
[DBG]  Agent 143 found intervals in the sub-map:
[DBG]   [6..10]
[DBG]  Agent 143 is not in sub-map at time 2 (intervals: 
[DBG]  [6..10] )
[DBG]  Agent 61 | Start (global): 814 -> (local): (0, 4) at time 2 | Goal (global): 814 -> (local): (0, 4) at time 3
[DBG]  Agent 114 | Start (global): 844 -> (local): (1, 2) at time 2 | Goal (global): 846 -> (local): (1, 4) at time 4
[DBG]  Agent 122 | Start (global): 876 -> (local): (2, 2) at time 2 | Goal (global): 812 -> (local): (0, 2) at time 4
[DBG]  Agent 132 | Start (global): 909 -> (local): (3, 3) at time 2 | Goal (global): 814 -> (local): (0, 4) at time 6
[DBG]  [REPAIR] SAT destroy operator called.
[DBG]  [REPAIR] SAT operator â€“ launching subproblem FOR OPTIMIZATION.
[DBG]  Creating local paths (sx, sy) in the submap for T_sync = 2
[DBG]    Agent 61 (global paths from T=2 to 3) has local path: (0,4) (0,4) 
[DBG]    Agent 114 (global paths from T=2 to 4) has local path: (1,2) (1,3) (1,4) 
[DBG]    Agent 122 (global paths from T=2 to 4) has local path: (2,2) (1,2) (0,2) 
[DBG]    Agent 132 (global paths from T=2 to 6) has local path: (3,3) (3,4) (2,4) (1,4) (0,4) 
[DBG]  Checking input data for SAT solver:
[DBG]    - Number of agents to replan: 4
[DBG]  Agent 61 has the original local path length: 2 => Start (0,4), Goal (0,4)
[DBG]  Agent 114 has the original local path length: 3 => Start (1,2), Goal (1,4)
[DBG]  Agent 122 has the original local path length: 3 => Start (2,2), Goal (0,2)
[DBG]  Agent 132 has the original local path length: 5 => Start (3,3), Goal (0,4)
[DBG]  Start position: (0, 4), (1, 2), (2, 2), (3, 3), 
[DBG]  Goal position: (0, 4), (1, 4), (0, 2), (0, 4), 
[DBG]  SAT instance and solver created.
Currently solving
Instance name: scen
Map name: map
Encoding used: disappear_at_goal
SAT solver used: Kissat
Optimizing function: sum of costs
Number of agents: 4
Mks LB: 5
SoC LB: 12
Delta: 0
Remaining time: 300000 [ms]

Vertex conflict! Agents 0, 1, timestep 3, location 0
Swapping conflict! Agents 0, 1, timestep 3, edge (0,0)
Vertex conflict! Agents 0, 1, timestep 4, location 0
Vertex conflict! Agents 0, 2, timestep 3, location 0
Swapping conflict! Agents 0, 2, timestep 3, edge (0,0)
Vertex conflict! Agents 0, 2, timestep 4, location 0
Vertex conflict! Agents 1, 2, timestep 3, location 0
Swapping conflict! Agents 1, 2, timestep 3, edge (0,0)
Vertex conflict! Agents 1, 2, timestep 4, location 0
Found plan [agents = 4] [timesteps = 5]
Agent #0 : 4 0 0 0 0 
Agent #1 : 6 7 8 0 0 
Agent #2 : 11 6 2 0 0 
Agent #3 : 16 17 13 8 4 

[STAT] Solver returned: 0
[DBG]  Agent (index) 61 | New local path (submap idx):
[DBG]  4 
[DBG]  Agent (index) 114 | New local path (submap idx):
[DBG]  6 7 8 
[DBG]  Agent (index) 122 | New local path (submap idx):
[DBG]  11 6 2 
[DBG]  Agent (index) 132 | New local path (submap idx):
[DBG]  16 17 13 8 4 
[DBG]  Update the agent path 61 | Original local length: 2 | New local length: 1
[DBG]  agent 61 t=0 => decoded (sx,sy)=(0,4) => global_id=814
[DBG]  Complete path of agent 61:
[DBG]    Original: 813 814 814 814 815 783 784 752 720 688 689 657 658 659 660 660 660 660 628 596 597 565 566 534 502 503 504 472 440 408 409 377 345 345 313 
[DBG]    New:     813 814 814 815 783 784 752 720 688 689 657 658 659 660 660 660 660 628 596 597 565 566 534 502 503 504 472 440 408 409 377 345 345 313 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 813 814 
[DBG]    Local path (in submap): 814 815 
[DBG]    Suffix (out of submap): 783 784 752 720 688 689 657 658 659 660 660 660 660 628 596 597 565 566 534 502 503 504 472 440 408 409 377 345 345 313 
[DBG]  Original agent path length 61 je: 35
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 0: 813, 814, 814, 815, 783, 784, 752, 720, 688, 689, 657, 658, 659, 660, 660, 660, 660, 628, 596, 597, 565, 566, 534, 502, 503, 504, 472, 440, 408, 409, 377, 345, 345, 313, 
[DBG]  Path for agent 61 updated, resulting length: 34
[DBG]  Update the agent path 114 | Original local length: 3 | New local length: 3
[DBG]  agent 114 t=0 => decoded (sx,sy)=(1,2) => global_id=844
[DBG]  agent 114 t=1 => decoded (sx,sy)=(1,3) => global_id=845
[DBG]  agent 114 t=2 => decoded (sx,sy)=(1,4) => global_id=846
[DBG]  Complete path of agent 114:
[DBG]    Original: 875 843 844 845 846 847 815 783 784 752 720 721 689 657 658 659 627 628 629 597 565 566 534 502 470 438 406 407 375 343 344 312 312 313 281 249 217 185 153 154 
[DBG]    New:     875 843 844 845 846 847 815 783 784 752 720 721 689 657 658 659 627 628 629 597 565 566 534 502 470 438 406 407 375 343 344 312 312 313 281 249 217 185 153 154 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 875 843 
[DBG]    Local path (in submap): 844 845 846 
[DBG]    Suffix (out of submap): 847 815 783 784 752 720 721 689 657 658 659 627 628 629 597 565 566 534 502 470 438 406 407 375 343 344 312 312 313 281 249 217 185 153 154 
[DBG]  Original agent path length 114 je: 40
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 1: 875, 843, 844, 845, 846, 847, 815, 783, 784, 752, 720, 721, 689, 657, 658, 659, 627, 628, 629, 597, 565, 566, 534, 502, 470, 438, 406, 407, 375, 343, 344, 312, 312, 313, 281, 249, 217, 185, 153, 154, 
[DBG]  Path for agent 114 updated, resulting length: 40
[DBG]  Update the agent path 122 | Original local length: 3 | New local length: 3
[DBG]  agent 122 t=0 => decoded (sx,sy)=(2,2) => global_id=876
[DBG]  agent 122 t=1 => decoded (sx,sy)=(1,2) => global_id=844
[DBG]  agent 122 t=2 => decoded (sx,sy)=(0,2) => global_id=812
[DBG]  Complete path of agent 122:
[DBG]    Original: 909 877 876 844 812 780 748 747 715 683 682 650 649 617 585 584 583 551 519 487 486 454 422 421 389 357 325 293 261 260 228 196 197 
[DBG]    New:     909 877 876 844 812 780 748 747 715 683 682 650 649 617 585 584 583 551 519 487 486 454 422 421 389 357 325 293 261 260 228 196 197 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 909 877 
[DBG]    Local path (in submap): 876 844 812 
[DBG]    Suffix (out of submap): 780 748 747 715 683 682 650 649 617 585 584 583 551 519 487 486 454 422 421 389 357 325 293 261 260 228 196 197 
[DBG]  Original agent path length 122 je: 33
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 2: 909, 877, 876, 844, 812, 780, 748, 747, 715, 683, 682, 650, 649, 617, 585, 584, 583, 551, 519, 487, 486, 454, 422, 421, 389, 357, 325, 293, 261, 260, 228, 196, 197, 
[DBG]  Path for agent 122 updated, resulting length: 33
[DBG]  Update the agent path 132 | Original local length: 5 | New local length: 5
[DBG]  agent 132 t=0 => decoded (sx,sy)=(3,3) => global_id=909
[DBG]  agent 132 t=1 => decoded (sx,sy)=(3,4) => global_id=910
[DBG]  agent 132 t=2 => decoded (sx,sy)=(2,4) => global_id=878
[DBG]  agent 132 t=3 => decoded (sx,sy)=(1,4) => global_id=846
[DBG]  agent 132 t=4 => decoded (sx,sy)=(0,4) => global_id=814
[DBG]  Complete path of agent 132:
[DBG]    Original: 876 908 909 910 878 846 814 815 783 751 750 718 686 654 622 590 558 526 525 524 523 491 490 458 426 427 395 363 331 299 267 
[DBG]    New:     876 908 909 910 878 846 814 815 783 751 750 718 686 654 622 590 558 526 525 524 523 491 490 458 426 427 395 363 331 299 267 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 876 908 
[DBG]    Local path (in submap): 909 910 878 846 814 
[DBG]    Suffix (out of submap): 815 783 751 750 718 686 654 622 590 558 526 525 524 523 491 490 458 426 427 395 363 331 299 267 
[DBG]  Original agent path length 132 je: 31
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 3: 876, 908, 909, 910, 878, 846, 814, 815, 783, 751, 750, 718, 686, 654, 622, 590, 558, 526, 525, 524, 523, 491, 490, 458, 426, 427, 395, 363, 331, 299, 267, 
[DBG]  Path for agent 132 updated, resulting length: 31
[DBG]  Paths successfully updated.
[DBG]  (LNS.cpp) New path for agent 61: 
[DBG]  813, 814, 814, 815, 783, 784, 752, 720, 688, 689, 657, 658, 659, 660, 660, 660, 660, 628, 596, 597, 565, 566, 534, 502, 503, 504, 472, 440, 408, 409, 377, 345, 345, 313, 
[DBG]  (LNS.cpp) New path for agent 114: 
[DBG]  875, 843, 844, 845, 846, 847, 815, 783, 784, 752, 720, 721, 689, 657, 658, 659, 627, 628, 629, 597, 565, 566, 534, 502, 470, 438, 406, 407, 375, 343, 344, 312, 312, 313, 281, 249, 217, 185, 153, 154, 
[DBG]  (LNS.cpp) New path for agent 122: 
[DBG]  909, 877, 876, 844, 812, 780, 748, 747, 715, 683, 682, 650, 649, 617, 585, 584, 583, 551, 519, 487, 486, 454, 422, 421, 389, 357, 325, 293, 261, 260, 228, 196, 197, 
[DBG]  (LNS.cpp) New path for agent 132: 
[DBG]  876, 908, 909, 910, 878, 846, 814, 815, 783, 751, 750, 718, 686, 654, 622, 590, 558, 526, 525, 524, 523, 491, 490, 458, 426, 427, 395, 363, 331, 299, 267, 
[DBG]  component_weights = {0.41977, 0.0568058, 0.0594046, 0.46402}
[DBG]  opSuccess value: 1
[STAT] neighbor.sum_of_costs before recomputation: 134
[STAT] neighbor.old_sum_of_costs before recomputation: 135
[STAT] sum_of_costs before recomputation: 4210
[DBG]  Validate solution immediately after SAT success.
[WARNING] Problem after SAT: Vertex conflict between agents 61 and 84 at location 815 at timestep 3
[DBG]  Attempting immediate repair via init_lns because problem occurred after SAT (should be applied only for conflicts...).
[DBG]  Passing 150 agents to init_lns (skip=true).
[DBG]  path_table contents for selected agents (neighbor.agents):
[DBG]    Agent 61 => controlling path length=34
[DBG]    Agent 114 => controlling path length=40
[DBG]    Agent 122 => controlling path length=33
[DBG]    Agent 132 => controlling path length=31
[DBG]  hodnota skip_initial_solution=1
[DBG]  We skip initialSolution => call buildCollisionData()
[DBG]  buildCollisionData() called â€“ skip_initial_solution case.
[DBG]  Agents.size()=150, collision_graph.size()=150
[DBG]  agent 61 => updateCollidingPairs => foundCollision
[DBG]  agent 84 => updateCollidingPairs => foundCollision
[DBG]  agent 101 => updateCollidingPairs => foundCollision
[DBG]  agent 114 => updateCollidingPairs => foundCollision
[DBG]  Conflicting agent pairs:
[DBG]  agent 61 is in conflict with agent 84
[DBG]  agent 61 is in conflict with agent 101
[DBG]  agent 61 is in conflict with agent 114
[DBG]  buildCollisionData() => sum_of_costs=4209, num_of_colliding_pairs=3
[DBG]  buildCollisionData done => sum_of_costs=4209, num_of_colliding_pairs=3
[DBG]  sum_of_cost hodnota: 4209
[DBG]  After skip/init build => iteration_stats.back(): sum_of_costs=4209, collisions=3
[DEBUG] Using default neighbor generation strategy for conflicts: 2
[DEBUG] Using default neighbor generation strategy for conflicts: 2
[DEBUG] Using default neighbor generation strategy for conflicts: 0
	InitLNS(PP): runtime = 0.0144448, iterations = 4, colliding pairs = 0, initial colliding pairs = 3, solution cost = 4175, initial solution cost = 4209, failed iterations = 0
[DBG]  init_lns->sum_of_costs after init_lns->run: 4175
[DBG]  sum_of_costs after assignment from init_lns->run: 4175
[DBG]  Recomputing sum_of_cost by dividing neighbor.sum_of_costs and neighbor.old_sum_of_costs
[STAT] sum_of_costs after recomputation: 4175
[STAT] Iteration 203
[DBG]  Using SAT operator (destroy+repair SAT).
[DBG]  ====================
[DBG]  SAT destroy operator called.
[DBG]  SAT heuristic: 2
[DBG]  key_agent_id: 34
[DBG]  key_agent_id global path length: 27
[DBG]  Submap content (global positions):
[DBG]  142 143 144 145 146 
[DBG]  174 175 176 177 178 
[DBG]  206 207 208 209 210 
[DBG]  238 239 240 241 242 
[DBG]  270 271 272 273 274 
[DBG]  Map content with agents and obstacles:
[DBG]  X X . X . 
[DBG]  X X . . . 
[DBG]  . . A . . 
[DBG]  . . A . A 
[DBG]  . A X . A 
[DBG]  content of the map structure that we pass to the SAT solver:
[DBG]  -1  -1  1  -1  1  
[DBG]  -1  -1  1  1  1  
[DBG]  1  1  1  1  1  
[DBG]  1  1  1  1  1  
[DBG]  1  1  -1  1  1  
[DBG]  Identifying agents in a submap for rescheduling (when key_agent is there at the time 20):
[DBG]  Agent 16 found intervals in the sub-map:
[DBG]   [14..20]
[DBG]  Agent 16 (interval in submap: [14..20]) contains time 20, added to replan.
[DBG]  Agent 34 found intervals in the sub-map:
[DBG]   [16..24]
[DBG]  Agent 34 (interval in submap: [16..24]) contains time 20, added to replan.
[DBG]  Agent 43 found intervals in the sub-map:
[DBG]   [16..23]
[DBG]  Agent 43 (interval in submap: [16..23]) contains time 20, added to replan.
[DBG]  Agent 44 found intervals in the sub-map:
[DBG]   [13..20]
[DBG]  Agent 44 (interval in submap: [13..20]) contains time 20, added to replan.
[DBG]  Agent 88 found intervals in the sub-map:
[DBG]   [19..22]
[DBG]  Agent 88 (interval in submap: [19..22]) contains time 20, added to replan.
[DBG]  Agent 115 found intervals in the sub-map:
[DBG]  
[DBG]  Agent 115 is not in sub-map at time 20 (intervals: 
[DBG]  )
[DBG]  Agent 147 found intervals in the sub-map:
[DBG]   [21..26]
[DBG]  Agent 147 is not in sub-map at time 20 (intervals: 
[DBG]  [21..26] )
[DBG]  Agent 149 found intervals in the sub-map:
[DBG]  
[DBG]  Agent 149 is not in sub-map at time 20 (intervals: 
[DBG]  )
[DBG]  Agent 16 | Start (global): 274 -> (local): (4, 4) at time 20 | Goal (global): 274 -> (local): (4, 4) at time 20
[DBG]  Agent 34 | Start (global): 208 -> (local): (2, 2) at time 20 | Goal (global): 270 -> (local): (4, 0) at time 24
[DBG]  Agent 43 | Start (global): 240 -> (local): (3, 2) at time 20 | Goal (global): 270 -> (local): (4, 0) at time 23
[DBG]  Agent 44 | Start (global): 271 -> (local): (4, 1) at time 20 | Goal (global): 271 -> (local): (4, 1) at time 20
[DBG]  Agent 88 | Start (global): 242 -> (local): (3, 4) at time 20 | Goal (global): 209 -> (local): (2, 3) at time 22
[DBG]  [REPAIR] SAT destroy operator called.
[DBG]  [REPAIR] SAT operator â€“ launching subproblem FOR OPTIMIZATION.
[DBG]  Creating local paths (sx, sy) in the submap for T_sync = 20
[DBG]    Agent 16 (global paths from T=20 to 20) has local path: (4,4) 
[DBG]    Agent 34 (global paths from T=20 to 24) has local path: (2,2) (3,2) (3,1) (4,1) (4,0) 
[DBG]    Agent 43 (global paths from T=20 to 23) has local path: (3,2) (3,1) (4,1) (4,0) 
[DBG]    Agent 44 (global paths from T=20 to 20) has local path: (4,1) 
[DBG]    Agent 88 (global paths from T=20 to 22) has local path: (3,4) (2,4) (2,3) 
[DBG]  Checking input data for SAT solver:
[DBG]    - Number of agents to replan: 5
[DBG]  Agent 16 has the original local path length: 1 => Start (4,4), Goal (4,4)
[DBG]  Agent 34 has the original local path length: 5 => Start (2,2), Goal (4,0)
[DBG]  Agent 43 has the original local path length: 4 => Start (3,2), Goal (4,0)
[DBG]  Agent 44 has the original local path length: 1 => Start (4,1), Goal (4,1)
[DBG]  Agent 88 has the original local path length: 3 => Start (3,4), Goal (2,3)
[DBG]  Start position: (4, 4), (2, 2), (3, 2), (4, 1), (3, 4), 
[DBG]  Goal position: (4, 4), (4, 0), (4, 0), (4, 1), (2, 3), 
[DBG]  SAT instance and solver created.
Currently solving
Instance name: scen
Map name: map
Encoding used: disappear_at_goal
SAT solver used: Kissat
Optimizing function: sum of costs
Number of agents: 5
Mks LB: 5
SoC LB: 14
Delta: 0
Remaining time: 300000 [ms]

Vertex conflict! Agents 0, 2, timestep 4, location 0
Vertex conflict! Agents 0, 3, timestep 1, location 0
Swapping conflict! Agents 0, 3, timestep 1, edge (0,0)
Vertex conflict! Agents 0, 3, timestep 2, location 0
Swapping conflict! Agents 0, 3, timestep 2, edge (0,0)
Vertex conflict! Agents 0, 3, timestep 3, location 0
Swapping conflict! Agents 0, 3, timestep 3, edge (0,0)
Vertex conflict! Agents 0, 3, timestep 4, location 0
Vertex conflict! Agents 0, 4, timestep 3, location 0
Swapping conflict! Agents 0, 4, timestep 3, edge (0,0)
Vertex conflict! Agents 0, 4, timestep 4, location 0
Vertex conflict! Agents 2, 3, timestep 4, location 0
Vertex conflict! Agents 2, 4, timestep 4, location 0
Vertex conflict! Agents 3, 4, timestep 3, location 0
Swapping conflict! Agents 3, 4, timestep 3, edge (0,0)
Vertex conflict! Agents 3, 4, timestep 4, location 0
Found plan [agents = 5] [timesteps = 5]
Agent #0 : 18 0 0 0 0 
Agent #1 : 7 12 11 16 15 
Agent #2 : 12 11 16 15 0 
Agent #3 : 16 0 0 0 0 
Agent #4 : 14 13 8 0 0 

[STAT] Solver returned: 0
[DBG]  Agent (index) 16 | New local path (submap idx):
[DBG]  18 
[DBG]  Agent (index) 34 | New local path (submap idx):
[DBG]  7 12 11 16 15 
[DBG]  Agent (index) 43 | New local path (submap idx):
[DBG]  12 11 16 15 
[DBG]  Agent (index) 44 | New local path (submap idx):
[DBG]  16 
[DBG]  Agent (index) 88 | New local path (submap idx):
[DBG]  14 13 8 
[DBG]  Update the agent path 16 | Original local length: 1 | New local length: 1
[DBG]  agent 16 t=0 => decoded (sx,sy)=(4,4) => global_id=274
[DBG]  Complete path of agent 16:
[DBG]    Original: 454 455 423 391 359 360 328 329 330 298 299 300 301 269 270 271 239 240 241 273 274 
[DBG]    New:     454 455 423 391 359 360 328 329 330 298 299 300 301 269 270 271 239 240 241 273 274 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 454 455 423 391 359 360 328 329 330 298 299 300 301 269 270 271 239 240 241 273 
[DBG]    Local path (in submap): 274 
[DBG]    Suffix (out of submap): 
[DBG]  Original agent path length 16 je: 21
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 0: 454, 455, 423, 391, 359, 360, 328, 329, 330, 298, 299, 300, 301, 269, 270, 271, 239, 240, 241, 273, 274, 
[DBG]  Path for agent 16 updated, resulting length: 21
[DBG]  Update the agent path 34 | Original local length: 5 | New local length: 5
[DBG]  agent 34 t=0 => decoded (sx,sy)=(2,2) => global_id=208
[DBG]  agent 34 t=1 => decoded (sx,sy)=(3,2) => global_id=240
[DBG]  agent 34 t=2 => decoded (sx,sy)=(3,1) => global_id=239
[DBG]  agent 34 t=3 => decoded (sx,sy)=(4,1) => global_id=271
[DBG]  agent 34 t=4 => decoded (sx,sy)=(4,0) => global_id=270
[DBG]  Complete path of agent 34:
[DBG]    Original: 63 62 61 60 59 58 90 89 121 120 119 118 117 116 115 147 146 178 177 176 208 240 239 271 270 269 301 
[DBG]    New:     63 62 61 60 59 58 90 89 121 120 119 118 117 116 115 147 146 178 177 176 208 240 239 271 270 269 301 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 63 62 61 60 59 58 90 89 121 120 119 118 117 116 115 147 146 178 177 176 
[DBG]    Local path (in submap): 208 240 239 271 270 
[DBG]    Suffix (out of submap): 269 301 
[DBG]  Original agent path length 34 je: 27
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 1: 63, 62, 61, 60, 59, 58, 90, 89, 121, 120, 119, 118, 117, 116, 115, 147, 146, 178, 177, 176, 208, 240, 239, 271, 270, 269, 301, 
[DBG]  Path for agent 34 updated, resulting length: 27
[DBG]  Update the agent path 43 | Original local length: 4 | New local length: 4
[DBG]  agent 43 t=0 => decoded (sx,sy)=(3,2) => global_id=240
[DBG]  agent 43 t=1 => decoded (sx,sy)=(3,1) => global_id=239
[DBG]  agent 43 t=2 => decoded (sx,sy)=(4,1) => global_id=271
[DBG]  agent 43 t=3 => decoded (sx,sy)=(4,0) => global_id=270
[DBG]  Complete path of agent 43:
[DBG]    Original: 414 413 381 380 379 378 377 376 375 343 311 310 309 277 276 275 274 242 242 241 240 239 271 270 269 268 267 266 298 330 329 328 360 359 391 423 455 454 486 485 517 549 581 613 645 677 709 741 740 739 707 
[DBG]    New:     414 413 381 380 379 378 377 376 375 343 311 310 309 277 276 275 274 242 242 241 240 239 271 270 269 268 267 266 298 330 329 328 360 359 391 423 455 454 486 485 517 549 581 613 645 677 709 741 740 739 707 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 414 413 381 380 379 378 377 376 375 343 311 310 309 277 276 275 274 242 242 241 
[DBG]    Local path (in submap): 240 239 271 270 
[DBG]    Suffix (out of submap): 269 268 267 266 298 330 329 328 360 359 391 423 455 454 486 485 517 549 581 613 645 677 709 741 740 739 707 
[DBG]  Original agent path length 43 je: 51
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 2: 414, 413, 381, 380, 379, 378, 377, 376, 375, 343, 311, 310, 309, 277, 276, 275, 274, 242, 242, 241, 240, 239, 271, 270, 269, 268, 267, 266, 298, 330, 329, 328, 360, 359, 391, 423, 455, 454, 486, 485, 517, 549, 581, 613, 645, 677, 709, 741, 740, 739, 707, 
[DBG]  Path for agent 43 updated, resulting length: 51
[DBG]  Update the agent path 44 | Original local length: 1 | New local length: 1
[DBG]  agent 44 t=0 => decoded (sx,sy)=(4,1) => global_id=271
[DBG]  Complete path of agent 44:
[DBG]    Original: 156 124 123 122 121 120 119 118 117 116 115 147 179 178 210 209 208 207 239 271 271 303 304 336 368 400 432 464 496 528 529 561 593 592 591 623 655 687 719 751 783 815 847 848 
[DBG]    New:     156 124 123 122 121 120 119 118 117 116 115 147 179 178 210 209 208 207 239 271 271 303 304 336 368 400 432 464 496 528 529 561 593 592 591 623 655 687 719 751 783 815 847 848 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 156 124 123 122 121 120 119 118 117 116 115 147 179 178 210 209 208 207 239 271 
[DBG]    Local path (in submap): 271 
[DBG]    Suffix (out of submap): 303 304 336 368 400 432 464 496 528 529 561 593 592 591 623 655 687 719 751 783 815 847 848 
[DBG]  Original agent path length 44 je: 44
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 3: 156, 124, 123, 122, 121, 120, 119, 118, 117, 116, 115, 147, 179, 178, 210, 209, 208, 207, 239, 271, 271, 303, 304, 336, 368, 400, 432, 464, 496, 528, 529, 561, 593, 592, 591, 623, 655, 687, 719, 751, 783, 815, 847, 848, 
[DBG]  Path for agent 44 updated, resulting length: 44
[DBG]  Update the agent path 88 | Original local length: 3 | New local length: 3
[DBG]  agent 88 t=0 => decoded (sx,sy)=(3,4) => global_id=242
[DBG]  agent 88 t=1 => decoded (sx,sy)=(3,3) => global_id=241
[DBG]  agent 88 t=2 => decoded (sx,sy)=(2,3) => global_id=209
[DBG]  Complete path of agent 88:
[DBG]    Original: 783 751 719 687 655 623 591 592 560 528 496 464 465 433 401 369 337 338 306 274 242 210 209 
[DBG]    New:     783 751 719 687 655 623 591 592 560 528 496 464 465 433 401 369 337 338 306 274 242 241 209 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 783 751 719 687 655 623 591 592 560 528 496 464 465 433 401 369 337 338 306 274 
[DBG]    Local path (in submap): 242 241 209 
[DBG]    Suffix (out of submap): 
[DBG]  Original agent path length 88 je: 23
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 4: 783, 751, 719, 687, 655, 623, 591, 592, 560, 528, 496, 464, 465, 433, 401, 369, 337, 338, 306, 274, 242, 241, 209, 
[DBG]  Path for agent 88 updated, resulting length: 23
[DBG]  Paths successfully updated.
[DBG]  (LNS.cpp) New path for agent 16: 
[DBG]  454, 455, 423, 391, 359, 360, 328, 329, 330, 298, 299, 300, 301, 269, 270, 271, 239, 240, 241, 273, 274, 
[DBG]  (LNS.cpp) New path for agent 34: 
[DBG]  63, 62, 61, 60, 59, 58, 90, 89, 121, 120, 119, 118, 117, 116, 115, 147, 146, 178, 177, 176, 208, 240, 239, 271, 270, 269, 301, 
[DBG]  (LNS.cpp) New path for agent 43: 
[DBG]  414, 413, 381, 380, 379, 378, 377, 376, 375, 343, 311, 310, 309, 277, 276, 275, 274, 242, 242, 241, 240, 239, 271, 270, 269, 268, 267, 266, 298, 330, 329, 328, 360, 359, 391, 423, 455, 454, 486, 485, 517, 549, 581, 613, 645, 677, 709, 741, 740, 739, 707, 
[DBG]  (LNS.cpp) New path for agent 44: 
[DBG]  156, 124, 123, 122, 121, 120, 119, 118, 117, 116, 115, 147, 179, 178, 210, 209, 208, 207, 239, 271, 271, 303, 304, 336, 368, 400, 432, 464, 496, 528, 529, 561, 593, 592, 591, 623, 655, 687, 719, 751, 783, 815, 847, 848, 
[DBG]  (LNS.cpp) New path for agent 88: 
[DBG]  783, 751, 719, 687, 655, 623, 591, 592, 560, 528, 496, 464, 465, 433, 401, 369, 337, 338, 306, 274, 242, 241, 209, 
[DBG]  component_weights = {0.424698, 0.0563233, 0.0589001, 0.460078}
[DBG]  opSuccess value: 1
[STAT] neighbor.sum_of_costs before recomputation: 161
[STAT] neighbor.old_sum_of_costs before recomputation: 161
[STAT] sum_of_costs before recomputation: 4175
[DBG]  Validate solution immediately after SAT success.
[DBG]  No problems after SAT replan.
[DBG]  Recomputing sum_of_cost by dividing neighbor.sum_of_costs and neighbor.old_sum_of_costs
[STAT] sum_of_costs after recomputation: 4175
[STAT] Iteration 204
[DBG]  Using SAT operator (destroy+repair SAT).
[DBG]  ====================
[DBG]  SAT destroy operator called.
[DBG]  SAT heuristic: 2
[DBG]  key_agent_id: 147
[DBG]  key_agent_id global path length: 37
[DBG]  Submap content (global positions):
[DBG]  23 24 25 26 27 
[DBG]  55 56 57 58 59 
[DBG]  87 88 89 90 91 
[DBG]  119 120 121 122 123 
[DBG]  151 152 153 154 155 
[DBG]  Map content with agents and obstacles:
[DBG]  X . . . . 
[DBG]  . . X . . 
[DBG]  X X A . . 
[DBG]  . A A A . 
[DBG]  . X . . X 
[DBG]  content of the map structure that we pass to the SAT solver:
[DBG]  -1  1  1  1  1  
[DBG]  1  1  -1  1  1  
[DBG]  -1  -1  1  1  1  
[DBG]  1  1  1  1  1  
[DBG]  1  -1  1  1  -1  
[DBG]  Identifying agents in a submap for rescheduling (when key_agent is there at the time 9):
[DBG]  Agent 34 found intervals in the sub-map:
[DBG]   [4..10]
[DBG]  Agent 34 (interval in submap: [4..10]) contains time 9, added to replan.
[DBG]  Agent 48 found intervals in the sub-map:
[DBG]   [6..12]
[DBG]  Agent 48 (interval in submap: [6..12]) contains time 9, added to replan.
[DBG]  Agent 52 found intervals in the sub-map:
[DBG]   [1..7]
[DBG]  Agent 52 is not in sub-map at time 9 (intervals: 
[DBG]  [1..7] )
[DBG]  Agent 139 found intervals in the sub-map:
[DBG]   [7..11]
[DBG]  Agent 139 (interval in submap: [7..11]) contains time 9, added to replan.
[DBG]  Agent 147 found intervals in the sub-map:
[DBG]   [6..11]
[DBG]  Agent 147 (interval in submap: [6..11]) contains time 9, added to replan.
[DBG]  Agent 34 | Start (global): 120 -> (local): (3, 1) at time 9 | Goal (global): 119 -> (local): (3, 0) at time 10
[DBG]  Agent 48 | Start (global): 122 -> (local): (3, 3) at time 9 | Goal (global): 59 -> (local): (1, 4) at time 12
[DBG]  Agent 139 | Start (global): 121 -> (local): (3, 2) at time 9 | Goal (global): 119 -> (local): (3, 0) at time 11
[DBG]  Agent 147 | Start (global): 89 -> (local): (2, 2) at time 9 | Goal (global): 153 -> (local): (4, 2) at time 11
[DBG]  [REPAIR] SAT destroy operator called.
[DBG]  [REPAIR] SAT operator â€“ launching subproblem FOR OPTIMIZATION.
[DBG]  Creating local paths (sx, sy) in the submap for T_sync = 9
[DBG]    Agent 34 (global paths from T=9 to 10) has local path: (3,1) (3,0) 
[DBG]    Agent 48 (global paths from T=9 to 12) has local path: (3,3) (2,3) (2,4) (1,4) 
[DBG]    Agent 139 (global paths from T=9 to 11) has local path: (3,2) (3,1) (3,0) 
[DBG]    Agent 147 (global paths from T=9 to 11) has local path: (2,2) (3,2) (4,2) 
[DBG]  Checking input data for SAT solver:
[DBG]    - Number of agents to replan: 4
[DBG]  Agent 34 has the original local path length: 2 => Start (3,1), Goal (3,0)
[DBG]  Agent 48 has the original local path length: 4 => Start (3,3), Goal (1,4)
[DBG]  Agent 139 has the original local path length: 3 => Start (3,2), Goal (3,0)
[DBG]  Agent 147 has the original local path length: 3 => Start (2,2), Goal (4,2)
[DBG]  Start position: (3, 1), (3, 3), (3, 2), (2, 2), 
[DBG]  Goal position: (3, 0), (1, 4), (3, 0), (4, 2), 
[DBG]  SAT instance and solver created.
Currently solving
Instance name: scen
Map name: map
Encoding used: disappear_at_goal
SAT solver used: Kissat
Optimizing function: sum of costs
Number of agents: 4
Mks LB: 4
SoC LB: 12
Delta: 0
Remaining time: 300000 [ms]

Vertex conflict! Agents 0, 2, timestep 3, location 0
Vertex conflict! Agents 0, 3, timestep 3, location 0
Vertex conflict! Agents 2, 3, timestep 3, location 0
Found plan [agents = 4] [timesteps = 4]
Agent #0 : 12 11 0 0 
Agent #1 : 14 15 10 7 
Agent #2 : 13 12 11 0 
Agent #3 : 8 13 17 0 

[STAT] Solver returned: 0
[DBG]  Agent (index) 34 | New local path (submap idx):
[DBG]  12 11 
[DBG]  Agent (index) 48 | New local path (submap idx):
[DBG]  14 15 10 7 
[DBG]  Agent (index) 139 | New local path (submap idx):
[DBG]  13 12 11 
[DBG]  Agent (index) 147 | New local path (submap idx):
[DBG]  8 13 17 
[DBG]  Update the agent path 34 | Original local length: 2 | New local length: 2
[DBG]  agent 34 t=0 => decoded (sx,sy)=(3,1) => global_id=120
[DBG]  agent 34 t=1 => decoded (sx,sy)=(3,0) => global_id=119
[DBG]  Complete path of agent 34:
[DBG]    Original: 63 62 61 60 59 58 90 89 121 120 119 118 117 116 115 147 146 178 177 176 208 240 239 271 270 269 301 
[DBG]    New:     63 62 61 60 59 58 90 89 121 120 119 118 117 116 115 147 146 178 177 176 208 240 239 271 270 269 301 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 63 62 61 60 59 58 90 89 121 
[DBG]    Local path (in submap): 120 119 
[DBG]    Suffix (out of submap): 118 117 116 115 147 146 178 177 176 208 240 239 271 270 269 301 
[DBG]  Original agent path length 34 je: 27
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 0: 63, 62, 61, 60, 59, 58, 90, 89, 121, 120, 119, 118, 117, 116, 115, 147, 146, 178, 177, 176, 208, 240, 239, 271, 270, 269, 301, 
[DBG]  Path for agent 34 updated, resulting length: 27
[DBG]  Update the agent path 48 | Original local length: 4 | New local length: 4
[DBG]  agent 48 t=0 => decoded (sx,sy)=(3,3) => global_id=122
[DBG]  agent 48 t=1 => decoded (sx,sy)=(3,4) => global_id=123
[DBG]  agent 48 t=2 => decoded (sx,sy)=(2,4) => global_id=91
[DBG]  agent 48 t=3 => decoded (sx,sy)=(1,4) => global_id=59
[DBG]  Complete path of agent 48:
[DBG]    Original: 247 248 216 184 185 186 154 154 154 122 90 91 59 60 61 93 94 
[DBG]    New:     247 248 216 184 185 186 154 154 154 122 123 91 59 60 61 93 94 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 247 248 216 184 185 186 154 154 154 
[DBG]    Local path (in submap): 122 123 91 59 
[DBG]    Suffix (out of submap): 60 61 93 94 
[DBG]  Original agent path length 48 je: 17
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 1: 247, 248, 216, 184, 185, 186, 154, 154, 154, 122, 123, 91, 59, 60, 61, 93, 94, 
[DBG]  Path for agent 48 updated, resulting length: 17
[DBG]  Update the agent path 139 | Original local length: 3 | New local length: 3
[DBG]  agent 139 t=0 => decoded (sx,sy)=(3,2) => global_id=121
[DBG]  agent 139 t=1 => decoded (sx,sy)=(3,1) => global_id=120
[DBG]  agent 139 t=2 => decoded (sx,sy)=(3,0) => global_id=119
[DBG]  Complete path of agent 139:
[DBG]    Original: 285 284 252 220 188 156 124 123 122 121 120 119 118 86 85 84 83 82 50 49 48 47 46 45 13 12 11 43 42 41 40 8 7 6 5 4 3 
[DBG]    New:     285 284 252 220 188 156 124 123 122 121 120 119 118 86 85 84 83 82 50 49 48 47 46 45 13 12 11 43 42 41 40 8 7 6 5 4 3 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 285 284 252 220 188 156 124 123 122 
[DBG]    Local path (in submap): 121 120 119 
[DBG]    Suffix (out of submap): 118 86 85 84 83 82 50 49 48 47 46 45 13 12 11 43 42 41 40 8 7 6 5 4 3 
[DBG]  Original agent path length 139 je: 37
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 2: 285, 284, 252, 220, 188, 156, 124, 123, 122, 121, 120, 119, 118, 86, 85, 84, 83, 82, 50, 49, 48, 47, 46, 45, 13, 12, 11, 43, 42, 41, 40, 8, 7, 6, 5, 4, 3, 
[DBG]  Path for agent 139 updated, resulting length: 37
[DBG]  Update the agent path 147 | Original local length: 3 | New local length: 3
[DBG]  agent 147 t=0 => decoded (sx,sy)=(2,2) => global_id=89
[DBG]  agent 147 t=1 => decoded (sx,sy)=(3,2) => global_id=121
[DBG]  agent 147 t=2 => decoded (sx,sy)=(4,2) => global_id=153
[DBG]  Complete path of agent 147:
[DBG]    Original: 284 252 220 188 156 124 123 122 90 89 121 153 185 217 216 215 214 213 212 244 243 242 241 240 239 271 270 269 268 267 266 265 264 296 295 294 326 
[DBG]    New:     284 252 220 188 156 124 123 122 90 89 121 153 185 217 216 215 214 213 212 244 243 242 241 240 239 271 270 269 268 267 266 265 264 296 295 294 326 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 284 252 220 188 156 124 123 122 90 
[DBG]    Local path (in submap): 89 121 153 
[DBG]    Suffix (out of submap): 185 217 216 215 214 213 212 244 243 242 241 240 239 271 270 269 268 267 266 265 264 296 295 294 326 
[DBG]  Original agent path length 147 je: 37
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 3: 284, 252, 220, 188, 156, 124, 123, 122, 90, 89, 121, 153, 185, 217, 216, 215, 214, 213, 212, 244, 243, 242, 241, 240, 239, 271, 270, 269, 268, 267, 266, 265, 264, 296, 295, 294, 326, 
[DBG]  Path for agent 147 updated, resulting length: 37
[DBG]  Paths successfully updated.
[DBG]  (LNS.cpp) New path for agent 34: 
[DBG]  63, 62, 61, 60, 59, 58, 90, 89, 121, 120, 119, 118, 117, 116, 115, 147, 146, 178, 177, 176, 208, 240, 239, 271, 270, 269, 301, 
[DBG]  (LNS.cpp) New path for agent 48: 
[DBG]  247, 248, 216, 184, 185, 186, 154, 154, 154, 122, 123, 91, 59, 60, 61, 93, 94, 
[DBG]  (LNS.cpp) New path for agent 139: 
[DBG]  285, 284, 252, 220, 188, 156, 124, 123, 122, 121, 120, 119, 118, 86, 85, 84, 83, 82, 50, 49, 48, 47, 46, 45, 13, 12, 11, 43, 42, 41, 40, 8, 7, 6, 5, 4, 3, 
[DBG]  (LNS.cpp) New path for agent 147: 
[DBG]  284, 252, 220, 188, 156, 124, 123, 122, 90, 89, 121, 153, 185, 217, 216, 215, 214, 213, 212, 244, 243, 242, 241, 240, 239, 271, 270, 269, 268, 267, 266, 265, 264, 296, 295, 294, 326, 
[DBG]  component_weights = {0.429642, 0.0558393, 0.0583939, 0.456125}
[DBG]  opSuccess value: 1
[STAT] neighbor.sum_of_costs before recomputation: 114
[STAT] neighbor.old_sum_of_costs before recomputation: 114
[STAT] sum_of_costs before recomputation: 4175
[DBG]  Validate solution immediately after SAT success.
[DBG]  No problems after SAT replan.
[DBG]  Recomputing sum_of_cost by dividing neighbor.sum_of_costs and neighbor.old_sum_of_costs
[STAT] sum_of_costs after recomputation: 4175
[STAT] Iteration 205
[DBG]  Using SAT operator (destroy+repair SAT).
[DBG]  ====================
[DBG]  SAT destroy operator called.
[DBG]  SAT heuristic: 2
[DBG]  key_agent_id: 126
[DBG]  key_agent_id global path length: 19
[DBG]  Submap content (global positions):
[DBG]  14 15 16 17 18 
[DBG]  46 47 48 49 50 
[DBG]  78 79 80 81 82 
[DBG]  110 111 112 113 114 
[DBG]  142 143 144 145 146 
[DBG]  Map content with agents and obstacles:
[DBG]  . . . X . 
[DBG]  A A . . . 
[DBG]  X . A A . 
[DBG]  . A . . X 
[DBG]  X X . X . 
[DBG]  content of the map structure that we pass to the SAT solver:
[DBG]  1  1  1  -1  1  
[DBG]  1  1  1  1  1  
[DBG]  -1  1  1  1  1  
[DBG]  1  1  1  1  -1  
[DBG]  -1  -1  1  -1  1  
[DBG]  Identifying agents in a submap for rescheduling (when key_agent is there at the time 3):
[DBG]  Agent 26 found intervals in the sub-map:
[DBG]  
[DBG]  Agent 26 is not in sub-map at time 3 (intervals: 
[DBG]  )
[DBG]  Agent 72 found intervals in the sub-map:
[DBG]   [0..4]
[DBG]  Agent 72 (interval in submap: [0..4]) contains time 3, added to replan.
[DBG]  Agent 83 found intervals in the sub-map:
[DBG]   [0..6]
[DBG]  Agent 83 (interval in submap: [0..6]) contains time 3, added to replan.
[DBG]  Agent 107 found intervals in the sub-map:
[DBG]   [0..3]
[DBG]  Agent 107 (interval in submap: [0..3]) contains time 3, added to replan.
[DBG]  Agent 126 found intervals in the sub-map:
[DBG]   [0..5]
[DBG]  Agent 126 (interval in submap: [0..5]) contains time 3, added to replan.
[DBG]  Agent 141 found intervals in the sub-map:
[DBG]   [0..4]
[DBG]  Agent 141 (interval in submap: [0..4]) contains time 3, added to replan.
[DBG]  Agent 72 | Start (global): 111 -> (local): (3, 1) at time 3 | Goal (global): 110 -> (local): (3, 0) at time 4
[DBG]  Agent 83 | Start (global): 81 -> (local): (2, 3) at time 3 | Goal (global): 144 -> (local): (4, 2) at time 6
[DBG]  Agent 107 | Start (global): 46 -> (local): (1, 0) at time 3 | Goal (global): 46 -> (local): (1, 0) at time 3
[DBG]  Agent 126 | Start (global): 80 -> (local): (2, 2) at time 3 | Goal (global): 82 -> (local): (2, 4) at time 5
[DBG]  Agent 141 | Start (global): 47 -> (local): (1, 1) at time 3 | Goal (global): 46 -> (local): (1, 0) at time 4
[DBG]  [REPAIR] SAT destroy operator called.
[DBG]  [REPAIR] SAT operator â€“ launching subproblem FOR OPTIMIZATION.
[DBG]  Creating local paths (sx, sy) in the submap for T_sync = 3
[DBG]    Agent 72 (global paths from T=3 to 4) has local path: (3,1) (3,0) 
[DBG]    Agent 83 (global paths from T=3 to 6) has local path: (2,3) (3,3) (3,2) (4,2) 
[DBG]    Agent 107 (global paths from T=3 to 3) has local path: (1,0) 
[DBG]    Agent 126 (global paths from T=3 to 5) has local path: (2,2) (2,3) (2,4) 
[DBG]    Agent 141 (global paths from T=3 to 4) has local path: (1,1) (1,0) 
[DBG]  Checking input data for SAT solver:
[DBG]    - Number of agents to replan: 5
[DBG]  Agent 72 has the original local path length: 2 => Start (3,1), Goal (3,0)
[DBG]  Agent 83 has the original local path length: 4 => Start (2,3), Goal (4,2)
[DBG]  Agent 107 has the original local path length: 1 => Start (1,0), Goal (1,0)
[DBG]  Agent 126 has the original local path length: 3 => Start (2,2), Goal (2,4)
[DBG]  Agent 141 has the original local path length: 2 => Start (1,1), Goal (1,0)
[DBG]  Start position: (3, 1), (2, 3), (1, 0), (2, 2), (1, 1), 
[DBG]  Goal position: (3, 0), (4, 2), (1, 0), (2, 4), (1, 0), 
[DBG]  SAT instance and solver created.
Currently solving
Instance name: scen
Map name: map
Encoding used: disappear_at_goal
SAT solver used: Kissat
Optimizing function: sum of costs
Number of agents: 5
Mks LB: 4
SoC LB: 12
Delta: 0
Remaining time: 300000 [ms]

Vertex conflict! Agents 0, 2, timestep 2, location 0
Swapping conflict! Agents 0, 2, timestep 2, edge (0,0)
Vertex conflict! Agents 0, 2, timestep 3, location 0
Vertex conflict! Agents 0, 3, timestep 3, location 0
Vertex conflict! Agents 0, 4, timestep 2, location 0
Swapping conflict! Agents 0, 4, timestep 2, edge (0,0)
Vertex conflict! Agents 0, 4, timestep 3, location 0
Vertex conflict! Agents 2, 3, timestep 3, location 0
Vertex conflict! Agents 2, 4, timestep 2, location 0
Swapping conflict! Agents 2, 4, timestep 2, edge (0,0)
Vertex conflict! Agents 2, 4, timestep 3, location 0
Vertex conflict! Agents 3, 4, timestep 3, location 0
Found plan [agents = 5] [timesteps = 4]
Agent #0 : 14 13 0 0 
Agent #1 : 11 16 15 17 
Agent #2 : 4 0 0 0 
Agent #3 : 10 11 12 0 
Agent #4 : 5 4 0 0 

[STAT] Solver returned: 0
[DBG]  Agent (index) 72 | New local path (submap idx):
[DBG]  14 13 
[DBG]  Agent (index) 83 | New local path (submap idx):
[DBG]  11 16 15 17 
[DBG]  Agent (index) 107 | New local path (submap idx):
[DBG]  4 
[DBG]  Agent (index) 126 | New local path (submap idx):
[DBG]  10 11 12 
[DBG]  Agent (index) 141 | New local path (submap idx):
[DBG]  5 4 
[DBG]  Update the agent path 72 | Original local length: 2 | New local length: 2
[DBG]  agent 72 t=0 => decoded (sx,sy)=(3,1) => global_id=111
[DBG]  agent 72 t=1 => decoded (sx,sy)=(3,0) => global_id=110
[DBG]  Complete path of agent 72:
[DBG]    Original: 81 113 112 111 110 109 108 76 75 74 73 72 71 70 69 68 67 
[DBG]    New:     81 113 112 111 110 109 108 76 75 74 73 72 71 70 69 68 67 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 81 113 112 
[DBG]    Local path (in submap): 111 110 
[DBG]    Suffix (out of submap): 109 108 76 75 74 73 72 71 70 69 68 67 
[DBG]  Original agent path length 72 je: 17
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 0: 81, 113, 112, 111, 110, 109, 108, 76, 75, 74, 73, 72, 71, 70, 69, 68, 67, 
[DBG]  Path for agent 72 updated, resulting length: 17
[DBG]  Update the agent path 83 | Original local length: 4 | New local length: 4
[DBG]  agent 83 t=0 => decoded (sx,sy)=(2,3) => global_id=81
[DBG]  agent 83 t=1 => decoded (sx,sy)=(3,3) => global_id=113
[DBG]  agent 83 t=2 => decoded (sx,sy)=(3,2) => global_id=112
[DBG]  agent 83 t=3 => decoded (sx,sy)=(4,2) => global_id=144
[DBG]  Complete path of agent 83:
[DBG]    Original: 18 50 49 81 113 112 144 176 208 207 239 271 303 335 367 366 398 430 462 494 526 558 590 622 623 655 687 719 751 752 784 783 815 847 879 880 912 944 976 1008 1009 
[DBG]    New:     18 50 49 81 113 112 144 176 208 207 239 271 303 335 367 366 398 430 462 494 526 558 590 622 623 655 687 719 751 752 784 783 815 847 879 880 912 944 976 1008 1009 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 18 50 49 
[DBG]    Local path (in submap): 81 113 112 144 
[DBG]    Suffix (out of submap): 176 208 207 239 271 303 335 367 366 398 430 462 494 526 558 590 622 623 655 687 719 751 752 784 783 815 847 879 880 912 944 976 1008 1009 
[DBG]  Original agent path length 83 je: 41
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 1: 18, 50, 49, 81, 113, 112, 144, 176, 208, 207, 239, 271, 303, 335, 367, 366, 398, 430, 462, 494, 526, 558, 590, 622, 623, 655, 687, 719, 751, 752, 784, 783, 815, 847, 879, 880, 912, 944, 976, 1008, 1009, 
[DBG]  Path for agent 83 updated, resulting length: 41
[DBG]  Update the agent path 107 | Original local length: 1 | New local length: 1
[DBG]  agent 107 t=0 => decoded (sx,sy)=(1,0) => global_id=46
[DBG]  Complete path of agent 107:
[DBG]    Original: 16 15 14 46 45 77 109 141 140 172 204 236 235 234 233 265 297 329 328 360 359 358 390 422 454 486 485 517 549 581 613 645 677 709 741 740 772 804 836 
[DBG]    New:     16 15 14 46 45 77 109 141 140 172 204 236 235 234 233 265 297 329 328 360 359 358 390 422 454 486 485 517 549 581 613 645 677 709 741 740 772 804 836 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 16 15 14 
[DBG]    Local path (in submap): 46 
[DBG]    Suffix (out of submap): 45 77 109 141 140 172 204 236 235 234 233 265 297 329 328 360 359 358 390 422 454 486 485 517 549 581 613 645 677 709 741 740 772 804 836 
[DBG]  Original agent path length 107 je: 39
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 2: 16, 15, 14, 46, 45, 77, 109, 141, 140, 172, 204, 236, 235, 234, 233, 265, 297, 329, 328, 360, 359, 358, 390, 422, 454, 486, 485, 517, 549, 581, 613, 645, 677, 709, 741, 740, 772, 804, 836, 
[DBG]  Path for agent 107 updated, resulting length: 39
[DBG]  Update the agent path 126 | Original local length: 3 | New local length: 3
[DBG]  agent 126 t=0 => decoded (sx,sy)=(2,2) => global_id=80
[DBG]  agent 126 t=1 => decoded (sx,sy)=(2,3) => global_id=81
[DBG]  agent 126 t=2 => decoded (sx,sy)=(2,4) => global_id=82
[DBG]  Complete path of agent 126:
[DBG]    Original: 15 47 79 80 81 82 83 84 85 86 54 55 56 24 25 26 27 28 29 
[DBG]    New:     15 47 79 80 81 82 83 84 85 86 54 55 56 24 25 26 27 28 29 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 15 47 79 
[DBG]    Local path (in submap): 80 81 82 
[DBG]    Suffix (out of submap): 83 84 85 86 54 55 56 24 25 26 27 28 29 
[DBG]  Original agent path length 126 je: 19
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 3: 15, 47, 79, 80, 81, 82, 83, 84, 85, 86, 54, 55, 56, 24, 25, 26, 27, 28, 29, 
[DBG]  Path for agent 126 updated, resulting length: 19
[DBG]  Update the agent path 141 | Original local length: 2 | New local length: 2
[DBG]  agent 141 t=0 => decoded (sx,sy)=(1,1) => global_id=47
[DBG]  agent 141 t=1 => decoded (sx,sy)=(1,0) => global_id=46
[DBG]  Complete path of agent 141:
[DBG]    Original: 46 46 47 47 46 45 13 13 13 13 13 45 44 
[DBG]    New:     46 46 47 47 46 45 13 13 13 13 13 45 44 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 46 46 47 
[DBG]    Local path (in submap): 47 46 
[DBG]    Suffix (out of submap): 45 13 13 13 13 13 45 44 
[DBG]  Original agent path length 141 je: 13
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 4: 46, 46, 47, 47, 46, 45, 13, 13, 13, 13, 13, 45, 44, 
[DBG]  Path for agent 141 updated, resulting length: 13
[DBG]  Paths successfully updated.
[DBG]  (LNS.cpp) New path for agent 72: 
[DBG]  81, 113, 112, 111, 110, 109, 108, 76, 75, 74, 73, 72, 71, 70, 69, 68, 67, 
[DBG]  (LNS.cpp) New path for agent 83: 
[DBG]  18, 50, 49, 81, 113, 112, 144, 176, 208, 207, 239, 271, 303, 335, 367, 366, 398, 430, 462, 494, 526, 558, 590, 622, 623, 655, 687, 719, 751, 752, 784, 783, 815, 847, 879, 880, 912, 944, 976, 1008, 1009, 
[DBG]  (LNS.cpp) New path for agent 107: 
[DBG]  16, 15, 14, 46, 45, 77, 109, 141, 140, 172, 204, 236, 235, 234, 233, 265, 297, 329, 328, 360, 359, 358, 390, 422, 454, 486, 485, 517, 549, 581, 613, 645, 677, 709, 741, 740, 772, 804, 836, 
[DBG]  (LNS.cpp) New path for agent 126: 
[DBG]  15, 47, 79, 80, 81, 82, 83, 84, 85, 86, 54, 55, 56, 24, 25, 26, 27, 28, 29, 
[DBG]  (LNS.cpp) New path for agent 141: 
[DBG]  46, 46, 47, 47, 46, 45, 13, 13, 13, 13, 13, 45, 44, 
[DBG]  component_weights = {0.434599, 0.055354, 0.0578864, 0.45216}
[DBG]  opSuccess value: 1
[STAT] neighbor.sum_of_costs before recomputation: 124
[STAT] neighbor.old_sum_of_costs before recomputation: 124
[STAT] sum_of_costs before recomputation: 4175
[DBG]  Validate solution immediately after SAT success.
[DBG]  No problems after SAT replan.
[DBG]  Recomputing sum_of_cost by dividing neighbor.sum_of_costs and neighbor.old_sum_of_costs
[STAT] sum_of_costs after recomputation: 4175
[STAT] Iteration 206
[DBG]  Using SAT operator (destroy+repair SAT).
[DBG]  ====================
[DBG]  SAT destroy operator called.
[DBG]  SAT heuristic: 2
[DBG]  key_agent_id: 55
[DBG]  key_agent_id global path length: 40
[DBG]  Submap content (global positions):
[DBG]  495 496 497 498 499 
[DBG]  527 528 529 530 531 
[DBG]  559 560 561 562 563 
[DBG]  591 592 593 594 595 
[DBG]  623 624 625 626 627 
[DBG]  Map content with agents and obstacles:
[DBG]  X . X . . 
[DBG]  X . . . . 
[DBG]  X . A X . 
[DBG]  . . A . X 
[DBG]  . X A X A 
[DBG]  content of the map structure that we pass to the SAT solver:
[DBG]  -1  1  -1  1  1  
[DBG]  -1  1  1  1  1  
[DBG]  -1  1  1  -1  1  
[DBG]  1  1  1  1  -1  
[DBG]  1  -1  1  -1  1  
[DBG]  Identifying agents in a submap for rescheduling (when key_agent is there at the time 32):
[DBG]  Agent 28 found intervals in the sub-map:
[DBG]   [25..32]
[DBG]  Agent 28 (interval in submap: [25..32]) contains time 32, added to replan.
[DBG]  Agent 44 found intervals in the sub-map:
[DBG]   [28..35]
[DBG]  Agent 44 (interval in submap: [28..35]) contains time 32, added to replan.
[DBG]  Agent 45 found intervals in the sub-map:
[DBG]   [18..28]
[DBG]  Agent 45 is not in sub-map at time 32 (intervals: 
[DBG]  [18..28] )
[DBG]  Agent 49 found intervals in the sub-map:
[DBG]  
[DBG]  Agent 49 is not in sub-map at time 32 (intervals: 
[DBG]  )
[DBG]  Agent 55 found intervals in the sub-map:
[DBG]   [29..34]
[DBG]  Agent 55 (interval in submap: [29..34]) contains time 32, added to replan.
[DBG]  Agent 69 found intervals in the sub-map:
[DBG]   [27..32]
[DBG]  Agent 69 (interval in submap: [27..32]) contains time 32, added to replan.
[DBG]  Agent 28 | Start (global): 627 -> (local): (4, 4) at time 32 | Goal (global): 627 -> (local): (4, 4) at time 32
[DBG]  Agent 44 | Start (global): 593 -> (local): (3, 2) at time 32 | Goal (global): 623 -> (local): (4, 0) at time 35
[DBG]  Agent 55 | Start (global): 561 -> (local): (2, 2) at time 32 | Goal (global): 625 -> (local): (4, 2) at time 34
[DBG]  Agent 69 | Start (global): 625 -> (local): (4, 2) at time 32 | Goal (global): 625 -> (local): (4, 2) at time 32
[DBG]  [REPAIR] SAT destroy operator called.
[DBG]  [REPAIR] SAT operator â€“ launching subproblem FOR OPTIMIZATION.
[DBG]  Creating local paths (sx, sy) in the submap for T_sync = 32
[DBG]    Agent 28 (global paths from T=32 to 32) has local path: (4,4) 
[DBG]    Agent 44 (global paths from T=32 to 35) has local path: (3,2) (3,1) (3,0) (4,0) 
[DBG]    Agent 55 (global paths from T=32 to 34) has local path: (2,2) (3,2) (4,2) 
[DBG]    Agent 69 (global paths from T=32 to 32) has local path: (4,2) 
[DBG]  Checking input data for SAT solver:
[DBG]    - Number of agents to replan: 4
[DBG]  Agent 28 has the original local path length: 1 => Start (4,4), Goal (4,4)
[DBG]  Agent 44 has the original local path length: 4 => Start (3,2), Goal (4,0)
[DBG]  Agent 55 has the original local path length: 3 => Start (2,2), Goal (4,2)
[DBG]  Agent 69 has the original local path length: 1 => Start (4,2), Goal (4,2)
[DBG]  Start position: (4, 4), (3, 2), (2, 2), (4, 2), 
[DBG]  Goal position: (4, 4), (4, 0), (4, 2), (4, 2), 
[DBG]  SAT instance and solver created.
Currently solving
Instance name: scen
Map name: map
Encoding used: disappear_at_goal
SAT solver used: Kissat
Optimizing function: sum of costs
Number of agents: 4
Mks LB: 4
SoC LB: 9
Delta: 0
Remaining time: 300000 [ms]

Vertex conflict! Agents 0, 2, timestep 3, location 0
Vertex conflict! Agents 0, 3, timestep 1, location 0
Swapping conflict! Agents 0, 3, timestep 1, edge (0,0)
Vertex conflict! Agents 0, 3, timestep 2, location 0
Swapping conflict! Agents 0, 3, timestep 2, edge (0,0)
Vertex conflict! Agents 0, 3, timestep 3, location 0
Vertex conflict! Agents 2, 3, timestep 3, location 0
Found plan [agents = 4] [timesteps = 4]
Agent #0 : 16 0 0 0 
Agent #1 : 12 11 10 14 
Agent #2 : 8 12 15 0 
Agent #3 : 15 0 0 0 

[STAT] Solver returned: 0
[DBG]  Agent (index) 28 | New local path (submap idx):
[DBG]  16 
[DBG]  Agent (index) 44 | New local path (submap idx):
[DBG]  12 11 10 14 
[DBG]  Agent (index) 55 | New local path (submap idx):
[DBG]  8 12 15 
[DBG]  Agent (index) 69 | New local path (submap idx):
[DBG]  15 
[DBG]  Update the agent path 28 | Original local length: 1 | New local length: 1
[DBG]  agent 28 t=0 => decoded (sx,sy)=(4,4) => global_id=627
[DBG]  Complete path of agent 28:
[DBG]    Original: 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 629 628 627 627 627 627 627 627 627 627 659 691 692 724 725 726 727 
[DBG]    New:     661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 629 628 627 627 627 627 627 627 627 627 659 691 692 724 725 726 727 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 629 628 627 627 627 627 627 627 627 
[DBG]    Local path (in submap): 627 
[DBG]    Suffix (out of submap): 659 691 692 724 725 726 727 
[DBG]  Original agent path length 28 je: 40
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 0: 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 629, 628, 627, 627, 627, 627, 627, 627, 627, 627, 659, 691, 692, 724, 725, 726, 727, 
[DBG]  Path for agent 28 updated, resulting length: 40
[DBG]  Update the agent path 44 | Original local length: 4 | New local length: 4
[DBG]  agent 44 t=0 => decoded (sx,sy)=(3,2) => global_id=593
[DBG]  agent 44 t=1 => decoded (sx,sy)=(3,1) => global_id=592
[DBG]  agent 44 t=2 => decoded (sx,sy)=(3,0) => global_id=591
[DBG]  agent 44 t=3 => decoded (sx,sy)=(4,0) => global_id=623
[DBG]  Complete path of agent 44:
[DBG]    Original: 156 124 123 122 121 120 119 118 117 116 115 147 179 178 210 209 208 207 239 271 271 303 304 336 368 400 432 464 496 528 529 561 593 592 591 623 655 687 719 751 783 815 847 848 
[DBG]    New:     156 124 123 122 121 120 119 118 117 116 115 147 179 178 210 209 208 207 239 271 271 303 304 336 368 400 432 464 496 528 529 561 593 592 591 623 655 687 719 751 783 815 847 848 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 156 124 123 122 121 120 119 118 117 116 115 147 179 178 210 209 208 207 239 271 271 303 304 336 368 400 432 464 496 528 529 561 
[DBG]    Local path (in submap): 593 592 591 623 
[DBG]    Suffix (out of submap): 655 687 719 751 783 815 847 848 
[DBG]  Original agent path length 44 je: 44
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 1: 156, 124, 123, 122, 121, 120, 119, 118, 117, 116, 115, 147, 179, 178, 210, 209, 208, 207, 239, 271, 271, 303, 304, 336, 368, 400, 432, 464, 496, 528, 529, 561, 593, 592, 591, 623, 655, 687, 719, 751, 783, 815, 847, 848, 
[DBG]  Path for agent 44 updated, resulting length: 44
[DBG]  Update the agent path 55 | Original local length: 3 | New local length: 3
[DBG]  agent 55 t=0 => decoded (sx,sy)=(2,2) => global_id=561
[DBG]  agent 55 t=1 => decoded (sx,sy)=(3,2) => global_id=593
[DBG]  agent 55 t=2 => decoded (sx,sy)=(4,2) => global_id=625
[DBG]  Complete path of agent 55:
[DBG]    Original: 34 35 67 99 100 132 164 196 228 260 261 293 294 295 296 297 329 330 331 363 395 427 428 429 430 462 463 463 464 496 528 529 561 593 625 657 658 659 691 692 
[DBG]    New:     34 35 67 99 100 132 164 196 228 260 261 293 294 295 296 297 329 330 331 363 395 427 428 429 430 462 463 463 464 496 528 529 561 593 625 657 658 659 691 692 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 34 35 67 99 100 132 164 196 228 260 261 293 294 295 296 297 329 330 331 363 395 427 428 429 430 462 463 463 464 496 528 529 
[DBG]    Local path (in submap): 561 593 625 
[DBG]    Suffix (out of submap): 657 658 659 691 692 
[DBG]  Original agent path length 55 je: 40
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 2: 34, 35, 67, 99, 100, 132, 164, 196, 228, 260, 261, 293, 294, 295, 296, 297, 329, 330, 331, 363, 395, 427, 428, 429, 430, 462, 463, 463, 464, 496, 528, 529, 561, 593, 625, 657, 658, 659, 691, 692, 
[DBG]  Path for agent 55 updated, resulting length: 40
[DBG]  Update the agent path 69 | Original local length: 1 | New local length: 1
[DBG]  agent 69 t=0 => decoded (sx,sy)=(4,2) => global_id=625
[DBG]  Complete path of agent 69:
[DBG]    Original: 4 5 6 7 8 40 72 104 105 137 138 139 140 172 204 236 237 269 270 302 303 335 367 368 400 432 464 496 528 529 561 593 625 657 658 659 691 692 724 756 788 820 
[DBG]    New:     4 5 6 7 8 40 72 104 105 137 138 139 140 172 204 236 237 269 270 302 303 335 367 368 400 432 464 496 528 529 561 593 625 657 658 659 691 692 724 756 788 820 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 4 5 6 7 8 40 72 104 105 137 138 139 140 172 204 236 237 269 270 302 303 335 367 368 400 432 464 496 528 529 561 593 
[DBG]    Local path (in submap): 625 
[DBG]    Suffix (out of submap): 657 658 659 691 692 724 756 788 820 
[DBG]  Original agent path length 69 je: 42
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 3: 4, 5, 6, 7, 8, 40, 72, 104, 105, 137, 138, 139, 140, 172, 204, 236, 237, 269, 270, 302, 303, 335, 367, 368, 400, 432, 464, 496, 528, 529, 561, 593, 625, 657, 658, 659, 691, 692, 724, 756, 788, 820, 
[DBG]  Path for agent 69 updated, resulting length: 42
[DBG]  Paths successfully updated.
[DBG]  (LNS.cpp) New path for agent 28: 
[DBG]  661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 629, 628, 627, 627, 627, 627, 627, 627, 627, 627, 659, 691, 692, 724, 725, 726, 727, 
[DBG]  (LNS.cpp) New path for agent 44: 
[DBG]  156, 124, 123, 122, 121, 120, 119, 118, 117, 116, 115, 147, 179, 178, 210, 209, 208, 207, 239, 271, 271, 303, 304, 336, 368, 400, 432, 464, 496, 528, 529, 561, 593, 592, 591, 623, 655, 687, 719, 751, 783, 815, 847, 848, 
[DBG]  (LNS.cpp) New path for agent 55: 
[DBG]  34, 35, 67, 99, 100, 132, 164, 196, 228, 260, 261, 293, 294, 295, 296, 297, 329, 330, 331, 363, 395, 427, 428, 429, 430, 462, 463, 463, 464, 496, 528, 529, 561, 593, 625, 657, 658, 659, 691, 692, 
[DBG]  (LNS.cpp) New path for agent 69: 
[DBG]  4, 5, 6, 7, 8, 40, 72, 104, 105, 137, 138, 139, 140, 172, 204, 236, 237, 269, 270, 302, 303, 335, 367, 368, 400, 432, 464, 496, 528, 529, 561, 593, 625, 657, 658, 659, 691, 692, 724, 756, 788, 820, 
[DBG]  component_weights = {0.43957, 0.0548673, 0.0573775, 0.448185}
[DBG]  opSuccess value: 1
[STAT] neighbor.sum_of_costs before recomputation: 162
[STAT] neighbor.old_sum_of_costs before recomputation: 162
[STAT] sum_of_costs before recomputation: 4175
[DBG]  Validate solution immediately after SAT success.
[DBG]  No problems after SAT replan.
[DBG]  Recomputing sum_of_cost by dividing neighbor.sum_of_costs and neighbor.old_sum_of_costs
[STAT] sum_of_costs after recomputation: 4175
[STAT] Iteration 207
[DBG]  Using SAT operator (destroy+repair SAT).
[DBG]  ====================
[DBG]  SAT destroy operator called.
[DBG]  SAT heuristic: 2
[DBG]  key_agent_id: 63
[DBG]  key_agent_id global path length: 21
[DBG]  Submap content (global positions):
[DBG]  334 335 336 337 338 
[DBG]  366 367 368 369 370 
[DBG]  398 399 400 401 402 
[DBG]  430 431 432 433 434 
[DBG]  462 463 464 465 466 
[DBG]  Map content with agents and obstacles:
[DBG]  X . . . . 
[DBG]  . . A . X 
[DBG]  A X A . . 
[DBG]  A . A . X 
[DBG]  . . . . . 
[DBG]  content of the map structure that we pass to the SAT solver:
[DBG]  -1  1  1  1  1  
[DBG]  1  1  1  1  -1  
[DBG]  1  -1  1  1  1  
[DBG]  1  1  1  1  -1  
[DBG]  1  1  1  1  1  
[DBG]  Identifying agents in a submap for rescheduling (when key_agent is there at the time 10):
[DBG]  Agent 8 found intervals in the sub-map:
[DBG]   [8..16]
[DBG]  Agent 8 (interval in submap: [8..16]) contains time 10, added to replan.
[DBG]  Agent 20 found intervals in the sub-map:
[DBG]   [6..11]
[DBG]  Agent 20 (interval in submap: [6..11]) contains time 10, added to replan.
[DBG]  Agent 33 found intervals in the sub-map:
[DBG]   [8..13]
[DBG]  Agent 33 (interval in submap: [8..13]) contains time 10, added to replan.
[DBG]  Agent 63 found intervals in the sub-map:
[DBG]   [8..16]
[DBG]  Agent 63 (interval in submap: [8..16]) contains time 10, added to replan.
[DBG]  Agent 106 found intervals in the sub-map:
[DBG]  
[DBG]  Agent 106 is not in sub-map at time 10 (intervals: 
[DBG]  )
[DBG]  Agent 112 found intervals in the sub-map:
[DBG]   [0..7]
[DBG]  Agent 112 is not in sub-map at time 10 (intervals: 
[DBG]  [0..7] )
[DBG]  Agent 113 found intervals in the sub-map:
[DBG]   [3..9]
[DBG]  Agent 113 is not in sub-map at time 10 (intervals: 
[DBG]  [3..9] )
[DBG]  Agent 121 found intervals in the sub-map:
[DBG]   [0..8]
[DBG]  Agent 121 is not in sub-map at time 10 (intervals: 
[DBG]  [0..8] )
[DBG]  Agent 131 found intervals in the sub-map:
[DBG]   [3..13]
[DBG]  Agent 131 (interval in submap: [3..13]) contains time 10, added to replan.
[DBG]  Agent 8 | Start (global): 368 -> (local): (1, 2) at time 10 | Goal (global): 369 -> (local): (1, 3) at time 16
[DBG]  Agent 20 | Start (global): 430 -> (local): (3, 0) at time 10 | Goal (global): 462 -> (local): (4, 0) at time 11
[DBG]  Agent 33 | Start (global): 432 -> (local): (3, 2) at time 10 | Goal (global): 402 -> (local): (2, 4) at time 13
[DBG]  Agent 63 | Start (global): 400 -> (local): (2, 2) at time 10 | Goal (global): 335 -> (local): (0, 1) at time 16
[DBG]  Agent 131 | Start (global): 398 -> (local): (2, 0) at time 10 | Goal (global): 462 -> (local): (4, 0) at time 13
[DBG]  [REPAIR] SAT destroy operator called.
[DBG]  [REPAIR] SAT operator â€“ launching subproblem FOR OPTIMIZATION.
[DBG]  Creating local paths (sx, sy) in the submap for T_sync = 10
[DBG]    Agent 8 (global paths from T=10 to 16) has local path: (1,2) (1,2) (1,2) (1,2) (1,2) (1,2) (1,3) 
[DBG]    Agent 20 (global paths from T=10 to 11) has local path: (3,0) (4,0) 
[DBG]    Agent 33 (global paths from T=10 to 13) has local path: (3,2) (3,3) (2,3) (2,4) 
[DBG]    Agent 63 (global paths from T=10 to 16) has local path: (2,2) (2,3) (1,3) (1,3) (0,3) (0,2) (0,1) 
[DBG]    Agent 131 (global paths from T=10 to 13) has local path: (2,0) (2,0) (3,0) (4,0) 
[DBG]  Checking input data for SAT solver:
[DBG]    - Number of agents to replan: 5
[DBG]  Agent 8 has the original local path length: 7 => Start (1,2), Goal (1,3)
[DBG]  Agent 20 has the original local path length: 2 => Start (3,0), Goal (4,0)
[DBG]  Agent 33 has the original local path length: 4 => Start (3,2), Goal (2,4)
[DBG]  Agent 63 has the original local path length: 7 => Start (2,2), Goal (0,1)
[DBG]  Agent 131 has the original local path length: 4 => Start (2,0), Goal (4,0)
[DBG]  Start position: (1, 2), (3, 0), (3, 2), (2, 2), (2, 0), 
[DBG]  Goal position: (1, 3), (4, 0), (2, 4), (0, 1), (4, 0), 
[DBG]  SAT instance and solver created.
Currently solving
Instance name: scen
Map name: map
Encoding used: disappear_at_goal
SAT solver used: Kissat
Optimizing function: sum of costs
Number of agents: 5
Mks LB: 4
SoC LB: 15
Delta: 0
Remaining time: 300000 [ms]

Vertex conflict! Agents 0, 1, timestep 2, location 0
Swapping conflict! Agents 0, 1, timestep 2, edge (0,0)
Vertex conflict! Agents 0, 1, timestep 3, location 0
Vertex conflict! Agents 0, 3, timestep 3, location 0
Vertex conflict! Agents 0, 4, timestep 3, location 0
Vertex conflict! Agents 1, 3, timestep 3, location 0
Vertex conflict! Agents 1, 4, timestep 3, location 0
Vertex conflict! Agents 3, 4, timestep 3, location 0
Found plan [agents = 5] [timesteps = 4]
Agent #0 : 6 7 0 0 
Agent #1 : 12 16 0 0 
Agent #2 : 14 15 10 11 
Agent #3 : 9 6 5 0 
Agent #4 : 8 12 16 0 

[STAT] Solver returned: 0
[DBG]  Agent (index) 8 | New local path (submap idx):
[DBG]  6 7 
[DBG]  Agent (index) 20 | New local path (submap idx):
[DBG]  12 16 
[DBG]  Agent (index) 33 | New local path (submap idx):
[DBG]  14 15 10 11 
[DBG]  Agent (index) 63 | New local path (submap idx):
[DBG]  9 6 5 0 
[DBG]  Agent (index) 131 | New local path (submap idx):
[DBG]  8 12 16 
[DBG]  Update the agent path 8 | Original local length: 7 | New local length: 2
[DBG]  agent 8 t=0 => decoded (sx,sy)=(1,2) => global_id=368
[DBG]  agent 8 t=1 => decoded (sx,sy)=(1,3) => global_id=369
[DBG]  Complete path of agent 8:
[DBG]    Original: 303 304 304 304 304 304 304 304 336 368 368 368 368 368 368 368 369 
[DBG]    New:     303 304 304 304 304 304 304 304 336 368 368 369 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 303 304 304 304 304 304 304 304 336 368 
[DBG]    Local path (in submap): 368 369 
[DBG]    Suffix (out of submap): 
[DBG]  Original agent path length 8 je: 17
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 0: 303, 304, 304, 304, 304, 304, 304, 304, 336, 368, 368, 369, 
[DBG]  Path for agent 8 updated, resulting length: 12
[DBG]  Update the agent path 20 | Original local length: 2 | New local length: 2
[DBG]  agent 20 t=0 => decoded (sx,sy)=(3,0) => global_id=430
[DBG]  agent 20 t=1 => decoded (sx,sy)=(4,0) => global_id=462
[DBG]  Complete path of agent 20:
[DBG]    Original: 242 241 240 239 271 303 335 367 366 398 430 462 494 526 525 524 556 588 620 619 651 650 682 714 746 745 777 809 841 873 905 904 
[DBG]    New:     242 241 240 239 271 303 335 367 366 398 430 462 494 526 525 524 556 588 620 619 651 650 682 714 746 745 777 809 841 873 905 904 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 242 241 240 239 271 303 335 367 366 398 
[DBG]    Local path (in submap): 430 462 
[DBG]    Suffix (out of submap): 494 526 525 524 556 588 620 619 651 650 682 714 746 745 777 809 841 873 905 904 
[DBG]  Original agent path length 20 je: 32
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 1: 242, 241, 240, 239, 271, 303, 335, 367, 366, 398, 430, 462, 494, 526, 525, 524, 556, 588, 620, 619, 651, 650, 682, 714, 746, 745, 777, 809, 841, 873, 905, 904, 
[DBG]  Path for agent 20 updated, resulting length: 32
[DBG]  Update the agent path 33 | Original local length: 4 | New local length: 4
[DBG]  agent 33 t=0 => decoded (sx,sy)=(3,2) => global_id=432
[DBG]  agent 33 t=1 => decoded (sx,sy)=(3,3) => global_id=433
[DBG]  agent 33 t=2 => decoded (sx,sy)=(2,3) => global_id=401
[DBG]  agent 33 t=3 => decoded (sx,sy)=(2,4) => global_id=402
[DBG]  Complete path of agent 33:
[DBG]    Original: 360 361 362 363 395 427 428 429 430 431 432 433 401 402 403 404 405 406 407 408 408 440 472 473 474 506 507 508 509 510 
[DBG]    New:     360 361 362 363 395 427 428 429 430 431 432 433 401 402 403 404 405 406 407 408 408 440 472 473 474 506 507 508 509 510 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 360 361 362 363 395 427 428 429 430 431 
[DBG]    Local path (in submap): 432 433 401 402 
[DBG]    Suffix (out of submap): 403 404 405 406 407 408 408 440 472 473 474 506 507 508 509 510 
[DBG]  Original agent path length 33 je: 30
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 2: 360, 361, 362, 363, 395, 427, 428, 429, 430, 431, 432, 433, 401, 402, 403, 404, 405, 406, 407, 408, 408, 440, 472, 473, 474, 506, 507, 508, 509, 510, 
[DBG]  Path for agent 33 updated, resulting length: 30
[DBG]  Update the agent path 63 | Original local length: 7 | New local length: 4
[DBG]  agent 63 t=0 => decoded (sx,sy)=(2,2) => global_id=400
[DBG]  agent 63 t=1 => decoded (sx,sy)=(1,2) => global_id=368
[DBG]  agent 63 t=2 => decoded (sx,sy)=(1,1) => global_id=367
[DBG]  agent 63 t=3 => decoded (sx,sy)=(0,1) => global_id=335
[DBG]  Complete path of agent 63:
[DBG]    Original: 689 657 625 593 561 560 528 496 464 432 400 401 369 369 337 336 335 303 271 270 302 
[DBG]    New:     689 657 625 593 561 560 528 496 464 432 400 368 367 335 303 271 270 302 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 689 657 625 593 561 560 528 496 464 432 
[DBG]    Local path (in submap): 400 368 367 335 303 271 270 
[DBG]    Suffix (out of submap): 302 
[DBG]  Original agent path length 63 je: 21
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 3: 689, 657, 625, 593, 561, 560, 528, 496, 464, 432, 400, 368, 367, 335, 303, 271, 270, 302, 
[DBG]  Path for agent 63 updated, resulting length: 18
[DBG]  Update the agent path 131 | Original local length: 4 | New local length: 3
[DBG]  agent 131 t=0 => decoded (sx,sy)=(2,0) => global_id=398
[DBG]  agent 131 t=1 => decoded (sx,sy)=(3,0) => global_id=430
[DBG]  agent 131 t=2 => decoded (sx,sy)=(4,0) => global_id=462
[DBG]  Complete path of agent 131:
[DBG]    Original: 341 340 339 338 337 369 368 368 367 366 398 398 430 462 494 526 525 524 523 522 521 520 520 520 519 551 583 584 616 648 680 712 
[DBG]    New:     341 340 339 338 337 369 368 368 367 366 398 430 462 494 526 525 524 523 522 521 520 520 520 519 551 583 584 616 648 680 712 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 341 340 339 338 337 369 368 368 367 366 
[DBG]    Local path (in submap): 398 430 462 494 
[DBG]    Suffix (out of submap): 526 525 524 523 522 521 520 520 520 519 551 583 584 616 648 680 712 
[DBG]  Original agent path length 131 je: 32
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 4: 341, 340, 339, 338, 337, 369, 368, 368, 367, 366, 398, 430, 462, 494, 526, 525, 524, 523, 522, 521, 520, 520, 520, 519, 551, 583, 584, 616, 648, 680, 712, 
[DBG]  Path for agent 131 updated, resulting length: 31
[DBG]  Paths successfully updated.
[DBG]  (LNS.cpp) New path for agent 8: 
[DBG]  303, 304, 304, 304, 304, 304, 304, 304, 336, 368, 368, 369, 
[DBG]  (LNS.cpp) New path for agent 20: 
[DBG]  242, 241, 240, 239, 271, 303, 335, 367, 366, 398, 430, 462, 494, 526, 525, 524, 556, 588, 620, 619, 651, 650, 682, 714, 746, 745, 777, 809, 841, 873, 905, 904, 
[DBG]  (LNS.cpp) New path for agent 33: 
[DBG]  360, 361, 362, 363, 395, 427, 428, 429, 430, 431, 432, 433, 401, 402, 403, 404, 405, 406, 407, 408, 408, 440, 472, 473, 474, 506, 507, 508, 509, 510, 
[DBG]  (LNS.cpp) New path for agent 63: 
[DBG]  689, 657, 625, 593, 561, 560, 528, 496, 464, 432, 400, 368, 367, 335, 303, 271, 270, 302, 
[DBG]  (LNS.cpp) New path for agent 131: 
[DBG]  341, 340, 339, 338, 337, 369, 368, 368, 367, 366, 398, 430, 462, 494, 526, 525, 524, 523, 522, 521, 520, 520, 520, 519, 551, 583, 584, 616, 648, 680, 712, 
[DBG]  component_weights = {0.435446, 0.0543526, 0.0568392, 0.453362}
[DBG]  opSuccess value: 1
[STAT] neighbor.sum_of_costs before recomputation: 118
[STAT] neighbor.old_sum_of_costs before recomputation: 127
[STAT] sum_of_costs before recomputation: 4175
[DBG]  Validate solution immediately after SAT success.
[WARNING] Problem after SAT: Target conflict: agent 88 (len 22) traverses target of agent 8 (len 11) at location 369 at timestep 15
[DBG]  Attempting immediate repair via init_lns because problem occurred after SAT (should be applied only for conflicts...).
[DBG]  Passing 150 agents to init_lns (skip=true).
[DBG]  path_table contents for selected agents (neighbor.agents):
[DBG]    Agent 8 => controlling path length=12
[DBG]    Agent 20 => controlling path length=32
[DBG]    Agent 33 => controlling path length=30
[DBG]    Agent 63 => controlling path length=18
[DBG]    Agent 131 => controlling path length=31
[DBG]  hodnota skip_initial_solution=1
[DBG]  We skip initialSolution => call buildCollisionData()
[DBG]  buildCollisionData() called â€“ skip_initial_solution case.
[DBG]  Agents.size()=150, collision_graph.size()=150
[DBG]  agent 8 => updateCollidingPairs => foundCollision
[DBG]  agent 16 => updateCollidingPairs => foundCollision
[DBG]  agent 63 => updateCollidingPairs => foundCollision
[DBG]  agent 69 => updateCollidingPairs => foundCollision
[DBG]  agent 81 => updateCollidingPairs => foundCollision
[DBG]  agent 83 => updateCollidingPairs => foundCollision
[DBG]  agent 88 => updateCollidingPairs => foundCollision
[DBG]  agent 105 => updateCollidingPairs => foundCollision
[DBG]  agent 115 => updateCollidingPairs => foundCollision
[DBG]  agent 131 => updateCollidingPairs => foundCollision
[DBG]  Conflicting agent pairs:
[DBG]  agent 8 is in conflict with agent 88
[DBG]  agent 16 is in conflict with agent 63
[DBG]  agent 63 is in conflict with agent 69
[DBG]  agent 63 is in conflict with agent 83
[DBG]  agent 63 is in conflict with agent 115
[DBG]  agent 81 is in conflict with agent 131
[DBG]  agent 105 is in conflict with agent 131
[DBG]  buildCollisionData() => sum_of_costs=4166, num_of_colliding_pairs=7
[DBG]  buildCollisionData done => sum_of_costs=4166, num_of_colliding_pairs=7
[DBG]  sum_of_cost hodnota: 4166
[DBG]  After skip/init build => iteration_stats.back(): sum_of_costs=4166, collisions=7
[DEBUG] Using default neighbor generation strategy for conflicts: 2
[DEBUG] Using default neighbor generation strategy for conflicts: 2
[DEBUG] Using default neighbor generation strategy for conflicts: 2
[DEBUG] Using default neighbor generation strategy for conflicts: 1
[DEBUG] Using default neighbor generation strategy for conflicts: 2
[DEBUG] Using default neighbor generation strategy for conflicts: 1
	InitLNS(PP): runtime = 0.0275351, iterations = 7, colliding pairs = 0, initial colliding pairs = 7, solution cost = 4169, initial solution cost = 4166, failed iterations = 0
[DBG]  init_lns->sum_of_costs after init_lns->run: 4169
[DBG]  sum_of_costs after assignment from init_lns->run: 4169
[DBG]  Recomputing sum_of_cost by dividing neighbor.sum_of_costs and neighbor.old_sum_of_costs
[STAT] sum_of_costs after recomputation: 4169
[STAT] Iteration 208
[DBG]  Using SAT operator (destroy+repair SAT).
[DBG]  ====================
[DBG]  SAT destroy operator called.
[DBG]  SAT heuristic: 2
[DBG]  key_agent_id: 81
[DBG]  key_agent_id global path length: 23
[DBG]  Submap content (global positions):
[DBG]  399 400 401 402 403 
[DBG]  431 432 433 434 435 
[DBG]  463 464 465 466 467 
[DBG]  495 496 497 498 499 
[DBG]  527 528 529 530 531 
[DBG]  Map content with agents and obstacles:
[DBG]  X . . . . 
[DBG]  A . A X . 
[DBG]  A . A A A 
[DBG]  X . X . . 
[DBG]  X . . A . 
[DBG]  content of the map structure that we pass to the SAT solver:
[DBG]  -1  1  1  1  1  
[DBG]  1  1  1  -1  1  
[DBG]  1  1  1  1  1  
[DBG]  -1  1  -1  1  1  
[DBG]  -1  1  1  1  1  
[DBG]  Identifying agents in a submap for rescheduling (when key_agent is there at the time 17):
[DBG]  Agent 29 found intervals in the sub-map:
[DBG]   [17..22]
[DBG]  Agent 29 (interval in submap: [17..22]) contains time 17, added to replan.
[DBG]  Agent 36 found intervals in the sub-map:
[DBG]   [0..5]
[DBG]  Agent 36 is not in sub-map at time 17 (intervals: 
[DBG]  [0..5] )
[DBG]  Agent 43 found intervals in the sub-map:
[DBG]  
[DBG]  Agent 43 is not in sub-map at time 17 (intervals: 
[DBG]  )
[DBG]  Agent 45 found intervals in the sub-map:
[DBG]   [15..23]
[DBG]  Agent 45 (interval in submap: [15..23]) contains time 17, added to replan.
[DBG]  Agent 53 found intervals in the sub-map:
[DBG]   [12..18]
[DBG]  Agent 53 (interval in submap: [12..18]) contains time 17, added to replan.
[DBG]  Agent 57 found intervals in the sub-map:
[DBG]   [13..20]
[DBG]  Agent 57 (interval in submap: [13..20]) contains time 17, added to replan.
[DBG]  Agent 61 found intervals in the sub-map:
[DBG]  
[DBG]  Agent 61 is not in sub-map at time 17 (intervals: 
[DBG]  )
[DBG]  Agent 81 found intervals in the sub-map:
[DBG]   [12..21]
[DBG]  Agent 81 (interval in submap: [12..21]) contains time 17, added to replan.
[DBG]  Agent 84 found intervals in the sub-map:
[DBG]   [13..20]
[DBG]  Agent 84 (interval in submap: [13..20]) contains time 17, added to replan.
[DBG]  Agent 114 found intervals in the sub-map:
[DBG]  
[DBG]  Agent 114 is not in sub-map at time 17 (intervals: 
[DBG]  )
[DBG]  Agent 128 found intervals in the sub-map:
[DBG]   [21..28]
[DBG]  Agent 128 is not in sub-map at time 17 (intervals: 
[DBG]  [21..28] )
[DBG]  Agent 137 found intervals in the sub-map:
[DBG]   [11..18]
[DBG]  Agent 137 (interval in submap: [11..18]) contains time 17, added to replan.
[DBG]  Agent 29 | Start (global): 431 -> (local): (1, 0) at time 17 | Goal (global): 403 -> (local): (0, 4) at time 22
[DBG]  Agent 45 | Start (global): 467 -> (local): (2, 4) at time 17 | Goal (global): 529 -> (local): (4, 2) at time 23
[DBG]  Agent 53 | Start (global): 530 -> (local): (4, 3) at time 17 | Goal (global): 529 -> (local): (4, 2) at time 18
[DBG]  Agent 57 | Start (global): 466 -> (local): (2, 3) at time 17 | Goal (global): 529 -> (local): (4, 2) at time 20
[DBG]  Agent 81 | Start (global): 465 -> (local): (2, 2) at time 17 | Goal (global): 531 -> (local): (4, 4) at time 21
[DBG]  Agent 84 | Start (global): 433 -> (local): (1, 2) at time 17 | Goal (global): 403 -> (local): (0, 4) at time 20
[DBG]  Agent 137 | Start (global): 463 -> (local): (2, 0) at time 17 | Goal (global): 463 -> (local): (2, 0) at time 18
[DBG]  [REPAIR] SAT destroy operator called.
[DBG]  [REPAIR] SAT operator â€“ launching subproblem FOR OPTIMIZATION.
[DBG]  Creating local paths (sx, sy) in the submap for T_sync = 17
[DBG]    Agent 29 (global paths from T=17 to 22) has local path: (1,0) (1,1) (0,1) (0,2) (0,3) (0,4) 
[DBG]    Agent 45 (global paths from T=17 to 23) has local path: (2,4) (3,4) (4,4) (4,3) (4,2) (4,2) (4,2) 
[DBG]    Agent 53 (global paths from T=17 to 18) has local path: (4,3) (4,2) 
[DBG]    Agent 57 (global paths from T=17 to 20) has local path: (2,3) (3,3) (4,3) (4,2) 
[DBG]    Agent 81 (global paths from T=17 to 21) has local path: (2,2) (2,3) (3,3) (3,4) (4,4) 
[DBG]    Agent 84 (global paths from T=17 to 20) has local path: (1,2) (0,2) (0,3) (0,4) 
[DBG]    Agent 137 (global paths from T=17 to 18) has local path: (2,0) (2,0) 
[DBG]  Checking input data for SAT solver:
[DBG]    - Number of agents to replan: 7
[DBG]  Agent 29 has the original local path length: 6 => Start (1,0), Goal (0,4)
[DBG]  Agent 45 has the original local path length: 7 => Start (2,4), Goal (4,2)
[DBG]  Agent 53 has the original local path length: 2 => Start (4,3), Goal (4,2)
[DBG]  Agent 57 has the original local path length: 4 => Start (2,3), Goal (4,2)
[DBG]  Agent 81 has the original local path length: 5 => Start (2,2), Goal (4,4)
[DBG]  Agent 84 has the original local path length: 4 => Start (1,2), Goal (0,4)
[DBG]  Agent 137 has the original local path length: 2 => Start (2,0), Goal (2,0)
[DBG]  Start position: (1, 0), (2, 4), (4, 3), (2, 3), (2, 2), (1, 2), (2, 0), 
[DBG]  Goal position: (0, 4), (4, 2), (4, 2), (4, 2), (4, 4), (0, 4), (2, 0), 
[DBG]  SAT instance and solver created.
Currently solving
Instance name: scen
Map name: map
Encoding used: disappear_at_goal
SAT solver used: Kissat
Optimizing function: sum of costs
Number of agents: 7
Mks LB: 6
SoC LB: 27
Delta: 0
Remaining time: 300000 [ms]

Vertex conflict! Agents 1, 2, timestep 5, location 0
Vertex conflict! Agents 1, 3, timestep 5, location 0
Vertex conflict! Agents 1, 4, timestep 5, location 0
Vertex conflict! Agents 1, 5, timestep 5, location 0
Vertex conflict! Agents 1, 6, timestep 5, location 0
Vertex conflict! Agents 2, 3, timestep 4, location 0
Swapping conflict! Agents 2, 3, timestep 4, edge (0,0)
Vertex conflict! Agents 2, 3, timestep 5, location 0
Vertex conflict! Agents 2, 4, timestep 5, location 0
Vertex conflict! Agents 2, 5, timestep 4, location 0
Swapping conflict! Agents 2, 5, timestep 4, edge (0,0)
Vertex conflict! Agents 2, 5, timestep 5, location 0
Vertex conflict! Agents 2, 6, timestep 2, location 0
Swapping conflict! Agents 2, 6, timestep 2, edge (0,0)
Vertex conflict! Agents 2, 6, timestep 3, location 0
Swapping conflict! Agents 2, 6, timestep 3, edge (0,0)
Vertex conflict! Agents 2, 6, timestep 4, location 0
Swapping conflict! Agents 2, 6, timestep 4, edge (0,0)
Vertex conflict! Agents 2, 6, timestep 5, location 0
Vertex conflict! Agents 3, 4, timestep 5, location 0
Vertex conflict! Agents 3, 5, timestep 4, location 0
Swapping conflict! Agents 3, 5, timestep 4, edge (0,0)
Vertex conflict! Agents 3, 5, timestep 5, location 0
Vertex conflict! Agents 3, 6, timestep 4, location 0
Swapping conflict! Agents 3, 6, timestep 4, edge (0,0)
Vertex conflict! Agents 3, 6, timestep 5, location 0
Vertex conflict! Agents 4, 5, timestep 5, location 0
Vertex conflict! Agents 4, 6, timestep 5, location 0
Vertex conflict! Agents 5, 6, timestep 4, location 0
Swapping conflict! Agents 5, 6, timestep 4, edge (0,0)
Vertex conflict! Agents 5, 6, timestep 5, location 0
Found plan [agents = 7] [timesteps = 6]
Agent #0 : 4 5 6 1 2 3 
Agent #1 : 12 15 19 18 17 0 
Agent #2 : 18 17 0 0 0 0 
Agent #3 : 11 14 18 17 0 0 
Agent #4 : 10 11 14 15 19 0 
Agent #5 : 6 1 2 3 0 0 
Agent #6 : 8 0 0 0 0 0 

[STAT] Solver returned: 0
[DBG]  Agent (index) 29 | New local path (submap idx):
[DBG]  4 5 6 1 2 3 
[DBG]  Agent (index) 45 | New local path (submap idx):
[DBG]  12 15 19 18 17 
[DBG]  Agent (index) 53 | New local path (submap idx):
[DBG]  18 17 
[DBG]  Agent (index) 57 | New local path (submap idx):
[DBG]  11 14 18 17 
[DBG]  Agent (index) 81 | New local path (submap idx):
[DBG]  10 11 14 15 19 
[DBG]  Agent (index) 84 | New local path (submap idx):
[DBG]  6 1 2 3 
[DBG]  Agent (index) 137 | New local path (submap idx):
[DBG]  8 
[DBG]  Update the agent path 29 | Original local length: 6 | New local length: 6
[DBG]  agent 29 t=0 => decoded (sx,sy)=(1,0) => global_id=431
[DBG]  agent 29 t=1 => decoded (sx,sy)=(1,1) => global_id=432
[DBG]  agent 29 t=2 => decoded (sx,sy)=(1,2) => global_id=433
[DBG]  agent 29 t=3 => decoded (sx,sy)=(0,2) => global_id=401
[DBG]  agent 29 t=4 => decoded (sx,sy)=(0,3) => global_id=402
[DBG]  agent 29 t=5 => decoded (sx,sy)=(0,4) => global_id=403
[DBG]  Complete path of agent 29:
[DBG]    Original: 579 580 581 549 550 551 519 487 455 423 424 425 426 427 428 429 430 431 432 400 401 402 403 404 405 373 341 309 310 311 
[DBG]    New:     579 580 581 549 550 551 519 487 455 423 424 425 426 427 428 429 430 431 432 433 401 402 403 404 405 373 341 309 310 311 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 579 580 581 549 550 551 519 487 455 423 424 425 426 427 428 429 430 
[DBG]    Local path (in submap): 431 432 433 401 402 403 
[DBG]    Suffix (out of submap): 404 405 373 341 309 310 311 
[DBG]  Original agent path length 29 je: 30
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 0: 579, 580, 581, 549, 550, 551, 519, 487, 455, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 401, 402, 403, 404, 405, 373, 341, 309, 310, 311, 
[DBG]  Path for agent 29 updated, resulting length: 30
[DBG]  Update the agent path 45 | Original local length: 7 | New local length: 5
[DBG]  agent 45 t=0 => decoded (sx,sy)=(2,4) => global_id=467
[DBG]  agent 45 t=1 => decoded (sx,sy)=(3,4) => global_id=499
[DBG]  agent 45 t=2 => decoded (sx,sy)=(4,4) => global_id=531
[DBG]  agent 45 t=3 => decoded (sx,sy)=(4,3) => global_id=530
[DBG]  agent 45 t=4 => decoded (sx,sy)=(4,2) => global_id=529
[DBG]  Complete path of agent 45:
[DBG]    Original: 153 185 184 216 248 247 279 278 277 309 341 340 339 371 371 403 435 467 499 531 530 529 529 529 561 593 592 593 625 657 656 655 687 719 751 783 815 847 848 849 
[DBG]    New:     153 185 184 216 248 247 279 278 277 309 341 340 339 371 371 403 435 467 499 531 530 529 561 593 592 593 625 657 656 655 687 719 751 783 815 847 848 849 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 153 185 184 216 248 247 279 278 277 309 341 340 339 371 371 403 435 
[DBG]    Local path (in submap): 467 499 531 530 529 561 593 
[DBG]    Suffix (out of submap): 592 593 625 657 656 655 687 719 751 783 815 847 848 849 
[DBG]  Original agent path length 45 je: 40
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 1: 153, 185, 184, 216, 248, 247, 279, 278, 277, 309, 341, 340, 339, 371, 371, 403, 435, 467, 499, 531, 530, 529, 561, 593, 592, 593, 625, 657, 656, 655, 687, 719, 751, 783, 815, 847, 848, 849, 
[DBG]  Path for agent 45 updated, resulting length: 38
[DBG]  Update the agent path 53 | Original local length: 2 | New local length: 2
[DBG]  agent 53 t=0 => decoded (sx,sy)=(4,3) => global_id=530
[DBG]  agent 53 t=1 => decoded (sx,sy)=(4,2) => global_id=529
[DBG]  Complete path of agent 53:
[DBG]    Original: 84 116 148 180 212 244 276 308 340 339 371 371 403 435 467 466 498 530 529 561 593 625 657 658 659 660 692 724 756 788 820 821 
[DBG]    New:     84 116 148 180 212 244 276 308 340 339 371 371 403 435 467 466 498 530 529 561 593 625 657 658 659 660 692 724 756 788 820 821 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 84 116 148 180 212 244 276 308 340 339 371 371 403 435 467 466 498 
[DBG]    Local path (in submap): 530 529 
[DBG]    Suffix (out of submap): 561 593 625 657 658 659 660 692 724 756 788 820 821 
[DBG]  Original agent path length 53 je: 32
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 2: 84, 116, 148, 180, 212, 244, 276, 308, 340, 339, 371, 371, 403, 435, 467, 466, 498, 530, 529, 561, 593, 625, 657, 658, 659, 660, 692, 724, 756, 788, 820, 821, 
[DBG]  Path for agent 53 updated, resulting length: 32
[DBG]  Update the agent path 57 | Original local length: 4 | New local length: 4
[DBG]  agent 57 t=0 => decoded (sx,sy)=(2,3) => global_id=466
[DBG]  agent 57 t=1 => decoded (sx,sy)=(3,3) => global_id=498
[DBG]  agent 57 t=2 => decoded (sx,sy)=(4,3) => global_id=530
[DBG]  agent 57 t=3 => decoded (sx,sy)=(4,2) => global_id=529
[DBG]  Complete path of agent 57:
[DBG]    Original: 185 217 249 248 247 279 278 277 309 308 340 339 371 403 435 435 467 466 498 530 529 561 561 561 593 625 625 657 656 655 687 719 751 783 815 847 848 880 912 944 976 977 
[DBG]    New:     185 217 249 248 247 279 278 277 309 308 340 339 371 403 435 435 467 466 498 530 529 561 561 561 593 625 625 657 656 655 687 719 751 783 815 847 848 880 912 944 976 977 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 185 217 249 248 247 279 278 277 309 308 340 339 371 403 435 435 467 
[DBG]    Local path (in submap): 466 498 530 529 
[DBG]    Suffix (out of submap): 561 561 561 593 625 625 657 656 655 687 719 751 783 815 847 848 880 912 944 976 977 
[DBG]  Original agent path length 57 je: 42
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 3: 185, 217, 249, 248, 247, 279, 278, 277, 309, 308, 340, 339, 371, 403, 435, 435, 467, 466, 498, 530, 529, 561, 561, 561, 593, 625, 625, 657, 656, 655, 687, 719, 751, 783, 815, 847, 848, 880, 912, 944, 976, 977, 
[DBG]  Path for agent 57 updated, resulting length: 42
[DBG]  Update the agent path 81 | Original local length: 5 | New local length: 5
[DBG]  agent 81 t=0 => decoded (sx,sy)=(2,2) => global_id=465
[DBG]  agent 81 t=1 => decoded (sx,sy)=(2,3) => global_id=466
[DBG]  agent 81 t=2 => decoded (sx,sy)=(3,3) => global_id=498
[DBG]  agent 81 t=3 => decoded (sx,sy)=(3,4) => global_id=499
[DBG]  agent 81 t=4 => decoded (sx,sy)=(4,4) => global_id=531
[DBG]  Complete path of agent 81:
[DBG]    Original: 419 420 421 422 423 424 425 426 427 428 429 430 431 432 433 433 465 465 466 498 499 531 563 
[DBG]    New:     419 420 421 422 423 424 425 426 427 428 429 430 431 432 433 433 465 465 466 498 499 531 563 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 419 420 421 422 423 424 425 426 427 428 429 430 431 432 433 433 465 
[DBG]    Local path (in submap): 465 466 498 499 531 
[DBG]    Suffix (out of submap): 563 
[DBG]  Original agent path length 81 je: 23
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 4: 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 433, 465, 465, 466, 498, 499, 531, 563, 
[DBG]  Path for agent 81 updated, resulting length: 23
[DBG]  Update the agent path 84 | Original local length: 4 | New local length: 4
[DBG]  agent 84 t=0 => decoded (sx,sy)=(1,2) => global_id=433
[DBG]  agent 84 t=1 => decoded (sx,sy)=(0,2) => global_id=401
[DBG]  agent 84 t=2 => decoded (sx,sy)=(0,3) => global_id=402
[DBG]  agent 84 t=3 => decoded (sx,sy)=(0,4) => global_id=403
[DBG]  Complete path of agent 84:
[DBG]    Original: 878 846 814 815 783 751 719 687 655 623 591 592 560 528 496 464 432 433 401 402 403 404 405 406 407 375 343 311 312 313 281 249 217 218 186 154 122 90 58 26 25 
[DBG]    New:     878 846 814 815 783 751 719 687 655 623 591 592 560 528 496 464 432 433 401 402 403 404 405 406 407 375 343 311 312 313 281 249 217 218 186 154 122 90 58 26 25 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 878 846 814 815 783 751 719 687 655 623 591 592 560 528 496 464 432 
[DBG]    Local path (in submap): 433 401 402 403 
[DBG]    Suffix (out of submap): 404 405 406 407 375 343 311 312 313 281 249 217 218 186 154 122 90 58 26 25 
[DBG]  Original agent path length 84 je: 41
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 5: 878, 846, 814, 815, 783, 751, 719, 687, 655, 623, 591, 592, 560, 528, 496, 464, 432, 433, 401, 402, 403, 404, 405, 406, 407, 375, 343, 311, 312, 313, 281, 249, 217, 218, 186, 154, 122, 90, 58, 26, 25, 
[DBG]  Path for agent 84 updated, resulting length: 41
[DBG]  Update the agent path 137 | Original local length: 2 | New local length: 1
[DBG]  agent 137 t=0 => decoded (sx,sy)=(2,0) => global_id=463
[DBG]  Complete path of agent 137:
[DBG]    Original: 538 506 505 504 503 502 501 469 437 405 404 403 435 467 466 465 464 463 463 462 494 526 525 524 523 522 521 520 520 520 519 551 550 549 548 580 579 611 610 609 608 640 672 704 736 768 800 832 864 865 897 929 930 931 932 
[DBG]    New:     538 506 505 504 503 502 501 469 437 405 404 403 435 467 466 465 464 463 462 494 526 525 524 523 522 521 520 520 520 519 551 550 549 548 580 579 611 610 609 608 640 672 704 736 768 800 832 864 865 897 929 930 931 932 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 538 506 505 504 503 502 501 469 437 405 404 403 435 467 466 465 464 
[DBG]    Local path (in submap): 463 462 
[DBG]    Suffix (out of submap): 494 526 525 524 523 522 521 520 520 520 519 551 550 549 548 580 579 611 610 609 608 640 672 704 736 768 800 832 864 865 897 929 930 931 932 
[DBG]  Original agent path length 137 je: 55
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 6: 538, 506, 505, 504, 503, 502, 501, 469, 437, 405, 404, 403, 435, 467, 466, 465, 464, 463, 462, 494, 526, 525, 524, 523, 522, 521, 520, 520, 520, 519, 551, 550, 549, 548, 580, 579, 611, 610, 609, 608, 640, 672, 704, 736, 768, 800, 832, 864, 865, 897, 929, 930, 931, 932, 
[DBG]  Path for agent 137 updated, resulting length: 54
[DBG]  Paths successfully updated.
[DBG]  (LNS.cpp) New path for agent 29: 
[DBG]  579, 580, 581, 549, 550, 551, 519, 487, 455, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 401, 402, 403, 404, 405, 373, 341, 309, 310, 311, 
[DBG]  (LNS.cpp) New path for agent 45: 
[DBG]  153, 185, 184, 216, 248, 247, 279, 278, 277, 309, 341, 340, 339, 371, 371, 403, 435, 467, 499, 531, 530, 529, 561, 593, 592, 593, 625, 657, 656, 655, 687, 719, 751, 783, 815, 847, 848, 849, 
[DBG]  (LNS.cpp) New path for agent 53: 
[DBG]  84, 116, 148, 180, 212, 244, 276, 308, 340, 339, 371, 371, 403, 435, 467, 466, 498, 530, 529, 561, 593, 625, 657, 658, 659, 660, 692, 724, 756, 788, 820, 821, 
[DBG]  (LNS.cpp) New path for agent 57: 
[DBG]  185, 217, 249, 248, 247, 279, 278, 277, 309, 308, 340, 339, 371, 403, 435, 435, 467, 466, 498, 530, 529, 561, 561, 561, 593, 625, 625, 657, 656, 655, 687, 719, 751, 783, 815, 847, 848, 880, 912, 944, 976, 977, 
[DBG]  (LNS.cpp) New path for agent 81: 
[DBG]  419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 433, 465, 465, 466, 498, 499, 531, 563, 
[DBG]  (LNS.cpp) New path for agent 84: 
[DBG]  878, 846, 814, 815, 783, 751, 719, 687, 655, 623, 591, 592, 560, 528, 496, 464, 432, 433, 401, 402, 403, 404, 405, 406, 407, 375, 343, 311, 312, 313, 281, 249, 217, 218, 186, 154, 122, 90, 58, 26, 25, 
[DBG]  (LNS.cpp) New path for agent 137: 
[DBG]  538, 506, 505, 504, 503, 502, 501, 469, 437, 405, 404, 403, 435, 467, 466, 465, 464, 463, 462, 494, 526, 525, 524, 523, 522, 521, 520, 520, 520, 519, 551, 550, 549, 548, 580, 579, 611, 610, 609, 608, 640, 672, 704, 736, 768, 800, 832, 864, 865, 897, 929, 930, 931, 932, 
[DBG]  component_weights = {0.431431, 0.0538514, 0.0563151, 0.458403}
[DBG]  opSuccess value: 1
[STAT] neighbor.sum_of_costs before recomputation: 253
[STAT] neighbor.old_sum_of_costs before recomputation: 256
[STAT] sum_of_costs before recomputation: 4169
[DBG]  Validate solution immediately after SAT success.
[WARNING] Problem after SAT: Vertex conflict between agents 26 and 45 at location 593 at timestep 23
[DBG]  Attempting immediate repair via init_lns because problem occurred after SAT (should be applied only for conflicts...).
[DBG]  Passing 150 agents to init_lns (skip=true).
[DBG]  path_table contents for selected agents (neighbor.agents):
[DBG]    Agent 29 => controlling path length=30
[DBG]    Agent 45 => controlling path length=38
[DBG]    Agent 53 => controlling path length=32
[DBG]    Agent 57 => controlling path length=42
[DBG]    Agent 81 => controlling path length=23
[DBG]    Agent 84 => controlling path length=41
[DBG]    Agent 137 => controlling path length=54
[DBG]  hodnota skip_initial_solution=1
[DBG]  We skip initialSolution => call buildCollisionData()
[DBG]  buildCollisionData() called â€“ skip_initial_solution case.
[DBG]  Agents.size()=150, collision_graph.size()=150
[DBG]  agent 26 => updateCollidingPairs => foundCollision
[DBG]  agent 45 => updateCollidingPairs => foundCollision
[DBG]  agent 57 => updateCollidingPairs => foundCollision
[DBG]  agent 83 => updateCollidingPairs => foundCollision
[DBG]  agent 118 => updateCollidingPairs => foundCollision
[DBG]  agent 137 => updateCollidingPairs => foundCollision
[DBG]  Conflicting agent pairs:
[DBG]  agent 26 is in conflict with agent 45
[DBG]  agent 45 is in conflict with agent 57
[DBG]  agent 83 is in conflict with agent 137
[DBG]  agent 118 is in conflict with agent 137
[DBG]  buildCollisionData() => sum_of_costs=4166, num_of_colliding_pairs=4
[DBG]  buildCollisionData done => sum_of_costs=4166, num_of_colliding_pairs=4
[DBG]  sum_of_cost hodnota: 4166
[DBG]  After skip/init build => iteration_stats.back(): sum_of_costs=4166, collisions=4
[DEBUG] Using default neighbor generation strategy for conflicts: 2
[DEBUG] Using default neighbor generation strategy for conflicts: 2
[DEBUG] Using default neighbor generation strategy for conflicts: 2
[DEBUG] Using default neighbor generation strategy for conflicts: 1
[DEBUG] Using default neighbor generation strategy for conflicts: 2
[DEBUG] Using default neighbor generation strategy for conflicts: 2
[DEBUG] Using default neighbor generation strategy for conflicts: 1
[DEBUG] Using default neighbor generation strategy for conflicts: 0
	InitLNS(PP): runtime = 0.0369702, iterations = 9, colliding pairs = 0, initial colliding pairs = 4, solution cost = 4185, initial solution cost = 4166, failed iterations = 0
[DBG]  init_lns->sum_of_costs after init_lns->run: 4185
[DBG]  sum_of_costs after assignment from init_lns->run: 4185
[DBG]  Recomputing sum_of_cost by dividing neighbor.sum_of_costs and neighbor.old_sum_of_costs
[STAT] sum_of_costs after recomputation: 4185
[STAT] Iteration 209
[DBG]  Using SAT operator (destroy+repair SAT).
[DBG]  ====================
[DBG]  SAT destroy operator called.
[DBG]  SAT heuristic: 2
[DBG]  key_agent_id: 70
[DBG]  key_agent_id global path length: 34
[DBG]  Submap content (global positions):
[DBG]  818 819 820 821 822 
[DBG]  850 851 852 853 854 
[DBG]  882 883 884 885 886 
[DBG]  914 915 916 917 918 
[DBG]  946 947 948 949 950 
[DBG]  Map content with agents and obstacles:
[DBG]  . . A . A 
[DBG]  A . X X . 
[DBG]  . . A . . 
[DBG]  . X . . . 
[DBG]  . X . . . 
[DBG]  content of the map structure that we pass to the SAT solver:
[DBG]  1  1  1  1  1  
[DBG]  1  1  -1  -1  1  
[DBG]  1  1  1  1  1  
[DBG]  1  -1  1  1  1  
[DBG]  1  -1  1  1  1  
[DBG]  Identifying agents in a submap for rescheduling (when key_agent is there at the time 24):
[DBG]  Agent 0 found intervals in the sub-map:
[DBG]   [24..29]
[DBG]  Agent 0 (interval in submap: [24..29]) contains time 24, added to replan.
[DBG]  Agent 1 found intervals in the sub-map:
[DBG]   [0..0] [18..21]
[DBG]  Agent 1 is not in sub-map at time 24 (intervals: 
[DBG]  [0..0] [18..21] )
[DBG]  Agent 35 found intervals in the sub-map:
[DBG]   [14..18]
[DBG]  Agent 35 is not in sub-map at time 24 (intervals: 
[DBG]  [14..18] )
[DBG]  Agent 39 found intervals in the sub-map:
[DBG]   [24..26]
[DBG]  Agent 39 (interval in submap: [24..26]) contains time 24, added to replan.
[DBG]  Agent 70 found intervals in the sub-map:
[DBG]   [22..27]
[DBG]  Agent 70 (interval in submap: [22..27]) contains time 24, added to replan.
[DBG]  Agent 85 found intervals in the sub-map:
[DBG]   [27..31]
[DBG]  Agent 85 is not in sub-map at time 24 (intervals: 
[DBG]  [27..31] )
[DBG]  Agent 89 found intervals in the sub-map:
[DBG]   [13..19]
[DBG]  Agent 89 is not in sub-map at time 24 (intervals: 
[DBG]  [13..19] )
[DBG]  Agent 96 found intervals in the sub-map:
[DBG]   [22..25]
[DBG]  Agent 96 (interval in submap: [22..25]) contains time 24, added to replan.
[DBG]  Agent 109 found intervals in the sub-map:
[DBG]   [0..2]
[DBG]  Agent 109 is not in sub-map at time 24 (intervals: 
[DBG]  [0..2] )
[DBG]  Agent 111 found intervals in the sub-map:
[DBG]   [18..21]
[DBG]  Agent 111 is not in sub-map at time 24 (intervals: 
[DBG]  [18..21] )
[DBG]  Agent 0 | Start (global): 850 -> (local): (1, 0) at time 24 | Goal (global): 886 -> (local): (2, 4) at time 29
[DBG]  Agent 39 | Start (global): 820 -> (local): (0, 2) at time 24 | Goal (global): 822 -> (local): (0, 4) at time 26
[DBG]  Agent 70 | Start (global): 884 -> (local): (2, 2) at time 24 | Goal (global): 914 -> (local): (3, 0) at time 27
[DBG]  Agent 96 | Start (global): 822 -> (local): (0, 4) at time 24 | Goal (global): 854 -> (local): (1, 4) at time 25
[DBG]  [REPAIR] SAT destroy operator called.
[DBG]  [REPAIR] SAT operator â€“ launching subproblem FOR OPTIMIZATION.
[DBG]  Creating local paths (sx, sy) in the submap for T_sync = 24
[DBG]    Agent 0 (global paths from T=24 to 29) has local path: (1,0) (1,1) (2,1) (2,2) (2,3) (2,4) 
[DBG]    Agent 39 (global paths from T=24 to 26) has local path: (0,2) (0,3) (0,4) 
[DBG]    Agent 70 (global paths from T=24 to 27) has local path: (2,2) (2,1) (2,0) (3,0) 
[DBG]    Agent 96 (global paths from T=24 to 25) has local path: (0,4) (1,4) 
[DBG]  Checking input data for SAT solver:
[DBG]    - Number of agents to replan: 4
[DBG]  Agent 0 has the original local path length: 6 => Start (1,0), Goal (2,4)
[DBG]  Agent 39 has the original local path length: 3 => Start (0,2), Goal (0,4)
[DBG]  Agent 70 has the original local path length: 4 => Start (2,2), Goal (3,0)
[DBG]  Agent 96 has the original local path length: 2 => Start (0,4), Goal (1,4)
[DBG]  Start position: (1, 0), (0, 2), (2, 2), (0, 4), 
[DBG]  Goal position: (2, 4), (0, 4), (3, 0), (1, 4), 
[DBG]  SAT instance and solver created.
Currently solving
Instance name: scen
Map name: map
Encoding used: disappear_at_goal
SAT solver used: Kissat
Optimizing function: sum of costs
Number of agents: 4
Mks LB: 6
SoC LB: 15
Delta: 0
Remaining time: 300000 [ms]

Vertex conflict! Agents 1, 2, timestep 4, location 0
Swapping conflict! Agents 1, 2, timestep 4, edge (0,0)
Vertex conflict! Agents 1, 2, timestep 5, location 0
Vertex conflict! Agents 1, 3, timestep 3, location 0
Swapping conflict! Agents 1, 3, timestep 3, edge (0,0)
Vertex conflict! Agents 1, 3, timestep 4, location 0
Swapping conflict! Agents 1, 3, timestep 4, edge (0,0)
Vertex conflict! Agents 1, 3, timestep 5, location 0
Vertex conflict! Agents 2, 3, timestep 4, location 0
Swapping conflict! Agents 2, 3, timestep 4, edge (0,0)
Vertex conflict! Agents 2, 3, timestep 5, location 0
Found plan [agents = 4] [timesteps = 6]
Agent #0 : 5 6 9 10 11 12 
Agent #1 : 2 3 4 0 0 0 
Agent #2 : 10 9 8 13 0 0 
Agent #3 : 4 7 0 0 0 0 

[STAT] Solver returned: 0
[DBG]  Agent (index) 0 | New local path (submap idx):
[DBG]  5 6 9 10 11 12 
[DBG]  Agent (index) 39 | New local path (submap idx):
[DBG]  2 3 4 
[DBG]  Agent (index) 70 | New local path (submap idx):
[DBG]  10 9 8 13 
[DBG]  Agent (index) 96 | New local path (submap idx):
[DBG]  4 7 
[DBG]  Update the agent path 0 | Original local length: 6 | New local length: 6
[DBG]  agent 0 t=0 => decoded (sx,sy)=(1,0) => global_id=850
[DBG]  agent 0 t=1 => decoded (sx,sy)=(1,1) => global_id=851
[DBG]  agent 0 t=2 => decoded (sx,sy)=(2,1) => global_id=883
[DBG]  agent 0 t=3 => decoded (sx,sy)=(2,2) => global_id=884
[DBG]  agent 0 t=4 => decoded (sx,sy)=(2,3) => global_id=885
[DBG]  agent 0 t=5 => decoded (sx,sy)=(2,4) => global_id=886
[DBG]  Complete path of agent 0:
[DBG]    Original: 517 549 550 582 583 584 616 617 649 650 650 651 683 684 685 686 687 719 751 783 815 847 848 849 850 851 883 884 885 886 887 855 856 857 858 859 860 861 862 830 798 799 
[DBG]    New:     517 549 550 582 583 584 616 617 649 650 650 651 683 684 685 686 687 719 751 783 815 847 848 849 850 851 883 884 885 886 887 855 856 857 858 859 860 861 862 830 798 799 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 517 549 550 582 583 584 616 617 649 650 650 651 683 684 685 686 687 719 751 783 815 847 848 849 
[DBG]    Local path (in submap): 850 851 883 884 885 886 
[DBG]    Suffix (out of submap): 887 855 856 857 858 859 860 861 862 830 798 799 
[DBG]  Original agent path length 0 je: 42
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 0: 517, 549, 550, 582, 583, 584, 616, 617, 649, 650, 650, 651, 683, 684, 685, 686, 687, 719, 751, 783, 815, 847, 848, 849, 850, 851, 883, 884, 885, 886, 887, 855, 856, 857, 858, 859, 860, 861, 862, 830, 798, 799, 
[DBG]  Path for agent 0 updated, resulting length: 42
[DBG]  Update the agent path 39 | Original local length: 3 | New local length: 3
[DBG]  agent 39 t=0 => decoded (sx,sy)=(0,2) => global_id=820
[DBG]  agent 39 t=1 => decoded (sx,sy)=(0,3) => global_id=821
[DBG]  agent 39 t=2 => decoded (sx,sy)=(0,4) => global_id=822
[DBG]  Complete path of agent 39:
[DBG]    Original: 680 712 713 714 715 683 684 685 686 687 688 688 688 689 689 657 658 659 691 692 724 756 788 788 820 821 822 823 855 856 857 858 859 860 892 
[DBG]    New:     680 712 713 714 715 683 684 685 686 687 688 688 688 689 689 657 658 659 691 692 724 756 788 788 820 821 822 823 855 856 857 858 859 860 892 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 680 712 713 714 715 683 684 685 686 687 688 688 688 689 689 657 658 659 691 692 724 756 788 788 
[DBG]    Local path (in submap): 820 821 822 
[DBG]    Suffix (out of submap): 823 855 856 857 858 859 860 892 
[DBG]  Original agent path length 39 je: 35
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 1: 680, 712, 713, 714, 715, 683, 684, 685, 686, 687, 688, 688, 688, 689, 689, 657, 658, 659, 691, 692, 724, 756, 788, 788, 820, 821, 822, 823, 855, 856, 857, 858, 859, 860, 892, 
[DBG]  Path for agent 39 updated, resulting length: 35
[DBG]  Update the agent path 70 | Original local length: 4 | New local length: 4
[DBG]  agent 70 t=0 => decoded (sx,sy)=(2,2) => global_id=884
[DBG]  agent 70 t=1 => decoded (sx,sy)=(2,1) => global_id=883
[DBG]  agent 70 t=2 => decoded (sx,sy)=(2,0) => global_id=882
[DBG]  agent 70 t=3 => decoded (sx,sy)=(3,0) => global_id=914
[DBG]  Complete path of agent 70:
[DBG]    Original: 632 600 632 664 696 728 729 730 731 732 764 765 797 829 861 860 859 858 857 856 855 887 886 885 884 883 882 914 913 912 944 976 975 974 
[DBG]    New:     632 600 632 664 696 728 729 730 731 732 764 765 797 829 861 860 859 858 857 856 855 887 886 885 884 883 882 914 913 912 944 976 975 974 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 632 600 632 664 696 728 729 730 731 732 764 765 797 829 861 860 859 858 857 856 855 887 886 885 
[DBG]    Local path (in submap): 884 883 882 914 
[DBG]    Suffix (out of submap): 913 912 944 976 975 974 
[DBG]  Original agent path length 70 je: 34
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 2: 632, 600, 632, 664, 696, 728, 729, 730, 731, 732, 764, 765, 797, 829, 861, 860, 859, 858, 857, 856, 855, 887, 886, 885, 884, 883, 882, 914, 913, 912, 944, 976, 975, 974, 
[DBG]  Path for agent 70 updated, resulting length: 34
[DBG]  Update the agent path 96 | Original local length: 2 | New local length: 2
[DBG]  agent 96 t=0 => decoded (sx,sy)=(0,4) => global_id=822
[DBG]  agent 96 t=1 => decoded (sx,sy)=(1,4) => global_id=854
[DBG]  Complete path of agent 96:
[DBG]    Original: 647 648 680 712 713 714 715 683 684 685 686 687 655 656 657 658 659 691 692 724 756 788 820 821 822 854 855 856 857 858 859 827 
[DBG]    New:     647 648 680 712 713 714 715 683 684 685 686 687 655 656 657 658 659 691 692 724 756 788 820 821 822 854 855 856 857 858 859 827 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 647 648 680 712 713 714 715 683 684 685 686 687 655 656 657 658 659 691 692 724 756 788 820 821 
[DBG]    Local path (in submap): 822 854 
[DBG]    Suffix (out of submap): 855 856 857 858 859 827 
[DBG]  Original agent path length 96 je: 32
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 3: 647, 648, 680, 712, 713, 714, 715, 683, 684, 685, 686, 687, 655, 656, 657, 658, 659, 691, 692, 724, 756, 788, 820, 821, 822, 854, 855, 856, 857, 858, 859, 827, 
[DBG]  Path for agent 96 updated, resulting length: 32
[DBG]  Paths successfully updated.
[DBG]  (LNS.cpp) New path for agent 0: 
[DBG]  517, 549, 550, 582, 583, 584, 616, 617, 649, 650, 650, 651, 683, 684, 685, 686, 687, 719, 751, 783, 815, 847, 848, 849, 850, 851, 883, 884, 885, 886, 887, 855, 856, 857, 858, 859, 860, 861, 862, 830, 798, 799, 
[DBG]  (LNS.cpp) New path for agent 39: 
[DBG]  680, 712, 713, 714, 715, 683, 684, 685, 686, 687, 688, 688, 688, 689, 689, 657, 658, 659, 691, 692, 724, 756, 788, 788, 820, 821, 822, 823, 855, 856, 857, 858, 859, 860, 892, 
[DBG]  (LNS.cpp) New path for agent 70: 
[DBG]  632, 600, 632, 664, 696, 728, 729, 730, 731, 732, 764, 765, 797, 829, 861, 860, 859, 858, 857, 856, 855, 887, 886, 885, 884, 883, 882, 914, 913, 912, 944, 976, 975, 974, 
[DBG]  (LNS.cpp) New path for agent 96: 
[DBG]  647, 648, 680, 712, 713, 714, 715, 683, 684, 685, 686, 687, 655, 656, 657, 658, 659, 691, 692, 724, 756, 788, 820, 821, 822, 854, 855, 856, 857, 858, 859, 827, 
[DBG]  component_weights = {0.436393, 0.0533814, 0.0558236, 0.454402}
[DBG]  opSuccess value: 1
[STAT] neighbor.sum_of_costs before recomputation: 139
[STAT] neighbor.old_sum_of_costs before recomputation: 139
[STAT] sum_of_costs before recomputation: 4185
[DBG]  Validate solution immediately after SAT success.
[DBG]  No problems after SAT replan.
[DBG]  Recomputing sum_of_cost by dividing neighbor.sum_of_costs and neighbor.old_sum_of_costs
[STAT] sum_of_costs after recomputation: 4185
[STAT] Iteration 210
[DBG]  Using SAT operator (destroy+repair SAT).
[DBG]  ====================
[DBG]  SAT destroy operator called.
[DBG]  SAT heuristic: 2
[DBG]  key_agent_id: 12
[DBG]  key_agent_id global path length: 11
[DBG]  Submap content (global positions):
[DBG]  663 664 665 666 667 
[DBG]  695 696 697 698 699 
[DBG]  727 728 729 730 731 
[DBG]  759 760 761 762 763 
[DBG]  791 792 793 794 795 
[DBG]  Map content with agents and obstacles:
[DBG]  X A X . . 
[DBG]  X . . X X 
[DBG]  . . A . . 
[DBG]  . X A X X 
[DBG]  X . A X . 
[DBG]  content of the map structure that we pass to the SAT solver:
[DBG]  -1  1  -1  1  1  
[DBG]  -1  1  1  -1  -1  
[DBG]  1  1  1  1  1  
[DBG]  1  -1  1  -1  -1  
[DBG]  -1  1  1  -1  1  
[DBG]  Identifying agents in a submap for rescheduling (when key_agent is there at the time 3):
[DBG]  Agent 12 found intervals in the sub-map:
[DBG]   [1..5]
[DBG]  Agent 12 (interval in submap: [1..5]) contains time 3, added to replan.
[DBG]  Agent 17 found intervals in the sub-map:
[DBG]   [0..0]
[DBG]  Agent 17 is not in sub-map at time 3 (intervals: 
[DBG]  [0..0] )
[DBG]  Agent 47 found intervals in the sub-map:
[DBG]   [0..4]
[DBG]  Agent 47 (interval in submap: [0..4]) contains time 3, added to replan.
[DBG]  Agent 70 found intervals in the sub-map:
[DBG]   [3..8]
[DBG]  Agent 70 (interval in submap: [3..8]) contains time 3, added to replan.
[DBG]  Agent 135 found intervals in the sub-map:
[DBG]   [0..5]
[DBG]  Agent 135 (interval in submap: [0..5]) contains time 3, added to replan.
[DBG]  Agent 142 found intervals in the sub-map:
[DBG]   [0..1] [13..18]
[DBG]  Agent 142 is not in sub-map at time 3 (intervals: 
[DBG]  [0..1] [13..18] )
[DBG]  Agent 12 | Start (global): 729 -> (local): (2, 2) at time 3 | Goal (global): 731 -> (local): (2, 4) at time 5
[DBG]  Agent 47 | Start (global): 793 -> (local): (4, 2) at time 3 | Goal (global): 792 -> (local): (4, 1) at time 4
[DBG]  Agent 70 | Start (global): 664 -> (local): (0, 1) at time 3 | Goal (global): 731 -> (local): (2, 4) at time 8
[DBG]  Agent 135 | Start (global): 761 -> (local): (3, 2) at time 3 | Goal (global): 792 -> (local): (4, 1) at time 5
[DBG]  [REPAIR] SAT destroy operator called.
[DBG]  [REPAIR] SAT operator â€“ launching subproblem FOR OPTIMIZATION.
[DBG]  Creating local paths (sx, sy) in the submap for T_sync = 3
[DBG]    Agent 12 (global paths from T=3 to 5) has local path: (2,2) (2,3) (2,4) 
[DBG]    Agent 47 (global paths from T=3 to 4) has local path: (4,2) (4,1) 
[DBG]    Agent 70 (global paths from T=3 to 8) has local path: (0,1) (1,1) (2,1) (2,2) (2,3) (2,4) 
[DBG]    Agent 135 (global paths from T=3 to 5) has local path: (3,2) (4,2) (4,1) 
[DBG]  Checking input data for SAT solver:
[DBG]    - Number of agents to replan: 4
[DBG]  Agent 12 has the original local path length: 3 => Start (2,2), Goal (2,4)
[DBG]  Agent 47 has the original local path length: 2 => Start (4,2), Goal (4,1)
[DBG]  Agent 70 has the original local path length: 6 => Start (0,1), Goal (2,4)
[DBG]  Agent 135 has the original local path length: 3 => Start (3,2), Goal (4,1)
[DBG]  Start position: (2, 2), (4, 2), (0, 1), (3, 2), 
[DBG]  Goal position: (2, 4), (4, 1), (2, 4), (4, 1), 
[DBG]  SAT instance and solver created.
Currently solving
Instance name: scen
Map name: map
Encoding used: disappear_at_goal
SAT solver used: Kissat
Optimizing function: sum of costs
Number of agents: 4
Mks LB: 6
SoC LB: 14
Delta: 0
Remaining time: 300000 [ms]

Vertex conflict! Agents 0, 1, timestep 3, location 0
Swapping conflict! Agents 0, 1, timestep 3, edge (0,0)
Vertex conflict! Agents 0, 1, timestep 4, location 0
Swapping conflict! Agents 0, 1, timestep 4, edge (0,0)
Vertex conflict! Agents 0, 1, timestep 5, location 0
Vertex conflict! Agents 0, 3, timestep 3, location 0
Swapping conflict! Agents 0, 3, timestep 3, edge (0,0)
Vertex conflict! Agents 0, 3, timestep 4, location 0
Swapping conflict! Agents 0, 3, timestep 4, edge (0,0)
Vertex conflict! Agents 0, 3, timestep 5, location 0
Vertex conflict! Agents 1, 3, timestep 3, location 0
Swapping conflict! Agents 1, 3, timestep 3, edge (0,0)
Vertex conflict! Agents 1, 3, timestep 4, location 0
Swapping conflict! Agents 1, 3, timestep 4, edge (0,0)
Vertex conflict! Agents 1, 3, timestep 5, location 0
Found plan [agents = 4] [timesteps = 6]
Agent #0 : 7 8 9 0 0 0 
Agent #1 : 13 12 0 0 0 0 
Agent #2 : 0 3 6 7 8 9 
Agent #3 : 11 13 12 0 0 0 

[STAT] Solver returned: 0
[DBG]  Agent (index) 12 | New local path (submap idx):
[DBG]  7 8 9 
[DBG]  Agent (index) 47 | New local path (submap idx):
[DBG]  13 12 
[DBG]  Agent (index) 70 | New local path (submap idx):
[DBG]  0 3 6 7 8 9 
[DBG]  Agent (index) 135 | New local path (submap idx):
[DBG]  11 13 12 
[DBG]  Update the agent path 12 | Original local length: 3 | New local length: 3
[DBG]  agent 12 t=0 => decoded (sx,sy)=(2,2) => global_id=729
[DBG]  agent 12 t=1 => decoded (sx,sy)=(2,3) => global_id=730
[DBG]  agent 12 t=2 => decoded (sx,sy)=(2,4) => global_id=731
[DBG]  Complete path of agent 12:
[DBG]    Original: 726 727 728 729 730 731 732 764 765 766 767 
[DBG]    New:     726 727 728 729 730 731 732 764 765 766 767 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 726 727 728 
[DBG]    Local path (in submap): 729 730 731 
[DBG]    Suffix (out of submap): 732 764 765 766 767 
[DBG]  Original agent path length 12 je: 11
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 0: 726, 727, 728, 729, 730, 731, 732, 764, 765, 766, 767, 
[DBG]  Path for agent 12 updated, resulting length: 11
[DBG]  Update the agent path 47 | Original local length: 2 | New local length: 2
[DBG]  agent 47 t=0 => decoded (sx,sy)=(4,2) => global_id=793
[DBG]  agent 47 t=1 => decoded (sx,sy)=(4,1) => global_id=792
[DBG]  Complete path of agent 47:
[DBG]    Original: 730 729 761 793 792 824 823 822 854 886 885 884 883 882 881 849 848 847 846 814 813 812 811 810 
[DBG]    New:     730 729 761 793 792 824 823 822 854 886 885 884 883 882 881 849 848 847 846 814 813 812 811 810 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 730 729 761 
[DBG]    Local path (in submap): 793 792 
[DBG]    Suffix (out of submap): 824 823 822 854 886 885 884 883 882 881 849 848 847 846 814 813 812 811 810 
[DBG]  Original agent path length 47 je: 24
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 1: 730, 729, 761, 793, 792, 824, 823, 822, 854, 886, 885, 884, 883, 882, 881, 849, 848, 847, 846, 814, 813, 812, 811, 810, 
[DBG]  Path for agent 47 updated, resulting length: 24
[DBG]  Update the agent path 70 | Original local length: 6 | New local length: 6
[DBG]  agent 70 t=0 => decoded (sx,sy)=(0,1) => global_id=664
[DBG]  agent 70 t=1 => decoded (sx,sy)=(1,1) => global_id=696
[DBG]  agent 70 t=2 => decoded (sx,sy)=(2,1) => global_id=728
[DBG]  agent 70 t=3 => decoded (sx,sy)=(2,2) => global_id=729
[DBG]  agent 70 t=4 => decoded (sx,sy)=(2,3) => global_id=730
[DBG]  agent 70 t=5 => decoded (sx,sy)=(2,4) => global_id=731
[DBG]  Complete path of agent 70:
[DBG]    Original: 632 600 632 664 696 728 729 730 731 732 764 765 797 829 861 860 859 858 857 856 855 887 886 885 884 883 882 914 913 912 944 976 975 974 
[DBG]    New:     632 600 632 664 696 728 729 730 731 732 764 765 797 829 861 860 859 858 857 856 855 887 886 885 884 883 882 914 913 912 944 976 975 974 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 632 600 632 
[DBG]    Local path (in submap): 664 696 728 729 730 731 
[DBG]    Suffix (out of submap): 732 764 765 797 829 861 860 859 858 857 856 855 887 886 885 884 883 882 914 913 912 944 976 975 974 
[DBG]  Original agent path length 70 je: 34
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 2: 632, 600, 632, 664, 696, 728, 729, 730, 731, 732, 764, 765, 797, 829, 861, 860, 859, 858, 857, 856, 855, 887, 886, 885, 884, 883, 882, 914, 913, 912, 944, 976, 975, 974, 
[DBG]  Path for agent 70 updated, resulting length: 34
[DBG]  Update the agent path 135 | Original local length: 3 | New local length: 3
[DBG]  agent 135 t=0 => decoded (sx,sy)=(3,2) => global_id=761
[DBG]  agent 135 t=1 => decoded (sx,sy)=(4,2) => global_id=793
[DBG]  agent 135 t=2 => decoded (sx,sy)=(4,1) => global_id=792
[DBG]  Complete path of agent 135:
[DBG]    Original: 696 728 729 761 793 792 824 823 822 854 886 885 884 883 882 881 880 879 878 877 876 875 874 873 905 904 903 902 870 838 806 774 742 710 678 677 645 613 581 580 548 516 515 483 482 450 449 448 416 384 
[DBG]    New:     696 728 729 761 793 792 824 823 822 854 886 885 884 883 882 881 880 879 878 877 876 875 874 873 905 904 903 902 870 838 806 774 742 710 678 677 645 613 581 580 548 516 515 483 482 450 449 448 416 384 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 696 728 729 
[DBG]    Local path (in submap): 761 793 792 
[DBG]    Suffix (out of submap): 824 823 822 854 886 885 884 883 882 881 880 879 878 877 876 875 874 873 905 904 903 902 870 838 806 774 742 710 678 677 645 613 581 580 548 516 515 483 482 450 449 448 416 384 
[DBG]  Original agent path length 135 je: 50
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 3: 696, 728, 729, 761, 793, 792, 824, 823, 822, 854, 886, 885, 884, 883, 882, 881, 880, 879, 878, 877, 876, 875, 874, 873, 905, 904, 903, 902, 870, 838, 806, 774, 742, 710, 678, 677, 645, 613, 581, 580, 548, 516, 515, 483, 482, 450, 449, 448, 416, 384, 
[DBG]  Path for agent 135 updated, resulting length: 50
[DBG]  Paths successfully updated.
[DBG]  (LNS.cpp) New path for agent 12: 
[DBG]  726, 727, 728, 729, 730, 731, 732, 764, 765, 766, 767, 
[DBG]  (LNS.cpp) New path for agent 47: 
[DBG]  730, 729, 761, 793, 792, 824, 823, 822, 854, 886, 885, 884, 883, 882, 881, 849, 848, 847, 846, 814, 813, 812, 811, 810, 
[DBG]  (LNS.cpp) New path for agent 70: 
[DBG]  632, 600, 632, 664, 696, 728, 729, 730, 731, 732, 764, 765, 797, 829, 861, 860, 859, 858, 857, 856, 855, 887, 886, 885, 884, 883, 882, 914, 913, 912, 944, 976, 975, 974, 
[DBG]  (LNS.cpp) New path for agent 135: 
[DBG]  696, 728, 729, 761, 793, 792, 824, 823, 822, 854, 886, 885, 884, 883, 882, 881, 880, 879, 878, 877, 876, 875, 874, 873, 905, 904, 903, 902, 870, 838, 806, 774, 742, 710, 678, 677, 645, 613, 581, 580, 548, 516, 515, 483, 482, 450, 449, 448, 416, 384, 
[DBG]  component_weights = {0.441369, 0.0529102, 0.0553308, 0.450391}
[DBG]  opSuccess value: 1
[STAT] neighbor.sum_of_costs before recomputation: 115
[STAT] neighbor.old_sum_of_costs before recomputation: 115
[STAT] sum_of_costs before recomputation: 4185
[DBG]  Validate solution immediately after SAT success.
[DBG]  No problems after SAT replan.
[DBG]  Recomputing sum_of_cost by dividing neighbor.sum_of_costs and neighbor.old_sum_of_costs
[STAT] sum_of_costs after recomputation: 4185
[STAT] Iteration 211
[DBG]  Using SAT operator (destroy+repair SAT).
[DBG]  ====================
[DBG]  SAT destroy operator called.
[DBG]  SAT heuristic: 2
[DBG]  key_agent_id: 7
[DBG]  key_agent_id global path length: 21
[DBG]  Submap content (global positions):
[DBG]  658 659 660 661 662 
[DBG]  690 691 692 693 694 
[DBG]  722 723 724 725 726 
[DBG]  754 755 756 757 758 
[DBG]  786 787 788 789 790 
[DBG]  Map content with agents and obstacles:
[DBG]  . . . A X 
[DBG]  X . . X X 
[DBG]  . X A . A 
[DBG]  X . A . X 
[DBG]  . . A X . 
[DBG]  content of the map structure that we pass to the SAT solver:
[DBG]  1  1  1  1  -1  
[DBG]  -1  1  1  -1  -1  
[DBG]  1  -1  1  1  1  
[DBG]  -1  1  1  1  -1  
[DBG]  1  1  1  -1  1  
[DBG]  Identifying agents in a submap for rescheduling (when key_agent is there at the time 6):
[DBG]  Agent 7 found intervals in the sub-map:
[DBG]   [0..11]
[DBG]  Agent 7 (interval in submap: [0..11]) contains time 6, added to replan.
[DBG]  Agent 28 found intervals in the sub-map:
[DBG]   [0..22] [33..38]
[DBG]  Agent 28 (interval in submap: [0..22]) contains time 6, added to replan.
[DBG]  Agent 46 found intervals in the sub-map:
[DBG]   [0..6]
[DBG]  Agent 46 (interval in submap: [0..6]) contains time 6, added to replan.
[DBG]  Agent 63 found intervals in the sub-map:
[DBG]  
[DBG]  Agent 63 is not in sub-map at time 6 (intervals: 
[DBG]  )
[DBG]  Agent 91 found intervals in the sub-map:
[DBG]   [0..5]
[DBG]  Agent 91 is not in sub-map at time 6 (intervals: 
[DBG]  [0..5] )
[DBG]  Agent 108 found intervals in the sub-map:
[DBG]   [1..6]
[DBG]  Agent 108 (interval in submap: [1..6]) contains time 6, added to replan.
[DBG]  Agent 109 found intervals in the sub-map:
[DBG]   [3..9]
[DBG]  Agent 109 (interval in submap: [3..9]) contains time 6, added to replan.
[DBG]  Agent 7 | Start (global): 724 -> (local): (2, 2) at time 6 | Goal (global): 788 -> (local): (4, 2) at time 11
[DBG]  Agent 28 | Start (global): 661 -> (local): (0, 3) at time 6 | Goal (global): 661 -> (local): (0, 3) at time 22
[DBG]  Agent 46 | Start (global): 726 -> (local): (2, 4) at time 6 | Goal (global): 726 -> (local): (2, 4) at time 6
[DBG]  Agent 108 | Start (global): 788 -> (local): (4, 2) at time 6 | Goal (global): 788 -> (local): (4, 2) at time 6
[DBG]  Agent 109 | Start (global): 756 -> (local): (3, 2) at time 6 | Goal (global): 726 -> (local): (2, 4) at time 9
[DBG]  [REPAIR] SAT destroy operator called.
[DBG]  [REPAIR] SAT operator â€“ launching subproblem FOR OPTIMIZATION.
[DBG]  Creating local paths (sx, sy) in the submap for T_sync = 6
[DBG]    Agent 7 (global paths from T=6 to 11) has local path: (2,2) (2,2) (2,2) (2,2) (3,2) (4,2) 
[DBG]    Agent 28 (global paths from T=6 to 22) has local path: (0,3) (0,3) (0,3) (0,3) (0,3) (0,3) (0,3) (0,3) (0,3) (0,3) (0,3) (0,3) (0,3) (0,3) (0,3) (0,3) (0,3) 
[DBG]    Agent 46 (global paths from T=6 to 6) has local path: (2,4) 
[DBG]    Agent 108 (global paths from T=6 to 6) has local path: (4,2) 
[DBG]    Agent 109 (global paths from T=6 to 9) has local path: (3,2) (3,3) (2,3) (2,4) 
[DBG]  Checking input data for SAT solver:
[DBG]    - Number of agents to replan: 5
[DBG]  Agent 7 has the original local path length: 6 => Start (2,2), Goal (4,2)
[DBG]  Agent 28 has the original local path length: 17 => Start (0,3), Goal (0,3)
[DBG]  Agent 46 has the original local path length: 1 => Start (2,4), Goal (2,4)
[DBG]  Agent 108 has the original local path length: 1 => Start (4,2), Goal (4,2)
[DBG]  Agent 109 has the original local path length: 4 => Start (3,2), Goal (2,4)
[DBG]  Start position: (2, 2), (0, 3), (2, 4), (4, 2), (3, 2), 
[DBG]  Goal position: (4, 2), (0, 3), (2, 4), (4, 2), (2, 4), 
[DBG]  SAT instance and solver created.
Currently solving
Instance name: scen
Map name: map
Encoding used: disappear_at_goal
SAT solver used: Kissat
Optimizing function: sum of costs
Number of agents: 5
Mks LB: 4
SoC LB: 10
Delta: 0
Remaining time: 300000 [ms]

Vertex conflict! Agents 0, 1, timestep 3, location 0
Vertex conflict! Agents 0, 2, timestep 3, location 0
Vertex conflict! Agents 0, 3, timestep 3, location 0
Vertex conflict! Agents 1, 2, timestep 1, location 0
Swapping conflict! Agents 1, 2, timestep 1, edge (0,0)
Vertex conflict! Agents 1, 2, timestep 2, location 0
Swapping conflict! Agents 1, 2, timestep 2, edge (0,0)
Vertex conflict! Agents 1, 2, timestep 3, location 0
Vertex conflict! Agents 1, 3, timestep 1, location 0
Swapping conflict! Agents 1, 3, timestep 1, edge (0,0)
Vertex conflict! Agents 1, 3, timestep 2, location 0
Swapping conflict! Agents 1, 3, timestep 2, edge (0,0)
Vertex conflict! Agents 1, 3, timestep 3, location 0
Vertex conflict! Agents 2, 3, timestep 1, location 0
Swapping conflict! Agents 2, 3, timestep 1, edge (0,0)
Vertex conflict! Agents 2, 3, timestep 2, location 0
Swapping conflict! Agents 2, 3, timestep 2, edge (0,0)
Vertex conflict! Agents 2, 3, timestep 3, location 0
Found plan [agents = 5] [timesteps = 4]
Agent #0 : 7 11 15 0 
Agent #1 : 3 0 0 0 
Agent #2 : 9 0 0 0 
Agent #3 : 15 0 0 0 
Agent #4 : 11 12 8 9 

[STAT] Solver returned: 0
[DBG]  Agent (index) 7 | New local path (submap idx):
[DBG]  7 11 15 
[DBG]  Agent (index) 28 | New local path (submap idx):
[DBG]  3 
[DBG]  Agent (index) 46 | New local path (submap idx):
[DBG]  9 
[DBG]  Agent (index) 108 | New local path (submap idx):
[DBG]  15 
[DBG]  Agent (index) 109 | New local path (submap idx):
[DBG]  11 12 8 9 
[DBG]  Update the agent path 7 | Original local length: 6 | New local length: 3
[DBG]  agent 7 t=0 => decoded (sx,sy)=(2,2) => global_id=724
[DBG]  agent 7 t=1 => decoded (sx,sy)=(3,2) => global_id=756
[DBG]  agent 7 t=2 => decoded (sx,sy)=(4,2) => global_id=788
[DBG]  Complete path of agent 7:
[DBG]    Original: 756 724 725 725 724 724 724 724 724 724 756 788 820 821 822 854 855 887 919 920 921 
[DBG]    New:     756 724 725 725 724 724 724 756 788 820 821 822 854 855 887 919 920 921 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 756 724 725 725 724 724 
[DBG]    Local path (in submap): 724 756 788 820 821 822 
[DBG]    Suffix (out of submap): 854 855 887 919 920 921 
[DBG]  Original agent path length 7 je: 21
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 0: 756, 724, 725, 725, 724, 724, 724, 756, 788, 820, 821, 822, 854, 855, 887, 919, 920, 921, 
[DBG]  Path for agent 7 updated, resulting length: 18
[DBG]  Update the agent path 28 | Original local length: 17 | New local length: 1
[DBG]  agent 28 t=0 => decoded (sx,sy)=(0,3) => global_id=661
[DBG]  Complete path of agent 28:
[DBG]    Original: 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 629 628 627 627 627 627 627 627 627 627 659 691 692 724 725 726 727 
[DBG]    New:     661 661 661 661 661 661 661 629 628 627 627 627 627 627 627 627 627 659 691 692 724 725 726 727 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 661 661 661 661 661 661 
[DBG]    Local path (in submap): 661 629 628 627 627 627 627 627 627 627 627 659 691 692 724 725 726 
[DBG]    Suffix (out of submap): 727 
[DBG]  Original agent path length 28 je: 40
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 1: 661, 661, 661, 661, 661, 661, 661, 629, 628, 627, 627, 627, 627, 627, 627, 627, 627, 659, 691, 692, 724, 725, 726, 727, 
[DBG]  Path for agent 28 updated, resulting length: 24
[DBG]  Update the agent path 46 | Original local length: 1 | New local length: 1
[DBG]  agent 46 t=0 => decoded (sx,sy)=(2,4) => global_id=726
[DBG]  Complete path of agent 46:
[DBG]    Original: 786 787 755 756 757 725 726 727 728 696 664 632 600 601 569 570 571 539 507 508 476 444 412 380 348 349 317 285 284 252 
[DBG]    New:     786 787 755 756 757 725 726 727 728 696 664 632 600 601 569 570 571 539 507 508 476 444 412 380 348 349 317 285 284 252 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 786 787 755 756 757 725 
[DBG]    Local path (in submap): 726 
[DBG]    Suffix (out of submap): 727 728 696 664 632 600 601 569 570 571 539 507 508 476 444 412 380 348 349 317 285 284 252 
[DBG]  Original agent path length 46 je: 30
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 2: 786, 787, 755, 756, 757, 725, 726, 727, 728, 696, 664, 632, 600, 601, 569, 570, 571, 539, 507, 508, 476, 444, 412, 380, 348, 349, 317, 285, 284, 252, 
[DBG]  Path for agent 46 updated, resulting length: 30
[DBG]  Update the agent path 108 | Original local length: 1 | New local length: 1
[DBG]  agent 108 t=0 => decoded (sx,sy)=(4,2) => global_id=788
[DBG]  Complete path of agent 108:
[DBG]    Original: 628 660 692 724 756 788 788 820 821 822 854 855 887 919 920 921 953 954 955 956 957 989 1021 
[DBG]    New:     628 660 692 724 756 788 788 820 821 822 854 855 887 919 920 921 953 954 955 956 957 989 1021 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 628 660 692 724 756 788 
[DBG]    Local path (in submap): 788 
[DBG]    Suffix (out of submap): 820 821 822 854 855 887 919 920 921 953 954 955 956 957 989 1021 
[DBG]  Original agent path length 108 je: 23
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 3: 628, 660, 692, 724, 756, 788, 788, 820, 821, 822, 854, 855, 887, 919, 920, 921, 953, 954, 955, 956, 957, 989, 1021, 
[DBG]  Path for agent 108 updated, resulting length: 23
[DBG]  Update the agent path 109 | Original local length: 4 | New local length: 4
[DBG]  agent 109 t=0 => decoded (sx,sy)=(3,2) => global_id=756
[DBG]  agent 109 t=1 => decoded (sx,sy)=(3,3) => global_id=757
[DBG]  agent 109 t=2 => decoded (sx,sy)=(2,3) => global_id=725
[DBG]  agent 109 t=3 => decoded (sx,sy)=(2,4) => global_id=726
[DBG]  Complete path of agent 109:
[DBG]    Original: 882 850 818 786 787 755 756 757 725 726 727 728 696 664 632 600 601 569 569 570 571 539 540 508 509 477 478 479 447 415 
[DBG]    New:     882 850 818 786 787 755 756 757 725 726 727 728 696 664 632 600 601 569 569 570 571 539 540 508 509 477 478 479 447 415 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 882 850 818 786 787 755 
[DBG]    Local path (in submap): 756 757 725 726 
[DBG]    Suffix (out of submap): 727 728 696 664 632 600 601 569 569 570 571 539 540 508 509 477 478 479 447 415 
[DBG]  Original agent path length 109 je: 30
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 4: 882, 850, 818, 786, 787, 755, 756, 757, 725, 726, 727, 728, 696, 664, 632, 600, 601, 569, 569, 570, 571, 539, 540, 508, 509, 477, 478, 479, 447, 415, 
[DBG]  Path for agent 109 updated, resulting length: 30
[DBG]  Paths successfully updated.
[DBG]  (LNS.cpp) New path for agent 7: 
[DBG]  756, 724, 725, 725, 724, 724, 724, 756, 788, 820, 821, 822, 854, 855, 887, 919, 920, 921, 
[DBG]  (LNS.cpp) New path for agent 28: 
[DBG]  661, 661, 661, 661, 661, 661, 661, 629, 628, 627, 627, 627, 627, 627, 627, 627, 627, 659, 691, 692, 724, 725, 726, 727, 
[DBG]  (LNS.cpp) New path for agent 46: 
[DBG]  786, 787, 755, 756, 757, 725, 726, 727, 728, 696, 664, 632, 600, 601, 569, 570, 571, 539, 507, 508, 476, 444, 412, 380, 348, 349, 317, 285, 284, 252, 
[DBG]  (LNS.cpp) New path for agent 108: 
[DBG]  628, 660, 692, 724, 756, 788, 788, 820, 821, 822, 854, 855, 887, 919, 920, 921, 953, 954, 955, 956, 957, 989, 1021, 
[DBG]  (LNS.cpp) New path for agent 109: 
[DBG]  882, 850, 818, 786, 787, 755, 756, 757, 725, 726, 727, 728, 696, 664, 632, 600, 601, 569, 569, 570, 571, 539, 540, 508, 509, 477, 478, 479, 447, 415, 
[DBG]  component_weights = {0.437076, 0.0523957, 0.0547927, 0.455735}
[DBG]  opSuccess value: 1
[STAT] neighbor.sum_of_costs before recomputation: 120
[STAT] neighbor.old_sum_of_costs before recomputation: 139
[STAT] sum_of_costs before recomputation: 4185
[DBG]  Validate solution immediately after SAT success.
[WARNING] Problem after SAT: Edge conflict between agents 7 and 11 at edge (919,920) at timestep 16
[DBG]  Attempting immediate repair via init_lns because problem occurred after SAT (should be applied only for conflicts...).
[DBG]  Passing 150 agents to init_lns (skip=true).
[DBG]  path_table contents for selected agents (neighbor.agents):
[DBG]    Agent 7 => controlling path length=18
[DBG]    Agent 28 => controlling path length=24
[DBG]    Agent 46 => controlling path length=30
[DBG]    Agent 108 => controlling path length=23
[DBG]    Agent 109 => controlling path length=30
[DBG]  hodnota skip_initial_solution=1
[DBG]  We skip initialSolution => call buildCollisionData()
[DBG]  buildCollisionData() called â€“ skip_initial_solution case.
[DBG]  Agents.size()=150, collision_graph.size()=150
[DBG]  agent 7 => updateCollidingPairs => foundCollision
[DBG]  agent 11 => updateCollidingPairs => foundCollision
[DBG]  agent 28 => updateCollidingPairs => foundCollision
[DBG]  agent 39 => updateCollidingPairs => foundCollision
[DBG]  agent 42 => updateCollidingPairs => foundCollision
[DBG]  agent 86 => updateCollidingPairs => foundCollision
[DBG]  agent 111 => updateCollidingPairs => foundCollision
[DBG]  agent 114 => updateCollidingPairs => foundCollision
[DBG]  Conflicting agent pairs:
[DBG]  agent 7 is in conflict with agent 11
[DBG]  agent 28 is in conflict with agent 39
[DBG]  agent 28 is in conflict with agent 42
[DBG]  agent 28 is in conflict with agent 86
[DBG]  agent 28 is in conflict with agent 111
[DBG]  agent 28 is in conflict with agent 114
[DBG]  buildCollisionData() => sum_of_costs=4166, num_of_colliding_pairs=6
[DBG]  buildCollisionData done => sum_of_costs=4166, num_of_colliding_pairs=6
[DBG]  sum_of_cost hodnota: 4166
[DBG]  After skip/init build => iteration_stats.back(): sum_of_costs=4166, collisions=6
[DEBUG] Using default neighbor generation strategy for conflicts: 2
[DEBUG] Using default neighbor generation strategy for conflicts: 1
[DEBUG] Using default neighbor generation strategy for conflicts: 2
[DEBUG] Using default neighbor generation strategy for conflicts: 2
[DEBUG] Using default neighbor generation strategy for conflicts: 2
	InitLNS(PP): runtime = 0.0335069, iterations = 6, colliding pairs = 0, initial colliding pairs = 6, solution cost = 4171, initial solution cost = 4166, failed iterations = 0
[DBG]  init_lns->sum_of_costs after init_lns->run: 4171
[DBG]  sum_of_costs after assignment from init_lns->run: 4171
[DBG]  Recomputing sum_of_cost by dividing neighbor.sum_of_costs and neighbor.old_sum_of_costs
[STAT] sum_of_costs after recomputation: 4171
[STAT] Iteration 212
[DBG]  Using SAT operator (destroy+repair SAT).
[DBG]  ====================
[DBG]  SAT destroy operator called.
[DBG]  SAT heuristic: 2
[DBG]  key_agent_id: 138
[DBG]  key_agent_id global path length: 7
[DBG]  Submap content (global positions):
[DBG]  229 230 231 232 233 
[DBG]  261 262 263 264 265 
[DBG]  293 294 295 296 297 
[DBG]  325 326 327 328 329 
[DBG]  357 358 359 360 361 
[DBG]  Map content with agents and obstacles:
[DBG]  X . . . . 
[DBG]  . X . A A 
[DBG]  . . A . . 
[DBG]  . . . . . 
[DBG]  . . . . . 
[DBG]  content of the map structure that we pass to the SAT solver:
[DBG]  -1  1  1  1  1  
[DBG]  1  -1  1  1  1  
[DBG]  1  1  1  1  1  
[DBG]  1  1  1  1  1  
[DBG]  1  1  1  1  1  
[DBG]  Identifying agents in a submap for rescheduling (when key_agent is there at the time 2):
[DBG]  Agent 9 found intervals in the sub-map:
[DBG]  
[DBG]  Agent 9 is not in sub-map at time 2 (intervals: 
[DBG]  )
[DBG]  Agent 22 found intervals in the sub-map:
[DBG]   [0..2]
[DBG]  Agent 22 (interval in submap: [0..2]) contains time 2, added to replan.
[DBG]  Agent 87 found intervals in the sub-map:
[DBG]   [0..6]
[DBG]  Agent 87 (interval in submap: [0..6]) contains time 2, added to replan.
[DBG]  Agent 138 found intervals in the sub-map:
[DBG]   [0..4]
[DBG]  Agent 138 (interval in submap: [0..4]) contains time 2, added to replan.
[DBG]  Agent 22 | Start (global): 265 -> (local): (1, 4) at time 2 | Goal (global): 265 -> (local): (1, 4) at time 2
[DBG]  Agent 87 | Start (global): 264 -> (local): (1, 3) at time 2 | Goal (global): 359 -> (local): (4, 2) at time 6
[DBG]  Agent 138 | Start (global): 295 -> (local): (2, 2) at time 2 | Goal (global): 231 -> (local): (0, 2) at time 4
[DBG]  [REPAIR] SAT destroy operator called.
[DBG]  [REPAIR] SAT operator â€“ launching subproblem FOR OPTIMIZATION.
[DBG]  Creating local paths (sx, sy) in the submap for T_sync = 2
[DBG]    Agent 22 (global paths from T=2 to 2) has local path: (1,4) 
[DBG]    Agent 87 (global paths from T=2 to 6) has local path: (1,3) (2,3) (3,3) (3,2) (4,2) 
[DBG]    Agent 138 (global paths from T=2 to 4) has local path: (2,2) (1,2) (0,2) 
[DBG]  Checking input data for SAT solver:
[DBG]    - Number of agents to replan: 3
[DBG]  Agent 22 has the original local path length: 1 => Start (1,4), Goal (1,4)
[DBG]  Agent 87 has the original local path length: 5 => Start (1,3), Goal (4,2)
[DBG]  Agent 138 has the original local path length: 3 => Start (2,2), Goal (0,2)
[DBG]  Start position: (1, 4), (1, 3), (2, 2), 
[DBG]  Goal position: (1, 4), (4, 2), (0, 2), 
[DBG]  SAT instance and solver created.
Currently solving
Instance name: scen
Map name: map
Encoding used: disappear_at_goal
SAT solver used: Kissat
Optimizing function: sum of costs
Number of agents: 3
Mks LB: 5
SoC LB: 9
Delta: 0
Remaining time: 300000 [ms]

Vertex conflict! Agents 0, 2, timestep 3, location 0
Swapping conflict! Agents 0, 2, timestep 3, edge (0,0)
Vertex conflict! Agents 0, 2, timestep 4, location 0
Found plan [agents = 3] [timesteps = 5]
Agent #0 : 7 0 0 0 0 
Agent #1 : 6 11 16 21 20 
Agent #2 : 10 5 1 0 0 

[STAT] Solver returned: 0
[DBG]  Agent (index) 22 | New local path (submap idx):
[DBG]  7 
[DBG]  Agent (index) 87 | New local path (submap idx):
[DBG]  6 11 16 21 20 
[DBG]  Agent (index) 138 | New local path (submap idx):
[DBG]  10 5 1 
[DBG]  Update the agent path 22 | Original local length: 1 | New local length: 1
[DBG]  agent 22 t=0 => decoded (sx,sy)=(1,4) => global_id=265
[DBG]  Complete path of agent 22:
[DBG]    Original: 329 297 265 266 267 268 300 301 302 303 335 336 337 338 338 339 
[DBG]    New:     329 297 265 266 267 268 300 301 302 303 335 336 337 338 338 339 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 329 297 
[DBG]    Local path (in submap): 265 
[DBG]    Suffix (out of submap): 266 267 268 300 301 302 303 335 336 337 338 338 339 
[DBG]  Original agent path length 22 je: 16
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 0: 329, 297, 265, 266, 267, 268, 300, 301, 302, 303, 335, 336, 337, 338, 338, 339, 
[DBG]  Path for agent 22 updated, resulting length: 16
[DBG]  Update the agent path 87 | Original local length: 5 | New local length: 5
[DBG]  agent 87 t=0 => decoded (sx,sy)=(1,3) => global_id=264
[DBG]  agent 87 t=1 => decoded (sx,sy)=(2,3) => global_id=296
[DBG]  agent 87 t=2 => decoded (sx,sy)=(3,3) => global_id=328
[DBG]  agent 87 t=3 => decoded (sx,sy)=(4,3) => global_id=360
[DBG]  agent 87 t=4 => decoded (sx,sy)=(4,2) => global_id=359
[DBG]  Complete path of agent 87:
[DBG]    Original: 231 232 264 296 328 327 359 391 390 422 454 486 485 517 517 517 549 549 550 551 583 615 647 648 680 712 713 714 
[DBG]    New:     231 232 264 296 328 360 359 391 390 422 454 486 485 517 517 517 549 549 550 551 583 615 647 648 680 712 713 714 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 231 232 
[DBG]    Local path (in submap): 264 296 328 360 359 
[DBG]    Suffix (out of submap): 391 390 422 454 486 485 517 517 517 549 549 550 551 583 615 647 648 680 712 713 714 
[DBG]  Original agent path length 87 je: 28
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 1: 231, 232, 264, 296, 328, 360, 359, 391, 390, 422, 454, 486, 485, 517, 517, 517, 549, 549, 550, 551, 583, 615, 647, 648, 680, 712, 713, 714, 
[DBG]  Path for agent 87 updated, resulting length: 28
[DBG]  Update the agent path 138 | Original local length: 3 | New local length: 3
[DBG]  agent 138 t=0 => decoded (sx,sy)=(2,2) => global_id=295
[DBG]  agent 138 t=1 => decoded (sx,sy)=(1,2) => global_id=263
[DBG]  agent 138 t=2 => decoded (sx,sy)=(0,2) => global_id=231
[DBG]  Complete path of agent 138:
[DBG]    Original: 293 294 295 263 231 199 167 
[DBG]    New:     293 294 295 263 231 199 167 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 293 294 
[DBG]    Local path (in submap): 295 263 231 
[DBG]    Suffix (out of submap): 199 167 
[DBG]  Original agent path length 138 je: 7
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 2: 293, 294, 295, 263, 231, 199, 167, 
[DBG]  Path for agent 138 updated, resulting length: 7
[DBG]  Paths successfully updated.
[DBG]  (LNS.cpp) New path for agent 22: 
[DBG]  329, 297, 265, 266, 267, 268, 300, 301, 302, 303, 335, 336, 337, 338, 338, 339, 
[DBG]  (LNS.cpp) New path for agent 87: 
[DBG]  231, 232, 264, 296, 328, 360, 359, 391, 390, 422, 454, 486, 485, 517, 517, 517, 549, 549, 550, 551, 583, 615, 647, 648, 680, 712, 713, 714, 
[DBG]  (LNS.cpp) New path for agent 138: 
[DBG]  293, 294, 295, 263, 231, 199, 167, 
[DBG]  component_weights = {0.442053, 0.0519324, 0.0543083, 0.451706}
[DBG]  opSuccess value: 1
[STAT] neighbor.sum_of_costs before recomputation: 48
[STAT] neighbor.old_sum_of_costs before recomputation: 48
[STAT] sum_of_costs before recomputation: 4171
[DBG]  Validate solution immediately after SAT success.
[WARNING] Problem after SAT: Vertex conflict between agents 16 and 87 at location 360 at timestep 5
[DBG]  Attempting immediate repair via init_lns because problem occurred after SAT (should be applied only for conflicts...).
[DBG]  Passing 150 agents to init_lns (skip=true).
[DBG]  path_table contents for selected agents (neighbor.agents):
[DBG]    Agent 22 => controlling path length=16
[DBG]    Agent 87 => controlling path length=28
[DBG]    Agent 138 => controlling path length=7
[DBG]  hodnota skip_initial_solution=1
[DBG]  We skip initialSolution => call buildCollisionData()
[DBG]  buildCollisionData() called â€“ skip_initial_solution case.
[DBG]  Agents.size()=150, collision_graph.size()=150
[DBG]  agent 16 => updateCollidingPairs => foundCollision
[DBG]  agent 87 => updateCollidingPairs => foundCollision
[DBG]  Conflicting agent pairs:
[DBG]  agent 16 is in conflict with agent 87
[DBG]  buildCollisionData() => sum_of_costs=4171, num_of_colliding_pairs=1
[DBG]  buildCollisionData done => sum_of_costs=4171, num_of_colliding_pairs=1
[DBG]  sum_of_cost hodnota: 4171
[DBG]  After skip/init build => iteration_stats.back(): sum_of_costs=4171, collisions=1
[DEBUG] Using default neighbor generation strategy for conflicts: 1
	InitLNS(PP): runtime = 0.00756696, iterations = 2, colliding pairs = 0, initial colliding pairs = 1, solution cost = 4177, initial solution cost = 4171, failed iterations = 0
[DBG]  init_lns->sum_of_costs after init_lns->run: 4177
[DBG]  sum_of_costs after assignment from init_lns->run: 4177
[DBG]  Recomputing sum_of_cost by dividing neighbor.sum_of_costs and neighbor.old_sum_of_costs
[STAT] sum_of_costs after recomputation: 4177
[STAT] Iteration 213
[DBG]  Using SAT operator (destroy+repair SAT).
[DBG]  ====================
[DBG]  SAT destroy operator called.
[DBG]  SAT heuristic: 2
[DBG]  key_agent_id: 104
[DBG]  key_agent_id global path length: 19
[DBG]  Submap content (global positions):
[DBG]  435 436 437 438 439 
[DBG]  467 468 469 470 471 
[DBG]  499 500 501 502 503 
[DBG]  531 532 533 534 535 
[DBG]  563 564 565 566 567 
[DBG]  Map content with agents and obstacles:
[DBG]  . X . A A 
[DBG]  A A . . X 
[DBG]  . X A A . 
[DBG]  . X . . X 
[DBG]  . X . . X 
[DBG]  content of the map structure that we pass to the SAT solver:
[DBG]  1  -1  1  1  1  
[DBG]  1  1  1  1  -1  
[DBG]  1  -1  1  1  1  
[DBG]  1  -1  1  1  -1  
[DBG]  1  -1  1  1  -1  
[DBG]  Identifying agents in a submap for rescheduling (when key_agent is there at the time 9):
[DBG]  Agent 3 found intervals in the sub-map:
[DBG]   [0..21]
[DBG]  Agent 3 (interval in submap: [0..21]) contains time 9, added to replan.
[DBG]  Agent 10 found intervals in the sub-map:
[DBG]   [14..18]
[DBG]  Agent 10 is not in sub-map at time 9 (intervals: 
[DBG]  [14..18] )
[DBG]  Agent 75 found intervals in the sub-map:
[DBG]   [9..10]
[DBG]  Agent 75 (interval in submap: [9..10]) contains time 9, added to replan.
[DBG]  Agent 92 found intervals in the sub-map:
[DBG]  
[DBG]  Agent 92 is not in sub-map at time 9 (intervals: 
[DBG]  )
[DBG]  Agent 104 found intervals in the sub-map:
[DBG]   [0..11]
[DBG]  Agent 104 (interval in submap: [0..11]) contains time 9, added to replan.
[DBG]  Agent 106 found intervals in the sub-map:
[DBG]   [8..10]
[DBG]  Agent 106 (interval in submap: [8..10]) contains time 9, added to replan.
[DBG]  Agent 128 found intervals in the sub-map:
[DBG]   [8..21]
[DBG]  Agent 128 (interval in submap: [8..21]) contains time 9, added to replan.
[DBG]  Agent 136 found intervals in the sub-map:
[DBG]   [1..1]
[DBG]  Agent 136 is not in sub-map at time 9 (intervals: 
[DBG]  [1..1] )
[DBG]  Agent 149 found intervals in the sub-map:
[DBG]   [9..9]
[DBG]  Agent 149 (interval in submap: [9..9]) contains time 9, added to replan.
[DBG]  Agent 3 | Start (global): 468 -> (local): (1, 1) at time 9 | Goal (global): 499 -> (local): (2, 0) at time 21
[DBG]  Agent 75 | Start (global): 438 -> (local): (0, 3) at time 9 | Goal (global): 439 -> (local): (0, 4) at time 10
[DBG]  Agent 104 | Start (global): 501 -> (local): (2, 2) at time 9 | Goal (global): 437 -> (local): (0, 2) at time 11
[DBG]  Agent 106 | Start (global): 467 -> (local): (1, 0) at time 9 | Goal (global): 499 -> (local): (2, 0) at time 10
[DBG]  Agent 128 | Start (global): 502 -> (local): (2, 3) at time 9 | Goal (global): 467 -> (local): (1, 0) at time 21
[DBG]  Agent 149 | Start (global): 439 -> (local): (0, 4) at time 9 | Goal (global): 439 -> (local): (0, 4) at time 9
[DBG]  [REPAIR] SAT destroy operator called.
[DBG]  [REPAIR] SAT operator â€“ launching subproblem FOR OPTIMIZATION.
[DBG]  Creating local paths (sx, sy) in the submap for T_sync = 9
[DBG]    Agent 3 (global paths from T=9 to 21) has local path: (1,1) (1,1) (1,1) (1,1) (1,1) (1,1) (1,1) (1,1) (1,1) (1,0) (1,0) (1,0) (2,0) 
[DBG]    Agent 75 (global paths from T=9 to 10) has local path: (0,3) (0,4) 
[DBG]    Agent 104 (global paths from T=9 to 11) has local path: (2,2) (1,2) (0,2) 
[DBG]    Agent 106 (global paths from T=9 to 10) has local path: (1,0) (2,0) 
[DBG]    Agent 128 (global paths from T=9 to 21) has local path: (2,3) (1,3) (1,2) (1,2) (1,2) (1,2) (1,2) (1,2) (1,2) (1,2) (1,2) (1,1) (1,0) 
[DBG]    Agent 149 (global paths from T=9 to 9) has local path: (0,4) 
[DBG]  Checking input data for SAT solver:
[DBG]    - Number of agents to replan: 6
[DBG]  Agent 3 has the original local path length: 13 => Start (1,1), Goal (2,0)
[DBG]  Agent 75 has the original local path length: 2 => Start (0,3), Goal (0,4)
[DBG]  Agent 104 has the original local path length: 3 => Start (2,2), Goal (0,2)
[DBG]  Agent 106 has the original local path length: 2 => Start (1,0), Goal (2,0)
[DBG]  Agent 128 has the original local path length: 13 => Start (2,3), Goal (1,0)
[DBG]  Agent 149 has the original local path length: 1 => Start (0,4), Goal (0,4)
[DBG]  Start position: (1, 1), (0, 3), (2, 2), (1, 0), (2, 3), (0, 4), 
[DBG]  Goal position: (2, 0), (0, 4), (0, 2), (2, 0), (1, 0), (0, 4), 
[DBG]  SAT instance and solver created.
Currently solving
Instance name: scen
Map name: map
Encoding used: disappear_at_goal
SAT solver used: Kissat
Optimizing function: sum of costs
Number of agents: 6
Mks LB: 5
SoC LB: 16
Delta: 0
Remaining time: 300000 [ms]

Vertex conflict! Agents 0, 1, timestep 3, location 0
Swapping conflict! Agents 0, 1, timestep 3, edge (0,0)
Vertex conflict! Agents 0, 1, timestep 4, location 0
Vertex conflict! Agents 0, 2, timestep 3, location 0
Swapping conflict! Agents 0, 2, timestep 3, edge (0,0)
Vertex conflict! Agents 0, 2, timestep 4, location 0
Vertex conflict! Agents 0, 3, timestep 3, location 0
Swapping conflict! Agents 0, 3, timestep 3, edge (0,0)
Vertex conflict! Agents 0, 3, timestep 4, location 0
Vertex conflict! Agents 0, 5, timestep 3, location 0
Swapping conflict! Agents 0, 5, timestep 3, edge (0,0)
Vertex conflict! Agents 0, 5, timestep 4, location 0
Vertex conflict! Agents 1, 2, timestep 3, location 0
Swapping conflict! Agents 1, 2, timestep 3, edge (0,0)
Vertex conflict! Agents 1, 2, timestep 4, location 0
Vertex conflict! Agents 1, 3, timestep 2, location 0
Swapping conflict! Agents 1, 3, timestep 2, edge (0,0)
Vertex conflict! Agents 1, 3, timestep 3, location 0
Swapping conflict! Agents 1, 3, timestep 3, edge (0,0)
Vertex conflict! Agents 1, 3, timestep 4, location 0
Vertex conflict! Agents 1, 5, timestep 2, location 0
Swapping conflict! Agents 1, 5, timestep 2, edge (0,0)
Vertex conflict! Agents 1, 5, timestep 3, location 0
Swapping conflict! Agents 1, 5, timestep 3, edge (0,0)
Vertex conflict! Agents 1, 5, timestep 4, location 0
Vertex conflict! Agents 2, 3, timestep 3, location 0
Swapping conflict! Agents 2, 3, timestep 3, edge (0,0)
Vertex conflict! Agents 2, 3, timestep 4, location 0
Vertex conflict! Agents 2, 5, timestep 3, location 0
Swapping conflict! Agents 2, 5, timestep 3, edge (0,0)
Vertex conflict! Agents 2, 5, timestep 4, location 0
Vertex conflict! Agents 3, 5, timestep 2, location 0
Swapping conflict! Agents 3, 5, timestep 2, edge (0,0)
Vertex conflict! Agents 3, 5, timestep 3, location 0
Swapping conflict! Agents 3, 5, timestep 3, edge (0,0)
Vertex conflict! Agents 3, 5, timestep 4, location 0
Found plan [agents = 6] [timesteps = 5]
Agent #0 : 5 4 8 0 0 
Agent #1 : 2 3 0 0 0 
Agent #2 : 9 6 1 0 0 
Agent #3 : 4 8 0 0 0 
Agent #4 : 10 9 6 5 4 
Agent #5 : 3 0 0 0 0 

[STAT] Solver returned: 0
[DBG]  Agent (index) 3 | New local path (submap idx):
[DBG]  5 4 8 
[DBG]  Agent (index) 75 | New local path (submap idx):
[DBG]  2 3 
[DBG]  Agent (index) 104 | New local path (submap idx):
[DBG]  9 6 1 
[DBG]  Agent (index) 106 | New local path (submap idx):
[DBG]  4 8 
[DBG]  Agent (index) 128 | New local path (submap idx):
[DBG]  10 9 6 5 4 
[DBG]  Agent (index) 149 | New local path (submap idx):
[DBG]  3 
[DBG]  Update the agent path 3 | Original local length: 13 | New local length: 3
[DBG]  agent 3 t=0 => decoded (sx,sy)=(1,1) => global_id=468
[DBG]  agent 3 t=1 => decoded (sx,sy)=(1,0) => global_id=467
[DBG]  agent 3 t=2 => decoded (sx,sy)=(2,0) => global_id=499
[DBG]  Complete path of agent 3:
[DBG]    Original: 468 468 468 468 468 468 468 468 468 468 468 468 468 468 468 468 468 468 467 467 467 499 498 530 529 561 593 625 657 689 721 720 719 751 783 815 847 848 880 912 
[DBG]    New:     468 468 468 468 468 468 468 468 468 468 467 499 498 530 529 561 593 625 657 689 721 720 719 751 783 815 847 848 880 912 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 468 468 468 468 468 468 468 468 468 
[DBG]    Local path (in submap): 468 467 499 498 530 529 561 593 625 657 689 721 720 
[DBG]    Suffix (out of submap): 719 751 783 815 847 848 880 912 
[DBG]  Original agent path length 3 je: 40
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 0: 468, 468, 468, 468, 468, 468, 468, 468, 468, 468, 467, 499, 498, 530, 529, 561, 593, 625, 657, 689, 721, 720, 719, 751, 783, 815, 847, 848, 880, 912, 
[DBG]  Path for agent 3 updated, resulting length: 30
[DBG]  Update the agent path 75 | Original local length: 2 | New local length: 2
[DBG]  agent 75 t=0 => decoded (sx,sy)=(0,3) => global_id=438
[DBG]  agent 75 t=1 => decoded (sx,sy)=(0,4) => global_id=439
[DBG]  Complete path of agent 75:
[DBG]    Original: 340 339 371 371 371 403 404 405 406 438 439 407 408 409 441 473 474 475 443 444 412 380 348 348 349 317 285 286 
[DBG]    New:     340 339 371 371 371 403 404 405 406 438 439 407 408 409 441 473 474 475 443 444 412 380 348 348 349 317 285 286 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 340 339 371 371 371 403 404 405 406 
[DBG]    Local path (in submap): 438 439 
[DBG]    Suffix (out of submap): 407 408 409 441 473 474 475 443 444 412 380 348 348 349 317 285 286 
[DBG]  Original agent path length 75 je: 28
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 1: 340, 339, 371, 371, 371, 403, 404, 405, 406, 438, 439, 407, 408, 409, 441, 473, 474, 475, 443, 444, 412, 380, 348, 348, 349, 317, 285, 286, 
[DBG]  Path for agent 75 updated, resulting length: 28
[DBG]  Update the agent path 104 | Original local length: 3 | New local length: 3
[DBG]  agent 104 t=0 => decoded (sx,sy)=(2,2) => global_id=501
[DBG]  agent 104 t=1 => decoded (sx,sy)=(1,2) => global_id=469
[DBG]  agent 104 t=2 => decoded (sx,sy)=(0,2) => global_id=437
[DBG]  Complete path of agent 104:
[DBG]    Original: 566 566 566 566 566 566 566 565 533 501 469 437 405 373 341 309 277 277 276 
[DBG]    New:     566 566 566 566 566 566 566 565 533 501 469 437 405 373 341 309 277 277 276 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 566 566 566 566 566 566 566 565 533 
[DBG]    Local path (in submap): 501 469 437 
[DBG]    Suffix (out of submap): 405 373 341 309 277 277 276 
[DBG]  Original agent path length 104 je: 19
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 2: 566, 566, 566, 566, 566, 566, 566, 565, 533, 501, 469, 437, 405, 373, 341, 309, 277, 277, 276, 
[DBG]  Path for agent 104 updated, resulting length: 19
[DBG]  Update the agent path 106 | Original local length: 2 | New local length: 2
[DBG]  agent 106 t=0 => decoded (sx,sy)=(1,0) => global_id=467
[DBG]  agent 106 t=1 => decoded (sx,sy)=(2,0) => global_id=499
[DBG]  Complete path of agent 106:
[DBG]    Original: 244 276 308 340 339 371 371 403 435 467 499 498 530 529 561 593 625 625 657 689 688 720 719 751 783 815 847 846 878 877 876 875 843 811 812 780 748 747 715 
[DBG]    New:     244 276 308 340 339 371 371 403 435 467 499 498 530 529 561 593 625 625 657 689 688 720 719 751 783 815 847 846 878 877 876 875 843 811 812 780 748 747 715 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 244 276 308 340 339 371 371 403 435 
[DBG]    Local path (in submap): 467 499 
[DBG]    Suffix (out of submap): 498 530 529 561 593 625 625 657 689 688 720 719 751 783 815 847 846 878 877 876 875 843 811 812 780 748 747 715 
[DBG]  Original agent path length 106 je: 39
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 3: 244, 276, 308, 340, 339, 371, 371, 403, 435, 467, 499, 498, 530, 529, 561, 593, 625, 625, 657, 689, 688, 720, 719, 751, 783, 815, 847, 846, 878, 877, 876, 875, 843, 811, 812, 780, 748, 747, 715, 
[DBG]  Path for agent 106 updated, resulting length: 39
[DBG]  Update the agent path 128 | Original local length: 13 | New local length: 5
[DBG]  agent 128 t=0 => decoded (sx,sy)=(2,3) => global_id=502
[DBG]  agent 128 t=1 => decoded (sx,sy)=(2,2) => global_id=501
[DBG]  agent 128 t=2 => decoded (sx,sy)=(1,2) => global_id=469
[DBG]  agent 128 t=3 => decoded (sx,sy)=(1,1) => global_id=468
[DBG]  agent 128 t=4 => decoded (sx,sy)=(1,0) => global_id=467
[DBG]  Complete path of agent 128:
[DBG]    Original: 604 603 571 539 507 506 505 504 503 502 470 469 469 469 469 469 469 469 469 469 468 467 466 465 464 463 431 431 463 462 430 462 494 526 525 524 523 522 521 520 519 551 550 549 548 547 
[DBG]    New:     604 603 571 539 507 506 505 504 503 502 501 469 468 467 466 465 464 463 431 431 463 462 430 462 494 526 525 524 523 522 521 520 519 551 550 549 548 547 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 604 603 571 539 507 506 505 504 503 
[DBG]    Local path (in submap): 502 501 469 468 467 466 465 464 463 431 431 463 462 
[DBG]    Suffix (out of submap): 430 462 494 526 525 524 523 522 521 520 519 551 550 549 548 547 
[DBG]  Original agent path length 128 je: 46
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 4: 604, 603, 571, 539, 507, 506, 505, 504, 503, 502, 501, 469, 468, 467, 466, 465, 464, 463, 431, 431, 463, 462, 430, 462, 494, 526, 525, 524, 523, 522, 521, 520, 519, 551, 550, 549, 548, 547, 
[DBG]  Path for agent 128 updated, resulting length: 38
[DBG]  Update the agent path 149 | Original local length: 1 | New local length: 1
[DBG]  agent 149 t=0 => decoded (sx,sy)=(0,4) => global_id=439
[DBG]  Complete path of agent 149:
[DBG]    Original: 603 571 570 538 506 505 504 472 440 439 407 375 343 311 279 247 215 214 213 181 180 148 147 115 83 82 50 49 48 47 
[DBG]    New:     603 571 570 538 506 505 504 472 440 439 407 375 343 311 279 247 215 214 213 181 180 148 147 115 83 82 50 49 48 47 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 603 571 570 538 506 505 504 472 440 
[DBG]    Local path (in submap): 439 
[DBG]    Suffix (out of submap): 407 375 343 311 279 247 215 214 213 181 180 148 147 115 83 82 50 49 48 47 
[DBG]  Original agent path length 149 je: 30
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 5: 603, 571, 570, 538, 506, 505, 504, 472, 440, 439, 407, 375, 343, 311, 279, 247, 215, 214, 213, 181, 180, 148, 147, 115, 83, 82, 50, 49, 48, 47, 
[DBG]  Path for agent 149 updated, resulting length: 30
[DBG]  Paths successfully updated.
[DBG]  (LNS.cpp) New path for agent 3: 
[DBG]  468, 468, 468, 468, 468, 468, 468, 468, 468, 468, 467, 499, 498, 530, 529, 561, 593, 625, 657, 689, 721, 720, 719, 751, 783, 815, 847, 848, 880, 912, 
[DBG]  (LNS.cpp) New path for agent 75: 
[DBG]  340, 339, 371, 371, 371, 403, 404, 405, 406, 438, 439, 407, 408, 409, 441, 473, 474, 475, 443, 444, 412, 380, 348, 348, 349, 317, 285, 286, 
[DBG]  (LNS.cpp) New path for agent 104: 
[DBG]  566, 566, 566, 566, 566, 566, 566, 565, 533, 501, 469, 437, 405, 373, 341, 309, 277, 277, 276, 
[DBG]  (LNS.cpp) New path for agent 106: 
[DBG]  244, 276, 308, 340, 339, 371, 371, 403, 435, 467, 499, 498, 530, 529, 561, 593, 625, 625, 657, 689, 688, 720, 719, 751, 783, 815, 847, 846, 878, 877, 876, 875, 843, 811, 812, 780, 748, 747, 715, 
[DBG]  (LNS.cpp) New path for agent 128: 
[DBG]  604, 603, 571, 539, 507, 506, 505, 504, 503, 502, 501, 469, 468, 467, 466, 465, 464, 463, 431, 431, 463, 462, 430, 462, 494, 526, 525, 524, 523, 522, 521, 520, 519, 551, 550, 549, 548, 547, 
[DBG]  (LNS.cpp) New path for agent 149: 
[DBG]  603, 571, 570, 538, 506, 505, 504, 472, 440, 439, 407, 375, 343, 311, 279, 247, 215, 214, 213, 181, 180, 148, 147, 115, 83, 82, 50, 49, 48, 47, 
[DBG]  component_weights = {0.437832, 0.0514365, 0.0537897, 0.456942}
[DBG]  opSuccess value: 1
[STAT] neighbor.sum_of_costs before recomputation: 178
[STAT] neighbor.old_sum_of_costs before recomputation: 196
[STAT] sum_of_costs before recomputation: 4177
[DBG]  Validate solution immediately after SAT success.
[WARNING] Problem after SAT: Target conflict: agent 57 (len 39) traverses target of agent 3 (len 29) at location 912 at timestep 36
[DBG]  Attempting immediate repair via init_lns because problem occurred after SAT (should be applied only for conflicts...).
[DBG]  Passing 150 agents to init_lns (skip=true).
[DBG]  path_table contents for selected agents (neighbor.agents):
[DBG]    Agent 3 => controlling path length=30
[DBG]    Agent 75 => controlling path length=28
[DBG]    Agent 104 => controlling path length=19
[DBG]    Agent 106 => controlling path length=39
[DBG]    Agent 128 => controlling path length=38
[DBG]    Agent 149 => controlling path length=30
[DBG]  hodnota skip_initial_solution=1
[DBG]  We skip initialSolution => call buildCollisionData()
[DBG]  buildCollisionData() called â€“ skip_initial_solution case.
[DBG]  Agents.size()=150, collision_graph.size()=150
[DBG]  agent 3 => updateCollidingPairs => foundCollision
[DBG]  agent 42 => updateCollidingPairs => foundCollision
[DBG]  agent 57 => updateCollidingPairs => foundCollision
[DBG]  agent 83 => updateCollidingPairs => foundCollision
[DBG]  agent 101 => updateCollidingPairs => foundCollision
[DBG]  agent 106 => updateCollidingPairs => foundCollision
[DBG]  agent 128 => updateCollidingPairs => foundCollision
[DBG]  agent 137 => updateCollidingPairs => foundCollision
[DBG]  Conflicting agent pairs:
[DBG]  agent 3 is in conflict with agent 57
[DBG]  agent 3 is in conflict with agent 83
[DBG]  agent 3 is in conflict with agent 106
[DBG]  agent 42 is in conflict with agent 128
[DBG]  agent 101 is in conflict with agent 128
[DBG]  agent 128 is in conflict with agent 137
[DBG]  buildCollisionData() => sum_of_costs=4159, num_of_colliding_pairs=6
[DBG]  buildCollisionData done => sum_of_costs=4159, num_of_colliding_pairs=6
[DBG]  sum_of_cost hodnota: 4159
[DBG]  After skip/init build => iteration_stats.back(): sum_of_costs=4159, collisions=6
[DEBUG] Using default neighbor generation strategy for conflicts: 2
[DEBUG] Using default neighbor generation strategy for conflicts: 0
	InitLNS(PP): runtime = 0.0139912, iterations = 3, colliding pairs = 0, initial colliding pairs = 6, solution cost = 4165, initial solution cost = 4159, failed iterations = 0
[DBG]  init_lns->sum_of_costs after init_lns->run: 4165
[DBG]  sum_of_costs after assignment from init_lns->run: 4165
[DBG]  Recomputing sum_of_cost by dividing neighbor.sum_of_costs and neighbor.old_sum_of_costs
[STAT] sum_of_costs after recomputation: 4165
[STAT] Iteration 214
[DBG]  Using SAT operator (destroy+repair SAT).
[DBG]  ====================
[DBG]  SAT destroy operator called.
[DBG]  SAT heuristic: 2
[DBG]  key_agent_id: 17
[DBG]  key_agent_id global path length: 17
[DBG]  Submap content (global positions):
[DBG]  536 537 538 539 540 
[DBG]  568 569 570 571 572 
[DBG]  600 601 602 603 604 
[DBG]  632 633 634 635 636 
[DBG]  664 665 666 667 668 
[DBG]  Map content with agents and obstacles:
[DBG]  X X . . . 
[DBG]  X . . A . 
[DBG]  . . A . . 
[DBG]  . . X A . 
[DBG]  . X . . . 
[DBG]  content of the map structure that we pass to the SAT solver:
[DBG]  -1  -1  1  1  1  
[DBG]  -1  1  1  1  1  
[DBG]  1  1  1  1  1  
[DBG]  1  1  -1  1  1  
[DBG]  1  -1  1  1  1  
[DBG]  Identifying agents in a submap for rescheduling (when key_agent is there at the time 6):
[DBG]  Agent 17 found intervals in the sub-map:
[DBG]   [0..16]
[DBG]  Agent 17 (interval in submap: [0..16]) contains time 6, added to replan.
[DBG]  Agent 64 found intervals in the sub-map:
[DBG]   [3..8]
[DBG]  Agent 64 (interval in submap: [3..8]) contains time 6, added to replan.
[DBG]  Agent 94 found intervals in the sub-map:
[DBG]   [5..9]
[DBG]  Agent 94 (interval in submap: [5..9]) contains time 6, added to replan.
[DBG]  Agent 123 found intervals in the sub-map:
[DBG]   [1..5]
[DBG]  Agent 123 is not in sub-map at time 6 (intervals: 
[DBG]  [1..5] )
[DBG]  Agent 17 | Start (global): 602 -> (local): (2, 2) at time 6 | Goal (global): 572 -> (local): (1, 4) at time 16
[DBG]  Agent 64 | Start (global): 571 -> (local): (1, 3) at time 6 | Goal (global): 538 -> (local): (0, 2) at time 8
[DBG]  Agent 94 | Start (global): 635 -> (local): (3, 3) at time 6 | Goal (global): 539 -> (local): (0, 3) at time 9
[DBG]  [REPAIR] SAT destroy operator called.
[DBG]  [REPAIR] SAT operator â€“ launching subproblem FOR OPTIMIZATION.
[DBG]  Creating local paths (sx, sy) in the submap for T_sync = 6
[DBG]    Agent 17 (global paths from T=6 to 16) has local path: (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,3) (1,3) (1,4) 
[DBG]    Agent 64 (global paths from T=6 to 8) has local path: (1,3) (0,3) (0,2) 
[DBG]    Agent 94 (global paths from T=6 to 9) has local path: (3,3) (2,3) (1,3) (0,3) 
[DBG]  Checking input data for SAT solver:
[DBG]    - Number of agents to replan: 3
[DBG]  Agent 17 has the original local path length: 11 => Start (2,2), Goal (1,4)
[DBG]  Agent 64 has the original local path length: 3 => Start (1,3), Goal (0,2)
[DBG]  Agent 94 has the original local path length: 4 => Start (3,3), Goal (0,3)
[DBG]  Start position: (2, 2), (1, 3), (3, 3), 
[DBG]  Goal position: (1, 4), (0, 2), (0, 3), 
[DBG]  SAT instance and solver created.
Currently solving
Instance name: scen
Map name: map
Encoding used: disappear_at_goal
SAT solver used: Kissat
Optimizing function: sum of costs
Number of agents: 3
Mks LB: 4
SoC LB: 11
Delta: 0
Remaining time: 300000 [ms]

[STAT] Solver returned: -1
[DBG]  SAT solver failed.
[STAT] SAT solver failed to find a valid solution.
[DBG]  ====================
[DBG]  SAT destroy operator called.
[DBG]  SAT heuristic: 2
[DBG]  key_agent_id: 17
[DBG]  key_agent_id global path length: 17
[DBG]  Submap content (global positions):
[DBG]  537 538 539 540 541 
[DBG]  569 570 571 572 573 
[DBG]  601 602 603 604 605 
[DBG]  633 634 635 636 637 
[DBG]  665 666 667 668 669 
[DBG]  Map content with agents and obstacles:
[DBG]  X . A . . 
[DBG]  A A . . X 
[DBG]  . . A A X 
[DBG]  . X A A . 
[DBG]  X . . . X 
[DBG]  content of the map structure that we pass to the SAT solver:
[DBG]  -1  1  1  1  1  
[DBG]  1  1  1  1  -1  
[DBG]  1  1  1  1  -1  
[DBG]  1  -1  1  1  1  
[DBG]  -1  1  1  1  -1  
[DBG]  Identifying agents in a submap for rescheduling (when key_agent is there at the time 14):
[DBG]  Agent 4 found intervals in the sub-map:
[DBG]  
[DBG]  Agent 4 is not in sub-map at time 14 (intervals: 
[DBG]  )
[DBG]  Agent 17 found intervals in the sub-map:
[DBG]   [2..16]
[DBG]  Agent 17 (interval in submap: [2..16]) contains time 14, added to replan.
[DBG]  Agent 25 found intervals in the sub-map:
[DBG]   [12..16]
[DBG]  Agent 25 (interval in submap: [12..16]) contains time 14, added to replan.
[DBG]  Agent 46 found intervals in the sub-map:
[DBG]   [13..17]
[DBG]  Agent 46 (interval in submap: [13..17]) contains time 14, added to replan.
[DBG]  Agent 58 found intervals in the sub-map:
[DBG]   [19..27]
[DBG]  Agent 58 is not in sub-map at time 14 (intervals: 
[DBG]  [19..27] )
[DBG]  Agent 77 found intervals in the sub-map:
[DBG]   [9..16]
[DBG]  Agent 77 (interval in submap: [9..16]) contains time 14, added to replan.
[DBG]  Agent 91 found intervals in the sub-map:
[DBG]   [11..18]
[DBG]  Agent 91 (interval in submap: [11..18]) contains time 14, added to replan.
[DBG]  Agent 119 found intervals in the sub-map:
[DBG]   [9..14]
[DBG]  Agent 119 (interval in submap: [9..14]) contains time 14, added to replan.
[DBG]  Agent 133 found intervals in the sub-map:
[DBG]   [13..19]
[DBG]  Agent 133 (interval in submap: [13..19]) contains time 14, added to replan.
[DBG]  Agent 17 | Start (global): 603 -> (local): (2, 2) at time 14 | Goal (global): 572 -> (local): (1, 3) at time 16
[DBG]  Agent 25 | Start (global): 604 -> (local): (2, 3) at time 14 | Goal (global): 540 -> (local): (0, 3) at time 16
[DBG]  Agent 46 | Start (global): 569 -> (local): (1, 0) at time 14 | Goal (global): 539 -> (local): (0, 2) at time 17
[DBG]  Agent 77 | Start (global): 635 -> (local): (3, 2) at time 14 | Goal (global): 637 -> (local): (3, 4) at time 16
[DBG]  Agent 91 | Start (global): 570 -> (local): (1, 1) at time 14 | Goal (global): 541 -> (local): (0, 4) at time 18
[DBG]  Agent 119 | Start (global): 539 -> (local): (0, 2) at time 14 | Goal (global): 539 -> (local): (0, 2) at time 14
[DBG]  Agent 133 | Start (global): 636 -> (local): (3, 3) at time 14 | Goal (global): 538 -> (local): (0, 1) at time 19
[DBG]  [REPAIR] SAT destroy operator called.
[DBG]  [REPAIR] SAT operator â€“ launching subproblem FOR OPTIMIZATION.
[DBG]  Creating local paths (sx, sy) in the submap for T_sync = 14
[DBG]    Agent 17 (global paths from T=14 to 16) has local path: (2,2) (1,2) (1,3) 
[DBG]    Agent 25 (global paths from T=14 to 16) has local path: (2,3) (1,3) (0,3) 
[DBG]    Agent 46 (global paths from T=14 to 17) has local path: (1,0) (1,1) (1,2) (0,2) 
[DBG]    Agent 77 (global paths from T=14 to 16) has local path: (3,2) (3,3) (3,4) 
[DBG]    Agent 91 (global paths from T=14 to 18) has local path: (1,1) (0,1) (0,2) (0,3) (0,4) 
[DBG]    Agent 119 (global paths from T=14 to 14) has local path: (0,2) 
[DBG]    Agent 133 (global paths from T=14 to 19) has local path: (3,3) (2,3) (2,2) (2,1) (1,1) (0,1) 
[DBG]  Checking input data for SAT solver:
[DBG]    - Number of agents to replan: 7
[DBG]  Agent 17 has the original local path length: 3 => Start (2,2), Goal (1,3)
[DBG]  Agent 25 has the original local path length: 3 => Start (2,3), Goal (0,3)
[DBG]  Agent 46 has the original local path length: 4 => Start (1,0), Goal (0,2)
[DBG]  Agent 77 has the original local path length: 3 => Start (3,2), Goal (3,4)
[DBG]  Agent 91 has the original local path length: 5 => Start (1,1), Goal (0,4)
[DBG]  Agent 119 has the original local path length: 1 => Start (0,2), Goal (0,2)
[DBG]  Agent 133 has the original local path length: 6 => Start (3,3), Goal (0,1)
[DBG]  Start position: (2, 2), (2, 3), (1, 0), (3, 2), (1, 1), (0, 2), (3, 3), 
[DBG]  Goal position: (1, 3), (0, 3), (0, 2), (3, 4), (0, 4), (0, 2), (0, 1), 
[DBG]  SAT instance and solver created.
Currently solving
Instance name: scen
Map name: map
Encoding used: disappear_at_goal
SAT solver used: Kissat
Optimizing function: sum of costs
Number of agents: 7
Mks LB: 6
SoC LB: 25
Delta: 0
Remaining time: 300000 [ms]

Vertex conflict! Agents 0, 1, timestep 3, location 0
Swapping conflict! Agents 0, 1, timestep 3, edge (0,0)
Vertex conflict! Agents 0, 1, timestep 4, location 0
Swapping conflict! Agents 0, 1, timestep 4, edge (0,0)
Vertex conflict! Agents 0, 1, timestep 5, location 0
Vertex conflict! Agents 0, 2, timestep 4, location 0
Swapping conflict! Agents 0, 2, timestep 4, edge (0,0)
Vertex conflict! Agents 0, 2, timestep 5, location 0
Vertex conflict! Agents 0, 3, timestep 3, location 0
Swapping conflict! Agents 0, 3, timestep 3, edge (0,0)
Vertex conflict! Agents 0, 3, timestep 4, location 0
Swapping conflict! Agents 0, 3, timestep 4, edge (0,0)
Vertex conflict! Agents 0, 3, timestep 5, location 0
Vertex conflict! Agents 0, 4, timestep 5, location 0
Vertex conflict! Agents 0, 5, timestep 3, location 0
Swapping conflict! Agents 0, 5, timestep 3, edge (0,0)
Vertex conflict! Agents 0, 5, timestep 4, location 0
Swapping conflict! Agents 0, 5, timestep 4, edge (0,0)
Vertex conflict! Agents 0, 5, timestep 5, location 0
Vertex conflict! Agents 0, 6, timestep 5, location 0
Vertex conflict! Agents 1, 2, timestep 4, location 0
Swapping conflict! Agents 1, 2, timestep 4, edge (0,0)
Vertex conflict! Agents 1, 2, timestep 5, location 0
Vertex conflict! Agents 1, 3, timestep 3, location 0
Swapping conflict! Agents 1, 3, timestep 3, edge (0,0)
Vertex conflict! Agents 1, 3, timestep 4, location 0
Swapping conflict! Agents 1, 3, timestep 4, edge (0,0)
Vertex conflict! Agents 1, 3, timestep 5, location 0
Vertex conflict! Agents 1, 4, timestep 5, location 0
Vertex conflict! Agents 1, 5, timestep 3, location 0
Swapping conflict! Agents 1, 5, timestep 3, edge (0,0)
Vertex conflict! Agents 1, 5, timestep 4, location 0
Swapping conflict! Agents 1, 5, timestep 4, edge (0,0)
Vertex conflict! Agents 1, 5, timestep 5, location 0
Vertex conflict! Agents 1, 6, timestep 5, location 0
Vertex conflict! Agents 2, 3, timestep 4, location 0
Swapping conflict! Agents 2, 3, timestep 4, edge (0,0)
Vertex conflict! Agents 2, 3, timestep 5, location 0
Vertex conflict! Agents 2, 4, timestep 5, location 0
Vertex conflict! Agents 2, 5, timestep 4, location 0
Swapping conflict! Agents 2, 5, timestep 4, edge (0,0)
Vertex conflict! Agents 2, 5, timestep 5, location 0
Vertex conflict! Agents 2, 6, timestep 5, location 0
Vertex conflict! Agents 3, 4, timestep 5, location 0
Vertex conflict! Agents 3, 5, timestep 3, location 0
Swapping conflict! Agents 3, 5, timestep 3, edge (0,0)
Vertex conflict! Agents 3, 5, timestep 4, location 0
Swapping conflict! Agents 3, 5, timestep 4, edge (0,0)
Vertex conflict! Agents 3, 5, timestep 5, location 0
Vertex conflict! Agents 3, 6, timestep 5, location 0
Vertex conflict! Agents 4, 5, timestep 1, location 0
Vertex conflict! Agents 4, 5, timestep 5, location 0
Vertex conflict! Agents 4, 6, timestep 5, location 0
Vertex conflict! Agents 5, 6, timestep 5, location 0
Found plan [agents = 7] [timesteps = 6]
Agent #0 : 10 6 7 0 0 0 
Agent #1 : 11 7 2 0 0 0 
Agent #2 : 4 5 6 1 0 0 
Agent #3 : 13 14 15 0 0 0 
Agent #4 : 5 0 1 2 3 0 
Agent #5 : 1 0 0 0 0 0 
Agent #6 : 14 11 10 9 5 0 

[STAT] Solver returned: 0
[DBG]  Agent (index) 17 | New local path (submap idx):
[DBG]  10 6 7 
[DBG]  Agent (index) 25 | New local path (submap idx):
[DBG]  11 7 2 
[DBG]  Agent (index) 46 | New local path (submap idx):
[DBG]  4 5 6 1 
[DBG]  Agent (index) 77 | New local path (submap idx):
[DBG]  13 14 15 
[DBG]  Agent (index) 91 | New local path (submap idx):
[DBG]  5 0 1 2 3 
[DBG]  Agent (index) 119 | New local path (submap idx):
[DBG]  1 
[DBG]  Agent (index) 133 | New local path (submap idx):
[DBG]  14 11 10 9 5 0 
[DBG]  Update the agent path 17 | Original local length: 3 | New local length: 3
[DBG]  agent 17 t=0 => decoded (sx,sy)=(2,2) => global_id=603
[DBG]  agent 17 t=1 => decoded (sx,sy)=(1,2) => global_id=571
[DBG]  agent 17 t=2 => decoded (sx,sy)=(1,3) => global_id=572
[DBG]  Complete path of agent 17:
[DBG]    Original: 664 632 633 601 602 602 602 602 602 602 602 602 602 602 603 571 572 
[DBG]    New:     664 632 633 601 602 602 602 602 602 602 602 602 602 602 603 571 572 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 664 632 633 601 602 602 602 602 602 602 602 602 602 602 
[DBG]    Local path (in submap): 603 571 572 
[DBG]    Suffix (out of submap): 
[DBG]  Original agent path length 17 je: 17
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 0: 664, 632, 633, 601, 602, 602, 602, 602, 602, 602, 602, 602, 602, 602, 603, 571, 572, 
[DBG]  Path for agent 17 updated, resulting length: 17
[DBG]  Update the agent path 25 | Original local length: 3 | New local length: 3
[DBG]  agent 25 t=0 => decoded (sx,sy)=(2,3) => global_id=604
[DBG]  agent 25 t=1 => decoded (sx,sy)=(1,3) => global_id=572
[DBG]  agent 25 t=2 => decoded (sx,sy)=(0,3) => global_id=540
[DBG]  Complete path of agent 25:
[DBG]    Original: 895 894 893 861 829 797 765 733 701 702 670 638 637 636 604 572 540 508 476 477 445 413 381 349 350 318 286 254 222 221 189 157 158 159 
[DBG]    New:     895 894 893 861 829 797 765 733 701 702 670 638 637 636 604 572 540 508 476 477 445 413 381 349 350 318 286 254 222 221 189 157 158 159 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 895 894 893 861 829 797 765 733 701 702 670 638 637 636 
[DBG]    Local path (in submap): 604 572 540 
[DBG]    Suffix (out of submap): 508 476 477 445 413 381 349 350 318 286 254 222 221 189 157 158 159 
[DBG]  Original agent path length 25 je: 34
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 1: 895, 894, 893, 861, 829, 797, 765, 733, 701, 702, 670, 638, 637, 636, 604, 572, 540, 508, 476, 477, 445, 413, 381, 349, 350, 318, 286, 254, 222, 221, 189, 157, 158, 159, 
[DBG]  Path for agent 25 updated, resulting length: 34
[DBG]  Update the agent path 46 | Original local length: 4 | New local length: 4
[DBG]  agent 46 t=0 => decoded (sx,sy)=(1,0) => global_id=569
[DBG]  agent 46 t=1 => decoded (sx,sy)=(1,1) => global_id=570
[DBG]  agent 46 t=2 => decoded (sx,sy)=(1,2) => global_id=571
[DBG]  agent 46 t=3 => decoded (sx,sy)=(0,2) => global_id=539
[DBG]  Complete path of agent 46:
[DBG]    Original: 786 787 755 756 757 725 726 727 728 696 664 632 600 601 569 570 571 539 507 508 476 444 412 380 348 349 317 285 284 252 
[DBG]    New:     786 787 755 756 757 725 726 727 728 696 664 632 600 601 569 570 571 539 507 508 476 444 412 380 348 349 317 285 284 252 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 786 787 755 756 757 725 726 727 728 696 664 632 600 601 
[DBG]    Local path (in submap): 569 570 571 539 
[DBG]    Suffix (out of submap): 507 508 476 444 412 380 348 349 317 285 284 252 
[DBG]  Original agent path length 46 je: 30
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 2: 786, 787, 755, 756, 757, 725, 726, 727, 728, 696, 664, 632, 600, 601, 569, 570, 571, 539, 507, 508, 476, 444, 412, 380, 348, 349, 317, 285, 284, 252, 
[DBG]  Path for agent 46 updated, resulting length: 30
[DBG]  Update the agent path 77 | Original local length: 3 | New local length: 3
[DBG]  agent 77 t=0 => decoded (sx,sy)=(3,2) => global_id=635
[DBG]  agent 77 t=1 => decoded (sx,sy)=(3,3) => global_id=636
[DBG]  agent 77 t=2 => decoded (sx,sy)=(3,4) => global_id=637
[DBG]  Complete path of agent 77:
[DBG]    Original: 319 351 383 415 414 413 445 477 509 541 540 572 604 603 635 636 637 638 670 702 701 733 732 731 
[DBG]    New:     319 351 383 415 414 413 445 477 509 541 540 572 604 603 635 636 637 638 670 702 701 733 732 731 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 319 351 383 415 414 413 445 477 509 541 540 572 604 603 
[DBG]    Local path (in submap): 635 636 637 
[DBG]    Suffix (out of submap): 638 670 702 701 733 732 731 
[DBG]  Original agent path length 77 je: 24
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 3: 319, 351, 383, 415, 414, 413, 445, 477, 509, 541, 540, 572, 604, 603, 635, 636, 637, 638, 670, 702, 701, 733, 732, 731, 
[DBG]  Path for agent 77 updated, resulting length: 24
[DBG]  Update the agent path 91 | Original local length: 5 | New local length: 5
[DBG]  agent 91 t=0 => decoded (sx,sy)=(1,1) => global_id=570
[DBG]  agent 91 t=1 => decoded (sx,sy)=(0,1) => global_id=538
[DBG]  agent 91 t=2 => decoded (sx,sy)=(0,2) => global_id=539
[DBG]  agent 91 t=3 => decoded (sx,sy)=(0,3) => global_id=540
[DBG]  agent 91 t=4 => decoded (sx,sy)=(0,4) => global_id=541
[DBG]  Complete path of agent 91:
[DBG]    Original: 787 755 756 757 725 726 727 728 696 664 632 633 601 569 570 538 539 540 541 509 477 445 413 381 
[DBG]    New:     787 755 756 757 725 726 727 728 696 664 632 633 601 569 570 538 539 540 541 509 477 445 413 381 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 787 755 756 757 725 726 727 728 696 664 632 633 601 569 
[DBG]    Local path (in submap): 570 538 539 540 541 
[DBG]    Suffix (out of submap): 509 477 445 413 381 
[DBG]  Original agent path length 91 je: 24
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 4: 787, 755, 756, 757, 725, 726, 727, 728, 696, 664, 632, 633, 601, 569, 570, 538, 539, 540, 541, 509, 477, 445, 413, 381, 
[DBG]  Path for agent 91 updated, resulting length: 24
[DBG]  Update the agent path 119 | Original local length: 1 | New local length: 1
[DBG]  agent 119 t=0 => decoded (sx,sy)=(0,2) => global_id=539
[DBG]  Complete path of agent 119:
[DBG]    Original: 861 829 797 765 733 701 702 670 638 637 636 635 603 571 539 507 475 443 411 379 378 377 345 313 281 249 248 247 215 214 213 212 244 243 242 241 240 208 207 206 205 204 172 140 
[DBG]    New:     861 829 797 765 733 701 702 670 638 637 636 635 603 571 539 507 475 443 411 379 378 377 345 313 281 249 248 247 215 214 213 212 244 243 242 241 240 208 207 206 205 204 172 140 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 861 829 797 765 733 701 702 670 638 637 636 635 603 571 
[DBG]    Local path (in submap): 539 
[DBG]    Suffix (out of submap): 507 475 443 411 379 378 377 345 313 281 249 248 247 215 214 213 212 244 243 242 241 240 208 207 206 205 204 172 140 
[DBG]  Original agent path length 119 je: 44
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 5: 861, 829, 797, 765, 733, 701, 702, 670, 638, 637, 636, 635, 603, 571, 539, 507, 475, 443, 411, 379, 378, 377, 345, 313, 281, 249, 248, 247, 215, 214, 213, 212, 244, 243, 242, 241, 240, 208, 207, 206, 205, 204, 172, 140, 
[DBG]  Path for agent 119 updated, resulting length: 44
[DBG]  Update the agent path 133 | Original local length: 6 | New local length: 6
[DBG]  agent 133 t=0 => decoded (sx,sy)=(3,3) => global_id=636
[DBG]  agent 133 t=1 => decoded (sx,sy)=(2,3) => global_id=604
[DBG]  agent 133 t=2 => decoded (sx,sy)=(2,2) => global_id=603
[DBG]  agent 133 t=3 => decoded (sx,sy)=(2,1) => global_id=602
[DBG]  agent 133 t=4 => decoded (sx,sy)=(1,1) => global_id=570
[DBG]  agent 133 t=5 => decoded (sx,sy)=(0,1) => global_id=538
[DBG]  Complete path of agent 133:
[DBG]    Original: 956 924 892 893 861 829 797 765 733 701 702 670 638 637 636 604 603 602 570 538 506 474 473 441 409 408 376 
[DBG]    New:     956 924 892 893 861 829 797 765 733 701 702 670 638 637 636 604 603 602 570 538 506 474 473 441 409 408 376 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 956 924 892 893 861 829 797 765 733 701 702 670 638 637 
[DBG]    Local path (in submap): 636 604 603 602 570 538 
[DBG]    Suffix (out of submap): 506 474 473 441 409 408 376 
[DBG]  Original agent path length 133 je: 27
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 6: 956, 924, 892, 893, 861, 829, 797, 765, 733, 701, 702, 670, 638, 637, 636, 604, 603, 602, 570, 538, 506, 474, 473, 441, 409, 408, 376, 
[DBG]  Path for agent 133 updated, resulting length: 27
[DBG]  Paths successfully updated.
[DBG]  (LNS.cpp) New path for agent 17: 
[DBG]  664, 632, 633, 601, 602, 602, 602, 602, 602, 602, 602, 602, 602, 602, 603, 571, 572, 
[DBG]  (LNS.cpp) New path for agent 25: 
[DBG]  895, 894, 893, 861, 829, 797, 765, 733, 701, 702, 670, 638, 637, 636, 604, 572, 540, 508, 476, 477, 445, 413, 381, 349, 350, 318, 286, 254, 222, 221, 189, 157, 158, 159, 
[DBG]  (LNS.cpp) New path for agent 46: 
[DBG]  786, 787, 755, 756, 757, 725, 726, 727, 728, 696, 664, 632, 600, 601, 569, 570, 571, 539, 507, 508, 476, 444, 412, 380, 348, 349, 317, 285, 284, 252, 
[DBG]  (LNS.cpp) New path for agent 77: 
[DBG]  319, 351, 383, 415, 414, 413, 445, 477, 509, 541, 540, 572, 604, 603, 635, 636, 637, 638, 670, 702, 701, 733, 732, 731, 
[DBG]  (LNS.cpp) New path for agent 91: 
[DBG]  787, 755, 756, 757, 725, 726, 727, 728, 696, 664, 632, 633, 601, 569, 570, 538, 539, 540, 541, 509, 477, 445, 413, 381, 
[DBG]  (LNS.cpp) New path for agent 119: 
[DBG]  861, 829, 797, 765, 733, 701, 702, 670, 638, 637, 636, 635, 603, 571, 539, 507, 475, 443, 411, 379, 378, 377, 345, 313, 281, 249, 248, 247, 215, 214, 213, 212, 244, 243, 242, 241, 240, 208, 207, 206, 205, 204, 172, 140, 
[DBG]  (LNS.cpp) New path for agent 133: 
[DBG]  956, 924, 892, 893, 861, 829, 797, 765, 733, 701, 702, 670, 638, 637, 636, 604, 603, 602, 570, 538, 506, 474, 473, 441, 409, 408, 376, 
[DBG]  component_weights = {0.442811, 0.050981, 0.0533133, 0.452895}
[DBG]  opSuccess value: 1
[STAT] neighbor.sum_of_costs before recomputation: 193
[STAT] neighbor.old_sum_of_costs before recomputation: 193
[STAT] sum_of_costs before recomputation: 4165
[DBG]  Validate solution immediately after SAT success.
[DBG]  No problems after SAT replan.
[DBG]  Recomputing sum_of_cost by dividing neighbor.sum_of_costs and neighbor.old_sum_of_costs
[STAT] sum_of_costs after recomputation: 4165
[STAT] Iteration 215
[DBG]  Using SAT operator (destroy+repair SAT).
[DBG]  ====================
[DBG]  SAT destroy operator called.
[DBG]  SAT heuristic: 2
[DBG]  key_agent_id: 58
[DBG]  key_agent_id global path length: 35
[DBG]  Submap content (global positions):
[DBG]  377 378 379 380 381 
[DBG]  409 410 411 412 413 
[DBG]  441 442 443 444 445 
[DBG]  473 474 475 476 477 
[DBG]  505 506 507 508 509 
[DBG]  Map content with agents and obstacles:
[DBG]  . . . . . 
[DBG]  . X . . . 
[DBG]  . X A . . 
[DBG]  . . . . . 
[DBG]  . . . . . 
[DBG]  content of the map structure that we pass to the SAT solver:
[DBG]  1  1  1  1  1  
[DBG]  1  -1  1  1  1  
[DBG]  1  -1  1  1  1  
[DBG]  1  1  1  1  1  
[DBG]  1  1  1  1  1  
[DBG]  Identifying agents in a submap for rescheduling (when key_agent is there at the time 31):
[DBG]  Agent 33 found intervals in the sub-map:
[DBG]   [23..28]
[DBG]  Agent 33 is not in sub-map at time 31 (intervals: 
[DBG]  [23..28] )
[DBG]  Agent 52 found intervals in the sub-map:
[DBG]   [24..24]
[DBG]  Agent 52 is not in sub-map at time 31 (intervals: 
[DBG]  [24..24] )
[DBG]  Agent 58 found intervals in the sub-map:
[DBG]   [28..33]
[DBG]  Agent 58 (interval in submap: [28..33]) contains time 31, added to replan.
[DBG]  Agent 61 found intervals in the sub-map:
[DBG]  
[DBG]  Agent 61 is not in sub-map at time 31 (intervals: 
[DBG]  )
[DBG]  Agent 75 found intervals in the sub-map:
[DBG]   [13..21]
[DBG]  Agent 75 is not in sub-map at time 31 (intervals: 
[DBG]  [13..21] )
[DBG]  Agent 91 found intervals in the sub-map:
[DBG]   [19..23]
[DBG]  Agent 91 is not in sub-map at time 31 (intervals: 
[DBG]  [19..23] )
[DBG]  Agent 109 found intervals in the sub-map:
[DBG]   [23..25]
[DBG]  Agent 109 is not in sub-map at time 31 (intervals: 
[DBG]  [23..25] )
[DBG]  Agent 133 found intervals in the sub-map:
[DBG]   [20..24]
[DBG]  Agent 133 is not in sub-map at time 31 (intervals: 
[DBG]  [20..24] )
[DBG]  Agent 58 | Start (global): 443 -> (local): (2, 2) at time 31 | Goal (global): 379 -> (local): (0, 2) at time 33
[DBG]  [REPAIR] SAT destroy operator called.
[DBG]  [REPAIR] SAT operator â€“ launching subproblem FOR OPTIMIZATION.
[DBG]  Creating local paths (sx, sy) in the submap for T_sync = 31
[DBG]    Agent 58 (global paths from T=31 to 33) has local path: (2,2) (1,2) (0,2) 
[DBG]  Checking input data for SAT solver:
[DBG]    - Number of agents to replan: 1
[DBG]  Agent 58 has the original local path length: 3 => Start (2,2), Goal (0,2)
[DBG]  Start position: (2, 2), 
[DBG]  Goal position: (0, 2), 
[DBG]  SAT instance and solver created.
Currently solving
Instance name: scen
Map name: map
Encoding used: disappear_at_goal
SAT solver used: Kissat
Optimizing function: sum of costs
Number of agents: 1
Mks LB: 3
SoC LB: 3
Delta: 0
Remaining time: 300000 [ms]

Found plan [agents = 1] [timesteps = 3]
Agent #0 : 10 6 2 

[STAT] Solver returned: 0
[DBG]  Agent (index) 58 | New local path (submap idx):
[DBG]  10 6 2 
[DBG]  Update the agent path 58 | Original local length: 3 | New local length: 3
[DBG]  agent 58 t=0 => decoded (sx,sy)=(2,2) => global_id=443
[DBG]  agent 58 t=1 => decoded (sx,sy)=(1,2) => global_id=411
[DBG]  agent 58 t=2 => decoded (sx,sy)=(0,2) => global_id=379
[DBG]  Complete path of agent 58:
[DBG]    Original: 826 827 859 860 860 861 829 797 797 765 733 701 702 670 638 639 639 639 638 637 636 635 603 602 602 602 570 538 506 474 475 443 411 379 347 
[DBG]    New:     826 827 859 860 860 861 829 797 797 765 733 701 702 670 638 639 639 639 638 637 636 635 603 602 602 602 570 538 506 474 475 443 411 379 347 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 826 827 859 860 860 861 829 797 797 765 733 701 702 670 638 639 639 639 638 637 636 635 603 602 602 602 570 538 506 474 475 
[DBG]    Local path (in submap): 443 411 379 
[DBG]    Suffix (out of submap): 347 
[DBG]  Original agent path length 58 je: 35
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 0: 826, 827, 859, 860, 860, 861, 829, 797, 797, 765, 733, 701, 702, 670, 638, 639, 639, 639, 638, 637, 636, 635, 603, 602, 602, 602, 570, 538, 506, 474, 475, 443, 411, 379, 347, 
[DBG]  Path for agent 58 updated, resulting length: 35
[DBG]  Paths successfully updated.
[DBG]  (LNS.cpp) New path for agent 58: 
[DBG]  826, 827, 859, 860, 860, 861, 829, 797, 797, 765, 733, 701, 702, 670, 638, 639, 639, 639, 638, 637, 636, 635, 603, 602, 602, 602, 570, 538, 506, 474, 475, 443, 411, 379, 347, 
[DBG]  component_weights = {0.447801, 0.0505244, 0.0528358, 0.448839}
[DBG]  opSuccess value: 1
[STAT] neighbor.sum_of_costs before recomputation: 34
[STAT] neighbor.old_sum_of_costs before recomputation: 34
[STAT] sum_of_costs before recomputation: 4165
[DBG]  Validate solution immediately after SAT success.
[DBG]  No problems after SAT replan.
[DBG]  Recomputing sum_of_cost by dividing neighbor.sum_of_costs and neighbor.old_sum_of_costs
[STAT] sum_of_costs after recomputation: 4165
[STAT] Iteration 216
[DBG]  Using SAT operator (destroy+repair SAT).
[DBG]  ====================
[DBG]  SAT destroy operator called.
[DBG]  SAT heuristic: 2
[DBG]  key_agent_id: 142
[DBG]  key_agent_id global path length: 28
[DBG]  Submap content (global positions):
[DBG]  761 762 763 764 765 
[DBG]  793 794 795 796 797 
[DBG]  825 826 827 828 829 
[DBG]  857 858 859 860 861 
[DBG]  889 890 891 892 893 
[DBG]  Map content with agents and obstacles:
[DBG]  A X X . . 
[DBG]  . X . X A 
[DBG]  X . A X . 
[DBG]  . A A . . 
[DBG]  . A . A A 
[DBG]  content of the map structure that we pass to the SAT solver:
[DBG]  1  -1  -1  1  1  
[DBG]  1  -1  1  -1  1  
[DBG]  -1  1  1  -1  1  
[DBG]  1  1  1  1  1  
[DBG]  1  1  1  1  1  
[DBG]  Identifying agents in a submap for rescheduling (when key_agent is there at the time 2):
[DBG]  Agent 4 found intervals in the sub-map:
[DBG]   [0..0] [4..8]
[DBG]  Agent 4 is not in sub-map at time 2 (intervals: 
[DBG]  [0..0] [4..8] )
[DBG]  Agent 14 found intervals in the sub-map:
[DBG]   [0..3]
[DBG]  Agent 14 (interval in submap: [0..3]) contains time 2, added to replan.
[DBG]  Agent 24 found intervals in the sub-map:
[DBG]   [0..3] [9..10]
[DBG]  Agent 24 (interval in submap: [0..3]) contains time 2, added to replan.
[DBG]  Agent 25 found intervals in the sub-map:
[DBG]   [2..6]
[DBG]  Agent 25 (interval in submap: [2..6]) contains time 2, added to replan.
[DBG]  Agent 30 found intervals in the sub-map:
[DBG]   [4..5] [10..11]
[DBG]  Agent 30 is not in sub-map at time 2 (intervals: 
[DBG]  [4..5] [10..11] )
[DBG]  Agent 47 found intervals in the sub-map:
[DBG]   [2..3]
[DBG]  Agent 47 (interval in submap: [2..3]) contains time 2, added to replan.
[DBG]  Agent 58 found intervals in the sub-map:
[DBG]   [0..9]
[DBG]  Agent 58 (interval in submap: [0..9]) contains time 2, added to replan.
[DBG]  Agent 119 found intervals in the sub-map:
[DBG]   [0..3]
[DBG]  Agent 119 (interval in submap: [0..3]) contains time 2, added to replan.
[DBG]  Agent 133 found intervals in the sub-map:
[DBG]   [2..7]
[DBG]  Agent 133 (interval in submap: [2..7]) contains time 2, added to replan.
[DBG]  Agent 142 found intervals in the sub-map:
[DBG]   [0..11]
[DBG]  Agent 142 (interval in submap: [0..11]) contains time 2, added to replan.
[DBG]  Agent 14 | Start (global): 890 -> (local): (4, 1) at time 2 | Goal (global): 889 -> (local): (4, 0) at time 3
[DBG]  Agent 24 | Start (global): 858 -> (local): (3, 1) at time 2 | Goal (global): 857 -> (local): (3, 0) at time 3
[DBG]  Agent 25 | Start (global): 893 -> (local): (4, 4) at time 2 | Goal (global): 765 -> (local): (0, 4) at time 6
[DBG]  Agent 47 | Start (global): 761 -> (local): (0, 0) at time 2 | Goal (global): 793 -> (local): (1, 0) at time 3
[DBG]  Agent 58 | Start (global): 859 -> (local): (3, 2) at time 2 | Goal (global): 765 -> (local): (0, 4) at time 9
[DBG]  Agent 119 | Start (global): 797 -> (local): (1, 4) at time 2 | Goal (global): 765 -> (local): (0, 4) at time 3
[DBG]  Agent 133 | Start (global): 892 -> (local): (4, 3) at time 2 | Goal (global): 765 -> (local): (0, 4) at time 7
[DBG]  Agent 142 | Start (global): 827 -> (local): (2, 2) at time 2 | Goal (global): 764 -> (local): (0, 3) at time 11
[DBG]  [REPAIR] SAT destroy operator called.
[DBG]  [REPAIR] SAT operator â€“ launching subproblem FOR OPTIMIZATION.
[DBG]  Creating local paths (sx, sy) in the submap for T_sync = 2
[DBG]    Agent 14 (global paths from T=2 to 3) has local path: (4,1) (4,0) 
[DBG]    Agent 24 (global paths from T=2 to 3) has local path: (3,1) (3,0) 
[DBG]    Agent 25 (global paths from T=2 to 6) has local path: (4,4) (3,4) (2,4) (1,4) (0,4) 
[DBG]    Agent 47 (global paths from T=2 to 3) has local path: (0,0) (1,0) 
[DBG]    Agent 58 (global paths from T=2 to 9) has local path: (3,2) (3,3) (3,3) (3,4) (2,4) (1,4) (1,4) (0,4) 
[DBG]    Agent 119 (global paths from T=2 to 3) has local path: (1,4) (0,4) 
[DBG]    Agent 133 (global paths from T=2 to 7) has local path: (4,3) (4,4) (3,4) (2,4) (1,4) (0,4) 
[DBG]    Agent 142 (global paths from T=2 to 11) has local path: (2,2) (3,2) (3,2) (3,3) (3,4) (2,4) (2,4) (1,4) (0,4) (0,3) 
[DBG]  Checking input data for SAT solver:
[DBG]    - Number of agents to replan: 8
[DBG]  Agent 14 has the original local path length: 2 => Start (4,1), Goal (4,0)
[DBG]  Agent 24 has the original local path length: 2 => Start (3,1), Goal (3,0)
[DBG]  Agent 25 has the original local path length: 5 => Start (4,4), Goal (0,4)
[DBG]  Agent 47 has the original local path length: 2 => Start (0,0), Goal (1,0)
[DBG]  Agent 58 has the original local path length: 8 => Start (3,2), Goal (0,4)
[DBG]  Agent 119 has the original local path length: 2 => Start (1,4), Goal (0,4)
[DBG]  Agent 133 has the original local path length: 6 => Start (4,3), Goal (0,4)
[DBG]  Agent 142 has the original local path length: 10 => Start (2,2), Goal (0,3)
[DBG]  Start position: (4, 1), (3, 1), (4, 4), (0, 0), (3, 2), (1, 4), (4, 3), (2, 2), 
[DBG]  Goal position: (4, 0), (3, 0), (0, 4), (1, 0), (0, 4), (0, 4), (0, 4), (0, 3), 
[DBG]  SAT instance and solver created.
Currently solving
Instance name: scen
Map name: map
Encoding used: disappear_at_goal
SAT solver used: Kissat
Optimizing function: sum of costs
Number of agents: 8
Mks LB: 8
SoC LB: 33
Delta: 0
Remaining time: 300000 [ms]

[STAT] Solver returned: -1
[DBG]  SAT solver failed.
[STAT] SAT solver failed to find a valid solution.
[DBG]  ====================
[DBG]  SAT destroy operator called.
[DBG]  SAT heuristic: 2
[DBG]  key_agent_id: 142
[DBG]  key_agent_id global path length: 28
[DBG]  Submap content (global positions):
[DBG]  793 794 795 796 797 
[DBG]  825 826 827 828 829 
[DBG]  857 858 859 860 861 
[DBG]  889 890 891 892 893 
[DBG]  921 922 923 924 925 
[DBG]  Map content with agents and obstacles:
[DBG]  A X . X . 
[DBG]  X . . X A 
[DBG]  . . A A A 
[DBG]  . A . . A 
[DBG]  . . . . X 
[DBG]  content of the map structure that we pass to the SAT solver:
[DBG]  1  -1  1  -1  1  
[DBG]  -1  1  1  -1  1  
[DBG]  1  1  1  1  1  
[DBG]  1  1  1  1  1  
[DBG]  1  1  1  1  -1  
[DBG]  Identifying agents in a submap for rescheduling (when key_agent is there at the time 4):
[DBG]  Agent 4 found intervals in the sub-map:
[DBG]   [0..0] [4..8]
[DBG]  Agent 4 (interval in submap: [4..8]) contains time 4, added to replan.
[DBG]  Agent 11 found intervals in the sub-map:
[DBG]   [8..11]
[DBG]  Agent 11 is not in sub-map at time 4 (intervals: 
[DBG]  [8..11] )
[DBG]  Agent 14 found intervals in the sub-map:
[DBG]   [0..3]
[DBG]  Agent 14 is not in sub-map at time 4 (intervals: 
[DBG]  [0..3] )
[DBG]  Agent 24 found intervals in the sub-map:
[DBG]   [0..3] [9..9]
[DBG]  Agent 24 is not in sub-map at time 4 (intervals: 
[DBG]  [0..3] [9..9] )
[DBG]  Agent 25 found intervals in the sub-map:
[DBG]   [2..5]
[DBG]  Agent 25 (interval in submap: [2..5]) contains time 4, added to replan.
[DBG]  Agent 30 found intervals in the sub-map:
[DBG]   [0..5] [10..10]
[DBG]  Agent 30 (interval in submap: [0..5]) contains time 4, added to replan.
[DBG]  Agent 58 found intervals in the sub-map:
[DBG]   [0..8]
[DBG]  Agent 58 (interval in submap: [0..8]) contains time 4, added to replan.
[DBG]  Agent 119 found intervals in the sub-map:
[DBG]   [0..2]
[DBG]  Agent 119 is not in sub-map at time 4 (intervals: 
[DBG]  [0..2] )
[DBG]  Agent 133 found intervals in the sub-map:
[DBG]   [1..6]
[DBG]  Agent 133 (interval in submap: [1..6]) contains time 4, added to replan.
[DBG]  Agent 135 found intervals in the sub-map:
[DBG]   [4..4]
[DBG]  Agent 135 (interval in submap: [4..4]) contains time 4, added to replan.
[DBG]  Agent 142 found intervals in the sub-map:
[DBG]   [0..9]
[DBG]  Agent 142 (interval in submap: [0..9]) contains time 4, added to replan.
[DBG]  Agent 4 | Start (global): 893 -> (local): (3, 4) at time 4 | Goal (global): 889 -> (local): (3, 0) at time 8
[DBG]  Agent 25 | Start (global): 829 -> (local): (1, 4) at time 4 | Goal (global): 797 -> (local): (0, 4) at time 5
[DBG]  Agent 30 | Start (global): 890 -> (local): (3, 1) at time 4 | Goal (global): 889 -> (local): (3, 0) at time 5
[DBG]  Agent 58 | Start (global): 860 -> (local): (2, 3) at time 4 | Goal (global): 797 -> (local): (0, 4) at time 8
[DBG]  Agent 133 | Start (global): 861 -> (local): (2, 4) at time 4 | Goal (global): 797 -> (local): (0, 4) at time 6
[DBG]  Agent 135 | Start (global): 793 -> (local): (0, 0) at time 4 | Goal (global): 793 -> (local): (0, 0) at time 4
[DBG]  Agent 142 | Start (global): 859 -> (local): (2, 2) at time 4 | Goal (global): 797 -> (local): (0, 4) at time 9
[DBG]  [REPAIR] SAT destroy operator called.
[DBG]  [REPAIR] SAT operator â€“ launching subproblem FOR OPTIMIZATION.
[DBG]  Creating local paths (sx, sy) in the submap for T_sync = 4
[DBG]    Agent 4 (global paths from T=4 to 8) has local path: (3,4) (3,3) (3,2) (3,1) (3,0) 
[DBG]    Agent 25 (global paths from T=4 to 5) has local path: (1,4) (0,4) 
[DBG]    Agent 30 (global paths from T=4 to 5) has local path: (3,1) (3,0) 
[DBG]    Agent 58 (global paths from T=4 to 8) has local path: (2,3) (2,4) (1,4) (0,4) (0,4) 
[DBG]    Agent 133 (global paths from T=4 to 6) has local path: (2,4) (1,4) (0,4) 
[DBG]    Agent 135 (global paths from T=4 to 4) has local path: (0,0) 
[DBG]    Agent 142 (global paths from T=4 to 9) has local path: (2,2) (2,3) (2,4) (1,4) (1,4) (0,4) 
[DBG]  Checking input data for SAT solver:
[DBG]    - Number of agents to replan: 7
[DBG]  Agent 4 has the original local path length: 5 => Start (3,4), Goal (3,0)
[DBG]  Agent 25 has the original local path length: 2 => Start (1,4), Goal (0,4)
[DBG]  Agent 30 has the original local path length: 2 => Start (3,1), Goal (3,0)
[DBG]  Agent 58 has the original local path length: 5 => Start (2,3), Goal (0,4)
[DBG]  Agent 133 has the original local path length: 3 => Start (2,4), Goal (0,4)
[DBG]  Agent 135 has the original local path length: 1 => Start (0,0), Goal (0,0)
[DBG]  Agent 142 has the original local path length: 6 => Start (2,2), Goal (0,4)
[DBG]  Start position: (3, 4), (1, 4), (3, 1), (2, 3), (2, 4), (0, 0), (2, 2), 
[DBG]  Goal position: (3, 0), (0, 4), (3, 0), (0, 4), (0, 4), (0, 0), (0, 4), 
[DBG]  SAT instance and solver created.
Currently solving
Instance name: scen
Map name: map
Encoding used: disappear_at_goal
SAT solver used: Kissat
Optimizing function: sum of costs
Number of agents: 7
Mks LB: 5
SoC LB: 22
Delta: 0
Remaining time: 300000 [ms]

Vertex conflict! Agents 1, 2, timestep 2, location 0
Swapping conflict! Agents 1, 2, timestep 2, edge (0,0)
Vertex conflict! Agents 1, 2, timestep 3, location 0
Swapping conflict! Agents 1, 2, timestep 3, edge (0,0)
Vertex conflict! Agents 1, 2, timestep 4, location 0
Vertex conflict! Agents 1, 3, timestep 4, location 0
Vertex conflict! Agents 1, 4, timestep 3, location 0
Swapping conflict! Agents 1, 4, timestep 3, edge (0,0)
Vertex conflict! Agents 1, 4, timestep 4, location 0
Vertex conflict! Agents 1, 5, timestep 2, location 0
Swapping conflict! Agents 1, 5, timestep 2, edge (0,0)
Vertex conflict! Agents 1, 5, timestep 3, location 0
Swapping conflict! Agents 1, 5, timestep 3, edge (0,0)
Vertex conflict! Agents 1, 5, timestep 4, location 0
Vertex conflict! Agents 2, 3, timestep 4, location 0
Vertex conflict! Agents 2, 4, timestep 3, location 0
Swapping conflict! Agents 2, 4, timestep 3, edge (0,0)
Vertex conflict! Agents 2, 4, timestep 4, location 0
Vertex conflict! Agents 2, 5, timestep 2, location 0
Swapping conflict! Agents 2, 5, timestep 2, edge (0,0)
Vertex conflict! Agents 2, 5, timestep 3, location 0
Swapping conflict! Agents 2, 5, timestep 3, edge (0,0)
Vertex conflict! Agents 2, 5, timestep 4, location 0
Vertex conflict! Agents 3, 4, timestep 4, location 0
Vertex conflict! Agents 3, 5, timestep 4, location 0
Vertex conflict! Agents 4, 5, timestep 3, location 0
Swapping conflict! Agents 4, 5, timestep 3, edge (0,0)
Vertex conflict! Agents 4, 5, timestep 4, location 0
Found plan [agents = 7] [timesteps = 5]
Agent #0 : 15 14 13 12 11 
Agent #1 : 5 2 0 0 0 
Agent #2 : 12 11 0 0 0 
Agent #3 : 9 10 5 2 0 
Agent #4 : 10 5 2 0 0 
Agent #5 : 0 0 0 0 0 
Agent #6 : 8 9 10 5 2 

[STAT] Solver returned: 0
[DBG]  Agent (index) 4 | New local path (submap idx):
[DBG]  15 14 13 12 11 
[DBG]  Agent (index) 25 | New local path (submap idx):
[DBG]  5 2 
[DBG]  Agent (index) 30 | New local path (submap idx):
[DBG]  12 11 
[DBG]  Agent (index) 58 | New local path (submap idx):
[DBG]  9 10 5 2 
[DBG]  Agent (index) 133 | New local path (submap idx):
[DBG]  10 5 2 
[DBG]  Agent (index) 135 | New local path (submap idx):
[DBG]  0 
[DBG]  Agent (index) 142 | New local path (submap idx):
[DBG]  8 9 10 5 2 
[DBG]  Update the agent path 4 | Original local length: 5 | New local length: 5
[DBG]  agent 4 t=0 => decoded (sx,sy)=(3,4) => global_id=893
[DBG]  agent 4 t=1 => decoded (sx,sy)=(3,3) => global_id=892
[DBG]  agent 4 t=2 => decoded (sx,sy)=(3,2) => global_id=891
[DBG]  agent 4 t=3 => decoded (sx,sy)=(3,1) => global_id=890
[DBG]  agent 4 t=4 => decoded (sx,sy)=(3,0) => global_id=889
[DBG]  Complete path of agent 4:
[DBG]    Original: 829 830 862 894 893 892 891 890 889 888 887 886 885 884 883 851 850 849 848 847 846 878 877 876 875 874 873 905 904 903 871 839 838 806 774 742 710 678 677 645 613 581 582 583 
[DBG]    New:     829 830 862 894 893 892 891 890 889 888 887 886 885 884 883 851 850 849 848 847 846 878 877 876 875 874 873 905 904 903 871 839 838 806 774 742 710 678 677 645 613 581 582 583 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 829 830 862 894 
[DBG]    Local path (in submap): 893 892 891 890 889 
[DBG]    Suffix (out of submap): 888 887 886 885 884 883 851 850 849 848 847 846 878 877 876 875 874 873 905 904 903 871 839 838 806 774 742 710 678 677 645 613 581 582 583 
[DBG]  Original agent path length 4 je: 44
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 0: 829, 830, 862, 894, 893, 892, 891, 890, 889, 888, 887, 886, 885, 884, 883, 851, 850, 849, 848, 847, 846, 878, 877, 876, 875, 874, 873, 905, 904, 903, 871, 839, 838, 806, 774, 742, 710, 678, 677, 645, 613, 581, 582, 583, 
[DBG]  Path for agent 4 updated, resulting length: 44
[DBG]  Update the agent path 25 | Original local length: 2 | New local length: 2
[DBG]  agent 25 t=0 => decoded (sx,sy)=(1,4) => global_id=829
[DBG]  agent 25 t=1 => decoded (sx,sy)=(0,4) => global_id=797
[DBG]  Complete path of agent 25:
[DBG]    Original: 895 894 893 861 829 797 765 733 701 702 670 638 637 636 604 572 540 508 476 477 445 413 381 349 350 318 286 254 222 221 189 157 158 159 
[DBG]    New:     895 894 893 861 829 797 765 733 701 702 670 638 637 636 604 572 540 508 476 477 445 413 381 349 350 318 286 254 222 221 189 157 158 159 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 895 894 893 861 
[DBG]    Local path (in submap): 829 797 
[DBG]    Suffix (out of submap): 765 733 701 702 670 638 637 636 604 572 540 508 476 477 445 413 381 349 350 318 286 254 222 221 189 157 158 159 
[DBG]  Original agent path length 25 je: 34
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 1: 895, 894, 893, 861, 829, 797, 765, 733, 701, 702, 670, 638, 637, 636, 604, 572, 540, 508, 476, 477, 445, 413, 381, 349, 350, 318, 286, 254, 222, 221, 189, 157, 158, 159, 
[DBG]  Path for agent 25 updated, resulting length: 34
[DBG]  Update the agent path 30 | Original local length: 2 | New local length: 2
[DBG]  agent 30 t=0 => decoded (sx,sy)=(3,1) => global_id=890
[DBG]  agent 30 t=1 => decoded (sx,sy)=(3,0) => global_id=889
[DBG]  Complete path of agent 30:
[DBG]    Original: 922 922 922 922 890 889 888 856 824 792 793 761 729 728 696 664 632 600 601 569 570 571 539 507 506 538 506 505 505 504 503 
[DBG]    New:     922 922 922 922 890 889 888 856 824 792 793 761 729 728 696 664 632 600 601 569 570 571 539 507 506 538 506 505 505 504 503 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 922 922 922 922 
[DBG]    Local path (in submap): 890 889 
[DBG]    Suffix (out of submap): 888 856 824 792 793 761 729 728 696 664 632 600 601 569 570 571 539 507 506 538 506 505 505 504 503 
[DBG]  Original agent path length 30 je: 31
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 2: 922, 922, 922, 922, 890, 889, 888, 856, 824, 792, 793, 761, 729, 728, 696, 664, 632, 600, 601, 569, 570, 571, 539, 507, 506, 538, 506, 505, 505, 504, 503, 
[DBG]  Path for agent 30 updated, resulting length: 31
[DBG]  Update the agent path 58 | Original local length: 5 | New local length: 4
[DBG]  agent 58 t=0 => decoded (sx,sy)=(2,3) => global_id=860
[DBG]  agent 58 t=1 => decoded (sx,sy)=(2,4) => global_id=861
[DBG]  agent 58 t=2 => decoded (sx,sy)=(1,4) => global_id=829
[DBG]  agent 58 t=3 => decoded (sx,sy)=(0,4) => global_id=797
[DBG]  Complete path of agent 58:
[DBG]    Original: 826 827 859 860 860 861 829 797 797 765 733 701 702 670 638 639 639 639 638 637 636 635 603 602 602 602 570 538 506 474 475 443 411 379 347 
[DBG]    New:     826 827 859 860 860 861 829 797 765 733 701 702 670 638 639 639 639 638 637 636 635 603 602 602 602 570 538 506 474 475 443 411 379 347 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 826 827 859 860 
[DBG]    Local path (in submap): 860 861 829 797 765 
[DBG]    Suffix (out of submap): 733 701 702 670 638 639 639 639 638 637 636 635 603 602 602 602 570 538 506 474 475 443 411 379 347 
[DBG]  Original agent path length 58 je: 35
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 3: 826, 827, 859, 860, 860, 861, 829, 797, 765, 733, 701, 702, 670, 638, 639, 639, 639, 638, 637, 636, 635, 603, 602, 602, 602, 570, 538, 506, 474, 475, 443, 411, 379, 347, 
[DBG]  Path for agent 58 updated, resulting length: 34
[DBG]  Update the agent path 133 | Original local length: 3 | New local length: 3
[DBG]  agent 133 t=0 => decoded (sx,sy)=(2,4) => global_id=861
[DBG]  agent 133 t=1 => decoded (sx,sy)=(1,4) => global_id=829
[DBG]  agent 133 t=2 => decoded (sx,sy)=(0,4) => global_id=797
[DBG]  Complete path of agent 133:
[DBG]    Original: 956 924 892 893 861 829 797 765 733 701 702 670 638 637 636 604 603 602 570 538 506 474 473 441 409 408 376 
[DBG]    New:     956 924 892 893 861 829 797 765 733 701 702 670 638 637 636 604 603 602 570 538 506 474 473 441 409 408 376 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 956 924 892 893 
[DBG]    Local path (in submap): 861 829 797 
[DBG]    Suffix (out of submap): 765 733 701 702 670 638 637 636 604 603 602 570 538 506 474 473 441 409 408 376 
[DBG]  Original agent path length 133 je: 27
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 4: 956, 924, 892, 893, 861, 829, 797, 765, 733, 701, 702, 670, 638, 637, 636, 604, 603, 602, 570, 538, 506, 474, 473, 441, 409, 408, 376, 
[DBG]  Path for agent 133 updated, resulting length: 27
[DBG]  Update the agent path 135 | Original local length: 1 | New local length: 1
[DBG]  agent 135 t=0 => decoded (sx,sy)=(0,0) => global_id=793
[DBG]  Complete path of agent 135:
[DBG]    Original: 696 728 729 761 793 792 824 823 822 854 886 885 884 883 882 881 880 879 878 877 876 875 874 873 905 904 903 871 870 838 806 774 742 710 678 677 645 613 581 549 548 516 484 483 482 450 449 448 416 384 
[DBG]    New:     696 728 729 761 793 792 824 823 822 854 886 885 884 883 882 881 880 879 878 877 876 875 874 873 905 904 903 871 870 838 806 774 742 710 678 677 645 613 581 549 548 516 484 483 482 450 449 448 416 384 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 696 728 729 761 
[DBG]    Local path (in submap): 793 
[DBG]    Suffix (out of submap): 792 824 823 822 854 886 885 884 883 882 881 880 879 878 877 876 875 874 873 905 904 903 871 870 838 806 774 742 710 678 677 645 613 581 549 548 516 484 483 482 450 449 448 416 384 
[DBG]  Original agent path length 135 je: 50
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 5: 696, 728, 729, 761, 793, 792, 824, 823, 822, 854, 886, 885, 884, 883, 882, 881, 880, 879, 878, 877, 876, 875, 874, 873, 905, 904, 903, 871, 870, 838, 806, 774, 742, 710, 678, 677, 645, 613, 581, 549, 548, 516, 484, 483, 482, 450, 449, 448, 416, 384, 
[DBG]  Path for agent 135 updated, resulting length: 50
[DBG]  Update the agent path 142 | Original local length: 6 | New local length: 5
[DBG]  agent 142 t=0 => decoded (sx,sy)=(2,2) => global_id=859
[DBG]  agent 142 t=1 => decoded (sx,sy)=(2,3) => global_id=860
[DBG]  agent 142 t=2 => decoded (sx,sy)=(2,4) => global_id=861
[DBG]  agent 142 t=3 => decoded (sx,sy)=(1,4) => global_id=829
[DBG]  agent 142 t=4 => decoded (sx,sy)=(0,4) => global_id=797
[DBG]  Complete path of agent 142:
[DBG]    Original: 795 795 827 859 859 860 861 829 829 797 765 764 732 731 730 729 697 696 664 632 600 601 569 570 571 539 539 507 
[DBG]    New:     795 795 827 859 859 860 861 829 797 765 764 732 731 730 729 697 696 664 632 600 601 569 570 571 539 539 507 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 795 795 827 859 
[DBG]    Local path (in submap): 859 860 861 829 797 765 
[DBG]    Suffix (out of submap): 764 732 731 730 729 697 696 664 632 600 601 569 570 571 539 539 507 
[DBG]  Original agent path length 142 je: 28
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 6: 795, 795, 827, 859, 859, 860, 861, 829, 797, 765, 764, 732, 731, 730, 729, 697, 696, 664, 632, 600, 601, 569, 570, 571, 539, 539, 507, 
[DBG]  Path for agent 142 updated, resulting length: 27
[DBG]  Paths successfully updated.
[DBG]  (LNS.cpp) New path for agent 4: 
[DBG]  829, 830, 862, 894, 893, 892, 891, 890, 889, 888, 887, 886, 885, 884, 883, 851, 850, 849, 848, 847, 846, 878, 877, 876, 875, 874, 873, 905, 904, 903, 871, 839, 838, 806, 774, 742, 710, 678, 677, 645, 613, 581, 582, 583, 
[DBG]  (LNS.cpp) New path for agent 25: 
[DBG]  895, 894, 893, 861, 829, 797, 765, 733, 701, 702, 670, 638, 637, 636, 604, 572, 540, 508, 476, 477, 445, 413, 381, 349, 350, 318, 286, 254, 222, 221, 189, 157, 158, 159, 
[DBG]  (LNS.cpp) New path for agent 30: 
[DBG]  922, 922, 922, 922, 890, 889, 888, 856, 824, 792, 793, 761, 729, 728, 696, 664, 632, 600, 601, 569, 570, 571, 539, 507, 506, 538, 506, 505, 505, 504, 503, 
[DBG]  (LNS.cpp) New path for agent 58: 
[DBG]  826, 827, 859, 860, 860, 861, 829, 797, 765, 733, 701, 702, 670, 638, 639, 639, 639, 638, 637, 636, 635, 603, 602, 602, 602, 570, 538, 506, 474, 475, 443, 411, 379, 347, 
[DBG]  (LNS.cpp) New path for agent 133: 
[DBG]  956, 924, 892, 893, 861, 829, 797, 765, 733, 701, 702, 670, 638, 637, 636, 604, 603, 602, 570, 538, 506, 474, 473, 441, 409, 408, 376, 
[DBG]  (LNS.cpp) New path for agent 135: 
[DBG]  696, 728, 729, 761, 793, 792, 824, 823, 822, 854, 886, 885, 884, 883, 882, 881, 880, 879, 878, 877, 876, 875, 874, 873, 905, 904, 903, 871, 870, 838, 806, 774, 742, 710, 678, 677, 645, 613, 581, 549, 548, 516, 484, 483, 482, 450, 449, 448, 416, 384, 
[DBG]  (LNS.cpp) New path for agent 142: 
[DBG]  795, 795, 827, 859, 859, 860, 861, 829, 797, 765, 764, 732, 731, 730, 729, 697, 696, 664, 632, 600, 601, 569, 570, 571, 539, 539, 507, 
[DBG]  component_weights = {0.443719, 0.0500639, 0.0523543, 0.453862}
[DBG]  opSuccess value: 1
[STAT] neighbor.sum_of_costs before recomputation: 240
[STAT] neighbor.old_sum_of_costs before recomputation: 242
[STAT] sum_of_costs before recomputation: 4165
[DBG]  Validate solution immediately after SAT success.
[WARNING] Problem after SAT: Vertex conflict between agents 142 and 2 at location 570 at timestep 22
[DBG]  Attempting immediate repair via init_lns because problem occurred after SAT (should be applied only for conflicts...).
[DBG]  Passing 150 agents to init_lns (skip=true).
[DBG]  path_table contents for selected agents (neighbor.agents):
[DBG]    Agent 4 => controlling path length=44
[DBG]    Agent 25 => controlling path length=34
[DBG]    Agent 30 => controlling path length=31
[DBG]    Agent 58 => controlling path length=34
[DBG]    Agent 133 => controlling path length=27
[DBG]    Agent 135 => controlling path length=50
[DBG]    Agent 142 => controlling path length=27
[DBG]  hodnota skip_initial_solution=1
[DBG]  We skip initialSolution => call buildCollisionData()
[DBG]  buildCollisionData() called â€“ skip_initial_solution case.
[DBG]  Agents.size()=150, collision_graph.size()=150
[DBG]  agent 2 => updateCollidingPairs => foundCollision
[DBG]  agent 12 => updateCollidingPairs => foundCollision
[DBG]  agent 33 => updateCollidingPairs => foundCollision
[DBG]  agent 54 => updateCollidingPairs => foundCollision
[DBG]  agent 58 => updateCollidingPairs => foundCollision
[DBG]  agent 77 => updateCollidingPairs => foundCollision
[DBG]  agent 86 => updateCollidingPairs => foundCollision
[DBG]  agent 142 => updateCollidingPairs => foundCollision
[DBG]  Conflicting agent pairs:
[DBG]  agent 2 is in conflict with agent 142
[DBG]  agent 12 is in conflict with agent 58
[DBG]  agent 33 is in conflict with agent 142
[DBG]  agent 54 is in conflict with agent 58
[DBG]  agent 58 is in conflict with agent 77
[DBG]  agent 86 is in conflict with agent 142
[DBG]  buildCollisionData() => sum_of_costs=4163, num_of_colliding_pairs=6
[DBG]  buildCollisionData done => sum_of_costs=4163, num_of_colliding_pairs=6
[DBG]  sum_of_cost hodnota: 4163
[DBG]  After skip/init build => iteration_stats.back(): sum_of_costs=4163, collisions=6
[DEBUG] Using default neighbor generation strategy for conflicts: 0
[DEBUG] Using default neighbor generation strategy for conflicts: 1
[DEBUG] Using default neighbor generation strategy for conflicts: 1
	InitLNS(PP): runtime = 0.012135, iterations = 4, colliding pairs = 0, initial colliding pairs = 6, solution cost = 4160, initial solution cost = 4163, failed iterations = 0
[DBG]  init_lns->sum_of_costs after init_lns->run: 4160
[DBG]  sum_of_costs after assignment from init_lns->run: 4160
[DBG]  Recomputing sum_of_cost by dividing neighbor.sum_of_costs and neighbor.old_sum_of_costs
[STAT] sum_of_costs after recomputation: 4160
[STAT] Iteration 217
[DBG]  Using SAT operator (destroy+repair SAT).
[DBG]  ====================
[DBG]  SAT destroy operator called.
[DBG]  SAT heuristic: 2
[DBG]  key_agent_id: 35
[DBG]  key_agent_id global path length: 46
[DBG]  Submap content (global positions):
[DBG]  812 813 814 815 816 
[DBG]  844 845 846 847 848 
[DBG]  876 877 878 879 880 
[DBG]  908 909 910 911 912 
[DBG]  940 941 942 943 944 
[DBG]  Map content with agents and obstacles:
[DBG]  . . . A X 
[DBG]  . . . . A 
[DBG]  . A A . . 
[DBG]  . . . X . 
[DBG]  . . . X . 
[DBG]  content of the map structure that we pass to the SAT solver:
[DBG]  1  1  1  1  -1  
[DBG]  1  1  1  1  1  
[DBG]  1  1  1  1  1  
[DBG]  1  1  1  -1  1  
[DBG]  1  1  1  -1  1  
[DBG]  Identifying agents in a submap for rescheduling (when key_agent is there at the time 22):
[DBG]  Agent 0 found intervals in the sub-map:
[DBG]   [20..22]
[DBG]  Agent 0 (interval in submap: [20..22]) contains time 22, added to replan.
[DBG]  Agent 4 found intervals in the sub-map:
[DBG]   [18..23]
[DBG]  Agent 4 (interval in submap: [18..23]) contains time 22, added to replan.
[DBG]  Agent 6 found intervals in the sub-map:
[DBG]   [10..15]
[DBG]  Agent 6 is not in sub-map at time 22 (intervals: 
[DBG]  [10..15] )
[DBG]  Agent 35 found intervals in the sub-map:
[DBG]   [20..24]
[DBG]  Agent 35 (interval in submap: [20..24]) contains time 22, added to replan.
[DBG]  Agent 70 found intervals in the sub-map:
[DBG]   [28..29]
[DBG]  Agent 70 is not in sub-map at time 22 (intervals: 
[DBG]  [28..29] )
[DBG]  Agent 85 found intervals in the sub-map:
[DBG]   [22..24]
[DBG]  Agent 85 (interval in submap: [22..24]) contains time 22, added to replan.
[DBG]  Agent 0 | Start (global): 848 -> (local): (1, 4) at time 22 | Goal (global): 848 -> (local): (1, 4) at time 22
[DBG]  Agent 4 | Start (global): 877 -> (local): (2, 1) at time 22 | Goal (global): 876 -> (local): (2, 0) at time 23
[DBG]  Agent 35 | Start (global): 878 -> (local): (2, 2) at time 22 | Goal (global): 876 -> (local): (2, 0) at time 24
[DBG]  Agent 85 | Start (global): 815 -> (local): (0, 3) at time 22 | Goal (global): 848 -> (local): (1, 4) at time 24
[DBG]  [REPAIR] SAT destroy operator called.
[DBG]  [REPAIR] SAT operator â€“ launching subproblem FOR OPTIMIZATION.
[DBG]  Creating local paths (sx, sy) in the submap for T_sync = 22
[DBG]    Agent 0 (global paths from T=22 to 22) has local path: (1,4) 
[DBG]    Agent 4 (global paths from T=22 to 23) has local path: (2,1) (2,0) 
[DBG]    Agent 35 (global paths from T=22 to 24) has local path: (2,2) (2,1) (2,0) 
[DBG]    Agent 85 (global paths from T=22 to 24) has local path: (0,3) (1,3) (1,4) 
[DBG]  Checking input data for SAT solver:
[DBG]    - Number of agents to replan: 4
[DBG]  Agent 0 has the original local path length: 1 => Start (1,4), Goal (1,4)
[DBG]  Agent 4 has the original local path length: 2 => Start (2,1), Goal (2,0)
[DBG]  Agent 35 has the original local path length: 3 => Start (2,2), Goal (2,0)
[DBG]  Agent 85 has the original local path length: 3 => Start (0,3), Goal (1,4)
[DBG]  Start position: (1, 4), (2, 1), (2, 2), (0, 3), 
[DBG]  Goal position: (1, 4), (2, 0), (2, 0), (1, 4), 
[DBG]  SAT instance and solver created.
Currently solving
Instance name: scen
Map name: map
Encoding used: disappear_at_goal
SAT solver used: Kissat
Optimizing function: sum of costs
Number of agents: 4
Mks LB: 3
SoC LB: 9
Delta: 0
Remaining time: 300000 [ms]

Vertex conflict! Agents 0, 1, timestep 2, location 0
Found plan [agents = 4] [timesteps = 3]
Agent #0 : 8 0 0 
Agent #1 : 10 9 0 
Agent #2 : 11 10 9 
Agent #3 : 3 7 8 

[STAT] Solver returned: 0
[DBG]  Agent (index) 0 | New local path (submap idx):
[DBG]  8 
[DBG]  Agent (index) 4 | New local path (submap idx):
[DBG]  10 9 
[DBG]  Agent (index) 35 | New local path (submap idx):
[DBG]  11 10 9 
[DBG]  Agent (index) 85 | New local path (submap idx):
[DBG]  3 7 8 
[DBG]  Update the agent path 0 | Original local length: 1 | New local length: 1
[DBG]  agent 0 t=0 => decoded (sx,sy)=(1,4) => global_id=848
[DBG]  Complete path of agent 0:
[DBG]    Original: 517 549 550 582 583 584 585 617 649 650 650 651 683 684 685 686 687 719 751 783 815 847 848 849 817 818 819 820 821 822 854 855 856 857 858 859 860 861 862 830 798 799 
[DBG]    New:     517 549 550 582 583 584 585 617 649 650 650 651 683 684 685 686 687 719 751 783 815 847 848 849 817 818 819 820 821 822 854 855 856 857 858 859 860 861 862 830 798 799 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 517 549 550 582 583 584 585 617 649 650 650 651 683 684 685 686 687 719 751 783 815 847 
[DBG]    Local path (in submap): 848 
[DBG]    Suffix (out of submap): 849 817 818 819 820 821 822 854 855 856 857 858 859 860 861 862 830 798 799 
[DBG]  Original agent path length 0 je: 42
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 0: 517, 549, 550, 582, 583, 584, 585, 617, 649, 650, 650, 651, 683, 684, 685, 686, 687, 719, 751, 783, 815, 847, 848, 849, 817, 818, 819, 820, 821, 822, 854, 855, 856, 857, 858, 859, 860, 861, 862, 830, 798, 799, 
[DBG]  Path for agent 0 updated, resulting length: 42
[DBG]  Update the agent path 4 | Original local length: 2 | New local length: 2
[DBG]  agent 4 t=0 => decoded (sx,sy)=(2,1) => global_id=877
[DBG]  agent 4 t=1 => decoded (sx,sy)=(2,0) => global_id=876
[DBG]  Complete path of agent 4:
[DBG]    Original: 829 830 862 894 893 892 891 890 889 888 887 886 885 884 883 851 850 849 848 847 846 878 877 876 875 874 873 905 904 903 871 839 838 806 774 742 710 678 677 645 613 581 582 583 
[DBG]    New:     829 830 862 894 893 892 891 890 889 888 887 886 885 884 883 851 850 849 848 847 846 878 877 876 875 874 873 905 904 903 871 839 838 806 774 742 710 678 677 645 613 581 582 583 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 829 830 862 894 893 892 891 890 889 888 887 886 885 884 883 851 850 849 848 847 846 878 
[DBG]    Local path (in submap): 877 876 
[DBG]    Suffix (out of submap): 875 874 873 905 904 903 871 839 838 806 774 742 710 678 677 645 613 581 582 583 
[DBG]  Original agent path length 4 je: 44
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 1: 829, 830, 862, 894, 893, 892, 891, 890, 889, 888, 887, 886, 885, 884, 883, 851, 850, 849, 848, 847, 846, 878, 877, 876, 875, 874, 873, 905, 904, 903, 871, 839, 838, 806, 774, 742, 710, 678, 677, 645, 613, 581, 582, 583, 
[DBG]  Path for agent 4 updated, resulting length: 44
[DBG]  Update the agent path 35 | Original local length: 3 | New local length: 3
[DBG]  agent 35 t=0 => decoded (sx,sy)=(2,2) => global_id=878
[DBG]  agent 35 t=1 => decoded (sx,sy)=(2,1) => global_id=877
[DBG]  agent 35 t=2 => decoded (sx,sy)=(2,0) => global_id=876
[DBG]  Complete path of agent 35:
[DBG]    Original: 735 767 799 798 830 862 894 893 892 891 890 889 888 887 886 885 884 883 882 881 880 879 878 877 876 875 874 906 905 937 936 935 934 902 870 838 806 805 773 772 740 739 738 737 737 736 
[DBG]    New:     735 767 799 798 830 862 894 893 892 891 890 889 888 887 886 885 884 883 882 881 880 879 878 877 876 875 874 906 905 937 936 935 934 902 870 838 806 805 773 772 740 739 738 737 737 736 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 735 767 799 798 830 862 894 893 892 891 890 889 888 887 886 885 884 883 882 881 880 879 
[DBG]    Local path (in submap): 878 877 876 
[DBG]    Suffix (out of submap): 875 874 906 905 937 936 935 934 902 870 838 806 805 773 772 740 739 738 737 737 736 
[DBG]  Original agent path length 35 je: 46
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 2: 735, 767, 799, 798, 830, 862, 894, 893, 892, 891, 890, 889, 888, 887, 886, 885, 884, 883, 882, 881, 880, 879, 878, 877, 876, 875, 874, 906, 905, 937, 936, 935, 934, 902, 870, 838, 806, 805, 773, 772, 740, 739, 738, 737, 737, 736, 
[DBG]  Path for agent 35 updated, resulting length: 46
[DBG]  Update the agent path 85 | Original local length: 3 | New local length: 3
[DBG]  agent 85 t=0 => decoded (sx,sy)=(0,3) => global_id=815
[DBG]  agent 85 t=1 => decoded (sx,sy)=(1,3) => global_id=847
[DBG]  agent 85 t=2 => decoded (sx,sy)=(1,4) => global_id=848
[DBG]  Complete path of agent 85:
[DBG]    Original: 709 710 678 646 647 648 649 650 682 714 714 682 682 683 684 685 717 718 750 750 751 783 815 847 848 849 817 818 819 820 821 822 790 
[DBG]    New:     709 710 678 646 647 648 649 650 682 714 714 682 682 683 684 685 717 718 750 750 751 783 815 847 848 849 817 818 819 820 821 822 790 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 709 710 678 646 647 648 649 650 682 714 714 682 682 683 684 685 717 718 750 750 751 783 
[DBG]    Local path (in submap): 815 847 848 
[DBG]    Suffix (out of submap): 849 817 818 819 820 821 822 790 
[DBG]  Original agent path length 85 je: 33
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 3: 709, 710, 678, 646, 647, 648, 649, 650, 682, 714, 714, 682, 682, 683, 684, 685, 717, 718, 750, 750, 751, 783, 815, 847, 848, 849, 817, 818, 819, 820, 821, 822, 790, 
[DBG]  Path for agent 85 updated, resulting length: 33
[DBG]  Paths successfully updated.
[DBG]  (LNS.cpp) New path for agent 0: 
[DBG]  517, 549, 550, 582, 583, 584, 585, 617, 649, 650, 650, 651, 683, 684, 685, 686, 687, 719, 751, 783, 815, 847, 848, 849, 817, 818, 819, 820, 821, 822, 854, 855, 856, 857, 858, 859, 860, 861, 862, 830, 798, 799, 
[DBG]  (LNS.cpp) New path for agent 4: 
[DBG]  829, 830, 862, 894, 893, 892, 891, 890, 889, 888, 887, 886, 885, 884, 883, 851, 850, 849, 848, 847, 846, 878, 877, 876, 875, 874, 873, 905, 904, 903, 871, 839, 838, 806, 774, 742, 710, 678, 677, 645, 613, 581, 582, 583, 
[DBG]  (LNS.cpp) New path for agent 35: 
[DBG]  735, 767, 799, 798, 830, 862, 894, 893, 892, 891, 890, 889, 888, 887, 886, 885, 884, 883, 882, 881, 880, 879, 878, 877, 876, 875, 874, 906, 905, 937, 936, 935, 934, 902, 870, 838, 806, 805, 773, 772, 740, 739, 738, 737, 737, 736, 
[DBG]  (LNS.cpp) New path for agent 85: 
[DBG]  709, 710, 678, 646, 647, 648, 649, 650, 682, 714, 714, 682, 682, 683, 684, 685, 717, 718, 750, 750, 751, 783, 815, 847, 848, 849, 817, 818, 819, 820, 821, 822, 790, 
[DBG]  component_weights = {0.448712, 0.0496146, 0.0518844, 0.449789}
[DBG]  opSuccess value: 1
[STAT] neighbor.sum_of_costs before recomputation: 161
[STAT] neighbor.old_sum_of_costs before recomputation: 161
[STAT] sum_of_costs before recomputation: 4160
[DBG]  Validate solution immediately after SAT success.
[DBG]  No problems after SAT replan.
[DBG]  Recomputing sum_of_cost by dividing neighbor.sum_of_costs and neighbor.old_sum_of_costs
[STAT] sum_of_costs after recomputation: 4160
[STAT] Iteration 218
[DBG]  Using SAT operator (destroy+repair SAT).
[DBG]  ====================
[DBG]  SAT destroy operator called.
[DBG]  SAT heuristic: 2
[DBG]  key_agent_id: 89
[DBG]  key_agent_id global path length: 23
[DBG]  Submap content (global positions):
[DBG]  820 821 822 823 824 
[DBG]  852 853 854 855 856 
[DBG]  884 885 886 887 888 
[DBG]  916 917 918 919 920 
[DBG]  948 949 950 951 952 
[DBG]  Map content with agents and obstacles:
[DBG]  . . . . A 
[DBG]  X X . . . 
[DBG]  . . A A . 
[DBG]  . . . . . 
[DBG]  . . . X . 
[DBG]  content of the map structure that we pass to the SAT solver:
[DBG]  1  1  1  1  1  
[DBG]  -1  -1  1  1  1  
[DBG]  1  1  1  1  1  
[DBG]  1  1  1  1  1  
[DBG]  1  1  1  -1  1  
[DBG]  Identifying agents in a submap for rescheduling (when key_agent is there at the time 17):
[DBG]  Agent 1 found intervals in the sub-map:
[DBG]   [0..0] [18..26]
[DBG]  Agent 1 is not in sub-map at time 17 (intervals: 
[DBG]  [0..0] [18..26] )
[DBG]  Agent 7 found intervals in the sub-map:
[DBG]   [9..16]
[DBG]  Agent 7 is not in sub-map at time 17 (intervals: 
[DBG]  [9..16] )
[DBG]  Agent 11 found intervals in the sub-map:
[DBG]   [14..20]
[DBG]  Agent 11 (interval in submap: [14..20]) contains time 17, added to replan.
[DBG]  Agent 14 found intervals in the sub-map:
[DBG]   [4..8]
[DBG]  Agent 14 is not in sub-map at time 17 (intervals: 
[DBG]  [4..8] )
[DBG]  Agent 35 found intervals in the sub-map:
[DBG]   [12..16]
[DBG]  Agent 35 is not in sub-map at time 17 (intervals: 
[DBG]  [12..16] )
[DBG]  Agent 70 found intervals in the sub-map:
[DBG]   [17..23]
[DBG]  Agent 70 (interval in submap: [17..23]) contains time 17, added to replan.
[DBG]  Agent 89 found intervals in the sub-map:
[DBG]   [13..19]
[DBG]  Agent 89 (interval in submap: [13..19]) contains time 17, added to replan.
[DBG]  Agent 102 found intervals in the sub-map:
[DBG]  
[DBG]  Agent 102 is not in sub-map at time 17 (intervals: 
[DBG]  )
[DBG]  Agent 108 found intervals in the sub-map:
[DBG]   [7..14]
[DBG]  Agent 108 is not in sub-map at time 17 (intervals: 
[DBG]  [7..14] )
[DBG]  Agent 11 | Start (global): 887 -> (local): (2, 3) at time 17 | Goal (global): 884 -> (local): (2, 0) at time 20
[DBG]  Agent 70 | Start (global): 824 -> (local): (0, 4) at time 17 | Goal (global): 884 -> (local): (2, 0) at time 23
[DBG]  Agent 89 | Start (global): 886 -> (local): (2, 2) at time 17 | Goal (global): 950 -> (local): (4, 2) at time 19
[DBG]  [REPAIR] SAT destroy operator called.
[DBG]  [REPAIR] SAT operator â€“ launching subproblem FOR OPTIMIZATION.
[DBG]  Creating local paths (sx, sy) in the submap for T_sync = 17
[DBG]    Agent 11 (global paths from T=17 to 20) has local path: (2,3) (2,2) (2,1) (2,0) 
[DBG]    Agent 70 (global paths from T=17 to 23) has local path: (0,4) (1,4) (1,3) (1,2) (2,2) (2,1) (2,0) 
[DBG]    Agent 89 (global paths from T=17 to 19) has local path: (2,2) (3,2) (4,2) 
[DBG]  Checking input data for SAT solver:
[DBG]    - Number of agents to replan: 3
[DBG]  Agent 11 has the original local path length: 4 => Start (2,3), Goal (2,0)
[DBG]  Agent 70 has the original local path length: 7 => Start (0,4), Goal (2,0)
[DBG]  Agent 89 has the original local path length: 3 => Start (2,2), Goal (4,2)
[DBG]  Start position: (2, 3), (0, 4), (2, 2), 
[DBG]  Goal position: (2, 0), (2, 0), (4, 2), 
[DBG]  SAT instance and solver created.
Currently solving
Instance name: scen
Map name: map
Encoding used: disappear_at_goal
SAT solver used: Kissat
Optimizing function: sum of costs
Number of agents: 3
Mks LB: 7
SoC LB: 14
Delta: 0
Remaining time: 300000 [ms]

Vertex conflict! Agents 0, 2, timestep 4, location 0
Swapping conflict! Agents 0, 2, timestep 4, edge (0,0)
Vertex conflict! Agents 0, 2, timestep 5, location 0
Swapping conflict! Agents 0, 2, timestep 5, edge (0,0)
Vertex conflict! Agents 0, 2, timestep 6, location 0
Found plan [agents = 3] [timesteps = 7]
Agent #0 : 11 10 9 8 0 0 0 
Agent #1 : 4 7 12 11 10 9 8 
Agent #2 : 10 15 20 0 0 0 0 

[STAT] Solver returned: 0
[DBG]  Agent (index) 11 | New local path (submap idx):
[DBG]  11 10 9 8 
[DBG]  Agent (index) 70 | New local path (submap idx):
[DBG]  4 7 12 11 10 9 8 
[DBG]  Agent (index) 89 | New local path (submap idx):
[DBG]  10 15 20 
[DBG]  Update the agent path 11 | Original local length: 4 | New local length: 4
[DBG]  agent 11 t=0 => decoded (sx,sy)=(2,3) => global_id=887
[DBG]  agent 11 t=1 => decoded (sx,sy)=(2,2) => global_id=886
[DBG]  agent 11 t=2 => decoded (sx,sy)=(2,1) => global_id=885
[DBG]  agent 11 t=3 => decoded (sx,sy)=(2,0) => global_id=884
[DBG]  Complete path of agent 11:
[DBG]    Original: 990 990 990 990 990 989 957 956 924 924 923 922 954 953 952 920 888 887 886 885 884 883 882 881 880 879 879 847 815 783 784 752 720 688 656 657 
[DBG]    New:     990 990 990 990 990 989 957 956 924 924 923 922 954 953 952 920 888 887 886 885 884 883 882 881 880 879 879 847 815 783 784 752 720 688 656 657 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 990 990 990 990 990 989 957 956 924 924 923 922 954 953 952 920 888 
[DBG]    Local path (in submap): 887 886 885 884 
[DBG]    Suffix (out of submap): 883 882 881 880 879 879 847 815 783 784 752 720 688 656 657 
[DBG]  Original agent path length 11 je: 36
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 0: 990, 990, 990, 990, 990, 989, 957, 956, 924, 924, 923, 922, 954, 953, 952, 920, 888, 887, 886, 885, 884, 883, 882, 881, 880, 879, 879, 847, 815, 783, 784, 752, 720, 688, 656, 657, 
[DBG]  Path for agent 11 updated, resulting length: 36
[DBG]  Update the agent path 70 | Original local length: 7 | New local length: 7
[DBG]  agent 70 t=0 => decoded (sx,sy)=(0,4) => global_id=824
[DBG]  agent 70 t=1 => decoded (sx,sy)=(1,4) => global_id=856
[DBG]  agent 70 t=2 => decoded (sx,sy)=(2,4) => global_id=888
[DBG]  agent 70 t=3 => decoded (sx,sy)=(2,3) => global_id=887
[DBG]  agent 70 t=4 => decoded (sx,sy)=(2,2) => global_id=886
[DBG]  agent 70 t=5 => decoded (sx,sy)=(2,1) => global_id=885
[DBG]  agent 70 t=6 => decoded (sx,sy)=(2,0) => global_id=884
[DBG]  Complete path of agent 70:
[DBG]    Original: 632 600 632 664 696 697 697 697 697 697 697 697 697 729 761 793 792 824 856 855 854 886 885 884 883 882 881 913 912 944 976 975 974 
[DBG]    New:     632 600 632 664 696 697 697 697 697 697 697 697 697 729 761 793 792 824 856 888 887 886 885 884 883 882 881 913 912 944 976 975 974 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 632 600 632 664 696 697 697 697 697 697 697 697 697 729 761 793 792 
[DBG]    Local path (in submap): 824 856 888 887 886 885 884 
[DBG]    Suffix (out of submap): 883 882 881 913 912 944 976 975 974 
[DBG]  Original agent path length 70 je: 33
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 1: 632, 600, 632, 664, 696, 697, 697, 697, 697, 697, 697, 697, 697, 729, 761, 793, 792, 824, 856, 888, 887, 886, 885, 884, 883, 882, 881, 913, 912, 944, 976, 975, 974, 
[DBG]  Path for agent 70 updated, resulting length: 33
[DBG]  Update the agent path 89 | Original local length: 3 | New local length: 3
[DBG]  agent 89 t=0 => decoded (sx,sy)=(2,2) => global_id=886
[DBG]  agent 89 t=1 => decoded (sx,sy)=(3,2) => global_id=918
[DBG]  agent 89 t=2 => decoded (sx,sy)=(4,2) => global_id=950
[DBG]  Complete path of agent 89:
[DBG]    Original: 437 469 501 533 565 597 596 628 660 692 724 756 788 820 821 822 854 886 918 950 982 983 1015 
[DBG]    New:     437 469 501 533 565 597 596 628 660 692 724 756 788 820 821 822 854 886 918 950 982 983 1015 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 437 469 501 533 565 597 596 628 660 692 724 756 788 820 821 822 854 
[DBG]    Local path (in submap): 886 918 950 
[DBG]    Suffix (out of submap): 982 983 1015 
[DBG]  Original agent path length 89 je: 23
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 2: 437, 469, 501, 533, 565, 597, 596, 628, 660, 692, 724, 756, 788, 820, 821, 822, 854, 886, 918, 950, 982, 983, 1015, 
[DBG]  Path for agent 89 updated, resulting length: 23
[DBG]  Paths successfully updated.
[DBG]  (LNS.cpp) New path for agent 11: 
[DBG]  990, 990, 990, 990, 990, 989, 957, 956, 924, 924, 923, 922, 954, 953, 952, 920, 888, 887, 886, 885, 884, 883, 882, 881, 880, 879, 879, 847, 815, 783, 784, 752, 720, 688, 656, 657, 
[DBG]  (LNS.cpp) New path for agent 70: 
[DBG]  632, 600, 632, 664, 696, 697, 697, 697, 697, 697, 697, 697, 697, 729, 761, 793, 792, 824, 856, 888, 887, 886, 885, 884, 883, 882, 881, 913, 912, 944, 976, 975, 974, 
[DBG]  (LNS.cpp) New path for agent 89: 
[DBG]  437, 469, 501, 533, 565, 597, 596, 628, 660, 692, 724, 756, 788, 820, 821, 822, 854, 886, 918, 950, 982, 983, 1015, 
[DBG]  component_weights = {0.453714, 0.0491644, 0.0514136, 0.445708}
[DBG]  opSuccess value: 1
[STAT] neighbor.sum_of_costs before recomputation: 89
[STAT] neighbor.old_sum_of_costs before recomputation: 89
[STAT] sum_of_costs before recomputation: 4160
[DBG]  Validate solution immediately after SAT success.
[DBG]  No problems after SAT replan.
[DBG]  Recomputing sum_of_cost by dividing neighbor.sum_of_costs and neighbor.old_sum_of_costs
[STAT] sum_of_costs after recomputation: 4160
[STAT] Iteration 219
[DBG]  Using SAT operator (destroy+repair SAT).
[DBG]  ====================
[DBG]  SAT destroy operator called.
[DBG]  SAT heuristic: 2
[DBG]  key_agent_id: 102
[DBG]  key_agent_id global path length: 12
[DBG]  Submap content (global positions):
[DBG]  857 858 859 860 861 
[DBG]  889 890 891 892 893 
[DBG]  921 922 923 924 925 
[DBG]  953 954 955 956 957 
[DBG]  985 986 987 988 989 
[DBG]  Map content with agents and obstacles:
[DBG]  . . . . . 
[DBG]  A . . A . 
[DBG]  . . A A X 
[DBG]  . . . . . 
[DBG]  . . X . . 
[DBG]  content of the map structure that we pass to the SAT solver:
[DBG]  1  1  1  1  1  
[DBG]  1  1  1  1  1  
[DBG]  1  1  1  1  -1  
[DBG]  1  1  1  1  1  
[DBG]  1  1  -1  1  1  
[DBG]  Identifying agents in a submap for rescheduling (when key_agent is there at the time 8):
[DBG]  Agent 4 found intervals in the sub-map:
[DBG]   [4..8]
[DBG]  Agent 4 (interval in submap: [4..8]) contains time 8, added to replan.
[DBG]  Agent 11 found intervals in the sub-map:
[DBG]   [5..13]
[DBG]  Agent 11 (interval in submap: [5..13]) contains time 8, added to replan.
[DBG]  Agent 30 found intervals in the sub-map:
[DBG]   [0..5]
[DBG]  Agent 30 is not in sub-map at time 8 (intervals: 
[DBG]  [0..5] )
[DBG]  Agent 35 found intervals in the sub-map:
[DBG]   [7..11]
[DBG]  Agent 35 (interval in submap: [7..11]) contains time 8, added to replan.
[DBG]  Agent 102 found intervals in the sub-map:
[DBG]   [4..11]
[DBG]  Agent 102 (interval in submap: [4..11]) contains time 8, added to replan.
[DBG]  Agent 142 found intervals in the sub-map:
[DBG]   [3..6]
[DBG]  Agent 142 is not in sub-map at time 8 (intervals: 
[DBG]  [3..6] )
[DBG]  Agent 4 | Start (global): 889 -> (local): (1, 0) at time 8 | Goal (global): 889 -> (local): (1, 0) at time 8
[DBG]  Agent 11 | Start (global): 924 -> (local): (2, 3) at time 8 | Goal (global): 953 -> (local): (3, 0) at time 13
[DBG]  Agent 35 | Start (global): 892 -> (local): (1, 3) at time 8 | Goal (global): 889 -> (local): (1, 0) at time 11
[DBG]  Agent 102 | Start (global): 923 -> (local): (2, 2) at time 8 | Goal (global): 890 -> (local): (1, 1) at time 11
[DBG]  [REPAIR] SAT destroy operator called.
[DBG]  [REPAIR] SAT operator â€“ launching subproblem FOR OPTIMIZATION.
[DBG]  Creating local paths (sx, sy) in the submap for T_sync = 8
[DBG]    Agent 4 (global paths from T=8 to 8) has local path: (1,0) 
[DBG]    Agent 11 (global paths from T=8 to 13) has local path: (2,3) (2,3) (2,2) (2,1) (3,1) (3,0) 
[DBG]    Agent 35 (global paths from T=8 to 11) has local path: (1,3) (1,2) (1,1) (1,0) 
[DBG]    Agent 102 (global paths from T=8 to 11) has local path: (2,2) (2,2) (1,2) (1,1) 
[DBG]  Checking input data for SAT solver:
[DBG]    - Number of agents to replan: 4
[DBG]  Agent 4 has the original local path length: 1 => Start (1,0), Goal (1,0)
[DBG]  Agent 11 has the original local path length: 6 => Start (2,3), Goal (3,0)
[DBG]  Agent 35 has the original local path length: 4 => Start (1,3), Goal (1,0)
[DBG]  Agent 102 has the original local path length: 4 => Start (2,2), Goal (1,1)
[DBG]  Start position: (1, 0), (2, 3), (1, 3), (2, 2), 
[DBG]  Goal position: (1, 0), (3, 0), (1, 0), (1, 1), 
[DBG]  SAT instance and solver created.
Currently solving
Instance name: scen
Map name: map
Encoding used: disappear_at_goal
SAT solver used: Kissat
Optimizing function: sum of costs
Number of agents: 4
Mks LB: 5
SoC LB: 13
Delta: 0
Remaining time: 300000 [ms]

[STAT] Solver returned: -1
[DBG]  SAT solver failed.
[STAT] SAT solver failed to find a valid solution.
[DBG]  ====================
[DBG]  SAT destroy operator called.
[DBG]  SAT heuristic: 2
[DBG]  key_agent_id: 102
[DBG]  key_agent_id global path length: 12
[DBG]  Submap content (global positions):
[DBG]  957 958 959 -1 -1 
[DBG]  989 990 991 -1 -1 
[DBG]  1021 1022 1023 -1 -1 
[DBG]  -1 -1 -1 -1 -1 
[DBG]  -1 -1 -1 -1 -1 
[DBG]  Map content with agents and obstacles:
[DBG]  . X X X X 
[DBG]  . A . X X 
[DBG]  . . A X X 
[DBG]  X X X X X 
[DBG]  X X X X X 
[DBG]  content of the map structure that we pass to the SAT solver:
[DBG]  1  -1  -1  1  1  
[DBG]  1  1  1  1  1  
[DBG]  1  1  1  1  1  
[DBG]  1  1  1  1  1  
[DBG]  1  1  1  1  1  
[DBG]  Identifying agents in a submap for rescheduling (when key_agent is there at the time 1):
[DBG]  Agent 11 found intervals in the sub-map:
[DBG]   [0..6]
[DBG]  Agent 11 (interval in submap: [0..6]) contains time 1, added to replan.
[DBG]  Agent 102 found intervals in the sub-map:
[DBG]   [0..5]
[DBG]  Agent 102 (interval in submap: [0..5]) contains time 1, added to replan.
[DBG]  Agent 133 found intervals in the sub-map:
[DBG]  
[DBG]  Agent 133 is not in sub-map at time 1 (intervals: 
[DBG]  )
[DBG]  Agent 11 | Start (global): 990 -> (local): (1, 1) at time 1 | Goal (global): 957 -> (local): (0, 0) at time 6
[DBG]  Agent 102 | Start (global): 1023 -> (local): (2, 2) at time 1 | Goal (global): 957 -> (local): (0, 0) at time 5
[DBG]  [REPAIR] SAT destroy operator called.
[DBG]  [REPAIR] SAT operator â€“ launching subproblem FOR OPTIMIZATION.
[DBG]  Creating local paths (sx, sy) in the submap for T_sync = 1
[DBG]    Agent 11 (global paths from T=1 to 6) has local path: (1,1) (1,1) (1,1) (1,1) (1,0) (0,0) 
[DBG]    Agent 102 (global paths from T=1 to 5) has local path: (2,2) (2,1) (2,0) (1,0) (0,0) 
[DBG]  Checking input data for SAT solver:
[DBG]    - Number of agents to replan: 2
[DBG]  Agent 11 has the original local path length: 6 => Start (1,1), Goal (0,0)
[DBG]  Agent 102 has the original local path length: 5 => Start (2,2), Goal (0,0)
[DBG]  Start position: (1, 1), (2, 2), 
[DBG]  Goal position: (0, 0), (0, 0), 
[DBG]  SAT instance and solver created.
Currently solving
Instance name: scen
Map name: map
Encoding used: disappear_at_goal
SAT solver used: Kissat
Optimizing function: sum of costs
Number of agents: 2
Mks LB: 5
SoC LB: 8
Delta: 0
Remaining time: 300000 [ms]

Vertex conflict! Agents 0, 1, timestep 4, location 0
Found plan [agents = 2] [timesteps = 5]
Agent #0 : 4 3 0 0 0 
Agent #1 : 10 9 8 3 0 

[STAT] Solver returned: 0
[DBG]  Agent (index) 11 | New local path (submap idx):
[DBG]  4 3 0 
[DBG]  Agent (index) 102 | New local path (submap idx):
[DBG]  10 9 8 3 0 
[DBG]  Update the agent path 11 | Original local length: 6 | New local length: 3
[DBG]  agent 11 t=0 => decoded (sx,sy)=(1,1) => global_id=990
[DBG]  agent 11 t=1 => decoded (sx,sy)=(1,0) => global_id=989
[DBG]  agent 11 t=2 => decoded (sx,sy)=(0,0) => global_id=957
[DBG]  Complete path of agent 11:
[DBG]    Original: 990 990 990 990 990 989 957 956 924 924 923 922 954 953 952 920 888 887 886 885 884 883 882 881 880 879 879 847 815 783 784 752 720 688 656 657 
[DBG]    New:     990 990 989 957 956 924 924 923 922 954 953 952 920 888 887 886 885 884 883 882 881 880 879 879 847 815 783 784 752 720 688 656 657 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 990 
[DBG]    Local path (in submap): 990 989 957 956 924 924 
[DBG]    Suffix (out of submap): 923 922 954 953 952 920 888 887 886 885 884 883 882 881 880 879 879 847 815 783 784 752 720 688 656 657 
[DBG]  Original agent path length 11 je: 36
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 0: 990, 990, 989, 957, 956, 924, 924, 923, 922, 954, 953, 952, 920, 888, 887, 886, 885, 884, 883, 882, 881, 880, 879, 879, 847, 815, 783, 784, 752, 720, 688, 656, 657, 
[DBG]  Path for agent 11 updated, resulting length: 33
[DBG]  Update the agent path 102 | Original local length: 5 | New local length: 5
[DBG]  agent 102 t=0 => decoded (sx,sy)=(2,2) => global_id=1023
[DBG]  agent 102 t=1 => decoded (sx,sy)=(2,1) => global_id=1022
[DBG]  agent 102 t=2 => decoded (sx,sy)=(2,0) => global_id=1021
[DBG]  agent 102 t=3 => decoded (sx,sy)=(1,0) => global_id=989
[DBG]  agent 102 t=4 => decoded (sx,sy)=(0,0) => global_id=957
[DBG]  Complete path of agent 102:
[DBG]    Original: 991 1023 1022 1021 989 957 956 955 923 923 891 890 
[DBG]    New:     991 1023 1022 1021 989 957 956 955 923 923 891 890 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 991 
[DBG]    Local path (in submap): 1023 1022 1021 989 957 
[DBG]    Suffix (out of submap): 956 955 923 923 891 890 
[DBG]  Original agent path length 102 je: 12
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 1: 991, 1023, 1022, 1021, 989, 957, 956, 955, 923, 923, 891, 890, 
[DBG]  Path for agent 102 updated, resulting length: 12
[DBG]  Paths successfully updated.
[DBG]  (LNS.cpp) New path for agent 11: 
[DBG]  990, 990, 989, 957, 956, 924, 924, 923, 922, 954, 953, 952, 920, 888, 887, 886, 885, 884, 883, 882, 881, 880, 879, 879, 847, 815, 783, 784, 752, 720, 688, 656, 657, 
[DBG]  (LNS.cpp) New path for agent 102: 
[DBG]  991, 1023, 1022, 1021, 989, 957, 956, 955, 923, 923, 891, 890, 
[DBG]  component_weights = {0.449492, 0.0487069, 0.0509352, 0.450866}
[DBG]  opSuccess value: 1
[STAT] neighbor.sum_of_costs before recomputation: 43
[STAT] neighbor.old_sum_of_costs before recomputation: 46
[STAT] sum_of_costs before recomputation: 4160
[DBG]  Validate solution immediately after SAT success.
[WARNING] Problem after SAT: Vertex conflict between agents 7 and 11 at location 887 at timestep 14
[DBG]  Attempting immediate repair via init_lns because problem occurred after SAT (should be applied only for conflicts...).
[DBG]  Passing 150 agents to init_lns (skip=true).
[DBG]  path_table contents for selected agents (neighbor.agents):
[DBG]    Agent 11 => controlling path length=33
[DBG]    Agent 102 => controlling path length=12
[DBG]  hodnota skip_initial_solution=1
[DBG]  We skip initialSolution => call buildCollisionData()
[DBG]  buildCollisionData() called â€“ skip_initial_solution case.
[DBG]  Agents.size()=150, collision_graph.size()=150
[DBG]  agent 7 => updateCollidingPairs => foundCollision
[DBG]  agent 11 => updateCollidingPairs => foundCollision
[DBG]  agent 44 => updateCollidingPairs => foundCollision
[DBG]  agent 55 => updateCollidingPairs => foundCollision
[DBG]  agent 57 => updateCollidingPairs => foundCollision
[DBG]  agent 69 => updateCollidingPairs => foundCollision
[DBG]  agent 71 => updateCollidingPairs => foundCollision
[DBG]  agent 100 => updateCollidingPairs => foundCollision
[DBG]  agent 106 => updateCollidingPairs => foundCollision
[DBG]  Conflicting agent pairs:
[DBG]  agent 7 is in conflict with agent 11
[DBG]  agent 11 is in conflict with agent 44
[DBG]  agent 11 is in conflict with agent 55
[DBG]  agent 11 is in conflict with agent 57
[DBG]  agent 11 is in conflict with agent 69
[DBG]  agent 11 is in conflict with agent 71
[DBG]  agent 11 is in conflict with agent 100
[DBG]  agent 11 is in conflict with agent 106
[DBG]  buildCollisionData() => sum_of_costs=4157, num_of_colliding_pairs=8
[DBG]  buildCollisionData done => sum_of_costs=4157, num_of_colliding_pairs=8
[DBG]  sum_of_cost hodnota: 4157
[DBG]  After skip/init build => iteration_stats.back(): sum_of_costs=4157, collisions=8
[DEBUG] Using default neighbor generation strategy for conflicts: 0
[DEBUG] Using default neighbor generation strategy for conflicts: 1
	InitLNS(PP): runtime = 0.0151722, iterations = 3, colliding pairs = 0, initial colliding pairs = 8, solution cost = 4184, initial solution cost = 4157, failed iterations = 0
[DBG]  init_lns->sum_of_costs after init_lns->run: 4184
[DBG]  sum_of_costs after assignment from init_lns->run: 4184
[DBG]  Recomputing sum_of_cost by dividing neighbor.sum_of_costs and neighbor.old_sum_of_costs
[STAT] sum_of_costs after recomputation: 4184
[STAT] Iteration 220
[DBG]  Using SAT operator (destroy+repair SAT).
[DBG]  ====================
[DBG]  SAT destroy operator called.
[DBG]  SAT heuristic: 2
[DBG]  key_agent_id: 41
[DBG]  key_agent_id global path length: 13
[DBG]  Submap content (global positions):
[DBG]  936 937 938 939 940 
[DBG]  968 969 970 971 972 
[DBG]  1000 1001 1002 1003 1004 
[DBG]  -1 -1 -1 -1 -1 
[DBG]  -1 -1 -1 -1 -1 
[DBG]  Map content with agents and obstacles:
[DBG]  A . X . . 
[DBG]  . X . X X 
[DBG]  . A A . . 
[DBG]  X X X X X 
[DBG]  X X X X X 
[DBG]  content of the map structure that we pass to the SAT solver:
[DBG]  1  1  -1  1  1  
[DBG]  1  -1  1  -1  -1  
[DBG]  1  1  1  1  1  
[DBG]  1  1  1  1  1  
[DBG]  1  1  1  1  1  
[DBG]  Identifying agents in a submap for rescheduling (when key_agent is there at the time 1):
[DBG]  Agent 41 found intervals in the sub-map:
[DBG]   [0..5]
[DBG]  Agent 41 (interval in submap: [0..5]) contains time 1, added to replan.
[DBG]  Agent 68 found intervals in the sub-map:
[DBG]   [0..2]
[DBG]  Agent 68 (interval in submap: [0..2]) contains time 1, added to replan.
[DBG]  Agent 105 found intervals in the sub-map:
[DBG]   [0..4]
[DBG]  Agent 105 (interval in submap: [0..4]) contains time 1, added to replan.
[DBG]  Agent 41 | Start (global): 1002 -> (local): (2, 2) at time 1 | Goal (global): 936 -> (local): (0, 0) at time 5
[DBG]  Agent 68 | Start (global): 936 -> (local): (0, 0) at time 1 | Goal (global): 937 -> (local): (0, 1) at time 2
[DBG]  Agent 105 | Start (global): 1001 -> (local): (2, 1) at time 1 | Goal (global): 936 -> (local): (0, 0) at time 4
[DBG]  [REPAIR] SAT destroy operator called.
[DBG]  [REPAIR] SAT operator â€“ launching subproblem FOR OPTIMIZATION.
[DBG]  Creating local paths (sx, sy) in the submap for T_sync = 1
[DBG]    Agent 41 (global paths from T=1 to 5) has local path: (2,2) (2,1) (2,0) (1,0) (0,0) 
[DBG]    Agent 68 (global paths from T=1 to 2) has local path: (0,0) (0,1) 
[DBG]    Agent 105 (global paths from T=1 to 4) has local path: (2,1) (2,0) (1,0) (0,0) 
[DBG]  Checking input data for SAT solver:
[DBG]    - Number of agents to replan: 3
[DBG]  Agent 41 has the original local path length: 5 => Start (2,2), Goal (0,0)
[DBG]  Agent 68 has the original local path length: 2 => Start (0,0), Goal (0,1)
[DBG]  Agent 105 has the original local path length: 4 => Start (2,1), Goal (0,0)
[DBG]  Start position: (2, 2), (0, 0), (2, 1), 
[DBG]  Goal position: (0, 0), (0, 1), (0, 0), 
[DBG]  SAT instance and solver created.
Currently solving
Instance name: scen
Map name: map
Encoding used: disappear_at_goal
SAT solver used: Kissat
Optimizing function: sum of costs
Number of agents: 3
Mks LB: 5
SoC LB: 11
Delta: 0
Remaining time: 300000 [ms]

Vertex conflict! Agents 0, 1, timestep 4, location 0
Vertex conflict! Agents 0, 2, timestep 4, location 0
Vertex conflict! Agents 1, 2, timestep 3, location 0
Swapping conflict! Agents 1, 2, timestep 3, edge (0,0)
Vertex conflict! Agents 1, 2, timestep 4, location 0
Found plan [agents = 3] [timesteps = 5]
Agent #0 : 8 7 6 4 0 
Agent #1 : 0 1 0 0 0 
Agent #2 : 7 6 4 0 0 

[STAT] Solver returned: 0
[DBG]  Agent (index) 41 | New local path (submap idx):
[DBG]  8 7 6 4 0 
[DBG]  Agent (index) 68 | New local path (submap idx):
[DBG]  0 1 
[DBG]  Agent (index) 105 | New local path (submap idx):
[DBG]  7 6 4 0 
[DBG]  Update the agent path 41 | Original local length: 5 | New local length: 5
[DBG]  agent 41 t=0 => decoded (sx,sy)=(2,2) => global_id=1002
[DBG]  agent 41 t=1 => decoded (sx,sy)=(2,1) => global_id=1001
[DBG]  agent 41 t=2 => decoded (sx,sy)=(2,0) => global_id=1000
[DBG]  agent 41 t=3 => decoded (sx,sy)=(1,0) => global_id=968
[DBG]  agent 41 t=4 => decoded (sx,sy)=(0,0) => global_id=936
[DBG]  Complete path of agent 41:
[DBG]    Original: 970 1002 1001 1000 968 936 904 905 906 874 875 876 844 
[DBG]    New:     970 1002 1001 1000 968 936 904 905 906 874 875 876 844 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 970 
[DBG]    Local path (in submap): 1002 1001 1000 968 936 
[DBG]    Suffix (out of submap): 904 905 906 874 875 876 844 
[DBG]  Original agent path length 41 je: 13
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 0: 970, 1002, 1001, 1000, 968, 936, 904, 905, 906, 874, 875, 876, 844, 
[DBG]  Path for agent 41 updated, resulting length: 13
[DBG]  Update the agent path 68 | Original local length: 2 | New local length: 2
[DBG]  agent 68 t=0 => decoded (sx,sy)=(0,0) => global_id=936
[DBG]  agent 68 t=1 => decoded (sx,sy)=(0,1) => global_id=937
[DBG]  Complete path of agent 68:
[DBG]    Original: 968 936 937 905 906 874 875 876 908 909 910 
[DBG]    New:     968 936 937 905 906 874 875 876 908 909 910 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 968 
[DBG]    Local path (in submap): 936 937 
[DBG]    Suffix (out of submap): 905 906 874 875 876 908 909 910 
[DBG]  Original agent path length 68 je: 11
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 1: 968, 936, 937, 905, 906, 874, 875, 876, 908, 909, 910, 
[DBG]  Path for agent 68 updated, resulting length: 11
[DBG]  Update the agent path 105 | Original local length: 4 | New local length: 4
[DBG]  agent 105 t=0 => decoded (sx,sy)=(2,1) => global_id=1001
[DBG]  agent 105 t=1 => decoded (sx,sy)=(2,0) => global_id=1000
[DBG]  agent 105 t=2 => decoded (sx,sy)=(1,0) => global_id=968
[DBG]  agent 105 t=3 => decoded (sx,sy)=(0,0) => global_id=936
[DBG]  Complete path of agent 105:
[DBG]    Original: 1002 1001 1000 968 936 935 903 871 839 838 806 774 774 742 710 678 646 647 615 583 551 519 487 455 423 391 390 358 326 325 324 323 291 259 227 195 196 164 132 
[DBG]    New:     1002 1001 1000 968 936 935 903 871 839 838 806 774 774 742 710 678 646 647 615 583 551 519 487 455 423 391 390 358 326 325 324 323 291 259 227 195 196 164 132 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 1002 
[DBG]    Local path (in submap): 1001 1000 968 936 
[DBG]    Suffix (out of submap): 935 903 871 839 838 806 774 774 742 710 678 646 647 615 583 551 519 487 455 423 391 390 358 326 325 324 323 291 259 227 195 196 164 132 
[DBG]  Original agent path length 105 je: 39
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 2: 1002, 1001, 1000, 968, 936, 935, 903, 871, 839, 838, 806, 774, 774, 742, 710, 678, 646, 647, 615, 583, 551, 519, 487, 455, 423, 391, 390, 358, 326, 325, 324, 323, 291, 259, 227, 195, 196, 164, 132, 
[DBG]  Path for agent 105 updated, resulting length: 39
[DBG]  Paths successfully updated.
[DBG]  (LNS.cpp) New path for agent 41: 
[DBG]  970, 1002, 1001, 1000, 968, 936, 904, 905, 906, 874, 875, 876, 844, 
[DBG]  (LNS.cpp) New path for agent 68: 
[DBG]  968, 936, 937, 905, 906, 874, 875, 876, 908, 909, 910, 
[DBG]  (LNS.cpp) New path for agent 105: 
[DBG]  1002, 1001, 1000, 968, 936, 935, 903, 871, 839, 838, 806, 774, 774, 742, 710, 678, 646, 647, 615, 583, 551, 519, 487, 455, 423, 391, 390, 358, 326, 325, 324, 323, 291, 259, 227, 195, 196, 164, 132, 
[DBG]  component_weights = {0.454496, 0.0482642, 0.0504722, 0.446767}
[DBG]  opSuccess value: 1
[STAT] neighbor.sum_of_costs before recomputation: 60
[STAT] neighbor.old_sum_of_costs before recomputation: 60
[STAT] sum_of_costs before recomputation: 4184
[DBG]  Validate solution immediately after SAT success.
[DBG]  No problems after SAT replan.
[DBG]  Recomputing sum_of_cost by dividing neighbor.sum_of_costs and neighbor.old_sum_of_costs
[STAT] sum_of_costs after recomputation: 4184
[STAT] Iteration 221
[DBG]  Using SAT operator (destroy+repair SAT).
[DBG]  ====================
[DBG]  SAT destroy operator called.
[DBG]  SAT heuristic: 2
[DBG]  key_agent_id: 111
[DBG]  key_agent_id global path length: 41
[DBG]  Submap content (global positions):
[DBG]  846 847 848 849 850 
[DBG]  878 879 880 881 882 
[DBG]  910 911 912 913 914 
[DBG]  942 943 944 945 946 
[DBG]  974 975 976 977 978 
[DBG]  Map content with agents and obstacles:
[DBG]  A . A . A 
[DBG]  . . A . . 
[DBG]  . X A . A 
[DBG]  . X . X . 
[DBG]  . . . . X 
[DBG]  content of the map structure that we pass to the SAT solver:
[DBG]  1  1  1  1  1  
[DBG]  1  1  1  1  1  
[DBG]  1  -1  1  1  1  
[DBG]  1  -1  1  -1  1  
[DBG]  1  1  1  1  -1  
[DBG]  Identifying agents in a submap for rescheduling (when key_agent is there at the time 16):
[DBG]  Agent 1 found intervals in the sub-map:
[DBG]   [7..20]
[DBG]  Agent 1 (interval in submap: [7..20]) contains time 16, added to replan.
[DBG]  Agent 4 found intervals in the sub-map:
[DBG]   [16..21]
[DBG]  Agent 4 (interval in submap: [16..21]) contains time 16, added to replan.
[DBG]  Agent 6 found intervals in the sub-map:
[DBG]   [8..12]
[DBG]  Agent 6 is not in sub-map at time 16 (intervals: 
[DBG]  [8..12] )
[DBG]  Agent 14 found intervals in the sub-map:
[DBG]   [10..14]
[DBG]  Agent 14 is not in sub-map at time 16 (intervals: 
[DBG]  [10..14] )
[DBG]  Agent 39 found intervals in the sub-map:
[DBG]  
[DBG]  Agent 39 is not in sub-map at time 16 (intervals: 
[DBG]  )
[DBG]  Agent 47 found intervals in the sub-map:
[DBG]   [13..18]
[DBG]  Agent 47 (interval in submap: [13..18]) contains time 16, added to replan.
[DBG]  Agent 85 found intervals in the sub-map:
[DBG]   [23..25]
[DBG]  Agent 85 is not in sub-map at time 16 (intervals: 
[DBG]  [23..25] )
[DBG]  Agent 101 found intervals in the sub-map:
[DBG]   [11..16]
[DBG]  Agent 101 (interval in submap: [11..16]) contains time 16, added to replan.
[DBG]  Agent 111 found intervals in the sub-map:
[DBG]   [12..19]
[DBG]  Agent 111 (interval in submap: [12..19]) contains time 16, added to replan.
[DBG]  Agent 135 found intervals in the sub-map:
[DBG]   [14..18]
[DBG]  Agent 135 (interval in submap: [14..18]) contains time 16, added to replan.
[DBG]  Agent 1 | Start (global): 914 -> (local): (2, 4) at time 16 | Goal (global): 882 -> (local): (1, 4) at time 20
[DBG]  Agent 4 | Start (global): 850 -> (local): (0, 4) at time 16 | Goal (global): 878 -> (local): (1, 0) at time 21
[DBG]  Agent 47 | Start (global): 848 -> (local): (0, 2) at time 16 | Goal (global): 846 -> (local): (0, 0) at time 18
[DBG]  Agent 101 | Start (global): 846 -> (local): (0, 0) at time 16 | Goal (global): 846 -> (local): (0, 0) at time 16
[DBG]  Agent 111 | Start (global): 912 -> (local): (2, 2) at time 16 | Goal (global): 849 -> (local): (0, 3) at time 19
[DBG]  Agent 135 | Start (global): 880 -> (local): (1, 2) at time 16 | Goal (global): 878 -> (local): (1, 0) at time 18
[DBG]  [REPAIR] SAT destroy operator called.
[DBG]  [REPAIR] SAT operator â€“ launching subproblem FOR OPTIMIZATION.
[DBG]  Creating local paths (sx, sy) in the submap for T_sync = 16
[DBG]    Agent 1 (global paths from T=16 to 20) has local path: (2,4) (2,4) (2,4) (2,4) (1,4) 
[DBG]    Agent 4 (global paths from T=16 to 21) has local path: (0,4) (0,3) (0,2) (0,1) (0,0) (1,0) 
[DBG]    Agent 47 (global paths from T=16 to 18) has local path: (0,2) (0,1) (0,0) 
[DBG]    Agent 101 (global paths from T=16 to 16) has local path: (0,0) 
[DBG]    Agent 111 (global paths from T=16 to 19) has local path: (2,2) (2,3) (1,3) (0,3) 
[DBG]    Agent 135 (global paths from T=16 to 18) has local path: (1,2) (1,1) (1,0) 
[DBG]  Checking input data for SAT solver:
[DBG]    - Number of agents to replan: 6
[DBG]  Agent 1 has the original local path length: 5 => Start (2,4), Goal (1,4)
[DBG]  Agent 4 has the original local path length: 6 => Start (0,4), Goal (1,0)
[DBG]  Agent 47 has the original local path length: 3 => Start (0,2), Goal (0,0)
[DBG]  Agent 101 has the original local path length: 1 => Start (0,0), Goal (0,0)
[DBG]  Agent 111 has the original local path length: 4 => Start (2,2), Goal (0,3)
[DBG]  Agent 135 has the original local path length: 3 => Start (1,2), Goal (1,0)
[DBG]  Start position: (2, 4), (0, 4), (0, 2), (0, 0), (2, 2), (1, 2), 
[DBG]  Goal position: (1, 4), (1, 0), (0, 0), (0, 0), (0, 3), (1, 0), 
[DBG]  SAT instance and solver created.
Currently solving
Instance name: scen
Map name: map
Encoding used: disappear_at_goal
SAT solver used: Kissat
Optimizing function: sum of costs
Number of agents: 6
Mks LB: 6
SoC LB: 19
Delta: 0
Remaining time: 300000 [ms]

Vertex conflict! Agents 0, 2, timestep 2, location 0
Swapping conflict! Agents 0, 2, timestep 2, edge (0,0)
Vertex conflict! Agents 0, 2, timestep 3, location 0
Swapping conflict! Agents 0, 2, timestep 3, edge (0,0)
Vertex conflict! Agents 0, 2, timestep 4, location 0
Swapping conflict! Agents 0, 2, timestep 4, edge (0,0)
Vertex conflict! Agents 0, 2, timestep 5, location 0
Vertex conflict! Agents 0, 3, timestep 2, location 0
Swapping conflict! Agents 0, 3, timestep 2, edge (0,0)
Vertex conflict! Agents 0, 3, timestep 3, location 0
Swapping conflict! Agents 0, 3, timestep 3, edge (0,0)
Vertex conflict! Agents 0, 3, timestep 4, location 0
Swapping conflict! Agents 0, 3, timestep 4, edge (0,0)
Vertex conflict! Agents 0, 3, timestep 5, location 0
Vertex conflict! Agents 0, 4, timestep 4, location 0
Swapping conflict! Agents 0, 4, timestep 4, edge (0,0)
Vertex conflict! Agents 0, 4, timestep 5, location 0
Vertex conflict! Agents 0, 5, timestep 3, location 0
Swapping conflict! Agents 0, 5, timestep 3, edge (0,0)
Vertex conflict! Agents 0, 5, timestep 4, location 0
Swapping conflict! Agents 0, 5, timestep 4, edge (0,0)
Vertex conflict! Agents 0, 5, timestep 5, location 0
Vertex conflict! Agents 2, 3, timestep 2, location 0
Swapping conflict! Agents 2, 3, timestep 2, edge (0,0)
Vertex conflict! Agents 2, 3, timestep 3, location 0
Swapping conflict! Agents 2, 3, timestep 3, edge (0,0)
Vertex conflict! Agents 2, 3, timestep 4, location 0
Swapping conflict! Agents 2, 3, timestep 4, edge (0,0)
Vertex conflict! Agents 2, 3, timestep 5, location 0
Vertex conflict! Agents 2, 4, timestep 4, location 0
Swapping conflict! Agents 2, 4, timestep 4, edge (0,0)
Vertex conflict! Agents 2, 4, timestep 5, location 0
Vertex conflict! Agents 2, 5, timestep 3, location 0
Swapping conflict! Agents 2, 5, timestep 3, edge (0,0)
Vertex conflict! Agents 2, 5, timestep 4, location 0
Swapping conflict! Agents 2, 5, timestep 4, edge (0,0)
Vertex conflict! Agents 2, 5, timestep 5, location 0
Vertex conflict! Agents 3, 4, timestep 4, location 0
Swapping conflict! Agents 3, 4, timestep 4, edge (0,0)
Vertex conflict! Agents 3, 4, timestep 5, location 0
Vertex conflict! Agents 3, 5, timestep 3, location 0
Swapping conflict! Agents 3, 5, timestep 3, edge (0,0)
Vertex conflict! Agents 3, 5, timestep 4, location 0
Swapping conflict! Agents 3, 5, timestep 4, edge (0,0)
Vertex conflict! Agents 3, 5, timestep 5, location 0
Vertex conflict! Agents 4, 5, timestep 4, location 0
Swapping conflict! Agents 4, 5, timestep 4, edge (0,0)
Vertex conflict! Agents 4, 5, timestep 5, location 0
Found plan [agents = 6] [timesteps = 6]
Agent #0 : 13 9 0 0 0 0 
Agent #1 : 4 3 8 7 6 5 
Agent #2 : 2 1 0 0 0 0 
Agent #3 : 0 0 0 0 0 0 
Agent #4 : 11 7 2 3 0 0 
Agent #5 : 7 6 5 0 0 0 

[STAT] Solver returned: 0
[DBG]  Agent (index) 1 | New local path (submap idx):
[DBG]  13 9 
[DBG]  Agent (index) 4 | New local path (submap idx):
[DBG]  4 3 8 7 6 5 
[DBG]  Agent (index) 47 | New local path (submap idx):
[DBG]  2 1 0 
[DBG]  Agent (index) 101 | New local path (submap idx):
[DBG]  0 
[DBG]  Agent (index) 111 | New local path (submap idx):
[DBG]  11 7 2 3 
[DBG]  Agent (index) 135 | New local path (submap idx):
[DBG]  7 6 5 
[DBG]  Update the agent path 1 | Original local length: 5 | New local length: 2
[DBG]  agent 1 t=0 => decoded (sx,sy)=(2,4) => global_id=914
[DBG]  agent 1 t=1 => decoded (sx,sy)=(1,4) => global_id=882
[DBG]  Complete path of agent 1:
[DBG]    Original: 949 917 917 917 885 884 883 882 914 914 914 914 914 914 914 914 914 914 914 914 882 883 851 819 820 788 756 757 725 726 727 728 
[DBG]    New:     949 917 917 917 885 884 883 882 914 914 914 914 914 914 914 914 914 882 883 851 819 820 788 756 757 725 726 727 728 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 949 917 917 917 885 884 883 882 914 914 914 914 914 914 914 914 
[DBG]    Local path (in submap): 914 882 883 851 819 
[DBG]    Suffix (out of submap): 820 788 756 757 725 726 727 728 
[DBG]  Original agent path length 1 je: 32
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 0: 949, 917, 917, 917, 885, 884, 883, 882, 914, 914, 914, 914, 914, 914, 914, 914, 914, 882, 883, 851, 819, 820, 788, 756, 757, 725, 726, 727, 728, 
[DBG]  Path for agent 1 updated, resulting length: 29
[DBG]  Update the agent path 4 | Original local length: 6 | New local length: 6
[DBG]  agent 4 t=0 => decoded (sx,sy)=(0,4) => global_id=850
[DBG]  agent 4 t=1 => decoded (sx,sy)=(0,3) => global_id=849
[DBG]  agent 4 t=2 => decoded (sx,sy)=(1,3) => global_id=881
[DBG]  agent 4 t=3 => decoded (sx,sy)=(1,2) => global_id=880
[DBG]  agent 4 t=4 => decoded (sx,sy)=(1,1) => global_id=879
[DBG]  agent 4 t=5 => decoded (sx,sy)=(1,0) => global_id=878
[DBG]  Complete path of agent 4:
[DBG]    Original: 829 830 862 894 893 892 891 890 889 888 887 886 885 884 883 851 850 849 848 847 846 878 877 876 875 874 873 905 904 903 871 839 838 806 774 742 710 678 677 645 613 581 582 583 
[DBG]    New:     829 830 862 894 893 892 891 890 889 888 887 886 885 884 883 851 850 849 881 880 879 878 877 876 875 874 873 905 904 903 871 839 838 806 774 742 710 678 677 645 613 581 582 583 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 829 830 862 894 893 892 891 890 889 888 887 886 885 884 883 851 
[DBG]    Local path (in submap): 850 849 881 880 879 878 
[DBG]    Suffix (out of submap): 877 876 875 874 873 905 904 903 871 839 838 806 774 742 710 678 677 645 613 581 582 583 
[DBG]  Original agent path length 4 je: 44
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 1: 829, 830, 862, 894, 893, 892, 891, 890, 889, 888, 887, 886, 885, 884, 883, 851, 850, 849, 881, 880, 879, 878, 877, 876, 875, 874, 873, 905, 904, 903, 871, 839, 838, 806, 774, 742, 710, 678, 677, 645, 613, 581, 582, 583, 
[DBG]  Path for agent 4 updated, resulting length: 44
[DBG]  Update the agent path 47 | Original local length: 3 | New local length: 3
[DBG]  agent 47 t=0 => decoded (sx,sy)=(0,2) => global_id=848
[DBG]  agent 47 t=1 => decoded (sx,sy)=(0,1) => global_id=847
[DBG]  agent 47 t=2 => decoded (sx,sy)=(0,0) => global_id=846
[DBG]  Complete path of agent 47:
[DBG]    Original: 730 729 761 793 792 824 823 822 854 886 885 884 883 882 881 849 848 847 846 814 813 812 811 810 
[DBG]    New:     730 729 761 793 792 824 823 822 854 886 885 884 883 882 881 849 848 847 846 814 813 812 811 810 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 730 729 761 793 792 824 823 822 854 886 885 884 883 882 881 849 
[DBG]    Local path (in submap): 848 847 846 
[DBG]    Suffix (out of submap): 814 813 812 811 810 
[DBG]  Original agent path length 47 je: 24
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 2: 730, 729, 761, 793, 792, 824, 823, 822, 854, 886, 885, 884, 883, 882, 881, 849, 848, 847, 846, 814, 813, 812, 811, 810, 
[DBG]  Path for agent 47 updated, resulting length: 24
[DBG]  Update the agent path 101 | Original local length: 1 | New local length: 1
[DBG]  agent 101 t=0 => decoded (sx,sy)=(0,0) => global_id=846
[DBG]  Complete path of agent 101:
[DBG]    Original: 985 953 921 920 919 918 917 916 916 884 883 882 850 849 848 847 846 814 813 812 780 779 747 715 714 713 712 680 648 647 615 583 551 519 487 455 423 391 359 358 357 325 324 323 291 259 260 228 196 164 165 133 134 135 136 168 
[DBG]    New:     985 953 921 920 919 918 917 916 916 884 883 882 850 849 848 847 846 814 813 812 780 779 747 715 714 713 712 680 648 647 615 583 551 519 487 455 423 391 359 358 357 325 324 323 291 259 260 228 196 164 165 133 134 135 136 168 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 985 953 921 920 919 918 917 916 916 884 883 882 850 849 848 847 
[DBG]    Local path (in submap): 846 
[DBG]    Suffix (out of submap): 814 813 812 780 779 747 715 714 713 712 680 648 647 615 583 551 519 487 455 423 391 359 358 357 325 324 323 291 259 260 228 196 164 165 133 134 135 136 168 
[DBG]  Original agent path length 101 je: 56
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 3: 985, 953, 921, 920, 919, 918, 917, 916, 916, 884, 883, 882, 850, 849, 848, 847, 846, 814, 813, 812, 780, 779, 747, 715, 714, 713, 712, 680, 648, 647, 615, 583, 551, 519, 487, 455, 423, 391, 359, 358, 357, 325, 324, 323, 291, 259, 260, 228, 196, 164, 165, 133, 134, 135, 136, 168, 
[DBG]  Path for agent 101 updated, resulting length: 56
[DBG]  Update the agent path 111 | Original local length: 4 | New local length: 4
[DBG]  agent 111 t=0 => decoded (sx,sy)=(2,2) => global_id=912
[DBG]  agent 111 t=1 => decoded (sx,sy)=(1,2) => global_id=880
[DBG]  agent 111 t=2 => decoded (sx,sy)=(0,2) => global_id=848
[DBG]  agent 111 t=3 => decoded (sx,sy)=(0,3) => global_id=849
[DBG]  Complete path of agent 111:
[DBG]    Original: 964 996 997 998 999 1000 1001 1002 1003 1004 1005 973 974 975 976 944 912 913 881 849 817 818 786 787 788 756 757 725 726 727 728 696 664 632 600 601 602 570 538 539 540 
[DBG]    New:     964 996 997 998 999 1000 1001 1002 1003 1004 1005 973 974 975 976 944 912 880 848 849 817 818 786 787 788 756 757 725 726 727 728 696 664 632 600 601 602 570 538 539 540 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 964 996 997 998 999 1000 1001 1002 1003 1004 1005 973 974 975 976 944 
[DBG]    Local path (in submap): 912 880 848 849 
[DBG]    Suffix (out of submap): 817 818 786 787 788 756 757 725 726 727 728 696 664 632 600 601 602 570 538 539 540 
[DBG]  Original agent path length 111 je: 41
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 4: 964, 996, 997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 973, 974, 975, 976, 944, 912, 880, 848, 849, 817, 818, 786, 787, 788, 756, 757, 725, 726, 727, 728, 696, 664, 632, 600, 601, 602, 570, 538, 539, 540, 
[DBG]  Path for agent 111 updated, resulting length: 41
[DBG]  Update the agent path 135 | Original local length: 3 | New local length: 3
[DBG]  agent 135 t=0 => decoded (sx,sy)=(1,2) => global_id=880
[DBG]  agent 135 t=1 => decoded (sx,sy)=(1,1) => global_id=879
[DBG]  agent 135 t=2 => decoded (sx,sy)=(1,0) => global_id=878
[DBG]  Complete path of agent 135:
[DBG]    Original: 696 728 729 761 793 792 824 823 822 854 886 885 884 883 882 881 880 879 878 877 876 875 874 873 905 904 903 871 870 838 806 774 742 710 678 677 645 613 581 549 548 516 484 483 482 450 449 448 416 384 
[DBG]    New:     696 728 729 761 793 792 824 823 822 854 886 885 884 883 882 881 880 879 878 877 876 875 874 873 905 904 903 871 870 838 806 774 742 710 678 677 645 613 581 549 548 516 484 483 482 450 449 448 416 384 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 696 728 729 761 793 792 824 823 822 854 886 885 884 883 882 881 
[DBG]    Local path (in submap): 880 879 878 
[DBG]    Suffix (out of submap): 877 876 875 874 873 905 904 903 871 870 838 806 774 742 710 678 677 645 613 581 549 548 516 484 483 482 450 449 448 416 384 
[DBG]  Original agent path length 135 je: 50
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 5: 696, 728, 729, 761, 793, 792, 824, 823, 822, 854, 886, 885, 884, 883, 882, 881, 880, 879, 878, 877, 876, 875, 874, 873, 905, 904, 903, 871, 870, 838, 806, 774, 742, 710, 678, 677, 645, 613, 581, 549, 548, 516, 484, 483, 482, 450, 449, 448, 416, 384, 
[DBG]  Path for agent 135 updated, resulting length: 50
[DBG]  Paths successfully updated.
[DBG]  (LNS.cpp) New path for agent 1: 
[DBG]  949, 917, 917, 917, 885, 884, 883, 882, 914, 914, 914, 914, 914, 914, 914, 914, 914, 882, 883, 851, 819, 820, 788, 756, 757, 725, 726, 727, 728, 
[DBG]  (LNS.cpp) New path for agent 4: 
[DBG]  829, 830, 862, 894, 893, 892, 891, 890, 889, 888, 887, 886, 885, 884, 883, 851, 850, 849, 881, 880, 879, 878, 877, 876, 875, 874, 873, 905, 904, 903, 871, 839, 838, 806, 774, 742, 710, 678, 677, 645, 613, 581, 582, 583, 
[DBG]  (LNS.cpp) New path for agent 47: 
[DBG]  730, 729, 761, 793, 792, 824, 823, 822, 854, 886, 885, 884, 883, 882, 881, 849, 848, 847, 846, 814, 813, 812, 811, 810, 
[DBG]  (LNS.cpp) New path for agent 101: 
[DBG]  985, 953, 921, 920, 919, 918, 917, 916, 916, 884, 883, 882, 850, 849, 848, 847, 846, 814, 813, 812, 780, 779, 747, 715, 714, 713, 712, 680, 648, 647, 615, 583, 551, 519, 487, 455, 423, 391, 359, 358, 357, 325, 324, 323, 291, 259, 260, 228, 196, 164, 165, 133, 134, 135, 136, 168, 
[DBG]  (LNS.cpp) New path for agent 111: 
[DBG]  964, 996, 997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 973, 974, 975, 976, 944, 912, 880, 848, 849, 817, 818, 786, 787, 788, 756, 757, 725, 726, 727, 728, 696, 664, 632, 600, 601, 602, 570, 538, 539, 540, 
[DBG]  (LNS.cpp) New path for agent 135: 
[DBG]  696, 728, 729, 761, 793, 792, 824, 823, 822, 854, 886, 885, 884, 883, 882, 881, 880, 879, 878, 877, 876, 875, 874, 873, 905, 904, 903, 871, 870, 838, 806, 774, 742, 710, 678, 677, 645, 613, 581, 549, 548, 516, 484, 483, 482, 450, 449, 448, 416, 384, 
[DBG]  component_weights = {0.450365, 0.0478254, 0.0500134, 0.451797}
[DBG]  opSuccess value: 1
[STAT] neighbor.sum_of_costs before recomputation: 238
[STAT] neighbor.old_sum_of_costs before recomputation: 241
[STAT] sum_of_costs before recomputation: 4184
[DBG]  Validate solution immediately after SAT success.
[WARNING] Problem after SAT: Vertex conflict between agents 1 and 11 at location 883 at timestep 18
[DBG]  Attempting immediate repair via init_lns because problem occurred after SAT (should be applied only for conflicts...).
[DBG]  Passing 150 agents to init_lns (skip=true).
[DBG]  path_table contents for selected agents (neighbor.agents):
[DBG]    Agent 1 => controlling path length=29
[DBG]    Agent 4 => controlling path length=44
[DBG]    Agent 47 => controlling path length=24
[DBG]    Agent 101 => controlling path length=56
[DBG]    Agent 111 => controlling path length=41
[DBG]    Agent 135 => controlling path length=50
[DBG]  hodnota skip_initial_solution=1
[DBG]  We skip initialSolution => call buildCollisionData()
[DBG]  buildCollisionData() called â€“ skip_initial_solution case.
[DBG]  Agents.size()=150, collision_graph.size()=150
[DBG]  agent 1 => updateCollidingPairs => foundCollision
[DBG]  agent 11 => updateCollidingPairs => foundCollision
[DBG]  agent 35 => updateCollidingPairs => foundCollision
[DBG]  agent 70 => updateCollidingPairs => foundCollision
[DBG]  agent 96 => updateCollidingPairs => foundCollision
[DBG]  agent 111 => updateCollidingPairs => foundCollision
[DBG]  Conflicting agent pairs:
[DBG]  agent 1 is in conflict with agent 11
[DBG]  agent 1 is in conflict with agent 35
[DBG]  agent 1 is in conflict with agent 70
[DBG]  agent 1 is in conflict with agent 96
[DBG]  agent 1 is in conflict with agent 111
[DBG]  buildCollisionData() => sum_of_costs=4181, num_of_colliding_pairs=5
[DBG]  buildCollisionData done => sum_of_costs=4181, num_of_colliding_pairs=5
[DBG]  sum_of_cost hodnota: 4181
[DBG]  After skip/init build => iteration_stats.back(): sum_of_costs=4181, collisions=5
[DEBUG] Using default neighbor generation strategy for conflicts: 2
[DEBUG] Using default neighbor generation strategy for conflicts: 2
[DEBUG] Using default neighbor generation strategy for conflicts: 2
[DEBUG] Using default neighbor generation strategy for conflicts: 0
[DEBUG] Using default neighbor generation strategy for conflicts: 1
	InitLNS(PP): runtime = 0.0284505, iterations = 6, colliding pairs = 0, initial colliding pairs = 5, solution cost = 4169, initial solution cost = 4181, failed iterations = 0
[DBG]  init_lns->sum_of_costs after init_lns->run: 4169
[DBG]  sum_of_costs after assignment from init_lns->run: 4169
[DBG]  Recomputing sum_of_cost by dividing neighbor.sum_of_costs and neighbor.old_sum_of_costs
[STAT] sum_of_costs after recomputation: 4169
[STAT] Iteration 222
[DBG]  Using SAT operator (destroy+repair SAT).
[DBG]  ====================
[DBG]  SAT destroy operator called.
[DBG]  SAT heuristic: 2
[DBG]  key_agent_id: 37
[DBG]  key_agent_id global path length: 12
[DBG]  Submap content (global positions):
[DBG]  773 774 775 776 777 
[DBG]  805 806 807 808 809 
[DBG]  837 838 839 840 841 
[DBG]  869 870 871 872 873 
[DBG]  901 902 903 904 905 
[DBG]  Map content with agents and obstacles:
[DBG]  . . . A . 
[DBG]  A A . . . 
[DBG]  . . A X . 
[DBG]  X . . X . 
[DBG]  . . . . . 
[DBG]  content of the map structure that we pass to the SAT solver:
[DBG]  1  1  1  1  1  
[DBG]  1  1  1  1  1  
[DBG]  1  1  1  -1  1  
[DBG]  -1  1  1  -1  1  
[DBG]  1  1  1  1  1  
[DBG]  Identifying agents in a submap for rescheduling (when key_agent is there at the time 1):
[DBG]  Agent 37 found intervals in the sub-map:
[DBG]   [0..5]
[DBG]  Agent 37 (interval in submap: [0..5]) contains time 1, added to replan.
[DBG]  Agent 56 found intervals in the sub-map:
[DBG]   [0..4]
[DBG]  Agent 56 (interval in submap: [0..4]) contains time 1, added to replan.
[DBG]  Agent 67 found intervals in the sub-map:
[DBG]   [0..10]
[DBG]  Agent 67 (interval in submap: [0..10]) contains time 1, added to replan.
[DBG]  Agent 148 found intervals in the sub-map:
[DBG]   [0..8]
[DBG]  Agent 148 (interval in submap: [0..8]) contains time 1, added to replan.
[DBG]  Agent 37 | Start (global): 839 -> (local): (2, 2) at time 1 | Goal (global): 809 -> (local): (1, 4) at time 5
[DBG]  Agent 56 | Start (global): 806 -> (local): (1, 1) at time 1 | Goal (global): 809 -> (local): (1, 4) at time 4
[DBG]  Agent 67 | Start (global): 805 -> (local): (1, 0) at time 1 | Goal (global): 777 -> (local): (0, 4) at time 10
[DBG]  Agent 148 | Start (global): 776 -> (local): (0, 3) at time 1 | Goal (global): 809 -> (local): (1, 4) at time 8
[DBG]  [REPAIR] SAT destroy operator called.
[DBG]  [REPAIR] SAT operator â€“ launching subproblem FOR OPTIMIZATION.
[DBG]  Creating local paths (sx, sy) in the submap for T_sync = 1
[DBG]    Agent 37 (global paths from T=1 to 5) has local path: (2,2) (2,2) (1,2) (1,3) (1,4) 
[DBG]    Agent 56 (global paths from T=1 to 4) has local path: (1,1) (1,2) (1,3) (1,4) 
[DBG]    Agent 67 (global paths from T=1 to 10) has local path: (1,0) (2,0) (2,0) (2,0) (1,0) (1,1) (0,1) (0,2) (0,3) (0,4) 
[DBG]    Agent 148 (global paths from T=1 to 8) has local path: (0,3) (0,3) (0,3) (0,3) (0,3) (0,3) (1,3) (1,4) 
[DBG]  Checking input data for SAT solver:
[DBG]    - Number of agents to replan: 4
[DBG]  Agent 37 has the original local path length: 5 => Start (2,2), Goal (1,4)
[DBG]  Agent 56 has the original local path length: 4 => Start (1,1), Goal (1,4)
[DBG]  Agent 67 has the original local path length: 10 => Start (1,0), Goal (0,4)
[DBG]  Agent 148 has the original local path length: 8 => Start (0,3), Goal (1,4)
[DBG]  Start position: (2, 2), (1, 1), (1, 0), (0, 3), 
[DBG]  Goal position: (1, 4), (1, 4), (0, 4), (1, 4), 
[DBG]  SAT instance and solver created.
Currently solving
Instance name: scen
Map name: map
Encoding used: disappear_at_goal
SAT solver used: Kissat
Optimizing function: sum of costs
Number of agents: 4
Mks LB: 6
SoC LB: 17
Delta: 0
Remaining time: 300000 [ms]

[STAT] Solver returned: -1
[DBG]  SAT solver failed.
[STAT] SAT solver failed to find a valid solution.
[DBG]  ====================
[DBG]  SAT destroy operator called.
[DBG]  SAT heuristic: 2
[DBG]  key_agent_id: 37
[DBG]  key_agent_id global path length: 12
[DBG]  Submap content (global positions):
[DBG]  712 713 714 715 716 
[DBG]  744 745 746 747 748 
[DBG]  776 777 778 779 780 
[DBG]  808 809 810 811 812 
[DBG]  840 841 842 843 844 
[DBG]  Map content with agents and obstacles:
[DBG]  . . . . X 
[DBG]  . . . A . 
[DBG]  A . A A . 
[DBG]  A . . . . 
[DBG]  X A X . . 
[DBG]  content of the map structure that we pass to the SAT solver:
[DBG]  1  1  1  1  -1  
[DBG]  1  1  1  1  1  
[DBG]  1  1  1  1  1  
[DBG]  1  1  1  1  1  
[DBG]  -1  1  -1  1  1  
[DBG]  Identifying agents in a submap for rescheduling (when key_agent is there at the time 7):
[DBG]  Agent 32 found intervals in the sub-map:
[DBG]   [7..8]
[DBG]  Agent 32 (interval in submap: [7..8]) contains time 7, added to replan.
[DBG]  Agent 37 found intervals in the sub-map:
[DBG]   [4..9]
[DBG]  Agent 37 (interval in submap: [4..9]) contains time 7, added to replan.
[DBG]  Agent 39 found intervals in the sub-map:
[DBG]   [1..4]
[DBG]  Agent 39 is not in sub-map at time 7 (intervals: 
[DBG]  [1..4] )
[DBG]  Agent 56 found intervals in the sub-map:
[DBG]   [3..8]
[DBG]  Agent 56 (interval in submap: [3..8]) contains time 7, added to replan.
[DBG]  Agent 67 found intervals in the sub-map:
[DBG]   [9..14]
[DBG]  Agent 67 is not in sub-map at time 7 (intervals: 
[DBG]  [9..14] )
[DBG]  Agent 68 found intervals in the sub-map:
[DBG]  
[DBG]  Agent 68 is not in sub-map at time 7 (intervals: 
[DBG]  )
[DBG]  Agent 85 found intervals in the sub-map:
[DBG]   [9..10]
[DBG]  Agent 85 is not in sub-map at time 7 (intervals: 
[DBG]  [9..10] )
[DBG]  Agent 97 found intervals in the sub-map:
[DBG]   [2..7]
[DBG]  Agent 97 (interval in submap: [2..7]) contains time 7, added to replan.
[DBG]  Agent 122 found intervals in the sub-map:
[DBG]   [3..8]
[DBG]  Agent 122 (interval in submap: [3..8]) contains time 7, added to replan.
[DBG]  Agent 130 found intervals in the sub-map:
[DBG]   [11..19]
[DBG]  Agent 130 is not in sub-map at time 7 (intervals: 
[DBG]  [11..19] )
[DBG]  Agent 132 found intervals in the sub-map:
[DBG]   [1..1]
[DBG]  Agent 132 is not in sub-map at time 7 (intervals: 
[DBG]  [1..1] )
[DBG]  Agent 148 found intervals in the sub-map:
[DBG]   [0..13]
[DBG]  Agent 148 (interval in submap: [0..13]) contains time 7, added to replan.
[DBG]  Agent 32 | Start (global): 776 -> (local): (2, 0) at time 7 | Goal (global): 744 -> (local): (1, 0) at time 8
[DBG]  Agent 37 | Start (global): 778 -> (local): (2, 2) at time 7 | Goal (global): 780 -> (local): (2, 4) at time 9
[DBG]  Agent 56 | Start (global): 779 -> (local): (2, 3) at time 7 | Goal (global): 780 -> (local): (2, 4) at time 8
[DBG]  Agent 97 | Start (global): 841 -> (local): (4, 1) at time 7 | Goal (global): 841 -> (local): (4, 1) at time 7
[DBG]  Agent 122 | Start (global): 747 -> (local): (1, 3) at time 7 | Goal (global): 715 -> (local): (0, 3) at time 8
[DBG]  Agent 148 | Start (global): 808 -> (local): (3, 0) at time 7 | Goal (global): 715 -> (local): (0, 3) at time 13
[DBG]  [REPAIR] SAT destroy operator called.
[DBG]  [REPAIR] SAT operator â€“ launching subproblem FOR OPTIMIZATION.
[DBG]  Creating local paths (sx, sy) in the submap for T_sync = 7
[DBG]    Agent 32 (global paths from T=7 to 8) has local path: (2,0) (1,0) 
[DBG]    Agent 37 (global paths from T=7 to 9) has local path: (2,2) (2,3) (2,4) 
[DBG]    Agent 56 (global paths from T=7 to 8) has local path: (2,3) (2,4) 
[DBG]    Agent 97 (global paths from T=7 to 7) has local path: (4,1) 
[DBG]    Agent 122 (global paths from T=7 to 8) has local path: (1,3) (0,3) 
[DBG]    Agent 148 (global paths from T=7 to 13) has local path: (3,0) (3,1) (3,2) (3,3) (2,3) (1,3) (0,3) 
[DBG]  Checking input data for SAT solver:
[DBG]    - Number of agents to replan: 6
[DBG]  Agent 32 has the original local path length: 2 => Start (2,0), Goal (1,0)
[DBG]  Agent 37 has the original local path length: 3 => Start (2,2), Goal (2,4)
[DBG]  Agent 56 has the original local path length: 2 => Start (2,3), Goal (2,4)
[DBG]  Agent 97 has the original local path length: 1 => Start (4,1), Goal (4,1)
[DBG]  Agent 122 has the original local path length: 2 => Start (1,3), Goal (0,3)
[DBG]  Agent 148 has the original local path length: 7 => Start (3,0), Goal (0,3)
[DBG]  Start position: (2, 0), (2, 2), (2, 3), (4, 1), (1, 3), (3, 0), 
[DBG]  Goal position: (1, 0), (2, 4), (2, 4), (4, 1), (0, 3), (0, 3), 
[DBG]  SAT instance and solver created.
Currently solving
Instance name: scen
Map name: map
Encoding used: disappear_at_goal
SAT solver used: Kissat
Optimizing function: sum of costs
Number of agents: 6
Mks LB: 7
SoC LB: 17
Delta: 0
Remaining time: 300000 [ms]

Vertex conflict! Agents 0, 1, timestep 3, location 0
Swapping conflict! Agents 0, 1, timestep 3, edge (0,0)
Vertex conflict! Agents 0, 1, timestep 4, location 0
Swapping conflict! Agents 0, 1, timestep 4, edge (0,0)
Vertex conflict! Agents 0, 1, timestep 5, location 0
Swapping conflict! Agents 0, 1, timestep 5, edge (0,0)
Vertex conflict! Agents 0, 1, timestep 6, location 0
Vertex conflict! Agents 0, 2, timestep 2, location 0
Swapping conflict! Agents 0, 2, timestep 2, edge (0,0)
Vertex conflict! Agents 0, 2, timestep 3, location 0
Swapping conflict! Agents 0, 2, timestep 3, edge (0,0)
Vertex conflict! Agents 0, 2, timestep 4, location 0
Swapping conflict! Agents 0, 2, timestep 4, edge (0,0)
Vertex conflict! Agents 0, 2, timestep 5, location 0
Swapping conflict! Agents 0, 2, timestep 5, edge (0,0)
Vertex conflict! Agents 0, 2, timestep 6, location 0
Vertex conflict! Agents 0, 3, timestep 2, location 0
Swapping conflict! Agents 0, 3, timestep 2, edge (0,0)
Vertex conflict! Agents 0, 3, timestep 3, location 0
Swapping conflict! Agents 0, 3, timestep 3, edge (0,0)
Vertex conflict! Agents 0, 3, timestep 4, location 0
Swapping conflict! Agents 0, 3, timestep 4, edge (0,0)
Vertex conflict! Agents 0, 3, timestep 5, location 0
Swapping conflict! Agents 0, 3, timestep 5, edge (0,0)
Vertex conflict! Agents 0, 3, timestep 6, location 0
Vertex conflict! Agents 0, 4, timestep 2, location 0
Swapping conflict! Agents 0, 4, timestep 2, edge (0,0)
Vertex conflict! Agents 0, 4, timestep 3, location 0
Swapping conflict! Agents 0, 4, timestep 3, edge (0,0)
Vertex conflict! Agents 0, 4, timestep 4, location 0
Swapping conflict! Agents 0, 4, timestep 4, edge (0,0)
Vertex conflict! Agents 0, 4, timestep 5, location 0
Swapping conflict! Agents 0, 4, timestep 5, edge (0,0)
Vertex conflict! Agents 0, 4, timestep 6, location 0
Vertex conflict! Agents 1, 2, timestep 3, location 0
Swapping conflict! Agents 1, 2, timestep 3, edge (0,0)
Vertex conflict! Agents 1, 2, timestep 4, location 0
Swapping conflict! Agents 1, 2, timestep 4, edge (0,0)
Vertex conflict! Agents 1, 2, timestep 5, location 0
Swapping conflict! Agents 1, 2, timestep 5, edge (0,0)
Vertex conflict! Agents 1, 2, timestep 6, location 0
Vertex conflict! Agents 1, 3, timestep 3, location 0
Swapping conflict! Agents 1, 3, timestep 3, edge (0,0)
Vertex conflict! Agents 1, 3, timestep 4, location 0
Swapping conflict! Agents 1, 3, timestep 4, edge (0,0)
Vertex conflict! Agents 1, 3, timestep 5, location 0
Swapping conflict! Agents 1, 3, timestep 5, edge (0,0)
Vertex conflict! Agents 1, 3, timestep 6, location 0
Vertex conflict! Agents 1, 4, timestep 3, location 0
Swapping conflict! Agents 1, 4, timestep 3, edge (0,0)
Vertex conflict! Agents 1, 4, timestep 4, location 0
Swapping conflict! Agents 1, 4, timestep 4, edge (0,0)
Vertex conflict! Agents 1, 4, timestep 5, location 0
Swapping conflict! Agents 1, 4, timestep 5, edge (0,0)
Vertex conflict! Agents 1, 4, timestep 6, location 0
Vertex conflict! Agents 2, 3, timestep 2, location 0
Swapping conflict! Agents 2, 3, timestep 2, edge (0,0)
Vertex conflict! Agents 2, 3, timestep 3, location 0
Swapping conflict! Agents 2, 3, timestep 3, edge (0,0)
Vertex conflict! Agents 2, 3, timestep 4, location 0
Swapping conflict! Agents 2, 3, timestep 4, edge (0,0)
Vertex conflict! Agents 2, 3, timestep 5, location 0
Swapping conflict! Agents 2, 3, timestep 5, edge (0,0)
Vertex conflict! Agents 2, 3, timestep 6, location 0
Vertex conflict! Agents 2, 4, timestep 2, location 0
Swapping conflict! Agents 2, 4, timestep 2, edge (0,0)
Vertex conflict! Agents 2, 4, timestep 3, location 0
Swapping conflict! Agents 2, 4, timestep 3, edge (0,0)
Vertex conflict! Agents 2, 4, timestep 4, location 0
Swapping conflict! Agents 2, 4, timestep 4, edge (0,0)
Vertex conflict! Agents 2, 4, timestep 5, location 0
Swapping conflict! Agents 2, 4, timestep 5, edge (0,0)
Vertex conflict! Agents 2, 4, timestep 6, location 0
Vertex conflict! Agents 3, 4, timestep 2, location 0
Swapping conflict! Agents 3, 4, timestep 2, edge (0,0)
Vertex conflict! Agents 3, 4, timestep 3, location 0
Swapping conflict! Agents 3, 4, timestep 3, edge (0,0)
Vertex conflict! Agents 3, 4, timestep 4, location 0
Swapping conflict! Agents 3, 4, timestep 4, edge (0,0)
Vertex conflict! Agents 3, 4, timestep 5, location 0
Swapping conflict! Agents 3, 4, timestep 5, edge (0,0)
Vertex conflict! Agents 3, 4, timestep 6, location 0
Found plan [agents = 6] [timesteps = 7]
Agent #0 : 9 4 0 0 0 0 0 
Agent #1 : 11 12 13 0 0 0 0 
Agent #2 : 12 13 0 0 0 0 0 
Agent #3 : 19 0 0 0 0 0 0 
Agent #4 : 7 3 0 0 0 0 0 
Agent #5 : 14 15 16 17 12 7 3 

[STAT] Solver returned: 0
[DBG]  Agent (index) 32 | New local path (submap idx):
[DBG]  9 4 
[DBG]  Agent (index) 37 | New local path (submap idx):
[DBG]  11 12 13 
[DBG]  Agent (index) 56 | New local path (submap idx):
[DBG]  12 13 
[DBG]  Agent (index) 97 | New local path (submap idx):
[DBG]  19 
[DBG]  Agent (index) 122 | New local path (submap idx):
[DBG]  7 3 
[DBG]  Agent (index) 148 | New local path (submap idx):
[DBG]  14 15 16 17 12 7 3 
[DBG]  Update the agent path 32 | Original local length: 2 | New local length: 2
[DBG]  agent 32 t=0 => decoded (sx,sy)=(2,0) => global_id=776
[DBG]  agent 32 t=1 => decoded (sx,sy)=(1,0) => global_id=744
[DBG]  Complete path of agent 32:
[DBG]    Original: 868 836 804 805 773 774 775 776 744 
[DBG]    New:     868 836 804 805 773 774 775 776 744 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 868 836 804 805 773 774 775 
[DBG]    Local path (in submap): 776 744 
[DBG]    Suffix (out of submap): 
[DBG]  Original agent path length 32 je: 9
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 0: 868, 836, 804, 805, 773, 774, 775, 776, 744, 
[DBG]  Path for agent 32 updated, resulting length: 9
[DBG]  Update the agent path 37 | Original local length: 3 | New local length: 3
[DBG]  agent 37 t=0 => decoded (sx,sy)=(2,2) => global_id=778
[DBG]  agent 37 t=1 => decoded (sx,sy)=(2,3) => global_id=779
[DBG]  agent 37 t=2 => decoded (sx,sy)=(2,4) => global_id=780
[DBG]  Complete path of agent 37:
[DBG]    Original: 839 839 839 807 808 809 810 778 779 780 781 782 
[DBG]    New:     839 839 839 807 808 809 810 778 779 780 781 782 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 839 839 839 807 808 809 810 
[DBG]    Local path (in submap): 778 779 780 
[DBG]    Suffix (out of submap): 781 782 
[DBG]  Original agent path length 37 je: 12
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 1: 839, 839, 839, 807, 808, 809, 810, 778, 779, 780, 781, 782, 
[DBG]  Path for agent 37 updated, resulting length: 12
[DBG]  Update the agent path 56 | Original local length: 2 | New local length: 2
[DBG]  agent 56 t=0 => decoded (sx,sy)=(2,3) => global_id=779
[DBG]  agent 56 t=1 => decoded (sx,sy)=(2,4) => global_id=780
[DBG]  Complete path of agent 56:
[DBG]    Original: 805 806 807 808 809 810 778 779 780 781 782 750 718 719 720 721 689 657 658 659 627 628 596 597 565 566 534 502 470 438 406 407 408 409 377 378 379 380 348 349 317 318 319 287 255 
[DBG]    New:     805 806 807 808 809 810 778 779 780 781 782 750 718 719 720 721 689 657 658 659 627 628 596 597 565 566 534 502 470 438 406 407 408 409 377 378 379 380 348 349 317 318 319 287 255 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 805 806 807 808 809 810 778 
[DBG]    Local path (in submap): 779 780 
[DBG]    Suffix (out of submap): 781 782 750 718 719 720 721 689 657 658 659 627 628 596 597 565 566 534 502 470 438 406 407 408 409 377 378 379 380 348 349 317 318 319 287 255 
[DBG]  Original agent path length 56 je: 45
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 2: 805, 806, 807, 808, 809, 810, 778, 779, 780, 781, 782, 750, 718, 719, 720, 721, 689, 657, 658, 659, 627, 628, 596, 597, 565, 566, 534, 502, 470, 438, 406, 407, 408, 409, 377, 378, 379, 380, 348, 349, 317, 318, 319, 287, 255, 
[DBG]  Path for agent 56 updated, resulting length: 45
[DBG]  Update the agent path 97 | Original local length: 1 | New local length: 1
[DBG]  agent 97 t=0 => decoded (sx,sy)=(4,1) => global_id=841
[DBG]  Complete path of agent 97:
[DBG]    Original: 650 682 714 746 778 777 809 841 873 905 904 936 968 1000 999 998 997 
[DBG]    New:     650 682 714 746 778 777 809 841 873 905 904 936 968 1000 999 998 997 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 650 682 714 746 778 777 809 
[DBG]    Local path (in submap): 841 
[DBG]    Suffix (out of submap): 873 905 904 936 968 1000 999 998 997 
[DBG]  Original agent path length 97 je: 17
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 3: 650, 682, 714, 746, 778, 777, 809, 841, 873, 905, 904, 936, 968, 1000, 999, 998, 997, 
[DBG]  Path for agent 97 updated, resulting length: 17
[DBG]  Update the agent path 122 | Original local length: 2 | New local length: 2
[DBG]  agent 122 t=0 => decoded (sx,sy)=(1,3) => global_id=747
[DBG]  agent 122 t=1 => decoded (sx,sy)=(0,3) => global_id=715
[DBG]  Complete path of agent 122:
[DBG]    Original: 909 877 876 844 843 811 779 747 715 683 682 650 649 617 616 584 583 551 519 487 455 423 391 359 358 357 325 293 261 260 228 196 197 
[DBG]    New:     909 877 876 844 843 811 779 747 715 683 682 650 649 617 616 584 583 551 519 487 455 423 391 359 358 357 325 293 261 260 228 196 197 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 909 877 876 844 843 811 779 
[DBG]    Local path (in submap): 747 715 
[DBG]    Suffix (out of submap): 683 682 650 649 617 616 584 583 551 519 487 455 423 391 359 358 357 325 293 261 260 228 196 197 
[DBG]  Original agent path length 122 je: 33
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 4: 909, 877, 876, 844, 843, 811, 779, 747, 715, 683, 682, 650, 649, 617, 616, 584, 583, 551, 519, 487, 455, 423, 391, 359, 358, 357, 325, 293, 261, 260, 228, 196, 197, 
[DBG]  Path for agent 122 updated, resulting length: 33
[DBG]  Update the agent path 148 | Original local length: 7 | New local length: 7
[DBG]  agent 148 t=0 => decoded (sx,sy)=(3,0) => global_id=808
[DBG]  agent 148 t=1 => decoded (sx,sy)=(3,1) => global_id=809
[DBG]  agent 148 t=2 => decoded (sx,sy)=(3,2) => global_id=810
[DBG]  agent 148 t=3 => decoded (sx,sy)=(3,3) => global_id=811
[DBG]  agent 148 t=4 => decoded (sx,sy)=(2,3) => global_id=779
[DBG]  agent 148 t=5 => decoded (sx,sy)=(1,3) => global_id=747
[DBG]  agent 148 t=6 => decoded (sx,sy)=(0,3) => global_id=715
[DBG]  Complete path of agent 148:
[DBG]    Original: 776 776 776 776 776 776 776 808 809 810 811 779 747 715 683 684 685 653 654 655 656 656 656 657 658 659 660 
[DBG]    New:     776 776 776 776 776 776 776 808 809 810 811 779 747 715 683 684 685 653 654 655 656 656 656 657 658 659 660 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 776 776 776 776 776 776 776 
[DBG]    Local path (in submap): 808 809 810 811 779 747 715 
[DBG]    Suffix (out of submap): 683 684 685 653 654 655 656 656 656 657 658 659 660 
[DBG]  Original agent path length 148 je: 27
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 5: 776, 776, 776, 776, 776, 776, 776, 808, 809, 810, 811, 779, 747, 715, 683, 684, 685, 653, 654, 655, 656, 656, 656, 657, 658, 659, 660, 
[DBG]  Path for agent 148 updated, resulting length: 27
[DBG]  Paths successfully updated.
[DBG]  (LNS.cpp) New path for agent 32: 
[DBG]  868, 836, 804, 805, 773, 774, 775, 776, 744, 
[DBG]  (LNS.cpp) New path for agent 37: 
[DBG]  839, 839, 839, 807, 808, 809, 810, 778, 779, 780, 781, 782, 
[DBG]  (LNS.cpp) New path for agent 56: 
[DBG]  805, 806, 807, 808, 809, 810, 778, 779, 780, 781, 782, 750, 718, 719, 720, 721, 689, 657, 658, 659, 627, 628, 596, 597, 565, 566, 534, 502, 470, 438, 406, 407, 408, 409, 377, 378, 379, 380, 348, 349, 317, 318, 319, 287, 255, 
[DBG]  (LNS.cpp) New path for agent 97: 
[DBG]  650, 682, 714, 746, 778, 777, 809, 841, 873, 905, 904, 936, 968, 1000, 999, 998, 997, 
[DBG]  (LNS.cpp) New path for agent 122: 
[DBG]  909, 877, 876, 844, 843, 811, 779, 747, 715, 683, 682, 650, 649, 617, 616, 584, 583, 551, 519, 487, 455, 423, 391, 359, 358, 357, 325, 293, 261, 260, 228, 196, 197, 
[DBG]  (LNS.cpp) New path for agent 148: 
[DBG]  776, 776, 776, 776, 776, 776, 776, 808, 809, 810, 811, 779, 747, 715, 683, 684, 685, 653, 654, 655, 656, 656, 656, 657, 658, 659, 660, 
[DBG]  component_weights = {0.45537, 0.0473898, 0.0495579, 0.447682}
[DBG]  opSuccess value: 1
[STAT] neighbor.sum_of_costs before recomputation: 137
[STAT] neighbor.old_sum_of_costs before recomputation: 137
[STAT] sum_of_costs before recomputation: 4169
[DBG]  Validate solution immediately after SAT success.
[DBG]  No problems after SAT replan.
[DBG]  Recomputing sum_of_cost by dividing neighbor.sum_of_costs and neighbor.old_sum_of_costs
[STAT] sum_of_costs after recomputation: 4169
[STAT] Iteration 223
[DBG]  Using SAT operator (destroy+repair SAT).
[DBG]  ====================
[DBG]  SAT destroy operator called.
[DBG]  SAT heuristic: 2
[DBG]  key_agent_id: 130
[DBG]  key_agent_id global path length: 25
[DBG]  Submap content (global positions):
[DBG]  584 585 586 587 588 
[DBG]  616 617 618 619 620 
[DBG]  648 649 650 651 652 
[DBG]  680 681 682 683 684 
[DBG]  712 713 714 715 716 
[DBG]  Map content with agents and obstacles:
[DBG]  . . X A . 
[DBG]  . . X . . 
[DBG]  . . A A X 
[DBG]  . X . . . 
[DBG]  . . A A X 
[DBG]  content of the map structure that we pass to the SAT solver:
[DBG]  1  1  -1  1  1  
[DBG]  1  1  -1  1  1  
[DBG]  1  1  1  1  -1  
[DBG]  1  -1  1  1  1  
[DBG]  1  1  1  1  -1  
[DBG]  Identifying agents in a submap for rescheduling (when key_agent is there at the time 23):
[DBG]  Agent 20 found intervals in the sub-map:
[DBG]   [17..23]
[DBG]  Agent 20 (interval in submap: [17..23]) contains time 23, added to replan.
[DBG]  Agent 42 found intervals in the sub-map:
[DBG]  
[DBG]  Agent 42 is not in sub-map at time 23 (intervals: 
[DBG]  )
[DBG]  Agent 50 found intervals in the sub-map:
[DBG]   [21..24]
[DBG]  Agent 50 (interval in submap: [21..24]) contains time 23, added to replan.
[DBG]  Agent 87 found intervals in the sub-map:
[DBG]   [26..33]
[DBG]  Agent 87 is not in sub-map at time 23 (intervals: 
[DBG]  [26..33] )
[DBG]  Agent 98 found intervals in the sub-map:
[DBG]   [18..26]
[DBG]  Agent 98 (interval in submap: [18..26]) contains time 23, added to replan.
[DBG]  Agent 101 found intervals in the sub-map:
[DBG]   [23..28]
[DBG]  Agent 101 (interval in submap: [23..28]) contains time 23, added to replan.
[DBG]  Agent 103 found intervals in the sub-map:
[DBG]   [27..32]
[DBG]  Agent 103 is not in sub-map at time 23 (intervals: 
[DBG]  [27..32] )
[DBG]  Agent 118 found intervals in the sub-map:
[DBG]  
[DBG]  Agent 118 is not in sub-map at time 23 (intervals: 
[DBG]  )
[DBG]  Agent 125 found intervals in the sub-map:
[DBG]   [15..22]
[DBG]  Agent 125 is not in sub-map at time 23 (intervals: 
[DBG]  [15..22] )
[DBG]  Agent 130 found intervals in the sub-map:
[DBG]   [18..24]
[DBG]  Agent 130 (interval in submap: [18..24]) contains time 23, added to replan.
[DBG]  Agent 20 | Start (global): 714 -> (local): (4, 2) at time 23 | Goal (global): 714 -> (local): (4, 2) at time 23
[DBG]  Agent 50 | Start (global): 587 -> (local): (0, 3) at time 23 | Goal (global): 588 -> (local): (0, 4) at time 24
[DBG]  Agent 98 | Start (global): 651 -> (local): (2, 3) at time 23 | Goal (global): 588 -> (local): (0, 4) at time 26
[DBG]  Agent 101 | Start (global): 715 -> (local): (4, 3) at time 23 | Goal (global): 648 -> (local): (2, 0) at time 28
[DBG]  Agent 130 | Start (global): 650 -> (local): (2, 2) at time 23 | Goal (global): 651 -> (local): (2, 3) at time 24
[DBG]  [REPAIR] SAT destroy operator called.
[DBG]  [REPAIR] SAT operator â€“ launching subproblem FOR OPTIMIZATION.
[DBG]  Creating local paths (sx, sy) in the submap for T_sync = 23
[DBG]    Agent 20 (global paths from T=23 to 23) has local path: (4,2) 
[DBG]    Agent 50 (global paths from T=23 to 24) has local path: (0,3) (0,4) 
[DBG]    Agent 98 (global paths from T=23 to 26) has local path: (2,3) (1,3) (0,3) (0,4) 
[DBG]    Agent 101 (global paths from T=23 to 28) has local path: (4,3) (4,2) (4,1) (4,0) (3,0) (2,0) 
[DBG]    Agent 130 (global paths from T=23 to 24) has local path: (2,2) (2,3) 
[DBG]  Checking input data for SAT solver:
[DBG]    - Number of agents to replan: 5
[DBG]  Agent 20 has the original local path length: 1 => Start (4,2), Goal (4,2)
[DBG]  Agent 50 has the original local path length: 2 => Start (0,3), Goal (0,4)
[DBG]  Agent 98 has the original local path length: 4 => Start (2,3), Goal (0,4)
[DBG]  Agent 101 has the original local path length: 6 => Start (4,3), Goal (2,0)
[DBG]  Agent 130 has the original local path length: 2 => Start (2,2), Goal (2,3)
[DBG]  Start position: (4, 2), (0, 3), (2, 3), (4, 3), (2, 2), 
[DBG]  Goal position: (4, 2), (0, 4), (0, 4), (2, 0), (2, 3), 
[DBG]  SAT instance and solver created.
Currently solving
Instance name: scen
Map name: map
Encoding used: disappear_at_goal
SAT solver used: Kissat
Optimizing function: sum of costs
Number of agents: 5
Mks LB: 6
SoC LB: 15
Delta: 0
Remaining time: 300000 [ms]

Vertex conflict! Agents 0, 1, timestep 2, location 0
Swapping conflict! Agents 0, 1, timestep 2, edge (0,0)
Vertex conflict! Agents 0, 1, timestep 3, location 0
Swapping conflict! Agents 0, 1, timestep 3, edge (0,0)
Vertex conflict! Agents 0, 1, timestep 4, location 0
Swapping conflict! Agents 0, 1, timestep 4, edge (0,0)
Vertex conflict! Agents 0, 1, timestep 5, location 0
Vertex conflict! Agents 0, 2, timestep 4, location 0
Swapping conflict! Agents 0, 2, timestep 4, edge (0,0)
Vertex conflict! Agents 0, 2, timestep 5, location 0
Vertex conflict! Agents 0, 4, timestep 2, location 0
Swapping conflict! Agents 0, 4, timestep 2, edge (0,0)
Vertex conflict! Agents 0, 4, timestep 3, location 0
Swapping conflict! Agents 0, 4, timestep 3, edge (0,0)
Vertex conflict! Agents 0, 4, timestep 4, location 0
Swapping conflict! Agents 0, 4, timestep 4, edge (0,0)
Vertex conflict! Agents 0, 4, timestep 5, location 0
Vertex conflict! Agents 1, 2, timestep 4, location 0
Swapping conflict! Agents 1, 2, timestep 4, edge (0,0)
Vertex conflict! Agents 1, 2, timestep 5, location 0
Vertex conflict! Agents 1, 4, timestep 2, location 0
Swapping conflict! Agents 1, 4, timestep 2, edge (0,0)
Vertex conflict! Agents 1, 4, timestep 3, location 0
Swapping conflict! Agents 1, 4, timestep 3, edge (0,0)
Vertex conflict! Agents 1, 4, timestep 4, location 0
Swapping conflict! Agents 1, 4, timestep 4, edge (0,0)
Vertex conflict! Agents 1, 4, timestep 5, location 0
Vertex conflict! Agents 2, 4, timestep 4, location 0
Swapping conflict! Agents 2, 4, timestep 4, edge (0,0)
Vertex conflict! Agents 2, 4, timestep 5, location 0
Found plan [agents = 5] [timesteps = 6]
Agent #0 : 18 0 0 0 0 0 
Agent #1 : 2 3 0 0 0 0 
Agent #2 : 11 6 7 3 0 0 
Agent #3 : 19 18 17 16 12 8 
Agent #4 : 10 11 0 0 0 0 

[STAT] Solver returned: 0
[DBG]  Agent (index) 20 | New local path (submap idx):
[DBG]  18 
[DBG]  Agent (index) 50 | New local path (submap idx):
[DBG]  2 3 
[DBG]  Agent (index) 98 | New local path (submap idx):
[DBG]  11 6 7 3 
[DBG]  Agent (index) 101 | New local path (submap idx):
[DBG]  19 18 17 16 12 8 
[DBG]  Agent (index) 130 | New local path (submap idx):
[DBG]  10 11 
[DBG]  Update the agent path 20 | Original local length: 1 | New local length: 1
[DBG]  agent 20 t=0 => decoded (sx,sy)=(4,2) => global_id=714
[DBG]  Complete path of agent 20:
[DBG]    Original: 242 241 240 239 271 303 335 367 366 398 430 462 494 526 525 524 556 588 587 619 651 650 682 714 746 745 777 809 841 873 905 904 
[DBG]    New:     242 241 240 239 271 303 335 367 366 398 430 462 494 526 525 524 556 588 587 619 651 650 682 714 746 745 777 809 841 873 905 904 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 242 241 240 239 271 303 335 367 366 398 430 462 494 526 525 524 556 588 587 619 651 650 682 
[DBG]    Local path (in submap): 714 
[DBG]    Suffix (out of submap): 746 745 777 809 841 873 905 904 
[DBG]  Original agent path length 20 je: 32
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 0: 242, 241, 240, 239, 271, 303, 335, 367, 366, 398, 430, 462, 494, 526, 525, 524, 556, 588, 587, 619, 651, 650, 682, 714, 746, 745, 777, 809, 841, 873, 905, 904, 
[DBG]  Path for agent 20 updated, resulting length: 32
[DBG]  Update the agent path 50 | Original local length: 2 | New local length: 2
[DBG]  agent 50 t=0 => decoded (sx,sy)=(0,3) => global_id=587
[DBG]  agent 50 t=1 => decoded (sx,sy)=(0,4) => global_id=588
[DBG]  Complete path of agent 50:
[DBG]    Original: 888 887 886 885 884 883 882 850 849 848 847 815 783 751 719 718 686 654 622 590 589 588 587 587 588 556 524 492 460 428 427 395 363 331 299 300 268 269 237 205 173 141 
[DBG]    New:     888 887 886 885 884 883 882 850 849 848 847 815 783 751 719 718 686 654 622 590 589 588 587 587 588 556 524 492 460 428 427 395 363 331 299 300 268 269 237 205 173 141 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 888 887 886 885 884 883 882 850 849 848 847 815 783 751 719 718 686 654 622 590 589 588 587 
[DBG]    Local path (in submap): 587 588 
[DBG]    Suffix (out of submap): 556 524 492 460 428 427 395 363 331 299 300 268 269 237 205 173 141 
[DBG]  Original agent path length 50 je: 42
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 1: 888, 887, 886, 885, 884, 883, 882, 850, 849, 848, 847, 815, 783, 751, 719, 718, 686, 654, 622, 590, 589, 588, 587, 587, 588, 556, 524, 492, 460, 428, 427, 395, 363, 331, 299, 300, 268, 269, 237, 205, 173, 141, 
[DBG]  Path for agent 50 updated, resulting length: 42
[DBG]  Update the agent path 98 | Original local length: 4 | New local length: 4
[DBG]  agent 98 t=0 => decoded (sx,sy)=(2,3) => global_id=651
[DBG]  agent 98 t=1 => decoded (sx,sy)=(1,3) => global_id=619
[DBG]  agent 98 t=2 => decoded (sx,sy)=(1,4) => global_id=620
[DBG]  agent 98 t=3 => decoded (sx,sy)=(0,4) => global_id=588
[DBG]  Complete path of agent 98:
[DBG]    Original: 897 865 864 832 800 801 769 770 771 739 740 741 742 710 678 646 647 615 616 616 648 649 650 651 619 587 588 589 590 558 
[DBG]    New:     897 865 864 832 800 801 769 770 771 739 740 741 742 710 678 646 647 615 616 616 648 649 650 651 619 620 588 589 590 558 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 897 865 864 832 800 801 769 770 771 739 740 741 742 710 678 646 647 615 616 616 648 649 650 
[DBG]    Local path (in submap): 651 619 620 588 
[DBG]    Suffix (out of submap): 589 590 558 
[DBG]  Original agent path length 98 je: 30
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 2: 897, 865, 864, 832, 800, 801, 769, 770, 771, 739, 740, 741, 742, 710, 678, 646, 647, 615, 616, 616, 648, 649, 650, 651, 619, 620, 588, 589, 590, 558, 
[DBG]  Path for agent 98 updated, resulting length: 30
[DBG]  Update the agent path 101 | Original local length: 6 | New local length: 6
[DBG]  agent 101 t=0 => decoded (sx,sy)=(4,3) => global_id=715
[DBG]  agent 101 t=1 => decoded (sx,sy)=(4,2) => global_id=714
[DBG]  agent 101 t=2 => decoded (sx,sy)=(4,1) => global_id=713
[DBG]  agent 101 t=3 => decoded (sx,sy)=(4,0) => global_id=712
[DBG]  agent 101 t=4 => decoded (sx,sy)=(3,0) => global_id=680
[DBG]  agent 101 t=5 => decoded (sx,sy)=(2,0) => global_id=648
[DBG]  Complete path of agent 101:
[DBG]    Original: 985 953 921 920 919 918 917 916 916 884 883 882 850 849 848 847 846 814 813 812 780 779 747 715 714 713 712 680 648 647 615 583 551 519 487 455 423 391 359 358 357 325 324 323 291 259 260 228 196 164 165 133 134 135 136 168 
[DBG]    New:     985 953 921 920 919 918 917 916 916 884 883 882 850 849 848 847 846 814 813 812 780 779 747 715 714 713 712 680 648 647 615 583 551 519 487 455 423 391 359 358 357 325 324 323 291 259 260 228 196 164 165 133 134 135 136 168 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 985 953 921 920 919 918 917 916 916 884 883 882 850 849 848 847 846 814 813 812 780 779 747 
[DBG]    Local path (in submap): 715 714 713 712 680 648 
[DBG]    Suffix (out of submap): 647 615 583 551 519 487 455 423 391 359 358 357 325 324 323 291 259 260 228 196 164 165 133 134 135 136 168 
[DBG]  Original agent path length 101 je: 56
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 3: 985, 953, 921, 920, 919, 918, 917, 916, 916, 884, 883, 882, 850, 849, 848, 847, 846, 814, 813, 812, 780, 779, 747, 715, 714, 713, 712, 680, 648, 647, 615, 583, 551, 519, 487, 455, 423, 391, 359, 358, 357, 325, 324, 323, 291, 259, 260, 228, 196, 164, 165, 133, 134, 135, 136, 168, 
[DBG]  Path for agent 101 updated, resulting length: 56
[DBG]  Update the agent path 130 | Original local length: 2 | New local length: 2
[DBG]  agent 130 t=0 => decoded (sx,sy)=(2,2) => global_id=650
[DBG]  agent 130 t=1 => decoded (sx,sy)=(2,3) => global_id=651
[DBG]  Complete path of agent 130:
[DBG]    Original: 944 976 976 976 975 974 973 941 909 877 845 844 812 811 779 778 746 745 713 712 680 648 649 650 651 
[DBG]    New:     944 976 976 976 975 974 973 941 909 877 845 844 812 811 779 778 746 745 713 712 680 648 649 650 651 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 944 976 976 976 975 974 973 941 909 877 845 844 812 811 779 778 746 745 713 712 680 648 649 
[DBG]    Local path (in submap): 650 651 
[DBG]    Suffix (out of submap): 
[DBG]  Original agent path length 130 je: 25
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 4: 944, 976, 976, 976, 975, 974, 973, 941, 909, 877, 845, 844, 812, 811, 779, 778, 746, 745, 713, 712, 680, 648, 649, 650, 651, 
[DBG]  Path for agent 130 updated, resulting length: 25
[DBG]  Paths successfully updated.
[DBG]  (LNS.cpp) New path for agent 20: 
[DBG]  242, 241, 240, 239, 271, 303, 335, 367, 366, 398, 430, 462, 494, 526, 525, 524, 556, 588, 587, 619, 651, 650, 682, 714, 746, 745, 777, 809, 841, 873, 905, 904, 
[DBG]  (LNS.cpp) New path for agent 50: 
[DBG]  888, 887, 886, 885, 884, 883, 882, 850, 849, 848, 847, 815, 783, 751, 719, 718, 686, 654, 622, 590, 589, 588, 587, 587, 588, 556, 524, 492, 460, 428, 427, 395, 363, 331, 299, 300, 268, 269, 237, 205, 173, 141, 
[DBG]  (LNS.cpp) New path for agent 98: 
[DBG]  897, 865, 864, 832, 800, 801, 769, 770, 771, 739, 740, 741, 742, 710, 678, 646, 647, 615, 616, 616, 648, 649, 650, 651, 619, 620, 588, 589, 590, 558, 
[DBG]  (LNS.cpp) New path for agent 101: 
[DBG]  985, 953, 921, 920, 919, 918, 917, 916, 916, 884, 883, 882, 850, 849, 848, 847, 846, 814, 813, 812, 780, 779, 747, 715, 714, 713, 712, 680, 648, 647, 615, 583, 551, 519, 487, 455, 423, 391, 359, 358, 357, 325, 324, 323, 291, 259, 260, 228, 196, 164, 165, 133, 134, 135, 136, 168, 
[DBG]  (LNS.cpp) New path for agent 130: 
[DBG]  944, 976, 976, 976, 975, 974, 973, 941, 909, 877, 845, 844, 812, 811, 779, 778, 746, 745, 713, 712, 680, 648, 649, 650, 651, 
[DBG]  component_weights = {0.460385, 0.0469535, 0.0491016, 0.44356}
[DBG]  opSuccess value: 1
[STAT] neighbor.sum_of_costs before recomputation: 180
[STAT] neighbor.old_sum_of_costs before recomputation: 180
[STAT] sum_of_costs before recomputation: 4169
[DBG]  Validate solution immediately after SAT success.
[DBG]  No problems after SAT replan.
[DBG]  Recomputing sum_of_cost by dividing neighbor.sum_of_costs and neighbor.old_sum_of_costs
[STAT] sum_of_costs after recomputation: 4169
[STAT] Iteration 224
[DBG]  Using SAT operator (destroy+repair SAT).
[DBG]  ====================
[DBG]  SAT destroy operator called.
[DBG]  SAT heuristic: 2
[DBG]  key_agent_id: 143
[DBG]  key_agent_id global path length: 19
[DBG]  Submap content (global positions):
[DBG]  907 908 909 910 911 
[DBG]  939 940 941 942 943 
[DBG]  971 972 973 974 975 
[DBG]  1003 1004 1005 1006 1007 
[DBG]  -1 -1 -1 -1 -1 
[DBG]  Map content with agents and obstacles:
[DBG]  X . . . X 
[DBG]  . . . . X 
[DBG]  X X A . . 
[DBG]  . . . A X 
[DBG]  X X X X X 
[DBG]  content of the map structure that we pass to the SAT solver:
[DBG]  -1  1  1  1  -1  
[DBG]  1  1  1  1  -1  
[DBG]  -1  -1  1  1  1  
[DBG]  1  1  1  1  -1  
[DBG]  1  1  1  1  1  
[DBG]  Identifying agents in a submap for rescheduling (when key_agent is there at the time 2):
[DBG]  Agent 41 found intervals in the sub-map:
[DBG]  
[DBG]  Agent 41 is not in sub-map at time 2 (intervals: 
[DBG]  )
[DBG]  Agent 79 found intervals in the sub-map:
[DBG]   [0..5]
[DBG]  Agent 79 (interval in submap: [0..5]) contains time 2, added to replan.
[DBG]  Agent 132 found intervals in the sub-map:
[DBG]  
[DBG]  Agent 132 is not in sub-map at time 2 (intervals: 
[DBG]  )
[DBG]  Agent 143 found intervals in the sub-map:
[DBG]   [0..5]
[DBG]  Agent 143 (interval in submap: [0..5]) contains time 2, added to replan.
[DBG]  Agent 79 | Start (global): 1006 -> (local): (3, 3) at time 2 | Goal (global): 910 -> (local): (0, 3) at time 5
[DBG]  Agent 143 | Start (global): 973 -> (local): (2, 2) at time 2 | Goal (global): 908 -> (local): (0, 1) at time 5
[DBG]  [REPAIR] SAT destroy operator called.
[DBG]  [REPAIR] SAT operator â€“ launching subproblem FOR OPTIMIZATION.
[DBG]  Creating local paths (sx, sy) in the submap for T_sync = 2
[DBG]    Agent 79 (global paths from T=2 to 5) has local path: (3,3) (2,3) (1,3) (0,3) 
[DBG]    Agent 143 (global paths from T=2 to 5) has local path: (2,2) (1,2) (1,1) (0,1) 
[DBG]  Checking input data for SAT solver:
[DBG]    - Number of agents to replan: 2
[DBG]  Agent 79 has the original local path length: 4 => Start (3,3), Goal (0,3)
[DBG]  Agent 143 has the original local path length: 4 => Start (2,2), Goal (0,1)
[DBG]  Start position: (3, 3), (2, 2), 
[DBG]  Goal position: (0, 3), (0, 1), 
[DBG]  SAT instance and solver created.
Currently solving
Instance name: scen
Map name: map
Encoding used: disappear_at_goal
SAT solver used: Kissat
Optimizing function: sum of costs
Number of agents: 2
Mks LB: 4
SoC LB: 8
Delta: 0
Remaining time: 300000 [ms]

Found plan [agents = 2] [timesteps = 4]
Agent #0 : 13 8 6 2 
Agent #1 : 7 5 4 0 

[STAT] Solver returned: 0
[DBG]  Agent (index) 79 | New local path (submap idx):
[DBG]  13 8 6 2 
[DBG]  Agent (index) 143 | New local path (submap idx):
[DBG]  7 5 4 0 
[DBG]  Update the agent path 79 | Original local length: 4 | New local length: 4
[DBG]  agent 79 t=0 => decoded (sx,sy)=(3,3) => global_id=1006
[DBG]  agent 79 t=1 => decoded (sx,sy)=(2,3) => global_id=974
[DBG]  agent 79 t=2 => decoded (sx,sy)=(1,3) => global_id=942
[DBG]  agent 79 t=3 => decoded (sx,sy)=(0,3) => global_id=910
[DBG]  Complete path of agent 79:
[DBG]    Original: 1004 1005 1006 974 942 910 878 846 814 782 750 718 686 654 622 590 558 526 525 524 492 460 460 428 429 430 431 432 400 368 336 304 303 271 239 207 208 176 177 178 179 147 115 116 117 118 119 120 121 122 123 
[DBG]    New:     1004 1005 1006 974 942 910 878 846 814 782 750 718 686 654 622 590 558 526 525 524 492 460 460 428 429 430 431 432 400 368 336 304 303 271 239 207 208 176 177 178 179 147 115 116 117 118 119 120 121 122 123 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 1004 1005 
[DBG]    Local path (in submap): 1006 974 942 910 
[DBG]    Suffix (out of submap): 878 846 814 782 750 718 686 654 622 590 558 526 525 524 492 460 460 428 429 430 431 432 400 368 336 304 303 271 239 207 208 176 177 178 179 147 115 116 117 118 119 120 121 122 123 
[DBG]  Original agent path length 79 je: 51
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 0: 1004, 1005, 1006, 974, 942, 910, 878, 846, 814, 782, 750, 718, 686, 654, 622, 590, 558, 526, 525, 524, 492, 460, 460, 428, 429, 430, 431, 432, 400, 368, 336, 304, 303, 271, 239, 207, 208, 176, 177, 178, 179, 147, 115, 116, 117, 118, 119, 120, 121, 122, 123, 
[DBG]  Path for agent 79 updated, resulting length: 51
[DBG]  Update the agent path 143 | Original local length: 4 | New local length: 4
[DBG]  agent 143 t=0 => decoded (sx,sy)=(2,2) => global_id=973
[DBG]  agent 143 t=1 => decoded (sx,sy)=(1,2) => global_id=941
[DBG]  agent 143 t=2 => decoded (sx,sy)=(1,1) => global_id=940
[DBG]  agent 143 t=3 => decoded (sx,sy)=(0,1) => global_id=908
[DBG]  Complete path of agent 143:
[DBG]    Original: 975 974 973 941 940 908 876 877 845 813 813 781 780 748 747 715 715 683 684 
[DBG]    New:     975 974 973 941 940 908 876 877 845 813 813 781 780 748 747 715 715 683 684 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 975 974 
[DBG]    Local path (in submap): 973 941 940 908 
[DBG]    Suffix (out of submap): 876 877 845 813 813 781 780 748 747 715 715 683 684 
[DBG]  Original agent path length 143 je: 19
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 1: 975, 974, 973, 941, 940, 908, 876, 877, 845, 813, 813, 781, 780, 748, 747, 715, 715, 683, 684, 
[DBG]  Path for agent 143 updated, resulting length: 19
[DBG]  Paths successfully updated.
[DBG]  (LNS.cpp) New path for agent 79: 
[DBG]  1004, 1005, 1006, 974, 942, 910, 878, 846, 814, 782, 750, 718, 686, 654, 622, 590, 558, 526, 525, 524, 492, 460, 460, 428, 429, 430, 431, 432, 400, 368, 336, 304, 303, 271, 239, 207, 208, 176, 177, 178, 179, 147, 115, 116, 117, 118, 119, 120, 121, 122, 123, 
[DBG]  (LNS.cpp) New path for agent 143: 
[DBG]  975, 974, 973, 941, 940, 908, 876, 877, 845, 813, 813, 781, 780, 748, 747, 715, 715, 683, 684, 
[DBG]  component_weights = {0.465408, 0.0465164, 0.0486445, 0.439431}
[DBG]  opSuccess value: 1
[STAT] neighbor.sum_of_costs before recomputation: 68
[STAT] neighbor.old_sum_of_costs before recomputation: 68
[STAT] sum_of_costs before recomputation: 4169
[DBG]  Validate solution immediately after SAT success.
[DBG]  No problems after SAT replan.
[DBG]  Recomputing sum_of_cost by dividing neighbor.sum_of_costs and neighbor.old_sum_of_costs
[STAT] sum_of_costs after recomputation: 4169
[STAT] Iteration 225
[DBG]  Using SAT operator (destroy+repair SAT).
[DBG]  ====================
[DBG]  SAT destroy operator called.
[DBG]  SAT heuristic: 2
[DBG]  key_agent_id: 118
[DBG]  key_agent_id global path length: 43
[DBG]  Submap content (global positions):
[DBG]  739 740 741 742 743 
[DBG]  771 772 773 774 775 
[DBG]  803 804 805 806 807 
[DBG]  835 836 837 838 839 
[DBG]  867 868 869 870 871 
[DBG]  Map content with agents and obstacles:
[DBG]  . . . . X 
[DBG]  . . . . . 
[DBG]  . . A . . 
[DBG]  . . . . . 
[DBG]  . . X . . 
[DBG]  content of the map structure that we pass to the SAT solver:
[DBG]  1  1  1  1  -1  
[DBG]  1  1  1  1  1  
[DBG]  1  1  1  1  1  
[DBG]  1  1  1  1  1  
[DBG]  1  1  -1  1  1  
[DBG]  Identifying agents in a submap for rescheduling (when key_agent is there at the time 20):
[DBG]  Agent 118 found intervals in the sub-map:
[DBG]   [18..22]
[DBG]  Agent 118 (interval in submap: [18..22]) contains time 20, added to replan.
[DBG]  Agent 125 found intervals in the sub-map:
[DBG]   [29..29]
[DBG]  Agent 125 is not in sub-map at time 20 (intervals: 
[DBG]  [29..29] )
[DBG]  Agent 118 | Start (global): 805 -> (local): (2, 2) at time 20 | Goal (global): 741 -> (local): (0, 2) at time 22
[DBG]  [REPAIR] SAT destroy operator called.
[DBG]  [REPAIR] SAT operator â€“ launching subproblem FOR OPTIMIZATION.
[DBG]  Creating local paths (sx, sy) in the submap for T_sync = 20
[DBG]    Agent 118 (global paths from T=20 to 22) has local path: (2,2) (1,2) (0,2) 
[DBG]  Checking input data for SAT solver:
[DBG]    - Number of agents to replan: 1
[DBG]  Agent 118 has the original local path length: 3 => Start (2,2), Goal (0,2)
[DBG]  Start position: (2, 2), 
[DBG]  Goal position: (0, 2), 
[DBG]  SAT instance and solver created.
Currently solving
Instance name: scen
Map name: map
Encoding used: disappear_at_goal
SAT solver used: Kissat
Optimizing function: sum of costs
Number of agents: 1
Mks LB: 3
SoC LB: 3
Delta: 0
Remaining time: 300000 [ms]

Found plan [agents = 1] [timesteps = 3]
Agent #0 : 11 6 2 

[STAT] Solver returned: 0
[DBG]  Agent (index) 118 | New local path (submap idx):
[DBG]  11 6 2 
[DBG]  Update the agent path 118 | Original local length: 3 | New local length: 3
[DBG]  agent 118 t=0 => decoded (sx,sy)=(2,2) => global_id=805
[DBG]  agent 118 t=1 => decoded (sx,sy)=(1,2) => global_id=773
[DBG]  agent 118 t=2 => decoded (sx,sy)=(0,2) => global_id=741
[DBG]  Complete path of agent 118:
[DBG]    Original: 887 886 885 884 883 882 850 849 848 847 815 814 813 812 811 810 809 808 807 806 805 773 741 709 677 645 613 581 580 579 547 515 483 482 450 418 419 387 355 323 291 259 227 
[DBG]    New:     887 886 885 884 883 882 850 849 848 847 815 814 813 812 811 810 809 808 807 806 805 773 741 709 677 645 613 581 580 579 547 515 483 482 450 418 419 387 355 323 291 259 227 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 887 886 885 884 883 882 850 849 848 847 815 814 813 812 811 810 809 808 807 806 
[DBG]    Local path (in submap): 805 773 741 
[DBG]    Suffix (out of submap): 709 677 645 613 581 580 579 547 515 483 482 450 418 419 387 355 323 291 259 227 
[DBG]  Original agent path length 118 je: 43
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 0: 887, 886, 885, 884, 883, 882, 850, 849, 848, 847, 815, 814, 813, 812, 811, 810, 809, 808, 807, 806, 805, 773, 741, 709, 677, 645, 613, 581, 580, 579, 547, 515, 483, 482, 450, 418, 419, 387, 355, 323, 291, 259, 227, 
[DBG]  Path for agent 118 updated, resulting length: 43
[DBG]  Paths successfully updated.
[DBG]  (LNS.cpp) New path for agent 118: 
[DBG]  887, 886, 885, 884, 883, 882, 850, 849, 848, 847, 815, 814, 813, 812, 811, 810, 809, 808, 807, 806, 805, 773, 741, 709, 677, 645, 613, 581, 580, 579, 547, 515, 483, 482, 450, 418, 419, 387, 355, 323, 291, 259, 227, 
[DBG]  component_weights = {0.470438, 0.0460788, 0.0481868, 0.435297}
[DBG]  opSuccess value: 1
[STAT] neighbor.sum_of_costs before recomputation: 42
[STAT] neighbor.old_sum_of_costs before recomputation: 42
[STAT] sum_of_costs before recomputation: 4169
[DBG]  Validate solution immediately after SAT success.
[DBG]  No problems after SAT replan.
[DBG]  Recomputing sum_of_cost by dividing neighbor.sum_of_costs and neighbor.old_sum_of_costs
[STAT] sum_of_costs after recomputation: 4169
[STAT] Iteration 226
[DBG]  Using SAT operator (destroy+repair SAT).
[DBG]  ====================
[DBG]  SAT destroy operator called.
[DBG]  SAT heuristic: 2
[DBG]  key_agent_id: 62
[DBG]  key_agent_id global path length: 32
[DBG]  Submap content (global positions):
[DBG]  687 688 689 690 691 
[DBG]  719 720 721 722 723 
[DBG]  751 752 753 754 755 
[DBG]  783 784 785 786 787 
[DBG]  815 816 817 818 819 
[DBG]  Map content with agents and obstacles:
[DBG]  . . . X . 
[DBG]  . . . . X 
[DBG]  A A A X . 
[DBG]  . . X . A 
[DBG]  . X . . A 
[DBG]  content of the map structure that we pass to the SAT solver:
[DBG]  1  1  1  -1  1  
[DBG]  1  1  1  1  -1  
[DBG]  1  1  1  -1  1  
[DBG]  1  1  -1  1  1  
[DBG]  1  -1  1  1  1  
[DBG]  Identifying agents in a submap for rescheduling (when key_agent is there at the time 1):
[DBG]  Agent 46 found intervals in the sub-map:
[DBG]   [0..2]
[DBG]  Agent 46 (interval in submap: [0..2]) contains time 1, added to replan.
[DBG]  Agent 62 found intervals in the sub-map:
[DBG]   [0..13]
[DBG]  Agent 62 (interval in submap: [0..13]) contains time 1, added to replan.
[DBG]  Agent 63 found intervals in the sub-map:
[DBG]   [0..0]
[DBG]  Agent 63 is not in sub-map at time 1 (intervals: 
[DBG]  [0..0] )
[DBG]  Agent 74 found intervals in the sub-map:
[DBG]   [0..8]
[DBG]  Agent 74 (interval in submap: [0..8]) contains time 1, added to replan.
[DBG]  Agent 88 found intervals in the sub-map:
[DBG]   [0..3]
[DBG]  Agent 88 (interval in submap: [0..3]) contains time 1, added to replan.
[DBG]  Agent 91 found intervals in the sub-map:
[DBG]   [0..4]
[DBG]  Agent 91 (interval in submap: [0..4]) contains time 1, added to replan.
[DBG]  Agent 46 | Start (global): 787 -> (local): (3, 4) at time 1 | Goal (global): 755 -> (local): (2, 4) at time 2
[DBG]  Agent 62 | Start (global): 753 -> (local): (2, 2) at time 1 | Goal (global): 687 -> (local): (0, 0) at time 13
[DBG]  Agent 74 | Start (global): 752 -> (local): (2, 1) at time 1 | Goal (global): 687 -> (local): (0, 0) at time 8
[DBG]  Agent 88 | Start (global): 751 -> (local): (2, 0) at time 1 | Goal (global): 687 -> (local): (0, 0) at time 3
[DBG]  Agent 91 | Start (global): 819 -> (local): (4, 4) at time 1 | Goal (global): 755 -> (local): (2, 4) at time 4
[DBG]  [REPAIR] SAT destroy operator called.
[DBG]  [REPAIR] SAT operator â€“ launching subproblem FOR OPTIMIZATION.
[DBG]  Creating local paths (sx, sy) in the submap for T_sync = 1
[DBG]    Agent 46 (global paths from T=1 to 2) has local path: (3,4) (2,4) 
[DBG]    Agent 62 (global paths from T=1 to 13) has local path: (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,1) (1,1) (1,0) (0,0) 
[DBG]    Agent 74 (global paths from T=1 to 8) has local path: (2,1) (2,1) (2,1) (2,1) (2,1) (2,0) (1,0) (0,0) 
[DBG]    Agent 88 (global paths from T=1 to 3) has local path: (2,0) (1,0) (0,0) 
[DBG]    Agent 91 (global paths from T=1 to 4) has local path: (4,4) (3,4) (2,4) (2,4) 
[DBG]  Checking input data for SAT solver:
[DBG]    - Number of agents to replan: 5
[DBG]  Agent 46 has the original local path length: 2 => Start (3,4), Goal (2,4)
[DBG]  Agent 62 has the original local path length: 13 => Start (2,2), Goal (0,0)
[DBG]  Agent 74 has the original local path length: 8 => Start (2,1), Goal (0,0)
[DBG]  Agent 88 has the original local path length: 3 => Start (2,0), Goal (0,0)
[DBG]  Agent 91 has the original local path length: 4 => Start (4,4), Goal (2,4)
[DBG]  Start position: (3, 4), (2, 2), (2, 1), (2, 0), (4, 4), 
[DBG]  Goal position: (2, 4), (0, 0), (0, 0), (0, 0), (2, 4), 
[DBG]  SAT instance and solver created.
Currently solving
Instance name: scen
Map name: map
Encoding used: disappear_at_goal
SAT solver used: Kissat
Optimizing function: sum of costs
Number of agents: 5
Mks LB: 5
SoC LB: 17
Delta: 0
Remaining time: 300000 [ms]

Vertex conflict! Agents 0, 1, timestep 4, location 0
Vertex conflict! Agents 0, 2, timestep 3, location 0
Swapping conflict! Agents 0, 2, timestep 3, edge (0,0)
Vertex conflict! Agents 0, 2, timestep 4, location 0
Vertex conflict! Agents 0, 3, timestep 2, location 0
Swapping conflict! Agents 0, 3, timestep 2, edge (0,0)
Vertex conflict! Agents 0, 3, timestep 3, location 0
Swapping conflict! Agents 0, 3, timestep 3, edge (0,0)
Vertex conflict! Agents 0, 3, timestep 4, location 0
Vertex conflict! Agents 0, 4, timestep 3, location 0
Swapping conflict! Agents 0, 4, timestep 3, edge (0,0)
Vertex conflict! Agents 0, 4, timestep 4, location 0
Vertex conflict! Agents 1, 2, timestep 4, location 0
Vertex conflict! Agents 1, 3, timestep 4, location 0
Vertex conflict! Agents 1, 4, timestep 4, location 0
Vertex conflict! Agents 2, 3, timestep 3, location 0
Swapping conflict! Agents 2, 3, timestep 3, edge (0,0)
Vertex conflict! Agents 2, 3, timestep 4, location 0
Vertex conflict! Agents 2, 4, timestep 3, location 0
Swapping conflict! Agents 2, 4, timestep 3, edge (0,0)
Vertex conflict! Agents 2, 4, timestep 4, location 0
Vertex conflict! Agents 3, 4, timestep 3, location 0
Swapping conflict! Agents 3, 4, timestep 3, edge (0,0)
Vertex conflict! Agents 3, 4, timestep 4, location 0
Found plan [agents = 5] [timesteps = 5]
Agent #0 : 15 11 0 0 0 
Agent #1 : 10 9 8 4 0 
Agent #2 : 9 8 4 0 0 
Agent #3 : 8 4 0 0 0 
Agent #4 : 19 15 11 0 0 

[STAT] Solver returned: 0
[DBG]  Agent (index) 46 | New local path (submap idx):
[DBG]  15 11 
[DBG]  Agent (index) 62 | New local path (submap idx):
[DBG]  10 9 8 4 0 
[DBG]  Agent (index) 74 | New local path (submap idx):
[DBG]  9 8 4 0 
[DBG]  Agent (index) 88 | New local path (submap idx):
[DBG]  8 4 0 
[DBG]  Agent (index) 91 | New local path (submap idx):
[DBG]  19 15 11 
[DBG]  Update the agent path 46 | Original local length: 2 | New local length: 2
[DBG]  agent 46 t=0 => decoded (sx,sy)=(3,4) => global_id=787
[DBG]  agent 46 t=1 => decoded (sx,sy)=(2,4) => global_id=755
[DBG]  Complete path of agent 46:
[DBG]    Original: 786 787 755 756 757 725 724 725 726 727 728 696 664 632 633 601 569 570 538 506 507 475 443 411 379 379 380 381 349 317 285 284 252 
[DBG]    New:     786 787 755 756 757 725 724 725 726 727 728 696 664 632 633 601 569 570 538 506 507 475 443 411 379 379 380 381 349 317 285 284 252 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 786 
[DBG]    Local path (in submap): 787 755 
[DBG]    Suffix (out of submap): 756 757 725 724 725 726 727 728 696 664 632 633 601 569 570 538 506 507 475 443 411 379 379 380 381 349 317 285 284 252 
[DBG]  Original agent path length 46 je: 33
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 0: 786, 787, 755, 756, 757, 725, 724, 725, 726, 727, 728, 696, 664, 632, 633, 601, 569, 570, 538, 506, 507, 475, 443, 411, 379, 379, 380, 381, 349, 317, 285, 284, 252, 
[DBG]  Path for agent 46 updated, resulting length: 33
[DBG]  Update the agent path 62 | Original local length: 13 | New local length: 5
[DBG]  agent 62 t=0 => decoded (sx,sy)=(2,2) => global_id=753
[DBG]  agent 62 t=1 => decoded (sx,sy)=(2,1) => global_id=752
[DBG]  agent 62 t=2 => decoded (sx,sy)=(2,0) => global_id=751
[DBG]  agent 62 t=3 => decoded (sx,sy)=(1,0) => global_id=719
[DBG]  agent 62 t=4 => decoded (sx,sy)=(0,0) => global_id=687
[DBG]  Complete path of agent 62:
[DBG]    Original: 753 753 753 753 753 753 753 753 753 753 752 720 719 687 655 623 591 592 560 528 496 464 432 433 465 466 467 435 403 404 405 406 
[DBG]    New:     753 753 752 751 719 687 655 623 591 592 560 528 496 464 432 433 465 466 467 435 403 404 405 406 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 753 
[DBG]    Local path (in submap): 753 752 751 719 687 655 623 591 592 560 528 496 464 
[DBG]    Suffix (out of submap): 432 433 465 466 467 435 403 404 405 406 
[DBG]  Original agent path length 62 je: 32
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 1: 753, 753, 752, 751, 719, 687, 655, 623, 591, 592, 560, 528, 496, 464, 432, 433, 465, 466, 467, 435, 403, 404, 405, 406, 
[DBG]  Path for agent 62 updated, resulting length: 24
[DBG]  Update the agent path 74 | Original local length: 8 | New local length: 4
[DBG]  agent 74 t=0 => decoded (sx,sy)=(2,1) => global_id=752
[DBG]  agent 74 t=1 => decoded (sx,sy)=(2,0) => global_id=751
[DBG]  agent 74 t=2 => decoded (sx,sy)=(1,0) => global_id=719
[DBG]  agent 74 t=3 => decoded (sx,sy)=(0,0) => global_id=687
[DBG]  Complete path of agent 74:
[DBG]    Original: 752 752 752 752 752 752 751 719 687 686 654 654 654 655 656 657 658 659 627 628 596 597 565 566 534 502 503 504 472 472 504 
[DBG]    New:     752 752 751 719 687 686 654 654 654 655 656 657 658 659 627 628 596 597 565 566 534 502 503 504 472 472 504 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 752 
[DBG]    Local path (in submap): 752 751 719 687 686 654 654 654 
[DBG]    Suffix (out of submap): 655 656 657 658 659 627 628 596 597 565 566 534 502 503 504 472 472 504 
[DBG]  Original agent path length 74 je: 31
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 2: 752, 752, 751, 719, 687, 686, 654, 654, 654, 655, 656, 657, 658, 659, 627, 628, 596, 597, 565, 566, 534, 502, 503, 504, 472, 472, 504, 
[DBG]  Path for agent 74 updated, resulting length: 27
[DBG]  Update the agent path 88 | Original local length: 3 | New local length: 3
[DBG]  agent 88 t=0 => decoded (sx,sy)=(2,0) => global_id=751
[DBG]  agent 88 t=1 => decoded (sx,sy)=(1,0) => global_id=719
[DBG]  agent 88 t=2 => decoded (sx,sy)=(0,0) => global_id=687
[DBG]  Complete path of agent 88:
[DBG]    Original: 783 751 719 687 655 623 591 592 560 528 496 464 465 433 401 369 337 338 306 274 242 210 209 
[DBG]    New:     783 751 719 687 655 623 591 592 560 528 496 464 465 433 401 369 337 338 306 274 242 210 209 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 783 
[DBG]    Local path (in submap): 751 719 687 
[DBG]    Suffix (out of submap): 655 623 591 592 560 528 496 464 465 433 401 369 337 338 306 274 242 210 209 
[DBG]  Original agent path length 88 je: 23
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 3: 783, 751, 719, 687, 655, 623, 591, 592, 560, 528, 496, 464, 465, 433, 401, 369, 337, 338, 306, 274, 242, 210, 209, 
[DBG]  Path for agent 88 updated, resulting length: 23
[DBG]  Update the agent path 91 | Original local length: 4 | New local length: 3
[DBG]  agent 91 t=0 => decoded (sx,sy)=(4,4) => global_id=819
[DBG]  agent 91 t=1 => decoded (sx,sy)=(3,4) => global_id=787
[DBG]  agent 91 t=2 => decoded (sx,sy)=(2,4) => global_id=755
[DBG]  Complete path of agent 91:
[DBG]    Original: 787 819 787 755 755 756 756 724 725 726 727 728 696 664 632 600 601 569 570 571 572 540 508 509 477 445 413 413 381 
[DBG]    New:     787 819 787 755 756 756 724 725 726 727 728 696 664 632 600 601 569 570 571 572 540 508 509 477 445 413 413 381 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 787 
[DBG]    Local path (in submap): 819 787 755 756 
[DBG]    Suffix (out of submap): 756 724 725 726 727 728 696 664 632 600 601 569 570 571 572 540 508 509 477 445 413 413 381 
[DBG]  Original agent path length 91 je: 29
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 4: 787, 819, 787, 755, 756, 756, 724, 725, 726, 727, 728, 696, 664, 632, 600, 601, 569, 570, 571, 572, 540, 508, 509, 477, 445, 413, 413, 381, 
[DBG]  Path for agent 91 updated, resulting length: 28
[DBG]  Paths successfully updated.
[DBG]  (LNS.cpp) New path for agent 46: 
[DBG]  786, 787, 755, 756, 757, 725, 724, 725, 726, 727, 728, 696, 664, 632, 633, 601, 569, 570, 538, 506, 507, 475, 443, 411, 379, 379, 380, 381, 349, 317, 285, 284, 252, 
[DBG]  (LNS.cpp) New path for agent 62: 
[DBG]  753, 753, 752, 751, 719, 687, 655, 623, 591, 592, 560, 528, 496, 464, 432, 433, 465, 466, 467, 435, 403, 404, 405, 406, 
[DBG]  (LNS.cpp) New path for agent 74: 
[DBG]  752, 752, 751, 719, 687, 686, 654, 654, 654, 655, 656, 657, 658, 659, 627, 628, 596, 597, 565, 566, 534, 502, 503, 504, 472, 472, 504, 
[DBG]  (LNS.cpp) New path for agent 88: 
[DBG]  783, 751, 719, 687, 655, 623, 591, 592, 560, 528, 496, 464, 465, 433, 401, 369, 337, 338, 306, 274, 242, 210, 209, 
[DBG]  (LNS.cpp) New path for agent 91: 
[DBG]  787, 819, 787, 755, 756, 756, 724, 725, 726, 727, 728, 696, 664, 632, 600, 601, 569, 570, 571, 572, 540, 508, 509, 477, 445, 413, 413, 381, 
[DBG]  component_weights = {0.466109, 0.0456548, 0.0477434, 0.440493}
[DBG]  opSuccess value: 1
[STAT] neighbor.sum_of_costs before recomputation: 130
[STAT] neighbor.old_sum_of_costs before recomputation: 143
[STAT] sum_of_costs before recomputation: 4169
[DBG]  Validate solution immediately after SAT success.
[WARNING] Problem after SAT: Edge conflict between agents 19 and 62 at edge (592,591) at timestep 9
[DBG]  Attempting immediate repair via init_lns because problem occurred after SAT (should be applied only for conflicts...).
[DBG]  Passing 150 agents to init_lns (skip=true).
[DBG]  path_table contents for selected agents (neighbor.agents):
[DBG]    Agent 46 => controlling path length=33
[DBG]    Agent 62 => controlling path length=24
[DBG]    Agent 74 => controlling path length=27
[DBG]    Agent 88 => controlling path length=23
[DBG]    Agent 91 => controlling path length=28
[DBG]  hodnota skip_initial_solution=1
[DBG]  We skip initialSolution => call buildCollisionData()
[DBG]  buildCollisionData() called â€“ skip_initial_solution case.
[DBG]  Agents.size()=150, collision_graph.size()=150
[DBG]  agent 19 => updateCollidingPairs => foundCollision
[DBG]  agent 30 => updateCollidingPairs => foundCollision
[DBG]  agent 46 => updateCollidingPairs => foundCollision
[DBG]  agent 56 => updateCollidingPairs => foundCollision
[DBG]  agent 58 => updateCollidingPairs => foundCollision
[DBG]  agent 61 => updateCollidingPairs => foundCollision
[DBG]  agent 62 => updateCollidingPairs => foundCollision
[DBG]  agent 74 => updateCollidingPairs => foundCollision
[DBG]  agent 81 => updateCollidingPairs => foundCollision
[DBG]  agent 84 => updateCollidingPairs => foundCollision
[DBG]  agent 86 => updateCollidingPairs => foundCollision
[DBG]  agent 91 => updateCollidingPairs => foundCollision
[DBG]  agent 100 => updateCollidingPairs => foundCollision
[DBG]  agent 108 => updateCollidingPairs => foundCollision
[DBG]  Conflicting agent pairs:
[DBG]  agent 19 is in conflict with agent 62
[DBG]  agent 30 is in conflict with agent 74
[DBG]  agent 46 is in conflict with agent 91
[DBG]  agent 56 is in conflict with agent 62
[DBG]  agent 58 is in conflict with agent 91
[DBG]  agent 61 is in conflict with agent 62
[DBG]  agent 61 is in conflict with agent 74
[DBG]  agent 62 is in conflict with agent 81
[DBG]  agent 62 is in conflict with agent 84
[DBG]  agent 62 is in conflict with agent 86
[DBG]  agent 62 is in conflict with agent 100
[DBG]  agent 91 is in conflict with agent 108
[DBG]  buildCollisionData() => sum_of_costs=4156, num_of_colliding_pairs=12
[DBG]  buildCollisionData done => sum_of_costs=4156, num_of_colliding_pairs=12
[DBG]  sum_of_cost hodnota: 4156
[DBG]  After skip/init build => iteration_stats.back(): sum_of_costs=4156, collisions=12
[DEBUG] Using default neighbor generation strategy for conflicts: 1
[DEBUG] Using default neighbor generation strategy for conflicts: 1
	InitLNS(PP): runtime = 0.00709875, iterations = 3, colliding pairs = 0, initial colliding pairs = 12, solution cost = 4166, initial solution cost = 4156, failed iterations = 0
[DBG]  init_lns->sum_of_costs after init_lns->run: 4166
[DBG]  sum_of_costs after assignment from init_lns->run: 4166
[DBG]  Recomputing sum_of_cost by dividing neighbor.sum_of_costs and neighbor.old_sum_of_costs
[STAT] sum_of_costs after recomputation: 4166
[STAT] Iteration 227
[DBG]  Using SAT operator (destroy+repair SAT).
[DBG]  ====================
[DBG]  SAT destroy operator called.
[DBG]  SAT heuristic: 2
[DBG]  key_agent_id: 9
[DBG]  key_agent_id global path length: 18
[DBG]  Submap content (global positions):
[DBG]  74 75 76 77 78 
[DBG]  106 107 108 109 110 
[DBG]  138 139 140 141 142 
[DBG]  170 171 172 173 174 
[DBG]  202 203 204 205 206 
[DBG]  Map content with agents and obstacles:
[DBG]  . . . . X 
[DBG]  . A . . A 
[DBG]  A . A A X 
[DBG]  . X . . X 
[DBG]  X . . . . 
[DBG]  content of the map structure that we pass to the SAT solver:
[DBG]  1  1  1  1  -1  
[DBG]  1  1  1  1  1  
[DBG]  1  1  1  1  -1  
[DBG]  1  -1  1  1  -1  
[DBG]  -1  1  1  1  1  
[DBG]  Identifying agents in a submap for rescheduling (when key_agent is there at the time 4):
[DBG]  Agent 9 found intervals in the sub-map:
[DBG]   [2..6]
[DBG]  Agent 9 (interval in submap: [2..6]) contains time 4, added to replan.
[DBG]  Agent 26 found intervals in the sub-map:
[DBG]   [2..6]
[DBG]  Agent 26 (interval in submap: [2..6]) contains time 4, added to replan.
[DBG]  Agent 66 found intervals in the sub-map:
[DBG]   [4..9]
[DBG]  Agent 66 (interval in submap: [4..9]) contains time 4, added to replan.
[DBG]  Agent 72 found intervals in the sub-map:
[DBG]   [4..9]
[DBG]  Agent 72 (interval in submap: [4..9]) contains time 4, added to replan.
[DBG]  Agent 80 found intervals in the sub-map:
[DBG]   [5..15]
[DBG]  Agent 80 is not in sub-map at time 4 (intervals: 
[DBG]  [5..15] )
[DBG]  Agent 82 found intervals in the sub-map:
[DBG]   [0..9]
[DBG]  Agent 82 (interval in submap: [0..9]) contains time 4, added to replan.
[DBG]  Agent 120 found intervals in the sub-map:
[DBG]   [0..3]
[DBG]  Agent 120 is not in sub-map at time 4 (intervals: 
[DBG]  [0..3] )
[DBG]  Agent 9 | Start (global): 140 -> (local): (2, 2) at time 4 | Goal (global): 138 -> (local): (2, 0) at time 6
[DBG]  Agent 26 | Start (global): 141 -> (local): (2, 3) at time 4 | Goal (global): 205 -> (local): (4, 3) at time 6
[DBG]  Agent 66 | Start (global): 138 -> (local): (2, 0) at time 4 | Goal (global): 110 -> (local): (1, 4) at time 9
[DBG]  Agent 72 | Start (global): 110 -> (local): (1, 4) at time 4 | Goal (global): 74 -> (local): (0, 0) at time 9
[DBG]  Agent 82 | Start (global): 107 -> (local): (1, 1) at time 4 | Goal (global): 204 -> (local): (4, 2) at time 9
[DBG]  [REPAIR] SAT destroy operator called.
[DBG]  [REPAIR] SAT operator â€“ launching subproblem FOR OPTIMIZATION.
[DBG]  Creating local paths (sx, sy) in the submap for T_sync = 4
[DBG]    Agent 9 (global paths from T=4 to 6) has local path: (2,2) (2,1) (2,0) 
[DBG]    Agent 26 (global paths from T=4 to 6) has local path: (2,3) (3,3) (4,3) 
[DBG]    Agent 66 (global paths from T=4 to 9) has local path: (2,0) (1,0) (1,1) (1,2) (1,3) (1,4) 
[DBG]    Agent 72 (global paths from T=4 to 9) has local path: (1,4) (1,3) (1,2) (0,2) (0,1) (0,0) 
[DBG]    Agent 82 (global paths from T=4 to 9) has local path: (1,1) (1,1) (2,1) (2,2) (3,2) (4,2) 
[DBG]  Checking input data for SAT solver:
[DBG]    - Number of agents to replan: 5
[DBG]  Agent 9 has the original local path length: 3 => Start (2,2), Goal (2,0)
[DBG]  Agent 26 has the original local path length: 3 => Start (2,3), Goal (4,3)
[DBG]  Agent 66 has the original local path length: 6 => Start (2,0), Goal (1,4)
[DBG]  Agent 72 has the original local path length: 6 => Start (1,4), Goal (0,0)
[DBG]  Agent 82 has the original local path length: 6 => Start (1,1), Goal (4,2)
[DBG]  Start position: (2, 2), (2, 3), (2, 0), (1, 4), (1, 1), 
[DBG]  Goal position: (2, 0), (4, 3), (1, 4), (0, 0), (4, 2), 
[DBG]  SAT instance and solver created.
Currently solving
Instance name: scen
Map name: map
Encoding used: disappear_at_goal
SAT solver used: Kissat
Optimizing function: sum of costs
Number of agents: 5
Mks LB: 6
SoC LB: 23
Delta: 0
Remaining time: 300000 [ms]

Vertex conflict! Agents 0, 1, timestep 3, location 0
Swapping conflict! Agents 0, 1, timestep 3, edge (0,0)
Vertex conflict! Agents 0, 1, timestep 4, location 0
Swapping conflict! Agents 0, 1, timestep 4, edge (0,0)
Vertex conflict! Agents 0, 1, timestep 5, location 0
Vertex conflict! Agents 0, 3, timestep 5, location 0
Vertex conflict! Agents 0, 4, timestep 5, location 0
Vertex conflict! Agents 1, 3, timestep 5, location 0
Vertex conflict! Agents 1, 4, timestep 5, location 0
Vertex conflict! Agents 3, 4, timestep 5, location 0
Found plan [agents = 5] [timesteps = 6]
Agent #0 : 11 10 9 0 0 0 
Agent #1 : 12 15 18 0 0 0 
Agent #2 : 9 4 5 6 7 8 
Agent #3 : 8 7 6 2 1 0 
Agent #4 : 5 6 11 14 17 0 

[STAT] Solver returned: 0
[DBG]  Agent (index) 9 | New local path (submap idx):
[DBG]  11 10 9 
[DBG]  Agent (index) 26 | New local path (submap idx):
[DBG]  12 15 18 
[DBG]  Agent (index) 66 | New local path (submap idx):
[DBG]  9 4 5 6 7 8 
[DBG]  Agent (index) 72 | New local path (submap idx):
[DBG]  8 7 6 2 1 0 
[DBG]  Agent (index) 82 | New local path (submap idx):
[DBG]  5 6 11 14 17 
[DBG]  Update the agent path 9 | Original local length: 3 | New local length: 3
[DBG]  agent 9 t=0 => decoded (sx,sy)=(2,2) => global_id=140
[DBG]  agent 9 t=1 => decoded (sx,sy)=(2,1) => global_id=139
[DBG]  agent 9 t=2 => decoded (sx,sy)=(2,0) => global_id=138
[DBG]  Complete path of agent 9:
[DBG]    Original: 235 236 204 172 140 139 138 137 136 135 134 133 132 100 99 98 97 96 
[DBG]    New:     235 236 204 172 140 139 138 137 136 135 134 133 132 100 99 98 97 96 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 235 236 204 172 
[DBG]    Local path (in submap): 140 139 138 
[DBG]    Suffix (out of submap): 137 136 135 134 133 132 100 99 98 97 96 
[DBG]  Original agent path length 9 je: 18
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 0: 235, 236, 204, 172, 140, 139, 138, 137, 136, 135, 134, 133, 132, 100, 99, 98, 97, 96, 
[DBG]  Path for agent 9 updated, resulting length: 18
[DBG]  Update the agent path 26 | Original local length: 3 | New local length: 3
[DBG]  agent 26 t=0 => decoded (sx,sy)=(2,3) => global_id=141
[DBG]  agent 26 t=1 => decoded (sx,sy)=(3,3) => global_id=173
[DBG]  agent 26 t=2 => decoded (sx,sy)=(4,3) => global_id=205
[DBG]  Complete path of agent 26:
[DBG]    Original: 13 45 77 109 141 173 205 237 269 269 301 333 365 366 398 430 462 494 526 558 590 591 623 655 656 656 657 658 659 691 692 724 756 755 
[DBG]    New:     13 45 77 109 141 173 205 237 269 269 301 333 365 366 398 430 462 494 526 558 590 591 623 655 656 656 657 658 659 691 692 724 756 755 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 13 45 77 109 
[DBG]    Local path (in submap): 141 173 205 
[DBG]    Suffix (out of submap): 237 269 269 301 333 365 366 398 430 462 494 526 558 590 591 623 655 656 656 657 658 659 691 692 724 756 755 
[DBG]  Original agent path length 26 je: 34
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 1: 13, 45, 77, 109, 141, 173, 205, 237, 269, 269, 301, 333, 365, 366, 398, 430, 462, 494, 526, 558, 590, 591, 623, 655, 656, 656, 657, 658, 659, 691, 692, 724, 756, 755, 
[DBG]  Path for agent 26 updated, resulting length: 34
[DBG]  Update the agent path 66 | Original local length: 6 | New local length: 6
[DBG]  agent 66 t=0 => decoded (sx,sy)=(2,0) => global_id=138
[DBG]  agent 66 t=1 => decoded (sx,sy)=(1,0) => global_id=106
[DBG]  agent 66 t=2 => decoded (sx,sy)=(1,1) => global_id=107
[DBG]  agent 66 t=3 => decoded (sx,sy)=(1,2) => global_id=108
[DBG]  agent 66 t=4 => decoded (sx,sy)=(1,3) => global_id=109
[DBG]  agent 66 t=5 => decoded (sx,sy)=(1,4) => global_id=110
[DBG]  Complete path of agent 66:
[DBG]    Original: 134 135 136 137 138 106 107 108 109 110 111 79 80 81 82 83 115 147 148 149 150 151 183 215 247 279 
[DBG]    New:     134 135 136 137 138 106 107 108 109 110 111 79 80 81 82 83 115 147 148 149 150 151 183 215 247 279 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 134 135 136 137 
[DBG]    Local path (in submap): 138 106 107 108 109 110 
[DBG]    Suffix (out of submap): 111 79 80 81 82 83 115 147 148 149 150 151 183 215 247 279 
[DBG]  Original agent path length 66 je: 26
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 2: 134, 135, 136, 137, 138, 106, 107, 108, 109, 110, 111, 79, 80, 81, 82, 83, 115, 147, 148, 149, 150, 151, 183, 215, 247, 279, 
[DBG]  Path for agent 66 updated, resulting length: 26
[DBG]  Update the agent path 72 | Original local length: 6 | New local length: 6
[DBG]  agent 72 t=0 => decoded (sx,sy)=(1,4) => global_id=110
[DBG]  agent 72 t=1 => decoded (sx,sy)=(1,3) => global_id=109
[DBG]  agent 72 t=2 => decoded (sx,sy)=(1,2) => global_id=108
[DBG]  agent 72 t=3 => decoded (sx,sy)=(0,2) => global_id=76
[DBG]  agent 72 t=4 => decoded (sx,sy)=(0,1) => global_id=75
[DBG]  agent 72 t=5 => decoded (sx,sy)=(0,0) => global_id=74
[DBG]  Complete path of agent 72:
[DBG]    Original: 81 80 112 111 110 109 108 76 75 74 73 72 71 70 69 68 67 
[DBG]    New:     81 80 112 111 110 109 108 76 75 74 73 72 71 70 69 68 67 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 81 80 112 111 
[DBG]    Local path (in submap): 110 109 108 76 75 74 
[DBG]    Suffix (out of submap): 73 72 71 70 69 68 67 
[DBG]  Original agent path length 72 je: 17
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 3: 81, 80, 112, 111, 110, 109, 108, 76, 75, 74, 73, 72, 71, 70, 69, 68, 67, 
[DBG]  Path for agent 72 updated, resulting length: 17
[DBG]  Update the agent path 82 | Original local length: 6 | New local length: 5
[DBG]  agent 82 t=0 => decoded (sx,sy)=(1,1) => global_id=107
[DBG]  agent 82 t=1 => decoded (sx,sy)=(1,2) => global_id=108
[DBG]  agent 82 t=2 => decoded (sx,sy)=(2,2) => global_id=140
[DBG]  agent 82 t=3 => decoded (sx,sy)=(3,2) => global_id=172
[DBG]  agent 82 t=4 => decoded (sx,sy)=(4,2) => global_id=204
[DBG]  Complete path of agent 82:
[DBG]    Original: 75 107 107 107 107 107 139 140 172 204 236 268 300 301 333 365 366 398 
[DBG]    New:     75 107 107 107 107 108 140 172 204 236 268 300 301 333 365 366 398 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 75 107 107 107 
[DBG]    Local path (in submap): 107 108 140 172 204 236 
[DBG]    Suffix (out of submap): 268 300 301 333 365 366 398 
[DBG]  Original agent path length 82 je: 18
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 4: 75, 107, 107, 107, 107, 108, 140, 172, 204, 236, 268, 300, 301, 333, 365, 366, 398, 
[DBG]  Path for agent 82 updated, resulting length: 17
[DBG]  Paths successfully updated.
[DBG]  (LNS.cpp) New path for agent 9: 
[DBG]  235, 236, 204, 172, 140, 139, 138, 137, 136, 135, 134, 133, 132, 100, 99, 98, 97, 96, 
[DBG]  (LNS.cpp) New path for agent 26: 
[DBG]  13, 45, 77, 109, 141, 173, 205, 237, 269, 269, 301, 333, 365, 366, 398, 430, 462, 494, 526, 558, 590, 591, 623, 655, 656, 656, 657, 658, 659, 691, 692, 724, 756, 755, 
[DBG]  (LNS.cpp) New path for agent 66: 
[DBG]  134, 135, 136, 137, 138, 106, 107, 108, 109, 110, 111, 79, 80, 81, 82, 83, 115, 147, 148, 149, 150, 151, 183, 215, 247, 279, 
[DBG]  (LNS.cpp) New path for agent 72: 
[DBG]  81, 80, 112, 111, 110, 109, 108, 76, 75, 74, 73, 72, 71, 70, 69, 68, 67, 
[DBG]  (LNS.cpp) New path for agent 82: 
[DBG]  75, 107, 107, 107, 107, 108, 140, 172, 204, 236, 268, 300, 301, 333, 365, 366, 398, 
[DBG]  component_weights = {0.461937, 0.0452461, 0.0473161, 0.445501}
[DBG]  opSuccess value: 1
[STAT] neighbor.sum_of_costs before recomputation: 107
[STAT] neighbor.old_sum_of_costs before recomputation: 108
[STAT] sum_of_costs before recomputation: 4166
[DBG]  Validate solution immediately after SAT success.
[WARNING] Problem after SAT: Vertex conflict between agents 82 and 16 at location 300 at timestep 11
[DBG]  Attempting immediate repair via init_lns because problem occurred after SAT (should be applied only for conflicts...).
[DBG]  Passing 150 agents to init_lns (skip=true).
[DBG]  path_table contents for selected agents (neighbor.agents):
[DBG]    Agent 9 => controlling path length=18
[DBG]    Agent 26 => controlling path length=34
[DBG]    Agent 66 => controlling path length=26
[DBG]    Agent 72 => controlling path length=17
[DBG]    Agent 82 => controlling path length=17
[DBG]  hodnota skip_initial_solution=1
[DBG]  We skip initialSolution => call buildCollisionData()
[DBG]  buildCollisionData() called â€“ skip_initial_solution case.
[DBG]  Agents.size()=150, collision_graph.size()=150
[DBG]  agent 16 => updateCollidingPairs => foundCollision
[DBG]  agent 82 => updateCollidingPairs => foundCollision
[DBG]  agent 83 => updateCollidingPairs => foundCollision
[DBG]  Conflicting agent pairs:
[DBG]  agent 16 is in conflict with agent 82
[DBG]  agent 82 is in conflict with agent 83
[DBG]  buildCollisionData() => sum_of_costs=4165, num_of_colliding_pairs=2
[DBG]  buildCollisionData done => sum_of_costs=4165, num_of_colliding_pairs=2
[DBG]  sum_of_cost hodnota: 4165
[DBG]  After skip/init build => iteration_stats.back(): sum_of_costs=4165, collisions=2
[DEBUG] Using default neighbor generation strategy for conflicts: 1
[DEBUG] Using default neighbor generation strategy for conflicts: 1
	InitLNS(PP): runtime = 0.0111472, iterations = 3, colliding pairs = 1, initial colliding pairs = 2, solution cost = 4163, initial solution cost = 4165, failed iterations = 1
[DBG]  init_lns->sum_of_costs after init_lns->run: 4163
[ERROR] Could not repair solution right after SAT.
[DBG]  Rollback -> SoC = 4166 (restored entire snapshot)
[DBG]  Recomputing sum_of_cost by dividing neighbor.sum_of_costs and neighbor.old_sum_of_costs
[STAT] sum_of_costs after recomputation: 4166
[STAT] Iteration 228
[DBG]  Using SAT operator (destroy+repair SAT).
[DBG]  ====================
[DBG]  SAT destroy operator called.
[DBG]  SAT heuristic: 2
[DBG]  key_agent_id: 49
[DBG]  key_agent_id global path length: 35
[DBG]  Submap content (global positions):
[DBG]  658 659 660 661 662 
[DBG]  690 691 692 693 694 
[DBG]  722 723 724 725 726 
[DBG]  754 755 756 757 758 
[DBG]  786 787 788 789 790 
[DBG]  Map content with agents and obstacles:
[DBG]  A A . A X 
[DBG]  X . . X X 
[DBG]  . X A . . 
[DBG]  X . . . X 
[DBG]  . A . X . 
[DBG]  content of the map structure that we pass to the SAT solver:
[DBG]  1  1  1  1  -1  
[DBG]  -1  1  1  -1  -1  
[DBG]  1  -1  1  1  1  
[DBG]  -1  1  1  1  -1  
[DBG]  1  1  1  -1  1  
[DBG]  Identifying agents in a submap for rescheduling (when key_agent is there at the time 14):
[DBG]  Agent 28 found intervals in the sub-map:
[DBG]   [0..22] [33..38]
[DBG]  Agent 28 (interval in submap: [0..22]) contains time 14, added to replan.
[DBG]  Agent 30 found intervals in the sub-map:
[DBG]   [14..22]
[DBG]  Agent 30 (interval in submap: [14..22]) contains time 14, added to replan.
[DBG]  Agent 39 found intervals in the sub-map:
[DBG]   [13..19]
[DBG]  Agent 39 (interval in submap: [13..19]) contains time 14, added to replan.
[DBG]  Agent 49 found intervals in the sub-map:
[DBG]   [11..18]
[DBG]  Agent 49 (interval in submap: [11..18]) contains time 14, added to replan.
[DBG]  Agent 114 found intervals in the sub-map:
[DBG]   [14..15]
[DBG]  Agent 114 (interval in submap: [14..15]) contains time 14, added to replan.
[DBG]  Agent 28 | Start (global): 661 -> (local): (0, 3) at time 14 | Goal (global): 661 -> (local): (0, 3) at time 22
[DBG]  Agent 30 | Start (global): 787 -> (local): (4, 1) at time 14 | Goal (global): 660 -> (local): (0, 2) at time 22
[DBG]  Agent 39 | Start (global): 659 -> (local): (0, 1) at time 14 | Goal (global): 788 -> (local): (4, 2) at time 19
[DBG]  Agent 49 | Start (global): 724 -> (local): (2, 2) at time 14 | Goal (global): 659 -> (local): (0, 1) at time 18
[DBG]  Agent 114 | Start (global): 658 -> (local): (0, 0) at time 14 | Goal (global): 659 -> (local): (0, 1) at time 15
[DBG]  [REPAIR] SAT destroy operator called.
[DBG]  [REPAIR] SAT operator â€“ launching subproblem FOR OPTIMIZATION.
[DBG]  Creating local paths (sx, sy) in the submap for T_sync = 14
[DBG]    Agent 28 (global paths from T=14 to 22) has local path: (0,3) (0,3) (0,3) (0,3) (0,3) (0,3) (0,3) (0,3) (0,3) 
[DBG]    Agent 30 (global paths from T=14 to 22) has local path: (4,1) (3,1) (3,1) (3,1) (3,1) (3,2) (2,2) (1,2) (0,2) 
[DBG]    Agent 39 (global paths from T=14 to 19) has local path: (0,1) (0,2) (1,2) (2,2) (3,2) (4,2) 
[DBG]    Agent 49 (global paths from T=14 to 18) has local path: (2,2) (1,2) (1,1) (1,1) (0,1) 
[DBG]    Agent 114 (global paths from T=14 to 15) has local path: (0,0) (0,1) 
[DBG]  Checking input data for SAT solver:
[DBG]    - Number of agents to replan: 5
[DBG]  Agent 28 has the original local path length: 9 => Start (0,3), Goal (0,3)
[DBG]  Agent 30 has the original local path length: 9 => Start (4,1), Goal (0,2)
[DBG]  Agent 39 has the original local path length: 6 => Start (0,1), Goal (4,2)
[DBG]  Agent 49 has the original local path length: 5 => Start (2,2), Goal (0,1)
[DBG]  Agent 114 has the original local path length: 2 => Start (0,0), Goal (0,1)
[DBG]  Start position: (0, 3), (4, 1), (0, 1), (2, 2), (0, 0), 
[DBG]  Goal position: (0, 3), (0, 2), (4, 2), (0, 1), (0, 1), 
[DBG]  SAT instance and solver created.
Currently solving
Instance name: scen
Map name: map
Encoding used: disappear_at_goal
SAT solver used: Kissat
Optimizing function: sum of costs
Number of agents: 5
Mks LB: 6
SoC LB: 19
Delta: 0
Remaining time: 300000 [ms]

[STAT] Solver returned: -1
[DBG]  SAT solver failed.
[STAT] SAT solver failed to find a valid solution.
[DBG]  ====================
[DBG]  SAT destroy operator called.
[DBG]  SAT heuristic: 2
[DBG]  key_agent_id: 49
[DBG]  key_agent_id global path length: 35
[DBG]  Submap content (global positions):
[DBG]  562 563 564 565 566 
[DBG]  594 595 596 597 598 
[DBG]  626 627 628 629 630 
[DBG]  658 659 660 661 662 
[DBG]  690 691 692 693 694 
[DBG]  Map content with agents and obstacles:
[DBG]  X . X A . 
[DBG]  . X . . X 
[DBG]  X . A . X 
[DBG]  A . A A X 
[DBG]  X . A X X 
[DBG]  content of the map structure that we pass to the SAT solver:
[DBG]  -1  1  -1  1  1  
[DBG]  1  -1  1  1  -1  
[DBG]  -1  1  1  1  -1  
[DBG]  1  1  1  1  -1  
[DBG]  -1  1  1  -1  -1  
[DBG]  Identifying agents in a submap for rescheduling (when key_agent is there at the time 20):
[DBG]  Agent 0 found intervals in the sub-map:
[DBG]   [20..23]
[DBG]  Agent 0 (interval in submap: [20..23]) contains time 20, added to replan.
[DBG]  Agent 28 found intervals in the sub-map:
[DBG]   [0..35]
[DBG]  Agent 28 (interval in submap: [0..35]) contains time 20, added to replan.
[DBG]  Agent 49 found intervals in the sub-map:
[DBG]   [15..23]
[DBG]  Agent 49 (interval in submap: [15..23]) contains time 20, added to replan.
[DBG]  Agent 56 found intervals in the sub-map:
[DBG]   [18..24]
[DBG]  Agent 56 (interval in submap: [18..24]) contains time 20, added to replan.
[DBG]  Agent 62 found intervals in the sub-map:
[DBG]   [16..26]
[DBG]  Agent 62 (interval in submap: [16..26]) contains time 20, added to replan.
[DBG]  Agent 114 found intervals in the sub-map:
[DBG]   [14..21]
[DBG]  Agent 114 (interval in submap: [14..21]) contains time 20, added to replan.
[DBG]  Agent 0 | Start (global): 658 -> (local): (3, 0) at time 20 | Goal (global): 692 -> (local): (4, 2) at time 23
[DBG]  Agent 28 | Start (global): 661 -> (local): (3, 3) at time 20 | Goal (global): 692 -> (local): (4, 2) at time 35
[DBG]  Agent 49 | Start (global): 628 -> (local): (2, 2) at time 20 | Goal (global): 565 -> (local): (0, 3) at time 23
[DBG]  Agent 56 | Start (global): 660 -> (local): (3, 2) at time 20 | Goal (global): 565 -> (local): (0, 3) at time 24
[DBG]  Agent 62 | Start (global): 692 -> (local): (4, 2) at time 20 | Goal (global): 566 -> (local): (0, 4) at time 26
[DBG]  Agent 114 | Start (global): 565 -> (local): (0, 3) at time 20 | Goal (global): 566 -> (local): (0, 4) at time 21
[DBG]  [REPAIR] SAT destroy operator called.
[DBG]  [REPAIR] SAT operator â€“ launching subproblem FOR OPTIMIZATION.
[DBG]  Creating local paths (sx, sy) in the submap for T_sync = 20
[DBG]    Agent 0 (global paths from T=20 to 23) has local path: (3,0) (3,1) (4,1) (4,2) 
[DBG]    Agent 28 (global paths from T=20 to 35) has local path: (3,3) (3,3) (3,3) (2,3) (2,3) (2,3) (2,3) (2,3) (2,3) (2,2) (2,1) (2,1) (2,1) (3,1) (4,1) (4,2) 
[DBG]    Agent 49 (global paths from T=20 to 23) has local path: (2,2) (1,2) (1,3) (0,3) 
[DBG]    Agent 56 (global paths from T=20 to 24) has local path: (3,2) (2,2) (1,2) (1,3) (0,3) 
[DBG]    Agent 62 (global paths from T=20 to 26) has local path: (4,2) (3,2) (2,2) (1,2) (1,3) (0,3) (0,4) 
[DBG]    Agent 114 (global paths from T=20 to 21) has local path: (0,3) (0,4) 
[DBG]  Checking input data for SAT solver:
[DBG]    - Number of agents to replan: 6
[DBG]  Agent 0 has the original local path length: 4 => Start (3,0), Goal (4,2)
[DBG]  Agent 28 has the original local path length: 16 => Start (3,3), Goal (4,2)
[DBG]  Agent 49 has the original local path length: 4 => Start (2,2), Goal (0,3)
[DBG]  Agent 56 has the original local path length: 5 => Start (3,2), Goal (0,3)
[DBG]  Agent 62 has the original local path length: 7 => Start (4,2), Goal (0,4)
[DBG]  Agent 114 has the original local path length: 2 => Start (0,3), Goal (0,4)
[DBG]  Start position: (3, 0), (3, 3), (2, 2), (3, 2), (4, 2), (0, 3), 
[DBG]  Goal position: (4, 2), (4, 2), (0, 3), (0, 3), (0, 4), (0, 4), 
[DBG]  SAT instance and solver created.
Currently solving
Instance name: scen
Map name: map
Encoding used: disappear_at_goal
SAT solver used: Kissat
Optimizing function: sum of costs
Number of agents: 6
Mks LB: 7
SoC LB: 25
Delta: 0
Remaining time: 300000 [ms]

[STAT] Solver returned: -1
[DBG]  SAT solver failed.
[STAT] SAT solver failed to find a valid solution.
[DBG]  ====================
[DBG]  SAT destroy operator called.
[DBG]  SAT heuristic: 2
[DBG]  key_agent_id: 49
[DBG]  key_agent_id global path length: 35
[DBG]  Submap content (global positions):
[DBG]  854 855 856 857 858 
[DBG]  886 887 888 889 890 
[DBG]  918 919 920 921 922 
[DBG]  950 951 952 953 954 
[DBG]  982 983 984 985 986 
[DBG]  Map content with agents and obstacles:
[DBG]  . . . . . 
[DBG]  A . . A A 
[DBG]  A . A A . 
[DBG]  . X . . . 
[DBG]  . . . . . 
[DBG]  content of the map structure that we pass to the SAT solver:
[DBG]  1  1  1  1  1  
[DBG]  1  1  1  1  1  
[DBG]  1  1  1  1  1  
[DBG]  1  -1  1  1  1  
[DBG]  1  1  1  1  1  
[DBG]  Identifying agents in a submap for rescheduling (when key_agent is there at the time 2):
[DBG]  Agent 1 found intervals in the sub-map:
[DBG]   [2..8]
[DBG]  Agent 1 (interval in submap: [2..8]) contains time 2, added to replan.
[DBG]  Agent 14 found intervals in the sub-map:
[DBG]   [1..6]
[DBG]  Agent 14 (interval in submap: [1..6]) contains time 2, added to replan.
[DBG]  Agent 30 found intervals in the sub-map:
[DBG]   [0..7]
[DBG]  Agent 30 (interval in submap: [0..7]) contains time 2, added to replan.
[DBG]  Agent 49 found intervals in the sub-map:
[DBG]   [0..5]
[DBG]  Agent 49 (interval in submap: [0..5]) contains time 2, added to replan.
[DBG]  Agent 50 found intervals in the sub-map:
[DBG]   [0..2]
[DBG]  Agent 50 (interval in submap: [0..2]) contains time 2, added to replan.
[DBG]  Agent 101 found intervals in the sub-map:
[DBG]   [0..5]
[DBG]  Agent 101 (interval in submap: [0..5]) contains time 2, added to replan.
[DBG]  Agent 1 | Start (global): 918 -> (local): (2, 0) at time 2 | Goal (global): 856 -> (local): (0, 2) at time 8
[DBG]  Agent 14 | Start (global): 890 -> (local): (1, 4) at time 2 | Goal (global): 886 -> (local): (1, 0) at time 6
[DBG]  Agent 30 | Start (global): 889 -> (local): (1, 3) at time 2 | Goal (global): 886 -> (local): (1, 0) at time 7
[DBG]  Agent 49 | Start (global): 920 -> (local): (2, 2) at time 2 | Goal (global): 886 -> (local): (1, 0) at time 5
[DBG]  Agent 50 | Start (global): 886 -> (local): (1, 0) at time 2 | Goal (global): 886 -> (local): (1, 0) at time 2
[DBG]  Agent 101 | Start (global): 921 -> (local): (2, 3) at time 2 | Goal (global): 918 -> (local): (2, 0) at time 5
[DBG]  [REPAIR] SAT destroy operator called.
[DBG]  [REPAIR] SAT operator â€“ launching subproblem FOR OPTIMIZATION.
[DBG]  Creating local paths (sx, sy) in the submap for T_sync = 2
[DBG]    Agent 1 (global paths from T=2 to 8) has local path: (2,0) (1,0) (0,0) (0,1) (0,1) (0,1) (0,2) 
[DBG]    Agent 14 (global paths from T=2 to 6) has local path: (1,4) (1,3) (1,2) (1,1) (1,0) 
[DBG]    Agent 30 (global paths from T=2 to 7) has local path: (1,3) (0,3) (0,2) (1,2) (1,1) (1,0) 
[DBG]    Agent 49 (global paths from T=2 to 5) has local path: (2,2) (1,2) (1,1) (1,0) 
[DBG]    Agent 50 (global paths from T=2 to 2) has local path: (1,0) 
[DBG]    Agent 101 (global paths from T=2 to 5) has local path: (2,3) (2,2) (2,1) (2,0) 
[DBG]  Checking input data for SAT solver:
[DBG]    - Number of agents to replan: 6
[DBG]  Agent 1 has the original local path length: 7 => Start (2,0), Goal (0,2)
[DBG]  Agent 14 has the original local path length: 5 => Start (1,4), Goal (1,0)
[DBG]  Agent 30 has the original local path length: 6 => Start (1,3), Goal (1,0)
[DBG]  Agent 49 has the original local path length: 4 => Start (2,2), Goal (1,0)
[DBG]  Agent 50 has the original local path length: 1 => Start (1,0), Goal (1,0)
[DBG]  Agent 101 has the original local path length: 4 => Start (2,3), Goal (2,0)
[DBG]  Start position: (2, 0), (1, 4), (1, 3), (2, 2), (1, 0), (2, 3), 
[DBG]  Goal position: (0, 2), (1, 0), (1, 0), (1, 0), (1, 0), (2, 0), 
[DBG]  SAT instance and solver created.
Currently solving
Instance name: scen
Map name: map
Encoding used: disappear_at_goal
SAT solver used: Kissat
Optimizing function: sum of costs
Number of agents: 6
Mks LB: 5
SoC LB: 23
Delta: 0
Remaining time: 300000 [ms]

[STAT] Solver returned: -1
[DBG]  SAT solver failed.
[STAT] SAT solver failed to find a valid solution.
[DBG]  ====================
[DBG]  SAT destroy operator called.
[DBG]  SAT heuristic: 2
[DBG]  key_agent_id: 49
[DBG]  key_agent_id global path length: 35
[DBG]  Submap content (global positions):
[DBG]  398 399 400 401 402 
[DBG]  430 431 432 433 434 
[DBG]  462 463 464 465 466 
[DBG]  494 495 496 497 498 
[DBG]  526 527 528 529 530 
[DBG]  Map content with agents and obstacles:
[DBG]  . X . . . 
[DBG]  . . . . X 
[DBG]  . . A A . 
[DBG]  . X . X . 
[DBG]  . X . . . 
[DBG]  content of the map structure that we pass to the SAT solver:
[DBG]  1  -1  1  1  1  
[DBG]  1  1  1  1  -1  
[DBG]  1  1  1  1  1  
[DBG]  1  -1  1  -1  1  
[DBG]  1  -1  1  1  1  
[DBG]  Identifying agents in a submap for rescheduling (when key_agent is there at the time 31):
[DBG]  Agent 49 found intervals in the sub-map:
[DBG]   [29..33]
[DBG]  Agent 49 (interval in submap: [29..33]) contains time 31, added to replan.
[DBG]  Agent 140 found intervals in the sub-map:
[DBG]   [27..32]
[DBG]  Agent 140 (interval in submap: [27..32]) contains time 31, added to replan.
[DBG]  Agent 49 | Start (global): 464 -> (local): (2, 2) at time 31 | Goal (global): 400 -> (local): (0, 2) at time 33
[DBG]  Agent 140 | Start (global): 465 -> (local): (2, 3) at time 31 | Goal (global): 466 -> (local): (2, 4) at time 32
[DBG]  [REPAIR] SAT destroy operator called.
[DBG]  [REPAIR] SAT operator â€“ launching subproblem FOR OPTIMIZATION.
[DBG]  Creating local paths (sx, sy) in the submap for T_sync = 31
[DBG]    Agent 49 (global paths from T=31 to 33) has local path: (2,2) (1,2) (0,2) 
[DBG]    Agent 140 (global paths from T=31 to 32) has local path: (2,3) (2,4) 
[DBG]  Checking input data for SAT solver:
[DBG]    - Number of agents to replan: 2
[DBG]  Agent 49 has the original local path length: 3 => Start (2,2), Goal (0,2)
[DBG]  Agent 140 has the original local path length: 2 => Start (2,3), Goal (2,4)
[DBG]  Start position: (2, 2), (2, 3), 
[DBG]  Goal position: (0, 2), (2, 4), 
[DBG]  SAT instance and solver created.
Currently solving
Instance name: scen
Map name: map
Encoding used: disappear_at_goal
SAT solver used: Kissat
Optimizing function: sum of costs
Number of agents: 2
Mks LB: 3
SoC LB: 5
Delta: 0
Remaining time: 300000 [ms]

Found plan [agents = 2] [timesteps = 3]
Agent #0 : 10 6 1 
Agent #1 : 11 12 0 

[STAT] Solver returned: 0
[DBG]  Agent (index) 49 | New local path (submap idx):
[DBG]  10 6 1 
[DBG]  Agent (index) 140 | New local path (submap idx):
[DBG]  11 12 
[DBG]  Update the agent path 49 | Original local length: 3 | New local length: 3
[DBG]  agent 49 t=0 => decoded (sx,sy)=(2,2) => global_id=464
[DBG]  agent 49 t=1 => decoded (sx,sy)=(1,2) => global_id=432
[DBG]  agent 49 t=2 => decoded (sx,sy)=(0,2) => global_id=400
[DBG]  Complete path of agent 49:
[DBG]    Original: 984 952 920 888 887 886 885 884 883 851 819 787 755 756 724 692 691 691 659 627 628 596 597 565 533 501 469 468 467 466 465 464 432 400 368 
[DBG]    New:     984 952 920 888 887 886 885 884 883 851 819 787 755 756 724 692 691 691 659 627 628 596 597 565 533 501 469 468 467 466 465 464 432 400 368 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 984 952 920 888 887 886 885 884 883 851 819 787 755 756 724 692 691 691 659 627 628 596 597 565 533 501 469 468 467 466 465 
[DBG]    Local path (in submap): 464 432 400 
[DBG]    Suffix (out of submap): 368 
[DBG]  Original agent path length 49 je: 35
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 0: 984, 952, 920, 888, 887, 886, 885, 884, 883, 851, 819, 787, 755, 756, 724, 692, 691, 691, 659, 627, 628, 596, 597, 565, 533, 501, 469, 468, 467, 466, 465, 464, 432, 400, 368, 
[DBG]  Path for agent 49 updated, resulting length: 35
[DBG]  Update the agent path 140 | Original local length: 2 | New local length: 2
[DBG]  agent 140 t=0 => decoded (sx,sy)=(2,3) => global_id=465
[DBG]  agent 140 t=1 => decoded (sx,sy)=(2,4) => global_id=466
[DBG]  Complete path of agent 140:
[DBG]    Original: 832 800 801 802 803 771 772 740 741 709 677 678 646 647 615 583 551 519 487 455 423 424 425 426 427 428 429 430 431 432 433 465 466 467 468 469 437 438 439 407 408 409 377 378 379 380 348 349 350 351 
[DBG]    New:     832 800 801 802 803 771 772 740 741 709 677 678 646 647 615 583 551 519 487 455 423 424 425 426 427 428 429 430 431 432 433 465 466 467 468 469 437 438 439 407 408 409 377 378 379 380 348 349 350 351 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 832 800 801 802 803 771 772 740 741 709 677 678 646 647 615 583 551 519 487 455 423 424 425 426 427 428 429 430 431 432 433 
[DBG]    Local path (in submap): 465 466 
[DBG]    Suffix (out of submap): 467 468 469 437 438 439 407 408 409 377 378 379 380 348 349 350 351 
[DBG]  Original agent path length 140 je: 50
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 1: 832, 800, 801, 802, 803, 771, 772, 740, 741, 709, 677, 678, 646, 647, 615, 583, 551, 519, 487, 455, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 465, 466, 467, 468, 469, 437, 438, 439, 407, 408, 409, 377, 378, 379, 380, 348, 349, 350, 351, 
[DBG]  Path for agent 140 updated, resulting length: 50
[DBG]  Paths successfully updated.
[DBG]  (LNS.cpp) New path for agent 49: 
[DBG]  984, 952, 920, 888, 887, 886, 885, 884, 883, 851, 819, 787, 755, 756, 724, 692, 691, 691, 659, 627, 628, 596, 597, 565, 533, 501, 469, 468, 467, 466, 465, 464, 432, 400, 368, 
[DBG]  (LNS.cpp) New path for agent 140: 
[DBG]  832, 800, 801, 802, 803, 771, 772, 740, 741, 709, 677, 678, 646, 647, 615, 583, 551, 519, 487, 455, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 465, 466, 467, 468, 469, 437, 438, 439, 407, 408, 409, 377, 378, 379, 380, 348, 349, 350, 351, 
[DBG]  component_weights = {0.466962, 0.0448236, 0.0468742, 0.44134}
[DBG]  opSuccess value: 1
[STAT] neighbor.sum_of_costs before recomputation: 83
[STAT] neighbor.old_sum_of_costs before recomputation: 83
[STAT] sum_of_costs before recomputation: 4166
[DBG]  Validate solution immediately after SAT success.
[DBG]  No problems after SAT replan.
[DBG]  Recomputing sum_of_cost by dividing neighbor.sum_of_costs and neighbor.old_sum_of_costs
[STAT] sum_of_costs after recomputation: 4166
[STAT] LNS(PP;PP): runtime = 2.00475, iterations = 229, solution cost = 4166, initial solution cost = 4490, failed iterations = 1
[STAT] SAT total runtime       = 0.209548 s
[STAT] Other operators runtime = 1.73425 s
[STAT] Framework overhead      = 0.00789783 s
[STAT] Sanity check - sum      = 1.95169 s  (whole run: 2.00475 s)
[STAT] SAT runtime ratio    = 10.4526 %
