[DBG]  hodnota skip_initial_solution=0
[DBG]  getInitialSolution() => succ=1, sum_of_costs=4461, num_of_colliding_pairs=1
[DBG]  After skip/init build => iteration_stats.back(): sum_of_costs=4461, collisions=1
[DEBUG] Using default neighbor generation strategy for conflicts: 0
	InitLNS(PP): runtime = 0.0192324, iterations = 2, colliding pairs = 0, initial colliding pairs = 1, solution cost = 4490, initial solution cost = 4461, failed iterations = 0
[STAT] Iteration 1
[DBG]  Using SAT operator (destroy+repair SAT).
[DBG]  ====================
[DBG]  SAT destroy operator called.
[DBG]  SAT heuristic: 2
[DBG]  key_agent_id: 120
[DBG]  key_agent_id global path length: 43
[DBG]  Submap content (global positions):
[DBG]  169 170 171 172 173 
[DBG]  201 202 203 204 205 
[DBG]  233 234 235 236 237 
[DBG]  265 266 267 268 269 
[DBG]  297 298 299 300 301 
[DBG]  Map content with agents and obstacles:
[DBG]  X . X . . 
[DBG]  X X . . . 
[DBG]  . . A A . 
[DBG]  . . . . . 
[DBG]  A A . . . 
[DBG]  content of the map structure that we pass to the SAT solver:
[DBG]  -1  1  -1  1  1  
[DBG]  -1  -1  1  1  1  
[DBG]  1  1  1  1  1  
[DBG]  1  1  1  1  1  
[DBG]  1  1  1  1  1  
[DBG]  Identifying agents in a submap for rescheduling (when key_agent is there at the time 11):
[DBG]  Agent 22 found intervals in the sub-map:
[DBG]   [8..16]
[DBG]  Agent 22 (interval in submap: [8..16]) contains time 11, added to replan.
[DBG]  Agent 87 found intervals in the sub-map:
[DBG]   [9..12]
[DBG]  Agent 87 (interval in submap: [9..12]) contains time 11, added to replan.
[DBG]  Agent 107 found intervals in the sub-map:
[DBG]   [9..16]
[DBG]  Agent 107 (interval in submap: [9..16]) contains time 11, added to replan.
[DBG]  Agent 120 found intervals in the sub-map:
[DBG]   [0..39]
[DBG]  Agent 120 (interval in submap: [0..39]) contains time 11, added to replan.
[DBG]  Agent 22 | Start (global): 297 -> (local): (4, 0) at time 11 | Goal (global): 269 -> (local): (3, 4) at time 16
[DBG]  Agent 87 | Start (global): 298 -> (local): (4, 1) at time 11 | Goal (global): 299 -> (local): (4, 2) at time 12
[DBG]  Agent 107 | Start (global): 236 -> (local): (2, 3) at time 11 | Goal (global): 297 -> (local): (4, 0) at time 16
[DBG]  Agent 120 | Start (global): 235 -> (local): (2, 2) at time 11 | Goal (global): 265 -> (local): (3, 0) at time 39
[DBG]  [REPAIR] SAT destroy operator called.
[DBG]  [REPAIR] SAT operator â€“ launching subproblem FOR OPTIMIZATION.
[DBG]  Creating local paths (sx, sy) in the submap for T_sync = 11
[DBG]    Agent 22 (global paths from T=11 to 16) has local path: (4,0) (4,1) (4,2) (4,3) (3,3) (3,4) 
[DBG]    Agent 87 (global paths from T=11 to 12) has local path: (4,1) (4,2) 
[DBG]    Agent 107 (global paths from T=11 to 16) has local path: (2,3) (3,3) (3,2) (3,1) (4,1) (4,0) 
[DBG]    Agent 120 (global paths from T=11 to 39) has local path: (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (3,2) (3,1) (3,0) (3,0) (3,0) (3,0) (3,0) (3,0) (3,0) 
[DBG]  Checking input data for SAT solver:
[DBG]    - Number of agents to replan: 4
[DBG]  Agent 22 has the original local path length: 6 => Start (4,0), Goal (3,4)
[DBG]  Agent 87 has the original local path length: 2 => Start (4,1), Goal (4,2)
[DBG]  Agent 107 has the original local path length: 6 => Start (2,3), Goal (4,0)
[DBG]  Agent 120 has the original local path length: 29 => Start (2,2), Goal (3,0)
[DBG]  Start position: (4, 0), (4, 1), (2, 3), (2, 2), 
[DBG]  Goal position: (3, 4), (4, 2), (4, 0), (3, 0), 
[DBG]  SAT instance and solver created.
Currently solving
Instance name: scen
Map name: map
Encoding used: disappear_at_goal
SAT solver used: Kissat
Optimizing function: sum of costs
Number of agents: 4
Mks LB: 6
SoC LB: 18
Delta: 0
Remaining time: 300000 [ms]

Vertex conflict! Agents 1, 3, timestep 4, location 0
Swapping conflict! Agents 1, 3, timestep 4, edge (0,0)
Vertex conflict! Agents 1, 3, timestep 5, location 0
Found plan [agents = 4] [timesteps = 6]
Agent #0 : 16 17 18 19 20 15 
Agent #1 : 17 18 0 0 0 0 
Agent #2 : 9 14 13 18 17 16 
Agent #3 : 8 13 12 11 0 0 

[STAT] Solver returned: 0
[DBG]  Agent (index) 22 | New local path (submap idx):
[DBG]  16 17 18 19 20 15 
[DBG]  Agent (index) 87 | New local path (submap idx):
[DBG]  17 18 
[DBG]  Agent (index) 107 | New local path (submap idx):
[DBG]  9 14 13 18 17 16 
[DBG]  Agent (index) 120 | New local path (submap idx):
[DBG]  8 13 12 11 
[DBG]  Update the agent path 22 | Original local length: 6 | New local length: 6
[DBG]  agent 22 t=0 => decoded (sx,sy)=(4,0) => global_id=297
[DBG]  agent 22 t=1 => decoded (sx,sy)=(4,1) => global_id=298
[DBG]  agent 22 t=2 => decoded (sx,sy)=(4,2) => global_id=299
[DBG]  agent 22 t=3 => decoded (sx,sy)=(4,3) => global_id=300
[DBG]  agent 22 t=4 => decoded (sx,sy)=(4,4) => global_id=301
[DBG]  agent 22 t=5 => decoded (sx,sy)=(3,4) => global_id=269
[DBG]  Complete path of agent 22:
[DBG]    Original: 329 329 361 362 362 362 361 329 297 297 297 297 298 299 300 268 269 270 271 303 304 336 337 338 338 339 340 308 340 339 
[DBG]    New:     329 329 361 362 362 362 361 329 297 297 297 297 298 299 300 301 269 270 271 303 304 336 337 338 338 339 340 308 340 339 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 329 329 361 362 362 362 361 329 297 297 297 
[DBG]    Local path (in submap): 297 298 299 300 301 269 
[DBG]    Suffix (out of submap): 270 271 303 304 336 337 338 338 339 340 308 340 339 
[DBG]  Original agent path length 22 je: 30
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 0: 329, 329, 361, 362, 362, 362, 361, 329, 297, 297, 297, 297, 298, 299, 300, 301, 269, 270, 271, 303, 304, 336, 337, 338, 338, 339, 340, 308, 340, 339, 
[DBG]  Path for agent 22 updated, resulting length: 30
[DBG]  Update the agent path 87 | Original local length: 2 | New local length: 2
[DBG]  agent 87 t=0 => decoded (sx,sy)=(4,1) => global_id=298
[DBG]  agent 87 t=1 => decoded (sx,sy)=(4,2) => global_id=299
[DBG]  Complete path of agent 87:
[DBG]    Original: 231 263 263 263 263 263 263 263 264 265 266 298 299 331 363 395 427 459 491 523 555 587 619 651 650 682 714 
[DBG]    New:     231 263 263 263 263 263 263 263 264 265 266 298 299 331 363 395 427 459 491 523 555 587 619 651 650 682 714 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 231 263 263 263 263 263 263 263 264 265 266 
[DBG]    Local path (in submap): 298 299 
[DBG]    Suffix (out of submap): 331 363 395 427 459 491 523 555 587 619 651 650 682 714 
[DBG]  Original agent path length 87 je: 27
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 1: 231, 263, 263, 263, 263, 263, 263, 263, 264, 265, 266, 298, 299, 331, 363, 395, 427, 459, 491, 523, 555, 587, 619, 651, 650, 682, 714, 
[DBG]  Path for agent 87 updated, resulting length: 27
[DBG]  Update the agent path 107 | Original local length: 6 | New local length: 6
[DBG]  agent 107 t=0 => decoded (sx,sy)=(2,3) => global_id=236
[DBG]  agent 107 t=1 => decoded (sx,sy)=(3,3) => global_id=268
[DBG]  agent 107 t=2 => decoded (sx,sy)=(3,2) => global_id=267
[DBG]  agent 107 t=3 => decoded (sx,sy)=(4,2) => global_id=299
[DBG]  agent 107 t=4 => decoded (sx,sy)=(4,1) => global_id=298
[DBG]  agent 107 t=5 => decoded (sx,sy)=(4,0) => global_id=297
[DBG]  Complete path of agent 107:
[DBG]    Original: 16 15 47 46 45 77 76 108 140 172 204 236 268 267 266 298 297 329 361 393 425 457 456 455 454 486 485 517 549 581 613 645 677 709 741 740 772 804 836 
[DBG]    New:     16 15 47 46 45 77 76 108 140 172 204 236 268 267 299 298 297 329 361 393 425 457 456 455 454 486 485 517 549 581 613 645 677 709 741 740 772 804 836 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 16 15 47 46 45 77 76 108 140 172 204 
[DBG]    Local path (in submap): 236 268 267 299 298 297 
[DBG]    Suffix (out of submap): 329 361 393 425 457 456 455 454 486 485 517 549 581 613 645 677 709 741 740 772 804 836 
[DBG]  Original agent path length 107 je: 39
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 2: 16, 15, 47, 46, 45, 77, 76, 108, 140, 172, 204, 236, 268, 267, 299, 298, 297, 329, 361, 393, 425, 457, 456, 455, 454, 486, 485, 517, 549, 581, 613, 645, 677, 709, 741, 740, 772, 804, 836, 
[DBG]  Path for agent 107 updated, resulting length: 39
[DBG]  Update the agent path 120 | Original local length: 29 | New local length: 4
[DBG]  agent 120 t=0 => decoded (sx,sy)=(2,2) => global_id=235
[DBG]  agent 120 t=1 => decoded (sx,sy)=(3,2) => global_id=267
[DBG]  agent 120 t=2 => decoded (sx,sy)=(3,1) => global_id=266
[DBG]  agent 120 t=3 => decoded (sx,sy)=(3,0) => global_id=265
[DBG]  Complete path of agent 120:
[DBG]    Original: 203 235 235 235 235 235 235 235 235 235 235 235 235 235 235 235 235 235 235 235 235 235 235 235 235 235 235 235 235 235 235 267 266 265 265 265 265 265 265 265 264 232 200 
[DBG]    New:     203 235 235 235 235 235 235 235 235 235 235 235 267 266 265 264 232 200 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 203 235 235 235 235 235 235 235 235 235 235 
[DBG]    Local path (in submap): 235 267 266 265 264 232 200 
[DBG]    Suffix (out of submap): 
[DBG]  Original agent path length 120 je: 43
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 3: 203, 235, 235, 235, 235, 235, 235, 235, 235, 235, 235, 235, 267, 266, 265, 264, 232, 200, 
[DBG]  Path for agent 120 updated, resulting length: 18
[DBG]  Paths successfully updated.
[DBG]  (LNS.cpp) New path for agent 22: 
[DBG]  329, 329, 361, 362, 362, 362, 361, 329, 297, 297, 297, 297, 298, 299, 300, 301, 269, 270, 271, 303, 304, 336, 337, 338, 338, 339, 340, 308, 340, 339, 
[DBG]  (LNS.cpp) New path for agent 87: 
[DBG]  231, 263, 263, 263, 263, 263, 263, 263, 264, 265, 266, 298, 299, 331, 363, 395, 427, 459, 491, 523, 555, 587, 619, 651, 650, 682, 714, 
[DBG]  (LNS.cpp) New path for agent 107: 
[DBG]  16, 15, 47, 46, 45, 77, 76, 108, 140, 172, 204, 236, 268, 267, 299, 298, 297, 329, 361, 393, 425, 457, 456, 455, 454, 486, 485, 517, 549, 581, 613, 645, 677, 709, 741, 740, 772, 804, 836, 
[DBG]  (LNS.cpp) New path for agent 120: 
[DBG]  203, 235, 235, 235, 235, 235, 235, 235, 235, 235, 235, 235, 267, 266, 265, 264, 232, 200, 
[DBG]  Delta value: 0.185185
[DBG]  Rewarding metric index = 1
[DBG]  component_weights = {0.235429, 0.293713, 0.235429, 0.235429}
[DBG]  opSuccess value: 1
[STAT] neighbor.sum_of_costs before recomputation: 110
[STAT] neighbor.old_sum_of_costs before recomputation: 135
[STAT] sum_of_costs before recomputation: 4490
[DBG]  Validate solution immediately after SAT success.
[WARNING] Problem after SAT: Vertex conflict between agents 120 and 15 at location 265 at timestep 14
[DBG]  [DEBUG] Attempting immediate repair via init_lns because problem occurred after SAT (should be applied only for conflicts...).
[DBG]  [DEBUG] Passing 150 agents to init_lns (skip=true).
[DBG]  [DEBUG] path_table contents for selected agents (neighbor.agents):
[DBG]    Agent 22 => controlling path length=30
[DBG]    Agent 87 => controlling path length=27
[DBG]    Agent 107 => controlling path length=39
[DBG]    Agent 120 => controlling path length=18
[DBG]  hodnota skip_initial_solution=1
[DBG]  We skip initialSolution => call buildCollisionData()
[DBG]  buildCollisionData() called â€“ skip_initial_solution case.
[DBG]  Agents.size()=150, collision_graph.size()=150
[DBG]  agent 15 => updateCollidingPairs => foundCollision
[DBG]  agent 101 => updateCollidingPairs => foundCollision
[DBG]  agent 116 => updateCollidingPairs => foundCollision
[DBG]  agent 120 => updateCollidingPairs => foundCollision
[DBG]  Conflicting agent pairs:
[DBG]  agent 15 is in conflict with agent 120
[DBG]  agent 101 is in conflict with agent 120
[DBG]  agent 116 is in conflict with agent 120
[DBG]  buildCollisionData() => sum_of_costs=4465, num_of_colliding_pairs=3
[DBG]  buildCollisionData done => sum_of_costs=4465, num_of_colliding_pairs=3
[DBG]  sum_of_cost hodnota: 4465
[DBG]  After skip/init build => iteration_stats.back(): sum_of_costs=4465, collisions=3
[DEBUG] Using default neighbor generation strategy for conflicts: 1
	InitLNS(PP): runtime = 0.003057, iterations = 2, colliding pairs = 0, initial colliding pairs = 3, solution cost = 4472, initial solution cost = 4465, failed iterations = 0
[DBG]  [DEBUG] init_lns->sum_of_costs after init_lns->run: 4472
[DBG]  [DEBUG] sum_of_costs after assignment from init_lns->run: 4472
[DBG]  Recomputing sum_of_cost by dividing neighbor.sum_of_costs and neighbor.old_sum_of_costs
[STAT] sum_of_costs after recomputation: 4472
[STAT] Iteration 2
[DBG]  Using SAT operator (destroy+repair SAT).
[DBG]  ====================
[DBG]  SAT destroy operator called.
[DBG]  SAT heuristic: 2
[DBG]  key_agent_id: 28
[DBG]  key_agent_id global path length: 44
[DBG]  Submap content (global positions):
[DBG]  595 596 597 598 599 
[DBG]  627 628 629 630 631 
[DBG]  659 660 661 662 663 
[DBG]  691 692 693 694 695 
[DBG]  723 724 725 726 727 
[DBG]  Map content with agents and obstacles:
[DBG]  X . . X . 
[DBG]  . . . X . 
[DBG]  . . A X X 
[DBG]  . . X X X 
[DBG]  X . . . . 
[DBG]  content of the map structure that we pass to the SAT solver:
[DBG]  -1  1  1  -1  1  
[DBG]  1  1  1  -1  1  
[DBG]  1  1  1  -1  -1  
[DBG]  1  1  -1  -1  -1  
[DBG]  -1  1  1  1  1  
[DBG]  Identifying agents in a submap for rescheduling (when key_agent is there at the time 27):
[DBG]  Agent 28 found intervals in the sub-map:
[DBG]   [0..43]
[DBG]  Agent 28 (interval in submap: [0..43]) contains time 27, added to replan.
[DBG]  Agent 28 | Start (global): 661 -> (local): (2, 2) at time 27 | Goal (global): 727 -> (local): (4, 4) at time 43
[DBG]  [REPAIR] SAT destroy operator called.
[DBG]  [REPAIR] SAT operator â€“ launching subproblem FOR OPTIMIZATION.
[DBG]  Creating local paths (sx, sy) in the submap for T_sync = 27
[DBG]    Agent 28 (global paths from T=27 to 43) has local path: (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,1) (3,1) (4,1) (4,2) (4,3) (4,4) 
[DBG]  Checking input data for SAT solver:
[DBG]    - Number of agents to replan: 1
[DBG]  Agent 28 has the original local path length: 17 => Start (2,2), Goal (4,4)
[DBG]  Start position: (2, 2), 
[DBG]  Goal position: (4, 4), 
[DBG]  SAT instance and solver created.
Currently solving
Instance name: scen
Map name: map
Encoding used: disappear_at_goal
SAT solver used: Kissat
Optimizing function: sum of costs
Number of agents: 1
Mks LB: 7
SoC LB: 7
Delta: 0
Remaining time: 300000 [ms]

Found plan [agents = 1] [timesteps = 7]
Agent #0 : 9 8 11 12 13 14 15 

[STAT] Solver returned: 0
[DBG]  Agent (index) 28 | New local path (submap idx):
[DBG]  9 8 11 12 13 14 15 
[DBG]  Update the agent path 28 | Original local length: 17 | New local length: 7
[DBG]  agent 28 t=0 => decoded (sx,sy)=(2,2) => global_id=661
[DBG]  agent 28 t=1 => decoded (sx,sy)=(2,1) => global_id=660
[DBG]  agent 28 t=2 => decoded (sx,sy)=(3,1) => global_id=692
[DBG]  agent 28 t=3 => decoded (sx,sy)=(4,1) => global_id=724
[DBG]  agent 28 t=4 => decoded (sx,sy)=(4,2) => global_id=725
[DBG]  agent 28 t=5 => decoded (sx,sy)=(4,3) => global_id=726
[DBG]  agent 28 t=6 => decoded (sx,sy)=(4,4) => global_id=727
[DBG]  Complete path of agent 28:
[DBG]    Original: 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 660 692 724 725 726 727 
[DBG]    New:     661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 660 692 724 725 726 727 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 
[DBG]    Local path (in submap): 661 660 692 724 725 726 727 
[DBG]    Suffix (out of submap): 
[DBG]  Original agent path length 28 je: 44
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 0: 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 660, 692, 724, 725, 726, 727, 
[DBG]  Path for agent 28 updated, resulting length: 34
[DBG]  Paths successfully updated.
[DBG]  (LNS.cpp) New path for agent 28: 
[DBG]  661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 660, 692, 724, 725, 726, 727, 
[DBG]  Delta value: 0.232558
[DBG]  Rewarding metric index = 0
[DBG]  component_weights = {0.285464, 0.274492, 0.220022, 0.220022}
[DBG]  opSuccess value: 1
[STAT] neighbor.sum_of_costs before recomputation: 33
[STAT] neighbor.old_sum_of_costs before recomputation: 43
[STAT] sum_of_costs before recomputation: 4472
[DBG]  Validate solution immediately after SAT success.
[WARNING] Problem after SAT: Target conflict: agent 42 (len 43) traverses target of agent 28 (len 33) at location 727 at timestep 42
[DBG]  [DEBUG] Attempting immediate repair via init_lns because problem occurred after SAT (should be applied only for conflicts...).
[DBG]  [DEBUG] Passing 150 agents to init_lns (skip=true).
[DBG]  [DEBUG] path_table contents for selected agents (neighbor.agents):
[DBG]    Agent 28 => controlling path length=34
[DBG]  hodnota skip_initial_solution=1
[DBG]  We skip initialSolution => call buildCollisionData()
[DBG]  buildCollisionData() called â€“ skip_initial_solution case.
[DBG]  Agents.size()=150, collision_graph.size()=150
[DBG]  agent 28 => updateCollidingPairs => foundCollision
[DBG]  agent 42 => updateCollidingPairs => foundCollision
[DBG]  agent 148 => updateCollidingPairs => foundCollision
[DBG]  Conflicting agent pairs:
[DBG]  agent 28 is in conflict with agent 42
[DBG]  agent 28 is in conflict with agent 148
[DBG]  buildCollisionData() => sum_of_costs=4462, num_of_colliding_pairs=2
[DBG]  buildCollisionData done => sum_of_costs=4462, num_of_colliding_pairs=2
[DBG]  sum_of_cost hodnota: 4462
[DBG]  After skip/init build => iteration_stats.back(): sum_of_costs=4462, collisions=2
[DEBUG] Using default neighbor generation strategy for conflicts: 0
[DEBUG] Using default neighbor generation strategy for conflicts: 2
[DEBUG] Using default neighbor generation strategy for conflicts: 2
[DEBUG] Using default neighbor generation strategy for conflicts: 0
	InitLNS(PP): runtime = 0.00782054, iterations = 5, colliding pairs = 0, initial colliding pairs = 2, solution cost = 4490, initial solution cost = 4462, failed iterations = 0
[DBG]  [DEBUG] init_lns->sum_of_costs after init_lns->run: 4490
[DBG]  [DEBUG] sum_of_costs after assignment from init_lns->run: 4490
[DBG]  Recomputing sum_of_cost by dividing neighbor.sum_of_costs and neighbor.old_sum_of_costs
[STAT] sum_of_costs after recomputation: 4490
[STAT] Iteration 3
[DBG]  Using SAT operator (destroy+repair SAT).
[DBG]  ====================
[DBG]  SAT destroy operator called.
[DBG]  SAT heuristic: 2
[DBG]  key_agent_id: 28
[DBG]  key_agent_id global path length: 46
[DBG]  Submap content (global positions):
[DBG]  660 661 662 663 664 
[DBG]  692 693 694 695 696 
[DBG]  724 725 726 727 728 
[DBG]  756 757 758 759 760 
[DBG]  788 789 790 791 792 
[DBG]  Map content with agents and obstacles:
[DBG]  . . X X . 
[DBG]  . X X X . 
[DBG]  . . A A . 
[DBG]  . . X . X 
[DBG]  . X . X . 
[DBG]  content of the map structure that we pass to the SAT solver:
[DBG]  1  1  -1  -1  1  
[DBG]  1  -1  -1  -1  1  
[DBG]  1  1  1  1  1  
[DBG]  1  1  -1  1  -1  
[DBG]  1  -1  1  -1  1  
[DBG]  Identifying agents in a submap for rescheduling (when key_agent is there at the time 44):
[DBG]  Agent 28 found intervals in the sub-map:
[DBG]   [0..35] [41..45]
[DBG]  Agent 28 (interval in submap: [41..45]) contains time 44, added to replan.
[DBG]  Agent 42 found intervals in the sub-map:
[DBG]   [40..45]
[DBG]  Agent 42 (interval in submap: [40..45]) contains time 44, added to replan.
[DBG]  Agent 28 | Start (global): 726 -> (local): (2, 2) at time 44 | Goal (global): 727 -> (local): (2, 3) at time 45
[DBG]  Agent 42 | Start (global): 727 -> (local): (2, 3) at time 44 | Goal (global): 759 -> (local): (3, 3) at time 45
[DBG]  [REPAIR] SAT destroy operator called.
[DBG]  [REPAIR] SAT operator â€“ launching subproblem FOR OPTIMIZATION.
[DBG]  Creating local paths (sx, sy) in the submap for T_sync = 44
[DBG]    Agent 28 (global paths from T=44 to 45) has local path: (2,2) (2,3) 
[DBG]    Agent 42 (global paths from T=44 to 45) has local path: (2,3) (3,3) 
[DBG]  Checking input data for SAT solver:
[DBG]    - Number of agents to replan: 2
[DBG]  Agent 28 has the original local path length: 2 => Start (2,2), Goal (2,3)
[DBG]  Agent 42 has the original local path length: 2 => Start (2,3), Goal (3,3)
[DBG]  Start position: (2, 2), (2, 3), 
[DBG]  Goal position: (2, 3), (3, 3), 
[DBG]  SAT instance and solver created.
Currently solving
Instance name: scen
Map name: map
Encoding used: disappear_at_goal
SAT solver used: Kissat
Optimizing function: sum of costs
Number of agents: 2
Mks LB: 2
SoC LB: 4
Delta: 0
Remaining time: 300000 [ms]

Found plan [agents = 2] [timesteps = 2]
Agent #0 : 7 8 
Agent #1 : 8 12 

[STAT] Solver returned: 0
[DBG]  Agent (index) 28 | New local path (submap idx):
[DBG]  7 8 
[DBG]  Agent (index) 42 | New local path (submap idx):
[DBG]  8 12 
[DBG]  Update the agent path 28 | Original local length: 2 | New local length: 2
[DBG]  agent 28 t=0 => decoded (sx,sy)=(2,2) => global_id=726
[DBG]  agent 28 t=1 => decoded (sx,sy)=(2,3) => global_id=727
[DBG]  Complete path of agent 28:
[DBG]    Original: 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 629 628 627 659 691 692 724 725 726 727 
[DBG]    New:     661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 629 628 627 659 691 692 724 725 726 727 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 629 628 627 659 691 692 724 725 
[DBG]    Local path (in submap): 726 727 
[DBG]    Suffix (out of submap): 
[DBG]  Original agent path length 28 je: 46
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 0: 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 629, 628, 627, 659, 691, 692, 724, 725, 726, 727, 
[DBG]  Path for agent 28 updated, resulting length: 46
[DBG]  Update the agent path 42 | Original local length: 2 | New local length: 2
[DBG]  agent 42 t=0 => decoded (sx,sy)=(2,3) => global_id=727
[DBG]  agent 42 t=1 => decoded (sx,sy)=(3,3) => global_id=759
[DBG]  Complete path of agent 42:
[DBG]    Original: 224 256 257 289 321 353 354 354 354 355 356 357 358 390 391 423 424 425 426 427 428 429 430 431 432 464 465 466 467 468 469 501 533 565 597 629 628 627 659 691 692 724 725 726 727 759 
[DBG]    New:     224 256 257 289 321 353 354 354 354 355 356 357 358 390 391 423 424 425 426 427 428 429 430 431 432 464 465 466 467 468 469 501 533 565 597 629 628 627 659 691 692 724 725 726 727 759 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 224 256 257 289 321 353 354 354 354 355 356 357 358 390 391 423 424 425 426 427 428 429 430 431 432 464 465 466 467 468 469 501 533 565 597 629 628 627 659 691 692 724 725 726 
[DBG]    Local path (in submap): 727 759 
[DBG]    Suffix (out of submap): 
[DBG]  Original agent path length 42 je: 46
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 1: 224, 256, 257, 289, 321, 353, 354, 354, 354, 355, 356, 357, 358, 390, 391, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 464, 465, 466, 467, 468, 469, 501, 533, 565, 597, 629, 628, 627, 659, 691, 692, 724, 725, 726, 727, 759, 
[DBG]  Path for agent 42 updated, resulting length: 46
[DBG]  Paths successfully updated.
[DBG]  (LNS.cpp) New path for agent 28: 
[DBG]  661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 629, 628, 627, 659, 691, 692, 724, 725, 726, 727, 
[DBG]  (LNS.cpp) New path for agent 42: 
[DBG]  224, 256, 257, 289, 321, 353, 354, 354, 354, 355, 356, 357, 358, 390, 391, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 464, 465, 466, 467, 468, 469, 501, 533, 565, 597, 629, 628, 627, 659, 691, 692, 724, 725, 726, 727, 759, 
[DBG]  Delta value: 0
[DBG]  Rewarding metric index = 1
[DBG]  component_weights = {0.281398, 0.284824, 0.216889, 0.216889}
[DBG]  opSuccess value: 1
[STAT] neighbor.sum_of_costs before recomputation: 90
[STAT] neighbor.old_sum_of_costs before recomputation: 90
[STAT] sum_of_costs before recomputation: 4490
[DBG]  Validate solution immediately after SAT success.
[DBG]  No problems after SAT replan.
[DBG]  Recomputing sum_of_cost by dividing neighbor.sum_of_costs and neighbor.old_sum_of_costs
[STAT] sum_of_costs after recomputation: 4490
[STAT] Iteration 4
[DBG]  Using SAT operator (destroy+repair SAT).
[DBG]  ====================
[DBG]  SAT destroy operator called.
[DBG]  SAT heuristic: 2
[DBG]  key_agent_id: 28
[DBG]  key_agent_id global path length: 46
[DBG]  Submap content (global positions):
[DBG]  625 626 627 628 629 
[DBG]  657 658 659 660 661 
[DBG]  689 690 691 692 693 
[DBG]  721 722 723 724 725 
[DBG]  753 754 755 756 757 
[DBG]  Map content with agents and obstacles:
[DBG]  . X . . . 
[DBG]  . . A . . 
[DBG]  . X A A X 
[DBG]  . . X . . 
[DBG]  . X . . . 
[DBG]  content of the map structure that we pass to the SAT solver:
[DBG]  1  -1  1  1  1  
[DBG]  1  1  1  1  1  
[DBG]  1  -1  1  1  -1  
[DBG]  1  1  -1  1  1  
[DBG]  1  -1  1  1  1  
[DBG]  Identifying agents in a submap for rescheduling (when key_agent is there at the time 40):
[DBG]  Agent 28 found intervals in the sub-map:
[DBG]   [0..43]
[DBG]  Agent 28 (interval in submap: [0..43]) contains time 40, added to replan.
[DBG]  Agent 42 found intervals in the sub-map:
[DBG]   [35..42]
[DBG]  Agent 42 (interval in submap: [35..42]) contains time 40, added to replan.
[DBG]  Agent 55 found intervals in the sub-map:
[DBG]   [37..42]
[DBG]  Agent 55 (interval in submap: [37..42]) contains time 40, added to replan.
[DBG]  Agent 28 | Start (global): 691 -> (local): (2, 2) at time 40 | Goal (global): 725 -> (local): (3, 4) at time 43
[DBG]  Agent 42 | Start (global): 692 -> (local): (2, 3) at time 40 | Goal (global): 725 -> (local): (3, 4) at time 42
[DBG]  Agent 55 | Start (global): 659 -> (local): (1, 2) at time 40 | Goal (global): 692 -> (local): (2, 3) at time 42
[DBG]  [REPAIR] SAT destroy operator called.
[DBG]  [REPAIR] SAT operator â€“ launching subproblem FOR OPTIMIZATION.
[DBG]  Creating local paths (sx, sy) in the submap for T_sync = 40
[DBG]    Agent 28 (global paths from T=40 to 43) has local path: (2,2) (2,3) (3,3) (3,4) 
[DBG]    Agent 42 (global paths from T=40 to 42) has local path: (2,3) (3,3) (3,4) 
[DBG]    Agent 55 (global paths from T=40 to 42) has local path: (1,2) (2,2) (2,3) 
[DBG]  Checking input data for SAT solver:
[DBG]    - Number of agents to replan: 3
[DBG]  Agent 28 has the original local path length: 4 => Start (2,2), Goal (3,4)
[DBG]  Agent 42 has the original local path length: 3 => Start (2,3), Goal (3,4)
[DBG]  Agent 55 has the original local path length: 3 => Start (1,2), Goal (2,3)
[DBG]  Start position: (2, 2), (2, 3), (1, 2), 
[DBG]  Goal position: (3, 4), (3, 4), (2, 3), 
[DBG]  SAT instance and solver created.
Currently solving
Instance name: scen
Map name: map
Encoding used: disappear_at_goal
SAT solver used: Kissat
Optimizing function: sum of costs
Number of agents: 3
Mks LB: 4
SoC LB: 10
Delta: 0
Remaining time: 300000 [ms]

Vertex conflict! Agents 1, 2, timestep 3, location 0
Found plan [agents = 3] [timesteps = 4]
Agent #0 : 10 11 14 15 
Agent #1 : 11 14 15 0 
Agent #2 : 6 10 11 0 

[STAT] Solver returned: 0
[DBG]  Agent (index) 28 | New local path (submap idx):
[DBG]  10 11 14 15 
[DBG]  Agent (index) 42 | New local path (submap idx):
[DBG]  11 14 15 
[DBG]  Agent (index) 55 | New local path (submap idx):
[DBG]  6 10 11 
[DBG]  Update the agent path 28 | Original local length: 4 | New local length: 4
[DBG]  agent 28 t=0 => decoded (sx,sy)=(2,2) => global_id=691
[DBG]  agent 28 t=1 => decoded (sx,sy)=(2,3) => global_id=692
[DBG]  agent 28 t=2 => decoded (sx,sy)=(3,3) => global_id=724
[DBG]  agent 28 t=3 => decoded (sx,sy)=(3,4) => global_id=725
[DBG]  Complete path of agent 28:
[DBG]    Original: 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 629 628 627 659 691 692 724 725 726 727 
[DBG]    New:     661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 629 628 627 659 691 692 724 725 726 727 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 629 628 627 659 
[DBG]    Local path (in submap): 691 692 724 725 
[DBG]    Suffix (out of submap): 726 727 
[DBG]  Original agent path length 28 je: 46
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 0: 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 629, 628, 627, 659, 691, 692, 724, 725, 726, 727, 
[DBG]  Path for agent 28 updated, resulting length: 46
[DBG]  Update the agent path 42 | Original local length: 3 | New local length: 3
[DBG]  agent 42 t=0 => decoded (sx,sy)=(2,3) => global_id=692
[DBG]  agent 42 t=1 => decoded (sx,sy)=(3,3) => global_id=724
[DBG]  agent 42 t=2 => decoded (sx,sy)=(3,4) => global_id=725
[DBG]  Complete path of agent 42:
[DBG]    Original: 224 256 257 289 321 353 354 354 354 355 356 357 358 390 391 423 424 425 426 427 428 429 430 431 432 464 465 466 467 468 469 501 533 565 597 629 628 627 659 691 692 724 725 726 727 759 
[DBG]    New:     224 256 257 289 321 353 354 354 354 355 356 357 358 390 391 423 424 425 426 427 428 429 430 431 432 464 465 466 467 468 469 501 533 565 597 629 628 627 659 691 692 724 725 726 727 759 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 224 256 257 289 321 353 354 354 354 355 356 357 358 390 391 423 424 425 426 427 428 429 430 431 432 464 465 466 467 468 469 501 533 565 597 629 628 627 659 691 
[DBG]    Local path (in submap): 692 724 725 
[DBG]    Suffix (out of submap): 726 727 759 
[DBG]  Original agent path length 42 je: 46
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 1: 224, 256, 257, 289, 321, 353, 354, 354, 354, 355, 356, 357, 358, 390, 391, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 464, 465, 466, 467, 468, 469, 501, 533, 565, 597, 629, 628, 627, 659, 691, 692, 724, 725, 726, 727, 759, 
[DBG]  Path for agent 42 updated, resulting length: 46
[DBG]  Update the agent path 55 | Original local length: 3 | New local length: 3
[DBG]  agent 55 t=0 => decoded (sx,sy)=(1,2) => global_id=659
[DBG]  agent 55 t=1 => decoded (sx,sy)=(2,2) => global_id=691
[DBG]  agent 55 t=2 => decoded (sx,sy)=(2,3) => global_id=692
[DBG]  Complete path of agent 55:
[DBG]    Original: 34 66 67 68 100 132 164 196 228 260 261 293 294 295 327 328 329 361 362 363 395 427 428 429 430 462 463 464 465 466 467 468 469 501 533 565 597 629 628 627 659 691 692 
[DBG]    New:     34 66 67 68 100 132 164 196 228 260 261 293 294 295 327 328 329 361 362 363 395 427 428 429 430 462 463 464 465 466 467 468 469 501 533 565 597 629 628 627 659 691 692 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 34 66 67 68 100 132 164 196 228 260 261 293 294 295 327 328 329 361 362 363 395 427 428 429 430 462 463 464 465 466 467 468 469 501 533 565 597 629 628 627 
[DBG]    Local path (in submap): 659 691 692 
[DBG]    Suffix (out of submap): 
[DBG]  Original agent path length 55 je: 43
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 2: 34, 66, 67, 68, 100, 132, 164, 196, 228, 260, 261, 293, 294, 295, 327, 328, 329, 361, 362, 363, 395, 427, 428, 429, 430, 462, 463, 464, 465, 466, 467, 468, 469, 501, 533, 565, 597, 629, 628, 627, 659, 691, 692, 
[DBG]  Path for agent 55 updated, resulting length: 43
[DBG]  Paths successfully updated.
[DBG]  (LNS.cpp) New path for agent 28: 
[DBG]  661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 629, 628, 627, 659, 691, 692, 724, 725, 726, 727, 
[DBG]  (LNS.cpp) New path for agent 42: 
[DBG]  224, 256, 257, 289, 321, 353, 354, 354, 354, 355, 356, 357, 358, 390, 391, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 464, 465, 466, 467, 468, 469, 501, 533, 565, 597, 629, 628, 627, 659, 691, 692, 724, 725, 726, 727, 759, 
[DBG]  (LNS.cpp) New path for agent 55: 
[DBG]  34, 66, 67, 68, 100, 132, 164, 196, 228, 260, 261, 293, 294, 295, 327, 328, 329, 361, 362, 363, 395, 427, 428, 429, 430, 462, 463, 464, 465, 466, 467, 468, 469, 501, 533, 565, 597, 629, 628, 627, 659, 691, 692, 
[DBG]  Delta value: 0
[DBG]  Rewarding metric index = 3
[DBG]  component_weights = {0.278222, 0.281609, 0.214441, 0.225727}
[DBG]  opSuccess value: 1
[STAT] neighbor.sum_of_costs before recomputation: 132
[STAT] neighbor.old_sum_of_costs before recomputation: 132
[STAT] sum_of_costs before recomputation: 4490
[DBG]  Validate solution immediately after SAT success.
[DBG]  No problems after SAT replan.
[DBG]  Recomputing sum_of_cost by dividing neighbor.sum_of_costs and neighbor.old_sum_of_costs
[STAT] sum_of_costs after recomputation: 4490
[STAT] Iteration 5
[DBG]  Using SAT operator (destroy+repair SAT).
[DBG]  ====================
[DBG]  SAT destroy operator called.
[DBG]  SAT heuristic: 2
[DBG]  key_agent_id: 28
[DBG]  key_agent_id global path length: 46
[DBG]  Submap content (global positions):
[DBG]  595 596 597 598 599 
[DBG]  627 628 629 630 631 
[DBG]  659 660 661 662 663 
[DBG]  691 692 693 694 695 
[DBG]  723 724 725 726 727 
[DBG]  Map content with agents and obstacles:
[DBG]  X . A X . 
[DBG]  . . . X . 
[DBG]  A A A X X 
[DBG]  . . X X X 
[DBG]  X A . . . 
[DBG]  content of the map structure that we pass to the SAT solver:
[DBG]  -1  1  1  -1  1  
[DBG]  1  1  1  -1  1  
[DBG]  1  1  1  -1  -1  
[DBG]  1  1  -1  -1  -1  
[DBG]  -1  1  1  1  1  
[DBG]  Identifying agents in a submap for rescheduling (when key_agent is there at the time 10):
[DBG]  Agent 1 found intervals in the sub-map:
[DBG]   [10..15]
[DBG]  Agent 1 (interval in submap: [10..15]) contains time 10, added to replan.
[DBG]  Agent 28 found intervals in the sub-map:
[DBG]   [0..45]
[DBG]  Agent 28 (interval in submap: [0..45]) contains time 10, added to replan.
[DBG]  Agent 63 found intervals in the sub-map:
[DBG]   [7..16]
[DBG]  Agent 63 (interval in submap: [7..16]) contains time 10, added to replan.
[DBG]  Agent 89 found intervals in the sub-map:
[DBG]   [7..12]
[DBG]  Agent 89 (interval in submap: [7..12]) contains time 10, added to replan.
[DBG]  Agent 113 found intervals in the sub-map:
[DBG]   [6..10]
[DBG]  Agent 113 (interval in submap: [6..10]) contains time 10, added to replan.
[DBG]  Agent 1 | Start (global): 724 -> (local): (4, 1) at time 10 | Goal (global): 727 -> (local): (4, 4) at time 15
[DBG]  Agent 28 | Start (global): 661 -> (local): (2, 2) at time 10 | Goal (global): 727 -> (local): (4, 4) at time 45
[DBG]  Agent 63 | Start (global): 659 -> (local): (2, 0) at time 10 | Goal (global): 597 -> (local): (0, 2) at time 16
[DBG]  Agent 89 | Start (global): 660 -> (local): (2, 1) at time 10 | Goal (global): 724 -> (local): (4, 1) at time 12
[DBG]  Agent 113 | Start (global): 597 -> (local): (0, 2) at time 10 | Goal (global): 597 -> (local): (0, 2) at time 10
[DBG]  [REPAIR] SAT destroy operator called.
[DBG]  [REPAIR] SAT operator â€“ launching subproblem FOR OPTIMIZATION.
[DBG]  Creating local paths (sx, sy) in the submap for T_sync = 10
[DBG]    Agent 1 (global paths from T=10 to 15) has local path: (4,1) (4,2) (4,3) (4,4) (4,4) (4,4) 
[DBG]    Agent 28 (global paths from T=10 to 45) has local path: (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (1,2) (1,1) (1,0) (2,0) (3,0) (3,1) (4,1) (4,2) (4,3) (4,4) 
[DBG]    Agent 63 (global paths from T=10 to 16) has local path: (2,0) (2,1) (2,1) (2,1) (1,1) (1,2) (0,2) 
[DBG]    Agent 89 (global paths from T=10 to 12) has local path: (2,1) (3,1) (4,1) 
[DBG]    Agent 113 (global paths from T=10 to 10) has local path: (0,2) 
[DBG]  Checking input data for SAT solver:
[DBG]    - Number of agents to replan: 5
[DBG]  Agent 1 has the original local path length: 6 => Start (4,1), Goal (4,4)
[DBG]  Agent 28 has the original local path length: 36 => Start (2,2), Goal (4,4)
[DBG]  Agent 63 has the original local path length: 7 => Start (2,0), Goal (0,2)
[DBG]  Agent 89 has the original local path length: 3 => Start (2,1), Goal (4,1)
[DBG]  Agent 113 has the original local path length: 1 => Start (0,2), Goal (0,2)
[DBG]  Start position: (4, 1), (2, 2), (2, 0), (2, 1), (0, 2), 
[DBG]  Goal position: (4, 4), (4, 4), (0, 2), (4, 1), (0, 2), 
[DBG]  SAT instance and solver created.
Currently solving
Instance name: scen
Map name: map
Encoding used: disappear_at_goal
SAT solver used: Kissat
Optimizing function: sum of costs
Number of agents: 5
Mks LB: 7
SoC LB: 20
Delta: 0
Remaining time: 300000 [ms]

Vertex conflict! Agents 0, 2, timestep 5, location 0
Swapping conflict! Agents 0, 2, timestep 5, edge (0,0)
Vertex conflict! Agents 0, 2, timestep 6, location 0
Vertex conflict! Agents 0, 3, timestep 4, location 0
Swapping conflict! Agents 0, 3, timestep 4, edge (0,0)
Vertex conflict! Agents 0, 3, timestep 5, location 0
Swapping conflict! Agents 0, 3, timestep 5, edge (0,0)
Vertex conflict! Agents 0, 3, timestep 6, location 0
Vertex conflict! Agents 0, 4, timestep 4, location 0
Swapping conflict! Agents 0, 4, timestep 4, edge (0,0)
Vertex conflict! Agents 0, 4, timestep 5, location 0
Swapping conflict! Agents 0, 4, timestep 5, edge (0,0)
Vertex conflict! Agents 0, 4, timestep 6, location 0
Vertex conflict! Agents 2, 3, timestep 5, location 0
Swapping conflict! Agents 2, 3, timestep 5, edge (0,0)
Vertex conflict! Agents 2, 3, timestep 6, location 0
Vertex conflict! Agents 2, 4, timestep 5, location 0
Swapping conflict! Agents 2, 4, timestep 5, edge (0,0)
Vertex conflict! Agents 2, 4, timestep 6, location 0
Vertex conflict! Agents 3, 4, timestep 3, location 0
Swapping conflict! Agents 3, 4, timestep 3, edge (0,0)
Vertex conflict! Agents 3, 4, timestep 4, location 0
Swapping conflict! Agents 3, 4, timestep 4, edge (0,0)
Vertex conflict! Agents 3, 4, timestep 5, location 0
Swapping conflict! Agents 3, 4, timestep 5, edge (0,0)
Vertex conflict! Agents 3, 4, timestep 6, location 0
Found plan [agents = 5] [timesteps = 7]
Agent #0 : 12 13 14 15 0 0 0 
Agent #1 : 9 8 11 12 13 14 15 
Agent #2 : 7 3 4 5 1 0 0 
Agent #3 : 8 11 12 0 0 0 0 
Agent #4 : 1 0 0 0 0 0 0 

[STAT] Solver returned: 0
[DBG]  Agent (index) 1 | New local path (submap idx):
[DBG]  12 13 14 15 
[DBG]  Agent (index) 28 | New local path (submap idx):
[DBG]  9 8 11 12 13 14 15 
[DBG]  Agent (index) 63 | New local path (submap idx):
[DBG]  7 3 4 5 1 
[DBG]  Agent (index) 89 | New local path (submap idx):
[DBG]  8 11 12 
[DBG]  Agent (index) 113 | New local path (submap idx):
[DBG]  1 
[DBG]  Update the agent path 1 | Original local length: 6 | New local length: 4
[DBG]  agent 1 t=0 => decoded (sx,sy)=(4,1) => global_id=724
[DBG]  agent 1 t=1 => decoded (sx,sy)=(4,2) => global_id=725
[DBG]  agent 1 t=2 => decoded (sx,sy)=(4,3) => global_id=726
[DBG]  agent 1 t=3 => decoded (sx,sy)=(4,4) => global_id=727
[DBG]  Complete path of agent 1:
[DBG]    Original: 949 917 885 884 883 851 819 787 755 756 724 725 726 727 727 727 728 
[DBG]    New:     949 917 885 884 883 851 819 787 755 756 724 725 726 727 728 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 949 917 885 884 883 851 819 787 755 756 
[DBG]    Local path (in submap): 724 725 726 727 728 
[DBG]    Suffix (out of submap): 
[DBG]  Original agent path length 1 je: 17
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 0: 949, 917, 885, 884, 883, 851, 819, 787, 755, 756, 724, 725, 726, 727, 728, 
[DBG]  Path for agent 1 updated, resulting length: 15
[DBG]  Update the agent path 28 | Original local length: 36 | New local length: 7
[DBG]  agent 28 t=0 => decoded (sx,sy)=(2,2) => global_id=661
[DBG]  agent 28 t=1 => decoded (sx,sy)=(2,1) => global_id=660
[DBG]  agent 28 t=2 => decoded (sx,sy)=(3,1) => global_id=692
[DBG]  agent 28 t=3 => decoded (sx,sy)=(4,1) => global_id=724
[DBG]  agent 28 t=4 => decoded (sx,sy)=(4,2) => global_id=725
[DBG]  agent 28 t=5 => decoded (sx,sy)=(4,3) => global_id=726
[DBG]  agent 28 t=6 => decoded (sx,sy)=(4,4) => global_id=727
[DBG]  Complete path of agent 28:
[DBG]    Original: 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 629 628 627 659 691 692 724 725 726 727 
[DBG]    New:     661 661 661 661 661 661 661 661 661 661 661 660 692 724 725 726 727 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 661 661 661 661 661 661 661 661 661 661 
[DBG]    Local path (in submap): 661 660 692 724 725 726 727 
[DBG]    Suffix (out of submap): 
[DBG]  Original agent path length 28 je: 46
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 1: 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 660, 692, 724, 725, 726, 727, 
[DBG]  Path for agent 28 updated, resulting length: 17
[DBG]  Update the agent path 63 | Original local length: 7 | New local length: 5
[DBG]  agent 63 t=0 => decoded (sx,sy)=(2,0) => global_id=659
[DBG]  agent 63 t=1 => decoded (sx,sy)=(1,0) => global_id=627
[DBG]  agent 63 t=2 => decoded (sx,sy)=(1,1) => global_id=628
[DBG]  agent 63 t=3 => decoded (sx,sy)=(1,2) => global_id=629
[DBG]  agent 63 t=4 => decoded (sx,sy)=(0,2) => global_id=597
[DBG]  Complete path of agent 63:
[DBG]    Original: 689 689 689 689 689 657 658 659 659 659 659 660 660 660 628 629 597 565 565 533 501 469 468 467 466 465 433 401 400 368 368 368 336 304 303 302 
[DBG]    New:     689 689 689 689 689 657 658 659 659 659 659 627 628 629 597 565 565 533 501 469 468 467 466 465 433 401 400 368 368 368 336 304 303 302 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 689 689 689 689 689 657 658 659 659 659 
[DBG]    Local path (in submap): 659 627 628 629 597 565 565 
[DBG]    Suffix (out of submap): 533 501 469 468 467 466 465 433 401 400 368 368 368 336 304 303 302 
[DBG]  Original agent path length 63 je: 36
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 2: 689, 689, 689, 689, 689, 657, 658, 659, 659, 659, 659, 627, 628, 629, 597, 565, 565, 533, 501, 469, 468, 467, 466, 465, 433, 401, 400, 368, 368, 368, 336, 304, 303, 302, 
[DBG]  Path for agent 63 updated, resulting length: 34
[DBG]  Update the agent path 89 | Original local length: 3 | New local length: 3
[DBG]  agent 89 t=0 => decoded (sx,sy)=(2,1) => global_id=660
[DBG]  agent 89 t=1 => decoded (sx,sy)=(3,1) => global_id=692
[DBG]  agent 89 t=2 => decoded (sx,sy)=(4,1) => global_id=724
[DBG]  Complete path of agent 89:
[DBG]    Original: 437 469 501 502 534 533 565 597 596 628 660 692 724 756 788 787 819 820 821 822 854 854 886 918 950 982 1014 1015 
[DBG]    New:     437 469 501 502 534 533 565 597 596 628 660 692 724 756 788 787 819 820 821 822 854 854 886 918 950 982 1014 1015 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 437 469 501 502 534 533 565 597 596 628 
[DBG]    Local path (in submap): 660 692 724 
[DBG]    Suffix (out of submap): 756 788 787 819 820 821 822 854 854 886 918 950 982 1014 1015 
[DBG]  Original agent path length 89 je: 28
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 3: 437, 469, 501, 502, 534, 533, 565, 597, 596, 628, 660, 692, 724, 756, 788, 787, 819, 820, 821, 822, 854, 854, 886, 918, 950, 982, 1014, 1015, 
[DBG]  Path for agent 89 updated, resulting length: 28
[DBG]  Update the agent path 113 | Original local length: 1 | New local length: 1
[DBG]  agent 113 t=0 => decoded (sx,sy)=(0,2) => global_id=597
[DBG]  Complete path of agent 113:
[DBG]    Original: 529 561 593 625 657 658 659 627 628 629 597 565 566 534 502 503 504 472 440 408 376 377 378 378 379 380 348 349 317 318 319 287 255 254 222 
[DBG]    New:     529 561 593 625 657 658 659 627 628 629 597 565 566 534 502 503 504 472 440 408 376 377 378 378 379 380 348 349 317 318 319 287 255 254 222 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 529 561 593 625 657 658 659 627 628 629 
[DBG]    Local path (in submap): 597 
[DBG]    Suffix (out of submap): 565 566 534 502 503 504 472 440 408 376 377 378 378 379 380 348 349 317 318 319 287 255 254 222 
[DBG]  Original agent path length 113 je: 35
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 4: 529, 561, 593, 625, 657, 658, 659, 627, 628, 629, 597, 565, 566, 534, 502, 503, 504, 472, 440, 408, 376, 377, 378, 378, 379, 380, 348, 349, 317, 318, 319, 287, 255, 254, 222, 
[DBG]  Path for agent 113 updated, resulting length: 35
[DBG]  Paths successfully updated.
[DBG]  (LNS.cpp) New path for agent 1: 
[DBG]  949, 917, 885, 884, 883, 851, 819, 787, 755, 756, 724, 725, 726, 727, 728, 
[DBG]  (LNS.cpp) New path for agent 28: 
[DBG]  661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 660, 692, 724, 725, 726, 727, 
[DBG]  (LNS.cpp) New path for agent 63: 
[DBG]  689, 689, 689, 689, 689, 657, 658, 659, 659, 659, 659, 627, 628, 629, 597, 565, 565, 533, 501, 469, 468, 467, 466, 465, 433, 401, 400, 368, 368, 368, 336, 304, 303, 302, 
[DBG]  (LNS.cpp) New path for agent 89: 
[DBG]  437, 469, 501, 502, 534, 533, 565, 597, 596, 628, 660, 692, 724, 756, 788, 787, 819, 820, 821, 822, 854, 854, 886, 918, 950, 982, 1014, 1015, 
[DBG]  (LNS.cpp) New path for agent 113: 
[DBG]  529, 561, 593, 625, 657, 658, 659, 627, 628, 629, 597, 565, 566, 534, 502, 503, 504, 472, 440, 408, 376, 377, 378, 378, 379, 380, 348, 349, 317, 318, 319, 287, 255, 254, 222, 
[DBG]  Delta value: 0.210191
[DBG]  Rewarding metric index = 2
[DBG]  component_weights = {0.262788, 0.265987, 0.258019, 0.213205}
[DBG]  opSuccess value: 1
[STAT] neighbor.sum_of_costs before recomputation: 124
[STAT] neighbor.old_sum_of_costs before recomputation: 157
[STAT] sum_of_costs before recomputation: 4490
[DBG]  Validate solution immediately after SAT success.
[WARNING] Problem after SAT: Target conflict: agent 24 (len 19) traverses target of agent 1 (len 14) at location 728 at timestep 15
[DBG]  [DEBUG] Attempting immediate repair via init_lns because problem occurred after SAT (should be applied only for conflicts...).
[DBG]  [DEBUG] Passing 150 agents to init_lns (skip=true).
[DBG]  [DEBUG] path_table contents for selected agents (neighbor.agents):
[DBG]    Agent 1 => controlling path length=15
[DBG]    Agent 28 => controlling path length=17
[DBG]    Agent 63 => controlling path length=34
[DBG]    Agent 89 => controlling path length=28
[DBG]    Agent 113 => controlling path length=35
[DBG]  hodnota skip_initial_solution=1
[DBG]  We skip initialSolution => call buildCollisionData()
[DBG]  buildCollisionData() called â€“ skip_initial_solution case.
[DBG]  Agents.size()=150, collision_graph.size()=150
[DBG]  agent 1 => updateCollidingPairs => foundCollision
[DBG]  agent 24 => updateCollidingPairs => foundCollision
[DBG]  agent 28 => updateCollidingPairs => foundCollision
[DBG]  agent 42 => updateCollidingPairs => foundCollision
[DBG]  agent 63 => updateCollidingPairs => foundCollision
[DBG]  agent 86 => updateCollidingPairs => foundCollision
[DBG]  agent 100 => updateCollidingPairs => foundCollision
[DBG]  agent 115 => updateCollidingPairs => foundCollision
[DBG]  agent 119 => updateCollidingPairs => foundCollision
[DBG]  agent 136 => updateCollidingPairs => foundCollision
[DBG]  Conflicting agent pairs:
[DBG]  agent 1 is in conflict with agent 24
[DBG]  agent 28 is in conflict with agent 42
[DBG]  agent 63 is in conflict with agent 86
[DBG]  agent 63 is in conflict with agent 100
[DBG]  agent 63 is in conflict with agent 115
[DBG]  agent 63 is in conflict with agent 119
[DBG]  agent 63 is in conflict with agent 136
[DBG]  buildCollisionData() => sum_of_costs=4457, num_of_colliding_pairs=7
[DBG]  buildCollisionData done => sum_of_costs=4457, num_of_colliding_pairs=7
[DBG]  sum_of_cost hodnota: 4457
[DBG]  After skip/init build => iteration_stats.back(): sum_of_costs=4457, collisions=7
[DEBUG] Using default neighbor generation strategy for conflicts: 2
[DEBUG] Using default neighbor generation strategy for conflicts: 0
[DEBUG] Using default neighbor generation strategy for conflicts: 2
[DEBUG] Using default neighbor generation strategy for conflicts: 2
	InitLNS(PP): runtime = 0.004875, iterations = 5, colliding pairs = 0, initial colliding pairs = 7, solution cost = 4495, initial solution cost = 4457, failed iterations = 0
[DBG]  [DEBUG] init_lns->sum_of_costs after init_lns->run: 4495
[DBG]  [DEBUG] sum_of_costs after assignment from init_lns->run: 4495
[DBG]  Recomputing sum_of_cost by dividing neighbor.sum_of_costs and neighbor.old_sum_of_costs
[STAT] sum_of_costs after recomputation: 4495
[STAT] Iteration 6
[DBG]  Using SAT operator (destroy+repair SAT).
[DBG]  ====================
[DBG]  SAT destroy operator called.
[DBG]  SAT heuristic: 2
[DBG]  key_agent_id: 28
[DBG]  key_agent_id global path length: 46
[DBG]  Submap content (global positions):
[DBG]  595 596 597 598 599 
[DBG]  627 628 629 630 631 
[DBG]  659 660 661 662 663 
[DBG]  691 692 693 694 695 
[DBG]  723 724 725 726 727 
[DBG]  Map content with agents and obstacles:
[DBG]  X . . X . 
[DBG]  A . . X . 
[DBG]  . . A X X 
[DBG]  . . X X X 
[DBG]  X A . A . 
[DBG]  content of the map structure that we pass to the SAT solver:
[DBG]  -1  1  1  -1  1  
[DBG]  1  1  1  -1  1  
[DBG]  1  1  1  -1  -1  
[DBG]  1  1  -1  -1  -1  
[DBG]  -1  1  1  1  1  
[DBG]  Identifying agents in a submap for rescheduling (when key_agent is there at the time 12):
[DBG]  Agent 1 found intervals in the sub-map:
[DBG]   [10..15]
[DBG]  Agent 1 (interval in submap: [10..15]) contains time 12, added to replan.
[DBG]  Agent 28 found intervals in the sub-map:
[DBG]   [0..45]
[DBG]  Agent 28 (interval in submap: [0..45]) contains time 12, added to replan.
[DBG]  Agent 63 found intervals in the sub-map:
[DBG]  
[DBG]  Agent 63 is not in sub-map at time 12 (intervals: 
[DBG]  )
[DBG]  Agent 86 found intervals in the sub-map:
[DBG]   [11..15]
[DBG]  Agent 86 (interval in submap: [11..15]) contains time 12, added to replan.
[DBG]  Agent 89 found intervals in the sub-map:
[DBG]   [7..12]
[DBG]  Agent 89 (interval in submap: [7..12]) contains time 12, added to replan.
[DBG]  Agent 1 | Start (global): 726 -> (local): (4, 3) at time 12 | Goal (global): 727 -> (local): (4, 4) at time 15
[DBG]  Agent 28 | Start (global): 661 -> (local): (2, 2) at time 12 | Goal (global): 727 -> (local): (4, 4) at time 45
[DBG]  Agent 86 | Start (global): 627 -> (local): (1, 0) at time 12 | Goal (global): 597 -> (local): (0, 2) at time 15
[DBG]  Agent 89 | Start (global): 724 -> (local): (4, 1) at time 12 | Goal (global): 724 -> (local): (4, 1) at time 12
[DBG]  [REPAIR] SAT destroy operator called.
[DBG]  [REPAIR] SAT operator â€“ launching subproblem FOR OPTIMIZATION.
[DBG]  Creating local paths (sx, sy) in the submap for T_sync = 12
[DBG]    Agent 1 (global paths from T=12 to 15) has local path: (4,3) (4,4) (4,4) (4,4) 
[DBG]    Agent 28 (global paths from T=12 to 45) has local path: (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (1,2) (1,1) (1,0) (2,0) (3,0) (3,1) (4,1) (4,2) (4,3) (4,4) 
[DBG]    Agent 86 (global paths from T=12 to 15) has local path: (1,0) (1,1) (0,1) (0,2) 
[DBG]    Agent 89 (global paths from T=12 to 12) has local path: (4,1) 
[DBG]  Checking input data for SAT solver:
[DBG]    - Number of agents to replan: 4
[DBG]  Agent 1 has the original local path length: 4 => Start (4,3), Goal (4,4)
[DBG]  Agent 28 has the original local path length: 34 => Start (2,2), Goal (4,4)
[DBG]  Agent 86 has the original local path length: 4 => Start (1,0), Goal (0,2)
[DBG]  Agent 89 has the original local path length: 1 => Start (4,1), Goal (4,1)
[DBG]  Start position: (4, 3), (2, 2), (1, 0), (4, 1), 
[DBG]  Goal position: (4, 4), (4, 4), (0, 2), (4, 1), 
[DBG]  SAT instance and solver created.
Currently solving
Instance name: scen
Map name: map
Encoding used: disappear_at_goal
SAT solver used: Kissat
Optimizing function: sum of costs
Number of agents: 4
Mks LB: 7
SoC LB: 14
Delta: 0
Remaining time: 300000 [ms]

Vertex conflict! Agents 0, 2, timestep 4, location 0
Swapping conflict! Agents 0, 2, timestep 4, edge (0,0)
Vertex conflict! Agents 0, 2, timestep 5, location 0
Swapping conflict! Agents 0, 2, timestep 5, edge (0,0)
Vertex conflict! Agents 0, 2, timestep 6, location 0
Vertex conflict! Agents 0, 3, timestep 2, location 0
Swapping conflict! Agents 0, 3, timestep 2, edge (0,0)
Vertex conflict! Agents 0, 3, timestep 3, location 0
Swapping conflict! Agents 0, 3, timestep 3, edge (0,0)
Vertex conflict! Agents 0, 3, timestep 4, location 0
Swapping conflict! Agents 0, 3, timestep 4, edge (0,0)
Vertex conflict! Agents 0, 3, timestep 5, location 0
Swapping conflict! Agents 0, 3, timestep 5, edge (0,0)
Vertex conflict! Agents 0, 3, timestep 6, location 0
Vertex conflict! Agents 2, 3, timestep 4, location 0
Swapping conflict! Agents 2, 3, timestep 4, edge (0,0)
Vertex conflict! Agents 2, 3, timestep 5, location 0
Swapping conflict! Agents 2, 3, timestep 5, edge (0,0)
Vertex conflict! Agents 2, 3, timestep 6, location 0
Found plan [agents = 4] [timesteps = 7]
Agent #0 : 14 15 0 0 0 0 0 
Agent #1 : 9 8 11 12 13 14 15 
Agent #2 : 3 4 5 1 0 0 0 
Agent #3 : 12 0 0 0 0 0 0 

[STAT] Solver returned: 0
[DBG]  Agent (index) 1 | New local path (submap idx):
[DBG]  14 15 
[DBG]  Agent (index) 28 | New local path (submap idx):
[DBG]  9 8 11 12 13 14 15 
[DBG]  Agent (index) 86 | New local path (submap idx):
[DBG]  3 4 5 1 
[DBG]  Agent (index) 89 | New local path (submap idx):
[DBG]  12 
[DBG]  Update the agent path 1 | Original local length: 4 | New local length: 2
[DBG]  agent 1 t=0 => decoded (sx,sy)=(4,3) => global_id=726
[DBG]  agent 1 t=1 => decoded (sx,sy)=(4,4) => global_id=727
[DBG]  Complete path of agent 1:
[DBG]    Original: 949 917 885 884 883 851 819 787 755 756 724 725 726 727 727 727 728 
[DBG]    New:     949 917 885 884 883 851 819 787 755 756 724 725 726 727 728 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 949 917 885 884 883 851 819 787 755 756 724 725 
[DBG]    Local path (in submap): 726 727 728 
[DBG]    Suffix (out of submap): 
[DBG]  Original agent path length 1 je: 17
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 0: 949, 917, 885, 884, 883, 851, 819, 787, 755, 756, 724, 725, 726, 727, 728, 
[DBG]  Path for agent 1 updated, resulting length: 15
[DBG]  Update the agent path 28 | Original local length: 34 | New local length: 7
[DBG]  agent 28 t=0 => decoded (sx,sy)=(2,2) => global_id=661
[DBG]  agent 28 t=1 => decoded (sx,sy)=(2,1) => global_id=660
[DBG]  agent 28 t=2 => decoded (sx,sy)=(3,1) => global_id=692
[DBG]  agent 28 t=3 => decoded (sx,sy)=(4,1) => global_id=724
[DBG]  agent 28 t=4 => decoded (sx,sy)=(4,2) => global_id=725
[DBG]  agent 28 t=5 => decoded (sx,sy)=(4,3) => global_id=726
[DBG]  agent 28 t=6 => decoded (sx,sy)=(4,4) => global_id=727
[DBG]  Complete path of agent 28:
[DBG]    Original: 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 629 628 627 659 691 692 724 725 726 727 
[DBG]    New:     661 661 661 661 661 661 661 661 661 661 661 661 661 660 692 724 725 726 727 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 661 661 661 661 661 661 661 661 661 661 661 661 
[DBG]    Local path (in submap): 661 660 692 724 725 726 727 
[DBG]    Suffix (out of submap): 
[DBG]  Original agent path length 28 je: 46
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 1: 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 660, 692, 724, 725, 726, 727, 
[DBG]  Path for agent 28 updated, resulting length: 19
[DBG]  Update the agent path 86 | Original local length: 4 | New local length: 4
[DBG]  agent 86 t=0 => decoded (sx,sy)=(1,0) => global_id=627
[DBG]  agent 86 t=1 => decoded (sx,sy)=(1,1) => global_id=628
[DBG]  agent 86 t=2 => decoded (sx,sy)=(1,2) => global_id=629
[DBG]  agent 86 t=3 => decoded (sx,sy)=(0,2) => global_id=597
[DBG]  Complete path of agent 86:
[DBG]    Original: 781 782 750 718 686 687 688 689 689 657 658 659 627 628 596 597 565 566 534 502 503 504 505 506 538 539 540 541 
[DBG]    New:     781 782 750 718 686 687 688 689 689 657 658 659 627 628 629 597 565 566 534 502 503 504 505 506 538 539 540 541 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 781 782 750 718 686 687 688 689 689 657 658 659 
[DBG]    Local path (in submap): 627 628 629 597 
[DBG]    Suffix (out of submap): 565 566 534 502 503 504 505 506 538 539 540 541 
[DBG]  Original agent path length 86 je: 28
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 2: 781, 782, 750, 718, 686, 687, 688, 689, 689, 657, 658, 659, 627, 628, 629, 597, 565, 566, 534, 502, 503, 504, 505, 506, 538, 539, 540, 541, 
[DBG]  Path for agent 86 updated, resulting length: 28
[DBG]  Update the agent path 89 | Original local length: 1 | New local length: 1
[DBG]  agent 89 t=0 => decoded (sx,sy)=(4,1) => global_id=724
[DBG]  Complete path of agent 89:
[DBG]    Original: 437 469 501 502 534 533 565 597 596 628 660 692 724 756 788 787 819 820 821 822 854 854 886 918 950 982 1014 1015 
[DBG]    New:     437 469 501 502 534 533 565 597 596 628 660 692 724 756 788 787 819 820 821 822 854 854 886 918 950 982 1014 1015 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 437 469 501 502 534 533 565 597 596 628 660 692 
[DBG]    Local path (in submap): 724 
[DBG]    Suffix (out of submap): 756 788 787 819 820 821 822 854 854 886 918 950 982 1014 1015 
[DBG]  Original agent path length 89 je: 28
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 3: 437, 469, 501, 502, 534, 533, 565, 597, 596, 628, 660, 692, 724, 756, 788, 787, 819, 820, 821, 822, 854, 854, 886, 918, 950, 982, 1014, 1015, 
[DBG]  Path for agent 89 updated, resulting length: 28
[DBG]  Paths successfully updated.
[DBG]  (LNS.cpp) New path for agent 1: 
[DBG]  949, 917, 885, 884, 883, 851, 819, 787, 755, 756, 724, 725, 726, 727, 728, 
[DBG]  (LNS.cpp) New path for agent 28: 
[DBG]  661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 660, 692, 724, 725, 726, 727, 
[DBG]  (LNS.cpp) New path for agent 86: 
[DBG]  781, 782, 750, 718, 686, 687, 688, 689, 689, 657, 658, 659, 627, 628, 629, 597, 565, 566, 534, 502, 503, 504, 505, 506, 538, 539, 540, 541, 
[DBG]  (LNS.cpp) New path for agent 89: 
[DBG]  437, 469, 501, 502, 534, 533, 565, 597, 596, 628, 660, 692, 724, 756, 788, 787, 819, 820, 821, 822, 854, 854, 886, 918, 950, 982, 1014, 1015, 
[DBG]  Delta value: 0.252174
[DBG]  Rewarding metric index = 3
[DBG]  component_weights = {0.246099, 0.249095, 0.241633, 0.263174}
[DBG]  opSuccess value: 1
[STAT] neighbor.sum_of_costs before recomputation: 86
[STAT] neighbor.old_sum_of_costs before recomputation: 115
[STAT] sum_of_costs before recomputation: 4495
[DBG]  Validate solution immediately after SAT success.
[WARNING] Problem after SAT: Target conflict: agent 24 (len 19) traverses target of agent 1 (len 14) at location 728 at timestep 15
[DBG]  [DEBUG] Attempting immediate repair via init_lns because problem occurred after SAT (should be applied only for conflicts...).
[DBG]  [DEBUG] Passing 150 agents to init_lns (skip=true).
[DBG]  [DEBUG] path_table contents for selected agents (neighbor.agents):
[DBG]    Agent 1 => controlling path length=15
[DBG]    Agent 28 => controlling path length=19
[DBG]    Agent 86 => controlling path length=28
[DBG]    Agent 89 => controlling path length=28
[DBG]  hodnota skip_initial_solution=1
[DBG]  We skip initialSolution => call buildCollisionData()
[DBG]  buildCollisionData() called â€“ skip_initial_solution case.
[DBG]  Agents.size()=150, collision_graph.size()=150
[DBG]  agent 1 => updateCollidingPairs => foundCollision
[DBG]  agent 24 => updateCollidingPairs => foundCollision
[DBG]  agent 28 => updateCollidingPairs => foundCollision
[DBG]  agent 42 => updateCollidingPairs => foundCollision
[DBG]  Conflicting agent pairs:
[DBG]  agent 1 is in conflict with agent 24
[DBG]  agent 28 is in conflict with agent 42
[DBG]  buildCollisionData() => sum_of_costs=4466, num_of_colliding_pairs=2
[DBG]  buildCollisionData done => sum_of_costs=4466, num_of_colliding_pairs=2
[DBG]  sum_of_cost hodnota: 4466
[DBG]  After skip/init build => iteration_stats.back(): sum_of_costs=4466, collisions=2
[DEBUG] Using default neighbor generation strategy for conflicts: 0
[DEBUG] Using default neighbor generation strategy for conflicts: 1
	InitLNS(PP): runtime = 0.00352117, iterations = 3, colliding pairs = 0, initial colliding pairs = 2, solution cost = 4490, initial solution cost = 4466, failed iterations = 0
[DBG]  [DEBUG] init_lns->sum_of_costs after init_lns->run: 4490
[DBG]  [DEBUG] sum_of_costs after assignment from init_lns->run: 4490
[DBG]  Recomputing sum_of_cost by dividing neighbor.sum_of_costs and neighbor.old_sum_of_costs
[STAT] sum_of_costs after recomputation: 4490
[STAT] Iteration 7
[DBG]  Using SAT operator (destroy+repair SAT).
[DBG]  ====================
[DBG]  SAT destroy operator called.
[DBG]  SAT heuristic: 2
[DBG]  key_agent_id: 28
[DBG]  key_agent_id global path length: 46
[DBG]  Submap content (global positions):
[DBG]  595 596 597 598 599 
[DBG]  627 628 629 630 631 
[DBG]  659 660 661 662 663 
[DBG]  691 692 693 694 695 
[DBG]  723 724 725 726 727 
[DBG]  Map content with agents and obstacles:
[DBG]  X A A X . 
[DBG]  . A . X . 
[DBG]  . A A X X 
[DBG]  . A X X X 
[DBG]  X . . . . 
[DBG]  content of the map structure that we pass to the SAT solver:
[DBG]  -1  1  1  -1  1  
[DBG]  1  1  1  -1  1  
[DBG]  1  1  1  -1  -1  
[DBG]  1  1  -1  -1  -1  
[DBG]  -1  1  1  1  1  
[DBG]  Identifying agents in a submap for rescheduling (when key_agent is there at the time 22):
[DBG]  Agent 11 found intervals in the sub-map:
[DBG]   [18..24]
[DBG]  Agent 11 (interval in submap: [18..24]) contains time 22, added to replan.
[DBG]  Agent 28 found intervals in the sub-map:
[DBG]   [0..45]
[DBG]  Agent 28 (interval in submap: [0..45]) contains time 22, added to replan.
[DBG]  Agent 30 found intervals in the sub-map:
[DBG]   [20..25]
[DBG]  Agent 30 (interval in submap: [20..25]) contains time 22, added to replan.
[DBG]  Agent 56 found intervals in the sub-map:
[DBG]   [19..23]
[DBG]  Agent 56 (interval in submap: [19..23]) contains time 22, added to replan.
[DBG]  Agent 74 found intervals in the sub-map:
[DBG]   [20..24]
[DBG]  Agent 74 (interval in submap: [20..24]) contains time 22, added to replan.
[DBG]  Agent 79 found intervals in the sub-map:
[DBG]   [18..22]
[DBG]  Agent 79 (interval in submap: [18..22]) contains time 22, added to replan.
[DBG]  Agent 11 | Start (global): 692 -> (local): (3, 1) at time 22 | Goal (global): 659 -> (local): (2, 0) at time 24
[DBG]  Agent 28 | Start (global): 661 -> (local): (2, 2) at time 22 | Goal (global): 727 -> (local): (4, 4) at time 45
[DBG]  Agent 30 | Start (global): 660 -> (local): (2, 1) at time 22 | Goal (global): 597 -> (local): (0, 2) at time 25
[DBG]  Agent 56 | Start (global): 596 -> (local): (0, 1) at time 22 | Goal (global): 597 -> (local): (0, 2) at time 23
[DBG]  Agent 74 | Start (global): 628 -> (local): (1, 1) at time 22 | Goal (global): 597 -> (local): (0, 2) at time 24
[DBG]  Agent 79 | Start (global): 597 -> (local): (0, 2) at time 22 | Goal (global): 597 -> (local): (0, 2) at time 22
[DBG]  [REPAIR] SAT destroy operator called.
[DBG]  [REPAIR] SAT operator â€“ launching subproblem FOR OPTIMIZATION.
[DBG]  Creating local paths (sx, sy) in the submap for T_sync = 22
[DBG]    Agent 11 (global paths from T=22 to 24) has local path: (3,1) (3,0) (2,0) 
[DBG]    Agent 28 (global paths from T=22 to 45) has local path: (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (1,2) (1,1) (1,0) (2,0) (3,0) (3,1) (4,1) (4,2) (4,3) (4,4) 
[DBG]    Agent 30 (global paths from T=22 to 25) has local path: (2,1) (1,1) (0,1) (0,2) 
[DBG]    Agent 56 (global paths from T=22 to 23) has local path: (0,1) (0,2) 
[DBG]    Agent 74 (global paths from T=22 to 24) has local path: (1,1) (0,1) (0,2) 
[DBG]    Agent 79 (global paths from T=22 to 22) has local path: (0,2) 
[DBG]  Checking input data for SAT solver:
[DBG]    - Number of agents to replan: 6
[DBG]  Agent 11 has the original local path length: 3 => Start (3,1), Goal (2,0)
[DBG]  Agent 28 has the original local path length: 24 => Start (2,2), Goal (4,4)
[DBG]  Agent 30 has the original local path length: 4 => Start (2,1), Goal (0,2)
[DBG]  Agent 56 has the original local path length: 2 => Start (0,1), Goal (0,2)
[DBG]  Agent 74 has the original local path length: 3 => Start (1,1), Goal (0,2)
[DBG]  Agent 79 has the original local path length: 1 => Start (0,2), Goal (0,2)
[DBG]  Start position: (3, 1), (2, 2), (2, 1), (0, 1), (1, 1), (0, 2), 
[DBG]  Goal position: (2, 0), (4, 4), (0, 2), (0, 2), (0, 2), (0, 2), 
[DBG]  SAT instance and solver created.
Currently solving
Instance name: scen
Map name: map
Encoding used: disappear_at_goal
SAT solver used: Kissat
Optimizing function: sum of costs
Number of agents: 6
Mks LB: 7
SoC LB: 20
Delta: 0
Remaining time: 300000 [ms]

Vertex conflict! Agents 0, 2, timestep 4, location 0
Swapping conflict! Agents 0, 2, timestep 4, edge (0,0)
Vertex conflict! Agents 0, 2, timestep 5, location 0
Swapping conflict! Agents 0, 2, timestep 5, edge (0,0)
Vertex conflict! Agents 0, 2, timestep 6, location 0
Vertex conflict! Agents 0, 3, timestep 3, location 0
Swapping conflict! Agents 0, 3, timestep 3, edge (0,0)
Vertex conflict! Agents 0, 3, timestep 4, location 0
Swapping conflict! Agents 0, 3, timestep 4, edge (0,0)
Vertex conflict! Agents 0, 3, timestep 5, location 0
Swapping conflict! Agents 0, 3, timestep 5, edge (0,0)
Vertex conflict! Agents 0, 3, timestep 6, location 0
Vertex conflict! Agents 0, 4, timestep 3, location 0
Swapping conflict! Agents 0, 4, timestep 3, edge (0,0)
Vertex conflict! Agents 0, 4, timestep 4, location 0
Swapping conflict! Agents 0, 4, timestep 4, edge (0,0)
Vertex conflict! Agents 0, 4, timestep 5, location 0
Swapping conflict! Agents 0, 4, timestep 5, edge (0,0)
Vertex conflict! Agents 0, 4, timestep 6, location 0
Vertex conflict! Agents 0, 5, timestep 3, location 0
Swapping conflict! Agents 0, 5, timestep 3, edge (0,0)
Vertex conflict! Agents 0, 5, timestep 4, location 0
Swapping conflict! Agents 0, 5, timestep 4, edge (0,0)
Vertex conflict! Agents 0, 5, timestep 5, location 0
Swapping conflict! Agents 0, 5, timestep 5, edge (0,0)
Vertex conflict! Agents 0, 5, timestep 6, location 0
Vertex conflict! Agents 2, 3, timestep 4, location 0
Swapping conflict! Agents 2, 3, timestep 4, edge (0,0)
Vertex conflict! Agents 2, 3, timestep 5, location 0
Swapping conflict! Agents 2, 3, timestep 5, edge (0,0)
Vertex conflict! Agents 2, 3, timestep 6, location 0
Vertex conflict! Agents 2, 4, timestep 4, location 0
Swapping conflict! Agents 2, 4, timestep 4, edge (0,0)
Vertex conflict! Agents 2, 4, timestep 5, location 0
Swapping conflict! Agents 2, 4, timestep 5, edge (0,0)
Vertex conflict! Agents 2, 4, timestep 6, location 0
Vertex conflict! Agents 2, 5, timestep 4, location 0
Swapping conflict! Agents 2, 5, timestep 4, edge (0,0)
Vertex conflict! Agents 2, 5, timestep 5, location 0
Swapping conflict! Agents 2, 5, timestep 5, edge (0,0)
Vertex conflict! Agents 2, 5, timestep 6, location 0
Vertex conflict! Agents 3, 4, timestep 3, location 0
Swapping conflict! Agents 3, 4, timestep 3, edge (0,0)
Vertex conflict! Agents 3, 4, timestep 4, location 0
Swapping conflict! Agents 3, 4, timestep 4, edge (0,0)
Vertex conflict! Agents 3, 4, timestep 5, location 0
Swapping conflict! Agents 3, 4, timestep 5, edge (0,0)
Vertex conflict! Agents 3, 4, timestep 6, location 0
Swapping conflict! Agents 3, 5, timestep 0, edge (0,1)
Vertex conflict! Agents 3, 5, timestep 2, location 0
Swapping conflict! Agents 3, 5, timestep 2, edge (0,0)
Vertex conflict! Agents 3, 5, timestep 3, location 0
Swapping conflict! Agents 3, 5, timestep 3, edge (0,0)
Vertex conflict! Agents 3, 5, timestep 4, location 0
Swapping conflict! Agents 3, 5, timestep 4, edge (0,0)
Vertex conflict! Agents 3, 5, timestep 5, location 0
Swapping conflict! Agents 3, 5, timestep 5, edge (0,0)
Vertex conflict! Agents 3, 5, timestep 6, location 0
Vertex conflict! Agents 4, 5, timestep 3, location 0
Swapping conflict! Agents 4, 5, timestep 3, edge (0,0)
Vertex conflict! Agents 4, 5, timestep 4, location 0
Swapping conflict! Agents 4, 5, timestep 4, edge (0,0)
Vertex conflict! Agents 4, 5, timestep 5, location 0
Swapping conflict! Agents 4, 5, timestep 5, edge (0,0)
Vertex conflict! Agents 4, 5, timestep 6, location 0
Found plan [agents = 6] [timesteps = 7]
Agent #0 : 11 10 7 0 0 0 0 
Agent #1 : 9 8 11 12 13 14 15 
Agent #2 : 8 4 5 1 0 0 0 
Agent #3 : 0 1 0 0 0 0 0 
Agent #4 : 4 5 1 0 0 0 0 
Agent #5 : 1 0 0 0 0 0 0 

[STAT] Solver returned: 0
[DBG]  Agent (index) 11 | New local path (submap idx):
[DBG]  11 10 7 
[DBG]  Agent (index) 28 | New local path (submap idx):
[DBG]  9 8 11 12 13 14 15 
[DBG]  Agent (index) 30 | New local path (submap idx):
[DBG]  8 4 5 1 
[DBG]  Agent (index) 56 | New local path (submap idx):
[DBG]  0 1 
[DBG]  Agent (index) 74 | New local path (submap idx):
[DBG]  4 5 1 
[DBG]  Agent (index) 79 | New local path (submap idx):
[DBG]  1 
[DBG]  Update the agent path 11 | Original local length: 3 | New local length: 3
[DBG]  agent 11 t=0 => decoded (sx,sy)=(3,1) => global_id=692
[DBG]  agent 11 t=1 => decoded (sx,sy)=(3,0) => global_id=691
[DBG]  agent 11 t=2 => decoded (sx,sy)=(2,0) => global_id=659
[DBG]  Complete path of agent 11:
[DBG]    Original: 990 989 988 956 955 954 953 921 889 857 856 855 823 822 821 820 788 756 724 725 725 724 692 691 659 658 657 656 656 656 656 657 
[DBG]    New:     990 989 988 956 955 954 953 921 889 857 856 855 823 822 821 820 788 756 724 725 725 724 692 691 659 658 657 656 656 656 656 657 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 990 989 988 956 955 954 953 921 889 857 856 855 823 822 821 820 788 756 724 725 725 724 
[DBG]    Local path (in submap): 692 691 659 
[DBG]    Suffix (out of submap): 658 657 656 656 656 656 657 
[DBG]  Original agent path length 11 je: 32
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 0: 990, 989, 988, 956, 955, 954, 953, 921, 889, 857, 856, 855, 823, 822, 821, 820, 788, 756, 724, 725, 725, 724, 692, 691, 659, 658, 657, 656, 656, 656, 656, 657, 
[DBG]  Path for agent 11 updated, resulting length: 32
[DBG]  Update the agent path 28 | Original local length: 24 | New local length: 7
[DBG]  agent 28 t=0 => decoded (sx,sy)=(2,2) => global_id=661
[DBG]  agent 28 t=1 => decoded (sx,sy)=(2,1) => global_id=660
[DBG]  agent 28 t=2 => decoded (sx,sy)=(3,1) => global_id=692
[DBG]  agent 28 t=3 => decoded (sx,sy)=(4,1) => global_id=724
[DBG]  agent 28 t=4 => decoded (sx,sy)=(4,2) => global_id=725
[DBG]  agent 28 t=5 => decoded (sx,sy)=(4,3) => global_id=726
[DBG]  agent 28 t=6 => decoded (sx,sy)=(4,4) => global_id=727
[DBG]  Complete path of agent 28:
[DBG]    Original: 661 660 660 660 660 660 660 692 692 692 692 724 725 724 692 692 692 692 692 692 692 660 661 661 661 661 661 661 661 661 661 661 661 661 661 661 629 628 627 659 691 692 724 725 726 727 
[DBG]    New:     661 660 660 660 660 660 660 692 692 692 692 724 725 724 692 692 692 692 692 692 692 660 661 660 692 724 725 726 727 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 661 660 660 660 660 660 660 692 692 692 692 724 725 724 692 692 692 692 692 692 692 660 
[DBG]    Local path (in submap): 661 660 692 724 725 726 727 
[DBG]    Suffix (out of submap): 
[DBG]  Original agent path length 28 je: 46
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 1: 661, 660, 660, 660, 660, 660, 660, 692, 692, 692, 692, 724, 725, 724, 692, 692, 692, 692, 692, 692, 692, 660, 661, 660, 692, 724, 725, 726, 727, 
[DBG]  Path for agent 28 updated, resulting length: 29
[DBG]  Update the agent path 30 | Original local length: 4 | New local length: 4
[DBG]  agent 30 t=0 => decoded (sx,sy)=(2,1) => global_id=660
[DBG]  agent 30 t=1 => decoded (sx,sy)=(1,1) => global_id=628
[DBG]  agent 30 t=2 => decoded (sx,sy)=(1,2) => global_id=629
[DBG]  agent 30 t=3 => decoded (sx,sy)=(0,2) => global_id=597
[DBG]  Complete path of agent 30:
[DBG]    Original: 922 890 858 857 856 888 887 886 885 884 884 884 883 882 850 818 786 787 788 756 724 692 660 628 596 597 565 566 534 502 503 
[DBG]    New:     922 890 858 857 856 888 887 886 885 884 884 884 883 882 850 818 786 787 788 756 724 692 660 628 629 597 565 566 534 502 503 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 922 890 858 857 856 888 887 886 885 884 884 884 883 882 850 818 786 787 788 756 724 692 
[DBG]    Local path (in submap): 660 628 629 597 
[DBG]    Suffix (out of submap): 565 566 534 502 503 
[DBG]  Original agent path length 30 je: 31
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 2: 922, 890, 858, 857, 856, 888, 887, 886, 885, 884, 884, 884, 883, 882, 850, 818, 786, 787, 788, 756, 724, 692, 660, 628, 629, 597, 565, 566, 534, 502, 503, 
[DBG]  Path for agent 30 updated, resulting length: 31
[DBG]  Update the agent path 56 | Original local length: 2 | New local length: 2
[DBG]  agent 56 t=0 => decoded (sx,sy)=(0,1) => global_id=596
[DBG]  agent 56 t=1 => decoded (sx,sy)=(0,2) => global_id=597
[DBG]  Complete path of agent 56:
[DBG]    Original: 805 806 774 775 776 777 778 746 747 715 683 684 685 653 654 655 656 657 658 659 660 628 596 597 565 533 534 502 503 504 472 473 474 475 443 444 412 413 414 415 383 351 319 287 255 
[DBG]    New:     805 806 774 775 776 777 778 746 747 715 683 684 685 653 654 655 656 657 658 659 660 628 596 597 565 533 534 502 503 504 472 473 474 475 443 444 412 413 414 415 383 351 319 287 255 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 805 806 774 775 776 777 778 746 747 715 683 684 685 653 654 655 656 657 658 659 660 628 
[DBG]    Local path (in submap): 596 597 
[DBG]    Suffix (out of submap): 565 533 534 502 503 504 472 473 474 475 443 444 412 413 414 415 383 351 319 287 255 
[DBG]  Original agent path length 56 je: 45
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 3: 805, 806, 774, 775, 776, 777, 778, 746, 747, 715, 683, 684, 685, 653, 654, 655, 656, 657, 658, 659, 660, 628, 596, 597, 565, 533, 534, 502, 503, 504, 472, 473, 474, 475, 443, 444, 412, 413, 414, 415, 383, 351, 319, 287, 255, 
[DBG]  Path for agent 56 updated, resulting length: 45
[DBG]  Update the agent path 74 | Original local length: 3 | New local length: 3
[DBG]  agent 74 t=0 => decoded (sx,sy)=(1,1) => global_id=628
[DBG]  agent 74 t=1 => decoded (sx,sy)=(1,2) => global_id=629
[DBG]  agent 74 t=2 => decoded (sx,sy)=(0,2) => global_id=597
[DBG]  Complete path of agent 74:
[DBG]    Original: 752 752 752 752 752 752 751 751 751 751 751 751 751 752 720 688 688 656 657 658 659 627 628 596 597 565 566 534 502 503 504 
[DBG]    New:     752 752 752 752 752 752 751 751 751 751 751 751 751 752 720 688 688 656 657 658 659 627 628 629 597 565 566 534 502 503 504 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 752 752 752 752 752 752 751 751 751 751 751 751 751 752 720 688 688 656 657 658 659 627 
[DBG]    Local path (in submap): 628 629 597 
[DBG]    Suffix (out of submap): 565 566 534 502 503 504 
[DBG]  Original agent path length 74 je: 31
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 4: 752, 752, 752, 752, 752, 752, 751, 751, 751, 751, 751, 751, 751, 752, 720, 688, 688, 656, 657, 658, 659, 627, 628, 629, 597, 565, 566, 534, 502, 503, 504, 
[DBG]  Path for agent 74 updated, resulting length: 31
[DBG]  Update the agent path 79 | Original local length: 1 | New local length: 1
[DBG]  agent 79 t=0 => decoded (sx,sy)=(0,2) => global_id=597
[DBG]  Complete path of agent 79:
[DBG]    Original: 1004 1005 1006 974 942 910 878 846 847 815 783 784 752 720 688 656 657 658 659 627 628 629 597 565 566 534 502 503 504 472 440 408 409 409 377 345 313 281 249 217 185 153 121 122 123 
[DBG]    New:     1004 1005 1006 974 942 910 878 846 847 815 783 784 752 720 688 656 657 658 659 627 628 629 597 565 566 534 502 503 504 472 440 408 409 409 377 345 313 281 249 217 185 153 121 122 123 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 1004 1005 1006 974 942 910 878 846 847 815 783 784 752 720 688 656 657 658 659 627 628 629 
[DBG]    Local path (in submap): 597 
[DBG]    Suffix (out of submap): 565 566 534 502 503 504 472 440 408 409 409 377 345 313 281 249 217 185 153 121 122 123 
[DBG]  Original agent path length 79 je: 45
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 5: 1004, 1005, 1006, 974, 942, 910, 878, 846, 847, 815, 783, 784, 752, 720, 688, 656, 657, 658, 659, 627, 628, 629, 597, 565, 566, 534, 502, 503, 504, 472, 440, 408, 409, 409, 377, 345, 313, 281, 249, 217, 185, 153, 121, 122, 123, 
[DBG]  Path for agent 79 updated, resulting length: 45
[DBG]  Paths successfully updated.
[DBG]  (LNS.cpp) New path for agent 11: 
[DBG]  990, 989, 988, 956, 955, 954, 953, 921, 889, 857, 856, 855, 823, 822, 821, 820, 788, 756, 724, 725, 725, 724, 692, 691, 659, 658, 657, 656, 656, 656, 656, 657, 
[DBG]  (LNS.cpp) New path for agent 28: 
[DBG]  661, 660, 660, 660, 660, 660, 660, 692, 692, 692, 692, 724, 725, 724, 692, 692, 692, 692, 692, 692, 692, 660, 661, 660, 692, 724, 725, 726, 727, 
[DBG]  (LNS.cpp) New path for agent 30: 
[DBG]  922, 890, 858, 857, 856, 888, 887, 886, 885, 884, 884, 884, 883, 882, 850, 818, 786, 787, 788, 756, 724, 692, 660, 628, 629, 597, 565, 566, 534, 502, 503, 
[DBG]  (LNS.cpp) New path for agent 56: 
[DBG]  805, 806, 774, 775, 776, 777, 778, 746, 747, 715, 683, 684, 685, 653, 654, 655, 656, 657, 658, 659, 660, 628, 596, 597, 565, 533, 534, 502, 503, 504, 472, 473, 474, 475, 443, 444, 412, 413, 414, 415, 383, 351, 319, 287, 255, 
[DBG]  (LNS.cpp) New path for agent 74: 
[DBG]  752, 752, 752, 752, 752, 752, 751, 751, 751, 751, 751, 751, 751, 752, 720, 688, 688, 656, 657, 658, 659, 627, 628, 629, 597, 565, 566, 534, 502, 503, 504, 
[DBG]  (LNS.cpp) New path for agent 79: 
[DBG]  1004, 1005, 1006, 974, 942, 910, 878, 846, 847, 815, 783, 784, 752, 720, 688, 656, 657, 658, 659, 627, 628, 629, 597, 565, 566, 534, 502, 503, 504, 472, 440, 408, 409, 409, 377, 345, 313, 281, 249, 217, 185, 153, 121, 122, 123, 
[DBG]  Delta value: 0.0758929
[DBG]  Rewarding metric index = 3
[DBG]  component_weights = {0.237805, 0.2407, 0.23349, 0.288005}
[DBG]  opSuccess value: 1
[STAT] neighbor.sum_of_costs before recomputation: 207
[STAT] neighbor.old_sum_of_costs before recomputation: 224
[STAT] sum_of_costs before recomputation: 4490
[DBG]  Validate solution immediately after SAT success.
[WARNING] Problem after SAT: Target conflict: agent 42 (len 45) traverses target of agent 28 (len 28) at location 727 at timestep 44
[DBG]  [DEBUG] Attempting immediate repair via init_lns because problem occurred after SAT (should be applied only for conflicts...).
[DBG]  [DEBUG] Passing 150 agents to init_lns (skip=true).
[DBG]  [DEBUG] path_table contents for selected agents (neighbor.agents):
[DBG]    Agent 11 => controlling path length=32
[DBG]    Agent 28 => controlling path length=29
[DBG]    Agent 30 => controlling path length=31
[DBG]    Agent 56 => controlling path length=45
[DBG]    Agent 74 => controlling path length=31
[DBG]    Agent 79 => controlling path length=45
[DBG]  hodnota skip_initial_solution=1
[DBG]  We skip initialSolution => call buildCollisionData()
[DBG]  buildCollisionData() called â€“ skip_initial_solution case.
[DBG]  Agents.size()=150, collision_graph.size()=150
[DBG]  agent 28 => updateCollidingPairs => foundCollision
[DBG]  agent 42 => updateCollidingPairs => foundCollision
[DBG]  Conflicting agent pairs:
[DBG]  agent 28 is in conflict with agent 42
[DBG]  buildCollisionData() => sum_of_costs=4473, num_of_colliding_pairs=1
[DBG]  buildCollisionData done => sum_of_costs=4473, num_of_colliding_pairs=1
[DBG]  sum_of_cost hodnota: 4473
[DBG]  After skip/init build => iteration_stats.back(): sum_of_costs=4473, collisions=1
[DEBUG] Using default neighbor generation strategy for conflicts: 0
	InitLNS(PP): runtime = 0.00195138, iterations = 2, colliding pairs = 0, initial colliding pairs = 1, solution cost = 4525, initial solution cost = 4473, failed iterations = 0
[DBG]  [DEBUG] init_lns->sum_of_costs after init_lns->run: 4525
[DBG]  [DEBUG] sum_of_costs after assignment from init_lns->run: 4525
[DBG]  Recomputing sum_of_cost by dividing neighbor.sum_of_costs and neighbor.old_sum_of_costs
[STAT] sum_of_costs after recomputation: 4525
[STAT] Iteration 8
[DBG]  Using SAT operator (destroy+repair SAT).
[DBG]  ====================
[DBG]  SAT destroy operator called.
[DBG]  SAT heuristic: 2
[DBG]  key_agent_id: 28
[DBG]  key_agent_id global path length: 46
[DBG]  Submap content (global positions):
[DBG]  595 596 597 598 599 
[DBG]  627 628 629 630 631 
[DBG]  659 660 661 662 663 
[DBG]  691 692 693 694 695 
[DBG]  723 724 725 726 727 
[DBG]  Map content with agents and obstacles:
[DBG]  X . . X . 
[DBG]  . A . X . 
[DBG]  A A A X X 
[DBG]  . . X X X 
[DBG]  X A A . . 
[DBG]  content of the map structure that we pass to the SAT solver:
[DBG]  -1  1  1  -1  1  
[DBG]  1  1  1  -1  1  
[DBG]  1  1  1  -1  -1  
[DBG]  1  1  -1  -1  -1  
[DBG]  -1  1  1  1  1  
[DBG]  Identifying agents in a submap for rescheduling (when key_agent is there at the time 20):
[DBG]  Agent 11 found intervals in the sub-map:
[DBG]   [18..24]
[DBG]  Agent 11 (interval in submap: [18..24]) contains time 20, added to replan.
[DBG]  Agent 28 found intervals in the sub-map:
[DBG]   [0..39] [45..45]
[DBG]  Agent 28 (interval in submap: [0..39]) contains time 20, added to replan.
[DBG]  Agent 30 found intervals in the sub-map:
[DBG]   [20..25]
[DBG]  Agent 30 (interval in submap: [20..25]) contains time 20, added to replan.
[DBG]  Agent 56 found intervals in the sub-map:
[DBG]   [19..23]
[DBG]  Agent 56 (interval in submap: [19..23]) contains time 20, added to replan.
[DBG]  Agent 74 found intervals in the sub-map:
[DBG]   [20..24]
[DBG]  Agent 74 (interval in submap: [20..24]) contains time 20, added to replan.
[DBG]  Agent 79 found intervals in the sub-map:
[DBG]   [18..22]
[DBG]  Agent 79 (interval in submap: [18..22]) contains time 20, added to replan.
[DBG]  Agent 11 | Start (global): 725 -> (local): (4, 2) at time 20 | Goal (global): 659 -> (local): (2, 0) at time 24
[DBG]  Agent 28 | Start (global): 661 -> (local): (2, 2) at time 20 | Goal (global): 727 -> (local): (4, 4) at time 39
[DBG]  Agent 30 | Start (global): 724 -> (local): (4, 1) at time 20 | Goal (global): 597 -> (local): (0, 2) at time 25
[DBG]  Agent 56 | Start (global): 660 -> (local): (2, 1) at time 20 | Goal (global): 597 -> (local): (0, 2) at time 23
[DBG]  Agent 74 | Start (global): 659 -> (local): (2, 0) at time 20 | Goal (global): 597 -> (local): (0, 2) at time 24
[DBG]  Agent 79 | Start (global): 628 -> (local): (1, 1) at time 20 | Goal (global): 597 -> (local): (0, 2) at time 22
[DBG]  [REPAIR] SAT destroy operator called.
[DBG]  [REPAIR] SAT operator â€“ launching subproblem FOR OPTIMIZATION.
[DBG]  Creating local paths (sx, sy) in the submap for T_sync = 20
[DBG]    Agent 11 (global paths from T=20 to 24) has local path: (4,2) (4,1) (3,1) (3,0) (2,0) 
[DBG]    Agent 28 (global paths from T=20 to 39) has local path: (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,1) (2,1) (3,1) (4,1) (4,2) (4,3) (4,4) 
[DBG]    Agent 30 (global paths from T=20 to 25) has local path: (4,1) (3,1) (2,1) (1,1) (1,2) (0,2) 
[DBG]    Agent 56 (global paths from T=20 to 23) has local path: (2,1) (1,1) (0,1) (0,2) 
[DBG]    Agent 74 (global paths from T=20 to 24) has local path: (2,0) (1,0) (1,1) (1,2) (0,2) 
[DBG]    Agent 79 (global paths from T=20 to 22) has local path: (1,1) (1,2) (0,2) 
[DBG]  Checking input data for SAT solver:
[DBG]    - Number of agents to replan: 6
[DBG]  Agent 11 has the original local path length: 5 => Start (4,2), Goal (2,0)
[DBG]  Agent 28 has the original local path length: 20 => Start (2,2), Goal (4,4)
[DBG]  Agent 30 has the original local path length: 6 => Start (4,1), Goal (0,2)
[DBG]  Agent 56 has the original local path length: 4 => Start (2,1), Goal (0,2)
[DBG]  Agent 74 has the original local path length: 5 => Start (2,0), Goal (0,2)
[DBG]  Agent 79 has the original local path length: 3 => Start (1,1), Goal (0,2)
[DBG]  Start position: (4, 2), (2, 2), (4, 1), (2, 1), (2, 0), (1, 1), 
[DBG]  Goal position: (2, 0), (4, 4), (0, 2), (0, 2), (0, 2), (0, 2), 
[DBG]  SAT instance and solver created.
Currently solving
Instance name: scen
Map name: map
Encoding used: disappear_at_goal
SAT solver used: Kissat
Optimizing function: sum of costs
Number of agents: 6
Mks LB: 7
SoC LB: 30
Delta: 0
Remaining time: 300000 [ms]

[STAT] Solver returned: -1
[DBG]  SAT solver failed.
[STAT] SAT solver failed to find a valid solution.
[DBG]  ====================
[DBG]  SAT destroy operator called.
[DBG]  SAT heuristic: 2
[DBG]  key_agent_id: 28
[DBG]  key_agent_id global path length: 46
[DBG]  Submap content (global positions):
[DBG]  595 596 597 598 599 
[DBG]  627 628 629 630 631 
[DBG]  659 660 661 662 663 
[DBG]  691 692 693 694 695 
[DBG]  723 724 725 726 727 
[DBG]  Map content with agents and obstacles:
[DBG]  X . . X . 
[DBG]  . . . X . 
[DBG]  . A A X X 
[DBG]  A A X X X 
[DBG]  X . . . . 
[DBG]  content of the map structure that we pass to the SAT solver:
[DBG]  -1  1  1  -1  1  
[DBG]  1  1  1  -1  1  
[DBG]  1  1  1  -1  -1  
[DBG]  1  1  -1  -1  -1  
[DBG]  -1  1  1  1  1  
[DBG]  Identifying agents in a submap for rescheduling (when key_agent is there at the time 32):
[DBG]  Agent 26 found intervals in the sub-map:
[DBG]   [30..35]
[DBG]  Agent 26 (interval in submap: [30..35]) contains time 32, added to replan.
[DBG]  Agent 28 found intervals in the sub-map:
[DBG]   [0..39] [45..45]
[DBG]  Agent 28 (interval in submap: [0..39]) contains time 32, added to replan.
[DBG]  Agent 45 found intervals in the sub-map:
[DBG]   [28..33]
[DBG]  Agent 45 (interval in submap: [28..33]) contains time 32, added to replan.
[DBG]  Agent 53 found intervals in the sub-map:
[DBG]   [29..34]
[DBG]  Agent 53 (interval in submap: [29..34]) contains time 32, added to replan.
[DBG]  Agent 148 found intervals in the sub-map:
[DBG]   [39..41]
[DBG]  Agent 148 is not in sub-map at time 32 (intervals: 
[DBG]  [39..41] )
[DBG]  Agent 26 | Start (global): 691 -> (local): (3, 0) at time 32 | Goal (global): 724 -> (local): (4, 1) at time 35
[DBG]  Agent 28 | Start (global): 661 -> (local): (2, 2) at time 32 | Goal (global): 727 -> (local): (4, 4) at time 39
[DBG]  Agent 45 | Start (global): 692 -> (local): (3, 1) at time 32 | Goal (global): 724 -> (local): (4, 1) at time 33
[DBG]  Agent 53 | Start (global): 660 -> (local): (2, 1) at time 32 | Goal (global): 724 -> (local): (4, 1) at time 34
[DBG]  [REPAIR] SAT destroy operator called.
[DBG]  [REPAIR] SAT operator â€“ launching subproblem FOR OPTIMIZATION.
[DBG]  Creating local paths (sx, sy) in the submap for T_sync = 32
[DBG]    Agent 26 (global paths from T=32 to 35) has local path: (3,0) (3,0) (3,1) (4,1) 
[DBG]    Agent 28 (global paths from T=32 to 39) has local path: (2,2) (2,1) (2,1) (3,1) (4,1) (4,2) (4,3) (4,4) 
[DBG]    Agent 45 (global paths from T=32 to 33) has local path: (3,1) (4,1) 
[DBG]    Agent 53 (global paths from T=32 to 34) has local path: (2,1) (3,1) (4,1) 
[DBG]  Checking input data for SAT solver:
[DBG]    - Number of agents to replan: 4
[DBG]  Agent 26 has the original local path length: 4 => Start (3,0), Goal (4,1)
[DBG]  Agent 28 has the original local path length: 8 => Start (2,2), Goal (4,4)
[DBG]  Agent 45 has the original local path length: 2 => Start (3,1), Goal (4,1)
[DBG]  Agent 53 has the original local path length: 3 => Start (2,1), Goal (4,1)
[DBG]  Start position: (3, 0), (2, 2), (3, 1), (2, 1), 
[DBG]  Goal position: (4, 1), (4, 4), (4, 1), (4, 1), 
[DBG]  SAT instance and solver created.
Currently solving
Instance name: scen
Map name: map
Encoding used: disappear_at_goal
SAT solver used: Kissat
Optimizing function: sum of costs
Number of agents: 4
Mks LB: 7
SoC LB: 15
Delta: 0
Remaining time: 300000 [ms]

[STAT] Solver returned: -1
[DBG]  SAT solver failed.
[STAT] SAT solver failed to find a valid solution.
[DBG]  ====================
[DBG]  SAT destroy operator called.
[DBG]  SAT heuristic: 2
[DBG]  key_agent_id: 28
[DBG]  key_agent_id global path length: 46
[DBG]  Submap content (global positions):
[DBG]  595 596 597 598 599 
[DBG]  627 628 629 630 631 
[DBG]  659 660 661 662 663 
[DBG]  691 692 693 694 695 
[DBG]  723 724 725 726 727 
[DBG]  Map content with agents and obstacles:
[DBG]  X . . X . 
[DBG]  . . . X . 
[DBG]  . . A X X 
[DBG]  A . X X X 
[DBG]  X . . A . 
[DBG]  content of the map structure that we pass to the SAT solver:
[DBG]  -1  1  1  -1  1  
[DBG]  1  1  1  -1  1  
[DBG]  1  1  1  -1  -1  
[DBG]  1  1  -1  -1  -1  
[DBG]  -1  1  1  1  1  
[DBG]  Identifying agents in a submap for rescheduling (when key_agent is there at the time 3):
[DBG]  Agent 7 found intervals in the sub-map:
[DBG]   [1..4]
[DBG]  Agent 7 (interval in submap: [1..4]) contains time 3, added to replan.
[DBG]  Agent 28 found intervals in the sub-map:
[DBG]   [0..39] [45..45]
[DBG]  Agent 28 (interval in submap: [0..39]) contains time 3, added to replan.
[DBG]  Agent 108 found intervals in the sub-map:
[DBG]   [0..7]
[DBG]  Agent 108 (interval in submap: [0..7]) contains time 3, added to replan.
[DBG]  Agent 7 | Start (global): 726 -> (local): (4, 3) at time 3 | Goal (global): 727 -> (local): (4, 4) at time 4
[DBG]  Agent 28 | Start (global): 661 -> (local): (2, 2) at time 3 | Goal (global): 727 -> (local): (4, 4) at time 39
[DBG]  Agent 108 | Start (global): 691 -> (local): (3, 0) at time 3 | Goal (global): 724 -> (local): (4, 1) at time 7
[DBG]  [REPAIR] SAT destroy operator called.
[DBG]  [REPAIR] SAT operator â€“ launching subproblem FOR OPTIMIZATION.
[DBG]  Creating local paths (sx, sy) in the submap for T_sync = 3
[DBG]    Agent 7 (global paths from T=3 to 4) has local path: (4,3) (4,4) 
[DBG]    Agent 28 (global paths from T=3 to 39) has local path: (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,1) (2,1) (3,1) (4,1) (4,2) (4,3) (4,4) 
[DBG]    Agent 108 (global paths from T=3 to 7) has local path: (3,0) (3,0) (3,0) (3,1) (4,1) 
[DBG]  Checking input data for SAT solver:
[DBG]    - Number of agents to replan: 3
[DBG]  Agent 7 has the original local path length: 2 => Start (4,3), Goal (4,4)
[DBG]  Agent 28 has the original local path length: 37 => Start (2,2), Goal (4,4)
[DBG]  Agent 108 has the original local path length: 5 => Start (3,0), Goal (4,1)
[DBG]  Start position: (4, 3), (2, 2), (3, 0), 
[DBG]  Goal position: (4, 4), (4, 4), (4, 1), 
[DBG]  SAT instance and solver created.
Currently solving
Instance name: scen
Map name: map
Encoding used: disappear_at_goal
SAT solver used: Kissat
Optimizing function: sum of costs
Number of agents: 3
Mks LB: 7
SoC LB: 12
Delta: 0
Remaining time: 300000 [ms]

Vertex conflict! Agents 0, 2, timestep 3, location 0
Swapping conflict! Agents 0, 2, timestep 3, edge (0,0)
Vertex conflict! Agents 0, 2, timestep 4, location 0
Swapping conflict! Agents 0, 2, timestep 4, edge (0,0)
Vertex conflict! Agents 0, 2, timestep 5, location 0
Swapping conflict! Agents 0, 2, timestep 5, edge (0,0)
Vertex conflict! Agents 0, 2, timestep 6, location 0
Found plan [agents = 3] [timesteps = 7]
Agent #0 : 14 15 0 0 0 0 0 
Agent #1 : 9 8 11 12 13 14 15 
Agent #2 : 10 11 12 0 0 0 0 

[STAT] Solver returned: 0
[DBG]  Agent (index) 7 | New local path (submap idx):
[DBG]  14 15 
[DBG]  Agent (index) 28 | New local path (submap idx):
[DBG]  9 8 11 12 13 14 15 
[DBG]  Agent (index) 108 | New local path (submap idx):
[DBG]  10 11 12 
[DBG]  Update the agent path 7 | Original local length: 2 | New local length: 2
[DBG]  agent 7 t=0 => decoded (sx,sy)=(4,3) => global_id=726
[DBG]  agent 7 t=1 => decoded (sx,sy)=(4,4) => global_id=727
[DBG]  Complete path of agent 7:
[DBG]    Original: 756 724 725 726 727 728 729 761 793 792 792 792 824 856 856 856 856 888 920 921 
[DBG]    New:     756 724 725 726 727 728 729 761 793 792 792 792 824 856 856 856 856 888 920 921 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 756 724 725 
[DBG]    Local path (in submap): 726 727 
[DBG]    Suffix (out of submap): 728 729 761 793 792 792 792 824 856 856 856 856 888 920 921 
[DBG]  Original agent path length 7 je: 20
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 0: 756, 724, 725, 726, 727, 728, 729, 761, 793, 792, 792, 792, 824, 856, 856, 856, 856, 888, 920, 921, 
[DBG]  Path for agent 7 updated, resulting length: 20
[DBG]  Update the agent path 28 | Original local length: 37 | New local length: 7
[DBG]  agent 28 t=0 => decoded (sx,sy)=(2,2) => global_id=661
[DBG]  agent 28 t=1 => decoded (sx,sy)=(2,1) => global_id=660
[DBG]  agent 28 t=2 => decoded (sx,sy)=(3,1) => global_id=692
[DBG]  agent 28 t=3 => decoded (sx,sy)=(4,1) => global_id=724
[DBG]  agent 28 t=4 => decoded (sx,sy)=(4,2) => global_id=725
[DBG]  agent 28 t=5 => decoded (sx,sy)=(4,3) => global_id=726
[DBG]  agent 28 t=6 => decoded (sx,sy)=(4,4) => global_id=727
[DBG]  Complete path of agent 28:
[DBG]    Original: 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 660 660 692 724 725 726 727 728 728 728 728 728 727 
[DBG]    New:     661 661 661 661 660 692 724 725 726 727 728 728 728 728 728 727 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 661 661 661 
[DBG]    Local path (in submap): 661 660 692 724 725 726 727 728 728 728 728 728 727 
[DBG]    Suffix (out of submap): 
[DBG]  Original agent path length 28 je: 46
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 1: 661, 661, 661, 661, 660, 692, 724, 725, 726, 727, 728, 728, 728, 728, 728, 727, 
[DBG]  Path for agent 28 updated, resulting length: 16
[DBG]  Update the agent path 108 | Original local length: 5 | New local length: 3
[DBG]  agent 108 t=0 => decoded (sx,sy)=(3,0) => global_id=691
[DBG]  agent 108 t=1 => decoded (sx,sy)=(3,1) => global_id=692
[DBG]  agent 108 t=2 => decoded (sx,sy)=(4,1) => global_id=724
[DBG]  Complete path of agent 108:
[DBG]    Original: 628 627 659 691 691 691 692 724 756 788 820 821 822 854 886 887 888 889 921 953 954 955 956 957 989 1021 
[DBG]    New:     628 627 659 691 692 724 756 788 820 821 822 854 886 887 888 889 921 953 954 955 956 957 989 1021 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 628 627 659 
[DBG]    Local path (in submap): 691 692 724 756 788 
[DBG]    Suffix (out of submap): 820 821 822 854 886 887 888 889 921 953 954 955 956 957 989 1021 
[DBG]  Original agent path length 108 je: 26
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 2: 628, 627, 659, 691, 692, 724, 756, 788, 820, 821, 822, 854, 886, 887, 888, 889, 921, 953, 954, 955, 956, 957, 989, 1021, 
[DBG]  Path for agent 108 updated, resulting length: 24
[DBG]  Paths successfully updated.
[DBG]  (LNS.cpp) New path for agent 7: 
[DBG]  756, 724, 725, 726, 727, 728, 729, 761, 793, 792, 792, 792, 824, 856, 856, 856, 856, 888, 920, 921, 
[DBG]  (LNS.cpp) New path for agent 28: 
[DBG]  661, 661, 661, 661, 660, 692, 724, 725, 726, 727, 728, 728, 728, 728, 728, 727, 
[DBG]  (LNS.cpp) New path for agent 108: 
[DBG]  628, 627, 659, 691, 692, 724, 756, 788, 820, 821, 822, 854, 886, 887, 888, 889, 921, 953, 954, 955, 956, 957, 989, 1021, 
[DBG]  Delta value: 0.359551
[DBG]  Rewarding metric index = 0
[DBG]  component_weights = {0.308679, 0.218318, 0.211778, 0.261225}
[DBG]  opSuccess value: 1
[STAT] neighbor.sum_of_costs before recomputation: 57
[STAT] neighbor.old_sum_of_costs before recomputation: 89
[STAT] sum_of_costs before recomputation: 4525
[DBG]  Validate solution immediately after SAT success.
[WARNING] Problem after SAT: Target conflict: agent 42 (len 45) traverses target of agent 28 (len 15) at location 727 at timestep 44
[DBG]  [DEBUG] Attempting immediate repair via init_lns because problem occurred after SAT (should be applied only for conflicts...).
[DBG]  [DEBUG] Passing 150 agents to init_lns (skip=true).
[DBG]  [DEBUG] path_table contents for selected agents (neighbor.agents):
[DBG]    Agent 7 => controlling path length=20
[DBG]    Agent 28 => controlling path length=16
[DBG]    Agent 108 => controlling path length=24
[DBG]  hodnota skip_initial_solution=1
[DBG]  We skip initialSolution => call buildCollisionData()
[DBG]  buildCollisionData() called â€“ skip_initial_solution case.
[DBG]  Agents.size()=150, collision_graph.size()=150
[DBG]  agent 28 => updateCollidingPairs => foundCollision
[DBG]  agent 42 => updateCollidingPairs => foundCollision
[DBG]  agent 47 => updateCollidingPairs => foundCollision
[DBG]  agent 108 => updateCollidingPairs => foundCollision
[DBG]  Conflicting agent pairs:
[DBG]  agent 28 is in conflict with agent 42
[DBG]  agent 47 is in conflict with agent 108
[DBG]  buildCollisionData() => sum_of_costs=4493, num_of_colliding_pairs=2
[DBG]  buildCollisionData done => sum_of_costs=4493, num_of_colliding_pairs=2
[DBG]  sum_of_cost hodnota: 4493
[DBG]  After skip/init build => iteration_stats.back(): sum_of_costs=4493, collisions=2
[DEBUG] Using default neighbor generation strategy for conflicts: 2
[DEBUG] Using default neighbor generation strategy for conflicts: 0
[DEBUG] Using default neighbor generation strategy for conflicts: 1
[DEBUG] Using default neighbor generation strategy for conflicts: 0
	InitLNS(PP): runtime = 0.00781396, iterations = 5, colliding pairs = 0, initial colliding pairs = 2, solution cost = 4496, initial solution cost = 4493, failed iterations = 0
[DBG]  [DEBUG] init_lns->sum_of_costs after init_lns->run: 4496
[DBG]  [DEBUG] sum_of_costs after assignment from init_lns->run: 4496
[DBG]  Recomputing sum_of_cost by dividing neighbor.sum_of_costs and neighbor.old_sum_of_costs
[STAT] sum_of_costs after recomputation: 4496
[STAT] Iteration 9
[DBG]  Using SAT operator (destroy+repair SAT).
[DBG]  ====================
[DBG]  SAT destroy operator called.
[DBG]  SAT heuristic: 2
[DBG]  key_agent_id: 28
[DBG]  key_agent_id global path length: 46
[DBG]  Submap content (global positions):
[DBG]  626 627 628 629 630 
[DBG]  658 659 660 661 662 
[DBG]  690 691 692 693 694 
[DBG]  722 723 724 725 726 
[DBG]  754 755 756 757 758 
[DBG]  Map content with agents and obstacles:
[DBG]  X A . . X 
[DBG]  . . . . X 
[DBG]  X . A X X 
[DBG]  . X A . . 
[DBG]  X . . . X 
[DBG]  content of the map structure that we pass to the SAT solver:
[DBG]  -1  1  1  1  -1  
[DBG]  1  1  1  1  -1  
[DBG]  -1  1  1  -1  -1  
[DBG]  1  -1  1  1  1  
[DBG]  -1  1  1  1  -1  
[DBG]  Identifying agents in a submap for rescheduling (when key_agent is there at the time 41):
[DBG]  Agent 28 found intervals in the sub-map:
[DBG]   [0..44]
[DBG]  Agent 28 (interval in submap: [0..44]) contains time 41, added to replan.
[DBG]  Agent 42 found intervals in the sub-map:
[DBG]   [37..43]
[DBG]  Agent 42 (interval in submap: [37..43]) contains time 41, added to replan.
[DBG]  Agent 55 found intervals in the sub-map:
[DBG]   [40..44]
[DBG]  Agent 55 (interval in submap: [40..44]) contains time 41, added to replan.
[DBG]  Agent 148 found intervals in the sub-map:
[DBG]   [33..40]
[DBG]  Agent 148 is not in sub-map at time 41 (intervals: 
[DBG]  [33..40] )
[DBG]  Agent 28 | Start (global): 692 -> (local): (2, 2) at time 41 | Goal (global): 726 -> (local): (3, 4) at time 44
[DBG]  Agent 42 | Start (global): 724 -> (local): (3, 2) at time 41 | Goal (global): 726 -> (local): (3, 4) at time 43
[DBG]  Agent 55 | Start (global): 627 -> (local): (0, 1) at time 41 | Goal (global): 692 -> (local): (2, 2) at time 44
[DBG]  [REPAIR] SAT destroy operator called.
[DBG]  [REPAIR] SAT operator â€“ launching subproblem FOR OPTIMIZATION.
[DBG]  Creating local paths (sx, sy) in the submap for T_sync = 41
[DBG]    Agent 28 (global paths from T=41 to 44) has local path: (2,2) (3,2) (3,3) (3,4) 
[DBG]    Agent 42 (global paths from T=41 to 43) has local path: (3,2) (3,3) (3,4) 
[DBG]    Agent 55 (global paths from T=41 to 44) has local path: (0,1) (1,1) (2,1) (2,2) 
[DBG]  Checking input data for SAT solver:
[DBG]    - Number of agents to replan: 3
[DBG]  Agent 28 has the original local path length: 4 => Start (2,2), Goal (3,4)
[DBG]  Agent 42 has the original local path length: 3 => Start (3,2), Goal (3,4)
[DBG]  Agent 55 has the original local path length: 4 => Start (0,1), Goal (2,2)
[DBG]  Start position: (2, 2), (3, 2), (0, 1), 
[DBG]  Goal position: (3, 4), (3, 4), (2, 2), 
[DBG]  SAT instance and solver created.
Currently solving
Instance name: scen
Map name: map
Encoding used: disappear_at_goal
SAT solver used: Kissat
Optimizing function: sum of costs
Number of agents: 3
Mks LB: 4
SoC LB: 11
Delta: 0
Remaining time: 300000 [ms]

Found plan [agents = 3] [timesteps = 4]
Agent #0 : 8 10 11 12 
Agent #1 : 10 11 12 0 
Agent #2 : 0 4 7 8 

[STAT] Solver returned: 0
[DBG]  Agent (index) 28 | New local path (submap idx):
[DBG]  8 10 11 12 
[DBG]  Agent (index) 42 | New local path (submap idx):
[DBG]  10 11 12 
[DBG]  Agent (index) 55 | New local path (submap idx):
[DBG]  0 4 7 8 
[DBG]  Update the agent path 28 | Original local length: 4 | New local length: 4
[DBG]  agent 28 t=0 => decoded (sx,sy)=(2,2) => global_id=692
[DBG]  agent 28 t=1 => decoded (sx,sy)=(3,2) => global_id=724
[DBG]  agent 28 t=2 => decoded (sx,sy)=(3,3) => global_id=725
[DBG]  agent 28 t=3 => decoded (sx,sy)=(3,4) => global_id=726
[DBG]  Complete path of agent 28:
[DBG]    Original: 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 660 660 660 660 660 692 691 691 692 724 725 726 727 
[DBG]    New:     661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 660 660 660 660 660 692 691 691 692 724 725 726 727 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 660 660 660 660 660 692 691 691 
[DBG]    Local path (in submap): 692 724 725 726 
[DBG]    Suffix (out of submap): 727 
[DBG]  Original agent path length 28 je: 46
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 0: 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 660, 660, 660, 660, 660, 692, 691, 691, 692, 724, 725, 726, 727, 
[DBG]  Path for agent 28 updated, resulting length: 46
[DBG]  Update the agent path 42 | Original local length: 3 | New local length: 3
[DBG]  agent 42 t=0 => decoded (sx,sy)=(3,2) => global_id=724
[DBG]  agent 42 t=1 => decoded (sx,sy)=(3,3) => global_id=725
[DBG]  agent 42 t=2 => decoded (sx,sy)=(3,4) => global_id=726
[DBG]  Complete path of agent 42:
[DBG]    Original: 224 256 257 289 321 353 354 354 355 387 419 420 421 422 423 424 425 426 426 427 428 429 430 431 432 464 465 466 467 468 469 501 533 534 533 565 597 629 628 660 692 724 725 726 727 759 
[DBG]    New:     224 256 257 289 321 353 354 354 355 387 419 420 421 422 423 424 425 426 426 427 428 429 430 431 432 464 465 466 467 468 469 501 533 534 533 565 597 629 628 660 692 724 725 726 727 759 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 224 256 257 289 321 353 354 354 355 387 419 420 421 422 423 424 425 426 426 427 428 429 430 431 432 464 465 466 467 468 469 501 533 534 533 565 597 629 628 660 692 
[DBG]    Local path (in submap): 724 725 726 
[DBG]    Suffix (out of submap): 727 759 
[DBG]  Original agent path length 42 je: 46
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 1: 224, 256, 257, 289, 321, 353, 354, 354, 355, 387, 419, 420, 421, 422, 423, 424, 425, 426, 426, 427, 428, 429, 430, 431, 432, 464, 465, 466, 467, 468, 469, 501, 533, 534, 533, 565, 597, 629, 628, 660, 692, 724, 725, 726, 727, 759, 
[DBG]  Path for agent 42 updated, resulting length: 46
[DBG]  Update the agent path 55 | Original local length: 4 | New local length: 4
[DBG]  agent 55 t=0 => decoded (sx,sy)=(0,1) => global_id=627
[DBG]  agent 55 t=1 => decoded (sx,sy)=(1,1) => global_id=659
[DBG]  agent 55 t=2 => decoded (sx,sy)=(2,1) => global_id=691
[DBG]  agent 55 t=3 => decoded (sx,sy)=(2,2) => global_id=692
[DBG]  Complete path of agent 55:
[DBG]    Original: 34 66 98 99 131 163 164 196 228 260 261 293 325 326 327 328 360 361 393 425 426 427 428 429 430 462 463 464 465 466 467 468 469 469 469 501 533 565 597 596 628 627 659 691 692 
[DBG]    New:     34 66 98 99 131 163 164 196 228 260 261 293 325 326 327 328 360 361 393 425 426 427 428 429 430 462 463 464 465 466 467 468 469 469 469 501 533 565 597 596 628 627 659 691 692 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 34 66 98 99 131 163 164 196 228 260 261 293 325 326 327 328 360 361 393 425 426 427 428 429 430 462 463 464 465 466 467 468 469 469 469 501 533 565 597 596 628 
[DBG]    Local path (in submap): 627 659 691 692 
[DBG]    Suffix (out of submap): 
[DBG]  Original agent path length 55 je: 45
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 2: 34, 66, 98, 99, 131, 163, 164, 196, 228, 260, 261, 293, 325, 326, 327, 328, 360, 361, 393, 425, 426, 427, 428, 429, 430, 462, 463, 464, 465, 466, 467, 468, 469, 469, 469, 501, 533, 565, 597, 596, 628, 627, 659, 691, 692, 
[DBG]  Path for agent 55 updated, resulting length: 45
[DBG]  Paths successfully updated.
[DBG]  (LNS.cpp) New path for agent 28: 
[DBG]  661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 660, 660, 660, 660, 660, 692, 691, 691, 692, 724, 725, 726, 727, 
[DBG]  (LNS.cpp) New path for agent 42: 
[DBG]  224, 256, 257, 289, 321, 353, 354, 354, 355, 387, 419, 420, 421, 422, 423, 424, 425, 426, 426, 427, 428, 429, 430, 431, 432, 464, 465, 466, 467, 468, 469, 501, 533, 534, 533, 565, 597, 629, 628, 660, 692, 724, 725, 726, 727, 759, 
[DBG]  (LNS.cpp) New path for agent 55: 
[DBG]  34, 66, 98, 99, 131, 163, 164, 196, 228, 260, 261, 293, 325, 326, 327, 328, 360, 361, 393, 425, 426, 427, 428, 429, 430, 462, 463, 464, 465, 466, 467, 468, 469, 469, 469, 501, 533, 565, 597, 596, 628, 627, 659, 691, 692, 
[DBG]  Delta value: 0
[DBG]  Rewarding metric index = 2
[DBG]  component_weights = {0.305276, 0.215912, 0.220467, 0.258345}
[DBG]  opSuccess value: 1
[STAT] neighbor.sum_of_costs before recomputation: 134
[STAT] neighbor.old_sum_of_costs before recomputation: 134
[STAT] sum_of_costs before recomputation: 4496
[DBG]  Validate solution immediately after SAT success.
[DBG]  No problems after SAT replan.
[DBG]  Recomputing sum_of_cost by dividing neighbor.sum_of_costs and neighbor.old_sum_of_costs
[STAT] sum_of_costs after recomputation: 4496
[STAT] Iteration 10
[DBG]  Using SAT operator (destroy+repair SAT).
[DBG]  ====================
[DBG]  SAT destroy operator called.
[DBG]  SAT heuristic: 2
[DBG]  key_agent_id: 28
[DBG]  key_agent_id global path length: 46
[DBG]  Submap content (global positions):
[DBG]  595 596 597 598 599 
[DBG]  627 628 629 630 631 
[DBG]  659 660 661 662 663 
[DBG]  691 692 693 694 695 
[DBG]  723 724 725 726 727 
[DBG]  Map content with agents and obstacles:
[DBG]  X . . X . 
[DBG]  . . . X . 
[DBG]  . . A X X 
[DBG]  . . X X X 
[DBG]  X A A . . 
[DBG]  content of the map structure that we pass to the SAT solver:
[DBG]  -1  1  1  -1  1  
[DBG]  1  1  1  -1  1  
[DBG]  1  1  1  -1  -1  
[DBG]  1  1  -1  -1  -1  
[DBG]  -1  1  1  1  1  
[DBG]  Identifying agents in a submap for rescheduling (when key_agent is there at the time 5):
[DBG]  Agent 28 found intervals in the sub-map:
[DBG]   [0..45]
[DBG]  Agent 28 (interval in submap: [0..45]) contains time 5, added to replan.
[DBG]  Agent 46 found intervals in the sub-map:
[DBG]   [4..7]
[DBG]  Agent 46 (interval in submap: [4..7]) contains time 5, added to replan.
[DBG]  Agent 108 found intervals in the sub-map:
[DBG]   [0..5]
[DBG]  Agent 108 (interval in submap: [0..5]) contains time 5, added to replan.
[DBG]  Agent 28 | Start (global): 661 -> (local): (2, 2) at time 5 | Goal (global): 727 -> (local): (4, 4) at time 45
[DBG]  Agent 46 | Start (global): 725 -> (local): (4, 2) at time 5 | Goal (global): 727 -> (local): (4, 4) at time 7
[DBG]  Agent 108 | Start (global): 724 -> (local): (4, 1) at time 5 | Goal (global): 724 -> (local): (4, 1) at time 5
[DBG]  [REPAIR] SAT destroy operator called.
[DBG]  [REPAIR] SAT operator â€“ launching subproblem FOR OPTIMIZATION.
[DBG]  Creating local paths (sx, sy) in the submap for T_sync = 5
[DBG]    Agent 28 (global paths from T=5 to 45) has local path: (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,1) (2,1) (2,1) (2,1) (2,1) (3,1) (3,0) (3,0) (3,1) (4,1) (4,2) (4,3) (4,4) 
[DBG]    Agent 46 (global paths from T=5 to 7) has local path: (4,2) (4,3) (4,4) 
[DBG]    Agent 108 (global paths from T=5 to 5) has local path: (4,1) 
[DBG]  Checking input data for SAT solver:
[DBG]    - Number of agents to replan: 3
[DBG]  Agent 28 has the original local path length: 41 => Start (2,2), Goal (4,4)
[DBG]  Agent 46 has the original local path length: 3 => Start (4,2), Goal (4,4)
[DBG]  Agent 108 has the original local path length: 1 => Start (4,1), Goal (4,1)
[DBG]  Start position: (2, 2), (4, 2), (4, 1), 
[DBG]  Goal position: (4, 4), (4, 4), (4, 1), 
[DBG]  SAT instance and solver created.
Currently solving
Instance name: scen
Map name: map
Encoding used: disappear_at_goal
SAT solver used: Kissat
Optimizing function: sum of costs
Number of agents: 3
Mks LB: 7
SoC LB: 11
Delta: 0
Remaining time: 300000 [ms]

Vertex conflict! Agents 1, 2, timestep 3, location 0
Swapping conflict! Agents 1, 2, timestep 3, edge (0,0)
Vertex conflict! Agents 1, 2, timestep 4, location 0
Swapping conflict! Agents 1, 2, timestep 4, edge (0,0)
Vertex conflict! Agents 1, 2, timestep 5, location 0
Swapping conflict! Agents 1, 2, timestep 5, edge (0,0)
Vertex conflict! Agents 1, 2, timestep 6, location 0
Found plan [agents = 3] [timesteps = 7]
Agent #0 : 9 8 11 12 13 14 15 
Agent #1 : 13 14 15 0 0 0 0 
Agent #2 : 12 0 0 0 0 0 0 

[STAT] Solver returned: 0
[DBG]  Agent (index) 28 | New local path (submap idx):
[DBG]  9 8 11 12 13 14 15 
[DBG]  Agent (index) 46 | New local path (submap idx):
[DBG]  13 14 15 
[DBG]  Agent (index) 108 | New local path (submap idx):
[DBG]  12 
[DBG]  Update the agent path 28 | Original local length: 41 | New local length: 7
[DBG]  agent 28 t=0 => decoded (sx,sy)=(2,2) => global_id=661
[DBG]  agent 28 t=1 => decoded (sx,sy)=(2,1) => global_id=660
[DBG]  agent 28 t=2 => decoded (sx,sy)=(3,1) => global_id=692
[DBG]  agent 28 t=3 => decoded (sx,sy)=(4,1) => global_id=724
[DBG]  agent 28 t=4 => decoded (sx,sy)=(4,2) => global_id=725
[DBG]  agent 28 t=5 => decoded (sx,sy)=(4,3) => global_id=726
[DBG]  agent 28 t=6 => decoded (sx,sy)=(4,4) => global_id=727
[DBG]  Complete path of agent 28:
[DBG]    Original: 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 660 660 660 660 660 692 691 691 692 724 725 726 727 
[DBG]    New:     661 661 661 661 661 661 660 692 724 725 726 727 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 661 661 661 661 661 
[DBG]    Local path (in submap): 661 660 692 724 725 726 727 
[DBG]    Suffix (out of submap): 
[DBG]  Original agent path length 28 je: 46
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 0: 661, 661, 661, 661, 661, 661, 660, 692, 724, 725, 726, 727, 
[DBG]  Path for agent 28 updated, resulting length: 12
[DBG]  Update the agent path 46 | Original local length: 3 | New local length: 3
[DBG]  agent 46 t=0 => decoded (sx,sy)=(4,2) => global_id=725
[DBG]  agent 46 t=1 => decoded (sx,sy)=(4,3) => global_id=726
[DBG]  agent 46 t=2 => decoded (sx,sy)=(4,4) => global_id=727
[DBG]  Complete path of agent 46:
[DBG]    Original: 786 787 788 756 724 725 726 727 728 696 664 632 633 601 569 570 538 539 540 508 509 477 445 413 381 349 317 285 284 252 
[DBG]    New:     786 787 788 756 724 725 726 727 728 696 664 632 633 601 569 570 538 539 540 508 509 477 445 413 381 349 317 285 284 252 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 786 787 788 756 724 
[DBG]    Local path (in submap): 725 726 727 
[DBG]    Suffix (out of submap): 728 696 664 632 633 601 569 570 538 539 540 508 509 477 445 413 381 349 317 285 284 252 
[DBG]  Original agent path length 46 je: 30
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 1: 786, 787, 788, 756, 724, 725, 726, 727, 728, 696, 664, 632, 633, 601, 569, 570, 538, 539, 540, 508, 509, 477, 445, 413, 381, 349, 317, 285, 284, 252, 
[DBG]  Path for agent 46 updated, resulting length: 30
[DBG]  Update the agent path 108 | Original local length: 1 | New local length: 1
[DBG]  agent 108 t=0 => decoded (sx,sy)=(4,1) => global_id=724
[DBG]  Complete path of agent 108:
[DBG]    Original: 628 627 659 691 692 724 756 788 820 821 822 854 886 887 888 889 921 953 954 955 956 957 989 1021 
[DBG]    New:     628 627 659 691 692 724 756 788 820 821 822 854 886 887 888 889 921 953 954 955 956 957 989 1021 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 628 627 659 691 692 
[DBG]    Local path (in submap): 724 
[DBG]    Suffix (out of submap): 756 788 820 821 822 854 886 887 888 889 921 953 954 955 956 957 989 1021 
[DBG]  Original agent path length 108 je: 24
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 2: 628, 627, 659, 691, 692, 724, 756, 788, 820, 821, 822, 854, 886, 887, 888, 889, 921, 953, 954, 955, 956, 957, 989, 1021, 
[DBG]  Path for agent 108 updated, resulting length: 24
[DBG]  Paths successfully updated.
[DBG]  (LNS.cpp) New path for agent 28: 
[DBG]  661, 661, 661, 661, 661, 661, 660, 692, 724, 725, 726, 727, 
[DBG]  (LNS.cpp) New path for agent 46: 
[DBG]  786, 787, 788, 756, 724, 725, 726, 727, 728, 696, 664, 632, 633, 601, 569, 570, 538, 539, 540, 508, 509, 477, 445, 413, 381, 349, 317, 285, 284, 252, 
[DBG]  (LNS.cpp) New path for agent 108: 
[DBG]  628, 627, 659, 691, 692, 724, 756, 788, 820, 821, 822, 854, 886, 887, 888, 889, 921, 953, 954, 955, 956, 957, 989, 1021, 
[DBG]  Delta value: 0.350515
[DBG]  Rewarding metric index = 3
[DBG]  component_weights = {0.275292, 0.194705, 0.198813, 0.33119}
[DBG]  opSuccess value: 1
[STAT] neighbor.sum_of_costs before recomputation: 63
[STAT] neighbor.old_sum_of_costs before recomputation: 97
[STAT] sum_of_costs before recomputation: 4496
[DBG]  Validate solution immediately after SAT success.
[WARNING] Problem after SAT: Target conflict: agent 1 (len 14) traverses target of agent 28 (len 11) at location 727 at timestep 13
[DBG]  [DEBUG] Attempting immediate repair via init_lns because problem occurred after SAT (should be applied only for conflicts...).
[DBG]  [DEBUG] Passing 150 agents to init_lns (skip=true).
[DBG]  [DEBUG] path_table contents for selected agents (neighbor.agents):
[DBG]    Agent 28 => controlling path length=12
[DBG]    Agent 46 => controlling path length=30
[DBG]    Agent 108 => controlling path length=24
[DBG]  hodnota skip_initial_solution=1
[DBG]  We skip initialSolution => call buildCollisionData()
[DBG]  buildCollisionData() called â€“ skip_initial_solution case.
[DBG]  Agents.size()=150, collision_graph.size()=150
[DBG]  agent 1 => updateCollidingPairs => foundCollision
[DBG]  agent 28 => updateCollidingPairs => foundCollision
[DBG]  agent 42 => updateCollidingPairs => foundCollision
[DBG]  Conflicting agent pairs:
[DBG]  agent 1 is in conflict with agent 28
[DBG]  agent 28 is in conflict with agent 42
[DBG]  buildCollisionData() => sum_of_costs=4462, num_of_colliding_pairs=2
[DBG]  buildCollisionData done => sum_of_costs=4462, num_of_colliding_pairs=2
[DBG]  sum_of_cost hodnota: 4462
[DBG]  After skip/init build => iteration_stats.back(): sum_of_costs=4462, collisions=2
[DEBUG] Using default neighbor generation strategy for conflicts: 0
	InitLNS(PP): runtime = 0.00175871, iterations = 2, colliding pairs = 0, initial colliding pairs = 2, solution cost = 4496, initial solution cost = 4462, failed iterations = 0
[DBG]  [DEBUG] init_lns->sum_of_costs after init_lns->run: 4496
[DBG]  [DEBUG] sum_of_costs after assignment from init_lns->run: 4496
[DBG]  Recomputing sum_of_cost by dividing neighbor.sum_of_costs and neighbor.old_sum_of_costs
[STAT] sum_of_costs after recomputation: 4496
[STAT] Iteration 11
[DBG]  Using SAT operator (destroy+repair SAT).
[DBG]  ====================
[DBG]  SAT destroy operator called.
[DBG]  SAT heuristic: 2
[DBG]  key_agent_id: 28
[DBG]  key_agent_id global path length: 46
[DBG]  Submap content (global positions):
[DBG]  661 662 663 664 665 
[DBG]  693 694 695 696 697 
[DBG]  725 726 727 728 729 
[DBG]  757 758 759 760 761 
[DBG]  789 790 791 792 793 
[DBG]  Map content with agents and obstacles:
[DBG]  . X X . X 
[DBG]  X X X . . 
[DBG]  . . A . . 
[DBG]  . X A X . 
[DBG]  X . X . . 
[DBG]  content of the map structure that we pass to the SAT solver:
[DBG]  1  -1  -1  1  -1  
[DBG]  -1  -1  -1  1  1  
[DBG]  1  1  1  1  1  
[DBG]  1  -1  1  -1  1  
[DBG]  -1  1  -1  1  1  
[DBG]  Identifying agents in a submap for rescheduling (when key_agent is there at the time 45):
[DBG]  Agent 1 found intervals in the sub-map:
[DBG]   [11..14]
[DBG]  Agent 1 is not in sub-map at time 45 (intervals: 
[DBG]  [11..14] )
[DBG]  Agent 28 found intervals in the sub-map:
[DBG]   [0..39] [43..45]
[DBG]  Agent 28 (interval in submap: [43..45]) contains time 45, added to replan.
[DBG]  Agent 42 found intervals in the sub-map:
[DBG]   [42..45]
[DBG]  Agent 42 (interval in submap: [42..45]) contains time 45, added to replan.
[DBG]  Agent 28 | Start (global): 727 -> (local): (2, 2) at time 45 | Goal (global): 727 -> (local): (2, 2) at time 45
[DBG]  Agent 42 | Start (global): 759 -> (local): (3, 2) at time 45 | Goal (global): 759 -> (local): (3, 2) at time 45
[DBG]  [REPAIR] SAT destroy operator called.
[DBG]  [REPAIR] SAT operator â€“ launching subproblem FOR OPTIMIZATION.
[DBG]  Creating local paths (sx, sy) in the submap for T_sync = 45
[DBG]    Agent 28 (global paths from T=45 to 45) has local path: (2,2) 
[DBG]    Agent 42 (global paths from T=45 to 45) has local path: (3,2) 
[DBG]  Checking input data for SAT solver:
[DBG]    - Number of agents to replan: 2
[DBG]  Agent 28 has the original local path length: 1 => Start (2,2), Goal (2,2)
[DBG]  Agent 42 has the original local path length: 1 => Start (3,2), Goal (3,2)
[DBG]  Start position: (2, 2), (3, 2), 
[DBG]  Goal position: (2, 2), (3, 2), 
[DBG]  SAT instance and solver created.
Currently solving
Instance name: scen
Map name: map
Encoding used: disappear_at_goal
SAT solver used: Kissat
Optimizing function: sum of costs
Number of agents: 2
Mks LB: 1
SoC LB: 2
Delta: 0
Remaining time: 300000 [ms]

Found plan [agents = 2] [timesteps = 1]
Agent #0 : 6 
Agent #1 : 10 

[STAT] Solver returned: 0
[DBG]  Agent (index) 28 | New local path (submap idx):
[DBG]  6 
[DBG]  Agent (index) 42 | New local path (submap idx):
[DBG]  10 
[DBG]  Update the agent path 28 | Original local length: 1 | New local length: 1
[DBG]  agent 28 t=0 => decoded (sx,sy)=(2,2) => global_id=727
[DBG]  Complete path of agent 28:
[DBG]    Original: 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 660 692 724 725 726 727 
[DBG]    New:     661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 660 692 724 725 726 727 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 660 692 724 725 726 
[DBG]    Local path (in submap): 727 
[DBG]    Suffix (out of submap): 
[DBG]  Original agent path length 28 je: 46
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 0: 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 660, 692, 724, 725, 726, 727, 
[DBG]  Path for agent 28 updated, resulting length: 46
[DBG]  Update the agent path 42 | Original local length: 1 | New local length: 1
[DBG]  agent 42 t=0 => decoded (sx,sy)=(3,2) => global_id=759
[DBG]  Complete path of agent 42:
[DBG]    Original: 224 256 257 289 321 353 354 354 355 387 419 420 421 422 423 424 425 426 426 427 428 429 430 431 432 464 465 466 467 468 469 501 533 534 533 565 597 629 628 660 692 724 725 726 727 759 
[DBG]    New:     224 256 257 289 321 353 354 354 355 387 419 420 421 422 423 424 425 426 426 427 428 429 430 431 432 464 465 466 467 468 469 501 533 534 533 565 597 629 628 660 692 724 725 726 727 759 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 224 256 257 289 321 353 354 354 355 387 419 420 421 422 423 424 425 426 426 427 428 429 430 431 432 464 465 466 467 468 469 501 533 534 533 565 597 629 628 660 692 724 725 726 727 
[DBG]    Local path (in submap): 759 
[DBG]    Suffix (out of submap): 
[DBG]  Original agent path length 42 je: 46
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 1: 224, 256, 257, 289, 321, 353, 354, 354, 355, 387, 419, 420, 421, 422, 423, 424, 425, 426, 426, 427, 428, 429, 430, 431, 432, 464, 465, 466, 467, 468, 469, 501, 533, 534, 533, 565, 597, 629, 628, 660, 692, 724, 725, 726, 727, 759, 
[DBG]  Path for agent 42 updated, resulting length: 46
[DBG]  Paths successfully updated.
[DBG]  (LNS.cpp) New path for agent 28: 
[DBG]  661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 660, 692, 724, 725, 726, 727, 
[DBG]  (LNS.cpp) New path for agent 42: 
[DBG]  224, 256, 257, 289, 321, 353, 354, 354, 355, 387, 419, 420, 421, 422, 423, 424, 425, 426, 426, 427, 428, 429, 430, 431, 432, 464, 465, 466, 467, 468, 469, 501, 533, 534, 533, 565, 597, 629, 628, 660, 692, 724, 725, 726, 727, 759, 
[DBG]  Delta value: 0
[DBG]  Rewarding metric index = 3
[DBG]  component_weights = {0.270576, 0.191369, 0.195407, 0.342648}
[DBG]  opSuccess value: 1
[STAT] neighbor.sum_of_costs before recomputation: 90
[STAT] neighbor.old_sum_of_costs before recomputation: 90
[STAT] sum_of_costs before recomputation: 4496
[DBG]  Validate solution immediately after SAT success.
[DBG]  No problems after SAT replan.
[DBG]  Recomputing sum_of_cost by dividing neighbor.sum_of_costs and neighbor.old_sum_of_costs
[STAT] sum_of_costs after recomputation: 4496
[STAT] Iteration 12
[DBG]  Using SAT operator (destroy+repair SAT).
[DBG]  ====================
[DBG]  SAT destroy operator called.
[DBG]  SAT heuristic: 2
[DBG]  key_agent_id: 28
[DBG]  key_agent_id global path length: 46
[DBG]  Submap content (global positions):
[DBG]  595 596 597 598 599 
[DBG]  627 628 629 630 631 
[DBG]  659 660 661 662 663 
[DBG]  691 692 693 694 695 
[DBG]  723 724 725 726 727 
[DBG]  Map content with agents and obstacles:
[DBG]  X . . X . 
[DBG]  . . A X . 
[DBG]  . . A X X 
[DBG]  . . X X X 
[DBG]  X . . . . 
[DBG]  content of the map structure that we pass to the SAT solver:
[DBG]  -1  1  1  -1  1  
[DBG]  1  1  1  -1  1  
[DBG]  1  1  1  -1  -1  
[DBG]  1  1  -1  -1  -1  
[DBG]  -1  1  1  1  1  
[DBG]  Identifying agents in a submap for rescheduling (when key_agent is there at the time 37):
[DBG]  Agent 28 found intervals in the sub-map:
[DBG]   [0..45]
[DBG]  Agent 28 (interval in submap: [0..45]) contains time 37, added to replan.
[DBG]  Agent 42 found intervals in the sub-map:
[DBG]   [36..44]
[DBG]  Agent 42 (interval in submap: [36..44]) contains time 37, added to replan.
[DBG]  Agent 55 found intervals in the sub-map:
[DBG]   [38..42]
[DBG]  Agent 55 is not in sub-map at time 37 (intervals: 
[DBG]  [38..42] )
[DBG]  Agent 148 found intervals in the sub-map:
[DBG]   [38..42]
[DBG]  Agent 148 is not in sub-map at time 37 (intervals: 
[DBG]  [38..42] )
[DBG]  Agent 28 | Start (global): 661 -> (local): (2, 2) at time 37 | Goal (global): 727 -> (local): (4, 4) at time 45
[DBG]  Agent 42 | Start (global): 629 -> (local): (1, 2) at time 37 | Goal (global): 727 -> (local): (4, 4) at time 44
[DBG]  [REPAIR] SAT destroy operator called.
[DBG]  [REPAIR] SAT operator â€“ launching subproblem FOR OPTIMIZATION.
[DBG]  Creating local paths (sx, sy) in the submap for T_sync = 37
[DBG]    Agent 28 (global paths from T=37 to 45) has local path: (2,2) (2,2) (2,2) (2,1) (3,1) (4,1) (4,2) (4,3) (4,4) 
[DBG]    Agent 42 (global paths from T=37 to 44) has local path: (1,2) (1,1) (2,1) (3,1) (4,1) (4,2) (4,3) (4,4) 
[DBG]  Checking input data for SAT solver:
[DBG]    - Number of agents to replan: 2
[DBG]  Agent 28 has the original local path length: 9 => Start (2,2), Goal (4,4)
[DBG]  Agent 42 has the original local path length: 8 => Start (1,2), Goal (4,4)
[DBG]  Start position: (2, 2), (1, 2), 
[DBG]  Goal position: (4, 4), (4, 4), 
[DBG]  SAT instance and solver created.
Currently solving
Instance name: scen
Map name: map
Encoding used: disappear_at_goal
SAT solver used: Kissat
Optimizing function: sum of costs
Number of agents: 2
Mks LB: 8
SoC LB: 15
Delta: 0
Remaining time: 300000 [ms]

Found plan [agents = 2] [timesteps = 8]
Agent #0 : 9 8 11 12 13 14 15 0 
Agent #1 : 5 9 8 11 12 13 14 15 

[STAT] Solver returned: 0
[DBG]  Agent (index) 28 | New local path (submap idx):
[DBG]  9 8 11 12 13 14 15 
[DBG]  Agent (index) 42 | New local path (submap idx):
[DBG]  5 9 8 11 12 13 14 15 
[DBG]  Update the agent path 28 | Original local length: 9 | New local length: 7
[DBG]  agent 28 t=0 => decoded (sx,sy)=(2,2) => global_id=661
[DBG]  agent 28 t=1 => decoded (sx,sy)=(2,1) => global_id=660
[DBG]  agent 28 t=2 => decoded (sx,sy)=(3,1) => global_id=692
[DBG]  agent 28 t=3 => decoded (sx,sy)=(4,1) => global_id=724
[DBG]  agent 28 t=4 => decoded (sx,sy)=(4,2) => global_id=725
[DBG]  agent 28 t=5 => decoded (sx,sy)=(4,3) => global_id=726
[DBG]  agent 28 t=6 => decoded (sx,sy)=(4,4) => global_id=727
[DBG]  Complete path of agent 28:
[DBG]    Original: 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 660 692 724 725 726 727 
[DBG]    New:     661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 660 692 724 725 726 727 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 
[DBG]    Local path (in submap): 661 660 692 724 725 726 727 
[DBG]    Suffix (out of submap): 
[DBG]  Original agent path length 28 je: 46
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 0: 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 660, 692, 724, 725, 726, 727, 
[DBG]  Path for agent 28 updated, resulting length: 44
[DBG]  Update the agent path 42 | Original local length: 8 | New local length: 8
[DBG]  agent 42 t=0 => decoded (sx,sy)=(1,2) => global_id=629
[DBG]  agent 42 t=1 => decoded (sx,sy)=(2,2) => global_id=661
[DBG]  agent 42 t=2 => decoded (sx,sy)=(2,1) => global_id=660
[DBG]  agent 42 t=3 => decoded (sx,sy)=(3,1) => global_id=692
[DBG]  agent 42 t=4 => decoded (sx,sy)=(4,1) => global_id=724
[DBG]  agent 42 t=5 => decoded (sx,sy)=(4,2) => global_id=725
[DBG]  agent 42 t=6 => decoded (sx,sy)=(4,3) => global_id=726
[DBG]  agent 42 t=7 => decoded (sx,sy)=(4,4) => global_id=727
[DBG]  Complete path of agent 42:
[DBG]    Original: 224 256 257 289 321 353 354 354 355 387 419 420 421 422 423 424 425 426 426 427 428 429 430 431 432 464 465 466 467 468 469 501 533 534 533 565 597 629 628 660 692 724 725 726 727 759 
[DBG]    New:     224 256 257 289 321 353 354 354 355 387 419 420 421 422 423 424 425 426 426 427 428 429 430 431 432 464 465 466 467 468 469 501 533 534 533 565 597 629 661 660 692 724 725 726 727 759 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 224 256 257 289 321 353 354 354 355 387 419 420 421 422 423 424 425 426 426 427 428 429 430 431 432 464 465 466 467 468 469 501 533 534 533 565 597 
[DBG]    Local path (in submap): 629 661 660 692 724 725 726 727 
[DBG]    Suffix (out of submap): 759 
[DBG]  Original agent path length 42 je: 46
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 1: 224, 256, 257, 289, 321, 353, 354, 354, 355, 387, 419, 420, 421, 422, 423, 424, 425, 426, 426, 427, 428, 429, 430, 431, 432, 464, 465, 466, 467, 468, 469, 501, 533, 534, 533, 565, 597, 629, 661, 660, 692, 724, 725, 726, 727, 759, 
[DBG]  Path for agent 42 updated, resulting length: 46
[DBG]  Paths successfully updated.
[DBG]  (LNS.cpp) New path for agent 28: 
[DBG]  661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 660, 692, 724, 725, 726, 727, 
[DBG]  (LNS.cpp) New path for agent 42: 
[DBG]  224, 256, 257, 289, 321, 353, 354, 354, 355, 387, 419, 420, 421, 422, 423, 424, 425, 426, 426, 427, 428, 429, 430, 431, 432, 464, 465, 466, 467, 468, 469, 501, 533, 534, 533, 565, 597, 629, 661, 660, 692, 724, 725, 726, 727, 759, 
[DBG]  Delta value: 0.0222222
[DBG]  Rewarding metric index = 0
[DBG]  component_weights = {0.285278, 0.187512, 0.191468, 0.335742}
[DBG]  opSuccess value: 1
[STAT] neighbor.sum_of_costs before recomputation: 88
[STAT] neighbor.old_sum_of_costs before recomputation: 90
[STAT] sum_of_costs before recomputation: 4496
[DBG]  Validate solution immediately after SAT success.
[WARNING] Problem after SAT: Target conflict: agent 42 (len 45) traverses target of agent 28 (len 43) at location 727 at timestep 44
[DBG]  [DEBUG] Attempting immediate repair via init_lns because problem occurred after SAT (should be applied only for conflicts...).
[DBG]  [DEBUG] Passing 150 agents to init_lns (skip=true).
[DBG]  [DEBUG] path_table contents for selected agents (neighbor.agents):
[DBG]    Agent 28 => controlling path length=44
[DBG]    Agent 42 => controlling path length=46
[DBG]  hodnota skip_initial_solution=1
[DBG]  We skip initialSolution => call buildCollisionData()
[DBG]  buildCollisionData() called â€“ skip_initial_solution case.
[DBG]  Agents.size()=150, collision_graph.size()=150
[DBG]  agent 28 => updateCollidingPairs => foundCollision
[DBG]  agent 42 => updateCollidingPairs => foundCollision
[DBG]  agent 148 => updateCollidingPairs => foundCollision
[DBG]  Conflicting agent pairs:
[DBG]  agent 28 is in conflict with agent 42
[DBG]  agent 28 is in conflict with agent 148
[DBG]  buildCollisionData() => sum_of_costs=4494, num_of_colliding_pairs=2
[DBG]  buildCollisionData done => sum_of_costs=4494, num_of_colliding_pairs=2
[DBG]  sum_of_cost hodnota: 4494
[DBG]  After skip/init build => iteration_stats.back(): sum_of_costs=4494, collisions=2
[DEBUG] Using default neighbor generation strategy for conflicts: 1
	InitLNS(PP): runtime = 0.00191242, iterations = 2, colliding pairs = 0, initial colliding pairs = 2, solution cost = 4492, initial solution cost = 4494, failed iterations = 0
[DBG]  [DEBUG] init_lns->sum_of_costs after init_lns->run: 4492
[DBG]  [DEBUG] sum_of_costs after assignment from init_lns->run: 4492
[DBG]  Recomputing sum_of_cost by dividing neighbor.sum_of_costs and neighbor.old_sum_of_costs
[STAT] sum_of_costs after recomputation: 4492
[STAT] Iteration 13
[DBG]  Using SAT operator (destroy+repair SAT).
[DBG]  ====================
[DBG]  SAT destroy operator called.
[DBG]  SAT heuristic: 2
[DBG]  key_agent_id: 28
[DBG]  key_agent_id global path length: 45
[DBG]  Submap content (global positions):
[DBG]  595 596 597 598 599 
[DBG]  627 628 629 630 631 
[DBG]  659 660 661 662 663 
[DBG]  691 692 693 694 695 
[DBG]  723 724 725 726 727 
[DBG]  Map content with agents and obstacles:
[DBG]  X . A X . 
[DBG]  . . . X . 
[DBG]  . A A X X 
[DBG]  A . X X X 
[DBG]  X . . . . 
[DBG]  content of the map structure that we pass to the SAT solver:
[DBG]  -1  1  1  -1  1  
[DBG]  1  1  1  -1  1  
[DBG]  1  1  1  -1  -1  
[DBG]  1  1  -1  -1  -1  
[DBG]  -1  1  1  1  1  
[DBG]  Identifying agents in a submap for rescheduling (when key_agent is there at the time 38):
[DBG]  Agent 28 found intervals in the sub-map:
[DBG]   [0..44]
[DBG]  Agent 28 (interval in submap: [0..44]) contains time 38, added to replan.
[DBG]  Agent 42 found intervals in the sub-map:
[DBG]   [35..43]
[DBG]  Agent 42 (interval in submap: [35..43]) contains time 38, added to replan.
[DBG]  Agent 55 found intervals in the sub-map:
[DBG]   [38..42]
[DBG]  Agent 55 (interval in submap: [38..42]) contains time 38, added to replan.
[DBG]  Agent 148 found intervals in the sub-map:
[DBG]   [35..42]
[DBG]  Agent 148 (interval in submap: [35..42]) contains time 38, added to replan.
[DBG]  Agent 28 | Start (global): 661 -> (local): (2, 2) at time 38 | Goal (global): 727 -> (local): (4, 4) at time 44
[DBG]  Agent 42 | Start (global): 660 -> (local): (2, 1) at time 38 | Goal (global): 727 -> (local): (4, 4) at time 43
[DBG]  Agent 55 | Start (global): 597 -> (local): (0, 2) at time 38 | Goal (global): 692 -> (local): (3, 1) at time 42
[DBG]  Agent 148 | Start (global): 691 -> (local): (3, 0) at time 38 | Goal (global): 660 -> (local): (2, 1) at time 42
[DBG]  [REPAIR] SAT destroy operator called.
[DBG]  [REPAIR] SAT operator â€“ launching subproblem FOR OPTIMIZATION.
[DBG]  Creating local paths (sx, sy) in the submap for T_sync = 38
[DBG]    Agent 28 (global paths from T=38 to 44) has local path: (2,2) (2,1) (3,1) (4,1) (4,2) (4,3) (4,4) 
[DBG]    Agent 42 (global paths from T=38 to 43) has local path: (2,1) (3,1) (4,1) (4,2) (4,3) (4,4) 
[DBG]    Agent 55 (global paths from T=38 to 42) has local path: (0,2) (0,1) (1,1) (2,1) (3,1) 
[DBG]    Agent 148 (global paths from T=38 to 42) has local path: (3,0) (2,0) (2,0) (2,0) (2,1) 
[DBG]  Checking input data for SAT solver:
[DBG]    - Number of agents to replan: 4
[DBG]  Agent 28 has the original local path length: 7 => Start (2,2), Goal (4,4)
[DBG]  Agent 42 has the original local path length: 6 => Start (2,1), Goal (4,4)
[DBG]  Agent 55 has the original local path length: 5 => Start (0,2), Goal (3,1)
[DBG]  Agent 148 has the original local path length: 5 => Start (3,0), Goal (2,1)
[DBG]  Start position: (2, 2), (2, 1), (0, 2), (3, 0), 
[DBG]  Goal position: (4, 4), (4, 4), (3, 1), (2, 1), 
[DBG]  SAT instance and solver created.
Currently solving
Instance name: scen
Map name: map
Encoding used: disappear_at_goal
SAT solver used: Kissat
Optimizing function: sum of costs
Number of agents: 4
Mks LB: 7
SoC LB: 21
Delta: 0
Remaining time: 300000 [ms]

Vertex conflict! Agents 1, 2, timestep 6, location 0
Vertex conflict! Agents 1, 3, timestep 6, location 0
Vertex conflict! Agents 2, 3, timestep 5, location 0
Swapping conflict! Agents 2, 3, timestep 5, edge (0,0)
Vertex conflict! Agents 2, 3, timestep 6, location 0
Found plan [agents = 4] [timesteps = 7]
Agent #0 : 9 8 11 12 13 14 15 
Agent #1 : 8 11 12 13 14 15 0 
Agent #2 : 1 5 9 8 11 0 0 
Agent #3 : 10 7 8 0 0 0 0 

[STAT] Solver returned: 0
[DBG]  Agent (index) 28 | New local path (submap idx):
[DBG]  9 8 11 12 13 14 15 
[DBG]  Agent (index) 42 | New local path (submap idx):
[DBG]  8 11 12 13 14 15 
[DBG]  Agent (index) 55 | New local path (submap idx):
[DBG]  1 5 9 8 11 
[DBG]  Agent (index) 148 | New local path (submap idx):
[DBG]  10 7 8 
[DBG]  Update the agent path 28 | Original local length: 7 | New local length: 7
[DBG]  agent 28 t=0 => decoded (sx,sy)=(2,2) => global_id=661
[DBG]  agent 28 t=1 => decoded (sx,sy)=(2,1) => global_id=660
[DBG]  agent 28 t=2 => decoded (sx,sy)=(3,1) => global_id=692
[DBG]  agent 28 t=3 => decoded (sx,sy)=(4,1) => global_id=724
[DBG]  agent 28 t=4 => decoded (sx,sy)=(4,2) => global_id=725
[DBG]  agent 28 t=5 => decoded (sx,sy)=(4,3) => global_id=726
[DBG]  agent 28 t=6 => decoded (sx,sy)=(4,4) => global_id=727
[DBG]  Complete path of agent 28:
[DBG]    Original: 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 660 692 724 725 726 727 
[DBG]    New:     661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 660 692 724 725 726 727 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 
[DBG]    Local path (in submap): 661 660 692 724 725 726 727 
[DBG]    Suffix (out of submap): 
[DBG]  Original agent path length 28 je: 45
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 0: 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 660, 692, 724, 725, 726, 727, 
[DBG]  Path for agent 28 updated, resulting length: 45
[DBG]  Update the agent path 42 | Original local length: 6 | New local length: 6
[DBG]  agent 42 t=0 => decoded (sx,sy)=(2,1) => global_id=660
[DBG]  agent 42 t=1 => decoded (sx,sy)=(3,1) => global_id=692
[DBG]  agent 42 t=2 => decoded (sx,sy)=(4,1) => global_id=724
[DBG]  agent 42 t=3 => decoded (sx,sy)=(4,2) => global_id=725
[DBG]  agent 42 t=4 => decoded (sx,sy)=(4,3) => global_id=726
[DBG]  agent 42 t=5 => decoded (sx,sy)=(4,4) => global_id=727
[DBG]  Complete path of agent 42:
[DBG]    Original: 224 256 257 289 321 353 354 354 355 356 357 358 390 422 423 424 425 426 426 427 428 429 430 431 432 464 465 466 466 467 468 469 501 533 565 597 596 628 660 692 724 725 726 727 759 
[DBG]    New:     224 256 257 289 321 353 354 354 355 356 357 358 390 422 423 424 425 426 426 427 428 429 430 431 432 464 465 466 466 467 468 469 501 533 565 597 596 628 660 692 724 725 726 727 759 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 224 256 257 289 321 353 354 354 355 356 357 358 390 422 423 424 425 426 426 427 428 429 430 431 432 464 465 466 466 467 468 469 501 533 565 597 596 628 
[DBG]    Local path (in submap): 660 692 724 725 726 727 
[DBG]    Suffix (out of submap): 759 
[DBG]  Original agent path length 42 je: 45
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 1: 224, 256, 257, 289, 321, 353, 354, 354, 355, 356, 357, 358, 390, 422, 423, 424, 425, 426, 426, 427, 428, 429, 430, 431, 432, 464, 465, 466, 466, 467, 468, 469, 501, 533, 565, 597, 596, 628, 660, 692, 724, 725, 726, 727, 759, 
[DBG]  Path for agent 42 updated, resulting length: 45
[DBG]  Update the agent path 55 | Original local length: 5 | New local length: 5
[DBG]  agent 55 t=0 => decoded (sx,sy)=(0,2) => global_id=597
[DBG]  agent 55 t=1 => decoded (sx,sy)=(1,2) => global_id=629
[DBG]  agent 55 t=2 => decoded (sx,sy)=(2,2) => global_id=661
[DBG]  agent 55 t=3 => decoded (sx,sy)=(2,1) => global_id=660
[DBG]  agent 55 t=4 => decoded (sx,sy)=(3,1) => global_id=692
[DBG]  Complete path of agent 55:
[DBG]    Original: 34 66 98 99 100 132 164 196 228 260 261 293 294 295 296 328 329 330 331 363 395 427 428 429 430 462 463 464 465 466 467 468 469 469 469 501 533 565 597 596 628 660 692 
[DBG]    New:     34 66 98 99 100 132 164 196 228 260 261 293 294 295 296 328 329 330 331 363 395 427 428 429 430 462 463 464 465 466 467 468 469 469 469 501 533 565 597 629 661 660 692 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 34 66 98 99 100 132 164 196 228 260 261 293 294 295 296 328 329 330 331 363 395 427 428 429 430 462 463 464 465 466 467 468 469 469 469 501 533 565 
[DBG]    Local path (in submap): 597 629 661 660 692 
[DBG]    Suffix (out of submap): 
[DBG]  Original agent path length 55 je: 43
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 2: 34, 66, 98, 99, 100, 132, 164, 196, 228, 260, 261, 293, 294, 295, 296, 328, 329, 330, 331, 363, 395, 427, 428, 429, 430, 462, 463, 464, 465, 466, 467, 468, 469, 469, 469, 501, 533, 565, 597, 629, 661, 660, 692, 
[DBG]  Path for agent 55 updated, resulting length: 43
[DBG]  Update the agent path 148 | Original local length: 5 | New local length: 3
[DBG]  agent 148 t=0 => decoded (sx,sy)=(3,0) => global_id=691
[DBG]  agent 148 t=1 => decoded (sx,sy)=(2,0) => global_id=659
[DBG]  agent 148 t=2 => decoded (sx,sy)=(2,1) => global_id=660
[DBG]  Complete path of agent 148:
[DBG]    Original: 776 808 808 808 808 808 807 806 806 806 806 806 774 775 776 808 809 841 873 874 875 876 877 878 879 880 881 882 883 851 819 787 755 756 757 725 724 692 691 659 659 659 660 
[DBG]    New:     776 808 808 808 808 808 807 806 806 806 806 806 774 775 776 808 809 841 873 874 875 876 877 878 879 880 881 882 883 851 819 787 755 756 757 725 724 692 691 659 660 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 776 808 808 808 808 808 807 806 806 806 806 806 774 775 776 808 809 841 873 874 875 876 877 878 879 880 881 882 883 851 819 787 755 756 757 725 724 692 
[DBG]    Local path (in submap): 691 659 660 
[DBG]    Suffix (out of submap): 
[DBG]  Original agent path length 148 je: 43
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 3: 776, 808, 808, 808, 808, 808, 807, 806, 806, 806, 806, 806, 774, 775, 776, 808, 809, 841, 873, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 851, 819, 787, 755, 756, 757, 725, 724, 692, 691, 659, 660, 
[DBG]  Path for agent 148 updated, resulting length: 41
[DBG]  Paths successfully updated.
[DBG]  (LNS.cpp) New path for agent 28: 
[DBG]  661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 660, 692, 724, 725, 726, 727, 
[DBG]  (LNS.cpp) New path for agent 42: 
[DBG]  224, 256, 257, 289, 321, 353, 354, 354, 355, 356, 357, 358, 390, 422, 423, 424, 425, 426, 426, 427, 428, 429, 430, 431, 432, 464, 465, 466, 466, 467, 468, 469, 501, 533, 565, 597, 596, 628, 660, 692, 724, 725, 726, 727, 759, 
[DBG]  (LNS.cpp) New path for agent 55: 
[DBG]  34, 66, 98, 99, 100, 132, 164, 196, 228, 260, 261, 293, 294, 295, 296, 328, 329, 330, 331, 363, 395, 427, 428, 429, 430, 462, 463, 464, 465, 466, 467, 468, 469, 469, 469, 501, 533, 565, 597, 629, 661, 660, 692, 
[DBG]  (LNS.cpp) New path for agent 148: 
[DBG]  776, 808, 808, 808, 808, 808, 807, 806, 806, 806, 806, 806, 774, 775, 776, 808, 809, 841, 873, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 851, 819, 787, 755, 756, 757, 725, 724, 692, 691, 659, 660, 
[DBG]  Delta value: 0.0116279
[DBG]  Rewarding metric index = 3
[DBG]  component_weights = {0.279197, 0.183515, 0.187387, 0.349901}
[DBG]  opSuccess value: 1
[STAT] neighbor.sum_of_costs before recomputation: 170
[STAT] neighbor.old_sum_of_costs before recomputation: 172
[STAT] sum_of_costs before recomputation: 4492
[DBG]  Validate solution immediately after SAT success.
[WARNING] Problem after SAT: Target conflict: agent 55 (len 42) traverses target of agent 148 (len 40) at location 660 at timestep 41
[DBG]  [DEBUG] Attempting immediate repair via init_lns because problem occurred after SAT (should be applied only for conflicts...).
[DBG]  [DEBUG] Passing 150 agents to init_lns (skip=true).
[DBG]  [DEBUG] path_table contents for selected agents (neighbor.agents):
[DBG]    Agent 28 => controlling path length=45
[DBG]    Agent 42 => controlling path length=45
[DBG]    Agent 55 => controlling path length=43
[DBG]    Agent 148 => controlling path length=41
[DBG]  hodnota skip_initial_solution=1
[DBG]  We skip initialSolution => call buildCollisionData()
[DBG]  buildCollisionData() called â€“ skip_initial_solution case.
[DBG]  Agents.size()=150, collision_graph.size()=150
[DBG]  agent 55 => updateCollidingPairs => foundCollision
[DBG]  agent 148 => updateCollidingPairs => foundCollision
[DBG]  Conflicting agent pairs:
[DBG]  agent 55 is in conflict with agent 148
[DBG]  buildCollisionData() => sum_of_costs=4490, num_of_colliding_pairs=1
[DBG]  buildCollisionData done => sum_of_costs=4490, num_of_colliding_pairs=1
[DBG]  sum_of_cost hodnota: 4490
[DBG]  After skip/init build => iteration_stats.back(): sum_of_costs=4490, collisions=1
[DEBUG] Using default neighbor generation strategy for conflicts: 1
	InitLNS(PP): runtime = 0.001934, iterations = 2, colliding pairs = 0, initial colliding pairs = 1, solution cost = 4492, initial solution cost = 4490, failed iterations = 0
[DBG]  [DEBUG] init_lns->sum_of_costs after init_lns->run: 4492
[DBG]  [DEBUG] sum_of_costs after assignment from init_lns->run: 4492
[DBG]  Recomputing sum_of_cost by dividing neighbor.sum_of_costs and neighbor.old_sum_of_costs
[STAT] sum_of_costs after recomputation: 4492
[STAT] Iteration 14
[DBG]  Using SAT operator (destroy+repair SAT).
[DBG]  ====================
[DBG]  SAT destroy operator called.
[DBG]  SAT heuristic: 2
[DBG]  key_agent_id: 28
[DBG]  key_agent_id global path length: 45
[DBG]  Submap content (global positions):
[DBG]  595 596 597 598 599 
[DBG]  627 628 629 630 631 
[DBG]  659 660 661 662 663 
[DBG]  691 692 693 694 695 
[DBG]  723 724 725 726 727 
[DBG]  Map content with agents and obstacles:
[DBG]  X . A X . 
[DBG]  . . A X . 
[DBG]  . . A X X 
[DBG]  . . X X X 
[DBG]  X . . . . 
[DBG]  content of the map structure that we pass to the SAT solver:
[DBG]  -1  1  1  -1  1  
[DBG]  1  1  1  -1  1  
[DBG]  1  1  1  -1  -1  
[DBG]  1  1  -1  -1  -1  
[DBG]  -1  1  1  1  1  
[DBG]  Identifying agents in a submap for rescheduling (when key_agent is there at the time 28):
[DBG]  Agent 28 found intervals in the sub-map:
[DBG]   [0..44]
[DBG]  Agent 28 (interval in submap: [0..44]) contains time 28, added to replan.
[DBG]  Agent 45 found intervals in the sub-map:
[DBG]   [28..33]
[DBG]  Agent 45 (interval in submap: [28..33]) contains time 28, added to replan.
[DBG]  Agent 91 found intervals in the sub-map:
[DBG]   [22..30]
[DBG]  Agent 91 (interval in submap: [22..30]) contains time 28, added to replan.
[DBG]  Agent 28 | Start (global): 661 -> (local): (2, 2) at time 28 | Goal (global): 727 -> (local): (4, 4) at time 44
[DBG]  Agent 45 | Start (global): 597 -> (local): (0, 2) at time 28 | Goal (global): 724 -> (local): (4, 1) at time 33
[DBG]  Agent 91 | Start (global): 629 -> (local): (1, 2) at time 28 | Goal (global): 597 -> (local): (0, 2) at time 30
[DBG]  [REPAIR] SAT destroy operator called.
[DBG]  [REPAIR] SAT operator â€“ launching subproblem FOR OPTIMIZATION.
[DBG]  Creating local paths (sx, sy) in the submap for T_sync = 28
[DBG]    Agent 28 (global paths from T=28 to 44) has local path: (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,1) (3,1) (4,1) (4,2) (4,3) (4,4) 
[DBG]    Agent 45 (global paths from T=28 to 33) has local path: (0,2) (0,1) (1,1) (2,1) (3,1) (4,1) 
[DBG]    Agent 91 (global paths from T=28 to 30) has local path: (1,2) (1,2) (0,2) 
[DBG]  Checking input data for SAT solver:
[DBG]    - Number of agents to replan: 3
[DBG]  Agent 28 has the original local path length: 17 => Start (2,2), Goal (4,4)
[DBG]  Agent 45 has the original local path length: 6 => Start (0,2), Goal (4,1)
[DBG]  Agent 91 has the original local path length: 3 => Start (1,2), Goal (0,2)
[DBG]  Start position: (2, 2), (0, 2), (1, 2), 
[DBG]  Goal position: (4, 4), (4, 1), (0, 2), 
[DBG]  SAT instance and solver created.
Currently solving
Instance name: scen
Map name: map
Encoding used: disappear_at_goal
SAT solver used: Kissat
Optimizing function: sum of costs
Number of agents: 3
Mks LB: 7
SoC LB: 15
Delta: 0
Remaining time: 300000 [ms]

Vertex conflict! Agents 1, 2, timestep 6, location 0
Found plan [agents = 3] [timesteps = 7]
Agent #0 : 9 8 11 12 13 14 15 
Agent #1 : 1 0 4 8 11 12 0 
Agent #2 : 5 1 0 0 0 0 0 

[STAT] Solver returned: 0
[DBG]  Agent (index) 28 | New local path (submap idx):
[DBG]  9 8 11 12 13 14 15 
[DBG]  Agent (index) 45 | New local path (submap idx):
[DBG]  1 0 4 8 11 12 
[DBG]  Agent (index) 91 | New local path (submap idx):
[DBG]  5 1 
[DBG]  Update the agent path 28 | Original local length: 17 | New local length: 7
[DBG]  agent 28 t=0 => decoded (sx,sy)=(2,2) => global_id=661
[DBG]  agent 28 t=1 => decoded (sx,sy)=(2,1) => global_id=660
[DBG]  agent 28 t=2 => decoded (sx,sy)=(3,1) => global_id=692
[DBG]  agent 28 t=3 => decoded (sx,sy)=(4,1) => global_id=724
[DBG]  agent 28 t=4 => decoded (sx,sy)=(4,2) => global_id=725
[DBG]  agent 28 t=5 => decoded (sx,sy)=(4,3) => global_id=726
[DBG]  agent 28 t=6 => decoded (sx,sy)=(4,4) => global_id=727
[DBG]  Complete path of agent 28:
[DBG]    Original: 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 660 692 724 725 726 727 
[DBG]    New:     661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 660 692 724 725 726 727 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 
[DBG]    Local path (in submap): 661 660 692 724 725 726 727 
[DBG]    Suffix (out of submap): 
[DBG]  Original agent path length 28 je: 45
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 0: 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 660, 692, 724, 725, 726, 727, 
[DBG]  Path for agent 28 updated, resulting length: 35
[DBG]  Update the agent path 45 | Original local length: 6 | New local length: 6
[DBG]  agent 45 t=0 => decoded (sx,sy)=(0,2) => global_id=597
[DBG]  agent 45 t=1 => decoded (sx,sy)=(0,1) => global_id=596
[DBG]  agent 45 t=2 => decoded (sx,sy)=(1,1) => global_id=628
[DBG]  agent 45 t=3 => decoded (sx,sy)=(2,1) => global_id=660
[DBG]  agent 45 t=4 => decoded (sx,sy)=(3,1) => global_id=692
[DBG]  agent 45 t=5 => decoded (sx,sy)=(4,1) => global_id=724
[DBG]  Complete path of agent 45:
[DBG]    Original: 153 185 217 249 248 248 248 248 248 248 248 249 281 313 345 344 344 343 375 407 406 405 437 469 501 533 533 565 597 596 628 660 692 724 756 788 820 819 818 850 849 
[DBG]    New:     153 185 217 249 248 248 248 248 248 248 248 249 281 313 345 344 344 343 375 407 406 405 437 469 501 533 533 565 597 596 628 660 692 724 756 788 820 819 818 850 849 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 153 185 217 249 248 248 248 248 248 248 248 249 281 313 345 344 344 343 375 407 406 405 437 469 501 533 533 565 
[DBG]    Local path (in submap): 597 596 628 660 692 724 
[DBG]    Suffix (out of submap): 756 788 820 819 818 850 849 
[DBG]  Original agent path length 45 je: 41
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 1: 153, 185, 217, 249, 248, 248, 248, 248, 248, 248, 248, 249, 281, 313, 345, 344, 344, 343, 375, 407, 406, 405, 437, 469, 501, 533, 533, 565, 597, 596, 628, 660, 692, 724, 756, 788, 820, 819, 818, 850, 849, 
[DBG]  Path for agent 45 updated, resulting length: 41
[DBG]  Update the agent path 91 | Original local length: 3 | New local length: 2
[DBG]  agent 91 t=0 => decoded (sx,sy)=(1,2) => global_id=629
[DBG]  agent 91 t=1 => decoded (sx,sy)=(0,2) => global_id=597
[DBG]  Complete path of agent 91:
[DBG]    Original: 787 755 755 755 755 755 755 755 755 755 755 755 755 755 755 755 755 755 756 756 756 756 724 692 660 628 629 629 629 629 597 565 533 534 502 502 501 469 437 438 439 440 408 376 377 345 377 378 379 380 381 
[DBG]    New:     787 755 755 755 755 755 755 755 755 755 755 755 755 755 755 755 755 755 756 756 756 756 724 692 660 628 629 629 629 597 565 533 534 502 502 501 469 437 438 439 440 408 376 377 345 377 378 379 380 381 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 787 755 755 755 755 755 755 755 755 755 755 755 755 755 755 755 755 755 756 756 756 756 724 692 660 628 629 629 
[DBG]    Local path (in submap): 629 597 565 
[DBG]    Suffix (out of submap): 533 534 502 502 501 469 437 438 439 440 408 376 377 345 377 378 379 380 381 
[DBG]  Original agent path length 91 je: 51
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 2: 787, 755, 755, 755, 755, 755, 755, 755, 755, 755, 755, 755, 755, 755, 755, 755, 755, 755, 756, 756, 756, 756, 724, 692, 660, 628, 629, 629, 629, 597, 565, 533, 534, 502, 502, 501, 469, 437, 438, 439, 440, 408, 376, 377, 345, 377, 378, 379, 380, 381, 
[DBG]  Path for agent 91 updated, resulting length: 50
[DBG]  Paths successfully updated.
[DBG]  (LNS.cpp) New path for agent 28: 
[DBG]  661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 660, 692, 724, 725, 726, 727, 
[DBG]  (LNS.cpp) New path for agent 45: 
[DBG]  153, 185, 217, 249, 248, 248, 248, 248, 248, 248, 248, 249, 281, 313, 345, 344, 344, 343, 375, 407, 406, 405, 437, 469, 501, 533, 533, 565, 597, 596, 628, 660, 692, 724, 756, 788, 820, 819, 818, 850, 849, 
[DBG]  (LNS.cpp) New path for agent 91: 
[DBG]  787, 755, 755, 755, 755, 755, 755, 755, 755, 755, 755, 755, 755, 755, 755, 755, 755, 755, 756, 756, 756, 756, 724, 692, 660, 628, 629, 629, 629, 597, 565, 533, 534, 502, 502, 501, 469, 437, 438, 439, 440, 408, 376, 377, 345, 377, 378, 379, 380, 381, 
[DBG]  Delta value: 0.0820896
[DBG]  Rewarding metric index = 0
[DBG]  component_weights = {0.306133, 0.176657, 0.180385, 0.336826}
[DBG]  opSuccess value: 1
[STAT] neighbor.sum_of_costs before recomputation: 123
[STAT] neighbor.old_sum_of_costs before recomputation: 134
[STAT] sum_of_costs before recomputation: 4492
[DBG]  Validate solution immediately after SAT success.
[WARNING] Problem after SAT: Target conflict: agent 42 (len 44) traverses target of agent 28 (len 34) at location 727 at timestep 43
[DBG]  [DEBUG] Attempting immediate repair via init_lns because problem occurred after SAT (should be applied only for conflicts...).
[DBG]  [DEBUG] Passing 150 agents to init_lns (skip=true).
[DBG]  [DEBUG] path_table contents for selected agents (neighbor.agents):
[DBG]    Agent 28 => controlling path length=35
[DBG]    Agent 45 => controlling path length=41
[DBG]    Agent 91 => controlling path length=50
[DBG]  hodnota skip_initial_solution=1
[DBG]  We skip initialSolution => call buildCollisionData()
[DBG]  buildCollisionData() called â€“ skip_initial_solution case.
[DBG]  Agents.size()=150, collision_graph.size()=150
[DBG]  agent 28 => updateCollidingPairs => foundCollision
[DBG]  agent 42 => updateCollidingPairs => foundCollision
[DBG]  agent 53 => updateCollidingPairs => foundCollision
[DBG]  agent 91 => updateCollidingPairs => foundCollision
[DBG]  agent 140 => updateCollidingPairs => foundCollision
[DBG]  Conflicting agent pairs:
[DBG]  agent 28 is in conflict with agent 42
[DBG]  agent 53 is in conflict with agent 91
[DBG]  agent 91 is in conflict with agent 140
[DBG]  buildCollisionData() => sum_of_costs=4481, num_of_colliding_pairs=3
[DBG]  buildCollisionData done => sum_of_costs=4481, num_of_colliding_pairs=3
[DBG]  sum_of_cost hodnota: 4481
[DBG]  After skip/init build => iteration_stats.back(): sum_of_costs=4481, collisions=3
[DEBUG] Using default neighbor generation strategy for conflicts: 0
[DEBUG] Using default neighbor generation strategy for conflicts: 2
[DEBUG] Using default neighbor generation strategy for conflicts: 2
[DEBUG] Using default neighbor generation strategy for conflicts: 0
[DEBUG] Using default neighbor generation strategy for conflicts: 2
[DEBUG] Using default neighbor generation strategy for conflicts: 1
	InitLNS(PP): runtime = 0.00687158, iterations = 7, colliding pairs = 0, initial colliding pairs = 3, solution cost = 4512, initial solution cost = 4481, failed iterations = 0
[DBG]  [DEBUG] init_lns->sum_of_costs after init_lns->run: 4512
[DBG]  [DEBUG] sum_of_costs after assignment from init_lns->run: 4512
[DBG]  Recomputing sum_of_cost by dividing neighbor.sum_of_costs and neighbor.old_sum_of_costs
[STAT] sum_of_costs after recomputation: 4512
[STAT] Iteration 15
[DBG]  Using SAT operator (destroy+repair SAT).
[DBG]  ====================
[DBG]  SAT destroy operator called.
[DBG]  SAT heuristic: 2
[DBG]  key_agent_id: 28
[DBG]  key_agent_id global path length: 45
[DBG]  Submap content (global positions):
[DBG]  595 596 597 598 599 
[DBG]  627 628 629 630 631 
[DBG]  659 660 661 662 663 
[DBG]  691 692 693 694 695 
[DBG]  723 724 725 726 727 
[DBG]  Map content with agents and obstacles:
[DBG]  X . A X . 
[DBG]  . . . X . 
[DBG]  . . A X X 
[DBG]  . . X X X 
[DBG]  X . . . . 
[DBG]  content of the map structure that we pass to the SAT solver:
[DBG]  -1  1  1  -1  1  
[DBG]  1  1  1  -1  1  
[DBG]  1  1  1  -1  -1  
[DBG]  1  1  -1  -1  -1  
[DBG]  -1  1  1  1  1  
[DBG]  Identifying agents in a submap for rescheduling (when key_agent is there at the time 15):
[DBG]  Agent 28 found intervals in the sub-map:
[DBG]   [0..36] [42..44]
[DBG]  Agent 28 (interval in submap: [0..36]) contains time 15, added to replan.
[DBG]  Agent 61 found intervals in the sub-map:
[DBG]  
[DBG]  Agent 61 is not in sub-map at time 15 (intervals: 
[DBG]  )
[DBG]  Agent 86 found intervals in the sub-map:
[DBG]   [11..15]
[DBG]  Agent 86 (interval in submap: [11..15]) contains time 15, added to replan.
[DBG]  Agent 28 | Start (global): 661 -> (local): (2, 2) at time 15 | Goal (global): 724 -> (local): (4, 1) at time 36
[DBG]  Agent 86 | Start (global): 597 -> (local): (0, 2) at time 15 | Goal (global): 597 -> (local): (0, 2) at time 15
[DBG]  [REPAIR] SAT destroy operator called.
[DBG]  [REPAIR] SAT operator â€“ launching subproblem FOR OPTIMIZATION.
[DBG]  Creating local paths (sx, sy) in the submap for T_sync = 15
[DBG]    Agent 28 (global paths from T=15 to 36) has local path: (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,1) (2,1) (2,1) (3,1) (4,1) 
[DBG]    Agent 86 (global paths from T=15 to 15) has local path: (0,2) 
[DBG]  Checking input data for SAT solver:
[DBG]    - Number of agents to replan: 2
[DBG]  Agent 28 has the original local path length: 22 => Start (2,2), Goal (4,1)
[DBG]  Agent 86 has the original local path length: 1 => Start (0,2), Goal (0,2)
[DBG]  Start position: (2, 2), (0, 2), 
[DBG]  Goal position: (4, 1), (0, 2), 
[DBG]  SAT instance and solver created.
Currently solving
Instance name: scen
Map name: map
Encoding used: disappear_at_goal
SAT solver used: Kissat
Optimizing function: sum of costs
Number of agents: 2
Mks LB: 4
SoC LB: 5
Delta: 0
Remaining time: 300000 [ms]

Found plan [agents = 2] [timesteps = 4]
Agent #0 : 9 8 11 12 
Agent #1 : 1 0 0 0 

[STAT] Solver returned: 0
[DBG]  Agent (index) 28 | New local path (submap idx):
[DBG]  9 8 11 12 
[DBG]  Agent (index) 86 | New local path (submap idx):
[DBG]  1 
[DBG]  Update the agent path 28 | Original local length: 22 | New local length: 4
[DBG]  agent 28 t=0 => decoded (sx,sy)=(2,2) => global_id=661
[DBG]  agent 28 t=1 => decoded (sx,sy)=(2,1) => global_id=660
[DBG]  agent 28 t=2 => decoded (sx,sy)=(3,1) => global_id=692
[DBG]  agent 28 t=3 => decoded (sx,sy)=(4,1) => global_id=724
[DBG]  Complete path of agent 28:
[DBG]    Original: 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 660 660 660 692 724 756 757 757 757 757 725 726 727 
[DBG]    New:     661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 660 692 724 756 757 757 757 757 725 726 727 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 
[DBG]    Local path (in submap): 661 660 692 724 756 757 757 757 757 725 726 727 
[DBG]    Suffix (out of submap): 
[DBG]  Original agent path length 28 je: 45
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 0: 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 660, 692, 724, 756, 757, 757, 757, 757, 725, 726, 727, 
[DBG]  Path for agent 28 updated, resulting length: 27
[DBG]  Update the agent path 86 | Original local length: 1 | New local length: 1
[DBG]  agent 86 t=0 => decoded (sx,sy)=(0,2) => global_id=597
[DBG]  Complete path of agent 86:
[DBG]    Original: 781 782 750 718 686 687 688 689 689 657 658 659 627 628 629 597 565 566 534 502 503 504 505 506 538 539 540 541 
[DBG]    New:     781 782 750 718 686 687 688 689 689 657 658 659 627 628 629 597 565 566 534 502 503 504 505 506 538 539 540 541 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 781 782 750 718 686 687 688 689 689 657 658 659 627 628 629 
[DBG]    Local path (in submap): 597 
[DBG]    Suffix (out of submap): 565 566 534 502 503 504 505 506 538 539 540 541 
[DBG]  Original agent path length 86 je: 28
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 1: 781, 782, 750, 718, 686, 687, 688, 689, 689, 657, 658, 659, 627, 628, 629, 597, 565, 566, 534, 502, 503, 504, 505, 506, 538, 539, 540, 541, 
[DBG]  Path for agent 86 updated, resulting length: 28
[DBG]  Paths successfully updated.
[DBG]  (LNS.cpp) New path for agent 28: 
[DBG]  661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 660, 692, 724, 756, 757, 757, 757, 757, 725, 726, 727, 
[DBG]  (LNS.cpp) New path for agent 86: 
[DBG]  781, 782, 750, 718, 686, 687, 688, 689, 689, 657, 658, 659, 627, 628, 629, 597, 565, 566, 534, 502, 503, 504, 505, 506, 538, 539, 540, 541, 
[DBG]  Delta value: 0.253521
[DBG]  Rewarding metric index = 2
[DBG]  component_weights = {0.289451, 0.167031, 0.225047, 0.318471}
[DBG]  opSuccess value: 1
[STAT] neighbor.sum_of_costs before recomputation: 53
[STAT] neighbor.old_sum_of_costs before recomputation: 71
[STAT] sum_of_costs before recomputation: 4512
[DBG]  Validate solution immediately after SAT success.
[WARNING] Problem after SAT: Vertex conflict between agents 28 and 11 at location 724 at timestep 18
[DBG]  [DEBUG] Attempting immediate repair via init_lns because problem occurred after SAT (should be applied only for conflicts...).
[DBG]  [DEBUG] Passing 150 agents to init_lns (skip=true).
[DBG]  [DEBUG] path_table contents for selected agents (neighbor.agents):
[DBG]    Agent 28 => controlling path length=27
[DBG]    Agent 86 => controlling path length=28
[DBG]  hodnota skip_initial_solution=1
[DBG]  We skip initialSolution => call buildCollisionData()
[DBG]  buildCollisionData() called â€“ skip_initial_solution case.
[DBG]  Agents.size()=150, collision_graph.size()=150
[DBG]  agent 11 => updateCollidingPairs => foundCollision
[DBG]  agent 28 => updateCollidingPairs => foundCollision
[DBG]  agent 30 => updateCollidingPairs => foundCollision
[DBG]  agent 42 => updateCollidingPairs => foundCollision
[DBG]  Conflicting agent pairs:
[DBG]  agent 11 is in conflict with agent 28
[DBG]  agent 28 is in conflict with agent 30
[DBG]  agent 28 is in conflict with agent 42
[DBG]  buildCollisionData() => sum_of_costs=4494, num_of_colliding_pairs=3
[DBG]  buildCollisionData done => sum_of_costs=4494, num_of_colliding_pairs=3
[DBG]  sum_of_cost hodnota: 4494
[DBG]  After skip/init build => iteration_stats.back(): sum_of_costs=4494, collisions=3
[DEBUG] Using default neighbor generation strategy for conflicts: 2
[DEBUG] Using default neighbor generation strategy for conflicts: 0
[DEBUG] Using default neighbor generation strategy for conflicts: 2
[DEBUG] Using default neighbor generation strategy for conflicts: 1
[DEBUG] Using default neighbor generation strategy for conflicts: 2
[DEBUG] Using default neighbor generation strategy for conflicts: 1
[DEBUG] Using default neighbor generation strategy for conflicts: 0
	InitLNS(PP): runtime = 0.00900996, iterations = 8, colliding pairs = 0, initial colliding pairs = 3, solution cost = 4497, initial solution cost = 4494, failed iterations = 0
[DBG]  [DEBUG] init_lns->sum_of_costs after init_lns->run: 4497
[DBG]  [DEBUG] sum_of_costs after assignment from init_lns->run: 4497
[DBG]  Recomputing sum_of_cost by dividing neighbor.sum_of_costs and neighbor.old_sum_of_costs
[STAT] sum_of_costs after recomputation: 4497
[STAT] Iteration 16
[DBG]  Using SAT operator (destroy+repair SAT).
[DBG]  ====================
[DBG]  SAT destroy operator called.
[DBG]  SAT heuristic: 2
[DBG]  key_agent_id: 28
[DBG]  key_agent_id global path length: 44
[DBG]  Submap content (global positions):
[DBG]  595 596 597 598 599 
[DBG]  627 628 629 630 631 
[DBG]  659 660 661 662 663 
[DBG]  691 692 693 694 695 
[DBG]  723 724 725 726 727 
[DBG]  Map content with agents and obstacles:
[DBG]  X . . X . 
[DBG]  . A . X . 
[DBG]  . A A X X 
[DBG]  . . X X X 
[DBG]  X . . . . 
[DBG]  content of the map structure that we pass to the SAT solver:
[DBG]  -1  1  1  -1  1  
[DBG]  1  1  1  -1  1  
[DBG]  1  1  1  -1  -1  
[DBG]  1  1  -1  -1  -1  
[DBG]  -1  1  1  1  1  
[DBG]  Identifying agents in a submap for rescheduling (when key_agent is there at the time 8):
[DBG]  Agent 28 found intervals in the sub-map:
[DBG]   [0..36] [40..43]
[DBG]  Agent 28 (interval in submap: [0..36]) contains time 8, added to replan.
[DBG]  Agent 63 found intervals in the sub-map:
[DBG]  
[DBG]  Agent 63 is not in sub-map at time 8 (intervals: 
[DBG]  )
[DBG]  Agent 89 found intervals in the sub-map:
[DBG]   [5..11]
[DBG]  Agent 89 (interval in submap: [5..11]) contains time 8, added to replan.
[DBG]  Agent 113 found intervals in the sub-map:
[DBG]   [6..10]
[DBG]  Agent 113 (interval in submap: [6..10]) contains time 8, added to replan.
[DBG]  Agent 28 | Start (global): 661 -> (local): (2, 2) at time 8 | Goal (global): 724 -> (local): (4, 1) at time 36
[DBG]  Agent 89 | Start (global): 660 -> (local): (2, 1) at time 8 | Goal (global): 724 -> (local): (4, 1) at time 11
[DBG]  Agent 113 | Start (global): 628 -> (local): (1, 1) at time 8 | Goal (global): 597 -> (local): (0, 2) at time 10
[DBG]  [REPAIR] SAT destroy operator called.
[DBG]  [REPAIR] SAT operator â€“ launching subproblem FOR OPTIMIZATION.
[DBG]  Creating local paths (sx, sy) in the submap for T_sync = 8
[DBG]    Agent 28 (global paths from T=8 to 36) has local path: (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (1,2) (1,2) (1,1) (2,1) (2,1) (3,1) (4,1) 
[DBG]    Agent 89 (global paths from T=8 to 11) has local path: (2,1) (3,1) (3,1) (4,1) 
[DBG]    Agent 113 (global paths from T=8 to 10) has local path: (1,1) (1,2) (0,2) 
[DBG]  Checking input data for SAT solver:
[DBG]    - Number of agents to replan: 3
[DBG]  Agent 28 has the original local path length: 29 => Start (2,2), Goal (4,1)
[DBG]  Agent 89 has the original local path length: 4 => Start (2,1), Goal (4,1)
[DBG]  Agent 113 has the original local path length: 3 => Start (1,1), Goal (0,2)
[DBG]  Start position: (2, 2), (2, 1), (1, 1), 
[DBG]  Goal position: (4, 1), (4, 1), (0, 2), 
[DBG]  SAT instance and solver created.
Currently solving
Instance name: scen
Map name: map
Encoding used: disappear_at_goal
SAT solver used: Kissat
Optimizing function: sum of costs
Number of agents: 3
Mks LB: 4
SoC LB: 10
Delta: 0
Remaining time: 300000 [ms]

Vertex conflict! Agents 1, 2, timestep 3, location 0
Found plan [agents = 3] [timesteps = 4]
Agent #0 : 9 8 11 12 
Agent #1 : 8 11 12 0 
Agent #2 : 4 5 1 0 

[STAT] Solver returned: 0
[DBG]  Agent (index) 28 | New local path (submap idx):
[DBG]  9 8 11 12 
[DBG]  Agent (index) 89 | New local path (submap idx):
[DBG]  8 11 12 
[DBG]  Agent (index) 113 | New local path (submap idx):
[DBG]  4 5 1 
[DBG]  Update the agent path 28 | Original local length: 29 | New local length: 4
[DBG]  agent 28 t=0 => decoded (sx,sy)=(2,2) => global_id=661
[DBG]  agent 28 t=1 => decoded (sx,sy)=(2,1) => global_id=660
[DBG]  agent 28 t=2 => decoded (sx,sy)=(3,1) => global_id=692
[DBG]  agent 28 t=3 => decoded (sx,sy)=(4,1) => global_id=724
[DBG]  Complete path of agent 28:
[DBG]    Original: 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 629 629 628 660 660 692 724 756 756 756 724 725 726 727 
[DBG]    New:     661 661 661 661 661 661 661 661 661 660 692 724 756 756 756 724 725 726 727 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 661 661 661 661 661 661 661 661 
[DBG]    Local path (in submap): 661 660 692 724 756 756 756 724 725 726 727 
[DBG]    Suffix (out of submap): 
[DBG]  Original agent path length 28 je: 44
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 0: 661, 661, 661, 661, 661, 661, 661, 661, 661, 660, 692, 724, 756, 756, 756, 724, 725, 726, 727, 
[DBG]  Path for agent 28 updated, resulting length: 19
[DBG]  Update the agent path 89 | Original local length: 4 | New local length: 3
[DBG]  agent 89 t=0 => decoded (sx,sy)=(2,1) => global_id=660
[DBG]  agent 89 t=1 => decoded (sx,sy)=(3,1) => global_id=692
[DBG]  agent 89 t=2 => decoded (sx,sy)=(4,1) => global_id=724
[DBG]  Complete path of agent 89:
[DBG]    Original: 437 469 501 533 565 597 596 628 660 692 692 724 756 788 787 819 851 883 884 916 948 949 950 982 1014 1015 
[DBG]    New:     437 469 501 533 565 597 596 628 660 692 724 756 788 787 819 851 883 884 916 948 949 950 982 1014 1015 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 437 469 501 533 565 597 596 628 
[DBG]    Local path (in submap): 660 692 724 756 
[DBG]    Suffix (out of submap): 788 787 819 851 883 884 916 948 949 950 982 1014 1015 
[DBG]  Original agent path length 89 je: 26
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 1: 437, 469, 501, 533, 565, 597, 596, 628, 660, 692, 724, 756, 788, 787, 819, 851, 883, 884, 916, 948, 949, 950, 982, 1014, 1015, 
[DBG]  Path for agent 89 updated, resulting length: 25
[DBG]  Update the agent path 113 | Original local length: 3 | New local length: 3
[DBG]  agent 113 t=0 => decoded (sx,sy)=(1,1) => global_id=628
[DBG]  agent 113 t=1 => decoded (sx,sy)=(1,2) => global_id=629
[DBG]  agent 113 t=2 => decoded (sx,sy)=(0,2) => global_id=597
[DBG]  Complete path of agent 113:
[DBG]    Original: 529 561 593 625 657 658 659 627 628 629 597 565 566 534 502 503 504 472 440 408 409 377 378 378 379 380 348 349 317 318 319 287 255 254 222 
[DBG]    New:     529 561 593 625 657 658 659 627 628 629 597 565 566 534 502 503 504 472 440 408 409 377 378 378 379 380 348 349 317 318 319 287 255 254 222 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 529 561 593 625 657 658 659 627 
[DBG]    Local path (in submap): 628 629 597 
[DBG]    Suffix (out of submap): 565 566 534 502 503 504 472 440 408 409 377 378 378 379 380 348 349 317 318 319 287 255 254 222 
[DBG]  Original agent path length 113 je: 35
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 2: 529, 561, 593, 625, 657, 658, 659, 627, 628, 629, 597, 565, 566, 534, 502, 503, 504, 472, 440, 408, 409, 377, 378, 378, 379, 380, 348, 349, 317, 318, 319, 287, 255, 254, 222, 
[DBG]  Path for agent 113 updated, resulting length: 35
[DBG]  Paths successfully updated.
[DBG]  (LNS.cpp) New path for agent 28: 
[DBG]  661, 661, 661, 661, 661, 661, 661, 661, 661, 660, 692, 724, 756, 756, 756, 724, 725, 726, 727, 
[DBG]  (LNS.cpp) New path for agent 89: 
[DBG]  437, 469, 501, 533, 565, 597, 596, 628, 660, 692, 724, 756, 788, 787, 819, 851, 883, 884, 916, 948, 949, 950, 982, 1014, 1015, 
[DBG]  (LNS.cpp) New path for agent 113: 
[DBG]  529, 561, 593, 625, 657, 658, 659, 627, 628, 629, 597, 565, 566, 534, 502, 503, 504, 472, 440, 408, 409, 377, 378, 378, 379, 380, 348, 349, 317, 318, 319, 287, 255, 254, 222, 
[DBG]  Delta value: 0.254902
[DBG]  Rewarding metric index = 3
[DBG]  component_weights = {0.262609, 0.151541, 0.204177, 0.381673}
[DBG]  opSuccess value: 1
[STAT] neighbor.sum_of_costs before recomputation: 76
[STAT] neighbor.old_sum_of_costs before recomputation: 102
[STAT] sum_of_costs before recomputation: 4497
[DBG]  Validate solution immediately after SAT success.
[WARNING] Problem after SAT: Vertex conflict between agents 1 and 89 at location 724 at timestep 10
[DBG]  [DEBUG] Attempting immediate repair via init_lns because problem occurred after SAT (should be applied only for conflicts...).
[DBG]  [DEBUG] Passing 150 agents to init_lns (skip=true).
[DBG]  [DEBUG] path_table contents for selected agents (neighbor.agents):
[DBG]    Agent 28 => controlling path length=19
[DBG]    Agent 89 => controlling path length=25
[DBG]    Agent 113 => controlling path length=35
[DBG]  hodnota skip_initial_solution=1
[DBG]  We skip initialSolution => call buildCollisionData()
[DBG]  buildCollisionData() called â€“ skip_initial_solution case.
[DBG]  Agents.size()=150, collision_graph.size()=150
[DBG]  agent 1 => updateCollidingPairs => foundCollision
[DBG]  agent 28 => updateCollidingPairs => foundCollision
[DBG]  agent 42 => updateCollidingPairs => foundCollision
[DBG]  agent 89 => updateCollidingPairs => foundCollision
[DBG]  Conflicting agent pairs:
[DBG]  agent 1 is in conflict with agent 89
[DBG]  agent 28 is in conflict with agent 42
[DBG]  buildCollisionData() => sum_of_costs=4471, num_of_colliding_pairs=2
[DBG]  buildCollisionData done => sum_of_costs=4471, num_of_colliding_pairs=2
[DBG]  sum_of_cost hodnota: 4471
[DBG]  After skip/init build => iteration_stats.back(): sum_of_costs=4471, collisions=2
[DEBUG] Using default neighbor generation strategy for conflicts: 2
[DEBUG] Using default neighbor generation strategy for conflicts: 1
[DEBUG] Using default neighbor generation strategy for conflicts: 1
	InitLNS(PP): runtime = 0.00634029, iterations = 4, colliding pairs = 0, initial colliding pairs = 2, solution cost = 4505, initial solution cost = 4471, failed iterations = 0
[DBG]  [DEBUG] init_lns->sum_of_costs after init_lns->run: 4505
[DBG]  [DEBUG] sum_of_costs after assignment from init_lns->run: 4505
[DBG]  Recomputing sum_of_cost by dividing neighbor.sum_of_costs and neighbor.old_sum_of_costs
[STAT] sum_of_costs after recomputation: 4505
[STAT] Iteration 17
[DBG]  Using SAT operator (destroy+repair SAT).
[DBG]  ====================
[DBG]  SAT destroy operator called.
[DBG]  SAT heuristic: 2
[DBG]  key_agent_id: 28
[DBG]  key_agent_id global path length: 57
[DBG]  Submap content (global positions):
[DBG]  690 691 692 693 694 
[DBG]  722 723 724 725 726 
[DBG]  754 755 756 757 758 
[DBG]  786 787 788 789 790 
[DBG]  818 819 820 821 822 
[DBG]  Map content with agents and obstacles:
[DBG]  X . . X X 
[DBG]  . X . . . 
[DBG]  X . A . X 
[DBG]  . . . X . 
[DBG]  . . . . . 
[DBG]  content of the map structure that we pass to the SAT solver:
[DBG]  -1  1  1  -1  -1  
[DBG]  1  -1  1  1  1  
[DBG]  -1  1  1  1  -1  
[DBG]  1  1  1  -1  1  
[DBG]  1  1  1  1  1  
[DBG]  Identifying agents in a submap for rescheduling (when key_agent is there at the time 39):
[DBG]  Agent 28 found intervals in the sub-map:
[DBG]   [37..55]
[DBG]  Agent 28 (interval in submap: [37..55]) contains time 39, added to replan.
[DBG]  Agent 42 found intervals in the sub-map:
[DBG]   [48..54]
[DBG]  Agent 42 is not in sub-map at time 39 (intervals: 
[DBG]  [48..54] )
[DBG]  Agent 53 found intervals in the sub-map:
[DBG]   [33..38]
[DBG]  Agent 53 is not in sub-map at time 39 (intervals: 
[DBG]  [33..38] )
[DBG]  Agent 28 | Start (global): 756 -> (local): (2, 2) at time 39 | Goal (global): 726 -> (local): (1, 4) at time 55
[DBG]  [REPAIR] SAT destroy operator called.
[DBG]  [REPAIR] SAT operator â€“ launching subproblem FOR OPTIMIZATION.
[DBG]  Creating local paths (sx, sy) in the submap for T_sync = 39
[DBG]    Agent 28 (global paths from T=39 to 55) has local path: (2,2) (3,2) (3,1) (3,1) (4,1) (4,0) (4,0) (4,0) (4,0) (4,0) (4,1) (3,1) (3,2) (2,2) (1,2) (1,3) (1,4) 
[DBG]  Checking input data for SAT solver:
[DBG]    - Number of agents to replan: 1
[DBG]  Agent 28 has the original local path length: 17 => Start (2,2), Goal (1,4)
[DBG]  Start position: (2, 2), 
[DBG]  Goal position: (1, 4), 
[DBG]  SAT instance and solver created.
Currently solving
Instance name: scen
Map name: map
Encoding used: disappear_at_goal
SAT solver used: Kissat
Optimizing function: sum of costs
Number of agents: 1
Mks LB: 4
SoC LB: 4
Delta: 0
Remaining time: 300000 [ms]

Found plan [agents = 1] [timesteps = 4]
Agent #0 : 7 8 4 5 

[STAT] Solver returned: 0
[DBG]  Agent (index) 28 | New local path (submap idx):
[DBG]  7 8 4 5 
[DBG]  Update the agent path 28 | Original local length: 17 | New local length: 4
[DBG]  agent 28 t=0 => decoded (sx,sy)=(2,2) => global_id=756
[DBG]  agent 28 t=1 => decoded (sx,sy)=(2,3) => global_id=757
[DBG]  agent 28 t=2 => decoded (sx,sy)=(1,3) => global_id=725
[DBG]  agent 28 t=3 => decoded (sx,sy)=(1,4) => global_id=726
[DBG]  Complete path of agent 28:
[DBG]    Original: 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 629 597 565 565 533 533 501 469 470 469 469 469 501 533 533 533 533 565 597 629 661 660 692 724 756 788 787 787 819 818 818 818 818 818 819 787 788 756 724 725 726 727 
[DBG]    New:     661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 629 597 565 565 533 533 501 469 470 469 469 469 501 533 533 533 533 565 597 629 661 660 692 724 756 757 725 726 727 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 629 597 565 565 533 533 501 469 470 469 469 469 501 533 533 533 533 565 597 629 661 660 692 724 
[DBG]    Local path (in submap): 756 757 725 726 727 
[DBG]    Suffix (out of submap): 
[DBG]  Original agent path length 28 je: 57
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 0: 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 629, 597, 565, 565, 533, 533, 501, 469, 470, 469, 469, 469, 501, 533, 533, 533, 533, 565, 597, 629, 661, 660, 692, 724, 756, 757, 725, 726, 727, 
[DBG]  Path for agent 28 updated, resulting length: 44
[DBG]  Paths successfully updated.
[DBG]  (LNS.cpp) New path for agent 28: 
[DBG]  661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 629, 597, 565, 565, 533, 533, 501, 469, 470, 469, 469, 469, 501, 533, 533, 533, 533, 565, 597, 629, 661, 660, 692, 724, 756, 757, 725, 726, 727, 
[DBG]  Delta value: 0.232143
[DBG]  Rewarding metric index = 1
[DBG]  component_weights = {0.251299, 0.188083, 0.195384, 0.365235}
[DBG]  opSuccess value: 1
[STAT] neighbor.sum_of_costs before recomputation: 43
[STAT] neighbor.old_sum_of_costs before recomputation: 56
[STAT] sum_of_costs before recomputation: 4505
[DBG]  Validate solution immediately after SAT success.
[WARNING] Problem after SAT: Target conflict: agent 42 (len 56) traverses target of agent 28 (len 43) at location 727 at timestep 55
[DBG]  [DEBUG] Attempting immediate repair via init_lns because problem occurred after SAT (should be applied only for conflicts...).
[DBG]  [DEBUG] Passing 150 agents to init_lns (skip=true).
[DBG]  [DEBUG] path_table contents for selected agents (neighbor.agents):
[DBG]    Agent 28 => controlling path length=44
[DBG]  hodnota skip_initial_solution=1
[DBG]  We skip initialSolution => call buildCollisionData()
[DBG]  buildCollisionData() called â€“ skip_initial_solution case.
[DBG]  Agents.size()=150, collision_graph.size()=150
[DBG]  agent 28 => updateCollidingPairs => foundCollision
[DBG]  agent 42 => updateCollidingPairs => foundCollision
[DBG]  Conflicting agent pairs:
[DBG]  agent 28 is in conflict with agent 42
[DBG]  buildCollisionData() => sum_of_costs=4492, num_of_colliding_pairs=1
[DBG]  buildCollisionData done => sum_of_costs=4492, num_of_colliding_pairs=1
[DBG]  sum_of_cost hodnota: 4492
[DBG]  After skip/init build => iteration_stats.back(): sum_of_costs=4492, collisions=1
[DEBUG] Using default neighbor generation strategy for conflicts: 1
[DEBUG] Using default neighbor generation strategy for conflicts: 2
[DEBUG] Using default neighbor generation strategy for conflicts: 1
[DEBUG] Using default neighbor generation strategy for conflicts: 1
	InitLNS(PP): runtime = 0.00764121, iterations = 5, colliding pairs = 0, initial colliding pairs = 1, solution cost = 4480, initial solution cost = 4492, failed iterations = 0
[DBG]  [DEBUG] init_lns->sum_of_costs after init_lns->run: 4480
[DBG]  [DEBUG] sum_of_costs after assignment from init_lns->run: 4480
[DBG]  Recomputing sum_of_cost by dividing neighbor.sum_of_costs and neighbor.old_sum_of_costs
[STAT] sum_of_costs after recomputation: 4480
[STAT] Iteration 18
[DBG]  Using SAT operator (destroy+repair SAT).
[DBG]  ====================
[DBG]  SAT destroy operator called.
[DBG]  SAT heuristic: 2
[DBG]  key_agent_id: 28
[DBG]  key_agent_id global path length: 44
[DBG]  Submap content (global positions):
[DBG]  594 595 596 597 598 
[DBG]  626 627 628 629 630 
[DBG]  658 659 660 661 662 
[DBG]  690 691 692 693 694 
[DBG]  722 723 724 725 726 
[DBG]  Map content with agents and obstacles:
[DBG]  . X A A X 
[DBG]  X A . . X 
[DBG]  . . A . X 
[DBG]  X . A X X 
[DBG]  . X A . . 
[DBG]  content of the map structure that we pass to the SAT solver:
[DBG]  1  -1  1  1  -1  
[DBG]  -1  1  1  1  -1  
[DBG]  1  1  1  1  -1  
[DBG]  -1  1  1  -1  -1  
[DBG]  1  -1  1  1  1  
[DBG]  Identifying agents in a submap for rescheduling (when key_agent is there at the time 34):
[DBG]  Agent 26 found intervals in the sub-map:
[DBG]   [29..35]
[DBG]  Agent 26 (interval in submap: [29..35]) contains time 34, added to replan.
[DBG]  Agent 28 found intervals in the sub-map:
[DBG]   [0..42]
[DBG]  Agent 28 (interval in submap: [0..42]) contains time 34, added to replan.
[DBG]  Agent 42 found intervals in the sub-map:
[DBG]   [34..41]
[DBG]  Agent 42 (interval in submap: [34..41]) contains time 34, added to replan.
[DBG]  Agent 45 found intervals in the sub-map:
[DBG]   [33..38]
[DBG]  Agent 45 (interval in submap: [33..38]) contains time 34, added to replan.
[DBG]  Agent 53 found intervals in the sub-map:
[DBG]   [29..34]
[DBG]  Agent 53 (interval in submap: [29..34]) contains time 34, added to replan.
[DBG]  Agent 148 found intervals in the sub-map:
[DBG]   [27..38]
[DBG]  Agent 148 (interval in submap: [27..38]) contains time 34, added to replan.
[DBG]  Agent 26 | Start (global): 692 -> (local): (3, 2) at time 34 | Goal (global): 724 -> (local): (4, 2) at time 35
[DBG]  Agent 28 | Start (global): 660 -> (local): (2, 2) at time 34 | Goal (global): 726 -> (local): (4, 4) at time 42
[DBG]  Agent 42 | Start (global): 597 -> (local): (0, 3) at time 34 | Goal (global): 726 -> (local): (4, 4) at time 41
[DBG]  Agent 45 | Start (global): 596 -> (local): (0, 2) at time 34 | Goal (global): 724 -> (local): (4, 2) at time 38
[DBG]  Agent 53 | Start (global): 724 -> (local): (4, 2) at time 34 | Goal (global): 724 -> (local): (4, 2) at time 34
[DBG]  Agent 148 | Start (global): 627 -> (local): (1, 1) at time 34 | Goal (global): 660 -> (local): (2, 2) at time 38
[DBG]  [REPAIR] SAT destroy operator called.
[DBG]  [REPAIR] SAT operator â€“ launching subproblem FOR OPTIMIZATION.
[DBG]  Creating local paths (sx, sy) in the submap for T_sync = 34
[DBG]    Agent 26 (global paths from T=34 to 35) has local path: (3,2) (4,2) 
[DBG]    Agent 28 (global paths from T=34 to 42) has local path: (2,2) (3,2) (3,1) (3,1) (3,1) (3,2) (4,2) (4,3) (4,4) 
[DBG]    Agent 42 (global paths from T=34 to 41) has local path: (0,3) (0,2) (1,2) (2,2) (3,2) (4,2) (4,3) (4,4) 
[DBG]    Agent 45 (global paths from T=34 to 38) has local path: (0,2) (1,2) (2,2) (3,2) (4,2) 
[DBG]    Agent 53 (global paths from T=34 to 34) has local path: (4,2) 
[DBG]    Agent 148 (global paths from T=34 to 38) has local path: (1,1) (1,1) (1,1) (2,1) (2,2) 
[DBG]  Checking input data for SAT solver:
[DBG]    - Number of agents to replan: 6
[DBG]  Agent 26 has the original local path length: 2 => Start (3,2), Goal (4,2)
[DBG]  Agent 28 has the original local path length: 9 => Start (2,2), Goal (4,4)
[DBG]  Agent 42 has the original local path length: 8 => Start (0,3), Goal (4,4)
[DBG]  Agent 45 has the original local path length: 5 => Start (0,2), Goal (4,2)
[DBG]  Agent 53 has the original local path length: 1 => Start (4,2), Goal (4,2)
[DBG]  Agent 148 has the original local path length: 5 => Start (1,1), Goal (2,2)
[DBG]  Start position: (3, 2), (2, 2), (0, 3), (0, 2), (4, 2), (1, 1), 
[DBG]  Goal position: (4, 2), (4, 4), (4, 4), (4, 2), (4, 2), (2, 2), 
[DBG]  SAT instance and solver created.
Currently solving
Instance name: scen
Map name: map
Encoding used: disappear_at_goal
SAT solver used: Kissat
Optimizing function: sum of costs
Number of agents: 6
Mks LB: 8
SoC LB: 24
Delta: 0
Remaining time: 300000 [ms]

[STAT] Solver returned: -1
[DBG]  SAT solver failed.
[STAT] SAT solver failed to find a valid solution.
[DBG]  ====================
[DBG]  SAT destroy operator called.
[DBG]  SAT heuristic: 2
[DBG]  key_agent_id: 28
[DBG]  key_agent_id global path length: 44
[DBG]  Submap content (global positions):
[DBG]  595 596 597 598 599 
[DBG]  627 628 629 630 631 
[DBG]  659 660 661 662 663 
[DBG]  691 692 693 694 695 
[DBG]  723 724 725 726 727 
[DBG]  Map content with agents and obstacles:
[DBG]  X . . X . 
[DBG]  . . . X . 
[DBG]  . A A X X 
[DBG]  . . X X X 
[DBG]  X . . . . 
[DBG]  content of the map structure that we pass to the SAT solver:
[DBG]  -1  1  1  -1  1  
[DBG]  1  1  1  -1  1  
[DBG]  1  1  1  -1  -1  
[DBG]  1  1  -1  -1  -1  
[DBG]  -1  1  1  1  1  
[DBG]  Identifying agents in a submap for rescheduling (when key_agent is there at the time 16):
[DBG]  Agent 28 found intervals in the sub-map:
[DBG]   [0..43]
[DBG]  Agent 28 (interval in submap: [0..43]) contains time 16, added to replan.
[DBG]  Agent 30 found intervals in the sub-map:
[DBG]   [20..25]
[DBG]  Agent 30 is not in sub-map at time 16 (intervals: 
[DBG]  [20..25] )
[DBG]  Agent 114 found intervals in the sub-map:
[DBG]   [15..19]
[DBG]  Agent 114 (interval in submap: [15..19]) contains time 16, added to replan.
[DBG]  Agent 28 | Start (global): 661 -> (local): (2, 2) at time 16 | Goal (global): 727 -> (local): (4, 4) at time 43
[DBG]  Agent 114 | Start (global): 660 -> (local): (2, 1) at time 16 | Goal (global): 597 -> (local): (0, 2) at time 19
[DBG]  [REPAIR] SAT destroy operator called.
[DBG]  [REPAIR] SAT operator â€“ launching subproblem FOR OPTIMIZATION.
[DBG]  Creating local paths (sx, sy) in the submap for T_sync = 16
[DBG]    Agent 28 (global paths from T=16 to 43) has local path: (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,1) (2,1) (3,1) (3,0) (3,0) (3,0) (3,1) (4,1) (4,2) (4,3) (4,4) 
[DBG]    Agent 114 (global paths from T=16 to 19) has local path: (2,1) (1,1) (1,2) (0,2) 
[DBG]  Checking input data for SAT solver:
[DBG]    - Number of agents to replan: 2
[DBG]  Agent 28 has the original local path length: 28 => Start (2,2), Goal (4,4)
[DBG]  Agent 114 has the original local path length: 4 => Start (2,1), Goal (0,2)
[DBG]  Start position: (2, 2), (2, 1), 
[DBG]  Goal position: (4, 4), (0, 2), 
[DBG]  SAT instance and solver created.
Currently solving
Instance name: scen
Map name: map
Encoding used: disappear_at_goal
SAT solver used: Kissat
Optimizing function: sum of costs
Number of agents: 2
Mks LB: 7
SoC LB: 11
Delta: 0
Remaining time: 300000 [ms]

Found plan [agents = 2] [timesteps = 7]
Agent #0 : 9 8 11 12 13 14 15 
Agent #1 : 8 4 5 1 0 0 0 

[STAT] Solver returned: 0
[DBG]  Agent (index) 28 | New local path (submap idx):
[DBG]  9 8 11 12 13 14 15 
[DBG]  Agent (index) 114 | New local path (submap idx):
[DBG]  8 4 5 1 
[DBG]  Update the agent path 28 | Original local length: 28 | New local length: 7
[DBG]  agent 28 t=0 => decoded (sx,sy)=(2,2) => global_id=661
[DBG]  agent 28 t=1 => decoded (sx,sy)=(2,1) => global_id=660
[DBG]  agent 28 t=2 => decoded (sx,sy)=(3,1) => global_id=692
[DBG]  agent 28 t=3 => decoded (sx,sy)=(4,1) => global_id=724
[DBG]  agent 28 t=4 => decoded (sx,sy)=(4,2) => global_id=725
[DBG]  agent 28 t=5 => decoded (sx,sy)=(4,3) => global_id=726
[DBG]  agent 28 t=6 => decoded (sx,sy)=(4,4) => global_id=727
[DBG]  Complete path of agent 28:
[DBG]    Original: 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 660 660 692 691 691 691 692 724 725 726 727 
[DBG]    New:     661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 660 692 724 725 726 727 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 
[DBG]    Local path (in submap): 661 660 692 724 725 726 727 
[DBG]    Suffix (out of submap): 
[DBG]  Original agent path length 28 je: 44
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 0: 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 660, 692, 724, 725, 726, 727, 
[DBG]  Path for agent 28 updated, resulting length: 23
[DBG]  Update the agent path 114 | Original local length: 4 | New local length: 4
[DBG]  agent 114 t=0 => decoded (sx,sy)=(2,1) => global_id=660
[DBG]  agent 114 t=1 => decoded (sx,sy)=(1,1) => global_id=628
[DBG]  agent 114 t=2 => decoded (sx,sy)=(1,2) => global_id=629
[DBG]  agent 114 t=3 => decoded (sx,sy)=(0,2) => global_id=597
[DBG]  Complete path of agent 114:
[DBG]    Original: 875 843 811 779 780 781 782 783 751 719 720 721 689 657 658 659 660 628 629 597 565 533 501 469 470 438 439 407 375 343 344 312 313 281 249 217 185 153 154 
[DBG]    New:     875 843 811 779 780 781 782 783 751 719 720 721 689 657 658 659 660 628 629 597 565 533 501 469 470 438 439 407 375 343 344 312 313 281 249 217 185 153 154 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 875 843 811 779 780 781 782 783 751 719 720 721 689 657 658 659 
[DBG]    Local path (in submap): 660 628 629 597 
[DBG]    Suffix (out of submap): 565 533 501 469 470 438 439 407 375 343 344 312 313 281 249 217 185 153 154 
[DBG]  Original agent path length 114 je: 39
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 1: 875, 843, 811, 779, 780, 781, 782, 783, 751, 719, 720, 721, 689, 657, 658, 659, 660, 628, 629, 597, 565, 533, 501, 469, 470, 438, 439, 407, 375, 343, 344, 312, 313, 281, 249, 217, 185, 153, 154, 
[DBG]  Path for agent 114 updated, resulting length: 39
[DBG]  Paths successfully updated.
[DBG]  (LNS.cpp) New path for agent 28: 
[DBG]  661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 660, 692, 724, 725, 726, 727, 
[DBG]  (LNS.cpp) New path for agent 114: 
[DBG]  875, 843, 811, 779, 780, 781, 782, 783, 751, 719, 720, 721, 689, 657, 658, 659, 660, 628, 629, 597, 565, 533, 501, 469, 470, 438, 439, 407, 375, 343, 344, 312, 313, 281, 249, 217, 185, 153, 154, 
[DBG]  Delta value: 0.259259
[DBG]  Rewarding metric index = 0
[DBG]  component_weights = {0.307916, 0.17386, 0.180609, 0.337615}
[DBG]  opSuccess value: 1
[STAT] neighbor.sum_of_costs before recomputation: 60
[STAT] neighbor.old_sum_of_costs before recomputation: 81
[STAT] sum_of_costs before recomputation: 4480
[DBG]  Validate solution immediately after SAT success.
[WARNING] Problem after SAT: Target conflict: agent 42 (len 43) traverses target of agent 28 (len 22) at location 727 at timestep 42
[DBG]  [DEBUG] Attempting immediate repair via init_lns because problem occurred after SAT (should be applied only for conflicts...).
[DBG]  [DEBUG] Passing 150 agents to init_lns (skip=true).
[DBG]  [DEBUG] path_table contents for selected agents (neighbor.agents):
[DBG]    Agent 28 => controlling path length=23
[DBG]    Agent 114 => controlling path length=39
[DBG]  hodnota skip_initial_solution=1
[DBG]  We skip initialSolution => call buildCollisionData()
[DBG]  buildCollisionData() called â€“ skip_initial_solution case.
[DBG]  Agents.size()=150, collision_graph.size()=150
[DBG]  agent 28 => updateCollidingPairs => foundCollision
[DBG]  agent 42 => updateCollidingPairs => foundCollision
[DBG]  Conflicting agent pairs:
[DBG]  agent 28 is in conflict with agent 42
[DBG]  buildCollisionData() => sum_of_costs=4459, num_of_colliding_pairs=1
[DBG]  buildCollisionData done => sum_of_costs=4459, num_of_colliding_pairs=1
[DBG]  sum_of_cost hodnota: 4459
[DBG]  After skip/init build => iteration_stats.back(): sum_of_costs=4459, collisions=1
[DEBUG] Using default neighbor generation strategy for conflicts: 2
[DEBUG] Using default neighbor generation strategy for conflicts: 1
	InitLNS(PP): runtime = 0.00235596, iterations = 3, colliding pairs = 0, initial colliding pairs = 1, solution cost = 4478, initial solution cost = 4459, failed iterations = 0
[DBG]  [DEBUG] init_lns->sum_of_costs after init_lns->run: 4478
[DBG]  [DEBUG] sum_of_costs after assignment from init_lns->run: 4478
[DBG]  Recomputing sum_of_cost by dividing neighbor.sum_of_costs and neighbor.old_sum_of_costs
[STAT] sum_of_costs after recomputation: 4478
[STAT] Iteration 19
[DBG]  Using SAT operator (destroy+repair SAT).
[DBG]  ====================
[DBG]  SAT destroy operator called.
[DBG]  SAT heuristic: 2
[DBG]  key_agent_id: 28
[DBG]  key_agent_id global path length: 44
[DBG]  Submap content (global positions):
[DBG]  595 596 597 598 599 
[DBG]  627 628 629 630 631 
[DBG]  659 660 661 662 663 
[DBG]  691 692 693 694 695 
[DBG]  723 724 725 726 727 
[DBG]  Map content with agents and obstacles:
[DBG]  X . . X . 
[DBG]  . . . X . 
[DBG]  . . A X X 
[DBG]  . . X X X 
[DBG]  X A . . . 
[DBG]  content of the map structure that we pass to the SAT solver:
[DBG]  -1  1  1  -1  1  
[DBG]  1  1  1  -1  1  
[DBG]  1  1  1  -1  -1  
[DBG]  1  1  -1  -1  -1  
[DBG]  -1  1  1  1  1  
[DBG]  Identifying agents in a submap for rescheduling (when key_agent is there at the time 4):
[DBG]  Agent 7 found intervals in the sub-map:
[DBG]   [1..3]
[DBG]  Agent 7 is not in sub-map at time 4 (intervals: 
[DBG]  [1..3] )
[DBG]  Agent 28 found intervals in the sub-map:
[DBG]   [0..43]
[DBG]  Agent 28 (interval in submap: [0..43]) contains time 4, added to replan.
[DBG]  Agent 108 found intervals in the sub-map:
[DBG]   [0..4]
[DBG]  Agent 108 (interval in submap: [0..4]) contains time 4, added to replan.
[DBG]  Agent 28 | Start (global): 661 -> (local): (2, 2) at time 4 | Goal (global): 727 -> (local): (4, 4) at time 43
[DBG]  Agent 108 | Start (global): 724 -> (local): (4, 1) at time 4 | Goal (global): 724 -> (local): (4, 1) at time 4
[DBG]  [REPAIR] SAT destroy operator called.
[DBG]  [REPAIR] SAT operator â€“ launching subproblem FOR OPTIMIZATION.
[DBG]  Creating local paths (sx, sy) in the submap for T_sync = 4
[DBG]    Agent 28 (global paths from T=4 to 43) has local path: (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,1) (2,1) (3,1) (3,0) (3,0) (3,0) (3,1) (4,1) (4,2) (4,3) (4,4) 
[DBG]    Agent 108 (global paths from T=4 to 4) has local path: (4,1) 
[DBG]  Checking input data for SAT solver:
[DBG]    - Number of agents to replan: 2
[DBG]  Agent 28 has the original local path length: 40 => Start (2,2), Goal (4,4)
[DBG]  Agent 108 has the original local path length: 1 => Start (4,1), Goal (4,1)
[DBG]  Start position: (2, 2), (4, 1), 
[DBG]  Goal position: (4, 4), (4, 1), 
[DBG]  SAT instance and solver created.
Currently solving
Instance name: scen
Map name: map
Encoding used: disappear_at_goal
SAT solver used: Kissat
Optimizing function: sum of costs
Number of agents: 2
Mks LB: 7
SoC LB: 8
Delta: 0
Remaining time: 300000 [ms]

Found plan [agents = 2] [timesteps = 7]
Agent #0 : 9 8 11 12 13 14 15 
Agent #1 : 12 0 0 0 0 0 0 

[STAT] Solver returned: 0
[DBG]  Agent (index) 28 | New local path (submap idx):
[DBG]  9 8 11 12 13 14 15 
[DBG]  Agent (index) 108 | New local path (submap idx):
[DBG]  12 
[DBG]  Update the agent path 28 | Original local length: 40 | New local length: 7
[DBG]  agent 28 t=0 => decoded (sx,sy)=(2,2) => global_id=661
[DBG]  agent 28 t=1 => decoded (sx,sy)=(2,1) => global_id=660
[DBG]  agent 28 t=2 => decoded (sx,sy)=(3,1) => global_id=692
[DBG]  agent 28 t=3 => decoded (sx,sy)=(4,1) => global_id=724
[DBG]  agent 28 t=4 => decoded (sx,sy)=(4,2) => global_id=725
[DBG]  agent 28 t=5 => decoded (sx,sy)=(4,3) => global_id=726
[DBG]  agent 28 t=6 => decoded (sx,sy)=(4,4) => global_id=727
[DBG]  Complete path of agent 28:
[DBG]    Original: 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 660 660 692 691 691 691 692 724 725 726 727 
[DBG]    New:     661 661 661 661 661 660 692 724 725 726 727 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 661 661 661 661 
[DBG]    Local path (in submap): 661 660 692 724 725 726 727 
[DBG]    Suffix (out of submap): 
[DBG]  Original agent path length 28 je: 44
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 0: 661, 661, 661, 661, 661, 660, 692, 724, 725, 726, 727, 
[DBG]  Path for agent 28 updated, resulting length: 11
[DBG]  Update the agent path 108 | Original local length: 1 | New local length: 1
[DBG]  agent 108 t=0 => decoded (sx,sy)=(4,1) => global_id=724
[DBG]  Complete path of agent 108:
[DBG]    Original: 628 660 692 692 724 756 756 788 820 821 822 854 886 887 888 920 921 922 954 955 956 988 989 1021 
[DBG]    New:     628 660 692 692 724 756 756 788 820 821 822 854 886 887 888 920 921 922 954 955 956 988 989 1021 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 628 660 692 692 
[DBG]    Local path (in submap): 724 
[DBG]    Suffix (out of submap): 756 756 788 820 821 822 854 886 887 888 920 921 922 954 955 956 988 989 1021 
[DBG]  Original agent path length 108 je: 24
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 1: 628, 660, 692, 692, 724, 756, 756, 788, 820, 821, 822, 854, 886, 887, 888, 920, 921, 922, 954, 955, 956, 988, 989, 1021, 
[DBG]  Path for agent 108 updated, resulting length: 24
[DBG]  Paths successfully updated.
[DBG]  (LNS.cpp) New path for agent 28: 
[DBG]  661, 661, 661, 661, 661, 660, 692, 724, 725, 726, 727, 
[DBG]  (LNS.cpp) New path for agent 108: 
[DBG]  628, 660, 692, 692, 724, 756, 756, 788, 820, 821, 822, 854, 886, 887, 888, 920, 921, 922, 954, 955, 956, 988, 989, 1021, 
[DBG]  Delta value: 0.5
[DBG]  Rewarding metric index = 3
[DBG]  component_weights = {0.257571, 0.145434, 0.151079, 0.445917}
[DBG]  opSuccess value: 1
[STAT] neighbor.sum_of_costs before recomputation: 33
[STAT] neighbor.old_sum_of_costs before recomputation: 66
[STAT] sum_of_costs before recomputation: 4478
[DBG]  Validate solution immediately after SAT success.
[WARNING] Problem after SAT: Target conflict: agent 1 (len 14) traverses target of agent 28 (len 10) at location 727 at timestep 13
[DBG]  [DEBUG] Attempting immediate repair via init_lns because problem occurred after SAT (should be applied only for conflicts...).
[DBG]  [DEBUG] Passing 150 agents to init_lns (skip=true).
[DBG]  [DEBUG] path_table contents for selected agents (neighbor.agents):
[DBG]    Agent 28 => controlling path length=11
[DBG]    Agent 108 => controlling path length=24
[DBG]  hodnota skip_initial_solution=1
[DBG]  We skip initialSolution => call buildCollisionData()
[DBG]  buildCollisionData() called â€“ skip_initial_solution case.
[DBG]  Agents.size()=150, collision_graph.size()=150
[DBG]  agent 1 => updateCollidingPairs => foundCollision
[DBG]  agent 28 => updateCollidingPairs => foundCollision
[DBG]  agent 42 => updateCollidingPairs => foundCollision
[DBG]  agent 91 => updateCollidingPairs => foundCollision
[DBG]  Conflicting agent pairs:
[DBG]  agent 1 is in conflict with agent 28
[DBG]  agent 28 is in conflict with agent 42
[DBG]  agent 28 is in conflict with agent 91
[DBG]  buildCollisionData() => sum_of_costs=4445, num_of_colliding_pairs=3
[DBG]  buildCollisionData done => sum_of_costs=4445, num_of_colliding_pairs=3
[DBG]  sum_of_cost hodnota: 4445
[DBG]  After skip/init build => iteration_stats.back(): sum_of_costs=4445, collisions=3
[DEBUG] Using default neighbor generation strategy for conflicts: 2
[DEBUG] Using default neighbor generation strategy for conflicts: 2
[DEBUG] Using default neighbor generation strategy for conflicts: 1
	InitLNS(PP): runtime = 0.00325663, iterations = 4, colliding pairs = 0, initial colliding pairs = 3, solution cost = 4489, initial solution cost = 4445, failed iterations = 0
[DBG]  [DEBUG] init_lns->sum_of_costs after init_lns->run: 4489
[DBG]  [DEBUG] sum_of_costs after assignment from init_lns->run: 4489
[DBG]  Recomputing sum_of_cost by dividing neighbor.sum_of_costs and neighbor.old_sum_of_costs
[STAT] sum_of_costs after recomputation: 4489
[STAT] Iteration 20
[DBG]  Using SAT operator (destroy+repair SAT).
[DBG]  ====================
[DBG]  SAT destroy operator called.
[DBG]  SAT heuristic: 2
[DBG]  key_agent_id: 28
[DBG]  key_agent_id global path length: 44
[DBG]  Submap content (global positions):
[DBG]  661 662 663 664 665 
[DBG]  693 694 695 696 697 
[DBG]  725 726 727 728 729 
[DBG]  757 758 759 760 761 
[DBG]  789 790 791 792 793 
[DBG]  Map content with agents and obstacles:
[DBG]  . X X . X 
[DBG]  X X X . . 
[DBG]  . . A . . 
[DBG]  . X A X . 
[DBG]  X . X . . 
[DBG]  content of the map structure that we pass to the SAT solver:
[DBG]  1  -1  -1  1  -1  
[DBG]  -1  -1  -1  1  1  
[DBG]  1  1  1  1  1  
[DBG]  1  -1  1  -1  1  
[DBG]  -1  1  -1  1  1  
[DBG]  Identifying agents in a submap for rescheduling (when key_agent is there at the time 43):
[DBG]  Agent 1 found intervals in the sub-map:
[DBG]   [10..14]
[DBG]  Agent 1 is not in sub-map at time 43 (intervals: 
[DBG]  [10..14] )
[DBG]  Agent 28 found intervals in the sub-map:
[DBG]   [0..32] [37..43]
[DBG]  Agent 28 (interval in submap: [37..43]) contains time 43, added to replan.
[DBG]  Agent 42 found intervals in the sub-map:
[DBG]   [40..43]
[DBG]  Agent 42 (interval in submap: [40..43]) contains time 43, added to replan.
[DBG]  Agent 28 | Start (global): 727 -> (local): (2, 2) at time 43 | Goal (global): 727 -> (local): (2, 2) at time 43
[DBG]  Agent 42 | Start (global): 759 -> (local): (3, 2) at time 43 | Goal (global): 759 -> (local): (3, 2) at time 43
[DBG]  [REPAIR] SAT destroy operator called.
[DBG]  [REPAIR] SAT operator â€“ launching subproblem FOR OPTIMIZATION.
[DBG]  Creating local paths (sx, sy) in the submap for T_sync = 43
[DBG]    Agent 28 (global paths from T=43 to 43) has local path: (2,2) 
[DBG]    Agent 42 (global paths from T=43 to 43) has local path: (3,2) 
[DBG]  Checking input data for SAT solver:
[DBG]    - Number of agents to replan: 2
[DBG]  Agent 28 has the original local path length: 1 => Start (2,2), Goal (2,2)
[DBG]  Agent 42 has the original local path length: 1 => Start (3,2), Goal (3,2)
[DBG]  Start position: (2, 2), (3, 2), 
[DBG]  Goal position: (2, 2), (3, 2), 
[DBG]  SAT instance and solver created.
Currently solving
Instance name: scen
Map name: map
Encoding used: disappear_at_goal
SAT solver used: Kissat
Optimizing function: sum of costs
Number of agents: 2
Mks LB: 1
SoC LB: 2
Delta: 0
Remaining time: 300000 [ms]

Found plan [agents = 2] [timesteps = 1]
Agent #0 : 6 
Agent #1 : 10 

[STAT] Solver returned: 0
[DBG]  Agent (index) 28 | New local path (submap idx):
[DBG]  6 
[DBG]  Agent (index) 42 | New local path (submap idx):
[DBG]  10 
[DBG]  Update the agent path 28 | Original local length: 1 | New local length: 1
[DBG]  agent 28 t=0 => decoded (sx,sy)=(2,2) => global_id=727
[DBG]  Complete path of agent 28:
[DBG]    Original: 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 660 660 692 724 725 757 757 757 725 726 727 
[DBG]    New:     661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 660 660 692 724 725 757 757 757 725 726 727 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 660 660 692 724 725 757 757 757 725 726 
[DBG]    Local path (in submap): 727 
[DBG]    Suffix (out of submap): 
[DBG]  Original agent path length 28 je: 44
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 0: 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 660, 660, 692, 724, 725, 757, 757, 757, 725, 726, 727, 
[DBG]  Path for agent 28 updated, resulting length: 44
[DBG]  Update the agent path 42 | Original local length: 1 | New local length: 1
[DBG]  agent 42 t=0 => decoded (sx,sy)=(3,2) => global_id=759
[DBG]  Complete path of agent 42:
[DBG]    Original: 224 256 257 258 259 291 323 355 387 419 420 421 422 454 455 456 457 458 459 460 428 429 430 431 463 464 465 466 467 468 469 501 533 565 597 629 628 660 692 724 725 726 727 759 
[DBG]    New:     224 256 257 258 259 291 323 355 387 419 420 421 422 454 455 456 457 458 459 460 428 429 430 431 463 464 465 466 467 468 469 501 533 565 597 629 628 660 692 724 725 726 727 759 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 224 256 257 258 259 291 323 355 387 419 420 421 422 454 455 456 457 458 459 460 428 429 430 431 463 464 465 466 467 468 469 501 533 565 597 629 628 660 692 724 725 726 727 
[DBG]    Local path (in submap): 759 
[DBG]    Suffix (out of submap): 
[DBG]  Original agent path length 42 je: 44
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 1: 224, 256, 257, 258, 259, 291, 323, 355, 387, 419, 420, 421, 422, 454, 455, 456, 457, 458, 459, 460, 428, 429, 430, 431, 463, 464, 465, 466, 467, 468, 469, 501, 533, 565, 597, 629, 628, 660, 692, 724, 725, 726, 727, 759, 
[DBG]  Path for agent 42 updated, resulting length: 44
[DBG]  Paths successfully updated.
[DBG]  (LNS.cpp) New path for agent 28: 
[DBG]  661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 660, 660, 692, 724, 725, 757, 757, 757, 725, 726, 727, 
[DBG]  (LNS.cpp) New path for agent 42: 
[DBG]  224, 256, 257, 258, 259, 291, 323, 355, 387, 419, 420, 421, 422, 454, 455, 456, 457, 458, 459, 460, 428, 429, 430, 431, 463, 464, 465, 466, 467, 468, 469, 501, 533, 565, 597, 629, 628, 660, 692, 724, 725, 726, 727, 759, 
[DBG]  Delta value: 0
[DBG]  Rewarding metric index = 3
[DBG]  component_weights = {0.251664, 0.142099, 0.147614, 0.458623}
[DBG]  opSuccess value: 1
[STAT] neighbor.sum_of_costs before recomputation: 86
[STAT] neighbor.old_sum_of_costs before recomputation: 86
[STAT] sum_of_costs before recomputation: 4489
[DBG]  Validate solution immediately after SAT success.
[DBG]  No problems after SAT replan.
[DBG]  Recomputing sum_of_cost by dividing neighbor.sum_of_costs and neighbor.old_sum_of_costs
[STAT] sum_of_costs after recomputation: 4489
[STAT] Iteration 21
[DBG]  Using SAT operator (destroy+repair SAT).
[DBG]  ====================
[DBG]  SAT destroy operator called.
[DBG]  SAT heuristic: 2
[DBG]  key_agent_id: 28
[DBG]  key_agent_id global path length: 44
[DBG]  Submap content (global positions):
[DBG]  595 596 597 598 599 
[DBG]  627 628 629 630 631 
[DBG]  659 660 661 662 663 
[DBG]  691 692 693 694 695 
[DBG]  723 724 725 726 727 
[DBG]  Map content with agents and obstacles:
[DBG]  X . A X . 
[DBG]  . . A X A 
[DBG]  . . A X X 
[DBG]  . . X X X 
[DBG]  X A . . . 
[DBG]  content of the map structure that we pass to the SAT solver:
[DBG]  -1  1  1  -1  1  
[DBG]  1  1  1  -1  1  
[DBG]  1  1  1  -1  -1  
[DBG]  1  1  -1  -1  -1  
[DBG]  -1  1  1  1  1  
[DBG]  Identifying agents in a submap for rescheduling (when key_agent is there at the time 24):
[DBG]  Agent 11 found intervals in the sub-map:
[DBG]   [24..31]
[DBG]  Agent 11 (interval in submap: [24..31]) contains time 24, added to replan.
[DBG]  Agent 28 found intervals in the sub-map:
[DBG]   [0..37] [41..43]
[DBG]  Agent 28 (interval in submap: [0..37]) contains time 24, added to replan.
[DBG]  Agent 30 found intervals in the sub-map:
[DBG]   [20..25]
[DBG]  Agent 30 (interval in submap: [20..25]) contains time 24, added to replan.
[DBG]  Agent 74 found intervals in the sub-map:
[DBG]   [20..24]
[DBG]  Agent 74 (interval in submap: [20..24]) contains time 24, added to replan.
[DBG]  Agent 144 found intervals in the sub-map:
[DBG]   [24..24]
[DBG]  Agent 144 (interval in submap: [24..24]) contains time 24, added to replan.
[DBG]  Agent 11 | Start (global): 724 -> (local): (4, 1) at time 24 | Goal (global): 659 -> (local): (2, 0) at time 31
[DBG]  Agent 28 | Start (global): 661 -> (local): (2, 2) at time 24 | Goal (global): 725 -> (local): (4, 2) at time 37
[DBG]  Agent 30 | Start (global): 629 -> (local): (1, 2) at time 24 | Goal (global): 597 -> (local): (0, 2) at time 25
[DBG]  Agent 74 | Start (global): 597 -> (local): (0, 2) at time 24 | Goal (global): 597 -> (local): (0, 2) at time 24
[DBG]  Agent 144 | Start (global): 631 -> (local): (1, 4) at time 24 | Goal (global): 631 -> (local): (1, 4) at time 24
[DBG]  [REPAIR] SAT destroy operator called.
[DBG]  [REPAIR] SAT operator â€“ launching subproblem FOR OPTIMIZATION.
[DBG]  Creating local paths (sx, sy) in the submap for T_sync = 24
[DBG]    Agent 11 (global paths from T=24 to 31) has local path: (4,1) (3,1) (2,1) (2,1) (2,1) (2,1) (2,1) (2,0) 
[DBG]    Agent 28 (global paths from T=24 to 37) has local path: (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,1) (2,1) (3,1) (4,1) (4,2) 
[DBG]    Agent 30 (global paths from T=24 to 25) has local path: (1,2) (0,2) 
[DBG]    Agent 74 (global paths from T=24 to 24) has local path: (0,2) 
[DBG]    Agent 144 (global paths from T=24 to 24) has local path: (1,4) 
[DBG]  Checking input data for SAT solver:
[DBG]    - Number of agents to replan: 5
[DBG]  Agent 11 has the original local path length: 8 => Start (4,1), Goal (2,0)
[DBG]  Agent 28 has the original local path length: 14 => Start (2,2), Goal (4,2)
[DBG]  Agent 30 has the original local path length: 2 => Start (1,2), Goal (0,2)
[DBG]  Agent 74 has the original local path length: 1 => Start (0,2), Goal (0,2)
[DBG]  Agent 144 has the original local path length: 1 => Start (1,4), Goal (1,4)
[DBG]  Start position: (4, 1), (2, 2), (1, 2), (0, 2), (1, 4), 
[DBG]  Goal position: (2, 0), (4, 2), (0, 2), (0, 2), (1, 4), 
[DBG]  SAT instance and solver created.
Currently solving
Instance name: scen
Map name: map
Encoding used: disappear_at_goal
SAT solver used: Kissat
Optimizing function: sum of costs
Number of agents: 5
Mks LB: 5
SoC LB: 13
Delta: 0
Remaining time: 300000 [ms]

Vertex conflict! Agents 0, 2, timestep 4, location 0
Vertex conflict! Agents 0, 3, timestep 4, location 0
Vertex conflict! Agents 0, 4, timestep 4, location 0
Vertex conflict! Agents 2, 3, timestep 2, location 0
Swapping conflict! Agents 2, 3, timestep 2, edge (0,0)
Vertex conflict! Agents 2, 3, timestep 3, location 0
Swapping conflict! Agents 2, 3, timestep 3, edge (0,0)
Vertex conflict! Agents 2, 3, timestep 4, location 0
Vertex conflict! Agents 2, 4, timestep 2, location 0
Swapping conflict! Agents 2, 4, timestep 2, edge (0,0)
Vertex conflict! Agents 2, 4, timestep 3, location 0
Swapping conflict! Agents 2, 4, timestep 3, edge (0,0)
Vertex conflict! Agents 2, 4, timestep 4, location 0
Vertex conflict! Agents 3, 4, timestep 1, location 0
Swapping conflict! Agents 3, 4, timestep 1, edge (0,0)
Vertex conflict! Agents 3, 4, timestep 2, location 0
Swapping conflict! Agents 3, 4, timestep 2, edge (0,0)
Vertex conflict! Agents 3, 4, timestep 3, location 0
Swapping conflict! Agents 3, 4, timestep 3, edge (0,0)
Vertex conflict! Agents 3, 4, timestep 4, location 0
Found plan [agents = 5] [timesteps = 5]
Agent #0 : 12 11 10 7 0 
Agent #1 : 9 8 11 12 13 
Agent #2 : 5 1 0 0 0 
Agent #3 : 1 0 0 0 0 
Agent #4 : 6 0 0 0 0 

[STAT] Solver returned: 0
[DBG]  Agent (index) 11 | New local path (submap idx):
[DBG]  12 11 10 7 
[DBG]  Agent (index) 28 | New local path (submap idx):
[DBG]  9 8 11 12 13 
[DBG]  Agent (index) 30 | New local path (submap idx):
[DBG]  5 1 
[DBG]  Agent (index) 74 | New local path (submap idx):
[DBG]  1 
[DBG]  Agent (index) 144 | New local path (submap idx):
[DBG]  6 
[DBG]  Update the agent path 11 | Original local length: 8 | New local length: 4
[DBG]  agent 11 t=0 => decoded (sx,sy)=(4,1) => global_id=724
[DBG]  agent 11 t=1 => decoded (sx,sy)=(3,1) => global_id=692
[DBG]  agent 11 t=2 => decoded (sx,sy)=(3,0) => global_id=691
[DBG]  agent 11 t=3 => decoded (sx,sy)=(2,0) => global_id=659
[DBG]  Complete path of agent 11:
[DBG]    Original: 990 989 988 956 955 923 923 923 923 891 891 891 891 859 858 857 856 855 823 822 821 820 788 756 724 692 660 660 660 660 660 659 658 657 
[DBG]    New:     990 989 988 956 955 923 923 923 923 891 891 891 891 859 858 857 856 855 823 822 821 820 788 756 724 692 691 659 658 657 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 990 989 988 956 955 923 923 923 923 891 891 891 891 859 858 857 856 855 823 822 821 820 788 756 
[DBG]    Local path (in submap): 724 692 691 659 658 657 
[DBG]    Suffix (out of submap): 
[DBG]  Original agent path length 11 je: 34
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 0: 990, 989, 988, 956, 955, 923, 923, 923, 923, 891, 891, 891, 891, 859, 858, 857, 856, 855, 823, 822, 821, 820, 788, 756, 724, 692, 691, 659, 658, 657, 
[DBG]  Path for agent 11 updated, resulting length: 30
[DBG]  Update the agent path 28 | Original local length: 14 | New local length: 5
[DBG]  agent 28 t=0 => decoded (sx,sy)=(2,2) => global_id=661
[DBG]  agent 28 t=1 => decoded (sx,sy)=(2,1) => global_id=660
[DBG]  agent 28 t=2 => decoded (sx,sy)=(3,1) => global_id=692
[DBG]  agent 28 t=3 => decoded (sx,sy)=(4,1) => global_id=724
[DBG]  agent 28 t=4 => decoded (sx,sy)=(4,2) => global_id=725
[DBG]  Complete path of agent 28:
[DBG]    Original: 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 660 660 692 724 725 757 757 757 725 726 727 
[DBG]    New:     661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 660 692 724 725 757 757 757 725 726 727 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 
[DBG]    Local path (in submap): 661 660 692 724 725 757 757 757 725 726 727 
[DBG]    Suffix (out of submap): 
[DBG]  Original agent path length 28 je: 44
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 1: 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 660, 692, 724, 725, 757, 757, 757, 725, 726, 727, 
[DBG]  Path for agent 28 updated, resulting length: 35
[DBG]  Update the agent path 30 | Original local length: 2 | New local length: 2
[DBG]  agent 30 t=0 => decoded (sx,sy)=(1,2) => global_id=629
[DBG]  agent 30 t=1 => decoded (sx,sy)=(0,2) => global_id=597
[DBG]  Complete path of agent 30:
[DBG]    Original: 922 923 891 891 891 891 891 891 891 859 858 857 856 824 823 822 821 820 788 756 724 692 660 628 629 597 565 566 534 502 503 
[DBG]    New:     922 923 891 891 891 891 891 891 891 859 858 857 856 824 823 822 821 820 788 756 724 692 660 628 629 597 565 566 534 502 503 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 922 923 891 891 891 891 891 891 891 859 858 857 856 824 823 822 821 820 788 756 724 692 660 628 
[DBG]    Local path (in submap): 629 597 
[DBG]    Suffix (out of submap): 565 566 534 502 503 
[DBG]  Original agent path length 30 je: 31
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 2: 922, 923, 891, 891, 891, 891, 891, 891, 891, 859, 858, 857, 856, 824, 823, 822, 821, 820, 788, 756, 724, 692, 660, 628, 629, 597, 565, 566, 534, 502, 503, 
[DBG]  Path for agent 30 updated, resulting length: 31
[DBG]  Update the agent path 74 | Original local length: 1 | New local length: 1
[DBG]  agent 74 t=0 => decoded (sx,sy)=(0,2) => global_id=597
[DBG]  Complete path of agent 74:
[DBG]    Original: 752 752 752 752 752 752 752 752 752 752 752 752 752 752 720 721 689 689 657 658 659 627 628 596 597 565 566 534 502 503 504 
[DBG]    New:     752 752 752 752 752 752 752 752 752 752 752 752 752 752 720 721 689 689 657 658 659 627 628 596 597 565 566 534 502 503 504 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 752 752 752 752 752 752 752 752 752 752 752 752 752 752 720 721 689 689 657 658 659 627 628 596 
[DBG]    Local path (in submap): 597 
[DBG]    Suffix (out of submap): 565 566 534 502 503 504 
[DBG]  Original agent path length 74 je: 31
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 3: 752, 752, 752, 752, 752, 752, 752, 752, 752, 752, 752, 752, 752, 752, 720, 721, 689, 689, 657, 658, 659, 627, 628, 596, 597, 565, 566, 534, 502, 503, 504, 
[DBG]  Path for agent 74 updated, resulting length: 31
[DBG]  Update the agent path 144 | Original local length: 1 | New local length: 1
[DBG]  agent 144 t=0 => decoded (sx,sy)=(1,4) => global_id=631
[DBG]  Complete path of agent 144:
[DBG]    Original: 121 153 185 217 249 281 313 345 345 377 409 408 440 441 473 474 474 506 538 570 569 601 600 632 631 
[DBG]    New:     121 153 185 217 249 281 313 345 345 377 409 408 440 441 473 474 474 506 538 570 569 601 600 632 631 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 121 153 185 217 249 281 313 345 345 377 409 408 440 441 473 474 474 506 538 570 569 601 600 632 
[DBG]    Local path (in submap): 631 
[DBG]    Suffix (out of submap): 
[DBG]  Original agent path length 144 je: 25
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 4: 121, 153, 185, 217, 249, 281, 313, 345, 345, 377, 409, 408, 440, 441, 473, 474, 474, 506, 538, 570, 569, 601, 600, 632, 631, 
[DBG]  Path for agent 144 updated, resulting length: 25
[DBG]  Paths successfully updated.
[DBG]  (LNS.cpp) New path for agent 11: 
[DBG]  990, 989, 988, 956, 955, 923, 923, 923, 923, 891, 891, 891, 891, 859, 858, 857, 856, 855, 823, 822, 821, 820, 788, 756, 724, 692, 691, 659, 658, 657, 
[DBG]  (LNS.cpp) New path for agent 28: 
[DBG]  661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 660, 692, 724, 725, 757, 757, 757, 725, 726, 727, 
[DBG]  (LNS.cpp) New path for agent 30: 
[DBG]  922, 923, 891, 891, 891, 891, 891, 891, 891, 859, 858, 857, 856, 824, 823, 822, 821, 820, 788, 756, 724, 692, 660, 628, 629, 597, 565, 566, 534, 502, 503, 
[DBG]  (LNS.cpp) New path for agent 74: 
[DBG]  752, 752, 752, 752, 752, 752, 752, 752, 752, 752, 752, 752, 752, 752, 720, 721, 689, 689, 657, 658, 659, 627, 628, 596, 597, 565, 566, 534, 502, 503, 504, 
[DBG]  (LNS.cpp) New path for agent 144: 
[DBG]  121, 153, 185, 217, 249, 281, 313, 345, 345, 377, 409, 408, 440, 441, 473, 474, 474, 506, 538, 570, 569, 601, 600, 632, 631, 
[DBG]  Delta value: 0.08125
[DBG]  Rewarding metric index = 2
[DBG]  component_weights = {0.246634, 0.139259, 0.16465, 0.449457}
[DBG]  opSuccess value: 1
[STAT] neighbor.sum_of_costs before recomputation: 147
[STAT] neighbor.old_sum_of_costs before recomputation: 160
[STAT] sum_of_costs before recomputation: 4489
[DBG]  Validate solution immediately after SAT success.
[WARNING] Problem after SAT: Edge conflict between agents 11 and 26 at edge (658,657) at timestep 29
[DBG]  [DEBUG] Attempting immediate repair via init_lns because problem occurred after SAT (should be applied only for conflicts...).
[DBG]  [DEBUG] Passing 150 agents to init_lns (skip=true).
[DBG]  [DEBUG] path_table contents for selected agents (neighbor.agents):
[DBG]    Agent 11 => controlling path length=30
[DBG]    Agent 28 => controlling path length=35
[DBG]    Agent 30 => controlling path length=31
[DBG]    Agent 74 => controlling path length=31
[DBG]    Agent 144 => controlling path length=25
[DBG]  hodnota skip_initial_solution=1
[DBG]  We skip initialSolution => call buildCollisionData()
[DBG]  buildCollisionData() called â€“ skip_initial_solution case.
[DBG]  Agents.size()=150, collision_graph.size()=150
[DBG]  agent 11 => updateCollidingPairs => foundCollision
[DBG]  agent 26 => updateCollidingPairs => foundCollision
[DBG]  agent 28 => updateCollidingPairs => foundCollision
[DBG]  agent 42 => updateCollidingPairs => foundCollision
[DBG]  agent 148 => updateCollidingPairs => foundCollision
[DBG]  Conflicting agent pairs:
[DBG]  agent 11 is in conflict with agent 26
[DBG]  agent 11 is in conflict with agent 148
[DBG]  agent 28 is in conflict with agent 42
[DBG]  buildCollisionData() => sum_of_costs=4476, num_of_colliding_pairs=3
[DBG]  buildCollisionData done => sum_of_costs=4476, num_of_colliding_pairs=3
[DBG]  sum_of_cost hodnota: 4476
[DBG]  After skip/init build => iteration_stats.back(): sum_of_costs=4476, collisions=3
[DEBUG] Using default neighbor generation strategy for conflicts: 1
[DEBUG] Using default neighbor generation strategy for conflicts: 2
[DEBUG] Using default neighbor generation strategy for conflicts: 0
	InitLNS(PP): runtime = 0.00495358, iterations = 4, colliding pairs = 0, initial colliding pairs = 3, solution cost = 4478, initial solution cost = 4476, failed iterations = 0
[DBG]  [DEBUG] init_lns->sum_of_costs after init_lns->run: 4478
[DBG]  [DEBUG] sum_of_costs after assignment from init_lns->run: 4478
[DBG]  Recomputing sum_of_cost by dividing neighbor.sum_of_costs and neighbor.old_sum_of_costs
[STAT] sum_of_costs after recomputation: 4478
[STAT] Iteration 22
[DBG]  Using SAT operator (destroy+repair SAT).
[DBG]  ====================
[DBG]  SAT destroy operator called.
[DBG]  SAT heuristic: 2
[DBG]  key_agent_id: 28
[DBG]  key_agent_id global path length: 44
[DBG]  Submap content (global positions):
[DBG]  595 596 597 598 599 
[DBG]  627 628 629 630 631 
[DBG]  659 660 661 662 663 
[DBG]  691 692 693 694 695 
[DBG]  723 724 725 726 727 
[DBG]  Map content with agents and obstacles:
[DBG]  X . . X . 
[DBG]  . . . X A 
[DBG]  . . A X X 
[DBG]  . A X X X 
[DBG]  X A . . . 
[DBG]  content of the map structure that we pass to the SAT solver:
[DBG]  -1  1  1  -1  1  
[DBG]  1  1  1  -1  1  
[DBG]  1  1  1  -1  -1  
[DBG]  1  1  -1  -1  -1  
[DBG]  -1  1  1  1  1  
[DBG]  Identifying agents in a submap for rescheduling (when key_agent is there at the time 2):
[DBG]  Agent 7 found intervals in the sub-map:
[DBG]   [1..3]
[DBG]  Agent 7 (interval in submap: [1..3]) contains time 2, added to replan.
[DBG]  Agent 28 found intervals in the sub-map:
[DBG]   [0..43]
[DBG]  Agent 28 (interval in submap: [0..43]) contains time 2, added to replan.
[DBG]  Agent 70 found intervals in the sub-map:
[DBG]   [1..2]
[DBG]  Agent 70 (interval in submap: [1..2]) contains time 2, added to replan.
[DBG]  Agent 108 found intervals in the sub-map:
[DBG]   [0..4]
[DBG]  Agent 108 (interval in submap: [0..4]) contains time 2, added to replan.
[DBG]  Agent 7 | Start (global): 724 -> (local): (4, 1) at time 2 | Goal (global): 724 -> (local): (4, 1) at time 3
[DBG]  Agent 28 | Start (global): 661 -> (local): (2, 2) at time 2 | Goal (global): 727 -> (local): (4, 4) at time 43
[DBG]  Agent 70 | Start (global): 631 -> (local): (1, 4) at time 2 | Goal (global): 631 -> (local): (1, 4) at time 2
[DBG]  Agent 108 | Start (global): 692 -> (local): (3, 1) at time 2 | Goal (global): 724 -> (local): (4, 1) at time 4
[DBG]  [REPAIR] SAT destroy operator called.
[DBG]  [REPAIR] SAT operator â€“ launching subproblem FOR OPTIMIZATION.
[DBG]  Creating local paths (sx, sy) in the submap for T_sync = 2
[DBG]    Agent 7 (global paths from T=2 to 3) has local path: (4,1) (4,1) 
[DBG]    Agent 28 (global paths from T=2 to 43) has local path: (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,1) (2,0) (3,0) (3,0) (3,0) (3,0) (3,1) (4,1) (4,2) (4,3) (4,4) 
[DBG]    Agent 70 (global paths from T=2 to 2) has local path: (1,4) 
[DBG]    Agent 108 (global paths from T=2 to 4) has local path: (3,1) (3,1) (4,1) 
[DBG]  Checking input data for SAT solver:
[DBG]    - Number of agents to replan: 4
[DBG]  Agent 7 has the original local path length: 2 => Start (4,1), Goal (4,1)
[DBG]  Agent 28 has the original local path length: 42 => Start (2,2), Goal (4,4)
[DBG]  Agent 70 has the original local path length: 1 => Start (1,4), Goal (1,4)
[DBG]  Agent 108 has the original local path length: 3 => Start (3,1), Goal (4,1)
[DBG]  Start position: (4, 1), (2, 2), (1, 4), (3, 1), 
[DBG]  Goal position: (4, 1), (4, 4), (1, 4), (4, 1), 
[DBG]  SAT instance and solver created.
Currently solving
Instance name: scen
Map name: map
Encoding used: disappear_at_goal
SAT solver used: Kissat
Optimizing function: sum of costs
Number of agents: 4
Mks LB: 7
SoC LB: 11
Delta: 0
Remaining time: 300000 [ms]

Vertex conflict! Agents 0, 2, timestep 1, location 0
Swapping conflict! Agents 0, 2, timestep 1, edge (0,0)
Vertex conflict! Agents 0, 2, timestep 2, location 0
Swapping conflict! Agents 0, 2, timestep 2, edge (0,0)
Vertex conflict! Agents 0, 2, timestep 3, location 0
Swapping conflict! Agents 0, 2, timestep 3, edge (0,0)
Vertex conflict! Agents 0, 2, timestep 4, location 0
Swapping conflict! Agents 0, 2, timestep 4, edge (0,0)
Vertex conflict! Agents 0, 2, timestep 5, location 0
Swapping conflict! Agents 0, 2, timestep 5, edge (0,0)
Vertex conflict! Agents 0, 2, timestep 6, location 0
Vertex conflict! Agents 0, 3, timestep 2, location 0
Swapping conflict! Agents 0, 3, timestep 2, edge (0,0)
Vertex conflict! Agents 0, 3, timestep 3, location 0
Swapping conflict! Agents 0, 3, timestep 3, edge (0,0)
Vertex conflict! Agents 0, 3, timestep 4, location 0
Swapping conflict! Agents 0, 3, timestep 4, edge (0,0)
Vertex conflict! Agents 0, 3, timestep 5, location 0
Swapping conflict! Agents 0, 3, timestep 5, edge (0,0)
Vertex conflict! Agents 0, 3, timestep 6, location 0
Vertex conflict! Agents 2, 3, timestep 2, location 0
Swapping conflict! Agents 2, 3, timestep 2, edge (0,0)
Vertex conflict! Agents 2, 3, timestep 3, location 0
Swapping conflict! Agents 2, 3, timestep 3, edge (0,0)
Vertex conflict! Agents 2, 3, timestep 4, location 0
Swapping conflict! Agents 2, 3, timestep 4, edge (0,0)
Vertex conflict! Agents 2, 3, timestep 5, location 0
Swapping conflict! Agents 2, 3, timestep 5, edge (0,0)
Vertex conflict! Agents 2, 3, timestep 6, location 0
Found plan [agents = 4] [timesteps = 7]
Agent #0 : 12 0 0 0 0 0 0 
Agent #1 : 9 8 11 12 13 14 15 
Agent #2 : 6 0 0 0 0 0 0 
Agent #3 : 11 12 0 0 0 0 0 

[STAT] Solver returned: 0
[DBG]  Agent (index) 7 | New local path (submap idx):
[DBG]  12 
[DBG]  Agent (index) 28 | New local path (submap idx):
[DBG]  9 8 11 12 13 14 15 
[DBG]  Agent (index) 70 | New local path (submap idx):
[DBG]  6 
[DBG]  Agent (index) 108 | New local path (submap idx):
[DBG]  11 12 
[DBG]  Update the agent path 7 | Original local length: 2 | New local length: 1
[DBG]  agent 7 t=0 => decoded (sx,sy)=(4,1) => global_id=724
[DBG]  Complete path of agent 7:
[DBG]    Original: 756 724 724 724 756 788 788 820 821 822 854 886 918 886 887 888 920 921 
[DBG]    New:     756 724 724 756 788 788 820 821 822 854 886 918 886 887 888 920 921 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 756 724 
[DBG]    Local path (in submap): 724 756 
[DBG]    Suffix (out of submap): 788 788 820 821 822 854 886 918 886 887 888 920 921 
[DBG]  Original agent path length 7 je: 18
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 0: 756, 724, 724, 756, 788, 788, 820, 821, 822, 854, 886, 918, 886, 887, 888, 920, 921, 
[DBG]  Path for agent 7 updated, resulting length: 17
[DBG]  Update the agent path 28 | Original local length: 42 | New local length: 7
[DBG]  agent 28 t=0 => decoded (sx,sy)=(2,2) => global_id=661
[DBG]  agent 28 t=1 => decoded (sx,sy)=(2,1) => global_id=660
[DBG]  agent 28 t=2 => decoded (sx,sy)=(3,1) => global_id=692
[DBG]  agent 28 t=3 => decoded (sx,sy)=(4,1) => global_id=724
[DBG]  agent 28 t=4 => decoded (sx,sy)=(4,2) => global_id=725
[DBG]  agent 28 t=5 => decoded (sx,sy)=(4,3) => global_id=726
[DBG]  agent 28 t=6 => decoded (sx,sy)=(4,4) => global_id=727
[DBG]  Complete path of agent 28:
[DBG]    Original: 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 660 659 691 691 691 691 692 724 725 726 727 
[DBG]    New:     661 661 661 660 692 724 725 726 727 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 661 661 
[DBG]    Local path (in submap): 661 660 692 724 725 726 727 
[DBG]    Suffix (out of submap): 
[DBG]  Original agent path length 28 je: 44
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 1: 661, 661, 661, 660, 692, 724, 725, 726, 727, 
[DBG]  Path for agent 28 updated, resulting length: 9
[DBG]  Update the agent path 70 | Original local length: 1 | New local length: 1
[DBG]  agent 70 t=0 => decoded (sx,sy)=(1,4) => global_id=631
[DBG]  Complete path of agent 70:
[DBG]    Original: 632 631 631 632 664 696 728 729 761 793 792 824 823 822 821 820 819 851 850 882 881 913 912 944 976 975 974 
[DBG]    New:     632 631 631 632 664 696 728 729 761 793 792 824 823 822 821 820 819 851 850 882 881 913 912 944 976 975 974 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 632 631 
[DBG]    Local path (in submap): 631 
[DBG]    Suffix (out of submap): 632 664 696 728 729 761 793 792 824 823 822 821 820 819 851 850 882 881 913 912 944 976 975 974 
[DBG]  Original agent path length 70 je: 27
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 2: 632, 631, 631, 632, 664, 696, 728, 729, 761, 793, 792, 824, 823, 822, 821, 820, 819, 851, 850, 882, 881, 913, 912, 944, 976, 975, 974, 
[DBG]  Path for agent 70 updated, resulting length: 27
[DBG]  Update the agent path 108 | Original local length: 3 | New local length: 2
[DBG]  agent 108 t=0 => decoded (sx,sy)=(3,1) => global_id=692
[DBG]  agent 108 t=1 => decoded (sx,sy)=(4,1) => global_id=724
[DBG]  Complete path of agent 108:
[DBG]    Original: 628 660 692 692 724 756 756 788 820 821 822 854 886 887 888 920 921 922 954 955 956 988 989 1021 
[DBG]    New:     628 660 692 724 756 756 788 820 821 822 854 886 887 888 920 921 922 954 955 956 988 989 1021 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 628 660 
[DBG]    Local path (in submap): 692 724 756 
[DBG]    Suffix (out of submap): 756 788 820 821 822 854 886 887 888 920 921 922 954 955 956 988 989 1021 
[DBG]  Original agent path length 108 je: 24
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 3: 628, 660, 692, 724, 756, 756, 788, 820, 821, 822, 854, 886, 887, 888, 920, 921, 922, 954, 955, 956, 988, 989, 1021, 
[DBG]  Path for agent 108 updated, resulting length: 23
[DBG]  Paths successfully updated.
[DBG]  (LNS.cpp) New path for agent 7: 
[DBG]  756, 724, 724, 756, 788, 788, 820, 821, 822, 854, 886, 918, 886, 887, 888, 920, 921, 
[DBG]  (LNS.cpp) New path for agent 28: 
[DBG]  661, 661, 661, 660, 692, 724, 725, 726, 727, 
[DBG]  (LNS.cpp) New path for agent 70: 
[DBG]  632, 631, 631, 632, 664, 696, 728, 729, 761, 793, 792, 824, 823, 822, 821, 820, 819, 851, 850, 882, 881, 913, 912, 944, 976, 975, 974, 
[DBG]  (LNS.cpp) New path for agent 108: 
[DBG]  628, 660, 692, 724, 756, 756, 788, 820, 821, 822, 854, 886, 887, 888, 920, 921, 922, 954, 955, 956, 988, 989, 1021, 
[DBG]  Delta value: 0.33945
[DBG]  Rewarding metric index = 0
[DBG]  component_weights = {0.315811, 0.126471, 0.149532, 0.408186}
[DBG]  opSuccess value: 1
[STAT] neighbor.sum_of_costs before recomputation: 72
[STAT] neighbor.old_sum_of_costs before recomputation: 109
[STAT] sum_of_costs before recomputation: 4478
[DBG]  Validate solution immediately after SAT success.
[WARNING] Problem after SAT: Target conflict: agent 1 (len 14) traverses target of agent 28 (len 8) at location 727 at timestep 13
[DBG]  [DEBUG] Attempting immediate repair via init_lns because problem occurred after SAT (should be applied only for conflicts...).
[DBG]  [DEBUG] Passing 150 agents to init_lns (skip=true).
[DBG]  [DEBUG] path_table contents for selected agents (neighbor.agents):
[DBG]    Agent 7 => controlling path length=17
[DBG]    Agent 28 => controlling path length=9
[DBG]    Agent 70 => controlling path length=27
[DBG]    Agent 108 => controlling path length=23
[DBG]  hodnota skip_initial_solution=1
[DBG]  We skip initialSolution => call buildCollisionData()
[DBG]  buildCollisionData() called â€“ skip_initial_solution case.
[DBG]  Agents.size()=150, collision_graph.size()=150
[DBG]  agent 1 => updateCollidingPairs => foundCollision
[DBG]  agent 4 => updateCollidingPairs => foundCollision
[DBG]  agent 7 => updateCollidingPairs => foundCollision
[DBG]  agent 28 => updateCollidingPairs => foundCollision
[DBG]  agent 38 => updateCollidingPairs => foundCollision
[DBG]  agent 42 => updateCollidingPairs => foundCollision
[DBG]  agent 46 => updateCollidingPairs => foundCollision
[DBG]  agent 135 => updateCollidingPairs => foundCollision
[DBG]  Conflicting agent pairs:
[DBG]  agent 1 is in conflict with agent 28
[DBG]  agent 4 is in conflict with agent 28
[DBG]  agent 7 is in conflict with agent 38
[DBG]  agent 7 is in conflict with agent 46
[DBG]  agent 28 is in conflict with agent 42
[DBG]  agent 28 is in conflict with agent 135
[DBG]  buildCollisionData() => sum_of_costs=4441, num_of_colliding_pairs=6
[DBG]  buildCollisionData done => sum_of_costs=4441, num_of_colliding_pairs=6
[DBG]  sum_of_cost hodnota: 4441
[DBG]  After skip/init build => iteration_stats.back(): sum_of_costs=4441, collisions=6
[DEBUG] Using default neighbor generation strategy for conflicts: 2
[DEBUG] Using default neighbor generation strategy for conflicts: 2
	InitLNS(PP): runtime = 0.00172917, iterations = 3, colliding pairs = 0, initial colliding pairs = 6, solution cost = 4457, initial solution cost = 4441, failed iterations = 0
[DBG]  [DEBUG] init_lns->sum_of_costs after init_lns->run: 4457
[DBG]  [DEBUG] sum_of_costs after assignment from init_lns->run: 4457
[DBG]  Recomputing sum_of_cost by dividing neighbor.sum_of_costs and neighbor.old_sum_of_costs
[STAT] sum_of_costs after recomputation: 4457
[STAT] Iteration 23
[DBG]  Using SAT operator (destroy+repair SAT).
[DBG]  ====================
[DBG]  SAT destroy operator called.
[DBG]  SAT heuristic: 2
[DBG]  key_agent_id: 28
[DBG]  key_agent_id global path length: 44
[DBG]  Submap content (global positions):
[DBG]  595 596 597 598 599 
[DBG]  627 628 629 630 631 
[DBG]  659 660 661 662 663 
[DBG]  691 692 693 694 695 
[DBG]  723 724 725 726 727 
[DBG]  Map content with agents and obstacles:
[DBG]  X . . X . 
[DBG]  . A . X . 
[DBG]  A A A X X 
[DBG]  . . X X X 
[DBG]  X . . . . 
[DBG]  content of the map structure that we pass to the SAT solver:
[DBG]  -1  1  1  -1  1  
[DBG]  1  1  1  -1  1  
[DBG]  1  1  1  -1  -1  
[DBG]  1  1  -1  -1  -1  
[DBG]  -1  1  1  1  1  
[DBG]  Identifying agents in a submap for rescheduling (when key_agent is there at the time 31):
[DBG]  Agent 11 found intervals in the sub-map:
[DBG]   [24..31]
[DBG]  Agent 11 (interval in submap: [24..31]) contains time 31, added to replan.
[DBG]  Agent 26 found intervals in the sub-map:
[DBG]   [30..33]
[DBG]  Agent 26 (interval in submap: [30..33]) contains time 31, added to replan.
[DBG]  Agent 28 found intervals in the sub-map:
[DBG]   [0..43]
[DBG]  Agent 28 (interval in submap: [0..43]) contains time 31, added to replan.
[DBG]  Agent 53 found intervals in the sub-map:
[DBG]   [28..34]
[DBG]  Agent 53 (interval in submap: [28..34]) contains time 31, added to replan.
[DBG]  Agent 91 found intervals in the sub-map:
[DBG]  
[DBG]  Agent 91 is not in sub-map at time 31 (intervals: 
[DBG]  )
[DBG]  Agent 148 found intervals in the sub-map:
[DBG]   [36..38]
[DBG]  Agent 148 is not in sub-map at time 31 (intervals: 
[DBG]  [36..38] )
[DBG]  Agent 11 | Start (global): 659 -> (local): (2, 0) at time 31 | Goal (global): 659 -> (local): (2, 0) at time 31
[DBG]  Agent 26 | Start (global): 660 -> (local): (2, 1) at time 31 | Goal (global): 724 -> (local): (4, 1) at time 33
[DBG]  Agent 28 | Start (global): 661 -> (local): (2, 2) at time 31 | Goal (global): 727 -> (local): (4, 4) at time 43
[DBG]  Agent 53 | Start (global): 628 -> (local): (1, 1) at time 31 | Goal (global): 724 -> (local): (4, 1) at time 34
[DBG]  [REPAIR] SAT destroy operator called.
[DBG]  [REPAIR] SAT operator â€“ launching subproblem FOR OPTIMIZATION.
[DBG]  Creating local paths (sx, sy) in the submap for T_sync = 31
[DBG]    Agent 11 (global paths from T=31 to 31) has local path: (2,0) 
[DBG]    Agent 26 (global paths from T=31 to 33) has local path: (2,1) (3,1) (4,1) 
[DBG]    Agent 28 (global paths from T=31 to 43) has local path: (2,2) (2,2) (2,1) (2,0) (3,0) (3,0) (3,0) (3,0) (3,1) (4,1) (4,2) (4,3) (4,4) 
[DBG]    Agent 53 (global paths from T=31 to 34) has local path: (1,1) (2,1) (3,1) (4,1) 
[DBG]  Checking input data for SAT solver:
[DBG]    - Number of agents to replan: 4
[DBG]  Agent 11 has the original local path length: 1 => Start (2,0), Goal (2,0)
[DBG]  Agent 26 has the original local path length: 3 => Start (2,1), Goal (4,1)
[DBG]  Agent 28 has the original local path length: 13 => Start (2,2), Goal (4,4)
[DBG]  Agent 53 has the original local path length: 4 => Start (1,1), Goal (4,1)
[DBG]  Start position: (2, 0), (2, 1), (2, 2), (1, 1), 
[DBG]  Goal position: (2, 0), (4, 1), (4, 4), (4, 1), 
[DBG]  SAT instance and solver created.
Currently solving
Instance name: scen
Map name: map
Encoding used: disappear_at_goal
SAT solver used: Kissat
Optimizing function: sum of costs
Number of agents: 4
Mks LB: 7
SoC LB: 15
Delta: 0
Remaining time: 300000 [ms]

[STAT] Solver returned: -1
[DBG]  SAT solver failed.
[STAT] SAT solver failed to find a valid solution.
[DBG]  ====================
[DBG]  SAT destroy operator called.
[DBG]  SAT heuristic: 2
[DBG]  key_agent_id: 28
[DBG]  key_agent_id global path length: 44
[DBG]  Submap content (global positions):
[DBG]  595 596 597 598 599 
[DBG]  627 628 629 630 631 
[DBG]  659 660 661 662 663 
[DBG]  691 692 693 694 695 
[DBG]  723 724 725 726 727 
[DBG]  Map content with agents and obstacles:
[DBG]  X . . X . 
[DBG]  . . . X A 
[DBG]  . A A X X 
[DBG]  . . X X X 
[DBG]  X . . . A 
[DBG]  content of the map structure that we pass to the SAT solver:
[DBG]  -1  1  1  -1  1  
[DBG]  1  1  1  -1  1  
[DBG]  1  1  1  -1  -1  
[DBG]  1  1  -1  -1  -1  
[DBG]  -1  1  1  1  1  
[DBG]  Identifying agents in a submap for rescheduling (when key_agent is there at the time 1):
[DBG]  Agent 7 found intervals in the sub-map:
[DBG]  
[DBG]  Agent 7 is not in sub-map at time 1 (intervals: 
[DBG]  )
[DBG]  Agent 12 found intervals in the sub-map:
[DBG]   [0..1]
[DBG]  Agent 12 (interval in submap: [0..1]) contains time 1, added to replan.
[DBG]  Agent 28 found intervals in the sub-map:
[DBG]   [0..43]
[DBG]  Agent 28 (interval in submap: [0..43]) contains time 1, added to replan.
[DBG]  Agent 70 found intervals in the sub-map:
[DBG]   [1..2]
[DBG]  Agent 70 (interval in submap: [1..2]) contains time 1, added to replan.
[DBG]  Agent 108 found intervals in the sub-map:
[DBG]   [0..3]
[DBG]  Agent 108 (interval in submap: [0..3]) contains time 1, added to replan.
[DBG]  Agent 12 | Start (global): 727 -> (local): (4, 4) at time 1 | Goal (global): 727 -> (local): (4, 4) at time 1
[DBG]  Agent 28 | Start (global): 661 -> (local): (2, 2) at time 1 | Goal (global): 727 -> (local): (4, 4) at time 43
[DBG]  Agent 70 | Start (global): 631 -> (local): (1, 4) at time 1 | Goal (global): 631 -> (local): (1, 4) at time 2
[DBG]  Agent 108 | Start (global): 660 -> (local): (2, 1) at time 1 | Goal (global): 724 -> (local): (4, 1) at time 3
[DBG]  [REPAIR] SAT destroy operator called.
[DBG]  [REPAIR] SAT operator â€“ launching subproblem FOR OPTIMIZATION.
[DBG]  Creating local paths (sx, sy) in the submap for T_sync = 1
[DBG]    Agent 12 (global paths from T=1 to 1) has local path: (4,4) 
[DBG]    Agent 28 (global paths from T=1 to 43) has local path: (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,1) (2,0) (3,0) (3,0) (3,0) (3,0) (3,1) (4,1) (4,2) (4,3) (4,4) 
[DBG]    Agent 70 (global paths from T=1 to 2) has local path: (1,4) (1,4) 
[DBG]    Agent 108 (global paths from T=1 to 3) has local path: (2,1) (3,1) (4,1) 
[DBG]  Checking input data for SAT solver:
[DBG]    - Number of agents to replan: 4
[DBG]  Agent 12 has the original local path length: 1 => Start (4,4), Goal (4,4)
[DBG]  Agent 28 has the original local path length: 43 => Start (2,2), Goal (4,4)
[DBG]  Agent 70 has the original local path length: 2 => Start (1,4), Goal (1,4)
[DBG]  Agent 108 has the original local path length: 3 => Start (2,1), Goal (4,1)
[DBG]  Start position: (4, 4), (2, 2), (1, 4), (2, 1), 
[DBG]  Goal position: (4, 4), (4, 4), (1, 4), (4, 1), 
[DBG]  SAT instance and solver created.
Currently solving
Instance name: scen
Map name: map
Encoding used: disappear_at_goal
SAT solver used: Kissat
Optimizing function: sum of costs
Number of agents: 4
Mks LB: 7
SoC LB: 12
Delta: 0
Remaining time: 300000 [ms]

Vertex conflict! Agents 0, 2, timestep 1, location 0
Swapping conflict! Agents 0, 2, timestep 1, edge (0,0)
Vertex conflict! Agents 0, 2, timestep 2, location 0
Swapping conflict! Agents 0, 2, timestep 2, edge (0,0)
Vertex conflict! Agents 0, 2, timestep 3, location 0
Swapping conflict! Agents 0, 2, timestep 3, edge (0,0)
Vertex conflict! Agents 0, 2, timestep 4, location 0
Swapping conflict! Agents 0, 2, timestep 4, edge (0,0)
Vertex conflict! Agents 0, 2, timestep 5, location 0
Swapping conflict! Agents 0, 2, timestep 5, edge (0,0)
Vertex conflict! Agents 0, 2, timestep 6, location 0
Vertex conflict! Agents 0, 3, timestep 3, location 0
Swapping conflict! Agents 0, 3, timestep 3, edge (0,0)
Vertex conflict! Agents 0, 3, timestep 4, location 0
Swapping conflict! Agents 0, 3, timestep 4, edge (0,0)
Vertex conflict! Agents 0, 3, timestep 5, location 0
Swapping conflict! Agents 0, 3, timestep 5, edge (0,0)
Vertex conflict! Agents 0, 3, timestep 6, location 0
Vertex conflict! Agents 2, 3, timestep 3, location 0
Swapping conflict! Agents 2, 3, timestep 3, edge (0,0)
Vertex conflict! Agents 2, 3, timestep 4, location 0
Swapping conflict! Agents 2, 3, timestep 4, edge (0,0)
Vertex conflict! Agents 2, 3, timestep 5, location 0
Swapping conflict! Agents 2, 3, timestep 5, edge (0,0)
Vertex conflict! Agents 2, 3, timestep 6, location 0
Found plan [agents = 4] [timesteps = 7]
Agent #0 : 15 0 0 0 0 0 0 
Agent #1 : 9 8 11 12 13 14 15 
Agent #2 : 6 0 0 0 0 0 0 
Agent #3 : 8 11 12 0 0 0 0 

[STAT] Solver returned: 0
[DBG]  Agent (index) 12 | New local path (submap idx):
[DBG]  15 
[DBG]  Agent (index) 28 | New local path (submap idx):
[DBG]  9 8 11 12 13 14 15 
[DBG]  Agent (index) 70 | New local path (submap idx):
[DBG]  6 
[DBG]  Agent (index) 108 | New local path (submap idx):
[DBG]  8 11 12 
[DBG]  Update the agent path 12 | Original local length: 1 | New local length: 1
[DBG]  agent 12 t=0 => decoded (sx,sy)=(4,4) => global_id=727
[DBG]  Complete path of agent 12:
[DBG]    Original: 726 727 728 729 730 731 732 764 765 766 767 
[DBG]    New:     726 727 728 729 730 731 732 764 765 766 767 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 726 
[DBG]    Local path (in submap): 727 
[DBG]    Suffix (out of submap): 728 729 730 731 732 764 765 766 767 
[DBG]  Original agent path length 12 je: 11
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 0: 726, 727, 728, 729, 730, 731, 732, 764, 765, 766, 767, 
[DBG]  Path for agent 12 updated, resulting length: 11
[DBG]  Update the agent path 28 | Original local length: 43 | New local length: 7
[DBG]  agent 28 t=0 => decoded (sx,sy)=(2,2) => global_id=661
[DBG]  agent 28 t=1 => decoded (sx,sy)=(2,1) => global_id=660
[DBG]  agent 28 t=2 => decoded (sx,sy)=(3,1) => global_id=692
[DBG]  agent 28 t=3 => decoded (sx,sy)=(4,1) => global_id=724
[DBG]  agent 28 t=4 => decoded (sx,sy)=(4,2) => global_id=725
[DBG]  agent 28 t=5 => decoded (sx,sy)=(4,3) => global_id=726
[DBG]  agent 28 t=6 => decoded (sx,sy)=(4,4) => global_id=727
[DBG]  Complete path of agent 28:
[DBG]    Original: 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 660 659 691 691 691 691 692 724 725 726 727 
[DBG]    New:     661 661 660 692 724 725 726 727 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 661 
[DBG]    Local path (in submap): 661 660 692 724 725 726 727 
[DBG]    Suffix (out of submap): 
[DBG]  Original agent path length 28 je: 44
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 1: 661, 661, 660, 692, 724, 725, 726, 727, 
[DBG]  Path for agent 28 updated, resulting length: 8
[DBG]  Update the agent path 70 | Original local length: 2 | New local length: 1
[DBG]  agent 70 t=0 => decoded (sx,sy)=(1,4) => global_id=631
[DBG]  Complete path of agent 70:
[DBG]    Original: 632 631 631 632 664 696 728 729 761 793 792 824 823 822 821 820 819 851 850 882 881 913 912 944 976 975 974 
[DBG]    New:     632 631 632 664 696 728 729 761 793 792 824 823 822 821 820 819 851 850 882 881 913 912 944 976 975 974 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 632 
[DBG]    Local path (in submap): 631 632 
[DBG]    Suffix (out of submap): 664 696 728 729 761 793 792 824 823 822 821 820 819 851 850 882 881 913 912 944 976 975 974 
[DBG]  Original agent path length 70 je: 27
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 2: 632, 631, 632, 664, 696, 728, 729, 761, 793, 792, 824, 823, 822, 821, 820, 819, 851, 850, 882, 881, 913, 912, 944, 976, 975, 974, 
[DBG]  Path for agent 70 updated, resulting length: 26
[DBG]  Update the agent path 108 | Original local length: 3 | New local length: 3
[DBG]  agent 108 t=0 => decoded (sx,sy)=(2,1) => global_id=660
[DBG]  agent 108 t=1 => decoded (sx,sy)=(3,1) => global_id=692
[DBG]  agent 108 t=2 => decoded (sx,sy)=(4,1) => global_id=724
[DBG]  Complete path of agent 108:
[DBG]    Original: 628 660 692 724 756 756 788 820 821 822 854 886 887 888 920 921 922 954 955 956 988 989 1021 
[DBG]    New:     628 660 692 724 756 756 788 820 821 822 854 886 887 888 920 921 922 954 955 956 988 989 1021 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 628 
[DBG]    Local path (in submap): 660 692 724 
[DBG]    Suffix (out of submap): 756 756 788 820 821 822 854 886 887 888 920 921 922 954 955 956 988 989 1021 
[DBG]  Original agent path length 108 je: 23
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 3: 628, 660, 692, 724, 756, 756, 788, 820, 821, 822, 854, 886, 887, 888, 920, 921, 922, 954, 955, 956, 988, 989, 1021, 
[DBG]  Path for agent 108 updated, resulting length: 23
[DBG]  Paths successfully updated.
[DBG]  (LNS.cpp) New path for agent 12: 
[DBG]  726, 727, 728, 729, 730, 731, 732, 764, 765, 766, 767, 
[DBG]  (LNS.cpp) New path for agent 28: 
[DBG]  661, 661, 660, 692, 724, 725, 726, 727, 
[DBG]  (LNS.cpp) New path for agent 70: 
[DBG]  632, 631, 632, 664, 696, 728, 729, 761, 793, 792, 824, 823, 822, 821, 820, 819, 851, 850, 882, 881, 913, 912, 944, 976, 975, 974, 
[DBG]  (LNS.cpp) New path for agent 108: 
[DBG]  628, 660, 692, 724, 756, 756, 788, 820, 821, 822, 854, 886, 887, 888, 920, 921, 922, 954, 955, 956, 988, 989, 1021, 
[DBG]  Delta value: 0.366337
[DBG]  Rewarding metric index = 1
[DBG]  component_weights = {0.299226, 0.172345, 0.141679, 0.38675}
[DBG]  opSuccess value: 1
[STAT] neighbor.sum_of_costs before recomputation: 64
[STAT] neighbor.old_sum_of_costs before recomputation: 101
[STAT] sum_of_costs before recomputation: 4457
[DBG]  Validate solution immediately after SAT success.
[WARNING] Problem after SAT: Target conflict: agent 1 (len 14) traverses target of agent 28 (len 7) at location 727 at timestep 13
[DBG]  [DEBUG] Attempting immediate repair via init_lns because problem occurred after SAT (should be applied only for conflicts...).
[DBG]  [DEBUG] Passing 150 agents to init_lns (skip=true).
[DBG]  [DEBUG] path_table contents for selected agents (neighbor.agents):
[DBG]    Agent 12 => controlling path length=11
[DBG]    Agent 28 => controlling path length=8
[DBG]    Agent 70 => controlling path length=26
[DBG]    Agent 108 => controlling path length=23
[DBG]  hodnota skip_initial_solution=1
[DBG]  We skip initialSolution => call buildCollisionData()
[DBG]  buildCollisionData() called â€“ skip_initial_solution case.
[DBG]  Agents.size()=150, collision_graph.size()=150
[DBG]  agent 1 => updateCollidingPairs => foundCollision
[DBG]  agent 4 => updateCollidingPairs => foundCollision
[DBG]  agent 28 => updateCollidingPairs => foundCollision
[DBG]  agent 42 => updateCollidingPairs => foundCollision
[DBG]  agent 46 => updateCollidingPairs => foundCollision
[DBG]  agent 70 => updateCollidingPairs => foundCollision
[DBG]  agent 96 => updateCollidingPairs => foundCollision
[DBG]  agent 135 => updateCollidingPairs => foundCollision
[DBG]  Conflicting agent pairs:
[DBG]  agent 1 is in conflict with agent 28
[DBG]  agent 4 is in conflict with agent 28
[DBG]  agent 28 is in conflict with agent 42
[DBG]  agent 28 is in conflict with agent 46
[DBG]  agent 28 is in conflict with agent 135
[DBG]  agent 70 is in conflict with agent 96
[DBG]  buildCollisionData() => sum_of_costs=4420, num_of_colliding_pairs=6
[DBG]  buildCollisionData done => sum_of_costs=4420, num_of_colliding_pairs=6
[DBG]  sum_of_cost hodnota: 4420
[DBG]  After skip/init build => iteration_stats.back(): sum_of_costs=4420, collisions=6
[DEBUG] Using default neighbor generation strategy for conflicts: 2
[DEBUG] Using default neighbor generation strategy for conflicts: 1
[DEBUG] Using default neighbor generation strategy for conflicts: 2
[DEBUG] Using default neighbor generation strategy for conflicts: 1
[DEBUG] Using default neighbor generation strategy for conflicts: 1
	InitLNS(PP): runtime = 0.00667692, iterations = 6, colliding pairs = 0, initial colliding pairs = 6, solution cost = 4461, initial solution cost = 4420, failed iterations = 0
[DBG]  [DEBUG] init_lns->sum_of_costs after init_lns->run: 4461
[DBG]  [DEBUG] sum_of_costs after assignment from init_lns->run: 4461
[DBG]  Recomputing sum_of_cost by dividing neighbor.sum_of_costs and neighbor.old_sum_of_costs
[STAT] sum_of_costs after recomputation: 4461
[STAT] Iteration 24
[DBG]  Using SAT operator (destroy+repair SAT).
[DBG]  ====================
[DBG]  SAT destroy operator called.
[DBG]  SAT heuristic: 2
[DBG]  key_agent_id: 28
[DBG]  key_agent_id global path length: 44
[DBG]  Submap content (global positions):
[DBG]  658 659 660 661 662 
[DBG]  690 691 692 693 694 
[DBG]  722 723 724 725 726 
[DBG]  754 755 756 757 758 
[DBG]  786 787 788 789 790 
[DBG]  Map content with agents and obstacles:
[DBG]  A A . . X 
[DBG]  X . . X X 
[DBG]  . X A . . 
[DBG]  X A A . X 
[DBG]  . . . X . 
[DBG]  content of the map structure that we pass to the SAT solver:
[DBG]  1  1  1  1  -1  
[DBG]  -1  1  1  -1  -1  
[DBG]  1  -1  1  1  1  
[DBG]  -1  1  1  1  -1  
[DBG]  1  1  1  -1  1  
[DBG]  Identifying agents in a submap for rescheduling (when key_agent is there at the time 35):
[DBG]  Agent 26 found intervals in the sub-map:
[DBG]   [29..35]
[DBG]  Agent 26 (interval in submap: [29..35]) contains time 35, added to replan.
[DBG]  Agent 28 found intervals in the sub-map:
[DBG]   [0..3] [33..42]
[DBG]  Agent 28 (interval in submap: [33..42]) contains time 35, added to replan.
[DBG]  Agent 42 found intervals in the sub-map:
[DBG]   [34..41]
[DBG]  Agent 42 (interval in submap: [34..41]) contains time 35, added to replan.
[DBG]  Agent 45 found intervals in the sub-map:
[DBG]   [36..42]
[DBG]  Agent 45 is not in sub-map at time 35 (intervals: 
[DBG]  [36..42] )
[DBG]  Agent 53 found intervals in the sub-map:
[DBG]   [32..36]
[DBG]  Agent 53 (interval in submap: [32..36]) contains time 35, added to replan.
[DBG]  Agent 148 found intervals in the sub-map:
[DBG]   [35..38]
[DBG]  Agent 148 (interval in submap: [35..38]) contains time 35, added to replan.
[DBG]  Agent 26 | Start (global): 755 -> (local): (3, 1) at time 35 | Goal (global): 755 -> (local): (3, 1) at time 35
[DBG]  Agent 28 | Start (global): 724 -> (local): (2, 2) at time 35 | Goal (global): 726 -> (local): (2, 4) at time 42
[DBG]  Agent 42 | Start (global): 659 -> (local): (0, 1) at time 35 | Goal (global): 726 -> (local): (2, 4) at time 41
[DBG]  Agent 53 | Start (global): 756 -> (local): (3, 2) at time 35 | Goal (global): 788 -> (local): (4, 2) at time 36
[DBG]  Agent 148 | Start (global): 658 -> (local): (0, 0) at time 35 | Goal (global): 660 -> (local): (0, 2) at time 38
[DBG]  [REPAIR] SAT destroy operator called.
[DBG]  [REPAIR] SAT operator â€“ launching subproblem FOR OPTIMIZATION.
[DBG]  Creating local paths (sx, sy) in the submap for T_sync = 35
[DBG]    Agent 26 (global paths from T=35 to 35) has local path: (3,1) 
[DBG]    Agent 28 (global paths from T=35 to 42) has local path: (2,2) (3,2) (3,3) (3,3) (3,3) (3,3) (2,3) (2,4) 
[DBG]    Agent 42 (global paths from T=35 to 41) has local path: (0,1) (1,1) (1,1) (1,2) (2,2) (2,3) (2,4) 
[DBG]    Agent 53 (global paths from T=35 to 36) has local path: (3,2) (4,2) 
[DBG]    Agent 148 (global paths from T=35 to 38) has local path: (0,0) (0,1) (0,1) (0,2) 
[DBG]  Checking input data for SAT solver:
[DBG]    - Number of agents to replan: 5
[DBG]  Agent 26 has the original local path length: 1 => Start (3,1), Goal (3,1)
[DBG]  Agent 28 has the original local path length: 8 => Start (2,2), Goal (2,4)
[DBG]  Agent 42 has the original local path length: 7 => Start (0,1), Goal (2,4)
[DBG]  Agent 53 has the original local path length: 2 => Start (3,2), Goal (4,2)
[DBG]  Agent 148 has the original local path length: 4 => Start (0,0), Goal (0,2)
[DBG]  Start position: (3, 1), (2, 2), (0, 1), (3, 2), (0, 0), 
[DBG]  Goal position: (3, 1), (2, 4), (2, 4), (4, 2), (0, 2), 
[DBG]  SAT instance and solver created.
Currently solving
Instance name: scen
Map name: map
Encoding used: disappear_at_goal
SAT solver used: Kissat
Optimizing function: sum of costs
Number of agents: 5
Mks LB: 6
SoC LB: 15
Delta: 0
Remaining time: 300000 [ms]

Vertex conflict! Agents 0, 1, timestep 3, location 0
Swapping conflict! Agents 0, 1, timestep 3, edge (0,0)
Vertex conflict! Agents 0, 1, timestep 4, location 0
Swapping conflict! Agents 0, 1, timestep 4, edge (0,0)
Vertex conflict! Agents 0, 1, timestep 5, location 0
Vertex conflict! Agents 0, 3, timestep 2, location 0
Swapping conflict! Agents 0, 3, timestep 2, edge (0,0)
Vertex conflict! Agents 0, 3, timestep 3, location 0
Swapping conflict! Agents 0, 3, timestep 3, edge (0,0)
Vertex conflict! Agents 0, 3, timestep 4, location 0
Swapping conflict! Agents 0, 3, timestep 4, edge (0,0)
Vertex conflict! Agents 0, 3, timestep 5, location 0
Vertex conflict! Agents 0, 4, timestep 3, location 0
Swapping conflict! Agents 0, 4, timestep 3, edge (0,0)
Vertex conflict! Agents 0, 4, timestep 4, location 0
Swapping conflict! Agents 0, 4, timestep 4, edge (0,0)
Vertex conflict! Agents 0, 4, timestep 5, location 0
Vertex conflict! Agents 1, 3, timestep 3, location 0
Swapping conflict! Agents 1, 3, timestep 3, edge (0,0)
Vertex conflict! Agents 1, 3, timestep 4, location 0
Swapping conflict! Agents 1, 3, timestep 4, edge (0,0)
Vertex conflict! Agents 1, 3, timestep 5, location 0
Vertex conflict! Agents 1, 4, timestep 3, location 0
Swapping conflict! Agents 1, 4, timestep 3, edge (0,0)
Vertex conflict! Agents 1, 4, timestep 4, location 0
Swapping conflict! Agents 1, 4, timestep 4, edge (0,0)
Vertex conflict! Agents 1, 4, timestep 5, location 0
Vertex conflict! Agents 3, 4, timestep 3, location 0
Swapping conflict! Agents 3, 4, timestep 3, edge (0,0)
Vertex conflict! Agents 3, 4, timestep 4, location 0
Swapping conflict! Agents 3, 4, timestep 4, edge (0,0)
Vertex conflict! Agents 3, 4, timestep 5, location 0
Found plan [agents = 5] [timesteps = 6]
Agent #0 : 10 0 0 0 0 0 
Agent #1 : 7 8 9 0 0 0 
Agent #2 : 1 4 5 7 8 9 
Agent #3 : 11 15 0 0 0 0 
Agent #4 : 0 1 2 0 0 0 

[STAT] Solver returned: 0
[DBG]  Agent (index) 26 | New local path (submap idx):
[DBG]  10 
[DBG]  Agent (index) 28 | New local path (submap idx):
[DBG]  7 8 9 
[DBG]  Agent (index) 42 | New local path (submap idx):
[DBG]  1 4 5 7 8 9 
[DBG]  Agent (index) 53 | New local path (submap idx):
[DBG]  11 15 
[DBG]  Agent (index) 148 | New local path (submap idx):
[DBG]  0 1 2 
[DBG]  Update the agent path 26 | Original local length: 1 | New local length: 1
[DBG]  agent 26 t=0 => decoded (sx,sy)=(3,1) => global_id=755
[DBG]  Complete path of agent 26:
[DBG]    Original: 13 13 45 77 109 141 173 205 237 269 301 333 365 366 398 430 462 494 526 558 558 590 591 623 655 656 688 689 657 658 659 660 692 724 756 755 
[DBG]    New:     13 13 45 77 109 141 173 205 237 269 301 333 365 366 398 430 462 494 526 558 558 590 591 623 655 656 688 689 657 658 659 660 692 724 756 755 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 13 13 45 77 109 141 173 205 237 269 301 333 365 366 398 430 462 494 526 558 558 590 591 623 655 656 688 689 657 658 659 660 692 724 756 
[DBG]    Local path (in submap): 755 
[DBG]    Suffix (out of submap): 
[DBG]  Original agent path length 26 je: 36
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 0: 13, 13, 45, 77, 109, 141, 173, 205, 237, 269, 301, 333, 365, 366, 398, 430, 462, 494, 526, 558, 558, 590, 591, 623, 655, 656, 688, 689, 657, 658, 659, 660, 692, 724, 756, 755, 
[DBG]  Path for agent 26 updated, resulting length: 36
[DBG]  Update the agent path 28 | Original local length: 8 | New local length: 3
[DBG]  agent 28 t=0 => decoded (sx,sy)=(2,2) => global_id=724
[DBG]  agent 28 t=1 => decoded (sx,sy)=(2,3) => global_id=725
[DBG]  agent 28 t=2 => decoded (sx,sy)=(2,4) => global_id=726
[DBG]  Complete path of agent 28:
[DBG]    Original: 661 661 660 659 627 627 627 627 627 627 627 627 627 628 596 596 596 596 596 596 597 565 565 533 534 502 501 533 565 597 629 629 628 660 692 724 756 757 757 757 757 725 726 727 
[DBG]    New:     661 661 660 659 627 627 627 627 627 627 627 627 627 628 596 596 596 596 596 596 597 565 565 533 534 502 501 533 565 597 629 629 628 660 692 724 725 726 727 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 661 661 660 659 627 627 627 627 627 627 627 627 627 628 596 596 596 596 596 596 597 565 565 533 534 502 501 533 565 597 629 629 628 660 692 
[DBG]    Local path (in submap): 724 725 726 727 
[DBG]    Suffix (out of submap): 
[DBG]  Original agent path length 28 je: 44
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 1: 661, 661, 660, 659, 627, 627, 627, 627, 627, 627, 627, 627, 627, 628, 596, 596, 596, 596, 596, 596, 597, 565, 565, 533, 534, 502, 501, 533, 565, 597, 629, 629, 628, 660, 692, 724, 725, 726, 727, 
[DBG]  Path for agent 28 updated, resulting length: 39
[DBG]  Update the agent path 42 | Original local length: 7 | New local length: 6
[DBG]  agent 42 t=0 => decoded (sx,sy)=(0,1) => global_id=659
[DBG]  agent 42 t=1 => decoded (sx,sy)=(1,1) => global_id=691
[DBG]  agent 42 t=2 => decoded (sx,sy)=(1,2) => global_id=692
[DBG]  agent 42 t=3 => decoded (sx,sy)=(2,2) => global_id=724
[DBG]  agent 42 t=4 => decoded (sx,sy)=(2,3) => global_id=725
[DBG]  agent 42 t=5 => decoded (sx,sy)=(2,4) => global_id=726
[DBG]  Complete path of agent 42:
[DBG]    Original: 224 256 257 289 321 353 354 355 356 388 389 390 422 423 424 456 457 458 459 460 428 429 430 431 463 464 496 528 528 529 561 593 625 657 658 659 691 691 692 724 725 726 727 759 
[DBG]    New:     224 256 257 289 321 353 354 355 356 388 389 390 422 423 424 456 457 458 459 460 428 429 430 431 463 464 496 528 528 529 561 593 625 657 658 659 691 692 724 725 726 727 759 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 224 256 257 289 321 353 354 355 356 388 389 390 422 423 424 456 457 458 459 460 428 429 430 431 463 464 496 528 528 529 561 593 625 657 658 
[DBG]    Local path (in submap): 659 691 692 724 725 726 727 
[DBG]    Suffix (out of submap): 759 
[DBG]  Original agent path length 42 je: 44
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 2: 224, 256, 257, 289, 321, 353, 354, 355, 356, 388, 389, 390, 422, 423, 424, 456, 457, 458, 459, 460, 428, 429, 430, 431, 463, 464, 496, 528, 528, 529, 561, 593, 625, 657, 658, 659, 691, 692, 724, 725, 726, 727, 759, 
[DBG]  Path for agent 42 updated, resulting length: 43
[DBG]  Update the agent path 53 | Original local length: 2 | New local length: 2
[DBG]  agent 53 t=0 => decoded (sx,sy)=(3,2) => global_id=756
[DBG]  agent 53 t=1 => decoded (sx,sy)=(4,2) => global_id=788
[DBG]  Complete path of agent 53:
[DBG]    Original: 84 116 148 180 212 244 276 277 278 310 311 343 375 407 439 438 437 469 501 533 534 534 533 501 501 501 533 565 597 629 628 628 660 692 724 756 788 820 821 
[DBG]    New:     84 116 148 180 212 244 276 277 278 310 311 343 375 407 439 438 437 469 501 533 534 534 533 501 501 501 533 565 597 629 628 628 660 692 724 756 788 820 821 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 84 116 148 180 212 244 276 277 278 310 311 343 375 407 439 438 437 469 501 533 534 534 533 501 501 501 533 565 597 629 628 628 660 692 724 
[DBG]    Local path (in submap): 756 788 
[DBG]    Suffix (out of submap): 820 821 
[DBG]  Original agent path length 53 je: 39
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 3: 84, 116, 148, 180, 212, 244, 276, 277, 278, 310, 311, 343, 375, 407, 439, 438, 437, 469, 501, 533, 534, 534, 533, 501, 501, 501, 533, 565, 597, 629, 628, 628, 660, 692, 724, 756, 788, 820, 821, 
[DBG]  Path for agent 53 updated, resulting length: 39
[DBG]  Update the agent path 148 | Original local length: 4 | New local length: 3
[DBG]  agent 148 t=0 => decoded (sx,sy)=(0,0) => global_id=658
[DBG]  agent 148 t=1 => decoded (sx,sy)=(0,1) => global_id=659
[DBG]  agent 148 t=2 => decoded (sx,sy)=(0,2) => global_id=660
[DBG]  Complete path of agent 148:
[DBG]    Original: 776 744 744 744 712 712 744 745 746 714 714 713 713 713 714 682 683 684 685 685 685 686 686 686 686 686 686 687 687 687 686 654 655 656 657 658 659 659 660 
[DBG]    New:     776 744 744 744 712 712 744 745 746 714 714 713 713 713 714 682 683 684 685 685 685 686 686 686 686 686 686 687 687 687 686 654 655 656 657 658 659 660 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 776 744 744 744 712 712 744 745 746 714 714 713 713 713 714 682 683 684 685 685 685 686 686 686 686 686 686 687 687 687 686 654 655 656 657 
[DBG]    Local path (in submap): 658 659 660 
[DBG]    Suffix (out of submap): 
[DBG]  Original agent path length 148 je: 39
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 4: 776, 744, 744, 744, 712, 712, 744, 745, 746, 714, 714, 713, 713, 713, 714, 682, 683, 684, 685, 685, 685, 686, 686, 686, 686, 686, 686, 687, 687, 687, 686, 654, 655, 656, 657, 658, 659, 660, 
[DBG]  Path for agent 148 updated, resulting length: 38
[DBG]  Paths successfully updated.
[DBG]  (LNS.cpp) New path for agent 26: 
[DBG]  13, 13, 45, 77, 109, 141, 173, 205, 237, 269, 301, 333, 365, 366, 398, 430, 462, 494, 526, 558, 558, 590, 591, 623, 655, 656, 688, 689, 657, 658, 659, 660, 692, 724, 756, 755, 
[DBG]  (LNS.cpp) New path for agent 28: 
[DBG]  661, 661, 660, 659, 627, 627, 627, 627, 627, 627, 627, 627, 627, 628, 596, 596, 596, 596, 596, 596, 597, 565, 565, 533, 534, 502, 501, 533, 565, 597, 629, 629, 628, 660, 692, 724, 725, 726, 727, 
[DBG]  (LNS.cpp) New path for agent 42: 
[DBG]  224, 256, 257, 289, 321, 353, 354, 355, 356, 388, 389, 390, 422, 423, 424, 456, 457, 458, 459, 460, 428, 429, 430, 431, 463, 464, 496, 528, 528, 529, 561, 593, 625, 657, 658, 659, 691, 692, 724, 725, 726, 727, 759, 
[DBG]  (LNS.cpp) New path for agent 53: 
[DBG]  84, 116, 148, 180, 212, 244, 276, 277, 278, 310, 311, 343, 375, 407, 439, 438, 437, 469, 501, 533, 534, 534, 533, 501, 501, 501, 533, 565, 597, 629, 628, 628, 660, 692, 724, 756, 788, 820, 821, 
[DBG]  (LNS.cpp) New path for agent 148: 
[DBG]  776, 744, 744, 744, 712, 712, 744, 745, 746, 714, 714, 713, 713, 713, 714, 682, 683, 684, 685, 685, 685, 686, 686, 686, 686, 686, 686, 687, 687, 687, 686, 654, 655, 656, 657, 658, 659, 660, 
[DBG]  Delta value: 0.035533
[DBG]  Rewarding metric index = 1
[DBG]  component_weights = {0.294654, 0.184991, 0.139514, 0.380841}
[DBG]  opSuccess value: 1
[STAT] neighbor.sum_of_costs before recomputation: 190
[STAT] neighbor.old_sum_of_costs before recomputation: 197
[STAT] sum_of_costs before recomputation: 4461
[DBG]  Validate solution immediately after SAT success.
[WARNING] Problem after SAT: Target conflict: agent 42 (len 42) traverses target of agent 28 (len 38) at location 727 at timestep 41
[DBG]  [DEBUG] Attempting immediate repair via init_lns because problem occurred after SAT (should be applied only for conflicts...).
[DBG]  [DEBUG] Passing 150 agents to init_lns (skip=true).
[DBG]  [DEBUG] path_table contents for selected agents (neighbor.agents):
[DBG]    Agent 26 => controlling path length=36
[DBG]    Agent 28 => controlling path length=39
[DBG]    Agent 42 => controlling path length=43
[DBG]    Agent 53 => controlling path length=39
[DBG]    Agent 148 => controlling path length=38
[DBG]  hodnota skip_initial_solution=1
[DBG]  We skip initialSolution => call buildCollisionData()
[DBG]  buildCollisionData() called â€“ skip_initial_solution case.
[DBG]  Agents.size()=150, collision_graph.size()=150
[DBG]  agent 28 => updateCollidingPairs => foundCollision
[DBG]  agent 42 => updateCollidingPairs => foundCollision
[DBG]  agent 45 => updateCollidingPairs => foundCollision
[DBG]  Conflicting agent pairs:
[DBG]  agent 28 is in conflict with agent 42
[DBG]  agent 42 is in conflict with agent 45
[DBG]  buildCollisionData() => sum_of_costs=4454, num_of_colliding_pairs=2
[DBG]  buildCollisionData done => sum_of_costs=4454, num_of_colliding_pairs=2
[DBG]  sum_of_cost hodnota: 4454
[DBG]  After skip/init build => iteration_stats.back(): sum_of_costs=4454, collisions=2
[DEBUG] Using default neighbor generation strategy for conflicts: 2
[DEBUG] Using default neighbor generation strategy for conflicts: 2
	InitLNS(PP): runtime = 0.00134229, iterations = 3, colliding pairs = 0, initial colliding pairs = 2, solution cost = 4458, initial solution cost = 4454, failed iterations = 0
[DBG]  [DEBUG] init_lns->sum_of_costs after init_lns->run: 4458
[DBG]  [DEBUG] sum_of_costs after assignment from init_lns->run: 4458
[DBG]  Recomputing sum_of_cost by dividing neighbor.sum_of_costs and neighbor.old_sum_of_costs
[STAT] sum_of_costs after recomputation: 4458
[STAT] Iteration 25
[DBG]  Using SAT operator (destroy+repair SAT).
[DBG]  ====================
[DBG]  SAT destroy operator called.
[DBG]  SAT heuristic: 2
[DBG]  key_agent_id: 28
[DBG]  key_agent_id global path length: 44
[DBG]  Submap content (global positions):
[DBG]  531 532 533 534 535 
[DBG]  563 564 565 566 567 
[DBG]  595 596 597 598 599 
[DBG]  627 628 629 630 631 
[DBG]  659 660 661 662 663 
[DBG]  Map content with agents and obstacles:
[DBG]  . X A . X 
[DBG]  . X . . X 
[DBG]  X . A X . 
[DBG]  . . A X . 
[DBG]  . . . X X 
[DBG]  content of the map structure that we pass to the SAT solver:
[DBG]  1  -1  1  1  -1  
[DBG]  1  -1  1  1  -1  
[DBG]  -1  1  1  -1  1  
[DBG]  1  1  1  -1  1  
[DBG]  1  1  1  -1  -1  
[DBG]  Identifying agents in a submap for rescheduling (when key_agent is there at the time 29):
[DBG]  Agent 26 found intervals in the sub-map:
[DBG]   [30..31]
[DBG]  Agent 26 is not in sub-map at time 29 (intervals: 
[DBG]  [30..31] )
[DBG]  Agent 28 found intervals in the sub-map:
[DBG]   [0..11] [16..22] [27..33]
[DBG]  Agent 28 (interval in submap: [27..33]) contains time 29, added to replan.
[DBG]  Agent 45 found intervals in the sub-map:
[DBG]   [28..36]
[DBG]  Agent 45 (interval in submap: [28..36]) contains time 29, added to replan.
[DBG]  Agent 53 found intervals in the sub-map:
[DBG]   [19..22] [26..32]
[DBG]  Agent 53 (interval in submap: [26..32]) contains time 29, added to replan.
[DBG]  Agent 91 found intervals in the sub-map:
[DBG]  
[DBG]  Agent 91 is not in sub-map at time 29 (intervals: 
[DBG]  )
[DBG]  Agent 148 found intervals in the sub-map:
[DBG]   [36..37]
[DBG]  Agent 148 is not in sub-map at time 29 (intervals: 
[DBG]  [36..37] )
[DBG]  Agent 28 | Start (global): 597 -> (local): (2, 2) at time 29 | Goal (global): 660 -> (local): (4, 1) at time 33
[DBG]  Agent 45 | Start (global): 533 -> (local): (0, 2) at time 29 | Goal (global): 660 -> (local): (4, 1) at time 36
[DBG]  Agent 53 | Start (global): 629 -> (local): (3, 2) at time 29 | Goal (global): 660 -> (local): (4, 1) at time 32
[DBG]  [REPAIR] SAT destroy operator called.
[DBG]  [REPAIR] SAT operator â€“ launching subproblem FOR OPTIMIZATION.
[DBG]  Creating local paths (sx, sy) in the submap for T_sync = 29
[DBG]    Agent 28 (global paths from T=29 to 33) has local path: (2,2) (2,1) (2,1) (3,1) (4,1) 
[DBG]    Agent 45 (global paths from T=29 to 36) has local path: (0,2) (0,2) (0,2) (1,2) (2,2) (2,1) (3,1) (4,1) 
[DBG]    Agent 53 (global paths from T=29 to 32) has local path: (3,2) (3,1) (3,1) (4,1) 
[DBG]  Checking input data for SAT solver:
[DBG]    - Number of agents to replan: 3
[DBG]  Agent 28 has the original local path length: 5 => Start (2,2), Goal (4,1)
[DBG]  Agent 45 has the original local path length: 8 => Start (0,2), Goal (4,1)
[DBG]  Agent 53 has the original local path length: 4 => Start (3,2), Goal (4,1)
[DBG]  Start position: (2, 2), (0, 2), (3, 2), 
[DBG]  Goal position: (4, 1), (4, 1), (4, 1), 
[DBG]  SAT instance and solver created.
Currently solving
Instance name: scen
Map name: map
Encoding used: disappear_at_goal
SAT solver used: Kissat
Optimizing function: sum of costs
Number of agents: 3
Mks LB: 6
SoC LB: 13
Delta: 0
Remaining time: 300000 [ms]

Vertex conflict! Agents 0, 2, timestep 4, location 0
Swapping conflict! Agents 0, 2, timestep 4, edge (0,0)
Vertex conflict! Agents 0, 2, timestep 5, location 0
Found plan [agents = 3] [timesteps = 6]
Agent #0 : 7 11 15 14 0 0 
Agent #1 : 1 4 7 11 15 14 
Agent #2 : 11 15 14 0 0 0 

[STAT] Solver returned: 0
[DBG]  Agent (index) 28 | New local path (submap idx):
[DBG]  7 11 15 14 
[DBG]  Agent (index) 45 | New local path (submap idx):
[DBG]  1 4 7 11 15 14 
[DBG]  Agent (index) 53 | New local path (submap idx):
[DBG]  11 15 14 
[DBG]  Update the agent path 28 | Original local length: 5 | New local length: 4
[DBG]  agent 28 t=0 => decoded (sx,sy)=(2,2) => global_id=597
[DBG]  agent 28 t=1 => decoded (sx,sy)=(3,2) => global_id=629
[DBG]  agent 28 t=2 => decoded (sx,sy)=(4,2) => global_id=661
[DBG]  agent 28 t=3 => decoded (sx,sy)=(4,1) => global_id=660
[DBG]  Complete path of agent 28:
[DBG]    Original: 661 661 660 628 628 628 628 629 597 565 566 534 502 470 470 502 534 566 566 566 566 566 534 502 502 502 501 533 565 597 596 596 628 660 692 724 725 757 757 757 757 725 726 727 
[DBG]    New:     661 661 660 628 628 628 628 629 597 565 566 534 502 470 470 502 534 566 566 566 566 566 534 502 502 502 501 533 565 597 629 661 660 692 724 725 757 757 757 757 725 726 727 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 661 661 660 628 628 628 628 629 597 565 566 534 502 470 470 502 534 566 566 566 566 566 534 502 502 502 501 533 565 
[DBG]    Local path (in submap): 597 629 661 660 692 
[DBG]    Suffix (out of submap): 724 725 757 757 757 757 725 726 727 
[DBG]  Original agent path length 28 je: 44
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 0: 661, 661, 660, 628, 628, 628, 628, 629, 597, 565, 566, 534, 502, 470, 470, 502, 534, 566, 566, 566, 566, 566, 534, 502, 502, 502, 501, 533, 565, 597, 629, 661, 660, 692, 724, 725, 757, 757, 757, 757, 725, 726, 727, 
[DBG]  Path for agent 28 updated, resulting length: 43
[DBG]  Update the agent path 45 | Original local length: 8 | New local length: 6
[DBG]  agent 45 t=0 => decoded (sx,sy)=(0,2) => global_id=533
[DBG]  agent 45 t=1 => decoded (sx,sy)=(1,2) => global_id=565
[DBG]  agent 45 t=2 => decoded (sx,sy)=(2,2) => global_id=597
[DBG]  agent 45 t=3 => decoded (sx,sy)=(3,2) => global_id=629
[DBG]  agent 45 t=4 => decoded (sx,sy)=(4,2) => global_id=661
[DBG]  agent 45 t=5 => decoded (sx,sy)=(4,1) => global_id=660
[DBG]  Complete path of agent 45:
[DBG]    Original: 153 154 186 185 217 185 184 184 184 185 217 249 248 248 247 279 278 278 277 309 341 373 405 437 469 469 469 501 533 533 533 533 565 597 596 628 660 692 724 756 788 787 786 818 850 849 
[DBG]    New:     153 154 186 185 217 185 184 184 184 185 217 249 248 248 247 279 278 278 277 309 341 373 405 437 469 469 469 501 533 533 565 597 629 661 660 692 724 756 788 787 786 818 850 849 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 153 154 186 185 217 185 184 184 184 185 217 249 248 248 247 279 278 278 277 309 341 373 405 437 469 469 469 501 533 
[DBG]    Local path (in submap): 533 565 597 629 661 660 692 724 
[DBG]    Suffix (out of submap): 756 788 787 786 818 850 849 
[DBG]  Original agent path length 45 je: 46
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 1: 153, 154, 186, 185, 217, 185, 184, 184, 184, 185, 217, 249, 248, 248, 247, 279, 278, 278, 277, 309, 341, 373, 405, 437, 469, 469, 469, 501, 533, 533, 565, 597, 629, 661, 660, 692, 724, 756, 788, 787, 786, 818, 850, 849, 
[DBG]  Path for agent 45 updated, resulting length: 44
[DBG]  Update the agent path 53 | Original local length: 4 | New local length: 3
[DBG]  agent 53 t=0 => decoded (sx,sy)=(3,2) => global_id=629
[DBG]  agent 53 t=1 => decoded (sx,sy)=(4,2) => global_id=661
[DBG]  agent 53 t=2 => decoded (sx,sy)=(4,1) => global_id=660
[DBG]  Complete path of agent 53:
[DBG]    Original: 84 116 148 180 212 244 276 277 278 310 311 343 375 407 439 438 437 469 501 533 534 534 533 501 501 501 533 565 597 629 628 628 660 692 724 756 788 820 821 
[DBG]    New:     84 116 148 180 212 244 276 277 278 310 311 343 375 407 439 438 437 469 501 533 534 534 533 501 501 501 533 565 597 629 661 660 692 724 756 788 820 821 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 84 116 148 180 212 244 276 277 278 310 311 343 375 407 439 438 437 469 501 533 534 534 533 501 501 501 533 565 597 
[DBG]    Local path (in submap): 629 661 660 692 
[DBG]    Suffix (out of submap): 724 756 788 820 821 
[DBG]  Original agent path length 53 je: 39
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 2: 84, 116, 148, 180, 212, 244, 276, 277, 278, 310, 311, 343, 375, 407, 439, 438, 437, 469, 501, 533, 534, 534, 533, 501, 501, 501, 533, 565, 597, 629, 661, 660, 692, 724, 756, 788, 820, 821, 
[DBG]  Path for agent 53 updated, resulting length: 38
[DBG]  Paths successfully updated.
[DBG]  (LNS.cpp) New path for agent 28: 
[DBG]  661, 661, 660, 628, 628, 628, 628, 629, 597, 565, 566, 534, 502, 470, 470, 502, 534, 566, 566, 566, 566, 566, 534, 502, 502, 502, 501, 533, 565, 597, 629, 661, 660, 692, 724, 725, 757, 757, 757, 757, 725, 726, 727, 
[DBG]  (LNS.cpp) New path for agent 45: 
[DBG]  153, 154, 186, 185, 217, 185, 184, 184, 184, 185, 217, 249, 248, 248, 247, 279, 278, 278, 277, 309, 341, 373, 405, 437, 469, 469, 469, 501, 533, 533, 565, 597, 629, 661, 660, 692, 724, 756, 788, 787, 786, 818, 850, 849, 
[DBG]  (LNS.cpp) New path for agent 53: 
[DBG]  84, 116, 148, 180, 212, 244, 276, 277, 278, 310, 311, 343, 375, 407, 439, 438, 437, 469, 501, 533, 534, 534, 533, 501, 501, 501, 533, 565, 597, 629, 661, 660, 692, 724, 756, 788, 820, 821, 
[DBG]  Delta value: 0.031746
[DBG]  Rewarding metric index = 0
[DBG]  component_weights = {0.312095, 0.180417, 0.136064, 0.371423}
[DBG]  opSuccess value: 1
[STAT] neighbor.sum_of_costs before recomputation: 122
[STAT] neighbor.old_sum_of_costs before recomputation: 126
[STAT] sum_of_costs before recomputation: 4458
[DBG]  Validate solution immediately after SAT success.
[WARNING] Problem after SAT: Vertex conflict between agents 26 and 53 at location 660 at timestep 31
[DBG]  [DEBUG] Attempting immediate repair via init_lns because problem occurred after SAT (should be applied only for conflicts...).
[DBG]  [DEBUG] Passing 150 agents to init_lns (skip=true).
[DBG]  [DEBUG] path_table contents for selected agents (neighbor.agents):
[DBG]    Agent 28 => controlling path length=43
[DBG]    Agent 45 => controlling path length=44
[DBG]    Agent 53 => controlling path length=38
[DBG]  hodnota skip_initial_solution=1
[DBG]  We skip initialSolution => call buildCollisionData()
[DBG]  buildCollisionData() called â€“ skip_initial_solution case.
[DBG]  Agents.size()=150, collision_graph.size()=150
[DBG]  agent 26 => updateCollidingPairs => foundCollision
[DBG]  agent 28 => updateCollidingPairs => foundCollision
[DBG]  agent 42 => updateCollidingPairs => foundCollision
[DBG]  agent 53 => updateCollidingPairs => foundCollision
[DBG]  Conflicting agent pairs:
[DBG]  agent 26 is in conflict with agent 53
[DBG]  agent 28 is in conflict with agent 42
[DBG]  buildCollisionData() => sum_of_costs=4454, num_of_colliding_pairs=2
[DBG]  buildCollisionData done => sum_of_costs=4454, num_of_colliding_pairs=2
[DBG]  sum_of_cost hodnota: 4454
[DBG]  After skip/init build => iteration_stats.back(): sum_of_costs=4454, collisions=2
[DEBUG] Using default neighbor generation strategy for conflicts: 0
	InitLNS(PP): runtime = 0.001717, iterations = 2, colliding pairs = 0, initial colliding pairs = 2, solution cost = 4480, initial solution cost = 4454, failed iterations = 0
[DBG]  [DEBUG] init_lns->sum_of_costs after init_lns->run: 4480
[DBG]  [DEBUG] sum_of_costs after assignment from init_lns->run: 4480
[DBG]  Recomputing sum_of_cost by dividing neighbor.sum_of_costs and neighbor.old_sum_of_costs
[STAT] sum_of_costs after recomputation: 4480
[STAT] Iteration 26
[DBG]  Using SAT operator (destroy+repair SAT).
[DBG]  ====================
[DBG]  SAT destroy operator called.
[DBG]  SAT heuristic: 2
[DBG]  key_agent_id: 28
[DBG]  key_agent_id global path length: 44
[DBG]  Submap content (global positions):
[DBG]  595 596 597 598 599 
[DBG]  627 628 629 630 631 
[DBG]  659 660 661 662 663 
[DBG]  691 692 693 694 695 
[DBG]  723 724 725 726 727 
[DBG]  Map content with agents and obstacles:
[DBG]  X . . X . 
[DBG]  . . A X . 
[DBG]  A . A X X 
[DBG]  A . X X X 
[DBG]  X . . . . 
[DBG]  content of the map structure that we pass to the SAT solver:
[DBG]  -1  1  1  -1  1  
[DBG]  1  1  1  -1  1  
[DBG]  1  1  1  -1  -1  
[DBG]  1  1  -1  -1  -1  
[DBG]  -1  1  1  1  1  
[DBG]  Identifying agents in a submap for rescheduling (when key_agent is there at the time 18):
[DBG]  Agent 4 found intervals in the sub-map:
[DBG]  
[DBG]  Agent 4 is not in sub-map at time 18 (intervals: 
[DBG]  )
[DBG]  Agent 11 found intervals in the sub-map:
[DBG]   [22..25]
[DBG]  Agent 11 is not in sub-map at time 18 (intervals: 
[DBG]  [22..25] )
[DBG]  Agent 28 found intervals in the sub-map:
[DBG]   [0..37] [43..43]
[DBG]  Agent 28 (interval in submap: [0..37]) contains time 18, added to replan.
[DBG]  Agent 79 found intervals in the sub-map:
[DBG]   [18..22]
[DBG]  Agent 79 (interval in submap: [18..22]) contains time 18, added to replan.
[DBG]  Agent 114 found intervals in the sub-map:
[DBG]   [15..19]
[DBG]  Agent 114 (interval in submap: [15..19]) contains time 18, added to replan.
[DBG]  Agent 135 found intervals in the sub-map:
[DBG]   [4..4] [8..21]
[DBG]  Agent 135 (interval in submap: [8..21]) contains time 18, added to replan.
[DBG]  Agent 28 | Start (global): 661 -> (local): (2, 2) at time 18 | Goal (global): 727 -> (local): (4, 4) at time 37
[DBG]  Agent 79 | Start (global): 659 -> (local): (2, 0) at time 18 | Goal (global): 597 -> (local): (0, 2) at time 22
[DBG]  Agent 114 | Start (global): 629 -> (local): (1, 2) at time 18 | Goal (global): 597 -> (local): (0, 2) at time 19
[DBG]  Agent 135 | Start (global): 691 -> (local): (3, 0) at time 18 | Goal (global): 659 -> (local): (2, 0) at time 21
[DBG]  [REPAIR] SAT destroy operator called.
[DBG]  [REPAIR] SAT operator â€“ launching subproblem FOR OPTIMIZATION.
[DBG]  Creating local paths (sx, sy) in the submap for T_sync = 18
[DBG]    Agent 28 (global paths from T=18 to 37) has local path: (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,1) (3,1) (4,1) (4,2) (4,3) (4,4) 
[DBG]    Agent 79 (global paths from T=18 to 22) has local path: (2,0) (1,0) (1,1) (1,2) (0,2) 
[DBG]    Agent 114 (global paths from T=18 to 19) has local path: (1,2) (0,2) 
[DBG]    Agent 135 (global paths from T=18 to 21) has local path: (3,0) (3,0) (3,0) (2,0) 
[DBG]  Checking input data for SAT solver:
[DBG]    - Number of agents to replan: 4
[DBG]  Agent 28 has the original local path length: 20 => Start (2,2), Goal (4,4)
[DBG]  Agent 79 has the original local path length: 5 => Start (2,0), Goal (0,2)
[DBG]  Agent 114 has the original local path length: 2 => Start (1,2), Goal (0,2)
[DBG]  Agent 135 has the original local path length: 4 => Start (3,0), Goal (2,0)
[DBG]  Start position: (2, 2), (2, 0), (1, 2), (3, 0), 
[DBG]  Goal position: (4, 4), (0, 2), (0, 2), (2, 0), 
[DBG]  SAT instance and solver created.
Currently solving
Instance name: scen
Map name: map
Encoding used: disappear_at_goal
SAT solver used: Kissat
Optimizing function: sum of costs
Number of agents: 4
Mks LB: 7
SoC LB: 16
Delta: 0
Remaining time: 300000 [ms]

Vertex conflict! Agents 1, 2, timestep 5, location 0
Swapping conflict! Agents 1, 2, timestep 5, edge (0,0)
Vertex conflict! Agents 1, 2, timestep 6, location 0
Vertex conflict! Agents 1, 3, timestep 5, location 0
Swapping conflict! Agents 1, 3, timestep 5, edge (0,0)
Vertex conflict! Agents 1, 3, timestep 6, location 0
Vertex conflict! Agents 2, 3, timestep 2, location 0
Swapping conflict! Agents 2, 3, timestep 2, edge (0,0)
Vertex conflict! Agents 2, 3, timestep 3, location 0
Swapping conflict! Agents 2, 3, timestep 3, edge (0,0)
Vertex conflict! Agents 2, 3, timestep 4, location 0
Swapping conflict! Agents 2, 3, timestep 4, edge (0,0)
Vertex conflict! Agents 2, 3, timestep 5, location 0
Swapping conflict! Agents 2, 3, timestep 5, edge (0,0)
Vertex conflict! Agents 2, 3, timestep 6, location 0
Found plan [agents = 4] [timesteps = 7]
Agent #0 : 9 8 11 12 13 14 15 
Agent #1 : 7 3 4 5 1 0 0 
Agent #2 : 5 1 0 0 0 0 0 
Agent #3 : 10 7 0 0 0 0 0 

[STAT] Solver returned: 0
[DBG]  Agent (index) 28 | New local path (submap idx):
[DBG]  9 8 11 12 13 14 15 
[DBG]  Agent (index) 79 | New local path (submap idx):
[DBG]  7 3 4 5 1 
[DBG]  Agent (index) 114 | New local path (submap idx):
[DBG]  5 1 
[DBG]  Agent (index) 135 | New local path (submap idx):
[DBG]  10 7 
[DBG]  Update the agent path 28 | Original local length: 20 | New local length: 7
[DBG]  agent 28 t=0 => decoded (sx,sy)=(2,2) => global_id=661
[DBG]  agent 28 t=1 => decoded (sx,sy)=(2,1) => global_id=660
[DBG]  agent 28 t=2 => decoded (sx,sy)=(3,1) => global_id=692
[DBG]  agent 28 t=3 => decoded (sx,sy)=(4,1) => global_id=724
[DBG]  agent 28 t=4 => decoded (sx,sy)=(4,2) => global_id=725
[DBG]  agent 28 t=5 => decoded (sx,sy)=(4,3) => global_id=726
[DBG]  agent 28 t=6 => decoded (sx,sy)=(4,4) => global_id=727
[DBG]  Complete path of agent 28:
[DBG]    Original: 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 660 692 724 725 726 727 728 728 728 728 728 727 
[DBG]    New:     661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 660 692 724 725 726 727 728 728 728 728 728 727 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 
[DBG]    Local path (in submap): 661 660 692 724 725 726 727 728 728 728 728 728 727 
[DBG]    Suffix (out of submap): 
[DBG]  Original agent path length 28 je: 44
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 0: 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 660, 692, 724, 725, 726, 727, 728, 728, 728, 728, 728, 727, 
[DBG]  Path for agent 28 updated, resulting length: 31
[DBG]  Update the agent path 79 | Original local length: 5 | New local length: 5
[DBG]  agent 79 t=0 => decoded (sx,sy)=(2,0) => global_id=659
[DBG]  agent 79 t=1 => decoded (sx,sy)=(1,0) => global_id=627
[DBG]  agent 79 t=2 => decoded (sx,sy)=(1,1) => global_id=628
[DBG]  agent 79 t=3 => decoded (sx,sy)=(1,2) => global_id=629
[DBG]  agent 79 t=4 => decoded (sx,sy)=(0,2) => global_id=597
[DBG]  Complete path of agent 79:
[DBG]    Original: 1004 1005 973 974 942 910 878 846 847 815 783 751 719 687 655 656 657 658 659 627 628 629 597 565 566 534 502 503 504 472 440 408 409 409 377 345 313 281 249 217 185 153 121 122 123 
[DBG]    New:     1004 1005 973 974 942 910 878 846 847 815 783 751 719 687 655 656 657 658 659 627 628 629 597 565 566 534 502 503 504 472 440 408 409 409 377 345 313 281 249 217 185 153 121 122 123 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 1004 1005 973 974 942 910 878 846 847 815 783 751 719 687 655 656 657 658 
[DBG]    Local path (in submap): 659 627 628 629 597 
[DBG]    Suffix (out of submap): 565 566 534 502 503 504 472 440 408 409 409 377 345 313 281 249 217 185 153 121 122 123 
[DBG]  Original agent path length 79 je: 45
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 1: 1004, 1005, 973, 974, 942, 910, 878, 846, 847, 815, 783, 751, 719, 687, 655, 656, 657, 658, 659, 627, 628, 629, 597, 565, 566, 534, 502, 503, 504, 472, 440, 408, 409, 409, 377, 345, 313, 281, 249, 217, 185, 153, 121, 122, 123, 
[DBG]  Path for agent 79 updated, resulting length: 45
[DBG]  Update the agent path 114 | Original local length: 2 | New local length: 2
[DBG]  agent 114 t=0 => decoded (sx,sy)=(1,2) => global_id=629
[DBG]  agent 114 t=1 => decoded (sx,sy)=(0,2) => global_id=597
[DBG]  Complete path of agent 114:
[DBG]    Original: 875 843 811 779 780 781 782 750 751 719 687 655 656 657 658 659 627 628 629 597 565 533 501 469 470 438 439 407 375 343 344 312 313 281 249 217 218 186 154 
[DBG]    New:     875 843 811 779 780 781 782 750 751 719 687 655 656 657 658 659 627 628 629 597 565 533 501 469 470 438 439 407 375 343 344 312 313 281 249 217 218 186 154 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 875 843 811 779 780 781 782 750 751 719 687 655 656 657 658 659 627 628 
[DBG]    Local path (in submap): 629 597 
[DBG]    Suffix (out of submap): 565 533 501 469 470 438 439 407 375 343 344 312 313 281 249 217 218 186 154 
[DBG]  Original agent path length 114 je: 39
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 2: 875, 843, 811, 779, 780, 781, 782, 750, 751, 719, 687, 655, 656, 657, 658, 659, 627, 628, 629, 597, 565, 533, 501, 469, 470, 438, 439, 407, 375, 343, 344, 312, 313, 281, 249, 217, 218, 186, 154, 
[DBG]  Path for agent 114 updated, resulting length: 39
[DBG]  Update the agent path 135 | Original local length: 4 | New local length: 2
[DBG]  agent 135 t=0 => decoded (sx,sy)=(3,0) => global_id=691
[DBG]  agent 135 t=1 => decoded (sx,sy)=(2,0) => global_id=659
[DBG]  Complete path of agent 135:
[DBG]    Original: 696 696 696 728 727 759 759 759 727 726 725 725 725 724 692 691 691 691 691 691 691 659 658 657 625 625 625 625 593 592 591 590 589 588 556 524 523 522 521 520 519 487 486 485 484 483 482 450 449 448 416 384 
[DBG]    New:     696 696 696 728 727 759 759 759 727 726 725 725 725 724 692 691 691 691 691 659 658 657 625 625 625 625 593 592 591 590 589 588 556 524 523 522 521 520 519 487 486 485 484 483 482 450 449 448 416 384 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 696 696 696 728 727 759 759 759 727 726 725 725 725 724 692 691 691 691 
[DBG]    Local path (in submap): 691 659 658 657 
[DBG]    Suffix (out of submap): 625 625 625 625 593 592 591 590 589 588 556 524 523 522 521 520 519 487 486 485 484 483 482 450 449 448 416 384 
[DBG]  Original agent path length 135 je: 52
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 3: 696, 696, 696, 728, 727, 759, 759, 759, 727, 726, 725, 725, 725, 724, 692, 691, 691, 691, 691, 659, 658, 657, 625, 625, 625, 625, 593, 592, 591, 590, 589, 588, 556, 524, 523, 522, 521, 520, 519, 487, 486, 485, 484, 483, 482, 450, 449, 448, 416, 384, 
[DBG]  Path for agent 135 updated, resulting length: 50
[DBG]  Paths successfully updated.
[DBG]  (LNS.cpp) New path for agent 28: 
[DBG]  661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 660, 692, 724, 725, 726, 727, 728, 728, 728, 728, 728, 727, 
[DBG]  (LNS.cpp) New path for agent 79: 
[DBG]  1004, 1005, 973, 974, 942, 910, 878, 846, 847, 815, 783, 751, 719, 687, 655, 656, 657, 658, 659, 627, 628, 629, 597, 565, 566, 534, 502, 503, 504, 472, 440, 408, 409, 409, 377, 345, 313, 281, 249, 217, 185, 153, 121, 122, 123, 
[DBG]  (LNS.cpp) New path for agent 114: 
[DBG]  875, 843, 811, 779, 780, 781, 782, 750, 751, 719, 687, 655, 656, 657, 658, 659, 627, 628, 629, 597, 565, 533, 501, 469, 470, 438, 439, 407, 375, 343, 344, 312, 313, 281, 249, 217, 218, 186, 154, 
[DBG]  (LNS.cpp) New path for agent 135: 
[DBG]  696, 696, 696, 728, 727, 759, 759, 759, 727, 726, 725, 725, 725, 724, 692, 691, 691, 691, 691, 659, 658, 657, 625, 625, 625, 625, 593, 592, 591, 590, 589, 588, 556, 524, 523, 522, 521, 520, 519, 487, 486, 485, 484, 483, 482, 450, 449, 448, 416, 384, 
[DBG]  Delta value: 0.0852273
[DBG]  Rewarding metric index = 1
[DBG]  component_weights = {0.304281, 0.200938, 0.132657, 0.362124}
[DBG]  opSuccess value: 1
[STAT] neighbor.sum_of_costs before recomputation: 161
[STAT] neighbor.old_sum_of_costs before recomputation: 176
[STAT] sum_of_costs before recomputation: 4480
[DBG]  Validate solution immediately after SAT success.
[WARNING] Problem after SAT: Vertex conflict between agents 28 and 30 at location 692 at timestep 20
[DBG]  [DEBUG] Attempting immediate repair via init_lns because problem occurred after SAT (should be applied only for conflicts...).
[DBG]  [DEBUG] Passing 150 agents to init_lns (skip=true).
[DBG]  [DEBUG] path_table contents for selected agents (neighbor.agents):
[DBG]    Agent 28 => controlling path length=31
[DBG]    Agent 79 => controlling path length=45
[DBG]    Agent 114 => controlling path length=39
[DBG]    Agent 135 => controlling path length=50
[DBG]  hodnota skip_initial_solution=1
[DBG]  We skip initialSolution => call buildCollisionData()
[DBG]  buildCollisionData() called â€“ skip_initial_solution case.
[DBG]  Agents.size()=150, collision_graph.size()=150
[DBG]  agent 28 => updateCollidingPairs => foundCollision
[DBG]  agent 30 => updateCollidingPairs => foundCollision
[DBG]  agent 42 => updateCollidingPairs => foundCollision
[DBG]  agent 45 => updateCollidingPairs => foundCollision
[DBG]  agent 49 => updateCollidingPairs => foundCollision
[DBG]  agent 56 => updateCollidingPairs => foundCollision
[DBG]  agent 59 => updateCollidingPairs => foundCollision
[DBG]  agent 74 => updateCollidingPairs => foundCollision
[DBG]  agent 135 => updateCollidingPairs => foundCollision
[DBG]  Conflicting agent pairs:
[DBG]  agent 28 is in conflict with agent 30
[DBG]  agent 28 is in conflict with agent 42
[DBG]  agent 28 is in conflict with agent 45
[DBG]  agent 49 is in conflict with agent 135
[DBG]  agent 56 is in conflict with agent 135
[DBG]  agent 59 is in conflict with agent 135
[DBG]  agent 74 is in conflict with agent 135
[DBG]  buildCollisionData() => sum_of_costs=4465, num_of_colliding_pairs=7
[DBG]  buildCollisionData done => sum_of_costs=4465, num_of_colliding_pairs=7
[DBG]  sum_of_cost hodnota: 4465
[DBG]  After skip/init build => iteration_stats.back(): sum_of_costs=4465, collisions=7
[DEBUG] Using default neighbor generation strategy for conflicts: 1
[DEBUG] Using default neighbor generation strategy for conflicts: 1
	InitLNS(PP): runtime = 0.005367, iterations = 3, colliding pairs = 0, initial colliding pairs = 7, solution cost = 4478, initial solution cost = 4465, failed iterations = 0
[DBG]  [DEBUG] init_lns->sum_of_costs after init_lns->run: 4478
[DBG]  [DEBUG] sum_of_costs after assignment from init_lns->run: 4478
[DBG]  Recomputing sum_of_cost by dividing neighbor.sum_of_costs and neighbor.old_sum_of_costs
[STAT] sum_of_costs after recomputation: 4478
[STAT] Iteration 27
[DBG]  Using SAT operator (destroy+repair SAT).
[DBG]  ====================
[DBG]  SAT destroy operator called.
[DBG]  SAT heuristic: 2
[DBG]  key_agent_id: 28
[DBG]  key_agent_id global path length: 43
[DBG]  Submap content (global positions):
[DBG]  595 596 597 598 599 
[DBG]  627 628 629 630 631 
[DBG]  659 660 661 662 663 
[DBG]  691 692 693 694 695 
[DBG]  723 724 725 726 727 
[DBG]  Map content with agents and obstacles:
[DBG]  X A . X . 
[DBG]  . . . X . 
[DBG]  A . A X X 
[DBG]  . . X X X 
[DBG]  X . . A . 
[DBG]  content of the map structure that we pass to the SAT solver:
[DBG]  -1  1  1  -1  1  
[DBG]  1  1  1  -1  1  
[DBG]  1  1  1  -1  -1  
[DBG]  1  1  -1  -1  -1  
[DBG]  -1  1  1  1  1  
[DBG]  Identifying agents in a submap for rescheduling (when key_agent is there at the time 6):
[DBG]  Agent 28 found intervals in the sub-map:
[DBG]   [0..20] [30..36] [39..42]
[DBG]  Agent 28 (interval in submap: [0..20]) contains time 6, added to replan.
[DBG]  Agent 46 found intervals in the sub-map:
[DBG]   [5..7]
[DBG]  Agent 46 (interval in submap: [5..7]) contains time 6, added to replan.
[DBG]  Agent 89 found intervals in the sub-map:
[DBG]   [5..12]
[DBG]  Agent 89 (interval in submap: [5..12]) contains time 6, added to replan.
[DBG]  Agent 113 found intervals in the sub-map:
[DBG]   [6..10]
[DBG]  Agent 113 (interval in submap: [6..10]) contains time 6, added to replan.
[DBG]  Agent 28 | Start (global): 661 -> (local): (2, 2) at time 6 | Goal (global): 597 -> (local): (0, 2) at time 20
[DBG]  Agent 46 | Start (global): 726 -> (local): (4, 3) at time 6 | Goal (global): 727 -> (local): (4, 4) at time 7
[DBG]  Agent 89 | Start (global): 596 -> (local): (0, 1) at time 6 | Goal (global): 724 -> (local): (4, 1) at time 12
[DBG]  Agent 113 | Start (global): 659 -> (local): (2, 0) at time 6 | Goal (global): 597 -> (local): (0, 2) at time 10
[DBG]  [REPAIR] SAT destroy operator called.
[DBG]  [REPAIR] SAT operator â€“ launching subproblem FOR OPTIMIZATION.
[DBG]  Creating local paths (sx, sy) in the submap for T_sync = 6
[DBG]    Agent 28 (global paths from T=6 to 20) has local path: (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (1,2) (0,2) 
[DBG]    Agent 46 (global paths from T=6 to 7) has local path: (4,3) (4,4) 
[DBG]    Agent 89 (global paths from T=6 to 12) has local path: (0,1) (0,1) (0,1) (1,1) (2,1) (3,1) (4,1) 
[DBG]    Agent 113 (global paths from T=6 to 10) has local path: (2,0) (2,1) (1,1) (1,2) (0,2) 
[DBG]  Checking input data for SAT solver:
[DBG]    - Number of agents to replan: 4
[DBG]  Agent 28 has the original local path length: 15 => Start (2,2), Goal (0,2)
[DBG]  Agent 46 has the original local path length: 2 => Start (4,3), Goal (4,4)
[DBG]  Agent 89 has the original local path length: 7 => Start (0,1), Goal (4,1)
[DBG]  Agent 113 has the original local path length: 5 => Start (2,0), Goal (0,2)
[DBG]  Start position: (2, 2), (4, 3), (0, 1), (2, 0), 
[DBG]  Goal position: (0, 2), (4, 4), (4, 1), (0, 2), 
[DBG]  SAT instance and solver created.
Currently solving
Instance name: scen
Map name: map
Encoding used: disappear_at_goal
SAT solver used: Kissat
Optimizing function: sum of costs
Number of agents: 4
Mks LB: 5
SoC LB: 15
Delta: 0
Remaining time: 300000 [ms]

Vertex conflict! Agents 0, 1, timestep 3, location 0
Swapping conflict! Agents 0, 1, timestep 3, edge (0,0)
Vertex conflict! Agents 0, 1, timestep 4, location 0
Found plan [agents = 4] [timesteps = 5]
Agent #0 : 9 5 1 0 0 
Agent #1 : 14 15 0 0 0 
Agent #2 : 0 4 8 11 12 
Agent #3 : 7 8 9 5 1 

[STAT] Solver returned: 0
[DBG]  Agent (index) 28 | New local path (submap idx):
[DBG]  9 5 1 
[DBG]  Agent (index) 46 | New local path (submap idx):
[DBG]  14 15 
[DBG]  Agent (index) 89 | New local path (submap idx):
[DBG]  0 4 8 11 12 
[DBG]  Agent (index) 113 | New local path (submap idx):
[DBG]  7 8 9 5 1 
[DBG]  Update the agent path 28 | Original local length: 15 | New local length: 3
[DBG]  agent 28 t=0 => decoded (sx,sy)=(2,2) => global_id=661
[DBG]  agent 28 t=1 => decoded (sx,sy)=(1,2) => global_id=629
[DBG]  agent 28 t=2 => decoded (sx,sy)=(0,2) => global_id=597
[DBG]  Complete path of agent 28:
[DBG]    Original: 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 629 597 565 566 534 502 470 469 501 533 565 597 596 596 628 660 692 724 756 756 724 725 726 727 
[DBG]    New:     661 661 661 661 661 661 661 629 597 565 566 534 502 470 469 501 533 565 597 596 596 628 660 692 724 756 756 724 725 726 727 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 661 661 661 661 661 661 
[DBG]    Local path (in submap): 661 629 597 565 566 534 502 470 469 501 533 565 597 596 596 
[DBG]    Suffix (out of submap): 628 660 692 724 756 756 724 725 726 727 
[DBG]  Original agent path length 28 je: 43
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 0: 661, 661, 661, 661, 661, 661, 661, 629, 597, 565, 566, 534, 502, 470, 469, 501, 533, 565, 597, 596, 596, 628, 660, 692, 724, 756, 756, 724, 725, 726, 727, 
[DBG]  Path for agent 28 updated, resulting length: 31
[DBG]  Update the agent path 46 | Original local length: 2 | New local length: 2
[DBG]  agent 46 t=0 => decoded (sx,sy)=(4,3) => global_id=726
[DBG]  agent 46 t=1 => decoded (sx,sy)=(4,4) => global_id=727
[DBG]  Complete path of agent 46:
[DBG]    Original: 786 787 788 756 757 725 726 727 728 696 664 632 600 601 569 570 538 539 540 541 509 477 445 413 381 349 317 285 284 252 
[DBG]    New:     786 787 788 756 757 725 726 727 728 696 664 632 600 601 569 570 538 539 540 541 509 477 445 413 381 349 317 285 284 252 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 786 787 788 756 757 725 
[DBG]    Local path (in submap): 726 727 
[DBG]    Suffix (out of submap): 728 696 664 632 600 601 569 570 538 539 540 541 509 477 445 413 381 349 317 285 284 252 
[DBG]  Original agent path length 46 je: 30
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 1: 786, 787, 788, 756, 757, 725, 726, 727, 728, 696, 664, 632, 600, 601, 569, 570, 538, 539, 540, 541, 509, 477, 445, 413, 381, 349, 317, 285, 284, 252, 
[DBG]  Path for agent 46 updated, resulting length: 30
[DBG]  Update the agent path 89 | Original local length: 7 | New local length: 5
[DBG]  agent 89 t=0 => decoded (sx,sy)=(0,1) => global_id=596
[DBG]  agent 89 t=1 => decoded (sx,sy)=(1,1) => global_id=628
[DBG]  agent 89 t=2 => decoded (sx,sy)=(2,1) => global_id=660
[DBG]  agent 89 t=3 => decoded (sx,sy)=(3,1) => global_id=692
[DBG]  agent 89 t=4 => decoded (sx,sy)=(4,1) => global_id=724
[DBG]  Complete path of agent 89:
[DBG]    Original: 437 469 501 533 565 597 596 596 596 628 660 692 724 756 788 820 819 851 850 882 883 884 885 917 949 950 982 1014 1015 
[DBG]    New:     437 469 501 533 565 597 596 628 660 692 724 756 788 820 819 851 850 882 883 884 885 917 949 950 982 1014 1015 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 437 469 501 533 565 597 
[DBG]    Local path (in submap): 596 628 660 692 724 756 788 
[DBG]    Suffix (out of submap): 820 819 851 850 882 883 884 885 917 949 950 982 1014 1015 
[DBG]  Original agent path length 89 je: 29
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 2: 437, 469, 501, 533, 565, 597, 596, 628, 660, 692, 724, 756, 788, 820, 819, 851, 850, 882, 883, 884, 885, 917, 949, 950, 982, 1014, 1015, 
[DBG]  Path for agent 89 updated, resulting length: 27
[DBG]  Update the agent path 113 | Original local length: 5 | New local length: 5
[DBG]  agent 113 t=0 => decoded (sx,sy)=(2,0) => global_id=659
[DBG]  agent 113 t=1 => decoded (sx,sy)=(2,1) => global_id=660
[DBG]  agent 113 t=2 => decoded (sx,sy)=(2,2) => global_id=661
[DBG]  agent 113 t=3 => decoded (sx,sy)=(1,2) => global_id=629
[DBG]  agent 113 t=4 => decoded (sx,sy)=(0,2) => global_id=597
[DBG]  Complete path of agent 113:
[DBG]    Original: 529 561 593 625 657 658 659 660 628 629 597 565 566 534 502 503 504 472 440 408 376 377 378 378 379 380 381 349 350 318 319 287 255 254 222 
[DBG]    New:     529 561 593 625 657 658 659 660 661 629 597 565 566 534 502 503 504 472 440 408 376 377 378 378 379 380 381 349 350 318 319 287 255 254 222 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 529 561 593 625 657 658 
[DBG]    Local path (in submap): 659 660 661 629 597 
[DBG]    Suffix (out of submap): 565 566 534 502 503 504 472 440 408 376 377 378 378 379 380 381 349 350 318 319 287 255 254 222 
[DBG]  Original agent path length 113 je: 35
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 3: 529, 561, 593, 625, 657, 658, 659, 660, 661, 629, 597, 565, 566, 534, 502, 503, 504, 472, 440, 408, 376, 377, 378, 378, 379, 380, 381, 349, 350, 318, 319, 287, 255, 254, 222, 
[DBG]  Path for agent 113 updated, resulting length: 35
[DBG]  Paths successfully updated.
[DBG]  (LNS.cpp) New path for agent 28: 
[DBG]  661, 661, 661, 661, 661, 661, 661, 629, 597, 565, 566, 534, 502, 470, 469, 501, 533, 565, 597, 596, 596, 628, 660, 692, 724, 756, 756, 724, 725, 726, 727, 
[DBG]  (LNS.cpp) New path for agent 46: 
[DBG]  786, 787, 788, 756, 757, 725, 726, 727, 728, 696, 664, 632, 600, 601, 569, 570, 538, 539, 540, 541, 509, 477, 445, 413, 381, 349, 317, 285, 284, 252, 
[DBG]  (LNS.cpp) New path for agent 89: 
[DBG]  437, 469, 501, 533, 565, 597, 596, 628, 660, 692, 724, 756, 788, 820, 819, 851, 850, 882, 883, 884, 885, 917, 949, 950, 982, 1014, 1015, 
[DBG]  (LNS.cpp) New path for agent 113: 
[DBG]  529, 561, 593, 625, 657, 658, 659, 660, 661, 629, 597, 565, 566, 534, 502, 503, 504, 472, 440, 408, 376, 377, 378, 378, 379, 380, 381, 349, 350, 318, 319, 287, 255, 254, 222, 
[DBG]  Delta value: 0.105263
[DBG]  Rewarding metric index = 2
[DBG]  component_weights = {0.297824, 0.196674, 0.151063, 0.354439}
[DBG]  opSuccess value: 1
[STAT] neighbor.sum_of_costs before recomputation: 119
[STAT] neighbor.old_sum_of_costs before recomputation: 133
[STAT] sum_of_costs before recomputation: 4478
[DBG]  Validate solution immediately after SAT success.
[WARNING] Problem after SAT: Vertex conflict between agents 10 and 28 at location 469 at timestep 14
[DBG]  [DEBUG] Attempting immediate repair via init_lns because problem occurred after SAT (should be applied only for conflicts...).
[DBG]  [DEBUG] Passing 150 agents to init_lns (skip=true).
[DBG]  [DEBUG] path_table contents for selected agents (neighbor.agents):
[DBG]    Agent 28 => controlling path length=31
[DBG]    Agent 46 => controlling path length=30
[DBG]    Agent 89 => controlling path length=27
[DBG]    Agent 113 => controlling path length=35
[DBG]  hodnota skip_initial_solution=1
[DBG]  We skip initialSolution => call buildCollisionData()
[DBG]  buildCollisionData() called â€“ skip_initial_solution case.
[DBG]  Agents.size()=150, collision_graph.size()=150
[DBG]  agent 10 => updateCollidingPairs => foundCollision
[DBG]  agent 11 => updateCollidingPairs => foundCollision
[DBG]  agent 28 => updateCollidingPairs => foundCollision
[DBG]  agent 30 => updateCollidingPairs => foundCollision
[DBG]  agent 39 => updateCollidingPairs => foundCollision
[DBG]  agent 42 => updateCollidingPairs => foundCollision
[DBG]  agent 45 => updateCollidingPairs => foundCollision
[DBG]  agent 86 => updateCollidingPairs => foundCollision
[DBG]  agent 89 => updateCollidingPairs => foundCollision
[DBG]  Conflicting agent pairs:
[DBG]  agent 10 is in conflict with agent 28
[DBG]  agent 11 is in conflict with agent 28
[DBG]  agent 28 is in conflict with agent 30
[DBG]  agent 28 is in conflict with agent 42
[DBG]  agent 28 is in conflict with agent 45
[DBG]  agent 28 is in conflict with agent 86
[DBG]  agent 39 is in conflict with agent 89
[DBG]  buildCollisionData() => sum_of_costs=4464, num_of_colliding_pairs=7
[DBG]  buildCollisionData done => sum_of_costs=4464, num_of_colliding_pairs=7
[DBG]  sum_of_cost hodnota: 4464
[DBG]  After skip/init build => iteration_stats.back(): sum_of_costs=4464, collisions=7
[DEBUG] Using default neighbor generation strategy for conflicts: 0
[DEBUG] Using default neighbor generation strategy for conflicts: 1
	InitLNS(PP): runtime = 0.00239692, iterations = 3, colliding pairs = 0, initial colliding pairs = 7, solution cost = 4461, initial solution cost = 4464, failed iterations = 0
[DBG]  [DEBUG] init_lns->sum_of_costs after init_lns->run: 4461
[DBG]  [DEBUG] sum_of_costs after assignment from init_lns->run: 4461
[DBG]  Recomputing sum_of_cost by dividing neighbor.sum_of_costs and neighbor.old_sum_of_costs
[STAT] sum_of_costs after recomputation: 4461
[STAT] Iteration 28
[DBG]  Using SAT operator (destroy+repair SAT).
[DBG]  ====================
[DBG]  SAT destroy operator called.
[DBG]  SAT heuristic: 2
[DBG]  key_agent_id: 28
[DBG]  key_agent_id global path length: 43
[DBG]  Submap content (global positions):
[DBG]  658 659 660 661 662 
[DBG]  690 691 692 693 694 
[DBG]  722 723 724 725 726 
[DBG]  754 755 756 757 758 
[DBG]  786 787 788 789 790 
[DBG]  Map content with agents and obstacles:
[DBG]  . A . . X 
[DBG]  X A . X X 
[DBG]  . X A . . 
[DBG]  X . A . X 
[DBG]  . . . X . 
[DBG]  content of the map structure that we pass to the SAT solver:
[DBG]  1  1  1  1  -1  
[DBG]  -1  1  1  -1  -1  
[DBG]  1  -1  1  1  1  
[DBG]  -1  1  1  1  -1  
[DBG]  1  1  1  -1  1  
[DBG]  Identifying agents in a submap for rescheduling (when key_agent is there at the time 36):
[DBG]  Agent 26 found intervals in the sub-map:
[DBG]   [29..35]
[DBG]  Agent 26 is not in sub-map at time 36 (intervals: 
[DBG]  [29..35] )
[DBG]  Agent 28 found intervals in the sub-map:
[DBG]   [0..18] [34..41]
[DBG]  Agent 28 (interval in submap: [34..41]) contains time 36, added to replan.
[DBG]  Agent 42 found intervals in the sub-map:
[DBG]   [34..40]
[DBG]  Agent 42 (interval in submap: [34..40]) contains time 36, added to replan.
[DBG]  Agent 53 found intervals in the sub-map:
[DBG]   [33..37]
[DBG]  Agent 53 (interval in submap: [33..37]) contains time 36, added to replan.
[DBG]  Agent 148 found intervals in the sub-map:
[DBG]   [35..37]
[DBG]  Agent 148 (interval in submap: [35..37]) contains time 36, added to replan.
[DBG]  Agent 28 | Start (global): 724 -> (local): (2, 2) at time 36 | Goal (global): 726 -> (local): (2, 4) at time 41
[DBG]  Agent 42 | Start (global): 691 -> (local): (1, 1) at time 36 | Goal (global): 726 -> (local): (2, 4) at time 40
[DBG]  Agent 53 | Start (global): 756 -> (local): (3, 2) at time 36 | Goal (global): 788 -> (local): (4, 2) at time 37
[DBG]  Agent 148 | Start (global): 659 -> (local): (0, 1) at time 36 | Goal (global): 660 -> (local): (0, 2) at time 37
[DBG]  [REPAIR] SAT destroy operator called.
[DBG]  [REPAIR] SAT operator â€“ launching subproblem FOR OPTIMIZATION.
[DBG]  Creating local paths (sx, sy) in the submap for T_sync = 36
[DBG]    Agent 28 (global paths from T=36 to 41) has local path: (2,2) (3,2) (3,2) (2,2) (2,3) (2,4) 
[DBG]    Agent 42 (global paths from T=36 to 40) has local path: (1,1) (1,2) (2,2) (2,3) (2,4) 
[DBG]    Agent 53 (global paths from T=36 to 37) has local path: (3,2) (4,2) 
[DBG]    Agent 148 (global paths from T=36 to 37) has local path: (0,1) (0,2) 
[DBG]  Checking input data for SAT solver:
[DBG]    - Number of agents to replan: 4
[DBG]  Agent 28 has the original local path length: 6 => Start (2,2), Goal (2,4)
[DBG]  Agent 42 has the original local path length: 5 => Start (1,1), Goal (2,4)
[DBG]  Agent 53 has the original local path length: 2 => Start (3,2), Goal (4,2)
[DBG]  Agent 148 has the original local path length: 2 => Start (0,1), Goal (0,2)
[DBG]  Start position: (2, 2), (1, 1), (3, 2), (0, 1), 
[DBG]  Goal position: (2, 4), (2, 4), (4, 2), (0, 2), 
[DBG]  SAT instance and solver created.
Currently solving
Instance name: scen
Map name: map
Encoding used: disappear_at_goal
SAT solver used: Kissat
Optimizing function: sum of costs
Number of agents: 4
Mks LB: 5
SoC LB: 12
Delta: 0
Remaining time: 300000 [ms]

Vertex conflict! Agents 0, 2, timestep 3, location 0
Swapping conflict! Agents 0, 2, timestep 3, edge (0,0)
Vertex conflict! Agents 0, 2, timestep 4, location 0
Vertex conflict! Agents 0, 3, timestep 3, location 0
Swapping conflict! Agents 0, 3, timestep 3, edge (0,0)
Vertex conflict! Agents 0, 3, timestep 4, location 0
Vertex conflict! Agents 2, 3, timestep 2, location 0
Swapping conflict! Agents 2, 3, timestep 2, edge (0,0)
Vertex conflict! Agents 2, 3, timestep 3, location 0
Swapping conflict! Agents 2, 3, timestep 3, edge (0,0)
Vertex conflict! Agents 2, 3, timestep 4, location 0
Found plan [agents = 4] [timesteps = 5]
Agent #0 : 7 8 9 0 0 
Agent #1 : 4 5 7 8 9 
Agent #2 : 11 15 0 0 0 
Agent #3 : 1 2 0 0 0 

[STAT] Solver returned: 0
[DBG]  Agent (index) 28 | New local path (submap idx):
[DBG]  7 8 9 
[DBG]  Agent (index) 42 | New local path (submap idx):
[DBG]  4 5 7 8 9 
[DBG]  Agent (index) 53 | New local path (submap idx):
[DBG]  11 15 
[DBG]  Agent (index) 148 | New local path (submap idx):
[DBG]  1 2 
[DBG]  Update the agent path 28 | Original local length: 6 | New local length: 3
[DBG]  agent 28 t=0 => decoded (sx,sy)=(2,2) => global_id=724
[DBG]  agent 28 t=1 => decoded (sx,sy)=(2,3) => global_id=725
[DBG]  agent 28 t=2 => decoded (sx,sy)=(2,4) => global_id=726
[DBG]  Complete path of agent 28:
[DBG]    Original: 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 629 597 565 566 534 502 470 469 501 533 565 597 629 629 628 660 692 724 756 756 724 725 726 727 
[DBG]    New:     661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 629 597 565 566 534 502 470 469 501 533 565 597 629 629 628 660 692 724 725 726 727 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 629 597 565 566 534 502 470 469 501 533 565 597 629 629 628 660 692 
[DBG]    Local path (in submap): 724 725 726 727 
[DBG]    Suffix (out of submap): 
[DBG]  Original agent path length 28 je: 43
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 0: 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 629, 597, 565, 566, 534, 502, 470, 469, 501, 533, 565, 597, 629, 629, 628, 660, 692, 724, 725, 726, 727, 
[DBG]  Path for agent 28 updated, resulting length: 40
[DBG]  Update the agent path 42 | Original local length: 5 | New local length: 5
[DBG]  agent 42 t=0 => decoded (sx,sy)=(1,1) => global_id=691
[DBG]  agent 42 t=1 => decoded (sx,sy)=(1,2) => global_id=692
[DBG]  agent 42 t=2 => decoded (sx,sy)=(2,2) => global_id=724
[DBG]  agent 42 t=3 => decoded (sx,sy)=(2,3) => global_id=725
[DBG]  agent 42 t=4 => decoded (sx,sy)=(2,4) => global_id=726
[DBG]  Complete path of agent 42:
[DBG]    Original: 224 256 257 289 321 353 354 355 356 357 358 390 391 423 424 456 457 458 459 460 428 429 430 431 463 464 496 528 528 529 561 593 625 657 658 659 691 692 724 725 726 727 759 
[DBG]    New:     224 256 257 289 321 353 354 355 356 357 358 390 391 423 424 456 457 458 459 460 428 429 430 431 463 464 496 528 528 529 561 593 625 657 658 659 691 692 724 725 726 727 759 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 224 256 257 289 321 353 354 355 356 357 358 390 391 423 424 456 457 458 459 460 428 429 430 431 463 464 496 528 528 529 561 593 625 657 658 659 
[DBG]    Local path (in submap): 691 692 724 725 726 
[DBG]    Suffix (out of submap): 727 759 
[DBG]  Original agent path length 42 je: 43
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 1: 224, 256, 257, 289, 321, 353, 354, 355, 356, 357, 358, 390, 391, 423, 424, 456, 457, 458, 459, 460, 428, 429, 430, 431, 463, 464, 496, 528, 528, 529, 561, 593, 625, 657, 658, 659, 691, 692, 724, 725, 726, 727, 759, 
[DBG]  Path for agent 42 updated, resulting length: 43
[DBG]  Update the agent path 53 | Original local length: 2 | New local length: 2
[DBG]  agent 53 t=0 => decoded (sx,sy)=(3,2) => global_id=756
[DBG]  agent 53 t=1 => decoded (sx,sy)=(4,2) => global_id=788
[DBG]  Complete path of agent 53:
[DBG]    Original: 84 116 148 180 212 244 276 277 278 310 311 343 375 407 439 438 437 469 501 533 534 534 533 501 501 501 533 565 597 629 628 628 628 660 692 724 756 788 820 821 
[DBG]    New:     84 116 148 180 212 244 276 277 278 310 311 343 375 407 439 438 437 469 501 533 534 534 533 501 501 501 533 565 597 629 628 628 628 660 692 724 756 788 820 821 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 84 116 148 180 212 244 276 277 278 310 311 343 375 407 439 438 437 469 501 533 534 534 533 501 501 501 533 565 597 629 628 628 628 660 692 724 
[DBG]    Local path (in submap): 756 788 
[DBG]    Suffix (out of submap): 820 821 
[DBG]  Original agent path length 53 je: 40
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 2: 84, 116, 148, 180, 212, 244, 276, 277, 278, 310, 311, 343, 375, 407, 439, 438, 437, 469, 501, 533, 534, 534, 533, 501, 501, 501, 533, 565, 597, 629, 628, 628, 628, 660, 692, 724, 756, 788, 820, 821, 
[DBG]  Path for agent 53 updated, resulting length: 40
[DBG]  Update the agent path 148 | Original local length: 2 | New local length: 2
[DBG]  agent 148 t=0 => decoded (sx,sy)=(0,1) => global_id=659
[DBG]  agent 148 t=1 => decoded (sx,sy)=(0,2) => global_id=660
[DBG]  Complete path of agent 148:
[DBG]    Original: 776 744 744 744 712 712 744 745 746 714 714 713 713 713 714 682 683 684 685 685 685 686 686 686 686 686 686 687 687 687 686 654 655 656 657 658 659 660 
[DBG]    New:     776 744 744 744 712 712 744 745 746 714 714 713 713 713 714 682 683 684 685 685 685 686 686 686 686 686 686 687 687 687 686 654 655 656 657 658 659 660 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 776 744 744 744 712 712 744 745 746 714 714 713 713 713 714 682 683 684 685 685 685 686 686 686 686 686 686 687 687 687 686 654 655 656 657 658 
[DBG]    Local path (in submap): 659 660 
[DBG]    Suffix (out of submap): 
[DBG]  Original agent path length 148 je: 38
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 3: 776, 744, 744, 744, 712, 712, 744, 745, 746, 714, 714, 713, 713, 713, 714, 682, 683, 684, 685, 685, 685, 686, 686, 686, 686, 686, 686, 687, 687, 687, 686, 654, 655, 656, 657, 658, 659, 660, 
[DBG]  Path for agent 148 updated, resulting length: 38
[DBG]  Paths successfully updated.
[DBG]  (LNS.cpp) New path for agent 28: 
[DBG]  661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 629, 597, 565, 566, 534, 502, 470, 469, 501, 533, 565, 597, 629, 629, 628, 660, 692, 724, 725, 726, 727, 
[DBG]  (LNS.cpp) New path for agent 42: 
[DBG]  224, 256, 257, 289, 321, 353, 354, 355, 356, 357, 358, 390, 391, 423, 424, 456, 457, 458, 459, 460, 428, 429, 430, 431, 463, 464, 496, 528, 528, 529, 561, 593, 625, 657, 658, 659, 691, 692, 724, 725, 726, 727, 759, 
[DBG]  (LNS.cpp) New path for agent 53: 
[DBG]  84, 116, 148, 180, 212, 244, 276, 277, 278, 310, 311, 343, 375, 407, 439, 438, 437, 469, 501, 533, 534, 534, 533, 501, 501, 501, 533, 565, 597, 629, 628, 628, 628, 660, 692, 724, 756, 788, 820, 821, 
[DBG]  (LNS.cpp) New path for agent 148: 
[DBG]  776, 744, 744, 744, 712, 712, 744, 745, 746, 714, 714, 713, 713, 713, 714, 682, 683, 684, 685, 685, 685, 686, 686, 686, 686, 686, 686, 687, 687, 687, 686, 654, 655, 656, 657, 658, 659, 660, 
[DBG]  Delta value: 0.01875
[DBG]  Rewarding metric index = 0
[DBG]  component_weights = {0.312639, 0.192525, 0.147876, 0.346961}
[DBG]  opSuccess value: 1
[STAT] neighbor.sum_of_costs before recomputation: 157
[STAT] neighbor.old_sum_of_costs before recomputation: 160
[STAT] sum_of_costs before recomputation: 4461
[DBG]  Validate solution immediately after SAT success.
[WARNING] Problem after SAT: Target conflict: agent 42 (len 42) traverses target of agent 28 (len 39) at location 727 at timestep 41
[DBG]  [DEBUG] Attempting immediate repair via init_lns because problem occurred after SAT (should be applied only for conflicts...).
[DBG]  [DEBUG] Passing 150 agents to init_lns (skip=true).
[DBG]  [DEBUG] path_table contents for selected agents (neighbor.agents):
[DBG]    Agent 28 => controlling path length=40
[DBG]    Agent 42 => controlling path length=43
[DBG]    Agent 53 => controlling path length=40
[DBG]    Agent 148 => controlling path length=38
[DBG]  hodnota skip_initial_solution=1
[DBG]  We skip initialSolution => call buildCollisionData()
[DBG]  buildCollisionData() called â€“ skip_initial_solution case.
[DBG]  Agents.size()=150, collision_graph.size()=150
[DBG]  agent 28 => updateCollidingPairs => foundCollision
[DBG]  agent 42 => updateCollidingPairs => foundCollision
[DBG]  Conflicting agent pairs:
[DBG]  agent 28 is in conflict with agent 42
[DBG]  buildCollisionData() => sum_of_costs=4458, num_of_colliding_pairs=1
[DBG]  buildCollisionData done => sum_of_costs=4458, num_of_colliding_pairs=1
[DBG]  sum_of_cost hodnota: 4458
[DBG]  After skip/init build => iteration_stats.back(): sum_of_costs=4458, collisions=1
[DEBUG] Using default neighbor generation strategy for conflicts: 1
	InitLNS(PP): runtime = 0.00122333, iterations = 2, colliding pairs = 0, initial colliding pairs = 1, solution cost = 4461, initial solution cost = 4458, failed iterations = 0
[DBG]  [DEBUG] init_lns->sum_of_costs after init_lns->run: 4461
[DBG]  [DEBUG] sum_of_costs after assignment from init_lns->run: 4461
[DBG]  Recomputing sum_of_cost by dividing neighbor.sum_of_costs and neighbor.old_sum_of_costs
[STAT] sum_of_costs after recomputation: 4461
[STAT] Iteration 29
[DBG]  Using SAT operator (destroy+repair SAT).
[DBG]  ====================
[DBG]  SAT destroy operator called.
[DBG]  SAT heuristic: 2
[DBG]  key_agent_id: 28
[DBG]  key_agent_id global path length: 43
[DBG]  Submap content (global positions):
[DBG]  661 662 663 664 665 
[DBG]  693 694 695 696 697 
[DBG]  725 726 727 728 729 
[DBG]  757 758 759 760 761 
[DBG]  789 790 791 792 793 
[DBG]  Map content with agents and obstacles:
[DBG]  . X X . X 
[DBG]  X X X . . 
[DBG]  . . A . . 
[DBG]  . X A X . 
[DBG]  X . X . . 
[DBG]  content of the map structure that we pass to the SAT solver:
[DBG]  1  -1  -1  1  -1  
[DBG]  -1  -1  -1  1  1  
[DBG]  1  1  1  1  1  
[DBG]  1  -1  1  -1  1  
[DBG]  -1  1  -1  1  1  
[DBG]  Identifying agents in a submap for rescheduling (when key_agent is there at the time 42):
[DBG]  Agent 1 found intervals in the sub-map:
[DBG]   [22..29]
[DBG]  Agent 1 is not in sub-map at time 42 (intervals: 
[DBG]  [22..29] )
[DBG]  Agent 28 found intervals in the sub-map:
[DBG]   [0..18] [37..42]
[DBG]  Agent 28 (interval in submap: [37..42]) contains time 42, added to replan.
[DBG]  Agent 42 found intervals in the sub-map:
[DBG]   [39..42]
[DBG]  Agent 42 (interval in submap: [39..42]) contains time 42, added to replan.
[DBG]  Agent 28 | Start (global): 727 -> (local): (2, 2) at time 42 | Goal (global): 727 -> (local): (2, 2) at time 42
[DBG]  Agent 42 | Start (global): 759 -> (local): (3, 2) at time 42 | Goal (global): 759 -> (local): (3, 2) at time 42
[DBG]  [REPAIR] SAT destroy operator called.
[DBG]  [REPAIR] SAT operator â€“ launching subproblem FOR OPTIMIZATION.
[DBG]  Creating local paths (sx, sy) in the submap for T_sync = 42
[DBG]    Agent 28 (global paths from T=42 to 42) has local path: (2,2) 
[DBG]    Agent 42 (global paths from T=42 to 42) has local path: (3,2) 
[DBG]  Checking input data for SAT solver:
[DBG]    - Number of agents to replan: 2
[DBG]  Agent 28 has the original local path length: 1 => Start (2,2), Goal (2,2)
[DBG]  Agent 42 has the original local path length: 1 => Start (3,2), Goal (3,2)
[DBG]  Start position: (2, 2), (3, 2), 
[DBG]  Goal position: (2, 2), (3, 2), 
[DBG]  SAT instance and solver created.
Currently solving
Instance name: scen
Map name: map
Encoding used: disappear_at_goal
SAT solver used: Kissat
Optimizing function: sum of costs
Number of agents: 2
Mks LB: 1
SoC LB: 2
Delta: 0
Remaining time: 300000 [ms]

Found plan [agents = 2] [timesteps = 1]
Agent #0 : 6 
Agent #1 : 10 

[STAT] Solver returned: 0
[DBG]  Agent (index) 28 | New local path (submap idx):
[DBG]  6 
[DBG]  Agent (index) 42 | New local path (submap idx):
[DBG]  10 
[DBG]  Update the agent path 28 | Original local length: 1 | New local length: 1
[DBG]  agent 28 t=0 => decoded (sx,sy)=(2,2) => global_id=727
[DBG]  Complete path of agent 28:
[DBG]    Original: 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 629 597 565 566 534 502 470 469 501 533 565 597 596 596 628 660 692 724 725 757 757 725 726 727 
[DBG]    New:     661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 629 597 565 566 534 502 470 469 501 533 565 597 596 596 628 660 692 724 725 757 757 725 726 727 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 629 597 565 566 534 502 470 469 501 533 565 597 596 596 628 660 692 724 725 757 757 725 726 
[DBG]    Local path (in submap): 727 
[DBG]    Suffix (out of submap): 
[DBG]  Original agent path length 28 je: 43
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 0: 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 629, 597, 565, 566, 534, 502, 470, 469, 501, 533, 565, 597, 596, 596, 628, 660, 692, 724, 725, 757, 757, 725, 726, 727, 
[DBG]  Path for agent 28 updated, resulting length: 43
[DBG]  Update the agent path 42 | Original local length: 1 | New local length: 1
[DBG]  agent 42 t=0 => decoded (sx,sy)=(3,2) => global_id=759
[DBG]  Complete path of agent 42:
[DBG]    Original: 224 256 257 289 321 353 354 355 387 388 420 421 422 423 455 456 457 458 459 460 428 429 430 431 432 464 496 528 528 529 561 593 625 657 658 659 660 692 724 725 726 727 759 
[DBG]    New:     224 256 257 289 321 353 354 355 387 388 420 421 422 423 455 456 457 458 459 460 428 429 430 431 432 464 496 528 528 529 561 593 625 657 658 659 660 692 724 725 726 727 759 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 224 256 257 289 321 353 354 355 387 388 420 421 422 423 455 456 457 458 459 460 428 429 430 431 432 464 496 528 528 529 561 593 625 657 658 659 660 692 724 725 726 727 
[DBG]    Local path (in submap): 759 
[DBG]    Suffix (out of submap): 
[DBG]  Original agent path length 42 je: 43
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 1: 224, 256, 257, 289, 321, 353, 354, 355, 387, 388, 420, 421, 422, 423, 455, 456, 457, 458, 459, 460, 428, 429, 430, 431, 432, 464, 496, 528, 528, 529, 561, 593, 625, 657, 658, 659, 660, 692, 724, 725, 726, 727, 759, 
[DBG]  Path for agent 42 updated, resulting length: 43
[DBG]  Paths successfully updated.
[DBG]  (LNS.cpp) New path for agent 28: 
[DBG]  661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 629, 597, 565, 566, 534, 502, 470, 469, 501, 533, 565, 597, 596, 596, 628, 660, 692, 724, 725, 757, 757, 725, 726, 727, 
[DBG]  (LNS.cpp) New path for agent 42: 
[DBG]  224, 256, 257, 289, 321, 353, 354, 355, 387, 388, 420, 421, 422, 423, 455, 456, 457, 458, 459, 460, 428, 429, 430, 431, 432, 464, 496, 528, 528, 529, 561, 593, 625, 657, 658, 659, 660, 692, 724, 725, 726, 727, 759, 
[DBG]  Delta value: 0
[DBG]  Rewarding metric index = 3
[DBG]  component_weights = {0.307032, 0.189072, 0.145224, 0.358672}
[DBG]  opSuccess value: 1
[STAT] neighbor.sum_of_costs before recomputation: 84
[STAT] neighbor.old_sum_of_costs before recomputation: 84
[STAT] sum_of_costs before recomputation: 4461
[DBG]  Validate solution immediately after SAT success.
[DBG]  No problems after SAT replan.
[DBG]  Recomputing sum_of_cost by dividing neighbor.sum_of_costs and neighbor.old_sum_of_costs
[STAT] sum_of_costs after recomputation: 4461
[STAT] Iteration 30
[DBG]  Using SAT operator (destroy+repair SAT).
[DBG]  ====================
[DBG]  SAT destroy operator called.
[DBG]  SAT heuristic: 2
[DBG]  key_agent_id: 28
[DBG]  key_agent_id global path length: 43
[DBG]  Submap content (global positions):
[DBG]  595 596 597 598 599 
[DBG]  627 628 629 630 631 
[DBG]  659 660 661 662 663 
[DBG]  691 692 693 694 695 
[DBG]  723 724 725 726 727 
[DBG]  Map content with agents and obstacles:
[DBG]  X A . X . 
[DBG]  . . . X . 
[DBG]  . . A X X 
[DBG]  . A X X X 
[DBG]  X . . A . 
[DBG]  content of the map structure that we pass to the SAT solver:
[DBG]  -1  1  1  -1  1  
[DBG]  1  1  1  -1  1  
[DBG]  1  1  1  -1  -1  
[DBG]  1  1  -1  -1  -1  
[DBG]  -1  1  1  1  1  
[DBG]  Identifying agents in a submap for rescheduling (when key_agent is there at the time 9):
[DBG]  Agent 28 found intervals in the sub-map:
[DBG]   [0..20] [30..37] [40..42]
[DBG]  Agent 28 (interval in submap: [0..20]) contains time 9, added to replan.
[DBG]  Agent 63 found intervals in the sub-map:
[DBG]  
[DBG]  Agent 63 is not in sub-map at time 9 (intervals: 
[DBG]  )
[DBG]  Agent 89 found intervals in the sub-map:
[DBG]   [5..10]
[DBG]  Agent 89 (interval in submap: [5..10]) contains time 9, added to replan.
[DBG]  Agent 91 found intervals in the sub-map:
[DBG]  
[DBG]  Agent 91 is not in sub-map at time 9 (intervals: 
[DBG]  )
[DBG]  Agent 113 found intervals in the sub-map:
[DBG]   [6..10]
[DBG]  Agent 113 (interval in submap: [6..10]) contains time 9, added to replan.
[DBG]  Agent 135 found intervals in the sub-map:
[DBG]   [4..4] [8..20]
[DBG]  Agent 135 (interval in submap: [8..20]) contains time 9, added to replan.
[DBG]  Agent 28 | Start (global): 661 -> (local): (2, 2) at time 9 | Goal (global): 597 -> (local): (0, 2) at time 20
[DBG]  Agent 89 | Start (global): 692 -> (local): (3, 1) at time 9 | Goal (global): 724 -> (local): (4, 1) at time 10
[DBG]  Agent 113 | Start (global): 596 -> (local): (0, 1) at time 9 | Goal (global): 597 -> (local): (0, 2) at time 10
[DBG]  Agent 135 | Start (global): 726 -> (local): (4, 3) at time 9 | Goal (global): 659 -> (local): (2, 0) at time 20
[DBG]  [REPAIR] SAT destroy operator called.
[DBG]  [REPAIR] SAT operator â€“ launching subproblem FOR OPTIMIZATION.
[DBG]  Creating local paths (sx, sy) in the submap for T_sync = 9
[DBG]    Agent 28 (global paths from T=9 to 20) has local path: (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (1,2) (0,2) 
[DBG]    Agent 89 (global paths from T=9 to 10) has local path: (3,1) (4,1) 
[DBG]    Agent 113 (global paths from T=9 to 10) has local path: (0,1) (0,2) 
[DBG]    Agent 135 (global paths from T=9 to 20) has local path: (4,3) (4,2) (4,1) (3,1) (3,0) (3,0) (3,0) (3,0) (3,0) (3,0) (3,0) (2,0) 
[DBG]  Checking input data for SAT solver:
[DBG]    - Number of agents to replan: 4
[DBG]  Agent 28 has the original local path length: 12 => Start (2,2), Goal (0,2)
[DBG]  Agent 89 has the original local path length: 2 => Start (3,1), Goal (4,1)
[DBG]  Agent 113 has the original local path length: 2 => Start (0,1), Goal (0,2)
[DBG]  Agent 135 has the original local path length: 12 => Start (4,3), Goal (2,0)
[DBG]  Start position: (2, 2), (3, 1), (0, 1), (4, 3), 
[DBG]  Goal position: (0, 2), (4, 1), (0, 2), (2, 0), 
[DBG]  SAT instance and solver created.
Currently solving
Instance name: scen
Map name: map
Encoding used: disappear_at_goal
SAT solver used: Kissat
Optimizing function: sum of costs
Number of agents: 4
Mks LB: 6
SoC LB: 13
Delta: 0
Remaining time: 300000 [ms]

Vertex conflict! Agents 0, 1, timestep 3, location 0
Swapping conflict! Agents 0, 1, timestep 3, edge (0,0)
Vertex conflict! Agents 0, 1, timestep 4, location 0
Swapping conflict! Agents 0, 1, timestep 4, edge (0,0)
Vertex conflict! Agents 0, 1, timestep 5, location 0
Vertex conflict! Agents 0, 2, timestep 3, location 0
Swapping conflict! Agents 0, 2, timestep 3, edge (0,0)
Vertex conflict! Agents 0, 2, timestep 4, location 0
Swapping conflict! Agents 0, 2, timestep 4, edge (0,0)
Vertex conflict! Agents 0, 2, timestep 5, location 0
Vertex conflict! Agents 1, 2, timestep 2, location 0
Swapping conflict! Agents 1, 2, timestep 2, edge (0,0)
Vertex conflict! Agents 1, 2, timestep 3, location 0
Swapping conflict! Agents 1, 2, timestep 3, edge (0,0)
Vertex conflict! Agents 1, 2, timestep 4, location 0
Swapping conflict! Agents 1, 2, timestep 4, edge (0,0)
Vertex conflict! Agents 1, 2, timestep 5, location 0
Found plan [agents = 4] [timesteps = 6]
Agent #0 : 9 5 1 0 0 0 
Agent #1 : 11 12 0 0 0 0 
Agent #2 : 0 1 0 0 0 0 
Agent #3 : 14 13 12 11 10 7 

[STAT] Solver returned: 0
[DBG]  Agent (index) 28 | New local path (submap idx):
[DBG]  9 5 1 
[DBG]  Agent (index) 89 | New local path (submap idx):
[DBG]  11 12 
[DBG]  Agent (index) 113 | New local path (submap idx):
[DBG]  0 1 
[DBG]  Agent (index) 135 | New local path (submap idx):
[DBG]  14 13 12 11 10 7 
[DBG]  Update the agent path 28 | Original local length: 12 | New local length: 3
[DBG]  agent 28 t=0 => decoded (sx,sy)=(2,2) => global_id=661
[DBG]  agent 28 t=1 => decoded (sx,sy)=(1,2) => global_id=629
[DBG]  agent 28 t=2 => decoded (sx,sy)=(0,2) => global_id=597
[DBG]  Complete path of agent 28:
[DBG]    Original: 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 629 597 565 566 534 502 470 469 501 533 565 597 596 596 628 660 692 724 725 757 757 725 726 727 
[DBG]    New:     661 661 661 661 661 661 661 661 661 661 629 597 565 566 534 502 470 469 501 533 565 597 596 596 628 660 692 724 725 757 757 725 726 727 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 661 661 661 661 661 661 661 661 661 
[DBG]    Local path (in submap): 661 629 597 565 566 534 502 470 469 501 533 565 
[DBG]    Suffix (out of submap): 597 596 596 628 660 692 724 725 757 757 725 726 727 
[DBG]  Original agent path length 28 je: 43
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 0: 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 629, 597, 565, 566, 534, 502, 470, 469, 501, 533, 565, 597, 596, 596, 628, 660, 692, 724, 725, 757, 757, 725, 726, 727, 
[DBG]  Path for agent 28 updated, resulting length: 34
[DBG]  Update the agent path 89 | Original local length: 2 | New local length: 2
[DBG]  agent 89 t=0 => decoded (sx,sy)=(3,1) => global_id=692
[DBG]  agent 89 t=1 => decoded (sx,sy)=(4,1) => global_id=724
[DBG]  Complete path of agent 89:
[DBG]    Original: 437 469 501 533 565 597 596 628 660 692 724 756 788 788 788 788 788 788 820 821 822 854 886 918 950 982 983 1015 
[DBG]    New:     437 469 501 533 565 597 596 628 660 692 724 756 788 788 788 788 788 788 820 821 822 854 886 918 950 982 983 1015 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 437 469 501 533 565 597 596 628 660 
[DBG]    Local path (in submap): 692 724 
[DBG]    Suffix (out of submap): 756 788 788 788 788 788 788 820 821 822 854 886 918 950 982 983 1015 
[DBG]  Original agent path length 89 je: 28
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 1: 437, 469, 501, 533, 565, 597, 596, 628, 660, 692, 724, 756, 788, 788, 788, 788, 788, 788, 820, 821, 822, 854, 886, 918, 950, 982, 983, 1015, 
[DBG]  Path for agent 89 updated, resulting length: 28
[DBG]  Update the agent path 113 | Original local length: 2 | New local length: 2
[DBG]  agent 113 t=0 => decoded (sx,sy)=(0,1) => global_id=596
[DBG]  agent 113 t=1 => decoded (sx,sy)=(0,2) => global_id=597
[DBG]  Complete path of agent 113:
[DBG]    Original: 529 561 593 625 657 658 659 627 628 596 597 565 533 534 502 503 504 472 440 408 376 377 378 378 379 380 348 349 317 318 319 287 255 254 222 
[DBG]    New:     529 561 593 625 657 658 659 627 628 596 597 565 533 534 502 503 504 472 440 408 376 377 378 378 379 380 348 349 317 318 319 287 255 254 222 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 529 561 593 625 657 658 659 627 628 
[DBG]    Local path (in submap): 596 597 
[DBG]    Suffix (out of submap): 565 533 534 502 503 504 472 440 408 376 377 378 378 379 380 348 349 317 318 319 287 255 254 222 
[DBG]  Original agent path length 113 je: 35
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 2: 529, 561, 593, 625, 657, 658, 659, 627, 628, 596, 597, 565, 533, 534, 502, 503, 504, 472, 440, 408, 376, 377, 378, 378, 379, 380, 348, 349, 317, 318, 319, 287, 255, 254, 222, 
[DBG]  Path for agent 113 updated, resulting length: 35
[DBG]  Update the agent path 135 | Original local length: 12 | New local length: 6
[DBG]  agent 135 t=0 => decoded (sx,sy)=(4,3) => global_id=726
[DBG]  agent 135 t=1 => decoded (sx,sy)=(4,2) => global_id=725
[DBG]  agent 135 t=2 => decoded (sx,sy)=(4,1) => global_id=724
[DBG]  agent 135 t=3 => decoded (sx,sy)=(3,1) => global_id=692
[DBG]  agent 135 t=4 => decoded (sx,sy)=(3,0) => global_id=691
[DBG]  agent 135 t=5 => decoded (sx,sy)=(2,0) => global_id=659
[DBG]  Complete path of agent 135:
[DBG]    Original: 696 696 696 728 727 759 759 759 727 726 725 724 692 691 691 691 691 691 691 691 659 658 657 625 593 592 591 590 589 588 556 524 523 522 521 520 519 487 486 485 484 483 482 450 449 448 416 384 
[DBG]    New:     696 696 696 728 727 759 759 759 727 726 725 724 692 691 659 658 657 625 593 592 591 590 589 588 556 524 523 522 521 520 519 487 486 485 484 483 482 450 449 448 416 384 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 696 696 696 728 727 759 759 759 727 
[DBG]    Local path (in submap): 726 725 724 692 691 659 658 657 625 593 592 591 
[DBG]    Suffix (out of submap): 590 589 588 556 524 523 522 521 520 519 487 486 485 484 483 482 450 449 448 416 384 
[DBG]  Original agent path length 135 je: 48
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 3: 696, 696, 696, 728, 727, 759, 759, 759, 727, 726, 725, 724, 692, 691, 659, 658, 657, 625, 593, 592, 591, 590, 589, 588, 556, 524, 523, 522, 521, 520, 519, 487, 486, 485, 484, 483, 482, 450, 449, 448, 416, 384, 
[DBG]  Path for agent 135 updated, resulting length: 42
[DBG]  Paths successfully updated.
[DBG]  (LNS.cpp) New path for agent 28: 
[DBG]  661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 629, 597, 565, 566, 534, 502, 470, 469, 501, 533, 565, 597, 596, 596, 628, 660, 692, 724, 725, 757, 757, 725, 726, 727, 
[DBG]  (LNS.cpp) New path for agent 89: 
[DBG]  437, 469, 501, 533, 565, 597, 596, 628, 660, 692, 724, 756, 788, 788, 788, 788, 788, 788, 820, 821, 822, 854, 886, 918, 950, 982, 983, 1015, 
[DBG]  (LNS.cpp) New path for agent 113: 
[DBG]  529, 561, 593, 625, 657, 658, 659, 627, 628, 596, 597, 565, 533, 534, 502, 503, 504, 472, 440, 408, 376, 377, 378, 378, 379, 380, 348, 349, 317, 318, 319, 287, 255, 254, 222, 
[DBG]  (LNS.cpp) New path for agent 135: 
[DBG]  696, 696, 696, 728, 727, 759, 759, 759, 727, 726, 725, 724, 692, 691, 659, 658, 657, 625, 593, 592, 591, 590, 589, 588, 556, 524, 523, 522, 521, 520, 519, 487, 486, 485, 484, 483, 482, 450, 449, 448, 416, 384, 
[DBG]  Delta value: 0.1
[DBG]  Rewarding metric index = 0
[DBG]  component_weights = {0.339073, 0.18033, 0.138509, 0.342088}
[DBG]  opSuccess value: 1
[STAT] neighbor.sum_of_costs before recomputation: 135
[STAT] neighbor.old_sum_of_costs before recomputation: 150
[STAT] sum_of_costs before recomputation: 4461
[DBG]  Validate solution immediately after SAT success.
[WARNING] Problem after SAT: Edge conflict between agents 10 and 28 at edge (470,502) at timestep 16
[DBG]  [DEBUG] Attempting immediate repair via init_lns because problem occurred after SAT (should be applied only for conflicts...).
[DBG]  [DEBUG] Passing 150 agents to init_lns (skip=true).
[DBG]  [DEBUG] path_table contents for selected agents (neighbor.agents):
[DBG]    Agent 28 => controlling path length=34
[DBG]    Agent 89 => controlling path length=28
[DBG]    Agent 113 => controlling path length=35
[DBG]    Agent 135 => controlling path length=42
[DBG]  hodnota skip_initial_solution=1
[DBG]  We skip initialSolution => call buildCollisionData()
[DBG]  buildCollisionData() called â€“ skip_initial_solution case.
[DBG]  Agents.size()=150, collision_graph.size()=150
[DBG]  agent 10 => updateCollidingPairs => foundCollision
[DBG]  agent 26 => updateCollidingPairs => foundCollision
[DBG]  agent 28 => updateCollidingPairs => foundCollision
[DBG]  agent 30 => updateCollidingPairs => foundCollision
[DBG]  agent 33 => updateCollidingPairs => foundCollision
[DBG]  agent 42 => updateCollidingPairs => foundCollision
[DBG]  agent 45 => updateCollidingPairs => foundCollision
[DBG]  agent 53 => updateCollidingPairs => foundCollision
[DBG]  agent 54 => updateCollidingPairs => foundCollision
[DBG]  agent 59 => updateCollidingPairs => foundCollision
[DBG]  agent 74 => updateCollidingPairs => foundCollision
[DBG]  agent 79 => updateCollidingPairs => foundCollision
[DBG]  agent 114 => updateCollidingPairs => foundCollision
[DBG]  agent 135 => updateCollidingPairs => foundCollision
[DBG]  agent 145 => updateCollidingPairs => foundCollision
[DBG]  Conflicting agent pairs:
[DBG]  agent 10 is in conflict with agent 28
[DBG]  agent 26 is in conflict with agent 135
[DBG]  agent 28 is in conflict with agent 30
[DBG]  agent 28 is in conflict with agent 33
[DBG]  agent 28 is in conflict with agent 42
[DBG]  agent 28 is in conflict with agent 45
[DBG]  agent 28 is in conflict with agent 53
[DBG]  agent 28 is in conflict with agent 54
[DBG]  agent 28 is in conflict with agent 74
[DBG]  agent 28 is in conflict with agent 114
[DBG]  agent 59 is in conflict with agent 135
[DBG]  agent 74 is in conflict with agent 135
[DBG]  agent 79 is in conflict with agent 135
[DBG]  agent 114 is in conflict with agent 135
[DBG]  agent 135 is in conflict with agent 145
[DBG]  buildCollisionData() => sum_of_costs=4446, num_of_colliding_pairs=15
[DBG]  buildCollisionData done => sum_of_costs=4446, num_of_colliding_pairs=15
[DBG]  sum_of_cost hodnota: 4446
[DBG]  After skip/init build => iteration_stats.back(): sum_of_costs=4446, collisions=15
[DEBUG] Using default neighbor generation strategy for conflicts: 0
[DEBUG] Using default neighbor generation strategy for conflicts: 2
[DEBUG] Using default neighbor generation strategy for conflicts: 1
[DEBUG] Using default neighbor generation strategy for conflicts: 0
	InitLNS(PP): runtime = 0.00598237, iterations = 5, colliding pairs = 0, initial colliding pairs = 15, solution cost = 4455, initial solution cost = 4446, failed iterations = 0
[DBG]  [DEBUG] init_lns->sum_of_costs after init_lns->run: 4455
[DBG]  [DEBUG] sum_of_costs after assignment from init_lns->run: 4455
[DBG]  Recomputing sum_of_cost by dividing neighbor.sum_of_costs and neighbor.old_sum_of_costs
[STAT] sum_of_costs after recomputation: 4455
[STAT] Iteration 31
[DBG]  Using SAT operator (destroy+repair SAT).
[DBG]  ====================
[DBG]  SAT destroy operator called.
[DBG]  SAT heuristic: 2
[DBG]  key_agent_id: 28
[DBG]  key_agent_id global path length: 43
[DBG]  Submap content (global positions):
[DBG]  595 596 597 598 599 
[DBG]  627 628 629 630 631 
[DBG]  659 660 661 662 663 
[DBG]  691 692 693 694 695 
[DBG]  723 724 725 726 727 
[DBG]  Map content with agents and obstacles:
[DBG]  X . . X . 
[DBG]  . . . X . 
[DBG]  A A A X X 
[DBG]  . . X X X 
[DBG]  X A . . . 
[DBG]  content of the map structure that we pass to the SAT solver:
[DBG]  -1  1  1  -1  1  
[DBG]  1  1  1  -1  1  
[DBG]  1  1  1  -1  -1  
[DBG]  1  1  -1  -1  -1  
[DBG]  -1  1  1  1  1  
[DBG]  Identifying agents in a submap for rescheduling (when key_agent is there at the time 11):
[DBG]  Agent 28 found intervals in the sub-map:
[DBG]   [0..36] [39..42]
[DBG]  Agent 28 (interval in submap: [0..36]) contains time 11, added to replan.
[DBG]  Agent 74 found intervals in the sub-map:
[DBG]   [11..15]
[DBG]  Agent 74 (interval in submap: [11..15]) contains time 11, added to replan.
[DBG]  Agent 86 found intervals in the sub-map:
[DBG]   [10..14]
[DBG]  Agent 86 (interval in submap: [10..14]) contains time 11, added to replan.
[DBG]  Agent 91 found intervals in the sub-map:
[DBG]  
[DBG]  Agent 91 is not in sub-map at time 11 (intervals: 
[DBG]  )
[DBG]  Agent 135 found intervals in the sub-map:
[DBG]   [4..4] [8..14]
[DBG]  Agent 135 (interval in submap: [8..14]) contains time 11, added to replan.
[DBG]  Agent 28 | Start (global): 661 -> (local): (2, 2) at time 11 | Goal (global): 724 -> (local): (4, 1) at time 36
[DBG]  Agent 74 | Start (global): 659 -> (local): (2, 0) at time 11 | Goal (global): 597 -> (local): (0, 2) at time 15
[DBG]  Agent 86 | Start (global): 660 -> (local): (2, 1) at time 11 | Goal (global): 597 -> (local): (0, 2) at time 14
[DBG]  Agent 135 | Start (global): 724 -> (local): (4, 1) at time 11 | Goal (global): 659 -> (local): (2, 0) at time 14
[DBG]  [REPAIR] SAT destroy operator called.
[DBG]  [REPAIR] SAT operator â€“ launching subproblem FOR OPTIMIZATION.
[DBG]  Creating local paths (sx, sy) in the submap for T_sync = 11
[DBG]    Agent 28 (global paths from T=11 to 36) has local path: (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,1) (3,1) (3,0) (3,0) (3,0) (3,1) (4,1) 
[DBG]    Agent 74 (global paths from T=11 to 15) has local path: (2,0) (1,0) (1,1) (1,2) (0,2) 
[DBG]    Agent 86 (global paths from T=11 to 14) has local path: (2,1) (1,1) (1,2) (0,2) 
[DBG]    Agent 135 (global paths from T=11 to 14) has local path: (4,1) (3,1) (3,0) (2,0) 
[DBG]  Checking input data for SAT solver:
[DBG]    - Number of agents to replan: 4
[DBG]  Agent 28 has the original local path length: 26 => Start (2,2), Goal (4,1)
[DBG]  Agent 74 has the original local path length: 5 => Start (2,0), Goal (0,2)
[DBG]  Agent 86 has the original local path length: 4 => Start (2,1), Goal (0,2)
[DBG]  Agent 135 has the original local path length: 4 => Start (4,1), Goal (2,0)
[DBG]  Start position: (2, 2), (2, 0), (2, 1), (4, 1), 
[DBG]  Goal position: (4, 1), (0, 2), (0, 2), (2, 0), 
[DBG]  SAT instance and solver created.
Currently solving
Instance name: scen
Map name: map
Encoding used: disappear_at_goal
SAT solver used: Kissat
Optimizing function: sum of costs
Number of agents: 4
Mks LB: 5
SoC LB: 17
Delta: 0
Remaining time: 300000 [ms]

Vertex conflict! Agents 0, 2, timestep 4, location 0
Vertex conflict! Agents 0, 3, timestep 4, location 0
Vertex conflict! Agents 2, 3, timestep 4, location 0
Found plan [agents = 4] [timesteps = 5]
Agent #0 : 9 8 11 12 0 
Agent #1 : 7 3 4 5 1 
Agent #2 : 8 4 5 1 0 
Agent #3 : 12 11 10 7 0 

[STAT] Solver returned: 0
[DBG]  Agent (index) 28 | New local path (submap idx):
[DBG]  9 8 11 12 
[DBG]  Agent (index) 74 | New local path (submap idx):
[DBG]  7 3 4 5 1 
[DBG]  Agent (index) 86 | New local path (submap idx):
[DBG]  8 4 5 1 
[DBG]  Agent (index) 135 | New local path (submap idx):
[DBG]  12 11 10 7 
[DBG]  Update the agent path 28 | Original local length: 26 | New local length: 4
[DBG]  agent 28 t=0 => decoded (sx,sy)=(2,2) => global_id=661
[DBG]  agent 28 t=1 => decoded (sx,sy)=(2,1) => global_id=660
[DBG]  agent 28 t=2 => decoded (sx,sy)=(3,1) => global_id=692
[DBG]  agent 28 t=3 => decoded (sx,sy)=(4,1) => global_id=724
[DBG]  Complete path of agent 28:
[DBG]    Original: 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 660 692 691 691 691 692 724 756 756 724 725 726 727 
[DBG]    New:     661 661 661 661 661 661 661 661 661 661 661 661 660 692 724 756 756 724 725 726 727 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 661 661 661 661 661 661 661 661 661 661 661 
[DBG]    Local path (in submap): 661 660 692 724 756 756 724 725 726 727 
[DBG]    Suffix (out of submap): 
[DBG]  Original agent path length 28 je: 43
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 0: 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 660, 692, 724, 756, 756, 724, 725, 726, 727, 
[DBG]  Path for agent 28 updated, resulting length: 21
[DBG]  Update the agent path 74 | Original local length: 5 | New local length: 5
[DBG]  agent 74 t=0 => decoded (sx,sy)=(2,0) => global_id=659
[DBG]  agent 74 t=1 => decoded (sx,sy)=(1,0) => global_id=627
[DBG]  agent 74 t=2 => decoded (sx,sy)=(1,1) => global_id=628
[DBG]  agent 74 t=3 => decoded (sx,sy)=(1,2) => global_id=629
[DBG]  agent 74 t=4 => decoded (sx,sy)=(0,2) => global_id=597
[DBG]  Complete path of agent 74:
[DBG]    Original: 752 752 752 752 752 752 720 721 689 657 658 659 627 628 629 597 565 565 565 565 565 533 501 502 503 502 502 501 502 503 504 
[DBG]    New:     752 752 752 752 752 752 720 721 689 657 658 659 627 628 629 597 565 565 565 565 565 533 501 502 503 502 502 501 502 503 504 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 752 752 752 752 752 752 720 721 689 657 658 
[DBG]    Local path (in submap): 659 627 628 629 597 
[DBG]    Suffix (out of submap): 565 565 565 565 565 533 501 502 503 502 502 501 502 503 504 
[DBG]  Original agent path length 74 je: 31
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 1: 752, 752, 752, 752, 752, 752, 720, 721, 689, 657, 658, 659, 627, 628, 629, 597, 565, 565, 565, 565, 565, 533, 501, 502, 503, 502, 502, 501, 502, 503, 504, 
[DBG]  Path for agent 74 updated, resulting length: 31
[DBG]  Update the agent path 86 | Original local length: 4 | New local length: 4
[DBG]  agent 86 t=0 => decoded (sx,sy)=(2,1) => global_id=660
[DBG]  agent 86 t=1 => decoded (sx,sy)=(1,1) => global_id=628
[DBG]  agent 86 t=2 => decoded (sx,sy)=(1,2) => global_id=629
[DBG]  agent 86 t=3 => decoded (sx,sy)=(0,2) => global_id=597
[DBG]  Complete path of agent 86:
[DBG]    Original: 781 782 750 718 719 720 688 689 657 658 659 660 628 629 597 565 533 534 534 502 503 504 505 506 538 539 540 541 
[DBG]    New:     781 782 750 718 719 720 688 689 657 658 659 660 628 629 597 565 533 534 534 502 503 504 505 506 538 539 540 541 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 781 782 750 718 719 720 688 689 657 658 659 
[DBG]    Local path (in submap): 660 628 629 597 
[DBG]    Suffix (out of submap): 565 533 534 534 502 503 504 505 506 538 539 540 541 
[DBG]  Original agent path length 86 je: 28
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 2: 781, 782, 750, 718, 719, 720, 688, 689, 657, 658, 659, 660, 628, 629, 597, 565, 533, 534, 534, 502, 503, 504, 505, 506, 538, 539, 540, 541, 
[DBG]  Path for agent 86 updated, resulting length: 28
[DBG]  Update the agent path 135 | Original local length: 4 | New local length: 4
[DBG]  agent 135 t=0 => decoded (sx,sy)=(4,1) => global_id=724
[DBG]  agent 135 t=1 => decoded (sx,sy)=(3,1) => global_id=692
[DBG]  agent 135 t=2 => decoded (sx,sy)=(3,0) => global_id=691
[DBG]  agent 135 t=3 => decoded (sx,sy)=(2,0) => global_id=659
[DBG]  Complete path of agent 135:
[DBG]    Original: 696 696 696 728 727 759 759 759 727 726 725 724 692 691 659 658 657 625 593 592 591 590 589 588 556 555 555 523 522 521 520 519 487 486 485 484 483 482 450 449 448 416 384 
[DBG]    New:     696 696 696 728 727 759 759 759 727 726 725 724 692 691 659 658 657 625 593 592 591 590 589 588 556 555 555 523 522 521 520 519 487 486 485 484 483 482 450 449 448 416 384 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 696 696 696 728 727 759 759 759 727 726 725 
[DBG]    Local path (in submap): 724 692 691 659 
[DBG]    Suffix (out of submap): 658 657 625 593 592 591 590 589 588 556 555 555 523 522 521 520 519 487 486 485 484 483 482 450 449 448 416 384 
[DBG]  Original agent path length 135 je: 43
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 3: 696, 696, 696, 728, 727, 759, 759, 759, 727, 726, 725, 724, 692, 691, 659, 658, 657, 625, 593, 592, 591, 590, 589, 588, 556, 555, 555, 523, 522, 521, 520, 519, 487, 486, 485, 484, 483, 482, 450, 449, 448, 416, 384, 
[DBG]  Path for agent 135 updated, resulting length: 43
[DBG]  Paths successfully updated.
[DBG]  (LNS.cpp) New path for agent 28: 
[DBG]  661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 660, 692, 724, 756, 756, 724, 725, 726, 727, 
[DBG]  (LNS.cpp) New path for agent 74: 
[DBG]  752, 752, 752, 752, 752, 752, 720, 721, 689, 657, 658, 659, 627, 628, 629, 597, 565, 565, 565, 565, 565, 533, 501, 502, 503, 502, 502, 501, 502, 503, 504, 
[DBG]  (LNS.cpp) New path for agent 86: 
[DBG]  781, 782, 750, 718, 719, 720, 688, 689, 657, 658, 659, 660, 628, 629, 597, 565, 533, 534, 534, 502, 503, 504, 505, 506, 538, 539, 540, 541, 
[DBG]  (LNS.cpp) New path for agent 135: 
[DBG]  696, 696, 696, 728, 727, 759, 759, 759, 727, 726, 725, 724, 692, 691, 659, 658, 657, 625, 593, 592, 591, 590, 589, 588, 556, 555, 555, 523, 522, 521, 520, 519, 487, 486, 485, 484, 483, 482, 450, 449, 448, 416, 384, 
[DBG]  Delta value: 0.156028
[DBG]  Rewarding metric index = 0
[DBG]  component_weights = {0.384345, 0.167977, 0.129022, 0.318656}
[DBG]  opSuccess value: 1
[STAT] neighbor.sum_of_costs before recomputation: 119
[STAT] neighbor.old_sum_of_costs before recomputation: 141
[STAT] sum_of_costs before recomputation: 4455
[DBG]  Validate solution immediately after SAT success.
[WARNING] Problem after SAT: Edge conflict between agents 28 and 4 at edge (726,727) at timestep 20
[DBG]  [DEBUG] Attempting immediate repair via init_lns because problem occurred after SAT (should be applied only for conflicts...).
[DBG]  [DEBUG] Passing 150 agents to init_lns (skip=true).
[DBG]  [DEBUG] path_table contents for selected agents (neighbor.agents):
[DBG]    Agent 28 => controlling path length=21
[DBG]    Agent 74 => controlling path length=31
[DBG]    Agent 86 => controlling path length=28
[DBG]    Agent 135 => controlling path length=43
[DBG]  hodnota skip_initial_solution=1
[DBG]  We skip initialSolution => call buildCollisionData()
[DBG]  buildCollisionData() called â€“ skip_initial_solution case.
[DBG]  Agents.size()=150, collision_graph.size()=150
[DBG]  agent 4 => updateCollidingPairs => foundCollision
[DBG]  agent 28 => updateCollidingPairs => foundCollision
[DBG]  agent 30 => updateCollidingPairs => foundCollision
[DBG]  agent 42 => updateCollidingPairs => foundCollision
[DBG]  Conflicting agent pairs:
[DBG]  agent 4 is in conflict with agent 28
[DBG]  agent 28 is in conflict with agent 30
[DBG]  agent 28 is in conflict with agent 42
[DBG]  buildCollisionData() => sum_of_costs=4433, num_of_colliding_pairs=3
[DBG]  buildCollisionData done => sum_of_costs=4433, num_of_colliding_pairs=3
[DBG]  sum_of_cost hodnota: 4433
[DBG]  After skip/init build => iteration_stats.back(): sum_of_costs=4433, collisions=3
[DEBUG] Using default neighbor generation strategy for conflicts: 0
[DEBUG] Using default neighbor generation strategy for conflicts: 1
[DEBUG] Using default neighbor generation strategy for conflicts: 1
[DEBUG] Using default neighbor generation strategy for conflicts: 1
[DEBUG] Using default neighbor generation strategy for conflicts: 0
	InitLNS(PP): runtime = 0.0130989, iterations = 6, colliding pairs = 0, initial colliding pairs = 3, solution cost = 4461, initial solution cost = 4433, failed iterations = 0
[DBG]  [DEBUG] init_lns->sum_of_costs after init_lns->run: 4461
[DBG]  [DEBUG] sum_of_costs after assignment from init_lns->run: 4461
[DBG]  Recomputing sum_of_cost by dividing neighbor.sum_of_costs and neighbor.old_sum_of_costs
[STAT] sum_of_costs after recomputation: 4461
[STAT] Iteration 32
[DBG]  Using SAT operator (destroy+repair SAT).
[DBG]  ====================
[DBG]  SAT destroy operator called.
[DBG]  SAT heuristic: 2
[DBG]  key_agent_id: 28
[DBG]  key_agent_id global path length: 43
[DBG]  Submap content (global positions):
[DBG]  595 596 597 598 599 
[DBG]  627 628 629 630 631 
[DBG]  659 660 661 662 663 
[DBG]  691 692 693 694 695 
[DBG]  723 724 725 726 727 
[DBG]  Map content with agents and obstacles:
[DBG]  X . A X . 
[DBG]  . A A X . 
[DBG]  A . A X X 
[DBG]  . A X X X 
[DBG]  X . . . . 
[DBG]  content of the map structure that we pass to the SAT solver:
[DBG]  -1  1  1  -1  1  
[DBG]  1  1  1  -1  1  
[DBG]  1  1  1  -1  -1  
[DBG]  1  1  -1  -1  -1  
[DBG]  -1  1  1  1  1  
[DBG]  Identifying agents in a submap for rescheduling (when key_agent is there at the time 30):
[DBG]  Agent 11 found intervals in the sub-map:
[DBG]  
[DBG]  Agent 11 is not in sub-map at time 30 (intervals: 
[DBG]  )
[DBG]  Agent 26 found intervals in the sub-map:
[DBG]   [28..33]
[DBG]  Agent 26 (interval in submap: [28..33]) contains time 30, added to replan.
[DBG]  Agent 28 found intervals in the sub-map:
[DBG]   [0..42]
[DBG]  Agent 28 (interval in submap: [0..42]) contains time 30, added to replan.
[DBG]  Agent 30 found intervals in the sub-map:
[DBG]   [25..30]
[DBG]  Agent 30 (interval in submap: [25..30]) contains time 30, added to replan.
[DBG]  Agent 45 found intervals in the sub-map:
[DBG]   [29..35]
[DBG]  Agent 45 (interval in submap: [29..35]) contains time 30, added to replan.
[DBG]  Agent 53 found intervals in the sub-map:
[DBG]   [26..31]
[DBG]  Agent 53 (interval in submap: [26..31]) contains time 30, added to replan.
[DBG]  Agent 148 found intervals in the sub-map:
[DBG]   [30..34]
[DBG]  Agent 148 (interval in submap: [30..34]) contains time 30, added to replan.
[DBG]  Agent 26 | Start (global): 628 -> (local): (1, 1) at time 30 | Goal (global): 724 -> (local): (4, 1) at time 33
[DBG]  Agent 28 | Start (global): 661 -> (local): (2, 2) at time 30 | Goal (global): 727 -> (local): (4, 4) at time 42
[DBG]  Agent 30 | Start (global): 597 -> (local): (0, 2) at time 30 | Goal (global): 597 -> (local): (0, 2) at time 30
[DBG]  Agent 45 | Start (global): 629 -> (local): (1, 2) at time 30 | Goal (global): 724 -> (local): (4, 1) at time 35
[DBG]  Agent 53 | Start (global): 692 -> (local): (3, 1) at time 30 | Goal (global): 724 -> (local): (4, 1) at time 31
[DBG]  Agent 148 | Start (global): 659 -> (local): (2, 0) at time 30 | Goal (global): 660 -> (local): (2, 1) at time 34
[DBG]  [REPAIR] SAT destroy operator called.
[DBG]  [REPAIR] SAT operator â€“ launching subproblem FOR OPTIMIZATION.
[DBG]  Creating local paths (sx, sy) in the submap for T_sync = 30
[DBG]    Agent 26 (global paths from T=30 to 33) has local path: (1,1) (2,1) (3,1) (4,1) 
[DBG]    Agent 28 (global paths from T=30 to 42) has local path: (2,2) (1,2) (1,2) (1,1) (1,0) (1,0) (2,0) (3,0) (3,1) (4,1) (4,2) (4,3) (4,4) 
[DBG]    Agent 30 (global paths from T=30 to 30) has local path: (0,2) 
[DBG]    Agent 45 (global paths from T=30 to 35) has local path: (1,2) (1,1) (1,1) (2,1) (3,1) (4,1) 
[DBG]    Agent 53 (global paths from T=30 to 31) has local path: (3,1) (4,1) 
[DBG]    Agent 148 (global paths from T=30 to 34) has local path: (2,0) (2,0) (2,0) (2,0) (2,1) 
[DBG]  Checking input data for SAT solver:
[DBG]    - Number of agents to replan: 6
[DBG]  Agent 26 has the original local path length: 4 => Start (1,1), Goal (4,1)
[DBG]  Agent 28 has the original local path length: 13 => Start (2,2), Goal (4,4)
[DBG]  Agent 30 has the original local path length: 1 => Start (0,2), Goal (0,2)
[DBG]  Agent 45 has the original local path length: 6 => Start (1,2), Goal (4,1)
[DBG]  Agent 53 has the original local path length: 2 => Start (3,1), Goal (4,1)
[DBG]  Agent 148 has the original local path length: 5 => Start (2,0), Goal (2,1)
[DBG]  Start position: (1, 1), (2, 2), (0, 2), (1, 2), (3, 1), (2, 0), 
[DBG]  Goal position: (4, 1), (4, 4), (0, 2), (4, 1), (4, 1), (2, 1), 
[DBG]  SAT instance and solver created.
Currently solving
Instance name: scen
Map name: map
Encoding used: disappear_at_goal
SAT solver used: Kissat
Optimizing function: sum of costs
Number of agents: 6
Mks LB: 7
SoC LB: 21
Delta: 0
Remaining time: 300000 [ms]

[STAT] Solver returned: -1
[DBG]  SAT solver failed.
[STAT] SAT solver failed to find a valid solution.
[DBG]  ====================
[DBG]  SAT destroy operator called.
[DBG]  SAT heuristic: 2
[DBG]  key_agent_id: 28
[DBG]  key_agent_id global path length: 43
[DBG]  Submap content (global positions):
[DBG]  595 596 597 598 599 
[DBG]  627 628 629 630 631 
[DBG]  659 660 661 662 663 
[DBG]  691 692 693 694 695 
[DBG]  723 724 725 726 727 
[DBG]  Map content with agents and obstacles:
[DBG]  X A . X . 
[DBG]  A . . X . 
[DBG]  A A A X X 
[DBG]  . . X X X 
[DBG]  X . . . . 
[DBG]  content of the map structure that we pass to the SAT solver:
[DBG]  -1  1  1  -1  1  
[DBG]  1  1  1  -1  1  
[DBG]  1  1  1  -1  -1  
[DBG]  1  1  -1  -1  -1  
[DBG]  -1  1  1  1  1  
[DBG]  Identifying agents in a submap for rescheduling (when key_agent is there at the time 14):
[DBG]  Agent 4 found intervals in the sub-map:
[DBG]  
[DBG]  Agent 4 is not in sub-map at time 14 (intervals: 
[DBG]  )
[DBG]  Agent 28 found intervals in the sub-map:
[DBG]   [0..42]
[DBG]  Agent 28 (interval in submap: [0..42]) contains time 14, added to replan.
[DBG]  Agent 74 found intervals in the sub-map:
[DBG]   [13..18]
[DBG]  Agent 74 (interval in submap: [13..18]) contains time 14, added to replan.
[DBG]  Agent 86 found intervals in the sub-map:
[DBG]   [10..16]
[DBG]  Agent 86 (interval in submap: [10..16]) contains time 14, added to replan.
[DBG]  Agent 131 found intervals in the sub-map:
[DBG]   [11..16]
[DBG]  Agent 131 (interval in submap: [11..16]) contains time 14, added to replan.
[DBG]  Agent 135 found intervals in the sub-map:
[DBG]   [4..4] [8..14]
[DBG]  Agent 135 (interval in submap: [8..14]) contains time 14, added to replan.
[DBG]  Agent 28 | Start (global): 661 -> (local): (2, 2) at time 14 | Goal (global): 727 -> (local): (4, 4) at time 42
[DBG]  Agent 74 | Start (global): 627 -> (local): (1, 0) at time 14 | Goal (global): 597 -> (local): (0, 2) at time 18
[DBG]  Agent 86 | Start (global): 596 -> (local): (0, 1) at time 14 | Goal (global): 597 -> (local): (0, 2) at time 16
[DBG]  Agent 131 | Start (global): 660 -> (local): (2, 1) at time 14 | Goal (global): 724 -> (local): (4, 1) at time 16
[DBG]  Agent 135 | Start (global): 659 -> (local): (2, 0) at time 14 | Goal (global): 659 -> (local): (2, 0) at time 14
[DBG]  [REPAIR] SAT destroy operator called.
[DBG]  [REPAIR] SAT operator â€“ launching subproblem FOR OPTIMIZATION.
[DBG]  Creating local paths (sx, sy) in the submap for T_sync = 14
[DBG]    Agent 28 (global paths from T=14 to 42) has local path: (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (1,2) (1,2) (1,1) (1,0) (1,0) (2,0) (3,0) (3,1) (4,1) (4,2) (4,3) (4,4) 
[DBG]    Agent 74 (global paths from T=14 to 18) has local path: (1,0) (1,1) (1,1) (1,2) (0,2) 
[DBG]    Agent 86 (global paths from T=14 to 16) has local path: (0,1) (0,1) (0,2) 
[DBG]    Agent 131 (global paths from T=14 to 16) has local path: (2,1) (3,1) (4,1) 
[DBG]    Agent 135 (global paths from T=14 to 14) has local path: (2,0) 
[DBG]  Checking input data for SAT solver:
[DBG]    - Number of agents to replan: 5
[DBG]  Agent 28 has the original local path length: 29 => Start (2,2), Goal (4,4)
[DBG]  Agent 74 has the original local path length: 5 => Start (1,0), Goal (0,2)
[DBG]  Agent 86 has the original local path length: 3 => Start (0,1), Goal (0,2)
[DBG]  Agent 131 has the original local path length: 3 => Start (2,1), Goal (4,1)
[DBG]  Agent 135 has the original local path length: 1 => Start (2,0), Goal (2,0)
[DBG]  Start position: (2, 2), (1, 0), (0, 1), (2, 1), (2, 0), 
[DBG]  Goal position: (4, 4), (0, 2), (0, 2), (4, 1), (2, 0), 
[DBG]  SAT instance and solver created.
Currently solving
Instance name: scen
Map name: map
Encoding used: disappear_at_goal
SAT solver used: Kissat
Optimizing function: sum of costs
Number of agents: 5
Mks LB: 7
SoC LB: 17
Delta: 0
Remaining time: 300000 [ms]

Vertex conflict! Agents 1, 2, timestep 4, location 0
Swapping conflict! Agents 1, 2, timestep 4, edge (0,0)
Vertex conflict! Agents 1, 2, timestep 5, location 0
Swapping conflict! Agents 1, 2, timestep 5, edge (0,0)
Vertex conflict! Agents 1, 2, timestep 6, location 0
Vertex conflict! Agents 1, 3, timestep 4, location 0
Swapping conflict! Agents 1, 3, timestep 4, edge (0,0)
Vertex conflict! Agents 1, 3, timestep 5, location 0
Swapping conflict! Agents 1, 3, timestep 5, edge (0,0)
Vertex conflict! Agents 1, 3, timestep 6, location 0
Vertex conflict! Agents 1, 4, timestep 4, location 0
Swapping conflict! Agents 1, 4, timestep 4, edge (0,0)
Vertex conflict! Agents 1, 4, timestep 5, location 0
Swapping conflict! Agents 1, 4, timestep 5, edge (0,0)
Vertex conflict! Agents 1, 4, timestep 6, location 0
Vertex conflict! Agents 2, 3, timestep 3, location 0
Swapping conflict! Agents 2, 3, timestep 3, edge (0,0)
Vertex conflict! Agents 2, 3, timestep 4, location 0
Swapping conflict! Agents 2, 3, timestep 4, edge (0,0)
Vertex conflict! Agents 2, 3, timestep 5, location 0
Swapping conflict! Agents 2, 3, timestep 5, edge (0,0)
Vertex conflict! Agents 2, 3, timestep 6, location 0
Vertex conflict! Agents 2, 4, timestep 2, location 0
Swapping conflict! Agents 2, 4, timestep 2, edge (0,0)
Vertex conflict! Agents 2, 4, timestep 3, location 0
Swapping conflict! Agents 2, 4, timestep 3, edge (0,0)
Vertex conflict! Agents 2, 4, timestep 4, location 0
Swapping conflict! Agents 2, 4, timestep 4, edge (0,0)
Vertex conflict! Agents 2, 4, timestep 5, location 0
Swapping conflict! Agents 2, 4, timestep 5, edge (0,0)
Vertex conflict! Agents 2, 4, timestep 6, location 0
Vertex conflict! Agents 3, 4, timestep 3, location 0
Swapping conflict! Agents 3, 4, timestep 3, edge (0,0)
Vertex conflict! Agents 3, 4, timestep 4, location 0
Swapping conflict! Agents 3, 4, timestep 4, edge (0,0)
Vertex conflict! Agents 3, 4, timestep 5, location 0
Swapping conflict! Agents 3, 4, timestep 5, edge (0,0)
Vertex conflict! Agents 3, 4, timestep 6, location 0
Found plan [agents = 5] [timesteps = 7]
Agent #0 : 9 8 11 12 13 14 15 
Agent #1 : 3 4 5 1 0 0 0 
Agent #2 : 0 1 0 0 0 0 0 
Agent #3 : 8 11 12 0 0 0 0 
Agent #4 : 7 0 0 0 0 0 0 

[STAT] Solver returned: 0
[DBG]  Agent (index) 28 | New local path (submap idx):
[DBG]  9 8 11 12 13 14 15 
[DBG]  Agent (index) 74 | New local path (submap idx):
[DBG]  3 4 5 1 
[DBG]  Agent (index) 86 | New local path (submap idx):
[DBG]  0 1 
[DBG]  Agent (index) 131 | New local path (submap idx):
[DBG]  8 11 12 
[DBG]  Agent (index) 135 | New local path (submap idx):
[DBG]  7 
[DBG]  Update the agent path 28 | Original local length: 29 | New local length: 7
[DBG]  agent 28 t=0 => decoded (sx,sy)=(2,2) => global_id=661
[DBG]  agent 28 t=1 => decoded (sx,sy)=(2,1) => global_id=660
[DBG]  agent 28 t=2 => decoded (sx,sy)=(3,1) => global_id=692
[DBG]  agent 28 t=3 => decoded (sx,sy)=(4,1) => global_id=724
[DBG]  agent 28 t=4 => decoded (sx,sy)=(4,2) => global_id=725
[DBG]  agent 28 t=5 => decoded (sx,sy)=(4,3) => global_id=726
[DBG]  agent 28 t=6 => decoded (sx,sy)=(4,4) => global_id=727
[DBG]  Complete path of agent 28:
[DBG]    Original: 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 629 629 628 627 627 659 691 692 724 725 726 727 
[DBG]    New:     661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 660 692 724 725 726 727 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 661 661 661 661 661 661 661 661 661 661 661 661 661 661 
[DBG]    Local path (in submap): 661 660 692 724 725 726 727 
[DBG]    Suffix (out of submap): 
[DBG]  Original agent path length 28 je: 43
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 0: 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 660, 692, 724, 725, 726, 727, 
[DBG]  Path for agent 28 updated, resulting length: 21
[DBG]  Update the agent path 74 | Original local length: 5 | New local length: 4
[DBG]  agent 74 t=0 => decoded (sx,sy)=(1,0) => global_id=627
[DBG]  agent 74 t=1 => decoded (sx,sy)=(1,1) => global_id=628
[DBG]  agent 74 t=2 => decoded (sx,sy)=(1,2) => global_id=629
[DBG]  agent 74 t=3 => decoded (sx,sy)=(0,2) => global_id=597
[DBG]  Complete path of agent 74:
[DBG]    Original: 752 752 752 752 752 752 751 719 687 688 656 657 658 659 627 628 628 629 597 565 565 533 501 502 503 504 472 472 472 472 504 
[DBG]    New:     752 752 752 752 752 752 751 719 687 688 656 657 658 659 627 628 629 597 565 565 533 501 502 503 504 472 472 472 472 504 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 752 752 752 752 752 752 751 719 687 688 656 657 658 659 
[DBG]    Local path (in submap): 627 628 629 597 565 
[DBG]    Suffix (out of submap): 565 533 501 502 503 504 472 472 472 472 504 
[DBG]  Original agent path length 74 je: 31
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 1: 752, 752, 752, 752, 752, 752, 751, 719, 687, 688, 656, 657, 658, 659, 627, 628, 629, 597, 565, 565, 533, 501, 502, 503, 504, 472, 472, 472, 472, 504, 
[DBG]  Path for agent 74 updated, resulting length: 30
[DBG]  Update the agent path 86 | Original local length: 3 | New local length: 2
[DBG]  agent 86 t=0 => decoded (sx,sy)=(0,1) => global_id=596
[DBG]  agent 86 t=1 => decoded (sx,sy)=(0,2) => global_id=597
[DBG]  Complete path of agent 86:
[DBG]    Original: 781 782 750 751 719 687 688 689 657 658 659 627 628 596 596 596 597 565 566 534 502 503 504 505 505 505 505 506 538 539 540 541 
[DBG]    New:     781 782 750 751 719 687 688 689 657 658 659 627 628 596 596 597 565 566 534 502 503 504 505 505 505 505 506 538 539 540 541 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 781 782 750 751 719 687 688 689 657 658 659 627 628 596 
[DBG]    Local path (in submap): 596 597 565 
[DBG]    Suffix (out of submap): 566 534 502 503 504 505 505 505 505 506 538 539 540 541 
[DBG]  Original agent path length 86 je: 32
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 2: 781, 782, 750, 751, 719, 687, 688, 689, 657, 658, 659, 627, 628, 596, 596, 597, 565, 566, 534, 502, 503, 504, 505, 505, 505, 505, 506, 538, 539, 540, 541, 
[DBG]  Path for agent 86 updated, resulting length: 31
[DBG]  Update the agent path 131 | Original local length: 3 | New local length: 3
[DBG]  agent 131 t=0 => decoded (sx,sy)=(2,1) => global_id=660
[DBG]  agent 131 t=1 => decoded (sx,sy)=(3,1) => global_id=692
[DBG]  agent 131 t=2 => decoded (sx,sy)=(4,1) => global_id=724
[DBG]  Complete path of agent 131:
[DBG]    Original: 341 373 405 437 469 470 502 502 501 533 565 597 629 628 660 692 724 756 788 820 819 851 850 882 882 850 849 848 847 879 878 877 876 875 874 873 841 809 777 745 713 712 
[DBG]    New:     341 373 405 437 469 470 502 502 501 533 565 597 629 628 660 692 724 756 788 820 819 851 850 882 882 850 849 848 847 879 878 877 876 875 874 873 841 809 777 745 713 712 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 341 373 405 437 469 470 502 502 501 533 565 597 629 628 
[DBG]    Local path (in submap): 660 692 724 
[DBG]    Suffix (out of submap): 756 788 820 819 851 850 882 882 850 849 848 847 879 878 877 876 875 874 873 841 809 777 745 713 712 
[DBG]  Original agent path length 131 je: 42
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 3: 341, 373, 405, 437, 469, 470, 502, 502, 501, 533, 565, 597, 629, 628, 660, 692, 724, 756, 788, 820, 819, 851, 850, 882, 882, 850, 849, 848, 847, 879, 878, 877, 876, 875, 874, 873, 841, 809, 777, 745, 713, 712, 
[DBG]  Path for agent 131 updated, resulting length: 42
[DBG]  Update the agent path 135 | Original local length: 1 | New local length: 1
[DBG]  agent 135 t=0 => decoded (sx,sy)=(2,0) => global_id=659
[DBG]  Complete path of agent 135:
[DBG]    Original: 696 696 696 728 727 759 759 759 727 726 725 724 692 691 659 658 657 625 593 592 591 590 589 588 556 555 555 523 522 521 520 519 487 486 485 484 483 482 450 449 448 416 384 
[DBG]    New:     696 696 696 728 727 759 759 759 727 726 725 724 692 691 659 658 657 625 593 592 591 590 589 588 556 555 555 523 522 521 520 519 487 486 485 484 483 482 450 449 448 416 384 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 696 696 696 728 727 759 759 759 727 726 725 724 692 691 
[DBG]    Local path (in submap): 659 
[DBG]    Suffix (out of submap): 658 657 625 593 592 591 590 589 588 556 555 555 523 522 521 520 519 487 486 485 484 483 482 450 449 448 416 384 
[DBG]  Original agent path length 135 je: 43
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 4: 696, 696, 696, 728, 727, 759, 759, 759, 727, 726, 725, 724, 692, 691, 659, 658, 657, 625, 593, 592, 591, 590, 589, 588, 556, 555, 555, 523, 522, 521, 520, 519, 487, 486, 485, 484, 483, 482, 450, 449, 448, 416, 384, 
[DBG]  Path for agent 135 updated, resulting length: 43
[DBG]  Paths successfully updated.
[DBG]  (LNS.cpp) New path for agent 28: 
[DBG]  661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 660, 692, 724, 725, 726, 727, 
[DBG]  (LNS.cpp) New path for agent 74: 
[DBG]  752, 752, 752, 752, 752, 752, 751, 719, 687, 688, 656, 657, 658, 659, 627, 628, 629, 597, 565, 565, 533, 501, 502, 503, 504, 472, 472, 472, 472, 504, 
[DBG]  (LNS.cpp) New path for agent 86: 
[DBG]  781, 782, 750, 751, 719, 687, 688, 689, 657, 658, 659, 627, 628, 596, 596, 597, 565, 566, 534, 502, 503, 504, 505, 505, 505, 505, 506, 538, 539, 540, 541, 
[DBG]  (LNS.cpp) New path for agent 131: 
[DBG]  341, 373, 405, 437, 469, 470, 502, 502, 501, 533, 565, 597, 629, 628, 660, 692, 724, 756, 788, 820, 819, 851, 850, 882, 882, 850, 849, 848, 847, 879, 878, 877, 876, 875, 874, 873, 841, 809, 777, 745, 713, 712, 
[DBG]  (LNS.cpp) New path for agent 135: 
[DBG]  696, 696, 696, 728, 727, 759, 759, 759, 727, 726, 725, 724, 692, 691, 659, 658, 657, 625, 593, 592, 591, 590, 589, 588, 556, 555, 555, 523, 522, 521, 520, 519, 487, 486, 485, 484, 483, 482, 450, 449, 448, 416, 384, 
[DBG]  Delta value: 0.129032
[DBG]  Rewarding metric index = 0
[DBG]  component_weights = {0.425926, 0.156632, 0.120307, 0.297134}
[DBG]  opSuccess value: 1
[STAT] neighbor.sum_of_costs before recomputation: 162
[STAT] neighbor.old_sum_of_costs before recomputation: 186
[STAT] sum_of_costs before recomputation: 4461
[DBG]  Validate solution immediately after SAT success.
[WARNING] Problem after SAT: Target conflict: agent 42 (len 42) traverses target of agent 28 (len 20) at location 727 at timestep 41
[DBG]  [DEBUG] Attempting immediate repair via init_lns because problem occurred after SAT (should be applied only for conflicts...).
[DBG]  [DEBUG] Passing 150 agents to init_lns (skip=true).
[DBG]  [DEBUG] path_table contents for selected agents (neighbor.agents):
[DBG]    Agent 28 => controlling path length=21
[DBG]    Agent 74 => controlling path length=30
[DBG]    Agent 86 => controlling path length=31
[DBG]    Agent 131 => controlling path length=42
[DBG]    Agent 135 => controlling path length=43
[DBG]  hodnota skip_initial_solution=1
[DBG]  We skip initialSolution => call buildCollisionData()
[DBG]  buildCollisionData() called â€“ skip_initial_solution case.
[DBG]  Agents.size()=150, collision_graph.size()=150
[DBG]  agent 28 => updateCollidingPairs => foundCollision
[DBG]  agent 42 => updateCollidingPairs => foundCollision
[DBG]  agent 45 => updateCollidingPairs => foundCollision
[DBG]  agent 53 => updateCollidingPairs => foundCollision
[DBG]  agent 56 => updateCollidingPairs => foundCollision
[DBG]  agent 58 => updateCollidingPairs => foundCollision
[DBG]  agent 74 => updateCollidingPairs => foundCollision
[DBG]  agent 86 => updateCollidingPairs => foundCollision
[DBG]  agent 94 => updateCollidingPairs => foundCollision
[DBG]  Conflicting agent pairs:
[DBG]  agent 28 is in conflict with agent 42
[DBG]  agent 45 is in conflict with agent 74
[DBG]  agent 53 is in conflict with agent 74
[DBG]  agent 56 is in conflict with agent 74
[DBG]  agent 58 is in conflict with agent 86
[DBG]  agent 86 is in conflict with agent 94
[DBG]  buildCollisionData() => sum_of_costs=4437, num_of_colliding_pairs=6
[DBG]  buildCollisionData done => sum_of_costs=4437, num_of_colliding_pairs=6
[DBG]  sum_of_cost hodnota: 4437
[DBG]  After skip/init build => iteration_stats.back(): sum_of_costs=4437, collisions=6
[DEBUG] Using default neighbor generation strategy for conflicts: 2
[DEBUG] Using default neighbor generation strategy for conflicts: 2
[DEBUG] Using default neighbor generation strategy for conflicts: 1
[DEBUG] Using default neighbor generation strategy for conflicts: 1
[DEBUG] Using default neighbor generation strategy for conflicts: 1
	InitLNS(PP): runtime = 0.00791329, iterations = 6, colliding pairs = 0, initial colliding pairs = 6, solution cost = 4441, initial solution cost = 4437, failed iterations = 0
[DBG]  [DEBUG] init_lns->sum_of_costs after init_lns->run: 4441
[DBG]  [DEBUG] sum_of_costs after assignment from init_lns->run: 4441
[DBG]  Recomputing sum_of_cost by dividing neighbor.sum_of_costs and neighbor.old_sum_of_costs
[STAT] sum_of_costs after recomputation: 4441
[STAT] Iteration 33
[DBG]  Using SAT operator (destroy+repair SAT).
[DBG]  ====================
[DBG]  SAT destroy operator called.
[DBG]  SAT heuristic: 2
[DBG]  key_agent_id: 28
[DBG]  key_agent_id global path length: 42
[DBG]  Submap content (global positions):
[DBG]  595 596 597 598 599 
[DBG]  627 628 629 630 631 
[DBG]  659 660 661 662 663 
[DBG]  691 692 693 694 695 
[DBG]  723 724 725 726 727 
[DBG]  Map content with agents and obstacles:
[DBG]  X . A X . 
[DBG]  A A . X . 
[DBG]  . A A X X 
[DBG]  . . X X X 
[DBG]  X . . . . 
[DBG]  content of the map structure that we pass to the SAT solver:
[DBG]  -1  1  1  -1  1  
[DBG]  1  1  1  -1  1  
[DBG]  1  1  1  -1  -1  
[DBG]  1  1  -1  -1  -1  
[DBG]  -1  1  1  1  1  
[DBG]  Identifying agents in a submap for rescheduling (when key_agent is there at the time 26):
[DBG]  Agent 11 found intervals in the sub-map:
[DBG]  
[DBG]  Agent 11 is not in sub-map at time 26 (intervals: 
[DBG]  )
[DBG]  Agent 28 found intervals in the sub-map:
[DBG]   [0..41]
[DBG]  Agent 28 (interval in submap: [0..41]) contains time 26, added to replan.
[DBG]  Agent 30 found intervals in the sub-map:
[DBG]   [25..30]
[DBG]  Agent 30 (interval in submap: [25..30]) contains time 26, added to replan.
[DBG]  Agent 44 found intervals in the sub-map:
[DBG]   [23..30]
[DBG]  Agent 44 (interval in submap: [23..30]) contains time 26, added to replan.
[DBG]  Agent 45 found intervals in the sub-map:
[DBG]   [26..31]
[DBG]  Agent 45 (interval in submap: [26..31]) contains time 26, added to replan.
[DBG]  Agent 53 found intervals in the sub-map:
[DBG]   [24..34]
[DBG]  Agent 53 (interval in submap: [24..34]) contains time 26, added to replan.
[DBG]  Agent 28 | Start (global): 661 -> (local): (2, 2) at time 26 | Goal (global): 727 -> (local): (4, 4) at time 41
[DBG]  Agent 30 | Start (global): 660 -> (local): (2, 1) at time 26 | Goal (global): 597 -> (local): (0, 2) at time 30
[DBG]  Agent 44 | Start (global): 627 -> (local): (1, 0) at time 26 | Goal (global): 724 -> (local): (4, 1) at time 30
[DBG]  Agent 45 | Start (global): 597 -> (local): (0, 2) at time 26 | Goal (global): 724 -> (local): (4, 1) at time 31
[DBG]  Agent 53 | Start (global): 628 -> (local): (1, 1) at time 26 | Goal (global): 724 -> (local): (4, 1) at time 34
[DBG]  [REPAIR] SAT destroy operator called.
[DBG]  [REPAIR] SAT operator â€“ launching subproblem FOR OPTIMIZATION.
[DBG]  Creating local paths (sx, sy) in the submap for T_sync = 26
[DBG]    Agent 28 (global paths from T=26 to 41) has local path: (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,1) (1,1) (1,0) (2,0) (3,0) (3,1) (4,1) (4,2) (4,3) (4,4) 
[DBG]    Agent 30 (global paths from T=26 to 30) has local path: (2,1) (1,1) (0,1) (0,1) (0,2) 
[DBG]    Agent 44 (global paths from T=26 to 30) has local path: (1,0) (2,0) (2,1) (3,1) (4,1) 
[DBG]    Agent 45 (global paths from T=26 to 31) has local path: (0,2) (1,2) (1,1) (2,1) (3,1) (4,1) 
[DBG]    Agent 53 (global paths from T=26 to 34) has local path: (1,1) (1,0) (2,0) (3,0) (3,0) (3,0) (3,0) (3,1) (4,1) 
[DBG]  Checking input data for SAT solver:
[DBG]    - Number of agents to replan: 5
[DBG]  Agent 28 has the original local path length: 16 => Start (2,2), Goal (4,4)
[DBG]  Agent 30 has the original local path length: 5 => Start (2,1), Goal (0,2)
[DBG]  Agent 44 has the original local path length: 5 => Start (1,0), Goal (4,1)
[DBG]  Agent 45 has the original local path length: 6 => Start (0,2), Goal (4,1)
[DBG]  Agent 53 has the original local path length: 9 => Start (1,1), Goal (4,1)
[DBG]  Start position: (2, 2), (2, 1), (1, 0), (0, 2), (1, 1), 
[DBG]  Goal position: (4, 4), (0, 2), (4, 1), (4, 1), (4, 1), 
[DBG]  SAT instance and solver created.
Currently solving
Instance name: scen
Map name: map
Encoding used: disappear_at_goal
SAT solver used: Kissat
Optimizing function: sum of costs
Number of agents: 5
Mks LB: 7
SoC LB: 26
Delta: 0
Remaining time: 300000 [ms]

[STAT] Solver returned: -1
[DBG]  SAT solver failed.
[STAT] SAT solver failed to find a valid solution.
[DBG]  ====================
[DBG]  SAT destroy operator called.
[DBG]  SAT heuristic: 2
[DBG]  key_agent_id: 28
[DBG]  key_agent_id global path length: 42
[DBG]  Submap content (global positions):
[DBG]  595 596 597 598 599 
[DBG]  627 628 629 630 631 
[DBG]  659 660 661 662 663 
[DBG]  691 692 693 694 695 
[DBG]  723 724 725 726 727 
[DBG]  Map content with agents and obstacles:
[DBG]  X A . X . 
[DBG]  A A . X . 
[DBG]  . . A X X 
[DBG]  A . X X X 
[DBG]  X . . . . 
[DBG]  content of the map structure that we pass to the SAT solver:
[DBG]  -1  1  1  -1  1  
[DBG]  1  1  1  -1  1  
[DBG]  1  1  1  -1  -1  
[DBG]  1  1  -1  -1  -1  
[DBG]  -1  1  1  1  1  
[DBG]  Identifying agents in a submap for rescheduling (when key_agent is there at the time 13):
[DBG]  Agent 1 found intervals in the sub-map:
[DBG]  
[DBG]  Agent 1 is not in sub-map at time 13 (intervals: 
[DBG]  )
[DBG]  Agent 28 found intervals in the sub-map:
[DBG]   [0..41]
[DBG]  Agent 28 (interval in submap: [0..41]) contains time 13, added to replan.
[DBG]  Agent 74 found intervals in the sub-map:
[DBG]   [9..16]
[DBG]  Agent 74 (interval in submap: [9..16]) contains time 13, added to replan.
[DBG]  Agent 86 found intervals in the sub-map:
[DBG]   [10..14]
[DBG]  Agent 86 (interval in submap: [10..14]) contains time 13, added to replan.
[DBG]  Agent 131 found intervals in the sub-map:
[DBG]   [10..16]
[DBG]  Agent 131 (interval in submap: [10..16]) contains time 13, added to replan.
[DBG]  Agent 135 found intervals in the sub-map:
[DBG]   [4..4] [8..14]
[DBG]  Agent 135 (interval in submap: [8..14]) contains time 13, added to replan.
[DBG]  Agent 28 | Start (global): 661 -> (local): (2, 2) at time 13 | Goal (global): 727 -> (local): (4, 4) at time 41
[DBG]  Agent 74 | Start (global): 627 -> (local): (1, 0) at time 13 | Goal (global): 597 -> (local): (0, 2) at time 16
[DBG]  Agent 86 | Start (global): 596 -> (local): (0, 1) at time 13 | Goal (global): 597 -> (local): (0, 2) at time 14
[DBG]  Agent 131 | Start (global): 628 -> (local): (1, 1) at time 13 | Goal (global): 724 -> (local): (4, 1) at time 16
[DBG]  Agent 135 | Start (global): 691 -> (local): (3, 0) at time 13 | Goal (global): 659 -> (local): (2, 0) at time 14
[DBG]  [REPAIR] SAT destroy operator called.
[DBG]  [REPAIR] SAT operator â€“ launching subproblem FOR OPTIMIZATION.
[DBG]  Creating local paths (sx, sy) in the submap for T_sync = 13
[DBG]    Agent 28 (global paths from T=13 to 41) has local path: (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,1) (1,1) (1,0) (2,0) (3,0) (3,1) (4,1) (4,2) (4,3) (4,4) 
[DBG]    Agent 74 (global paths from T=13 to 16) has local path: (1,0) (1,1) (0,1) (0,2) 
[DBG]    Agent 86 (global paths from T=13 to 14) has local path: (0,1) (0,2) 
[DBG]    Agent 131 (global paths from T=13 to 16) has local path: (1,1) (2,1) (3,1) (4,1) 
[DBG]    Agent 135 (global paths from T=13 to 14) has local path: (3,0) (2,0) 
[DBG]  Checking input data for SAT solver:
[DBG]    - Number of agents to replan: 5
[DBG]  Agent 28 has the original local path length: 29 => Start (2,2), Goal (4,4)
[DBG]  Agent 74 has the original local path length: 4 => Start (1,0), Goal (0,2)
[DBG]  Agent 86 has the original local path length: 2 => Start (0,1), Goal (0,2)
[DBG]  Agent 131 has the original local path length: 4 => Start (1,1), Goal (4,1)
[DBG]  Agent 135 has the original local path length: 2 => Start (3,0), Goal (2,0)
[DBG]  Start position: (2, 2), (1, 0), (0, 1), (1, 1), (3, 0), 
[DBG]  Goal position: (4, 4), (0, 2), (0, 2), (4, 1), (2, 0), 
[DBG]  SAT instance and solver created.
Currently solving
Instance name: scen
Map name: map
Encoding used: disappear_at_goal
SAT solver used: Kissat
Optimizing function: sum of costs
Number of agents: 5
Mks LB: 7
SoC LB: 19
Delta: 0
Remaining time: 300000 [ms]

[STAT] Solver returned: -1
[DBG]  SAT solver failed.
[STAT] SAT solver failed to find a valid solution.
[DBG]  ====================
[DBG]  SAT destroy operator called.
[DBG]  SAT heuristic: 2
[DBG]  key_agent_id: 28
[DBG]  key_agent_id global path length: 42
[DBG]  Submap content (global positions):
[DBG]  595 596 597 598 599 
[DBG]  627 628 629 630 631 
[DBG]  659 660 661 662 663 
[DBG]  691 692 693 694 695 
[DBG]  723 724 725 726 727 
[DBG]  Map content with agents and obstacles:
[DBG]  X . . X . 
[DBG]  . . . X . 
[DBG]  . . A X X 
[DBG]  . . X X X 
[DBG]  X . . . . 
[DBG]  content of the map structure that we pass to the SAT solver:
[DBG]  -1  1  1  -1  1  
[DBG]  1  1  1  -1  1  
[DBG]  1  1  1  -1  -1  
[DBG]  1  1  -1  -1  -1  
[DBG]  -1  1  1  1  1  
[DBG]  Identifying agents in a submap for rescheduling (when key_agent is there at the time 19):
[DBG]  Agent 4 found intervals in the sub-map:
[DBG]  
[DBG]  Agent 4 is not in sub-map at time 19 (intervals: 
[DBG]  )
[DBG]  Agent 28 found intervals in the sub-map:
[DBG]   [0..41]
[DBG]  Agent 28 (interval in submap: [0..41]) contains time 19, added to replan.
[DBG]  Agent 30 found intervals in the sub-map:
[DBG]   [25..30]
[DBG]  Agent 30 is not in sub-map at time 19 (intervals: 
[DBG]  [25..30] )
[DBG]  Agent 56 found intervals in the sub-map:
[DBG]  
[DBG]  Agent 56 is not in sub-map at time 19 (intervals: 
[DBG]  )
[DBG]  Agent 74 found intervals in the sub-map:
[DBG]   [9..16]
[DBG]  Agent 74 is not in sub-map at time 19 (intervals: 
[DBG]  [9..16] )
[DBG]  Agent 79 found intervals in the sub-map:
[DBG]  
[DBG]  Agent 79 is not in sub-map at time 19 (intervals: 
[DBG]  )
[DBG]  Agent 114 found intervals in the sub-map:
[DBG]  
[DBG]  Agent 114 is not in sub-map at time 19 (intervals: 
[DBG]  )
[DBG]  Agent 28 | Start (global): 661 -> (local): (2, 2) at time 19 | Goal (global): 727 -> (local): (4, 4) at time 41
[DBG]  [REPAIR] SAT destroy operator called.
[DBG]  [REPAIR] SAT operator â€“ launching subproblem FOR OPTIMIZATION.
[DBG]  Creating local paths (sx, sy) in the submap for T_sync = 19
[DBG]    Agent 28 (global paths from T=19 to 41) has local path: (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,1) (1,1) (1,0) (2,0) (3,0) (3,1) (4,1) (4,2) (4,3) (4,4) 
[DBG]  Checking input data for SAT solver:
[DBG]    - Number of agents to replan: 1
[DBG]  Agent 28 has the original local path length: 23 => Start (2,2), Goal (4,4)
[DBG]  Start position: (2, 2), 
[DBG]  Goal position: (4, 4), 
[DBG]  SAT instance and solver created.
Currently solving
Instance name: scen
Map name: map
Encoding used: disappear_at_goal
SAT solver used: Kissat
Optimizing function: sum of costs
Number of agents: 1
Mks LB: 7
SoC LB: 7
Delta: 0
Remaining time: 300000 [ms]

Found plan [agents = 1] [timesteps = 7]
Agent #0 : 9 8 11 12 13 14 15 

[STAT] Solver returned: 0
[DBG]  Agent (index) 28 | New local path (submap idx):
[DBG]  9 8 11 12 13 14 15 
[DBG]  Update the agent path 28 | Original local length: 23 | New local length: 7
[DBG]  agent 28 t=0 => decoded (sx,sy)=(2,2) => global_id=661
[DBG]  agent 28 t=1 => decoded (sx,sy)=(2,1) => global_id=660
[DBG]  agent 28 t=2 => decoded (sx,sy)=(3,1) => global_id=692
[DBG]  agent 28 t=3 => decoded (sx,sy)=(4,1) => global_id=724
[DBG]  agent 28 t=4 => decoded (sx,sy)=(4,2) => global_id=725
[DBG]  agent 28 t=5 => decoded (sx,sy)=(4,3) => global_id=726
[DBG]  agent 28 t=6 => decoded (sx,sy)=(4,4) => global_id=727
[DBG]  Complete path of agent 28:
[DBG]    Original: 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 660 628 627 659 691 692 724 725 726 727 
[DBG]    New:     661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 660 692 724 725 726 727 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 
[DBG]    Local path (in submap): 661 660 692 724 725 726 727 
[DBG]    Suffix (out of submap): 
[DBG]  Original agent path length 28 je: 42
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 0: 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 660, 692, 724, 725, 726, 727, 
[DBG]  Path for agent 28 updated, resulting length: 26
[DBG]  Paths successfully updated.
[DBG]  (LNS.cpp) New path for agent 28: 
[DBG]  661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 660, 692, 724, 725, 726, 727, 
[DBG]  Delta value: 0.390244
[DBG]  Rewarding metric index = 2
[DBG]  component_weights = {0.403434, 0.148361, 0.166762, 0.281443}
[DBG]  opSuccess value: 1
[STAT] neighbor.sum_of_costs before recomputation: 25
[STAT] neighbor.old_sum_of_costs before recomputation: 41
[STAT] sum_of_costs before recomputation: 4441
[DBG]  Validate solution immediately after SAT success.
[WARNING] Problem after SAT: Target conflict: agent 42 (len 41) traverses target of agent 28 (len 25) at location 727 at timestep 40
[DBG]  [DEBUG] Attempting immediate repair via init_lns because problem occurred after SAT (should be applied only for conflicts...).
[DBG]  [DEBUG] Passing 150 agents to init_lns (skip=true).
[DBG]  [DEBUG] path_table contents for selected agents (neighbor.agents):
[DBG]    Agent 28 => controlling path length=26
[DBG]  hodnota skip_initial_solution=1
[DBG]  We skip initialSolution => call buildCollisionData()
[DBG]  buildCollisionData() called â€“ skip_initial_solution case.
[DBG]  Agents.size()=150, collision_graph.size()=150
[DBG]  agent 28 => updateCollidingPairs => foundCollision
[DBG]  agent 42 => updateCollidingPairs => foundCollision
[DBG]  Conflicting agent pairs:
[DBG]  agent 28 is in conflict with agent 42
[DBG]  buildCollisionData() => sum_of_costs=4425, num_of_colliding_pairs=1
[DBG]  buildCollisionData done => sum_of_costs=4425, num_of_colliding_pairs=1
[DBG]  sum_of_cost hodnota: 4425
[DBG]  After skip/init build => iteration_stats.back(): sum_of_costs=4425, collisions=1
[DEBUG] Using default neighbor generation strategy for conflicts: 1
	InitLNS(PP): runtime = 0.00111413, iterations = 2, colliding pairs = 0, initial colliding pairs = 1, solution cost = 4435, initial solution cost = 4425, failed iterations = 0
[DBG]  [DEBUG] init_lns->sum_of_costs after init_lns->run: 4435
[DBG]  [DEBUG] sum_of_costs after assignment from init_lns->run: 4435
[DBG]  Recomputing sum_of_cost by dividing neighbor.sum_of_costs and neighbor.old_sum_of_costs
[STAT] sum_of_costs after recomputation: 4435
[STAT] Iteration 34
[DBG]  Using SAT operator (destroy+repair SAT).
[DBG]  ====================
[DBG]  SAT destroy operator called.
[DBG]  SAT heuristic: 2
[DBG]  key_agent_id: 28
[DBG]  key_agent_id global path length: 42
[DBG]  Submap content (global positions):
[DBG]  561 562 563 564 565 
[DBG]  593 594 595 596 597 
[DBG]  625 626 627 628 629 
[DBG]  657 658 659 660 661 
[DBG]  689 690 691 692 693 
[DBG]  Map content with agents and obstacles:
[DBG]  A X . X . 
[DBG]  . . X . A 
[DBG]  . X A . . 
[DBG]  . A . . . 
[DBG]  . X . . X 
[DBG]  content of the map structure that we pass to the SAT solver:
[DBG]  1  -1  1  -1  1  
[DBG]  1  1  -1  1  1  
[DBG]  1  -1  1  1  1  
[DBG]  1  1  1  1  1  
[DBG]  1  -1  1  1  -1  
[DBG]  Identifying agents in a submap for rescheduling (when key_agent is there at the time 21):
[DBG]  Agent 3 found intervals in the sub-map:
[DBG]   [26..27]
[DBG]  Agent 3 is not in sub-map at time 21 (intervals: 
[DBG]  [26..27] )
[DBG]  Agent 4 found intervals in the sub-map:
[DBG]  
[DBG]  Agent 4 is not in sub-map at time 21 (intervals: 
[DBG]  )
[DBG]  Agent 28 found intervals in the sub-map:
[DBG]   [0..34]
[DBG]  Agent 28 (interval in submap: [0..34]) contains time 21, added to replan.
[DBG]  Agent 30 found intervals in the sub-map:
[DBG]   [22..31]
[DBG]  Agent 30 is not in sub-map at time 21 (intervals: 
[DBG]  [22..31] )
[DBG]  Agent 45 found intervals in the sub-map:
[DBG]   [20..25]
[DBG]  Agent 45 (interval in submap: [20..25]) contains time 21, added to replan.
[DBG]  Agent 56 found intervals in the sub-map:
[DBG]  
[DBG]  Agent 56 is not in sub-map at time 21 (intervals: 
[DBG]  )
[DBG]  Agent 71 found intervals in the sub-map:
[DBG]   [20..24]
[DBG]  Agent 71 (interval in submap: [20..24]) contains time 21, added to replan.
[DBG]  Agent 79 found intervals in the sub-map:
[DBG]   [15..21]
[DBG]  Agent 79 (interval in submap: [15..21]) contains time 21, added to replan.
[DBG]  Agent 135 found intervals in the sub-map:
[DBG]   [12..18]
[DBG]  Agent 135 is not in sub-map at time 21 (intervals: 
[DBG]  [12..18] )
[DBG]  Agent 28 | Start (global): 627 -> (local): (2, 2) at time 21 | Goal (global): 692 -> (local): (4, 3) at time 34
[DBG]  Agent 45 | Start (global): 597 -> (local): (1, 4) at time 21 | Goal (global): 692 -> (local): (4, 3) at time 25
[DBG]  Agent 71 | Start (global): 658 -> (local): (3, 1) at time 21 | Goal (global): 692 -> (local): (4, 3) at time 24
[DBG]  Agent 79 | Start (global): 561 -> (local): (0, 0) at time 21 | Goal (global): 561 -> (local): (0, 0) at time 21
[DBG]  [REPAIR] SAT destroy operator called.
[DBG]  [REPAIR] SAT operator â€“ launching subproblem FOR OPTIMIZATION.
[DBG]  Creating local paths (sx, sy) in the submap for T_sync = 21
[DBG]    Agent 28 (global paths from T=21 to 34) has local path: (2,2) (2,2) (2,2) (2,2) (2,2) (3,2) (3,2) (3,3) (2,3) (2,3) (2,3) (3,3) (3,3) (4,3) 
[DBG]    Agent 45 (global paths from T=21 to 25) has local path: (1,4) (2,4) (3,4) (3,3) (4,3) 
[DBG]    Agent 71 (global paths from T=21 to 24) has local path: (3,1) (3,2) (3,3) (4,3) 
[DBG]    Agent 79 (global paths from T=21 to 21) has local path: (0,0) 
[DBG]  Checking input data for SAT solver:
[DBG]    - Number of agents to replan: 4
[DBG]  Agent 28 has the original local path length: 14 => Start (2,2), Goal (4,3)
[DBG]  Agent 45 has the original local path length: 5 => Start (1,4), Goal (4,3)
[DBG]  Agent 71 has the original local path length: 4 => Start (3,1), Goal (4,3)
[DBG]  Agent 79 has the original local path length: 1 => Start (0,0), Goal (0,0)
[DBG]  Start position: (2, 2), (1, 4), (3, 1), (0, 0), 
[DBG]  Goal position: (4, 3), (4, 3), (4, 3), (0, 0), 
[DBG]  SAT instance and solver created.
Currently solving
Instance name: scen
Map name: map
Encoding used: disappear_at_goal
SAT solver used: Kissat
Optimizing function: sum of costs
Number of agents: 4
Mks LB: 5
SoC LB: 14
Delta: 0
Remaining time: 300000 [ms]

[STAT] Solver returned: -1
[DBG]  SAT solver failed.
[STAT] SAT solver failed to find a valid solution.
[DBG]  ====================
[DBG]  SAT destroy operator called.
[DBG]  SAT heuristic: 2
[DBG]  key_agent_id: 28
[DBG]  key_agent_id global path length: 42
[DBG]  Submap content (global positions):
[DBG]  594 595 596 597 598 
[DBG]  626 627 628 629 630 
[DBG]  658 659 660 661 662 
[DBG]  690 691 692 693 694 
[DBG]  722 723 724 725 726 
[DBG]  Map content with agents and obstacles:
[DBG]  . X . . X 
[DBG]  X . . . X 
[DBG]  A A A . X 
[DBG]  X . A X X 
[DBG]  . X A . . 
[DBG]  content of the map structure that we pass to the SAT solver:
[DBG]  1  -1  1  1  -1  
[DBG]  -1  1  1  1  -1  
[DBG]  1  1  1  1  -1  
[DBG]  -1  1  1  -1  -1  
[DBG]  1  -1  1  1  1  
[DBG]  Identifying agents in a submap for rescheduling (when key_agent is there at the time 33):
[DBG]  Agent 26 found intervals in the sub-map:
[DBG]   [28..33]
[DBG]  Agent 26 (interval in submap: [28..33]) contains time 33, added to replan.
[DBG]  Agent 28 found intervals in the sub-map:
[DBG]   [0..36] [39..40]
[DBG]  Agent 28 (interval in submap: [0..36]) contains time 33, added to replan.
[DBG]  Agent 42 found intervals in the sub-map:
[DBG]   [33..39]
[DBG]  Agent 42 (interval in submap: [33..39]) contains time 33, added to replan.
[DBG]  Agent 45 found intervals in the sub-map:
[DBG]   [21..26]
[DBG]  Agent 45 is not in sub-map at time 33 (intervals: 
[DBG]  [21..26] )
[DBG]  Agent 53 found intervals in the sub-map:
[DBG]   [24..34]
[DBG]  Agent 53 (interval in submap: [24..34]) contains time 33, added to replan.
[DBG]  Agent 148 found intervals in the sub-map:
[DBG]   [29..34]
[DBG]  Agent 148 (interval in submap: [29..34]) contains time 33, added to replan.
[DBG]  Agent 26 | Start (global): 724 -> (local): (4, 2) at time 33 | Goal (global): 724 -> (local): (4, 2) at time 33
[DBG]  Agent 28 | Start (global): 660 -> (local): (2, 2) at time 33 | Goal (global): 725 -> (local): (4, 3) at time 36
[DBG]  Agent 42 | Start (global): 658 -> (local): (2, 0) at time 33 | Goal (global): 726 -> (local): (4, 4) at time 39
[DBG]  Agent 53 | Start (global): 692 -> (local): (3, 2) at time 33 | Goal (global): 724 -> (local): (4, 2) at time 34
[DBG]  Agent 148 | Start (global): 659 -> (local): (2, 1) at time 33 | Goal (global): 660 -> (local): (2, 2) at time 34
[DBG]  [REPAIR] SAT destroy operator called.
[DBG]  [REPAIR] SAT operator â€“ launching subproblem FOR OPTIMIZATION.
[DBG]  Creating local paths (sx, sy) in the submap for T_sync = 33
[DBG]    Agent 26 (global paths from T=33 to 33) has local path: (4,2) 
[DBG]    Agent 28 (global paths from T=33 to 36) has local path: (2,2) (3,2) (4,2) (4,3) 
[DBG]    Agent 42 (global paths from T=33 to 39) has local path: (2,0) (2,1) (3,1) (3,2) (4,2) (4,3) (4,4) 
[DBG]    Agent 53 (global paths from T=33 to 34) has local path: (3,2) (4,2) 
[DBG]    Agent 148 (global paths from T=33 to 34) has local path: (2,1) (2,2) 
[DBG]  Checking input data for SAT solver:
[DBG]    - Number of agents to replan: 5
[DBG]  Agent 26 has the original local path length: 1 => Start (4,2), Goal (4,2)
[DBG]  Agent 28 has the original local path length: 4 => Start (2,2), Goal (4,3)
[DBG]  Agent 42 has the original local path length: 7 => Start (2,0), Goal (4,4)
[DBG]  Agent 53 has the original local path length: 2 => Start (3,2), Goal (4,2)
[DBG]  Agent 148 has the original local path length: 2 => Start (2,1), Goal (2,2)
[DBG]  Start position: (4, 2), (2, 2), (2, 0), (3, 2), (2, 1), 
[DBG]  Goal position: (4, 2), (4, 3), (4, 4), (4, 2), (2, 2), 
[DBG]  SAT instance and solver created.
Currently solving
Instance name: scen
Map name: map
Encoding used: disappear_at_goal
SAT solver used: Kissat
Optimizing function: sum of costs
Number of agents: 5
Mks LB: 7
SoC LB: 16
Delta: 0
Remaining time: 300000 [ms]

Vertex conflict! Agents 0, 1, timestep 4, location 0
Swapping conflict! Agents 0, 1, timestep 4, edge (0,0)
Vertex conflict! Agents 0, 1, timestep 5, location 0
Swapping conflict! Agents 0, 1, timestep 5, edge (0,0)
Vertex conflict! Agents 0, 1, timestep 6, location 0
Vertex conflict! Agents 0, 3, timestep 2, location 0
Swapping conflict! Agents 0, 3, timestep 2, edge (0,0)
Vertex conflict! Agents 0, 3, timestep 3, location 0
Swapping conflict! Agents 0, 3, timestep 3, edge (0,0)
Vertex conflict! Agents 0, 3, timestep 4, location 0
Swapping conflict! Agents 0, 3, timestep 4, edge (0,0)
Vertex conflict! Agents 0, 3, timestep 5, location 0
Swapping conflict! Agents 0, 3, timestep 5, edge (0,0)
Vertex conflict! Agents 0, 3, timestep 6, location 0
Vertex conflict! Agents 0, 4, timestep 2, location 0
Swapping conflict! Agents 0, 4, timestep 2, edge (0,0)
Vertex conflict! Agents 0, 4, timestep 3, location 0
Swapping conflict! Agents 0, 4, timestep 3, edge (0,0)
Vertex conflict! Agents 0, 4, timestep 4, location 0
Swapping conflict! Agents 0, 4, timestep 4, edge (0,0)
Vertex conflict! Agents 0, 4, timestep 5, location 0
Swapping conflict! Agents 0, 4, timestep 5, edge (0,0)
Vertex conflict! Agents 0, 4, timestep 6, location 0
Vertex conflict! Agents 1, 3, timestep 4, location 0
Swapping conflict! Agents 1, 3, timestep 4, edge (0,0)
Vertex conflict! Agents 1, 3, timestep 5, location 0
Swapping conflict! Agents 1, 3, timestep 5, edge (0,0)
Vertex conflict! Agents 1, 3, timestep 6, location 0
Vertex conflict! Agents 1, 4, timestep 4, location 0
Swapping conflict! Agents 1, 4, timestep 4, edge (0,0)
Vertex conflict! Agents 1, 4, timestep 5, location 0
Swapping conflict! Agents 1, 4, timestep 5, edge (0,0)
Vertex conflict! Agents 1, 4, timestep 6, location 0
Vertex conflict! Agents 3, 4, timestep 2, location 0
Swapping conflict! Agents 3, 4, timestep 2, edge (0,0)
Vertex conflict! Agents 3, 4, timestep 3, location 0
Swapping conflict! Agents 3, 4, timestep 3, edge (0,0)
Vertex conflict! Agents 3, 4, timestep 4, location 0
Swapping conflict! Agents 3, 4, timestep 4, edge (0,0)
Vertex conflict! Agents 3, 4, timestep 5, location 0
Swapping conflict! Agents 3, 4, timestep 5, edge (0,0)
Vertex conflict! Agents 3, 4, timestep 6, location 0
Found plan [agents = 5] [timesteps = 7]
Agent #0 : 13 0 0 0 0 0 0 
Agent #1 : 8 11 13 14 0 0 0 
Agent #2 : 6 7 10 11 13 14 15 
Agent #3 : 11 13 0 0 0 0 0 
Agent #4 : 7 8 0 0 0 0 0 

[STAT] Solver returned: 0
[DBG]  Agent (index) 26 | New local path (submap idx):
[DBG]  13 
[DBG]  Agent (index) 28 | New local path (submap idx):
[DBG]  8 11 13 14 
[DBG]  Agent (index) 42 | New local path (submap idx):
[DBG]  6 7 10 11 13 14 15 
[DBG]  Agent (index) 53 | New local path (submap idx):
[DBG]  11 13 
[DBG]  Agent (index) 148 | New local path (submap idx):
[DBG]  7 8 
[DBG]  Update the agent path 26 | Original local length: 1 | New local length: 1
[DBG]  agent 26 t=0 => decoded (sx,sy)=(4,2) => global_id=724
[DBG]  Complete path of agent 26:
[DBG]    Original: 13 14 46 47 48 49 81 82 83 115 147 179 180 212 244 276 308 309 341 373 405 404 405 437 469 501 533 565 597 629 661 660 692 724 756 755 
[DBG]    New:     13 14 46 47 48 49 81 82 83 115 147 179 180 212 244 276 308 309 341 373 405 404 405 437 469 501 533 565 597 629 661 660 692 724 756 755 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 13 14 46 47 48 49 81 82 83 115 147 179 180 212 244 276 308 309 341 373 405 404 405 437 469 501 533 565 597 629 661 660 692 
[DBG]    Local path (in submap): 724 
[DBG]    Suffix (out of submap): 756 755 
[DBG]  Original agent path length 26 je: 36
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 0: 13, 14, 46, 47, 48, 49, 81, 82, 83, 115, 147, 179, 180, 212, 244, 276, 308, 309, 341, 373, 405, 404, 405, 437, 469, 501, 533, 565, 597, 629, 661, 660, 692, 724, 756, 755, 
[DBG]  Path for agent 26 updated, resulting length: 36
[DBG]  Update the agent path 28 | Original local length: 4 | New local length: 4
[DBG]  agent 28 t=0 => decoded (sx,sy)=(2,2) => global_id=660
[DBG]  agent 28 t=1 => decoded (sx,sy)=(3,2) => global_id=692
[DBG]  agent 28 t=2 => decoded (sx,sy)=(4,2) => global_id=724
[DBG]  agent 28 t=3 => decoded (sx,sy)=(4,3) => global_id=725
[DBG]  Complete path of agent 28:
[DBG]    Original: 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 660 659 627 627 627 627 627 627 627 627 627 659 659 660 628 628 628 660 660 692 724 725 757 757 725 726 727 
[DBG]    New:     661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 660 659 627 627 627 627 627 627 627 627 627 659 659 660 628 628 628 660 660 692 724 725 757 757 725 726 727 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 660 659 627 627 627 627 627 627 627 627 627 659 659 660 628 628 628 660 
[DBG]    Local path (in submap): 660 692 724 725 
[DBG]    Suffix (out of submap): 757 757 725 726 727 
[DBG]  Original agent path length 28 je: 42
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 1: 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 660, 659, 627, 627, 627, 627, 627, 627, 627, 627, 627, 659, 659, 660, 628, 628, 628, 660, 660, 692, 724, 725, 757, 757, 725, 726, 727, 
[DBG]  Path for agent 28 updated, resulting length: 42
[DBG]  Update the agent path 42 | Original local length: 7 | New local length: 7
[DBG]  agent 42 t=0 => decoded (sx,sy)=(2,0) => global_id=658
[DBG]  agent 42 t=1 => decoded (sx,sy)=(2,1) => global_id=659
[DBG]  agent 42 t=2 => decoded (sx,sy)=(3,1) => global_id=691
[DBG]  agent 42 t=3 => decoded (sx,sy)=(3,2) => global_id=692
[DBG]  agent 42 t=4 => decoded (sx,sy)=(4,2) => global_id=724
[DBG]  agent 42 t=5 => decoded (sx,sy)=(4,3) => global_id=725
[DBG]  agent 42 t=6 => decoded (sx,sy)=(4,4) => global_id=726
[DBG]  Complete path of agent 42:
[DBG]    Original: 224 256 257 289 321 353 354 355 387 388 389 421 422 423 424 425 457 458 459 460 428 429 430 431 432 464 496 528 529 561 593 625 657 658 659 691 692 724 725 726 727 759 
[DBG]    New:     224 256 257 289 321 353 354 355 387 388 389 421 422 423 424 425 457 458 459 460 428 429 430 431 432 464 496 528 529 561 593 625 657 658 659 691 692 724 725 726 727 759 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 224 256 257 289 321 353 354 355 387 388 389 421 422 423 424 425 457 458 459 460 428 429 430 431 432 464 496 528 529 561 593 625 657 
[DBG]    Local path (in submap): 658 659 691 692 724 725 726 
[DBG]    Suffix (out of submap): 727 759 
[DBG]  Original agent path length 42 je: 42
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 2: 224, 256, 257, 289, 321, 353, 354, 355, 387, 388, 389, 421, 422, 423, 424, 425, 457, 458, 459, 460, 428, 429, 430, 431, 432, 464, 496, 528, 529, 561, 593, 625, 657, 658, 659, 691, 692, 724, 725, 726, 727, 759, 
[DBG]  Path for agent 42 updated, resulting length: 42
[DBG]  Update the agent path 53 | Original local length: 2 | New local length: 2
[DBG]  agent 53 t=0 => decoded (sx,sy)=(3,2) => global_id=692
[DBG]  agent 53 t=1 => decoded (sx,sy)=(4,2) => global_id=724
[DBG]  Complete path of agent 53:
[DBG]    Original: 84 84 116 115 147 147 179 180 212 212 244 276 308 309 309 341 373 373 405 437 469 501 533 565 597 629 628 627 659 691 691 691 691 692 724 756 788 820 821 
[DBG]    New:     84 84 116 115 147 147 179 180 212 212 244 276 308 309 309 341 373 373 405 437 469 501 533 565 597 629 628 627 659 691 691 691 691 692 724 756 788 820 821 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 84 84 116 115 147 147 179 180 212 212 244 276 308 309 309 341 373 373 405 437 469 501 533 565 597 629 628 627 659 691 691 691 691 
[DBG]    Local path (in submap): 692 724 
[DBG]    Suffix (out of submap): 756 788 820 821 
[DBG]  Original agent path length 53 je: 39
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 3: 84, 84, 116, 115, 147, 147, 179, 180, 212, 212, 244, 276, 308, 309, 309, 341, 373, 373, 405, 437, 469, 501, 533, 565, 597, 629, 628, 627, 659, 691, 691, 691, 691, 692, 724, 756, 788, 820, 821, 
[DBG]  Path for agent 53 updated, resulting length: 39
[DBG]  Update the agent path 148 | Original local length: 2 | New local length: 2
[DBG]  agent 148 t=0 => decoded (sx,sy)=(2,1) => global_id=659
[DBG]  agent 148 t=1 => decoded (sx,sy)=(2,2) => global_id=660
[DBG]  Complete path of agent 148:
[DBG]    Original: 776 744 744 744 744 744 744 744 744 744 744 745 777 778 779 747 715 683 684 685 717 717 685 653 654 654 655 656 657 658 659 659 659 659 660 
[DBG]    New:     776 744 744 744 744 744 744 744 744 744 744 745 777 778 779 747 715 683 684 685 717 717 685 653 654 654 655 656 657 658 659 659 659 659 660 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 776 744 744 744 744 744 744 744 744 744 744 745 777 778 779 747 715 683 684 685 717 717 685 653 654 654 655 656 657 658 659 659 659 
[DBG]    Local path (in submap): 659 660 
[DBG]    Suffix (out of submap): 
[DBG]  Original agent path length 148 je: 35
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 4: 776, 744, 744, 744, 744, 744, 744, 744, 744, 744, 744, 745, 777, 778, 779, 747, 715, 683, 684, 685, 717, 717, 685, 653, 654, 654, 655, 656, 657, 658, 659, 659, 659, 659, 660, 
[DBG]  Path for agent 148 updated, resulting length: 35
[DBG]  Paths successfully updated.
[DBG]  (LNS.cpp) New path for agent 26: 
[DBG]  13, 14, 46, 47, 48, 49, 81, 82, 83, 115, 147, 179, 180, 212, 244, 276, 308, 309, 341, 373, 405, 404, 405, 437, 469, 501, 533, 565, 597, 629, 661, 660, 692, 724, 756, 755, 
[DBG]  (LNS.cpp) New path for agent 28: 
[DBG]  661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 660, 659, 627, 627, 627, 627, 627, 627, 627, 627, 627, 659, 659, 660, 628, 628, 628, 660, 660, 692, 724, 725, 757, 757, 725, 726, 727, 
[DBG]  (LNS.cpp) New path for agent 42: 
[DBG]  224, 256, 257, 289, 321, 353, 354, 355, 387, 388, 389, 421, 422, 423, 424, 425, 457, 458, 459, 460, 428, 429, 430, 431, 432, 464, 496, 528, 529, 561, 593, 625, 657, 658, 659, 691, 692, 724, 725, 726, 727, 759, 
[DBG]  (LNS.cpp) New path for agent 53: 
[DBG]  84, 84, 116, 115, 147, 147, 179, 180, 212, 212, 244, 276, 308, 309, 309, 341, 373, 373, 405, 437, 469, 501, 533, 565, 597, 629, 628, 627, 659, 691, 691, 691, 691, 692, 724, 756, 788, 820, 821, 
[DBG]  (LNS.cpp) New path for agent 148: 
[DBG]  776, 744, 744, 744, 744, 744, 744, 744, 744, 744, 744, 745, 777, 778, 779, 747, 715, 683, 684, 685, 717, 717, 685, 653, 654, 654, 655, 656, 657, 658, 659, 659, 659, 659, 660, 
[DBG]  Delta value: 0
[DBG]  Rewarding metric index = 0
[DBG]  component_weights = {0.415838, 0.145276, 0.163295, 0.275591}
[DBG]  opSuccess value: 1
[STAT] neighbor.sum_of_costs before recomputation: 189
[STAT] neighbor.old_sum_of_costs before recomputation: 189
[STAT] sum_of_costs before recomputation: 4435
[DBG]  Validate solution immediately after SAT success.
[DBG]  No problems after SAT replan.
[DBG]  Recomputing sum_of_cost by dividing neighbor.sum_of_costs and neighbor.old_sum_of_costs
[STAT] sum_of_costs after recomputation: 4435
[STAT] Iteration 35
[DBG]  Using SAT operator (destroy+repair SAT).
[DBG]  ====================
[DBG]  SAT destroy operator called.
[DBG]  SAT heuristic: 2
[DBG]  key_agent_id: 28
[DBG]  key_agent_id global path length: 42
[DBG]  Submap content (global positions):
[DBG]  595 596 597 598 599 
[DBG]  627 628 629 630 631 
[DBG]  659 660 661 662 663 
[DBG]  691 692 693 694 695 
[DBG]  723 724 725 726 727 
[DBG]  Map content with agents and obstacles:
[DBG]  X . . X . 
[DBG]  . A . X . 
[DBG]  . . A X X 
[DBG]  . . X X X 
[DBG]  X . . . A 
[DBG]  content of the map structure that we pass to the SAT solver:
[DBG]  -1  1  1  -1  1  
[DBG]  1  1  1  -1  1  
[DBG]  1  1  1  -1  -1  
[DBG]  1  1  -1  -1  -1  
[DBG]  -1  1  1  1  1  
[DBG]  Identifying agents in a submap for rescheduling (when key_agent is there at the time 7):
[DBG]  Agent 28 found intervals in the sub-map:
[DBG]   [0..36] [39..41]
[DBG]  Agent 28 (interval in submap: [0..36]) contains time 7, added to replan.
[DBG]  Agent 46 found intervals in the sub-map:
[DBG]   [5..7]
[DBG]  Agent 46 (interval in submap: [5..7]) contains time 7, added to replan.
[DBG]  Agent 63 found intervals in the sub-map:
[DBG]  
[DBG]  Agent 63 is not in sub-map at time 7 (intervals: 
[DBG]  )
[DBG]  Agent 89 found intervals in the sub-map:
[DBG]   [5..10]
[DBG]  Agent 89 (interval in submap: [5..10]) contains time 7, added to replan.
[DBG]  Agent 113 found intervals in the sub-map:
[DBG]  
[DBG]  Agent 113 is not in sub-map at time 7 (intervals: 
[DBG]  )
[DBG]  Agent 28 | Start (global): 661 -> (local): (2, 2) at time 7 | Goal (global): 725 -> (local): (4, 2) at time 36
[DBG]  Agent 46 | Start (global): 727 -> (local): (4, 4) at time 7 | Goal (global): 727 -> (local): (4, 4) at time 7
[DBG]  Agent 89 | Start (global): 628 -> (local): (1, 1) at time 7 | Goal (global): 724 -> (local): (4, 1) at time 10
[DBG]  [REPAIR] SAT destroy operator called.
[DBG]  [REPAIR] SAT operator â€“ launching subproblem FOR OPTIMIZATION.
[DBG]  Creating local paths (sx, sy) in the submap for T_sync = 7
[DBG]    Agent 28 (global paths from T=7 to 36) has local path: (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,1) (2,0) (1,0) (1,0) (1,0) (1,0) (1,0) (1,0) (1,0) (1,0) (1,0) (2,0) (2,0) (2,1) (1,1) (1,1) (1,1) (2,1) (2,1) (3,1) (4,1) (4,2) 
[DBG]    Agent 46 (global paths from T=7 to 7) has local path: (4,4) 
[DBG]    Agent 89 (global paths from T=7 to 10) has local path: (1,1) (2,1) (3,1) (4,1) 
[DBG]  Checking input data for SAT solver:
[DBG]    - Number of agents to replan: 3
[DBG]  Agent 28 has the original local path length: 30 => Start (2,2), Goal (4,2)
[DBG]  Agent 46 has the original local path length: 1 => Start (4,4), Goal (4,4)
[DBG]  Agent 89 has the original local path length: 4 => Start (1,1), Goal (4,1)
[DBG]  Start position: (2, 2), (4, 4), (1, 1), 
[DBG]  Goal position: (4, 2), (4, 4), (4, 1), 
[DBG]  SAT instance and solver created.
Currently solving
Instance name: scen
Map name: map
Encoding used: disappear_at_goal
SAT solver used: Kissat
Optimizing function: sum of costs
Number of agents: 3
Mks LB: 5
SoC LB: 10
Delta: 0
Remaining time: 300000 [ms]

[STAT] Solver returned: -1
[DBG]  SAT solver failed.
[STAT] SAT solver failed to find a valid solution.
[DBG]  ====================
[DBG]  SAT destroy operator called.
[DBG]  SAT heuristic: 2
[DBG]  key_agent_id: 28
[DBG]  key_agent_id global path length: 42
[DBG]  Submap content (global positions):
[DBG]  561 562 563 564 565 
[DBG]  593 594 595 596 597 
[DBG]  625 626 627 628 629 
[DBG]  657 658 659 660 661 
[DBG]  689 690 691 692 693 
[DBG]  Map content with agents and obstacles:
[DBG]  . X . X A 
[DBG]  . . X . A 
[DBG]  . X A . . 
[DBG]  A . . A A 
[DBG]  . X . . X 
[DBG]  content of the map structure that we pass to the SAT solver:
[DBG]  1  -1  1  -1  1  
[DBG]  1  1  -1  1  1  
[DBG]  1  -1  1  1  1  
[DBG]  1  1  1  1  1  
[DBG]  1  -1  1  1  -1  
[DBG]  Identifying agents in a submap for rescheduling (when key_agent is there at the time 23):
[DBG]  Agent 3 found intervals in the sub-map:
[DBG]   [26..27]
[DBG]  Agent 3 is not in sub-map at time 23 (intervals: 
[DBG]  [26..27] )
[DBG]  Agent 4 found intervals in the sub-map:
[DBG]  
[DBG]  Agent 4 is not in sub-map at time 23 (intervals: 
[DBG]  )
[DBG]  Agent 11 found intervals in the sub-map:
[DBG]   [32..33]
[DBG]  Agent 11 is not in sub-map at time 23 (intervals: 
[DBG]  [32..33] )
[DBG]  Agent 28 found intervals in the sub-map:
[DBG]   [0..34]
[DBG]  Agent 28 (interval in submap: [0..34]) contains time 23, added to replan.
[DBG]  Agent 30 found intervals in the sub-map:
[DBG]   [22..31]
[DBG]  Agent 30 (interval in submap: [22..31]) contains time 23, added to replan.
[DBG]  Agent 44 found intervals in the sub-map:
[DBG]   [22..28]
[DBG]  Agent 44 (interval in submap: [22..28]) contains time 23, added to replan.
[DBG]  Agent 45 found intervals in the sub-map:
[DBG]   [20..25]
[DBG]  Agent 45 (interval in submap: [20..25]) contains time 23, added to replan.
[DBG]  Agent 49 found intervals in the sub-map:
[DBG]  
[DBG]  Agent 49 is not in sub-map at time 23 (intervals: 
[DBG]  )
[DBG]  Agent 53 found intervals in the sub-map:
[DBG]   [23..33]
[DBG]  Agent 53 (interval in submap: [23..33]) contains time 23, added to replan.
[DBG]  Agent 71 found intervals in the sub-map:
[DBG]   [20..24]
[DBG]  Agent 71 (interval in submap: [20..24]) contains time 23, added to replan.
[DBG]  Agent 74 found intervals in the sub-map:
[DBG]   [7..17]
[DBG]  Agent 74 is not in sub-map at time 23 (intervals: 
[DBG]  [7..17] )
[DBG]  Agent 28 | Start (global): 627 -> (local): (2, 2) at time 23 | Goal (global): 692 -> (local): (4, 3) at time 34
[DBG]  Agent 30 | Start (global): 657 -> (local): (3, 0) at time 23 | Goal (global): 565 -> (local): (0, 4) at time 31
[DBG]  Agent 44 | Start (global): 597 -> (local): (1, 4) at time 23 | Goal (global): 692 -> (local): (4, 3) at time 28
[DBG]  Agent 45 | Start (global): 661 -> (local): (3, 4) at time 23 | Goal (global): 692 -> (local): (4, 3) at time 25
[DBG]  Agent 53 | Start (global): 565 -> (local): (0, 4) at time 23 | Goal (global): 692 -> (local): (4, 3) at time 33
[DBG]  Agent 71 | Start (global): 660 -> (local): (3, 3) at time 23 | Goal (global): 692 -> (local): (4, 3) at time 24
[DBG]  [REPAIR] SAT destroy operator called.
[DBG]  [REPAIR] SAT operator â€“ launching subproblem FOR OPTIMIZATION.
[DBG]  Creating local paths (sx, sy) in the submap for T_sync = 23
[DBG]    Agent 28 (global paths from T=23 to 34) has local path: (2,2) (2,2) (2,2) (3,2) (3,2) (3,3) (2,3) (2,3) (2,3) (3,3) (3,3) (4,3) 
[DBG]    Agent 30 (global paths from T=23 to 31) has local path: (3,0) (3,1) (3,2) (3,3) (2,3) (1,3) (1,3) (1,4) (0,4) 
[DBG]    Agent 44 (global paths from T=23 to 28) has local path: (1,4) (2,4) (3,4) (3,4) (3,3) (4,3) 
[DBG]    Agent 45 (global paths from T=23 to 25) has local path: (3,4) (3,3) (4,3) 
[DBG]    Agent 53 (global paths from T=23 to 33) has local path: (0,4) (1,4) (2,4) (2,3) (2,2) (3,2) (4,2) (4,2) (4,2) (4,2) (4,3) 
[DBG]    Agent 71 (global paths from T=23 to 24) has local path: (3,3) (4,3) 
[DBG]  Checking input data for SAT solver:
[DBG]    - Number of agents to replan: 6
[DBG]  Agent 28 has the original local path length: 12 => Start (2,2), Goal (4,3)
[DBG]  Agent 30 has the original local path length: 9 => Start (3,0), Goal (0,4)
[DBG]  Agent 44 has the original local path length: 6 => Start (1,4), Goal (4,3)
[DBG]  Agent 45 has the original local path length: 3 => Start (3,4), Goal (4,3)
[DBG]  Agent 53 has the original local path length: 11 => Start (0,4), Goal (4,3)
[DBG]  Agent 71 has the original local path length: 2 => Start (3,3), Goal (4,3)
[DBG]  Start position: (2, 2), (3, 0), (1, 4), (3, 4), (0, 4), (3, 3), 
[DBG]  Goal position: (4, 3), (0, 4), (4, 3), (4, 3), (4, 3), (4, 3), 
[DBG]  SAT instance and solver created.
Currently solving
Instance name: scen
Map name: map
Encoding used: disappear_at_goal
SAT solver used: Kissat
Optimizing function: sum of costs
Number of agents: 6
Mks LB: 8
SoC LB: 28
Delta: 0
Remaining time: 300000 [ms]

Vertex conflict! Agents 0, 2, timestep 5, location 0
Swapping conflict! Agents 0, 2, timestep 5, edge (0,0)
Vertex conflict! Agents 0, 2, timestep 6, location 0
Swapping conflict! Agents 0, 2, timestep 6, edge (0,0)
Vertex conflict! Agents 0, 2, timestep 7, location 0
Vertex conflict! Agents 0, 3, timestep 4, location 0
Swapping conflict! Agents 0, 3, timestep 4, edge (0,0)
Vertex conflict! Agents 0, 3, timestep 5, location 0
Swapping conflict! Agents 0, 3, timestep 5, edge (0,0)
Vertex conflict! Agents 0, 3, timestep 6, location 0
Swapping conflict! Agents 0, 3, timestep 6, edge (0,0)
Vertex conflict! Agents 0, 3, timestep 7, location 0
Vertex conflict! Agents 0, 4, timestep 6, location 0
Swapping conflict! Agents 0, 4, timestep 6, edge (0,0)
Vertex conflict! Agents 0, 4, timestep 7, location 0
Vertex conflict! Agents 0, 5, timestep 4, location 0
Swapping conflict! Agents 0, 5, timestep 4, edge (0,0)
Vertex conflict! Agents 0, 5, timestep 5, location 0
Swapping conflict! Agents 0, 5, timestep 5, edge (0,0)
Vertex conflict! Agents 0, 5, timestep 6, location 0
Swapping conflict! Agents 0, 5, timestep 6, edge (0,0)
Vertex conflict! Agents 0, 5, timestep 7, location 0
Vertex conflict! Agents 2, 3, timestep 5, location 0
Swapping conflict! Agents 2, 3, timestep 5, edge (0,0)
Vertex conflict! Agents 2, 3, timestep 6, location 0
Swapping conflict! Agents 2, 3, timestep 6, edge (0,0)
Vertex conflict! Agents 2, 3, timestep 7, location 0
Vertex conflict! Agents 2, 4, timestep 6, location 0
Swapping conflict! Agents 2, 4, timestep 6, edge (0,0)
Vertex conflict! Agents 2, 4, timestep 7, location 0
Vertex conflict! Agents 2, 5, timestep 5, location 0
Swapping conflict! Agents 2, 5, timestep 5, edge (0,0)
Vertex conflict! Agents 2, 5, timestep 6, location 0
Swapping conflict! Agents 2, 5, timestep 6, edge (0,0)
Vertex conflict! Agents 2, 5, timestep 7, location 0
Vertex conflict! Agents 3, 4, timestep 6, location 0
Swapping conflict! Agents 3, 4, timestep 6, edge (0,0)
Vertex conflict! Agents 3, 4, timestep 7, location 0
Vertex conflict! Agents 3, 5, timestep 3, location 0
Swapping conflict! Agents 3, 5, timestep 3, edge (0,0)
Vertex conflict! Agents 3, 5, timestep 4, location 0
Swapping conflict! Agents 3, 5, timestep 4, edge (0,0)
Vertex conflict! Agents 3, 5, timestep 5, location 0
Swapping conflict! Agents 3, 5, timestep 5, edge (0,0)
Vertex conflict! Agents 3, 5, timestep 6, location 0
Swapping conflict! Agents 3, 5, timestep 6, edge (0,0)
Vertex conflict! Agents 3, 5, timestep 7, location 0
Vertex conflict! Agents 4, 5, timestep 6, location 0
Swapping conflict! Agents 4, 5, timestep 6, edge (0,0)
Vertex conflict! Agents 4, 5, timestep 7, location 0
Found plan [agents = 6] [timesteps = 8]
Agent #0 : 8 13 17 18 0 0 0 0 
Agent #1 : 11 12 13 8 9 10 6 2 
Agent #2 : 6 10 15 14 18 0 0 0 
Agent #3 : 15 14 18 0 0 0 0 0 
Agent #4 : 2 6 10 15 14 18 0 0 
Agent #5 : 14 18 0 0 0 0 0 0 

[STAT] Solver returned: 0
[DBG]  Agent (index) 28 | New local path (submap idx):
[DBG]  8 13 17 18 
[DBG]  Agent (index) 30 | New local path (submap idx):
[DBG]  11 12 13 8 9 10 6 2 
[DBG]  Agent (index) 44 | New local path (submap idx):
[DBG]  6 10 15 14 18 
[DBG]  Agent (index) 45 | New local path (submap idx):
[DBG]  15 14 18 
[DBG]  Agent (index) 53 | New local path (submap idx):
[DBG]  2 6 10 15 14 18 
[DBG]  Agent (index) 71 | New local path (submap idx):
[DBG]  14 18 
[DBG]  Update the agent path 28 | Original local length: 12 | New local length: 4
[DBG]  agent 28 t=0 => decoded (sx,sy)=(2,2) => global_id=627
[DBG]  agent 28 t=1 => decoded (sx,sy)=(3,2) => global_id=659
[DBG]  agent 28 t=2 => decoded (sx,sy)=(4,2) => global_id=691
[DBG]  agent 28 t=3 => decoded (sx,sy)=(4,3) => global_id=692
[DBG]  Complete path of agent 28:
[DBG]    Original: 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 660 659 627 627 627 627 627 627 627 627 627 659 659 660 628 628 628 660 660 692 724 725 757 757 725 726 727 
[DBG]    New:     661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 660 659 627 627 627 627 627 627 627 659 691 692 724 725 757 757 725 726 727 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 660 659 627 627 627 627 627 627 
[DBG]    Local path (in submap): 627 659 691 692 724 725 757 757 725 726 727 
[DBG]    Suffix (out of submap): 
[DBG]  Original agent path length 28 je: 42
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 0: 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 660, 659, 627, 627, 627, 627, 627, 627, 627, 659, 691, 692, 724, 725, 757, 757, 725, 726, 727, 
[DBG]  Path for agent 28 updated, resulting length: 34
[DBG]  Update the agent path 30 | Original local length: 9 | New local length: 8
[DBG]  agent 30 t=0 => decoded (sx,sy)=(3,0) => global_id=657
[DBG]  agent 30 t=1 => decoded (sx,sy)=(3,1) => global_id=658
[DBG]  agent 30 t=2 => decoded (sx,sy)=(3,2) => global_id=659
[DBG]  agent 30 t=3 => decoded (sx,sy)=(2,2) => global_id=627
[DBG]  agent 30 t=4 => decoded (sx,sy)=(2,3) => global_id=628
[DBG]  agent 30 t=5 => decoded (sx,sy)=(2,4) => global_id=629
[DBG]  agent 30 t=6 => decoded (sx,sy)=(1,4) => global_id=597
[DBG]  agent 30 t=7 => decoded (sx,sy)=(0,4) => global_id=565
[DBG]  Complete path of agent 30:
[DBG]    Original: 922 921 921 921 920 919 887 886 885 884 883 851 850 849 848 847 815 783 784 752 753 721 689 657 658 659 660 628 596 596 597 565 566 534 502 503 
[DBG]    New:     922 921 921 921 920 919 887 886 885 884 883 851 850 849 848 847 815 783 784 752 753 721 689 657 658 659 627 628 629 597 565 566 534 502 503 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 922 921 921 921 920 919 887 886 885 884 883 851 850 849 848 847 815 783 784 752 753 721 689 
[DBG]    Local path (in submap): 657 658 659 627 628 629 597 565 566 
[DBG]    Suffix (out of submap): 534 502 503 
[DBG]  Original agent path length 30 je: 36
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 1: 922, 921, 921, 921, 920, 919, 887, 886, 885, 884, 883, 851, 850, 849, 848, 847, 815, 783, 784, 752, 753, 721, 689, 657, 658, 659, 627, 628, 629, 597, 565, 566, 534, 502, 503, 
[DBG]  Path for agent 30 updated, resulting length: 35
[DBG]  Update the agent path 44 | Original local length: 6 | New local length: 5
[DBG]  agent 44 t=0 => decoded (sx,sy)=(1,4) => global_id=597
[DBG]  agent 44 t=1 => decoded (sx,sy)=(2,4) => global_id=629
[DBG]  agent 44 t=2 => decoded (sx,sy)=(3,4) => global_id=661
[DBG]  agent 44 t=3 => decoded (sx,sy)=(3,3) => global_id=660
[DBG]  agent 44 t=4 => decoded (sx,sy)=(4,3) => global_id=692
[DBG]  Complete path of agent 44:
[DBG]    Original: 156 124 123 122 154 153 185 184 216 248 247 279 311 343 375 407 439 438 437 469 501 533 565 597 629 661 661 660 692 724 756 755 787 786 818 850 882 881 880 848 
[DBG]    New:     156 124 123 122 154 153 185 184 216 248 247 279 311 343 375 407 439 438 437 469 501 533 565 597 629 661 660 692 724 756 755 787 786 818 850 882 881 880 848 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 156 124 123 122 154 153 185 184 216 248 247 279 311 343 375 407 439 438 437 469 501 533 565 
[DBG]    Local path (in submap): 597 629 661 660 692 724 
[DBG]    Suffix (out of submap): 756 755 787 786 818 850 882 881 880 848 
[DBG]  Original agent path length 44 je: 40
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 2: 156, 124, 123, 122, 154, 153, 185, 184, 216, 248, 247, 279, 311, 343, 375, 407, 439, 438, 437, 469, 501, 533, 565, 597, 629, 661, 660, 692, 724, 756, 755, 787, 786, 818, 850, 882, 881, 880, 848, 
[DBG]  Path for agent 44 updated, resulting length: 39
[DBG]  Update the agent path 45 | Original local length: 3 | New local length: 3
[DBG]  agent 45 t=0 => decoded (sx,sy)=(3,4) => global_id=661
[DBG]  agent 45 t=1 => decoded (sx,sy)=(3,3) => global_id=660
[DBG]  agent 45 t=2 => decoded (sx,sy)=(4,3) => global_id=692
[DBG]  Complete path of agent 45:
[DBG]    Original: 153 185 217 249 281 313 312 311 343 375 375 375 407 439 438 437 437 469 501 533 565 597 629 661 660 692 724 756 788 820 819 818 850 849 
[DBG]    New:     153 185 217 249 281 313 312 311 343 375 375 375 407 439 438 437 437 469 501 533 565 597 629 661 660 692 724 756 788 820 819 818 850 849 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 153 185 217 249 281 313 312 311 343 375 375 375 407 439 438 437 437 469 501 533 565 597 629 
[DBG]    Local path (in submap): 661 660 692 
[DBG]    Suffix (out of submap): 724 756 788 820 819 818 850 849 
[DBG]  Original agent path length 45 je: 34
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 3: 153, 185, 217, 249, 281, 313, 312, 311, 343, 375, 375, 375, 407, 439, 438, 437, 437, 469, 501, 533, 565, 597, 629, 661, 660, 692, 724, 756, 788, 820, 819, 818, 850, 849, 
[DBG]  Path for agent 45 updated, resulting length: 34
[DBG]  Update the agent path 53 | Original local length: 11 | New local length: 6
[DBG]  agent 53 t=0 => decoded (sx,sy)=(0,4) => global_id=565
[DBG]  agent 53 t=1 => decoded (sx,sy)=(1,4) => global_id=597
[DBG]  agent 53 t=2 => decoded (sx,sy)=(2,4) => global_id=629
[DBG]  agent 53 t=3 => decoded (sx,sy)=(3,4) => global_id=661
[DBG]  agent 53 t=4 => decoded (sx,sy)=(3,3) => global_id=660
[DBG]  agent 53 t=5 => decoded (sx,sy)=(4,3) => global_id=692
[DBG]  Complete path of agent 53:
[DBG]    Original: 84 84 116 115 147 147 179 180 212 212 244 276 308 309 309 341 373 373 405 437 469 501 533 565 597 629 628 627 659 691 691 691 691 692 724 756 788 820 821 
[DBG]    New:     84 84 116 115 147 147 179 180 212 212 244 276 308 309 309 341 373 373 405 437 469 501 533 565 597 629 661 660 692 724 756 788 820 821 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 84 84 116 115 147 147 179 180 212 212 244 276 308 309 309 341 373 373 405 437 469 501 533 
[DBG]    Local path (in submap): 565 597 629 661 660 692 724 756 788 820 821 
[DBG]    Suffix (out of submap): 
[DBG]  Original agent path length 53 je: 39
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 4: 84, 84, 116, 115, 147, 147, 179, 180, 212, 212, 244, 276, 308, 309, 309, 341, 373, 373, 405, 437, 469, 501, 533, 565, 597, 629, 661, 660, 692, 724, 756, 788, 820, 821, 
[DBG]  Path for agent 53 updated, resulting length: 34
[DBG]  Update the agent path 71 | Original local length: 2 | New local length: 2
[DBG]  agent 71 t=0 => decoded (sx,sy)=(3,3) => global_id=660
[DBG]  agent 71 t=1 => decoded (sx,sy)=(4,3) => global_id=692
[DBG]  Complete path of agent 71:
[DBG]    Original: 482 483 484 485 486 487 519 520 521 522 523 524 525 526 558 590 622 623 655 656 657 658 659 660 692 724 756 788 820 821 822 823 823 855 887 919 
[DBG]    New:     482 483 484 485 486 487 519 520 521 522 523 524 525 526 558 590 622 623 655 656 657 658 659 660 692 724 756 788 820 821 822 823 823 855 887 919 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 482 483 484 485 486 487 519 520 521 522 523 524 525 526 558 590 622 623 655 656 657 658 659 
[DBG]    Local path (in submap): 660 692 
[DBG]    Suffix (out of submap): 724 756 788 820 821 822 823 823 855 887 919 
[DBG]  Original agent path length 71 je: 36
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 5: 482, 483, 484, 485, 486, 487, 519, 520, 521, 522, 523, 524, 525, 526, 558, 590, 622, 623, 655, 656, 657, 658, 659, 660, 692, 724, 756, 788, 820, 821, 822, 823, 823, 855, 887, 919, 
[DBG]  Path for agent 71 updated, resulting length: 36
[DBG]  Paths successfully updated.
[DBG]  (LNS.cpp) New path for agent 28: 
[DBG]  661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 660, 659, 627, 627, 627, 627, 627, 627, 627, 659, 691, 692, 724, 725, 757, 757, 725, 726, 727, 
[DBG]  (LNS.cpp) New path for agent 30: 
[DBG]  922, 921, 921, 921, 920, 919, 887, 886, 885, 884, 883, 851, 850, 849, 848, 847, 815, 783, 784, 752, 753, 721, 689, 657, 658, 659, 627, 628, 629, 597, 565, 566, 534, 502, 503, 
[DBG]  (LNS.cpp) New path for agent 44: 
[DBG]  156, 124, 123, 122, 154, 153, 185, 184, 216, 248, 247, 279, 311, 343, 375, 407, 439, 438, 437, 469, 501, 533, 565, 597, 629, 661, 660, 692, 724, 756, 755, 787, 786, 818, 850, 882, 881, 880, 848, 
[DBG]  (LNS.cpp) New path for agent 45: 
[DBG]  153, 185, 217, 249, 281, 313, 312, 311, 343, 375, 375, 375, 407, 439, 438, 437, 437, 469, 501, 533, 565, 597, 629, 661, 660, 692, 724, 756, 788, 820, 819, 818, 850, 849, 
[DBG]  (LNS.cpp) New path for agent 53: 
[DBG]  84, 84, 116, 115, 147, 147, 179, 180, 212, 212, 244, 276, 308, 309, 309, 341, 373, 373, 405, 437, 469, 501, 533, 565, 597, 629, 661, 660, 692, 724, 756, 788, 820, 821, 
[DBG]  (LNS.cpp) New path for agent 71: 
[DBG]  482, 483, 484, 485, 486, 487, 519, 520, 521, 522, 523, 524, 525, 526, 558, 590, 622, 623, 655, 656, 657, 658, 659, 660, 692, 724, 756, 788, 820, 821, 822, 823, 823, 855, 887, 919, 
[DBG]  Delta value: 0.0678733
[DBG]  Rewarding metric index = 1
[DBG]  component_weights = {0.408475, 0.16041, 0.160404, 0.270711}
[DBG]  opSuccess value: 1
[STAT] neighbor.sum_of_costs before recomputation: 206
[STAT] neighbor.old_sum_of_costs before recomputation: 221
[STAT] sum_of_costs before recomputation: 4435
[DBG]  Validate solution immediately after SAT success.
[WARNING] Problem after SAT: Edge conflict between agents 30 and 26 at edge (629,597) at timestep 29
[DBG]  [DEBUG] Attempting immediate repair via init_lns because problem occurred after SAT (should be applied only for conflicts...).
[DBG]  [DEBUG] Passing 150 agents to init_lns (skip=true).
[DBG]  [DEBUG] path_table contents for selected agents (neighbor.agents):
[DBG]    Agent 28 => controlling path length=34
[DBG]    Agent 30 => controlling path length=35
[DBG]    Agent 44 => controlling path length=39
[DBG]    Agent 45 => controlling path length=34
[DBG]    Agent 53 => controlling path length=34
[DBG]    Agent 71 => controlling path length=36
[DBG]  hodnota skip_initial_solution=1
[DBG]  We skip initialSolution => call buildCollisionData()
[DBG]  buildCollisionData() called â€“ skip_initial_solution case.
[DBG]  Agents.size()=150, collision_graph.size()=150
[DBG]  agent 26 => updateCollidingPairs => foundCollision
[DBG]  agent 28 => updateCollidingPairs => foundCollision
[DBG]  agent 30 => updateCollidingPairs => foundCollision
[DBG]  agent 42 => updateCollidingPairs => foundCollision
[DBG]  agent 44 => updateCollidingPairs => foundCollision
[DBG]  agent 57 => updateCollidingPairs => foundCollision
[DBG]  Conflicting agent pairs:
[DBG]  agent 26 is in conflict with agent 30
[DBG]  agent 28 is in conflict with agent 42
[DBG]  agent 44 is in conflict with agent 57
[DBG]  buildCollisionData() => sum_of_costs=4420, num_of_colliding_pairs=3
[DBG]  buildCollisionData done => sum_of_costs=4420, num_of_colliding_pairs=3
[DBG]  sum_of_cost hodnota: 4420
[DBG]  After skip/init build => iteration_stats.back(): sum_of_costs=4420, collisions=3
[DEBUG] Using default neighbor generation strategy for conflicts: 0
[DEBUG] Using default neighbor generation strategy for conflicts: 1
[DEBUG] Using default neighbor generation strategy for conflicts: 0
	InitLNS(PP): runtime = 0.00409067, iterations = 4, colliding pairs = 0, initial colliding pairs = 3, solution cost = 4438, initial solution cost = 4420, failed iterations = 0
[DBG]  [DEBUG] init_lns->sum_of_costs after init_lns->run: 4438
[DBG]  [DEBUG] sum_of_costs after assignment from init_lns->run: 4438
[DBG]  Recomputing sum_of_cost by dividing neighbor.sum_of_costs and neighbor.old_sum_of_costs
[STAT] sum_of_costs after recomputation: 4438
[STAT] Iteration 36
[DBG]  Using SAT operator (destroy+repair SAT).
[DBG]  ====================
[DBG]  SAT destroy operator called.
[DBG]  SAT heuristic: 2
[DBG]  key_agent_id: 28
[DBG]  key_agent_id global path length: 42
[DBG]  Submap content (global positions):
[DBG]  595 596 597 598 599 
[DBG]  627 628 629 630 631 
[DBG]  659 660 661 662 663 
[DBG]  691 692 693 694 695 
[DBG]  723 724 725 726 727 
[DBG]  Map content with agents and obstacles:
[DBG]  X . . X . 
[DBG]  . . . X . 
[DBG]  . . A X X 
[DBG]  . . X X X 
[DBG]  X . . . . 
[DBG]  content of the map structure that we pass to the SAT solver:
[DBG]  -1  1  1  -1  1  
[DBG]  1  1  1  -1  1  
[DBG]  1  1  1  -1  -1  
[DBG]  1  1  -1  -1  -1  
[DBG]  -1  1  1  1  1  
[DBG]  Identifying agents in a submap for rescheduling (when key_agent is there at the time 17):
[DBG]  Agent 28 found intervals in the sub-map:
[DBG]   [0..30] [32..41]
[DBG]  Agent 28 (interval in submap: [0..30]) contains time 17, added to replan.
[DBG]  Agent 30 found intervals in the sub-map:
[DBG]  
[DBG]  Agent 30 is not in sub-map at time 17 (intervals: 
[DBG]  )
[DBG]  Agent 74 found intervals in the sub-map:
[DBG]  
[DBG]  Agent 74 is not in sub-map at time 17 (intervals: 
[DBG]  )
[DBG]  Agent 114 found intervals in the sub-map:
[DBG]  
[DBG]  Agent 114 is not in sub-map at time 17 (intervals: 
[DBG]  )
[DBG]  Agent 28 | Start (global): 661 -> (local): (2, 2) at time 17 | Goal (global): 659 -> (local): (2, 0) at time 30
[DBG]  [REPAIR] SAT destroy operator called.
[DBG]  [REPAIR] SAT operator â€“ launching subproblem FOR OPTIMIZATION.
[DBG]  Creating local paths (sx, sy) in the submap for T_sync = 17
[DBG]    Agent 28 (global paths from T=17 to 30) has local path: (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (1,2) (1,1) (1,0) (1,0) (1,0) (1,0) (1,0) (2,0) 
[DBG]  Checking input data for SAT solver:
[DBG]    - Number of agents to replan: 1
[DBG]  Agent 28 has the original local path length: 14 => Start (2,2), Goal (2,0)
[DBG]  Start position: (2, 2), 
[DBG]  Goal position: (2, 0), 
[DBG]  SAT instance and solver created.
Currently solving
Instance name: scen
Map name: map
Encoding used: disappear_at_goal
SAT solver used: Kissat
Optimizing function: sum of costs
Number of agents: 1
Mks LB: 3
SoC LB: 3
Delta: 0
Remaining time: 300000 [ms]

Found plan [agents = 1] [timesteps = 3]
Agent #0 : 9 8 7 

[STAT] Solver returned: 0
[DBG]  Agent (index) 28 | New local path (submap idx):
[DBG]  9 8 7 
[DBG]  Update the agent path 28 | Original local length: 14 | New local length: 3
[DBG]  agent 28 t=0 => decoded (sx,sy)=(2,2) => global_id=661
[DBG]  agent 28 t=1 => decoded (sx,sy)=(2,1) => global_id=660
[DBG]  agent 28 t=2 => decoded (sx,sy)=(2,0) => global_id=659
[DBG]  Complete path of agent 28:
[DBG]    Original: 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 629 628 627 627 627 627 627 659 658 659 627 627 659 691 692 724 725 726 727 
[DBG]    New:     661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 660 659 658 659 627 627 659 691 692 724 725 726 727 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 
[DBG]    Local path (in submap): 661 660 659 658 659 627 627 659 691 692 724 725 726 727 
[DBG]    Suffix (out of submap): 
[DBG]  Original agent path length 28 je: 42
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 0: 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 660, 659, 658, 659, 627, 627, 659, 691, 692, 724, 725, 726, 727, 
[DBG]  Path for agent 28 updated, resulting length: 31
[DBG]  Paths successfully updated.
[DBG]  (LNS.cpp) New path for agent 28: 
[DBG]  661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 660, 659, 658, 659, 627, 627, 659, 691, 692, 724, 725, 726, 727, 
[DBG]  Delta value: 0.268293
[DBG]  Rewarding metric index = 2
[DBG]  component_weights = {0.387642, 0.152229, 0.203224, 0.256905}
[DBG]  opSuccess value: 1
[STAT] neighbor.sum_of_costs before recomputation: 30
[STAT] neighbor.old_sum_of_costs before recomputation: 41
[STAT] sum_of_costs before recomputation: 4438
[DBG]  Validate solution immediately after SAT success.
[WARNING] Problem after SAT: Target conflict: agent 42 (len 41) traverses target of agent 28 (len 30) at location 727 at timestep 40
[DBG]  [DEBUG] Attempting immediate repair via init_lns because problem occurred after SAT (should be applied only for conflicts...).
[DBG]  [DEBUG] Passing 150 agents to init_lns (skip=true).
[DBG]  [DEBUG] path_table contents for selected agents (neighbor.agents):
[DBG]    Agent 28 => controlling path length=31
[DBG]  hodnota skip_initial_solution=1
[DBG]  We skip initialSolution => call buildCollisionData()
[DBG]  buildCollisionData() called â€“ skip_initial_solution case.
[DBG]  Agents.size()=150, collision_graph.size()=150
[DBG]  agent 28 => updateCollidingPairs => foundCollision
[DBG]  agent 42 => updateCollidingPairs => foundCollision
[DBG]  agent 61 => updateCollidingPairs => foundCollision
[DBG]  Conflicting agent pairs:
[DBG]  agent 28 is in conflict with agent 42
[DBG]  agent 28 is in conflict with agent 61
[DBG]  buildCollisionData() => sum_of_costs=4427, num_of_colliding_pairs=2
[DBG]  buildCollisionData done => sum_of_costs=4427, num_of_colliding_pairs=2
[DBG]  sum_of_cost hodnota: 4427
[DBG]  After skip/init build => iteration_stats.back(): sum_of_costs=4427, collisions=2
[DEBUG] Using default neighbor generation strategy for conflicts: 0
	InitLNS(PP): runtime = 0.00135875, iterations = 2, colliding pairs = 0, initial colliding pairs = 2, solution cost = 4435, initial solution cost = 4427, failed iterations = 0
[DBG]  [DEBUG] init_lns->sum_of_costs after init_lns->run: 4435
[DBG]  [DEBUG] sum_of_costs after assignment from init_lns->run: 4435
[DBG]  Recomputing sum_of_cost by dividing neighbor.sum_of_costs and neighbor.old_sum_of_costs
[STAT] sum_of_costs after recomputation: 4435
[STAT] Iteration 37
[DBG]  Using SAT operator (destroy+repair SAT).
[DBG]  ====================
[DBG]  SAT destroy operator called.
[DBG]  SAT heuristic: 2
[DBG]  key_agent_id: 28
[DBG]  key_agent_id global path length: 42
[DBG]  Submap content (global positions):
[DBG]  626 627 628 629 630 
[DBG]  658 659 660 661 662 
[DBG]  690 691 692 693 694 
[DBG]  722 723 724 725 726 
[DBG]  754 755 756 757 758 
[DBG]  Map content with agents and obstacles:
[DBG]  X . A . X 
[DBG]  A . A . X 
[DBG]  X . A X X 
[DBG]  . X A A . 
[DBG]  X . . . X 
[DBG]  content of the map structure that we pass to the SAT solver:
[DBG]  -1  1  1  1  -1  
[DBG]  1  1  1  1  -1  
[DBG]  -1  1  1  -1  -1  
[DBG]  1  -1  1  1  1  
[DBG]  -1  1  1  1  -1  
[DBG]  Identifying agents in a submap for rescheduling (when key_agent is there at the time 25):
[DBG]  Agent 3 found intervals in the sub-map:
[DBG]   [20..28]
[DBG]  Agent 3 (interval in submap: [20..28]) contains time 25, added to replan.
[DBG]  Agent 28 found intervals in the sub-map:
[DBG]   [0..40]
[DBG]  Agent 28 (interval in submap: [0..40]) contains time 25, added to replan.
[DBG]  Agent 30 found intervals in the sub-map:
[DBG]  
[DBG]  Agent 30 is not in sub-map at time 25 (intervals: 
[DBG]  )
[DBG]  Agent 44 found intervals in the sub-map:
[DBG]   [25..32]
[DBG]  Agent 44 (interval in submap: [25..32]) contains time 25, added to replan.
[DBG]  Agent 45 found intervals in the sub-map:
[DBG]   [23..30]
[DBG]  Agent 45 (interval in submap: [23..30]) contains time 25, added to replan.
[DBG]  Agent 53 found intervals in the sub-map:
[DBG]   [29..35]
[DBG]  Agent 53 is not in sub-map at time 25 (intervals: 
[DBG]  [29..35] )
[DBG]  Agent 71 found intervals in the sub-map:
[DBG]   [21..26]
[DBG]  Agent 71 (interval in submap: [21..26]) contains time 25, added to replan.
[DBG]  Agent 148 found intervals in the sub-map:
[DBG]   [25..30]
[DBG]  Agent 148 (interval in submap: [25..30]) contains time 25, added to replan.
[DBG]  Agent 3 | Start (global): 725 -> (local): (3, 3) at time 25 | Goal (global): 756 -> (local): (4, 2) at time 28
[DBG]  Agent 28 | Start (global): 692 -> (local): (2, 2) at time 25 | Goal (global): 726 -> (local): (3, 4) at time 40
[DBG]  Agent 44 | Start (global): 628 -> (local): (0, 2) at time 25 | Goal (global): 755 -> (local): (4, 1) at time 32
[DBG]  Agent 45 | Start (global): 660 -> (local): (1, 2) at time 25 | Goal (global): 755 -> (local): (4, 1) at time 30
[DBG]  Agent 71 | Start (global): 724 -> (local): (3, 2) at time 25 | Goal (global): 756 -> (local): (4, 2) at time 26
[DBG]  Agent 148 | Start (global): 658 -> (local): (1, 0) at time 25 | Goal (global): 660 -> (local): (1, 2) at time 30
[DBG]  [REPAIR] SAT destroy operator called.
[DBG]  [REPAIR] SAT operator â€“ launching subproblem FOR OPTIMIZATION.
[DBG]  Creating local paths (sx, sy) in the submap for T_sync = 25
[DBG]    Agent 3 (global paths from T=25 to 28) has local path: (3,3) (4,3) (4,3) (4,2) 
[DBG]    Agent 28 (global paths from T=25 to 40) has local path: (2,2) (2,1) (2,1) (2,1) (2,1) (2,1) (2,2) (3,2) (4,2) (4,3) (4,3) (4,3) (4,3) (4,3) (3,3) (3,4) 
[DBG]    Agent 44 (global paths from T=25 to 32) has local path: (0,2) (0,2) (0,2) (1,2) (2,2) (3,2) (4,2) (4,1) 
[DBG]    Agent 45 (global paths from T=25 to 30) has local path: (1,2) (2,2) (3,2) (3,2) (4,2) (4,1) 
[DBG]    Agent 71 (global paths from T=25 to 26) has local path: (3,2) (4,2) 
[DBG]    Agent 148 (global paths from T=25 to 30) has local path: (1,0) (1,1) (1,1) (1,1) (1,1) (1,2) 
[DBG]  Checking input data for SAT solver:
[DBG]    - Number of agents to replan: 6
[DBG]  Agent 3 has the original local path length: 4 => Start (3,3), Goal (4,2)
[DBG]  Agent 28 has the original local path length: 16 => Start (2,2), Goal (3,4)
[DBG]  Agent 44 has the original local path length: 8 => Start (0,2), Goal (4,1)
[DBG]  Agent 45 has the original local path length: 6 => Start (1,2), Goal (4,1)
[DBG]  Agent 71 has the original local path length: 2 => Start (3,2), Goal (4,2)
[DBG]  Agent 148 has the original local path length: 6 => Start (1,0), Goal (1,2)
[DBG]  Start position: (3, 3), (2, 2), (0, 2), (1, 2), (3, 2), (1, 0), 
[DBG]  Goal position: (4, 2), (3, 4), (4, 1), (4, 1), (4, 2), (1, 2), 
[DBG]  SAT instance and solver created.
Currently solving
Instance name: scen
Map name: map
Encoding used: disappear_at_goal
SAT solver used: Kissat
Optimizing function: sum of costs
Number of agents: 6
Mks LB: 6
SoC LB: 23
Delta: 0
Remaining time: 300000 [ms]

Vertex conflict! Agents 0, 1, timestep 4, location 0
Swapping conflict! Agents 0, 1, timestep 4, edge (0,0)
Vertex conflict! Agents 0, 1, timestep 5, location 0
Vertex conflict! Agents 0, 3, timestep 5, location 0
Vertex conflict! Agents 0, 4, timestep 3, location 0
Swapping conflict! Agents 0, 4, timestep 3, edge (0,0)
Vertex conflict! Agents 0, 4, timestep 4, location 0
Swapping conflict! Agents 0, 4, timestep 4, edge (0,0)
Vertex conflict! Agents 0, 4, timestep 5, location 0
Vertex conflict! Agents 0, 5, timestep 3, location 0
Swapping conflict! Agents 0, 5, timestep 3, edge (0,0)
Vertex conflict! Agents 0, 5, timestep 4, location 0
Swapping conflict! Agents 0, 5, timestep 4, edge (0,0)
Vertex conflict! Agents 0, 5, timestep 5, location 0
Vertex conflict! Agents 1, 3, timestep 5, location 0
Vertex conflict! Agents 1, 4, timestep 4, location 0
Swapping conflict! Agents 1, 4, timestep 4, edge (0,0)
Vertex conflict! Agents 1, 4, timestep 5, location 0
Vertex conflict! Agents 1, 5, timestep 4, location 0
Swapping conflict! Agents 1, 5, timestep 4, edge (0,0)
Vertex conflict! Agents 1, 5, timestep 5, location 0
Vertex conflict! Agents 3, 4, timestep 5, location 0
Vertex conflict! Agents 3, 5, timestep 5, location 0
Vertex conflict! Agents 4, 5, timestep 3, location 0
Swapping conflict! Agents 4, 5, timestep 3, edge (0,0)
Vertex conflict! Agents 4, 5, timestep 4, location 0
Swapping conflict! Agents 4, 5, timestep 4, edge (0,0)
Vertex conflict! Agents 4, 5, timestep 5, location 0
Found plan [agents = 6] [timesteps = 6]
Agent #0 : 11 15 14 0 0 0 
Agent #1 : 8 10 11 12 0 0 
Agent #2 : 1 5 8 10 14 13 
Agent #3 : 5 8 10 14 13 0 
Agent #4 : 10 14 0 0 0 0 
Agent #5 : 3 4 5 0 0 0 

[STAT] Solver returned: 0
[DBG]  Agent (index) 3 | New local path (submap idx):
[DBG]  11 15 14 
[DBG]  Agent (index) 28 | New local path (submap idx):
[DBG]  8 10 11 12 
[DBG]  Agent (index) 44 | New local path (submap idx):
[DBG]  1 5 8 10 14 13 
[DBG]  Agent (index) 45 | New local path (submap idx):
[DBG]  5 8 10 14 13 
[DBG]  Agent (index) 71 | New local path (submap idx):
[DBG]  10 14 
[DBG]  Agent (index) 148 | New local path (submap idx):
[DBG]  3 4 5 
[DBG]  Update the agent path 3 | Original local length: 4 | New local length: 3
[DBG]  agent 3 t=0 => decoded (sx,sy)=(3,3) => global_id=725
[DBG]  agent 3 t=1 => decoded (sx,sy)=(4,3) => global_id=757
[DBG]  agent 3 t=2 => decoded (sx,sy)=(4,2) => global_id=756
[DBG]  Complete path of agent 3:
[DBG]    Original: 468 468 468 468 468 468 467 435 435 435 435 435 467 467 468 469 501 533 565 597 629 628 660 692 724 725 757 757 756 788 820 819 819 819 818 850 882 914 913 912 
[DBG]    New:     468 468 468 468 468 468 467 435 435 435 435 435 467 467 468 469 501 533 565 597 629 628 660 692 724 725 757 756 788 820 819 819 819 818 850 882 914 913 912 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 468 468 468 468 468 468 467 435 435 435 435 435 467 467 468 469 501 533 565 597 629 628 660 692 724 
[DBG]    Local path (in submap): 725 757 756 788 
[DBG]    Suffix (out of submap): 820 819 819 819 818 850 882 914 913 912 
[DBG]  Original agent path length 3 je: 40
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 0: 468, 468, 468, 468, 468, 468, 467, 435, 435, 435, 435, 435, 467, 467, 468, 469, 501, 533, 565, 597, 629, 628, 660, 692, 724, 725, 757, 756, 788, 820, 819, 819, 819, 818, 850, 882, 914, 913, 912, 
[DBG]  Path for agent 3 updated, resulting length: 39
[DBG]  Update the agent path 28 | Original local length: 16 | New local length: 4
[DBG]  agent 28 t=0 => decoded (sx,sy)=(2,2) => global_id=692
[DBG]  agent 28 t=1 => decoded (sx,sy)=(3,2) => global_id=724
[DBG]  agent 28 t=2 => decoded (sx,sy)=(3,3) => global_id=725
[DBG]  agent 28 t=3 => decoded (sx,sy)=(3,4) => global_id=726
[DBG]  Complete path of agent 28:
[DBG]    Original: 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 660 692 691 691 691 691 691 692 724 756 757 757 757 757 757 725 726 727 
[DBG]    New:     661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 660 692 724 725 726 727 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 660 
[DBG]    Local path (in submap): 692 724 725 726 727 
[DBG]    Suffix (out of submap): 
[DBG]  Original agent path length 28 je: 42
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 1: 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 660, 692, 724, 725, 726, 727, 
[DBG]  Path for agent 28 updated, resulting length: 30
[DBG]  Update the agent path 44 | Original local length: 8 | New local length: 6
[DBG]  agent 44 t=0 => decoded (sx,sy)=(0,2) => global_id=628
[DBG]  agent 44 t=1 => decoded (sx,sy)=(1,2) => global_id=660
[DBG]  agent 44 t=2 => decoded (sx,sy)=(2,2) => global_id=692
[DBG]  agent 44 t=3 => decoded (sx,sy)=(3,2) => global_id=724
[DBG]  agent 44 t=4 => decoded (sx,sy)=(4,2) => global_id=756
[DBG]  agent 44 t=5 => decoded (sx,sy)=(4,1) => global_id=755
[DBG]  Complete path of agent 44:
[DBG]    Original: 156 124 123 122 154 153 185 217 216 248 247 279 311 343 375 407 439 438 437 469 501 533 565 597 596 628 628 628 660 692 724 756 755 787 786 818 850 882 881 880 848 
[DBG]    New:     156 124 123 122 154 153 185 217 216 248 247 279 311 343 375 407 439 438 437 469 501 533 565 597 596 628 660 692 724 756 755 787 786 818 850 882 881 880 848 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 156 124 123 122 154 153 185 217 216 248 247 279 311 343 375 407 439 438 437 469 501 533 565 597 596 
[DBG]    Local path (in submap): 628 660 692 724 756 755 787 786 
[DBG]    Suffix (out of submap): 818 850 882 881 880 848 
[DBG]  Original agent path length 44 je: 41
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 2: 156, 124, 123, 122, 154, 153, 185, 217, 216, 248, 247, 279, 311, 343, 375, 407, 439, 438, 437, 469, 501, 533, 565, 597, 596, 628, 660, 692, 724, 756, 755, 787, 786, 818, 850, 882, 881, 880, 848, 
[DBG]  Path for agent 44 updated, resulting length: 39
[DBG]  Update the agent path 45 | Original local length: 6 | New local length: 5
[DBG]  agent 45 t=0 => decoded (sx,sy)=(1,2) => global_id=660
[DBG]  agent 45 t=1 => decoded (sx,sy)=(2,2) => global_id=692
[DBG]  agent 45 t=2 => decoded (sx,sy)=(3,2) => global_id=724
[DBG]  agent 45 t=3 => decoded (sx,sy)=(4,2) => global_id=756
[DBG]  agent 45 t=4 => decoded (sx,sy)=(4,1) => global_id=755
[DBG]  Complete path of agent 45:
[DBG]    Original: 153 185 217 216 215 247 279 311 343 375 375 375 407 439 438 437 437 469 501 533 565 597 596 628 628 660 692 724 724 756 755 787 786 818 817 849 
[DBG]    New:     153 185 217 216 215 247 279 311 343 375 375 375 407 439 438 437 437 469 501 533 565 597 596 628 628 660 692 724 756 755 787 786 818 817 849 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 153 185 217 216 215 247 279 311 343 375 375 375 407 439 438 437 437 469 501 533 565 597 596 628 628 
[DBG]    Local path (in submap): 660 692 724 756 755 787 
[DBG]    Suffix (out of submap): 786 818 817 849 
[DBG]  Original agent path length 45 je: 36
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 3: 153, 185, 217, 216, 215, 247, 279, 311, 343, 375, 375, 375, 407, 439, 438, 437, 437, 469, 501, 533, 565, 597, 596, 628, 628, 660, 692, 724, 756, 755, 787, 786, 818, 817, 849, 
[DBG]  Path for agent 45 updated, resulting length: 35
[DBG]  Update the agent path 71 | Original local length: 2 | New local length: 2
[DBG]  agent 71 t=0 => decoded (sx,sy)=(3,2) => global_id=724
[DBG]  agent 71 t=1 => decoded (sx,sy)=(4,2) => global_id=756
[DBG]  Complete path of agent 71:
[DBG]    Original: 482 483 484 485 486 487 519 520 521 522 523 524 525 526 558 590 622 623 655 656 657 658 659 660 692 724 756 788 820 821 822 823 823 855 887 919 
[DBG]    New:     482 483 484 485 486 487 519 520 521 522 523 524 525 526 558 590 622 623 655 656 657 658 659 660 692 724 756 788 820 821 822 823 823 855 887 919 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 482 483 484 485 486 487 519 520 521 522 523 524 525 526 558 590 622 623 655 656 657 658 659 660 692 
[DBG]    Local path (in submap): 724 756 
[DBG]    Suffix (out of submap): 788 820 821 822 823 823 855 887 919 
[DBG]  Original agent path length 71 je: 36
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 4: 482, 483, 484, 485, 486, 487, 519, 520, 521, 522, 523, 524, 525, 526, 558, 590, 622, 623, 655, 656, 657, 658, 659, 660, 692, 724, 756, 788, 820, 821, 822, 823, 823, 855, 887, 919, 
[DBG]  Path for agent 71 updated, resulting length: 36
[DBG]  Update the agent path 148 | Original local length: 6 | New local length: 3
[DBG]  agent 148 t=0 => decoded (sx,sy)=(1,0) => global_id=658
[DBG]  agent 148 t=1 => decoded (sx,sy)=(1,1) => global_id=659
[DBG]  agent 148 t=2 => decoded (sx,sy)=(1,2) => global_id=660
[DBG]  Complete path of agent 148:
[DBG]    Original: 776 808 808 808 808 808 807 806 806 807 775 776 777 745 746 714 715 683 684 685 653 654 655 656 657 658 659 659 659 659 660 
[DBG]    New:     776 808 808 808 808 808 807 806 806 807 775 776 777 745 746 714 715 683 684 685 653 654 655 656 657 658 659 660 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 776 808 808 808 808 808 807 806 806 807 775 776 777 745 746 714 715 683 684 685 653 654 655 656 657 
[DBG]    Local path (in submap): 658 659 660 
[DBG]    Suffix (out of submap): 
[DBG]  Original agent path length 148 je: 31
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 5: 776, 808, 808, 808, 808, 808, 807, 806, 806, 807, 775, 776, 777, 745, 746, 714, 715, 683, 684, 685, 653, 654, 655, 656, 657, 658, 659, 660, 
[DBG]  Path for agent 148 updated, resulting length: 28
[DBG]  Paths successfully updated.
[DBG]  (LNS.cpp) New path for agent 3: 
[DBG]  468, 468, 468, 468, 468, 468, 467, 435, 435, 435, 435, 435, 467, 467, 468, 469, 501, 533, 565, 597, 629, 628, 660, 692, 724, 725, 757, 756, 788, 820, 819, 819, 819, 818, 850, 882, 914, 913, 912, 
[DBG]  (LNS.cpp) New path for agent 28: 
[DBG]  661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 660, 692, 724, 725, 726, 727, 
[DBG]  (LNS.cpp) New path for agent 44: 
[DBG]  156, 124, 123, 122, 154, 153, 185, 217, 216, 248, 247, 279, 311, 343, 375, 407, 439, 438, 437, 469, 501, 533, 565, 597, 596, 628, 660, 692, 724, 756, 755, 787, 786, 818, 850, 882, 881, 880, 848, 
[DBG]  (LNS.cpp) New path for agent 45: 
[DBG]  153, 185, 217, 216, 215, 247, 279, 311, 343, 375, 375, 375, 407, 439, 438, 437, 437, 469, 501, 533, 565, 597, 596, 628, 628, 660, 692, 724, 756, 755, 787, 786, 818, 817, 849, 
[DBG]  (LNS.cpp) New path for agent 71: 
[DBG]  482, 483, 484, 485, 486, 487, 519, 520, 521, 522, 523, 524, 525, 526, 558, 590, 622, 623, 655, 656, 657, 658, 659, 660, 692, 724, 756, 788, 820, 821, 822, 823, 823, 855, 887, 919, 
[DBG]  (LNS.cpp) New path for agent 148: 
[DBG]  776, 808, 808, 808, 808, 808, 807, 806, 806, 807, 775, 776, 777, 745, 746, 714, 715, 683, 684, 685, 653, 654, 655, 656, 657, 658, 659, 660, 
[DBG]  Delta value: 0.0863636
[DBG]  Rewarding metric index = 0
[DBG]  component_weights = {0.419919, 0.144205, 0.192513, 0.243363}
[DBG]  opSuccess value: 1
[STAT] neighbor.sum_of_costs before recomputation: 201
[STAT] neighbor.old_sum_of_costs before recomputation: 220
[STAT] sum_of_costs before recomputation: 4435
[DBG]  Validate solution immediately after SAT success.
[WARNING] Problem after SAT: Vertex conflict between agents 3 and 44 at location 818 at timestep 33
[DBG]  [DEBUG] Attempting immediate repair via init_lns because problem occurred after SAT (should be applied only for conflicts...).
[DBG]  [DEBUG] Passing 150 agents to init_lns (skip=true).
[DBG]  [DEBUG] path_table contents for selected agents (neighbor.agents):
[DBG]    Agent 3 => controlling path length=39
[DBG]    Agent 28 => controlling path length=30
[DBG]    Agent 44 => controlling path length=39
[DBG]    Agent 45 => controlling path length=35
[DBG]    Agent 71 => controlling path length=36
[DBG]    Agent 148 => controlling path length=28
[DBG]  hodnota skip_initial_solution=1
[DBG]  We skip initialSolution => call buildCollisionData()
[DBG]  buildCollisionData() called â€“ skip_initial_solution case.
[DBG]  Agents.size()=150, collision_graph.size()=150
[DBG]  agent 3 => updateCollidingPairs => foundCollision
[DBG]  agent 26 => updateCollidingPairs => foundCollision
[DBG]  agent 28 => updateCollidingPairs => foundCollision
[DBG]  agent 42 => updateCollidingPairs => foundCollision
[DBG]  agent 44 => updateCollidingPairs => foundCollision
[DBG]  agent 57 => updateCollidingPairs => foundCollision
[DBG]  agent 148 => updateCollidingPairs => foundCollision
[DBG]  Conflicting agent pairs:
[DBG]  agent 3 is in conflict with agent 44
[DBG]  agent 3 is in conflict with agent 57
[DBG]  agent 26 is in conflict with agent 148
[DBG]  agent 28 is in conflict with agent 42
[DBG]  agent 44 is in conflict with agent 57
[DBG]  buildCollisionData() => sum_of_costs=4416, num_of_colliding_pairs=5
[DBG]  buildCollisionData done => sum_of_costs=4416, num_of_colliding_pairs=5
[DBG]  sum_of_cost hodnota: 4416
[DBG]  After skip/init build => iteration_stats.back(): sum_of_costs=4416, collisions=5
[DEBUG] Using default neighbor generation strategy for conflicts: 1
[DEBUG] Using default neighbor generation strategy for conflicts: 2
[DEBUG] Using default neighbor generation strategy for conflicts: 1
[DEBUG] Using default neighbor generation strategy for conflicts: 0
	InitLNS(PP): runtime = 0.00928271, iterations = 5, colliding pairs = 0, initial colliding pairs = 5, solution cost = 4468, initial solution cost = 4416, failed iterations = 0
[DBG]  [DEBUG] init_lns->sum_of_costs after init_lns->run: 4468
[DBG]  [DEBUG] sum_of_costs after assignment from init_lns->run: 4468
[DBG]  Recomputing sum_of_cost by dividing neighbor.sum_of_costs and neighbor.old_sum_of_costs
[STAT] sum_of_costs after recomputation: 4468
[STAT] Iteration 38
[DBG]  Using SAT operator (destroy+repair SAT).
[DBG]  ====================
[DBG]  SAT destroy operator called.
[DBG]  SAT heuristic: 2
[DBG]  key_agent_id: 28
[DBG]  key_agent_id global path length: 47
[DBG]  Submap content (global positions):
[DBG]  661 662 663 664 665 
[DBG]  693 694 695 696 697 
[DBG]  725 726 727 728 729 
[DBG]  757 758 759 760 761 
[DBG]  789 790 791 792 793 
[DBG]  Map content with agents and obstacles:
[DBG]  . X X . X 
[DBG]  X X X . . 
[DBG]  . . A . . 
[DBG]  . X . X . 
[DBG]  X . X . . 
[DBG]  content of the map structure that we pass to the SAT solver:
[DBG]  1  -1  -1  1  -1  
[DBG]  -1  -1  -1  1  1  
[DBG]  1  1  1  1  1  
[DBG]  1  -1  1  -1  1  
[DBG]  -1  1  -1  1  1  
[DBG]  Identifying agents in a submap for rescheduling (when key_agent is there at the time 46):
[DBG]  Agent 28 found intervals in the sub-map:
[DBG]   [0..14] [43..46]
[DBG]  Agent 28 (interval in submap: [43..46]) contains time 46, added to replan.
[DBG]  Agent 28 | Start (global): 727 -> (local): (2, 2) at time 46 | Goal (global): 727 -> (local): (2, 2) at time 46
[DBG]  [REPAIR] SAT destroy operator called.
[DBG]  [REPAIR] SAT operator â€“ launching subproblem FOR OPTIMIZATION.
[DBG]  Creating local paths (sx, sy) in the submap for T_sync = 46
[DBG]    Agent 28 (global paths from T=46 to 46) has local path: (2,2) 
[DBG]  Checking input data for SAT solver:
[DBG]    - Number of agents to replan: 1
[DBG]  Agent 28 has the original local path length: 1 => Start (2,2), Goal (2,2)
[DBG]  Start position: (2, 2), 
[DBG]  Goal position: (2, 2), 
[DBG]  SAT instance and solver created.
Currently solving
Instance name: scen
Map name: map
Encoding used: disappear_at_goal
SAT solver used: Kissat
Optimizing function: sum of costs
Number of agents: 1
Mks LB: 1
SoC LB: 1
Delta: 0
Remaining time: 300000 [ms]

Found plan [agents = 1] [timesteps = 1]
Agent #0 : 6 

[STAT] Solver returned: 0
[DBG]  Agent (index) 28 | New local path (submap idx):
[DBG]  6 
[DBG]  Update the agent path 28 | Original local length: 1 | New local length: 1
[DBG]  agent 28 t=0 => decoded (sx,sy)=(2,2) => global_id=727
[DBG]  Complete path of agent 28:
[DBG]    Original: 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 660 628 628 628 628 628 628 628 629 629 597 596 597 629 628 627 627 627 627 627 627 627 627 659 691 692 724 756 757 725 726 727 
[DBG]    New:     661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 660 628 628 628 628 628 628 628 629 629 597 596 597 629 628 627 627 627 627 627 627 627 627 659 691 692 724 756 757 725 726 727 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 660 628 628 628 628 628 628 628 629 629 597 596 597 629 628 627 627 627 627 627 627 627 627 659 691 692 724 756 757 725 726 
[DBG]    Local path (in submap): 727 
[DBG]    Suffix (out of submap): 
[DBG]  Original agent path length 28 je: 47
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 0: 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 660, 628, 628, 628, 628, 628, 628, 628, 629, 629, 597, 596, 597, 629, 628, 627, 627, 627, 627, 627, 627, 627, 627, 659, 691, 692, 724, 756, 757, 725, 726, 727, 
[DBG]  Path for agent 28 updated, resulting length: 47
[DBG]  Paths successfully updated.
[DBG]  (LNS.cpp) New path for agent 28: 
[DBG]  661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 660, 628, 628, 628, 628, 628, 628, 628, 629, 629, 597, 596, 597, 629, 628, 627, 627, 627, 627, 627, 627, 627, 627, 659, 691, 692, 724, 756, 757, 725, 726, 727, 
[DBG]  Delta value: 0
[DBG]  Rewarding metric index = 3
[DBG]  component_weights = {0.414608, 0.142381, 0.190078, 0.252932}
[DBG]  opSuccess value: 1
[STAT] neighbor.sum_of_costs before recomputation: 46
[STAT] neighbor.old_sum_of_costs before recomputation: 46
[STAT] sum_of_costs before recomputation: 4468
[DBG]  Validate solution immediately after SAT success.
[DBG]  No problems after SAT replan.
[DBG]  Recomputing sum_of_cost by dividing neighbor.sum_of_costs and neighbor.old_sum_of_costs
[STAT] sum_of_costs after recomputation: 4468
[STAT] Iteration 39
[DBG]  Using SAT operator (destroy+repair SAT).
[DBG]  ====================
[DBG]  SAT destroy operator called.
[DBG]  SAT heuristic: 2
[DBG]  key_agent_id: 28
[DBG]  key_agent_id global path length: 47
[DBG]  Submap content (global positions):
[DBG]  562 563 564 565 566 
[DBG]  594 595 596 597 598 
[DBG]  626 627 628 629 630 
[DBG]  658 659 660 661 662 
[DBG]  690 691 692 693 694 
[DBG]  Map content with agents and obstacles:
[DBG]  X . X . . 
[DBG]  . X . A X 
[DBG]  X A A . X 
[DBG]  . A . . X 
[DBG]  X A . X X 
[DBG]  content of the map structure that we pass to the SAT solver:
[DBG]  -1  1  -1  1  1  
[DBG]  1  -1  1  1  -1  
[DBG]  -1  1  1  1  -1  
[DBG]  1  1  1  1  -1  
[DBG]  -1  1  1  -1  -1  
[DBG]  Identifying agents in a submap for rescheduling (when key_agent is there at the time 29):
[DBG]  Agent 26 found intervals in the sub-map:
[DBG]   [25..32]
[DBG]  Agent 26 (interval in submap: [25..32]) contains time 29, added to replan.
[DBG]  Agent 28 found intervals in the sub-map:
[DBG]   [0..40]
[DBG]  Agent 28 (interval in submap: [0..40]) contains time 29, added to replan.
[DBG]  Agent 53 found intervals in the sub-map:
[DBG]   [23..30]
[DBG]  Agent 53 (interval in submap: [23..30]) contains time 29, added to replan.
[DBG]  Agent 61 found intervals in the sub-map:
[DBG]   [23..30]
[DBG]  Agent 61 (interval in submap: [23..30]) contains time 29, added to replan.
[DBG]  Agent 148 found intervals in the sub-map:
[DBG]   [25..27]
[DBG]  Agent 148 is not in sub-map at time 29 (intervals: 
[DBG]  [25..27] )
[DBG]  Agent 26 | Start (global): 627 -> (local): (2, 1) at time 29 | Goal (global): 692 -> (local): (4, 2) at time 32
[DBG]  Agent 28 | Start (global): 628 -> (local): (2, 2) at time 29 | Goal (global): 692 -> (local): (4, 2) at time 40
[DBG]  Agent 53 | Start (global): 691 -> (local): (4, 1) at time 29 | Goal (global): 692 -> (local): (4, 2) at time 30
[DBG]  Agent 61 | Start (global): 597 -> (local): (1, 3) at time 29 | Goal (global): 565 -> (local): (0, 3) at time 30
[DBG]  [REPAIR] SAT destroy operator called.
[DBG]  [REPAIR] SAT operator â€“ launching subproblem FOR OPTIMIZATION.
[DBG]  Creating local paths (sx, sy) in the submap for T_sync = 29
[DBG]    Agent 26 (global paths from T=29 to 32) has local path: (2,1) (3,1) (4,1) (4,2) 
[DBG]    Agent 28 (global paths from T=29 to 40) has local path: (2,2) (2,1) (2,1) (2,1) (2,1) (2,1) (2,1) (2,1) (2,1) (3,1) (4,1) (4,2) 
[DBG]    Agent 53 (global paths from T=29 to 30) has local path: (4,1) (4,2) 
[DBG]    Agent 61 (global paths from T=29 to 30) has local path: (1,3) (0,3) 
[DBG]  Checking input data for SAT solver:
[DBG]    - Number of agents to replan: 4
[DBG]  Agent 26 has the original local path length: 4 => Start (2,1), Goal (4,2)
[DBG]  Agent 28 has the original local path length: 12 => Start (2,2), Goal (4,2)
[DBG]  Agent 53 has the original local path length: 2 => Start (4,1), Goal (4,2)
[DBG]  Agent 61 has the original local path length: 2 => Start (1,3), Goal (0,3)
[DBG]  Start position: (2, 1), (2, 2), (4, 1), (1, 3), 
[DBG]  Goal position: (4, 2), (4, 2), (4, 2), (0, 3), 
[DBG]  SAT instance and solver created.
Currently solving
Instance name: scen
Map name: map
Encoding used: disappear_at_goal
SAT solver used: Kissat
Optimizing function: sum of costs
Number of agents: 4
Mks LB: 4
SoC LB: 11
Delta: 0
Remaining time: 300000 [ms]

Vertex conflict! Agents 1, 2, timestep 3, location 0
Vertex conflict! Agents 1, 3, timestep 3, location 0
Vertex conflict! Agents 2, 3, timestep 2, location 0
Swapping conflict! Agents 2, 3, timestep 2, edge (0,0)
Vertex conflict! Agents 2, 3, timestep 3, location 0
Found plan [agents = 4] [timesteps = 4]
Agent #0 : 6 10 13 14 
Agent #1 : 7 11 14 0 
Agent #2 : 13 14 0 0 
Agent #3 : 5 1 0 0 

[STAT] Solver returned: 0
[DBG]  Agent (index) 26 | New local path (submap idx):
[DBG]  6 10 13 14 
[DBG]  Agent (index) 28 | New local path (submap idx):
[DBG]  7 11 14 
[DBG]  Agent (index) 53 | New local path (submap idx):
[DBG]  13 14 
[DBG]  Agent (index) 61 | New local path (submap idx):
[DBG]  5 1 
[DBG]  Update the agent path 26 | Original local length: 4 | New local length: 4
[DBG]  agent 26 t=0 => decoded (sx,sy)=(2,1) => global_id=627
[DBG]  agent 26 t=1 => decoded (sx,sy)=(3,1) => global_id=659
[DBG]  agent 26 t=2 => decoded (sx,sy)=(4,1) => global_id=691
[DBG]  agent 26 t=3 => decoded (sx,sy)=(4,2) => global_id=692
[DBG]  Complete path of agent 26:
[DBG]    Original: 13 14 46 47 48 49 81 82 83 84 116 148 180 212 244 276 308 309 341 373 405 437 469 501 533 565 597 629 628 627 659 691 692 724 756 755 
[DBG]    New:     13 14 46 47 48 49 81 82 83 84 116 148 180 212 244 276 308 309 341 373 405 437 469 501 533 565 597 629 628 627 659 691 692 724 756 755 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 13 14 46 47 48 49 81 82 83 84 116 148 180 212 244 276 308 309 341 373 405 437 469 501 533 565 597 629 628 
[DBG]    Local path (in submap): 627 659 691 692 
[DBG]    Suffix (out of submap): 724 756 755 
[DBG]  Original agent path length 26 je: 36
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 0: 13, 14, 46, 47, 48, 49, 81, 82, 83, 84, 116, 148, 180, 212, 244, 276, 308, 309, 341, 373, 405, 437, 469, 501, 533, 565, 597, 629, 628, 627, 659, 691, 692, 724, 756, 755, 
[DBG]  Path for agent 26 updated, resulting length: 36
[DBG]  Update the agent path 28 | Original local length: 12 | New local length: 3
[DBG]  agent 28 t=0 => decoded (sx,sy)=(2,2) => global_id=628
[DBG]  agent 28 t=1 => decoded (sx,sy)=(3,2) => global_id=660
[DBG]  agent 28 t=2 => decoded (sx,sy)=(4,2) => global_id=692
[DBG]  Complete path of agent 28:
[DBG]    Original: 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 660 628 628 628 628 628 628 628 629 629 597 596 597 629 628 627 627 627 627 627 627 627 627 659 691 692 724 756 757 725 726 727 
[DBG]    New:     661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 660 628 628 628 628 628 628 628 629 629 597 596 597 629 628 660 692 724 756 757 725 726 727 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 660 628 628 628 628 628 628 628 629 629 597 596 597 629 
[DBG]    Local path (in submap): 628 660 692 724 756 757 725 726 727 
[DBG]    Suffix (out of submap): 
[DBG]  Original agent path length 28 je: 47
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 1: 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 660, 628, 628, 628, 628, 628, 628, 628, 629, 629, 597, 596, 597, 629, 628, 660, 692, 724, 756, 757, 725, 726, 727, 
[DBG]  Path for agent 28 updated, resulting length: 38
[DBG]  Update the agent path 53 | Original local length: 2 | New local length: 2
[DBG]  agent 53 t=0 => decoded (sx,sy)=(4,1) => global_id=691
[DBG]  agent 53 t=1 => decoded (sx,sy)=(4,2) => global_id=692
[DBG]  Complete path of agent 53:
[DBG]    Original: 84 84 116 148 148 180 212 212 212 212 244 276 277 309 309 341 373 405 405 437 469 501 533 565 597 596 628 627 659 691 692 724 756 788 820 821 
[DBG]    New:     84 84 116 148 148 180 212 212 212 212 244 276 277 309 309 341 373 405 405 437 469 501 533 565 597 596 628 627 659 691 692 724 756 788 820 821 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 84 84 116 148 148 180 212 212 212 212 244 276 277 309 309 341 373 405 405 437 469 501 533 565 597 596 628 627 659 
[DBG]    Local path (in submap): 691 692 
[DBG]    Suffix (out of submap): 724 756 788 820 821 
[DBG]  Original agent path length 53 je: 36
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 2: 84, 84, 116, 148, 148, 180, 212, 212, 212, 212, 244, 276, 277, 309, 309, 341, 373, 405, 405, 437, 469, 501, 533, 565, 597, 596, 628, 627, 659, 691, 692, 724, 756, 788, 820, 821, 
[DBG]  Path for agent 53 updated, resulting length: 36
[DBG]  Update the agent path 61 | Original local length: 2 | New local length: 2
[DBG]  agent 61 t=0 => decoded (sx,sy)=(1,3) => global_id=597
[DBG]  agent 61 t=1 => decoded (sx,sy)=(0,3) => global_id=565
[DBG]  Complete path of agent 61:
[DBG]    Original: 813 813 813 845 845 845 845 845 845 845 813 814 782 783 783 782 750 718 719 720 688 656 657 658 659 660 660 628 596 597 565 533 534 502 470 438 439 407 375 343 344 345 313 
[DBG]    New:     813 813 813 845 845 845 845 845 845 845 813 814 782 783 783 782 750 718 719 720 688 656 657 658 659 660 660 628 596 597 565 533 534 502 470 438 439 407 375 343 344 345 313 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 813 813 813 845 845 845 845 845 845 845 813 814 782 783 783 782 750 718 719 720 688 656 657 658 659 660 660 628 596 
[DBG]    Local path (in submap): 597 565 
[DBG]    Suffix (out of submap): 533 534 502 470 438 439 407 375 343 344 345 313 
[DBG]  Original agent path length 61 je: 43
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 3: 813, 813, 813, 845, 845, 845, 845, 845, 845, 845, 813, 814, 782, 783, 783, 782, 750, 718, 719, 720, 688, 656, 657, 658, 659, 660, 660, 628, 596, 597, 565, 533, 534, 502, 470, 438, 439, 407, 375, 343, 344, 345, 313, 
[DBG]  Path for agent 61 updated, resulting length: 43
[DBG]  Paths successfully updated.
[DBG]  (LNS.cpp) New path for agent 26: 
[DBG]  13, 14, 46, 47, 48, 49, 81, 82, 83, 84, 116, 148, 180, 212, 244, 276, 308, 309, 341, 373, 405, 437, 469, 501, 533, 565, 597, 629, 628, 627, 659, 691, 692, 724, 756, 755, 
[DBG]  (LNS.cpp) New path for agent 28: 
[DBG]  661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 660, 628, 628, 628, 628, 628, 628, 628, 629, 629, 597, 596, 597, 629, 628, 660, 692, 724, 756, 757, 725, 726, 727, 
[DBG]  (LNS.cpp) New path for agent 53: 
[DBG]  84, 84, 116, 148, 148, 180, 212, 212, 212, 212, 244, 276, 277, 309, 309, 341, 373, 405, 405, 437, 469, 501, 533, 565, 597, 596, 628, 627, 659, 691, 692, 724, 756, 788, 820, 821, 
[DBG]  (LNS.cpp) New path for agent 61: 
[DBG]  813, 813, 813, 845, 845, 845, 845, 845, 845, 845, 813, 814, 782, 783, 783, 782, 750, 718, 719, 720, 688, 656, 657, 658, 659, 660, 660, 628, 596, 597, 565, 533, 534, 502, 470, 438, 439, 407, 375, 343, 344, 345, 313, 
[DBG]  Delta value: 0.056962
[DBG]  Rewarding metric index = 0
[DBG]  component_weights = {0.440717, 0.136031, 0.181601, 0.241652}
[DBG]  opSuccess value: 1
[STAT] neighbor.sum_of_costs before recomputation: 149
[STAT] neighbor.old_sum_of_costs before recomputation: 158
[STAT] sum_of_costs before recomputation: 4468
[DBG]  Validate solution immediately after SAT success.
[WARNING] Problem after SAT: Vertex conflict between agents 28 and 11 at location 757 at timestep 34
[DBG]  [DEBUG] Attempting immediate repair via init_lns because problem occurred after SAT (should be applied only for conflicts...).
[DBG]  [DEBUG] Passing 150 agents to init_lns (skip=true).
[DBG]  [DEBUG] path_table contents for selected agents (neighbor.agents):
[DBG]    Agent 26 => controlling path length=36
[DBG]    Agent 28 => controlling path length=38
[DBG]    Agent 53 => controlling path length=36
[DBG]    Agent 61 => controlling path length=43
[DBG]  hodnota skip_initial_solution=1
[DBG]  We skip initialSolution => call buildCollisionData()
[DBG]  buildCollisionData() called â€“ skip_initial_solution case.
[DBG]  Agents.size()=150, collision_graph.size()=150
[DBG]  agent 11 => updateCollidingPairs => foundCollision
[DBG]  agent 28 => updateCollidingPairs => foundCollision
[DBG]  agent 42 => updateCollidingPairs => foundCollision
[DBG]  agent 148 => updateCollidingPairs => foundCollision
[DBG]  Conflicting agent pairs:
[DBG]  agent 11 is in conflict with agent 28
[DBG]  agent 28 is in conflict with agent 42
[DBG]  agent 28 is in conflict with agent 148
[DBG]  buildCollisionData() => sum_of_costs=4459, num_of_colliding_pairs=3
[DBG]  buildCollisionData done => sum_of_costs=4459, num_of_colliding_pairs=3
[DBG]  sum_of_cost hodnota: 4459
[DBG]  After skip/init build => iteration_stats.back(): sum_of_costs=4459, collisions=3
[DEBUG] Using default neighbor generation strategy for conflicts: 1
	InitLNS(PP): runtime = 0.00194975, iterations = 2, colliding pairs = 0, initial colliding pairs = 3, solution cost = 4470, initial solution cost = 4459, failed iterations = 0
[DBG]  [DEBUG] init_lns->sum_of_costs after init_lns->run: 4470
[DBG]  [DEBUG] sum_of_costs after assignment from init_lns->run: 4470
[DBG]  Recomputing sum_of_cost by dividing neighbor.sum_of_costs and neighbor.old_sum_of_costs
[STAT] sum_of_costs after recomputation: 4470
[STAT] Iteration 40
[DBG]  Using SAT operator (destroy+repair SAT).
[DBG]  ====================
[DBG]  SAT destroy operator called.
[DBG]  SAT heuristic: 2
[DBG]  key_agent_id: 28
[DBG]  key_agent_id global path length: 45
[DBG]  Submap content (global positions):
[DBG]  562 563 564 565 566 
[DBG]  594 595 596 597 598 
[DBG]  626 627 628 629 630 
[DBG]  658 659 660 661 662 
[DBG]  690 691 692 693 694 
[DBG]  Map content with agents and obstacles:
[DBG]  X . X . . 
[DBG]  . X . A X 
[DBG]  X . A . X 
[DBG]  A . A . X 
[DBG]  X . . X X 
[DBG]  content of the map structure that we pass to the SAT solver:
[DBG]  -1  1  -1  1  1  
[DBG]  1  -1  1  1  -1  
[DBG]  -1  1  1  1  -1  
[DBG]  1  1  1  1  -1  
[DBG]  -1  1  1  -1  -1  
[DBG]  Identifying agents in a submap for rescheduling (when key_agent is there at the time 35):
[DBG]  Agent 28 found intervals in the sub-map:
[DBG]   [0..40]
[DBG]  Agent 28 (interval in submap: [0..40]) contains time 35, added to replan.
[DBG]  Agent 42 found intervals in the sub-map:
[DBG]   [33..39]
[DBG]  Agent 42 (interval in submap: [33..39]) contains time 35, added to replan.
[DBG]  Agent 55 found intervals in the sub-map:
[DBG]   [38..42]
[DBG]  Agent 55 is not in sub-map at time 35 (intervals: 
[DBG]  [38..42] )
[DBG]  Agent 59 found intervals in the sub-map:
[DBG]   [35..38]
[DBG]  Agent 59 (interval in submap: [35..38]) contains time 35, added to replan.
[DBG]  Agent 69 found intervals in the sub-map:
[DBG]   [34..41]
[DBG]  Agent 69 (interval in submap: [34..41]) contains time 35, added to replan.
[DBG]  Agent 28 | Start (global): 628 -> (local): (2, 2) at time 35 | Goal (global): 692 -> (local): (4, 2) at time 40
[DBG]  Agent 42 | Start (global): 660 -> (local): (3, 2) at time 35 | Goal (global): 692 -> (local): (4, 2) at time 39
[DBG]  Agent 59 | Start (global): 658 -> (local): (3, 0) at time 35 | Goal (global): 692 -> (local): (4, 2) at time 38
[DBG]  Agent 69 | Start (global): 597 -> (local): (1, 3) at time 35 | Goal (global): 692 -> (local): (4, 2) at time 41
[DBG]  [REPAIR] SAT destroy operator called.
[DBG]  [REPAIR] SAT operator â€“ launching subproblem FOR OPTIMIZATION.
[DBG]  Creating local paths (sx, sy) in the submap for T_sync = 35
[DBG]    Agent 28 (global paths from T=35 to 40) has local path: (2,2) (2,2) (3,2) (3,1) (3,2) (4,2) 
[DBG]    Agent 42 (global paths from T=35 to 39) has local path: (3,2) (3,2) (3,1) (4,1) (4,2) 
[DBG]    Agent 59 (global paths from T=35 to 38) has local path: (3,0) (3,1) (4,1) (4,2) 
[DBG]    Agent 69 (global paths from T=35 to 41) has local path: (1,3) (2,3) (2,2) (2,1) (3,1) (4,1) (4,2) 
[DBG]  Checking input data for SAT solver:
[DBG]    - Number of agents to replan: 4
[DBG]  Agent 28 has the original local path length: 6 => Start (2,2), Goal (4,2)
[DBG]  Agent 42 has the original local path length: 5 => Start (3,2), Goal (4,2)
[DBG]  Agent 59 has the original local path length: 4 => Start (3,0), Goal (4,2)
[DBG]  Agent 69 has the original local path length: 7 => Start (1,3), Goal (4,2)
[DBG]  Start position: (2, 2), (3, 2), (3, 0), (1, 3), 
[DBG]  Goal position: (4, 2), (4, 2), (4, 2), (4, 2), 
[DBG]  SAT instance and solver created.
Currently solving
Instance name: scen
Map name: map
Encoding used: disappear_at_goal
SAT solver used: Kissat
Optimizing function: sum of costs
Number of agents: 4
Mks LB: 5
SoC LB: 14
Delta: 0
Remaining time: 300000 [ms]

Vertex conflict! Agents 0, 1, timestep 3, location 0
Swapping conflict! Agents 0, 1, timestep 3, edge (0,0)
Vertex conflict! Agents 0, 1, timestep 4, location 0
Vertex conflict! Agents 0, 2, timestep 4, location 0
Vertex conflict! Agents 1, 2, timestep 4, location 0
Found plan [agents = 4] [timesteps = 5]
Agent #0 : 7 11 14 0 0 
Agent #1 : 11 14 0 0 0 
Agent #2 : 9 10 13 14 0 
Agent #3 : 5 8 12 11 14 

[STAT] Solver returned: 0
[DBG]  Agent (index) 28 | New local path (submap idx):
[DBG]  7 11 14 
[DBG]  Agent (index) 42 | New local path (submap idx):
[DBG]  11 14 
[DBG]  Agent (index) 59 | New local path (submap idx):
[DBG]  9 10 13 14 
[DBG]  Agent (index) 69 | New local path (submap idx):
[DBG]  5 8 12 11 14 
[DBG]  Update the agent path 28 | Original local length: 6 | New local length: 3
[DBG]  agent 28 t=0 => decoded (sx,sy)=(2,2) => global_id=628
[DBG]  agent 28 t=1 => decoded (sx,sy)=(3,2) => global_id=660
[DBG]  agent 28 t=2 => decoded (sx,sy)=(4,2) => global_id=692
[DBG]  Complete path of agent 28:
[DBG]    Original: 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 660 628 628 628 628 628 628 628 629 629 597 596 597 629 628 628 628 628 628 628 628 628 660 659 660 692 724 725 726 727 
[DBG]    New:     661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 660 628 628 628 628 628 628 628 629 629 597 596 597 629 628 628 628 628 628 628 628 660 692 724 725 726 727 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 660 628 628 628 628 628 628 628 629 629 597 596 597 629 628 628 628 628 628 628 
[DBG]    Local path (in submap): 628 660 692 724 725 726 
[DBG]    Suffix (out of submap): 727 
[DBG]  Original agent path length 28 je: 45
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 0: 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 660, 628, 628, 628, 628, 628, 628, 628, 629, 629, 597, 596, 597, 629, 628, 628, 628, 628, 628, 628, 628, 660, 692, 724, 725, 726, 727, 
[DBG]  Path for agent 28 updated, resulting length: 42
[DBG]  Update the agent path 42 | Original local length: 5 | New local length: 2
[DBG]  agent 42 t=0 => decoded (sx,sy)=(3,2) => global_id=660
[DBG]  agent 42 t=1 => decoded (sx,sy)=(4,2) => global_id=692
[DBG]  Complete path of agent 42:
[DBG]    Original: 224 192 193 194 226 258 259 260 261 293 294 295 327 328 360 361 362 363 395 427 428 429 430 431 432 464 496 528 529 561 593 625 657 658 659 660 660 659 691 692 724 725 726 727 759 
[DBG]    New:     224 192 193 194 226 258 259 260 261 293 294 295 327 328 360 361 362 363 395 427 428 429 430 431 432 464 496 528 529 561 593 625 657 658 659 660 692 724 725 726 727 759 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 224 192 193 194 226 258 259 260 261 293 294 295 327 328 360 361 362 363 395 427 428 429 430 431 432 464 496 528 529 561 593 625 657 658 659 
[DBG]    Local path (in submap): 660 692 724 725 726 
[DBG]    Suffix (out of submap): 727 759 
[DBG]  Original agent path length 42 je: 45
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 1: 224, 192, 193, 194, 226, 258, 259, 260, 261, 293, 294, 295, 327, 328, 360, 361, 362, 363, 395, 427, 428, 429, 430, 431, 432, 464, 496, 528, 529, 561, 593, 625, 657, 658, 659, 660, 692, 724, 725, 726, 727, 759, 
[DBG]  Path for agent 42 updated, resulting length: 42
[DBG]  Update the agent path 59 | Original local length: 4 | New local length: 4
[DBG]  agent 59 t=0 => decoded (sx,sy)=(3,0) => global_id=658
[DBG]  agent 59 t=1 => decoded (sx,sy)=(3,1) => global_id=659
[DBG]  agent 59 t=2 => decoded (sx,sy)=(4,1) => global_id=691
[DBG]  agent 59 t=3 => decoded (sx,sy)=(4,2) => global_id=692
[DBG]  Complete path of agent 59:
[DBG]    Original: 256 257 258 259 260 261 293 294 295 296 328 360 361 393 425 457 458 458 458 459 460 428 429 429 430 462 463 464 496 528 529 561 593 625 657 658 659 691 692 724 756 788 787 819 851 883 884 916 917 
[DBG]    New:     256 257 258 259 260 261 293 294 295 296 328 360 361 393 425 457 458 458 458 459 460 428 429 429 430 462 463 464 496 528 529 561 593 625 657 658 659 691 692 724 756 788 787 819 851 883 884 916 917 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 256 257 258 259 260 261 293 294 295 296 328 360 361 393 425 457 458 458 458 459 460 428 429 429 430 462 463 464 496 528 529 561 593 625 657 
[DBG]    Local path (in submap): 658 659 691 692 
[DBG]    Suffix (out of submap): 724 756 788 787 819 851 883 884 916 917 
[DBG]  Original agent path length 59 je: 49
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 2: 256, 257, 258, 259, 260, 261, 293, 294, 295, 296, 328, 360, 361, 393, 425, 457, 458, 458, 458, 459, 460, 428, 429, 429, 430, 462, 463, 464, 496, 528, 529, 561, 593, 625, 657, 658, 659, 691, 692, 724, 756, 788, 787, 819, 851, 883, 884, 916, 917, 
[DBG]  Path for agent 59 updated, resulting length: 49
[DBG]  Update the agent path 69 | Original local length: 7 | New local length: 5
[DBG]  agent 69 t=0 => decoded (sx,sy)=(1,3) => global_id=597
[DBG]  agent 69 t=1 => decoded (sx,sy)=(2,3) => global_id=629
[DBG]  agent 69 t=2 => decoded (sx,sy)=(3,3) => global_id=661
[DBG]  agent 69 t=3 => decoded (sx,sy)=(3,2) => global_id=660
[DBG]  agent 69 t=4 => decoded (sx,sy)=(4,2) => global_id=692
[DBG]  Complete path of agent 69:
[DBG]    Original: 4 5 37 69 70 71 72 73 105 106 138 139 140 172 173 205 237 269 301 333 365 366 398 430 462 463 464 465 466 467 468 469 501 533 565 597 629 628 627 659 691 692 724 756 788 820 
[DBG]    New:     4 5 37 69 70 71 72 73 105 106 138 139 140 172 173 205 237 269 301 333 365 366 398 430 462 463 464 465 466 467 468 469 501 533 565 597 629 661 660 692 724 756 788 820 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 4 5 37 69 70 71 72 73 105 106 138 139 140 172 173 205 237 269 301 333 365 366 398 430 462 463 464 465 466 467 468 469 501 533 565 
[DBG]    Local path (in submap): 597 629 661 660 692 724 756 
[DBG]    Suffix (out of submap): 788 820 
[DBG]  Original agent path length 69 je: 46
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 3: 4, 5, 37, 69, 70, 71, 72, 73, 105, 106, 138, 139, 140, 172, 173, 205, 237, 269, 301, 333, 365, 366, 398, 430, 462, 463, 464, 465, 466, 467, 468, 469, 501, 533, 565, 597, 629, 661, 660, 692, 724, 756, 788, 820, 
[DBG]  Path for agent 69 updated, resulting length: 44
[DBG]  Paths successfully updated.
[DBG]  (LNS.cpp) New path for agent 28: 
[DBG]  661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 660, 628, 628, 628, 628, 628, 628, 628, 629, 629, 597, 596, 597, 629, 628, 628, 628, 628, 628, 628, 628, 660, 692, 724, 725, 726, 727, 
[DBG]  (LNS.cpp) New path for agent 42: 
[DBG]  224, 192, 193, 194, 226, 258, 259, 260, 261, 293, 294, 295, 327, 328, 360, 361, 362, 363, 395, 427, 428, 429, 430, 431, 432, 464, 496, 528, 529, 561, 593, 625, 657, 658, 659, 660, 692, 724, 725, 726, 727, 759, 
[DBG]  (LNS.cpp) New path for agent 59: 
[DBG]  256, 257, 258, 259, 260, 261, 293, 294, 295, 296, 328, 360, 361, 393, 425, 457, 458, 458, 458, 459, 460, 428, 429, 429, 430, 462, 463, 464, 496, 528, 529, 561, 593, 625, 657, 658, 659, 691, 692, 724, 756, 788, 787, 819, 851, 883, 884, 916, 917, 
[DBG]  (LNS.cpp) New path for agent 69: 
[DBG]  4, 5, 37, 69, 70, 71, 72, 73, 105, 106, 138, 139, 140, 172, 173, 205, 237, 269, 301, 333, 365, 366, 398, 430, 462, 463, 464, 465, 466, 467, 468, 469, 501, 533, 565, 597, 629, 661, 660, 692, 724, 756, 788, 820, 
[DBG]  Delta value: 0.0441989
[DBG]  Rewarding metric index = 2
[DBG]  component_weights = {0.432921, 0.133625, 0.196077, 0.237377}
[DBG]  opSuccess value: 1
[STAT] neighbor.sum_of_costs before recomputation: 173
[STAT] neighbor.old_sum_of_costs before recomputation: 181
[STAT] sum_of_costs before recomputation: 4470
[DBG]  Validate solution immediately after SAT success.
[WARNING] Problem after SAT: Vertex conflict between agents 28 and 148 at location 692 at timestep 37
[DBG]  [DEBUG] Attempting immediate repair via init_lns because problem occurred after SAT (should be applied only for conflicts...).
[DBG]  [DEBUG] Passing 150 agents to init_lns (skip=true).
[DBG]  [DEBUG] path_table contents for selected agents (neighbor.agents):
[DBG]    Agent 28 => controlling path length=42
[DBG]    Agent 42 => controlling path length=42
[DBG]    Agent 59 => controlling path length=49
[DBG]    Agent 69 => controlling path length=44
[DBG]  hodnota skip_initial_solution=1
[DBG]  We skip initialSolution => call buildCollisionData()
[DBG]  buildCollisionData() called â€“ skip_initial_solution case.
[DBG]  Agents.size()=150, collision_graph.size()=150
[DBG]  agent 28 => updateCollidingPairs => foundCollision
[DBG]  agent 42 => updateCollidingPairs => foundCollision
[DBG]  agent 69 => updateCollidingPairs => foundCollision
[DBG]  agent 148 => updateCollidingPairs => foundCollision
[DBG]  Conflicting agent pairs:
[DBG]  agent 28 is in conflict with agent 148
[DBG]  agent 42 is in conflict with agent 148
[DBG]  agent 69 is in conflict with agent 148
[DBG]  buildCollisionData() => sum_of_costs=4462, num_of_colliding_pairs=3
[DBG]  buildCollisionData done => sum_of_costs=4462, num_of_colliding_pairs=3
[DBG]  sum_of_cost hodnota: 4462
[DBG]  After skip/init build => iteration_stats.back(): sum_of_costs=4462, collisions=3
[DEBUG] Using default neighbor generation strategy for conflicts: 1
[DEBUG] Using default neighbor generation strategy for conflicts: 1
[DEBUG] Using default neighbor generation strategy for conflicts: 0
	InitLNS(PP): runtime = 0.00930229, iterations = 4, colliding pairs = 0, initial colliding pairs = 3, solution cost = 4475, initial solution cost = 4462, failed iterations = 0
[DBG]  [DEBUG] init_lns->sum_of_costs after init_lns->run: 4475
[DBG]  [DEBUG] sum_of_costs after assignment from init_lns->run: 4475
[DBG]  Recomputing sum_of_cost by dividing neighbor.sum_of_costs and neighbor.old_sum_of_costs
[STAT] sum_of_costs after recomputation: 4475
[STAT] Iteration 41
[DBG]  Using SAT operator (destroy+repair SAT).
[DBG]  ====================
[DBG]  SAT destroy operator called.
[DBG]  SAT heuristic: 2
[DBG]  key_agent_id: 28
[DBG]  key_agent_id global path length: 42
[DBG]  Submap content (global positions):
[DBG]  595 596 597 598 599 
[DBG]  627 628 629 630 631 
[DBG]  659 660 661 662 663 
[DBG]  691 692 693 694 695 
[DBG]  723 724 725 726 727 
[DBG]  Map content with agents and obstacles:
[DBG]  X . . X . 
[DBG]  . . . X . 
[DBG]  . . A X X 
[DBG]  . A X X X 
[DBG]  X . . . . 
[DBG]  content of the map structure that we pass to the SAT solver:
[DBG]  -1  1  1  -1  1  
[DBG]  1  1  1  -1  1  
[DBG]  1  1  1  -1  -1  
[DBG]  1  1  -1  -1  -1  
[DBG]  -1  1  1  1  1  
[DBG]  Identifying agents in a submap for rescheduling (when key_agent is there at the time 2):
[DBG]  Agent 7 found intervals in the sub-map:
[DBG]  
[DBG]  Agent 7 is not in sub-map at time 2 (intervals: 
[DBG]  )
[DBG]  Agent 28 found intervals in the sub-map:
[DBG]   [0..41]
[DBG]  Agent 28 (interval in submap: [0..41]) contains time 2, added to replan.
[DBG]  Agent 108 found intervals in the sub-map:
[DBG]   [0..3]
[DBG]  Agent 108 (interval in submap: [0..3]) contains time 2, added to replan.
[DBG]  Agent 28 | Start (global): 661 -> (local): (2, 2) at time 2 | Goal (global): 727 -> (local): (4, 4) at time 41
[DBG]  Agent 108 | Start (global): 692 -> (local): (3, 1) at time 2 | Goal (global): 724 -> (local): (4, 1) at time 3
[DBG]  [REPAIR] SAT destroy operator called.
[DBG]  [REPAIR] SAT operator â€“ launching subproblem FOR OPTIMIZATION.
[DBG]  Creating local paths (sx, sy) in the submap for T_sync = 2
[DBG]    Agent 28 (global paths from T=2 to 41) has local path: (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,1) (2,1) (2,1) (2,1) (2,1) (2,1) (2,1) (2,1) (3,1) (4,1) (4,2) (4,3) (4,4) 
[DBG]    Agent 108 (global paths from T=2 to 3) has local path: (3,1) (4,1) 
[DBG]  Checking input data for SAT solver:
[DBG]    - Number of agents to replan: 2
[DBG]  Agent 28 has the original local path length: 40 => Start (2,2), Goal (4,4)
[DBG]  Agent 108 has the original local path length: 2 => Start (3,1), Goal (4,1)
[DBG]  Start position: (2, 2), (3, 1), 
[DBG]  Goal position: (4, 4), (4, 1), 
[DBG]  SAT instance and solver created.
Currently solving
Instance name: scen
Map name: map
Encoding used: disappear_at_goal
SAT solver used: Kissat
Optimizing function: sum of costs
Number of agents: 2
Mks LB: 7
SoC LB: 9
Delta: 0
Remaining time: 300000 [ms]

Found plan [agents = 2] [timesteps = 7]
Agent #0 : 9 8 11 12 13 14 15 
Agent #1 : 11 12 0 0 0 0 0 

[STAT] Solver returned: 0
[DBG]  Agent (index) 28 | New local path (submap idx):
[DBG]  9 8 11 12 13 14 15 
[DBG]  Agent (index) 108 | New local path (submap idx):
[DBG]  11 12 
[DBG]  Update the agent path 28 | Original local length: 40 | New local length: 7
[DBG]  agent 28 t=0 => decoded (sx,sy)=(2,2) => global_id=661
[DBG]  agent 28 t=1 => decoded (sx,sy)=(2,1) => global_id=660
[DBG]  agent 28 t=2 => decoded (sx,sy)=(3,1) => global_id=692
[DBG]  agent 28 t=3 => decoded (sx,sy)=(4,1) => global_id=724
[DBG]  agent 28 t=4 => decoded (sx,sy)=(4,2) => global_id=725
[DBG]  agent 28 t=5 => decoded (sx,sy)=(4,3) => global_id=726
[DBG]  agent 28 t=6 => decoded (sx,sy)=(4,4) => global_id=727
[DBG]  Complete path of agent 28:
[DBG]    Original: 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 660 660 660 660 660 660 660 660 692 724 725 726 727 
[DBG]    New:     661 661 661 660 692 724 725 726 727 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 661 661 
[DBG]    Local path (in submap): 661 660 692 724 725 726 727 
[DBG]    Suffix (out of submap): 
[DBG]  Original agent path length 28 je: 42
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 0: 661, 661, 661, 660, 692, 724, 725, 726, 727, 
[DBG]  Path for agent 28 updated, resulting length: 9
[DBG]  Update the agent path 108 | Original local length: 2 | New local length: 2
[DBG]  agent 108 t=0 => decoded (sx,sy)=(3,1) => global_id=692
[DBG]  agent 108 t=1 => decoded (sx,sy)=(4,1) => global_id=724
[DBG]  Complete path of agent 108:
[DBG]    Original: 628 660 692 724 756 788 788 820 821 822 823 855 856 888 889 921 922 954 955 956 988 989 1021 
[DBG]    New:     628 660 692 724 756 788 788 820 821 822 823 855 856 888 889 921 922 954 955 956 988 989 1021 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 628 660 
[DBG]    Local path (in submap): 692 724 
[DBG]    Suffix (out of submap): 756 788 788 820 821 822 823 855 856 888 889 921 922 954 955 956 988 989 1021 
[DBG]  Original agent path length 108 je: 23
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 1: 628, 660, 692, 724, 756, 788, 788, 820, 821, 822, 823, 855, 856, 888, 889, 921, 922, 954, 955, 956, 988, 989, 1021, 
[DBG]  Path for agent 108 updated, resulting length: 23
[DBG]  Paths successfully updated.
[DBG]  (LNS.cpp) New path for agent 28: 
[DBG]  661, 661, 661, 660, 692, 724, 725, 726, 727, 
[DBG]  (LNS.cpp) New path for agent 108: 
[DBG]  628, 660, 692, 724, 756, 788, 788, 820, 821, 822, 823, 855, 856, 888, 889, 921, 922, 954, 955, 956, 988, 989, 1021, 
[DBG]  Delta value: 0.52381
[DBG]  Rewarding metric index = 0
[DBG]  component_weights = {0.550468, 0.105926, 0.155433, 0.188172}
[DBG]  opSuccess value: 1
[STAT] neighbor.sum_of_costs before recomputation: 30
[STAT] neighbor.old_sum_of_costs before recomputation: 63
[STAT] sum_of_costs before recomputation: 4475
[DBG]  Validate solution immediately after SAT success.
[WARNING] Problem after SAT: Target conflict: agent 42 (len 41) traverses target of agent 28 (len 8) at location 727 at timestep 40
[DBG]  [DEBUG] Attempting immediate repair via init_lns because problem occurred after SAT (should be applied only for conflicts...).
[DBG]  [DEBUG] Passing 150 agents to init_lns (skip=true).
[DBG]  [DEBUG] path_table contents for selected agents (neighbor.agents):
[DBG]    Agent 28 => controlling path length=9
[DBG]    Agent 108 => controlling path length=23
[DBG]  hodnota skip_initial_solution=1
[DBG]  We skip initialSolution => call buildCollisionData()
[DBG]  buildCollisionData() called â€“ skip_initial_solution case.
[DBG]  Agents.size()=150, collision_graph.size()=150
[DBG]  agent 28 => updateCollidingPairs => foundCollision
[DBG]  agent 42 => updateCollidingPairs => foundCollision
[DBG]  agent 135 => updateCollidingPairs => foundCollision
[DBG]  Conflicting agent pairs:
[DBG]  agent 28 is in conflict with agent 42
[DBG]  agent 28 is in conflict with agent 135
[DBG]  buildCollisionData() => sum_of_costs=4442, num_of_colliding_pairs=2
[DBG]  buildCollisionData done => sum_of_costs=4442, num_of_colliding_pairs=2
[DBG]  sum_of_cost hodnota: 4442
[DBG]  After skip/init build => iteration_stats.back(): sum_of_costs=4442, collisions=2
[DEBUG] Using default neighbor generation strategy for conflicts: 2
[DEBUG] Using default neighbor generation strategy for conflicts: 2
	InitLNS(PP): runtime = 0.00295575, iterations = 3, colliding pairs = 0, initial colliding pairs = 2, solution cost = 4479, initial solution cost = 4442, failed iterations = 0
[DBG]  [DEBUG] init_lns->sum_of_costs after init_lns->run: 4479
[DBG]  [DEBUG] sum_of_costs after assignment from init_lns->run: 4479
[DBG]  Recomputing sum_of_cost by dividing neighbor.sum_of_costs and neighbor.old_sum_of_costs
[STAT] sum_of_costs after recomputation: 4479
[STAT] Iteration 42
[DBG]  Using SAT operator (destroy+repair SAT).
[DBG]  ====================
[DBG]  SAT destroy operator called.
[DBG]  SAT heuristic: 2
[DBG]  key_agent_id: 28
[DBG]  key_agent_id global path length: 42
[DBG]  Submap content (global positions):
[DBG]  660 661 662 663 664 
[DBG]  692 693 694 695 696 
[DBG]  724 725 726 727 728 
[DBG]  756 757 758 759 760 
[DBG]  788 789 790 791 792 
[DBG]  Map content with agents and obstacles:
[DBG]  . . X X . 
[DBG]  . X X X . 
[DBG]  A . A A . 
[DBG]  A . X . X 
[DBG]  A X . X . 
[DBG]  content of the map structure that we pass to the SAT solver:
[DBG]  1  1  -1  -1  1  
[DBG]  1  -1  -1  -1  1  
[DBG]  1  1  1  1  1  
[DBG]  1  1  -1  1  -1  
[DBG]  1  -1  1  -1  1  
[DBG]  Identifying agents in a submap for rescheduling (when key_agent is there at the time 40):
[DBG]  Agent 11 found intervals in the sub-map:
[DBG]   [23..28]
[DBG]  Agent 11 is not in sub-map at time 40 (intervals: 
[DBG]  [23..28] )
[DBG]  Agent 28 found intervals in the sub-map:
[DBG]   [0..41]
[DBG]  Agent 28 (interval in submap: [0..41]) contains time 40, added to replan.
[DBG]  Agent 42 found intervals in the sub-map:
[DBG]   [36..41]
[DBG]  Agent 42 (interval in submap: [36..41]) contains time 40, added to replan.
[DBG]  Agent 45 found intervals in the sub-map:
[DBG]   [35..40]
[DBG]  Agent 45 (interval in submap: [35..40]) contains time 40, added to replan.
[DBG]  Agent 55 found intervals in the sub-map:
[DBG]   [41..41]
[DBG]  Agent 55 is not in sub-map at time 40 (intervals: 
[DBG]  [41..41] )
[DBG]  Agent 59 found intervals in the sub-map:
[DBG]   [38..41]
[DBG]  Agent 59 (interval in submap: [38..41]) contains time 40, added to replan.
[DBG]  Agent 69 found intervals in the sub-map:
[DBG]   [39..42]
[DBG]  Agent 69 (interval in submap: [39..42]) contains time 40, added to replan.
[DBG]  Agent 148 found intervals in the sub-map:
[DBG]   [37..37]
[DBG]  Agent 148 is not in sub-map at time 40 (intervals: 
[DBG]  [37..37] )
[DBG]  Agent 28 | Start (global): 726 -> (local): (2, 2) at time 40 | Goal (global): 727 -> (local): (2, 3) at time 41
[DBG]  Agent 42 | Start (global): 727 -> (local): (2, 3) at time 40 | Goal (global): 759 -> (local): (3, 3) at time 41
[DBG]  Agent 45 | Start (global): 788 -> (local): (4, 0) at time 40 | Goal (global): 788 -> (local): (4, 0) at time 40
[DBG]  Agent 59 | Start (global): 756 -> (local): (3, 0) at time 40 | Goal (global): 788 -> (local): (4, 0) at time 41
[DBG]  Agent 69 | Start (global): 724 -> (local): (2, 0) at time 40 | Goal (global): 788 -> (local): (4, 0) at time 42
[DBG]  [REPAIR] SAT destroy operator called.
[DBG]  [REPAIR] SAT operator â€“ launching subproblem FOR OPTIMIZATION.
[DBG]  Creating local paths (sx, sy) in the submap for T_sync = 40
[DBG]    Agent 28 (global paths from T=40 to 41) has local path: (2,2) (2,3) 
[DBG]    Agent 42 (global paths from T=40 to 41) has local path: (2,3) (3,3) 
[DBG]    Agent 45 (global paths from T=40 to 40) has local path: (4,0) 
[DBG]    Agent 59 (global paths from T=40 to 41) has local path: (3,0) (4,0) 
[DBG]    Agent 69 (global paths from T=40 to 42) has local path: (2,0) (3,0) (4,0) 
[DBG]  Checking input data for SAT solver:
[DBG]    - Number of agents to replan: 5
[DBG]  Agent 28 has the original local path length: 2 => Start (2,2), Goal (2,3)
[DBG]  Agent 42 has the original local path length: 2 => Start (2,3), Goal (3,3)
[DBG]  Agent 45 has the original local path length: 1 => Start (4,0), Goal (4,0)
[DBG]  Agent 59 has the original local path length: 2 => Start (3,0), Goal (4,0)
[DBG]  Agent 69 has the original local path length: 3 => Start (2,0), Goal (4,0)
[DBG]  Start position: (2, 2), (2, 3), (4, 0), (3, 0), (2, 0), 
[DBG]  Goal position: (2, 3), (3, 3), (4, 0), (4, 0), (4, 0), 
[DBG]  SAT instance and solver created.
Currently solving
Instance name: scen
Map name: map
Encoding used: disappear_at_goal
SAT solver used: Kissat
Optimizing function: sum of costs
Number of agents: 5
Mks LB: 3
SoC LB: 10
Delta: 0
Remaining time: 300000 [ms]

Vertex conflict! Agents 0, 1, timestep 2, location 0
Vertex conflict! Agents 0, 2, timestep 2, location 0
Vertex conflict! Agents 0, 3, timestep 2, location 0
Vertex conflict! Agents 1, 2, timestep 2, location 0
Vertex conflict! Agents 1, 3, timestep 2, location 0
Vertex conflict! Agents 2, 3, timestep 2, location 0
Found plan [agents = 5] [timesteps = 3]
Agent #0 : 7 8 0 
Agent #1 : 8 12 0 
Agent #2 : 13 0 0 
Agent #3 : 10 13 0 
Agent #4 : 5 10 13 

[STAT] Solver returned: 0
[DBG]  Agent (index) 28 | New local path (submap idx):
[DBG]  7 8 
[DBG]  Agent (index) 42 | New local path (submap idx):
[DBG]  8 12 
[DBG]  Agent (index) 45 | New local path (submap idx):
[DBG]  13 
[DBG]  Agent (index) 59 | New local path (submap idx):
[DBG]  10 13 
[DBG]  Agent (index) 69 | New local path (submap idx):
[DBG]  5 10 13 
[DBG]  Update the agent path 28 | Original local length: 2 | New local length: 2
[DBG]  agent 28 t=0 => decoded (sx,sy)=(2,2) => global_id=726
[DBG]  agent 28 t=1 => decoded (sx,sy)=(2,3) => global_id=727
[DBG]  Complete path of agent 28:
[DBG]    Original: 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 660 660 660 660 692 724 756 757 757 757 725 726 727 
[DBG]    New:     661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 660 660 660 660 692 724 756 757 757 757 725 726 727 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 660 660 660 660 692 724 756 757 757 757 725 
[DBG]    Local path (in submap): 726 727 
[DBG]    Suffix (out of submap): 
[DBG]  Original agent path length 28 je: 42
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 0: 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 660, 660, 660, 660, 692, 724, 756, 757, 757, 757, 725, 726, 727, 
[DBG]  Path for agent 28 updated, resulting length: 42
[DBG]  Update the agent path 42 | Original local length: 2 | New local length: 2
[DBG]  agent 42 t=0 => decoded (sx,sy)=(2,3) => global_id=727
[DBG]  agent 42 t=1 => decoded (sx,sy)=(3,3) => global_id=759
[DBG]  Complete path of agent 42:
[DBG]    Original: 224 192 193 194 226 258 259 260 261 293 294 295 296 328 360 361 362 363 395 427 428 429 430 431 432 464 496 528 529 561 593 625 657 658 659 691 692 724 725 726 727 759 
[DBG]    New:     224 192 193 194 226 258 259 260 261 293 294 295 296 328 360 361 362 363 395 427 428 429 430 431 432 464 496 528 529 561 593 625 657 658 659 691 692 724 725 726 727 759 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 224 192 193 194 226 258 259 260 261 293 294 295 296 328 360 361 362 363 395 427 428 429 430 431 432 464 496 528 529 561 593 625 657 658 659 691 692 724 725 726 
[DBG]    Local path (in submap): 727 759 
[DBG]    Suffix (out of submap): 
[DBG]  Original agent path length 42 je: 42
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 1: 224, 192, 193, 194, 226, 258, 259, 260, 261, 293, 294, 295, 296, 328, 360, 361, 362, 363, 395, 427, 428, 429, 430, 431, 432, 464, 496, 528, 529, 561, 593, 625, 657, 658, 659, 691, 692, 724, 725, 726, 727, 759, 
[DBG]  Path for agent 42 updated, resulting length: 42
[DBG]  Update the agent path 45 | Original local length: 1 | New local length: 1
[DBG]  agent 45 t=0 => decoded (sx,sy)=(4,0) => global_id=788
[DBG]  Complete path of agent 45:
[DBG]    Original: 153 185 217 249 281 313 312 312 312 312 311 343 343 375 407 439 439 439 439 439 438 470 502 534 534 534 534 534 534 534 534 566 565 597 629 661 660 692 724 756 788 787 786 818 850 849 
[DBG]    New:     153 185 217 249 281 313 312 312 312 312 311 343 343 375 407 439 439 439 439 439 438 470 502 534 534 534 534 534 534 534 534 566 565 597 629 661 660 692 724 756 788 787 786 818 850 849 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 153 185 217 249 281 313 312 312 312 312 311 343 343 375 407 439 439 439 439 439 438 470 502 534 534 534 534 534 534 534 534 566 565 597 629 661 660 692 724 756 
[DBG]    Local path (in submap): 788 
[DBG]    Suffix (out of submap): 787 786 818 850 849 
[DBG]  Original agent path length 45 je: 46
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 2: 153, 185, 217, 249, 281, 313, 312, 312, 312, 312, 311, 343, 343, 375, 407, 439, 439, 439, 439, 439, 438, 470, 502, 534, 534, 534, 534, 534, 534, 534, 534, 566, 565, 597, 629, 661, 660, 692, 724, 756, 788, 787, 786, 818, 850, 849, 
[DBG]  Path for agent 45 updated, resulting length: 46
[DBG]  Update the agent path 59 | Original local length: 2 | New local length: 2
[DBG]  agent 59 t=0 => decoded (sx,sy)=(3,0) => global_id=756
[DBG]  agent 59 t=1 => decoded (sx,sy)=(4,0) => global_id=788
[DBG]  Complete path of agent 59:
[DBG]    Original: 256 257 289 321 353 354 355 387 419 420 421 422 423 455 456 457 458 458 459 460 460 428 429 429 430 462 463 464 496 528 529 561 593 625 657 658 659 691 692 724 756 788 820 819 851 883 884 885 917 
[DBG]    New:     256 257 289 321 353 354 355 387 419 420 421 422 423 455 456 457 458 458 459 460 460 428 429 429 430 462 463 464 496 528 529 561 593 625 657 658 659 691 692 724 756 788 820 819 851 883 884 885 917 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 256 257 289 321 353 354 355 387 419 420 421 422 423 455 456 457 458 458 459 460 460 428 429 429 430 462 463 464 496 528 529 561 593 625 657 658 659 691 692 724 
[DBG]    Local path (in submap): 756 788 
[DBG]    Suffix (out of submap): 820 819 851 883 884 885 917 
[DBG]  Original agent path length 59 je: 49
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 3: 256, 257, 289, 321, 353, 354, 355, 387, 419, 420, 421, 422, 423, 455, 456, 457, 458, 458, 459, 460, 460, 428, 429, 429, 430, 462, 463, 464, 496, 528, 529, 561, 593, 625, 657, 658, 659, 691, 692, 724, 756, 788, 820, 819, 851, 883, 884, 885, 917, 
[DBG]  Path for agent 59 updated, resulting length: 49
[DBG]  Update the agent path 69 | Original local length: 3 | New local length: 3
[DBG]  agent 69 t=0 => decoded (sx,sy)=(2,0) => global_id=724
[DBG]  agent 69 t=1 => decoded (sx,sy)=(3,0) => global_id=756
[DBG]  agent 69 t=2 => decoded (sx,sy)=(4,0) => global_id=788
[DBG]  Complete path of agent 69:
[DBG]    Original: 4 5 37 69 70 71 72 73 74 106 138 139 140 172 204 236 268 269 301 333 365 366 398 430 431 432 432 432 464 496 528 529 561 593 625 657 658 659 691 692 724 756 788 820 
[DBG]    New:     4 5 37 69 70 71 72 73 74 106 138 139 140 172 204 236 268 269 301 333 365 366 398 430 431 432 432 432 464 496 528 529 561 593 625 657 658 659 691 692 724 756 788 820 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 4 5 37 69 70 71 72 73 74 106 138 139 140 172 204 236 268 269 301 333 365 366 398 430 431 432 432 432 464 496 528 529 561 593 625 657 658 659 691 692 
[DBG]    Local path (in submap): 724 756 788 
[DBG]    Suffix (out of submap): 820 
[DBG]  Original agent path length 69 je: 44
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 4: 4, 5, 37, 69, 70, 71, 72, 73, 74, 106, 138, 139, 140, 172, 204, 236, 268, 269, 301, 333, 365, 366, 398, 430, 431, 432, 432, 432, 464, 496, 528, 529, 561, 593, 625, 657, 658, 659, 691, 692, 724, 756, 788, 820, 
[DBG]  Path for agent 69 updated, resulting length: 44
[DBG]  Paths successfully updated.
[DBG]  (LNS.cpp) New path for agent 28: 
[DBG]  661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 660, 660, 660, 660, 692, 724, 756, 757, 757, 757, 725, 726, 727, 
[DBG]  (LNS.cpp) New path for agent 42: 
[DBG]  224, 192, 193, 194, 226, 258, 259, 260, 261, 293, 294, 295, 296, 328, 360, 361, 362, 363, 395, 427, 428, 429, 430, 431, 432, 464, 496, 528, 529, 561, 593, 625, 657, 658, 659, 691, 692, 724, 725, 726, 727, 759, 
[DBG]  (LNS.cpp) New path for agent 45: 
[DBG]  153, 185, 217, 249, 281, 313, 312, 312, 312, 312, 311, 343, 343, 375, 407, 439, 439, 439, 439, 439, 438, 470, 502, 534, 534, 534, 534, 534, 534, 534, 534, 566, 565, 597, 629, 661, 660, 692, 724, 756, 788, 787, 786, 818, 850, 849, 
[DBG]  (LNS.cpp) New path for agent 59: 
[DBG]  256, 257, 289, 321, 353, 354, 355, 387, 419, 420, 421, 422, 423, 455, 456, 457, 458, 458, 459, 460, 460, 428, 429, 429, 430, 462, 463, 464, 496, 528, 529, 561, 593, 625, 657, 658, 659, 691, 692, 724, 756, 788, 820, 819, 851, 883, 884, 885, 917, 
[DBG]  (LNS.cpp) New path for agent 69: 
[DBG]  4, 5, 37, 69, 70, 71, 72, 73, 74, 106, 138, 139, 140, 172, 204, 236, 268, 269, 301, 333, 365, 366, 398, 430, 431, 432, 432, 432, 464, 496, 528, 529, 561, 593, 625, 657, 658, 659, 691, 692, 724, 756, 788, 820, 
[DBG]  Delta value: 0
[DBG]  Rewarding metric index = 1
[DBG]  component_weights = {0.547416, 0.110883, 0.154571, 0.187129}
[DBG]  opSuccess value: 1
[STAT] neighbor.sum_of_costs before recomputation: 218
[STAT] neighbor.old_sum_of_costs before recomputation: 218
[STAT] sum_of_costs before recomputation: 4479
[DBG]  Validate solution immediately after SAT success.
[DBG]  No problems after SAT replan.
[DBG]  Recomputing sum_of_cost by dividing neighbor.sum_of_costs and neighbor.old_sum_of_costs
[STAT] sum_of_costs after recomputation: 4479
[STAT] Iteration 43
[DBG]  Using SAT operator (destroy+repair SAT).
[DBG]  ====================
[DBG]  SAT destroy operator called.
[DBG]  SAT heuristic: 2
[DBG]  key_agent_id: 28
[DBG]  key_agent_id global path length: 42
[DBG]  Submap content (global positions):
[DBG]  595 596 597 598 599 
[DBG]  627 628 629 630 631 
[DBG]  659 660 661 662 663 
[DBG]  691 692 693 694 695 
[DBG]  723 724 725 726 727 
[DBG]  Map content with agents and obstacles:
[DBG]  X . . X . 
[DBG]  . . . X . 
[DBG]  A . A X X 
[DBG]  . . X X X 
[DBG]  X A A . . 
[DBG]  content of the map structure that we pass to the SAT solver:
[DBG]  -1  1  1  -1  1  
[DBG]  1  1  1  -1  1  
[DBG]  1  1  1  -1  -1  
[DBG]  1  1  -1  -1  -1  
[DBG]  -1  1  1  1  1  
[DBG]  Identifying agents in a submap for rescheduling (when key_agent is there at the time 10):
[DBG]  Agent 28 found intervals in the sub-map:
[DBG]   [0..34] [39..41]
[DBG]  Agent 28 (interval in submap: [0..34]) contains time 10, added to replan.
[DBG]  Agent 74 found intervals in the sub-map:
[DBG]  
[DBG]  Agent 74 is not in sub-map at time 10 (intervals: 
[DBG]  )
[DBG]  Agent 86 found intervals in the sub-map:
[DBG]   [10..14]
[DBG]  Agent 86 (interval in submap: [10..14]) contains time 10, added to replan.
[DBG]  Agent 89 found intervals in the sub-map:
[DBG]   [5..10]
[DBG]  Agent 89 (interval in submap: [5..10]) contains time 10, added to replan.
[DBG]  Agent 91 found intervals in the sub-map:
[DBG]  
[DBG]  Agent 91 is not in sub-map at time 10 (intervals: 
[DBG]  )
[DBG]  Agent 131 found intervals in the sub-map:
[DBG]  
[DBG]  Agent 131 is not in sub-map at time 10 (intervals: 
[DBG]  )
[DBG]  Agent 135 found intervals in the sub-map:
[DBG]   [4..4] [8..14]
[DBG]  Agent 135 (interval in submap: [8..14]) contains time 10, added to replan.
[DBG]  Agent 28 | Start (global): 661 -> (local): (2, 2) at time 10 | Goal (global): 724 -> (local): (4, 1) at time 34
[DBG]  Agent 86 | Start (global): 659 -> (local): (2, 0) at time 10 | Goal (global): 597 -> (local): (0, 2) at time 14
[DBG]  Agent 89 | Start (global): 724 -> (local): (4, 1) at time 10 | Goal (global): 724 -> (local): (4, 1) at time 10
[DBG]  Agent 135 | Start (global): 725 -> (local): (4, 2) at time 10 | Goal (global): 659 -> (local): (2, 0) at time 14
[DBG]  [REPAIR] SAT destroy operator called.
[DBG]  [REPAIR] SAT operator â€“ launching subproblem FOR OPTIMIZATION.
[DBG]  Creating local paths (sx, sy) in the submap for T_sync = 10
[DBG]    Agent 28 (global paths from T=10 to 34) has local path: (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,1) (2,1) (2,1) (2,1) (3,1) (4,1) 
[DBG]    Agent 86 (global paths from T=10 to 14) has local path: (2,0) (1,0) (1,1) (0,1) (0,2) 
[DBG]    Agent 89 (global paths from T=10 to 10) has local path: (4,1) 
[DBG]    Agent 135 (global paths from T=10 to 14) has local path: (4,2) (4,1) (3,1) (3,0) (2,0) 
[DBG]  Checking input data for SAT solver:
[DBG]    - Number of agents to replan: 4
[DBG]  Agent 28 has the original local path length: 25 => Start (2,2), Goal (4,1)
[DBG]  Agent 86 has the original local path length: 5 => Start (2,0), Goal (0,2)
[DBG]  Agent 89 has the original local path length: 1 => Start (4,1), Goal (4,1)
[DBG]  Agent 135 has the original local path length: 5 => Start (4,2), Goal (2,0)
[DBG]  Start position: (2, 2), (2, 0), (4, 1), (4, 2), 
[DBG]  Goal position: (4, 1), (0, 2), (4, 1), (2, 0), 
[DBG]  SAT instance and solver created.
Currently solving
Instance name: scen
Map name: map
Encoding used: disappear_at_goal
SAT solver used: Kissat
Optimizing function: sum of costs
Number of agents: 4
Mks LB: 5
SoC LB: 15
Delta: 0
Remaining time: 300000 [ms]

[STAT] Solver returned: -1
[DBG]  SAT solver failed.
[STAT] SAT solver failed to find a valid solution.
[DBG]  ====================
[DBG]  SAT destroy operator called.
[DBG]  SAT heuristic: 2
[DBG]  key_agent_id: 28
[DBG]  key_agent_id global path length: 42
[DBG]  Submap content (global positions):
[DBG]  595 596 597 598 599 
[DBG]  627 628 629 630 631 
[DBG]  659 660 661 662 663 
[DBG]  691 692 693 694 695 
[DBG]  723 724 725 726 727 
[DBG]  Map content with agents and obstacles:
[DBG]  X A A X . 
[DBG]  A A . X . 
[DBG]  A A A X X 
[DBG]  A A X X X 
[DBG]  X . . . . 
[DBG]  content of the map structure that we pass to the SAT solver:
[DBG]  -1  1  1  -1  1  
[DBG]  1  1  1  -1  1  
[DBG]  1  1  1  -1  -1  
[DBG]  1  1  -1  -1  -1  
[DBG]  -1  1  1  1  1  
[DBG]  Identifying agents in a submap for rescheduling (when key_agent is there at the time 26):
[DBG]  Agent 11 found intervals in the sub-map:
[DBG]   [25..29]
[DBG]  Agent 11 (interval in submap: [25..29]) contains time 26, added to replan.
[DBG]  Agent 26 found intervals in the sub-map:
[DBG]   [26..33]
[DBG]  Agent 26 (interval in submap: [26..33]) contains time 26, added to replan.
[DBG]  Agent 28 found intervals in the sub-map:
[DBG]   [0..34] [39..41]
[DBG]  Agent 28 (interval in submap: [0..34]) contains time 26, added to replan.
[DBG]  Agent 30 found intervals in the sub-map:
[DBG]  
[DBG]  Agent 30 is not in sub-map at time 26 (intervals: 
[DBG]  )
[DBG]  Agent 44 found intervals in the sub-map:
[DBG]   [23..27]
[DBG]  Agent 44 (interval in submap: [23..27]) contains time 26, added to replan.
[DBG]  Agent 53 found intervals in the sub-map:
[DBG]   [24..31]
[DBG]  Agent 53 (interval in submap: [24..31]) contains time 26, added to replan.
[DBG]  Agent 57 found intervals in the sub-map:
[DBG]   [21..28]
[DBG]  Agent 57 (interval in submap: [21..28]) contains time 26, added to replan.
[DBG]  Agent 61 found intervals in the sub-map:
[DBG]   [24..29]
[DBG]  Agent 61 (interval in submap: [24..29]) contains time 26, added to replan.
[DBG]  Agent 100 found intervals in the sub-map:
[DBG]   [22..26]
[DBG]  Agent 100 (interval in submap: [22..26]) contains time 26, added to replan.
[DBG]  Agent 148 found intervals in the sub-map:
[DBG]   [19..27] [32..37]
[DBG]  Agent 148 (interval in submap: [19..27]) contains time 26, added to replan.
[DBG]  Agent 11 | Start (global): 692 -> (local): (3, 1) at time 26 | Goal (global): 659 -> (local): (2, 0) at time 29
[DBG]  Agent 26 | Start (global): 597 -> (local): (0, 2) at time 26 | Goal (global): 724 -> (local): (4, 1) at time 33
[DBG]  Agent 28 | Start (global): 661 -> (local): (2, 2) at time 26 | Goal (global): 724 -> (local): (4, 1) at time 34
[DBG]  Agent 44 | Start (global): 627 -> (local): (1, 0) at time 26 | Goal (global): 659 -> (local): (2, 0) at time 27
[DBG]  Agent 53 | Start (global): 628 -> (local): (1, 1) at time 26 | Goal (global): 724 -> (local): (4, 1) at time 31
[DBG]  Agent 57 | Start (global): 691 -> (local): (3, 0) at time 26 | Goal (global): 724 -> (local): (4, 1) at time 28
[DBG]  Agent 61 | Start (global): 660 -> (local): (2, 1) at time 26 | Goal (global): 597 -> (local): (0, 2) at time 29
[DBG]  Agent 100 | Start (global): 659 -> (local): (2, 0) at time 26 | Goal (global): 659 -> (local): (2, 0) at time 26
[DBG]  Agent 148 | Start (global): 596 -> (local): (0, 1) at time 26 | Goal (global): 597 -> (local): (0, 2) at time 27
[DBG]  [REPAIR] SAT destroy operator called.
[DBG]  [REPAIR] SAT operator â€“ launching subproblem FOR OPTIMIZATION.
[DBG]  Creating local paths (sx, sy) in the submap for T_sync = 26
[DBG]    Agent 11 (global paths from T=26 to 29) has local path: (3,1) (2,1) (2,1) (2,0) 
[DBG]    Agent 26 (global paths from T=26 to 33) has local path: (0,2) (1,2) (1,1) (1,0) (2,0) (3,0) (3,1) (4,1) 
[DBG]    Agent 28 (global paths from T=26 to 34) has local path: (2,2) (2,2) (2,2) (2,1) (2,1) (2,1) (2,1) (3,1) (4,1) 
[DBG]    Agent 44 (global paths from T=26 to 27) has local path: (1,0) (2,0) 
[DBG]    Agent 53 (global paths from T=26 to 31) has local path: (1,1) (1,0) (2,0) (3,0) (3,1) (4,1) 
[DBG]    Agent 57 (global paths from T=26 to 28) has local path: (3,0) (3,1) (4,1) 
[DBG]    Agent 61 (global paths from T=26 to 29) has local path: (2,1) (1,1) (0,1) (0,2) 
[DBG]    Agent 100 (global paths from T=26 to 26) has local path: (2,0) 
[DBG]    Agent 148 (global paths from T=26 to 27) has local path: (0,1) (0,2) 
[DBG]  Checking input data for SAT solver:
[DBG]    - Number of agents to replan: 9
[DBG]  Agent 11 has the original local path length: 4 => Start (3,1), Goal (2,0)
[DBG]  Agent 26 has the original local path length: 8 => Start (0,2), Goal (4,1)
[DBG]  Agent 28 has the original local path length: 9 => Start (2,2), Goal (4,1)
[DBG]  Agent 44 has the original local path length: 2 => Start (1,0), Goal (2,0)
[DBG]  Agent 53 has the original local path length: 6 => Start (1,1), Goal (4,1)
[DBG]  Agent 57 has the original local path length: 3 => Start (3,0), Goal (4,1)
[DBG]  Agent 61 has the original local path length: 4 => Start (2,1), Goal (0,2)
[DBG]  Agent 100 has the original local path length: 1 => Start (2,0), Goal (2,0)
[DBG]  Agent 148 has the original local path length: 2 => Start (0,1), Goal (0,2)
[DBG]  Start position: (3, 1), (0, 2), (2, 2), (1, 0), (1, 1), (3, 0), (2, 1), (2, 0), (0, 1), 
[DBG]  Goal position: (2, 0), (4, 1), (4, 1), (2, 0), (4, 1), (4, 1), (0, 2), (2, 0), (0, 2), 
[DBG]  SAT instance and solver created.
Currently solving
Instance name: scen
Map name: map
Encoding used: disappear_at_goal
SAT solver used: Kissat
Optimizing function: sum of costs
Number of agents: 9
Mks LB: 6
SoC LB: 29
Delta: 0
Remaining time: 300000 [ms]

[STAT] Solver returned: -1
[DBG]  SAT solver failed.
[STAT] SAT solver failed to find a valid solution.
[DBG]  ====================
[DBG]  SAT destroy operator called.
[DBG]  SAT heuristic: 2
[DBG]  key_agent_id: 28
[DBG]  key_agent_id global path length: 42
[DBG]  Submap content (global positions):
[DBG]  658 659 660 661 662 
[DBG]  690 691 692 693 694 
[DBG]  722 723 724 725 726 
[DBG]  754 755 756 757 758 
[DBG]  786 787 788 789 790 
[DBG]  Map content with agents and obstacles:
[DBG]  . A . . X 
[DBG]  X . . X X 
[DBG]  . X A . . 
[DBG]  X . A . X 
[DBG]  . . . X . 
[DBG]  content of the map structure that we pass to the SAT solver:
[DBG]  1  1  1  1  -1  
[DBG]  -1  1  1  -1  -1  
[DBG]  1  -1  1  1  1  
[DBG]  -1  1  1  1  -1  
[DBG]  1  1  1  -1  1  
[DBG]  Identifying agents in a submap for rescheduling (when key_agent is there at the time 34):
[DBG]  Agent 26 found intervals in the sub-map:
[DBG]   [30..35]
[DBG]  Agent 26 (interval in submap: [30..35]) contains time 34, added to replan.
[DBG]  Agent 28 found intervals in the sub-map:
[DBG]   [0..40]
[DBG]  Agent 28 (interval in submap: [0..40]) contains time 34, added to replan.
[DBG]  Agent 42 found intervals in the sub-map:
[DBG]   [33..39]
[DBG]  Agent 42 (interval in submap: [33..39]) contains time 34, added to replan.
[DBG]  Agent 45 found intervals in the sub-map:
[DBG]   [35..42]
[DBG]  Agent 45 is not in sub-map at time 34 (intervals: 
[DBG]  [35..42] )
[DBG]  Agent 148 found intervals in the sub-map:
[DBG]   [18..19] [37..37]
[DBG]  Agent 148 is not in sub-map at time 34 (intervals: 
[DBG]  [18..19] [37..37] )
[DBG]  Agent 26 | Start (global): 756 -> (local): (3, 2) at time 34 | Goal (global): 755 -> (local): (3, 1) at time 35
[DBG]  Agent 28 | Start (global): 724 -> (local): (2, 2) at time 34 | Goal (global): 726 -> (local): (2, 4) at time 40
[DBG]  Agent 42 | Start (global): 659 -> (local): (0, 1) at time 34 | Goal (global): 726 -> (local): (2, 4) at time 39
[DBG]  [REPAIR] SAT destroy operator called.
[DBG]  [REPAIR] SAT operator â€“ launching subproblem FOR OPTIMIZATION.
[DBG]  Creating local paths (sx, sy) in the submap for T_sync = 34
[DBG]    Agent 26 (global paths from T=34 to 35) has local path: (3,2) (3,1) 
[DBG]    Agent 28 (global paths from T=34 to 40) has local path: (2,2) (3,2) (3,3) (3,3) (3,3) (2,3) (2,4) 
[DBG]    Agent 42 (global paths from T=34 to 39) has local path: (0,1) (1,1) (1,2) (2,2) (2,3) (2,4) 
[DBG]  Checking input data for SAT solver:
[DBG]    - Number of agents to replan: 3
[DBG]  Agent 26 has the original local path length: 2 => Start (3,2), Goal (3,1)
[DBG]  Agent 28 has the original local path length: 7 => Start (2,2), Goal (2,4)
[DBG]  Agent 42 has the original local path length: 6 => Start (0,1), Goal (2,4)
[DBG]  Start position: (3, 2), (2, 2), (0, 1), 
[DBG]  Goal position: (3, 1), (2, 4), (2, 4), 
[DBG]  SAT instance and solver created.
Currently solving
Instance name: scen
Map name: map
Encoding used: disappear_at_goal
SAT solver used: Kissat
Optimizing function: sum of costs
Number of agents: 3
Mks LB: 6
SoC LB: 11
Delta: 0
Remaining time: 300000 [ms]

Vertex conflict! Agents 0, 1, timestep 3, location 0
Swapping conflict! Agents 0, 1, timestep 3, edge (0,0)
Vertex conflict! Agents 0, 1, timestep 4, location 0
Swapping conflict! Agents 0, 1, timestep 4, edge (0,0)
Vertex conflict! Agents 0, 1, timestep 5, location 0
Found plan [agents = 3] [timesteps = 6]
Agent #0 : 11 10 0 0 0 0 
Agent #1 : 7 8 9 0 0 0 
Agent #2 : 1 4 5 7 8 9 

[STAT] Solver returned: 0
[DBG]  Agent (index) 26 | New local path (submap idx):
[DBG]  11 10 
[DBG]  Agent (index) 28 | New local path (submap idx):
[DBG]  7 8 9 
[DBG]  Agent (index) 42 | New local path (submap idx):
[DBG]  1 4 5 7 8 9 
[DBG]  Update the agent path 26 | Original local length: 2 | New local length: 2
[DBG]  agent 26 t=0 => decoded (sx,sy)=(3,2) => global_id=756
[DBG]  agent 26 t=1 => decoded (sx,sy)=(3,1) => global_id=755
[DBG]  Complete path of agent 26:
[DBG]    Original: 13 14 46 47 48 49 81 82 83 84 116 148 180 212 244 276 308 309 341 373 405 437 469 501 533 565 597 629 628 627 659 691 692 724 756 755 
[DBG]    New:     13 14 46 47 48 49 81 82 83 84 116 148 180 212 244 276 308 309 341 373 405 437 469 501 533 565 597 629 628 627 659 691 692 724 756 755 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 13 14 46 47 48 49 81 82 83 84 116 148 180 212 244 276 308 309 341 373 405 437 469 501 533 565 597 629 628 627 659 691 692 724 
[DBG]    Local path (in submap): 756 755 
[DBG]    Suffix (out of submap): 
[DBG]  Original agent path length 26 je: 36
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 0: 13, 14, 46, 47, 48, 49, 81, 82, 83, 84, 116, 148, 180, 212, 244, 276, 308, 309, 341, 373, 405, 437, 469, 501, 533, 565, 597, 629, 628, 627, 659, 691, 692, 724, 756, 755, 
[DBG]  Path for agent 26 updated, resulting length: 36
[DBG]  Update the agent path 28 | Original local length: 7 | New local length: 3
[DBG]  agent 28 t=0 => decoded (sx,sy)=(2,2) => global_id=724
[DBG]  agent 28 t=1 => decoded (sx,sy)=(2,3) => global_id=725
[DBG]  agent 28 t=2 => decoded (sx,sy)=(2,4) => global_id=726
[DBG]  Complete path of agent 28:
[DBG]    Original: 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 660 660 660 660 692 724 756 757 757 757 725 726 727 
[DBG]    New:     661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 660 660 660 660 692 724 725 726 727 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 660 660 660 660 692 
[DBG]    Local path (in submap): 724 725 726 727 
[DBG]    Suffix (out of submap): 
[DBG]  Original agent path length 28 je: 42
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 1: 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 660, 660, 660, 660, 692, 724, 725, 726, 727, 
[DBG]  Path for agent 28 updated, resulting length: 38
[DBG]  Update the agent path 42 | Original local length: 6 | New local length: 6
[DBG]  agent 42 t=0 => decoded (sx,sy)=(0,1) => global_id=659
[DBG]  agent 42 t=1 => decoded (sx,sy)=(1,1) => global_id=691
[DBG]  agent 42 t=2 => decoded (sx,sy)=(1,2) => global_id=692
[DBG]  agent 42 t=3 => decoded (sx,sy)=(2,2) => global_id=724
[DBG]  agent 42 t=4 => decoded (sx,sy)=(2,3) => global_id=725
[DBG]  agent 42 t=5 => decoded (sx,sy)=(2,4) => global_id=726
[DBG]  Complete path of agent 42:
[DBG]    Original: 224 192 193 194 226 258 259 260 261 293 294 295 296 328 360 361 362 363 395 427 428 429 430 431 432 464 496 528 529 561 593 625 657 658 659 691 692 724 725 726 727 759 
[DBG]    New:     224 192 193 194 226 258 259 260 261 293 294 295 296 328 360 361 362 363 395 427 428 429 430 431 432 464 496 528 529 561 593 625 657 658 659 691 692 724 725 726 727 759 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 224 192 193 194 226 258 259 260 261 293 294 295 296 328 360 361 362 363 395 427 428 429 430 431 432 464 496 528 529 561 593 625 657 658 
[DBG]    Local path (in submap): 659 691 692 724 725 726 
[DBG]    Suffix (out of submap): 727 759 
[DBG]  Original agent path length 42 je: 42
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 2: 224, 192, 193, 194, 226, 258, 259, 260, 261, 293, 294, 295, 296, 328, 360, 361, 362, 363, 395, 427, 428, 429, 430, 431, 432, 464, 496, 528, 529, 561, 593, 625, 657, 658, 659, 691, 692, 724, 725, 726, 727, 759, 
[DBG]  Path for agent 42 updated, resulting length: 42
[DBG]  Paths successfully updated.
[DBG]  (LNS.cpp) New path for agent 26: 
[DBG]  13, 14, 46, 47, 48, 49, 81, 82, 83, 84, 116, 148, 180, 212, 244, 276, 308, 309, 341, 373, 405, 437, 469, 501, 533, 565, 597, 629, 628, 627, 659, 691, 692, 724, 756, 755, 
[DBG]  (LNS.cpp) New path for agent 28: 
[DBG]  661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 660, 660, 660, 660, 692, 724, 725, 726, 727, 
[DBG]  (LNS.cpp) New path for agent 42: 
[DBG]  224, 192, 193, 194, 226, 258, 259, 260, 261, 293, 294, 295, 296, 328, 360, 361, 362, 363, 395, 427, 428, 429, 430, 431, 432, 464, 496, 528, 529, 561, 593, 625, 657, 658, 659, 691, 692, 724, 725, 726, 727, 759, 
[DBG]  Delta value: 0.034188
[DBG]  Rewarding metric index = 2
[DBG]  component_weights = {0.540019, 0.109385, 0.165995, 0.1846}
[DBG]  opSuccess value: 1
[STAT] neighbor.sum_of_costs before recomputation: 113
[STAT] neighbor.old_sum_of_costs before recomputation: 117
[STAT] sum_of_costs before recomputation: 4479
[DBG]  Validate solution immediately after SAT success.
[WARNING] Problem after SAT: Target conflict: agent 42 (len 41) traverses target of agent 28 (len 37) at location 727 at timestep 40
[DBG]  [DEBUG] Attempting immediate repair via init_lns because problem occurred after SAT (should be applied only for conflicts...).
[DBG]  [DEBUG] Passing 150 agents to init_lns (skip=true).
[DBG]  [DEBUG] path_table contents for selected agents (neighbor.agents):
[DBG]    Agent 26 => controlling path length=36
[DBG]    Agent 28 => controlling path length=38
[DBG]    Agent 42 => controlling path length=42
[DBG]  hodnota skip_initial_solution=1
[DBG]  We skip initialSolution => call buildCollisionData()
[DBG]  buildCollisionData() called â€“ skip_initial_solution case.
[DBG]  Agents.size()=150, collision_graph.size()=150
[DBG]  agent 28 => updateCollidingPairs => foundCollision
[DBG]  agent 42 => updateCollidingPairs => foundCollision
[DBG]  Conflicting agent pairs:
[DBG]  agent 28 is in conflict with agent 42
[DBG]  buildCollisionData() => sum_of_costs=4475, num_of_colliding_pairs=1
[DBG]  buildCollisionData done => sum_of_costs=4475, num_of_colliding_pairs=1
[DBG]  sum_of_cost hodnota: 4475
[DBG]  After skip/init build => iteration_stats.back(): sum_of_costs=4475, collisions=1
[DEBUG] Using default neighbor generation strategy for conflicts: 0
	InitLNS(PP): runtime = 0.00214146, iterations = 2, colliding pairs = 0, initial colliding pairs = 1, solution cost = 4476, initial solution cost = 4475, failed iterations = 0
[DBG]  [DEBUG] init_lns->sum_of_costs after init_lns->run: 4476
[DBG]  [DEBUG] sum_of_costs after assignment from init_lns->run: 4476
[DBG]  Recomputing sum_of_cost by dividing neighbor.sum_of_costs and neighbor.old_sum_of_costs
[STAT] sum_of_costs after recomputation: 4476
[STAT] Iteration 44
[DBG]  Using SAT operator (destroy+repair SAT).
[DBG]  ====================
[DBG]  SAT destroy operator called.
[DBG]  SAT heuristic: 2
[DBG]  key_agent_id: 28
[DBG]  key_agent_id global path length: 42
[DBG]  Submap content (global positions):
[DBG]  595 596 597 598 599 
[DBG]  627 628 629 630 631 
[DBG]  659 660 661 662 663 
[DBG]  691 692 693 694 695 
[DBG]  723 724 725 726 727 
[DBG]  Map content with agents and obstacles:
[DBG]  X . A X . 
[DBG]  . . . X . 
[DBG]  . . A X X 
[DBG]  . . X X X 
[DBG]  X . A . . 
[DBG]  content of the map structure that we pass to the SAT solver:
[DBG]  -1  1  1  -1  1  
[DBG]  1  1  1  -1  1  
[DBG]  1  1  1  -1  -1  
[DBG]  1  1  -1  -1  -1  
[DBG]  -1  1  1  1  1  
[DBG]  Identifying agents in a submap for rescheduling (when key_agent is there at the time 5):
[DBG]  Agent 28 found intervals in the sub-map:
[DBG]   [0..41]
[DBG]  Agent 28 (interval in submap: [0..41]) contains time 5, added to replan.
[DBG]  Agent 46 found intervals in the sub-map:
[DBG]   [5..7]
[DBG]  Agent 46 (interval in submap: [5..7]) contains time 5, added to replan.
[DBG]  Agent 89 found intervals in the sub-map:
[DBG]   [5..10]
[DBG]  Agent 89 (interval in submap: [5..10]) contains time 5, added to replan.
[DBG]  Agent 28 | Start (global): 661 -> (local): (2, 2) at time 5 | Goal (global): 727 -> (local): (4, 4) at time 41
[DBG]  Agent 46 | Start (global): 725 -> (local): (4, 2) at time 5 | Goal (global): 727 -> (local): (4, 4) at time 7
[DBG]  Agent 89 | Start (global): 597 -> (local): (0, 2) at time 5 | Goal (global): 724 -> (local): (4, 1) at time 10
[DBG]  [REPAIR] SAT destroy operator called.
[DBG]  [REPAIR] SAT operator â€“ launching subproblem FOR OPTIMIZATION.
[DBG]  Creating local paths (sx, sy) in the submap for T_sync = 5
[DBG]    Agent 28 (global paths from T=5 to 41) has local path: (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,1) (2,1) (2,1) (3,1) (4,1) (4,2) (4,3) (4,4) 
[DBG]    Agent 46 (global paths from T=5 to 7) has local path: (4,2) (4,3) (4,4) 
[DBG]    Agent 89 (global paths from T=5 to 10) has local path: (0,2) (0,1) (1,1) (2,1) (3,1) (4,1) 
[DBG]  Checking input data for SAT solver:
[DBG]    - Number of agents to replan: 3
[DBG]  Agent 28 has the original local path length: 37 => Start (2,2), Goal (4,4)
[DBG]  Agent 46 has the original local path length: 3 => Start (4,2), Goal (4,4)
[DBG]  Agent 89 has the original local path length: 6 => Start (0,2), Goal (4,1)
[DBG]  Start position: (2, 2), (4, 2), (0, 2), 
[DBG]  Goal position: (4, 4), (4, 4), (4, 1), 
[DBG]  SAT instance and solver created.
Currently solving
Instance name: scen
Map name: map
Encoding used: disappear_at_goal
SAT solver used: Kissat
Optimizing function: sum of costs
Number of agents: 3
Mks LB: 7
SoC LB: 16
Delta: 0
Remaining time: 300000 [ms]

Vertex conflict! Agents 1, 2, timestep 6, location 0
Found plan [agents = 3] [timesteps = 7]
Agent #0 : 9 8 11 12 13 14 15 
Agent #1 : 13 14 15 0 0 0 0 
Agent #2 : 1 5 9 8 11 12 0 

[STAT] Solver returned: 0
[DBG]  Agent (index) 28 | New local path (submap idx):
[DBG]  9 8 11 12 13 14 15 
[DBG]  Agent (index) 46 | New local path (submap idx):
[DBG]  13 14 15 
[DBG]  Agent (index) 89 | New local path (submap idx):
[DBG]  1 5 9 8 11 12 
[DBG]  Update the agent path 28 | Original local length: 37 | New local length: 7
[DBG]  agent 28 t=0 => decoded (sx,sy)=(2,2) => global_id=661
[DBG]  agent 28 t=1 => decoded (sx,sy)=(2,1) => global_id=660
[DBG]  agent 28 t=2 => decoded (sx,sy)=(3,1) => global_id=692
[DBG]  agent 28 t=3 => decoded (sx,sy)=(4,1) => global_id=724
[DBG]  agent 28 t=4 => decoded (sx,sy)=(4,2) => global_id=725
[DBG]  agent 28 t=5 => decoded (sx,sy)=(4,3) => global_id=726
[DBG]  agent 28 t=6 => decoded (sx,sy)=(4,4) => global_id=727
[DBG]  Complete path of agent 28:
[DBG]    Original: 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 660 660 660 692 724 725 726 727 
[DBG]    New:     661 661 661 661 661 661 660 692 724 725 726 727 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 661 661 661 661 661 
[DBG]    Local path (in submap): 661 660 692 724 725 726 727 
[DBG]    Suffix (out of submap): 
[DBG]  Original agent path length 28 je: 42
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 0: 661, 661, 661, 661, 661, 661, 660, 692, 724, 725, 726, 727, 
[DBG]  Path for agent 28 updated, resulting length: 12
[DBG]  Update the agent path 46 | Original local length: 3 | New local length: 3
[DBG]  agent 46 t=0 => decoded (sx,sy)=(4,2) => global_id=725
[DBG]  agent 46 t=1 => decoded (sx,sy)=(4,3) => global_id=726
[DBG]  agent 46 t=2 => decoded (sx,sy)=(4,4) => global_id=727
[DBG]  Complete path of agent 46:
[DBG]    Original: 786 787 788 756 757 725 726 727 728 696 664 632 633 601 569 570 538 539 507 475 443 411 379 347 348 349 317 285 284 252 
[DBG]    New:     786 787 788 756 757 725 726 727 728 696 664 632 633 601 569 570 538 539 507 475 443 411 379 347 348 349 317 285 284 252 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 786 787 788 756 757 
[DBG]    Local path (in submap): 725 726 727 
[DBG]    Suffix (out of submap): 728 696 664 632 633 601 569 570 538 539 507 475 443 411 379 347 348 349 317 285 284 252 
[DBG]  Original agent path length 46 je: 30
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 1: 786, 787, 788, 756, 757, 725, 726, 727, 728, 696, 664, 632, 633, 601, 569, 570, 538, 539, 507, 475, 443, 411, 379, 347, 348, 349, 317, 285, 284, 252, 
[DBG]  Path for agent 46 updated, resulting length: 30
[DBG]  Update the agent path 89 | Original local length: 6 | New local length: 6
[DBG]  agent 89 t=0 => decoded (sx,sy)=(0,2) => global_id=597
[DBG]  agent 89 t=1 => decoded (sx,sy)=(1,2) => global_id=629
[DBG]  agent 89 t=2 => decoded (sx,sy)=(2,2) => global_id=661
[DBG]  agent 89 t=3 => decoded (sx,sy)=(2,1) => global_id=660
[DBG]  agent 89 t=4 => decoded (sx,sy)=(3,1) => global_id=692
[DBG]  agent 89 t=5 => decoded (sx,sy)=(4,1) => global_id=724
[DBG]  Complete path of agent 89:
[DBG]    Original: 437 469 501 533 565 597 596 628 660 692 724 756 788 788 788 820 821 822 854 886 918 950 982 1014 1015 
[DBG]    New:     437 469 501 533 565 597 629 661 660 692 724 756 788 788 788 820 821 822 854 886 918 950 982 1014 1015 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 437 469 501 533 565 
[DBG]    Local path (in submap): 597 629 661 660 692 724 
[DBG]    Suffix (out of submap): 756 788 788 788 820 821 822 854 886 918 950 982 1014 1015 
[DBG]  Original agent path length 89 je: 25
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 2: 437, 469, 501, 533, 565, 597, 629, 661, 660, 692, 724, 756, 788, 788, 788, 820, 821, 822, 854, 886, 918, 950, 982, 1014, 1015, 
[DBG]  Path for agent 89 updated, resulting length: 25
[DBG]  Paths successfully updated.
[DBG]  (LNS.cpp) New path for agent 28: 
[DBG]  661, 661, 661, 661, 661, 661, 660, 692, 724, 725, 726, 727, 
[DBG]  (LNS.cpp) New path for agent 46: 
[DBG]  786, 787, 788, 756, 757, 725, 726, 727, 728, 696, 664, 632, 633, 601, 569, 570, 538, 539, 507, 475, 443, 411, 379, 347, 348, 349, 317, 285, 284, 252, 
[DBG]  (LNS.cpp) New path for agent 89: 
[DBG]  437, 469, 501, 533, 565, 597, 629, 661, 660, 692, 724, 756, 788, 788, 788, 820, 821, 822, 854, 886, 918, 950, 982, 1014, 1015, 
[DBG]  Delta value: 0.319149
[DBG]  Rewarding metric index = 1
[DBG]  component_weights = {0.518002, 0.145697, 0.159227, 0.177074}
[DBG]  opSuccess value: 1
[STAT] neighbor.sum_of_costs before recomputation: 64
[STAT] neighbor.old_sum_of_costs before recomputation: 94
[STAT] sum_of_costs before recomputation: 4476
[DBG]  Validate solution immediately after SAT success.
[WARNING] Problem after SAT: Target conflict: agent 42 (len 41) traverses target of agent 28 (len 11) at location 727 at timestep 40
[DBG]  [DEBUG] Attempting immediate repair via init_lns because problem occurred after SAT (should be applied only for conflicts...).
[DBG]  [DEBUG] Passing 150 agents to init_lns (skip=true).
[DBG]  [DEBUG] path_table contents for selected agents (neighbor.agents):
[DBG]    Agent 28 => controlling path length=12
[DBG]    Agent 46 => controlling path length=30
[DBG]    Agent 89 => controlling path length=25
[DBG]  hodnota skip_initial_solution=1
[DBG]  We skip initialSolution => call buildCollisionData()
[DBG]  buildCollisionData() called â€“ skip_initial_solution case.
[DBG]  Agents.size()=150, collision_graph.size()=150
[DBG]  agent 28 => updateCollidingPairs => foundCollision
[DBG]  agent 42 => updateCollidingPairs => foundCollision
[DBG]  agent 135 => updateCollidingPairs => foundCollision
[DBG]  Conflicting agent pairs:
[DBG]  agent 28 is in conflict with agent 42
[DBG]  agent 28 is in conflict with agent 135
[DBG]  buildCollisionData() => sum_of_costs=4446, num_of_colliding_pairs=2
[DBG]  buildCollisionData done => sum_of_costs=4446, num_of_colliding_pairs=2
[DBG]  sum_of_cost hodnota: 4446
[DBG]  After skip/init build => iteration_stats.back(): sum_of_costs=4446, collisions=2
[DEBUG] Using default neighbor generation strategy for conflicts: 0
[DEBUG] Using default neighbor generation strategy for conflicts: 2
[DEBUG] Using default neighbor generation strategy for conflicts: 1
[DEBUG] Using default neighbor generation strategy for conflicts: 1
	InitLNS(PP): runtime = 0.00857158, iterations = 5, colliding pairs = 0, initial colliding pairs = 2, solution cost = 4507, initial solution cost = 4446, failed iterations = 0
[DBG]  [DEBUG] init_lns->sum_of_costs after init_lns->run: 4507
[DBG]  [DEBUG] sum_of_costs after assignment from init_lns->run: 4507
[DBG]  Recomputing sum_of_cost by dividing neighbor.sum_of_costs and neighbor.old_sum_of_costs
[STAT] sum_of_costs after recomputation: 4507
[STAT] Iteration 45
[DBG]  Using SAT operator (destroy+repair SAT).
[DBG]  ====================
[DBG]  SAT destroy operator called.
[DBG]  SAT heuristic: 2
[DBG]  key_agent_id: 28
[DBG]  key_agent_id global path length: 50
[DBG]  Submap content (global positions):
[DBG]  788 789 790 791 792 
[DBG]  820 821 822 823 824 
[DBG]  852 853 854 855 856 
[DBG]  884 885 886 887 888 
[DBG]  916 917 918 919 920 
[DBG]  Map content with agents and obstacles:
[DBG]  . X . X . 
[DBG]  . . . . A 
[DBG]  X X A . . 
[DBG]  . . A . . 
[DBG]  . . . . . 
[DBG]  content of the map structure that we pass to the SAT solver:
[DBG]  1  -1  1  -1  1  
[DBG]  1  1  1  1  1  
[DBG]  -1  -1  1  1  1  
[DBG]  1  1  1  1  1  
[DBG]  1  1  1  1  1  
[DBG]  Identifying agents in a submap for rescheduling (when key_agent is there at the time 21):
[DBG]  Agent 1 found intervals in the sub-map:
[DBG]   [14..20]
[DBG]  Agent 1 is not in sub-map at time 21 (intervals: 
[DBG]  [14..20] )
[DBG]  Agent 4 found intervals in the sub-map:
[DBG]   [9..20]
[DBG]  Agent 4 is not in sub-map at time 21 (intervals: 
[DBG]  [9..20] )
[DBG]  Agent 11 found intervals in the sub-map:
[DBG]  
[DBG]  Agent 11 is not in sub-map at time 21 (intervals: 
[DBG]  )
[DBG]  Agent 28 found intervals in the sub-map:
[DBG]   [8..33] [43..43]
[DBG]  Agent 28 (interval in submap: [8..33]) contains time 21, added to replan.
[DBG]  Agent 39 found intervals in the sub-map:
[DBG]   [19..23]
[DBG]  Agent 39 (interval in submap: [19..23]) contains time 21, added to replan.
[DBG]  Agent 70 found intervals in the sub-map:
[DBG]   [9..14]
[DBG]  Agent 70 is not in sub-map at time 21 (intervals: 
[DBG]  [9..14] )
[DBG]  Agent 89 found intervals in the sub-map:
[DBG]   [12..20]
[DBG]  Agent 89 is not in sub-map at time 21 (intervals: 
[DBG]  [12..20] )
[DBG]  Agent 96 found intervals in the sub-map:
[DBG]   [24..29]
[DBG]  Agent 96 is not in sub-map at time 21 (intervals: 
[DBG]  [24..29] )
[DBG]  Agent 102 found intervals in the sub-map:
[DBG]  
[DBG]  Agent 102 is not in sub-map at time 21 (intervals: 
[DBG]  )
[DBG]  Agent 133 found intervals in the sub-map:
[DBG]   [17..22]
[DBG]  Agent 133 (interval in submap: [17..22]) contains time 21, added to replan.
[DBG]  Agent 28 | Start (global): 854 -> (local): (2, 2) at time 21 | Goal (global): 820 -> (local): (1, 0) at time 33
[DBG]  Agent 39 | Start (global): 886 -> (local): (3, 2) at time 21 | Goal (global): 888 -> (local): (3, 4) at time 23
[DBG]  Agent 133 | Start (global): 824 -> (local): (1, 4) at time 21 | Goal (global): 792 -> (local): (0, 4) at time 22
[DBG]  [REPAIR] SAT destroy operator called.
[DBG]  [REPAIR] SAT operator â€“ launching subproblem FOR OPTIMIZATION.
[DBG]  Creating local paths (sx, sy) in the submap for T_sync = 21
[DBG]    Agent 28 (global paths from T=21 to 33) has local path: (2,2) (3,2) (3,3) (3,3) (3,3) (3,3) (3,3) (3,3) (2,3) (2,2) (1,2) (1,1) (1,0) 
[DBG]    Agent 39 (global paths from T=21 to 23) has local path: (3,2) (3,3) (3,4) 
[DBG]    Agent 133 (global paths from T=21 to 22) has local path: (1,4) (0,4) 
[DBG]  Checking input data for SAT solver:
[DBG]    - Number of agents to replan: 3
[DBG]  Agent 28 has the original local path length: 13 => Start (2,2), Goal (1,0)
[DBG]  Agent 39 has the original local path length: 3 => Start (3,2), Goal (3,4)
[DBG]  Agent 133 has the original local path length: 2 => Start (1,4), Goal (0,4)
[DBG]  Start position: (2, 2), (3, 2), (1, 4), 
[DBG]  Goal position: (1, 0), (3, 4), (0, 4), 
[DBG]  SAT instance and solver created.
Currently solving
Instance name: scen
Map name: map
Encoding used: disappear_at_goal
SAT solver used: Kissat
Optimizing function: sum of costs
Number of agents: 3
Mks LB: 4
SoC LB: 9
Delta: 0
Remaining time: 300000 [ms]

Vertex conflict! Agents 1, 2, timestep 3, location 0
Found plan [agents = 3] [timesteps = 4]
Agent #0 : 8 5 4 3 
Agent #1 : 13 14 15 0 
Agent #2 : 7 2 0 0 

[STAT] Solver returned: 0
[DBG]  Agent (index) 28 | New local path (submap idx):
[DBG]  8 5 4 3 
[DBG]  Agent (index) 39 | New local path (submap idx):
[DBG]  13 14 15 
[DBG]  Agent (index) 133 | New local path (submap idx):
[DBG]  7 2 
[DBG]  Update the agent path 28 | Original local length: 13 | New local length: 4
[DBG]  agent 28 t=0 => decoded (sx,sy)=(2,2) => global_id=854
[DBG]  agent 28 t=1 => decoded (sx,sy)=(1,2) => global_id=822
[DBG]  agent 28 t=2 => decoded (sx,sy)=(1,1) => global_id=821
[DBG]  agent 28 t=3 => decoded (sx,sy)=(1,0) => global_id=820
[DBG]  Complete path of agent 28:
[DBG]    Original: 661 661 660 692 692 724 724 756 788 820 821 822 854 854 854 854 854 854 855 854 854 854 886 887 887 887 887 887 887 855 854 822 821 820 819 787 787 787 787 787 787 787 787 788 756 756 724 725 726 727 
[DBG]    New:     661 661 660 692 692 724 724 756 788 820 821 822 854 854 854 854 854 854 855 854 854 854 822 821 820 819 787 787 787 787 787 787 787 787 788 756 756 724 725 726 727 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 661 661 660 692 692 724 724 756 788 820 821 822 854 854 854 854 854 854 855 854 854 
[DBG]    Local path (in submap): 854 822 821 820 819 787 787 787 787 787 787 787 787 
[DBG]    Suffix (out of submap): 788 756 756 724 725 726 727 
[DBG]  Original agent path length 28 je: 50
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 0: 661, 661, 660, 692, 692, 724, 724, 756, 788, 820, 821, 822, 854, 854, 854, 854, 854, 854, 855, 854, 854, 854, 822, 821, 820, 819, 787, 787, 787, 787, 787, 787, 787, 787, 788, 756, 756, 724, 725, 726, 727, 
[DBG]  Path for agent 28 updated, resulting length: 41
[DBG]  Update the agent path 39 | Original local length: 3 | New local length: 3
[DBG]  agent 39 t=0 => decoded (sx,sy)=(3,2) => global_id=886
[DBG]  agent 39 t=1 => decoded (sx,sy)=(3,3) => global_id=887
[DBG]  agent 39 t=2 => decoded (sx,sy)=(3,4) => global_id=888
[DBG]  Complete path of agent 39:
[DBG]    Original: 680 712 713 745 746 747 748 780 812 813 814 846 846 878 879 880 881 882 883 884 885 886 887 888 889 890 891 892 
[DBG]    New:     680 712 713 745 746 747 748 780 812 813 814 846 846 878 879 880 881 882 883 884 885 886 887 888 889 890 891 892 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 680 712 713 745 746 747 748 780 812 813 814 846 846 878 879 880 881 882 883 884 885 
[DBG]    Local path (in submap): 886 887 888 
[DBG]    Suffix (out of submap): 889 890 891 892 
[DBG]  Original agent path length 39 je: 28
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 1: 680, 712, 713, 745, 746, 747, 748, 780, 812, 813, 814, 846, 846, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 889, 890, 891, 892, 
[DBG]  Path for agent 39 updated, resulting length: 28
[DBG]  Update the agent path 133 | Original local length: 2 | New local length: 2
[DBG]  agent 133 t=0 => decoded (sx,sy)=(1,4) => global_id=824
[DBG]  agent 133 t=1 => decoded (sx,sy)=(0,4) => global_id=792
[DBG]  Complete path of agent 133:
[DBG]    Original: 956 956 956 956 956 924 924 892 860 861 861 860 859 858 858 890 889 888 887 855 823 824 792 793 761 729 697 696 664 632 600 601 602 570 538 506 505 473 472 440 440 408 376 
[DBG]    New:     956 956 956 956 956 924 924 892 860 861 861 860 859 858 858 890 889 888 887 855 823 824 792 793 761 729 697 696 664 632 600 601 602 570 538 506 505 473 472 440 440 408 376 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 956 956 956 956 956 924 924 892 860 861 861 860 859 858 858 890 889 888 887 855 823 
[DBG]    Local path (in submap): 824 792 
[DBG]    Suffix (out of submap): 793 761 729 697 696 664 632 600 601 602 570 538 506 505 473 472 440 440 408 376 
[DBG]  Original agent path length 133 je: 43
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 2: 956, 956, 956, 956, 956, 924, 924, 892, 860, 861, 861, 860, 859, 858, 858, 890, 889, 888, 887, 855, 823, 824, 792, 793, 761, 729, 697, 696, 664, 632, 600, 601, 602, 570, 538, 506, 505, 473, 472, 440, 440, 408, 376, 
[DBG]  Path for agent 133 updated, resulting length: 43
[DBG]  Paths successfully updated.
[DBG]  (LNS.cpp) New path for agent 28: 
[DBG]  661, 661, 660, 692, 692, 724, 724, 756, 788, 820, 821, 822, 854, 854, 854, 854, 854, 854, 855, 854, 854, 854, 822, 821, 820, 819, 787, 787, 787, 787, 787, 787, 787, 787, 788, 756, 756, 724, 725, 726, 727, 
[DBG]  (LNS.cpp) New path for agent 39: 
[DBG]  680, 712, 713, 745, 746, 747, 748, 780, 812, 813, 814, 846, 846, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 889, 890, 891, 892, 
[DBG]  (LNS.cpp) New path for agent 133: 
[DBG]  956, 956, 956, 956, 956, 924, 924, 892, 860, 861, 861, 860, 859, 858, 858, 890, 889, 888, 887, 855, 823, 824, 792, 793, 761, 729, 697, 696, 664, 632, 600, 601, 602, 570, 538, 506, 505, 473, 472, 440, 440, 408, 376, 
[DBG]  Delta value: 0.0762712
[DBG]  Rewarding metric index = 1
[DBG]  component_weights = {0.508161, 0.161927, 0.156202, 0.17371}
[DBG]  opSuccess value: 1
[STAT] neighbor.sum_of_costs before recomputation: 109
[STAT] neighbor.old_sum_of_costs before recomputation: 118
[STAT] sum_of_costs before recomputation: 4507
[DBG]  Validate solution immediately after SAT success.
[WARNING] Problem after SAT: Target conflict: agent 42 (len 49) traverses target of agent 28 (len 40) at location 727 at timestep 48
[DBG]  [DEBUG] Attempting immediate repair via init_lns because problem occurred after SAT (should be applied only for conflicts...).
[DBG]  [DEBUG] Passing 150 agents to init_lns (skip=true).
[DBG]  [DEBUG] path_table contents for selected agents (neighbor.agents):
[DBG]    Agent 28 => controlling path length=41
[DBG]    Agent 39 => controlling path length=28
[DBG]    Agent 133 => controlling path length=43
[DBG]  hodnota skip_initial_solution=1
[DBG]  We skip initialSolution => call buildCollisionData()
[DBG]  buildCollisionData() called â€“ skip_initial_solution case.
[DBG]  Agents.size()=150, collision_graph.size()=150
[DBG]  agent 28 => updateCollidingPairs => foundCollision
[DBG]  agent 42 => updateCollidingPairs => foundCollision
[DBG]  agent 45 => updateCollidingPairs => foundCollision
[DBG]  agent 53 => updateCollidingPairs => foundCollision
[DBG]  agent 57 => updateCollidingPairs => foundCollision
[DBG]  agent 85 => updateCollidingPairs => foundCollision
[DBG]  agent 91 => updateCollidingPairs => foundCollision
[DBG]  agent 100 => updateCollidingPairs => foundCollision
[DBG]  agent 111 => updateCollidingPairs => foundCollision
[DBG]  Conflicting agent pairs:
[DBG]  agent 28 is in conflict with agent 42
[DBG]  agent 28 is in conflict with agent 45
[DBG]  agent 28 is in conflict with agent 53
[DBG]  agent 28 is in conflict with agent 57
[DBG]  agent 28 is in conflict with agent 85
[DBG]  agent 28 is in conflict with agent 91
[DBG]  agent 28 is in conflict with agent 100
[DBG]  agent 28 is in conflict with agent 111
[DBG]  buildCollisionData() => sum_of_costs=4498, num_of_colliding_pairs=8
[DBG]  buildCollisionData done => sum_of_costs=4498, num_of_colliding_pairs=8
[DBG]  sum_of_cost hodnota: 4498
[DBG]  After skip/init build => iteration_stats.back(): sum_of_costs=4498, collisions=8
[DEBUG] Using default neighbor generation strategy for conflicts: 1
[DEBUG] Using default neighbor generation strategy for conflicts: 2
[DEBUG] Using default neighbor generation strategy for conflicts: 1
[DEBUG] Using default neighbor generation strategy for conflicts: 1
	InitLNS(PP): runtime = 0.0103697, iterations = 5, colliding pairs = 0, initial colliding pairs = 8, solution cost = 4524, initial solution cost = 4498, failed iterations = 0
[DBG]  [DEBUG] init_lns->sum_of_costs after init_lns->run: 4524
[DBG]  [DEBUG] sum_of_costs after assignment from init_lns->run: 4524
[DBG]  Recomputing sum_of_cost by dividing neighbor.sum_of_costs and neighbor.old_sum_of_costs
[STAT] sum_of_costs after recomputation: 4524
[STAT] Iteration 46
[DBG]  Using SAT operator (destroy+repair SAT).
[DBG]  ====================
[DBG]  SAT destroy operator called.
[DBG]  SAT heuristic: 2
[DBG]  key_agent_id: 28
[DBG]  key_agent_id global path length: 58
[DBG]  Submap content (global positions):
[DBG]  626 627 628 629 630 
[DBG]  658 659 660 661 662 
[DBG]  690 691 692 693 694 
[DBG]  722 723 724 725 726 
[DBG]  754 755 756 757 758 
[DBG]  Map content with agents and obstacles:
[DBG]  X . A A X 
[DBG]  . . . . X 
[DBG]  X . A X X 
[DBG]  . X A . . 
[DBG]  X . . . X 
[DBG]  content of the map structure that we pass to the SAT solver:
[DBG]  -1  1  1  1  -1  
[DBG]  1  1  1  1  -1  
[DBG]  -1  1  1  -1  -1  
[DBG]  1  -1  1  1  1  
[DBG]  -1  1  1  1  -1  
[DBG]  Identifying agents in a submap for rescheduling (when key_agent is there at the time 23):
[DBG]  Agent 0 found intervals in the sub-map:
[DBG]   [19..26]
[DBG]  Agent 0 (interval in submap: [19..26]) contains time 23, added to replan.
[DBG]  Agent 11 found intervals in the sub-map:
[DBG]  
[DBG]  Agent 11 is not in sub-map at time 23 (intervals: 
[DBG]  )
[DBG]  Agent 28 found intervals in the sub-map:
[DBG]   [0..42] [53..56]
[DBG]  Agent 28 (interval in submap: [0..42]) contains time 23, added to replan.
[DBG]  Agent 57 found intervals in the sub-map:
[DBG]   [23..28]
[DBG]  Agent 57 (interval in submap: [23..28]) contains time 23, added to replan.
[DBG]  Agent 61 found intervals in the sub-map:
[DBG]  
[DBG]  Agent 61 is not in sub-map at time 23 (intervals: 
[DBG]  )
[DBG]  Agent 71 found intervals in the sub-map:
[DBG]  
[DBG]  Agent 71 is not in sub-map at time 23 (intervals: 
[DBG]  )
[DBG]  Agent 148 found intervals in the sub-map:
[DBG]   [18..24] [34..37]
[DBG]  Agent 148 (interval in submap: [18..24]) contains time 23, added to replan.
[DBG]  Agent 0 | Start (global): 724 -> (local): (3, 2) at time 23 | Goal (global): 756 -> (local): (4, 2) at time 26
[DBG]  Agent 28 | Start (global): 692 -> (local): (2, 2) at time 23 | Goal (global): 756 -> (local): (4, 2) at time 42
[DBG]  Agent 57 | Start (global): 628 -> (local): (0, 2) at time 23 | Goal (global): 755 -> (local): (4, 1) at time 28
[DBG]  Agent 148 | Start (global): 629 -> (local): (0, 3) at time 23 | Goal (global): 629 -> (local): (0, 3) at time 24
[DBG]  [REPAIR] SAT destroy operator called.
[DBG]  [REPAIR] SAT operator â€“ launching subproblem FOR OPTIMIZATION.
[DBG]  Creating local paths (sx, sy) in the submap for T_sync = 23
[DBG]    Agent 0 (global paths from T=23 to 26) has local path: (3,2) (3,3) (4,3) (4,2) 
[DBG]    Agent 28 (global paths from T=23 to 42) has local path: (2,2) (3,2) (3,3) (3,3) (3,3) (3,3) (3,3) (3,3) (3,3) (3,3) (3,3) (3,3) (3,3) (3,3) (3,3) (3,3) (3,3) (3,3) (3,2) (4,2) 
[DBG]    Agent 57 (global paths from T=23 to 28) has local path: (0,2) (1,2) (2,2) (3,2) (4,2) (4,1) 
[DBG]    Agent 148 (global paths from T=23 to 24) has local path: (0,3) (0,3) 
[DBG]  Checking input data for SAT solver:
[DBG]    - Number of agents to replan: 4
[DBG]  Agent 0 has the original local path length: 4 => Start (3,2), Goal (4,2)
[DBG]  Agent 28 has the original local path length: 20 => Start (2,2), Goal (4,2)
[DBG]  Agent 57 has the original local path length: 6 => Start (0,2), Goal (4,1)
[DBG]  Agent 148 has the original local path length: 2 => Start (0,3), Goal (0,3)
[DBG]  Start position: (3, 2), (2, 2), (0, 2), (0, 3), 
[DBG]  Goal position: (4, 2), (4, 2), (4, 1), (0, 3), 
[DBG]  SAT instance and solver created.
Currently solving
Instance name: scen
Map name: map
Encoding used: disappear_at_goal
SAT solver used: Kissat
Optimizing function: sum of costs
Number of agents: 4
Mks LB: 6
SoC LB: 12
Delta: 0
Remaining time: 300000 [ms]

Vertex conflict! Agents 0, 1, timestep 3, location 0
Swapping conflict! Agents 0, 1, timestep 3, edge (0,0)
Vertex conflict! Agents 0, 1, timestep 4, location 0
Swapping conflict! Agents 0, 1, timestep 4, edge (0,0)
Vertex conflict! Agents 0, 1, timestep 5, location 0
Vertex conflict! Agents 0, 3, timestep 2, location 0
Swapping conflict! Agents 0, 3, timestep 2, edge (0,0)
Vertex conflict! Agents 0, 3, timestep 3, location 0
Swapping conflict! Agents 0, 3, timestep 3, edge (0,0)
Vertex conflict! Agents 0, 3, timestep 4, location 0
Swapping conflict! Agents 0, 3, timestep 4, edge (0,0)
Vertex conflict! Agents 0, 3, timestep 5, location 0
Vertex conflict! Agents 1, 3, timestep 3, location 0
Swapping conflict! Agents 1, 3, timestep 3, edge (0,0)
Vertex conflict! Agents 1, 3, timestep 4, location 0
Swapping conflict! Agents 1, 3, timestep 4, edge (0,0)
Vertex conflict! Agents 1, 3, timestep 5, location 0
Found plan [agents = 4] [timesteps = 6]
Agent #0 : 10 14 0 0 0 0 
Agent #1 : 8 10 14 0 0 0 
Agent #2 : 1 5 8 10 14 13 
Agent #3 : 2 0 0 0 0 0 

[STAT] Solver returned: 0
[DBG]  Agent (index) 0 | New local path (submap idx):
[DBG]  10 14 
[DBG]  Agent (index) 28 | New local path (submap idx):
[DBG]  8 10 14 
[DBG]  Agent (index) 57 | New local path (submap idx):
[DBG]  1 5 8 10 14 13 
[DBG]  Agent (index) 148 | New local path (submap idx):
[DBG]  2 
[DBG]  Update the agent path 0 | Original local length: 4 | New local length: 2
[DBG]  agent 0 t=0 => decoded (sx,sy)=(3,2) => global_id=724
[DBG]  agent 0 t=1 => decoded (sx,sy)=(4,2) => global_id=756
[DBG]  Complete path of agent 0:
[DBG]    Original: 517 549 550 551 583 615 647 648 649 650 682 683 684 685 686 687 655 656 657 658 659 691 692 724 725 757 756 788 820 821 822 823 824 856 857 858 859 860 861 829 797 798 799 
[DBG]    New:     517 549 550 551 583 615 647 648 649 650 682 683 684 685 686 687 655 656 657 658 659 691 692 724 756 788 820 821 822 823 824 856 857 858 859 860 861 829 797 798 799 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 517 549 550 551 583 615 647 648 649 650 682 683 684 685 686 687 655 656 657 658 659 691 692 
[DBG]    Local path (in submap): 724 756 788 820 
[DBG]    Suffix (out of submap): 821 822 823 824 856 857 858 859 860 861 829 797 798 799 
[DBG]  Original agent path length 0 je: 43
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 0: 517, 549, 550, 551, 583, 615, 647, 648, 649, 650, 682, 683, 684, 685, 686, 687, 655, 656, 657, 658, 659, 691, 692, 724, 756, 788, 820, 821, 822, 823, 824, 856, 857, 858, 859, 860, 861, 829, 797, 798, 799, 
[DBG]  Path for agent 0 updated, resulting length: 41
[DBG]  Update the agent path 28 | Original local length: 20 | New local length: 3
[DBG]  agent 28 t=0 => decoded (sx,sy)=(2,2) => global_id=692
[DBG]  agent 28 t=1 => decoded (sx,sy)=(3,2) => global_id=724
[DBG]  agent 28 t=2 => decoded (sx,sy)=(4,2) => global_id=756
[DBG]  Complete path of agent 28:
[DBG]    Original: 661 661 660 628 628 628 628 628 628 628 628 628 628 628 660 660 660 660 660 660 660 660 660 692 724 725 725 725 725 725 725 725 725 725 725 725 725 725 725 725 725 724 756 788 787 786 786 786 786 786 786 787 788 756 724 725 726 727 
[DBG]    New:     661 661 660 628 628 628 628 628 628 628 628 628 628 628 660 660 660 660 660 660 660 660 660 692 724 756 788 787 786 786 786 786 786 786 787 788 756 724 725 726 727 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 661 661 660 628 628 628 628 628 628 628 628 628 628 628 660 660 660 660 660 660 660 660 660 
[DBG]    Local path (in submap): 692 724 756 788 787 786 786 786 786 786 786 787 788 756 724 725 726 727 
[DBG]    Suffix (out of submap): 
[DBG]  Original agent path length 28 je: 58
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 1: 661, 661, 660, 628, 628, 628, 628, 628, 628, 628, 628, 628, 628, 628, 660, 660, 660, 660, 660, 660, 660, 660, 660, 692, 724, 756, 788, 787, 786, 786, 786, 786, 786, 786, 787, 788, 756, 724, 725, 726, 727, 
[DBG]  Path for agent 28 updated, resulting length: 41
[DBG]  Update the agent path 57 | Original local length: 6 | New local length: 6
[DBG]  agent 57 t=0 => decoded (sx,sy)=(0,2) => global_id=628
[DBG]  agent 57 t=1 => decoded (sx,sy)=(1,2) => global_id=660
[DBG]  agent 57 t=2 => decoded (sx,sy)=(2,2) => global_id=692
[DBG]  agent 57 t=3 => decoded (sx,sy)=(3,2) => global_id=724
[DBG]  agent 57 t=4 => decoded (sx,sy)=(4,2) => global_id=756
[DBG]  agent 57 t=5 => decoded (sx,sy)=(4,1) => global_id=755
[DBG]  Complete path of agent 57:
[DBG]    Original: 185 217 217 216 248 247 279 311 343 375 375 375 407 439 438 437 437 469 501 533 565 597 596 628 660 692 724 756 755 787 819 851 850 849 881 880 912 944 976 977 
[DBG]    New:     185 217 217 216 248 247 279 311 343 375 375 375 407 439 438 437 437 469 501 533 565 597 596 628 660 692 724 756 755 787 819 851 850 849 881 880 912 944 976 977 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 185 217 217 216 248 247 279 311 343 375 375 375 407 439 438 437 437 469 501 533 565 597 596 
[DBG]    Local path (in submap): 628 660 692 724 756 755 
[DBG]    Suffix (out of submap): 787 819 851 850 849 881 880 912 944 976 977 
[DBG]  Original agent path length 57 je: 40
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 2: 185, 217, 217, 216, 248, 247, 279, 311, 343, 375, 375, 375, 407, 439, 438, 437, 437, 469, 501, 533, 565, 597, 596, 628, 660, 692, 724, 756, 755, 787, 819, 851, 850, 849, 881, 880, 912, 944, 976, 977, 
[DBG]  Path for agent 57 updated, resulting length: 40
[DBG]  Update the agent path 148 | Original local length: 2 | New local length: 1
[DBG]  agent 148 t=0 => decoded (sx,sy)=(0,3) => global_id=629
[DBG]  Complete path of agent 148:
[DBG]    Original: 776 777 777 777 745 746 714 715 683 684 685 686 687 688 689 657 656 657 658 659 627 628 629 629 629 597 596 597 565 566 566 565 597 596 628 628 628 660 
[DBG]    New:     776 777 777 777 745 746 714 715 683 684 685 686 687 688 689 657 656 657 658 659 627 628 629 629 597 596 597 565 566 566 565 597 596 628 628 628 660 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 776 777 777 777 745 746 714 715 683 684 685 686 687 688 689 657 656 657 658 659 627 628 629 
[DBG]    Local path (in submap): 629 597 
[DBG]    Suffix (out of submap): 596 597 565 566 566 565 597 596 628 628 628 660 
[DBG]  Original agent path length 148 je: 38
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 3: 776, 777, 777, 777, 745, 746, 714, 715, 683, 684, 685, 686, 687, 688, 689, 657, 656, 657, 658, 659, 627, 628, 629, 629, 597, 596, 597, 565, 566, 566, 565, 597, 596, 628, 628, 628, 660, 
[DBG]  Path for agent 148 updated, resulting length: 37
[DBG]  Paths successfully updated.
[DBG]  (LNS.cpp) New path for agent 0: 
[DBG]  517, 549, 550, 551, 583, 615, 647, 648, 649, 650, 682, 683, 684, 685, 686, 687, 655, 656, 657, 658, 659, 691, 692, 724, 756, 788, 820, 821, 822, 823, 824, 856, 857, 858, 859, 860, 861, 829, 797, 798, 799, 
[DBG]  (LNS.cpp) New path for agent 28: 
[DBG]  661, 661, 660, 628, 628, 628, 628, 628, 628, 628, 628, 628, 628, 628, 660, 660, 660, 660, 660, 660, 660, 660, 660, 692, 724, 756, 788, 787, 786, 786, 786, 786, 786, 786, 787, 788, 756, 724, 725, 726, 727, 
[DBG]  (LNS.cpp) New path for agent 57: 
[DBG]  185, 217, 217, 216, 248, 247, 279, 311, 343, 375, 375, 375, 407, 439, 438, 437, 437, 469, 501, 533, 565, 597, 596, 628, 660, 692, 724, 756, 755, 787, 819, 851, 850, 849, 881, 880, 912, 944, 976, 977, 
[DBG]  (LNS.cpp) New path for agent 148: 
[DBG]  776, 777, 777, 777, 745, 746, 714, 715, 683, 684, 685, 686, 687, 688, 689, 657, 656, 657, 658, 659, 627, 628, 629, 629, 597, 596, 597, 565, 566, 566, 565, 597, 596, 628, 628, 628, 660, 
[DBG]  Delta value: 0.114286
[DBG]  Rewarding metric index = 1
[DBG]  component_weights = {0.494319, 0.184755, 0.151947, 0.168978}
[DBG]  opSuccess value: 1
[STAT] neighbor.sum_of_costs before recomputation: 155
[STAT] neighbor.old_sum_of_costs before recomputation: 175
[STAT] sum_of_costs before recomputation: 4524
[DBG]  Validate solution immediately after SAT success.
[WARNING] Problem after SAT: Vertex conflict between agents 26 and 148 at location 597 at timestep 26
[DBG]  [DEBUG] Attempting immediate repair via init_lns because problem occurred after SAT (should be applied only for conflicts...).
[DBG]  [DEBUG] Passing 150 agents to init_lns (skip=true).
[DBG]  [DEBUG] path_table contents for selected agents (neighbor.agents):
[DBG]    Agent 0 => controlling path length=41
[DBG]    Agent 28 => controlling path length=41
[DBG]    Agent 57 => controlling path length=40
[DBG]    Agent 148 => controlling path length=37
[DBG]  hodnota skip_initial_solution=1
[DBG]  We skip initialSolution => call buildCollisionData()
[DBG]  buildCollisionData() called â€“ skip_initial_solution case.
[DBG]  Agents.size()=150, collision_graph.size()=150
[DBG]  agent 26 => updateCollidingPairs => foundCollision
[DBG]  agent 28 => updateCollidingPairs => foundCollision
[DBG]  agent 42 => updateCollidingPairs => foundCollision
[DBG]  agent 53 => updateCollidingPairs => foundCollision
[DBG]  agent 100 => updateCollidingPairs => foundCollision
[DBG]  agent 148 => updateCollidingPairs => foundCollision
[DBG]  Conflicting agent pairs:
[DBG]  agent 26 is in conflict with agent 148
[DBG]  agent 28 is in conflict with agent 42
[DBG]  agent 28 is in conflict with agent 53
[DBG]  agent 100 is in conflict with agent 148
[DBG]  buildCollisionData() => sum_of_costs=4504, num_of_colliding_pairs=4
[DBG]  buildCollisionData done => sum_of_costs=4504, num_of_colliding_pairs=4
[DBG]  sum_of_cost hodnota: 4504
[DBG]  After skip/init build => iteration_stats.back(): sum_of_costs=4504, collisions=4
[DEBUG] Using default neighbor generation strategy for conflicts: 1
	InitLNS(PP): runtime = 0.00270937, iterations = 2, colliding pairs = 0, initial colliding pairs = 4, solution cost = 4527, initial solution cost = 4504, failed iterations = 0
[DBG]  [DEBUG] init_lns->sum_of_costs after init_lns->run: 4527
[DBG]  [DEBUG] sum_of_costs after assignment from init_lns->run: 4527
[DBG]  Recomputing sum_of_cost by dividing neighbor.sum_of_costs and neighbor.old_sum_of_costs
[STAT] sum_of_costs after recomputation: 4527
[STAT] Iteration 47
[DBG]  Using SAT operator (destroy+repair SAT).
[DBG]  ====================
[DBG]  SAT destroy operator called.
[DBG]  SAT heuristic: 2
[DBG]  key_agent_id: 28
[DBG]  key_agent_id global path length: 58
[DBG]  Submap content (global positions):
[DBG]  563 564 565 566 567 
[DBG]  595 596 597 598 599 
[DBG]  627 628 629 630 631 
[DBG]  659 660 661 662 663 
[DBG]  691 692 693 694 695 
[DBG]  Map content with agents and obstacles:
[DBG]  . X . . X 
[DBG]  X . . X . 
[DBG]  . . A X . 
[DBG]  . . . X X 
[DBG]  . . X X X 
[DBG]  content of the map structure that we pass to the SAT solver:
[DBG]  1  -1  1  1  -1  
[DBG]  -1  1  1  -1  1  
[DBG]  1  1  1  -1  1  
[DBG]  1  1  1  -1  -1  
[DBG]  1  1  -1  -1  -1  
[DBG]  Identifying agents in a submap for rescheduling (when key_agent is there at the time 18):
[DBG]  Agent 3 found intervals in the sub-map:
[DBG]  
[DBG]  Agent 3 is not in sub-map at time 18 (intervals: 
[DBG]  )
[DBG]  Agent 4 found intervals in the sub-map:
[DBG]  
[DBG]  Agent 4 is not in sub-map at time 18 (intervals: 
[DBG]  )
[DBG]  Agent 28 found intervals in the sub-map:
[DBG]   [0..40]
[DBG]  Agent 28 (interval in submap: [0..40]) contains time 18, added to replan.
[DBG]  Agent 74 found intervals in the sub-map:
[DBG]  
[DBG]  Agent 74 is not in sub-map at time 18 (intervals: 
[DBG]  )
[DBG]  Agent 79 found intervals in the sub-map:
[DBG]  
[DBG]  Agent 79 is not in sub-map at time 18 (intervals: 
[DBG]  )
[DBG]  Agent 28 | Start (global): 629 -> (local): (2, 2) at time 18 | Goal (global): 692 -> (local): (4, 1) at time 40
[DBG]  [REPAIR] SAT destroy operator called.
[DBG]  [REPAIR] SAT operator â€“ launching subproblem FOR OPTIMIZATION.
[DBG]  Creating local paths (sx, sy) in the submap for T_sync = 18
[DBG]    Agent 28 (global paths from T=18 to 40) has local path: (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,1) (2,0) (2,0) (2,0) (2,0) (2,0) (2,0) (2,0) (2,0) (2,0) (2,0) (3,0) (4,0) (4,1) 
[DBG]  Checking input data for SAT solver:
[DBG]    - Number of agents to replan: 1
[DBG]  Agent 28 has the original local path length: 23 => Start (2,2), Goal (4,1)
[DBG]  Start position: (2, 2), 
[DBG]  Goal position: (4, 1), 
[DBG]  SAT instance and solver created.
Currently solving
Instance name: scen
Map name: map
Encoding used: disappear_at_goal
SAT solver used: Kissat
Optimizing function: sum of costs
Number of agents: 1
Mks LB: 4
SoC LB: 4
Delta: 0
Remaining time: 300000 [ms]

Found plan [agents = 1] [timesteps = 4]
Agent #0 : 8 12 11 14 

[STAT] Solver returned: 0
[DBG]  Agent (index) 28 | New local path (submap idx):
[DBG]  8 12 11 14 
[DBG]  Update the agent path 28 | Original local length: 23 | New local length: 4
[DBG]  agent 28 t=0 => decoded (sx,sy)=(2,2) => global_id=629
[DBG]  agent 28 t=1 => decoded (sx,sy)=(3,2) => global_id=661
[DBG]  agent 28 t=2 => decoded (sx,sy)=(3,1) => global_id=660
[DBG]  agent 28 t=3 => decoded (sx,sy)=(4,1) => global_id=692
[DBG]  Complete path of agent 28:
[DBG]    Original: 661 661 660 628 628 628 628 628 628 628 628 628 628 628 629 629 629 629 629 629 629 629 629 629 629 629 629 628 627 627 627 627 627 627 627 627 627 627 659 691 692 724 725 757 757 757 757 757 757 757 757 757 757 757 757 725 726 727 
[DBG]    New:     661 661 660 628 628 628 628 628 628 628 628 628 628 628 629 629 629 629 629 661 660 692 724 725 757 757 757 757 757 757 757 757 757 757 757 757 725 726 727 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 661 661 660 628 628 628 628 628 628 628 628 628 628 628 629 629 629 629 
[DBG]    Local path (in submap): 629 661 660 692 724 725 757 757 757 757 757 757 757 757 757 757 757 757 725 726 727 
[DBG]    Suffix (out of submap): 
[DBG]  Original agent path length 28 je: 58
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 0: 661, 661, 660, 628, 628, 628, 628, 628, 628, 628, 628, 628, 628, 628, 629, 629, 629, 629, 629, 661, 660, 692, 724, 725, 757, 757, 757, 757, 757, 757, 757, 757, 757, 757, 757, 757, 725, 726, 727, 
[DBG]  Path for agent 28 updated, resulting length: 39
[DBG]  Paths successfully updated.
[DBG]  (LNS.cpp) New path for agent 28: 
[DBG]  661, 661, 660, 628, 628, 628, 628, 628, 628, 628, 628, 628, 628, 628, 629, 629, 629, 629, 629, 661, 660, 692, 724, 725, 757, 757, 757, 757, 757, 757, 757, 757, 757, 757, 757, 757, 725, 726, 727, 
[DBG]  Delta value: 0.333333
[DBG]  Rewarding metric index = 0
[DBG]  component_weights = {0.57841, 0.154032, 0.12668, 0.140878}
[DBG]  opSuccess value: 1
[STAT] neighbor.sum_of_costs before recomputation: 38
[STAT] neighbor.old_sum_of_costs before recomputation: 57
[STAT] sum_of_costs before recomputation: 4527
[DBG]  Validate solution immediately after SAT success.
[WARNING] Problem after SAT: Target conflict: agent 42 (len 57) traverses target of agent 28 (len 38) at location 727 at timestep 56
[DBG]  [DEBUG] Attempting immediate repair via init_lns because problem occurred after SAT (should be applied only for conflicts...).
[DBG]  [DEBUG] Passing 150 agents to init_lns (skip=true).
[DBG]  [DEBUG] path_table contents for selected agents (neighbor.agents):
[DBG]    Agent 28 => controlling path length=39
[DBG]  hodnota skip_initial_solution=1
[DBG]  We skip initialSolution => call buildCollisionData()
[DBG]  buildCollisionData() called â€“ skip_initial_solution case.
[DBG]  Agents.size()=150, collision_graph.size()=150
[DBG]  agent 28 => updateCollidingPairs => foundCollision
[DBG]  agent 42 => updateCollidingPairs => foundCollision
[DBG]  Conflicting agent pairs:
[DBG]  agent 28 is in conflict with agent 42
[DBG]  buildCollisionData() => sum_of_costs=4508, num_of_colliding_pairs=1
[DBG]  buildCollisionData done => sum_of_costs=4508, num_of_colliding_pairs=1
[DBG]  sum_of_cost hodnota: 4508
[DBG]  After skip/init build => iteration_stats.back(): sum_of_costs=4508, collisions=1
[DEBUG] Using default neighbor generation strategy for conflicts: 1
[DEBUG] Using default neighbor generation strategy for conflicts: 2
[DEBUG] Using default neighbor generation strategy for conflicts: 0
	InitLNS(PP): runtime = 0.00512546, iterations = 4, colliding pairs = 0, initial colliding pairs = 1, solution cost = 4512, initial solution cost = 4508, failed iterations = 0
[DBG]  [DEBUG] init_lns->sum_of_costs after init_lns->run: 4512
[DBG]  [DEBUG] sum_of_costs after assignment from init_lns->run: 4512
[DBG]  Recomputing sum_of_cost by dividing neighbor.sum_of_costs and neighbor.old_sum_of_costs
[STAT] sum_of_costs after recomputation: 4512
[STAT] Iteration 48
[DBG]  Using SAT operator (destroy+repair SAT).
[DBG]  ====================
[DBG]  SAT destroy operator called.
[DBG]  SAT heuristic: 2
[DBG]  key_agent_id: 28
[DBG]  key_agent_id global path length: 58
[DBG]  Submap content (global positions):
[DBG]  626 627 628 629 630 
[DBG]  658 659 660 661 662 
[DBG]  690 691 692 693 694 
[DBG]  722 723 724 725 726 
[DBG]  754 755 756 757 758 
[DBG]  Map content with agents and obstacles:
[DBG]  X . . . X 
[DBG]  . . . . X 
[DBG]  X . A X X 
[DBG]  . X . . . 
[DBG]  X . . . X 
[DBG]  content of the map structure that we pass to the SAT solver:
[DBG]  -1  1  1  1  -1  
[DBG]  1  1  1  1  -1  
[DBG]  -1  1  1  -1  -1  
[DBG]  1  -1  1  1  1  
[DBG]  -1  1  1  1  -1  
[DBG]  Identifying agents in a submap for rescheduling (when key_agent is there at the time 50):
[DBG]  Agent 28 found intervals in the sub-map:
[DBG]   [0..56]
[DBG]  Agent 28 (interval in submap: [0..56]) contains time 50, added to replan.
[DBG]  Agent 28 | Start (global): 692 -> (local): (2, 2) at time 50 | Goal (global): 726 -> (local): (3, 4) at time 56
[DBG]  [REPAIR] SAT destroy operator called.
[DBG]  [REPAIR] SAT operator â€“ launching subproblem FOR OPTIMIZATION.
[DBG]  Creating local paths (sx, sy) in the submap for T_sync = 50
[DBG]    Agent 28 (global paths from T=50 to 56) has local path: (2,2) (2,2) (2,2) (2,2) (3,2) (3,3) (3,4) 
[DBG]  Checking input data for SAT solver:
[DBG]    - Number of agents to replan: 1
[DBG]  Agent 28 has the original local path length: 7 => Start (2,2), Goal (3,4)
[DBG]  Start position: (2, 2), 
[DBG]  Goal position: (3, 4), 
[DBG]  SAT instance and solver created.
Currently solving
Instance name: scen
Map name: map
Encoding used: disappear_at_goal
SAT solver used: Kissat
Optimizing function: sum of costs
Number of agents: 1
Mks LB: 4
SoC LB: 4
Delta: 0
Remaining time: 300000 [ms]

Found plan [agents = 1] [timesteps = 4]
Agent #0 : 8 10 11 12 

[STAT] Solver returned: 0
[DBG]  Agent (index) 28 | New local path (submap idx):
[DBG]  8 10 11 12 
[DBG]  Update the agent path 28 | Original local length: 7 | New local length: 4
[DBG]  agent 28 t=0 => decoded (sx,sy)=(2,2) => global_id=692
[DBG]  agent 28 t=1 => decoded (sx,sy)=(3,2) => global_id=724
[DBG]  agent 28 t=2 => decoded (sx,sy)=(3,3) => global_id=725
[DBG]  agent 28 t=3 => decoded (sx,sy)=(3,4) => global_id=726
[DBG]  Complete path of agent 28:
[DBG]    Original: 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 629 629 628 627 627 627 627 627 627 627 659 691 692 692 692 692 692 692 692 692 692 692 692 692 692 692 724 725 726 727 
[DBG]    New:     661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 629 629 628 627 627 627 627 627 627 627 659 691 692 692 692 692 692 692 692 692 692 692 692 724 725 726 727 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 629 629 628 627 627 627 627 627 627 627 659 691 692 692 692 692 692 692 692 692 692 692 
[DBG]    Local path (in submap): 692 724 725 726 727 
[DBG]    Suffix (out of submap): 
[DBG]  Original agent path length 28 je: 58
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 0: 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 629, 629, 628, 627, 627, 627, 627, 627, 627, 627, 659, 691, 692, 692, 692, 692, 692, 692, 692, 692, 692, 692, 692, 724, 725, 726, 727, 
[DBG]  Path for agent 28 updated, resulting length: 55
[DBG]  Paths successfully updated.
[DBG]  (LNS.cpp) New path for agent 28: 
[DBG]  661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 629, 629, 628, 627, 627, 627, 627, 627, 627, 627, 659, 691, 692, 692, 692, 692, 692, 692, 692, 692, 692, 692, 692, 724, 725, 726, 727, 
[DBG]  Delta value: 0.0526316
[DBG]  Rewarding metric index = 0
[DBG]  component_weights = {0.603205, 0.144973, 0.119229, 0.132593}
[DBG]  opSuccess value: 1
[STAT] neighbor.sum_of_costs before recomputation: 54
[STAT] neighbor.old_sum_of_costs before recomputation: 57
[STAT] sum_of_costs before recomputation: 4512
[DBG]  Validate solution immediately after SAT success.
[WARNING] Problem after SAT: Target conflict: agent 42 (len 57) traverses target of agent 28 (len 54) at location 727 at timestep 56
[DBG]  [DEBUG] Attempting immediate repair via init_lns because problem occurred after SAT (should be applied only for conflicts...).
[DBG]  [DEBUG] Passing 150 agents to init_lns (skip=true).
[DBG]  [DEBUG] path_table contents for selected agents (neighbor.agents):
[DBG]    Agent 28 => controlling path length=55
[DBG]  hodnota skip_initial_solution=1
[DBG]  We skip initialSolution => call buildCollisionData()
[DBG]  buildCollisionData() called â€“ skip_initial_solution case.
[DBG]  Agents.size()=150, collision_graph.size()=150
[DBG]  agent 28 => updateCollidingPairs => foundCollision
[DBG]  agent 42 => updateCollidingPairs => foundCollision
[DBG]  Conflicting agent pairs:
[DBG]  agent 28 is in conflict with agent 42
[DBG]  buildCollisionData() => sum_of_costs=4509, num_of_colliding_pairs=1
[DBG]  buildCollisionData done => sum_of_costs=4509, num_of_colliding_pairs=1
[DBG]  sum_of_cost hodnota: 4509
[DBG]  After skip/init build => iteration_stats.back(): sum_of_costs=4509, collisions=1
[DEBUG] Using default neighbor generation strategy for conflicts: 2
[DEBUG] Using default neighbor generation strategy for conflicts: 2
[DEBUG] Using default neighbor generation strategy for conflicts: 0
	InitLNS(PP): runtime = 0.00351796, iterations = 4, colliding pairs = 0, initial colliding pairs = 1, solution cost = 4484, initial solution cost = 4509, failed iterations = 0
[DBG]  [DEBUG] init_lns->sum_of_costs after init_lns->run: 4484
[DBG]  [DEBUG] sum_of_costs after assignment from init_lns->run: 4484
[DBG]  Recomputing sum_of_cost by dividing neighbor.sum_of_costs and neighbor.old_sum_of_costs
[STAT] sum_of_costs after recomputation: 4484
[STAT] Iteration 49
[DBG]  Using SAT operator (destroy+repair SAT).
[DBG]  ====================
[DBG]  SAT destroy operator called.
[DBG]  SAT heuristic: 2
[DBG]  key_agent_id: 28
[DBG]  key_agent_id global path length: 47
[DBG]  Submap content (global positions):
[DBG]  595 596 597 598 599 
[DBG]  627 628 629 630 631 
[DBG]  659 660 661 662 663 
[DBG]  691 692 693 694 695 
[DBG]  723 724 725 726 727 
[DBG]  Map content with agents and obstacles:
[DBG]  X . . X . 
[DBG]  . A . X . 
[DBG]  . . A X X 
[DBG]  . A X X X 
[DBG]  X . . . . 
[DBG]  content of the map structure that we pass to the SAT solver:
[DBG]  -1  1  1  -1  1  
[DBG]  1  1  1  -1  1  
[DBG]  1  1  1  -1  -1  
[DBG]  1  1  -1  -1  -1  
[DBG]  -1  1  1  1  1  
[DBG]  Identifying agents in a submap for rescheduling (when key_agent is there at the time 12):
[DBG]  Agent 1 found intervals in the sub-map:
[DBG]  
[DBG]  Agent 1 is not in sub-map at time 12 (intervals: 
[DBG]  )
[DBG]  Agent 4 found intervals in the sub-map:
[DBG]  
[DBG]  Agent 4 is not in sub-map at time 12 (intervals: 
[DBG]  )
[DBG]  Agent 28 found intervals in the sub-map:
[DBG]   [0..46]
[DBG]  Agent 28 (interval in submap: [0..46]) contains time 12, added to replan.
[DBG]  Agent 74 found intervals in the sub-map:
[DBG]  
[DBG]  Agent 74 is not in sub-map at time 12 (intervals: 
[DBG]  )
[DBG]  Agent 86 found intervals in the sub-map:
[DBG]   [10..14]
[DBG]  Agent 86 (interval in submap: [10..14]) contains time 12, added to replan.
[DBG]  Agent 131 found intervals in the sub-map:
[DBG]  
[DBG]  Agent 131 is not in sub-map at time 12 (intervals: 
[DBG]  )
[DBG]  Agent 135 found intervals in the sub-map:
[DBG]   [4..4] [8..14]
[DBG]  Agent 135 (interval in submap: [8..14]) contains time 12, added to replan.
[DBG]  Agent 28 | Start (global): 661 -> (local): (2, 2) at time 12 | Goal (global): 727 -> (local): (4, 4) at time 46
[DBG]  Agent 86 | Start (global): 628 -> (local): (1, 1) at time 12 | Goal (global): 597 -> (local): (0, 2) at time 14
[DBG]  Agent 135 | Start (global): 692 -> (local): (3, 1) at time 12 | Goal (global): 659 -> (local): (2, 0) at time 14
[DBG]  [REPAIR] SAT destroy operator called.
[DBG]  [REPAIR] SAT operator â€“ launching subproblem FOR OPTIMIZATION.
[DBG]  Creating local paths (sx, sy) in the submap for T_sync = 12
[DBG]    Agent 28 (global paths from T=12 to 46) has local path: (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (1,2) (1,2) (1,1) (1,0) (1,0) (1,0) (1,0) (1,0) (1,0) (1,0) (1,0) (1,0) (2,0) (3,0) (3,1) (4,1) (4,2) (4,3) (4,4) 
[DBG]    Agent 86 (global paths from T=12 to 14) has local path: (1,1) (0,1) (0,2) 
[DBG]    Agent 135 (global paths from T=12 to 14) has local path: (3,1) (2,1) (2,0) 
[DBG]  Checking input data for SAT solver:
[DBG]    - Number of agents to replan: 3
[DBG]  Agent 28 has the original local path length: 35 => Start (2,2), Goal (4,4)
[DBG]  Agent 86 has the original local path length: 3 => Start (1,1), Goal (0,2)
[DBG]  Agent 135 has the original local path length: 3 => Start (3,1), Goal (2,0)
[DBG]  Start position: (2, 2), (1, 1), (3, 1), 
[DBG]  Goal position: (4, 4), (0, 2), (2, 0), 
[DBG]  SAT instance and solver created.
Currently solving
Instance name: scen
Map name: map
Encoding used: disappear_at_goal
SAT solver used: Kissat
Optimizing function: sum of costs
Number of agents: 3
Mks LB: 7
SoC LB: 13
Delta: 0
Remaining time: 300000 [ms]

Vertex conflict! Agents 1, 2, timestep 3, location 0
Swapping conflict! Agents 1, 2, timestep 3, edge (0,0)
Vertex conflict! Agents 1, 2, timestep 4, location 0
Swapping conflict! Agents 1, 2, timestep 4, edge (0,0)
Vertex conflict! Agents 1, 2, timestep 5, location 0
Swapping conflict! Agents 1, 2, timestep 5, edge (0,0)
Vertex conflict! Agents 1, 2, timestep 6, location 0
Found plan [agents = 3] [timesteps = 7]
Agent #0 : 9 8 11 12 13 14 15 
Agent #1 : 4 5 1 0 0 0 0 
Agent #2 : 11 10 7 0 0 0 0 

[STAT] Solver returned: 0
[DBG]  Agent (index) 28 | New local path (submap idx):
[DBG]  9 8 11 12 13 14 15 
[DBG]  Agent (index) 86 | New local path (submap idx):
[DBG]  4 5 1 
[DBG]  Agent (index) 135 | New local path (submap idx):
[DBG]  11 10 7 
[DBG]  Update the agent path 28 | Original local length: 35 | New local length: 7
[DBG]  agent 28 t=0 => decoded (sx,sy)=(2,2) => global_id=661
[DBG]  agent 28 t=1 => decoded (sx,sy)=(2,1) => global_id=660
[DBG]  agent 28 t=2 => decoded (sx,sy)=(3,1) => global_id=692
[DBG]  agent 28 t=3 => decoded (sx,sy)=(4,1) => global_id=724
[DBG]  agent 28 t=4 => decoded (sx,sy)=(4,2) => global_id=725
[DBG]  agent 28 t=5 => decoded (sx,sy)=(4,3) => global_id=726
[DBG]  agent 28 t=6 => decoded (sx,sy)=(4,4) => global_id=727
[DBG]  Complete path of agent 28:
[DBG]    Original: 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 629 629 628 627 627 627 627 627 627 627 627 627 659 691 692 724 725 726 727 
[DBG]    New:     661 661 661 661 661 661 661 661 661 661 661 661 661 660 692 724 725 726 727 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 661 661 661 661 661 661 661 661 661 661 661 661 
[DBG]    Local path (in submap): 661 660 692 724 725 726 727 
[DBG]    Suffix (out of submap): 
[DBG]  Original agent path length 28 je: 47
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 0: 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 660, 692, 724, 725, 726, 727, 
[DBG]  Path for agent 28 updated, resulting length: 19
[DBG]  Update the agent path 86 | Original local length: 3 | New local length: 3
[DBG]  agent 86 t=0 => decoded (sx,sy)=(1,1) => global_id=628
[DBG]  agent 86 t=1 => decoded (sx,sy)=(1,2) => global_id=629
[DBG]  agent 86 t=2 => decoded (sx,sy)=(0,2) => global_id=597
[DBG]  Complete path of agent 86:
[DBG]    Original: 781 782 750 751 719 687 655 656 657 658 659 660 628 596 597 565 533 534 534 502 503 504 505 506 507 508 509 541 
[DBG]    New:     781 782 750 751 719 687 655 656 657 658 659 660 628 629 597 565 533 534 534 502 503 504 505 506 507 508 509 541 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 781 782 750 751 719 687 655 656 657 658 659 660 
[DBG]    Local path (in submap): 628 629 597 
[DBG]    Suffix (out of submap): 565 533 534 534 502 503 504 505 506 507 508 509 541 
[DBG]  Original agent path length 86 je: 28
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 1: 781, 782, 750, 751, 719, 687, 655, 656, 657, 658, 659, 660, 628, 629, 597, 565, 533, 534, 534, 502, 503, 504, 505, 506, 507, 508, 509, 541, 
[DBG]  Path for agent 86 updated, resulting length: 28
[DBG]  Update the agent path 135 | Original local length: 3 | New local length: 3
[DBG]  agent 135 t=0 => decoded (sx,sy)=(3,1) => global_id=692
[DBG]  agent 135 t=1 => decoded (sx,sy)=(3,0) => global_id=691
[DBG]  agent 135 t=2 => decoded (sx,sy)=(2,0) => global_id=659
[DBG]  Complete path of agent 135:
[DBG]    Original: 696 696 696 728 727 759 759 759 727 726 725 724 692 660 659 658 657 625 593 592 591 590 589 588 556 555 555 523 522 521 520 519 487 486 485 484 483 482 450 449 448 416 384 
[DBG]    New:     696 696 696 728 727 759 759 759 727 726 725 724 692 691 659 658 657 625 593 592 591 590 589 588 556 555 555 523 522 521 520 519 487 486 485 484 483 482 450 449 448 416 384 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 696 696 696 728 727 759 759 759 727 726 725 724 
[DBG]    Local path (in submap): 692 691 659 
[DBG]    Suffix (out of submap): 658 657 625 593 592 591 590 589 588 556 555 555 523 522 521 520 519 487 486 485 484 483 482 450 449 448 416 384 
[DBG]  Original agent path length 135 je: 43
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 2: 696, 696, 696, 728, 727, 759, 759, 759, 727, 726, 725, 724, 692, 691, 659, 658, 657, 625, 593, 592, 591, 590, 589, 588, 556, 555, 555, 523, 522, 521, 520, 519, 487, 486, 485, 484, 483, 482, 450, 449, 448, 416, 384, 
[DBG]  Path for agent 135 updated, resulting length: 43
[DBG]  Paths successfully updated.
[DBG]  (LNS.cpp) New path for agent 28: 
[DBG]  661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 660, 692, 724, 725, 726, 727, 
[DBG]  (LNS.cpp) New path for agent 86: 
[DBG]  781, 782, 750, 751, 719, 687, 655, 656, 657, 658, 659, 660, 628, 629, 597, 565, 533, 534, 534, 502, 503, 504, 505, 506, 507, 508, 509, 541, 
[DBG]  (LNS.cpp) New path for agent 135: 
[DBG]  696, 696, 696, 728, 727, 759, 759, 759, 727, 726, 725, 724, 692, 691, 659, 658, 657, 625, 593, 592, 591, 590, 589, 588, 556, 555, 555, 523, 522, 521, 520, 519, 487, 486, 485, 484, 483, 482, 450, 449, 448, 416, 384, 
[DBG]  Delta value: 0.243478
[DBG]  Rewarding metric index = 1
[DBG]  component_weights = {0.577348, 0.181624, 0.114118, 0.126909}
[DBG]  opSuccess value: 1
[STAT] neighbor.sum_of_costs before recomputation: 87
[STAT] neighbor.old_sum_of_costs before recomputation: 115
[STAT] sum_of_costs before recomputation: 4484
[DBG]  Validate solution immediately after SAT success.
[WARNING] Problem after SAT: Target conflict: agent 42 (len 46) traverses target of agent 28 (len 18) at location 727 at timestep 45
[DBG]  [DEBUG] Attempting immediate repair via init_lns because problem occurred after SAT (should be applied only for conflicts...).
[DBG]  [DEBUG] Passing 150 agents to init_lns (skip=true).
[DBG]  [DEBUG] path_table contents for selected agents (neighbor.agents):
[DBG]    Agent 28 => controlling path length=19
[DBG]    Agent 86 => controlling path length=28
[DBG]    Agent 135 => controlling path length=43
[DBG]  hodnota skip_initial_solution=1
[DBG]  We skip initialSolution => call buildCollisionData()
[DBG]  buildCollisionData() called â€“ skip_initial_solution case.
[DBG]  Agents.size()=150, collision_graph.size()=150
[DBG]  agent 28 => updateCollidingPairs => foundCollision
[DBG]  agent 42 => updateCollidingPairs => foundCollision
[DBG]  Conflicting agent pairs:
[DBG]  agent 28 is in conflict with agent 42
[DBG]  buildCollisionData() => sum_of_costs=4456, num_of_colliding_pairs=1
[DBG]  buildCollisionData done => sum_of_costs=4456, num_of_colliding_pairs=1
[DBG]  sum_of_cost hodnota: 4456
[DBG]  After skip/init build => iteration_stats.back(): sum_of_costs=4456, collisions=1
[DEBUG] Using default neighbor generation strategy for conflicts: 2
[DEBUG] Using default neighbor generation strategy for conflicts: 2
[DEBUG] Using default neighbor generation strategy for conflicts: 0
	InitLNS(PP): runtime = 0.00199742, iterations = 4, colliding pairs = 0, initial colliding pairs = 1, solution cost = 4482, initial solution cost = 4456, failed iterations = 0
[DBG]  [DEBUG] init_lns->sum_of_costs after init_lns->run: 4482
[DBG]  [DEBUG] sum_of_costs after assignment from init_lns->run: 4482
[DBG]  Recomputing sum_of_cost by dividing neighbor.sum_of_costs and neighbor.old_sum_of_costs
[STAT] sum_of_costs after recomputation: 4482
[STAT] Iteration 50
[DBG]  Using SAT operator (destroy+repair SAT).
[DBG]  ====================
[DBG]  SAT destroy operator called.
[DBG]  SAT heuristic: 2
[DBG]  key_agent_id: 28
[DBG]  key_agent_id global path length: 47
[DBG]  Submap content (global positions):
[DBG]  595 596 597 598 599 
[DBG]  627 628 629 630 631 
[DBG]  659 660 661 662 663 
[DBG]  691 692 693 694 695 
[DBG]  723 724 725 726 727 
[DBG]  Map content with agents and obstacles:
[DBG]  X A A X . 
[DBG]  . . . X . 
[DBG]  . A A X X 
[DBG]  . A X X X 
[DBG]  X . . . . 
[DBG]  content of the map structure that we pass to the SAT solver:
[DBG]  -1  1  1  -1  1  
[DBG]  1  1  1  -1  1  
[DBG]  1  1  1  -1  -1  
[DBG]  1  1  -1  -1  -1  
[DBG]  -1  1  1  1  1  
[DBG]  Identifying agents in a submap for rescheduling (when key_agent is there at the time 22):
[DBG]  Agent 0 found intervals in the sub-map:
[DBG]   [20..23]
[DBG]  Agent 0 (interval in submap: [20..23]) contains time 22, added to replan.
[DBG]  Agent 1 found intervals in the sub-map:
[DBG]  
[DBG]  Agent 1 is not in sub-map at time 22 (intervals: 
[DBG]  )
[DBG]  Agent 3 found intervals in the sub-map:
[DBG]   [19..24]
[DBG]  Agent 3 (interval in submap: [19..24]) contains time 22, added to replan.
[DBG]  Agent 28 found intervals in the sub-map:
[DBG]   [0..46]
[DBG]  Agent 28 (interval in submap: [0..46]) contains time 22, added to replan.
[DBG]  Agent 45 found intervals in the sub-map:
[DBG]   [22..27]
[DBG]  Agent 45 (interval in submap: [22..27]) contains time 22, added to replan.
[DBG]  Agent 57 found intervals in the sub-map:
[DBG]   [21..26]
[DBG]  Agent 57 (interval in submap: [21..26]) contains time 22, added to replan.
[DBG]  Agent 71 found intervals in the sub-map:
[DBG]  
[DBG]  Agent 71 is not in sub-map at time 22 (intervals: 
[DBG]  )
[DBG]  Agent 0 | Start (global): 692 -> (local): (3, 1) at time 22 | Goal (global): 724 -> (local): (4, 1) at time 23
[DBG]  Agent 3 | Start (global): 660 -> (local): (2, 1) at time 22 | Goal (global): 724 -> (local): (4, 1) at time 24
[DBG]  Agent 28 | Start (global): 661 -> (local): (2, 2) at time 22 | Goal (global): 727 -> (local): (4, 4) at time 46
[DBG]  Agent 45 | Start (global): 597 -> (local): (0, 2) at time 22 | Goal (global): 724 -> (local): (4, 1) at time 27
[DBG]  Agent 57 | Start (global): 596 -> (local): (0, 1) at time 22 | Goal (global): 724 -> (local): (4, 1) at time 26
[DBG]  [REPAIR] SAT destroy operator called.
[DBG]  [REPAIR] SAT operator â€“ launching subproblem FOR OPTIMIZATION.
[DBG]  Creating local paths (sx, sy) in the submap for T_sync = 22
[DBG]    Agent 0 (global paths from T=22 to 23) has local path: (3,1) (4,1) 
[DBG]    Agent 3 (global paths from T=22 to 24) has local path: (2,1) (3,1) (4,1) 
[DBG]    Agent 28 (global paths from T=22 to 46) has local path: (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (1,2) (1,2) (1,1) (1,0) (1,0) (1,0) (1,0) (1,0) (1,0) (1,0) (1,0) (1,0) (2,0) (3,0) (3,1) (4,1) (4,2) (4,3) (4,4) 
[DBG]    Agent 45 (global paths from T=22 to 27) has local path: (0,2) (0,1) (1,1) (2,1) (3,1) (4,1) 
[DBG]    Agent 57 (global paths from T=22 to 26) has local path: (0,1) (1,1) (2,1) (3,1) (4,1) 
[DBG]  Checking input data for SAT solver:
[DBG]    - Number of agents to replan: 5
[DBG]  Agent 0 has the original local path length: 2 => Start (3,1), Goal (4,1)
[DBG]  Agent 3 has the original local path length: 3 => Start (2,1), Goal (4,1)
[DBG]  Agent 28 has the original local path length: 25 => Start (2,2), Goal (4,4)
[DBG]  Agent 45 has the original local path length: 6 => Start (0,2), Goal (4,1)
[DBG]  Agent 57 has the original local path length: 5 => Start (0,1), Goal (4,1)
[DBG]  Start position: (3, 1), (2, 1), (2, 2), (0, 2), (0, 1), 
[DBG]  Goal position: (4, 1), (4, 1), (4, 4), (4, 1), (4, 1), 
[DBG]  SAT instance and solver created.
Currently solving
Instance name: scen
Map name: map
Encoding used: disappear_at_goal
SAT solver used: Kissat
Optimizing function: sum of costs
Number of agents: 5
Mks LB: 7
SoC LB: 23
Delta: 0
Remaining time: 300000 [ms]

Vertex conflict! Agents 0, 1, timestep 3, location 0
Swapping conflict! Agents 0, 1, timestep 3, edge (0,0)
Vertex conflict! Agents 0, 1, timestep 4, location 0
Swapping conflict! Agents 0, 1, timestep 4, edge (0,0)
Vertex conflict! Agents 0, 1, timestep 5, location 0
Swapping conflict! Agents 0, 1, timestep 5, edge (0,0)
Vertex conflict! Agents 0, 1, timestep 6, location 0
Vertex conflict! Agents 0, 3, timestep 6, location 0
Vertex conflict! Agents 0, 4, timestep 5, location 0
Swapping conflict! Agents 0, 4, timestep 5, edge (0,0)
Vertex conflict! Agents 0, 4, timestep 6, location 0
Vertex conflict! Agents 1, 3, timestep 6, location 0
Vertex conflict! Agents 1, 4, timestep 5, location 0
Swapping conflict! Agents 1, 4, timestep 5, edge (0,0)
Vertex conflict! Agents 1, 4, timestep 6, location 0
Vertex conflict! Agents 3, 4, timestep 6, location 0
Found plan [agents = 5] [timesteps = 7]
Agent #0 : 11 12 0 0 0 0 0 
Agent #1 : 8 11 12 0 0 0 0 
Agent #2 : 9 8 11 12 13 14 15 
Agent #3 : 1 5 9 8 11 12 0 
Agent #4 : 0 4 8 11 12 0 0 

[STAT] Solver returned: 0
[DBG]  Agent (index) 0 | New local path (submap idx):
[DBG]  11 12 
[DBG]  Agent (index) 3 | New local path (submap idx):
[DBG]  8 11 12 
[DBG]  Agent (index) 28 | New local path (submap idx):
[DBG]  9 8 11 12 13 14 15 
[DBG]  Agent (index) 45 | New local path (submap idx):
[DBG]  1 5 9 8 11 12 
[DBG]  Agent (index) 57 | New local path (submap idx):
[DBG]  0 4 8 11 12 
[DBG]  Update the agent path 0 | Original local length: 2 | New local length: 2
[DBG]  agent 0 t=0 => decoded (sx,sy)=(3,1) => global_id=692
[DBG]  agent 0 t=1 => decoded (sx,sy)=(4,1) => global_id=724
[DBG]  Complete path of agent 0:
[DBG]    Original: 517 549 550 551 583 584 616 648 649 650 682 683 684 685 686 687 688 689 657 658 659 691 692 724 756 788 820 821 822 823 855 856 857 858 859 860 861 829 830 798 799 
[DBG]    New:     517 549 550 551 583 584 616 648 649 650 682 683 684 685 686 687 688 689 657 658 659 691 692 724 756 788 820 821 822 823 855 856 857 858 859 860 861 829 830 798 799 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 517 549 550 551 583 584 616 648 649 650 682 683 684 685 686 687 688 689 657 658 659 691 
[DBG]    Local path (in submap): 692 724 
[DBG]    Suffix (out of submap): 756 788 820 821 822 823 855 856 857 858 859 860 861 829 830 798 799 
[DBG]  Original agent path length 0 je: 41
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 0: 517, 549, 550, 551, 583, 584, 616, 648, 649, 650, 682, 683, 684, 685, 686, 687, 688, 689, 657, 658, 659, 691, 692, 724, 756, 788, 820, 821, 822, 823, 855, 856, 857, 858, 859, 860, 861, 829, 830, 798, 799, 
[DBG]  Path for agent 0 updated, resulting length: 41
[DBG]  Update the agent path 3 | Original local length: 3 | New local length: 3
[DBG]  agent 3 t=0 => decoded (sx,sy)=(2,1) => global_id=660
[DBG]  agent 3 t=1 => decoded (sx,sy)=(3,1) => global_id=692
[DBG]  agent 3 t=2 => decoded (sx,sy)=(4,1) => global_id=724
[DBG]  Complete path of agent 3:
[DBG]    Original: 468 468 468 468 468 468 467 435 435 435 435 435 467 468 469 469 501 533 565 597 629 628 660 692 724 756 755 787 786 818 850 850 850 850 882 881 913 912 
[DBG]    New:     468 468 468 468 468 468 467 435 435 435 435 435 467 468 469 469 501 533 565 597 629 628 660 692 724 756 755 787 786 818 850 850 850 850 882 881 913 912 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 468 468 468 468 468 468 467 435 435 435 435 435 467 468 469 469 501 533 565 597 629 628 
[DBG]    Local path (in submap): 660 692 724 
[DBG]    Suffix (out of submap): 756 755 787 786 818 850 850 850 850 882 881 913 912 
[DBG]  Original agent path length 3 je: 38
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 1: 468, 468, 468, 468, 468, 468, 467, 435, 435, 435, 435, 435, 467, 468, 469, 469, 501, 533, 565, 597, 629, 628, 660, 692, 724, 756, 755, 787, 786, 818, 850, 850, 850, 850, 882, 881, 913, 912, 
[DBG]  Path for agent 3 updated, resulting length: 38
[DBG]  Update the agent path 28 | Original local length: 25 | New local length: 7
[DBG]  agent 28 t=0 => decoded (sx,sy)=(2,2) => global_id=661
[DBG]  agent 28 t=1 => decoded (sx,sy)=(2,1) => global_id=660
[DBG]  agent 28 t=2 => decoded (sx,sy)=(3,1) => global_id=692
[DBG]  agent 28 t=3 => decoded (sx,sy)=(4,1) => global_id=724
[DBG]  agent 28 t=4 => decoded (sx,sy)=(4,2) => global_id=725
[DBG]  agent 28 t=5 => decoded (sx,sy)=(4,3) => global_id=726
[DBG]  agent 28 t=6 => decoded (sx,sy)=(4,4) => global_id=727
[DBG]  Complete path of agent 28:
[DBG]    Original: 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 629 629 628 627 627 627 627 627 627 627 627 627 659 691 692 724 725 726 727 
[DBG]    New:     661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 660 692 724 725 726 727 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 
[DBG]    Local path (in submap): 661 660 692 724 725 726 727 
[DBG]    Suffix (out of submap): 
[DBG]  Original agent path length 28 je: 47
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 2: 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 660, 692, 724, 725, 726, 727, 
[DBG]  Path for agent 28 updated, resulting length: 29
[DBG]  Update the agent path 45 | Original local length: 6 | New local length: 6
[DBG]  agent 45 t=0 => decoded (sx,sy)=(0,2) => global_id=597
[DBG]  agent 45 t=1 => decoded (sx,sy)=(1,2) => global_id=629
[DBG]  agent 45 t=2 => decoded (sx,sy)=(2,2) => global_id=661
[DBG]  agent 45 t=3 => decoded (sx,sy)=(2,1) => global_id=660
[DBG]  agent 45 t=4 => decoded (sx,sy)=(3,1) => global_id=692
[DBG]  agent 45 t=5 => decoded (sx,sy)=(4,1) => global_id=724
[DBG]  Complete path of agent 45:
[DBG]    Original: 153 185 184 183 215 215 247 279 311 343 343 343 375 407 407 406 405 437 469 501 533 565 597 596 628 660 692 724 756 788 787 819 818 817 849 
[DBG]    New:     153 185 184 183 215 215 247 279 311 343 343 343 375 407 407 406 405 437 469 501 533 565 597 629 661 660 692 724 756 788 787 819 818 817 849 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 153 185 184 183 215 215 247 279 311 343 343 343 375 407 407 406 405 437 469 501 533 565 
[DBG]    Local path (in submap): 597 629 661 660 692 724 
[DBG]    Suffix (out of submap): 756 788 787 819 818 817 849 
[DBG]  Original agent path length 45 je: 35
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 3: 153, 185, 184, 183, 215, 215, 247, 279, 311, 343, 343, 343, 375, 407, 407, 406, 405, 437, 469, 501, 533, 565, 597, 629, 661, 660, 692, 724, 756, 788, 787, 819, 818, 817, 849, 
[DBG]  Path for agent 45 updated, resulting length: 35
[DBG]  Update the agent path 57 | Original local length: 5 | New local length: 5
[DBG]  agent 57 t=0 => decoded (sx,sy)=(0,1) => global_id=596
[DBG]  agent 57 t=1 => decoded (sx,sy)=(1,1) => global_id=628
[DBG]  agent 57 t=2 => decoded (sx,sy)=(2,1) => global_id=660
[DBG]  agent 57 t=3 => decoded (sx,sy)=(3,1) => global_id=692
[DBG]  agent 57 t=4 => decoded (sx,sy)=(4,1) => global_id=724
[DBG]  Complete path of agent 57:
[DBG]    Original: 185 217 217 216 248 247 279 311 343 375 375 375 407 439 438 437 437 469 501 533 565 597 596 628 660 692 724 756 788 820 819 851 883 882 881 913 912 944 976 977 
[DBG]    New:     185 217 217 216 248 247 279 311 343 375 375 375 407 439 438 437 437 469 501 533 565 597 596 628 660 692 724 756 788 820 819 851 883 882 881 913 912 944 976 977 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 185 217 217 216 248 247 279 311 343 375 375 375 407 439 438 437 437 469 501 533 565 597 
[DBG]    Local path (in submap): 596 628 660 692 724 
[DBG]    Suffix (out of submap): 756 788 820 819 851 883 882 881 913 912 944 976 977 
[DBG]  Original agent path length 57 je: 40
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 4: 185, 217, 217, 216, 248, 247, 279, 311, 343, 375, 375, 375, 407, 439, 438, 437, 437, 469, 501, 533, 565, 597, 596, 628, 660, 692, 724, 756, 788, 820, 819, 851, 883, 882, 881, 913, 912, 944, 976, 977, 
[DBG]  Path for agent 57 updated, resulting length: 40
[DBG]  Paths successfully updated.
[DBG]  (LNS.cpp) New path for agent 0: 
[DBG]  517, 549, 550, 551, 583, 584, 616, 648, 649, 650, 682, 683, 684, 685, 686, 687, 688, 689, 657, 658, 659, 691, 692, 724, 756, 788, 820, 821, 822, 823, 855, 856, 857, 858, 859, 860, 861, 829, 830, 798, 799, 
[DBG]  (LNS.cpp) New path for agent 3: 
[DBG]  468, 468, 468, 468, 468, 468, 467, 435, 435, 435, 435, 435, 467, 468, 469, 469, 501, 533, 565, 597, 629, 628, 660, 692, 724, 756, 755, 787, 786, 818, 850, 850, 850, 850, 882, 881, 913, 912, 
[DBG]  (LNS.cpp) New path for agent 28: 
[DBG]  661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 660, 692, 724, 725, 726, 727, 
[DBG]  (LNS.cpp) New path for agent 45: 
[DBG]  153, 185, 184, 183, 215, 215, 247, 279, 311, 343, 343, 343, 375, 407, 407, 406, 405, 437, 469, 501, 533, 565, 597, 629, 661, 660, 692, 724, 756, 788, 787, 819, 818, 817, 849, 
[DBG]  (LNS.cpp) New path for agent 57: 
[DBG]  185, 217, 217, 216, 248, 247, 279, 311, 343, 375, 375, 375, 407, 439, 438, 437, 437, 469, 501, 533, 565, 597, 596, 628, 660, 692, 724, 756, 788, 820, 819, 851, 883, 882, 881, 913, 912, 944, 976, 977, 
[DBG]  Delta value: 0.0918367
[DBG]  Rewarding metric index = 0
[DBG]  component_weights = {0.610889, 0.167211, 0.105062, 0.116838}
[DBG]  opSuccess value: 1
[STAT] neighbor.sum_of_costs before recomputation: 178
[STAT] neighbor.old_sum_of_costs before recomputation: 196
[STAT] sum_of_costs before recomputation: 4482
[DBG]  Validate solution immediately after SAT success.
[WARNING] Problem after SAT: Target conflict: agent 42 (len 46) traverses target of agent 28 (len 28) at location 727 at timestep 45
[DBG]  [DEBUG] Attempting immediate repair via init_lns because problem occurred after SAT (should be applied only for conflicts...).
[DBG]  [DEBUG] Passing 150 agents to init_lns (skip=true).
[DBG]  [DEBUG] path_table contents for selected agents (neighbor.agents):
[DBG]    Agent 0 => controlling path length=41
[DBG]    Agent 3 => controlling path length=38
[DBG]    Agent 28 => controlling path length=29
[DBG]    Agent 45 => controlling path length=35
[DBG]    Agent 57 => controlling path length=40
[DBG]  hodnota skip_initial_solution=1
[DBG]  We skip initialSolution => call buildCollisionData()
[DBG]  buildCollisionData() called â€“ skip_initial_solution case.
[DBG]  Agents.size()=150, collision_graph.size()=150
[DBG]  agent 28 => updateCollidingPairs => foundCollision
[DBG]  agent 42 => updateCollidingPairs => foundCollision
[DBG]  Conflicting agent pairs:
[DBG]  agent 28 is in conflict with agent 42
[DBG]  buildCollisionData() => sum_of_costs=4464, num_of_colliding_pairs=1
[DBG]  buildCollisionData done => sum_of_costs=4464, num_of_colliding_pairs=1
[DBG]  sum_of_cost hodnota: 4464
[DBG]  After skip/init build => iteration_stats.back(): sum_of_costs=4464, collisions=1
[DEBUG] Using default neighbor generation strategy for conflicts: 0
	InitLNS(PP): runtime = 0.000548125, iterations = 2, colliding pairs = 0, initial colliding pairs = 1, solution cost = 4482, initial solution cost = 4464, failed iterations = 0
[DBG]  [DEBUG] init_lns->sum_of_costs after init_lns->run: 4482
[DBG]  [DEBUG] sum_of_costs after assignment from init_lns->run: 4482
[DBG]  Recomputing sum_of_cost by dividing neighbor.sum_of_costs and neighbor.old_sum_of_costs
[STAT] sum_of_costs after recomputation: 4482
[STAT] Iteration 51
[DBG]  Using SAT operator (destroy+repair SAT).
[DBG]  ====================
[DBG]  SAT destroy operator called.
[DBG]  SAT heuristic: 2
[DBG]  key_agent_id: 28
[DBG]  key_agent_id global path length: 47
[DBG]  Submap content (global positions):
[DBG]  595 596 597 598 599 
[DBG]  627 628 629 630 631 
[DBG]  659 660 661 662 663 
[DBG]  691 692 693 694 695 
[DBG]  723 724 725 726 727 
[DBG]  Map content with agents and obstacles:
[DBG]  X . . X . 
[DBG]  . . . X A 
[DBG]  . A A X X 
[DBG]  . . X X X 
[DBG]  X A . . A 
[DBG]  content of the map structure that we pass to the SAT solver:
[DBG]  -1  1  1  -1  1  
[DBG]  1  1  1  -1  1  
[DBG]  1  1  1  -1  -1  
[DBG]  1  1  -1  -1  -1  
[DBG]  -1  1  1  1  1  
[DBG]  Identifying agents in a submap for rescheduling (when key_agent is there at the time 1):
[DBG]  Agent 7 found intervals in the sub-map:
[DBG]   [1..4]
[DBG]  Agent 7 (interval in submap: [1..4]) contains time 1, added to replan.
[DBG]  Agent 12 found intervals in the sub-map:
[DBG]   [0..1]
[DBG]  Agent 12 (interval in submap: [0..1]) contains time 1, added to replan.
[DBG]  Agent 28 found intervals in the sub-map:
[DBG]   [0..46]
[DBG]  Agent 28 (interval in submap: [0..46]) contains time 1, added to replan.
[DBG]  Agent 70 found intervals in the sub-map:
[DBG]   [1..1]
[DBG]  Agent 70 (interval in submap: [1..1]) contains time 1, added to replan.
[DBG]  Agent 108 found intervals in the sub-map:
[DBG]   [0..3]
[DBG]  Agent 108 (interval in submap: [0..3]) contains time 1, added to replan.
[DBG]  Agent 7 | Start (global): 724 -> (local): (4, 1) at time 1 | Goal (global): 724 -> (local): (4, 1) at time 4
[DBG]  Agent 12 | Start (global): 727 -> (local): (4, 4) at time 1 | Goal (global): 727 -> (local): (4, 4) at time 1
[DBG]  Agent 28 | Start (global): 661 -> (local): (2, 2) at time 1 | Goal (global): 727 -> (local): (4, 4) at time 46
[DBG]  Agent 70 | Start (global): 631 -> (local): (1, 4) at time 1 | Goal (global): 631 -> (local): (1, 4) at time 1
[DBG]  Agent 108 | Start (global): 660 -> (local): (2, 1) at time 1 | Goal (global): 724 -> (local): (4, 1) at time 3
[DBG]  [REPAIR] SAT destroy operator called.
[DBG]  [REPAIR] SAT operator â€“ launching subproblem FOR OPTIMIZATION.
[DBG]  Creating local paths (sx, sy) in the submap for T_sync = 1
[DBG]    Agent 7 (global paths from T=1 to 4) has local path: (4,1) (4,2) (4,2) (4,1) 
[DBG]    Agent 12 (global paths from T=1 to 1) has local path: (4,4) 
[DBG]    Agent 28 (global paths from T=1 to 46) has local path: (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (1,2) (1,2) (1,1) (1,0) (1,0) (1,0) (1,0) (1,0) (1,0) (1,0) (1,0) (1,0) (2,0) (3,0) (3,1) (4,1) (4,2) (4,3) (4,4) 
[DBG]    Agent 70 (global paths from T=1 to 1) has local path: (1,4) 
[DBG]    Agent 108 (global paths from T=1 to 3) has local path: (2,1) (3,1) (4,1) 
[DBG]  Checking input data for SAT solver:
[DBG]    - Number of agents to replan: 5
[DBG]  Agent 7 has the original local path length: 4 => Start (4,1), Goal (4,1)
[DBG]  Agent 12 has the original local path length: 1 => Start (4,4), Goal (4,4)
[DBG]  Agent 28 has the original local path length: 46 => Start (2,2), Goal (4,4)
[DBG]  Agent 70 has the original local path length: 1 => Start (1,4), Goal (1,4)
[DBG]  Agent 108 has the original local path length: 3 => Start (2,1), Goal (4,1)
[DBG]  Start position: (4, 1), (4, 4), (2, 2), (1, 4), (2, 1), 
[DBG]  Goal position: (4, 1), (4, 4), (4, 4), (1, 4), (4, 1), 
[DBG]  SAT instance and solver created.
Currently solving
Instance name: scen
Map name: map
Encoding used: disappear_at_goal
SAT solver used: Kissat
Optimizing function: sum of costs
Number of agents: 5
Mks LB: 7
SoC LB: 13
Delta: 0
Remaining time: 300000 [ms]

Vertex conflict! Agents 0, 1, timestep 1, location 0
Swapping conflict! Agents 0, 1, timestep 1, edge (0,0)
Vertex conflict! Agents 0, 1, timestep 2, location 0
Swapping conflict! Agents 0, 1, timestep 2, edge (0,0)
Vertex conflict! Agents 0, 1, timestep 3, location 0
Swapping conflict! Agents 0, 1, timestep 3, edge (0,0)
Vertex conflict! Agents 0, 1, timestep 4, location 0
Swapping conflict! Agents 0, 1, timestep 4, edge (0,0)
Vertex conflict! Agents 0, 1, timestep 5, location 0
Swapping conflict! Agents 0, 1, timestep 5, edge (0,0)
Vertex conflict! Agents 0, 1, timestep 6, location 0
Vertex conflict! Agents 0, 3, timestep 1, location 0
Swapping conflict! Agents 0, 3, timestep 1, edge (0,0)
Vertex conflict! Agents 0, 3, timestep 2, location 0
Swapping conflict! Agents 0, 3, timestep 2, edge (0,0)
Vertex conflict! Agents 0, 3, timestep 3, location 0
Swapping conflict! Agents 0, 3, timestep 3, edge (0,0)
Vertex conflict! Agents 0, 3, timestep 4, location 0
Swapping conflict! Agents 0, 3, timestep 4, edge (0,0)
Vertex conflict! Agents 0, 3, timestep 5, location 0
Swapping conflict! Agents 0, 3, timestep 5, edge (0,0)
Vertex conflict! Agents 0, 3, timestep 6, location 0
Vertex conflict! Agents 0, 4, timestep 3, location 0
Swapping conflict! Agents 0, 4, timestep 3, edge (0,0)
Vertex conflict! Agents 0, 4, timestep 4, location 0
Swapping conflict! Agents 0, 4, timestep 4, edge (0,0)
Vertex conflict! Agents 0, 4, timestep 5, location 0
Swapping conflict! Agents 0, 4, timestep 5, edge (0,0)
Vertex conflict! Agents 0, 4, timestep 6, location 0
Vertex conflict! Agents 1, 3, timestep 1, location 0
Swapping conflict! Agents 1, 3, timestep 1, edge (0,0)
Vertex conflict! Agents 1, 3, timestep 2, location 0
Swapping conflict! Agents 1, 3, timestep 2, edge (0,0)
Vertex conflict! Agents 1, 3, timestep 3, location 0
Swapping conflict! Agents 1, 3, timestep 3, edge (0,0)
Vertex conflict! Agents 1, 3, timestep 4, location 0
Swapping conflict! Agents 1, 3, timestep 4, edge (0,0)
Vertex conflict! Agents 1, 3, timestep 5, location 0
Swapping conflict! Agents 1, 3, timestep 5, edge (0,0)
Vertex conflict! Agents 1, 3, timestep 6, location 0
Vertex conflict! Agents 1, 4, timestep 3, location 0
Swapping conflict! Agents 1, 4, timestep 3, edge (0,0)
Vertex conflict! Agents 1, 4, timestep 4, location 0
Swapping conflict! Agents 1, 4, timestep 4, edge (0,0)
Vertex conflict! Agents 1, 4, timestep 5, location 0
Swapping conflict! Agents 1, 4, timestep 5, edge (0,0)
Vertex conflict! Agents 1, 4, timestep 6, location 0
Vertex conflict! Agents 3, 4, timestep 3, location 0
Swapping conflict! Agents 3, 4, timestep 3, edge (0,0)
Vertex conflict! Agents 3, 4, timestep 4, location 0
Swapping conflict! Agents 3, 4, timestep 4, edge (0,0)
Vertex conflict! Agents 3, 4, timestep 5, location 0
Swapping conflict! Agents 3, 4, timestep 5, edge (0,0)
Vertex conflict! Agents 3, 4, timestep 6, location 0
Found plan [agents = 5] [timesteps = 7]
Agent #0 : 12 0 0 0 0 0 0 
Agent #1 : 15 0 0 0 0 0 0 
Agent #2 : 9 8 11 12 13 14 15 
Agent #3 : 6 0 0 0 0 0 0 
Agent #4 : 8 11 12 0 0 0 0 

[STAT] Solver returned: 0
[DBG]  Agent (index) 7 | New local path (submap idx):
[DBG]  12 
[DBG]  Agent (index) 12 | New local path (submap idx):
[DBG]  15 
[DBG]  Agent (index) 28 | New local path (submap idx):
[DBG]  9 8 11 12 13 14 15 
[DBG]  Agent (index) 70 | New local path (submap idx):
[DBG]  6 
[DBG]  Agent (index) 108 | New local path (submap idx):
[DBG]  8 11 12 
[DBG]  Update the agent path 7 | Original local length: 4 | New local length: 1
[DBG]  agent 7 t=0 => decoded (sx,sy)=(4,1) => global_id=724
[DBG]  Complete path of agent 7:
[DBG]    Original: 756 724 725 725 724 756 756 788 820 821 822 854 855 856 857 889 921 
[DBG]    New:     756 724 756 756 788 820 821 822 854 855 856 857 889 921 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 756 
[DBG]    Local path (in submap): 724 756 756 788 
[DBG]    Suffix (out of submap): 820 821 822 854 855 856 857 889 921 
[DBG]  Original agent path length 7 je: 17
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 0: 756, 724, 756, 756, 788, 820, 821, 822, 854, 855, 856, 857, 889, 921, 
[DBG]  Path for agent 7 updated, resulting length: 14
[DBG]  Update the agent path 12 | Original local length: 1 | New local length: 1
[DBG]  agent 12 t=0 => decoded (sx,sy)=(4,4) => global_id=727
[DBG]  Complete path of agent 12:
[DBG]    Original: 726 727 728 729 730 731 732 764 765 766 767 
[DBG]    New:     726 727 728 729 730 731 732 764 765 766 767 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 726 
[DBG]    Local path (in submap): 727 
[DBG]    Suffix (out of submap): 728 729 730 731 732 764 765 766 767 
[DBG]  Original agent path length 12 je: 11
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 1: 726, 727, 728, 729, 730, 731, 732, 764, 765, 766, 767, 
[DBG]  Path for agent 12 updated, resulting length: 11
[DBG]  Update the agent path 28 | Original local length: 46 | New local length: 7
[DBG]  agent 28 t=0 => decoded (sx,sy)=(2,2) => global_id=661
[DBG]  agent 28 t=1 => decoded (sx,sy)=(2,1) => global_id=660
[DBG]  agent 28 t=2 => decoded (sx,sy)=(3,1) => global_id=692
[DBG]  agent 28 t=3 => decoded (sx,sy)=(4,1) => global_id=724
[DBG]  agent 28 t=4 => decoded (sx,sy)=(4,2) => global_id=725
[DBG]  agent 28 t=5 => decoded (sx,sy)=(4,3) => global_id=726
[DBG]  agent 28 t=6 => decoded (sx,sy)=(4,4) => global_id=727
[DBG]  Complete path of agent 28:
[DBG]    Original: 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 629 629 628 627 627 627 627 627 627 627 627 627 659 691 692 724 725 726 727 
[DBG]    New:     661 661 660 692 724 725 726 727 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 661 
[DBG]    Local path (in submap): 661 660 692 724 725 726 727 
[DBG]    Suffix (out of submap): 
[DBG]  Original agent path length 28 je: 47
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 2: 661, 661, 660, 692, 724, 725, 726, 727, 
[DBG]  Path for agent 28 updated, resulting length: 8
[DBG]  Update the agent path 70 | Original local length: 1 | New local length: 1
[DBG]  agent 70 t=0 => decoded (sx,sy)=(1,4) => global_id=631
[DBG]  Complete path of agent 70:
[DBG]    Original: 632 631 632 664 696 728 729 761 793 792 824 823 822 821 820 819 851 850 882 914 913 912 944 976 975 974 
[DBG]    New:     632 631 632 664 696 728 729 761 793 792 824 823 822 821 820 819 851 850 882 914 913 912 944 976 975 974 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 632 
[DBG]    Local path (in submap): 631 
[DBG]    Suffix (out of submap): 632 664 696 728 729 761 793 792 824 823 822 821 820 819 851 850 882 914 913 912 944 976 975 974 
[DBG]  Original agent path length 70 je: 26
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 3: 632, 631, 632, 664, 696, 728, 729, 761, 793, 792, 824, 823, 822, 821, 820, 819, 851, 850, 882, 914, 913, 912, 944, 976, 975, 974, 
[DBG]  Path for agent 70 updated, resulting length: 26
[DBG]  Update the agent path 108 | Original local length: 3 | New local length: 3
[DBG]  agent 108 t=0 => decoded (sx,sy)=(2,1) => global_id=660
[DBG]  agent 108 t=1 => decoded (sx,sy)=(3,1) => global_id=692
[DBG]  agent 108 t=2 => decoded (sx,sy)=(4,1) => global_id=724
[DBG]  Complete path of agent 108:
[DBG]    Original: 628 660 692 724 756 788 788 820 821 822 823 855 856 888 889 921 922 954 955 956 988 989 1021 
[DBG]    New:     628 660 692 724 756 788 788 820 821 822 823 855 856 888 889 921 922 954 955 956 988 989 1021 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 628 
[DBG]    Local path (in submap): 660 692 724 
[DBG]    Suffix (out of submap): 756 788 788 820 821 822 823 855 856 888 889 921 922 954 955 956 988 989 1021 
[DBG]  Original agent path length 108 je: 23
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 4: 628, 660, 692, 724, 756, 788, 788, 820, 821, 822, 823, 855, 856, 888, 889, 921, 922, 954, 955, 956, 988, 989, 1021, 
[DBG]  Path for agent 108 updated, resulting length: 23
[DBG]  Paths successfully updated.
[DBG]  (LNS.cpp) New path for agent 7: 
[DBG]  756, 724, 756, 756, 788, 820, 821, 822, 854, 855, 856, 857, 889, 921, 
[DBG]  (LNS.cpp) New path for agent 12: 
[DBG]  726, 727, 728, 729, 730, 731, 732, 764, 765, 766, 767, 
[DBG]  (LNS.cpp) New path for agent 28: 
[DBG]  661, 661, 660, 692, 724, 725, 726, 727, 
[DBG]  (LNS.cpp) New path for agent 70: 
[DBG]  632, 631, 632, 664, 696, 728, 729, 761, 793, 792, 824, 823, 822, 821, 820, 819, 851, 850, 882, 914, 913, 912, 944, 976, 975, 974, 
[DBG]  (LNS.cpp) New path for agent 108: 
[DBG]  628, 660, 692, 724, 756, 788, 788, 820, 821, 822, 823, 855, 856, 888, 889, 921, 922, 954, 955, 956, 988, 989, 1021, 
[DBG]  Delta value: 0.352941
[DBG]  Rewarding metric index = 0
[DBG]  component_weights = {0.690963, 0.132801, 0.0834418, 0.0927942}
[DBG]  opSuccess value: 1
[STAT] neighbor.sum_of_costs before recomputation: 77
[STAT] neighbor.old_sum_of_costs before recomputation: 119
[STAT] sum_of_costs before recomputation: 4482
[DBG]  Validate solution immediately after SAT success.
[WARNING] Problem after SAT: Target conflict: agent 11 (len 51) traverses target of agent 7 (len 13) at location 921 at timestep 14
[DBG]  [DEBUG] Attempting immediate repair via init_lns because problem occurred after SAT (should be applied only for conflicts...).
[DBG]  [DEBUG] Passing 150 agents to init_lns (skip=true).
[DBG]  [DEBUG] path_table contents for selected agents (neighbor.agents):
[DBG]    Agent 7 => controlling path length=14
[DBG]    Agent 12 => controlling path length=11
[DBG]    Agent 28 => controlling path length=8
[DBG]    Agent 70 => controlling path length=26
[DBG]    Agent 108 => controlling path length=23
[DBG]  hodnota skip_initial_solution=1
[DBG]  We skip initialSolution => call buildCollisionData()
[DBG]  buildCollisionData() called â€“ skip_initial_solution case.
[DBG]  Agents.size()=150, collision_graph.size()=150
[DBG]  agent 7 => updateCollidingPairs => foundCollision
[DBG]  agent 11 => updateCollidingPairs => foundCollision
[DBG]  agent 28 => updateCollidingPairs => foundCollision
[DBG]  agent 38 => updateCollidingPairs => foundCollision
[DBG]  agent 42 => updateCollidingPairs => foundCollision
[DBG]  agent 46 => updateCollidingPairs => foundCollision
[DBG]  agent 47 => updateCollidingPairs => foundCollision
[DBG]  agent 108 => updateCollidingPairs => foundCollision
[DBG]  agent 135 => updateCollidingPairs => foundCollision
[DBG]  Conflicting agent pairs:
[DBG]  agent 7 is in conflict with agent 11
[DBG]  agent 7 is in conflict with agent 38
[DBG]  agent 7 is in conflict with agent 46
[DBG]  agent 7 is in conflict with agent 47
[DBG]  agent 7 is in conflict with agent 108
[DBG]  agent 28 is in conflict with agent 42
[DBG]  agent 28 is in conflict with agent 46
[DBG]  agent 28 is in conflict with agent 135
[DBG]  buildCollisionData() => sum_of_costs=4440, num_of_colliding_pairs=8
[DBG]  buildCollisionData done => sum_of_costs=4440, num_of_colliding_pairs=8
[DBG]  sum_of_cost hodnota: 4440
[DBG]  After skip/init build => iteration_stats.back(): sum_of_costs=4440, collisions=8
[DEBUG] Using default neighbor generation strategy for conflicts: 2
[DEBUG] Using default neighbor generation strategy for conflicts: 0
[DEBUG] Using default neighbor generation strategy for conflicts: 0
	InitLNS(PP): runtime = 0.00569921, iterations = 4, colliding pairs = 0, initial colliding pairs = 8, solution cost = 4488, initial solution cost = 4440, failed iterations = 0
[DBG]  [DEBUG] init_lns->sum_of_costs after init_lns->run: 4488
[DBG]  [DEBUG] sum_of_costs after assignment from init_lns->run: 4488
[DBG]  Recomputing sum_of_cost by dividing neighbor.sum_of_costs and neighbor.old_sum_of_costs
[STAT] sum_of_costs after recomputation: 4488
[STAT] Iteration 52
[DBG]  Using SAT operator (destroy+repair SAT).
[DBG]  ====================
[DBG]  SAT destroy operator called.
[DBG]  SAT heuristic: 2
[DBG]  key_agent_id: 28
[DBG]  key_agent_id global path length: 47
[DBG]  Submap content (global positions):
[DBG]  561 562 563 564 565 
[DBG]  593 594 595 596 597 
[DBG]  625 626 627 628 629 
[DBG]  657 658 659 660 661 
[DBG]  689 690 691 692 693 
[DBG]  Map content with agents and obstacles:
[DBG]  A X . X . 
[DBG]  . . X . . 
[DBG]  . X A . . 
[DBG]  A . . . . 
[DBG]  . X A A X 
[DBG]  content of the map structure that we pass to the SAT solver:
[DBG]  1  -1  1  -1  1  
[DBG]  1  1  -1  1  1  
[DBG]  1  -1  1  1  1  
[DBG]  1  1  1  1  1  
[DBG]  1  -1  1  1  -1  
[DBG]  Identifying agents in a submap for rescheduling (when key_agent is there at the time 32):
[DBG]  Agent 11 found intervals in the sub-map:
[DBG]   [50..51]
[DBG]  Agent 11 is not in sub-map at time 32 (intervals: 
[DBG]  [50..51] )
[DBG]  Agent 26 found intervals in the sub-map:
[DBG]   [25..33]
[DBG]  Agent 26 (interval in submap: [25..33]) contains time 32, added to replan.
[DBG]  Agent 28 found intervals in the sub-map:
[DBG]   [0..42]
[DBG]  Agent 28 (interval in submap: [0..42]) contains time 32, added to replan.
[DBG]  Agent 45 found intervals in the sub-map:
[DBG]   [21..26]
[DBG]  Agent 45 is not in sub-map at time 32 (intervals: 
[DBG]  [21..26] )
[DBG]  Agent 53 found intervals in the sub-map:
[DBG]   [24..32]
[DBG]  Agent 53 (interval in submap: [24..32]) contains time 32, added to replan.
[DBG]  Agent 59 found intervals in the sub-map:
[DBG]   [29..36]
[DBG]  Agent 59 (interval in submap: [29..36]) contains time 32, added to replan.
[DBG]  Agent 69 found intervals in the sub-map:
[DBG]   [32..39]
[DBG]  Agent 69 (interval in submap: [32..39]) contains time 32, added to replan.
[DBG]  Agent 148 found intervals in the sub-map:
[DBG]   [22..26]
[DBG]  Agent 148 is not in sub-map at time 32 (intervals: 
[DBG]  [22..26] )
[DBG]  Agent 26 | Start (global): 691 -> (local): (4, 2) at time 32 | Goal (global): 692 -> (local): (4, 3) at time 33
[DBG]  Agent 28 | Start (global): 627 -> (local): (2, 2) at time 32 | Goal (global): 692 -> (local): (4, 3) at time 42
[DBG]  Agent 53 | Start (global): 692 -> (local): (4, 3) at time 32 | Goal (global): 692 -> (local): (4, 3) at time 32
[DBG]  Agent 59 | Start (global): 657 -> (local): (3, 0) at time 32 | Goal (global): 692 -> (local): (4, 3) at time 36
[DBG]  Agent 69 | Start (global): 561 -> (local): (0, 0) at time 32 | Goal (global): 692 -> (local): (4, 3) at time 39
[DBG]  [REPAIR] SAT destroy operator called.
[DBG]  [REPAIR] SAT operator â€“ launching subproblem FOR OPTIMIZATION.
[DBG]  Creating local paths (sx, sy) in the submap for T_sync = 32
[DBG]    Agent 26 (global paths from T=32 to 33) has local path: (4,2) (4,3) 
[DBG]    Agent 28 (global paths from T=32 to 42) has local path: (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (3,2) (4,2) (4,3) 
[DBG]    Agent 53 (global paths from T=32 to 32) has local path: (4,3) 
[DBG]    Agent 59 (global paths from T=32 to 36) has local path: (3,0) (3,1) (3,2) (4,2) (4,3) 
[DBG]    Agent 69 (global paths from T=32 to 39) has local path: (0,0) (1,0) (2,0) (3,0) (3,1) (3,2) (4,2) (4,3) 
[DBG]  Checking input data for SAT solver:
[DBG]    - Number of agents to replan: 5
[DBG]  Agent 26 has the original local path length: 2 => Start (4,2), Goal (4,3)
[DBG]  Agent 28 has the original local path length: 11 => Start (2,2), Goal (4,3)
[DBG]  Agent 53 has the original local path length: 1 => Start (4,3), Goal (4,3)
[DBG]  Agent 59 has the original local path length: 5 => Start (3,0), Goal (4,3)
[DBG]  Agent 69 has the original local path length: 8 => Start (0,0), Goal (4,3)
[DBG]  Start position: (4, 2), (2, 2), (4, 3), (3, 0), (0, 0), 
[DBG]  Goal position: (4, 3), (4, 3), (4, 3), (4, 3), (4, 3), 
[DBG]  SAT instance and solver created.
Currently solving
Instance name: scen
Map name: map
Encoding used: disappear_at_goal
SAT solver used: Kissat
Optimizing function: sum of costs
Number of agents: 5
Mks LB: 8
SoC LB: 20
Delta: 0
Remaining time: 300000 [ms]

Vertex conflict! Agents 0, 1, timestep 4, location 0
Swapping conflict! Agents 0, 1, timestep 4, edge (0,0)
Vertex conflict! Agents 0, 1, timestep 5, location 0
Swapping conflict! Agents 0, 1, timestep 5, edge (0,0)
Vertex conflict! Agents 0, 1, timestep 6, location 0
Swapping conflict! Agents 0, 1, timestep 6, edge (0,0)
Vertex conflict! Agents 0, 1, timestep 7, location 0
Vertex conflict! Agents 0, 2, timestep 2, location 0
Swapping conflict! Agents 0, 2, timestep 2, edge (0,0)
Vertex conflict! Agents 0, 2, timestep 3, location 0
Swapping conflict! Agents 0, 2, timestep 3, edge (0,0)
Vertex conflict! Agents 0, 2, timestep 4, location 0
Swapping conflict! Agents 0, 2, timestep 4, edge (0,0)
Vertex conflict! Agents 0, 2, timestep 5, location 0
Swapping conflict! Agents 0, 2, timestep 5, edge (0,0)
Vertex conflict! Agents 0, 2, timestep 6, location 0
Swapping conflict! Agents 0, 2, timestep 6, edge (0,0)
Vertex conflict! Agents 0, 2, timestep 7, location 0
Vertex conflict! Agents 0, 3, timestep 5, location 0
Swapping conflict! Agents 0, 3, timestep 5, edge (0,0)
Vertex conflict! Agents 0, 3, timestep 6, location 0
Swapping conflict! Agents 0, 3, timestep 6, edge (0,0)
Vertex conflict! Agents 0, 3, timestep 7, location 0
Vertex conflict! Agents 1, 2, timestep 4, location 0
Swapping conflict! Agents 1, 2, timestep 4, edge (0,0)
Vertex conflict! Agents 1, 2, timestep 5, location 0
Swapping conflict! Agents 1, 2, timestep 5, edge (0,0)
Vertex conflict! Agents 1, 2, timestep 6, location 0
Swapping conflict! Agents 1, 2, timestep 6, edge (0,0)
Vertex conflict! Agents 1, 2, timestep 7, location 0
Vertex conflict! Agents 1, 3, timestep 5, location 0
Swapping conflict! Agents 1, 3, timestep 5, edge (0,0)
Vertex conflict! Agents 1, 3, timestep 6, location 0
Swapping conflict! Agents 1, 3, timestep 6, edge (0,0)
Vertex conflict! Agents 1, 3, timestep 7, location 0
Vertex conflict! Agents 2, 3, timestep 5, location 0
Swapping conflict! Agents 2, 3, timestep 5, edge (0,0)
Vertex conflict! Agents 2, 3, timestep 6, location 0
Swapping conflict! Agents 2, 3, timestep 6, edge (0,0)
Vertex conflict! Agents 2, 3, timestep 7, location 0
Found plan [agents = 5] [timesteps = 8]
Agent #0 : 17 18 0 0 0 0 0 0 
Agent #1 : 8 13 17 18 0 0 0 0 
Agent #2 : 18 0 0 0 0 0 0 0 
Agent #3 : 11 12 13 17 18 0 0 0 
Agent #4 : 0 3 7 11 12 13 17 18 

[STAT] Solver returned: 0
[DBG]  Agent (index) 26 | New local path (submap idx):
[DBG]  17 18 
[DBG]  Agent (index) 28 | New local path (submap idx):
[DBG]  8 13 17 18 
[DBG]  Agent (index) 53 | New local path (submap idx):
[DBG]  18 
[DBG]  Agent (index) 59 | New local path (submap idx):
[DBG]  11 12 13 17 18 
[DBG]  Agent (index) 69 | New local path (submap idx):
[DBG]  0 3 7 11 12 13 17 18 
[DBG]  Update the agent path 26 | Original local length: 2 | New local length: 2
[DBG]  agent 26 t=0 => decoded (sx,sy)=(4,2) => global_id=691
[DBG]  agent 26 t=1 => decoded (sx,sy)=(4,3) => global_id=692
[DBG]  Complete path of agent 26:
[DBG]    Original: 13 14 46 47 48 80 81 82 83 84 116 148 180 212 244 276 308 309 341 373 405 437 469 501 533 565 597 629 628 628 627 659 691 692 724 756 755 
[DBG]    New:     13 14 46 47 48 80 81 82 83 84 116 148 180 212 244 276 308 309 341 373 405 437 469 501 533 565 597 629 628 628 627 659 691 692 724 756 755 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 13 14 46 47 48 80 81 82 83 84 116 148 180 212 244 276 308 309 341 373 405 437 469 501 533 565 597 629 628 628 627 659 
[DBG]    Local path (in submap): 691 692 
[DBG]    Suffix (out of submap): 724 756 755 
[DBG]  Original agent path length 26 je: 37
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 0: 13, 14, 46, 47, 48, 80, 81, 82, 83, 84, 116, 148, 180, 212, 244, 276, 308, 309, 341, 373, 405, 437, 469, 501, 533, 565, 597, 629, 628, 628, 627, 659, 691, 692, 724, 756, 755, 
[DBG]  Path for agent 26 updated, resulting length: 37
[DBG]  Update the agent path 28 | Original local length: 11 | New local length: 4
[DBG]  agent 28 t=0 => decoded (sx,sy)=(2,2) => global_id=627
[DBG]  agent 28 t=1 => decoded (sx,sy)=(3,2) => global_id=659
[DBG]  agent 28 t=2 => decoded (sx,sy)=(4,2) => global_id=691
[DBG]  agent 28 t=3 => decoded (sx,sy)=(4,3) => global_id=692
[DBG]  Complete path of agent 28:
[DBG]    Original: 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 629 629 628 627 627 627 627 627 627 627 627 627 659 691 692 724 725 726 727 
[DBG]    New:     661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 629 629 628 627 627 659 691 692 724 725 726 727 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 629 629 628 627 
[DBG]    Local path (in submap): 627 659 691 692 724 725 726 727 
[DBG]    Suffix (out of submap): 
[DBG]  Original agent path length 28 je: 47
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 1: 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 629, 629, 628, 627, 627, 659, 691, 692, 724, 725, 726, 727, 
[DBG]  Path for agent 28 updated, resulting length: 40
[DBG]  Update the agent path 53 | Original local length: 1 | New local length: 1
[DBG]  agent 53 t=0 => decoded (sx,sy)=(4,3) => global_id=692
[DBG]  Complete path of agent 53:
[DBG]    Original: 84 116 148 180 212 244 276 277 309 309 309 341 340 340 340 341 373 373 373 405 437 469 501 533 565 597 629 628 627 627 659 691 692 724 756 788 820 821 
[DBG]    New:     84 116 148 180 212 244 276 277 309 309 309 341 340 340 340 341 373 373 373 405 437 469 501 533 565 597 629 628 627 627 659 691 692 724 756 788 820 821 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 84 116 148 180 212 244 276 277 309 309 309 341 340 340 340 341 373 373 373 405 437 469 501 533 565 597 629 628 627 627 659 691 
[DBG]    Local path (in submap): 692 
[DBG]    Suffix (out of submap): 724 756 788 820 821 
[DBG]  Original agent path length 53 je: 38
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 2: 84, 116, 148, 180, 212, 244, 276, 277, 309, 309, 309, 341, 340, 340, 340, 341, 373, 373, 373, 405, 437, 469, 501, 533, 565, 597, 629, 628, 627, 627, 659, 691, 692, 724, 756, 788, 820, 821, 
[DBG]  Path for agent 53 updated, resulting length: 38
[DBG]  Update the agent path 59 | Original local length: 5 | New local length: 5
[DBG]  agent 59 t=0 => decoded (sx,sy)=(3,0) => global_id=657
[DBG]  agent 59 t=1 => decoded (sx,sy)=(3,1) => global_id=658
[DBG]  agent 59 t=2 => decoded (sx,sy)=(3,2) => global_id=659
[DBG]  agent 59 t=3 => decoded (sx,sy)=(4,2) => global_id=691
[DBG]  agent 59 t=4 => decoded (sx,sy)=(4,3) => global_id=692
[DBG]  Complete path of agent 59:
[DBG]    Original: 256 257 258 259 260 261 293 294 295 296 296 297 298 299 300 301 333 365 366 398 398 398 430 431 432 464 496 528 529 561 593 625 657 658 659 691 692 724 756 788 820 819 851 883 884 916 917 
[DBG]    New:     256 257 258 259 260 261 293 294 295 296 296 297 298 299 300 301 333 365 366 398 398 398 430 431 432 464 496 528 529 561 593 625 657 658 659 691 692 724 756 788 820 819 851 883 884 916 917 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 256 257 258 259 260 261 293 294 295 296 296 297 298 299 300 301 333 365 366 398 398 398 430 431 432 464 496 528 529 561 593 625 
[DBG]    Local path (in submap): 657 658 659 691 692 
[DBG]    Suffix (out of submap): 724 756 788 820 819 851 883 884 916 917 
[DBG]  Original agent path length 59 je: 47
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 3: 256, 257, 258, 259, 260, 261, 293, 294, 295, 296, 296, 297, 298, 299, 300, 301, 333, 365, 366, 398, 398, 398, 430, 431, 432, 464, 496, 528, 529, 561, 593, 625, 657, 658, 659, 691, 692, 724, 756, 788, 820, 819, 851, 883, 884, 916, 917, 
[DBG]  Path for agent 59 updated, resulting length: 47
[DBG]  Update the agent path 69 | Original local length: 8 | New local length: 8
[DBG]  agent 69 t=0 => decoded (sx,sy)=(0,0) => global_id=561
[DBG]  agent 69 t=1 => decoded (sx,sy)=(1,0) => global_id=593
[DBG]  agent 69 t=2 => decoded (sx,sy)=(2,0) => global_id=625
[DBG]  agent 69 t=3 => decoded (sx,sy)=(3,0) => global_id=657
[DBG]  agent 69 t=4 => decoded (sx,sy)=(3,1) => global_id=658
[DBG]  agent 69 t=5 => decoded (sx,sy)=(3,2) => global_id=659
[DBG]  agent 69 t=6 => decoded (sx,sy)=(4,2) => global_id=691
[DBG]  agent 69 t=7 => decoded (sx,sy)=(4,3) => global_id=692
[DBG]  Complete path of agent 69:
[DBG]    Original: 4 5 37 69 70 71 72 73 74 106 138 139 140 172 204 236 268 269 301 333 365 366 398 430 431 432 432 432 464 496 528 529 561 593 625 657 658 659 691 692 724 756 788 820 
[DBG]    New:     4 5 37 69 70 71 72 73 74 106 138 139 140 172 204 236 268 269 301 333 365 366 398 430 431 432 432 432 464 496 528 529 561 593 625 657 658 659 691 692 724 756 788 820 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 4 5 37 69 70 71 72 73 74 106 138 139 140 172 204 236 268 269 301 333 365 366 398 430 431 432 432 432 464 496 528 529 
[DBG]    Local path (in submap): 561 593 625 657 658 659 691 692 
[DBG]    Suffix (out of submap): 724 756 788 820 
[DBG]  Original agent path length 69 je: 44
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 4: 4, 5, 37, 69, 70, 71, 72, 73, 74, 106, 138, 139, 140, 172, 204, 236, 268, 269, 301, 333, 365, 366, 398, 430, 431, 432, 432, 432, 464, 496, 528, 529, 561, 593, 625, 657, 658, 659, 691, 692, 724, 756, 788, 820, 
[DBG]  Path for agent 69 updated, resulting length: 44
[DBG]  Paths successfully updated.
[DBG]  (LNS.cpp) New path for agent 26: 
[DBG]  13, 14, 46, 47, 48, 80, 81, 82, 83, 84, 116, 148, 180, 212, 244, 276, 308, 309, 341, 373, 405, 437, 469, 501, 533, 565, 597, 629, 628, 628, 627, 659, 691, 692, 724, 756, 755, 
[DBG]  (LNS.cpp) New path for agent 28: 
[DBG]  661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 629, 629, 628, 627, 627, 659, 691, 692, 724, 725, 726, 727, 
[DBG]  (LNS.cpp) New path for agent 53: 
[DBG]  84, 116, 148, 180, 212, 244, 276, 277, 309, 309, 309, 341, 340, 340, 340, 341, 373, 373, 373, 405, 437, 469, 501, 533, 565, 597, 629, 628, 627, 627, 659, 691, 692, 724, 756, 788, 820, 821, 
[DBG]  (LNS.cpp) New path for agent 59: 
[DBG]  256, 257, 258, 259, 260, 261, 293, 294, 295, 296, 296, 297, 298, 299, 300, 301, 333, 365, 366, 398, 398, 398, 430, 431, 432, 464, 496, 528, 529, 561, 593, 625, 657, 658, 659, 691, 692, 724, 756, 788, 820, 819, 851, 883, 884, 916, 917, 
[DBG]  (LNS.cpp) New path for agent 69: 
[DBG]  4, 5, 37, 69, 70, 71, 72, 73, 74, 106, 138, 139, 140, 172, 204, 236, 268, 269, 301, 333, 365, 366, 398, 430, 431, 432, 432, 432, 464, 496, 528, 529, 561, 593, 625, 657, 658, 659, 691, 692, 724, 756, 788, 820, 
[DBG]  Delta value: 0.0336538
[DBG]  Rewarding metric index = 2
[DBG]  component_weights = {0.685923, 0.131832, 0.0901272, 0.0921174}
[DBG]  opSuccess value: 1
[STAT] neighbor.sum_of_costs before recomputation: 201
[STAT] neighbor.old_sum_of_costs before recomputation: 208
[STAT] sum_of_costs before recomputation: 4488
[DBG]  Validate solution immediately after SAT success.
[WARNING] Problem after SAT: Target conflict: agent 42 (len 46) traverses target of agent 28 (len 39) at location 727 at timestep 45
[DBG]  [DEBUG] Attempting immediate repair via init_lns because problem occurred after SAT (should be applied only for conflicts...).
[DBG]  [DEBUG] Passing 150 agents to init_lns (skip=true).
[DBG]  [DEBUG] path_table contents for selected agents (neighbor.agents):
[DBG]    Agent 26 => controlling path length=37
[DBG]    Agent 28 => controlling path length=40
[DBG]    Agent 53 => controlling path length=38
[DBG]    Agent 59 => controlling path length=47
[DBG]    Agent 69 => controlling path length=44
[DBG]  hodnota skip_initial_solution=1
[DBG]  We skip initialSolution => call buildCollisionData()
[DBG]  buildCollisionData() called â€“ skip_initial_solution case.
[DBG]  Agents.size()=150, collision_graph.size()=150
[DBG]  agent 28 => updateCollidingPairs => foundCollision
[DBG]  agent 42 => updateCollidingPairs => foundCollision
[DBG]  Conflicting agent pairs:
[DBG]  agent 28 is in conflict with agent 42
[DBG]  buildCollisionData() => sum_of_costs=4481, num_of_colliding_pairs=1
[DBG]  buildCollisionData done => sum_of_costs=4481, num_of_colliding_pairs=1
[DBG]  sum_of_cost hodnota: 4481
[DBG]  After skip/init build => iteration_stats.back(): sum_of_costs=4481, collisions=1
[DEBUG] Using default neighbor generation strategy for conflicts: 2
[DEBUG] Using default neighbor generation strategy for conflicts: 1
[DEBUG] Using default neighbor generation strategy for conflicts: 2
[DEBUG] Using default neighbor generation strategy for conflicts: 2
[DEBUG] Using default neighbor generation strategy for conflicts: 1
[DEBUG] Using default neighbor generation strategy for conflicts: 1
[DEBUG] Using default neighbor generation strategy for conflicts: 1
[DEBUG] Using default neighbor generation strategy for conflicts: 2
	InitLNS(PP): runtime = 0.0170608, iterations = 9, colliding pairs = 0, initial colliding pairs = 1, solution cost = 4474, initial solution cost = 4481, failed iterations = 1
[DBG]  [DEBUG] init_lns->sum_of_costs after init_lns->run: 4474
[DBG]  [DEBUG] sum_of_costs after assignment from init_lns->run: 4474
[DBG]  Recomputing sum_of_cost by dividing neighbor.sum_of_costs and neighbor.old_sum_of_costs
[STAT] sum_of_costs after recomputation: 4474
[STAT] Iteration 53
[DBG]  Using SAT operator (destroy+repair SAT).
[DBG]  ====================
[DBG]  SAT destroy operator called.
[DBG]  SAT heuristic: 2
[DBG]  key_agent_id: 28
[DBG]  key_agent_id global path length: 44
[DBG]  Submap content (global positions):
[DBG]  661 662 663 664 665 
[DBG]  693 694 695 696 697 
[DBG]  725 726 727 728 729 
[DBG]  757 758 759 760 761 
[DBG]  789 790 791 792 793 
[DBG]  Map content with agents and obstacles:
[DBG]  . X X . X 
[DBG]  X X X . . 
[DBG]  . . A . . 
[DBG]  . X A X . 
[DBG]  X . X . . 
[DBG]  content of the map structure that we pass to the SAT solver:
[DBG]  1  -1  -1  1  -1  
[DBG]  -1  -1  -1  1  1  
[DBG]  1  1  1  1  1  
[DBG]  1  -1  1  -1  1  
[DBG]  -1  1  -1  1  1  
[DBG]  Identifying agents in a submap for rescheduling (when key_agent is there at the time 43):
[DBG]  Agent 1 found intervals in the sub-map:
[DBG]   [17..25]
[DBG]  Agent 1 is not in sub-map at time 43 (intervals: 
[DBG]  [17..25] )
[DBG]  Agent 28 found intervals in the sub-map:
[DBG]   [0..2] [27..43]
[DBG]  Agent 28 (interval in submap: [27..43]) contains time 43, added to replan.
[DBG]  Agent 42 found intervals in the sub-map:
[DBG]   [40..43]
[DBG]  Agent 42 (interval in submap: [40..43]) contains time 43, added to replan.
[DBG]  Agent 53 found intervals in the sub-map:
[DBG]  
[DBG]  Agent 53 is not in sub-map at time 43 (intervals: 
[DBG]  )
[DBG]  Agent 28 | Start (global): 727 -> (local): (2, 2) at time 43 | Goal (global): 727 -> (local): (2, 2) at time 43
[DBG]  Agent 42 | Start (global): 759 -> (local): (3, 2) at time 43 | Goal (global): 759 -> (local): (3, 2) at time 43
[DBG]  [REPAIR] SAT destroy operator called.
[DBG]  [REPAIR] SAT operator â€“ launching subproblem FOR OPTIMIZATION.
[DBG]  Creating local paths (sx, sy) in the submap for T_sync = 43
[DBG]    Agent 28 (global paths from T=43 to 43) has local path: (2,2) 
[DBG]    Agent 42 (global paths from T=43 to 43) has local path: (3,2) 
[DBG]  Checking input data for SAT solver:
[DBG]    - Number of agents to replan: 2
[DBG]  Agent 28 has the original local path length: 1 => Start (2,2), Goal (2,2)
[DBG]  Agent 42 has the original local path length: 1 => Start (3,2), Goal (3,2)
[DBG]  Start position: (2, 2), (3, 2), 
[DBG]  Goal position: (2, 2), (3, 2), 
[DBG]  SAT instance and solver created.
Currently solving
Instance name: scen
Map name: map
Encoding used: disappear_at_goal
SAT solver used: Kissat
Optimizing function: sum of costs
Number of agents: 2
Mks LB: 1
SoC LB: 2
Delta: 0
Remaining time: 300000 [ms]

Found plan [agents = 2] [timesteps = 1]
Agent #0 : 6 
Agent #1 : 10 

[STAT] Solver returned: 0
[DBG]  Agent (index) 28 | New local path (submap idx):
[DBG]  6 
[DBG]  Agent (index) 42 | New local path (submap idx):
[DBG]  10 
[DBG]  Update the agent path 28 | Original local length: 1 | New local length: 1
[DBG]  agent 28 t=0 => decoded (sx,sy)=(2,2) => global_id=727
[DBG]  Complete path of agent 28:
[DBG]    Original: 661 661 661 660 660 660 660 660 660 660 660 659 659 659 660 660 660 660 660 660 660 659 659 660 692 724 756 757 757 757 757 757 757 757 757 757 757 757 757 757 757 725 726 727 
[DBG]    New:     661 661 661 660 660 660 660 660 660 660 660 659 659 659 660 660 660 660 660 660 660 659 659 660 692 724 756 757 757 757 757 757 757 757 757 757 757 757 757 757 757 725 726 727 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 661 661 661 660 660 660 660 660 660 660 660 659 659 659 660 660 660 660 660 660 660 659 659 660 692 724 756 757 757 757 757 757 757 757 757 757 757 757 757 757 757 725 726 
[DBG]    Local path (in submap): 727 
[DBG]    Suffix (out of submap): 
[DBG]  Original agent path length 28 je: 44
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 0: 661, 661, 661, 660, 660, 660, 660, 660, 660, 660, 660, 659, 659, 659, 660, 660, 660, 660, 660, 660, 660, 659, 659, 660, 692, 724, 756, 757, 757, 757, 757, 757, 757, 757, 757, 757, 757, 757, 757, 757, 757, 725, 726, 727, 
[DBG]  Path for agent 28 updated, resulting length: 44
[DBG]  Update the agent path 42 | Original local length: 1 | New local length: 1
[DBG]  agent 42 t=0 => decoded (sx,sy)=(3,2) => global_id=759
[DBG]  Complete path of agent 42:
[DBG]    Original: 224 256 257 258 259 291 323 324 325 326 358 359 360 361 393 425 457 458 459 460 428 429 429 429 430 462 463 464 496 528 529 561 593 625 657 658 659 691 692 724 725 726 727 759 
[DBG]    New:     224 256 257 258 259 291 323 324 325 326 358 359 360 361 393 425 457 458 459 460 428 429 429 429 430 462 463 464 496 528 529 561 593 625 657 658 659 691 692 724 725 726 727 759 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 224 256 257 258 259 291 323 324 325 326 358 359 360 361 393 425 457 458 459 460 428 429 429 429 430 462 463 464 496 528 529 561 593 625 657 658 659 691 692 724 725 726 727 
[DBG]    Local path (in submap): 759 
[DBG]    Suffix (out of submap): 
[DBG]  Original agent path length 42 je: 44
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 1: 224, 256, 257, 258, 259, 291, 323, 324, 325, 326, 358, 359, 360, 361, 393, 425, 457, 458, 459, 460, 428, 429, 429, 429, 430, 462, 463, 464, 496, 528, 529, 561, 593, 625, 657, 658, 659, 691, 692, 724, 725, 726, 727, 759, 
[DBG]  Path for agent 42 updated, resulting length: 44
[DBG]  Paths successfully updated.
[DBG]  (LNS.cpp) New path for agent 28: 
[DBG]  661, 661, 661, 660, 660, 660, 660, 660, 660, 660, 660, 659, 659, 659, 660, 660, 660, 660, 660, 660, 660, 659, 659, 660, 692, 724, 756, 757, 757, 757, 757, 757, 757, 757, 757, 757, 757, 757, 757, 757, 757, 725, 726, 727, 
[DBG]  (LNS.cpp) New path for agent 42: 
[DBG]  224, 256, 257, 258, 259, 291, 323, 324, 325, 326, 358, 359, 360, 361, 393, 425, 457, 458, 459, 460, 428, 429, 429, 429, 430, 462, 463, 464, 496, 528, 529, 561, 593, 625, 657, 658, 659, 691, 692, 724, 725, 726, 727, 759, 
[DBG]  Delta value: 0
[DBG]  Rewarding metric index = 0
[DBG]  component_weights = {0.696866, 0.127239, 0.0869868, 0.0889077}
[DBG]  opSuccess value: 1
[STAT] neighbor.sum_of_costs before recomputation: 86
[STAT] neighbor.old_sum_of_costs before recomputation: 86
[STAT] sum_of_costs before recomputation: 4474
[DBG]  Validate solution immediately after SAT success.
[DBG]  No problems after SAT replan.
[DBG]  Recomputing sum_of_cost by dividing neighbor.sum_of_costs and neighbor.old_sum_of_costs
[STAT] sum_of_costs after recomputation: 4474
[STAT] Iteration 54
[DBG]  Using SAT operator (destroy+repair SAT).
[DBG]  ====================
[DBG]  SAT destroy operator called.
[DBG]  SAT heuristic: 2
[DBG]  key_agent_id: 28
[DBG]  key_agent_id global path length: 44
[DBG]  Submap content (global positions):
[DBG]  594 595 596 597 598 
[DBG]  626 627 628 629 630 
[DBG]  658 659 660 661 662 
[DBG]  690 691 692 693 694 
[DBG]  722 723 724 725 726 
[DBG]  Map content with agents and obstacles:
[DBG]  . X . . X 
[DBG]  X . . A X 
[DBG]  A . A . X 
[DBG]  X . . X X 
[DBG]  . X . . . 
[DBG]  content of the map structure that we pass to the SAT solver:
[DBG]  1  -1  1  1  -1  
[DBG]  -1  1  1  1  -1  
[DBG]  1  1  1  1  -1  
[DBG]  -1  1  1  -1  -1  
[DBG]  1  -1  1  1  1  
[DBG]  Identifying agents in a submap for rescheduling (when key_agent is there at the time 8):
[DBG]  Agent 10 found intervals in the sub-map:
[DBG]   [8..13]
[DBG]  Agent 10 (interval in submap: [8..13]) contains time 8, added to replan.
[DBG]  Agent 28 found intervals in the sub-map:
[DBG]   [0..25] [41..42]
[DBG]  Agent 28 (interval in submap: [0..25]) contains time 8, added to replan.
[DBG]  Agent 63 found intervals in the sub-map:
[DBG]  
[DBG]  Agent 63 is not in sub-map at time 8 (intervals: 
[DBG]  )
[DBG]  Agent 89 found intervals in the sub-map:
[DBG]   [7..14]
[DBG]  Agent 89 (interval in submap: [7..14]) contains time 8, added to replan.
[DBG]  Agent 10 | Start (global): 658 -> (local): (2, 0) at time 8 | Goal (global): 597 -> (local): (0, 3) at time 13
[DBG]  Agent 28 | Start (global): 660 -> (local): (2, 2) at time 8 | Goal (global): 724 -> (local): (4, 2) at time 25
[DBG]  Agent 89 | Start (global): 629 -> (local): (1, 3) at time 8 | Goal (global): 724 -> (local): (4, 2) at time 14
[DBG]  [REPAIR] SAT destroy operator called.
[DBG]  [REPAIR] SAT operator â€“ launching subproblem FOR OPTIMIZATION.
[DBG]  Creating local paths (sx, sy) in the submap for T_sync = 8
[DBG]    Agent 10 (global paths from T=8 to 13) has local path: (2,0) (2,1) (1,1) (1,2) (0,2) (0,3) 
[DBG]    Agent 28 (global paths from T=8 to 25) has local path: (2,2) (2,2) (2,2) (2,1) (2,1) (2,1) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,1) (2,1) (2,2) (3,2) (4,2) 
[DBG]    Agent 89 (global paths from T=8 to 14) has local path: (1,3) (2,3) (2,3) (2,2) (2,2) (3,2) (4,2) 
[DBG]  Checking input data for SAT solver:
[DBG]    - Number of agents to replan: 3
[DBG]  Agent 10 has the original local path length: 6 => Start (2,0), Goal (0,3)
[DBG]  Agent 28 has the original local path length: 18 => Start (2,2), Goal (4,2)
[DBG]  Agent 89 has the original local path length: 7 => Start (1,3), Goal (4,2)
[DBG]  Start position: (2, 0), (2, 2), (1, 3), 
[DBG]  Goal position: (0, 3), (4, 2), (4, 2), 
[DBG]  SAT instance and solver created.
Currently solving
Instance name: scen
Map name: map
Encoding used: disappear_at_goal
SAT solver used: Kissat
Optimizing function: sum of costs
Number of agents: 3
Mks LB: 6
SoC LB: 14
Delta: 0
Remaining time: 300000 [ms]

Vertex conflict! Agents 1, 2, timestep 5, location 0
Found plan [agents = 3] [timesteps = 6]
Agent #0 : 6 7 3 4 5 2 
Agent #1 : 8 11 13 0 0 0 
Agent #2 : 5 9 8 11 13 0 

[STAT] Solver returned: 0
[DBG]  Agent (index) 10 | New local path (submap idx):
[DBG]  6 7 3 4 5 2 
[DBG]  Agent (index) 28 | New local path (submap idx):
[DBG]  8 11 13 
[DBG]  Agent (index) 89 | New local path (submap idx):
[DBG]  5 9 8 11 13 
[DBG]  Update the agent path 10 | Original local length: 6 | New local length: 6
[DBG]  agent 10 t=0 => decoded (sx,sy)=(2,0) => global_id=658
[DBG]  agent 10 t=1 => decoded (sx,sy)=(2,1) => global_id=659
[DBG]  agent 10 t=2 => decoded (sx,sy)=(1,1) => global_id=627
[DBG]  agent 10 t=3 => decoded (sx,sy)=(1,2) => global_id=628
[DBG]  agent 10 t=4 => decoded (sx,sy)=(1,3) => global_id=629
[DBG]  agent 10 t=5 => decoded (sx,sy)=(0,3) => global_id=597
[DBG]  Complete path of agent 10:
[DBG]    Original: 588 589 590 622 654 655 656 657 658 659 627 628 596 597 565 533 534 502 503 504 505 506 507 508 476 
[DBG]    New:     588 589 590 622 654 655 656 657 658 659 627 628 629 597 565 533 534 502 503 504 505 506 507 508 476 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 588 589 590 622 654 655 656 657 
[DBG]    Local path (in submap): 658 659 627 628 629 597 
[DBG]    Suffix (out of submap): 565 533 534 502 503 504 505 506 507 508 476 
[DBG]  Original agent path length 10 je: 25
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 0: 588, 589, 590, 622, 654, 655, 656, 657, 658, 659, 627, 628, 629, 597, 565, 533, 534, 502, 503, 504, 505, 506, 507, 508, 476, 
[DBG]  Path for agent 10 updated, resulting length: 25
[DBG]  Update the agent path 28 | Original local length: 18 | New local length: 3
[DBG]  agent 28 t=0 => decoded (sx,sy)=(2,2) => global_id=660
[DBG]  agent 28 t=1 => decoded (sx,sy)=(3,2) => global_id=692
[DBG]  agent 28 t=2 => decoded (sx,sy)=(4,2) => global_id=724
[DBG]  Complete path of agent 28:
[DBG]    Original: 661 661 661 660 660 660 660 660 660 660 660 659 659 659 660 660 660 660 660 660 660 659 659 660 692 724 756 757 757 757 757 757 757 757 757 757 757 757 757 757 757 725 726 727 
[DBG]    New:     661 661 661 660 660 660 660 660 660 692 724 756 757 757 757 757 757 757 757 757 757 757 757 757 757 757 725 726 727 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 661 661 661 660 660 660 660 660 
[DBG]    Local path (in submap): 660 692 724 756 757 757 757 757 757 757 757 757 757 757 757 757 757 757 
[DBG]    Suffix (out of submap): 725 726 727 
[DBG]  Original agent path length 28 je: 44
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 1: 661, 661, 661, 660, 660, 660, 660, 660, 660, 692, 724, 756, 757, 757, 757, 757, 757, 757, 757, 757, 757, 757, 757, 757, 757, 757, 725, 726, 727, 
[DBG]  Path for agent 28 updated, resulting length: 29
[DBG]  Update the agent path 89 | Original local length: 7 | New local length: 5
[DBG]  agent 89 t=0 => decoded (sx,sy)=(1,3) => global_id=629
[DBG]  agent 89 t=1 => decoded (sx,sy)=(2,3) => global_id=661
[DBG]  agent 89 t=2 => decoded (sx,sy)=(2,2) => global_id=660
[DBG]  agent 89 t=3 => decoded (sx,sy)=(3,2) => global_id=692
[DBG]  agent 89 t=4 => decoded (sx,sy)=(4,2) => global_id=724
[DBG]  Complete path of agent 89:
[DBG]    Original: 437 469 501 502 534 566 565 597 629 661 661 660 660 692 724 756 788 820 821 822 854 854 886 918 950 982 1014 1015 
[DBG]    New:     437 469 501 502 534 566 565 597 629 661 660 692 724 756 788 820 821 822 854 854 886 918 950 982 1014 1015 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 437 469 501 502 534 566 565 597 
[DBG]    Local path (in submap): 629 661 660 692 724 756 788 
[DBG]    Suffix (out of submap): 820 821 822 854 854 886 918 950 982 1014 1015 
[DBG]  Original agent path length 89 je: 28
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 2: 437, 469, 501, 502, 534, 566, 565, 597, 629, 661, 660, 692, 724, 756, 788, 820, 821, 822, 854, 854, 886, 918, 950, 982, 1014, 1015, 
[DBG]  Path for agent 89 updated, resulting length: 26
[DBG]  Paths successfully updated.
[DBG]  (LNS.cpp) New path for agent 10: 
[DBG]  588, 589, 590, 622, 654, 655, 656, 657, 658, 659, 627, 628, 629, 597, 565, 533, 534, 502, 503, 504, 505, 506, 507, 508, 476, 
[DBG]  (LNS.cpp) New path for agent 28: 
[DBG]  661, 661, 661, 660, 660, 660, 660, 660, 660, 692, 724, 756, 757, 757, 757, 757, 757, 757, 757, 757, 757, 757, 757, 757, 757, 757, 725, 726, 727, 
[DBG]  (LNS.cpp) New path for agent 89: 
[DBG]  437, 469, 501, 502, 534, 566, 565, 597, 629, 661, 660, 692, 724, 756, 788, 820, 821, 822, 854, 854, 886, 918, 950, 982, 1014, 1015, 
[DBG]  Delta value: 0.180851
[DBG]  Rewarding metric index = 1
[DBG]  component_weights = {0.675966, 0.153415, 0.0843779, 0.0862412}
[DBG]  opSuccess value: 1
[STAT] neighbor.sum_of_costs before recomputation: 77
[STAT] neighbor.old_sum_of_costs before recomputation: 94
[STAT] sum_of_costs before recomputation: 4474
[DBG]  Validate solution immediately after SAT success.
[WARNING] Problem after SAT: Target conflict: agent 42 (len 43) traverses target of agent 28 (len 28) at location 727 at timestep 42
[DBG]  [DEBUG] Attempting immediate repair via init_lns because problem occurred after SAT (should be applied only for conflicts...).
[DBG]  [DEBUG] Passing 150 agents to init_lns (skip=true).
[DBG]  [DEBUG] path_table contents for selected agents (neighbor.agents):
[DBG]    Agent 10 => controlling path length=25
[DBG]    Agent 28 => controlling path length=29
[DBG]    Agent 89 => controlling path length=26
[DBG]  hodnota skip_initial_solution=1
[DBG]  We skip initialSolution => call buildCollisionData()
[DBG]  buildCollisionData() called â€“ skip_initial_solution case.
[DBG]  Agents.size()=150, collision_graph.size()=150
[DBG]  agent 28 => updateCollidingPairs => foundCollision
[DBG]  agent 42 => updateCollidingPairs => foundCollision
[DBG]  agent 89 => updateCollidingPairs => foundCollision
[DBG]  agent 135 => updateCollidingPairs => foundCollision
[DBG]  Conflicting agent pairs:
[DBG]  agent 28 is in conflict with agent 42
[DBG]  agent 89 is in conflict with agent 135
[DBG]  buildCollisionData() => sum_of_costs=4457, num_of_colliding_pairs=2
[DBG]  buildCollisionData done => sum_of_costs=4457, num_of_colliding_pairs=2
[DBG]  sum_of_cost hodnota: 4457
[DBG]  After skip/init build => iteration_stats.back(): sum_of_costs=4457, collisions=2
[DEBUG] Using default neighbor generation strategy for conflicts: 0
	InitLNS(PP): runtime = 0.00184429, iterations = 2, colliding pairs = 0, initial colliding pairs = 2, solution cost = 4474, initial solution cost = 4457, failed iterations = 0
[DBG]  [DEBUG] init_lns->sum_of_costs after init_lns->run: 4474
[DBG]  [DEBUG] sum_of_costs after assignment from init_lns->run: 4474
[DBG]  Recomputing sum_of_cost by dividing neighbor.sum_of_costs and neighbor.old_sum_of_costs
[STAT] sum_of_costs after recomputation: 4474
[STAT] Iteration 55
[DBG]  Using SAT operator (destroy+repair SAT).
[DBG]  ====================
[DBG]  SAT destroy operator called.
[DBG]  SAT heuristic: 2
[DBG]  key_agent_id: 28
[DBG]  key_agent_id global path length: 44
[DBG]  Submap content (global positions):
[DBG]  595 596 597 598 599 
[DBG]  627 628 629 630 631 
[DBG]  659 660 661 662 663 
[DBG]  691 692 693 694 695 
[DBG]  723 724 725 726 727 
[DBG]  Map content with agents and obstacles:
[DBG]  X . . X . 
[DBG]  . . . X . 
[DBG]  . . A X X 
[DBG]  . . X X X 
[DBG]  X . . A . 
[DBG]  content of the map structure that we pass to the SAT solver:
[DBG]  -1  1  1  -1  1  
[DBG]  1  1  1  -1  1  
[DBG]  1  1  1  -1  -1  
[DBG]  1  1  -1  -1  -1  
[DBG]  -1  1  1  1  1  
[DBG]  Identifying agents in a submap for rescheduling (when key_agent is there at the time 6):
[DBG]  Agent 28 found intervals in the sub-map:
[DBG]   [0..31] [41..43]
[DBG]  Agent 28 (interval in submap: [0..31]) contains time 6, added to replan.
[DBG]  Agent 46 found intervals in the sub-map:
[DBG]   [4..7]
[DBG]  Agent 46 (interval in submap: [4..7]) contains time 6, added to replan.
[DBG]  Agent 89 found intervals in the sub-map:
[DBG]   [7..14]
[DBG]  Agent 89 is not in sub-map at time 6 (intervals: 
[DBG]  [7..14] )
[DBG]  Agent 113 found intervals in the sub-map:
[DBG]  
[DBG]  Agent 113 is not in sub-map at time 6 (intervals: 
[DBG]  )
[DBG]  Agent 28 | Start (global): 661 -> (local): (2, 2) at time 6 | Goal (global): 724 -> (local): (4, 1) at time 31
[DBG]  Agent 46 | Start (global): 726 -> (local): (4, 3) at time 6 | Goal (global): 727 -> (local): (4, 4) at time 7
[DBG]  [REPAIR] SAT destroy operator called.
[DBG]  [REPAIR] SAT operator â€“ launching subproblem FOR OPTIMIZATION.
[DBG]  Creating local paths (sx, sy) in the submap for T_sync = 6
[DBG]    Agent 28 (global paths from T=6 to 31) has local path: (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,1) (3,1) (3,0) (3,0) (3,1) (4,1) 
[DBG]    Agent 46 (global paths from T=6 to 7) has local path: (4,3) (4,4) 
[DBG]  Checking input data for SAT solver:
[DBG]    - Number of agents to replan: 2
[DBG]  Agent 28 has the original local path length: 26 => Start (2,2), Goal (4,1)
[DBG]  Agent 46 has the original local path length: 2 => Start (4,3), Goal (4,4)
[DBG]  Start position: (2, 2), (4, 3), 
[DBG]  Goal position: (4, 1), (4, 4), 
[DBG]  SAT instance and solver created.
Currently solving
Instance name: scen
Map name: map
Encoding used: disappear_at_goal
SAT solver used: Kissat
Optimizing function: sum of costs
Number of agents: 2
Mks LB: 4
SoC LB: 6
Delta: 0
Remaining time: 300000 [ms]

Found plan [agents = 2] [timesteps = 4]
Agent #0 : 9 8 11 12 
Agent #1 : 14 15 0 0 

[STAT] Solver returned: 0
[DBG]  Agent (index) 28 | New local path (submap idx):
[DBG]  9 8 11 12 
[DBG]  Agent (index) 46 | New local path (submap idx):
[DBG]  14 15 
[DBG]  Update the agent path 28 | Original local length: 26 | New local length: 4
[DBG]  agent 28 t=0 => decoded (sx,sy)=(2,2) => global_id=661
[DBG]  agent 28 t=1 => decoded (sx,sy)=(2,1) => global_id=660
[DBG]  agent 28 t=2 => decoded (sx,sy)=(3,1) => global_id=692
[DBG]  agent 28 t=3 => decoded (sx,sy)=(4,1) => global_id=724
[DBG]  Complete path of agent 28:
[DBG]    Original: 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 660 692 691 691 692 724 756 757 757 757 757 757 757 757 757 725 726 727 
[DBG]    New:     661 661 661 661 661 661 661 660 692 724 756 757 757 757 757 757 757 757 757 725 726 727 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 661 661 661 661 661 661 
[DBG]    Local path (in submap): 661 660 692 724 756 757 757 757 757 757 757 757 757 725 726 727 
[DBG]    Suffix (out of submap): 
[DBG]  Original agent path length 28 je: 44
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 0: 661, 661, 661, 661, 661, 661, 661, 660, 692, 724, 756, 757, 757, 757, 757, 757, 757, 757, 757, 725, 726, 727, 
[DBG]  Path for agent 28 updated, resulting length: 22
[DBG]  Update the agent path 46 | Original local length: 2 | New local length: 2
[DBG]  agent 46 t=0 => decoded (sx,sy)=(4,3) => global_id=726
[DBG]  agent 46 t=1 => decoded (sx,sy)=(4,4) => global_id=727
[DBG]  Complete path of agent 46:
[DBG]    Original: 786 787 788 756 724 725 726 727 728 696 664 632 600 601 569 570 538 539 540 541 509 477 445 413 381 349 317 285 284 252 
[DBG]    New:     786 787 788 756 724 725 726 727 728 696 664 632 600 601 569 570 538 539 540 541 509 477 445 413 381 349 317 285 284 252 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 786 787 788 756 724 725 
[DBG]    Local path (in submap): 726 727 
[DBG]    Suffix (out of submap): 728 696 664 632 600 601 569 570 538 539 540 541 509 477 445 413 381 349 317 285 284 252 
[DBG]  Original agent path length 46 je: 30
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 1: 786, 787, 788, 756, 724, 725, 726, 727, 728, 696, 664, 632, 600, 601, 569, 570, 538, 539, 540, 541, 509, 477, 445, 413, 381, 349, 317, 285, 284, 252, 
[DBG]  Path for agent 46 updated, resulting length: 30
[DBG]  Paths successfully updated.
[DBG]  (LNS.cpp) New path for agent 28: 
[DBG]  661, 661, 661, 661, 661, 661, 661, 660, 692, 724, 756, 757, 757, 757, 757, 757, 757, 757, 757, 725, 726, 727, 
[DBG]  (LNS.cpp) New path for agent 46: 
[DBG]  786, 787, 788, 756, 724, 725, 726, 727, 728, 696, 664, 632, 600, 601, 569, 570, 538, 539, 540, 541, 509, 477, 445, 413, 381, 349, 317, 285, 284, 252, 
[DBG]  Delta value: 0.305556
[DBG]  Rewarding metric index = 0
[DBG]  component_weights = {0.741392, 0.122439, 0.0673411, 0.0688281}
[DBG]  opSuccess value: 1
[STAT] neighbor.sum_of_costs before recomputation: 50
[STAT] neighbor.old_sum_of_costs before recomputation: 72
[STAT] sum_of_costs before recomputation: 4474
[DBG]  Validate solution immediately after SAT success.
[WARNING] Problem after SAT: Target conflict: agent 42 (len 43) traverses target of agent 28 (len 21) at location 727 at timestep 42
[DBG]  [DEBUG] Attempting immediate repair via init_lns because problem occurred after SAT (should be applied only for conflicts...).
[DBG]  [DEBUG] Passing 150 agents to init_lns (skip=true).
[DBG]  [DEBUG] path_table contents for selected agents (neighbor.agents):
[DBG]    Agent 28 => controlling path length=22
[DBG]    Agent 46 => controlling path length=30
[DBG]  hodnota skip_initial_solution=1
[DBG]  We skip initialSolution => call buildCollisionData()
[DBG]  buildCollisionData() called â€“ skip_initial_solution case.
[DBG]  Agents.size()=150, collision_graph.size()=150
[DBG]  agent 28 => updateCollidingPairs => foundCollision
[DBG]  agent 42 => updateCollidingPairs => foundCollision
[DBG]  Conflicting agent pairs:
[DBG]  agent 28 is in conflict with agent 42
[DBG]  buildCollisionData() => sum_of_costs=4452, num_of_colliding_pairs=1
[DBG]  buildCollisionData done => sum_of_costs=4452, num_of_colliding_pairs=1
[DBG]  sum_of_cost hodnota: 4452
[DBG]  After skip/init build => iteration_stats.back(): sum_of_costs=4452, collisions=1
[DEBUG] Using default neighbor generation strategy for conflicts: 1
[DEBUG] Using default neighbor generation strategy for conflicts: 1
	InitLNS(PP): runtime = 0.00400371, iterations = 3, colliding pairs = 0, initial colliding pairs = 1, solution cost = 4463, initial solution cost = 4452, failed iterations = 0
[DBG]  [DEBUG] init_lns->sum_of_costs after init_lns->run: 4463
[DBG]  [DEBUG] sum_of_costs after assignment from init_lns->run: 4463
[DBG]  Recomputing sum_of_cost by dividing neighbor.sum_of_costs and neighbor.old_sum_of_costs
[STAT] sum_of_costs after recomputation: 4463
[STAT] Iteration 56
[DBG]  Using SAT operator (destroy+repair SAT).
[DBG]  ====================
[DBG]  SAT destroy operator called.
[DBG]  SAT heuristic: 2
[DBG]  key_agent_id: 28
[DBG]  key_agent_id global path length: 41
[DBG]  Submap content (global positions):
[DBG]  691 692 693 694 695 
[DBG]  723 724 725 726 727 
[DBG]  755 756 757 758 759 
[DBG]  787 788 789 790 791 
[DBG]  819 820 821 822 823 
[DBG]  Map content with agents and obstacles:
[DBG]  . A X X X 
[DBG]  X . . . . 
[DBG]  . . A X . 
[DBG]  . . X . X 
[DBG]  . A . . . 
[DBG]  content of the map structure that we pass to the SAT solver:
[DBG]  1  1  -1  -1  -1  
[DBG]  -1  1  1  1  1  
[DBG]  1  1  1  -1  1  
[DBG]  1  1  -1  1  -1  
[DBG]  1  1  1  1  1  
[DBG]  Identifying agents in a submap for rescheduling (when key_agent is there at the time 33):
[DBG]  Agent 1 found intervals in the sub-map:
[DBG]  
[DBG]  Agent 1 is not in sub-map at time 33 (intervals: 
[DBG]  )
[DBG]  Agent 26 found intervals in the sub-map:
[DBG]   [32..36]
[DBG]  Agent 26 (interval in submap: [32..36]) contains time 33, added to replan.
[DBG]  Agent 28 found intervals in the sub-map:
[DBG]   [27..40]
[DBG]  Agent 28 (interval in submap: [27..40]) contains time 33, added to replan.
[DBG]  Agent 53 found intervals in the sub-map:
[DBG]   [29..34]
[DBG]  Agent 53 (interval in submap: [29..34]) contains time 33, added to replan.
[DBG]  Agent 26 | Start (global): 692 -> (local): (0, 1) at time 33 | Goal (global): 755 -> (local): (2, 0) at time 36
[DBG]  Agent 28 | Start (global): 757 -> (local): (2, 2) at time 33 | Goal (global): 727 -> (local): (1, 4) at time 40
[DBG]  Agent 53 | Start (global): 820 -> (local): (4, 1) at time 33 | Goal (global): 821 -> (local): (4, 2) at time 34
[DBG]  [REPAIR] SAT destroy operator called.
[DBG]  [REPAIR] SAT operator â€“ launching subproblem FOR OPTIMIZATION.
[DBG]  Creating local paths (sx, sy) in the submap for T_sync = 33
[DBG]    Agent 26 (global paths from T=33 to 36) has local path: (0,1) (1,1) (2,1) (2,0) 
[DBG]    Agent 28 (global paths from T=33 to 40) has local path: (2,2) (2,2) (2,2) (2,2) (2,2) (1,2) (1,3) (1,4) 
[DBG]    Agent 53 (global paths from T=33 to 34) has local path: (4,1) (4,2) 
[DBG]  Checking input data for SAT solver:
[DBG]    - Number of agents to replan: 3
[DBG]  Agent 26 has the original local path length: 4 => Start (0,1), Goal (2,0)
[DBG]  Agent 28 has the original local path length: 8 => Start (2,2), Goal (1,4)
[DBG]  Agent 53 has the original local path length: 2 => Start (4,1), Goal (4,2)
[DBG]  Start position: (0, 1), (2, 2), (4, 1), 
[DBG]  Goal position: (2, 0), (1, 4), (4, 2), 
[DBG]  SAT instance and solver created.
Currently solving
Instance name: scen
Map name: map
Encoding used: disappear_at_goal
SAT solver used: Kissat
Optimizing function: sum of costs
Number of agents: 3
Mks LB: 4
SoC LB: 10
Delta: 0
Remaining time: 300000 [ms]

Found plan [agents = 3] [timesteps = 4]
Agent #0 : 1 2 7 6 
Agent #1 : 8 3 4 5 
Agent #2 : 14 15 0 0 

[STAT] Solver returned: 0
[DBG]  Agent (index) 26 | New local path (submap idx):
[DBG]  1 2 7 6 
[DBG]  Agent (index) 28 | New local path (submap idx):
[DBG]  8 3 4 5 
[DBG]  Agent (index) 53 | New local path (submap idx):
[DBG]  14 15 
[DBG]  Update the agent path 26 | Original local length: 4 | New local length: 4
[DBG]  agent 26 t=0 => decoded (sx,sy)=(0,1) => global_id=692
[DBG]  agent 26 t=1 => decoded (sx,sy)=(1,1) => global_id=724
[DBG]  agent 26 t=2 => decoded (sx,sy)=(2,1) => global_id=756
[DBG]  agent 26 t=3 => decoded (sx,sy)=(2,0) => global_id=755
[DBG]  Complete path of agent 26:
[DBG]    Original: 13 14 46 47 79 80 81 82 83 84 116 148 180 212 244 276 308 309 341 373 405 437 469 501 533 565 597 596 628 628 627 659 691 692 724 756 755 
[DBG]    New:     13 14 46 47 79 80 81 82 83 84 116 148 180 212 244 276 308 309 341 373 405 437 469 501 533 565 597 596 628 628 627 659 691 692 724 756 755 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 13 14 46 47 79 80 81 82 83 84 116 148 180 212 244 276 308 309 341 373 405 437 469 501 533 565 597 596 628 628 627 659 691 
[DBG]    Local path (in submap): 692 724 756 755 
[DBG]    Suffix (out of submap): 
[DBG]  Original agent path length 26 je: 37
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 0: 13, 14, 46, 47, 79, 80, 81, 82, 83, 84, 116, 148, 180, 212, 244, 276, 308, 309, 341, 373, 405, 437, 469, 501, 533, 565, 597, 596, 628, 628, 627, 659, 691, 692, 724, 756, 755, 
[DBG]  Path for agent 26 updated, resulting length: 37
[DBG]  Update the agent path 28 | Original local length: 8 | New local length: 4
[DBG]  agent 28 t=0 => decoded (sx,sy)=(2,2) => global_id=757
[DBG]  agent 28 t=1 => decoded (sx,sy)=(1,2) => global_id=725
[DBG]  agent 28 t=2 => decoded (sx,sy)=(1,3) => global_id=726
[DBG]  agent 28 t=3 => decoded (sx,sy)=(1,4) => global_id=727
[DBG]  Complete path of agent 28:
[DBG]    Original: 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 660 692 691 691 692 724 756 757 757 757 757 757 725 726 727 
[DBG]    New:     661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 660 692 691 691 692 724 756 757 725 726 727 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 660 692 691 691 692 724 756 
[DBG]    Local path (in submap): 757 725 726 727 
[DBG]    Suffix (out of submap): 
[DBG]  Original agent path length 28 je: 41
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 1: 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 660, 692, 691, 691, 692, 724, 756, 757, 725, 726, 727, 
[DBG]  Path for agent 28 updated, resulting length: 37
[DBG]  Update the agent path 53 | Original local length: 2 | New local length: 2
[DBG]  agent 53 t=0 => decoded (sx,sy)=(4,1) => global_id=820
[DBG]  agent 53 t=1 => decoded (sx,sy)=(4,2) => global_id=821
[DBG]  Complete path of agent 53:
[DBG]    Original: 84 116 148 180 212 244 276 308 309 309 309 341 340 340 340 341 373 373 373 405 437 469 501 533 565 597 596 628 660 692 724 756 788 820 821 
[DBG]    New:     84 116 148 180 212 244 276 308 309 309 309 341 340 340 340 341 373 373 373 405 437 469 501 533 565 597 596 628 660 692 724 756 788 820 821 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 84 116 148 180 212 244 276 308 309 309 309 341 340 340 340 341 373 373 373 405 437 469 501 533 565 597 596 628 660 692 724 756 788 
[DBG]    Local path (in submap): 820 821 
[DBG]    Suffix (out of submap): 
[DBG]  Original agent path length 53 je: 35
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 2: 84, 116, 148, 180, 212, 244, 276, 308, 309, 309, 309, 341, 340, 340, 340, 341, 373, 373, 373, 405, 437, 469, 501, 533, 565, 597, 596, 628, 660, 692, 724, 756, 788, 820, 821, 
[DBG]  Path for agent 53 updated, resulting length: 35
[DBG]  Paths successfully updated.
[DBG]  (LNS.cpp) New path for agent 26: 
[DBG]  13, 14, 46, 47, 79, 80, 81, 82, 83, 84, 116, 148, 180, 212, 244, 276, 308, 309, 341, 373, 405, 437, 469, 501, 533, 565, 597, 596, 628, 628, 627, 659, 691, 692, 724, 756, 755, 
[DBG]  (LNS.cpp) New path for agent 28: 
[DBG]  661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 660, 692, 691, 691, 692, 724, 756, 757, 725, 726, 727, 
[DBG]  (LNS.cpp) New path for agent 53: 
[DBG]  84, 116, 148, 180, 212, 244, 276, 308, 309, 309, 309, 341, 340, 340, 340, 341, 373, 373, 373, 405, 437, 469, 501, 533, 565, 597, 596, 628, 660, 692, 724, 756, 788, 820, 821, 
[DBG]  Delta value: 0.0363636
[DBG]  Rewarding metric index = 0
[DBG]  component_weights = {0.757722, 0.114707, 0.063089, 0.0644821}
[DBG]  opSuccess value: 1
[STAT] neighbor.sum_of_costs before recomputation: 106
[STAT] neighbor.old_sum_of_costs before recomputation: 110
[STAT] sum_of_costs before recomputation: 4463
[DBG]  Validate solution immediately after SAT success.
[WARNING] Problem after SAT: Target conflict: agent 42 (len 40) traverses target of agent 28 (len 36) at location 727 at timestep 39
[DBG]  [DEBUG] Attempting immediate repair via init_lns because problem occurred after SAT (should be applied only for conflicts...).
[DBG]  [DEBUG] Passing 150 agents to init_lns (skip=true).
[DBG]  [DEBUG] path_table contents for selected agents (neighbor.agents):
[DBG]    Agent 26 => controlling path length=37
[DBG]    Agent 28 => controlling path length=37
[DBG]    Agent 53 => controlling path length=35
[DBG]  hodnota skip_initial_solution=1
[DBG]  We skip initialSolution => call buildCollisionData()
[DBG]  buildCollisionData() called â€“ skip_initial_solution case.
[DBG]  Agents.size()=150, collision_graph.size()=150
[DBG]  agent 28 => updateCollidingPairs => foundCollision
[DBG]  agent 42 => updateCollidingPairs => foundCollision
[DBG]  Conflicting agent pairs:
[DBG]  agent 28 is in conflict with agent 42
[DBG]  buildCollisionData() => sum_of_costs=4459, num_of_colliding_pairs=1
[DBG]  buildCollisionData done => sum_of_costs=4459, num_of_colliding_pairs=1
[DBG]  sum_of_cost hodnota: 4459
[DBG]  After skip/init build => iteration_stats.back(): sum_of_costs=4459, collisions=1
[DEBUG] Using default neighbor generation strategy for conflicts: 1
[DEBUG] Using default neighbor generation strategy for conflicts: 2
[DEBUG] Using default neighbor generation strategy for conflicts: 2
[DEBUG] Using default neighbor generation strategy for conflicts: 1
[DEBUG] Using default neighbor generation strategy for conflicts: 0
	InitLNS(PP): runtime = 0.00838971, iterations = 6, colliding pairs = 0, initial colliding pairs = 1, solution cost = 4443, initial solution cost = 4459, failed iterations = 0
[DBG]  [DEBUG] init_lns->sum_of_costs after init_lns->run: 4443
[DBG]  [DEBUG] sum_of_costs after assignment from init_lns->run: 4443
[DBG]  Recomputing sum_of_cost by dividing neighbor.sum_of_costs and neighbor.old_sum_of_costs
[STAT] sum_of_costs after recomputation: 4443
[STAT] Iteration 57
[DBG]  Using SAT operator (destroy+repair SAT).
[DBG]  ====================
[DBG]  SAT destroy operator called.
[DBG]  SAT heuristic: 2
[DBG]  key_agent_id: 28
[DBG]  key_agent_id global path length: 41
[DBG]  Submap content (global positions):
[DBG]  626 627 628 629 630 
[DBG]  658 659 660 661 662 
[DBG]  690 691 692 693 694 
[DBG]  722 723 724 725 726 
[DBG]  754 755 756 757 758 
[DBG]  Map content with agents and obstacles:
[DBG]  X A A . X 
[DBG]  . A A . X 
[DBG]  X . A X X 
[DBG]  . X A . . 
[DBG]  X . A A X 
[DBG]  content of the map structure that we pass to the SAT solver:
[DBG]  -1  1  1  1  -1  
[DBG]  1  1  1  1  -1  
[DBG]  -1  1  1  -1  -1  
[DBG]  1  -1  1  1  1  
[DBG]  -1  1  1  1  -1  
[DBG]  Identifying agents in a submap for rescheduling (when key_agent is there at the time 27):
[DBG]  Agent 3 found intervals in the sub-map:
[DBG]   [19..29]
[DBG]  Agent 3 (interval in submap: [19..29]) contains time 27, added to replan.
[DBG]  Agent 26 found intervals in the sub-map:
[DBG]   [28..36]
[DBG]  Agent 26 is not in sub-map at time 27 (intervals: 
[DBG]  [28..36] )
[DBG]  Agent 28 found intervals in the sub-map:
[DBG]   [0..39]
[DBG]  Agent 28 (interval in submap: [0..39]) contains time 27, added to replan.
[DBG]  Agent 44 found intervals in the sub-map:
[DBG]   [25..28]
[DBG]  Agent 44 (interval in submap: [25..28]) contains time 27, added to replan.
[DBG]  Agent 45 found intervals in the sub-map:
[DBG]   [22..28]
[DBG]  Agent 45 (interval in submap: [22..28]) contains time 27, added to replan.
[DBG]  Agent 53 found intervals in the sub-map:
[DBG]   [27..31]
[DBG]  Agent 53 (interval in submap: [27..31]) contains time 27, added to replan.
[DBG]  Agent 57 found intervals in the sub-map:
[DBG]   [24..28]
[DBG]  Agent 57 (interval in submap: [24..28]) contains time 27, added to replan.
[DBG]  Agent 100 found intervals in the sub-map:
[DBG]   [25..29]
[DBG]  Agent 100 (interval in submap: [25..29]) contains time 27, added to replan.
[DBG]  Agent 148 found intervals in the sub-map:
[DBG]   [25..29]
[DBG]  Agent 148 (interval in submap: [25..29]) contains time 27, added to replan.
[DBG]  Agent 3 | Start (global): 757 -> (local): (4, 3) at time 27 | Goal (global): 756 -> (local): (4, 2) at time 29
[DBG]  Agent 28 | Start (global): 692 -> (local): (2, 2) at time 27 | Goal (global): 726 -> (local): (3, 4) at time 39
[DBG]  Agent 44 | Start (global): 659 -> (local): (1, 1) at time 27 | Goal (global): 658 -> (local): (1, 0) at time 28
[DBG]  Agent 45 | Start (global): 756 -> (local): (4, 2) at time 27 | Goal (global): 755 -> (local): (4, 1) at time 28
[DBG]  Agent 53 | Start (global): 628 -> (local): (0, 2) at time 27 | Goal (global): 756 -> (local): (4, 2) at time 31
[DBG]  Agent 57 | Start (global): 724 -> (local): (3, 2) at time 27 | Goal (global): 756 -> (local): (4, 2) at time 28
[DBG]  Agent 100 | Start (global): 627 -> (local): (0, 1) at time 27 | Goal (global): 658 -> (local): (1, 0) at time 29
[DBG]  Agent 148 | Start (global): 660 -> (local): (1, 2) at time 27 | Goal (global): 660 -> (local): (1, 2) at time 29
[DBG]  [REPAIR] SAT destroy operator called.
[DBG]  [REPAIR] SAT operator â€“ launching subproblem FOR OPTIMIZATION.
[DBG]  Creating local paths (sx, sy) in the submap for T_sync = 27
[DBG]    Agent 3 (global paths from T=27 to 29) has local path: (4,3) (4,3) (4,2) 
[DBG]    Agent 28 (global paths from T=27 to 39) has local path: (2,2) (3,2) (3,3) (4,3) (4,3) (4,3) (4,3) (4,3) (4,3) (4,3) (4,3) (3,3) (3,4) 
[DBG]    Agent 44 (global paths from T=27 to 28) has local path: (1,1) (1,0) 
[DBG]    Agent 45 (global paths from T=27 to 28) has local path: (4,2) (4,1) 
[DBG]    Agent 53 (global paths from T=27 to 31) has local path: (0,2) (1,2) (2,2) (3,2) (4,2) 
[DBG]    Agent 57 (global paths from T=27 to 28) has local path: (3,2) (4,2) 
[DBG]    Agent 100 (global paths from T=27 to 29) has local path: (0,1) (1,1) (1,0) 
[DBG]    Agent 148 (global paths from T=27 to 29) has local path: (1,2) (1,3) (1,2) 
[DBG]  Checking input data for SAT solver:
[DBG]    - Number of agents to replan: 8
[DBG]  Agent 3 has the original local path length: 3 => Start (4,3), Goal (4,2)
[DBG]  Agent 28 has the original local path length: 13 => Start (2,2), Goal (3,4)
[DBG]  Agent 44 has the original local path length: 2 => Start (1,1), Goal (1,0)
[DBG]  Agent 45 has the original local path length: 2 => Start (4,2), Goal (4,1)
[DBG]  Agent 53 has the original local path length: 5 => Start (0,2), Goal (4,2)
[DBG]  Agent 57 has the original local path length: 2 => Start (3,2), Goal (4,2)
[DBG]  Agent 100 has the original local path length: 3 => Start (0,1), Goal (1,0)
[DBG]  Agent 148 has the original local path length: 3 => Start (1,2), Goal (1,2)
[DBG]  Start position: (4, 3), (2, 2), (1, 1), (4, 2), (0, 2), (3, 2), (0, 1), (1, 2), 
[DBG]  Goal position: (4, 2), (3, 4), (1, 0), (4, 1), (4, 2), (4, 2), (1, 0), (1, 2), 
[DBG]  SAT instance and solver created.
Currently solving
Instance name: scen
Map name: map
Encoding used: disappear_at_goal
SAT solver used: Kissat
Optimizing function: sum of costs
Number of agents: 8
Mks LB: 5
SoC LB: 21
Delta: 0
Remaining time: 300000 [ms]

[STAT] Solver returned: -1
[DBG]  SAT solver failed.
[STAT] SAT solver failed to find a valid solution.
[DBG]  ====================
[DBG]  SAT destroy operator called.
[DBG]  SAT heuristic: 2
[DBG]  key_agent_id: 28
[DBG]  key_agent_id global path length: 41
[DBG]  Submap content (global positions):
[DBG]  595 596 597 598 599 
[DBG]  627 628 629 630 631 
[DBG]  659 660 661 662 663 
[DBG]  691 692 693 694 695 
[DBG]  723 724 725 726 727 
[DBG]  Map content with agents and obstacles:
[DBG]  X . A X . 
[DBG]  . A A X . 
[DBG]  . . A X X 
[DBG]  A A X X X 
[DBG]  X . . . . 
[DBG]  content of the map structure that we pass to the SAT solver:
[DBG]  -1  1  1  -1  1  
[DBG]  1  1  1  -1  1  
[DBG]  1  1  1  -1  -1  
[DBG]  1  1  -1  -1  -1  
[DBG]  -1  1  1  1  1  
[DBG]  Identifying agents in a submap for rescheduling (when key_agent is there at the time 13):
[DBG]  Agent 1 found intervals in the sub-map:
[DBG]  
[DBG]  Agent 1 is not in sub-map at time 13 (intervals: 
[DBG]  )
[DBG]  Agent 10 found intervals in the sub-map:
[DBG]   [9..13]
[DBG]  Agent 10 (interval in submap: [9..13]) contains time 13, added to replan.
[DBG]  Agent 28 found intervals in the sub-map:
[DBG]   [0..29] [38..40]
[DBG]  Agent 28 (interval in submap: [0..29]) contains time 13, added to replan.
[DBG]  Agent 74 found intervals in the sub-map:
[DBG]  
[DBG]  Agent 74 is not in sub-map at time 13 (intervals: 
[DBG]  )
[DBG]  Agent 86 found intervals in the sub-map:
[DBG]   [10..14]
[DBG]  Agent 86 (interval in submap: [10..14]) contains time 13, added to replan.
[DBG]  Agent 89 found intervals in the sub-map:
[DBG]   [7..14]
[DBG]  Agent 89 (interval in submap: [7..14]) contains time 13, added to replan.
[DBG]  Agent 131 found intervals in the sub-map:
[DBG]   [10..16]
[DBG]  Agent 131 (interval in submap: [10..16]) contains time 13, added to replan.
[DBG]  Agent 135 found intervals in the sub-map:
[DBG]   [4..4] [8..14]
[DBG]  Agent 135 (interval in submap: [8..14]) contains time 13, added to replan.
[DBG]  Agent 10 | Start (global): 597 -> (local): (0, 2) at time 13 | Goal (global): 597 -> (local): (0, 2) at time 13
[DBG]  Agent 28 | Start (global): 661 -> (local): (2, 2) at time 13 | Goal (global): 725 -> (local): (4, 2) at time 29
[DBG]  Agent 86 | Start (global): 629 -> (local): (1, 2) at time 13 | Goal (global): 597 -> (local): (0, 2) at time 14
[DBG]  Agent 89 | Start (global): 692 -> (local): (3, 1) at time 13 | Goal (global): 724 -> (local): (4, 1) at time 14
[DBG]  Agent 131 | Start (global): 628 -> (local): (1, 1) at time 13 | Goal (global): 724 -> (local): (4, 1) at time 16
[DBG]  Agent 135 | Start (global): 691 -> (local): (3, 0) at time 13 | Goal (global): 659 -> (local): (2, 0) at time 14
[DBG]  [REPAIR] SAT destroy operator called.
[DBG]  [REPAIR] SAT operator â€“ launching subproblem FOR OPTIMIZATION.
[DBG]  Creating local paths (sx, sy) in the submap for T_sync = 13
[DBG]    Agent 10 (global paths from T=13 to 13) has local path: (0,2) 
[DBG]    Agent 28 (global paths from T=13 to 29) has local path: (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,1) (3,1) (4,1) (4,2) 
[DBG]    Agent 86 (global paths from T=13 to 14) has local path: (1,2) (0,2) 
[DBG]    Agent 89 (global paths from T=13 to 14) has local path: (3,1) (4,1) 
[DBG]    Agent 131 (global paths from T=13 to 16) has local path: (1,1) (2,1) (3,1) (4,1) 
[DBG]    Agent 135 (global paths from T=13 to 14) has local path: (3,0) (2,0) 
[DBG]  Checking input data for SAT solver:
[DBG]    - Number of agents to replan: 6
[DBG]  Agent 10 has the original local path length: 1 => Start (0,2), Goal (0,2)
[DBG]  Agent 28 has the original local path length: 17 => Start (2,2), Goal (4,2)
[DBG]  Agent 86 has the original local path length: 2 => Start (1,2), Goal (0,2)
[DBG]  Agent 89 has the original local path length: 2 => Start (3,1), Goal (4,1)
[DBG]  Agent 131 has the original local path length: 4 => Start (1,1), Goal (4,1)
[DBG]  Agent 135 has the original local path length: 2 => Start (3,0), Goal (2,0)
[DBG]  Start position: (0, 2), (2, 2), (1, 2), (3, 1), (1, 1), (3, 0), 
[DBG]  Goal position: (0, 2), (4, 2), (0, 2), (4, 1), (4, 1), (2, 0), 
[DBG]  SAT instance and solver created.
Currently solving
Instance name: scen
Map name: map
Encoding used: disappear_at_goal
SAT solver used: Kissat
Optimizing function: sum of costs
Number of agents: 6
Mks LB: 5
SoC LB: 16
Delta: 0
Remaining time: 300000 [ms]

[STAT] Solver returned: -1
[DBG]  SAT solver failed.
[STAT] SAT solver failed to find a valid solution.
[DBG]  ====================
[DBG]  SAT destroy operator called.
[DBG]  SAT heuristic: 2
[DBG]  key_agent_id: 28
[DBG]  key_agent_id global path length: 41
[DBG]  Submap content (global positions):
[DBG]  595 596 597 598 599 
[DBG]  627 628 629 630 631 
[DBG]  659 660 661 662 663 
[DBG]  691 692 693 694 695 
[DBG]  723 724 725 726 727 
[DBG]  Map content with agents and obstacles:
[DBG]  X . A X . 
[DBG]  . . . X . 
[DBG]  A A A X X 
[DBG]  . . X X X 
[DBG]  X A . . . 
[DBG]  content of the map structure that we pass to the SAT solver:
[DBG]  -1  1  1  -1  1  
[DBG]  1  1  1  -1  1  
[DBG]  1  1  1  -1  -1  
[DBG]  1  1  -1  -1  -1  
[DBG]  -1  1  1  1  1  
[DBG]  Identifying agents in a submap for rescheduling (when key_agent is there at the time 14):
[DBG]  Agent 4 found intervals in the sub-map:
[DBG]  
[DBG]  Agent 4 is not in sub-map at time 14 (intervals: 
[DBG]  )
[DBG]  Agent 28 found intervals in the sub-map:
[DBG]   [0..29] [38..40]
[DBG]  Agent 28 (interval in submap: [0..29]) contains time 14, added to replan.
[DBG]  Agent 74 found intervals in the sub-map:
[DBG]  
[DBG]  Agent 74 is not in sub-map at time 14 (intervals: 
[DBG]  )
[DBG]  Agent 86 found intervals in the sub-map:
[DBG]   [10..14]
[DBG]  Agent 86 (interval in submap: [10..14]) contains time 14, added to replan.
[DBG]  Agent 89 found intervals in the sub-map:
[DBG]   [7..14]
[DBG]  Agent 89 (interval in submap: [7..14]) contains time 14, added to replan.
[DBG]  Agent 131 found intervals in the sub-map:
[DBG]   [10..16]
[DBG]  Agent 131 (interval in submap: [10..16]) contains time 14, added to replan.
[DBG]  Agent 135 found intervals in the sub-map:
[DBG]   [4..4] [8..14]
[DBG]  Agent 135 (interval in submap: [8..14]) contains time 14, added to replan.
[DBG]  Agent 28 | Start (global): 661 -> (local): (2, 2) at time 14 | Goal (global): 725 -> (local): (4, 2) at time 29
[DBG]  Agent 86 | Start (global): 597 -> (local): (0, 2) at time 14 | Goal (global): 597 -> (local): (0, 2) at time 14
[DBG]  Agent 89 | Start (global): 724 -> (local): (4, 1) at time 14 | Goal (global): 724 -> (local): (4, 1) at time 14
[DBG]  Agent 131 | Start (global): 660 -> (local): (2, 1) at time 14 | Goal (global): 724 -> (local): (4, 1) at time 16
[DBG]  Agent 135 | Start (global): 659 -> (local): (2, 0) at time 14 | Goal (global): 659 -> (local): (2, 0) at time 14
[DBG]  [REPAIR] SAT destroy operator called.
[DBG]  [REPAIR] SAT operator â€“ launching subproblem FOR OPTIMIZATION.
[DBG]  Creating local paths (sx, sy) in the submap for T_sync = 14
[DBG]    Agent 28 (global paths from T=14 to 29) has local path: (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,1) (3,1) (4,1) (4,2) 
[DBG]    Agent 86 (global paths from T=14 to 14) has local path: (0,2) 
[DBG]    Agent 89 (global paths from T=14 to 14) has local path: (4,1) 
[DBG]    Agent 131 (global paths from T=14 to 16) has local path: (2,1) (3,1) (4,1) 
[DBG]    Agent 135 (global paths from T=14 to 14) has local path: (2,0) 
[DBG]  Checking input data for SAT solver:
[DBG]    - Number of agents to replan: 5
[DBG]  Agent 28 has the original local path length: 16 => Start (2,2), Goal (4,2)
[DBG]  Agent 86 has the original local path length: 1 => Start (0,2), Goal (0,2)
[DBG]  Agent 89 has the original local path length: 1 => Start (4,1), Goal (4,1)
[DBG]  Agent 131 has the original local path length: 3 => Start (2,1), Goal (4,1)
[DBG]  Agent 135 has the original local path length: 1 => Start (2,0), Goal (2,0)
[DBG]  Start position: (2, 2), (0, 2), (4, 1), (2, 1), (2, 0), 
[DBG]  Goal position: (4, 2), (0, 2), (4, 1), (4, 1), (2, 0), 
[DBG]  SAT instance and solver created.
Currently solving
Instance name: scen
Map name: map
Encoding used: disappear_at_goal
SAT solver used: Kissat
Optimizing function: sum of costs
Number of agents: 5
Mks LB: 5
SoC LB: 11
Delta: 0
Remaining time: 300000 [ms]

Vertex conflict! Agents 1, 2, timestep 1, location 0
Swapping conflict! Agents 1, 2, timestep 1, edge (0,0)
Vertex conflict! Agents 1, 2, timestep 2, location 0
Swapping conflict! Agents 1, 2, timestep 2, edge (0,0)
Vertex conflict! Agents 1, 2, timestep 3, location 0
Swapping conflict! Agents 1, 2, timestep 3, edge (0,0)
Vertex conflict! Agents 1, 2, timestep 4, location 0
Vertex conflict! Agents 1, 3, timestep 3, location 0
Swapping conflict! Agents 1, 3, timestep 3, edge (0,0)
Vertex conflict! Agents 1, 3, timestep 4, location 0
Vertex conflict! Agents 1, 4, timestep 1, location 0
Swapping conflict! Agents 1, 4, timestep 1, edge (0,0)
Vertex conflict! Agents 1, 4, timestep 2, location 0
Swapping conflict! Agents 1, 4, timestep 2, edge (0,0)
Vertex conflict! Agents 1, 4, timestep 3, location 0
Swapping conflict! Agents 1, 4, timestep 3, edge (0,0)
Vertex conflict! Agents 1, 4, timestep 4, location 0
Vertex conflict! Agents 2, 3, timestep 3, location 0
Swapping conflict! Agents 2, 3, timestep 3, edge (0,0)
Vertex conflict! Agents 2, 3, timestep 4, location 0
Vertex conflict! Agents 2, 4, timestep 1, location 0
Swapping conflict! Agents 2, 4, timestep 1, edge (0,0)
Vertex conflict! Agents 2, 4, timestep 2, location 0
Swapping conflict! Agents 2, 4, timestep 2, edge (0,0)
Vertex conflict! Agents 2, 4, timestep 3, location 0
Swapping conflict! Agents 2, 4, timestep 3, edge (0,0)
Vertex conflict! Agents 2, 4, timestep 4, location 0
Vertex conflict! Agents 3, 4, timestep 3, location 0
Swapping conflict! Agents 3, 4, timestep 3, edge (0,0)
Vertex conflict! Agents 3, 4, timestep 4, location 0
Found plan [agents = 5] [timesteps = 5]
Agent #0 : 9 8 11 12 13 
Agent #1 : 1 0 0 0 0 
Agent #2 : 12 0 0 0 0 
Agent #3 : 8 11 12 0 0 
Agent #4 : 7 0 0 0 0 

[STAT] Solver returned: 0
[DBG]  Agent (index) 28 | New local path (submap idx):
[DBG]  9 8 11 12 13 
[DBG]  Agent (index) 86 | New local path (submap idx):
[DBG]  1 
[DBG]  Agent (index) 89 | New local path (submap idx):
[DBG]  12 
[DBG]  Agent (index) 131 | New local path (submap idx):
[DBG]  8 11 12 
[DBG]  Agent (index) 135 | New local path (submap idx):
[DBG]  7 
[DBG]  Update the agent path 28 | Original local length: 16 | New local length: 5
[DBG]  agent 28 t=0 => decoded (sx,sy)=(2,2) => global_id=661
[DBG]  agent 28 t=1 => decoded (sx,sy)=(2,1) => global_id=660
[DBG]  agent 28 t=2 => decoded (sx,sy)=(3,1) => global_id=692
[DBG]  agent 28 t=3 => decoded (sx,sy)=(4,1) => global_id=724
[DBG]  agent 28 t=4 => decoded (sx,sy)=(4,2) => global_id=725
[DBG]  Complete path of agent 28:
[DBG]    Original: 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 660 692 724 725 757 757 757 757 757 757 757 757 725 726 727 
[DBG]    New:     661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 660 692 724 725 757 757 757 757 757 757 757 757 725 726 727 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 661 661 661 661 661 661 661 661 661 661 661 661 661 661 
[DBG]    Local path (in submap): 661 660 692 724 725 757 757 757 757 757 757 757 757 725 726 727 
[DBG]    Suffix (out of submap): 
[DBG]  Original agent path length 28 je: 41
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 0: 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 660, 692, 724, 725, 757, 757, 757, 757, 757, 757, 757, 757, 725, 726, 727, 
[DBG]  Path for agent 28 updated, resulting length: 30
[DBG]  Update the agent path 86 | Original local length: 1 | New local length: 1
[DBG]  agent 86 t=0 => decoded (sx,sy)=(0,2) => global_id=597
[DBG]  Complete path of agent 86:
[DBG]    Original: 781 782 783 751 719 687 688 689 657 658 659 627 628 629 597 565 566 534 534 502 503 504 505 506 507 508 509 541 
[DBG]    New:     781 782 783 751 719 687 688 689 657 658 659 627 628 629 597 565 566 534 534 502 503 504 505 506 507 508 509 541 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 781 782 783 751 719 687 688 689 657 658 659 627 628 629 
[DBG]    Local path (in submap): 597 
[DBG]    Suffix (out of submap): 565 566 534 534 502 503 504 505 506 507 508 509 541 
[DBG]  Original agent path length 86 je: 28
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 1: 781, 782, 783, 751, 719, 687, 688, 689, 657, 658, 659, 627, 628, 629, 597, 565, 566, 534, 534, 502, 503, 504, 505, 506, 507, 508, 509, 541, 
[DBG]  Path for agent 86 updated, resulting length: 28
[DBG]  Update the agent path 89 | Original local length: 1 | New local length: 1
[DBG]  agent 89 t=0 => decoded (sx,sy)=(4,1) => global_id=724
[DBG]  Complete path of agent 89:
[DBG]    Original: 437 469 501 502 534 566 565 597 596 628 660 660 660 692 724 756 788 820 821 822 854 854 886 918 950 982 1014 1015 
[DBG]    New:     437 469 501 502 534 566 565 597 596 628 660 660 660 692 724 756 788 820 821 822 854 854 886 918 950 982 1014 1015 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 437 469 501 502 534 566 565 597 596 628 660 660 660 692 
[DBG]    Local path (in submap): 724 
[DBG]    Suffix (out of submap): 756 788 820 821 822 854 854 886 918 950 982 1014 1015 
[DBG]  Original agent path length 89 je: 28
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 2: 437, 469, 501, 502, 534, 566, 565, 597, 596, 628, 660, 660, 660, 692, 724, 756, 788, 820, 821, 822, 854, 854, 886, 918, 950, 982, 1014, 1015, 
[DBG]  Path for agent 89 updated, resulting length: 28
[DBG]  Update the agent path 131 | Original local length: 3 | New local length: 3
[DBG]  agent 131 t=0 => decoded (sx,sy)=(2,1) => global_id=660
[DBG]  agent 131 t=1 => decoded (sx,sy)=(3,1) => global_id=692
[DBG]  agent 131 t=2 => decoded (sx,sy)=(4,1) => global_id=724
[DBG]  Complete path of agent 131:
[DBG]    Original: 341 373 405 437 469 501 502 534 566 565 597 596 596 628 660 692 724 756 788 787 786 786 786 818 817 849 881 880 879 878 877 876 875 874 873 841 809 777 776 744 712 
[DBG]    New:     341 373 405 437 469 501 502 534 566 565 597 596 596 628 660 692 724 756 788 787 786 786 786 818 817 849 881 880 879 878 877 876 875 874 873 841 809 777 776 744 712 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 341 373 405 437 469 501 502 534 566 565 597 596 596 628 
[DBG]    Local path (in submap): 660 692 724 
[DBG]    Suffix (out of submap): 756 788 787 786 786 786 818 817 849 881 880 879 878 877 876 875 874 873 841 809 777 776 744 712 
[DBG]  Original agent path length 131 je: 41
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 3: 341, 373, 405, 437, 469, 501, 502, 534, 566, 565, 597, 596, 596, 628, 660, 692, 724, 756, 788, 787, 786, 786, 786, 818, 817, 849, 881, 880, 879, 878, 877, 876, 875, 874, 873, 841, 809, 777, 776, 744, 712, 
[DBG]  Path for agent 131 updated, resulting length: 41
[DBG]  Update the agent path 135 | Original local length: 1 | New local length: 1
[DBG]  agent 135 t=0 => decoded (sx,sy)=(2,0) => global_id=659
[DBG]  Complete path of agent 135:
[DBG]    Original: 696 696 696 728 727 759 759 759 727 726 725 724 692 691 659 658 657 625 593 592 591 590 589 588 556 555 555 523 522 521 520 519 487 486 485 484 483 482 450 449 448 416 384 
[DBG]    New:     696 696 696 728 727 759 759 759 727 726 725 724 692 691 659 658 657 625 593 592 591 590 589 588 556 555 555 523 522 521 520 519 487 486 485 484 483 482 450 449 448 416 384 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 696 696 696 728 727 759 759 759 727 726 725 724 692 691 
[DBG]    Local path (in submap): 659 
[DBG]    Suffix (out of submap): 658 657 625 593 592 591 590 589 588 556 555 555 523 522 521 520 519 487 486 485 484 483 482 450 449 448 416 384 
[DBG]  Original agent path length 135 je: 43
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 4: 696, 696, 696, 728, 727, 759, 759, 759, 727, 726, 725, 724, 692, 691, 659, 658, 657, 625, 593, 592, 591, 590, 589, 588, 556, 555, 555, 523, 522, 521, 520, 519, 487, 486, 485, 484, 483, 482, 450, 449, 448, 416, 384, 
[DBG]  Path for agent 135 updated, resulting length: 43
[DBG]  Paths successfully updated.
[DBG]  (LNS.cpp) New path for agent 28: 
[DBG]  661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 660, 692, 724, 725, 757, 757, 757, 757, 757, 757, 757, 757, 725, 726, 727, 
[DBG]  (LNS.cpp) New path for agent 86: 
[DBG]  781, 782, 783, 751, 719, 687, 688, 689, 657, 658, 659, 627, 628, 629, 597, 565, 566, 534, 534, 502, 503, 504, 505, 506, 507, 508, 509, 541, 
[DBG]  (LNS.cpp) New path for agent 89: 
[DBG]  437, 469, 501, 502, 534, 566, 565, 597, 596, 628, 660, 660, 660, 692, 724, 756, 788, 820, 821, 822, 854, 854, 886, 918, 950, 982, 1014, 1015, 
[DBG]  (LNS.cpp) New path for agent 131: 
[DBG]  341, 373, 405, 437, 469, 501, 502, 534, 566, 565, 597, 596, 596, 628, 660, 692, 724, 756, 788, 787, 786, 786, 786, 818, 817, 849, 881, 880, 879, 878, 877, 876, 875, 874, 873, 841, 809, 777, 776, 744, 712, 
[DBG]  (LNS.cpp) New path for agent 135: 
[DBG]  696, 696, 696, 728, 727, 759, 759, 759, 727, 726, 725, 724, 692, 691, 659, 658, 657, 625, 593, 592, 591, 590, 589, 588, 556, 555, 555, 523, 522, 521, 520, 519, 487, 486, 485, 484, 483, 482, 450, 449, 448, 416, 384, 
[DBG]  Delta value: 0.0625
[DBG]  Rewarding metric index = 0
[DBG]  component_weights = {0.777671, 0.105262, 0.0578941, 0.0591725}
[DBG]  opSuccess value: 1
[STAT] neighbor.sum_of_costs before recomputation: 165
[STAT] neighbor.old_sum_of_costs before recomputation: 176
[STAT] sum_of_costs before recomputation: 4443
[DBG]  Validate solution immediately after SAT success.
[WARNING] Problem after SAT: Vertex conflict between agents 28 and 3 at location 757 at timestep 26
[DBG]  [DEBUG] Attempting immediate repair via init_lns because problem occurred after SAT (should be applied only for conflicts...).
[DBG]  [DEBUG] Passing 150 agents to init_lns (skip=true).
[DBG]  [DEBUG] path_table contents for selected agents (neighbor.agents):
[DBG]    Agent 28 => controlling path length=30
[DBG]    Agent 86 => controlling path length=28
[DBG]    Agent 89 => controlling path length=28
[DBG]    Agent 131 => controlling path length=41
[DBG]    Agent 135 => controlling path length=43
[DBG]  hodnota skip_initial_solution=1
[DBG]  We skip initialSolution => call buildCollisionData()
[DBG]  buildCollisionData() called â€“ skip_initial_solution case.
[DBG]  Agents.size()=150, collision_graph.size()=150
[DBG]  agent 3 => updateCollidingPairs => foundCollision
[DBG]  agent 28 => updateCollidingPairs => foundCollision
[DBG]  agent 42 => updateCollidingPairs => foundCollision
[DBG]  Conflicting agent pairs:
[DBG]  agent 3 is in conflict with agent 28
[DBG]  agent 28 is in conflict with agent 42
[DBG]  buildCollisionData() => sum_of_costs=4432, num_of_colliding_pairs=2
[DBG]  buildCollisionData done => sum_of_costs=4432, num_of_colliding_pairs=2
[DBG]  sum_of_cost hodnota: 4432
[DBG]  After skip/init build => iteration_stats.back(): sum_of_costs=4432, collisions=2
[DEBUG] Using default neighbor generation strategy for conflicts: 2
[DEBUG] Using default neighbor generation strategy for conflicts: 0
	InitLNS(PP): runtime = 0.00328067, iterations = 3, colliding pairs = 0, initial colliding pairs = 2, solution cost = 4424, initial solution cost = 4432, failed iterations = 0
[DBG]  [DEBUG] init_lns->sum_of_costs after init_lns->run: 4424
[DBG]  [DEBUG] sum_of_costs after assignment from init_lns->run: 4424
[DBG]  Recomputing sum_of_cost by dividing neighbor.sum_of_costs and neighbor.old_sum_of_costs
[STAT] sum_of_costs after recomputation: 4424
[STAT] Iteration 58
[DBG]  Using SAT operator (destroy+repair SAT).
[DBG]  ====================
[DBG]  SAT destroy operator called.
[DBG]  SAT heuristic: 2
[DBG]  key_agent_id: 28
[DBG]  key_agent_id global path length: 41
[DBG]  Submap content (global positions):
[DBG]  595 596 597 598 599 
[DBG]  627 628 629 630 631 
[DBG]  659 660 661 662 663 
[DBG]  691 692 693 694 695 
[DBG]  723 724 725 726 727 
[DBG]  Map content with agents and obstacles:
[DBG]  X . . X . 
[DBG]  . . . X . 
[DBG]  . . A X X 
[DBG]  . . X X X 
[DBG]  X A . . . 
[DBG]  content of the map structure that we pass to the SAT solver:
[DBG]  -1  1  1  -1  1  
[DBG]  1  1  1  -1  1  
[DBG]  1  1  1  -1  -1  
[DBG]  1  1  -1  -1  -1  
[DBG]  -1  1  1  1  1  
[DBG]  Identifying agents in a submap for rescheduling (when key_agent is there at the time 17):
[DBG]  Agent 28 found intervals in the sub-map:
[DBG]   [0..35] [38..40]
[DBG]  Agent 28 (interval in submap: [0..35]) contains time 17, added to replan.
[DBG]  Agent 30 found intervals in the sub-map:
[DBG]  
[DBG]  Agent 30 is not in sub-map at time 17 (intervals: 
[DBG]  )
[DBG]  Agent 74 found intervals in the sub-map:
[DBG]  
[DBG]  Agent 74 is not in sub-map at time 17 (intervals: 
[DBG]  )
[DBG]  Agent 131 found intervals in the sub-map:
[DBG]   [12..17]
[DBG]  Agent 131 (interval in submap: [12..17]) contains time 17, added to replan.
[DBG]  Agent 28 | Start (global): 661 -> (local): (2, 2) at time 17 | Goal (global): 724 -> (local): (4, 1) at time 35
[DBG]  Agent 131 | Start (global): 724 -> (local): (4, 1) at time 17 | Goal (global): 724 -> (local): (4, 1) at time 17
[DBG]  [REPAIR] SAT destroy operator called.
[DBG]  [REPAIR] SAT operator â€“ launching subproblem FOR OPTIMIZATION.
[DBG]  Creating local paths (sx, sy) in the submap for T_sync = 17
[DBG]    Agent 28 (global paths from T=17 to 35) has local path: (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,1) (2,1) (2,1) (2,1) (2,1) (3,1) (4,1) 
[DBG]    Agent 131 (global paths from T=17 to 17) has local path: (4,1) 
[DBG]  Checking input data for SAT solver:
[DBG]    - Number of agents to replan: 2
[DBG]  Agent 28 has the original local path length: 19 => Start (2,2), Goal (4,1)
[DBG]  Agent 131 has the original local path length: 1 => Start (4,1), Goal (4,1)
[DBG]  Start position: (2, 2), (4, 1), 
[DBG]  Goal position: (4, 1), (4, 1), 
[DBG]  SAT instance and solver created.
Currently solving
Instance name: scen
Map name: map
Encoding used: disappear_at_goal
SAT solver used: Kissat
Optimizing function: sum of costs
Number of agents: 2
Mks LB: 4
SoC LB: 5
Delta: 0
Remaining time: 300000 [ms]

Found plan [agents = 2] [timesteps = 4]
Agent #0 : 9 8 11 12 
Agent #1 : 12 0 0 0 

[STAT] Solver returned: 0
[DBG]  Agent (index) 28 | New local path (submap idx):
[DBG]  9 8 11 12 
[DBG]  Agent (index) 131 | New local path (submap idx):
[DBG]  12 
[DBG]  Update the agent path 28 | Original local length: 19 | New local length: 4
[DBG]  agent 28 t=0 => decoded (sx,sy)=(2,2) => global_id=661
[DBG]  agent 28 t=1 => decoded (sx,sy)=(2,1) => global_id=660
[DBG]  agent 28 t=2 => decoded (sx,sy)=(3,1) => global_id=692
[DBG]  agent 28 t=3 => decoded (sx,sy)=(4,1) => global_id=724
[DBG]  Complete path of agent 28:
[DBG]    Original: 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 660 660 660 660 660 692 724 756 757 725 726 727 
[DBG]    New:     661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 660 692 724 756 757 725 726 727 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 
[DBG]    Local path (in submap): 661 660 692 724 756 757 725 726 727 
[DBG]    Suffix (out of submap): 
[DBG]  Original agent path length 28 je: 41
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 0: 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 660, 692, 724, 756, 757, 725, 726, 727, 
[DBG]  Path for agent 28 updated, resulting length: 26
[DBG]  Update the agent path 131 | Original local length: 1 | New local length: 1
[DBG]  agent 131 t=0 => decoded (sx,sy)=(4,1) => global_id=724
[DBG]  Complete path of agent 131:
[DBG]    Original: 341 340 339 371 403 404 405 437 469 501 533 565 597 596 628 660 692 724 756 755 787 786 786 818 850 849 848 847 879 878 877 876 875 874 873 841 809 777 745 713 712 
[DBG]    New:     341 340 339 371 403 404 405 437 469 501 533 565 597 596 628 660 692 724 756 755 787 786 786 818 850 849 848 847 879 878 877 876 875 874 873 841 809 777 745 713 712 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 341 340 339 371 403 404 405 437 469 501 533 565 597 596 628 660 692 
[DBG]    Local path (in submap): 724 
[DBG]    Suffix (out of submap): 756 755 787 786 786 818 850 849 848 847 879 878 877 876 875 874 873 841 809 777 745 713 712 
[DBG]  Original agent path length 131 je: 41
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 1: 341, 340, 339, 371, 403, 404, 405, 437, 469, 501, 533, 565, 597, 596, 628, 660, 692, 724, 756, 755, 787, 786, 786, 818, 850, 849, 848, 847, 879, 878, 877, 876, 875, 874, 873, 841, 809, 777, 745, 713, 712, 
[DBG]  Path for agent 131 updated, resulting length: 41
[DBG]  Paths successfully updated.
[DBG]  (LNS.cpp) New path for agent 28: 
[DBG]  661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 660, 692, 724, 756, 757, 725, 726, 727, 
[DBG]  (LNS.cpp) New path for agent 131: 
[DBG]  341, 340, 339, 371, 403, 404, 405, 437, 469, 501, 533, 565, 597, 596, 628, 660, 692, 724, 756, 755, 787, 786, 786, 818, 850, 849, 848, 847, 879, 878, 877, 876, 875, 874, 873, 841, 809, 777, 745, 713, 712, 
[DBG]  Delta value: 0.1875
[DBG]  Rewarding metric index = 0
[DBG]  component_weights = {0.81386, 0.0881285, 0.0484706, 0.0495409}
[DBG]  opSuccess value: 1
[STAT] neighbor.sum_of_costs before recomputation: 65
[STAT] neighbor.old_sum_of_costs before recomputation: 80
[STAT] sum_of_costs before recomputation: 4424
[DBG]  Validate solution immediately after SAT success.
[WARNING] Problem after SAT: Target conflict: agent 42 (len 40) traverses target of agent 28 (len 25) at location 727 at timestep 39
[DBG]  [DEBUG] Attempting immediate repair via init_lns because problem occurred after SAT (should be applied only for conflicts...).
[DBG]  [DEBUG] Passing 150 agents to init_lns (skip=true).
[DBG]  [DEBUG] path_table contents for selected agents (neighbor.agents):
[DBG]    Agent 28 => controlling path length=26
[DBG]    Agent 131 => controlling path length=41
[DBG]  hodnota skip_initial_solution=1
[DBG]  We skip initialSolution => call buildCollisionData()
[DBG]  buildCollisionData() called â€“ skip_initial_solution case.
[DBG]  Agents.size()=150, collision_graph.size()=150
[DBG]  agent 28 => updateCollidingPairs => foundCollision
[DBG]  agent 42 => updateCollidingPairs => foundCollision
[DBG]  Conflicting agent pairs:
[DBG]  agent 28 is in conflict with agent 42
[DBG]  buildCollisionData() => sum_of_costs=4409, num_of_colliding_pairs=1
[DBG]  buildCollisionData done => sum_of_costs=4409, num_of_colliding_pairs=1
[DBG]  sum_of_cost hodnota: 4409
[DBG]  After skip/init build => iteration_stats.back(): sum_of_costs=4409, collisions=1
[DEBUG] Using default neighbor generation strategy for conflicts: 0
	InitLNS(PP): runtime = 0.00160229, iterations = 2, colliding pairs = 0, initial colliding pairs = 1, solution cost = 4423, initial solution cost = 4409, failed iterations = 0
[DBG]  [DEBUG] init_lns->sum_of_costs after init_lns->run: 4423
[DBG]  [DEBUG] sum_of_costs after assignment from init_lns->run: 4423
[DBG]  Recomputing sum_of_cost by dividing neighbor.sum_of_costs and neighbor.old_sum_of_costs
[STAT] sum_of_costs after recomputation: 4423
[STAT] Iteration 59
[DBG]  Using SAT operator (destroy+repair SAT).
[DBG]  ====================
[DBG]  SAT destroy operator called.
[DBG]  SAT heuristic: 2
[DBG]  key_agent_id: 28
[DBG]  key_agent_id global path length: 41
[DBG]  Submap content (global positions):
[DBG]  690 691 692 693 694 
[DBG]  722 723 724 725 726 
[DBG]  754 755 756 757 758 
[DBG]  786 787 788 789 790 
[DBG]  818 819 820 821 822 
[DBG]  Map content with agents and obstacles:
[DBG]  X A A X X 
[DBG]  . X A . . 
[DBG]  X A A . X 
[DBG]  . . . X . 
[DBG]  . . . . . 
[DBG]  content of the map structure that we pass to the SAT solver:
[DBG]  -1  1  1  -1  -1  
[DBG]  1  -1  1  1  1  
[DBG]  -1  1  1  1  -1  
[DBG]  1  1  1  -1  1  
[DBG]  1  1  1  1  1  
[DBG]  Identifying agents in a submap for rescheduling (when key_agent is there at the time 36):
[DBG]  Agent 26 found intervals in the sub-map:
[DBG]   [32..36]
[DBG]  Agent 26 (interval in submap: [32..36]) contains time 36, added to replan.
[DBG]  Agent 28 found intervals in the sub-map:
[DBG]   [33..39]
[DBG]  Agent 28 (interval in submap: [33..39]) contains time 36, added to replan.
[DBG]  Agent 42 found intervals in the sub-map:
[DBG]   [34..38]
[DBG]  Agent 42 (interval in submap: [34..38]) contains time 36, added to replan.
[DBG]  Agent 45 found intervals in the sub-map:
[DBG]   [25..31]
[DBG]  Agent 45 is not in sub-map at time 36 (intervals: 
[DBG]  [25..31] )
[DBG]  Agent 53 found intervals in the sub-map:
[DBG]   [29..34]
[DBG]  Agent 53 is not in sub-map at time 36 (intervals: 
[DBG]  [29..34] )
[DBG]  Agent 59 found intervals in the sub-map:
[DBG]   [35..41]
[DBG]  Agent 59 (interval in submap: [35..41]) contains time 36, added to replan.
[DBG]  Agent 69 found intervals in the sub-map:
[DBG]   [36..41]
[DBG]  Agent 69 (interval in submap: [36..41]) contains time 36, added to replan.
[DBG]  Agent 26 | Start (global): 755 -> (local): (2, 1) at time 36 | Goal (global): 755 -> (local): (2, 1) at time 36
[DBG]  Agent 28 | Start (global): 756 -> (local): (2, 2) at time 36 | Goal (global): 726 -> (local): (1, 4) at time 39
[DBG]  Agent 42 | Start (global): 724 -> (local): (1, 2) at time 36 | Goal (global): 726 -> (local): (1, 4) at time 38
[DBG]  Agent 59 | Start (global): 692 -> (local): (0, 2) at time 36 | Goal (global): 819 -> (local): (4, 1) at time 41
[DBG]  Agent 69 | Start (global): 691 -> (local): (0, 1) at time 36 | Goal (global): 820 -> (local): (4, 2) at time 41
[DBG]  [REPAIR] SAT destroy operator called.
[DBG]  [REPAIR] SAT operator â€“ launching subproblem FOR OPTIMIZATION.
[DBG]  Creating local paths (sx, sy) in the submap for T_sync = 36
[DBG]    Agent 26 (global paths from T=36 to 36) has local path: (2,1) 
[DBG]    Agent 28 (global paths from T=36 to 39) has local path: (2,2) (2,3) (1,3) (1,4) 
[DBG]    Agent 42 (global paths from T=36 to 38) has local path: (1,2) (1,3) (1,4) 
[DBG]    Agent 59 (global paths from T=36 to 41) has local path: (0,2) (1,2) (2,2) (3,2) (4,2) (4,1) 
[DBG]    Agent 69 (global paths from T=36 to 41) has local path: (0,1) (0,2) (1,2) (2,2) (3,2) (4,2) 
[DBG]  Checking input data for SAT solver:
[DBG]    - Number of agents to replan: 5
[DBG]  Agent 26 has the original local path length: 1 => Start (2,1), Goal (2,1)
[DBG]  Agent 28 has the original local path length: 4 => Start (2,2), Goal (1,4)
[DBG]  Agent 42 has the original local path length: 3 => Start (1,2), Goal (1,4)
[DBG]  Agent 59 has the original local path length: 6 => Start (0,2), Goal (4,1)
[DBG]  Agent 69 has the original local path length: 6 => Start (0,1), Goal (4,2)
[DBG]  Start position: (2, 1), (2, 2), (1, 2), (0, 2), (0, 1), 
[DBG]  Goal position: (2, 1), (1, 4), (1, 4), (4, 1), (4, 2), 
[DBG]  SAT instance and solver created.
Currently solving
Instance name: scen
Map name: map
Encoding used: disappear_at_goal
SAT solver used: Kissat
Optimizing function: sum of costs
Number of agents: 5
Mks LB: 6
SoC LB: 20
Delta: 0
Remaining time: 300000 [ms]

Vertex conflict! Agents 0, 1, timestep 4, location 0
Swapping conflict! Agents 0, 1, timestep 4, edge (0,0)
Vertex conflict! Agents 0, 1, timestep 5, location 0
Vertex conflict! Agents 0, 2, timestep 3, location 0
Swapping conflict! Agents 0, 2, timestep 3, edge (0,0)
Vertex conflict! Agents 0, 2, timestep 4, location 0
Swapping conflict! Agents 0, 2, timestep 4, edge (0,0)
Vertex conflict! Agents 0, 2, timestep 5, location 0
Vertex conflict! Agents 1, 2, timestep 4, location 0
Swapping conflict! Agents 1, 2, timestep 4, edge (0,0)
Vertex conflict! Agents 1, 2, timestep 5, location 0
Found plan [agents = 5] [timesteps = 6]
Agent #0 : 6 0 0 0 0 0 
Agent #1 : 7 8 4 5 0 0 
Agent #2 : 3 4 5 0 0 0 
Agent #3 : 1 3 7 11 15 14 
Agent #4 : 0 1 3 7 11 15 

[STAT] Solver returned: 0
[DBG]  Agent (index) 26 | New local path (submap idx):
[DBG]  6 
[DBG]  Agent (index) 28 | New local path (submap idx):
[DBG]  7 8 4 5 
[DBG]  Agent (index) 42 | New local path (submap idx):
[DBG]  3 4 5 
[DBG]  Agent (index) 59 | New local path (submap idx):
[DBG]  1 3 7 11 15 14 
[DBG]  Agent (index) 69 | New local path (submap idx):
[DBG]  0 1 3 7 11 15 
[DBG]  Update the agent path 26 | Original local length: 1 | New local length: 1
[DBG]  agent 26 t=0 => decoded (sx,sy)=(2,1) => global_id=755
[DBG]  Complete path of agent 26:
[DBG]    Original: 13 14 46 47 79 80 81 82 83 84 116 148 180 212 244 276 308 309 341 373 405 437 469 501 533 565 597 596 628 628 627 659 691 692 724 756 755 
[DBG]    New:     13 14 46 47 79 80 81 82 83 84 116 148 180 212 244 276 308 309 341 373 405 437 469 501 533 565 597 596 628 628 627 659 691 692 724 756 755 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 13 14 46 47 79 80 81 82 83 84 116 148 180 212 244 276 308 309 341 373 405 437 469 501 533 565 597 596 628 628 627 659 691 692 724 756 
[DBG]    Local path (in submap): 755 
[DBG]    Suffix (out of submap): 
[DBG]  Original agent path length 26 je: 37
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 0: 13, 14, 46, 47, 79, 80, 81, 82, 83, 84, 116, 148, 180, 212, 244, 276, 308, 309, 341, 373, 405, 437, 469, 501, 533, 565, 597, 596, 628, 628, 627, 659, 691, 692, 724, 756, 755, 
[DBG]  Path for agent 26 updated, resulting length: 37
[DBG]  Update the agent path 28 | Original local length: 4 | New local length: 4
[DBG]  agent 28 t=0 => decoded (sx,sy)=(2,2) => global_id=756
[DBG]  agent 28 t=1 => decoded (sx,sy)=(2,3) => global_id=757
[DBG]  agent 28 t=2 => decoded (sx,sy)=(1,3) => global_id=725
[DBG]  agent 28 t=3 => decoded (sx,sy)=(1,4) => global_id=726
[DBG]  Complete path of agent 28:
[DBG]    Original: 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 629 629 629 629 628 627 659 691 692 724 756 757 725 726 727 
[DBG]    New:     661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 629 629 629 629 628 627 659 691 692 724 756 757 725 726 727 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 629 629 629 629 628 627 659 691 692 724 
[DBG]    Local path (in submap): 756 757 725 726 
[DBG]    Suffix (out of submap): 727 
[DBG]  Original agent path length 28 je: 41
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 1: 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 629, 629, 629, 629, 628, 627, 659, 691, 692, 724, 756, 757, 725, 726, 727, 
[DBG]  Path for agent 28 updated, resulting length: 41
[DBG]  Update the agent path 42 | Original local length: 3 | New local length: 3
[DBG]  agent 42 t=0 => decoded (sx,sy)=(1,2) => global_id=724
[DBG]  agent 42 t=1 => decoded (sx,sy)=(1,3) => global_id=725
[DBG]  agent 42 t=2 => decoded (sx,sy)=(1,4) => global_id=726
[DBG]  Complete path of agent 42:
[DBG]    Original: 224 256 257 258 259 291 323 355 387 388 420 421 422 423 424 425 457 489 521 522 523 523 524 525 526 558 590 591 592 593 625 657 658 659 691 692 724 725 726 727 759 
[DBG]    New:     224 256 257 258 259 291 323 355 387 388 420 421 422 423 424 425 457 489 521 522 523 523 524 525 526 558 590 591 592 593 625 657 658 659 691 692 724 725 726 727 759 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 224 256 257 258 259 291 323 355 387 388 420 421 422 423 424 425 457 489 521 522 523 523 524 525 526 558 590 591 592 593 625 657 658 659 691 692 
[DBG]    Local path (in submap): 724 725 726 
[DBG]    Suffix (out of submap): 727 759 
[DBG]  Original agent path length 42 je: 41
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 2: 224, 256, 257, 258, 259, 291, 323, 355, 387, 388, 420, 421, 422, 423, 424, 425, 457, 489, 521, 522, 523, 523, 524, 525, 526, 558, 590, 591, 592, 593, 625, 657, 658, 659, 691, 692, 724, 725, 726, 727, 759, 
[DBG]  Path for agent 42 updated, resulting length: 41
[DBG]  Update the agent path 59 | Original local length: 6 | New local length: 6
[DBG]  agent 59 t=0 => decoded (sx,sy)=(0,2) => global_id=692
[DBG]  agent 59 t=1 => decoded (sx,sy)=(1,2) => global_id=724
[DBG]  agent 59 t=2 => decoded (sx,sy)=(2,2) => global_id=756
[DBG]  agent 59 t=3 => decoded (sx,sy)=(3,2) => global_id=788
[DBG]  agent 59 t=4 => decoded (sx,sy)=(4,2) => global_id=820
[DBG]  agent 59 t=5 => decoded (sx,sy)=(4,1) => global_id=819
[DBG]  Complete path of agent 59:
[DBG]    Original: 256 257 258 259 260 261 293 294 295 296 296 297 298 299 300 301 333 365 366 398 398 398 430 431 432 464 496 528 529 561 593 625 657 658 659 691 692 724 756 788 820 819 851 883 884 916 917 
[DBG]    New:     256 257 258 259 260 261 293 294 295 296 296 297 298 299 300 301 333 365 366 398 398 398 430 431 432 464 496 528 529 561 593 625 657 658 659 691 692 724 756 788 820 819 851 883 884 916 917 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 256 257 258 259 260 261 293 294 295 296 296 297 298 299 300 301 333 365 366 398 398 398 430 431 432 464 496 528 529 561 593 625 657 658 659 691 
[DBG]    Local path (in submap): 692 724 756 788 820 819 
[DBG]    Suffix (out of submap): 851 883 884 916 917 
[DBG]  Original agent path length 59 je: 47
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 3: 256, 257, 258, 259, 260, 261, 293, 294, 295, 296, 296, 297, 298, 299, 300, 301, 333, 365, 366, 398, 398, 398, 430, 431, 432, 464, 496, 528, 529, 561, 593, 625, 657, 658, 659, 691, 692, 724, 756, 788, 820, 819, 851, 883, 884, 916, 917, 
[DBG]  Path for agent 59 updated, resulting length: 47
[DBG]  Update the agent path 69 | Original local length: 6 | New local length: 6
[DBG]  agent 69 t=0 => decoded (sx,sy)=(0,1) => global_id=691
[DBG]  agent 69 t=1 => decoded (sx,sy)=(0,2) => global_id=692
[DBG]  agent 69 t=2 => decoded (sx,sy)=(1,2) => global_id=724
[DBG]  agent 69 t=3 => decoded (sx,sy)=(2,2) => global_id=756
[DBG]  agent 69 t=4 => decoded (sx,sy)=(3,2) => global_id=788
[DBG]  agent 69 t=5 => decoded (sx,sy)=(4,2) => global_id=820
[DBG]  Complete path of agent 69:
[DBG]    Original: 4 5 6 7 8 40 41 42 43 75 76 108 140 141 173 205 237 269 301 333 365 366 398 430 431 463 464 496 528 529 561 593 625 657 658 659 691 692 724 756 788 820 
[DBG]    New:     4 5 6 7 8 40 41 42 43 75 76 108 140 141 173 205 237 269 301 333 365 366 398 430 431 463 464 496 528 529 561 593 625 657 658 659 691 692 724 756 788 820 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 4 5 6 7 8 40 41 42 43 75 76 108 140 141 173 205 237 269 301 333 365 366 398 430 431 463 464 496 528 529 561 593 625 657 658 659 
[DBG]    Local path (in submap): 691 692 724 756 788 820 
[DBG]    Suffix (out of submap): 
[DBG]  Original agent path length 69 je: 42
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 4: 4, 5, 6, 7, 8, 40, 41, 42, 43, 75, 76, 108, 140, 141, 173, 205, 237, 269, 301, 333, 365, 366, 398, 430, 431, 463, 464, 496, 528, 529, 561, 593, 625, 657, 658, 659, 691, 692, 724, 756, 788, 820, 
[DBG]  Path for agent 69 updated, resulting length: 42
[DBG]  Paths successfully updated.
[DBG]  (LNS.cpp) New path for agent 26: 
[DBG]  13, 14, 46, 47, 79, 80, 81, 82, 83, 84, 116, 148, 180, 212, 244, 276, 308, 309, 341, 373, 405, 437, 469, 501, 533, 565, 597, 596, 628, 628, 627, 659, 691, 692, 724, 756, 755, 
[DBG]  (LNS.cpp) New path for agent 28: 
[DBG]  661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 629, 629, 629, 629, 628, 627, 659, 691, 692, 724, 756, 757, 725, 726, 727, 
[DBG]  (LNS.cpp) New path for agent 42: 
[DBG]  224, 256, 257, 258, 259, 291, 323, 355, 387, 388, 420, 421, 422, 423, 424, 425, 457, 489, 521, 522, 523, 523, 524, 525, 526, 558, 590, 591, 592, 593, 625, 657, 658, 659, 691, 692, 724, 725, 726, 727, 759, 
[DBG]  (LNS.cpp) New path for agent 59: 
[DBG]  256, 257, 258, 259, 260, 261, 293, 294, 295, 296, 296, 297, 298, 299, 300, 301, 333, 365, 366, 398, 398, 398, 430, 431, 432, 464, 496, 528, 529, 561, 593, 625, 657, 658, 659, 691, 692, 724, 756, 788, 820, 819, 851, 883, 884, 916, 917, 
[DBG]  (LNS.cpp) New path for agent 69: 
[DBG]  4, 5, 6, 7, 8, 40, 41, 42, 43, 75, 76, 108, 140, 141, 173, 205, 237, 269, 301, 333, 365, 366, 398, 430, 431, 463, 464, 496, 528, 529, 561, 593, 625, 657, 658, 659, 691, 692, 724, 756, 788, 820, 
[DBG]  Delta value: 0
[DBG]  Rewarding metric index = 0
[DBG]  component_weights = {0.821506, 0.0845086, 0.0464796, 0.047506}
[DBG]  opSuccess value: 1
[STAT] neighbor.sum_of_costs before recomputation: 203
[STAT] neighbor.old_sum_of_costs before recomputation: 203
[STAT] sum_of_costs before recomputation: 4423
[DBG]  Validate solution immediately after SAT success.
[DBG]  No problems after SAT replan.
[DBG]  Recomputing sum_of_cost by dividing neighbor.sum_of_costs and neighbor.old_sum_of_costs
[STAT] sum_of_costs after recomputation: 4423
[STAT] Iteration 60
[DBG]  Using SAT operator (destroy+repair SAT).
[DBG]  ====================
[DBG]  SAT destroy operator called.
[DBG]  SAT heuristic: 2
[DBG]  key_agent_id: 28
[DBG]  key_agent_id global path length: 41
[DBG]  Submap content (global positions):
[DBG]  595 596 597 598 599 
[DBG]  627 628 629 630 631 
[DBG]  659 660 661 662 663 
[DBG]  691 692 693 694 695 
[DBG]  723 724 725 726 727 
[DBG]  Map content with agents and obstacles:
[DBG]  X . . X . 
[DBG]  . . A X . 
[DBG]  . . A X X 
[DBG]  . . X X X 
[DBG]  X . . . . 
[DBG]  content of the map structure that we pass to the SAT solver:
[DBG]  -1  1  1  -1  1  
[DBG]  1  1  1  -1  1  
[DBG]  1  1  1  -1  -1  
[DBG]  1  1  -1  -1  -1  
[DBG]  -1  1  1  1  1  
[DBG]  Identifying agents in a submap for rescheduling (when key_agent is there at the time 19):
[DBG]  Agent 3 found intervals in the sub-map:
[DBG]   [18..24]
[DBG]  Agent 3 (interval in submap: [18..24]) contains time 19, added to replan.
[DBG]  Agent 4 found intervals in the sub-map:
[DBG]  
[DBG]  Agent 4 is not in sub-map at time 19 (intervals: 
[DBG]  )
[DBG]  Agent 28 found intervals in the sub-map:
[DBG]   [0..35] [38..40]
[DBG]  Agent 28 (interval in submap: [0..35]) contains time 19, added to replan.
[DBG]  Agent 30 found intervals in the sub-map:
[DBG]  
[DBG]  Agent 30 is not in sub-map at time 19 (intervals: 
[DBG]  )
[DBG]  Agent 148 found intervals in the sub-map:
[DBG]   [39..40]
[DBG]  Agent 148 is not in sub-map at time 19 (intervals: 
[DBG]  [39..40] )
[DBG]  Agent 3 | Start (global): 629 -> (local): (1, 2) at time 19 | Goal (global): 724 -> (local): (4, 1) at time 24
[DBG]  Agent 28 | Start (global): 661 -> (local): (2, 2) at time 19 | Goal (global): 724 -> (local): (4, 1) at time 35
[DBG]  [REPAIR] SAT destroy operator called.
[DBG]  [REPAIR] SAT operator â€“ launching subproblem FOR OPTIMIZATION.
[DBG]  Creating local paths (sx, sy) in the submap for T_sync = 19
[DBG]    Agent 3 (global paths from T=19 to 24) has local path: (1,2) (1,1) (1,1) (2,1) (3,1) (4,1) 
[DBG]    Agent 28 (global paths from T=19 to 35) has local path: (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (1,2) (1,2) (1,2) (1,2) (1,1) (1,0) (2,0) (3,0) (3,1) (4,1) 
[DBG]  Checking input data for SAT solver:
[DBG]    - Number of agents to replan: 2
[DBG]  Agent 3 has the original local path length: 6 => Start (1,2), Goal (4,1)
[DBG]  Agent 28 has the original local path length: 17 => Start (2,2), Goal (4,1)
[DBG]  Start position: (1, 2), (2, 2), 
[DBG]  Goal position: (4, 1), (4, 1), 
[DBG]  SAT instance and solver created.
Currently solving
Instance name: scen
Map name: map
Encoding used: disappear_at_goal
SAT solver used: Kissat
Optimizing function: sum of costs
Number of agents: 2
Mks LB: 5
SoC LB: 9
Delta: 0
Remaining time: 300000 [ms]

Found plan [agents = 2] [timesteps = 5]
Agent #0 : 5 9 8 11 12 
Agent #1 : 9 8 11 12 0 

[STAT] Solver returned: 0
[DBG]  Agent (index) 3 | New local path (submap idx):
[DBG]  5 9 8 11 12 
[DBG]  Agent (index) 28 | New local path (submap idx):
[DBG]  9 8 11 12 
[DBG]  Update the agent path 3 | Original local length: 6 | New local length: 5
[DBG]  agent 3 t=0 => decoded (sx,sy)=(1,2) => global_id=629
[DBG]  agent 3 t=1 => decoded (sx,sy)=(2,2) => global_id=661
[DBG]  agent 3 t=2 => decoded (sx,sy)=(2,1) => global_id=660
[DBG]  agent 3 t=3 => decoded (sx,sy)=(3,1) => global_id=692
[DBG]  agent 3 t=4 => decoded (sx,sy)=(4,1) => global_id=724
[DBG]  Complete path of agent 3:
[DBG]    Original: 468 468 468 468 468 468 468 468 468 468 468 468 469 501 501 501 533 565 597 629 628 628 660 692 724 756 757 757 757 756 788 787 819 818 850 882 914 913 912 
[DBG]    New:     468 468 468 468 468 468 468 468 468 468 468 468 469 501 501 501 533 565 597 629 661 660 692 724 756 757 757 757 756 788 787 819 818 850 882 914 913 912 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 468 468 468 468 468 468 468 468 468 468 468 468 469 501 501 501 533 565 597 
[DBG]    Local path (in submap): 629 661 660 692 724 756 
[DBG]    Suffix (out of submap): 757 757 757 756 788 787 819 818 850 882 914 913 912 
[DBG]  Original agent path length 3 je: 39
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 0: 468, 468, 468, 468, 468, 468, 468, 468, 468, 468, 468, 468, 469, 501, 501, 501, 533, 565, 597, 629, 661, 660, 692, 724, 756, 757, 757, 757, 756, 788, 787, 819, 818, 850, 882, 914, 913, 912, 
[DBG]  Path for agent 3 updated, resulting length: 38
[DBG]  Update the agent path 28 | Original local length: 17 | New local length: 4
[DBG]  agent 28 t=0 => decoded (sx,sy)=(2,2) => global_id=661
[DBG]  agent 28 t=1 => decoded (sx,sy)=(2,1) => global_id=660
[DBG]  agent 28 t=2 => decoded (sx,sy)=(3,1) => global_id=692
[DBG]  agent 28 t=3 => decoded (sx,sy)=(4,1) => global_id=724
[DBG]  Complete path of agent 28:
[DBG]    Original: 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 629 629 629 629 628 627 659 691 692 724 756 757 725 726 727 
[DBG]    New:     661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 660 692 724 756 757 725 726 727 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 
[DBG]    Local path (in submap): 661 660 692 724 756 757 725 726 727 
[DBG]    Suffix (out of submap): 
[DBG]  Original agent path length 28 je: 41
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 1: 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 660, 692, 724, 756, 757, 725, 726, 727, 
[DBG]  Path for agent 28 updated, resulting length: 28
[DBG]  Paths successfully updated.
[DBG]  (LNS.cpp) New path for agent 3: 
[DBG]  468, 468, 468, 468, 468, 468, 468, 468, 468, 468, 468, 468, 469, 501, 501, 501, 533, 565, 597, 629, 661, 660, 692, 724, 756, 757, 757, 757, 756, 788, 787, 819, 818, 850, 882, 914, 913, 912, 
[DBG]  (LNS.cpp) New path for agent 28: 
[DBG]  661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 660, 692, 724, 756, 757, 725, 726, 727, 
[DBG]  Delta value: 0.179487
[DBG]  Rewarding metric index = 0
[DBG]  component_weights = {0.851062, 0.0705151, 0.0387832, 0.0396396}
[DBG]  opSuccess value: 1
[STAT] neighbor.sum_of_costs before recomputation: 64
[STAT] neighbor.old_sum_of_costs before recomputation: 78
[STAT] sum_of_costs before recomputation: 4423
[DBG]  Validate solution immediately after SAT success.
[WARNING] Problem after SAT: Vertex conflict between agents 3 and 0 at location 660 at timestep 21
[DBG]  [DEBUG] Attempting immediate repair via init_lns because problem occurred after SAT (should be applied only for conflicts...).
[DBG]  [DEBUG] Passing 150 agents to init_lns (skip=true).
[DBG]  [DEBUG] path_table contents for selected agents (neighbor.agents):
[DBG]    Agent 3 => controlling path length=38
[DBG]    Agent 28 => controlling path length=28
[DBG]  hodnota skip_initial_solution=1
[DBG]  We skip initialSolution => call buildCollisionData()
[DBG]  buildCollisionData() called â€“ skip_initial_solution case.
[DBG]  Agents.size()=150, collision_graph.size()=150
[DBG]  agent 0 => updateCollidingPairs => foundCollision
[DBG]  agent 3 => updateCollidingPairs => foundCollision
[DBG]  agent 28 => updateCollidingPairs => foundCollision
[DBG]  agent 42 => updateCollidingPairs => foundCollision
[DBG]  agent 57 => updateCollidingPairs => foundCollision
[DBG]  Conflicting agent pairs:
[DBG]  agent 0 is in conflict with agent 3
[DBG]  agent 3 is in conflict with agent 57
[DBG]  agent 28 is in conflict with agent 42
[DBG]  buildCollisionData() => sum_of_costs=4409, num_of_colliding_pairs=3
[DBG]  buildCollisionData done => sum_of_costs=4409, num_of_colliding_pairs=3
[DBG]  sum_of_cost hodnota: 4409
[DBG]  After skip/init build => iteration_stats.back(): sum_of_costs=4409, collisions=3
[DEBUG] Using default neighbor generation strategy for conflicts: 0
[DEBUG] Using default neighbor generation strategy for conflicts: 1
[DEBUG] Using default neighbor generation strategy for conflicts: 1
[DEBUG] Using default neighbor generation strategy for conflicts: 2
[DEBUG] Using default neighbor generation strategy for conflicts: 2
[DEBUG] Using default neighbor generation strategy for conflicts: 2
[DEBUG] Using default neighbor generation strategy for conflicts: 0
	InitLNS(PP): runtime = 0.0128312, iterations = 8, colliding pairs = 0, initial colliding pairs = 3, solution cost = 4432, initial solution cost = 4409, failed iterations = 0
[DBG]  [DEBUG] init_lns->sum_of_costs after init_lns->run: 4432
[DBG]  [DEBUG] sum_of_costs after assignment from init_lns->run: 4432
[DBG]  Recomputing sum_of_cost by dividing neighbor.sum_of_costs and neighbor.old_sum_of_costs
[STAT] sum_of_costs after recomputation: 4432
[STAT] Iteration 61
[DBG]  Using SAT operator (destroy+repair SAT).
[DBG]  ====================
[DBG]  SAT destroy operator called.
[DBG]  SAT heuristic: 2
[DBG]  key_agent_id: 28
[DBG]  key_agent_id global path length: 41
[DBG]  Submap content (global positions):
[DBG]  595 596 597 598 599 
[DBG]  627 628 629 630 631 
[DBG]  659 660 661 662 663 
[DBG]  691 692 693 694 695 
[DBG]  723 724 725 726 727 
[DBG]  Map content with agents and obstacles:
[DBG]  X A . X . 
[DBG]  . A . X . 
[DBG]  A . A X X 
[DBG]  . . X X X 
[DBG]  X . . . . 
[DBG]  content of the map structure that we pass to the SAT solver:
[DBG]  -1  1  1  -1  1  
[DBG]  1  1  1  -1  1  
[DBG]  1  1  1  -1  -1  
[DBG]  1  1  -1  -1  -1  
[DBG]  -1  1  1  1  1  
[DBG]  Identifying agents in a submap for rescheduling (when key_agent is there at the time 20):
[DBG]  Agent 0 found intervals in the sub-map:
[DBG]   [20..23]
[DBG]  Agent 0 (interval in submap: [20..23]) contains time 20, added to replan.
[DBG]  Agent 3 found intervals in the sub-map:
[DBG]   [18..24]
[DBG]  Agent 3 (interval in submap: [18..24]) contains time 20, added to replan.
[DBG]  Agent 28 found intervals in the sub-map:
[DBG]   [0..35] [38..40]
[DBG]  Agent 28 (interval in submap: [0..35]) contains time 20, added to replan.
[DBG]  Agent 30 found intervals in the sub-map:
[DBG]  
[DBG]  Agent 30 is not in sub-map at time 20 (intervals: 
[DBG]  )
[DBG]  Agent 45 found intervals in the sub-map:
[DBG]   [19..26]
[DBG]  Agent 45 (interval in submap: [19..26]) contains time 20, added to replan.
[DBG]  Agent 148 found intervals in the sub-map:
[DBG]   [39..40]
[DBG]  Agent 148 is not in sub-map at time 20 (intervals: 
[DBG]  [39..40] )
[DBG]  Agent 0 | Start (global): 659 -> (local): (2, 0) at time 20 | Goal (global): 724 -> (local): (4, 1) at time 23
[DBG]  Agent 3 | Start (global): 628 -> (local): (1, 1) at time 20 | Goal (global): 659 -> (local): (2, 0) at time 24
[DBG]  Agent 28 | Start (global): 661 -> (local): (2, 2) at time 20 | Goal (global): 724 -> (local): (4, 1) at time 35
[DBG]  Agent 45 | Start (global): 596 -> (local): (0, 1) at time 20 | Goal (global): 724 -> (local): (4, 1) at time 26
[DBG]  [REPAIR] SAT destroy operator called.
[DBG]  [REPAIR] SAT operator â€“ launching subproblem FOR OPTIMIZATION.
[DBG]  Creating local paths (sx, sy) in the submap for T_sync = 20
[DBG]    Agent 0 (global paths from T=20 to 23) has local path: (2,0) (2,1) (3,1) (4,1) 
[DBG]    Agent 3 (global paths from T=20 to 24) has local path: (1,1) (1,1) (2,1) (2,1) (2,0) 
[DBG]    Agent 28 (global paths from T=20 to 35) has local path: (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,1) (2,1) (2,1) (2,1) (2,1) (3,1) (4,1) 
[DBG]    Agent 45 (global paths from T=20 to 26) has local path: (0,1) (0,1) (1,1) (1,1) (2,1) (3,1) (4,1) 
[DBG]  Checking input data for SAT solver:
[DBG]    - Number of agents to replan: 4
[DBG]  Agent 0 has the original local path length: 4 => Start (2,0), Goal (4,1)
[DBG]  Agent 3 has the original local path length: 5 => Start (1,1), Goal (2,0)
[DBG]  Agent 28 has the original local path length: 16 => Start (2,2), Goal (4,1)
[DBG]  Agent 45 has the original local path length: 7 => Start (0,1), Goal (4,1)
[DBG]  Start position: (2, 0), (1, 1), (2, 2), (0, 1), 
[DBG]  Goal position: (4, 1), (2, 0), (4, 1), (4, 1), 
[DBG]  SAT instance and solver created.
Currently solving
Instance name: scen
Map name: map
Encoding used: disappear_at_goal
SAT solver used: Kissat
Optimizing function: sum of costs
Number of agents: 4
Mks LB: 5
SoC LB: 16
Delta: 0
Remaining time: 300000 [ms]

[STAT] Solver returned: -1
[DBG]  SAT solver failed.
[STAT] SAT solver failed to find a valid solution.
[DBG]  ====================
[DBG]  SAT destroy operator called.
[DBG]  SAT heuristic: 2
[DBG]  key_agent_id: 28
[DBG]  key_agent_id global path length: 41
[DBG]  Submap content (global positions):
[DBG]  595 596 597 598 599 
[DBG]  627 628 629 630 631 
[DBG]  659 660 661 662 663 
[DBG]  691 692 693 694 695 
[DBG]  723 724 725 726 727 
[DBG]  Map content with agents and obstacles:
[DBG]  X . . X . 
[DBG]  . A . X . 
[DBG]  . . A X X 
[DBG]  . . X X X 
[DBG]  X . . A . 
[DBG]  content of the map structure that we pass to the SAT solver:
[DBG]  -1  1  1  -1  1  
[DBG]  1  1  1  -1  1  
[DBG]  1  1  1  -1  -1  
[DBG]  1  1  -1  -1  -1  
[DBG]  -1  1  1  1  1  
[DBG]  Identifying agents in a submap for rescheduling (when key_agent is there at the time 9):
[DBG]  Agent 10 found intervals in the sub-map:
[DBG]  
[DBG]  Agent 10 is not in sub-map at time 9 (intervals: 
[DBG]  )
[DBG]  Agent 28 found intervals in the sub-map:
[DBG]   [0..35] [38..40]
[DBG]  Agent 28 (interval in submap: [0..35]) contains time 9, added to replan.
[DBG]  Agent 89 found intervals in the sub-map:
[DBG]   [7..14]
[DBG]  Agent 89 (interval in submap: [7..14]) contains time 9, added to replan.
[DBG]  Agent 113 found intervals in the sub-map:
[DBG]  
[DBG]  Agent 113 is not in sub-map at time 9 (intervals: 
[DBG]  )
[DBG]  Agent 135 found intervals in the sub-map:
[DBG]   [4..4] [8..14]
[DBG]  Agent 135 (interval in submap: [8..14]) contains time 9, added to replan.
[DBG]  Agent 28 | Start (global): 661 -> (local): (2, 2) at time 9 | Goal (global): 724 -> (local): (4, 1) at time 35
[DBG]  Agent 89 | Start (global): 628 -> (local): (1, 1) at time 9 | Goal (global): 724 -> (local): (4, 1) at time 14
[DBG]  Agent 135 | Start (global): 726 -> (local): (4, 3) at time 9 | Goal (global): 659 -> (local): (2, 0) at time 14
[DBG]  [REPAIR] SAT destroy operator called.
[DBG]  [REPAIR] SAT operator â€“ launching subproblem FOR OPTIMIZATION.
[DBG]  Creating local paths (sx, sy) in the submap for T_sync = 9
[DBG]    Agent 28 (global paths from T=9 to 35) has local path: (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,1) (2,1) (2,1) (2,1) (2,1) (3,1) (4,1) 
[DBG]    Agent 89 (global paths from T=9 to 14) has local path: (1,1) (2,1) (2,1) (2,1) (3,1) (4,1) 
[DBG]    Agent 135 (global paths from T=9 to 14) has local path: (4,3) (4,2) (4,1) (3,1) (3,0) (2,0) 
[DBG]  Checking input data for SAT solver:
[DBG]    - Number of agents to replan: 3
[DBG]  Agent 28 has the original local path length: 27 => Start (2,2), Goal (4,1)
[DBG]  Agent 89 has the original local path length: 6 => Start (1,1), Goal (4,1)
[DBG]  Agent 135 has the original local path length: 6 => Start (4,3), Goal (2,0)
[DBG]  Start position: (2, 2), (1, 1), (4, 3), 
[DBG]  Goal position: (4, 1), (4, 1), (2, 0), 
[DBG]  SAT instance and solver created.
Currently solving
Instance name: scen
Map name: map
Encoding used: disappear_at_goal
SAT solver used: Kissat
Optimizing function: sum of costs
Number of agents: 3
Mks LB: 6
SoC LB: 14
Delta: 0
Remaining time: 300000 [ms]

[STAT] Solver returned: -1
[DBG]  SAT solver failed.
[STAT] SAT solver failed to find a valid solution.
[DBG]  ====================
[DBG]  SAT destroy operator called.
[DBG]  SAT heuristic: 2
[DBG]  key_agent_id: 28
[DBG]  key_agent_id global path length: 41
[DBG]  Submap content (global positions):
[DBG]  691 692 693 694 695 
[DBG]  723 724 725 726 727 
[DBG]  755 756 757 758 759 
[DBG]  787 788 789 790 791 
[DBG]  819 820 821 822 823 
[DBG]  Map content with agents and obstacles:
[DBG]  . A X X X 
[DBG]  X A A . . 
[DBG]  . . A X . 
[DBG]  . . X . X 
[DBG]  . . . . . 
[DBG]  content of the map structure that we pass to the SAT solver:
[DBG]  1  1  -1  -1  -1  
[DBG]  -1  1  1  1  1  
[DBG]  1  1  1  -1  1  
[DBG]  1  1  -1  1  -1  
[DBG]  1  1  1  1  1  
[DBG]  Identifying agents in a submap for rescheduling (when key_agent is there at the time 37):
[DBG]  Agent 26 found intervals in the sub-map:
[DBG]   [32..36]
[DBG]  Agent 26 is not in sub-map at time 37 (intervals: 
[DBG]  [32..36] )
[DBG]  Agent 28 found intervals in the sub-map:
[DBG]   [34..40]
[DBG]  Agent 28 (interval in submap: [34..40]) contains time 37, added to replan.
[DBG]  Agent 42 found intervals in the sub-map:
[DBG]   [35..40]
[DBG]  Agent 42 (interval in submap: [35..40]) contains time 37, added to replan.
[DBG]  Agent 45 found intervals in the sub-map:
[DBG]   [25..29]
[DBG]  Agent 45 is not in sub-map at time 37 (intervals: 
[DBG]  [25..29] )
[DBG]  Agent 53 found intervals in the sub-map:
[DBG]   [29..34]
[DBG]  Agent 53 is not in sub-map at time 37 (intervals: 
[DBG]  [29..34] )
[DBG]  Agent 59 found intervals in the sub-map:
[DBG]   [35..41]
[DBG]  Agent 59 (interval in submap: [35..41]) contains time 37, added to replan.
[DBG]  Agent 69 found intervals in the sub-map:
[DBG]   [37..41]
[DBG]  Agent 69 (interval in submap: [37..41]) contains time 37, added to replan.
[DBG]  Agent 28 | Start (global): 757 -> (local): (2, 2) at time 37 | Goal (global): 727 -> (local): (1, 4) at time 40
[DBG]  Agent 42 | Start (global): 725 -> (local): (1, 2) at time 37 | Goal (global): 759 -> (local): (2, 4) at time 40
[DBG]  Agent 59 | Start (global): 724 -> (local): (1, 1) at time 37 | Goal (global): 819 -> (local): (4, 0) at time 41
[DBG]  Agent 69 | Start (global): 692 -> (local): (0, 1) at time 37 | Goal (global): 820 -> (local): (4, 1) at time 41
[DBG]  [REPAIR] SAT destroy operator called.
[DBG]  [REPAIR] SAT operator â€“ launching subproblem FOR OPTIMIZATION.
[DBG]  Creating local paths (sx, sy) in the submap for T_sync = 37
[DBG]    Agent 28 (global paths from T=37 to 40) has local path: (2,2) (1,2) (1,3) (1,4) 
[DBG]    Agent 42 (global paths from T=37 to 40) has local path: (1,2) (1,3) (1,4) (2,4) 
[DBG]    Agent 59 (global paths from T=37 to 41) has local path: (1,1) (2,1) (3,1) (4,1) (4,0) 
[DBG]    Agent 69 (global paths from T=37 to 41) has local path: (0,1) (1,1) (2,1) (3,1) (4,1) 
[DBG]  Checking input data for SAT solver:
[DBG]    - Number of agents to replan: 4
[DBG]  Agent 28 has the original local path length: 4 => Start (2,2), Goal (1,4)
[DBG]  Agent 42 has the original local path length: 4 => Start (1,2), Goal (2,4)
[DBG]  Agent 59 has the original local path length: 5 => Start (1,1), Goal (4,0)
[DBG]  Agent 69 has the original local path length: 5 => Start (0,1), Goal (4,1)
[DBG]  Start position: (2, 2), (1, 2), (1, 1), (0, 1), 
[DBG]  Goal position: (1, 4), (2, 4), (4, 0), (4, 1), 
[DBG]  SAT instance and solver created.
Currently solving
Instance name: scen
Map name: map
Encoding used: disappear_at_goal
SAT solver used: Kissat
Optimizing function: sum of costs
Number of agents: 4
Mks LB: 5
SoC LB: 18
Delta: 0
Remaining time: 300000 [ms]

Vertex conflict! Agents 0, 1, timestep 4, location 0
Found plan [agents = 4] [timesteps = 5]
Agent #0 : 8 3 4 5 0 
Agent #1 : 3 4 5 9 0 
Agent #2 : 2 7 11 14 13 
Agent #3 : 1 2 7 11 14 

[STAT] Solver returned: 0
[DBG]  Agent (index) 28 | New local path (submap idx):
[DBG]  8 3 4 5 
[DBG]  Agent (index) 42 | New local path (submap idx):
[DBG]  3 4 5 9 
[DBG]  Agent (index) 59 | New local path (submap idx):
[DBG]  2 7 11 14 13 
[DBG]  Agent (index) 69 | New local path (submap idx):
[DBG]  1 2 7 11 14 
[DBG]  Update the agent path 28 | Original local length: 4 | New local length: 4
[DBG]  agent 28 t=0 => decoded (sx,sy)=(2,2) => global_id=757
[DBG]  agent 28 t=1 => decoded (sx,sy)=(1,2) => global_id=725
[DBG]  agent 28 t=2 => decoded (sx,sy)=(1,3) => global_id=726
[DBG]  agent 28 t=3 => decoded (sx,sy)=(1,4) => global_id=727
[DBG]  Complete path of agent 28:
[DBG]    Original: 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 660 660 660 660 660 692 724 756 757 725 726 727 
[DBG]    New:     661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 660 660 660 660 660 692 724 756 757 725 726 727 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 660 660 660 660 660 692 724 756 
[DBG]    Local path (in submap): 757 725 726 727 
[DBG]    Suffix (out of submap): 
[DBG]  Original agent path length 28 je: 41
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 0: 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 660, 660, 660, 660, 660, 692, 724, 756, 757, 725, 726, 727, 
[DBG]  Path for agent 28 updated, resulting length: 41
[DBG]  Update the agent path 42 | Original local length: 4 | New local length: 4
[DBG]  agent 42 t=0 => decoded (sx,sy)=(1,2) => global_id=725
[DBG]  agent 42 t=1 => decoded (sx,sy)=(1,3) => global_id=726
[DBG]  agent 42 t=2 => decoded (sx,sy)=(1,4) => global_id=727
[DBG]  agent 42 t=3 => decoded (sx,sy)=(2,4) => global_id=759
[DBG]  Complete path of agent 42:
[DBG]    Original: 224 256 257 258 259 291 323 355 356 357 389 390 422 423 424 425 426 427 428 429 430 431 432 464 496 528 528 529 561 593 625 657 658 659 660 692 724 725 726 727 759 
[DBG]    New:     224 256 257 258 259 291 323 355 356 357 389 390 422 423 424 425 426 427 428 429 430 431 432 464 496 528 528 529 561 593 625 657 658 659 660 692 724 725 726 727 759 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 224 256 257 258 259 291 323 355 356 357 389 390 422 423 424 425 426 427 428 429 430 431 432 464 496 528 528 529 561 593 625 657 658 659 660 692 724 
[DBG]    Local path (in submap): 725 726 727 759 
[DBG]    Suffix (out of submap): 
[DBG]  Original agent path length 42 je: 41
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 1: 224, 256, 257, 258, 259, 291, 323, 355, 356, 357, 389, 390, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 464, 496, 528, 528, 529, 561, 593, 625, 657, 658, 659, 660, 692, 724, 725, 726, 727, 759, 
[DBG]  Path for agent 42 updated, resulting length: 41
[DBG]  Update the agent path 59 | Original local length: 5 | New local length: 5
[DBG]  agent 59 t=0 => decoded (sx,sy)=(1,1) => global_id=724
[DBG]  agent 59 t=1 => decoded (sx,sy)=(2,1) => global_id=756
[DBG]  agent 59 t=2 => decoded (sx,sy)=(3,1) => global_id=788
[DBG]  agent 59 t=3 => decoded (sx,sy)=(4,1) => global_id=820
[DBG]  agent 59 t=4 => decoded (sx,sy)=(4,0) => global_id=819
[DBG]  Complete path of agent 59:
[DBG]    Original: 256 257 258 259 260 261 293 294 295 296 296 297 298 299 300 301 333 365 366 398 398 398 430 431 432 464 496 528 529 561 593 625 657 658 659 691 692 724 756 788 820 819 851 883 884 916 917 
[DBG]    New:     256 257 258 259 260 261 293 294 295 296 296 297 298 299 300 301 333 365 366 398 398 398 430 431 432 464 496 528 529 561 593 625 657 658 659 691 692 724 756 788 820 819 851 883 884 916 917 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 256 257 258 259 260 261 293 294 295 296 296 297 298 299 300 301 333 365 366 398 398 398 430 431 432 464 496 528 529 561 593 625 657 658 659 691 692 
[DBG]    Local path (in submap): 724 756 788 820 819 
[DBG]    Suffix (out of submap): 851 883 884 916 917 
[DBG]  Original agent path length 59 je: 47
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 2: 256, 257, 258, 259, 260, 261, 293, 294, 295, 296, 296, 297, 298, 299, 300, 301, 333, 365, 366, 398, 398, 398, 430, 431, 432, 464, 496, 528, 529, 561, 593, 625, 657, 658, 659, 691, 692, 724, 756, 788, 820, 819, 851, 883, 884, 916, 917, 
[DBG]  Path for agent 59 updated, resulting length: 47
[DBG]  Update the agent path 69 | Original local length: 5 | New local length: 5
[DBG]  agent 69 t=0 => decoded (sx,sy)=(0,1) => global_id=692
[DBG]  agent 69 t=1 => decoded (sx,sy)=(1,1) => global_id=724
[DBG]  agent 69 t=2 => decoded (sx,sy)=(2,1) => global_id=756
[DBG]  agent 69 t=3 => decoded (sx,sy)=(3,1) => global_id=788
[DBG]  agent 69 t=4 => decoded (sx,sy)=(4,1) => global_id=820
[DBG]  Complete path of agent 69:
[DBG]    Original: 4 5 6 7 8 40 72 73 74 106 138 139 140 141 173 205 237 269 301 333 365 366 398 430 462 494 526 558 590 591 592 593 625 657 658 659 660 692 724 756 788 820 
[DBG]    New:     4 5 6 7 8 40 72 73 74 106 138 139 140 141 173 205 237 269 301 333 365 366 398 430 462 494 526 558 590 591 592 593 625 657 658 659 660 692 724 756 788 820 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 4 5 6 7 8 40 72 73 74 106 138 139 140 141 173 205 237 269 301 333 365 366 398 430 462 494 526 558 590 591 592 593 625 657 658 659 660 
[DBG]    Local path (in submap): 692 724 756 788 820 
[DBG]    Suffix (out of submap): 
[DBG]  Original agent path length 69 je: 42
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 3: 4, 5, 6, 7, 8, 40, 72, 73, 74, 106, 138, 139, 140, 141, 173, 205, 237, 269, 301, 333, 365, 366, 398, 430, 462, 494, 526, 558, 590, 591, 592, 593, 625, 657, 658, 659, 660, 692, 724, 756, 788, 820, 
[DBG]  Path for agent 69 updated, resulting length: 42
[DBG]  Paths successfully updated.
[DBG]  (LNS.cpp) New path for agent 28: 
[DBG]  661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 660, 660, 660, 660, 660, 692, 724, 756, 757, 725, 726, 727, 
[DBG]  (LNS.cpp) New path for agent 42: 
[DBG]  224, 256, 257, 258, 259, 291, 323, 355, 356, 357, 389, 390, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 464, 496, 528, 528, 529, 561, 593, 625, 657, 658, 659, 660, 692, 724, 725, 726, 727, 759, 
[DBG]  (LNS.cpp) New path for agent 59: 
[DBG]  256, 257, 258, 259, 260, 261, 293, 294, 295, 296, 296, 297, 298, 299, 300, 301, 333, 365, 366, 398, 398, 398, 430, 431, 432, 464, 496, 528, 529, 561, 593, 625, 657, 658, 659, 691, 692, 724, 756, 788, 820, 819, 851, 883, 884, 916, 917, 
[DBG]  (LNS.cpp) New path for agent 69: 
[DBG]  4, 5, 6, 7, 8, 40, 72, 73, 74, 106, 138, 139, 140, 141, 173, 205, 237, 269, 301, 333, 365, 366, 398, 430, 462, 494, 526, 558, 590, 591, 592, 593, 625, 657, 658, 659, 660, 692, 724, 756, 788, 820, 
[DBG]  Delta value: 0
[DBG]  Rewarding metric index = 0
[DBG]  component_weights = {0.857447, 0.0674919, 0.0371205, 0.0379402}
[DBG]  opSuccess value: 1
[STAT] neighbor.sum_of_costs before recomputation: 167
[STAT] neighbor.old_sum_of_costs before recomputation: 167
[STAT] sum_of_costs before recomputation: 4432
[DBG]  Validate solution immediately after SAT success.
[DBG]  No problems after SAT replan.
[DBG]  Recomputing sum_of_cost by dividing neighbor.sum_of_costs and neighbor.old_sum_of_costs
[STAT] sum_of_costs after recomputation: 4432
[STAT] Iteration 62
[DBG]  Using SAT operator (destroy+repair SAT).
[DBG]  ====================
[DBG]  SAT destroy operator called.
[DBG]  SAT heuristic: 2
[DBG]  key_agent_id: 28
[DBG]  key_agent_id global path length: 41
[DBG]  Submap content (global positions):
[DBG]  594 595 596 597 598 
[DBG]  626 627 628 629 630 
[DBG]  658 659 660 661 662 
[DBG]  690 691 692 693 694 
[DBG]  722 723 724 725 726 
[DBG]  Map content with agents and obstacles:
[DBG]  . X . . X 
[DBG]  X A . . X 
[DBG]  . . A . X 
[DBG]  X . . X X 
[DBG]  . X A . . 
[DBG]  content of the map structure that we pass to the SAT solver:
[DBG]  1  -1  1  1  -1  
[DBG]  -1  1  1  1  -1  
[DBG]  1  1  1  1  -1  
[DBG]  -1  1  1  -1  -1  
[DBG]  1  -1  1  1  1  
[DBG]  Identifying agents in a submap for rescheduling (when key_agent is there at the time 30):
[DBG]  Agent 26 found intervals in the sub-map:
[DBG]   [26..34]
[DBG]  Agent 26 (interval in submap: [26..34]) contains time 30, added to replan.
[DBG]  Agent 28 found intervals in the sub-map:
[DBG]   [0..35] [38..39]
[DBG]  Agent 28 (interval in submap: [0..35]) contains time 30, added to replan.
[DBG]  Agent 30 found intervals in the sub-map:
[DBG]  
[DBG]  Agent 30 is not in sub-map at time 30 (intervals: 
[DBG]  )
[DBG]  Agent 45 found intervals in the sub-map:
[DBG]   [19..26]
[DBG]  Agent 45 is not in sub-map at time 30 (intervals: 
[DBG]  [19..26] )
[DBG]  Agent 53 found intervals in the sub-map:
[DBG]   [25..30]
[DBG]  Agent 53 (interval in submap: [25..30]) contains time 30, added to replan.
[DBG]  Agent 148 found intervals in the sub-map:
[DBG]   [38..40]
[DBG]  Agent 148 is not in sub-map at time 30 (intervals: 
[DBG]  [38..40] )
[DBG]  Agent 26 | Start (global): 627 -> (local): (1, 1) at time 30 | Goal (global): 724 -> (local): (4, 2) at time 34
[DBG]  Agent 28 | Start (global): 660 -> (local): (2, 2) at time 30 | Goal (global): 724 -> (local): (4, 2) at time 35
[DBG]  Agent 53 | Start (global): 724 -> (local): (4, 2) at time 30 | Goal (global): 724 -> (local): (4, 2) at time 30
[DBG]  [REPAIR] SAT destroy operator called.
[DBG]  [REPAIR] SAT operator â€“ launching subproblem FOR OPTIMIZATION.
[DBG]  Creating local paths (sx, sy) in the submap for T_sync = 30
[DBG]    Agent 26 (global paths from T=30 to 34) has local path: (1,1) (2,1) (3,1) (3,2) (4,2) 
[DBG]    Agent 28 (global paths from T=30 to 35) has local path: (2,2) (2,2) (2,2) (2,2) (3,2) (4,2) 
[DBG]    Agent 53 (global paths from T=30 to 30) has local path: (4,2) 
[DBG]  Checking input data for SAT solver:
[DBG]    - Number of agents to replan: 3
[DBG]  Agent 26 has the original local path length: 5 => Start (1,1), Goal (4,2)
[DBG]  Agent 28 has the original local path length: 6 => Start (2,2), Goal (4,2)
[DBG]  Agent 53 has the original local path length: 1 => Start (4,2), Goal (4,2)
[DBG]  Start position: (1, 1), (2, 2), (4, 2), 
[DBG]  Goal position: (4, 2), (4, 2), (4, 2), 
[DBG]  SAT instance and solver created.
Currently solving
Instance name: scen
Map name: map
Encoding used: disappear_at_goal
SAT solver used: Kissat
Optimizing function: sum of costs
Number of agents: 3
Mks LB: 5
SoC LB: 9
Delta: 0
Remaining time: 300000 [ms]

Vertex conflict! Agents 1, 2, timestep 3, location 0
Swapping conflict! Agents 1, 2, timestep 3, edge (0,0)
Vertex conflict! Agents 1, 2, timestep 4, location 0
Found plan [agents = 3] [timesteps = 5]
Agent #0 : 3 7 10 11 13 
Agent #1 : 8 11 13 0 0 
Agent #2 : 13 0 0 0 0 

[STAT] Solver returned: 0
[DBG]  Agent (index) 26 | New local path (submap idx):
[DBG]  3 7 10 11 13 
[DBG]  Agent (index) 28 | New local path (submap idx):
[DBG]  8 11 13 
[DBG]  Agent (index) 53 | New local path (submap idx):
[DBG]  13 
[DBG]  Update the agent path 26 | Original local length: 5 | New local length: 5
[DBG]  agent 26 t=0 => decoded (sx,sy)=(1,1) => global_id=627
[DBG]  agent 26 t=1 => decoded (sx,sy)=(2,1) => global_id=659
[DBG]  agent 26 t=2 => decoded (sx,sy)=(3,1) => global_id=691
[DBG]  agent 26 t=3 => decoded (sx,sy)=(3,2) => global_id=692
[DBG]  agent 26 t=4 => decoded (sx,sy)=(4,2) => global_id=724
[DBG]  Complete path of agent 26:
[DBG]    Original: 13 14 46 47 79 80 81 82 83 84 116 148 180 212 244 276 308 309 341 373 405 437 469 501 533 565 597 596 628 628 627 659 691 692 724 756 755 
[DBG]    New:     13 14 46 47 79 80 81 82 83 84 116 148 180 212 244 276 308 309 341 373 405 437 469 501 533 565 597 596 628 628 627 659 691 692 724 756 755 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 13 14 46 47 79 80 81 82 83 84 116 148 180 212 244 276 308 309 341 373 405 437 469 501 533 565 597 596 628 628 
[DBG]    Local path (in submap): 627 659 691 692 724 
[DBG]    Suffix (out of submap): 756 755 
[DBG]  Original agent path length 26 je: 37
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 0: 13, 14, 46, 47, 79, 80, 81, 82, 83, 84, 116, 148, 180, 212, 244, 276, 308, 309, 341, 373, 405, 437, 469, 501, 533, 565, 597, 596, 628, 628, 627, 659, 691, 692, 724, 756, 755, 
[DBG]  Path for agent 26 updated, resulting length: 37
[DBG]  Update the agent path 28 | Original local length: 6 | New local length: 3
[DBG]  agent 28 t=0 => decoded (sx,sy)=(2,2) => global_id=660
[DBG]  agent 28 t=1 => decoded (sx,sy)=(3,2) => global_id=692
[DBG]  agent 28 t=2 => decoded (sx,sy)=(4,2) => global_id=724
[DBG]  Complete path of agent 28:
[DBG]    Original: 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 660 660 660 660 660 692 724 756 757 725 726 727 
[DBG]    New:     661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 660 660 692 724 756 757 725 726 727 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 660 
[DBG]    Local path (in submap): 660 692 724 756 757 725 
[DBG]    Suffix (out of submap): 726 727 
[DBG]  Original agent path length 28 je: 41
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 1: 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 660, 660, 692, 724, 756, 757, 725, 726, 727, 
[DBG]  Path for agent 28 updated, resulting length: 38
[DBG]  Update the agent path 53 | Original local length: 1 | New local length: 1
[DBG]  agent 53 t=0 => decoded (sx,sy)=(4,2) => global_id=724
[DBG]  Complete path of agent 53:
[DBG]    Original: 84 52 52 84 83 115 147 148 180 212 244 276 308 308 308 308 309 341 373 405 437 469 501 533 565 597 596 628 660 692 724 756 788 820 821 
[DBG]    New:     84 52 52 84 83 115 147 148 180 212 244 276 308 308 308 308 309 341 373 405 437 469 501 533 565 597 596 628 660 692 724 756 788 820 821 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 84 52 52 84 83 115 147 148 180 212 244 276 308 308 308 308 309 341 373 405 437 469 501 533 565 597 596 628 660 692 
[DBG]    Local path (in submap): 724 
[DBG]    Suffix (out of submap): 756 788 820 821 
[DBG]  Original agent path length 53 je: 35
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 2: 84, 52, 52, 84, 83, 115, 147, 148, 180, 212, 244, 276, 308, 308, 308, 308, 309, 341, 373, 405, 437, 469, 501, 533, 565, 597, 596, 628, 660, 692, 724, 756, 788, 820, 821, 
[DBG]  Path for agent 53 updated, resulting length: 35
[DBG]  Paths successfully updated.
[DBG]  (LNS.cpp) New path for agent 26: 
[DBG]  13, 14, 46, 47, 79, 80, 81, 82, 83, 84, 116, 148, 180, 212, 244, 276, 308, 309, 341, 373, 405, 437, 469, 501, 533, 565, 597, 596, 628, 628, 627, 659, 691, 692, 724, 756, 755, 
[DBG]  (LNS.cpp) New path for agent 28: 
[DBG]  661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 660, 660, 692, 724, 756, 757, 725, 726, 727, 
[DBG]  (LNS.cpp) New path for agent 53: 
[DBG]  84, 52, 52, 84, 83, 115, 147, 148, 180, 212, 244, 276, 308, 308, 308, 308, 309, 341, 373, 405, 437, 469, 501, 533, 565, 597, 596, 628, 660, 692, 724, 756, 788, 820, 821, 
[DBG]  Delta value: 0.0272727
[DBG]  Rewarding metric index = 0
[DBG]  component_weights = {0.866742, 0.0630916, 0.0347003, 0.0354666}
[DBG]  opSuccess value: 1
[STAT] neighbor.sum_of_costs before recomputation: 107
[STAT] neighbor.old_sum_of_costs before recomputation: 110
[STAT] sum_of_costs before recomputation: 4432
[DBG]  Validate solution immediately after SAT success.
[WARNING] Problem after SAT: Target conflict: agent 42 (len 40) traverses target of agent 28 (len 37) at location 727 at timestep 39
[DBG]  [DEBUG] Attempting immediate repair via init_lns because problem occurred after SAT (should be applied only for conflicts...).
[DBG]  [DEBUG] Passing 150 agents to init_lns (skip=true).
[DBG]  [DEBUG] path_table contents for selected agents (neighbor.agents):
[DBG]    Agent 26 => controlling path length=37
[DBG]    Agent 28 => controlling path length=38
[DBG]    Agent 53 => controlling path length=35
[DBG]  hodnota skip_initial_solution=1
[DBG]  We skip initialSolution => call buildCollisionData()
[DBG]  buildCollisionData() called â€“ skip_initial_solution case.
[DBG]  Agents.size()=150, collision_graph.size()=150
[DBG]  agent 28 => updateCollidingPairs => foundCollision
[DBG]  agent 42 => updateCollidingPairs => foundCollision
[DBG]  Conflicting agent pairs:
[DBG]  agent 28 is in conflict with agent 42
[DBG]  buildCollisionData() => sum_of_costs=4429, num_of_colliding_pairs=1
[DBG]  buildCollisionData done => sum_of_costs=4429, num_of_colliding_pairs=1
[DBG]  sum_of_cost hodnota: 4429
[DBG]  After skip/init build => iteration_stats.back(): sum_of_costs=4429, collisions=1
[DEBUG] Using default neighbor generation strategy for conflicts: 2
[DEBUG] Using default neighbor generation strategy for conflicts: 0
	InitLNS(PP): runtime = 0.00249692, iterations = 3, colliding pairs = 0, initial colliding pairs = 1, solution cost = 4446, initial solution cost = 4429, failed iterations = 0
[DBG]  [DEBUG] init_lns->sum_of_costs after init_lns->run: 4446
[DBG]  [DEBUG] sum_of_costs after assignment from init_lns->run: 4446
[DBG]  Recomputing sum_of_cost by dividing neighbor.sum_of_costs and neighbor.old_sum_of_costs
[STAT] sum_of_costs after recomputation: 4446
[STAT] Iteration 63
[DBG]  Using SAT operator (destroy+repair SAT).
[DBG]  ====================
[DBG]  SAT destroy operator called.
[DBG]  SAT heuristic: 2
[DBG]  key_agent_id: 28
[DBG]  key_agent_id global path length: 41
[DBG]  Submap content (global positions):
[DBG]  595 596 597 598 599 
[DBG]  627 628 629 630 631 
[DBG]  659 660 661 662 663 
[DBG]  691 692 693 694 695 
[DBG]  723 724 725 726 727 
[DBG]  Map content with agents and obstacles:
[DBG]  X A A X . 
[DBG]  . A . X . 
[DBG]  A A A X X 
[DBG]  A . X X X 
[DBG]  X . . . . 
[DBG]  content of the map structure that we pass to the SAT solver:
[DBG]  -1  1  1  -1  1  
[DBG]  1  1  1  -1  1  
[DBG]  1  1  1  -1  -1  
[DBG]  1  1  -1  -1  -1  
[DBG]  -1  1  1  1  1  
[DBG]  Identifying agents in a submap for rescheduling (when key_agent is there at the time 24):
[DBG]  Agent 1 found intervals in the sub-map:
[DBG]  
[DBG]  Agent 1 is not in sub-map at time 24 (intervals: 
[DBG]  )
[DBG]  Agent 3 found intervals in the sub-map:
[DBG]   [18..24]
[DBG]  Agent 3 (interval in submap: [18..24]) contains time 24, added to replan.
[DBG]  Agent 28 found intervals in the sub-map:
[DBG]   [0..38] [40..40]
[DBG]  Agent 28 (interval in submap: [0..38]) contains time 24, added to replan.
[DBG]  Agent 44 found intervals in the sub-map:
[DBG]   [23..27]
[DBG]  Agent 44 (interval in submap: [23..27]) contains time 24, added to replan.
[DBG]  Agent 45 found intervals in the sub-map:
[DBG]   [19..26]
[DBG]  Agent 45 (interval in submap: [19..26]) contains time 24, added to replan.
[DBG]  Agent 57 found intervals in the sub-map:
[DBG]   [21..27]
[DBG]  Agent 57 (interval in submap: [21..27]) contains time 24, added to replan.
[DBG]  Agent 71 found intervals in the sub-map:
[DBG]   [23..29]
[DBG]  Agent 71 (interval in submap: [23..29]) contains time 24, added to replan.
[DBG]  Agent 100 found intervals in the sub-map:
[DBG]   [24..28]
[DBG]  Agent 100 (interval in submap: [24..28]) contains time 24, added to replan.
[DBG]  Agent 144 found intervals in the sub-map:
[DBG]   [23..23]
[DBG]  Agent 144 is not in sub-map at time 24 (intervals: 
[DBG]  [23..23] )
[DBG]  Agent 3 | Start (global): 659 -> (local): (2, 0) at time 24 | Goal (global): 659 -> (local): (2, 0) at time 24
[DBG]  Agent 28 | Start (global): 661 -> (local): (2, 2) at time 24 | Goal (global): 727 -> (local): (4, 4) at time 38
[DBG]  Agent 44 | Start (global): 596 -> (local): (0, 1) at time 24 | Goal (global): 659 -> (local): (2, 0) at time 27
[DBG]  Agent 45 | Start (global): 660 -> (local): (2, 1) at time 24 | Goal (global): 724 -> (local): (4, 1) at time 26
[DBG]  Agent 57 | Start (global): 628 -> (local): (1, 1) at time 24 | Goal (global): 724 -> (local): (4, 1) at time 27
[DBG]  Agent 71 | Start (global): 691 -> (local): (3, 0) at time 24 | Goal (global): 724 -> (local): (4, 1) at time 29
[DBG]  Agent 100 | Start (global): 597 -> (local): (0, 2) at time 24 | Goal (global): 659 -> (local): (2, 0) at time 28
[DBG]  [REPAIR] SAT destroy operator called.
[DBG]  [REPAIR] SAT operator â€“ launching subproblem FOR OPTIMIZATION.
[DBG]  Creating local paths (sx, sy) in the submap for T_sync = 24
[DBG]    Agent 3 (global paths from T=24 to 24) has local path: (2,0) 
[DBG]    Agent 28 (global paths from T=24 to 38) has local path: (2,2) (2,2) (2,2) (2,2) (2,2) (2,1) (2,1) (2,1) (2,1) (2,1) (3,1) (4,1) (4,2) (4,3) (4,4) 
[DBG]    Agent 44 (global paths from T=24 to 27) has local path: (0,1) (1,1) (1,0) (2,0) 
[DBG]    Agent 45 (global paths from T=24 to 26) has local path: (2,1) (3,1) (4,1) 
[DBG]    Agent 57 (global paths from T=24 to 27) has local path: (1,1) (2,1) (3,1) (4,1) 
[DBG]    Agent 71 (global paths from T=24 to 29) has local path: (3,0) (3,0) (3,0) (3,1) (4,1) (4,1) 
[DBG]    Agent 100 (global paths from T=24 to 28) has local path: (0,2) (1,2) (1,1) (1,0) (2,0) 
[DBG]  Checking input data for SAT solver:
[DBG]    - Number of agents to replan: 7
[DBG]  Agent 3 has the original local path length: 1 => Start (2,0), Goal (2,0)
[DBG]  Agent 28 has the original local path length: 15 => Start (2,2), Goal (4,4)
[DBG]  Agent 44 has the original local path length: 4 => Start (0,1), Goal (2,0)
[DBG]  Agent 45 has the original local path length: 3 => Start (2,1), Goal (4,1)
[DBG]  Agent 57 has the original local path length: 4 => Start (1,1), Goal (4,1)
[DBG]  Agent 71 has the original local path length: 6 => Start (3,0), Goal (4,1)
[DBG]  Agent 100 has the original local path length: 5 => Start (0,2), Goal (2,0)
[DBG]  Start position: (2, 0), (2, 2), (0, 1), (2, 1), (1, 1), (3, 0), (0, 2), 
[DBG]  Goal position: (2, 0), (4, 4), (2, 0), (4, 1), (4, 1), (4, 1), (2, 0), 
[DBG]  SAT instance and solver created.
Currently solving
Instance name: scen
Map name: map
Encoding used: disappear_at_goal
SAT solver used: Kissat
Optimizing function: sum of costs
Number of agents: 7
Mks LB: 7
SoC LB: 27
Delta: 0
Remaining time: 300000 [ms]

[STAT] Solver returned: -1
[DBG]  SAT solver failed.
[STAT] SAT solver failed to find a valid solution.
[DBG]  ====================
[DBG]  SAT destroy operator called.
[DBG]  SAT heuristic: 2
[DBG]  key_agent_id: 28
[DBG]  key_agent_id global path length: 41
[DBG]  Submap content (global positions):
[DBG]  595 596 597 598 599 
[DBG]  627 628 629 630 631 
[DBG]  659 660 661 662 663 
[DBG]  691 692 693 694 695 
[DBG]  723 724 725 726 727 
[DBG]  Map content with agents and obstacles:
[DBG]  X . . X . 
[DBG]  . . . X . 
[DBG]  . . A X X 
[DBG]  . A X X X 
[DBG]  X A . A A 
[DBG]  content of the map structure that we pass to the SAT solver:
[DBG]  -1  1  1  -1  1  
[DBG]  1  1  1  -1  1  
[DBG]  1  1  1  -1  -1  
[DBG]  1  1  -1  -1  -1  
[DBG]  -1  1  1  1  1  
[DBG]  Identifying agents in a submap for rescheduling (when key_agent is there at the time 4):
[DBG]  Agent 7 found intervals in the sub-map:
[DBG]   [1..5]
[DBG]  Agent 7 (interval in submap: [1..5]) contains time 4, added to replan.
[DBG]  Agent 28 found intervals in the sub-map:
[DBG]   [0..38] [40..40]
[DBG]  Agent 28 (interval in submap: [0..38]) contains time 4, added to replan.
[DBG]  Agent 46 found intervals in the sub-map:
[DBG]   [4..7]
[DBG]  Agent 46 (interval in submap: [4..7]) contains time 4, added to replan.
[DBG]  Agent 108 found intervals in the sub-map:
[DBG]   [0..5]
[DBG]  Agent 108 (interval in submap: [0..5]) contains time 4, added to replan.
[DBG]  Agent 135 found intervals in the sub-map:
[DBG]   [4..4] [8..14]
[DBG]  Agent 135 (interval in submap: [4..4]) contains time 4, added to replan.
[DBG]  Agent 7 | Start (global): 726 -> (local): (4, 3) at time 4 | Goal (global): 727 -> (local): (4, 4) at time 5
[DBG]  Agent 28 | Start (global): 661 -> (local): (2, 2) at time 4 | Goal (global): 727 -> (local): (4, 4) at time 38
[DBG]  Agent 46 | Start (global): 724 -> (local): (4, 1) at time 4 | Goal (global): 727 -> (local): (4, 4) at time 7
[DBG]  Agent 108 | Start (global): 692 -> (local): (3, 1) at time 4 | Goal (global): 724 -> (local): (4, 1) at time 5
[DBG]  Agent 135 | Start (global): 727 -> (local): (4, 4) at time 4 | Goal (global): 727 -> (local): (4, 4) at time 4
[DBG]  [REPAIR] SAT destroy operator called.
[DBG]  [REPAIR] SAT operator â€“ launching subproblem FOR OPTIMIZATION.
[DBG]  Creating local paths (sx, sy) in the submap for T_sync = 4
[DBG]    Agent 7 (global paths from T=4 to 5) has local path: (4,3) (4,4) 
[DBG]    Agent 28 (global paths from T=4 to 38) has local path: (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,1) (2,1) (2,1) (2,1) (2,1) (3,1) (4,1) (4,2) (4,3) (4,4) 
[DBG]    Agent 46 (global paths from T=4 to 7) has local path: (4,1) (4,2) (4,3) (4,4) 
[DBG]    Agent 108 (global paths from T=4 to 5) has local path: (3,1) (4,1) 
[DBG]    Agent 135 (global paths from T=4 to 4) has local path: (4,4) 
[DBG]  Checking input data for SAT solver:
[DBG]    - Number of agents to replan: 5
[DBG]  Agent 7 has the original local path length: 2 => Start (4,3), Goal (4,4)
[DBG]  Agent 28 has the original local path length: 35 => Start (2,2), Goal (4,4)
[DBG]  Agent 46 has the original local path length: 4 => Start (4,1), Goal (4,4)
[DBG]  Agent 108 has the original local path length: 2 => Start (3,1), Goal (4,1)
[DBG]  Agent 135 has the original local path length: 1 => Start (4,4), Goal (4,4)
[DBG]  Start position: (4, 3), (2, 2), (4, 1), (3, 1), (4, 4), 
[DBG]  Goal position: (4, 4), (4, 4), (4, 4), (4, 1), (4, 4), 
[DBG]  SAT instance and solver created.
Currently solving
Instance name: scen
Map name: map
Encoding used: disappear_at_goal
SAT solver used: Kissat
Optimizing function: sum of costs
Number of agents: 5
Mks LB: 7
SoC LB: 16
Delta: 0
Remaining time: 300000 [ms]

Vertex conflict! Agents 0, 2, timestep 4, location 0
Swapping conflict! Agents 0, 2, timestep 4, edge (0,0)
Vertex conflict! Agents 0, 2, timestep 5, location 0
Swapping conflict! Agents 0, 2, timestep 5, edge (0,0)
Vertex conflict! Agents 0, 2, timestep 6, location 0
Vertex conflict! Agents 0, 3, timestep 2, location 0
Swapping conflict! Agents 0, 3, timestep 2, edge (0,0)
Vertex conflict! Agents 0, 3, timestep 3, location 0
Swapping conflict! Agents 0, 3, timestep 3, edge (0,0)
Vertex conflict! Agents 0, 3, timestep 4, location 0
Swapping conflict! Agents 0, 3, timestep 4, edge (0,0)
Vertex conflict! Agents 0, 3, timestep 5, location 0
Swapping conflict! Agents 0, 3, timestep 5, edge (0,0)
Vertex conflict! Agents 0, 3, timestep 6, location 0
Vertex conflict! Agents 0, 4, timestep 2, location 0
Swapping conflict! Agents 0, 4, timestep 2, edge (0,0)
Vertex conflict! Agents 0, 4, timestep 3, location 0
Swapping conflict! Agents 0, 4, timestep 3, edge (0,0)
Vertex conflict! Agents 0, 4, timestep 4, location 0
Swapping conflict! Agents 0, 4, timestep 4, edge (0,0)
Vertex conflict! Agents 0, 4, timestep 5, location 0
Swapping conflict! Agents 0, 4, timestep 5, edge (0,0)
Vertex conflict! Agents 0, 4, timestep 6, location 0
Vertex conflict! Agents 2, 3, timestep 4, location 0
Swapping conflict! Agents 2, 3, timestep 4, edge (0,0)
Vertex conflict! Agents 2, 3, timestep 5, location 0
Swapping conflict! Agents 2, 3, timestep 5, edge (0,0)
Vertex conflict! Agents 2, 3, timestep 6, location 0
Vertex conflict! Agents 2, 4, timestep 4, location 0
Swapping conflict! Agents 2, 4, timestep 4, edge (0,0)
Vertex conflict! Agents 2, 4, timestep 5, location 0
Swapping conflict! Agents 2, 4, timestep 5, edge (0,0)
Vertex conflict! Agents 2, 4, timestep 6, location 0
Vertex conflict! Agents 3, 4, timestep 2, location 0
Swapping conflict! Agents 3, 4, timestep 2, edge (0,0)
Vertex conflict! Agents 3, 4, timestep 3, location 0
Swapping conflict! Agents 3, 4, timestep 3, edge (0,0)
Vertex conflict! Agents 3, 4, timestep 4, location 0
Swapping conflict! Agents 3, 4, timestep 4, edge (0,0)
Vertex conflict! Agents 3, 4, timestep 5, location 0
Swapping conflict! Agents 3, 4, timestep 5, edge (0,0)
Vertex conflict! Agents 3, 4, timestep 6, location 0
Found plan [agents = 5] [timesteps = 7]
Agent #0 : 14 15 0 0 0 0 0 
Agent #1 : 9 8 11 12 13 14 15 
Agent #2 : 12 13 14 15 0 0 0 
Agent #3 : 11 12 0 0 0 0 0 
Agent #4 : 15 0 0 0 0 0 0 

[STAT] Solver returned: 0
[DBG]  Agent (index) 7 | New local path (submap idx):
[DBG]  14 15 
[DBG]  Agent (index) 28 | New local path (submap idx):
[DBG]  9 8 11 12 13 14 15 
[DBG]  Agent (index) 46 | New local path (submap idx):
[DBG]  12 13 14 15 
[DBG]  Agent (index) 108 | New local path (submap idx):
[DBG]  11 12 
[DBG]  Agent (index) 135 | New local path (submap idx):
[DBG]  15 
[DBG]  Update the agent path 7 | Original local length: 2 | New local length: 2
[DBG]  agent 7 t=0 => decoded (sx,sy)=(4,3) => global_id=726
[DBG]  agent 7 t=1 => decoded (sx,sy)=(4,4) => global_id=727
[DBG]  Complete path of agent 7:
[DBG]    Original: 756 724 725 726 726 727 728 729 761 793 792 824 856 888 889 921 
[DBG]    New:     756 724 725 726 726 727 728 729 761 793 792 824 856 888 889 921 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 756 724 725 726 
[DBG]    Local path (in submap): 726 727 
[DBG]    Suffix (out of submap): 728 729 761 793 792 824 856 888 889 921 
[DBG]  Original agent path length 7 je: 16
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 0: 756, 724, 725, 726, 726, 727, 728, 729, 761, 793, 792, 824, 856, 888, 889, 921, 
[DBG]  Path for agent 7 updated, resulting length: 16
[DBG]  Update the agent path 28 | Original local length: 35 | New local length: 7
[DBG]  agent 28 t=0 => decoded (sx,sy)=(2,2) => global_id=661
[DBG]  agent 28 t=1 => decoded (sx,sy)=(2,1) => global_id=660
[DBG]  agent 28 t=2 => decoded (sx,sy)=(3,1) => global_id=692
[DBG]  agent 28 t=3 => decoded (sx,sy)=(4,1) => global_id=724
[DBG]  agent 28 t=4 => decoded (sx,sy)=(4,2) => global_id=725
[DBG]  agent 28 t=5 => decoded (sx,sy)=(4,3) => global_id=726
[DBG]  agent 28 t=6 => decoded (sx,sy)=(4,4) => global_id=727
[DBG]  Complete path of agent 28:
[DBG]    Original: 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 660 660 660 660 660 692 724 725 726 727 728 727 
[DBG]    New:     661 661 661 661 661 660 692 724 725 726 727 728 727 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 661 661 661 661 
[DBG]    Local path (in submap): 661 660 692 724 725 726 727 728 727 
[DBG]    Suffix (out of submap): 
[DBG]  Original agent path length 28 je: 41
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 1: 661, 661, 661, 661, 661, 660, 692, 724, 725, 726, 727, 728, 727, 
[DBG]  Path for agent 28 updated, resulting length: 13
[DBG]  Update the agent path 46 | Original local length: 4 | New local length: 4
[DBG]  agent 46 t=0 => decoded (sx,sy)=(4,1) => global_id=724
[DBG]  agent 46 t=1 => decoded (sx,sy)=(4,2) => global_id=725
[DBG]  agent 46 t=2 => decoded (sx,sy)=(4,3) => global_id=726
[DBG]  agent 46 t=3 => decoded (sx,sy)=(4,4) => global_id=727
[DBG]  Complete path of agent 46:
[DBG]    Original: 786 787 788 756 724 725 726 727 728 696 664 632 600 601 569 570 538 539 540 541 509 477 445 413 381 349 317 285 284 252 
[DBG]    New:     786 787 788 756 724 725 726 727 728 696 664 632 600 601 569 570 538 539 540 541 509 477 445 413 381 349 317 285 284 252 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 786 787 788 756 
[DBG]    Local path (in submap): 724 725 726 727 
[DBG]    Suffix (out of submap): 728 696 664 632 600 601 569 570 538 539 540 541 509 477 445 413 381 349 317 285 284 252 
[DBG]  Original agent path length 46 je: 30
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 2: 786, 787, 788, 756, 724, 725, 726, 727, 728, 696, 664, 632, 600, 601, 569, 570, 538, 539, 540, 541, 509, 477, 445, 413, 381, 349, 317, 285, 284, 252, 
[DBG]  Path for agent 46 updated, resulting length: 30
[DBG]  Update the agent path 108 | Original local length: 2 | New local length: 2
[DBG]  agent 108 t=0 => decoded (sx,sy)=(3,1) => global_id=692
[DBG]  agent 108 t=1 => decoded (sx,sy)=(4,1) => global_id=724
[DBG]  Complete path of agent 108:
[DBG]    Original: 628 660 692 692 692 724 756 788 820 821 822 854 855 856 888 889 890 891 892 892 924 956 957 989 1021 
[DBG]    New:     628 660 692 692 692 724 756 788 820 821 822 854 855 856 888 889 890 891 892 892 924 956 957 989 1021 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 628 660 692 692 
[DBG]    Local path (in submap): 692 724 
[DBG]    Suffix (out of submap): 756 788 820 821 822 854 855 856 888 889 890 891 892 892 924 956 957 989 1021 
[DBG]  Original agent path length 108 je: 25
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 3: 628, 660, 692, 692, 692, 724, 756, 788, 820, 821, 822, 854, 855, 856, 888, 889, 890, 891, 892, 892, 924, 956, 957, 989, 1021, 
[DBG]  Path for agent 108 updated, resulting length: 25
[DBG]  Update the agent path 135 | Original local length: 1 | New local length: 1
[DBG]  agent 135 t=0 => decoded (sx,sy)=(4,4) => global_id=727
[DBG]  Complete path of agent 135:
[DBG]    Original: 696 696 696 728 727 759 759 759 727 726 725 724 692 691 659 658 657 625 593 592 591 590 589 588 556 555 555 523 522 521 520 519 487 486 485 484 483 482 450 449 448 416 384 
[DBG]    New:     696 696 696 728 727 759 759 759 727 726 725 724 692 691 659 658 657 625 593 592 591 590 589 588 556 555 555 523 522 521 520 519 487 486 485 484 483 482 450 449 448 416 384 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 696 696 696 728 
[DBG]    Local path (in submap): 727 
[DBG]    Suffix (out of submap): 759 759 759 727 726 725 724 692 691 659 658 657 625 593 592 591 590 589 588 556 555 555 523 522 521 520 519 487 486 485 484 483 482 450 449 448 416 384 
[DBG]  Original agent path length 135 je: 43
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 4: 696, 696, 696, 728, 727, 759, 759, 759, 727, 726, 725, 724, 692, 691, 659, 658, 657, 625, 593, 592, 591, 590, 589, 588, 556, 555, 555, 523, 522, 521, 520, 519, 487, 486, 485, 484, 483, 482, 450, 449, 448, 416, 384, 
[DBG]  Path for agent 135 updated, resulting length: 43
[DBG]  Paths successfully updated.
[DBG]  (LNS.cpp) New path for agent 7: 
[DBG]  756, 724, 725, 726, 726, 727, 728, 729, 761, 793, 792, 824, 856, 888, 889, 921, 
[DBG]  (LNS.cpp) New path for agent 28: 
[DBG]  661, 661, 661, 661, 661, 660, 692, 724, 725, 726, 727, 728, 727, 
[DBG]  (LNS.cpp) New path for agent 46: 
[DBG]  786, 787, 788, 756, 724, 725, 726, 727, 728, 696, 664, 632, 600, 601, 569, 570, 538, 539, 540, 541, 509, 477, 445, 413, 381, 349, 317, 285, 284, 252, 
[DBG]  (LNS.cpp) New path for agent 108: 
[DBG]  628, 660, 692, 692, 692, 724, 756, 788, 820, 821, 822, 854, 855, 856, 888, 889, 890, 891, 892, 892, 924, 956, 957, 989, 1021, 
[DBG]  (LNS.cpp) New path for agent 135: 
[DBG]  696, 696, 696, 728, 727, 759, 759, 759, 727, 726, 725, 724, 692, 691, 659, 658, 657, 625, 593, 592, 591, 590, 589, 588, 556, 555, 555, 523, 522, 521, 520, 519, 487, 486, 485, 484, 483, 482, 450, 449, 448, 416, 384, 
[DBG]  Delta value: 0.186667
[DBG]  Rewarding metric index = 0
[DBG]  component_weights = {0.890406, 0.0518877, 0.0285382, 0.0291684}
[DBG]  opSuccess value: 1
[STAT] neighbor.sum_of_costs before recomputation: 122
[STAT] neighbor.old_sum_of_costs before recomputation: 150
[STAT] sum_of_costs before recomputation: 4446
[DBG]  Validate solution immediately after SAT success.
[WARNING] Problem after SAT: Target conflict: agent 42 (len 40) traverses target of agent 28 (len 12) at location 727 at timestep 39
[DBG]  [DEBUG] Attempting immediate repair via init_lns because problem occurred after SAT (should be applied only for conflicts...).
[DBG]  [DEBUG] Passing 150 agents to init_lns (skip=true).
[DBG]  [DEBUG] path_table contents for selected agents (neighbor.agents):
[DBG]    Agent 7 => controlling path length=16
[DBG]    Agent 28 => controlling path length=13
[DBG]    Agent 46 => controlling path length=30
[DBG]    Agent 108 => controlling path length=25
[DBG]    Agent 135 => controlling path length=43
[DBG]  hodnota skip_initial_solution=1
[DBG]  We skip initialSolution => call buildCollisionData()
[DBG]  buildCollisionData() called â€“ skip_initial_solution case.
[DBG]  Agents.size()=150, collision_graph.size()=150
[DBG]  agent 28 => updateCollidingPairs => foundCollision
[DBG]  agent 42 => updateCollidingPairs => foundCollision
[DBG]  agent 135 => updateCollidingPairs => foundCollision
[DBG]  Conflicting agent pairs:
[DBG]  agent 28 is in conflict with agent 42
[DBG]  agent 28 is in conflict with agent 135
[DBG]  buildCollisionData() => sum_of_costs=4418, num_of_colliding_pairs=2
[DBG]  buildCollisionData done => sum_of_costs=4418, num_of_colliding_pairs=2
[DBG]  sum_of_cost hodnota: 4418
[DBG]  After skip/init build => iteration_stats.back(): sum_of_costs=4418, collisions=2
[DEBUG] Using default neighbor generation strategy for conflicts: 2
[DEBUG] Using default neighbor generation strategy for conflicts: 0
	InitLNS(PP): runtime = 0.00116204, iterations = 3, colliding pairs = 0, initial colliding pairs = 2, solution cost = 4432, initial solution cost = 4418, failed iterations = 0
[DBG]  [DEBUG] init_lns->sum_of_costs after init_lns->run: 4432
[DBG]  [DEBUG] sum_of_costs after assignment from init_lns->run: 4432
[DBG]  Recomputing sum_of_cost by dividing neighbor.sum_of_costs and neighbor.old_sum_of_costs
[STAT] sum_of_costs after recomputation: 4432
[STAT] Iteration 64
[DBG]  Using SAT operator (destroy+repair SAT).
[DBG]  ====================
[DBG]  SAT destroy operator called.
[DBG]  SAT heuristic: 2
[DBG]  key_agent_id: 28
[DBG]  key_agent_id global path length: 41
[DBG]  Submap content (global positions):
[DBG]  595 596 597 598 599 
[DBG]  627 628 629 630 631 
[DBG]  659 660 661 662 663 
[DBG]  691 692 693 694 695 
[DBG]  723 724 725 726 727 
[DBG]  Map content with agents and obstacles:
[DBG]  X . . X . 
[DBG]  . . . X . 
[DBG]  . A A X X 
[DBG]  . . X X X 
[DBG]  X . . . . 
[DBG]  content of the map structure that we pass to the SAT solver:
[DBG]  -1  1  1  -1  1  
[DBG]  1  1  1  -1  1  
[DBG]  1  1  1  -1  -1  
[DBG]  1  1  -1  -1  -1  
[DBG]  -1  1  1  1  1  
[DBG]  Identifying agents in a submap for rescheduling (when key_agent is there at the time 15):
[DBG]  Agent 4 found intervals in the sub-map:
[DBG]  
[DBG]  Agent 4 is not in sub-map at time 15 (intervals: 
[DBG]  )
[DBG]  Agent 28 found intervals in the sub-map:
[DBG]   [0..35] [38..40]
[DBG]  Agent 28 (interval in submap: [0..35]) contains time 15, added to replan.
[DBG]  Agent 74 found intervals in the sub-map:
[DBG]  
[DBG]  Agent 74 is not in sub-map at time 15 (intervals: 
[DBG]  )
[DBG]  Agent 86 found intervals in the sub-map:
[DBG]   [10..14]
[DBG]  Agent 86 is not in sub-map at time 15 (intervals: 
[DBG]  [10..14] )
[DBG]  Agent 114 found intervals in the sub-map:
[DBG]  
[DBG]  Agent 114 is not in sub-map at time 15 (intervals: 
[DBG]  )
[DBG]  Agent 131 found intervals in the sub-map:
[DBG]   [12..17]
[DBG]  Agent 131 (interval in submap: [12..17]) contains time 15, added to replan.
[DBG]  Agent 28 | Start (global): 661 -> (local): (2, 2) at time 15 | Goal (global): 724 -> (local): (4, 1) at time 35
[DBG]  Agent 131 | Start (global): 660 -> (local): (2, 1) at time 15 | Goal (global): 724 -> (local): (4, 1) at time 17
[DBG]  [REPAIR] SAT destroy operator called.
[DBG]  [REPAIR] SAT operator â€“ launching subproblem FOR OPTIMIZATION.
[DBG]  Creating local paths (sx, sy) in the submap for T_sync = 15
[DBG]    Agent 28 (global paths from T=15 to 35) has local path: (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,1) (2,1) (2,1) (2,1) (2,1) (3,1) (4,1) 
[DBG]    Agent 131 (global paths from T=15 to 17) has local path: (2,1) (3,1) (4,1) 
[DBG]  Checking input data for SAT solver:
[DBG]    - Number of agents to replan: 2
[DBG]  Agent 28 has the original local path length: 21 => Start (2,2), Goal (4,1)
[DBG]  Agent 131 has the original local path length: 3 => Start (2,1), Goal (4,1)
[DBG]  Start position: (2, 2), (2, 1), 
[DBG]  Goal position: (4, 1), (4, 1), 
[DBG]  SAT instance and solver created.
Currently solving
Instance name: scen
Map name: map
Encoding used: disappear_at_goal
SAT solver used: Kissat
Optimizing function: sum of costs
Number of agents: 2
Mks LB: 4
SoC LB: 7
Delta: 0
Remaining time: 300000 [ms]

Found plan [agents = 2] [timesteps = 4]
Agent #0 : 9 8 11 12 
Agent #1 : 8 11 12 0 

[STAT] Solver returned: 0
[DBG]  Agent (index) 28 | New local path (submap idx):
[DBG]  9 8 11 12 
[DBG]  Agent (index) 131 | New local path (submap idx):
[DBG]  8 11 12 
[DBG]  Update the agent path 28 | Original local length: 21 | New local length: 4
[DBG]  agent 28 t=0 => decoded (sx,sy)=(2,2) => global_id=661
[DBG]  agent 28 t=1 => decoded (sx,sy)=(2,1) => global_id=660
[DBG]  agent 28 t=2 => decoded (sx,sy)=(3,1) => global_id=692
[DBG]  agent 28 t=3 => decoded (sx,sy)=(4,1) => global_id=724
[DBG]  Complete path of agent 28:
[DBG]    Original: 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 660 660 660 660 660 692 724 756 757 725 726 727 
[DBG]    New:     661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 660 692 724 756 757 725 726 727 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 
[DBG]    Local path (in submap): 661 660 692 724 756 757 725 726 727 
[DBG]    Suffix (out of submap): 
[DBG]  Original agent path length 28 je: 41
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 0: 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 660, 692, 724, 756, 757, 725, 726, 727, 
[DBG]  Path for agent 28 updated, resulting length: 24
[DBG]  Update the agent path 131 | Original local length: 3 | New local length: 3
[DBG]  agent 131 t=0 => decoded (sx,sy)=(2,1) => global_id=660
[DBG]  agent 131 t=1 => decoded (sx,sy)=(3,1) => global_id=692
[DBG]  agent 131 t=2 => decoded (sx,sy)=(4,1) => global_id=724
[DBG]  Complete path of agent 131:
[DBG]    Original: 341 340 339 371 403 404 405 437 469 501 533 565 597 596 628 660 692 724 756 755 787 786 786 818 850 849 848 847 879 878 877 876 875 874 873 841 809 777 745 713 712 
[DBG]    New:     341 340 339 371 403 404 405 437 469 501 533 565 597 596 628 660 692 724 756 755 787 786 786 818 850 849 848 847 879 878 877 876 875 874 873 841 809 777 745 713 712 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 341 340 339 371 403 404 405 437 469 501 533 565 597 596 628 
[DBG]    Local path (in submap): 660 692 724 
[DBG]    Suffix (out of submap): 756 755 787 786 786 818 850 849 848 847 879 878 877 876 875 874 873 841 809 777 745 713 712 
[DBG]  Original agent path length 131 je: 41
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 1: 341, 340, 339, 371, 403, 404, 405, 437, 469, 501, 533, 565, 597, 596, 628, 660, 692, 724, 756, 755, 787, 786, 786, 818, 850, 849, 848, 847, 879, 878, 877, 876, 875, 874, 873, 841, 809, 777, 745, 713, 712, 
[DBG]  Path for agent 131 updated, resulting length: 41
[DBG]  Paths successfully updated.
[DBG]  (LNS.cpp) New path for agent 28: 
[DBG]  661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 660, 692, 724, 756, 757, 725, 726, 727, 
[DBG]  (LNS.cpp) New path for agent 131: 
[DBG]  341, 340, 339, 371, 403, 404, 405, 437, 469, 501, 533, 565, 597, 596, 628, 660, 692, 724, 756, 755, 787, 786, 786, 818, 850, 849, 848, 847, 879, 878, 877, 876, 875, 874, 873, 841, 809, 777, 745, 713, 712, 
[DBG]  Delta value: 0.2125
[DBG]  Rewarding metric index = 0
[DBG]  component_weights = {0.912045, 0.0416423, 0.0229032, 0.023409}
[DBG]  opSuccess value: 1
[STAT] neighbor.sum_of_costs before recomputation: 63
[STAT] neighbor.old_sum_of_costs before recomputation: 80
[STAT] sum_of_costs before recomputation: 4432
[DBG]  Validate solution immediately after SAT success.
[WARNING] Problem after SAT: Target conflict: agent 42 (len 40) traverses target of agent 28 (len 23) at location 727 at timestep 39
[DBG]  [DEBUG] Attempting immediate repair via init_lns because problem occurred after SAT (should be applied only for conflicts...).
[DBG]  [DEBUG] Passing 150 agents to init_lns (skip=true).
[DBG]  [DEBUG] path_table contents for selected agents (neighbor.agents):
[DBG]    Agent 28 => controlling path length=24
[DBG]    Agent 131 => controlling path length=41
[DBG]  hodnota skip_initial_solution=1
[DBG]  We skip initialSolution => call buildCollisionData()
[DBG]  buildCollisionData() called â€“ skip_initial_solution case.
[DBG]  Agents.size()=150, collision_graph.size()=150
[DBG]  agent 28 => updateCollidingPairs => foundCollision
[DBG]  agent 42 => updateCollidingPairs => foundCollision
[DBG]  Conflicting agent pairs:
[DBG]  agent 28 is in conflict with agent 42
[DBG]  buildCollisionData() => sum_of_costs=4415, num_of_colliding_pairs=1
[DBG]  buildCollisionData done => sum_of_costs=4415, num_of_colliding_pairs=1
[DBG]  sum_of_cost hodnota: 4415
[DBG]  After skip/init build => iteration_stats.back(): sum_of_costs=4415, collisions=1
[DEBUG] Using default neighbor generation strategy for conflicts: 1
[DEBUG] Using default neighbor generation strategy for conflicts: 0
	InitLNS(PP): runtime = 0.00377275, iterations = 3, colliding pairs = 0, initial colliding pairs = 1, solution cost = 4424, initial solution cost = 4415, failed iterations = 0
[DBG]  [DEBUG] init_lns->sum_of_costs after init_lns->run: 4424
[DBG]  [DEBUG] sum_of_costs after assignment from init_lns->run: 4424
[DBG]  Recomputing sum_of_cost by dividing neighbor.sum_of_costs and neighbor.old_sum_of_costs
[STAT] sum_of_costs after recomputation: 4424
[STAT] Iteration 65
[DBG]  Using SAT operator (destroy+repair SAT).
[DBG]  ====================
[DBG]  SAT destroy operator called.
[DBG]  SAT heuristic: 2
[DBG]  key_agent_id: 28
[DBG]  key_agent_id global path length: 41
[DBG]  Submap content (global positions):
[DBG]  595 596 597 598 599 
[DBG]  627 628 629 630 631 
[DBG]  659 660 661 662 663 
[DBG]  691 692 693 694 695 
[DBG]  723 724 725 726 727 
[DBG]  Map content with agents and obstacles:
[DBG]  X . . X . 
[DBG]  . A . X . 
[DBG]  A A A X X 
[DBG]  . . X X X 
[DBG]  X . . . . 
[DBG]  content of the map structure that we pass to the SAT solver:
[DBG]  -1  1  1  -1  1  
[DBG]  1  1  1  -1  1  
[DBG]  1  1  1  -1  -1  
[DBG]  1  1  -1  -1  -1  
[DBG]  -1  1  1  1  1  
[DBG]  Identifying agents in a submap for rescheduling (when key_agent is there at the time 28):
[DBG]  Agent 26 found intervals in the sub-map:
[DBG]   [26..34]
[DBG]  Agent 26 (interval in submap: [26..34]) contains time 28, added to replan.
[DBG]  Agent 28 found intervals in the sub-map:
[DBG]   [0..40]
[DBG]  Agent 28 (interval in submap: [0..40]) contains time 28, added to replan.
[DBG]  Agent 53 found intervals in the sub-map:
[DBG]   [25..30]
[DBG]  Agent 53 (interval in submap: [25..30]) contains time 28, added to replan.
[DBG]  Agent 61 found intervals in the sub-map:
[DBG]  
[DBG]  Agent 61 is not in sub-map at time 28 (intervals: 
[DBG]  )
[DBG]  Agent 71 found intervals in the sub-map:
[DBG]   [22..25]
[DBG]  Agent 71 is not in sub-map at time 28 (intervals: 
[DBG]  [22..25] )
[DBG]  Agent 100 found intervals in the sub-map:
[DBG]   [24..28]
[DBG]  Agent 100 (interval in submap: [24..28]) contains time 28, added to replan.
[DBG]  Agent 148 found intervals in the sub-map:
[DBG]   [39..40]
[DBG]  Agent 148 is not in sub-map at time 28 (intervals: 
[DBG]  [39..40] )
[DBG]  Agent 26 | Start (global): 628 -> (local): (1, 1) at time 28 | Goal (global): 724 -> (local): (4, 1) at time 34
[DBG]  Agent 28 | Start (global): 661 -> (local): (2, 2) at time 28 | Goal (global): 727 -> (local): (4, 4) at time 40
[DBG]  Agent 53 | Start (global): 660 -> (local): (2, 1) at time 28 | Goal (global): 724 -> (local): (4, 1) at time 30
[DBG]  Agent 100 | Start (global): 659 -> (local): (2, 0) at time 28 | Goal (global): 659 -> (local): (2, 0) at time 28
[DBG]  [REPAIR] SAT destroy operator called.
[DBG]  [REPAIR] SAT operator â€“ launching subproblem FOR OPTIMIZATION.
[DBG]  Creating local paths (sx, sy) in the submap for T_sync = 28
[DBG]    Agent 26 (global paths from T=28 to 34) has local path: (1,1) (1,1) (1,0) (2,0) (3,0) (3,1) (4,1) 
[DBG]    Agent 28 (global paths from T=28 to 40) has local path: (2,2) (2,1) (2,1) (2,1) (2,1) (2,1) (2,1) (2,1) (3,1) (4,1) (4,2) (4,3) (4,4) 
[DBG]    Agent 53 (global paths from T=28 to 30) has local path: (2,1) (3,1) (4,1) 
[DBG]    Agent 100 (global paths from T=28 to 28) has local path: (2,0) 
[DBG]  Checking input data for SAT solver:
[DBG]    - Number of agents to replan: 4
[DBG]  Agent 26 has the original local path length: 7 => Start (1,1), Goal (4,1)
[DBG]  Agent 28 has the original local path length: 13 => Start (2,2), Goal (4,4)
[DBG]  Agent 53 has the original local path length: 3 => Start (2,1), Goal (4,1)
[DBG]  Agent 100 has the original local path length: 1 => Start (2,0), Goal (2,0)
[DBG]  Start position: (1, 1), (2, 2), (2, 1), (2, 0), 
[DBG]  Goal position: (4, 1), (4, 4), (4, 1), (2, 0), 
[DBG]  SAT instance and solver created.
Currently solving
Instance name: scen
Map name: map
Encoding used: disappear_at_goal
SAT solver used: Kissat
Optimizing function: sum of costs
Number of agents: 4
Mks LB: 7
SoC LB: 15
Delta: 0
Remaining time: 300000 [ms]

[STAT] Solver returned: -1
[DBG]  SAT solver failed.
[STAT] SAT solver failed to find a valid solution.
[DBG]  ====================
[DBG]  SAT destroy operator called.
[DBG]  SAT heuristic: 2
[DBG]  key_agent_id: 28
[DBG]  key_agent_id global path length: 41
[DBG]  Submap content (global positions):
[DBG]  595 596 597 598 599 
[DBG]  627 628 629 630 631 
[DBG]  659 660 661 662 663 
[DBG]  691 692 693 694 695 
[DBG]  723 724 725 726 727 
[DBG]  Map content with agents and obstacles:
[DBG]  X . A X . 
[DBG]  . . . X . 
[DBG]  . . A X X 
[DBG]  . . X X X 
[DBG]  X . . . A 
[DBG]  content of the map structure that we pass to the SAT solver:
[DBG]  -1  1  1  -1  1  
[DBG]  1  1  1  -1  1  
[DBG]  1  1  1  -1  -1  
[DBG]  1  1  -1  -1  -1  
[DBG]  -1  1  1  1  1  
[DBG]  Identifying agents in a submap for rescheduling (when key_agent is there at the time 7):
[DBG]  Agent 28 found intervals in the sub-map:
[DBG]   [0..40]
[DBG]  Agent 28 (interval in submap: [0..40]) contains time 7, added to replan.
[DBG]  Agent 46 found intervals in the sub-map:
[DBG]   [4..7]
[DBG]  Agent 46 (interval in submap: [4..7]) contains time 7, added to replan.
[DBG]  Agent 63 found intervals in the sub-map:
[DBG]  
[DBG]  Agent 63 is not in sub-map at time 7 (intervals: 
[DBG]  )
[DBG]  Agent 89 found intervals in the sub-map:
[DBG]   [7..14]
[DBG]  Agent 89 (interval in submap: [7..14]) contains time 7, added to replan.
[DBG]  Agent 113 found intervals in the sub-map:
[DBG]  
[DBG]  Agent 113 is not in sub-map at time 7 (intervals: 
[DBG]  )
[DBG]  Agent 28 | Start (global): 661 -> (local): (2, 2) at time 7 | Goal (global): 727 -> (local): (4, 4) at time 40
[DBG]  Agent 46 | Start (global): 727 -> (local): (4, 4) at time 7 | Goal (global): 727 -> (local): (4, 4) at time 7
[DBG]  Agent 89 | Start (global): 597 -> (local): (0, 2) at time 7 | Goal (global): 724 -> (local): (4, 1) at time 14
[DBG]  [REPAIR] SAT destroy operator called.
[DBG]  [REPAIR] SAT operator â€“ launching subproblem FOR OPTIMIZATION.
[DBG]  Creating local paths (sx, sy) in the submap for T_sync = 7
[DBG]    Agent 28 (global paths from T=7 to 40) has local path: (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,1) (2,1) (2,1) (2,1) (2,1) (2,1) (2,1) (3,1) (4,1) (4,2) (4,3) (4,4) 
[DBG]    Agent 46 (global paths from T=7 to 7) has local path: (4,4) 
[DBG]    Agent 89 (global paths from T=7 to 14) has local path: (0,2) (1,2) (1,1) (2,1) (2,1) (2,1) (3,1) (4,1) 
[DBG]  Checking input data for SAT solver:
[DBG]    - Number of agents to replan: 3
[DBG]  Agent 28 has the original local path length: 34 => Start (2,2), Goal (4,4)
[DBG]  Agent 46 has the original local path length: 1 => Start (4,4), Goal (4,4)
[DBG]  Agent 89 has the original local path length: 8 => Start (0,2), Goal (4,1)
[DBG]  Start position: (2, 2), (4, 4), (0, 2), 
[DBG]  Goal position: (4, 4), (4, 4), (4, 1), 
[DBG]  SAT instance and solver created.
Currently solving
Instance name: scen
Map name: map
Encoding used: disappear_at_goal
SAT solver used: Kissat
Optimizing function: sum of costs
Number of agents: 3
Mks LB: 7
SoC LB: 14
Delta: 0
Remaining time: 300000 [ms]

Vertex conflict! Agents 1, 2, timestep 6, location 0
Found plan [agents = 3] [timesteps = 7]
Agent #0 : 9 8 11 12 13 14 15 
Agent #1 : 15 0 0 0 0 0 0 
Agent #2 : 1 5 9 8 11 12 0 

[STAT] Solver returned: 0
[DBG]  Agent (index) 28 | New local path (submap idx):
[DBG]  9 8 11 12 13 14 15 
[DBG]  Agent (index) 46 | New local path (submap idx):
[DBG]  15 
[DBG]  Agent (index) 89 | New local path (submap idx):
[DBG]  1 5 9 8 11 12 
[DBG]  Update the agent path 28 | Original local length: 34 | New local length: 7
[DBG]  agent 28 t=0 => decoded (sx,sy)=(2,2) => global_id=661
[DBG]  agent 28 t=1 => decoded (sx,sy)=(2,1) => global_id=660
[DBG]  agent 28 t=2 => decoded (sx,sy)=(3,1) => global_id=692
[DBG]  agent 28 t=3 => decoded (sx,sy)=(4,1) => global_id=724
[DBG]  agent 28 t=4 => decoded (sx,sy)=(4,2) => global_id=725
[DBG]  agent 28 t=5 => decoded (sx,sy)=(4,3) => global_id=726
[DBG]  agent 28 t=6 => decoded (sx,sy)=(4,4) => global_id=727
[DBG]  Complete path of agent 28:
[DBG]    Original: 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 660 660 660 660 660 660 660 692 724 725 726 727 
[DBG]    New:     661 661 661 661 661 661 661 661 660 692 724 725 726 727 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 661 661 661 661 661 661 661 
[DBG]    Local path (in submap): 661 660 692 724 725 726 727 
[DBG]    Suffix (out of submap): 
[DBG]  Original agent path length 28 je: 41
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 0: 661, 661, 661, 661, 661, 661, 661, 661, 660, 692, 724, 725, 726, 727, 
[DBG]  Path for agent 28 updated, resulting length: 14
[DBG]  Update the agent path 46 | Original local length: 1 | New local length: 1
[DBG]  agent 46 t=0 => decoded (sx,sy)=(4,4) => global_id=727
[DBG]  Complete path of agent 46:
[DBG]    Original: 786 787 788 756 724 725 726 727 728 696 664 632 600 601 569 570 538 539 540 541 509 477 445 413 381 349 317 285 284 252 
[DBG]    New:     786 787 788 756 724 725 726 727 728 696 664 632 600 601 569 570 538 539 540 541 509 477 445 413 381 349 317 285 284 252 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 786 787 788 756 724 725 726 
[DBG]    Local path (in submap): 727 
[DBG]    Suffix (out of submap): 728 696 664 632 600 601 569 570 538 539 540 541 509 477 445 413 381 349 317 285 284 252 
[DBG]  Original agent path length 46 je: 30
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 1: 786, 787, 788, 756, 724, 725, 726, 727, 728, 696, 664, 632, 600, 601, 569, 570, 538, 539, 540, 541, 509, 477, 445, 413, 381, 349, 317, 285, 284, 252, 
[DBG]  Path for agent 46 updated, resulting length: 30
[DBG]  Update the agent path 89 | Original local length: 8 | New local length: 6
[DBG]  agent 89 t=0 => decoded (sx,sy)=(0,2) => global_id=597
[DBG]  agent 89 t=1 => decoded (sx,sy)=(1,2) => global_id=629
[DBG]  agent 89 t=2 => decoded (sx,sy)=(2,2) => global_id=661
[DBG]  agent 89 t=3 => decoded (sx,sy)=(2,1) => global_id=660
[DBG]  agent 89 t=4 => decoded (sx,sy)=(3,1) => global_id=692
[DBG]  agent 89 t=5 => decoded (sx,sy)=(4,1) => global_id=724
[DBG]  Complete path of agent 89:
[DBG]    Original: 437 469 501 502 534 566 565 597 629 628 660 660 660 692 724 756 788 820 821 822 854 854 886 918 950 982 983 1015 
[DBG]    New:     437 469 501 502 534 566 565 597 629 661 660 692 724 756 788 820 821 822 854 854 886 918 950 982 983 1015 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 437 469 501 502 534 566 565 
[DBG]    Local path (in submap): 597 629 661 660 692 724 756 788 
[DBG]    Suffix (out of submap): 820 821 822 854 854 886 918 950 982 983 1015 
[DBG]  Original agent path length 89 je: 28
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 2: 437, 469, 501, 502, 534, 566, 565, 597, 629, 661, 660, 692, 724, 756, 788, 820, 821, 822, 854, 854, 886, 918, 950, 982, 983, 1015, 
[DBG]  Path for agent 89 updated, resulting length: 26
[DBG]  Paths successfully updated.
[DBG]  (LNS.cpp) New path for agent 28: 
[DBG]  661, 661, 661, 661, 661, 661, 661, 661, 660, 692, 724, 725, 726, 727, 
[DBG]  (LNS.cpp) New path for agent 46: 
[DBG]  786, 787, 788, 756, 724, 725, 726, 727, 728, 696, 664, 632, 600, 601, 569, 570, 538, 539, 540, 541, 509, 477, 445, 413, 381, 349, 317, 285, 284, 252, 
[DBG]  (LNS.cpp) New path for agent 89: 
[DBG]  437, 469, 501, 502, 534, 566, 565, 597, 629, 661, 660, 692, 724, 756, 788, 820, 821, 822, 854, 854, 886, 918, 950, 982, 983, 1015, 
[DBG]  Delta value: 0.302083
[DBG]  Rewarding metric index = 0
[DBG]  component_weights = {0.934265, 0.0311224, 0.0171173, 0.0174953}
[DBG]  opSuccess value: 1
[STAT] neighbor.sum_of_costs before recomputation: 67
[STAT] neighbor.old_sum_of_costs before recomputation: 96
[STAT] sum_of_costs before recomputation: 4424
[DBG]  Validate solution immediately after SAT success.
[WARNING] Problem after SAT: Target conflict: agent 42 (len 40) traverses target of agent 28 (len 13) at location 727 at timestep 39
[DBG]  [DEBUG] Attempting immediate repair via init_lns because problem occurred after SAT (should be applied only for conflicts...).
[DBG]  [DEBUG] Passing 150 agents to init_lns (skip=true).
[DBG]  [DEBUG] path_table contents for selected agents (neighbor.agents):
[DBG]    Agent 28 => controlling path length=14
[DBG]    Agent 46 => controlling path length=30
[DBG]    Agent 89 => controlling path length=26
[DBG]  hodnota skip_initial_solution=1
[DBG]  We skip initialSolution => call buildCollisionData()
[DBG]  buildCollisionData() called â€“ skip_initial_solution case.
[DBG]  Agents.size()=150, collision_graph.size()=150
[DBG]  agent 28 => updateCollidingPairs => foundCollision
[DBG]  agent 42 => updateCollidingPairs => foundCollision
[DBG]  agent 89 => updateCollidingPairs => foundCollision
[DBG]  agent 135 => updateCollidingPairs => foundCollision
[DBG]  Conflicting agent pairs:
[DBG]  agent 28 is in conflict with agent 42
[DBG]  agent 28 is in conflict with agent 135
[DBG]  agent 89 is in conflict with agent 135
[DBG]  buildCollisionData() => sum_of_costs=4395, num_of_colliding_pairs=3
[DBG]  buildCollisionData done => sum_of_costs=4395, num_of_colliding_pairs=3
[DBG]  sum_of_cost hodnota: 4395
[DBG]  After skip/init build => iteration_stats.back(): sum_of_costs=4395, collisions=3
[DEBUG] Using default neighbor generation strategy for conflicts: 0
	InitLNS(PP): runtime = 0.00100183, iterations = 2, colliding pairs = 0, initial colliding pairs = 3, solution cost = 4420, initial solution cost = 4395, failed iterations = 0
[DBG]  [DEBUG] init_lns->sum_of_costs after init_lns->run: 4420
[DBG]  [DEBUG] sum_of_costs after assignment from init_lns->run: 4420
[DBG]  Recomputing sum_of_cost by dividing neighbor.sum_of_costs and neighbor.old_sum_of_costs
[STAT] sum_of_costs after recomputation: 4420
[STAT] Iteration 66
[DBG]  Using SAT operator (destroy+repair SAT).
[DBG]  ====================
[DBG]  SAT destroy operator called.
[DBG]  SAT heuristic: 2
[DBG]  key_agent_id: 28
[DBG]  key_agent_id global path length: 41
[DBG]  Submap content (global positions):
[DBG]  594 595 596 597 598 
[DBG]  626 627 628 629 630 
[DBG]  658 659 660 661 662 
[DBG]  690 691 692 693 694 
[DBG]  722 723 724 725 726 
[DBG]  Map content with agents and obstacles:
[DBG]  . X . . X 
[DBG]  X . . . X 
[DBG]  . A A . X 
[DBG]  X . . X X 
[DBG]  . X . . . 
[DBG]  content of the map structure that we pass to the SAT solver:
[DBG]  1  -1  1  1  -1  
[DBG]  -1  1  1  1  -1  
[DBG]  1  1  1  1  -1  
[DBG]  -1  1  1  -1  -1  
[DBG]  1  -1  1  1  1  
[DBG]  Identifying agents in a submap for rescheduling (when key_agent is there at the time 31):
[DBG]  Agent 26 found intervals in the sub-map:
[DBG]   [26..34]
[DBG]  Agent 26 (interval in submap: [26..34]) contains time 31, added to replan.
[DBG]  Agent 28 found intervals in the sub-map:
[DBG]   [0..39]
[DBG]  Agent 28 (interval in submap: [0..39]) contains time 31, added to replan.
[DBG]  Agent 53 found intervals in the sub-map:
[DBG]   [25..30]
[DBG]  Agent 53 is not in sub-map at time 31 (intervals: 
[DBG]  [25..30] )
[DBG]  Agent 148 found intervals in the sub-map:
[DBG]   [36..38]
[DBG]  Agent 148 is not in sub-map at time 31 (intervals: 
[DBG]  [36..38] )
[DBG]  Agent 26 | Start (global): 659 -> (local): (2, 1) at time 31 | Goal (global): 724 -> (local): (4, 2) at time 34
[DBG]  Agent 28 | Start (global): 660 -> (local): (2, 2) at time 31 | Goal (global): 726 -> (local): (4, 4) at time 39
[DBG]  [REPAIR] SAT destroy operator called.
[DBG]  [REPAIR] SAT operator â€“ launching subproblem FOR OPTIMIZATION.
[DBG]  Creating local paths (sx, sy) in the submap for T_sync = 31
[DBG]    Agent 26 (global paths from T=31 to 34) has local path: (2,1) (3,1) (3,2) (4,2) 
[DBG]    Agent 28 (global paths from T=31 to 39) has local path: (2,2) (2,2) (2,2) (2,2) (2,2) (3,2) (4,2) (4,3) (4,4) 
[DBG]  Checking input data for SAT solver:
[DBG]    - Number of agents to replan: 2
[DBG]  Agent 26 has the original local path length: 4 => Start (2,1), Goal (4,2)
[DBG]  Agent 28 has the original local path length: 9 => Start (2,2), Goal (4,4)
[DBG]  Start position: (2, 1), (2, 2), 
[DBG]  Goal position: (4, 2), (4, 4), 
[DBG]  SAT instance and solver created.
Currently solving
Instance name: scen
Map name: map
Encoding used: disappear_at_goal
SAT solver used: Kissat
Optimizing function: sum of costs
Number of agents: 2
Mks LB: 5
SoC LB: 9
Delta: 0
Remaining time: 300000 [ms]

Found plan [agents = 2] [timesteps = 5]
Agent #0 : 7 10 11 13 0 
Agent #1 : 8 11 13 14 15 

[STAT] Solver returned: 0
[DBG]  Agent (index) 26 | New local path (submap idx):
[DBG]  7 10 11 13 
[DBG]  Agent (index) 28 | New local path (submap idx):
[DBG]  8 11 13 14 15 
[DBG]  Update the agent path 26 | Original local length: 4 | New local length: 4
[DBG]  agent 26 t=0 => decoded (sx,sy)=(2,1) => global_id=659
[DBG]  agent 26 t=1 => decoded (sx,sy)=(3,1) => global_id=691
[DBG]  agent 26 t=2 => decoded (sx,sy)=(3,2) => global_id=692
[DBG]  agent 26 t=3 => decoded (sx,sy)=(4,2) => global_id=724
[DBG]  Complete path of agent 26:
[DBG]    Original: 13 14 46 47 79 80 81 82 83 84 116 148 180 212 244 276 308 309 341 373 405 437 469 501 533 565 597 596 628 628 627 659 691 692 724 756 755 
[DBG]    New:     13 14 46 47 79 80 81 82 83 84 116 148 180 212 244 276 308 309 341 373 405 437 469 501 533 565 597 596 628 628 627 659 691 692 724 756 755 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 13 14 46 47 79 80 81 82 83 84 116 148 180 212 244 276 308 309 341 373 405 437 469 501 533 565 597 596 628 628 627 
[DBG]    Local path (in submap): 659 691 692 724 
[DBG]    Suffix (out of submap): 756 755 
[DBG]  Original agent path length 26 je: 37
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 0: 13, 14, 46, 47, 79, 80, 81, 82, 83, 84, 116, 148, 180, 212, 244, 276, 308, 309, 341, 373, 405, 437, 469, 501, 533, 565, 597, 596, 628, 628, 627, 659, 691, 692, 724, 756, 755, 
[DBG]  Path for agent 26 updated, resulting length: 37
[DBG]  Update the agent path 28 | Original local length: 9 | New local length: 5
[DBG]  agent 28 t=0 => decoded (sx,sy)=(2,2) => global_id=660
[DBG]  agent 28 t=1 => decoded (sx,sy)=(3,2) => global_id=692
[DBG]  agent 28 t=2 => decoded (sx,sy)=(4,2) => global_id=724
[DBG]  agent 28 t=3 => decoded (sx,sy)=(4,3) => global_id=725
[DBG]  agent 28 t=4 => decoded (sx,sy)=(4,4) => global_id=726
[DBG]  Complete path of agent 28:
[DBG]    Original: 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 660 660 660 660 660 660 660 692 724 725 726 727 
[DBG]    New:     661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 660 660 660 692 724 725 726 727 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 660 660 
[DBG]    Local path (in submap): 660 692 724 725 726 727 
[DBG]    Suffix (out of submap): 
[DBG]  Original agent path length 28 je: 41
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 1: 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 660, 660, 660, 692, 724, 725, 726, 727, 
[DBG]  Path for agent 28 updated, resulting length: 37
[DBG]  Paths successfully updated.
[DBG]  (LNS.cpp) New path for agent 26: 
[DBG]  13, 14, 46, 47, 79, 80, 81, 82, 83, 84, 116, 148, 180, 212, 244, 276, 308, 309, 341, 373, 405, 437, 469, 501, 533, 565, 597, 596, 628, 628, 627, 659, 691, 692, 724, 756, 755, 
[DBG]  (LNS.cpp) New path for agent 28: 
[DBG]  661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 660, 660, 660, 692, 724, 725, 726, 727, 
[DBG]  Delta value: 0.0526316
[DBG]  Rewarding metric index = 0
[DBG]  component_weights = {0.940291, 0.0282692, 0.015548, 0.0158913}
[DBG]  opSuccess value: 1
[STAT] neighbor.sum_of_costs before recomputation: 72
[STAT] neighbor.old_sum_of_costs before recomputation: 76
[STAT] sum_of_costs before recomputation: 4420
[DBG]  Validate solution immediately after SAT success.
[WARNING] Problem after SAT: Target conflict: agent 42 (len 40) traverses target of agent 28 (len 36) at location 727 at timestep 39
[DBG]  [DEBUG] Attempting immediate repair via init_lns because problem occurred after SAT (should be applied only for conflicts...).
[DBG]  [DEBUG] Passing 150 agents to init_lns (skip=true).
[DBG]  [DEBUG] path_table contents for selected agents (neighbor.agents):
[DBG]    Agent 26 => controlling path length=37
[DBG]    Agent 28 => controlling path length=37
[DBG]  hodnota skip_initial_solution=1
[DBG]  We skip initialSolution => call buildCollisionData()
[DBG]  buildCollisionData() called â€“ skip_initial_solution case.
[DBG]  Agents.size()=150, collision_graph.size()=150
[DBG]  agent 28 => updateCollidingPairs => foundCollision
[DBG]  agent 42 => updateCollidingPairs => foundCollision
[DBG]  Conflicting agent pairs:
[DBG]  agent 28 is in conflict with agent 42
[DBG]  buildCollisionData() => sum_of_costs=4416, num_of_colliding_pairs=1
[DBG]  buildCollisionData done => sum_of_costs=4416, num_of_colliding_pairs=1
[DBG]  sum_of_cost hodnota: 4416
[DBG]  After skip/init build => iteration_stats.back(): sum_of_costs=4416, collisions=1
[DEBUG] Using default neighbor generation strategy for conflicts: 2
[DEBUG] Using default neighbor generation strategy for conflicts: 1
	InitLNS(PP): runtime = 0.00244946, iterations = 3, colliding pairs = 0, initial colliding pairs = 1, solution cost = 4417, initial solution cost = 4416, failed iterations = 0
[DBG]  [DEBUG] init_lns->sum_of_costs after init_lns->run: 4417
[DBG]  [DEBUG] sum_of_costs after assignment from init_lns->run: 4417
[DBG]  Recomputing sum_of_cost by dividing neighbor.sum_of_costs and neighbor.old_sum_of_costs
[STAT] sum_of_costs after recomputation: 4417
[STAT] Iteration 67
[DBG]  Using SAT operator (destroy+repair SAT).
[DBG]  ====================
[DBG]  SAT destroy operator called.
[DBG]  SAT heuristic: 2
[DBG]  key_agent_id: 28
[DBG]  key_agent_id global path length: 41
[DBG]  Submap content (global positions):
[DBG]  660 661 662 663 664 
[DBG]  692 693 694 695 696 
[DBG]  724 725 726 727 728 
[DBG]  756 757 758 759 760 
[DBG]  788 789 790 791 792 
[DBG]  Map content with agents and obstacles:
[DBG]  . . X X . 
[DBG]  . X X X . 
[DBG]  . . A A . 
[DBG]  A . X . X 
[DBG]  . X . X . 
[DBG]  content of the map structure that we pass to the SAT solver:
[DBG]  1  1  -1  -1  1  
[DBG]  1  -1  -1  -1  1  
[DBG]  1  1  1  1  1  
[DBG]  1  1  -1  1  -1  
[DBG]  1  -1  1  -1  1  
[DBG]  Identifying agents in a submap for rescheduling (when key_agent is there at the time 39):
[DBG]  Agent 28 found intervals in the sub-map:
[DBG]   [0..40]
[DBG]  Agent 28 (interval in submap: [0..40]) contains time 39, added to replan.
[DBG]  Agent 42 found intervals in the sub-map:
[DBG]   [35..40]
[DBG]  Agent 42 (interval in submap: [35..40]) contains time 39, added to replan.
[DBG]  Agent 55 found intervals in the sub-map:
[DBG]   [37..38]
[DBG]  Agent 55 is not in sub-map at time 39 (intervals: 
[DBG]  [37..38] )
[DBG]  Agent 59 found intervals in the sub-map:
[DBG]  
[DBG]  Agent 59 is not in sub-map at time 39 (intervals: 
[DBG]  )
[DBG]  Agent 69 found intervals in the sub-map:
[DBG]   [36..40]
[DBG]  Agent 69 (interval in submap: [36..40]) contains time 39, added to replan.
[DBG]  Agent 148 found intervals in the sub-map:
[DBG]   [38..38]
[DBG]  Agent 148 is not in sub-map at time 39 (intervals: 
[DBG]  [38..38] )
[DBG]  Agent 28 | Start (global): 726 -> (local): (2, 2) at time 39 | Goal (global): 727 -> (local): (2, 3) at time 40
[DBG]  Agent 42 | Start (global): 727 -> (local): (2, 3) at time 39 | Goal (global): 759 -> (local): (3, 3) at time 40
[DBG]  Agent 69 | Start (global): 756 -> (local): (3, 0) at time 39 | Goal (global): 788 -> (local): (4, 0) at time 40
[DBG]  [REPAIR] SAT destroy operator called.
[DBG]  [REPAIR] SAT operator â€“ launching subproblem FOR OPTIMIZATION.
[DBG]  Creating local paths (sx, sy) in the submap for T_sync = 39
[DBG]    Agent 28 (global paths from T=39 to 40) has local path: (2,2) (2,3) 
[DBG]    Agent 42 (global paths from T=39 to 40) has local path: (2,3) (3,3) 
[DBG]    Agent 69 (global paths from T=39 to 40) has local path: (3,0) (4,0) 
[DBG]  Checking input data for SAT solver:
[DBG]    - Number of agents to replan: 3
[DBG]  Agent 28 has the original local path length: 2 => Start (2,2), Goal (2,3)
[DBG]  Agent 42 has the original local path length: 2 => Start (2,3), Goal (3,3)
[DBG]  Agent 69 has the original local path length: 2 => Start (3,0), Goal (4,0)
[DBG]  Start position: (2, 2), (2, 3), (3, 0), 
[DBG]  Goal position: (2, 3), (3, 3), (4, 0), 
[DBG]  SAT instance and solver created.
Currently solving
Instance name: scen
Map name: map
Encoding used: disappear_at_goal
SAT solver used: Kissat
Optimizing function: sum of costs
Number of agents: 3
Mks LB: 2
SoC LB: 6
Delta: 0
Remaining time: 300000 [ms]

Found plan [agents = 3] [timesteps = 2]
Agent #0 : 7 8 
Agent #1 : 8 12 
Agent #2 : 10 13 

[STAT] Solver returned: 0
[DBG]  Agent (index) 28 | New local path (submap idx):
[DBG]  7 8 
[DBG]  Agent (index) 42 | New local path (submap idx):
[DBG]  8 12 
[DBG]  Agent (index) 69 | New local path (submap idx):
[DBG]  10 13 
[DBG]  Update the agent path 28 | Original local length: 2 | New local length: 2
[DBG]  agent 28 t=0 => decoded (sx,sy)=(2,2) => global_id=726
[DBG]  agent 28 t=1 => decoded (sx,sy)=(2,3) => global_id=727
[DBG]  Complete path of agent 28:
[DBG]    Original: 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 660 660 660 660 660 660 660 660 660 692 724 725 726 727 
[DBG]    New:     661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 660 660 660 660 660 660 660 660 660 692 724 725 726 727 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 660 660 660 660 660 660 660 660 660 692 724 725 
[DBG]    Local path (in submap): 726 727 
[DBG]    Suffix (out of submap): 
[DBG]  Original agent path length 28 je: 41
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 0: 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 660, 660, 660, 660, 660, 660, 660, 660, 660, 692, 724, 725, 726, 727, 
[DBG]  Path for agent 28 updated, resulting length: 41
[DBG]  Update the agent path 42 | Original local length: 2 | New local length: 2
[DBG]  agent 42 t=0 => decoded (sx,sy)=(2,3) => global_id=727
[DBG]  agent 42 t=1 => decoded (sx,sy)=(3,3) => global_id=759
[DBG]  Complete path of agent 42:
[DBG]    Original: 224 256 257 258 259 260 261 293 294 326 327 359 391 423 424 425 426 427 428 429 430 431 432 464 496 528 528 529 561 593 625 657 658 659 691 692 724 725 726 727 759 
[DBG]    New:     224 256 257 258 259 260 261 293 294 326 327 359 391 423 424 425 426 427 428 429 430 431 432 464 496 528 528 529 561 593 625 657 658 659 691 692 724 725 726 727 759 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 224 256 257 258 259 260 261 293 294 326 327 359 391 423 424 425 426 427 428 429 430 431 432 464 496 528 528 529 561 593 625 657 658 659 691 692 724 725 726 
[DBG]    Local path (in submap): 727 759 
[DBG]    Suffix (out of submap): 
[DBG]  Original agent path length 42 je: 41
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 1: 224, 256, 257, 258, 259, 260, 261, 293, 294, 326, 327, 359, 391, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 464, 496, 528, 528, 529, 561, 593, 625, 657, 658, 659, 691, 692, 724, 725, 726, 727, 759, 
[DBG]  Path for agent 42 updated, resulting length: 41
[DBG]  Update the agent path 69 | Original local length: 2 | New local length: 2
[DBG]  agent 69 t=0 => decoded (sx,sy)=(3,0) => global_id=756
[DBG]  agent 69 t=1 => decoded (sx,sy)=(4,0) => global_id=788
[DBG]  Complete path of agent 69:
[DBG]    Original: 4 5 6 7 8 40 41 42 74 106 138 139 140 172 173 205 237 269 301 333 365 366 398 430 431 432 464 496 528 529 561 593 625 657 658 659 660 692 724 756 788 820 
[DBG]    New:     4 5 6 7 8 40 41 42 74 106 138 139 140 172 173 205 237 269 301 333 365 366 398 430 431 432 464 496 528 529 561 593 625 657 658 659 660 692 724 756 788 820 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 4 5 6 7 8 40 41 42 74 106 138 139 140 172 173 205 237 269 301 333 365 366 398 430 431 432 464 496 528 529 561 593 625 657 658 659 660 692 724 
[DBG]    Local path (in submap): 756 788 
[DBG]    Suffix (out of submap): 820 
[DBG]  Original agent path length 69 je: 42
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 2: 4, 5, 6, 7, 8, 40, 41, 42, 74, 106, 138, 139, 140, 172, 173, 205, 237, 269, 301, 333, 365, 366, 398, 430, 431, 432, 464, 496, 528, 529, 561, 593, 625, 657, 658, 659, 660, 692, 724, 756, 788, 820, 
[DBG]  Path for agent 69 updated, resulting length: 42
[DBG]  Paths successfully updated.
[DBG]  (LNS.cpp) New path for agent 28: 
[DBG]  661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 660, 660, 660, 660, 660, 660, 660, 660, 660, 692, 724, 725, 726, 727, 
[DBG]  (LNS.cpp) New path for agent 42: 
[DBG]  224, 256, 257, 258, 259, 260, 261, 293, 294, 326, 327, 359, 391, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 464, 496, 528, 528, 529, 561, 593, 625, 657, 658, 659, 691, 692, 724, 725, 726, 727, 759, 
[DBG]  (LNS.cpp) New path for agent 69: 
[DBG]  4, 5, 6, 7, 8, 40, 41, 42, 74, 106, 138, 139, 140, 172, 173, 205, 237, 269, 301, 333, 365, 366, 398, 430, 431, 432, 464, 496, 528, 529, 561, 593, 625, 657, 658, 659, 660, 692, 724, 756, 788, 820, 
[DBG]  Delta value: 0
[DBG]  Rewarding metric index = 0
[DBG]  component_weights = {0.943107, 0.0269361, 0.0148148, 0.015142}
[DBG]  opSuccess value: 1
[STAT] neighbor.sum_of_costs before recomputation: 121
[STAT] neighbor.old_sum_of_costs before recomputation: 121
[STAT] sum_of_costs before recomputation: 4417
[DBG]  Validate solution immediately after SAT success.
[DBG]  No problems after SAT replan.
[DBG]  Recomputing sum_of_cost by dividing neighbor.sum_of_costs and neighbor.old_sum_of_costs
[STAT] sum_of_costs after recomputation: 4417
[STAT] Iteration 68
[DBG]  Using SAT operator (destroy+repair SAT).
[DBG]  ====================
[DBG]  SAT destroy operator called.
[DBG]  SAT heuristic: 2
[DBG]  key_agent_id: 28
[DBG]  key_agent_id global path length: 41
[DBG]  Submap content (global positions):
[DBG]  659 660 661 662 663 
[DBG]  691 692 693 694 695 
[DBG]  723 724 725 726 727 
[DBG]  755 756 757 758 759 
[DBG]  787 788 789 790 791 
[DBG]  Map content with agents and obstacles:
[DBG]  . A . X X 
[DBG]  . A X X X 
[DBG]  X A A A . 
[DBG]  . . . X . 
[DBG]  . . X . X 
[DBG]  content of the map structure that we pass to the SAT solver:
[DBG]  1  1  1  -1  -1  
[DBG]  1  1  -1  -1  -1  
[DBG]  -1  1  1  1  1  
[DBG]  1  1  1  -1  1  
[DBG]  1  1  -1  1  -1  
[DBG]  Identifying agents in a submap for rescheduling (when key_agent is there at the time 38):
[DBG]  Agent 28 found intervals in the sub-map:
[DBG]   [0..40]
[DBG]  Agent 28 (interval in submap: [0..40]) contains time 38, added to replan.
[DBG]  Agent 42 found intervals in the sub-map:
[DBG]   [33..40]
[DBG]  Agent 42 (interval in submap: [33..40]) contains time 38, added to replan.
[DBG]  Agent 45 found intervals in the sub-map:
[DBG]   [24..29]
[DBG]  Agent 45 is not in sub-map at time 38 (intervals: 
[DBG]  [24..29] )
[DBG]  Agent 55 found intervals in the sub-map:
[DBG]   [36..38]
[DBG]  Agent 55 (interval in submap: [36..38]) contains time 38, added to replan.
[DBG]  Agent 59 found intervals in the sub-map:
[DBG]  
[DBG]  Agent 59 is not in sub-map at time 38 (intervals: 
[DBG]  )
[DBG]  Agent 69 found intervals in the sub-map:
[DBG]   [35..40]
[DBG]  Agent 69 (interval in submap: [35..40]) contains time 38, added to replan.
[DBG]  Agent 148 found intervals in the sub-map:
[DBG]   [37..38]
[DBG]  Agent 148 (interval in submap: [37..38]) contains time 38, added to replan.
[DBG]  Agent 28 | Start (global): 725 -> (local): (2, 2) at time 38 | Goal (global): 727 -> (local): (2, 4) at time 40
[DBG]  Agent 42 | Start (global): 726 -> (local): (2, 3) at time 38 | Goal (global): 759 -> (local): (3, 4) at time 40
[DBG]  Agent 55 | Start (global): 692 -> (local): (1, 1) at time 38 | Goal (global): 692 -> (local): (1, 1) at time 38
[DBG]  Agent 69 | Start (global): 724 -> (local): (2, 1) at time 38 | Goal (global): 788 -> (local): (4, 1) at time 40
[DBG]  Agent 148 | Start (global): 660 -> (local): (0, 1) at time 38 | Goal (global): 660 -> (local): (0, 1) at time 38
[DBG]  [REPAIR] SAT destroy operator called.
[DBG]  [REPAIR] SAT operator â€“ launching subproblem FOR OPTIMIZATION.
[DBG]  Creating local paths (sx, sy) in the submap for T_sync = 38
[DBG]    Agent 28 (global paths from T=38 to 40) has local path: (2,2) (2,3) (2,4) 
[DBG]    Agent 42 (global paths from T=38 to 40) has local path: (2,3) (2,4) (3,4) 
[DBG]    Agent 55 (global paths from T=38 to 38) has local path: (1,1) 
[DBG]    Agent 69 (global paths from T=38 to 40) has local path: (2,1) (3,1) (4,1) 
[DBG]    Agent 148 (global paths from T=38 to 38) has local path: (0,1) 
[DBG]  Checking input data for SAT solver:
[DBG]    - Number of agents to replan: 5
[DBG]  Agent 28 has the original local path length: 3 => Start (2,2), Goal (2,4)
[DBG]  Agent 42 has the original local path length: 3 => Start (2,3), Goal (3,4)
[DBG]  Agent 55 has the original local path length: 1 => Start (1,1), Goal (1,1)
[DBG]  Agent 69 has the original local path length: 3 => Start (2,1), Goal (4,1)
[DBG]  Agent 148 has the original local path length: 1 => Start (0,1), Goal (0,1)
[DBG]  Start position: (2, 2), (2, 3), (1, 1), (2, 1), (0, 1), 
[DBG]  Goal position: (2, 4), (3, 4), (1, 1), (4, 1), (0, 1), 
[DBG]  SAT instance and solver created.
Currently solving
Instance name: scen
Map name: map
Encoding used: disappear_at_goal
SAT solver used: Kissat
Optimizing function: sum of costs
Number of agents: 5
Mks LB: 3
SoC LB: 11
Delta: 0
Remaining time: 300000 [ms]

Vertex conflict! Agents 2, 4, timestep 1, location 0
Swapping conflict! Agents 2, 4, timestep 1, edge (0,0)
Vertex conflict! Agents 2, 4, timestep 2, location 0
Found plan [agents = 5] [timesteps = 3]
Agent #0 : 6 7 8 
Agent #1 : 7 8 12 
Agent #2 : 4 0 0 
Agent #3 : 5 10 14 
Agent #4 : 1 0 0 

[STAT] Solver returned: 0
[DBG]  Agent (index) 28 | New local path (submap idx):
[DBG]  6 7 8 
[DBG]  Agent (index) 42 | New local path (submap idx):
[DBG]  7 8 12 
[DBG]  Agent (index) 55 | New local path (submap idx):
[DBG]  4 
[DBG]  Agent (index) 69 | New local path (submap idx):
[DBG]  5 10 14 
[DBG]  Agent (index) 148 | New local path (submap idx):
[DBG]  1 
[DBG]  Update the agent path 28 | Original local length: 3 | New local length: 3
[DBG]  agent 28 t=0 => decoded (sx,sy)=(2,2) => global_id=725
[DBG]  agent 28 t=1 => decoded (sx,sy)=(2,3) => global_id=726
[DBG]  agent 28 t=2 => decoded (sx,sy)=(2,4) => global_id=727
[DBG]  Complete path of agent 28:
[DBG]    Original: 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 660 660 660 660 660 660 660 660 660 692 724 725 726 727 
[DBG]    New:     661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 660 660 660 660 660 660 660 660 660 692 724 725 726 727 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 660 660 660 660 660 660 660 660 660 692 724 
[DBG]    Local path (in submap): 725 726 727 
[DBG]    Suffix (out of submap): 
[DBG]  Original agent path length 28 je: 41
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 0: 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 660, 660, 660, 660, 660, 660, 660, 660, 660, 692, 724, 725, 726, 727, 
[DBG]  Path for agent 28 updated, resulting length: 41
[DBG]  Update the agent path 42 | Original local length: 3 | New local length: 3
[DBG]  agent 42 t=0 => decoded (sx,sy)=(2,3) => global_id=726
[DBG]  agent 42 t=1 => decoded (sx,sy)=(2,4) => global_id=727
[DBG]  agent 42 t=2 => decoded (sx,sy)=(3,4) => global_id=759
[DBG]  Complete path of agent 42:
[DBG]    Original: 224 256 257 258 259 260 261 293 294 326 327 359 391 423 424 425 426 427 428 429 430 431 432 464 496 528 528 529 561 593 625 657 658 659 691 692 724 725 726 727 759 
[DBG]    New:     224 256 257 258 259 260 261 293 294 326 327 359 391 423 424 425 426 427 428 429 430 431 432 464 496 528 528 529 561 593 625 657 658 659 691 692 724 725 726 727 759 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 224 256 257 258 259 260 261 293 294 326 327 359 391 423 424 425 426 427 428 429 430 431 432 464 496 528 528 529 561 593 625 657 658 659 691 692 724 725 
[DBG]    Local path (in submap): 726 727 759 
[DBG]    Suffix (out of submap): 
[DBG]  Original agent path length 42 je: 41
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 1: 224, 256, 257, 258, 259, 260, 261, 293, 294, 326, 327, 359, 391, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 464, 496, 528, 528, 529, 561, 593, 625, 657, 658, 659, 691, 692, 724, 725, 726, 727, 759, 
[DBG]  Path for agent 42 updated, resulting length: 41
[DBG]  Update the agent path 55 | Original local length: 1 | New local length: 1
[DBG]  agent 55 t=0 => decoded (sx,sy)=(1,1) => global_id=692
[DBG]  Complete path of agent 55:
[DBG]    Original: 34 35 67 68 100 132 164 196 228 260 261 293 294 295 327 359 360 361 393 425 426 427 428 429 430 431 432 464 496 528 529 561 593 625 657 658 659 660 692 
[DBG]    New:     34 35 67 68 100 132 164 196 228 260 261 293 294 295 327 359 360 361 393 425 426 427 428 429 430 431 432 464 496 528 529 561 593 625 657 658 659 660 692 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 34 35 67 68 100 132 164 196 228 260 261 293 294 295 327 359 360 361 393 425 426 427 428 429 430 431 432 464 496 528 529 561 593 625 657 658 659 660 
[DBG]    Local path (in submap): 692 
[DBG]    Suffix (out of submap): 
[DBG]  Original agent path length 55 je: 39
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 2: 34, 35, 67, 68, 100, 132, 164, 196, 228, 260, 261, 293, 294, 295, 327, 359, 360, 361, 393, 425, 426, 427, 428, 429, 430, 431, 432, 464, 496, 528, 529, 561, 593, 625, 657, 658, 659, 660, 692, 
[DBG]  Path for agent 55 updated, resulting length: 39
[DBG]  Update the agent path 69 | Original local length: 3 | New local length: 3
[DBG]  agent 69 t=0 => decoded (sx,sy)=(2,1) => global_id=724
[DBG]  agent 69 t=1 => decoded (sx,sy)=(3,1) => global_id=756
[DBG]  agent 69 t=2 => decoded (sx,sy)=(4,1) => global_id=788
[DBG]  Complete path of agent 69:
[DBG]    Original: 4 5 6 7 8 40 41 42 74 106 138 139 140 172 173 205 237 269 301 333 365 366 398 430 431 432 464 496 528 529 561 593 625 657 658 659 660 692 724 756 788 820 
[DBG]    New:     4 5 6 7 8 40 41 42 74 106 138 139 140 172 173 205 237 269 301 333 365 366 398 430 431 432 464 496 528 529 561 593 625 657 658 659 660 692 724 756 788 820 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 4 5 6 7 8 40 41 42 74 106 138 139 140 172 173 205 237 269 301 333 365 366 398 430 431 432 464 496 528 529 561 593 625 657 658 659 660 692 
[DBG]    Local path (in submap): 724 756 788 
[DBG]    Suffix (out of submap): 820 
[DBG]  Original agent path length 69 je: 42
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 3: 4, 5, 6, 7, 8, 40, 41, 42, 74, 106, 138, 139, 140, 172, 173, 205, 237, 269, 301, 333, 365, 366, 398, 430, 431, 432, 464, 496, 528, 529, 561, 593, 625, 657, 658, 659, 660, 692, 724, 756, 788, 820, 
[DBG]  Path for agent 69 updated, resulting length: 42
[DBG]  Update the agent path 148 | Original local length: 1 | New local length: 1
[DBG]  agent 148 t=0 => decoded (sx,sy)=(0,1) => global_id=660
[DBG]  Complete path of agent 148:
[DBG]    Original: 776 776 776 744 744 744 744 744 744 744 744 744 712 713 714 715 683 651 619 620 620 620 620 620 588 556 556 556 588 589 590 591 592 593 625 657 658 659 660 
[DBG]    New:     776 776 776 744 744 744 744 744 744 744 744 744 712 713 714 715 683 651 619 620 620 620 620 620 588 556 556 556 588 589 590 591 592 593 625 657 658 659 660 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 776 776 776 744 744 744 744 744 744 744 744 744 712 713 714 715 683 651 619 620 620 620 620 620 588 556 556 556 588 589 590 591 592 593 625 657 658 659 
[DBG]    Local path (in submap): 660 
[DBG]    Suffix (out of submap): 
[DBG]  Original agent path length 148 je: 39
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 4: 776, 776, 776, 744, 744, 744, 744, 744, 744, 744, 744, 744, 712, 713, 714, 715, 683, 651, 619, 620, 620, 620, 620, 620, 588, 556, 556, 556, 588, 589, 590, 591, 592, 593, 625, 657, 658, 659, 660, 
[DBG]  Path for agent 148 updated, resulting length: 39
[DBG]  Paths successfully updated.
[DBG]  (LNS.cpp) New path for agent 28: 
[DBG]  661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 660, 660, 660, 660, 660, 660, 660, 660, 660, 692, 724, 725, 726, 727, 
[DBG]  (LNS.cpp) New path for agent 42: 
[DBG]  224, 256, 257, 258, 259, 260, 261, 293, 294, 326, 327, 359, 391, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 464, 496, 528, 528, 529, 561, 593, 625, 657, 658, 659, 691, 692, 724, 725, 726, 727, 759, 
[DBG]  (LNS.cpp) New path for agent 55: 
[DBG]  34, 35, 67, 68, 100, 132, 164, 196, 228, 260, 261, 293, 294, 295, 327, 359, 360, 361, 393, 425, 426, 427, 428, 429, 430, 431, 432, 464, 496, 528, 529, 561, 593, 625, 657, 658, 659, 660, 692, 
[DBG]  (LNS.cpp) New path for agent 69: 
[DBG]  4, 5, 6, 7, 8, 40, 41, 42, 74, 106, 138, 139, 140, 172, 173, 205, 237, 269, 301, 333, 365, 366, 398, 430, 431, 432, 464, 496, 528, 529, 561, 593, 625, 657, 658, 659, 660, 692, 724, 756, 788, 820, 
[DBG]  (LNS.cpp) New path for agent 148: 
[DBG]  776, 776, 776, 744, 744, 744, 744, 744, 744, 744, 744, 744, 712, 713, 714, 715, 683, 651, 619, 620, 620, 620, 620, 620, 588, 556, 556, 556, 588, 589, 590, 591, 592, 593, 625, 657, 658, 659, 660, 
[DBG]  Delta value: 0
[DBG]  Rewarding metric index = 0
[DBG]  component_weights = {0.945797, 0.0256623, 0.0141143, 0.0144259}
[DBG]  opSuccess value: 1
[STAT] neighbor.sum_of_costs before recomputation: 197
[STAT] neighbor.old_sum_of_costs before recomputation: 197
[STAT] sum_of_costs before recomputation: 4417
[DBG]  Validate solution immediately after SAT success.
[DBG]  No problems after SAT replan.
[DBG]  Recomputing sum_of_cost by dividing neighbor.sum_of_costs and neighbor.old_sum_of_costs
[STAT] sum_of_costs after recomputation: 4417
[STAT] Iteration 69
[DBG]  Using SAT operator (destroy+repair SAT).
[DBG]  ====================
[DBG]  SAT destroy operator called.
[DBG]  SAT heuristic: 2
[DBG]  key_agent_id: 28
[DBG]  key_agent_id global path length: 41
[DBG]  Submap content (global positions):
[DBG]  595 596 597 598 599 
[DBG]  627 628 629 630 631 
[DBG]  659 660 661 662 663 
[DBG]  691 692 693 694 695 
[DBG]  723 724 725 726 727 
[DBG]  Map content with agents and obstacles:
[DBG]  X . . X . 
[DBG]  . . . X . 
[DBG]  . . A X X 
[DBG]  . A X X X 
[DBG]  X . . . . 
[DBG]  content of the map structure that we pass to the SAT solver:
[DBG]  -1  1  1  -1  1  
[DBG]  1  1  1  -1  1  
[DBG]  1  1  1  -1  -1  
[DBG]  1  1  -1  -1  -1  
[DBG]  -1  1  1  1  1  
[DBG]  Identifying agents in a submap for rescheduling (when key_agent is there at the time 16):
[DBG]  Agent 28 found intervals in the sub-map:
[DBG]   [0..40]
[DBG]  Agent 28 (interval in submap: [0..40]) contains time 16, added to replan.
[DBG]  Agent 74 found intervals in the sub-map:
[DBG]  
[DBG]  Agent 74 is not in sub-map at time 16 (intervals: 
[DBG]  )
[DBG]  Agent 114 found intervals in the sub-map:
[DBG]  
[DBG]  Agent 114 is not in sub-map at time 16 (intervals: 
[DBG]  )
[DBG]  Agent 131 found intervals in the sub-map:
[DBG]   [12..17]
[DBG]  Agent 131 (interval in submap: [12..17]) contains time 16, added to replan.
[DBG]  Agent 28 | Start (global): 661 -> (local): (2, 2) at time 16 | Goal (global): 727 -> (local): (4, 4) at time 40
[DBG]  Agent 131 | Start (global): 692 -> (local): (3, 1) at time 16 | Goal (global): 724 -> (local): (4, 1) at time 17
[DBG]  [REPAIR] SAT destroy operator called.
[DBG]  [REPAIR] SAT operator â€“ launching subproblem FOR OPTIMIZATION.
[DBG]  Creating local paths (sx, sy) in the submap for T_sync = 16
[DBG]    Agent 28 (global paths from T=16 to 40) has local path: (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,1) (2,1) (2,1) (2,1) (2,1) (2,1) (2,1) (2,1) (2,1) (3,1) (4,1) (4,2) (4,3) (4,4) 
[DBG]    Agent 131 (global paths from T=16 to 17) has local path: (3,1) (4,1) 
[DBG]  Checking input data for SAT solver:
[DBG]    - Number of agents to replan: 2
[DBG]  Agent 28 has the original local path length: 25 => Start (2,2), Goal (4,4)
[DBG]  Agent 131 has the original local path length: 2 => Start (3,1), Goal (4,1)
[DBG]  Start position: (2, 2), (3, 1), 
[DBG]  Goal position: (4, 4), (4, 1), 
[DBG]  SAT instance and solver created.
Currently solving
Instance name: scen
Map name: map
Encoding used: disappear_at_goal
SAT solver used: Kissat
Optimizing function: sum of costs
Number of agents: 2
Mks LB: 7
SoC LB: 9
Delta: 0
Remaining time: 300000 [ms]

Found plan [agents = 2] [timesteps = 7]
Agent #0 : 9 8 11 12 13 14 15 
Agent #1 : 11 12 0 0 0 0 0 

[STAT] Solver returned: 0
[DBG]  Agent (index) 28 | New local path (submap idx):
[DBG]  9 8 11 12 13 14 15 
[DBG]  Agent (index) 131 | New local path (submap idx):
[DBG]  11 12 
[DBG]  Update the agent path 28 | Original local length: 25 | New local length: 7
[DBG]  agent 28 t=0 => decoded (sx,sy)=(2,2) => global_id=661
[DBG]  agent 28 t=1 => decoded (sx,sy)=(2,1) => global_id=660
[DBG]  agent 28 t=2 => decoded (sx,sy)=(3,1) => global_id=692
[DBG]  agent 28 t=3 => decoded (sx,sy)=(4,1) => global_id=724
[DBG]  agent 28 t=4 => decoded (sx,sy)=(4,2) => global_id=725
[DBG]  agent 28 t=5 => decoded (sx,sy)=(4,3) => global_id=726
[DBG]  agent 28 t=6 => decoded (sx,sy)=(4,4) => global_id=727
[DBG]  Complete path of agent 28:
[DBG]    Original: 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 660 660 660 660 660 660 660 660 660 692 724 725 726 727 
[DBG]    New:     661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 660 692 724 725 726 727 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 
[DBG]    Local path (in submap): 661 660 692 724 725 726 727 
[DBG]    Suffix (out of submap): 
[DBG]  Original agent path length 28 je: 41
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 0: 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 660, 692, 724, 725, 726, 727, 
[DBG]  Path for agent 28 updated, resulting length: 23
[DBG]  Update the agent path 131 | Original local length: 2 | New local length: 2
[DBG]  agent 131 t=0 => decoded (sx,sy)=(3,1) => global_id=692
[DBG]  agent 131 t=1 => decoded (sx,sy)=(4,1) => global_id=724
[DBG]  Complete path of agent 131:
[DBG]    Original: 341 340 339 371 403 404 405 437 469 501 533 565 597 596 628 660 692 724 756 788 787 786 786 818 817 849 848 847 879 878 877 876 875 874 873 841 809 777 745 713 712 
[DBG]    New:     341 340 339 371 403 404 405 437 469 501 533 565 597 596 628 660 692 724 756 788 787 786 786 818 817 849 848 847 879 878 877 876 875 874 873 841 809 777 745 713 712 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 341 340 339 371 403 404 405 437 469 501 533 565 597 596 628 660 
[DBG]    Local path (in submap): 692 724 
[DBG]    Suffix (out of submap): 756 788 787 786 786 818 817 849 848 847 879 878 877 876 875 874 873 841 809 777 745 713 712 
[DBG]  Original agent path length 131 je: 41
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 1: 341, 340, 339, 371, 403, 404, 405, 437, 469, 501, 533, 565, 597, 596, 628, 660, 692, 724, 756, 788, 787, 786, 786, 818, 817, 849, 848, 847, 879, 878, 877, 876, 875, 874, 873, 841, 809, 777, 745, 713, 712, 
[DBG]  Path for agent 131 updated, resulting length: 41
[DBG]  Paths successfully updated.
[DBG]  (LNS.cpp) New path for agent 28: 
[DBG]  661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 660, 692, 724, 725, 726, 727, 
[DBG]  (LNS.cpp) New path for agent 131: 
[DBG]  341, 340, 339, 371, 403, 404, 405, 437, 469, 501, 533, 565, 597, 596, 628, 660, 692, 724, 756, 788, 787, 786, 786, 818, 817, 849, 848, 847, 879, 878, 877, 876, 875, 874, 873, 841, 809, 777, 745, 713, 712, 
[DBG]  Delta value: 0.225
[DBG]  Rewarding metric index = 0
[DBG]  component_weights = {0.957448, 0.0201465, 0.0110806, 0.0113253}
[DBG]  opSuccess value: 1
[STAT] neighbor.sum_of_costs before recomputation: 62
[STAT] neighbor.old_sum_of_costs before recomputation: 80
[STAT] sum_of_costs before recomputation: 4417
[DBG]  Validate solution immediately after SAT success.
[WARNING] Problem after SAT: Target conflict: agent 42 (len 40) traverses target of agent 28 (len 22) at location 727 at timestep 39
[DBG]  [DEBUG] Attempting immediate repair via init_lns because problem occurred after SAT (should be applied only for conflicts...).
[DBG]  [DEBUG] Passing 150 agents to init_lns (skip=true).
[DBG]  [DEBUG] path_table contents for selected agents (neighbor.agents):
[DBG]    Agent 28 => controlling path length=23
[DBG]    Agent 131 => controlling path length=41
[DBG]  hodnota skip_initial_solution=1
[DBG]  We skip initialSolution => call buildCollisionData()
[DBG]  buildCollisionData() called â€“ skip_initial_solution case.
[DBG]  Agents.size()=150, collision_graph.size()=150
[DBG]  agent 28 => updateCollidingPairs => foundCollision
[DBG]  agent 42 => updateCollidingPairs => foundCollision
[DBG]  Conflicting agent pairs:
[DBG]  agent 28 is in conflict with agent 42
[DBG]  buildCollisionData() => sum_of_costs=4399, num_of_colliding_pairs=1
[DBG]  buildCollisionData done => sum_of_costs=4399, num_of_colliding_pairs=1
[DBG]  sum_of_cost hodnota: 4399
[DBG]  After skip/init build => iteration_stats.back(): sum_of_costs=4399, collisions=1
[DEBUG] Using default neighbor generation strategy for conflicts: 1
[DEBUG] Using default neighbor generation strategy for conflicts: 0
[DEBUG] Using default neighbor generation strategy for conflicts: 1
[DEBUG] Using default neighbor generation strategy for conflicts: 2
[DEBUG] Using default neighbor generation strategy for conflicts: 0
[DEBUG] Using default neighbor generation strategy for conflicts: 2
	InitLNS(PP): runtime = 0.0161543, iterations = 7, colliding pairs = 0, initial colliding pairs = 1, solution cost = 4418, initial solution cost = 4399, failed iterations = 1
[DBG]  [DEBUG] init_lns->sum_of_costs after init_lns->run: 4418
[DBG]  [DEBUG] sum_of_costs after assignment from init_lns->run: 4418
[DBG]  Recomputing sum_of_cost by dividing neighbor.sum_of_costs and neighbor.old_sum_of_costs
[STAT] sum_of_costs after recomputation: 4418
[STAT] Iteration 70
[DBG]  Using SAT operator (destroy+repair SAT).
[DBG]  ====================
[DBG]  SAT destroy operator called.
[DBG]  SAT heuristic: 2
[DBG]  key_agent_id: 28
[DBG]  key_agent_id global path length: 41
[DBG]  Submap content (global positions):
[DBG]  595 596 597 598 599 
[DBG]  627 628 629 630 631 
[DBG]  659 660 661 662 663 
[DBG]  691 692 693 694 695 
[DBG]  723 724 725 726 727 
[DBG]  Map content with agents and obstacles:
[DBG]  X . . X . 
[DBG]  . . . X . 
[DBG]  . . A X X 
[DBG]  . A X X X 
[DBG]  X . . A . 
[DBG]  content of the map structure that we pass to the SAT solver:
[DBG]  -1  1  1  -1  1  
[DBG]  1  1  1  -1  1  
[DBG]  1  1  1  -1  -1  
[DBG]  1  1  -1  -1  -1  
[DBG]  -1  1  1  1  1  
[DBG]  Identifying agents in a submap for rescheduling (when key_agent is there at the time 3):
[DBG]  Agent 7 found intervals in the sub-map:
[DBG]   [1..5]
[DBG]  Agent 7 (interval in submap: [1..5]) contains time 3, added to replan.
[DBG]  Agent 28 found intervals in the sub-map:
[DBG]   [0..40]
[DBG]  Agent 28 (interval in submap: [0..40]) contains time 3, added to replan.
[DBG]  Agent 108 found intervals in the sub-map:
[DBG]   [0..5]
[DBG]  Agent 108 (interval in submap: [0..5]) contains time 3, added to replan.
[DBG]  Agent 7 | Start (global): 726 -> (local): (4, 3) at time 3 | Goal (global): 727 -> (local): (4, 4) at time 5
[DBG]  Agent 28 | Start (global): 661 -> (local): (2, 2) at time 3 | Goal (global): 727 -> (local): (4, 4) at time 40
[DBG]  Agent 108 | Start (global): 692 -> (local): (3, 1) at time 3 | Goal (global): 724 -> (local): (4, 1) at time 5
[DBG]  [REPAIR] SAT destroy operator called.
[DBG]  [REPAIR] SAT operator â€“ launching subproblem FOR OPTIMIZATION.
[DBG]  Creating local paths (sx, sy) in the submap for T_sync = 3
[DBG]    Agent 7 (global paths from T=3 to 5) has local path: (4,3) (4,3) (4,4) 
[DBG]    Agent 28 (global paths from T=3 to 40) has local path: (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,1) (1,1) (1,0) (1,0) (1,0) (1,0) (1,0) (2,0) (3,0) (3,0) (3,0) (3,1) (2,1) (2,1) (2,1) (2,1) (2,1) (2,1) (2,1) (2,1) (3,1) (4,1) (4,2) (4,3) (4,4) 
[DBG]    Agent 108 (global paths from T=3 to 5) has local path: (3,1) (3,1) (4,1) 
[DBG]  Checking input data for SAT solver:
[DBG]    - Number of agents to replan: 3
[DBG]  Agent 7 has the original local path length: 3 => Start (4,3), Goal (4,4)
[DBG]  Agent 28 has the original local path length: 38 => Start (2,2), Goal (4,4)
[DBG]  Agent 108 has the original local path length: 3 => Start (3,1), Goal (4,1)
[DBG]  Start position: (4, 3), (2, 2), (3, 1), 
[DBG]  Goal position: (4, 4), (4, 4), (4, 1), 
[DBG]  SAT instance and solver created.
Currently solving
Instance name: scen
Map name: map
Encoding used: disappear_at_goal
SAT solver used: Kissat
Optimizing function: sum of costs
Number of agents: 3
Mks LB: 7
SoC LB: 11
Delta: 0
Remaining time: 300000 [ms]

Vertex conflict! Agents 0, 2, timestep 2, location 0
Swapping conflict! Agents 0, 2, timestep 2, edge (0,0)
Vertex conflict! Agents 0, 2, timestep 3, location 0
Swapping conflict! Agents 0, 2, timestep 3, edge (0,0)
Vertex conflict! Agents 0, 2, timestep 4, location 0
Swapping conflict! Agents 0, 2, timestep 4, edge (0,0)
Vertex conflict! Agents 0, 2, timestep 5, location 0
Swapping conflict! Agents 0, 2, timestep 5, edge (0,0)
Vertex conflict! Agents 0, 2, timestep 6, location 0
Found plan [agents = 3] [timesteps = 7]
Agent #0 : 14 15 0 0 0 0 0 
Agent #1 : 9 8 11 12 13 14 15 
Agent #2 : 11 12 0 0 0 0 0 

[STAT] Solver returned: 0
[DBG]  Agent (index) 7 | New local path (submap idx):
[DBG]  14 15 
[DBG]  Agent (index) 28 | New local path (submap idx):
[DBG]  9 8 11 12 13 14 15 
[DBG]  Agent (index) 108 | New local path (submap idx):
[DBG]  11 12 
[DBG]  Update the agent path 7 | Original local length: 3 | New local length: 2
[DBG]  agent 7 t=0 => decoded (sx,sy)=(4,3) => global_id=726
[DBG]  agent 7 t=1 => decoded (sx,sy)=(4,4) => global_id=727
[DBG]  Complete path of agent 7:
[DBG]    Original: 756 724 725 726 726 727 728 729 761 793 792 824 856 888 889 921 
[DBG]    New:     756 724 725 726 727 728 729 761 793 792 824 856 888 889 921 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 756 724 725 
[DBG]    Local path (in submap): 726 727 728 
[DBG]    Suffix (out of submap): 729 761 793 792 824 856 888 889 921 
[DBG]  Original agent path length 7 je: 16
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 0: 756, 724, 725, 726, 727, 728, 729, 761, 793, 792, 824, 856, 888, 889, 921, 
[DBG]  Path for agent 7 updated, resulting length: 15
[DBG]  Update the agent path 28 | Original local length: 38 | New local length: 7
[DBG]  agent 28 t=0 => decoded (sx,sy)=(2,2) => global_id=661
[DBG]  agent 28 t=1 => decoded (sx,sy)=(2,1) => global_id=660
[DBG]  agent 28 t=2 => decoded (sx,sy)=(3,1) => global_id=692
[DBG]  agent 28 t=3 => decoded (sx,sy)=(4,1) => global_id=724
[DBG]  agent 28 t=4 => decoded (sx,sy)=(4,2) => global_id=725
[DBG]  agent 28 t=5 => decoded (sx,sy)=(4,3) => global_id=726
[DBG]  agent 28 t=6 => decoded (sx,sy)=(4,4) => global_id=727
[DBG]  Complete path of agent 28:
[DBG]    Original: 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 660 628 627 627 627 627 627 659 691 691 691 692 660 660 660 660 660 660 660 660 692 724 725 726 727 
[DBG]    New:     661 661 661 661 660 692 724 725 726 727 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 661 661 661 
[DBG]    Local path (in submap): 661 660 692 724 725 726 727 
[DBG]    Suffix (out of submap): 
[DBG]  Original agent path length 28 je: 41
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 1: 661, 661, 661, 661, 660, 692, 724, 725, 726, 727, 
[DBG]  Path for agent 28 updated, resulting length: 10
[DBG]  Update the agent path 108 | Original local length: 3 | New local length: 2
[DBG]  agent 108 t=0 => decoded (sx,sy)=(3,1) => global_id=692
[DBG]  agent 108 t=1 => decoded (sx,sy)=(4,1) => global_id=724
[DBG]  Complete path of agent 108:
[DBG]    Original: 628 660 692 692 692 724 756 788 820 821 822 854 855 856 888 889 890 891 892 892 924 956 957 989 1021 
[DBG]    New:     628 660 692 692 724 756 788 820 821 822 854 855 856 888 889 890 891 892 892 924 956 957 989 1021 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 628 660 692 
[DBG]    Local path (in submap): 692 724 756 
[DBG]    Suffix (out of submap): 788 820 821 822 854 855 856 888 889 890 891 892 892 924 956 957 989 1021 
[DBG]  Original agent path length 108 je: 25
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 2: 628, 660, 692, 692, 724, 756, 788, 820, 821, 822, 854, 855, 856, 888, 889, 890, 891, 892, 892, 924, 956, 957, 989, 1021, 
[DBG]  Path for agent 108 updated, resulting length: 24
[DBG]  Paths successfully updated.
[DBG]  (LNS.cpp) New path for agent 7: 
[DBG]  756, 724, 725, 726, 727, 728, 729, 761, 793, 792, 824, 856, 888, 889, 921, 
[DBG]  (LNS.cpp) New path for agent 28: 
[DBG]  661, 661, 661, 661, 660, 692, 724, 725, 726, 727, 
[DBG]  (LNS.cpp) New path for agent 108: 
[DBG]  628, 660, 692, 692, 724, 756, 788, 820, 821, 822, 854, 855, 856, 888, 889, 890, 891, 892, 892, 924, 956, 957, 989, 1021, 
[DBG]  Delta value: 0.417722
[DBG]  Rewarding metric index = 0
[DBG]  component_weights = {0.97108, 0.0136922, 0.00753069, 0.00769699}
[DBG]  opSuccess value: 1
[STAT] neighbor.sum_of_costs before recomputation: 46
[STAT] neighbor.old_sum_of_costs before recomputation: 79
[STAT] sum_of_costs before recomputation: 4418
[DBG]  Validate solution immediately after SAT success.
[WARNING] Problem after SAT: Vertex conflict between agents 7 and 35 at location 888 at timestep 12
[DBG]  [DEBUG] Attempting immediate repair via init_lns because problem occurred after SAT (should be applied only for conflicts...).
[DBG]  [DEBUG] Passing 150 agents to init_lns (skip=true).
[DBG]  [DEBUG] path_table contents for selected agents (neighbor.agents):
[DBG]    Agent 7 => controlling path length=15
[DBG]    Agent 28 => controlling path length=10
[DBG]    Agent 108 => controlling path length=24
[DBG]  hodnota skip_initial_solution=1
[DBG]  We skip initialSolution => call buildCollisionData()
[DBG]  buildCollisionData() called â€“ skip_initial_solution case.
[DBG]  Agents.size()=150, collision_graph.size()=150
[DBG]  agent 7 => updateCollidingPairs => foundCollision
[DBG]  agent 28 => updateCollidingPairs => foundCollision
[DBG]  agent 35 => updateCollidingPairs => foundCollision
[DBG]  agent 42 => updateCollidingPairs => foundCollision
[DBG]  agent 46 => updateCollidingPairs => foundCollision
[DBG]  agent 70 => updateCollidingPairs => foundCollision
[DBG]  agent 102 => updateCollidingPairs => foundCollision
[DBG]  agent 108 => updateCollidingPairs => foundCollision
[DBG]  agent 135 => updateCollidingPairs => foundCollision
[DBG]  Conflicting agent pairs:
[DBG]  agent 7 is in conflict with agent 35
[DBG]  agent 7 is in conflict with agent 70
[DBG]  agent 7 is in conflict with agent 135
[DBG]  agent 28 is in conflict with agent 42
[DBG]  agent 28 is in conflict with agent 135
[DBG]  agent 46 is in conflict with agent 108
[DBG]  agent 102 is in conflict with agent 108
[DBG]  buildCollisionData() => sum_of_costs=4385, num_of_colliding_pairs=7
[DBG]  buildCollisionData done => sum_of_costs=4385, num_of_colliding_pairs=7
[DBG]  sum_of_cost hodnota: 4385
[DBG]  After skip/init build => iteration_stats.back(): sum_of_costs=4385, collisions=7
[DEBUG] Using default neighbor generation strategy for conflicts: 1
[DEBUG] Using default neighbor generation strategy for conflicts: 1
	InitLNS(PP): runtime = 0.00185233, iterations = 3, colliding pairs = 0, initial colliding pairs = 7, solution cost = 4412, initial solution cost = 4385, failed iterations = 0
[DBG]  [DEBUG] init_lns->sum_of_costs after init_lns->run: 4412
[DBG]  [DEBUG] sum_of_costs after assignment from init_lns->run: 4412
[DBG]  Recomputing sum_of_cost by dividing neighbor.sum_of_costs and neighbor.old_sum_of_costs
[STAT] sum_of_costs after recomputation: 4412
[STAT] Iteration 71
[DBG]  Using SAT operator (destroy+repair SAT).
[DBG]  ====================
[DBG]  SAT destroy operator called.
[DBG]  SAT heuristic: 2
[DBG]  key_agent_id: 28
[DBG]  key_agent_id global path length: 41
[DBG]  Submap content (global positions):
[DBG]  625 626 627 628 629 
[DBG]  657 658 659 660 661 
[DBG]  689 690 691 692 693 
[DBG]  721 722 723 724 725 
[DBG]  753 754 755 756 757 
[DBG]  Map content with agents and obstacles:
[DBG]  . X . A A 
[DBG]  . . . . . 
[DBG]  . X A A X 
[DBG]  . . X A . 
[DBG]  . X . A . 
[DBG]  content of the map structure that we pass to the SAT solver:
[DBG]  1  -1  1  1  1  
[DBG]  1  1  1  1  1  
[DBG]  1  -1  1  1  -1  
[DBG]  1  1  -1  1  1  
[DBG]  1  -1  1  1  1  
[DBG]  Identifying agents in a submap for rescheduling (when key_agent is there at the time 25):
[DBG]  Agent 3 found intervals in the sub-map:
[DBG]   [25..32]
[DBG]  Agent 3 (interval in submap: [25..32]) contains time 25, added to replan.
[DBG]  Agent 28 found intervals in the sub-map:
[DBG]   [0..38]
[DBG]  Agent 28 (interval in submap: [0..38]) contains time 25, added to replan.
[DBG]  Agent 45 found intervals in the sub-map:
[DBG]   [21..25]
[DBG]  Agent 45 (interval in submap: [21..25]) contains time 25, added to replan.
[DBG]  Agent 53 found intervals in the sub-map:
[DBG]   [23..27]
[DBG]  Agent 53 (interval in submap: [23..27]) contains time 25, added to replan.
[DBG]  Agent 57 found intervals in the sub-map:
[DBG]   [27..33]
[DBG]  Agent 57 is not in sub-map at time 25 (intervals: 
[DBG]  [27..33] )
[DBG]  Agent 71 found intervals in the sub-map:
[DBG]   [20..26]
[DBG]  Agent 71 (interval in submap: [20..26]) contains time 25, added to replan.
[DBG]  Agent 100 found intervals in the sub-map:
[DBG]   [23..33]
[DBG]  Agent 100 (interval in submap: [23..33]) contains time 25, added to replan.
[DBG]  Agent 135 found intervals in the sub-map:
[DBG]   [10..17]
[DBG]  Agent 135 is not in sub-map at time 25 (intervals: 
[DBG]  [10..17] )
[DBG]  Agent 148 found intervals in the sub-map:
[DBG]   [35..38]
[DBG]  Agent 148 is not in sub-map at time 25 (intervals: 
[DBG]  [35..38] )
[DBG]  Agent 3 | Start (global): 628 -> (local): (0, 3) at time 25 | Goal (global): 755 -> (local): (4, 2) at time 32
[DBG]  Agent 28 | Start (global): 691 -> (local): (2, 2) at time 25 | Goal (global): 725 -> (local): (3, 4) at time 38
[DBG]  Agent 45 | Start (global): 756 -> (local): (4, 3) at time 25 | Goal (global): 756 -> (local): (4, 3) at time 25
[DBG]  Agent 53 | Start (global): 692 -> (local): (2, 3) at time 25 | Goal (global): 756 -> (local): (4, 3) at time 27
[DBG]  Agent 71 | Start (global): 724 -> (local): (3, 3) at time 25 | Goal (global): 756 -> (local): (4, 3) at time 26
[DBG]  Agent 100 | Start (global): 629 -> (local): (0, 4) at time 25 | Goal (global): 753 -> (local): (4, 0) at time 33
[DBG]  [REPAIR] SAT destroy operator called.
[DBG]  [REPAIR] SAT operator â€“ launching subproblem FOR OPTIMIZATION.
[DBG]  Creating local paths (sx, sy) in the submap for T_sync = 25
[DBG]    Agent 3 (global paths from T=25 to 32) has local path: (0,3) (1,3) (1,2) (2,2) (2,3) (3,3) (4,3) (4,2) 
[DBG]    Agent 28 (global paths from T=25 to 38) has local path: (2,2) (2,3) (1,3) (1,3) (1,3) (1,3) (1,3) (1,3) (1,3) (1,3) (1,3) (2,3) (3,3) (3,4) 
[DBG]    Agent 45 (global paths from T=25 to 25) has local path: (4,3) 
[DBG]    Agent 53 (global paths from T=25 to 27) has local path: (2,3) (3,3) (4,3) 
[DBG]    Agent 71 (global paths from T=25 to 26) has local path: (3,3) (4,3) 
[DBG]    Agent 100 (global paths from T=25 to 33) has local path: (0,4) (0,3) (0,2) (1,2) (1,1) (1,0) (2,0) (3,0) (4,0) 
[DBG]  Checking input data for SAT solver:
[DBG]    - Number of agents to replan: 6
[DBG]  Agent 3 has the original local path length: 8 => Start (0,3), Goal (4,2)
[DBG]  Agent 28 has the original local path length: 14 => Start (2,2), Goal (3,4)
[DBG]  Agent 45 has the original local path length: 1 => Start (4,3), Goal (4,3)
[DBG]  Agent 53 has the original local path length: 3 => Start (2,3), Goal (4,3)
[DBG]  Agent 71 has the original local path length: 2 => Start (3,3), Goal (4,3)
[DBG]  Agent 100 has the original local path length: 9 => Start (0,4), Goal (4,0)
[DBG]  Start position: (0, 3), (2, 2), (4, 3), (2, 3), (3, 3), (0, 4), 
[DBG]  Goal position: (4, 2), (3, 4), (4, 3), (4, 3), (4, 3), (4, 0), 
[DBG]  SAT instance and solver created.
Currently solving
Instance name: scen
Map name: map
Encoding used: disappear_at_goal
SAT solver used: Kissat
Optimizing function: sum of costs
Number of agents: 6
Mks LB: 9
SoC LB: 25
Delta: 0
Remaining time: 300000 [ms]

Vertex conflict! Agents 0, 1, timestep 6, location 0
Swapping conflict! Agents 0, 1, timestep 6, edge (0,0)
Vertex conflict! Agents 0, 1, timestep 7, location 0
Swapping conflict! Agents 0, 1, timestep 7, edge (0,0)
Vertex conflict! Agents 0, 1, timestep 8, location 0
Vertex conflict! Agents 0, 2, timestep 6, location 0
Swapping conflict! Agents 0, 2, timestep 6, edge (0,0)
Vertex conflict! Agents 0, 2, timestep 7, location 0
Swapping conflict! Agents 0, 2, timestep 7, edge (0,0)
Vertex conflict! Agents 0, 2, timestep 8, location 0
Vertex conflict! Agents 0, 3, timestep 6, location 0
Swapping conflict! Agents 0, 3, timestep 6, edge (0,0)
Vertex conflict! Agents 0, 3, timestep 7, location 0
Swapping conflict! Agents 0, 3, timestep 7, edge (0,0)
Vertex conflict! Agents 0, 3, timestep 8, location 0
Vertex conflict! Agents 0, 4, timestep 6, location 0
Swapping conflict! Agents 0, 4, timestep 6, edge (0,0)
Vertex conflict! Agents 0, 4, timestep 7, location 0
Swapping conflict! Agents 0, 4, timestep 7, edge (0,0)
Vertex conflict! Agents 0, 4, timestep 8, location 0
Vertex conflict! Agents 1, 2, timestep 4, location 0
Swapping conflict! Agents 1, 2, timestep 4, edge (0,0)
Vertex conflict! Agents 1, 2, timestep 5, location 0
Swapping conflict! Agents 1, 2, timestep 5, edge (0,0)
Vertex conflict! Agents 1, 2, timestep 6, location 0
Swapping conflict! Agents 1, 2, timestep 6, edge (0,0)
Vertex conflict! Agents 1, 2, timestep 7, location 0
Swapping conflict! Agents 1, 2, timestep 7, edge (0,0)
Vertex conflict! Agents 1, 2, timestep 8, location 0
Vertex conflict! Agents 1, 3, timestep 4, location 0
Swapping conflict! Agents 1, 3, timestep 4, edge (0,0)
Vertex conflict! Agents 1, 3, timestep 5, location 0
Swapping conflict! Agents 1, 3, timestep 5, edge (0,0)
Vertex conflict! Agents 1, 3, timestep 6, location 0
Swapping conflict! Agents 1, 3, timestep 6, edge (0,0)
Vertex conflict! Agents 1, 3, timestep 7, location 0
Swapping conflict! Agents 1, 3, timestep 7, edge (0,0)
Vertex conflict! Agents 1, 3, timestep 8, location 0
Vertex conflict! Agents 1, 4, timestep 4, location 0
Swapping conflict! Agents 1, 4, timestep 4, edge (0,0)
Vertex conflict! Agents 1, 4, timestep 5, location 0
Swapping conflict! Agents 1, 4, timestep 5, edge (0,0)
Vertex conflict! Agents 1, 4, timestep 6, location 0
Swapping conflict! Agents 1, 4, timestep 6, edge (0,0)
Vertex conflict! Agents 1, 4, timestep 7, location 0
Swapping conflict! Agents 1, 4, timestep 7, edge (0,0)
Vertex conflict! Agents 1, 4, timestep 8, location 0
Vertex conflict! Agents 2, 3, timestep 3, location 0
Swapping conflict! Agents 2, 3, timestep 3, edge (0,0)
Vertex conflict! Agents 2, 3, timestep 4, location 0
Swapping conflict! Agents 2, 3, timestep 4, edge (0,0)
Vertex conflict! Agents 2, 3, timestep 5, location 0
Swapping conflict! Agents 2, 3, timestep 5, edge (0,0)
Vertex conflict! Agents 2, 3, timestep 6, location 0
Swapping conflict! Agents 2, 3, timestep 6, edge (0,0)
Vertex conflict! Agents 2, 3, timestep 7, location 0
Swapping conflict! Agents 2, 3, timestep 7, edge (0,0)
Vertex conflict! Agents 2, 3, timestep 8, location 0
Vertex conflict! Agents 2, 4, timestep 2, location 0
Swapping conflict! Agents 2, 4, timestep 2, edge (0,0)
Vertex conflict! Agents 2, 4, timestep 3, location 0
Swapping conflict! Agents 2, 4, timestep 3, edge (0,0)
Vertex conflict! Agents 2, 4, timestep 4, location 0
Swapping conflict! Agents 2, 4, timestep 4, edge (0,0)
Vertex conflict! Agents 2, 4, timestep 5, location 0
Swapping conflict! Agents 2, 4, timestep 5, edge (0,0)
Vertex conflict! Agents 2, 4, timestep 6, location 0
Swapping conflict! Agents 2, 4, timestep 6, edge (0,0)
Vertex conflict! Agents 2, 4, timestep 7, location 0
Swapping conflict! Agents 2, 4, timestep 7, edge (0,0)
Vertex conflict! Agents 2, 4, timestep 8, location 0
Vertex conflict! Agents 3, 4, timestep 3, location 0
Swapping conflict! Agents 3, 4, timestep 3, edge (0,0)
Vertex conflict! Agents 3, 4, timestep 4, location 0
Swapping conflict! Agents 3, 4, timestep 4, edge (0,0)
Vertex conflict! Agents 3, 4, timestep 5, location 0
Swapping conflict! Agents 3, 4, timestep 5, edge (0,0)
Vertex conflict! Agents 3, 4, timestep 6, location 0
Swapping conflict! Agents 3, 4, timestep 6, edge (0,0)
Vertex conflict! Agents 3, 4, timestep 7, location 0
Swapping conflict! Agents 3, 4, timestep 7, edge (0,0)
Vertex conflict! Agents 3, 4, timestep 8, location 0
Found plan [agents = 6] [timesteps = 9]
Agent #0 : 2 7 11 14 18 17 0 0 0 
Agent #1 : 10 11 14 15 0 0 0 0 0 
Agent #2 : 18 0 0 0 0 0 0 0 0 
Agent #3 : 11 14 18 0 0 0 0 0 0 
Agent #4 : 14 18 0 0 0 0 0 0 0 
Agent #5 : 3 8 7 6 5 4 9 12 16 

[STAT] Solver returned: 0
[DBG]  Agent (index) 3 | New local path (submap idx):
[DBG]  2 7 11 14 18 17 
[DBG]  Agent (index) 28 | New local path (submap idx):
[DBG]  10 11 14 15 
[DBG]  Agent (index) 45 | New local path (submap idx):
[DBG]  18 
[DBG]  Agent (index) 53 | New local path (submap idx):
[DBG]  11 14 18 
[DBG]  Agent (index) 71 | New local path (submap idx):
[DBG]  14 18 
[DBG]  Agent (index) 100 | New local path (submap idx):
[DBG]  3 8 7 6 5 4 9 12 16 
[DBG]  Update the agent path 3 | Original local length: 8 | New local length: 6
[DBG]  agent 3 t=0 => decoded (sx,sy)=(0,3) => global_id=628
[DBG]  agent 3 t=1 => decoded (sx,sy)=(1,3) => global_id=660
[DBG]  agent 3 t=2 => decoded (sx,sy)=(2,3) => global_id=692
[DBG]  agent 3 t=3 => decoded (sx,sy)=(3,3) => global_id=724
[DBG]  agent 3 t=4 => decoded (sx,sy)=(4,3) => global_id=756
[DBG]  agent 3 t=5 => decoded (sx,sy)=(4,2) => global_id=755
[DBG]  Complete path of agent 3:
[DBG]    Original: 468 468 468 468 468 468 468 468 468 468 468 468 469 470 502 534 502 502 470 469 501 533 565 597 596 628 660 659 691 692 724 756 755 787 786 818 850 882 914 946 946 914 913 912 
[DBG]    New:     468 468 468 468 468 468 468 468 468 468 468 468 469 470 502 534 502 502 470 469 501 533 565 597 596 628 660 692 724 756 755 787 786 818 850 882 914 946 946 914 913 912 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 468 468 468 468 468 468 468 468 468 468 468 468 469 470 502 534 502 502 470 469 501 533 565 597 596 
[DBG]    Local path (in submap): 628 660 692 724 756 755 787 786 
[DBG]    Suffix (out of submap): 818 850 882 914 946 946 914 913 912 
[DBG]  Original agent path length 3 je: 44
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 0: 468, 468, 468, 468, 468, 468, 468, 468, 468, 468, 468, 468, 469, 470, 502, 534, 502, 502, 470, 469, 501, 533, 565, 597, 596, 628, 660, 692, 724, 756, 755, 787, 786, 818, 850, 882, 914, 946, 946, 914, 913, 912, 
[DBG]  Path for agent 3 updated, resulting length: 42
[DBG]  Update the agent path 28 | Original local length: 14 | New local length: 4
[DBG]  agent 28 t=0 => decoded (sx,sy)=(2,2) => global_id=691
[DBG]  agent 28 t=1 => decoded (sx,sy)=(2,3) => global_id=692
[DBG]  agent 28 t=2 => decoded (sx,sy)=(3,3) => global_id=724
[DBG]  agent 28 t=3 => decoded (sx,sy)=(3,4) => global_id=725
[DBG]  Complete path of agent 28:
[DBG]    Original: 661 661 660 660 660 660 660 660 660 660 692 691 659 659 660 628 629 629 629 629 629 629 628 660 659 691 692 660 660 660 660 660 660 660 660 660 692 724 725 726 727 
[DBG]    New:     661 661 660 660 660 660 660 660 660 660 692 691 659 659 660 628 629 629 629 629 629 629 628 660 659 691 692 724 725 726 727 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 661 661 660 660 660 660 660 660 660 660 692 691 659 659 660 628 629 629 629 629 629 629 628 660 659 
[DBG]    Local path (in submap): 691 692 724 725 726 727 
[DBG]    Suffix (out of submap): 
[DBG]  Original agent path length 28 je: 41
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 1: 661, 661, 660, 660, 660, 660, 660, 660, 660, 660, 692, 691, 659, 659, 660, 628, 629, 629, 629, 629, 629, 629, 628, 660, 659, 691, 692, 724, 725, 726, 727, 
[DBG]  Path for agent 28 updated, resulting length: 31
[DBG]  Update the agent path 45 | Original local length: 1 | New local length: 1
[DBG]  agent 45 t=0 => decoded (sx,sy)=(4,3) => global_id=756
[DBG]  Complete path of agent 45:
[DBG]    Original: 153 185 217 249 281 313 312 311 343 375 407 407 406 438 437 469 501 533 565 597 596 628 660 692 724 756 788 820 819 818 817 849 
[DBG]    New:     153 185 217 249 281 313 312 311 343 375 407 407 406 438 437 469 501 533 565 597 596 628 660 692 724 756 788 820 819 818 817 849 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 153 185 217 249 281 313 312 311 343 375 407 407 406 438 437 469 501 533 565 597 596 628 660 692 724 
[DBG]    Local path (in submap): 756 
[DBG]    Suffix (out of submap): 788 820 819 818 817 849 
[DBG]  Original agent path length 45 je: 32
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 2: 153, 185, 217, 249, 281, 313, 312, 311, 343, 375, 407, 407, 406, 438, 437, 469, 501, 533, 565, 597, 596, 628, 660, 692, 724, 756, 788, 820, 819, 818, 817, 849, 
[DBG]  Path for agent 45 updated, resulting length: 32
[DBG]  Update the agent path 53 | Original local length: 3 | New local length: 3
[DBG]  agent 53 t=0 => decoded (sx,sy)=(2,3) => global_id=692
[DBG]  agent 53 t=1 => decoded (sx,sy)=(3,3) => global_id=724
[DBG]  agent 53 t=2 => decoded (sx,sy)=(4,3) => global_id=756
[DBG]  Complete path of agent 53:
[DBG]    Original: 84 116 117 149 150 151 183 215 247 279 311 343 375 407 406 405 437 469 501 533 565 597 596 628 660 692 724 756 788 820 821 
[DBG]    New:     84 116 117 149 150 151 183 215 247 279 311 343 375 407 406 405 437 469 501 533 565 597 596 628 660 692 724 756 788 820 821 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 84 116 117 149 150 151 183 215 247 279 311 343 375 407 406 405 437 469 501 533 565 597 596 628 660 
[DBG]    Local path (in submap): 692 724 756 
[DBG]    Suffix (out of submap): 788 820 821 
[DBG]  Original agent path length 53 je: 31
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 3: 84, 116, 117, 149, 150, 151, 183, 215, 247, 279, 311, 343, 375, 407, 406, 405, 437, 469, 501, 533, 565, 597, 596, 628, 660, 692, 724, 756, 788, 820, 821, 
[DBG]  Path for agent 53 updated, resulting length: 31
[DBG]  Update the agent path 71 | Original local length: 2 | New local length: 2
[DBG]  agent 71 t=0 => decoded (sx,sy)=(3,3) => global_id=724
[DBG]  agent 71 t=1 => decoded (sx,sy)=(4,3) => global_id=756
[DBG]  Complete path of agent 71:
[DBG]    Original: 482 483 484 485 486 487 519 520 521 522 523 555 587 588 589 590 622 654 655 656 657 658 659 691 692 724 756 788 820 821 822 823 855 887 919 
[DBG]    New:     482 483 484 485 486 487 519 520 521 522 523 555 587 588 589 590 622 654 655 656 657 658 659 691 692 724 756 788 820 821 822 823 855 887 919 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 482 483 484 485 486 487 519 520 521 522 523 555 587 588 589 590 622 654 655 656 657 658 659 691 692 
[DBG]    Local path (in submap): 724 756 
[DBG]    Suffix (out of submap): 788 820 821 822 823 855 887 919 
[DBG]  Original agent path length 71 je: 35
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 4: 482, 483, 484, 485, 486, 487, 519, 520, 521, 522, 523, 555, 587, 588, 589, 590, 622, 654, 655, 656, 657, 658, 659, 691, 692, 724, 756, 788, 820, 821, 822, 823, 855, 887, 919, 
[DBG]  Path for agent 71 updated, resulting length: 35
[DBG]  Update the agent path 100 | Original local length: 9 | New local length: 9
[DBG]  agent 100 t=0 => decoded (sx,sy)=(0,4) => global_id=629
[DBG]  agent 100 t=1 => decoded (sx,sy)=(1,4) => global_id=661
[DBG]  agent 100 t=2 => decoded (sx,sy)=(1,3) => global_id=660
[DBG]  agent 100 t=3 => decoded (sx,sy)=(1,2) => global_id=659
[DBG]  agent 100 t=4 => decoded (sx,sy)=(1,1) => global_id=658
[DBG]  agent 100 t=5 => decoded (sx,sy)=(1,0) => global_id=657
[DBG]  agent 100 t=6 => decoded (sx,sy)=(2,0) => global_id=689
[DBG]  agent 100 t=7 => decoded (sx,sy)=(3,0) => global_id=721
[DBG]  agent 100 t=8 => decoded (sx,sy)=(4,0) => global_id=753
[DBG]  Complete path of agent 100:
[DBG]    Original: 287 319 351 350 349 381 380 379 378 377 376 408 440 440 439 438 470 470 469 501 533 565 597 629 629 629 628 627 659 658 657 689 721 753 752 784 783 815 847 879 878 877 909 941 973 1005 1004 1003 
[DBG]    New:     287 319 351 350 349 381 380 379 378 377 376 408 440 440 439 438 470 470 469 501 533 565 597 629 629 629 661 660 659 658 657 689 721 753 752 784 783 815 847 879 878 877 909 941 973 1005 1004 1003 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 287 319 351 350 349 381 380 379 378 377 376 408 440 440 439 438 470 470 469 501 533 565 597 629 629 
[DBG]    Local path (in submap): 629 661 660 659 658 657 689 721 753 
[DBG]    Suffix (out of submap): 752 784 783 815 847 879 878 877 909 941 973 1005 1004 1003 
[DBG]  Original agent path length 100 je: 48
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 5: 287, 319, 351, 350, 349, 381, 380, 379, 378, 377, 376, 408, 440, 440, 439, 438, 470, 470, 469, 501, 533, 565, 597, 629, 629, 629, 661, 660, 659, 658, 657, 689, 721, 753, 752, 784, 783, 815, 847, 879, 878, 877, 909, 941, 973, 1005, 1004, 1003, 
[DBG]  Path for agent 100 updated, resulting length: 48
[DBG]  Paths successfully updated.
[DBG]  (LNS.cpp) New path for agent 3: 
[DBG]  468, 468, 468, 468, 468, 468, 468, 468, 468, 468, 468, 468, 469, 470, 502, 534, 502, 502, 470, 469, 501, 533, 565, 597, 596, 628, 660, 692, 724, 756, 755, 787, 786, 818, 850, 882, 914, 946, 946, 914, 913, 912, 
[DBG]  (LNS.cpp) New path for agent 28: 
[DBG]  661, 661, 660, 660, 660, 660, 660, 660, 660, 660, 692, 691, 659, 659, 660, 628, 629, 629, 629, 629, 629, 629, 628, 660, 659, 691, 692, 724, 725, 726, 727, 
[DBG]  (LNS.cpp) New path for agent 45: 
[DBG]  153, 185, 217, 249, 281, 313, 312, 311, 343, 375, 407, 407, 406, 438, 437, 469, 501, 533, 565, 597, 596, 628, 660, 692, 724, 756, 788, 820, 819, 818, 817, 849, 
[DBG]  (LNS.cpp) New path for agent 53: 
[DBG]  84, 116, 117, 149, 150, 151, 183, 215, 247, 279, 311, 343, 375, 407, 406, 405, 437, 469, 501, 533, 565, 597, 596, 628, 660, 692, 724, 756, 788, 820, 821, 
[DBG]  (LNS.cpp) New path for agent 71: 
[DBG]  482, 483, 484, 485, 486, 487, 519, 520, 521, 522, 523, 555, 587, 588, 589, 590, 622, 654, 655, 656, 657, 658, 659, 691, 692, 724, 756, 788, 820, 821, 822, 823, 855, 887, 919, 
[DBG]  (LNS.cpp) New path for agent 100: 
[DBG]  287, 319, 351, 350, 349, 381, 380, 379, 378, 377, 376, 408, 440, 440, 439, 438, 470, 470, 469, 501, 533, 565, 597, 629, 629, 629, 661, 660, 659, 658, 657, 689, 721, 753, 752, 784, 783, 815, 847, 879, 878, 877, 909, 941, 973, 1005, 1004, 1003, 
[DBG]  Delta value: 0.0533333
[DBG]  Rewarding metric index = 0
[DBG]  component_weights = {0.973843, 0.0123841, 0.00681125, 0.00696165}
[DBG]  opSuccess value: 1
[STAT] neighbor.sum_of_costs before recomputation: 213
[STAT] neighbor.old_sum_of_costs before recomputation: 225
[STAT] sum_of_costs before recomputation: 4412
[DBG]  Validate solution immediately after SAT success.
[WARNING] Problem after SAT: Target conflict: agent 57 (len 45) traverses target of agent 3 (len 41) at location 912 at timestep 42
[DBG]  [DEBUG] Attempting immediate repair via init_lns because problem occurred after SAT (should be applied only for conflicts...).
[DBG]  [DEBUG] Passing 150 agents to init_lns (skip=true).
[DBG]  [DEBUG] path_table contents for selected agents (neighbor.agents):
[DBG]    Agent 3 => controlling path length=42
[DBG]    Agent 28 => controlling path length=31
[DBG]    Agent 45 => controlling path length=32
[DBG]    Agent 53 => controlling path length=31
[DBG]    Agent 71 => controlling path length=35
[DBG]    Agent 100 => controlling path length=48
[DBG]  hodnota skip_initial_solution=1
[DBG]  We skip initialSolution => call buildCollisionData()
[DBG]  buildCollisionData() called â€“ skip_initial_solution case.
[DBG]  Agents.size()=150, collision_graph.size()=150
[DBG]  agent 3 => updateCollidingPairs => foundCollision
[DBG]  agent 28 => updateCollidingPairs => foundCollision
[DBG]  agent 42 => updateCollidingPairs => foundCollision
[DBG]  agent 57 => updateCollidingPairs => foundCollision
[DBG]  Conflicting agent pairs:
[DBG]  agent 3 is in conflict with agent 57
[DBG]  agent 28 is in conflict with agent 42
[DBG]  buildCollisionData() => sum_of_costs=4400, num_of_colliding_pairs=2
[DBG]  buildCollisionData done => sum_of_costs=4400, num_of_colliding_pairs=2
[DBG]  sum_of_cost hodnota: 4400
[DBG]  After skip/init build => iteration_stats.back(): sum_of_costs=4400, collisions=2
[DEBUG] Using default neighbor generation strategy for conflicts: 0
[DEBUG] Using default neighbor generation strategy for conflicts: 0
[DEBUG] Using default neighbor generation strategy for conflicts: 2
	InitLNS(PP): runtime = 0.0066045, iterations = 4, colliding pairs = 0, initial colliding pairs = 2, solution cost = 4423, initial solution cost = 4400, failed iterations = 1
[DBG]  [DEBUG] init_lns->sum_of_costs after init_lns->run: 4423
[DBG]  [DEBUG] sum_of_costs after assignment from init_lns->run: 4423
[DBG]  Recomputing sum_of_cost by dividing neighbor.sum_of_costs and neighbor.old_sum_of_costs
[STAT] sum_of_costs after recomputation: 4423
[STAT] Iteration 72
[DBG]  Using SAT operator (destroy+repair SAT).
[DBG]  ====================
[DBG]  SAT destroy operator called.
[DBG]  SAT heuristic: 2
[DBG]  key_agent_id: 28
[DBG]  key_agent_id global path length: 41
[DBG]  Submap content (global positions):
[DBG]  595 596 597 598 599 
[DBG]  627 628 629 630 631 
[DBG]  659 660 661 662 663 
[DBG]  691 692 693 694 695 
[DBG]  723 724 725 726 727 
[DBG]  Map content with agents and obstacles:
[DBG]  X A . X . 
[DBG]  . A . X . 
[DBG]  A . A X X 
[DBG]  . . X X X 
[DBG]  X A . . . 
[DBG]  content of the map structure that we pass to the SAT solver:
[DBG]  -1  1  1  -1  1  
[DBG]  1  1  1  -1  1  
[DBG]  1  1  1  -1  -1  
[DBG]  1  1  -1  -1  -1  
[DBG]  -1  1  1  1  1  
[DBG]  Identifying agents in a submap for rescheduling (when key_agent is there at the time 11):
[DBG]  Agent 28 found intervals in the sub-map:
[DBG]   [0..40]
[DBG]  Agent 28 (interval in submap: [0..40]) contains time 11, added to replan.
[DBG]  Agent 86 found intervals in the sub-map:
[DBG]  
[DBG]  Agent 86 is not in sub-map at time 11 (intervals: 
[DBG]  )
[DBG]  Agent 89 found intervals in the sub-map:
[DBG]   [7..14]
[DBG]  Agent 89 (interval in submap: [7..14]) contains time 11, added to replan.
[DBG]  Agent 109 found intervals in the sub-map:
[DBG]   [8..15]
[DBG]  Agent 109 (interval in submap: [8..15]) contains time 11, added to replan.
[DBG]  Agent 131 found intervals in the sub-map:
[DBG]   [10..15]
[DBG]  Agent 131 (interval in submap: [10..15]) contains time 11, added to replan.
[DBG]  Agent 135 found intervals in the sub-map:
[DBG]   [4..4] [8..14]
[DBG]  Agent 135 (interval in submap: [8..14]) contains time 11, added to replan.
[DBG]  Agent 28 | Start (global): 661 -> (local): (2, 2) at time 11 | Goal (global): 727 -> (local): (4, 4) at time 40
[DBG]  Agent 89 | Start (global): 628 -> (local): (1, 1) at time 11 | Goal (global): 724 -> (local): (4, 1) at time 14
[DBG]  Agent 109 | Start (global): 659 -> (local): (2, 0) at time 11 | Goal (global): 597 -> (local): (0, 2) at time 15
[DBG]  Agent 131 | Start (global): 596 -> (local): (0, 1) at time 11 | Goal (global): 724 -> (local): (4, 1) at time 15
[DBG]  Agent 135 | Start (global): 724 -> (local): (4, 1) at time 11 | Goal (global): 659 -> (local): (2, 0) at time 14
[DBG]  [REPAIR] SAT destroy operator called.
[DBG]  [REPAIR] SAT operator â€“ launching subproblem FOR OPTIMIZATION.
[DBG]  Creating local paths (sx, sy) in the submap for T_sync = 11
[DBG]    Agent 28 (global paths from T=11 to 40) has local path: (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,1) (2,1) (2,1) (2,1) (2,1) (2,1) (2,1) (2,1) (2,1) (3,1) (4,1) (4,2) (4,3) (4,4) 
[DBG]    Agent 89 (global paths from T=11 to 14) has local path: (1,1) (2,1) (3,1) (4,1) 
[DBG]    Agent 109 (global paths from T=11 to 15) has local path: (2,0) (1,0) (1,1) (1,2) (0,2) 
[DBG]    Agent 131 (global paths from T=11 to 15) has local path: (0,1) (1,1) (2,1) (3,1) (4,1) 
[DBG]    Agent 135 (global paths from T=11 to 14) has local path: (4,1) (3,1) (3,0) (2,0) 
[DBG]  Checking input data for SAT solver:
[DBG]    - Number of agents to replan: 5
[DBG]  Agent 28 has the original local path length: 30 => Start (2,2), Goal (4,4)
[DBG]  Agent 89 has the original local path length: 4 => Start (1,1), Goal (4,1)
[DBG]  Agent 109 has the original local path length: 5 => Start (2,0), Goal (0,2)
[DBG]  Agent 131 has the original local path length: 5 => Start (0,1), Goal (4,1)
[DBG]  Agent 135 has the original local path length: 4 => Start (4,1), Goal (2,0)
[DBG]  Start position: (2, 2), (1, 1), (2, 0), (0, 1), (4, 1), 
[DBG]  Goal position: (4, 4), (4, 1), (0, 2), (4, 1), (2, 0), 
[DBG]  SAT instance and solver created.
Currently solving
Instance name: scen
Map name: map
Encoding used: disappear_at_goal
SAT solver used: Kissat
Optimizing function: sum of costs
Number of agents: 5
Mks LB: 7
SoC LB: 25
Delta: 0
Remaining time: 300000 [ms]

[STAT] Solver returned: -1
[DBG]  SAT solver failed.
[STAT] SAT solver failed to find a valid solution.
[DBG]  ====================
[DBG]  SAT destroy operator called.
[DBG]  SAT heuristic: 2
[DBG]  key_agent_id: 28
[DBG]  key_agent_id global path length: 41
[DBG]  Submap content (global positions):
[DBG]  595 596 597 598 599 
[DBG]  627 628 629 630 631 
[DBG]  659 660 661 662 663 
[DBG]  691 692 693 694 695 
[DBG]  723 724 725 726 727 
[DBG]  Map content with agents and obstacles:
[DBG]  X A . X . 
[DBG]  . A . X . 
[DBG]  A . A X X 
[DBG]  . . X X X 
[DBG]  X A . . . 
[DBG]  content of the map structure that we pass to the SAT solver:
[DBG]  -1  1  1  -1  1  
[DBG]  1  1  1  -1  1  
[DBG]  1  1  1  -1  -1  
[DBG]  1  1  -1  -1  -1  
[DBG]  -1  1  1  1  1  
[DBG]  Identifying agents in a submap for rescheduling (when key_agent is there at the time 11):
[DBG]  Agent 28 found intervals in the sub-map:
[DBG]   [0..40]
[DBG]  Agent 28 (interval in submap: [0..40]) contains time 11, added to replan.
[DBG]  Agent 86 found intervals in the sub-map:
[DBG]  
[DBG]  Agent 86 is not in sub-map at time 11 (intervals: 
[DBG]  )
[DBG]  Agent 89 found intervals in the sub-map:
[DBG]   [7..14]
[DBG]  Agent 89 (interval in submap: [7..14]) contains time 11, added to replan.
[DBG]  Agent 109 found intervals in the sub-map:
[DBG]   [8..15]
[DBG]  Agent 109 (interval in submap: [8..15]) contains time 11, added to replan.
[DBG]  Agent 131 found intervals in the sub-map:
[DBG]   [10..15]
[DBG]  Agent 131 (interval in submap: [10..15]) contains time 11, added to replan.
[DBG]  Agent 135 found intervals in the sub-map:
[DBG]   [4..4] [8..14]
[DBG]  Agent 135 (interval in submap: [8..14]) contains time 11, added to replan.
[DBG]  Agent 28 | Start (global): 661 -> (local): (2, 2) at time 11 | Goal (global): 727 -> (local): (4, 4) at time 40
[DBG]  Agent 89 | Start (global): 628 -> (local): (1, 1) at time 11 | Goal (global): 724 -> (local): (4, 1) at time 14
[DBG]  Agent 109 | Start (global): 659 -> (local): (2, 0) at time 11 | Goal (global): 597 -> (local): (0, 2) at time 15
[DBG]  Agent 131 | Start (global): 596 -> (local): (0, 1) at time 11 | Goal (global): 724 -> (local): (4, 1) at time 15
[DBG]  Agent 135 | Start (global): 724 -> (local): (4, 1) at time 11 | Goal (global): 659 -> (local): (2, 0) at time 14
[DBG]  [REPAIR] SAT destroy operator called.
[DBG]  [REPAIR] SAT operator â€“ launching subproblem FOR OPTIMIZATION.
[DBG]  Creating local paths (sx, sy) in the submap for T_sync = 11
[DBG]    Agent 28 (global paths from T=11 to 40) has local path: (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,1) (2,1) (2,1) (2,1) (2,1) (2,1) (2,1) (2,1) (2,1) (3,1) (4,1) (4,2) (4,3) (4,4) 
[DBG]    Agent 89 (global paths from T=11 to 14) has local path: (1,1) (2,1) (3,1) (4,1) 
[DBG]    Agent 109 (global paths from T=11 to 15) has local path: (2,0) (1,0) (1,1) (1,2) (0,2) 
[DBG]    Agent 131 (global paths from T=11 to 15) has local path: (0,1) (1,1) (2,1) (3,1) (4,1) 
[DBG]    Agent 135 (global paths from T=11 to 14) has local path: (4,1) (3,1) (3,0) (2,0) 
[DBG]  Checking input data for SAT solver:
[DBG]    - Number of agents to replan: 5
[DBG]  Agent 28 has the original local path length: 30 => Start (2,2), Goal (4,4)
[DBG]  Agent 89 has the original local path length: 4 => Start (1,1), Goal (4,1)
[DBG]  Agent 109 has the original local path length: 5 => Start (2,0), Goal (0,2)
[DBG]  Agent 131 has the original local path length: 5 => Start (0,1), Goal (4,1)
[DBG]  Agent 135 has the original local path length: 4 => Start (4,1), Goal (2,0)
[DBG]  Start position: (2, 2), (1, 1), (2, 0), (0, 1), (4, 1), 
[DBG]  Goal position: (4, 4), (4, 1), (0, 2), (4, 1), (2, 0), 
[DBG]  SAT instance and solver created.
Currently solving
Instance name: scen
Map name: map
Encoding used: disappear_at_goal
SAT solver used: Kissat
Optimizing function: sum of costs
Number of agents: 5
Mks LB: 7
SoC LB: 25
Delta: 0
Remaining time: 300000 [ms]

[STAT] Solver returned: -1
[DBG]  SAT solver failed.
[STAT] SAT solver failed to find a valid solution.
[DBG]  ====================
[DBG]  SAT destroy operator called.
[DBG]  SAT heuristic: 2
[DBG]  key_agent_id: 28
[DBG]  key_agent_id global path length: 41
[DBG]  Submap content (global positions):
[DBG]  595 596 597 598 599 
[DBG]  627 628 629 630 631 
[DBG]  659 660 661 662 663 
[DBG]  691 692 693 694 695 
[DBG]  723 724 725 726 727 
[DBG]  Map content with agents and obstacles:
[DBG]  X . . X . 
[DBG]  . . . X . 
[DBG]  . . A X X 
[DBG]  . . X X X 
[DBG]  X . . . . 
[DBG]  content of the map structure that we pass to the SAT solver:
[DBG]  -1  1  1  -1  1  
[DBG]  1  1  1  -1  1  
[DBG]  1  1  1  -1  -1  
[DBG]  1  1  -1  -1  -1  
[DBG]  -1  1  1  1  1  
[DBG]  Identifying agents in a submap for rescheduling (when key_agent is there at the time 18):
[DBG]  Agent 3 found intervals in the sub-map:
[DBG]   [23..28]
[DBG]  Agent 3 is not in sub-map at time 18 (intervals: 
[DBG]  [23..28] )
[DBG]  Agent 28 found intervals in the sub-map:
[DBG]   [0..40]
[DBG]  Agent 28 (interval in submap: [0..40]) contains time 18, added to replan.
[DBG]  Agent 30 found intervals in the sub-map:
[DBG]  
[DBG]  Agent 30 is not in sub-map at time 18 (intervals: 
[DBG]  )
[DBG]  Agent 79 found intervals in the sub-map:
[DBG]  
[DBG]  Agent 79 is not in sub-map at time 18 (intervals: 
[DBG]  )
[DBG]  Agent 28 | Start (global): 661 -> (local): (2, 2) at time 18 | Goal (global): 727 -> (local): (4, 4) at time 40
[DBG]  [REPAIR] SAT destroy operator called.
[DBG]  [REPAIR] SAT operator â€“ launching subproblem FOR OPTIMIZATION.
[DBG]  Creating local paths (sx, sy) in the submap for T_sync = 18
[DBG]    Agent 28 (global paths from T=18 to 40) has local path: (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,1) (2,1) (2,1) (2,1) (2,1) (2,1) (2,1) (2,1) (2,1) (3,1) (4,1) (4,2) (4,3) (4,4) 
[DBG]  Checking input data for SAT solver:
[DBG]    - Number of agents to replan: 1
[DBG]  Agent 28 has the original local path length: 23 => Start (2,2), Goal (4,4)
[DBG]  Start position: (2, 2), 
[DBG]  Goal position: (4, 4), 
[DBG]  SAT instance and solver created.
Currently solving
Instance name: scen
Map name: map
Encoding used: disappear_at_goal
SAT solver used: Kissat
Optimizing function: sum of costs
Number of agents: 1
Mks LB: 7
SoC LB: 7
Delta: 0
Remaining time: 300000 [ms]

Found plan [agents = 1] [timesteps = 7]
Agent #0 : 9 8 11 12 13 14 15 

[STAT] Solver returned: 0
[DBG]  Agent (index) 28 | New local path (submap idx):
[DBG]  9 8 11 12 13 14 15 
[DBG]  Update the agent path 28 | Original local length: 23 | New local length: 7
[DBG]  agent 28 t=0 => decoded (sx,sy)=(2,2) => global_id=661
[DBG]  agent 28 t=1 => decoded (sx,sy)=(2,1) => global_id=660
[DBG]  agent 28 t=2 => decoded (sx,sy)=(3,1) => global_id=692
[DBG]  agent 28 t=3 => decoded (sx,sy)=(4,1) => global_id=724
[DBG]  agent 28 t=4 => decoded (sx,sy)=(4,2) => global_id=725
[DBG]  agent 28 t=5 => decoded (sx,sy)=(4,3) => global_id=726
[DBG]  agent 28 t=6 => decoded (sx,sy)=(4,4) => global_id=727
[DBG]  Complete path of agent 28:
[DBG]    Original: 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 660 660 660 660 660 660 660 660 660 692 724 725 726 727 
[DBG]    New:     661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 660 692 724 725 726 727 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 
[DBG]    Local path (in submap): 661 660 692 724 725 726 727 
[DBG]    Suffix (out of submap): 
[DBG]  Original agent path length 28 je: 41
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 0: 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 660, 692, 724, 725, 726, 727, 
[DBG]  Path for agent 28 updated, resulting length: 25
[DBG]  Paths successfully updated.
[DBG]  (LNS.cpp) New path for agent 28: 
[DBG]  661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 660, 692, 724, 725, 726, 727, 
[DBG]  Delta value: 0.4
[DBG]  Rewarding metric index = 0
[DBG]  component_weights = {0.9821, 0.00847476, 0.00466111, 0.00476403}
[DBG]  opSuccess value: 1
[STAT] neighbor.sum_of_costs before recomputation: 24
[STAT] neighbor.old_sum_of_costs before recomputation: 40
[STAT] sum_of_costs before recomputation: 4423
[DBG]  Validate solution immediately after SAT success.
[WARNING] Problem after SAT: Target conflict: agent 42 (len 40) traverses target of agent 28 (len 24) at location 727 at timestep 39
[DBG]  [DEBUG] Attempting immediate repair via init_lns because problem occurred after SAT (should be applied only for conflicts...).
[DBG]  [DEBUG] Passing 150 agents to init_lns (skip=true).
[DBG]  [DEBUG] path_table contents for selected agents (neighbor.agents):
[DBG]    Agent 28 => controlling path length=25
[DBG]  hodnota skip_initial_solution=1
[DBG]  We skip initialSolution => call buildCollisionData()
[DBG]  buildCollisionData() called â€“ skip_initial_solution case.
[DBG]  Agents.size()=150, collision_graph.size()=150
[DBG]  agent 28 => updateCollidingPairs => foundCollision
[DBG]  agent 42 => updateCollidingPairs => foundCollision
[DBG]  agent 100 => updateCollidingPairs => foundCollision
[DBG]  Conflicting agent pairs:
[DBG]  agent 28 is in conflict with agent 42
[DBG]  agent 28 is in conflict with agent 100
[DBG]  buildCollisionData() => sum_of_costs=4407, num_of_colliding_pairs=2
[DBG]  buildCollisionData done => sum_of_costs=4407, num_of_colliding_pairs=2
[DBG]  sum_of_cost hodnota: 4407
[DBG]  After skip/init build => iteration_stats.back(): sum_of_costs=4407, collisions=2
[DEBUG] Using default neighbor generation strategy for conflicts: 1
	InitLNS(PP): runtime = 0.000904792, iterations = 2, colliding pairs = 0, initial colliding pairs = 2, solution cost = 4421, initial solution cost = 4407, failed iterations = 0
[DBG]  [DEBUG] init_lns->sum_of_costs after init_lns->run: 4421
[DBG]  [DEBUG] sum_of_costs after assignment from init_lns->run: 4421
[DBG]  Recomputing sum_of_cost by dividing neighbor.sum_of_costs and neighbor.old_sum_of_costs
[STAT] sum_of_costs after recomputation: 4421
[STAT] Iteration 73
[DBG]  Using SAT operator (destroy+repair SAT).
[DBG]  ====================
[DBG]  SAT destroy operator called.
[DBG]  SAT heuristic: 2
[DBG]  key_agent_id: 28
[DBG]  key_agent_id global path length: 41
[DBG]  Submap content (global positions):
[DBG]  594 595 596 597 598 
[DBG]  626 627 628 629 630 
[DBG]  658 659 660 661 662 
[DBG]  690 691 692 693 694 
[DBG]  722 723 724 725 726 
[DBG]  Map content with agents and obstacles:
[DBG]  . X . . X 
[DBG]  X . . . X 
[DBG]  A . A . X 
[DBG]  X A . X X 
[DBG]  . X . . . 
[DBG]  content of the map structure that we pass to the SAT solver:
[DBG]  1  -1  1  1  -1  
[DBG]  -1  1  1  1  -1  
[DBG]  1  1  1  1  -1  
[DBG]  -1  1  1  -1  -1  
[DBG]  1  -1  1  1  1  
[DBG]  Identifying agents in a submap for rescheduling (when key_agent is there at the time 34):
[DBG]  Agent 26 found intervals in the sub-map:
[DBG]  
[DBG]  Agent 26 is not in sub-map at time 34 (intervals: 
[DBG]  )
[DBG]  Agent 28 found intervals in the sub-map:
[DBG]   [0..39]
[DBG]  Agent 28 (interval in submap: [0..39]) contains time 34, added to replan.
[DBG]  Agent 42 found intervals in the sub-map:
[DBG]   [32..38]
[DBG]  Agent 42 (interval in submap: [32..38]) contains time 34, added to replan.
[DBG]  Agent 45 found intervals in the sub-map:
[DBG]   [22..27]
[DBG]  Agent 45 is not in sub-map at time 34 (intervals: 
[DBG]  [22..27] )
[DBG]  Agent 59 found intervals in the sub-map:
[DBG]  
[DBG]  Agent 59 is not in sub-map at time 34 (intervals: 
[DBG]  )
[DBG]  Agent 69 found intervals in the sub-map:
[DBG]   [34..38]
[DBG]  Agent 69 (interval in submap: [34..38]) contains time 34, added to replan.
[DBG]  Agent 148 found intervals in the sub-map:
[DBG]   [36..38]
[DBG]  Agent 148 is not in sub-map at time 34 (intervals: 
[DBG]  [36..38] )
[DBG]  Agent 28 | Start (global): 660 -> (local): (2, 2) at time 34 | Goal (global): 726 -> (local): (4, 4) at time 39
[DBG]  Agent 42 | Start (global): 691 -> (local): (3, 1) at time 34 | Goal (global): 726 -> (local): (4, 4) at time 38
[DBG]  Agent 69 | Start (global): 658 -> (local): (2, 0) at time 34 | Goal (global): 724 -> (local): (4, 2) at time 38
[DBG]  [REPAIR] SAT destroy operator called.
[DBG]  [REPAIR] SAT operator â€“ launching subproblem FOR OPTIMIZATION.
[DBG]  Creating local paths (sx, sy) in the submap for T_sync = 34
[DBG]    Agent 28 (global paths from T=34 to 39) has local path: (2,2) (2,2) (3,2) (4,2) (4,3) (4,4) 
[DBG]    Agent 42 (global paths from T=34 to 38) has local path: (3,1) (3,2) (4,2) (4,3) (4,4) 
[DBG]    Agent 69 (global paths from T=34 to 38) has local path: (2,0) (2,1) (3,1) (3,2) (4,2) 
[DBG]  Checking input data for SAT solver:
[DBG]    - Number of agents to replan: 3
[DBG]  Agent 28 has the original local path length: 6 => Start (2,2), Goal (4,4)
[DBG]  Agent 42 has the original local path length: 5 => Start (3,1), Goal (4,4)
[DBG]  Agent 69 has the original local path length: 5 => Start (2,0), Goal (4,2)
[DBG]  Start position: (2, 2), (3, 1), (2, 0), 
[DBG]  Goal position: (4, 4), (4, 4), (4, 2), 
[DBG]  SAT instance and solver created.
Currently solving
Instance name: scen
Map name: map
Encoding used: disappear_at_goal
SAT solver used: Kissat
Optimizing function: sum of costs
Number of agents: 3
Mks LB: 5
SoC LB: 15
Delta: 0
Remaining time: 300000 [ms]

[STAT] Solver returned: -1
[DBG]  SAT solver failed.
[STAT] SAT solver failed to find a valid solution.
[DBG]  ====================
[DBG]  SAT destroy operator called.
[DBG]  SAT heuristic: 2
[DBG]  key_agent_id: 28
[DBG]  key_agent_id global path length: 41
[DBG]  Submap content (global positions):
[DBG]  595 596 597 598 599 
[DBG]  627 628 629 630 631 
[DBG]  659 660 661 662 663 
[DBG]  691 692 693 694 695 
[DBG]  723 724 725 726 727 
[DBG]  Map content with agents and obstacles:
[DBG]  X . . X . 
[DBG]  . . . X . 
[DBG]  . . A X X 
[DBG]  . . X X X 
[DBG]  X . . . . 
[DBG]  content of the map structure that we pass to the SAT solver:
[DBG]  -1  1  1  -1  1  
[DBG]  1  1  1  -1  1  
[DBG]  1  1  1  -1  -1  
[DBG]  1  1  -1  -1  -1  
[DBG]  -1  1  1  1  1  
[DBG]  Identifying agents in a submap for rescheduling (when key_agent is there at the time 19):
[DBG]  Agent 4 found intervals in the sub-map:
[DBG]  
[DBG]  Agent 4 is not in sub-map at time 19 (intervals: 
[DBG]  )
[DBG]  Agent 28 found intervals in the sub-map:
[DBG]   [0..40]
[DBG]  Agent 28 (interval in submap: [0..40]) contains time 19, added to replan.
[DBG]  Agent 45 found intervals in the sub-map:
[DBG]   [22..26]
[DBG]  Agent 45 is not in sub-map at time 19 (intervals: 
[DBG]  [22..26] )
[DBG]  Agent 148 found intervals in the sub-map:
[DBG]   [37..38]
[DBG]  Agent 148 is not in sub-map at time 19 (intervals: 
[DBG]  [37..38] )
[DBG]  Agent 28 | Start (global): 661 -> (local): (2, 2) at time 19 | Goal (global): 727 -> (local): (4, 4) at time 40
[DBG]  [REPAIR] SAT destroy operator called.
[DBG]  [REPAIR] SAT operator â€“ launching subproblem FOR OPTIMIZATION.
[DBG]  Creating local paths (sx, sy) in the submap for T_sync = 19
[DBG]    Agent 28 (global paths from T=19 to 40) has local path: (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,1) (2,1) (2,1) (2,1) (2,1) (2,1) (2,1) (2,1) (2,1) (3,1) (4,1) (4,2) (4,3) (4,4) 
[DBG]  Checking input data for SAT solver:
[DBG]    - Number of agents to replan: 1
[DBG]  Agent 28 has the original local path length: 22 => Start (2,2), Goal (4,4)
[DBG]  Start position: (2, 2), 
[DBG]  Goal position: (4, 4), 
[DBG]  SAT instance and solver created.
Currently solving
Instance name: scen
Map name: map
Encoding used: disappear_at_goal
SAT solver used: Kissat
Optimizing function: sum of costs
Number of agents: 1
Mks LB: 7
SoC LB: 7
Delta: 0
Remaining time: 300000 [ms]

Found plan [agents = 1] [timesteps = 7]
Agent #0 : 9 8 11 12 13 14 15 

[STAT] Solver returned: 0
[DBG]  Agent (index) 28 | New local path (submap idx):
[DBG]  9 8 11 12 13 14 15 
[DBG]  Update the agent path 28 | Original local length: 22 | New local length: 7
[DBG]  agent 28 t=0 => decoded (sx,sy)=(2,2) => global_id=661
[DBG]  agent 28 t=1 => decoded (sx,sy)=(2,1) => global_id=660
[DBG]  agent 28 t=2 => decoded (sx,sy)=(3,1) => global_id=692
[DBG]  agent 28 t=3 => decoded (sx,sy)=(4,1) => global_id=724
[DBG]  agent 28 t=4 => decoded (sx,sy)=(4,2) => global_id=725
[DBG]  agent 28 t=5 => decoded (sx,sy)=(4,3) => global_id=726
[DBG]  agent 28 t=6 => decoded (sx,sy)=(4,4) => global_id=727
[DBG]  Complete path of agent 28:
[DBG]    Original: 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 660 660 660 660 660 660 660 660 660 692 724 725 726 727 
[DBG]    New:     661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 660 692 724 725 726 727 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 
[DBG]    Local path (in submap): 661 660 692 724 725 726 727 
[DBG]    Suffix (out of submap): 
[DBG]  Original agent path length 28 je: 41
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 0: 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 660, 692, 724, 725, 726, 727, 
[DBG]  Path for agent 28 updated, resulting length: 26
[DBG]  Paths successfully updated.
[DBG]  (LNS.cpp) New path for agent 28: 
[DBG]  661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 660, 692, 724, 725, 726, 727, 
[DBG]  Delta value: 0.375
[DBG]  Rewarding metric index = 0
[DBG]  component_weights = {0.987564, 0.00588786, 0.00323832, 0.00330983}
[DBG]  opSuccess value: 1
[STAT] neighbor.sum_of_costs before recomputation: 25
[STAT] neighbor.old_sum_of_costs before recomputation: 40
[STAT] sum_of_costs before recomputation: 4421
[DBG]  Validate solution immediately after SAT success.
[WARNING] Problem after SAT: Target conflict: agent 42 (len 40) traverses target of agent 28 (len 25) at location 727 at timestep 39
[DBG]  [DEBUG] Attempting immediate repair via init_lns because problem occurred after SAT (should be applied only for conflicts...).
[DBG]  [DEBUG] Passing 150 agents to init_lns (skip=true).
[DBG]  [DEBUG] path_table contents for selected agents (neighbor.agents):
[DBG]    Agent 28 => controlling path length=26
[DBG]  hodnota skip_initial_solution=1
[DBG]  We skip initialSolution => call buildCollisionData()
[DBG]  buildCollisionData() called â€“ skip_initial_solution case.
[DBG]  Agents.size()=150, collision_graph.size()=150
[DBG]  agent 28 => updateCollidingPairs => foundCollision
[DBG]  agent 42 => updateCollidingPairs => foundCollision
[DBG]  agent 100 => updateCollidingPairs => foundCollision
[DBG]  Conflicting agent pairs:
[DBG]  agent 28 is in conflict with agent 42
[DBG]  agent 28 is in conflict with agent 100
[DBG]  buildCollisionData() => sum_of_costs=4406, num_of_colliding_pairs=2
[DBG]  buildCollisionData done => sum_of_costs=4406, num_of_colliding_pairs=2
[DBG]  sum_of_cost hodnota: 4406
[DBG]  After skip/init build => iteration_stats.back(): sum_of_costs=4406, collisions=2
[DEBUG] Using default neighbor generation strategy for conflicts: 2
	InitLNS(PP): runtime = 0.000812834, iterations = 2, colliding pairs = 0, initial colliding pairs = 2, solution cost = 4408, initial solution cost = 4406, failed iterations = 0
[DBG]  [DEBUG] init_lns->sum_of_costs after init_lns->run: 4408
[DBG]  [DEBUG] sum_of_costs after assignment from init_lns->run: 4408
[DBG]  Recomputing sum_of_cost by dividing neighbor.sum_of_costs and neighbor.old_sum_of_costs
[STAT] sum_of_costs after recomputation: 4408
[STAT] Iteration 74
[DBG]  Using SAT operator (destroy+repair SAT).
[DBG]  ====================
[DBG]  SAT destroy operator called.
[DBG]  SAT heuristic: 2
[DBG]  key_agent_id: 28
[DBG]  key_agent_id global path length: 41
[DBG]  Submap content (global positions):
[DBG]  595 596 597 598 599 
[DBG]  627 628 629 630 631 
[DBG]  659 660 661 662 663 
[DBG]  691 692 693 694 695 
[DBG]  723 724 725 726 727 
[DBG]  Map content with agents and obstacles:
[DBG]  X . A X . 
[DBG]  . A A X . 
[DBG]  . A A X X 
[DBG]  A . X X X 
[DBG]  X . A . . 
[DBG]  content of the map structure that we pass to the SAT solver:
[DBG]  -1  1  1  -1  1  
[DBG]  1  1  1  -1  1  
[DBG]  1  1  1  -1  -1  
[DBG]  1  1  -1  -1  -1  
[DBG]  -1  1  1  1  1  
[DBG]  Identifying agents in a submap for rescheduling (when key_agent is there at the time 24):
[DBG]  Agent 3 found intervals in the sub-map:
[DBG]   [23..28]
[DBG]  Agent 3 (interval in submap: [23..28]) contains time 24, added to replan.
[DBG]  Agent 28 found intervals in the sub-map:
[DBG]   [0..40]
[DBG]  Agent 28 (interval in submap: [0..40]) contains time 24, added to replan.
[DBG]  Agent 45 found intervals in the sub-map:
[DBG]   [22..26]
[DBG]  Agent 45 (interval in submap: [22..26]) contains time 24, added to replan.
[DBG]  Agent 53 found intervals in the sub-map:
[DBG]   [21..26]
[DBG]  Agent 53 (interval in submap: [21..26]) contains time 24, added to replan.
[DBG]  Agent 57 found intervals in the sub-map:
[DBG]   [24..32]
[DBG]  Agent 57 (interval in submap: [24..32]) contains time 24, added to replan.
[DBG]  Agent 71 found intervals in the sub-map:
[DBG]   [22..27]
[DBG]  Agent 71 (interval in submap: [22..27]) contains time 24, added to replan.
[DBG]  Agent 100 found intervals in the sub-map:
[DBG]   [22..24]
[DBG]  Agent 100 (interval in submap: [22..24]) contains time 24, added to replan.
[DBG]  Agent 144 found intervals in the sub-map:
[DBG]   [23..23]
[DBG]  Agent 144 is not in sub-map at time 24 (intervals: 
[DBG]  [23..23] )
[DBG]  Agent 3 | Start (global): 629 -> (local): (1, 2) at time 24 | Goal (global): 724 -> (local): (4, 1) at time 28
[DBG]  Agent 28 | Start (global): 661 -> (local): (2, 2) at time 24 | Goal (global): 727 -> (local): (4, 4) at time 40
[DBG]  Agent 45 | Start (global): 628 -> (local): (1, 1) at time 24 | Goal (global): 659 -> (local): (2, 0) at time 26
[DBG]  Agent 53 | Start (global): 660 -> (local): (2, 1) at time 24 | Goal (global): 724 -> (local): (4, 1) at time 26
[DBG]  Agent 57 | Start (global): 597 -> (local): (0, 2) at time 24 | Goal (global): 724 -> (local): (4, 1) at time 32
[DBG]  Agent 71 | Start (global): 691 -> (local): (3, 0) at time 24 | Goal (global): 724 -> (local): (4, 1) at time 27
[DBG]  Agent 100 | Start (global): 725 -> (local): (4, 2) at time 24 | Goal (global): 725 -> (local): (4, 2) at time 24
[DBG]  [REPAIR] SAT destroy operator called.
[DBG]  [REPAIR] SAT operator â€“ launching subproblem FOR OPTIMIZATION.
[DBG]  Creating local paths (sx, sy) in the submap for T_sync = 24
[DBG]    Agent 3 (global paths from T=24 to 28) has local path: (1,2) (1,1) (2,1) (3,1) (4,1) 
[DBG]    Agent 28 (global paths from T=24 to 40) has local path: (2,2) (2,2) (2,2) (2,1) (2,1) (2,1) (2,1) (2,1) (2,1) (2,1) (2,1) (2,1) (3,1) (4,1) (4,2) (4,3) (4,4) 
[DBG]    Agent 45 (global paths from T=24 to 26) has local path: (1,1) (2,1) (2,0) 
[DBG]    Agent 53 (global paths from T=24 to 26) has local path: (2,1) (3,1) (4,1) 
[DBG]    Agent 57 (global paths from T=24 to 32) has local path: (0,2) (0,1) (0,1) (1,1) (1,0) (2,0) (3,0) (3,1) (4,1) 
[DBG]    Agent 71 (global paths from T=24 to 27) has local path: (3,0) (3,0) (3,1) (4,1) 
[DBG]    Agent 100 (global paths from T=24 to 24) has local path: (4,2) 
[DBG]  Checking input data for SAT solver:
[DBG]    - Number of agents to replan: 7
[DBG]  Agent 3 has the original local path length: 5 => Start (1,2), Goal (4,1)
[DBG]  Agent 28 has the original local path length: 17 => Start (2,2), Goal (4,4)
[DBG]  Agent 45 has the original local path length: 3 => Start (1,1), Goal (2,0)
[DBG]  Agent 53 has the original local path length: 3 => Start (2,1), Goal (4,1)
[DBG]  Agent 57 has the original local path length: 9 => Start (0,2), Goal (4,1)
[DBG]  Agent 71 has the original local path length: 4 => Start (3,0), Goal (4,1)
[DBG]  Agent 100 has the original local path length: 1 => Start (4,2), Goal (4,2)
[DBG]  Start position: (1, 2), (2, 2), (1, 1), (2, 1), (0, 2), (3, 0), (4, 2), 
[DBG]  Goal position: (4, 1), (4, 4), (2, 0), (4, 1), (4, 1), (4, 1), (4, 2), 
[DBG]  SAT instance and solver created.
Currently solving
Instance name: scen
Map name: map
Encoding used: disappear_at_goal
SAT solver used: Kissat
Optimizing function: sum of costs
Number of agents: 7
Mks LB: 7
SoC LB: 28
Delta: 0
Remaining time: 300000 [ms]

[STAT] Solver returned: -1
[DBG]  SAT solver failed.
[STAT] SAT solver failed to find a valid solution.
[DBG]  ====================
[DBG]  SAT destroy operator called.
[DBG]  SAT heuristic: 2
[DBG]  key_agent_id: 28
[DBG]  key_agent_id global path length: 41
[DBG]  Submap content (global positions):
[DBG]  594 595 596 597 598 
[DBG]  626 627 628 629 630 
[DBG]  658 659 660 661 662 
[DBG]  690 691 692 693 694 
[DBG]  722 723 724 725 726 
[DBG]  Map content with agents and obstacles:
[DBG]  . X . . X 
[DBG]  X . . . X 
[DBG]  A A A . X 
[DBG]  X . A X X 
[DBG]  . X . . . 
[DBG]  content of the map structure that we pass to the SAT solver:
[DBG]  1  -1  1  1  -1  
[DBG]  -1  1  1  1  -1  
[DBG]  1  1  1  1  -1  
[DBG]  -1  1  1  -1  -1  
[DBG]  1  -1  1  1  1  
[DBG]  Identifying agents in a submap for rescheduling (when key_agent is there at the time 35):
[DBG]  Agent 28 found intervals in the sub-map:
[DBG]   [0..39]
[DBG]  Agent 28 (interval in submap: [0..39]) contains time 35, added to replan.
[DBG]  Agent 42 found intervals in the sub-map:
[DBG]   [32..38]
[DBG]  Agent 42 (interval in submap: [32..38]) contains time 35, added to replan.
[DBG]  Agent 45 found intervals in the sub-map:
[DBG]   [22..27]
[DBG]  Agent 45 is not in sub-map at time 35 (intervals: 
[DBG]  [22..27] )
[DBG]  Agent 55 found intervals in the sub-map:
[DBG]   [35..38]
[DBG]  Agent 55 (interval in submap: [35..38]) contains time 35, added to replan.
[DBG]  Agent 59 found intervals in the sub-map:
[DBG]  
[DBG]  Agent 59 is not in sub-map at time 35 (intervals: 
[DBG]  )
[DBG]  Agent 69 found intervals in the sub-map:
[DBG]   [34..38]
[DBG]  Agent 69 (interval in submap: [34..38]) contains time 35, added to replan.
[DBG]  Agent 148 found intervals in the sub-map:
[DBG]   [36..38]
[DBG]  Agent 148 is not in sub-map at time 35 (intervals: 
[DBG]  [36..38] )
[DBG]  Agent 28 | Start (global): 660 -> (local): (2, 2) at time 35 | Goal (global): 726 -> (local): (4, 4) at time 39
[DBG]  Agent 42 | Start (global): 692 -> (local): (3, 2) at time 35 | Goal (global): 726 -> (local): (4, 4) at time 38
[DBG]  Agent 55 | Start (global): 658 -> (local): (2, 0) at time 35 | Goal (global): 692 -> (local): (3, 2) at time 38
[DBG]  Agent 69 | Start (global): 659 -> (local): (2, 1) at time 35 | Goal (global): 724 -> (local): (4, 2) at time 38
[DBG]  [REPAIR] SAT destroy operator called.
[DBG]  [REPAIR] SAT operator â€“ launching subproblem FOR OPTIMIZATION.
[DBG]  Creating local paths (sx, sy) in the submap for T_sync = 35
[DBG]    Agent 28 (global paths from T=35 to 39) has local path: (2,2) (3,2) (4,2) (4,3) (4,4) 
[DBG]    Agent 42 (global paths from T=35 to 38) has local path: (3,2) (4,2) (4,3) (4,4) 
[DBG]    Agent 55 (global paths from T=35 to 38) has local path: (2,0) (2,1) (2,2) (3,2) 
[DBG]    Agent 69 (global paths from T=35 to 38) has local path: (2,1) (3,1) (3,2) (4,2) 
[DBG]  Checking input data for SAT solver:
[DBG]    - Number of agents to replan: 4
[DBG]  Agent 28 has the original local path length: 5 => Start (2,2), Goal (4,4)
[DBG]  Agent 42 has the original local path length: 4 => Start (3,2), Goal (4,4)
[DBG]  Agent 55 has the original local path length: 4 => Start (2,0), Goal (3,2)
[DBG]  Agent 69 has the original local path length: 4 => Start (2,1), Goal (4,2)
[DBG]  Start position: (2, 2), (3, 2), (2, 0), (2, 1), 
[DBG]  Goal position: (4, 4), (4, 4), (3, 2), (4, 2), 
[DBG]  SAT instance and solver created.
Currently solving
Instance name: scen
Map name: map
Encoding used: disappear_at_goal
SAT solver used: Kissat
Optimizing function: sum of costs
Number of agents: 4
Mks LB: 5
SoC LB: 17
Delta: 0
Remaining time: 300000 [ms]

Vertex conflict! Agents 1, 2, timestep 4, location 0
Vertex conflict! Agents 1, 3, timestep 4, location 0
Vertex conflict! Agents 2, 3, timestep 4, location 0
Found plan [agents = 4] [timesteps = 5]
Agent #0 : 8 11 13 14 15 
Agent #1 : 11 13 14 15 0 
Agent #2 : 6 7 10 11 0 
Agent #3 : 7 10 11 13 0 

[STAT] Solver returned: 0
[DBG]  Agent (index) 28 | New local path (submap idx):
[DBG]  8 11 13 14 15 
[DBG]  Agent (index) 42 | New local path (submap idx):
[DBG]  11 13 14 15 
[DBG]  Agent (index) 55 | New local path (submap idx):
[DBG]  6 7 10 11 
[DBG]  Agent (index) 69 | New local path (submap idx):
[DBG]  7 10 11 13 
[DBG]  Update the agent path 28 | Original local length: 5 | New local length: 5
[DBG]  agent 28 t=0 => decoded (sx,sy)=(2,2) => global_id=660
[DBG]  agent 28 t=1 => decoded (sx,sy)=(3,2) => global_id=692
[DBG]  agent 28 t=2 => decoded (sx,sy)=(4,2) => global_id=724
[DBG]  agent 28 t=3 => decoded (sx,sy)=(4,3) => global_id=725
[DBG]  agent 28 t=4 => decoded (sx,sy)=(4,4) => global_id=726
[DBG]  Complete path of agent 28:
[DBG]    Original: 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 660 660 660 660 660 660 660 660 660 692 724 725 726 727 
[DBG]    New:     661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 660 660 660 660 660 660 660 660 660 692 724 725 726 727 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 660 660 660 660 660 660 660 660 
[DBG]    Local path (in submap): 660 692 724 725 726 
[DBG]    Suffix (out of submap): 727 
[DBG]  Original agent path length 28 je: 41
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 0: 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 660, 660, 660, 660, 660, 660, 660, 660, 660, 692, 724, 725, 726, 727, 
[DBG]  Path for agent 28 updated, resulting length: 41
[DBG]  Update the agent path 42 | Original local length: 4 | New local length: 4
[DBG]  agent 42 t=0 => decoded (sx,sy)=(3,2) => global_id=692
[DBG]  agent 42 t=1 => decoded (sx,sy)=(4,2) => global_id=724
[DBG]  agent 42 t=2 => decoded (sx,sy)=(4,3) => global_id=725
[DBG]  agent 42 t=3 => decoded (sx,sy)=(4,4) => global_id=726
[DBG]  Complete path of agent 42:
[DBG]    Original: 224 256 257 258 259 260 261 293 294 326 327 328 329 361 393 425 426 427 428 429 430 431 432 464 496 528 528 529 561 593 625 657 658 659 691 692 724 725 726 727 759 
[DBG]    New:     224 256 257 258 259 260 261 293 294 326 327 328 329 361 393 425 426 427 428 429 430 431 432 464 496 528 528 529 561 593 625 657 658 659 691 692 724 725 726 727 759 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 224 256 257 258 259 260 261 293 294 326 327 328 329 361 393 425 426 427 428 429 430 431 432 464 496 528 528 529 561 593 625 657 658 659 691 
[DBG]    Local path (in submap): 692 724 725 726 
[DBG]    Suffix (out of submap): 727 759 
[DBG]  Original agent path length 42 je: 41
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 1: 224, 256, 257, 258, 259, 260, 261, 293, 294, 326, 327, 328, 329, 361, 393, 425, 426, 427, 428, 429, 430, 431, 432, 464, 496, 528, 528, 529, 561, 593, 625, 657, 658, 659, 691, 692, 724, 725, 726, 727, 759, 
[DBG]  Path for agent 42 updated, resulting length: 41
[DBG]  Update the agent path 55 | Original local length: 4 | New local length: 4
[DBG]  agent 55 t=0 => decoded (sx,sy)=(2,0) => global_id=658
[DBG]  agent 55 t=1 => decoded (sx,sy)=(2,1) => global_id=659
[DBG]  agent 55 t=2 => decoded (sx,sy)=(3,1) => global_id=691
[DBG]  agent 55 t=3 => decoded (sx,sy)=(3,2) => global_id=692
[DBG]  Complete path of agent 55:
[DBG]    Original: 34 35 67 68 100 132 164 196 228 260 261 293 294 295 327 359 360 361 393 425 426 427 428 429 430 431 432 464 496 528 529 561 593 625 657 658 659 660 692 
[DBG]    New:     34 35 67 68 100 132 164 196 228 260 261 293 294 295 327 359 360 361 393 425 426 427 428 429 430 431 432 464 496 528 529 561 593 625 657 658 659 691 692 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 34 35 67 68 100 132 164 196 228 260 261 293 294 295 327 359 360 361 393 425 426 427 428 429 430 431 432 464 496 528 529 561 593 625 657 
[DBG]    Local path (in submap): 658 659 691 692 
[DBG]    Suffix (out of submap): 
[DBG]  Original agent path length 55 je: 39
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 2: 34, 35, 67, 68, 100, 132, 164, 196, 228, 260, 261, 293, 294, 295, 327, 359, 360, 361, 393, 425, 426, 427, 428, 429, 430, 431, 432, 464, 496, 528, 529, 561, 593, 625, 657, 658, 659, 691, 692, 
[DBG]  Path for agent 55 updated, resulting length: 39
[DBG]  Update the agent path 69 | Original local length: 4 | New local length: 4
[DBG]  agent 69 t=0 => decoded (sx,sy)=(2,1) => global_id=659
[DBG]  agent 69 t=1 => decoded (sx,sy)=(3,1) => global_id=691
[DBG]  agent 69 t=2 => decoded (sx,sy)=(3,2) => global_id=692
[DBG]  agent 69 t=3 => decoded (sx,sy)=(4,2) => global_id=724
[DBG]  Complete path of agent 69:
[DBG]    Original: 4 5 37 69 70 71 72 73 74 106 107 139 140 141 173 205 237 269 301 333 365 366 398 430 431 463 464 496 528 529 561 593 625 657 658 659 691 692 724 756 788 820 
[DBG]    New:     4 5 37 69 70 71 72 73 74 106 107 139 140 141 173 205 237 269 301 333 365 366 398 430 431 463 464 496 528 529 561 593 625 657 658 659 691 692 724 756 788 820 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 4 5 37 69 70 71 72 73 74 106 107 139 140 141 173 205 237 269 301 333 365 366 398 430 431 463 464 496 528 529 561 593 625 657 658 
[DBG]    Local path (in submap): 659 691 692 724 
[DBG]    Suffix (out of submap): 756 788 820 
[DBG]  Original agent path length 69 je: 42
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 3: 4, 5, 37, 69, 70, 71, 72, 73, 74, 106, 107, 139, 140, 141, 173, 205, 237, 269, 301, 333, 365, 366, 398, 430, 431, 463, 464, 496, 528, 529, 561, 593, 625, 657, 658, 659, 691, 692, 724, 756, 788, 820, 
[DBG]  Path for agent 69 updated, resulting length: 42
[DBG]  Paths successfully updated.
[DBG]  (LNS.cpp) New path for agent 28: 
[DBG]  661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 660, 660, 660, 660, 660, 660, 660, 660, 660, 692, 724, 725, 726, 727, 
[DBG]  (LNS.cpp) New path for agent 42: 
[DBG]  224, 256, 257, 258, 259, 260, 261, 293, 294, 326, 327, 328, 329, 361, 393, 425, 426, 427, 428, 429, 430, 431, 432, 464, 496, 528, 528, 529, 561, 593, 625, 657, 658, 659, 691, 692, 724, 725, 726, 727, 759, 
[DBG]  (LNS.cpp) New path for agent 55: 
[DBG]  34, 35, 67, 68, 100, 132, 164, 196, 228, 260, 261, 293, 294, 295, 327, 359, 360, 361, 393, 425, 426, 427, 428, 429, 430, 431, 432, 464, 496, 528, 529, 561, 593, 625, 657, 658, 659, 691, 692, 
[DBG]  (LNS.cpp) New path for agent 69: 
[DBG]  4, 5, 37, 69, 70, 71, 72, 73, 74, 106, 107, 139, 140, 141, 173, 205, 237, 269, 301, 333, 365, 366, 398, 430, 431, 463, 464, 496, 528, 529, 561, 593, 625, 657, 658, 659, 691, 692, 724, 756, 788, 820, 
[DBG]  Delta value: 0
[DBG]  Rewarding metric index = 2
[DBG]  component_weights = {0.987396, 0.00588686, 0.00340817, 0.00330926}
[DBG]  opSuccess value: 1
[STAT] neighbor.sum_of_costs before recomputation: 159
[STAT] neighbor.old_sum_of_costs before recomputation: 159
[STAT] sum_of_costs before recomputation: 4408
[DBG]  Validate solution immediately after SAT success.
[DBG]  No problems after SAT replan.
[DBG]  Recomputing sum_of_cost by dividing neighbor.sum_of_costs and neighbor.old_sum_of_costs
[STAT] sum_of_costs after recomputation: 4408
[STAT] Iteration 75
[DBG]  Using SAT operator (destroy+repair SAT).
[DBG]  ====================
[DBG]  SAT destroy operator called.
[DBG]  SAT heuristic: 2
[DBG]  key_agent_id: 28
[DBG]  key_agent_id global path length: 41
[DBG]  Submap content (global positions):
[DBG]  595 596 597 598 599 
[DBG]  627 628 629 630 631 
[DBG]  659 660 661 662 663 
[DBG]  691 692 693 694 695 
[DBG]  723 724 725 726 727 
[DBG]  Map content with agents and obstacles:
[DBG]  X . . X . 
[DBG]  . . . X . 
[DBG]  . A A X X 
[DBG]  . . X X X 
[DBG]  X . . . A 
[DBG]  content of the map structure that we pass to the SAT solver:
[DBG]  -1  1  1  -1  1  
[DBG]  1  1  1  -1  1  
[DBG]  1  1  1  -1  -1  
[DBG]  1  1  -1  -1  -1  
[DBG]  -1  1  1  1  1  
[DBG]  Identifying agents in a submap for rescheduling (when key_agent is there at the time 1):
[DBG]  Agent 7 found intervals in the sub-map:
[DBG]  
[DBG]  Agent 7 is not in sub-map at time 1 (intervals: 
[DBG]  )
[DBG]  Agent 12 found intervals in the sub-map:
[DBG]   [0..1]
[DBG]  Agent 12 (interval in submap: [0..1]) contains time 1, added to replan.
[DBG]  Agent 28 found intervals in the sub-map:
[DBG]   [0..40]
[DBG]  Agent 28 (interval in submap: [0..40]) contains time 1, added to replan.
[DBG]  Agent 70 found intervals in the sub-map:
[DBG]  
[DBG]  Agent 70 is not in sub-map at time 1 (intervals: 
[DBG]  )
[DBG]  Agent 108 found intervals in the sub-map:
[DBG]   [0..5]
[DBG]  Agent 108 (interval in submap: [0..5]) contains time 1, added to replan.
[DBG]  Agent 12 | Start (global): 727 -> (local): (4, 4) at time 1 | Goal (global): 727 -> (local): (4, 4) at time 1
[DBG]  Agent 28 | Start (global): 661 -> (local): (2, 2) at time 1 | Goal (global): 727 -> (local): (4, 4) at time 40
[DBG]  Agent 108 | Start (global): 660 -> (local): (2, 1) at time 1 | Goal (global): 724 -> (local): (4, 1) at time 5
[DBG]  [REPAIR] SAT destroy operator called.
[DBG]  [REPAIR] SAT operator â€“ launching subproblem FOR OPTIMIZATION.
[DBG]  Creating local paths (sx, sy) in the submap for T_sync = 1
[DBG]    Agent 12 (global paths from T=1 to 1) has local path: (4,4) 
[DBG]    Agent 28 (global paths from T=1 to 40) has local path: (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,1) (2,1) (2,1) (2,1) (2,1) (2,1) (2,1) (2,1) (2,1) (3,1) (4,1) (4,2) (4,3) (4,4) 
[DBG]    Agent 108 (global paths from T=1 to 5) has local path: (2,1) (3,1) (3,1) (3,1) (4,1) 
[DBG]  Checking input data for SAT solver:
[DBG]    - Number of agents to replan: 3
[DBG]  Agent 12 has the original local path length: 1 => Start (4,4), Goal (4,4)
[DBG]  Agent 28 has the original local path length: 40 => Start (2,2), Goal (4,4)
[DBG]  Agent 108 has the original local path length: 5 => Start (2,1), Goal (4,1)
[DBG]  Start position: (4, 4), (2, 2), (2, 1), 
[DBG]  Goal position: (4, 4), (4, 4), (4, 1), 
[DBG]  SAT instance and solver created.
Currently solving
Instance name: scen
Map name: map
Encoding used: disappear_at_goal
SAT solver used: Kissat
Optimizing function: sum of costs
Number of agents: 3
Mks LB: 7
SoC LB: 11
Delta: 0
Remaining time: 300000 [ms]

Vertex conflict! Agents 0, 2, timestep 3, location 0
Swapping conflict! Agents 0, 2, timestep 3, edge (0,0)
Vertex conflict! Agents 0, 2, timestep 4, location 0
Swapping conflict! Agents 0, 2, timestep 4, edge (0,0)
Vertex conflict! Agents 0, 2, timestep 5, location 0
Swapping conflict! Agents 0, 2, timestep 5, edge (0,0)
Vertex conflict! Agents 0, 2, timestep 6, location 0
Found plan [agents = 3] [timesteps = 7]
Agent #0 : 15 0 0 0 0 0 0 
Agent #1 : 9 8 11 12 13 14 15 
Agent #2 : 8 11 12 0 0 0 0 

[STAT] Solver returned: 0
[DBG]  Agent (index) 12 | New local path (submap idx):
[DBG]  15 
[DBG]  Agent (index) 28 | New local path (submap idx):
[DBG]  9 8 11 12 13 14 15 
[DBG]  Agent (index) 108 | New local path (submap idx):
[DBG]  8 11 12 
[DBG]  Update the agent path 12 | Original local length: 1 | New local length: 1
[DBG]  agent 12 t=0 => decoded (sx,sy)=(4,4) => global_id=727
[DBG]  Complete path of agent 12:
[DBG]    Original: 726 727 728 729 730 731 732 764 765 766 767 
[DBG]    New:     726 727 728 729 730 731 732 764 765 766 767 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 726 
[DBG]    Local path (in submap): 727 
[DBG]    Suffix (out of submap): 728 729 730 731 732 764 765 766 767 
[DBG]  Original agent path length 12 je: 11
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 0: 726, 727, 728, 729, 730, 731, 732, 764, 765, 766, 767, 
[DBG]  Path for agent 12 updated, resulting length: 11
[DBG]  Update the agent path 28 | Original local length: 40 | New local length: 7
[DBG]  agent 28 t=0 => decoded (sx,sy)=(2,2) => global_id=661
[DBG]  agent 28 t=1 => decoded (sx,sy)=(2,1) => global_id=660
[DBG]  agent 28 t=2 => decoded (sx,sy)=(3,1) => global_id=692
[DBG]  agent 28 t=3 => decoded (sx,sy)=(4,1) => global_id=724
[DBG]  agent 28 t=4 => decoded (sx,sy)=(4,2) => global_id=725
[DBG]  agent 28 t=5 => decoded (sx,sy)=(4,3) => global_id=726
[DBG]  agent 28 t=6 => decoded (sx,sy)=(4,4) => global_id=727
[DBG]  Complete path of agent 28:
[DBG]    Original: 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 660 660 660 660 660 660 660 660 660 692 724 725 726 727 
[DBG]    New:     661 661 660 692 724 725 726 727 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 661 
[DBG]    Local path (in submap): 661 660 692 724 725 726 727 
[DBG]    Suffix (out of submap): 
[DBG]  Original agent path length 28 je: 41
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 1: 661, 661, 660, 692, 724, 725, 726, 727, 
[DBG]  Path for agent 28 updated, resulting length: 8
[DBG]  Update the agent path 108 | Original local length: 5 | New local length: 3
[DBG]  agent 108 t=0 => decoded (sx,sy)=(2,1) => global_id=660
[DBG]  agent 108 t=1 => decoded (sx,sy)=(3,1) => global_id=692
[DBG]  agent 108 t=2 => decoded (sx,sy)=(4,1) => global_id=724
[DBG]  Complete path of agent 108:
[DBG]    Original: 628 660 692 692 692 724 756 788 820 821 822 854 855 887 888 920 952 953 954 955 956 988 989 1021 
[DBG]    New:     628 660 692 724 756 788 820 821 822 854 855 887 888 920 952 953 954 955 956 988 989 1021 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 628 
[DBG]    Local path (in submap): 660 692 724 756 788 
[DBG]    Suffix (out of submap): 820 821 822 854 855 887 888 920 952 953 954 955 956 988 989 1021 
[DBG]  Original agent path length 108 je: 24
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 2: 628, 660, 692, 724, 756, 788, 820, 821, 822, 854, 855, 887, 888, 920, 952, 953, 954, 955, 956, 988, 989, 1021, 
[DBG]  Path for agent 108 updated, resulting length: 22
[DBG]  Paths successfully updated.
[DBG]  (LNS.cpp) New path for agent 12: 
[DBG]  726, 727, 728, 729, 730, 731, 732, 764, 765, 766, 767, 
[DBG]  (LNS.cpp) New path for agent 28: 
[DBG]  661, 661, 660, 692, 724, 725, 726, 727, 
[DBG]  (LNS.cpp) New path for agent 108: 
[DBG]  628, 660, 692, 724, 756, 788, 820, 821, 822, 854, 855, 887, 888, 920, 952, 953, 954, 955, 956, 988, 989, 1021, 
[DBG]  Delta value: 0.479452
[DBG]  Rewarding metric index = 0
[DBG]  component_weights = {0.99187, 0.00379726, 0.00219841, 0.0021346}
[DBG]  opSuccess value: 1
[STAT] neighbor.sum_of_costs before recomputation: 38
[STAT] neighbor.old_sum_of_costs before recomputation: 73
[STAT] sum_of_costs before recomputation: 4408
[DBG]  Validate solution immediately after SAT success.
[WARNING] Problem after SAT: Vertex conflict between agents 7 and 108 at location 788 at timestep 5
[DBG]  [DEBUG] Attempting immediate repair via init_lns because problem occurred after SAT (should be applied only for conflicts...).
[DBG]  [DEBUG] Passing 150 agents to init_lns (skip=true).
[DBG]  [DEBUG] path_table contents for selected agents (neighbor.agents):
[DBG]    Agent 12 => controlling path length=11
[DBG]    Agent 28 => controlling path length=8
[DBG]    Agent 108 => controlling path length=22
[DBG]  hodnota skip_initial_solution=1
[DBG]  We skip initialSolution => call buildCollisionData()
[DBG]  buildCollisionData() called â€“ skip_initial_solution case.
[DBG]  Agents.size()=150, collision_graph.size()=150
[DBG]  agent 7 => updateCollidingPairs => foundCollision
[DBG]  agent 11 => updateCollidingPairs => foundCollision
[DBG]  agent 28 => updateCollidingPairs => foundCollision
[DBG]  agent 38 => updateCollidingPairs => foundCollision
[DBG]  agent 42 => updateCollidingPairs => foundCollision
[DBG]  agent 46 => updateCollidingPairs => foundCollision
[DBG]  agent 100 => updateCollidingPairs => foundCollision
[DBG]  agent 108 => updateCollidingPairs => foundCollision
[DBG]  agent 135 => updateCollidingPairs => foundCollision
[DBG]  Conflicting agent pairs:
[DBG]  agent 7 is in conflict with agent 108
[DBG]  agent 11 is in conflict with agent 108
[DBG]  agent 28 is in conflict with agent 42
[DBG]  agent 28 is in conflict with agent 46
[DBG]  agent 28 is in conflict with agent 100
[DBG]  agent 28 is in conflict with agent 135
[DBG]  agent 38 is in conflict with agent 108
[DBG]  agent 46 is in conflict with agent 108
[DBG]  buildCollisionData() => sum_of_costs=4373, num_of_colliding_pairs=8
[DBG]  buildCollisionData done => sum_of_costs=4373, num_of_colliding_pairs=8
[DBG]  sum_of_cost hodnota: 4373
[DBG]  After skip/init build => iteration_stats.back(): sum_of_costs=4373, collisions=8
[DEBUG] Using default neighbor generation strategy for conflicts: 0
[DEBUG] Using default neighbor generation strategy for conflicts: 2
[DEBUG] Using default neighbor generation strategy for conflicts: 0
	InitLNS(PP): runtime = 0.00476829, iterations = 4, colliding pairs = 0, initial colliding pairs = 8, solution cost = 4418, initial solution cost = 4373, failed iterations = 0
[DBG]  [DEBUG] init_lns->sum_of_costs after init_lns->run: 4418
[DBG]  [DEBUG] sum_of_costs after assignment from init_lns->run: 4418
[DBG]  Recomputing sum_of_cost by dividing neighbor.sum_of_costs and neighbor.old_sum_of_costs
[STAT] sum_of_costs after recomputation: 4418
[STAT] Iteration 76
[DBG]  Using SAT operator (destroy+repair SAT).
[DBG]  ====================
[DBG]  SAT destroy operator called.
[DBG]  SAT heuristic: 2
[DBG]  key_agent_id: 28
[DBG]  key_agent_id global path length: 41
[DBG]  Submap content (global positions):
[DBG]  595 596 597 598 599 
[DBG]  627 628 629 630 631 
[DBG]  659 660 661 662 663 
[DBG]  691 692 693 694 695 
[DBG]  723 724 725 726 727 
[DBG]  Map content with agents and obstacles:
[DBG]  X . . X . 
[DBG]  . . . X . 
[DBG]  A A A X X 
[DBG]  . . X X X 
[DBG]  X . . . . 
[DBG]  content of the map structure that we pass to the SAT solver:
[DBG]  -1  1  1  -1  1  
[DBG]  1  1  1  -1  1  
[DBG]  1  1  1  -1  -1  
[DBG]  1  1  -1  -1  -1  
[DBG]  -1  1  1  1  1  
[DBG]  Identifying agents in a submap for rescheduling (when key_agent is there at the time 14):
[DBG]  Agent 4 found intervals in the sub-map:
[DBG]  
[DBG]  Agent 4 is not in sub-map at time 14 (intervals: 
[DBG]  )
[DBG]  Agent 28 found intervals in the sub-map:
[DBG]   [0..40]
[DBG]  Agent 28 (interval in submap: [0..40]) contains time 14, added to replan.
[DBG]  Agent 74 found intervals in the sub-map:
[DBG]  
[DBG]  Agent 74 is not in sub-map at time 14 (intervals: 
[DBG]  )
[DBG]  Agent 86 found intervals in the sub-map:
[DBG]  
[DBG]  Agent 86 is not in sub-map at time 14 (intervals: 
[DBG]  )
[DBG]  Agent 89 found intervals in the sub-map:
[DBG]   [5..10]
[DBG]  Agent 89 is not in sub-map at time 14 (intervals: 
[DBG]  [5..10] )
[DBG]  Agent 109 found intervals in the sub-map:
[DBG]   [11..22]
[DBG]  Agent 109 (interval in submap: [11..22]) contains time 14, added to replan.
[DBG]  Agent 131 found intervals in the sub-map:
[DBG]   [8..12]
[DBG]  Agent 131 is not in sub-map at time 14 (intervals: 
[DBG]  [8..12] )
[DBG]  Agent 135 found intervals in the sub-map:
[DBG]   [4..4] [8..14]
[DBG]  Agent 135 (interval in submap: [8..14]) contains time 14, added to replan.
[DBG]  Agent 28 | Start (global): 661 -> (local): (2, 2) at time 14 | Goal (global): 727 -> (local): (4, 4) at time 40
[DBG]  Agent 109 | Start (global): 660 -> (local): (2, 1) at time 14 | Goal (global): 597 -> (local): (0, 2) at time 22
[DBG]  Agent 135 | Start (global): 659 -> (local): (2, 0) at time 14 | Goal (global): 659 -> (local): (2, 0) at time 14
[DBG]  [REPAIR] SAT destroy operator called.
[DBG]  [REPAIR] SAT operator â€“ launching subproblem FOR OPTIMIZATION.
[DBG]  Creating local paths (sx, sy) in the submap for T_sync = 14
[DBG]    Agent 28 (global paths from T=14 to 40) has local path: (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,1) (2,1) (2,1) (2,1) (2,1) (2,1) (2,1) (2,1) (2,1) (3,1) (4,1) (4,2) (4,3) (4,4) 
[DBG]    Agent 109 (global paths from T=14 to 22) has local path: (2,1) (1,1) (1,2) (1,2) (1,2) (1,2) (1,2) (1,2) (0,2) 
[DBG]    Agent 135 (global paths from T=14 to 14) has local path: (2,0) 
[DBG]  Checking input data for SAT solver:
[DBG]    - Number of agents to replan: 3
[DBG]  Agent 28 has the original local path length: 27 => Start (2,2), Goal (4,4)
[DBG]  Agent 109 has the original local path length: 9 => Start (2,1), Goal (0,2)
[DBG]  Agent 135 has the original local path length: 1 => Start (2,0), Goal (2,0)
[DBG]  Start position: (2, 2), (2, 1), (2, 0), 
[DBG]  Goal position: (4, 4), (0, 2), (2, 0), 
[DBG]  SAT instance and solver created.
Currently solving
Instance name: scen
Map name: map
Encoding used: disappear_at_goal
SAT solver used: Kissat
Optimizing function: sum of costs
Number of agents: 3
Mks LB: 7
SoC LB: 12
Delta: 0
Remaining time: 300000 [ms]

Vertex conflict! Agents 1, 2, timestep 4, location 0
Swapping conflict! Agents 1, 2, timestep 4, edge (0,0)
Vertex conflict! Agents 1, 2, timestep 5, location 0
Swapping conflict! Agents 1, 2, timestep 5, edge (0,0)
Vertex conflict! Agents 1, 2, timestep 6, location 0
Found plan [agents = 3] [timesteps = 7]
Agent #0 : 9 8 11 12 13 14 15 
Agent #1 : 8 4 5 1 0 0 0 
Agent #2 : 7 0 0 0 0 0 0 

[STAT] Solver returned: 0
[DBG]  Agent (index) 28 | New local path (submap idx):
[DBG]  9 8 11 12 13 14 15 
[DBG]  Agent (index) 109 | New local path (submap idx):
[DBG]  8 4 5 1 
[DBG]  Agent (index) 135 | New local path (submap idx):
[DBG]  7 
[DBG]  Update the agent path 28 | Original local length: 27 | New local length: 7
[DBG]  agent 28 t=0 => decoded (sx,sy)=(2,2) => global_id=661
[DBG]  agent 28 t=1 => decoded (sx,sy)=(2,1) => global_id=660
[DBG]  agent 28 t=2 => decoded (sx,sy)=(3,1) => global_id=692
[DBG]  agent 28 t=3 => decoded (sx,sy)=(4,1) => global_id=724
[DBG]  agent 28 t=4 => decoded (sx,sy)=(4,2) => global_id=725
[DBG]  agent 28 t=5 => decoded (sx,sy)=(4,3) => global_id=726
[DBG]  agent 28 t=6 => decoded (sx,sy)=(4,4) => global_id=727
[DBG]  Complete path of agent 28:
[DBG]    Original: 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 660 660 660 660 660 660 660 660 660 692 724 725 726 727 
[DBG]    New:     661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 660 692 724 725 726 727 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 661 661 661 661 661 661 661 661 661 661 661 661 661 661 
[DBG]    Local path (in submap): 661 660 692 724 725 726 727 
[DBG]    Suffix (out of submap): 
[DBG]  Original agent path length 28 je: 41
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 0: 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 660, 692, 724, 725, 726, 727, 
[DBG]  Path for agent 28 updated, resulting length: 21
[DBG]  Update the agent path 109 | Original local length: 9 | New local length: 4
[DBG]  agent 109 t=0 => decoded (sx,sy)=(2,1) => global_id=660
[DBG]  agent 109 t=1 => decoded (sx,sy)=(1,1) => global_id=628
[DBG]  agent 109 t=2 => decoded (sx,sy)=(1,2) => global_id=629
[DBG]  agent 109 t=3 => decoded (sx,sy)=(0,2) => global_id=597
[DBG]  Complete path of agent 109:
[DBG]    Original: 882 850 818 819 787 755 755 756 757 757 757 725 724 692 660 628 629 629 629 629 629 629 597 565 533 534 502 470 438 439 440 472 473 474 475 443 444 445 413 414 415 
[DBG]    New:     882 850 818 819 787 755 755 756 757 757 757 725 724 692 660 628 629 597 565 533 534 502 470 438 439 440 472 473 474 475 443 444 445 413 414 415 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 882 850 818 819 787 755 755 756 757 757 757 725 724 692 
[DBG]    Local path (in submap): 660 628 629 597 565 533 534 502 470 
[DBG]    Suffix (out of submap): 438 439 440 472 473 474 475 443 444 445 413 414 415 
[DBG]  Original agent path length 109 je: 41
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 1: 882, 850, 818, 819, 787, 755, 755, 756, 757, 757, 757, 725, 724, 692, 660, 628, 629, 597, 565, 533, 534, 502, 470, 438, 439, 440, 472, 473, 474, 475, 443, 444, 445, 413, 414, 415, 
[DBG]  Path for agent 109 updated, resulting length: 36
[DBG]  Update the agent path 135 | Original local length: 1 | New local length: 1
[DBG]  agent 135 t=0 => decoded (sx,sy)=(2,0) => global_id=659
[DBG]  Complete path of agent 135:
[DBG]    Original: 696 696 696 728 727 759 759 759 727 726 725 724 692 691 659 658 657 625 593 592 591 590 589 588 556 555 523 522 521 520 520 519 487 486 485 484 483 482 450 449 448 416 384 
[DBG]    New:     696 696 696 728 727 759 759 759 727 726 725 724 692 691 659 658 657 625 593 592 591 590 589 588 556 555 523 522 521 520 520 519 487 486 485 484 483 482 450 449 448 416 384 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 696 696 696 728 727 759 759 759 727 726 725 724 692 691 
[DBG]    Local path (in submap): 659 
[DBG]    Suffix (out of submap): 658 657 625 593 592 591 590 589 588 556 555 523 522 521 520 520 519 487 486 485 484 483 482 450 449 448 416 384 
[DBG]  Original agent path length 135 je: 43
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 2: 696, 696, 696, 728, 727, 759, 759, 759, 727, 726, 725, 724, 692, 691, 659, 658, 657, 625, 593, 592, 591, 590, 589, 588, 556, 555, 523, 522, 521, 520, 520, 519, 487, 486, 485, 484, 483, 482, 450, 449, 448, 416, 384, 
[DBG]  Path for agent 135 updated, resulting length: 43
[DBG]  Paths successfully updated.
[DBG]  (LNS.cpp) New path for agent 28: 
[DBG]  661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 660, 692, 724, 725, 726, 727, 
[DBG]  (LNS.cpp) New path for agent 109: 
[DBG]  882, 850, 818, 819, 787, 755, 755, 756, 757, 757, 757, 725, 724, 692, 660, 628, 629, 597, 565, 533, 534, 502, 470, 438, 439, 440, 472, 473, 474, 475, 443, 444, 445, 413, 414, 415, 
[DBG]  (LNS.cpp) New path for agent 135: 
[DBG]  696, 696, 696, 728, 727, 759, 759, 759, 727, 726, 725, 724, 692, 691, 659, 658, 657, 625, 593, 592, 591, 590, 589, 588, 556, 555, 523, 522, 521, 520, 520, 519, 487, 486, 485, 484, 483, 482, 450, 449, 448, 416, 384, 
[DBG]  Delta value: 0.204918
[DBG]  Rewarding metric index = 0
[DBG]  component_weights = {0.993579, 0.00299905, 0.00173629, 0.0016859}
[DBG]  opSuccess value: 1
[STAT] neighbor.sum_of_costs before recomputation: 97
[STAT] neighbor.old_sum_of_costs before recomputation: 122
[STAT] sum_of_costs before recomputation: 4418
[DBG]  Validate solution immediately after SAT success.
[WARNING] Problem after SAT: Vertex conflict between agents 109 and 3 at location 533 at timestep 19
[DBG]  [DEBUG] Attempting immediate repair via init_lns because problem occurred after SAT (should be applied only for conflicts...).
[DBG]  [DEBUG] Passing 150 agents to init_lns (skip=true).
[DBG]  [DEBUG] path_table contents for selected agents (neighbor.agents):
[DBG]    Agent 28 => controlling path length=21
[DBG]    Agent 109 => controlling path length=36
[DBG]    Agent 135 => controlling path length=43
[DBG]  hodnota skip_initial_solution=1
[DBG]  We skip initialSolution => call buildCollisionData()
[DBG]  buildCollisionData() called â€“ skip_initial_solution case.
[DBG]  Agents.size()=150, collision_graph.size()=150
[DBG]  agent 3 => updateCollidingPairs => foundCollision
[DBG]  agent 28 => updateCollidingPairs => foundCollision
[DBG]  agent 42 => updateCollidingPairs => foundCollision
[DBG]  agent 44 => updateCollidingPairs => foundCollision
[DBG]  agent 57 => updateCollidingPairs => foundCollision
[DBG]  agent 100 => updateCollidingPairs => foundCollision
[DBG]  agent 109 => updateCollidingPairs => foundCollision
[DBG]  Conflicting agent pairs:
[DBG]  agent 3 is in conflict with agent 109
[DBG]  agent 28 is in conflict with agent 42
[DBG]  agent 28 is in conflict with agent 100
[DBG]  agent 44 is in conflict with agent 109
[DBG]  agent 57 is in conflict with agent 109
[DBG]  buildCollisionData() => sum_of_costs=4393, num_of_colliding_pairs=5
[DBG]  buildCollisionData done => sum_of_costs=4393, num_of_colliding_pairs=5
[DBG]  sum_of_cost hodnota: 4393
[DBG]  After skip/init build => iteration_stats.back(): sum_of_costs=4393, collisions=5
[DEBUG] Using default neighbor generation strategy for conflicts: 1
[DEBUG] Using default neighbor generation strategy for conflicts: 1
[DEBUG] Using default neighbor generation strategy for conflicts: 2
[DEBUG] Using default neighbor generation strategy for conflicts: 1
	InitLNS(PP): runtime = 0.00702496, iterations = 5, colliding pairs = 0, initial colliding pairs = 5, solution cost = 4381, initial solution cost = 4393, failed iterations = 0
[DBG]  [DEBUG] init_lns->sum_of_costs after init_lns->run: 4381
[DBG]  [DEBUG] sum_of_costs after assignment from init_lns->run: 4381
[DBG]  Recomputing sum_of_cost by dividing neighbor.sum_of_costs and neighbor.old_sum_of_costs
[STAT] sum_of_costs after recomputation: 4381
[STAT] Iteration 77
[DBG]  Using SAT operator (destroy+repair SAT).
[DBG]  ====================
[DBG]  SAT destroy operator called.
[DBG]  SAT heuristic: 2
[DBG]  key_agent_id: 28
[DBG]  key_agent_id global path length: 41
[DBG]  Submap content (global positions):
[DBG]  595 596 597 598 599 
[DBG]  627 628 629 630 631 
[DBG]  659 660 661 662 663 
[DBG]  691 692 693 694 695 
[DBG]  723 724 725 726 727 
[DBG]  Map content with agents and obstacles:
[DBG]  X . . X . 
[DBG]  . . . X . 
[DBG]  . . A X X 
[DBG]  . A X X X 
[DBG]  X A . . A 
[DBG]  content of the map structure that we pass to the SAT solver:
[DBG]  -1  1  1  -1  1  
[DBG]  1  1  1  -1  1  
[DBG]  1  1  1  -1  -1  
[DBG]  1  1  -1  -1  -1  
[DBG]  -1  1  1  1  1  
[DBG]  Identifying agents in a submap for rescheduling (when key_agent is there at the time 4):
[DBG]  Agent 28 found intervals in the sub-map:
[DBG]   [0..40]
[DBG]  Agent 28 (interval in submap: [0..40]) contains time 4, added to replan.
[DBG]  Agent 46 found intervals in the sub-map:
[DBG]   [4..7]
[DBG]  Agent 46 (interval in submap: [4..7]) contains time 4, added to replan.
[DBG]  Agent 108 found intervals in the sub-map:
[DBG]   [0..5]
[DBG]  Agent 108 (interval in submap: [0..5]) contains time 4, added to replan.
[DBG]  Agent 135 found intervals in the sub-map:
[DBG]   [4..4] [8..14]
[DBG]  Agent 135 (interval in submap: [4..4]) contains time 4, added to replan.
[DBG]  Agent 28 | Start (global): 661 -> (local): (2, 2) at time 4 | Goal (global): 727 -> (local): (4, 4) at time 40
[DBG]  Agent 46 | Start (global): 724 -> (local): (4, 1) at time 4 | Goal (global): 727 -> (local): (4, 4) at time 7
[DBG]  Agent 108 | Start (global): 692 -> (local): (3, 1) at time 4 | Goal (global): 724 -> (local): (4, 1) at time 5
[DBG]  Agent 135 | Start (global): 727 -> (local): (4, 4) at time 4 | Goal (global): 727 -> (local): (4, 4) at time 4
[DBG]  [REPAIR] SAT destroy operator called.
[DBG]  [REPAIR] SAT operator â€“ launching subproblem FOR OPTIMIZATION.
[DBG]  Creating local paths (sx, sy) in the submap for T_sync = 4
[DBG]    Agent 28 (global paths from T=4 to 40) has local path: (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,1) (2,1) (2,1) (2,1) (2,1) (2,1) (2,1) (3,1) (4,1) (4,2) (4,3) (4,4) 
[DBG]    Agent 46 (global paths from T=4 to 7) has local path: (4,1) (4,2) (4,3) (4,4) 
[DBG]    Agent 108 (global paths from T=4 to 5) has local path: (3,1) (4,1) 
[DBG]    Agent 135 (global paths from T=4 to 4) has local path: (4,4) 
[DBG]  Checking input data for SAT solver:
[DBG]    - Number of agents to replan: 4
[DBG]  Agent 28 has the original local path length: 37 => Start (2,2), Goal (4,4)
[DBG]  Agent 46 has the original local path length: 4 => Start (4,1), Goal (4,4)
[DBG]  Agent 108 has the original local path length: 2 => Start (3,1), Goal (4,1)
[DBG]  Agent 135 has the original local path length: 1 => Start (4,4), Goal (4,4)
[DBG]  Start position: (2, 2), (4, 1), (3, 1), (4, 4), 
[DBG]  Goal position: (4, 4), (4, 4), (4, 1), (4, 4), 
[DBG]  SAT instance and solver created.
Currently solving
Instance name: scen
Map name: map
Encoding used: disappear_at_goal
SAT solver used: Kissat
Optimizing function: sum of costs
Number of agents: 4
Mks LB: 7
SoC LB: 14
Delta: 0
Remaining time: 300000 [ms]

Vertex conflict! Agents 1, 2, timestep 4, location 0
Swapping conflict! Agents 1, 2, timestep 4, edge (0,0)
Vertex conflict! Agents 1, 2, timestep 5, location 0
Swapping conflict! Agents 1, 2, timestep 5, edge (0,0)
Vertex conflict! Agents 1, 2, timestep 6, location 0
Vertex conflict! Agents 1, 3, timestep 4, location 0
Swapping conflict! Agents 1, 3, timestep 4, edge (0,0)
Vertex conflict! Agents 1, 3, timestep 5, location 0
Swapping conflict! Agents 1, 3, timestep 5, edge (0,0)
Vertex conflict! Agents 1, 3, timestep 6, location 0
Vertex conflict! Agents 2, 3, timestep 2, location 0
Swapping conflict! Agents 2, 3, timestep 2, edge (0,0)
Vertex conflict! Agents 2, 3, timestep 3, location 0
Swapping conflict! Agents 2, 3, timestep 3, edge (0,0)
Vertex conflict! Agents 2, 3, timestep 4, location 0
Swapping conflict! Agents 2, 3, timestep 4, edge (0,0)
Vertex conflict! Agents 2, 3, timestep 5, location 0
Swapping conflict! Agents 2, 3, timestep 5, edge (0,0)
Vertex conflict! Agents 2, 3, timestep 6, location 0
Found plan [agents = 4] [timesteps = 7]
Agent #0 : 9 8 11 12 13 14 15 
Agent #1 : 12 13 14 15 0 0 0 
Agent #2 : 11 12 0 0 0 0 0 
Agent #3 : 15 0 0 0 0 0 0 

[STAT] Solver returned: 0
[DBG]  Agent (index) 28 | New local path (submap idx):
[DBG]  9 8 11 12 13 14 15 
[DBG]  Agent (index) 46 | New local path (submap idx):
[DBG]  12 13 14 15 
[DBG]  Agent (index) 108 | New local path (submap idx):
[DBG]  11 12 
[DBG]  Agent (index) 135 | New local path (submap idx):
[DBG]  15 
[DBG]  Update the agent path 28 | Original local length: 37 | New local length: 7
[DBG]  agent 28 t=0 => decoded (sx,sy)=(2,2) => global_id=661
[DBG]  agent 28 t=1 => decoded (sx,sy)=(2,1) => global_id=660
[DBG]  agent 28 t=2 => decoded (sx,sy)=(3,1) => global_id=692
[DBG]  agent 28 t=3 => decoded (sx,sy)=(4,1) => global_id=724
[DBG]  agent 28 t=4 => decoded (sx,sy)=(4,2) => global_id=725
[DBG]  agent 28 t=5 => decoded (sx,sy)=(4,3) => global_id=726
[DBG]  agent 28 t=6 => decoded (sx,sy)=(4,4) => global_id=727
[DBG]  Complete path of agent 28:
[DBG]    Original: 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 660 660 660 660 660 660 660 692 724 725 726 727 
[DBG]    New:     661 661 661 661 661 660 692 724 725 726 727 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 661 661 661 661 
[DBG]    Local path (in submap): 661 660 692 724 725 726 727 
[DBG]    Suffix (out of submap): 
[DBG]  Original agent path length 28 je: 41
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 0: 661, 661, 661, 661, 661, 660, 692, 724, 725, 726, 727, 
[DBG]  Path for agent 28 updated, resulting length: 11
[DBG]  Update the agent path 46 | Original local length: 4 | New local length: 4
[DBG]  agent 46 t=0 => decoded (sx,sy)=(4,1) => global_id=724
[DBG]  agent 46 t=1 => decoded (sx,sy)=(4,2) => global_id=725
[DBG]  agent 46 t=2 => decoded (sx,sy)=(4,3) => global_id=726
[DBG]  agent 46 t=3 => decoded (sx,sy)=(4,4) => global_id=727
[DBG]  Complete path of agent 46:
[DBG]    Original: 786 787 755 756 724 725 726 727 728 696 664 632 633 601 569 570 538 539 507 508 509 477 445 413 381 349 317 285 284 252 
[DBG]    New:     786 787 755 756 724 725 726 727 728 696 664 632 633 601 569 570 538 539 507 508 509 477 445 413 381 349 317 285 284 252 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 786 787 755 756 
[DBG]    Local path (in submap): 724 725 726 727 
[DBG]    Suffix (out of submap): 728 696 664 632 633 601 569 570 538 539 507 508 509 477 445 413 381 349 317 285 284 252 
[DBG]  Original agent path length 46 je: 30
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 1: 786, 787, 755, 756, 724, 725, 726, 727, 728, 696, 664, 632, 633, 601, 569, 570, 538, 539, 507, 508, 509, 477, 445, 413, 381, 349, 317, 285, 284, 252, 
[DBG]  Path for agent 46 updated, resulting length: 30
[DBG]  Update the agent path 108 | Original local length: 2 | New local length: 2
[DBG]  agent 108 t=0 => decoded (sx,sy)=(3,1) => global_id=692
[DBG]  agent 108 t=1 => decoded (sx,sy)=(4,1) => global_id=724
[DBG]  Complete path of agent 108:
[DBG]    Original: 628 660 692 692 692 724 756 788 820 821 822 854 855 887 888 889 890 891 923 955 956 957 989 1021 
[DBG]    New:     628 660 692 692 692 724 756 788 820 821 822 854 855 887 888 889 890 891 923 955 956 957 989 1021 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 628 660 692 692 
[DBG]    Local path (in submap): 692 724 
[DBG]    Suffix (out of submap): 756 788 820 821 822 854 855 887 888 889 890 891 923 955 956 957 989 1021 
[DBG]  Original agent path length 108 je: 24
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 2: 628, 660, 692, 692, 692, 724, 756, 788, 820, 821, 822, 854, 855, 887, 888, 889, 890, 891, 923, 955, 956, 957, 989, 1021, 
[DBG]  Path for agent 108 updated, resulting length: 24
[DBG]  Update the agent path 135 | Original local length: 1 | New local length: 1
[DBG]  agent 135 t=0 => decoded (sx,sy)=(4,4) => global_id=727
[DBG]  Complete path of agent 135:
[DBG]    Original: 696 696 696 728 727 759 759 759 727 726 725 724 692 691 659 658 657 625 593 592 591 590 589 588 556 555 523 522 521 520 520 519 487 486 485 484 483 482 450 449 448 416 384 
[DBG]    New:     696 696 696 728 727 759 759 759 727 726 725 724 692 691 659 658 657 625 593 592 591 590 589 588 556 555 523 522 521 520 520 519 487 486 485 484 483 482 450 449 448 416 384 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 696 696 696 728 
[DBG]    Local path (in submap): 727 
[DBG]    Suffix (out of submap): 759 759 759 727 726 725 724 692 691 659 658 657 625 593 592 591 590 589 588 556 555 523 522 521 520 520 519 487 486 485 484 483 482 450 449 448 416 384 
[DBG]  Original agent path length 135 je: 43
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 3: 696, 696, 696, 728, 727, 759, 759, 759, 727, 726, 725, 724, 692, 691, 659, 658, 657, 625, 593, 592, 591, 590, 589, 588, 556, 555, 523, 522, 521, 520, 520, 519, 487, 486, 485, 484, 483, 482, 450, 449, 448, 416, 384, 
[DBG]  Path for agent 135 updated, resulting length: 43
[DBG]  Paths successfully updated.
[DBG]  (LNS.cpp) New path for agent 28: 
[DBG]  661, 661, 661, 661, 661, 660, 692, 724, 725, 726, 727, 
[DBG]  (LNS.cpp) New path for agent 46: 
[DBG]  786, 787, 755, 756, 724, 725, 726, 727, 728, 696, 664, 632, 633, 601, 569, 570, 538, 539, 507, 508, 509, 477, 445, 413, 381, 349, 317, 285, 284, 252, 
[DBG]  (LNS.cpp) New path for agent 108: 
[DBG]  628, 660, 692, 692, 692, 724, 756, 788, 820, 821, 822, 854, 855, 887, 888, 889, 890, 891, 923, 955, 956, 957, 989, 1021, 
[DBG]  (LNS.cpp) New path for agent 135: 
[DBG]  696, 696, 696, 728, 727, 759, 759, 759, 727, 726, 725, 724, 692, 691, 659, 658, 657, 625, 593, 592, 591, 590, 589, 588, 556, 555, 523, 522, 521, 520, 520, 519, 487, 486, 485, 484, 483, 482, 450, 449, 448, 416, 384, 
[DBG]  Delta value: 0.223881
[DBG]  Rewarding metric index = 0
[DBG]  component_weights = {0.995009, 0.00233127, 0.00134968, 0.00131051}
[DBG]  opSuccess value: 1
[STAT] neighbor.sum_of_costs before recomputation: 104
[STAT] neighbor.old_sum_of_costs before recomputation: 134
[STAT] sum_of_costs before recomputation: 4381
[DBG]  Validate solution immediately after SAT success.
[WARNING] Problem after SAT: Target conflict: agent 42 (len 40) traverses target of agent 28 (len 10) at location 727 at timestep 39
[DBG]  [DEBUG] Attempting immediate repair via init_lns because problem occurred after SAT (should be applied only for conflicts...).
[DBG]  [DEBUG] Passing 150 agents to init_lns (skip=true).
[DBG]  [DEBUG] path_table contents for selected agents (neighbor.agents):
[DBG]    Agent 28 => controlling path length=11
[DBG]    Agent 46 => controlling path length=30
[DBG]    Agent 108 => controlling path length=24
[DBG]    Agent 135 => controlling path length=43
[DBG]  hodnota skip_initial_solution=1
[DBG]  We skip initialSolution => call buildCollisionData()
[DBG]  buildCollisionData() called â€“ skip_initial_solution case.
[DBG]  Agents.size()=150, collision_graph.size()=150
[DBG]  agent 28 => updateCollidingPairs => foundCollision
[DBG]  agent 42 => updateCollidingPairs => foundCollision
[DBG]  agent 135 => updateCollidingPairs => foundCollision
[DBG]  Conflicting agent pairs:
[DBG]  agent 28 is in conflict with agent 42
[DBG]  agent 28 is in conflict with agent 135
[DBG]  buildCollisionData() => sum_of_costs=4351, num_of_colliding_pairs=2
[DBG]  buildCollisionData done => sum_of_costs=4351, num_of_colliding_pairs=2
[DBG]  sum_of_cost hodnota: 4351
[DBG]  After skip/init build => iteration_stats.back(): sum_of_costs=4351, collisions=2
[DEBUG] Using default neighbor generation strategy for conflicts: 2
[DEBUG] Using default neighbor generation strategy for conflicts: 0
	InitLNS(PP): runtime = 0.00419033, iterations = 3, colliding pairs = 0, initial colliding pairs = 2, solution cost = 4378, initial solution cost = 4351, failed iterations = 0
[DBG]  [DEBUG] init_lns->sum_of_costs after init_lns->run: 4378
[DBG]  [DEBUG] sum_of_costs after assignment from init_lns->run: 4378
[DBG]  Recomputing sum_of_cost by dividing neighbor.sum_of_costs and neighbor.old_sum_of_costs
[STAT] sum_of_costs after recomputation: 4378
[STAT] Iteration 78
[DBG]  Using SAT operator (destroy+repair SAT).
[DBG]  ====================
[DBG]  SAT destroy operator called.
[DBG]  SAT heuristic: 2
[DBG]  key_agent_id: 28
[DBG]  key_agent_id global path length: 41
[DBG]  Submap content (global positions):
[DBG]  626 627 628 629 630 
[DBG]  658 659 660 661 662 
[DBG]  690 691 692 693 694 
[DBG]  722 723 724 725 726 
[DBG]  754 755 756 757 758 
[DBG]  Map content with agents and obstacles:
[DBG]  X . . . X 
[DBG]  . . . . X 
[DBG]  X A A X X 
[DBG]  . X A . . 
[DBG]  X . . . X 
[DBG]  content of the map structure that we pass to the SAT solver:
[DBG]  -1  1  1  1  -1  
[DBG]  1  1  1  1  -1  
[DBG]  -1  1  1  -1  -1  
[DBG]  1  -1  1  1  1  
[DBG]  -1  1  1  1  -1  
[DBG]  Identifying agents in a submap for rescheduling (when key_agent is there at the time 36):
[DBG]  Agent 26 found intervals in the sub-map:
[DBG]   [49..49]
[DBG]  Agent 26 is not in sub-map at time 36 (intervals: 
[DBG]  [49..49] )
[DBG]  Agent 28 found intervals in the sub-map:
[DBG]   [0..39]
[DBG]  Agent 28 (interval in submap: [0..39]) contains time 36, added to replan.
[DBG]  Agent 42 found intervals in the sub-map:
[DBG]   [32..38]
[DBG]  Agent 42 (interval in submap: [32..38]) contains time 36, added to replan.
[DBG]  Agent 55 found intervals in the sub-map:
[DBG]   [42..47]
[DBG]  Agent 55 is not in sub-map at time 36 (intervals: 
[DBG]  [42..47] )
[DBG]  Agent 69 found intervals in the sub-map:
[DBG]   [34..39]
[DBG]  Agent 69 (interval in submap: [34..39]) contains time 36, added to replan.
[DBG]  Agent 148 found intervals in the sub-map:
[DBG]   [22..35]
[DBG]  Agent 148 is not in sub-map at time 36 (intervals: 
[DBG]  [22..35] )
[DBG]  Agent 28 | Start (global): 692 -> (local): (2, 2) at time 36 | Goal (global): 726 -> (local): (3, 4) at time 39
[DBG]  Agent 42 | Start (global): 724 -> (local): (3, 2) at time 36 | Goal (global): 726 -> (local): (3, 4) at time 38
[DBG]  Agent 69 | Start (global): 691 -> (local): (2, 1) at time 36 | Goal (global): 756 -> (local): (4, 2) at time 39
[DBG]  [REPAIR] SAT destroy operator called.
[DBG]  [REPAIR] SAT operator â€“ launching subproblem FOR OPTIMIZATION.
[DBG]  Creating local paths (sx, sy) in the submap for T_sync = 36
[DBG]    Agent 28 (global paths from T=36 to 39) has local path: (2,2) (3,2) (3,3) (3,4) 
[DBG]    Agent 42 (global paths from T=36 to 38) has local path: (3,2) (3,3) (3,4) 
[DBG]    Agent 69 (global paths from T=36 to 39) has local path: (2,1) (2,2) (3,2) (4,2) 
[DBG]  Checking input data for SAT solver:
[DBG]    - Number of agents to replan: 3
[DBG]  Agent 28 has the original local path length: 4 => Start (2,2), Goal (3,4)
[DBG]  Agent 42 has the original local path length: 3 => Start (3,2), Goal (3,4)
[DBG]  Agent 69 has the original local path length: 4 => Start (2,1), Goal (4,2)
[DBG]  Start position: (2, 2), (3, 2), (2, 1), 
[DBG]  Goal position: (3, 4), (3, 4), (4, 2), 
[DBG]  SAT instance and solver created.
Currently solving
Instance name: scen
Map name: map
Encoding used: disappear_at_goal
SAT solver used: Kissat
Optimizing function: sum of costs
Number of agents: 3
Mks LB: 4
SoC LB: 11
Delta: 0
Remaining time: 300000 [ms]

Found plan [agents = 3] [timesteps = 4]
Agent #0 : 8 10 11 12 
Agent #1 : 10 11 12 0 
Agent #2 : 7 8 10 14 

[STAT] Solver returned: 0
[DBG]  Agent (index) 28 | New local path (submap idx):
[DBG]  8 10 11 12 
[DBG]  Agent (index) 42 | New local path (submap idx):
[DBG]  10 11 12 
[DBG]  Agent (index) 69 | New local path (submap idx):
[DBG]  7 8 10 14 
[DBG]  Update the agent path 28 | Original local length: 4 | New local length: 4
[DBG]  agent 28 t=0 => decoded (sx,sy)=(2,2) => global_id=692
[DBG]  agent 28 t=1 => decoded (sx,sy)=(3,2) => global_id=724
[DBG]  agent 28 t=2 => decoded (sx,sy)=(3,3) => global_id=725
[DBG]  agent 28 t=3 => decoded (sx,sy)=(3,4) => global_id=726
[DBG]  Complete path of agent 28:
[DBG]    Original: 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 629 628 628 660 692 691 691 691 691 692 724 725 726 727 
[DBG]    New:     661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 629 628 628 660 692 691 691 691 691 692 724 725 726 727 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 629 628 628 660 692 691 691 691 691 
[DBG]    Local path (in submap): 692 724 725 726 
[DBG]    Suffix (out of submap): 727 
[DBG]  Original agent path length 28 je: 41
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 0: 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 629, 628, 628, 660, 692, 691, 691, 691, 691, 692, 724, 725, 726, 727, 
[DBG]  Path for agent 28 updated, resulting length: 41
[DBG]  Update the agent path 42 | Original local length: 3 | New local length: 3
[DBG]  agent 42 t=0 => decoded (sx,sy)=(3,2) => global_id=724
[DBG]  agent 42 t=1 => decoded (sx,sy)=(3,3) => global_id=725
[DBG]  agent 42 t=2 => decoded (sx,sy)=(3,4) => global_id=726
[DBG]  Complete path of agent 42:
[DBG]    Original: 224 256 257 289 321 353 354 355 387 388 389 390 391 423 424 425 426 427 428 429 430 431 432 464 496 528 528 529 561 593 625 657 658 659 660 692 724 725 726 727 759 
[DBG]    New:     224 256 257 289 321 353 354 355 387 388 389 390 391 423 424 425 426 427 428 429 430 431 432 464 496 528 528 529 561 593 625 657 658 659 660 692 724 725 726 727 759 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 224 256 257 289 321 353 354 355 387 388 389 390 391 423 424 425 426 427 428 429 430 431 432 464 496 528 528 529 561 593 625 657 658 659 660 692 
[DBG]    Local path (in submap): 724 725 726 
[DBG]    Suffix (out of submap): 727 759 
[DBG]  Original agent path length 42 je: 41
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 1: 224, 256, 257, 289, 321, 353, 354, 355, 387, 388, 389, 390, 391, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 464, 496, 528, 528, 529, 561, 593, 625, 657, 658, 659, 660, 692, 724, 725, 726, 727, 759, 
[DBG]  Path for agent 42 updated, resulting length: 41
[DBG]  Update the agent path 69 | Original local length: 4 | New local length: 4
[DBG]  agent 69 t=0 => decoded (sx,sy)=(2,1) => global_id=691
[DBG]  agent 69 t=1 => decoded (sx,sy)=(2,2) => global_id=692
[DBG]  agent 69 t=2 => decoded (sx,sy)=(3,2) => global_id=724
[DBG]  agent 69 t=3 => decoded (sx,sy)=(4,2) => global_id=756
[DBG]  Complete path of agent 69:
[DBG]    Original: 4 5 37 69 70 71 72 73 74 106 107 139 140 141 173 205 237 269 301 333 365 366 398 430 431 463 464 496 528 529 561 593 625 657 658 659 691 692 724 756 788 820 
[DBG]    New:     4 5 37 69 70 71 72 73 74 106 107 139 140 141 173 205 237 269 301 333 365 366 398 430 431 463 464 496 528 529 561 593 625 657 658 659 691 692 724 756 788 820 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 4 5 37 69 70 71 72 73 74 106 107 139 140 141 173 205 237 269 301 333 365 366 398 430 431 463 464 496 528 529 561 593 625 657 658 659 
[DBG]    Local path (in submap): 691 692 724 756 
[DBG]    Suffix (out of submap): 788 820 
[DBG]  Original agent path length 69 je: 42
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 2: 4, 5, 37, 69, 70, 71, 72, 73, 74, 106, 107, 139, 140, 141, 173, 205, 237, 269, 301, 333, 365, 366, 398, 430, 431, 463, 464, 496, 528, 529, 561, 593, 625, 657, 658, 659, 691, 692, 724, 756, 788, 820, 
[DBG]  Path for agent 69 updated, resulting length: 42
[DBG]  Paths successfully updated.
[DBG]  (LNS.cpp) New path for agent 28: 
[DBG]  661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 629, 628, 628, 660, 692, 691, 691, 691, 691, 692, 724, 725, 726, 727, 
[DBG]  (LNS.cpp) New path for agent 42: 
[DBG]  224, 256, 257, 289, 321, 353, 354, 355, 387, 388, 389, 390, 391, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 464, 496, 528, 528, 529, 561, 593, 625, 657, 658, 659, 660, 692, 724, 725, 726, 727, 759, 
[DBG]  (LNS.cpp) New path for agent 69: 
[DBG]  4, 5, 37, 69, 70, 71, 72, 73, 74, 106, 107, 139, 140, 141, 173, 205, 237, 269, 301, 333, 365, 366, 398, 430, 431, 463, 464, 496, 528, 529, 561, 593, 625, 657, 658, 659, 691, 692, 724, 756, 788, 820, 
[DBG]  Delta value: 0
[DBG]  Rewarding metric index = 0
[DBG]  component_weights = {0.995257, 0.00221526, 0.00128252, 0.00124529}
[DBG]  opSuccess value: 1
[STAT] neighbor.sum_of_costs before recomputation: 121
[STAT] neighbor.old_sum_of_costs before recomputation: 121
[STAT] sum_of_costs before recomputation: 4378
[DBG]  Validate solution immediately after SAT success.
[DBG]  No problems after SAT replan.
[DBG]  Recomputing sum_of_cost by dividing neighbor.sum_of_costs and neighbor.old_sum_of_costs
[STAT] sum_of_costs after recomputation: 4378
[STAT] Iteration 79
[DBG]  Using SAT operator (destroy+repair SAT).
[DBG]  ====================
[DBG]  SAT destroy operator called.
[DBG]  SAT heuristic: 2
[DBG]  key_agent_id: 28
[DBG]  key_agent_id global path length: 41
[DBG]  Submap content (global positions):
[DBG]  661 662 663 664 665 
[DBG]  693 694 695 696 697 
[DBG]  725 726 727 728 729 
[DBG]  757 758 759 760 761 
[DBG]  789 790 791 792 793 
[DBG]  Map content with agents and obstacles:
[DBG]  . X X . X 
[DBG]  X X X A . 
[DBG]  . . A . . 
[DBG]  . X A X . 
[DBG]  X . X . . 
[DBG]  content of the map structure that we pass to the SAT solver:
[DBG]  1  -1  -1  1  -1  
[DBG]  -1  -1  -1  1  1  
[DBG]  1  1  1  1  1  
[DBG]  1  -1  1  -1  1  
[DBG]  -1  1  -1  1  1  
[DBG]  Identifying agents in a submap for rescheduling (when key_agent is there at the time 40):
[DBG]  Agent 1 found intervals in the sub-map:
[DBG]   [12..16]
[DBG]  Agent 1 is not in sub-map at time 40 (intervals: 
[DBG]  [12..16] )
[DBG]  Agent 28 found intervals in the sub-map:
[DBG]   [0..26] [38..40]
[DBG]  Agent 28 (interval in submap: [38..40]) contains time 40, added to replan.
[DBG]  Agent 42 found intervals in the sub-map:
[DBG]   [37..40]
[DBG]  Agent 42 (interval in submap: [37..40]) contains time 40, added to replan.
[DBG]  Agent 53 found intervals in the sub-map:
[DBG]   [39..45]
[DBG]  Agent 53 (interval in submap: [39..45]) contains time 40, added to replan.
[DBG]  Agent 55 found intervals in the sub-map:
[DBG]  
[DBG]  Agent 55 is not in sub-map at time 40 (intervals: 
[DBG]  )
[DBG]  Agent 28 | Start (global): 727 -> (local): (2, 2) at time 40 | Goal (global): 727 -> (local): (2, 2) at time 40
[DBG]  Agent 42 | Start (global): 759 -> (local): (3, 2) at time 40 | Goal (global): 759 -> (local): (3, 2) at time 40
[DBG]  Agent 53 | Start (global): 696 -> (local): (1, 3) at time 40 | Goal (global): 792 -> (local): (4, 3) at time 45
[DBG]  [REPAIR] SAT destroy operator called.
[DBG]  [REPAIR] SAT operator â€“ launching subproblem FOR OPTIMIZATION.
[DBG]  Creating local paths (sx, sy) in the submap for T_sync = 40
[DBG]    Agent 28 (global paths from T=40 to 40) has local path: (2,2) 
[DBG]    Agent 42 (global paths from T=40 to 40) has local path: (3,2) 
[DBG]    Agent 53 (global paths from T=40 to 45) has local path: (1,3) (1,4) (2,4) (3,4) (4,4) (4,3) 
[DBG]  Checking input data for SAT solver:
[DBG]    - Number of agents to replan: 3
[DBG]  Agent 28 has the original local path length: 1 => Start (2,2), Goal (2,2)
[DBG]  Agent 42 has the original local path length: 1 => Start (3,2), Goal (3,2)
[DBG]  Agent 53 has the original local path length: 6 => Start (1,3), Goal (4,3)
[DBG]  Start position: (2, 2), (3, 2), (1, 3), 
[DBG]  Goal position: (2, 2), (3, 2), (4, 3), 
[DBG]  SAT instance and solver created.
Currently solving
Instance name: scen
Map name: map
Encoding used: disappear_at_goal
SAT solver used: Kissat
Optimizing function: sum of costs
Number of agents: 3
Mks LB: 6
SoC LB: 8
Delta: 0
Remaining time: 300000 [ms]

Vertex conflict! Agents 0, 1, timestep 1, location 0
Swapping conflict! Agents 0, 1, timestep 1, edge (0,0)
Vertex conflict! Agents 0, 1, timestep 2, location 0
Swapping conflict! Agents 0, 1, timestep 2, edge (0,0)
Vertex conflict! Agents 0, 1, timestep 3, location 0
Swapping conflict! Agents 0, 1, timestep 3, edge (0,0)
Vertex conflict! Agents 0, 1, timestep 4, location 0
Swapping conflict! Agents 0, 1, timestep 4, edge (0,0)
Vertex conflict! Agents 0, 1, timestep 5, location 0
Found plan [agents = 3] [timesteps = 6]
Agent #0 : 6 0 0 0 0 0 
Agent #1 : 10 0 0 0 0 0 
Agent #2 : 2 7 8 11 14 13 

[STAT] Solver returned: 0
[DBG]  Agent (index) 28 | New local path (submap idx):
[DBG]  6 
[DBG]  Agent (index) 42 | New local path (submap idx):
[DBG]  10 
[DBG]  Agent (index) 53 | New local path (submap idx):
[DBG]  2 7 8 11 14 13 
[DBG]  Update the agent path 28 | Original local length: 1 | New local length: 1
[DBG]  agent 28 t=0 => decoded (sx,sy)=(2,2) => global_id=727
[DBG]  Complete path of agent 28:
[DBG]    Original: 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 629 628 628 660 692 691 691 691 691 692 724 725 726 727 
[DBG]    New:     661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 629 628 628 660 692 691 691 691 691 692 724 725 726 727 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 629 628 628 660 692 691 691 691 691 692 724 725 726 
[DBG]    Local path (in submap): 727 
[DBG]    Suffix (out of submap): 
[DBG]  Original agent path length 28 je: 41
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 0: 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 629, 628, 628, 660, 692, 691, 691, 691, 691, 692, 724, 725, 726, 727, 
[DBG]  Path for agent 28 updated, resulting length: 41
[DBG]  Update the agent path 42 | Original local length: 1 | New local length: 1
[DBG]  agent 42 t=0 => decoded (sx,sy)=(3,2) => global_id=759
[DBG]  Complete path of agent 42:
[DBG]    Original: 224 256 257 289 321 353 354 355 387 388 389 390 391 423 424 425 426 427 428 429 430 431 432 464 496 528 528 529 561 593 625 657 658 659 660 692 724 725 726 727 759 
[DBG]    New:     224 256 257 289 321 353 354 355 387 388 389 390 391 423 424 425 426 427 428 429 430 431 432 464 496 528 528 529 561 593 625 657 658 659 660 692 724 725 726 727 759 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 224 256 257 289 321 353 354 355 387 388 389 390 391 423 424 425 426 427 428 429 430 431 432 464 496 528 528 529 561 593 625 657 658 659 660 692 724 725 726 727 
[DBG]    Local path (in submap): 759 
[DBG]    Suffix (out of submap): 
[DBG]  Original agent path length 42 je: 41
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 1: 224, 256, 257, 289, 321, 353, 354, 355, 387, 388, 389, 390, 391, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 464, 496, 528, 528, 529, 561, 593, 625, 657, 658, 659, 660, 692, 724, 725, 726, 727, 759, 
[DBG]  Path for agent 42 updated, resulting length: 41
[DBG]  Update the agent path 53 | Original local length: 6 | New local length: 6
[DBG]  agent 53 t=0 => decoded (sx,sy)=(1,3) => global_id=696
[DBG]  agent 53 t=1 => decoded (sx,sy)=(2,3) => global_id=728
[DBG]  agent 53 t=2 => decoded (sx,sy)=(2,4) => global_id=729
[DBG]  agent 53 t=3 => decoded (sx,sy)=(3,4) => global_id=761
[DBG]  agent 53 t=4 => decoded (sx,sy)=(4,4) => global_id=793
[DBG]  agent 53 t=5 => decoded (sx,sy)=(4,3) => global_id=792
[DBG]  Complete path of agent 53:
[DBG]    Original: 84 116 148 180 212 244 276 277 278 310 311 343 375 376 408 440 440 472 504 505 506 507 508 508 540 539 538 570 569 601 600 599 599 599 599 599 599 600 632 664 696 697 729 761 793 792 824 823 822 821 
[DBG]    New:     84 116 148 180 212 244 276 277 278 310 311 343 375 376 408 440 440 472 504 505 506 507 508 508 540 539 538 570 569 601 600 599 599 599 599 599 599 600 632 664 696 728 729 761 793 792 824 823 822 821 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 84 116 148 180 212 244 276 277 278 310 311 343 375 376 408 440 440 472 504 505 506 507 508 508 540 539 538 570 569 601 600 599 599 599 599 599 599 600 632 664 
[DBG]    Local path (in submap): 696 728 729 761 793 792 
[DBG]    Suffix (out of submap): 824 823 822 821 
[DBG]  Original agent path length 53 je: 50
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 2: 84, 116, 148, 180, 212, 244, 276, 277, 278, 310, 311, 343, 375, 376, 408, 440, 440, 472, 504, 505, 506, 507, 508, 508, 540, 539, 538, 570, 569, 601, 600, 599, 599, 599, 599, 599, 599, 600, 632, 664, 696, 728, 729, 761, 793, 792, 824, 823, 822, 821, 
[DBG]  Path for agent 53 updated, resulting length: 50
[DBG]  Paths successfully updated.
[DBG]  (LNS.cpp) New path for agent 28: 
[DBG]  661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 629, 628, 628, 660, 692, 691, 691, 691, 691, 692, 724, 725, 726, 727, 
[DBG]  (LNS.cpp) New path for agent 42: 
[DBG]  224, 256, 257, 289, 321, 353, 354, 355, 387, 388, 389, 390, 391, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 464, 496, 528, 528, 529, 561, 593, 625, 657, 658, 659, 660, 692, 724, 725, 726, 727, 759, 
[DBG]  (LNS.cpp) New path for agent 53: 
[DBG]  84, 116, 148, 180, 212, 244, 276, 277, 278, 310, 311, 343, 375, 376, 408, 440, 440, 472, 504, 505, 506, 507, 508, 508, 540, 539, 538, 570, 569, 601, 600, 599, 599, 599, 599, 599, 599, 600, 632, 664, 696, 728, 729, 761, 793, 792, 824, 823, 822, 821, 
[DBG]  Delta value: 0
[DBG]  Rewarding metric index = 0
[DBG]  component_weights = {0.995493, 0.002105, 0.00121868, 0.00118331}
[DBG]  opSuccess value: 1
[STAT] neighbor.sum_of_costs before recomputation: 129
[STAT] neighbor.old_sum_of_costs before recomputation: 129
[STAT] sum_of_costs before recomputation: 4378
[DBG]  Validate solution immediately after SAT success.
[WARNING] Problem after SAT: Target conflict: agent 53 (len 49) traverses target of agent 1 (len 16) at location 728 at timestep 41
[DBG]  [DEBUG] Attempting immediate repair via init_lns because problem occurred after SAT (should be applied only for conflicts...).
[DBG]  [DEBUG] Passing 150 agents to init_lns (skip=true).
[DBG]  [DEBUG] path_table contents for selected agents (neighbor.agents):
[DBG]    Agent 28 => controlling path length=41
[DBG]    Agent 42 => controlling path length=41
[DBG]    Agent 53 => controlling path length=50
[DBG]  hodnota skip_initial_solution=1
[DBG]  We skip initialSolution => call buildCollisionData()
[DBG]  buildCollisionData() called â€“ skip_initial_solution case.
[DBG]  Agents.size()=150, collision_graph.size()=150
[DBG]  agent 1 => updateCollidingPairs => foundCollision
[DBG]  agent 53 => updateCollidingPairs => foundCollision
[DBG]  Conflicting agent pairs:
[DBG]  agent 1 is in conflict with agent 53
[DBG]  buildCollisionData() => sum_of_costs=4378, num_of_colliding_pairs=1
[DBG]  buildCollisionData done => sum_of_costs=4378, num_of_colliding_pairs=1
[DBG]  sum_of_cost hodnota: 4378
[DBG]  After skip/init build => iteration_stats.back(): sum_of_costs=4378, collisions=1
[DEBUG] Using default neighbor generation strategy for conflicts: 2
	InitLNS(PP): runtime = 0.00131587, iterations = 2, colliding pairs = 0, initial colliding pairs = 1, solution cost = 4391, initial solution cost = 4378, failed iterations = 0
[DBG]  [DEBUG] init_lns->sum_of_costs after init_lns->run: 4391
[DBG]  [DEBUG] sum_of_costs after assignment from init_lns->run: 4391
[DBG]  Recomputing sum_of_cost by dividing neighbor.sum_of_costs and neighbor.old_sum_of_costs
[STAT] sum_of_costs after recomputation: 4391
[STAT] Iteration 80
[DBG]  Using SAT operator (destroy+repair SAT).
[DBG]  ====================
[DBG]  SAT destroy operator called.
[DBG]  SAT heuristic: 2
[DBG]  key_agent_id: 28
[DBG]  key_agent_id global path length: 41
[DBG]  Submap content (global positions):
[DBG]  595 596 597 598 599 
[DBG]  627 628 629 630 631 
[DBG]  659 660 661 662 663 
[DBG]  691 692 693 694 695 
[DBG]  723 724 725 726 727 
[DBG]  Map content with agents and obstacles:
[DBG]  X . . X . 
[DBG]  . . . X . 
[DBG]  . . A X X 
[DBG]  . A X X X 
[DBG]  X . . . . 
[DBG]  content of the map structure that we pass to the SAT solver:
[DBG]  -1  1  1  -1  1  
[DBG]  1  1  1  -1  1  
[DBG]  1  1  1  -1  -1  
[DBG]  1  1  -1  -1  -1  
[DBG]  -1  1  1  1  1  
[DBG]  Identifying agents in a submap for rescheduling (when key_agent is there at the time 2):
[DBG]  Agent 7 found intervals in the sub-map:
[DBG]  
[DBG]  Agent 7 is not in sub-map at time 2 (intervals: 
[DBG]  )
[DBG]  Agent 28 found intervals in the sub-map:
[DBG]   [0..40]
[DBG]  Agent 28 (interval in submap: [0..40]) contains time 2, added to replan.
[DBG]  Agent 108 found intervals in the sub-map:
[DBG]   [0..5]
[DBG]  Agent 108 (interval in submap: [0..5]) contains time 2, added to replan.
[DBG]  Agent 28 | Start (global): 661 -> (local): (2, 2) at time 2 | Goal (global): 727 -> (local): (4, 4) at time 40
[DBG]  Agent 108 | Start (global): 692 -> (local): (3, 1) at time 2 | Goal (global): 724 -> (local): (4, 1) at time 5
[DBG]  [REPAIR] SAT destroy operator called.
[DBG]  [REPAIR] SAT operator â€“ launching subproblem FOR OPTIMIZATION.
[DBG]  Creating local paths (sx, sy) in the submap for T_sync = 2
[DBG]    Agent 28 (global paths from T=2 to 40) has local path: (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (1,2) (1,1) (1,1) (2,1) (3,1) (3,0) (3,0) (3,0) (3,0) (3,1) (4,1) (4,2) (4,3) (4,4) 
[DBG]    Agent 108 (global paths from T=2 to 5) has local path: (3,1) (3,1) (3,1) (4,1) 
[DBG]  Checking input data for SAT solver:
[DBG]    - Number of agents to replan: 2
[DBG]  Agent 28 has the original local path length: 39 => Start (2,2), Goal (4,4)
[DBG]  Agent 108 has the original local path length: 4 => Start (3,1), Goal (4,1)
[DBG]  Start position: (2, 2), (3, 1), 
[DBG]  Goal position: (4, 4), (4, 1), 
[DBG]  SAT instance and solver created.
Currently solving
Instance name: scen
Map name: map
Encoding used: disappear_at_goal
SAT solver used: Kissat
Optimizing function: sum of costs
Number of agents: 2
Mks LB: 7
SoC LB: 9
Delta: 0
Remaining time: 300000 [ms]

Found plan [agents = 2] [timesteps = 7]
Agent #0 : 9 8 11 12 13 14 15 
Agent #1 : 11 12 0 0 0 0 0 

[STAT] Solver returned: 0
[DBG]  Agent (index) 28 | New local path (submap idx):
[DBG]  9 8 11 12 13 14 15 
[DBG]  Agent (index) 108 | New local path (submap idx):
[DBG]  11 12 
[DBG]  Update the agent path 28 | Original local length: 39 | New local length: 7
[DBG]  agent 28 t=0 => decoded (sx,sy)=(2,2) => global_id=661
[DBG]  agent 28 t=1 => decoded (sx,sy)=(2,1) => global_id=660
[DBG]  agent 28 t=2 => decoded (sx,sy)=(3,1) => global_id=692
[DBG]  agent 28 t=3 => decoded (sx,sy)=(4,1) => global_id=724
[DBG]  agent 28 t=4 => decoded (sx,sy)=(4,2) => global_id=725
[DBG]  agent 28 t=5 => decoded (sx,sy)=(4,3) => global_id=726
[DBG]  agent 28 t=6 => decoded (sx,sy)=(4,4) => global_id=727
[DBG]  Complete path of agent 28:
[DBG]    Original: 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 629 628 628 660 692 691 691 691 691 692 724 725 726 727 
[DBG]    New:     661 661 661 660 692 724 725 726 727 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 661 661 
[DBG]    Local path (in submap): 661 660 692 724 725 726 727 
[DBG]    Suffix (out of submap): 
[DBG]  Original agent path length 28 je: 41
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 0: 661, 661, 661, 660, 692, 724, 725, 726, 727, 
[DBG]  Path for agent 28 updated, resulting length: 9
[DBG]  Update the agent path 108 | Original local length: 4 | New local length: 2
[DBG]  agent 108 t=0 => decoded (sx,sy)=(3,1) => global_id=692
[DBG]  agent 108 t=1 => decoded (sx,sy)=(4,1) => global_id=724
[DBG]  Complete path of agent 108:
[DBG]    Original: 628 660 692 692 692 724 756 788 820 821 822 854 855 887 888 889 890 891 923 955 956 957 989 1021 
[DBG]    New:     628 660 692 724 756 788 820 821 822 854 855 887 888 889 890 891 923 955 956 957 989 1021 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 628 660 
[DBG]    Local path (in submap): 692 724 756 788 
[DBG]    Suffix (out of submap): 820 821 822 854 855 887 888 889 890 891 923 955 956 957 989 1021 
[DBG]  Original agent path length 108 je: 24
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 1: 628, 660, 692, 724, 756, 788, 820, 821, 822, 854, 855, 887, 888, 889, 890, 891, 923, 955, 956, 957, 989, 1021, 
[DBG]  Path for agent 108 updated, resulting length: 22
[DBG]  Paths successfully updated.
[DBG]  (LNS.cpp) New path for agent 28: 
[DBG]  661, 661, 661, 660, 692, 724, 725, 726, 727, 
[DBG]  (LNS.cpp) New path for agent 108: 
[DBG]  628, 660, 692, 724, 756, 788, 820, 821, 822, 854, 855, 887, 888, 889, 890, 891, 923, 955, 956, 957, 989, 1021, 
[DBG]  Delta value: 0.539683
[DBG]  Rewarding metric index = 0
[DBG]  component_weights = {0.997214, 0.00130105, 0.000753238, 0.000731377}
[DBG]  opSuccess value: 1
[STAT] neighbor.sum_of_costs before recomputation: 29
[STAT] neighbor.old_sum_of_costs before recomputation: 63
[STAT] sum_of_costs before recomputation: 4391
[DBG]  Validate solution immediately after SAT success.
[WARNING] Problem after SAT: Vertex conflict between agents 7 and 108 at location 788 at timestep 5
[DBG]  [DEBUG] Attempting immediate repair via init_lns because problem occurred after SAT (should be applied only for conflicts...).
[DBG]  [DEBUG] Passing 150 agents to init_lns (skip=true).
[DBG]  [DEBUG] path_table contents for selected agents (neighbor.agents):
[DBG]    Agent 28 => controlling path length=9
[DBG]    Agent 108 => controlling path length=22
[DBG]  hodnota skip_initial_solution=1
[DBG]  We skip initialSolution => call buildCollisionData()
[DBG]  buildCollisionData() called â€“ skip_initial_solution case.
[DBG]  Agents.size()=150, collision_graph.size()=150
[DBG]  agent 7 => updateCollidingPairs => foundCollision
[DBG]  agent 11 => updateCollidingPairs => foundCollision
[DBG]  agent 28 => updateCollidingPairs => foundCollision
[DBG]  agent 42 => updateCollidingPairs => foundCollision
[DBG]  agent 46 => updateCollidingPairs => foundCollision
[DBG]  agent 108 => updateCollidingPairs => foundCollision
[DBG]  agent 111 => updateCollidingPairs => foundCollision
[DBG]  agent 135 => updateCollidingPairs => foundCollision
[DBG]  Conflicting agent pairs:
[DBG]  agent 7 is in conflict with agent 108
[DBG]  agent 11 is in conflict with agent 108
[DBG]  agent 28 is in conflict with agent 42
[DBG]  agent 28 is in conflict with agent 111
[DBG]  agent 28 is in conflict with agent 135
[DBG]  agent 46 is in conflict with agent 108
[DBG]  buildCollisionData() => sum_of_costs=4357, num_of_colliding_pairs=6
[DBG]  buildCollisionData done => sum_of_costs=4357, num_of_colliding_pairs=6
[DBG]  sum_of_cost hodnota: 4357
[DBG]  After skip/init build => iteration_stats.back(): sum_of_costs=4357, collisions=6
[DEBUG] Using default neighbor generation strategy for conflicts: 0
[DEBUG] Using default neighbor generation strategy for conflicts: 2
[DEBUG] Using default neighbor generation strategy for conflicts: 2
[DEBUG] Using default neighbor generation strategy for conflicts: 2
[DEBUG] Using default neighbor generation strategy for conflicts: 2
	InitLNS(PP): runtime = 0.00710046, iterations = 6, colliding pairs = 0, initial colliding pairs = 6, solution cost = 4390, initial solution cost = 4357, failed iterations = 0
[DBG]  [DEBUG] init_lns->sum_of_costs after init_lns->run: 4390
[DBG]  [DEBUG] sum_of_costs after assignment from init_lns->run: 4390
[DBG]  Recomputing sum_of_cost by dividing neighbor.sum_of_costs and neighbor.old_sum_of_costs
[STAT] sum_of_costs after recomputation: 4390
[STAT] Iteration 81
[DBG]  Using SAT operator (destroy+repair SAT).
[DBG]  ====================
[DBG]  SAT destroy operator called.
[DBG]  SAT heuristic: 2
[DBG]  key_agent_id: 28
[DBG]  key_agent_id global path length: 41
[DBG]  Submap content (global positions):
[DBG]  591 592 593 594 595 
[DBG]  623 624 625 626 627 
[DBG]  655 656 657 658 659 
[DBG]  687 688 689 690 691 
[DBG]  719 720 721 722 723 
[DBG]  Map content with agents and obstacles:
[DBG]  . . A . X 
[DBG]  A X . X . 
[DBG]  A . A . . 
[DBG]  . . A X . 
[DBG]  . . . . X 
[DBG]  content of the map structure that we pass to the SAT solver:
[DBG]  1  1  1  1  -1  
[DBG]  1  -1  1  -1  1  
[DBG]  1  1  1  1  1  
[DBG]  1  1  1  -1  1  
[DBG]  1  1  1  1  -1  
[DBG]  Identifying agents in a submap for rescheduling (when key_agent is there at the time 15):
[DBG]  Agent 0 found intervals in the sub-map:
[DBG]   [16..21]
[DBG]  Agent 0 is not in sub-map at time 15 (intervals: 
[DBG]  [16..21] )
[DBG]  Agent 27 found intervals in the sub-map:
[DBG]   [16..19]
[DBG]  Agent 27 is not in sub-map at time 15 (intervals: 
[DBG]  [16..19] )
[DBG]  Agent 28 found intervals in the sub-map:
[DBG]   [10..17] [24..35]
[DBG]  Agent 28 (interval in submap: [10..17]) contains time 15, added to replan.
[DBG]  Agent 56 found intervals in the sub-map:
[DBG]   [15..20]
[DBG]  Agent 56 (interval in submap: [15..20]) contains time 15, added to replan.
[DBG]  Agent 62 found intervals in the sub-map:
[DBG]   [1..9]
[DBG]  Agent 62 is not in sub-map at time 15 (intervals: 
[DBG]  [1..9] )
[DBG]  Agent 74 found intervals in the sub-map:
[DBG]   [7..13]
[DBG]  Agent 74 is not in sub-map at time 15 (intervals: 
[DBG]  [7..13] )
[DBG]  Agent 79 found intervals in the sub-map:
[DBG]   [12..18]
[DBG]  Agent 79 (interval in submap: [12..18]) contains time 15, added to replan.
[DBG]  Agent 93 found intervals in the sub-map:
[DBG]   [16..22]
[DBG]  Agent 93 is not in sub-map at time 15 (intervals: 
[DBG]  [16..22] )
[DBG]  Agent 109 found intervals in the sub-map:
[DBG]  
[DBG]  Agent 109 is not in sub-map at time 15 (intervals: 
[DBG]  )
[DBG]  Agent 114 found intervals in the sub-map:
[DBG]   [10..15]
[DBG]  Agent 114 (interval in submap: [10..15]) contains time 15, added to replan.
[DBG]  Agent 131 found intervals in the sub-map:
[DBG]   [12..20]
[DBG]  Agent 131 (interval in submap: [12..20]) contains time 15, added to replan.
[DBG]  Agent 135 found intervals in the sub-map:
[DBG]  
[DBG]  Agent 135 is not in sub-map at time 15 (intervals: 
[DBG]  )
[DBG]  Agent 28 | Start (global): 657 -> (local): (2, 2) at time 15 | Goal (global): 659 -> (local): (2, 4) at time 17
[DBG]  Agent 56 | Start (global): 655 -> (local): (2, 0) at time 15 | Goal (global): 593 -> (local): (0, 2) at time 20
[DBG]  Agent 79 | Start (global): 623 -> (local): (1, 0) at time 15 | Goal (global): 592 -> (local): (0, 1) at time 18
[DBG]  Agent 114 | Start (global): 593 -> (local): (0, 2) at time 15 | Goal (global): 593 -> (local): (0, 2) at time 15
[DBG]  Agent 131 | Start (global): 689 -> (local): (3, 2) at time 15 | Goal (global): 719 -> (local): (4, 0) at time 20
[DBG]  [REPAIR] SAT destroy operator called.
[DBG]  [REPAIR] SAT operator â€“ launching subproblem FOR OPTIMIZATION.
[DBG]  Creating local paths (sx, sy) in the submap for T_sync = 15
[DBG]    Agent 28 (global paths from T=15 to 17) has local path: (2,2) (2,3) (2,4) 
[DBG]    Agent 56 (global paths from T=15 to 20) has local path: (2,0) (2,1) (2,2) (1,2) (0,2) (0,2) 
[DBG]    Agent 79 (global paths from T=15 to 18) has local path: (1,0) (0,0) (0,1) (0,1) 
[DBG]    Agent 114 (global paths from T=15 to 15) has local path: (0,2) 
[DBG]    Agent 131 (global paths from T=15 to 20) has local path: (3,2) (4,2) (4,2) (4,2) (4,1) (4,0) 
[DBG]  Checking input data for SAT solver:
[DBG]    - Number of agents to replan: 5
[DBG]  Agent 28 has the original local path length: 3 => Start (2,2), Goal (2,4)
[DBG]  Agent 56 has the original local path length: 6 => Start (2,0), Goal (0,2)
[DBG]  Agent 79 has the original local path length: 4 => Start (1,0), Goal (0,1)
[DBG]  Agent 114 has the original local path length: 1 => Start (0,2), Goal (0,2)
[DBG]  Agent 131 has the original local path length: 6 => Start (3,2), Goal (4,0)
[DBG]  Start position: (2, 2), (2, 0), (1, 0), (0, 2), (3, 2), 
[DBG]  Goal position: (2, 4), (0, 2), (0, 1), (0, 2), (4, 0), 
[DBG]  SAT instance and solver created.
Currently solving
Instance name: scen
Map name: map
Encoding used: disappear_at_goal
SAT solver used: Kissat
Optimizing function: sum of costs
Number of agents: 5
Mks LB: 5
SoC LB: 16
Delta: 0
Remaining time: 300000 [ms]

Vertex conflict! Agents 0, 2, timestep 3, location 0
Swapping conflict! Agents 0, 2, timestep 3, edge (0,0)
Vertex conflict! Agents 0, 2, timestep 4, location 0
Vertex conflict! Agents 0, 3, timestep 3, location 0
Swapping conflict! Agents 0, 3, timestep 3, edge (0,0)
Vertex conflict! Agents 0, 3, timestep 4, location 0
Vertex conflict! Agents 0, 4, timestep 4, location 0
Vertex conflict! Agents 2, 3, timestep 1, location 0
Vertex conflict! Agents 2, 3, timestep 3, location 0
Swapping conflict! Agents 2, 3, timestep 3, edge (0,0)
Vertex conflict! Agents 2, 3, timestep 4, location 0
Vertex conflict! Agents 2, 4, timestep 4, location 0
Vertex conflict! Agents 3, 4, timestep 4, location 0
Found plan [agents = 5] [timesteps = 5]
Agent #0 : 9 10 11 0 0 
Agent #1 : 7 8 9 5 2 
Agent #2 : 4 0 1 0 0 
Agent #3 : 2 0 0 0 0 
Agent #4 : 14 18 17 16 0 

[STAT] Solver returned: 0
[DBG]  Agent (index) 28 | New local path (submap idx):
[DBG]  9 10 11 
[DBG]  Agent (index) 56 | New local path (submap idx):
[DBG]  7 8 9 5 2 
[DBG]  Agent (index) 79 | New local path (submap idx):
[DBG]  4 0 1 
[DBG]  Agent (index) 114 | New local path (submap idx):
[DBG]  2 
[DBG]  Agent (index) 131 | New local path (submap idx):
[DBG]  14 18 17 16 
[DBG]  Update the agent path 28 | Original local length: 3 | New local length: 3
[DBG]  agent 28 t=0 => decoded (sx,sy)=(2,2) => global_id=657
[DBG]  agent 28 t=1 => decoded (sx,sy)=(2,3) => global_id=658
[DBG]  agent 28 t=2 => decoded (sx,sy)=(2,4) => global_id=659
[DBG]  Complete path of agent 28:
[DBG]    Original: 661 661 661 661 661 661 661 661 661 660 659 658 657 656 656 657 658 659 660 661 661 661 661 660 659 691 691 691 691 691 691 691 691 691 691 691 692 724 725 726 727 
[DBG]    New:     661 661 661 661 661 661 661 661 661 660 659 658 657 656 656 657 658 659 660 661 661 661 661 660 659 691 691 691 691 691 691 691 691 691 691 691 692 724 725 726 727 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 661 661 661 661 661 661 661 661 661 660 659 658 657 656 656 
[DBG]    Local path (in submap): 657 658 659 
[DBG]    Suffix (out of submap): 660 661 661 661 661 660 659 691 691 691 691 691 691 691 691 691 691 691 692 724 725 726 727 
[DBG]  Original agent path length 28 je: 41
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 0: 661, 661, 661, 661, 661, 661, 661, 661, 661, 660, 659, 658, 657, 656, 656, 657, 658, 659, 660, 661, 661, 661, 661, 660, 659, 691, 691, 691, 691, 691, 691, 691, 691, 691, 691, 691, 692, 724, 725, 726, 727, 
[DBG]  Path for agent 28 updated, resulting length: 41
[DBG]  Update the agent path 56 | Original local length: 6 | New local length: 5
[DBG]  agent 56 t=0 => decoded (sx,sy)=(2,0) => global_id=655
[DBG]  agent 56 t=1 => decoded (sx,sy)=(2,1) => global_id=656
[DBG]  agent 56 t=2 => decoded (sx,sy)=(2,2) => global_id=657
[DBG]  agent 56 t=3 => decoded (sx,sy)=(1,2) => global_id=625
[DBG]  agent 56 t=4 => decoded (sx,sy)=(0,2) => global_id=593
[DBG]  Complete path of agent 56:
[DBG]    Original: 805 806 807 808 776 777 778 779 747 715 683 684 685 686 654 655 656 657 625 593 593 561 561 529 530 498 466 466 467 468 469 470 470 438 438 438 438 439 407 408 409 377 378 379 380 381 349 350 351 319 287 255 
[DBG]    New:     805 806 807 808 776 777 778 779 747 715 683 684 685 686 654 655 656 657 625 593 561 561 529 530 498 466 466 467 468 469 470 470 438 438 438 438 439 407 408 409 377 378 379 380 381 349 350 351 319 287 255 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 805 806 807 808 776 777 778 779 747 715 683 684 685 686 654 
[DBG]    Local path (in submap): 655 656 657 625 593 561 
[DBG]    Suffix (out of submap): 561 529 530 498 466 466 467 468 469 470 470 438 438 438 438 439 407 408 409 377 378 379 380 381 349 350 351 319 287 255 
[DBG]  Original agent path length 56 je: 52
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 1: 805, 806, 807, 808, 776, 777, 778, 779, 747, 715, 683, 684, 685, 686, 654, 655, 656, 657, 625, 593, 561, 561, 529, 530, 498, 466, 466, 467, 468, 469, 470, 470, 438, 438, 438, 438, 439, 407, 408, 409, 377, 378, 379, 380, 381, 349, 350, 351, 319, 287, 255, 
[DBG]  Path for agent 56 updated, resulting length: 51
[DBG]  Update the agent path 79 | Original local length: 4 | New local length: 3
[DBG]  agent 79 t=0 => decoded (sx,sy)=(1,0) => global_id=623
[DBG]  agent 79 t=1 => decoded (sx,sy)=(0,0) => global_id=591
[DBG]  agent 79 t=2 => decoded (sx,sy)=(0,1) => global_id=592
[DBG]  Complete path of agent 79:
[DBG]    Original: 1004 1005 1006 974 942 910 878 879 847 815 783 751 719 687 655 623 591 592 592 560 528 528 529 530 531 499 499 467 468 469 437 438 439 407 375 343 344 345 313 281 249 217 185 153 121 122 123 
[DBG]    New:     1004 1005 1006 974 942 910 878 879 847 815 783 751 719 687 655 623 591 592 560 528 528 529 530 531 499 499 467 468 469 437 438 439 407 375 343 344 345 313 281 249 217 185 153 121 122 123 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 1004 1005 1006 974 942 910 878 879 847 815 783 751 719 687 655 
[DBG]    Local path (in submap): 623 591 592 560 
[DBG]    Suffix (out of submap): 528 528 529 530 531 499 499 467 468 469 437 438 439 407 375 343 344 345 313 281 249 217 185 153 121 122 123 
[DBG]  Original agent path length 79 je: 47
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 2: 1004, 1005, 1006, 974, 942, 910, 878, 879, 847, 815, 783, 751, 719, 687, 655, 623, 591, 592, 560, 528, 528, 529, 530, 531, 499, 499, 467, 468, 469, 437, 438, 439, 407, 375, 343, 344, 345, 313, 281, 249, 217, 185, 153, 121, 122, 123, 
[DBG]  Path for agent 79 updated, resulting length: 46
[DBG]  Update the agent path 114 | Original local length: 1 | New local length: 1
[DBG]  agent 114 t=0 => decoded (sx,sy)=(0,2) => global_id=593
[DBG]  Complete path of agent 114:
[DBG]    Original: 875 843 811 779 747 715 683 684 685 686 687 655 623 591 592 593 561 529 529 530 498 466 467 468 469 437 438 439 440 408 409 377 345 313 281 249 217 218 186 154 
[DBG]    New:     875 843 811 779 747 715 683 684 685 686 687 655 623 591 592 593 561 529 529 530 498 466 467 468 469 437 438 439 440 408 409 377 345 313 281 249 217 218 186 154 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 875 843 811 779 747 715 683 684 685 686 687 655 623 591 592 
[DBG]    Local path (in submap): 593 
[DBG]    Suffix (out of submap): 561 529 529 530 498 466 467 468 469 437 438 439 440 408 409 377 345 313 281 249 217 218 186 154 
[DBG]  Original agent path length 114 je: 40
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 3: 875, 843, 811, 779, 747, 715, 683, 684, 685, 686, 687, 655, 623, 591, 592, 593, 561, 529, 529, 530, 498, 466, 467, 468, 469, 437, 438, 439, 440, 408, 409, 377, 345, 313, 281, 249, 217, 218, 186, 154, 
[DBG]  Path for agent 114 updated, resulting length: 40
[DBG]  Update the agent path 131 | Original local length: 6 | New local length: 4
[DBG]  agent 131 t=0 => decoded (sx,sy)=(3,2) => global_id=689
[DBG]  agent 131 t=1 => decoded (sx,sy)=(4,2) => global_id=721
[DBG]  agent 131 t=2 => decoded (sx,sy)=(4,1) => global_id=720
[DBG]  agent 131 t=3 => decoded (sx,sy)=(4,0) => global_id=719
[DBG]  Complete path of agent 131:
[DBG]    Original: 341 373 405 437 469 501 533 565 597 629 661 660 659 658 657 689 721 721 721 720 719 751 783 815 847 846 846 878 877 876 875 875 874 873 841 809 777 745 713 712 
[DBG]    New:     341 373 405 437 469 501 533 565 597 629 661 660 659 658 657 689 721 720 719 751 783 815 847 846 846 878 877 876 875 875 874 873 841 809 777 745 713 712 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 341 373 405 437 469 501 533 565 597 629 661 660 659 658 657 
[DBG]    Local path (in submap): 689 721 720 719 751 783 
[DBG]    Suffix (out of submap): 815 847 846 846 878 877 876 875 875 874 873 841 809 777 745 713 712 
[DBG]  Original agent path length 131 je: 40
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 4: 341, 373, 405, 437, 469, 501, 533, 565, 597, 629, 661, 660, 659, 658, 657, 689, 721, 720, 719, 751, 783, 815, 847, 846, 846, 878, 877, 876, 875, 875, 874, 873, 841, 809, 777, 745, 713, 712, 
[DBG]  Path for agent 131 updated, resulting length: 38
[DBG]  Paths successfully updated.
[DBG]  (LNS.cpp) New path for agent 28: 
[DBG]  661, 661, 661, 661, 661, 661, 661, 661, 661, 660, 659, 658, 657, 656, 656, 657, 658, 659, 660, 661, 661, 661, 661, 660, 659, 691, 691, 691, 691, 691, 691, 691, 691, 691, 691, 691, 692, 724, 725, 726, 727, 
[DBG]  (LNS.cpp) New path for agent 56: 
[DBG]  805, 806, 807, 808, 776, 777, 778, 779, 747, 715, 683, 684, 685, 686, 654, 655, 656, 657, 625, 593, 561, 561, 529, 530, 498, 466, 466, 467, 468, 469, 470, 470, 438, 438, 438, 438, 439, 407, 408, 409, 377, 378, 379, 380, 381, 349, 350, 351, 319, 287, 255, 
[DBG]  (LNS.cpp) New path for agent 79: 
[DBG]  1004, 1005, 1006, 974, 942, 910, 878, 879, 847, 815, 783, 751, 719, 687, 655, 623, 591, 592, 560, 528, 528, 529, 530, 531, 499, 499, 467, 468, 469, 437, 438, 439, 407, 375, 343, 344, 345, 313, 281, 249, 217, 185, 153, 121, 122, 123, 
[DBG]  (LNS.cpp) New path for agent 114: 
[DBG]  875, 843, 811, 779, 747, 715, 683, 684, 685, 686, 687, 655, 623, 591, 592, 593, 561, 529, 529, 530, 498, 466, 467, 468, 469, 437, 438, 439, 440, 408, 409, 377, 345, 313, 281, 249, 217, 218, 186, 154, 
[DBG]  (LNS.cpp) New path for agent 131: 
[DBG]  341, 373, 405, 437, 469, 501, 533, 565, 597, 629, 661, 660, 659, 658, 657, 689, 721, 720, 719, 751, 783, 815, 847, 846, 846, 878, 877, 876, 875, 875, 874, 873, 841, 809, 777, 745, 713, 712, 
[DBG]  Delta value: 0.0186047
[DBG]  Rewarding metric index = 0
[DBG]  component_weights = {0.997401, 0.00121365, 0.000702638, 0.000682246}
[DBG]  opSuccess value: 1
[STAT] neighbor.sum_of_costs before recomputation: 211
[STAT] neighbor.old_sum_of_costs before recomputation: 215
[STAT] sum_of_costs before recomputation: 4390
[DBG]  Validate solution immediately after SAT success.
[WARNING] Problem after SAT: Vertex conflict between agents 14 and 131 at location 875 at timestep 29
[DBG]  [DEBUG] Attempting immediate repair via init_lns because problem occurred after SAT (should be applied only for conflicts...).
[DBG]  [DEBUG] Passing 150 agents to init_lns (skip=true).
[DBG]  [DEBUG] path_table contents for selected agents (neighbor.agents):
[DBG]    Agent 28 => controlling path length=41
[DBG]    Agent 56 => controlling path length=51
[DBG]    Agent 79 => controlling path length=46
[DBG]    Agent 114 => controlling path length=40
[DBG]    Agent 131 => controlling path length=38
[DBG]  hodnota skip_initial_solution=1
[DBG]  We skip initialSolution => call buildCollisionData()
[DBG]  buildCollisionData() called â€“ skip_initial_solution case.
[DBG]  Agents.size()=150, collision_graph.size()=150
[DBG]  agent 14 => updateCollidingPairs => foundCollision
[DBG]  agent 27 => updateCollidingPairs => foundCollision
[DBG]  agent 35 => updateCollidingPairs => foundCollision
[DBG]  agent 49 => updateCollidingPairs => foundCollision
[DBG]  agent 56 => updateCollidingPairs => foundCollision
[DBG]  agent 61 => updateCollidingPairs => foundCollision
[DBG]  agent 79 => updateCollidingPairs => foundCollision
[DBG]  agent 101 => updateCollidingPairs => foundCollision
[DBG]  agent 103 => updateCollidingPairs => foundCollision
[DBG]  agent 131 => updateCollidingPairs => foundCollision
[DBG]  Conflicting agent pairs:
[DBG]  agent 14 is in conflict with agent 131
[DBG]  agent 27 is in conflict with agent 131
[DBG]  agent 35 is in conflict with agent 131
[DBG]  agent 49 is in conflict with agent 131
[DBG]  agent 56 is in conflict with agent 61
[DBG]  agent 61 is in conflict with agent 79
[DBG]  agent 101 is in conflict with agent 131
[DBG]  agent 103 is in conflict with agent 131
[DBG]  buildCollisionData() => sum_of_costs=4386, num_of_colliding_pairs=8
[DBG]  buildCollisionData done => sum_of_costs=4386, num_of_colliding_pairs=8
[DBG]  sum_of_cost hodnota: 4386
[DBG]  After skip/init build => iteration_stats.back(): sum_of_costs=4386, collisions=8
[DEBUG] Using default neighbor generation strategy for conflicts: 1
[DEBUG] Using default neighbor generation strategy for conflicts: 0
[DEBUG] Using default neighbor generation strategy for conflicts: 1
	InitLNS(PP): runtime = 0.00379767, iterations = 4, colliding pairs = 0, initial colliding pairs = 8, solution cost = 4376, initial solution cost = 4386, failed iterations = 0
[DBG]  [DEBUG] init_lns->sum_of_costs after init_lns->run: 4376
[DBG]  [DEBUG] sum_of_costs after assignment from init_lns->run: 4376
[DBG]  Recomputing sum_of_cost by dividing neighbor.sum_of_costs and neighbor.old_sum_of_costs
[STAT] sum_of_costs after recomputation: 4376
[STAT] Iteration 82
[DBG]  Using SAT operator (destroy+repair SAT).
[DBG]  ====================
[DBG]  SAT destroy operator called.
[DBG]  SAT heuristic: 2
[DBG]  key_agent_id: 28
[DBG]  key_agent_id global path length: 41
[DBG]  Submap content (global positions):
[DBG]  595 596 597 598 599 
[DBG]  627 628 629 630 631 
[DBG]  659 660 661 662 663 
[DBG]  691 692 693 694 695 
[DBG]  723 724 725 726 727 
[DBG]  Map content with agents and obstacles:
[DBG]  X A . X . 
[DBG]  . . . X . 
[DBG]  A A A X X 
[DBG]  . A X X X 
[DBG]  X . . . . 
[DBG]  content of the map structure that we pass to the SAT solver:
[DBG]  -1  1  1  -1  1  
[DBG]  1  1  1  -1  1  
[DBG]  1  1  1  -1  -1  
[DBG]  1  1  -1  -1  -1  
[DBG]  -1  1  1  1  1  
[DBG]  Identifying agents in a submap for rescheduling (when key_agent is there at the time 22):
[DBG]  Agent 0 found intervals in the sub-map:
[DBG]   [20..23]
[DBG]  Agent 0 (interval in submap: [20..23]) contains time 22, added to replan.
[DBG]  Agent 28 found intervals in the sub-map:
[DBG]   [0..10] [17..40]
[DBG]  Agent 28 (interval in submap: [17..40]) contains time 22, added to replan.
[DBG]  Agent 45 found intervals in the sub-map:
[DBG]   [19..26]
[DBG]  Agent 45 (interval in submap: [19..26]) contains time 22, added to replan.
[DBG]  Agent 57 found intervals in the sub-map:
[DBG]   [21..27]
[DBG]  Agent 57 (interval in submap: [21..27]) contains time 22, added to replan.
[DBG]  Agent 71 found intervals in the sub-map:
[DBG]   [22..25]
[DBG]  Agent 71 (interval in submap: [22..25]) contains time 22, added to replan.
[DBG]  Agent 100 found intervals in the sub-map:
[DBG]   [23..28]
[DBG]  Agent 100 is not in sub-map at time 22 (intervals: 
[DBG]  [23..28] )
[DBG]  Agent 0 | Start (global): 692 -> (local): (3, 1) at time 22 | Goal (global): 724 -> (local): (4, 1) at time 23
[DBG]  Agent 28 | Start (global): 661 -> (local): (2, 2) at time 22 | Goal (global): 727 -> (local): (4, 4) at time 40
[DBG]  Agent 45 | Start (global): 660 -> (local): (2, 1) at time 22 | Goal (global): 724 -> (local): (4, 1) at time 26
[DBG]  Agent 57 | Start (global): 596 -> (local): (0, 1) at time 22 | Goal (global): 724 -> (local): (4, 1) at time 27
[DBG]  Agent 71 | Start (global): 659 -> (local): (2, 0) at time 22 | Goal (global): 724 -> (local): (4, 1) at time 25
[DBG]  [REPAIR] SAT destroy operator called.
[DBG]  [REPAIR] SAT operator â€“ launching subproblem FOR OPTIMIZATION.
[DBG]  Creating local paths (sx, sy) in the submap for T_sync = 22
[DBG]    Agent 0 (global paths from T=22 to 23) has local path: (3,1) (4,1) 
[DBG]    Agent 28 (global paths from T=22 to 40) has local path: (2,2) (2,1) (2,0) (3,0) (3,0) (3,0) (3,0) (3,0) (3,0) (3,0) (3,0) (3,0) (3,0) (3,0) (3,1) (4,1) (4,2) (4,3) (4,4) 
[DBG]    Agent 45 (global paths from T=22 to 26) has local path: (2,1) (3,1) (4,1) (4,2) (4,1) 
[DBG]    Agent 57 (global paths from T=22 to 27) has local path: (0,1) (1,1) (2,1) (3,1) (3,1) (4,1) 
[DBG]    Agent 71 (global paths from T=22 to 25) has local path: (2,0) (3,0) (3,1) (4,1) 
[DBG]  Checking input data for SAT solver:
[DBG]    - Number of agents to replan: 5
[DBG]  Agent 0 has the original local path length: 2 => Start (3,1), Goal (4,1)
[DBG]  Agent 28 has the original local path length: 19 => Start (2,2), Goal (4,4)
[DBG]  Agent 45 has the original local path length: 5 => Start (2,1), Goal (4,1)
[DBG]  Agent 57 has the original local path length: 6 => Start (0,1), Goal (4,1)
[DBG]  Agent 71 has the original local path length: 4 => Start (2,0), Goal (4,1)
[DBG]  Start position: (3, 1), (2, 2), (2, 1), (0, 1), (2, 0), 
[DBG]  Goal position: (4, 1), (4, 4), (4, 1), (4, 1), (4, 1), 
[DBG]  SAT instance and solver created.
Currently solving
Instance name: scen
Map name: map
Encoding used: disappear_at_goal
SAT solver used: Kissat
Optimizing function: sum of costs
Number of agents: 5
Mks LB: 7
SoC LB: 21
Delta: 0
Remaining time: 300000 [ms]

[STAT] Solver returned: -1
[DBG]  SAT solver failed.
[STAT] SAT solver failed to find a valid solution.
[DBG]  ====================
[DBG]  SAT destroy operator called.
[DBG]  SAT heuristic: 2
[DBG]  key_agent_id: 28
[DBG]  key_agent_id global path length: 41
[DBG]  Submap content (global positions):
[DBG]  659 660 661 662 663 
[DBG]  691 692 693 694 695 
[DBG]  723 724 725 726 727 
[DBG]  755 756 757 758 759 
[DBG]  787 788 789 790 791 
[DBG]  Map content with agents and obstacles:
[DBG]  . . . X X 
[DBG]  . . X X X 
[DBG]  X A A A . 
[DBG]  . . . X . 
[DBG]  . . X . X 
[DBG]  content of the map structure that we pass to the SAT solver:
[DBG]  1  1  1  -1  -1  
[DBG]  1  1  -1  -1  -1  
[DBG]  -1  1  1  1  1  
[DBG]  1  1  1  -1  1  
[DBG]  1  1  -1  1  -1  
[DBG]  Identifying agents in a submap for rescheduling (when key_agent is there at the time 38):
[DBG]  Agent 28 found intervals in the sub-map:
[DBG]   [0..10] [17..40]
[DBG]  Agent 28 (interval in submap: [17..40]) contains time 38, added to replan.
[DBG]  Agent 42 found intervals in the sub-map:
[DBG]   [32..40]
[DBG]  Agent 42 (interval in submap: [32..40]) contains time 38, added to replan.
[DBG]  Agent 45 found intervals in the sub-map:
[DBG]   [22..29]
[DBG]  Agent 45 is not in sub-map at time 38 (intervals: 
[DBG]  [22..29] )
[DBG]  Agent 55 found intervals in the sub-map:
[DBG]   [45..47]
[DBG]  Agent 55 is not in sub-map at time 38 (intervals: 
[DBG]  [45..47] )
[DBG]  Agent 59 found intervals in the sub-map:
[DBG]  
[DBG]  Agent 59 is not in sub-map at time 38 (intervals: 
[DBG]  )
[DBG]  Agent 69 found intervals in the sub-map:
[DBG]   [35..40]
[DBG]  Agent 69 (interval in submap: [35..40]) contains time 38, added to replan.
[DBG]  Agent 148 found intervals in the sub-map:
[DBG]   [25..35]
[DBG]  Agent 148 is not in sub-map at time 38 (intervals: 
[DBG]  [25..35] )
[DBG]  Agent 28 | Start (global): 725 -> (local): (2, 2) at time 38 | Goal (global): 727 -> (local): (2, 4) at time 40
[DBG]  Agent 42 | Start (global): 726 -> (local): (2, 3) at time 38 | Goal (global): 759 -> (local): (3, 4) at time 40
[DBG]  Agent 69 | Start (global): 724 -> (local): (2, 1) at time 38 | Goal (global): 788 -> (local): (4, 1) at time 40
[DBG]  [REPAIR] SAT destroy operator called.
[DBG]  [REPAIR] SAT operator â€“ launching subproblem FOR OPTIMIZATION.
[DBG]  Creating local paths (sx, sy) in the submap for T_sync = 38
[DBG]    Agent 28 (global paths from T=38 to 40) has local path: (2,2) (2,3) (2,4) 
[DBG]    Agent 42 (global paths from T=38 to 40) has local path: (2,3) (2,4) (3,4) 
[DBG]    Agent 69 (global paths from T=38 to 40) has local path: (2,1) (3,1) (4,1) 
[DBG]  Checking input data for SAT solver:
[DBG]    - Number of agents to replan: 3
[DBG]  Agent 28 has the original local path length: 3 => Start (2,2), Goal (2,4)
[DBG]  Agent 42 has the original local path length: 3 => Start (2,3), Goal (3,4)
[DBG]  Agent 69 has the original local path length: 3 => Start (2,1), Goal (4,1)
[DBG]  Start position: (2, 2), (2, 3), (2, 1), 
[DBG]  Goal position: (2, 4), (3, 4), (4, 1), 
[DBG]  SAT instance and solver created.
Currently solving
Instance name: scen
Map name: map
Encoding used: disappear_at_goal
SAT solver used: Kissat
Optimizing function: sum of costs
Number of agents: 3
Mks LB: 3
SoC LB: 9
Delta: 0
Remaining time: 300000 [ms]

Found plan [agents = 3] [timesteps = 3]
Agent #0 : 6 7 8 
Agent #1 : 7 8 12 
Agent #2 : 5 10 14 

[STAT] Solver returned: 0
[DBG]  Agent (index) 28 | New local path (submap idx):
[DBG]  6 7 8 
[DBG]  Agent (index) 42 | New local path (submap idx):
[DBG]  7 8 12 
[DBG]  Agent (index) 69 | New local path (submap idx):
[DBG]  5 10 14 
[DBG]  Update the agent path 28 | Original local length: 3 | New local length: 3
[DBG]  agent 28 t=0 => decoded (sx,sy)=(2,2) => global_id=725
[DBG]  agent 28 t=1 => decoded (sx,sy)=(2,3) => global_id=726
[DBG]  agent 28 t=2 => decoded (sx,sy)=(2,4) => global_id=727
[DBG]  Complete path of agent 28:
[DBG]    Original: 661 661 661 661 661 661 661 661 661 660 659 658 657 656 656 657 658 659 660 661 661 661 661 660 659 691 691 691 691 691 691 691 691 691 691 691 692 724 725 726 727 
[DBG]    New:     661 661 661 661 661 661 661 661 661 660 659 658 657 656 656 657 658 659 660 661 661 661 661 660 659 691 691 691 691 691 691 691 691 691 691 691 692 724 725 726 727 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 661 661 661 661 661 661 661 661 661 660 659 658 657 656 656 657 658 659 660 661 661 661 661 660 659 691 691 691 691 691 691 691 691 691 691 691 692 724 
[DBG]    Local path (in submap): 725 726 727 
[DBG]    Suffix (out of submap): 
[DBG]  Original agent path length 28 je: 41
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 0: 661, 661, 661, 661, 661, 661, 661, 661, 661, 660, 659, 658, 657, 656, 656, 657, 658, 659, 660, 661, 661, 661, 661, 660, 659, 691, 691, 691, 691, 691, 691, 691, 691, 691, 691, 691, 692, 724, 725, 726, 727, 
[DBG]  Path for agent 28 updated, resulting length: 41
[DBG]  Update the agent path 42 | Original local length: 3 | New local length: 3
[DBG]  agent 42 t=0 => decoded (sx,sy)=(2,3) => global_id=726
[DBG]  agent 42 t=1 => decoded (sx,sy)=(2,4) => global_id=727
[DBG]  agent 42 t=2 => decoded (sx,sy)=(3,4) => global_id=759
[DBG]  Complete path of agent 42:
[DBG]    Original: 224 256 257 289 321 353 354 355 356 357 358 390 391 423 424 425 426 427 428 429 430 431 432 464 496 528 529 561 593 625 657 658 659 659 660 692 724 725 726 727 759 
[DBG]    New:     224 256 257 289 321 353 354 355 356 357 358 390 391 423 424 425 426 427 428 429 430 431 432 464 496 528 529 561 593 625 657 658 659 659 660 692 724 725 726 727 759 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 224 256 257 289 321 353 354 355 356 357 358 390 391 423 424 425 426 427 428 429 430 431 432 464 496 528 529 561 593 625 657 658 659 659 660 692 724 725 
[DBG]    Local path (in submap): 726 727 759 
[DBG]    Suffix (out of submap): 
[DBG]  Original agent path length 42 je: 41
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 1: 224, 256, 257, 289, 321, 353, 354, 355, 356, 357, 358, 390, 391, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 464, 496, 528, 529, 561, 593, 625, 657, 658, 659, 659, 660, 692, 724, 725, 726, 727, 759, 
[DBG]  Path for agent 42 updated, resulting length: 41
[DBG]  Update the agent path 69 | Original local length: 3 | New local length: 3
[DBG]  agent 69 t=0 => decoded (sx,sy)=(2,1) => global_id=724
[DBG]  agent 69 t=1 => decoded (sx,sy)=(3,1) => global_id=756
[DBG]  agent 69 t=2 => decoded (sx,sy)=(4,1) => global_id=788
[DBG]  Complete path of agent 69:
[DBG]    Original: 4 5 37 69 70 71 72 73 74 106 107 139 140 141 173 205 237 269 301 333 365 366 398 430 431 463 464 496 528 529 561 593 625 657 658 659 691 692 724 756 788 820 
[DBG]    New:     4 5 37 69 70 71 72 73 74 106 107 139 140 141 173 205 237 269 301 333 365 366 398 430 431 463 464 496 528 529 561 593 625 657 658 659 691 692 724 756 788 820 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 4 5 37 69 70 71 72 73 74 106 107 139 140 141 173 205 237 269 301 333 365 366 398 430 431 463 464 496 528 529 561 593 625 657 658 659 691 692 
[DBG]    Local path (in submap): 724 756 788 
[DBG]    Suffix (out of submap): 820 
[DBG]  Original agent path length 69 je: 42
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 2: 4, 5, 37, 69, 70, 71, 72, 73, 74, 106, 107, 139, 140, 141, 173, 205, 237, 269, 301, 333, 365, 366, 398, 430, 431, 463, 464, 496, 528, 529, 561, 593, 625, 657, 658, 659, 691, 692, 724, 756, 788, 820, 
[DBG]  Path for agent 69 updated, resulting length: 42
[DBG]  Paths successfully updated.
[DBG]  (LNS.cpp) New path for agent 28: 
[DBG]  661, 661, 661, 661, 661, 661, 661, 661, 661, 660, 659, 658, 657, 656, 656, 657, 658, 659, 660, 661, 661, 661, 661, 660, 659, 691, 691, 691, 691, 691, 691, 691, 691, 691, 691, 691, 692, 724, 725, 726, 727, 
[DBG]  (LNS.cpp) New path for agent 42: 
[DBG]  224, 256, 257, 289, 321, 353, 354, 355, 356, 357, 358, 390, 391, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 464, 496, 528, 529, 561, 593, 625, 657, 658, 659, 659, 660, 692, 724, 725, 726, 727, 759, 
[DBG]  (LNS.cpp) New path for agent 69: 
[DBG]  4, 5, 37, 69, 70, 71, 72, 73, 74, 106, 107, 139, 140, 141, 173, 205, 237, 269, 301, 333, 365, 366, 398, 430, 431, 463, 464, 496, 528, 529, 561, 593, 625, 657, 658, 659, 691, 692, 724, 756, 788, 820, 
[DBG]  Delta value: 0
[DBG]  Rewarding metric index = 0
[DBG]  component_weights = {0.997531, 0.00115312, 0.000667593, 0.000648218}
[DBG]  opSuccess value: 1
[STAT] neighbor.sum_of_costs before recomputation: 121
[STAT] neighbor.old_sum_of_costs before recomputation: 121
[STAT] sum_of_costs before recomputation: 4376
[DBG]  Validate solution immediately after SAT success.
[DBG]  No problems after SAT replan.
[DBG]  Recomputing sum_of_cost by dividing neighbor.sum_of_costs and neighbor.old_sum_of_costs
[STAT] sum_of_costs after recomputation: 4376
[STAT] Iteration 83
[DBG]  Using SAT operator (destroy+repair SAT).
[DBG]  ====================
[DBG]  SAT destroy operator called.
[DBG]  SAT heuristic: 2
[DBG]  key_agent_id: 28
[DBG]  key_agent_id global path length: 41
[DBG]  Submap content (global positions):
[DBG]  593 594 595 596 597 
[DBG]  625 626 627 628 629 
[DBG]  657 658 659 660 661 
[DBG]  689 690 691 692 693 
[DBG]  721 722 723 724 725 
[DBG]  Map content with agents and obstacles:
[DBG]  . . X . . 
[DBG]  . X . A . 
[DBG]  . . A . . 
[DBG]  A X . . X 
[DBG]  . . X A . 
[DBG]  content of the map structure that we pass to the SAT solver:
[DBG]  1  1  -1  1  1  
[DBG]  1  -1  1  1  1  
[DBG]  1  1  1  1  1  
[DBG]  1  -1  1  1  -1  
[DBG]  1  1  -1  1  1  
[DBG]  Identifying agents in a submap for rescheduling (when key_agent is there at the time 10):
[DBG]  Agent 10 found intervals in the sub-map:
[DBG]  
[DBG]  Agent 10 is not in sub-map at time 10 (intervals: 
[DBG]  )
[DBG]  Agent 19 found intervals in the sub-map:
[DBG]   [0..11]
[DBG]  Agent 19 (interval in submap: [0..11]) contains time 10, added to replan.
[DBG]  Agent 28 found intervals in the sub-map:
[DBG]   [0..12] [15..38]
[DBG]  Agent 28 (interval in submap: [0..12]) contains time 10, added to replan.
[DBG]  Agent 63 found intervals in the sub-map:
[DBG]   [0..1] [7..7]
[DBG]  Agent 63 is not in sub-map at time 10 (intervals: 
[DBG]  [0..1] [7..7] )
[DBG]  Agent 74 found intervals in the sub-map:
[DBG]   [11..13]
[DBG]  Agent 74 is not in sub-map at time 10 (intervals: 
[DBG]  [11..13] )
[DBG]  Agent 86 found intervals in the sub-map:
[DBG]  
[DBG]  Agent 86 is not in sub-map at time 10 (intervals: 
[DBG]  )
[DBG]  Agent 89 found intervals in the sub-map:
[DBG]   [5..10]
[DBG]  Agent 89 (interval in submap: [5..10]) contains time 10, added to replan.
[DBG]  Agent 109 found intervals in the sub-map:
[DBG]  
[DBG]  Agent 109 is not in sub-map at time 10 (intervals: 
[DBG]  )
[DBG]  Agent 131 found intervals in the sub-map:
[DBG]   [8..13]
[DBG]  Agent 131 (interval in submap: [8..13]) contains time 10, added to replan.
[DBG]  Agent 135 found intervals in the sub-map:
[DBG]  
[DBG]  Agent 135 is not in sub-map at time 10 (intervals: 
[DBG]  )
[DBG]  Agent 19 | Start (global): 689 -> (local): (3, 0) at time 10 | Goal (global): 721 -> (local): (4, 0) at time 11
[DBG]  Agent 28 | Start (global): 659 -> (local): (2, 2) at time 10 | Goal (global): 657 -> (local): (2, 0) at time 12
[DBG]  Agent 89 | Start (global): 724 -> (local): (4, 3) at time 10 | Goal (global): 724 -> (local): (4, 3) at time 10
[DBG]  Agent 131 | Start (global): 628 -> (local): (1, 3) at time 10 | Goal (global): 724 -> (local): (4, 3) at time 13
[DBG]  [REPAIR] SAT destroy operator called.
[DBG]  [REPAIR] SAT operator â€“ launching subproblem FOR OPTIMIZATION.
[DBG]  Creating local paths (sx, sy) in the submap for T_sync = 10
[DBG]    Agent 19 (global paths from T=10 to 11) has local path: (3,0) (4,0) 
[DBG]    Agent 28 (global paths from T=10 to 12) has local path: (2,2) (2,1) (2,0) 
[DBG]    Agent 89 (global paths from T=10 to 10) has local path: (4,3) 
[DBG]    Agent 131 (global paths from T=10 to 13) has local path: (1,3) (2,3) (3,3) (4,3) 
[DBG]  Checking input data for SAT solver:
[DBG]    - Number of agents to replan: 4
[DBG]  Agent 19 has the original local path length: 2 => Start (3,0), Goal (4,0)
[DBG]  Agent 28 has the original local path length: 3 => Start (2,2), Goal (2,0)
[DBG]  Agent 89 has the original local path length: 1 => Start (4,3), Goal (4,3)
[DBG]  Agent 131 has the original local path length: 4 => Start (1,3), Goal (4,3)
[DBG]  Start position: (3, 0), (2, 2), (4, 3), (1, 3), 
[DBG]  Goal position: (4, 0), (2, 0), (4, 3), (4, 3), 
[DBG]  SAT instance and solver created.
Currently solving
Instance name: scen
Map name: map
Encoding used: disappear_at_goal
SAT solver used: Kissat
Optimizing function: sum of costs
Number of agents: 4
Mks LB: 4
SoC LB: 10
Delta: 0
Remaining time: 300000 [ms]

Vertex conflict! Agents 0, 1, timestep 3, location 0
Vertex conflict! Agents 0, 2, timestep 2, location 0
Swapping conflict! Agents 0, 2, timestep 2, edge (0,0)
Vertex conflict! Agents 0, 2, timestep 3, location 0
Vertex conflict! Agents 1, 2, timestep 3, location 0
Found plan [agents = 4] [timesteps = 4]
Agent #0 : 13 16 0 0 
Agent #1 : 10 9 8 0 
Agent #2 : 18 0 0 0 
Agent #3 : 6 11 15 18 

[STAT] Solver returned: 0
[DBG]  Agent (index) 19 | New local path (submap idx):
[DBG]  13 16 
[DBG]  Agent (index) 28 | New local path (submap idx):
[DBG]  10 9 8 
[DBG]  Agent (index) 89 | New local path (submap idx):
[DBG]  18 
[DBG]  Agent (index) 131 | New local path (submap idx):
[DBG]  6 11 15 18 
[DBG]  Update the agent path 19 | Original local length: 2 | New local length: 2
[DBG]  agent 19 t=0 => decoded (sx,sy)=(3,0) => global_id=689
[DBG]  agent 19 t=1 => decoded (sx,sy)=(4,0) => global_id=721
[DBG]  Complete path of agent 19:
[DBG]    Original: 625 625 625 625 625 625 625 625 625 657 689 721 720 752 784 784 784 783 815 814 813 781 780 779 747 715 683 682 682 682 683 
[DBG]    New:     625 625 625 625 625 625 625 625 625 657 689 721 720 752 784 784 784 783 815 814 813 781 780 779 747 715 683 682 682 682 683 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 625 625 625 625 625 625 625 625 625 657 
[DBG]    Local path (in submap): 689 721 
[DBG]    Suffix (out of submap): 720 752 784 784 784 783 815 814 813 781 780 779 747 715 683 682 682 682 683 
[DBG]  Original agent path length 19 je: 31
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 0: 625, 625, 625, 625, 625, 625, 625, 625, 625, 657, 689, 721, 720, 752, 784, 784, 784, 783, 815, 814, 813, 781, 780, 779, 747, 715, 683, 682, 682, 682, 683, 
[DBG]  Path for agent 19 updated, resulting length: 31
[DBG]  Update the agent path 28 | Original local length: 3 | New local length: 3
[DBG]  agent 28 t=0 => decoded (sx,sy)=(2,2) => global_id=659
[DBG]  agent 28 t=1 => decoded (sx,sy)=(2,1) => global_id=658
[DBG]  agent 28 t=2 => decoded (sx,sy)=(2,0) => global_id=657
[DBG]  Complete path of agent 28:
[DBG]    Original: 661 661 661 661 661 661 661 661 661 660 659 658 657 656 656 657 658 659 660 661 661 661 661 660 659 691 691 691 691 691 691 691 691 691 691 691 692 724 725 726 727 
[DBG]    New:     661 661 661 661 661 661 661 661 661 660 659 658 657 656 656 657 658 659 660 661 661 661 661 660 659 691 691 691 691 691 691 691 691 691 691 691 692 724 725 726 727 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 661 661 661 661 661 661 661 661 661 660 
[DBG]    Local path (in submap): 659 658 657 
[DBG]    Suffix (out of submap): 656 656 657 658 659 660 661 661 661 661 660 659 691 691 691 691 691 691 691 691 691 691 691 692 724 725 726 727 
[DBG]  Original agent path length 28 je: 41
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 1: 661, 661, 661, 661, 661, 661, 661, 661, 661, 660, 659, 658, 657, 656, 656, 657, 658, 659, 660, 661, 661, 661, 661, 660, 659, 691, 691, 691, 691, 691, 691, 691, 691, 691, 691, 691, 692, 724, 725, 726, 727, 
[DBG]  Path for agent 28 updated, resulting length: 41
[DBG]  Update the agent path 89 | Original local length: 1 | New local length: 1
[DBG]  agent 89 t=0 => decoded (sx,sy)=(4,3) => global_id=724
[DBG]  Complete path of agent 89:
[DBG]    Original: 437 469 501 533 565 597 629 628 660 692 724 756 788 788 788 820 821 822 854 886 918 950 982 1014 1015 
[DBG]    New:     437 469 501 533 565 597 629 628 660 692 724 756 788 788 788 820 821 822 854 886 918 950 982 1014 1015 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 437 469 501 533 565 597 629 628 660 692 
[DBG]    Local path (in submap): 724 
[DBG]    Suffix (out of submap): 756 788 788 788 820 821 822 854 886 918 950 982 1014 1015 
[DBG]  Original agent path length 89 je: 25
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 2: 437, 469, 501, 533, 565, 597, 629, 628, 660, 692, 724, 756, 788, 788, 788, 820, 821, 822, 854, 886, 918, 950, 982, 1014, 1015, 
[DBG]  Path for agent 89 updated, resulting length: 25
[DBG]  Update the agent path 131 | Original local length: 4 | New local length: 4
[DBG]  agent 131 t=0 => decoded (sx,sy)=(1,3) => global_id=628
[DBG]  agent 131 t=1 => decoded (sx,sy)=(2,3) => global_id=660
[DBG]  agent 131 t=2 => decoded (sx,sy)=(3,3) => global_id=692
[DBG]  agent 131 t=3 => decoded (sx,sy)=(4,3) => global_id=724
[DBG]  Complete path of agent 131:
[DBG]    Original: 341 373 405 437 469 501 533 565 597 596 628 660 692 724 756 788 820 819 851 850 849 848 847 846 878 877 876 875 843 811 779 778 746 745 713 712 
[DBG]    New:     341 373 405 437 469 501 533 565 597 596 628 660 692 724 756 788 820 819 851 850 849 848 847 846 878 877 876 875 843 811 779 778 746 745 713 712 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 341 373 405 437 469 501 533 565 597 596 
[DBG]    Local path (in submap): 628 660 692 724 
[DBG]    Suffix (out of submap): 756 788 820 819 851 850 849 848 847 846 878 877 876 875 843 811 779 778 746 745 713 712 
[DBG]  Original agent path length 131 je: 36
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 3: 341, 373, 405, 437, 469, 501, 533, 565, 597, 596, 628, 660, 692, 724, 756, 788, 820, 819, 851, 850, 849, 848, 847, 846, 878, 877, 876, 875, 843, 811, 779, 778, 746, 745, 713, 712, 
[DBG]  Path for agent 131 updated, resulting length: 36
[DBG]  Paths successfully updated.
[DBG]  (LNS.cpp) New path for agent 19: 
[DBG]  625, 625, 625, 625, 625, 625, 625, 625, 625, 657, 689, 721, 720, 752, 784, 784, 784, 783, 815, 814, 813, 781, 780, 779, 747, 715, 683, 682, 682, 682, 683, 
[DBG]  (LNS.cpp) New path for agent 28: 
[DBG]  661, 661, 661, 661, 661, 661, 661, 661, 661, 660, 659, 658, 657, 656, 656, 657, 658, 659, 660, 661, 661, 661, 661, 660, 659, 691, 691, 691, 691, 691, 691, 691, 691, 691, 691, 691, 692, 724, 725, 726, 727, 
[DBG]  (LNS.cpp) New path for agent 89: 
[DBG]  437, 469, 501, 533, 565, 597, 629, 628, 660, 692, 724, 756, 788, 788, 788, 820, 821, 822, 854, 886, 918, 950, 982, 1014, 1015, 
[DBG]  (LNS.cpp) New path for agent 131: 
[DBG]  341, 373, 405, 437, 469, 501, 533, 565, 597, 596, 628, 660, 692, 724, 756, 788, 820, 819, 851, 850, 849, 848, 847, 846, 878, 877, 876, 875, 843, 811, 779, 778, 746, 745, 713, 712, 
[DBG]  Delta value: 0
[DBG]  Rewarding metric index = 0
[DBG]  component_weights = {0.997654, 0.0010956, 0.000634291, 0.000615883}
[DBG]  opSuccess value: 1
[STAT] neighbor.sum_of_costs before recomputation: 129
[STAT] neighbor.old_sum_of_costs before recomputation: 129
[STAT] sum_of_costs before recomputation: 4376
[DBG]  Validate solution immediately after SAT success.
[DBG]  No problems after SAT replan.
[DBG]  Recomputing sum_of_cost by dividing neighbor.sum_of_costs and neighbor.old_sum_of_costs
[STAT] sum_of_costs after recomputation: 4376
[STAT] Iteration 84
[DBG]  Using SAT operator (destroy+repair SAT).
[DBG]  ====================
[DBG]  SAT destroy operator called.
[DBG]  SAT heuristic: 2
[DBG]  key_agent_id: 28
[DBG]  key_agent_id global path length: 41
[DBG]  Submap content (global positions):
[DBG]  625 626 627 628 629 
[DBG]  657 658 659 660 661 
[DBG]  689 690 691 692 693 
[DBG]  721 722 723 724 725 
[DBG]  753 754 755 756 757 
[DBG]  Map content with agents and obstacles:
[DBG]  . X . . A 
[DBG]  . . A A A 
[DBG]  . X A A X 
[DBG]  . . X A . 
[DBG]  . X . A A 
[DBG]  content of the map structure that we pass to the SAT solver:
[DBG]  1  -1  1  1  1  
[DBG]  1  1  1  1  1  
[DBG]  1  -1  1  1  -1  
[DBG]  1  1  -1  1  1  
[DBG]  1  -1  1  1  1  
[DBG]  Identifying agents in a submap for rescheduling (when key_agent is there at the time 26):
[DBG]  Agent 3 found intervals in the sub-map:
[DBG]   [26..31]
[DBG]  Agent 3 (interval in submap: [26..31]) contains time 26, added to replan.
[DBG]  Agent 4 found intervals in the sub-map:
[DBG]  
[DBG]  Agent 4 is not in sub-map at time 26 (intervals: 
[DBG]  )
[DBG]  Agent 28 found intervals in the sub-map:
[DBG]   [0..12] [15..38]
[DBG]  Agent 28 (interval in submap: [15..38]) contains time 26, added to replan.
[DBG]  Agent 44 found intervals in the sub-map:
[DBG]   [25..31]
[DBG]  Agent 44 (interval in submap: [25..31]) contains time 26, added to replan.
[DBG]  Agent 45 found intervals in the sub-map:
[DBG]   [21..28]
[DBG]  Agent 45 (interval in submap: [21..28]) contains time 26, added to replan.
[DBG]  Agent 57 found intervals in the sub-map:
[DBG]   [23..29]
[DBG]  Agent 57 (interval in submap: [23..29]) contains time 26, added to replan.
[DBG]  Agent 71 found intervals in the sub-map:
[DBG]   [20..26]
[DBG]  Agent 71 (interval in submap: [20..26]) contains time 26, added to replan.
[DBG]  Agent 100 found intervals in the sub-map:
[DBG]   [25..30]
[DBG]  Agent 100 (interval in submap: [25..30]) contains time 26, added to replan.
[DBG]  Agent 111 found intervals in the sub-map:
[DBG]   [24..27]
[DBG]  Agent 111 (interval in submap: [24..27]) contains time 26, added to replan.
[DBG]  Agent 148 found intervals in the sub-map:
[DBG]   [21..35]
[DBG]  Agent 148 (interval in submap: [21..35]) contains time 26, added to replan.
[DBG]  Agent 3 | Start (global): 629 -> (local): (0, 4) at time 26 | Goal (global): 756 -> (local): (4, 3) at time 31
[DBG]  Agent 28 | Start (global): 691 -> (local): (2, 2) at time 26 | Goal (global): 725 -> (local): (3, 4) at time 38
[DBG]  Agent 44 | Start (global): 661 -> (local): (1, 4) at time 26 | Goal (global): 755 -> (local): (4, 2) at time 31
[DBG]  Agent 45 | Start (global): 724 -> (local): (3, 3) at time 26 | Goal (global): 755 -> (local): (4, 2) at time 28
[DBG]  Agent 57 | Start (global): 692 -> (local): (2, 3) at time 26 | Goal (global): 755 -> (local): (4, 2) at time 29
[DBG]  Agent 71 | Start (global): 756 -> (local): (4, 3) at time 26 | Goal (global): 756 -> (local): (4, 3) at time 26
[DBG]  Agent 100 | Start (global): 660 -> (local): (1, 3) at time 26 | Goal (global): 755 -> (local): (4, 2) at time 30
[DBG]  Agent 111 | Start (global): 757 -> (local): (4, 4) at time 26 | Goal (global): 725 -> (local): (3, 4) at time 27
[DBG]  Agent 148 | Start (global): 659 -> (local): (1, 2) at time 26 | Goal (global): 660 -> (local): (1, 3) at time 35
[DBG]  [REPAIR] SAT destroy operator called.
[DBG]  [REPAIR] SAT operator â€“ launching subproblem FOR OPTIMIZATION.
[DBG]  Creating local paths (sx, sy) in the submap for T_sync = 26
[DBG]    Agent 3 (global paths from T=26 to 31) has local path: (0,4) (0,3) (1,3) (2,3) (3,3) (4,3) 
[DBG]    Agent 28 (global paths from T=26 to 38) has local path: (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,3) (3,3) (3,4) 
[DBG]    Agent 44 (global paths from T=26 to 31) has local path: (1,4) (1,3) (2,3) (3,3) (4,3) (4,2) 
[DBG]    Agent 45 (global paths from T=26 to 28) has local path: (3,3) (4,3) (4,2) 
[DBG]    Agent 57 (global paths from T=26 to 29) has local path: (2,3) (3,3) (4,3) (4,2) 
[DBG]    Agent 71 (global paths from T=26 to 26) has local path: (4,3) 
[DBG]    Agent 100 (global paths from T=26 to 30) has local path: (1,3) (2,3) (3,3) (4,3) (4,2) 
[DBG]    Agent 111 (global paths from T=26 to 27) has local path: (4,4) (3,4) 
[DBG]    Agent 148 (global paths from T=26 to 35) has local path: (1,2) (1,2) (1,2) (1,3) (1,4) (1,4) (1,4) (1,4) (1,4) (1,3) 
[DBG]  Checking input data for SAT solver:
[DBG]    - Number of agents to replan: 9
[DBG]  Agent 3 has the original local path length: 6 => Start (0,4), Goal (4,3)
[DBG]  Agent 28 has the original local path length: 13 => Start (2,2), Goal (3,4)
[DBG]  Agent 44 has the original local path length: 6 => Start (1,4), Goal (4,2)
[DBG]  Agent 45 has the original local path length: 3 => Start (3,3), Goal (4,2)
[DBG]  Agent 57 has the original local path length: 4 => Start (2,3), Goal (4,2)
[DBG]  Agent 71 has the original local path length: 1 => Start (4,3), Goal (4,3)
[DBG]  Agent 100 has the original local path length: 5 => Start (1,3), Goal (4,2)
[DBG]  Agent 111 has the original local path length: 2 => Start (4,4), Goal (3,4)
[DBG]  Agent 148 has the original local path length: 10 => Start (1,2), Goal (1,3)
[DBG]  Start position: (0, 4), (2, 2), (1, 4), (3, 3), (2, 3), (4, 3), (1, 3), (4, 4), (1, 2), 
[DBG]  Goal position: (4, 3), (3, 4), (4, 2), (4, 2), (4, 2), (4, 3), (4, 2), (3, 4), (1, 3), 
[DBG]  SAT instance and solver created.
Currently solving
Instance name: scen
Map name: map
Encoding used: disappear_at_goal
SAT solver used: Kissat
Optimizing function: sum of costs
Number of agents: 9
Mks LB: 6
SoC LB: 33
Delta: 0
Remaining time: 300000 [ms]

[STAT] Solver returned: -1
[DBG]  SAT solver failed.
[STAT] SAT solver failed to find a valid solution.
[DBG]  ====================
[DBG]  SAT destroy operator called.
[DBG]  SAT heuristic: 2
[DBG]  key_agent_id: 28
[DBG]  key_agent_id global path length: 41
[DBG]  Submap content (global positions):
[DBG]  591 592 593 594 595 
[DBG]  623 624 625 626 627 
[DBG]  655 656 657 658 659 
[DBG]  687 688 689 690 691 
[DBG]  719 720 721 722 723 
[DBG]  Map content with agents and obstacles:
[DBG]  A . . . X 
[DBG]  A X A X . 
[DBG]  . . A . . 
[DBG]  . A . X . 
[DBG]  A A . . X 
[DBG]  content of the map structure that we pass to the SAT solver:
[DBG]  1  1  1  1  -1  
[DBG]  1  -1  1  -1  1  
[DBG]  1  1  1  1  1  
[DBG]  1  1  1  -1  1  
[DBG]  1  1  1  1  -1  
[DBG]  Identifying agents in a submap for rescheduling (when key_agent is there at the time 12):
[DBG]  Agent 19 found intervals in the sub-map:
[DBG]   [0..12]
[DBG]  Agent 19 (interval in submap: [0..12]) contains time 12, added to replan.
[DBG]  Agent 28 found intervals in the sub-map:
[DBG]   [10..17] [24..35]
[DBG]  Agent 28 (interval in submap: [10..17]) contains time 12, added to replan.
[DBG]  Agent 61 found intervals in the sub-map:
[DBG]   [8..14]
[DBG]  Agent 61 (interval in submap: [8..14]) contains time 12, added to replan.
[DBG]  Agent 62 found intervals in the sub-map:
[DBG]   [1..9]
[DBG]  Agent 62 is not in sub-map at time 12 (intervals: 
[DBG]  [1..9] )
[DBG]  Agent 63 found intervals in the sub-map:
[DBG]   [0..7]
[DBG]  Agent 63 is not in sub-map at time 12 (intervals: 
[DBG]  [0..7] )
[DBG]  Agent 74 found intervals in the sub-map:
[DBG]   [7..13]
[DBG]  Agent 74 (interval in submap: [7..13]) contains time 12, added to replan.
[DBG]  Agent 79 found intervals in the sub-map:
[DBG]   [12..17]
[DBG]  Agent 79 (interval in submap: [12..17]) contains time 12, added to replan.
[DBG]  Agent 96 found intervals in the sub-map:
[DBG]   [11..16]
[DBG]  Agent 96 (interval in submap: [11..16]) contains time 12, added to replan.
[DBG]  Agent 109 found intervals in the sub-map:
[DBG]  
[DBG]  Agent 109 is not in sub-map at time 12 (intervals: 
[DBG]  )
[DBG]  Agent 114 found intervals in the sub-map:
[DBG]   [10..15]
[DBG]  Agent 114 (interval in submap: [10..15]) contains time 12, added to replan.
[DBG]  Agent 131 found intervals in the sub-map:
[DBG]  
[DBG]  Agent 131 is not in sub-map at time 12 (intervals: 
[DBG]  )
[DBG]  Agent 148 found intervals in the sub-map:
[DBG]   [18..28]
[DBG]  Agent 148 is not in sub-map at time 12 (intervals: 
[DBG]  [18..28] )
[DBG]  Agent 19 | Start (global): 720 -> (local): (4, 1) at time 12 | Goal (global): 720 -> (local): (4, 1) at time 12
[DBG]  Agent 28 | Start (global): 657 -> (local): (2, 2) at time 12 | Goal (global): 659 -> (local): (2, 4) at time 17
[DBG]  Agent 61 | Start (global): 591 -> (local): (0, 0) at time 12 | Goal (global): 593 -> (local): (0, 2) at time 14
[DBG]  Agent 74 | Start (global): 625 -> (local): (1, 2) at time 12 | Goal (global): 593 -> (local): (0, 2) at time 13
[DBG]  Agent 79 | Start (global): 719 -> (local): (4, 0) at time 12 | Goal (global): 592 -> (local): (0, 1) at time 17
[DBG]  Agent 96 | Start (global): 688 -> (local): (3, 1) at time 12 | Goal (global): 659 -> (local): (2, 4) at time 16
[DBG]  Agent 114 | Start (global): 623 -> (local): (1, 0) at time 12 | Goal (global): 593 -> (local): (0, 2) at time 15
[DBG]  [REPAIR] SAT destroy operator called.
[DBG]  [REPAIR] SAT operator â€“ launching subproblem FOR OPTIMIZATION.
[DBG]  Creating local paths (sx, sy) in the submap for T_sync = 12
[DBG]    Agent 19 (global paths from T=12 to 12) has local path: (4,1) 
[DBG]    Agent 28 (global paths from T=12 to 17) has local path: (2,2) (2,1) (2,1) (2,2) (2,3) (2,4) 
[DBG]    Agent 61 (global paths from T=12 to 14) has local path: (0,0) (0,1) (0,2) 
[DBG]    Agent 74 (global paths from T=12 to 13) has local path: (1,2) (0,2) 
[DBG]    Agent 79 (global paths from T=12 to 17) has local path: (4,0) (3,0) (2,0) (1,0) (0,0) (0,1) 
[DBG]    Agent 96 (global paths from T=12 to 16) has local path: (3,1) (3,2) (2,2) (2,3) (2,4) 
[DBG]    Agent 114 (global paths from T=12 to 15) has local path: (1,0) (0,0) (0,1) (0,2) 
[DBG]  Checking input data for SAT solver:
[DBG]    - Number of agents to replan: 7
[DBG]  Agent 19 has the original local path length: 1 => Start (4,1), Goal (4,1)
[DBG]  Agent 28 has the original local path length: 6 => Start (2,2), Goal (2,4)
[DBG]  Agent 61 has the original local path length: 3 => Start (0,0), Goal (0,2)
[DBG]  Agent 74 has the original local path length: 2 => Start (1,2), Goal (0,2)
[DBG]  Agent 79 has the original local path length: 6 => Start (4,0), Goal (0,1)
[DBG]  Agent 96 has the original local path length: 5 => Start (3,1), Goal (2,4)
[DBG]  Agent 114 has the original local path length: 4 => Start (1,0), Goal (0,2)
[DBG]  Start position: (4, 1), (2, 2), (0, 0), (1, 2), (4, 0), (3, 1), (1, 0), 
[DBG]  Goal position: (4, 1), (2, 4), (0, 2), (0, 2), (0, 1), (2, 4), (0, 2), 
[DBG]  SAT instance and solver created.
Currently solving
Instance name: scen
Map name: map
Encoding used: disappear_at_goal
SAT solver used: Kissat
Optimizing function: sum of costs
Number of agents: 7
Mks LB: 6
SoC LB: 24
Delta: 0
Remaining time: 300000 [ms]

Vertex conflict! Agents 0, 1, timestep 3, location 0
Swapping conflict! Agents 0, 1, timestep 3, edge (0,0)
Vertex conflict! Agents 0, 1, timestep 4, location 0
Swapping conflict! Agents 0, 1, timestep 4, edge (0,0)
Vertex conflict! Agents 0, 1, timestep 5, location 0
Vertex conflict! Agents 0, 2, timestep 3, location 0
Swapping conflict! Agents 0, 2, timestep 3, edge (0,0)
Vertex conflict! Agents 0, 2, timestep 4, location 0
Swapping conflict! Agents 0, 2, timestep 4, edge (0,0)
Vertex conflict! Agents 0, 2, timestep 5, location 0
Vertex conflict! Agents 0, 3, timestep 2, location 0
Swapping conflict! Agents 0, 3, timestep 2, edge (0,0)
Vertex conflict! Agents 0, 3, timestep 3, location 0
Swapping conflict! Agents 0, 3, timestep 3, edge (0,0)
Vertex conflict! Agents 0, 3, timestep 4, location 0
Swapping conflict! Agents 0, 3, timestep 4, edge (0,0)
Vertex conflict! Agents 0, 3, timestep 5, location 0
Vertex conflict! Agents 0, 4, timestep 4, location 0
Vertex conflict! Agents 0, 5, timestep 5, location 0
Vertex conflict! Agents 0, 6, timestep 1, location 0
Vertex conflict! Agents 0, 6, timestep 4, location 0
Swapping conflict! Agents 0, 6, timestep 4, edge (0,0)
Vertex conflict! Agents 0, 6, timestep 5, location 0
Vertex conflict! Agents 1, 2, timestep 3, location 0
Swapping conflict! Agents 1, 2, timestep 3, edge (0,0)
Vertex conflict! Agents 1, 2, timestep 4, location 0
Swapping conflict! Agents 1, 2, timestep 4, edge (0,0)
Vertex conflict! Agents 1, 2, timestep 5, location 0
Vertex conflict! Agents 1, 3, timestep 3, location 0
Swapping conflict! Agents 1, 3, timestep 3, edge (0,0)
Vertex conflict! Agents 1, 3, timestep 4, location 0
Swapping conflict! Agents 1, 3, timestep 4, edge (0,0)
Vertex conflict! Agents 1, 3, timestep 5, location 0
Vertex conflict! Agents 1, 4, timestep 4, location 0
Vertex conflict! Agents 1, 5, timestep 5, location 0
Vertex conflict! Agents 1, 6, timestep 4, location 0
Swapping conflict! Agents 1, 6, timestep 4, edge (0,0)
Vertex conflict! Agents 1, 6, timestep 5, location 0
Vertex conflict! Agents 2, 3, timestep 3, location 0
Swapping conflict! Agents 2, 3, timestep 3, edge (0,0)
Vertex conflict! Agents 2, 3, timestep 4, location 0
Swapping conflict! Agents 2, 3, timestep 4, edge (0,0)
Vertex conflict! Agents 2, 3, timestep 5, location 0
Vertex conflict! Agents 2, 4, timestep 4, location 0
Vertex conflict! Agents 2, 5, timestep 5, location 0
Vertex conflict! Agents 2, 6, timestep 4, location 0
Swapping conflict! Agents 2, 6, timestep 4, edge (0,0)
Vertex conflict! Agents 2, 6, timestep 5, location 0
Vertex conflict! Agents 3, 4, timestep 4, location 0
Vertex conflict! Agents 3, 5, timestep 5, location 0
Vertex conflict! Agents 3, 6, timestep 4, location 0
Swapping conflict! Agents 3, 6, timestep 4, edge (0,0)
Vertex conflict! Agents 3, 6, timestep 5, location 0
Vertex conflict! Agents 4, 6, timestep 4, location 0
Vertex conflict! Agents 5, 6, timestep 5, location 0
Found plan [agents = 7] [timesteps = 6]
Agent #0 : 17 0 0 0 0 0 
Agent #1 : 9 10 11 0 0 0 
Agent #2 : 0 1 2 0 0 0 
Agent #3 : 5 2 0 0 0 0 
Agent #4 : 16 12 7 4 0 1 
Agent #5 : 13 14 9 10 11 0 
Agent #6 : 4 0 1 2 0 0 

[STAT] Solver returned: 0
[DBG]  Agent (index) 19 | New local path (submap idx):
[DBG]  17 
[DBG]  Agent (index) 28 | New local path (submap idx):
[DBG]  9 10 11 
[DBG]  Agent (index) 61 | New local path (submap idx):
[DBG]  0 1 2 
[DBG]  Agent (index) 74 | New local path (submap idx):
[DBG]  5 2 
[DBG]  Agent (index) 79 | New local path (submap idx):
[DBG]  16 12 7 4 0 1 
[DBG]  Agent (index) 96 | New local path (submap idx):
[DBG]  13 14 9 10 11 
[DBG]  Agent (index) 114 | New local path (submap idx):
[DBG]  4 0 1 2 
[DBG]  Update the agent path 19 | Original local length: 1 | New local length: 1
[DBG]  agent 19 t=0 => decoded (sx,sy)=(4,1) => global_id=720
[DBG]  Complete path of agent 19:
[DBG]    Original: 625 625 625 625 625 625 625 625 625 657 689 721 720 752 784 784 784 783 815 814 813 781 780 779 747 715 683 682 682 682 683 
[DBG]    New:     625 625 625 625 625 625 625 625 625 657 689 721 720 752 784 784 784 783 815 814 813 781 780 779 747 715 683 682 682 682 683 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 625 625 625 625 625 625 625 625 625 657 689 721 
[DBG]    Local path (in submap): 720 
[DBG]    Suffix (out of submap): 752 784 784 784 783 815 814 813 781 780 779 747 715 683 682 682 682 683 
[DBG]  Original agent path length 19 je: 31
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 0: 625, 625, 625, 625, 625, 625, 625, 625, 625, 657, 689, 721, 720, 752, 784, 784, 784, 783, 815, 814, 813, 781, 780, 779, 747, 715, 683, 682, 682, 682, 683, 
[DBG]  Path for agent 19 updated, resulting length: 31
[DBG]  Update the agent path 28 | Original local length: 6 | New local length: 3
[DBG]  agent 28 t=0 => decoded (sx,sy)=(2,2) => global_id=657
[DBG]  agent 28 t=1 => decoded (sx,sy)=(2,3) => global_id=658
[DBG]  agent 28 t=2 => decoded (sx,sy)=(2,4) => global_id=659
[DBG]  Complete path of agent 28:
[DBG]    Original: 661 661 661 661 661 661 661 661 661 660 659 658 657 656 656 657 658 659 660 661 661 661 661 660 659 691 691 691 691 691 691 691 691 691 691 691 692 724 725 726 727 
[DBG]    New:     661 661 661 661 661 661 661 661 661 660 659 658 657 658 659 660 661 661 661 661 660 659 691 691 691 691 691 691 691 691 691 691 691 692 724 725 726 727 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 661 661 661 661 661 661 661 661 661 660 659 658 
[DBG]    Local path (in submap): 657 658 659 660 661 661 
[DBG]    Suffix (out of submap): 661 661 660 659 691 691 691 691 691 691 691 691 691 691 691 692 724 725 726 727 
[DBG]  Original agent path length 28 je: 41
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 1: 661, 661, 661, 661, 661, 661, 661, 661, 661, 660, 659, 658, 657, 658, 659, 660, 661, 661, 661, 661, 660, 659, 691, 691, 691, 691, 691, 691, 691, 691, 691, 691, 691, 692, 724, 725, 726, 727, 
[DBG]  Path for agent 28 updated, resulting length: 38
[DBG]  Update the agent path 61 | Original local length: 3 | New local length: 3
[DBG]  agent 61 t=0 => decoded (sx,sy)=(0,0) => global_id=591
[DBG]  agent 61 t=1 => decoded (sx,sy)=(0,1) => global_id=592
[DBG]  agent 61 t=2 => decoded (sx,sy)=(0,2) => global_id=593
[DBG]  Complete path of agent 61:
[DBG]    Original: 813 781 782 782 782 783 783 751 719 687 655 623 591 592 593 561 529 530 498 466 467 435 435 467 468 469 437 438 439 440 408 376 344 345 313 
[DBG]    New:     813 781 782 782 782 783 783 751 719 687 655 623 591 592 593 561 529 530 498 466 467 435 435 467 468 469 437 438 439 440 408 376 344 345 313 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 813 781 782 782 782 783 783 751 719 687 655 623 
[DBG]    Local path (in submap): 591 592 593 
[DBG]    Suffix (out of submap): 561 529 530 498 466 467 435 435 467 468 469 437 438 439 440 408 376 344 345 313 
[DBG]  Original agent path length 61 je: 35
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 2: 813, 781, 782, 782, 782, 783, 783, 751, 719, 687, 655, 623, 591, 592, 593, 561, 529, 530, 498, 466, 467, 435, 435, 467, 468, 469, 437, 438, 439, 440, 408, 376, 344, 345, 313, 
[DBG]  Path for agent 61 updated, resulting length: 35
[DBG]  Update the agent path 74 | Original local length: 2 | New local length: 2
[DBG]  agent 74 t=0 => decoded (sx,sy)=(1,2) => global_id=625
[DBG]  agent 74 t=1 => decoded (sx,sy)=(0,2) => global_id=593
[DBG]  Complete path of agent 74:
[DBG]    Original: 752 752 752 752 752 752 751 719 687 655 656 657 625 593 561 529 530 531 499 467 435 403 404 405 437 438 439 440 472 504 
[DBG]    New:     752 752 752 752 752 752 751 719 687 655 656 657 625 593 561 529 530 531 499 467 435 403 404 405 437 438 439 440 472 504 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 752 752 752 752 752 752 751 719 687 655 656 657 
[DBG]    Local path (in submap): 625 593 
[DBG]    Suffix (out of submap): 561 529 530 531 499 467 435 403 404 405 437 438 439 440 472 504 
[DBG]  Original agent path length 74 je: 30
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 3: 752, 752, 752, 752, 752, 752, 751, 719, 687, 655, 656, 657, 625, 593, 561, 529, 530, 531, 499, 467, 435, 403, 404, 405, 437, 438, 439, 440, 472, 504, 
[DBG]  Path for agent 74 updated, resulting length: 30
[DBG]  Update the agent path 79 | Original local length: 6 | New local length: 6
[DBG]  agent 79 t=0 => decoded (sx,sy)=(4,0) => global_id=719
[DBG]  agent 79 t=1 => decoded (sx,sy)=(3,0) => global_id=687
[DBG]  agent 79 t=2 => decoded (sx,sy)=(2,0) => global_id=655
[DBG]  agent 79 t=3 => decoded (sx,sy)=(1,0) => global_id=623
[DBG]  agent 79 t=4 => decoded (sx,sy)=(0,0) => global_id=591
[DBG]  agent 79 t=5 => decoded (sx,sy)=(0,1) => global_id=592
[DBG]  Complete path of agent 79:
[DBG]    Original: 1004 1005 1006 974 942 910 878 846 814 782 783 751 719 687 655 623 591 592 560 528 496 464 465 433 401 400 368 336 304 303 271 239 207 208 176 177 178 179 147 115 116 117 118 119 120 121 122 123 
[DBG]    New:     1004 1005 1006 974 942 910 878 846 814 782 783 751 719 687 655 623 591 592 560 528 496 464 465 433 401 400 368 336 304 303 271 239 207 208 176 177 178 179 147 115 116 117 118 119 120 121 122 123 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 1004 1005 1006 974 942 910 878 846 814 782 783 751 
[DBG]    Local path (in submap): 719 687 655 623 591 592 
[DBG]    Suffix (out of submap): 560 528 496 464 465 433 401 400 368 336 304 303 271 239 207 208 176 177 178 179 147 115 116 117 118 119 120 121 122 123 
[DBG]  Original agent path length 79 je: 48
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 4: 1004, 1005, 1006, 974, 942, 910, 878, 846, 814, 782, 783, 751, 719, 687, 655, 623, 591, 592, 560, 528, 496, 464, 465, 433, 401, 400, 368, 336, 304, 303, 271, 239, 207, 208, 176, 177, 178, 179, 147, 115, 116, 117, 118, 119, 120, 121, 122, 123, 
[DBG]  Path for agent 79 updated, resulting length: 48
[DBG]  Update the agent path 96 | Original local length: 5 | New local length: 5
[DBG]  agent 96 t=0 => decoded (sx,sy)=(3,1) => global_id=688
[DBG]  agent 96 t=1 => decoded (sx,sy)=(3,2) => global_id=689
[DBG]  agent 96 t=2 => decoded (sx,sy)=(2,2) => global_id=657
[DBG]  agent 96 t=3 => decoded (sx,sy)=(2,3) => global_id=658
[DBG]  agent 96 t=4 => decoded (sx,sy)=(2,4) => global_id=659
[DBG]  Complete path of agent 96:
[DBG]    Original: 647 648 680 712 713 714 715 683 684 685 686 687 688 689 657 658 659 660 692 724 756 788 820 821 822 854 855 856 857 858 826 827 
[DBG]    New:     647 648 680 712 713 714 715 683 684 685 686 687 688 689 657 658 659 660 692 724 756 788 820 821 822 854 855 856 857 858 826 827 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 647 648 680 712 713 714 715 683 684 685 686 687 
[DBG]    Local path (in submap): 688 689 657 658 659 
[DBG]    Suffix (out of submap): 660 692 724 756 788 820 821 822 854 855 856 857 858 826 827 
[DBG]  Original agent path length 96 je: 32
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 5: 647, 648, 680, 712, 713, 714, 715, 683, 684, 685, 686, 687, 688, 689, 657, 658, 659, 660, 692, 724, 756, 788, 820, 821, 822, 854, 855, 856, 857, 858, 826, 827, 
[DBG]  Path for agent 96 updated, resulting length: 32
[DBG]  Update the agent path 114 | Original local length: 4 | New local length: 4
[DBG]  agent 114 t=0 => decoded (sx,sy)=(1,0) => global_id=623
[DBG]  agent 114 t=1 => decoded (sx,sy)=(0,0) => global_id=591
[DBG]  agent 114 t=2 => decoded (sx,sy)=(0,1) => global_id=592
[DBG]  agent 114 t=3 => decoded (sx,sy)=(0,2) => global_id=593
[DBG]  Complete path of agent 114:
[DBG]    Original: 875 843 811 779 747 715 683 684 685 686 687 655 623 591 592 593 561 529 529 530 498 466 467 468 469 437 438 439 440 408 409 377 345 313 281 249 217 218 186 154 
[DBG]    New:     875 843 811 779 747 715 683 684 685 686 687 655 623 591 592 593 561 529 529 530 498 466 467 468 469 437 438 439 440 408 409 377 345 313 281 249 217 218 186 154 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 875 843 811 779 747 715 683 684 685 686 687 655 
[DBG]    Local path (in submap): 623 591 592 593 
[DBG]    Suffix (out of submap): 561 529 529 530 498 466 467 468 469 437 438 439 440 408 409 377 345 313 281 249 217 218 186 154 
[DBG]  Original agent path length 114 je: 40
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 6: 875, 843, 811, 779, 747, 715, 683, 684, 685, 686, 687, 655, 623, 591, 592, 593, 561, 529, 529, 530, 498, 466, 467, 468, 469, 437, 438, 439, 440, 408, 409, 377, 345, 313, 281, 249, 217, 218, 186, 154, 
[DBG]  Path for agent 114 updated, resulting length: 40
[DBG]  Paths successfully updated.
[DBG]  (LNS.cpp) New path for agent 19: 
[DBG]  625, 625, 625, 625, 625, 625, 625, 625, 625, 657, 689, 721, 720, 752, 784, 784, 784, 783, 815, 814, 813, 781, 780, 779, 747, 715, 683, 682, 682, 682, 683, 
[DBG]  (LNS.cpp) New path for agent 28: 
[DBG]  661, 661, 661, 661, 661, 661, 661, 661, 661, 660, 659, 658, 657, 658, 659, 660, 661, 661, 661, 661, 660, 659, 691, 691, 691, 691, 691, 691, 691, 691, 691, 691, 691, 692, 724, 725, 726, 727, 
[DBG]  (LNS.cpp) New path for agent 61: 
[DBG]  813, 781, 782, 782, 782, 783, 783, 751, 719, 687, 655, 623, 591, 592, 593, 561, 529, 530, 498, 466, 467, 435, 435, 467, 468, 469, 437, 438, 439, 440, 408, 376, 344, 345, 313, 
[DBG]  (LNS.cpp) New path for agent 74: 
[DBG]  752, 752, 752, 752, 752, 752, 751, 719, 687, 655, 656, 657, 625, 593, 561, 529, 530, 531, 499, 467, 435, 403, 404, 405, 437, 438, 439, 440, 472, 504, 
[DBG]  (LNS.cpp) New path for agent 79: 
[DBG]  1004, 1005, 1006, 974, 942, 910, 878, 846, 814, 782, 783, 751, 719, 687, 655, 623, 591, 592, 560, 528, 496, 464, 465, 433, 401, 400, 368, 336, 304, 303, 271, 239, 207, 208, 176, 177, 178, 179, 147, 115, 116, 117, 118, 119, 120, 121, 122, 123, 
[DBG]  (LNS.cpp) New path for agent 96: 
[DBG]  647, 648, 680, 712, 713, 714, 715, 683, 684, 685, 686, 687, 688, 689, 657, 658, 659, 660, 692, 724, 756, 788, 820, 821, 822, 854, 855, 856, 857, 858, 826, 827, 
[DBG]  (LNS.cpp) New path for agent 114: 
[DBG]  875, 843, 811, 779, 747, 715, 683, 684, 685, 686, 687, 655, 623, 591, 592, 593, 561, 529, 529, 530, 498, 466, 467, 468, 469, 437, 438, 439, 440, 408, 409, 377, 345, 313, 281, 249, 217, 218, 186, 154, 
[DBG]  Delta value: 0.012
[DBG]  Rewarding metric index = 0
[DBG]  component_weights = {0.997798, 0.00102862, 0.000595517, 0.000578234}
[DBG]  opSuccess value: 1
[STAT] neighbor.sum_of_costs before recomputation: 247
[STAT] neighbor.old_sum_of_costs before recomputation: 250
[STAT] sum_of_costs before recomputation: 4376
[DBG]  Validate solution immediately after SAT success.
[WARNING] Problem after SAT: Target conflict: agent 42 (len 40) traverses target of agent 28 (len 37) at location 727 at timestep 39
[DBG]  [DEBUG] Attempting immediate repair via init_lns because problem occurred after SAT (should be applied only for conflicts...).
[DBG]  [DEBUG] Passing 150 agents to init_lns (skip=true).
[DBG]  [DEBUG] path_table contents for selected agents (neighbor.agents):
[DBG]    Agent 19 => controlling path length=31
[DBG]    Agent 28 => controlling path length=38
[DBG]    Agent 61 => controlling path length=35
[DBG]    Agent 74 => controlling path length=30
[DBG]    Agent 79 => controlling path length=48
[DBG]    Agent 96 => controlling path length=32
[DBG]    Agent 114 => controlling path length=40
[DBG]  hodnota skip_initial_solution=1
[DBG]  We skip initialSolution => call buildCollisionData()
[DBG]  buildCollisionData() called â€“ skip_initial_solution case.
[DBG]  Agents.size()=150, collision_graph.size()=150
[DBG]  agent 28 => updateCollidingPairs => foundCollision
[DBG]  agent 42 => updateCollidingPairs => foundCollision
[DBG]  agent 71 => updateCollidingPairs => foundCollision
[DBG]  Conflicting agent pairs:
[DBG]  agent 28 is in conflict with agent 42
[DBG]  agent 28 is in conflict with agent 71
[DBG]  buildCollisionData() => sum_of_costs=4373, num_of_colliding_pairs=2
[DBG]  buildCollisionData done => sum_of_costs=4373, num_of_colliding_pairs=2
[DBG]  sum_of_cost hodnota: 4373
[DBG]  After skip/init build => iteration_stats.back(): sum_of_costs=4373, collisions=2
[DEBUG] Using default neighbor generation strategy for conflicts: 0
	InitLNS(PP): runtime = 0.00089575, iterations = 2, colliding pairs = 0, initial colliding pairs = 2, solution cost = 4378, initial solution cost = 4373, failed iterations = 0
[DBG]  [DEBUG] init_lns->sum_of_costs after init_lns->run: 4378
[DBG]  [DEBUG] sum_of_costs after assignment from init_lns->run: 4378
[DBG]  Recomputing sum_of_cost by dividing neighbor.sum_of_costs and neighbor.old_sum_of_costs
[STAT] sum_of_costs after recomputation: 4378
[STAT] Iteration 85
[DBG]  Using SAT operator (destroy+repair SAT).
[DBG]  ====================
[DBG]  SAT destroy operator called.
[DBG]  SAT heuristic: 2
[DBG]  key_agent_id: 28
[DBG]  key_agent_id global path length: 43
[DBG]  Submap content (global positions):
[DBG]  595 596 597 598 599 
[DBG]  627 628 629 630 631 
[DBG]  659 660 661 662 663 
[DBG]  691 692 693 694 695 
[DBG]  723 724 725 726 727 
[DBG]  Map content with agents and obstacles:
[DBG]  X . A X . 
[DBG]  . . . X . 
[DBG]  . A A X X 
[DBG]  . . X X X 
[DBG]  X . . . . 
[DBG]  content of the map structure that we pass to the SAT solver:
[DBG]  -1  1  1  -1  1  
[DBG]  1  1  1  -1  1  
[DBG]  1  1  1  -1  -1  
[DBG]  1  1  -1  -1  -1  
[DBG]  -1  1  1  1  1  
[DBG]  Identifying agents in a submap for rescheduling (when key_agent is there at the time 8):
[DBG]  Agent 28 found intervals in the sub-map:
[DBG]   [0..42]
[DBG]  Agent 28 (interval in submap: [0..42]) contains time 8, added to replan.
[DBG]  Agent 63 found intervals in the sub-map:
[DBG]  
[DBG]  Agent 63 is not in sub-map at time 8 (intervals: 
[DBG]  )
[DBG]  Agent 89 found intervals in the sub-map:
[DBG]   [5..10]
[DBG]  Agent 89 (interval in submap: [5..10]) contains time 8, added to replan.
[DBG]  Agent 109 found intervals in the sub-map:
[DBG]  
[DBG]  Agent 109 is not in sub-map at time 8 (intervals: 
[DBG]  )
[DBG]  Agent 131 found intervals in the sub-map:
[DBG]   [8..13]
[DBG]  Agent 131 (interval in submap: [8..13]) contains time 8, added to replan.
[DBG]  Agent 28 | Start (global): 661 -> (local): (2, 2) at time 8 | Goal (global): 727 -> (local): (4, 4) at time 42
[DBG]  Agent 89 | Start (global): 660 -> (local): (2, 1) at time 8 | Goal (global): 724 -> (local): (4, 1) at time 10
[DBG]  Agent 131 | Start (global): 597 -> (local): (0, 2) at time 8 | Goal (global): 724 -> (local): (4, 1) at time 13
[DBG]  [REPAIR] SAT destroy operator called.
[DBG]  [REPAIR] SAT operator â€“ launching subproblem FOR OPTIMIZATION.
[DBG]  Creating local paths (sx, sy) in the submap for T_sync = 8
[DBG]    Agent 28 (global paths from T=8 to 42) has local path: (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,1) (2,0) (1,0) (1,0) (1,0) (1,0) (1,0) (2,0) (3,0) (3,1) (4,1) (4,2) (4,3) (4,4) 
[DBG]    Agent 89 (global paths from T=8 to 10) has local path: (2,1) (3,1) (4,1) 
[DBG]    Agent 131 (global paths from T=8 to 13) has local path: (0,2) (0,1) (1,1) (2,1) (3,1) (4,1) 
[DBG]  Checking input data for SAT solver:
[DBG]    - Number of agents to replan: 3
[DBG]  Agent 28 has the original local path length: 35 => Start (2,2), Goal (4,4)
[DBG]  Agent 89 has the original local path length: 3 => Start (2,1), Goal (4,1)
[DBG]  Agent 131 has the original local path length: 6 => Start (0,2), Goal (4,1)
[DBG]  Start position: (2, 2), (2, 1), (0, 2), 
[DBG]  Goal position: (4, 4), (4, 1), (4, 1), 
[DBG]  SAT instance and solver created.
Currently solving
Instance name: scen
Map name: map
Encoding used: disappear_at_goal
SAT solver used: Kissat
Optimizing function: sum of costs
Number of agents: 3
Mks LB: 7
SoC LB: 16
Delta: 0
Remaining time: 300000 [ms]

Vertex conflict! Agents 1, 2, timestep 6, location 0
Found plan [agents = 3] [timesteps = 7]
Agent #0 : 9 8 11 12 13 14 15 
Agent #1 : 8 11 12 0 0 0 0 
Agent #2 : 1 5 9 8 11 12 0 

[STAT] Solver returned: 0
[DBG]  Agent (index) 28 | New local path (submap idx):
[DBG]  9 8 11 12 13 14 15 
[DBG]  Agent (index) 89 | New local path (submap idx):
[DBG]  8 11 12 
[DBG]  Agent (index) 131 | New local path (submap idx):
[DBG]  1 5 9 8 11 12 
[DBG]  Update the agent path 28 | Original local length: 35 | New local length: 7
[DBG]  agent 28 t=0 => decoded (sx,sy)=(2,2) => global_id=661
[DBG]  agent 28 t=1 => decoded (sx,sy)=(2,1) => global_id=660
[DBG]  agent 28 t=2 => decoded (sx,sy)=(3,1) => global_id=692
[DBG]  agent 28 t=3 => decoded (sx,sy)=(4,1) => global_id=724
[DBG]  agent 28 t=4 => decoded (sx,sy)=(4,2) => global_id=725
[DBG]  agent 28 t=5 => decoded (sx,sy)=(4,3) => global_id=726
[DBG]  agent 28 t=6 => decoded (sx,sy)=(4,4) => global_id=727
[DBG]  Complete path of agent 28:
[DBG]    Original: 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 660 659 627 627 627 627 627 659 691 692 724 725 726 727 
[DBG]    New:     661 661 661 661 661 661 661 661 661 660 692 724 725 726 727 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 661 661 661 661 661 661 661 661 
[DBG]    Local path (in submap): 661 660 692 724 725 726 727 
[DBG]    Suffix (out of submap): 
[DBG]  Original agent path length 28 je: 43
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 0: 661, 661, 661, 661, 661, 661, 661, 661, 661, 660, 692, 724, 725, 726, 727, 
[DBG]  Path for agent 28 updated, resulting length: 15
[DBG]  Update the agent path 89 | Original local length: 3 | New local length: 3
[DBG]  agent 89 t=0 => decoded (sx,sy)=(2,1) => global_id=660
[DBG]  agent 89 t=1 => decoded (sx,sy)=(3,1) => global_id=692
[DBG]  agent 89 t=2 => decoded (sx,sy)=(4,1) => global_id=724
[DBG]  Complete path of agent 89:
[DBG]    Original: 437 469 501 533 565 597 629 628 660 692 724 756 788 788 788 820 821 822 854 886 918 950 982 1014 1015 
[DBG]    New:     437 469 501 533 565 597 629 628 660 692 724 756 788 788 788 820 821 822 854 886 918 950 982 1014 1015 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 437 469 501 533 565 597 629 628 
[DBG]    Local path (in submap): 660 692 724 
[DBG]    Suffix (out of submap): 756 788 788 788 820 821 822 854 886 918 950 982 1014 1015 
[DBG]  Original agent path length 89 je: 25
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 1: 437, 469, 501, 533, 565, 597, 629, 628, 660, 692, 724, 756, 788, 788, 788, 820, 821, 822, 854, 886, 918, 950, 982, 1014, 1015, 
[DBG]  Path for agent 89 updated, resulting length: 25
[DBG]  Update the agent path 131 | Original local length: 6 | New local length: 6
[DBG]  agent 131 t=0 => decoded (sx,sy)=(0,2) => global_id=597
[DBG]  agent 131 t=1 => decoded (sx,sy)=(1,2) => global_id=629
[DBG]  agent 131 t=2 => decoded (sx,sy)=(2,2) => global_id=661
[DBG]  agent 131 t=3 => decoded (sx,sy)=(2,1) => global_id=660
[DBG]  agent 131 t=4 => decoded (sx,sy)=(3,1) => global_id=692
[DBG]  agent 131 t=5 => decoded (sx,sy)=(4,1) => global_id=724
[DBG]  Complete path of agent 131:
[DBG]    Original: 341 373 405 437 469 501 533 565 597 596 628 660 692 724 756 788 820 819 851 850 849 848 847 846 878 877 876 875 843 811 779 778 746 745 713 712 
[DBG]    New:     341 373 405 437 469 501 533 565 597 629 661 660 692 724 756 788 820 819 851 850 849 848 847 846 878 877 876 875 843 811 779 778 746 745 713 712 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 341 373 405 437 469 501 533 565 
[DBG]    Local path (in submap): 597 629 661 660 692 724 
[DBG]    Suffix (out of submap): 756 788 820 819 851 850 849 848 847 846 878 877 876 875 843 811 779 778 746 745 713 712 
[DBG]  Original agent path length 131 je: 36
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 2: 341, 373, 405, 437, 469, 501, 533, 565, 597, 629, 661, 660, 692, 724, 756, 788, 820, 819, 851, 850, 849, 848, 847, 846, 878, 877, 876, 875, 843, 811, 779, 778, 746, 745, 713, 712, 
[DBG]  Path for agent 131 updated, resulting length: 36
[DBG]  Paths successfully updated.
[DBG]  (LNS.cpp) New path for agent 28: 
[DBG]  661, 661, 661, 661, 661, 661, 661, 661, 661, 660, 692, 724, 725, 726, 727, 
[DBG]  (LNS.cpp) New path for agent 89: 
[DBG]  437, 469, 501, 533, 565, 597, 629, 628, 660, 692, 724, 756, 788, 788, 788, 820, 821, 822, 854, 886, 918, 950, 982, 1014, 1015, 
[DBG]  (LNS.cpp) New path for agent 131: 
[DBG]  341, 373, 405, 437, 469, 501, 533, 565, 597, 629, 661, 660, 692, 724, 756, 788, 820, 819, 851, 850, 849, 848, 847, 846, 878, 877, 876, 875, 843, 811, 779, 778, 746, 745, 713, 712, 
[DBG]  Delta value: 0.277228
[DBG]  Rewarding metric index = 0
[DBG]  component_weights = {0.998361, 0.00076552, 0.000443195, 0.000430332}
[DBG]  opSuccess value: 1
[STAT] neighbor.sum_of_costs before recomputation: 73
[STAT] neighbor.old_sum_of_costs before recomputation: 101
[STAT] sum_of_costs before recomputation: 4378
[DBG]  Validate solution immediately after SAT success.
[WARNING] Problem after SAT: Target conflict: agent 1 (len 42) traverses target of agent 28 (len 14) at location 727 at timestep 40
[DBG]  [DEBUG] Attempting immediate repair via init_lns because problem occurred after SAT (should be applied only for conflicts...).
[DBG]  [DEBUG] Passing 150 agents to init_lns (skip=true).
[DBG]  [DEBUG] path_table contents for selected agents (neighbor.agents):
[DBG]    Agent 28 => controlling path length=15
[DBG]    Agent 89 => controlling path length=25
[DBG]    Agent 131 => controlling path length=36
[DBG]  hodnota skip_initial_solution=1
[DBG]  We skip initialSolution => call buildCollisionData()
[DBG]  buildCollisionData() called â€“ skip_initial_solution case.
[DBG]  Agents.size()=150, collision_graph.size()=150
[DBG]  agent 1 => updateCollidingPairs => foundCollision
[DBG]  agent 28 => updateCollidingPairs => foundCollision
[DBG]  agent 42 => updateCollidingPairs => foundCollision
[DBG]  agent 111 => updateCollidingPairs => foundCollision
[DBG]  Conflicting agent pairs:
[DBG]  agent 1 is in conflict with agent 28
[DBG]  agent 28 is in conflict with agent 42
[DBG]  agent 28 is in conflict with agent 111
[DBG]  buildCollisionData() => sum_of_costs=4350, num_of_colliding_pairs=3
[DBG]  buildCollisionData done => sum_of_costs=4350, num_of_colliding_pairs=3
[DBG]  sum_of_cost hodnota: 4350
[DBG]  After skip/init build => iteration_stats.back(): sum_of_costs=4350, collisions=3
[DEBUG] Using default neighbor generation strategy for conflicts: 1
	InitLNS(PP): runtime = 0.00116113, iterations = 2, colliding pairs = 0, initial colliding pairs = 3, solution cost = 4378, initial solution cost = 4350, failed iterations = 0
[DBG]  [DEBUG] init_lns->sum_of_costs after init_lns->run: 4378
[DBG]  [DEBUG] sum_of_costs after assignment from init_lns->run: 4378
[DBG]  Recomputing sum_of_cost by dividing neighbor.sum_of_costs and neighbor.old_sum_of_costs
[STAT] sum_of_costs after recomputation: 4378
[STAT] Iteration 86
[DBG]  Using SAT operator (destroy+repair SAT).
[DBG]  ====================
[DBG]  SAT destroy operator called.
[DBG]  SAT heuristic: 2
[DBG]  key_agent_id: 28
[DBG]  key_agent_id global path length: 43
[DBG]  Submap content (global positions):
[DBG]  562 563 564 565 566 
[DBG]  594 595 596 597 598 
[DBG]  626 627 628 629 630 
[DBG]  658 659 660 661 662 
[DBG]  690 691 692 693 694 
[DBG]  Map content with agents and obstacles:
[DBG]  X . X . A 
[DBG]  . X . A X 
[DBG]  X . A . X 
[DBG]  . . . . X 
[DBG]  X . . X X 
[DBG]  content of the map structure that we pass to the SAT solver:
[DBG]  -1  1  -1  1  1  
[DBG]  1  -1  1  1  -1  
[DBG]  -1  1  1  1  -1  
[DBG]  1  1  1  1  -1  
[DBG]  -1  1  1  -1  -1  
[DBG]  Identifying agents in a submap for rescheduling (when key_agent is there at the time 5):
[DBG]  Agent 28 found intervals in the sub-map:
[DBG]   [0..19]
[DBG]  Agent 28 (interval in submap: [0..19]) contains time 5, added to replan.
[DBG]  Agent 89 found intervals in the sub-map:
[DBG]   [4..9]
[DBG]  Agent 89 (interval in submap: [4..9]) contains time 5, added to replan.
[DBG]  Agent 104 found intervals in the sub-map:
[DBG]   [0..10]
[DBG]  Agent 104 (interval in submap: [0..10]) contains time 5, added to replan.
[DBG]  Agent 113 found intervals in the sub-map:
[DBG]  
[DBG]  Agent 113 is not in sub-map at time 5 (intervals: 
[DBG]  )
[DBG]  Agent 28 | Start (global): 628 -> (local): (2, 2) at time 5 | Goal (global): 692 -> (local): (4, 2) at time 19
[DBG]  Agent 89 | Start (global): 597 -> (local): (1, 3) at time 5 | Goal (global): 692 -> (local): (4, 2) at time 9
[DBG]  Agent 104 | Start (global): 566 -> (local): (0, 4) at time 5 | Goal (global): 565 -> (local): (0, 3) at time 10
[DBG]  [REPAIR] SAT destroy operator called.
[DBG]  [REPAIR] SAT operator â€“ launching subproblem FOR OPTIMIZATION.
[DBG]  Creating local paths (sx, sy) in the submap for T_sync = 5
[DBG]    Agent 28 (global paths from T=5 to 19) has local path: (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (3,2) (4,2) 
[DBG]    Agent 89 (global paths from T=5 to 9) has local path: (1,3) (2,3) (3,3) (3,2) (4,2) 
[DBG]    Agent 104 (global paths from T=5 to 10) has local path: (0,4) (0,4) (0,4) (0,4) (0,4) (0,3) 
[DBG]  Checking input data for SAT solver:
[DBG]    - Number of agents to replan: 3
[DBG]  Agent 28 has the original local path length: 15 => Start (2,2), Goal (4,2)
[DBG]  Agent 89 has the original local path length: 5 => Start (1,3), Goal (4,2)
[DBG]  Agent 104 has the original local path length: 6 => Start (0,4), Goal (0,3)
[DBG]  Start position: (2, 2), (1, 3), (0, 4), 
[DBG]  Goal position: (4, 2), (4, 2), (0, 3), 
[DBG]  SAT instance and solver created.
Currently solving
Instance name: scen
Map name: map
Encoding used: disappear_at_goal
SAT solver used: Kissat
Optimizing function: sum of costs
Number of agents: 3
Mks LB: 5
SoC LB: 10
Delta: 0
Remaining time: 300000 [ms]

Vertex conflict! Agents 0, 2, timestep 3, location 0
Swapping conflict! Agents 0, 2, timestep 3, edge (0,0)
Vertex conflict! Agents 0, 2, timestep 4, location 0
Found plan [agents = 3] [timesteps = 5]
Agent #0 : 7 11 14 0 0 
Agent #1 : 5 8 12 11 14 
Agent #2 : 2 1 0 0 0 

[STAT] Solver returned: 0
[DBG]  Agent (index) 28 | New local path (submap idx):
[DBG]  7 11 14 
[DBG]  Agent (index) 89 | New local path (submap idx):
[DBG]  5 8 12 11 14 
[DBG]  Agent (index) 104 | New local path (submap idx):
[DBG]  2 1 
[DBG]  Update the agent path 28 | Original local length: 15 | New local length: 3
[DBG]  agent 28 t=0 => decoded (sx,sy)=(2,2) => global_id=628
[DBG]  agent 28 t=1 => decoded (sx,sy)=(3,2) => global_id=660
[DBG]  agent 28 t=2 => decoded (sx,sy)=(4,2) => global_id=692
[DBG]  Complete path of agent 28:
[DBG]    Original: 661 661 660 628 628 628 628 628 628 628 628 628 628 628 628 628 628 628 660 692 724 756 788 788 788 820 821 822 854 855 856 824 823 822 821 820 820 788 756 757 725 726 727 
[DBG]    New:     661 661 660 628 628 628 660 692 724 756 788 788 788 820 821 822 854 855 856 824 823 822 821 820 820 788 756 757 725 726 727 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 661 661 660 628 628 
[DBG]    Local path (in submap): 628 660 692 724 756 788 788 788 820 821 822 854 855 856 824 
[DBG]    Suffix (out of submap): 823 822 821 820 820 788 756 757 725 726 727 
[DBG]  Original agent path length 28 je: 43
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 0: 661, 661, 660, 628, 628, 628, 660, 692, 724, 756, 788, 788, 788, 820, 821, 822, 854, 855, 856, 824, 823, 822, 821, 820, 820, 788, 756, 757, 725, 726, 727, 
[DBG]  Path for agent 28 updated, resulting length: 31
[DBG]  Update the agent path 89 | Original local length: 5 | New local length: 5
[DBG]  agent 89 t=0 => decoded (sx,sy)=(1,3) => global_id=597
[DBG]  agent 89 t=1 => decoded (sx,sy)=(2,3) => global_id=629
[DBG]  agent 89 t=2 => decoded (sx,sy)=(3,3) => global_id=661
[DBG]  agent 89 t=3 => decoded (sx,sy)=(3,2) => global_id=660
[DBG]  agent 89 t=4 => decoded (sx,sy)=(4,2) => global_id=692
[DBG]  Complete path of agent 89:
[DBG]    Original: 437 469 501 533 565 597 629 661 660 692 724 756 788 788 788 820 821 822 854 886 918 950 982 983 1015 
[DBG]    New:     437 469 501 533 565 597 629 661 660 692 724 756 788 788 788 820 821 822 854 886 918 950 982 983 1015 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 437 469 501 533 565 
[DBG]    Local path (in submap): 597 629 661 660 692 
[DBG]    Suffix (out of submap): 724 756 788 788 788 820 821 822 854 886 918 950 982 983 1015 
[DBG]  Original agent path length 89 je: 25
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 1: 437, 469, 501, 533, 565, 597, 629, 661, 660, 692, 724, 756, 788, 788, 788, 820, 821, 822, 854, 886, 918, 950, 982, 983, 1015, 
[DBG]  Path for agent 89 updated, resulting length: 25
[DBG]  Update the agent path 104 | Original local length: 6 | New local length: 2
[DBG]  agent 104 t=0 => decoded (sx,sy)=(0,4) => global_id=566
[DBG]  agent 104 t=1 => decoded (sx,sy)=(0,3) => global_id=565
[DBG]  Complete path of agent 104:
[DBG]    Original: 566 566 566 566 566 566 566 566 566 566 565 533 501 501 501 501 502 502 470 438 406 405 373 341 309 308 276 
[DBG]    New:     566 566 566 566 566 566 565 533 501 501 501 501 502 502 470 438 406 405 373 341 309 308 276 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 566 566 566 566 566 
[DBG]    Local path (in submap): 566 565 533 501 501 501 
[DBG]    Suffix (out of submap): 501 502 502 470 438 406 405 373 341 309 308 276 
[DBG]  Original agent path length 104 je: 27
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 2: 566, 566, 566, 566, 566, 566, 565, 533, 501, 501, 501, 501, 502, 502, 470, 438, 406, 405, 373, 341, 309, 308, 276, 
[DBG]  Path for agent 104 updated, resulting length: 23
[DBG]  Paths successfully updated.
[DBG]  (LNS.cpp) New path for agent 28: 
[DBG]  661, 661, 660, 628, 628, 628, 660, 692, 724, 756, 788, 788, 788, 820, 821, 822, 854, 855, 856, 824, 823, 822, 821, 820, 820, 788, 756, 757, 725, 726, 727, 
[DBG]  (LNS.cpp) New path for agent 89: 
[DBG]  437, 469, 501, 533, 565, 597, 629, 661, 660, 692, 724, 756, 788, 788, 788, 820, 821, 822, 854, 886, 918, 950, 982, 983, 1015, 
[DBG]  (LNS.cpp) New path for agent 104: 
[DBG]  566, 566, 566, 566, 566, 566, 565, 533, 501, 501, 501, 501, 502, 502, 470, 438, 406, 405, 373, 341, 309, 308, 276, 
[DBG]  Delta value: 0.173913
[DBG]  Rewarding metric index = 0
[DBG]  component_weights = {0.998673, 0.000619698, 0.000358772, 0.000348359}
[DBG]  opSuccess value: 1
[STAT] neighbor.sum_of_costs before recomputation: 76
[STAT] neighbor.old_sum_of_costs before recomputation: 92
[STAT] sum_of_costs before recomputation: 4378
[DBG]  Validate solution immediately after SAT success.
[WARNING] Problem after SAT: Vertex conflict between agents 28 and 0 at location 788 at timestep 25
[DBG]  [DEBUG] Attempting immediate repair via init_lns because problem occurred after SAT (should be applied only for conflicts...).
[DBG]  [DEBUG] Passing 150 agents to init_lns (skip=true).
[DBG]  [DEBUG] path_table contents for selected agents (neighbor.agents):
[DBG]    Agent 28 => controlling path length=31
[DBG]    Agent 89 => controlling path length=25
[DBG]    Agent 104 => controlling path length=23
[DBG]  hodnota skip_initial_solution=1
[DBG]  We skip initialSolution => call buildCollisionData()
[DBG]  buildCollisionData() called â€“ skip_initial_solution case.
[DBG]  Agents.size()=150, collision_graph.size()=150
[DBG]  agent 0 => updateCollidingPairs => foundCollision
[DBG]  agent 1 => updateCollidingPairs => foundCollision
[DBG]  agent 3 => updateCollidingPairs => foundCollision
[DBG]  agent 10 => updateCollidingPairs => foundCollision
[DBG]  agent 28 => updateCollidingPairs => foundCollision
[DBG]  agent 42 => updateCollidingPairs => foundCollision
[DBG]  agent 54 => updateCollidingPairs => foundCollision
[DBG]  agent 57 => updateCollidingPairs => foundCollision
[DBG]  agent 64 => updateCollidingPairs => foundCollision
[DBG]  agent 70 => updateCollidingPairs => foundCollision
[DBG]  agent 71 => updateCollidingPairs => foundCollision
[DBG]  agent 84 => updateCollidingPairs => foundCollision
[DBG]  agent 85 => updateCollidingPairs => foundCollision
[DBG]  agent 89 => updateCollidingPairs => foundCollision
[DBG]  agent 91 => updateCollidingPairs => foundCollision
[DBG]  agent 96 => updateCollidingPairs => foundCollision
[DBG]  agent 100 => updateCollidingPairs => foundCollision
[DBG]  agent 104 => updateCollidingPairs => foundCollision
[DBG]  agent 128 => updateCollidingPairs => foundCollision
[DBG]  agent 131 => updateCollidingPairs => foundCollision
[DBG]  agent 135 => updateCollidingPairs => foundCollision
[DBG]  Conflicting agent pairs:
[DBG]  agent 0 is in conflict with agent 28
[DBG]  agent 1 is in conflict with agent 28
[DBG]  agent 3 is in conflict with agent 104
[DBG]  agent 10 is in conflict with agent 104
[DBG]  agent 28 is in conflict with agent 42
[DBG]  agent 28 is in conflict with agent 70
[DBG]  agent 28 is in conflict with agent 71
[DBG]  agent 28 is in conflict with agent 85
[DBG]  agent 28 is in conflict with agent 89
[DBG]  agent 28 is in conflict with agent 91
[DBG]  agent 28 is in conflict with agent 96
[DBG]  agent 28 is in conflict with agent 135
[DBG]  agent 54 is in conflict with agent 104
[DBG]  agent 57 is in conflict with agent 104
[DBG]  agent 64 is in conflict with agent 104
[DBG]  agent 84 is in conflict with agent 104
[DBG]  agent 100 is in conflict with agent 104
[DBG]  agent 104 is in conflict with agent 128
[DBG]  agent 104 is in conflict with agent 131
[DBG]  buildCollisionData() => sum_of_costs=4362, num_of_colliding_pairs=19
[DBG]  buildCollisionData done => sum_of_costs=4362, num_of_colliding_pairs=19
[DBG]  sum_of_cost hodnota: 4362
[DBG]  After skip/init build => iteration_stats.back(): sum_of_costs=4362, collisions=19
[DEBUG] Using default neighbor generation strategy for conflicts: 0
[DEBUG] Using default neighbor generation strategy for conflicts: 0
	InitLNS(PP): runtime = 0.0021955, iterations = 3, colliding pairs = 0, initial colliding pairs = 19, solution cost = 4381, initial solution cost = 4362, failed iterations = 0
[DBG]  [DEBUG] init_lns->sum_of_costs after init_lns->run: 4381
[DBG]  [DEBUG] sum_of_costs after assignment from init_lns->run: 4381
[DBG]  Recomputing sum_of_cost by dividing neighbor.sum_of_costs and neighbor.old_sum_of_costs
[STAT] sum_of_costs after recomputation: 4381
[STAT] Iteration 87
[DBG]  Using SAT operator (destroy+repair SAT).
[DBG]  ====================
[DBG]  SAT destroy operator called.
[DBG]  SAT heuristic: 2
[DBG]  key_agent_id: 28
[DBG]  key_agent_id global path length: 42
[DBG]  Submap content (global positions):
[DBG]  595 596 597 598 599 
[DBG]  627 628 629 630 631 
[DBG]  659 660 661 662 663 
[DBG]  691 692 693 694 695 
[DBG]  723 724 725 726 727 
[DBG]  Map content with agents and obstacles:
[DBG]  X . . X . 
[DBG]  . A . X . 
[DBG]  . A A X X 
[DBG]  . A X X X 
[DBG]  X A A . . 
[DBG]  content of the map structure that we pass to the SAT solver:
[DBG]  -1  1  1  -1  1  
[DBG]  1  1  1  -1  1  
[DBG]  1  1  1  -1  -1  
[DBG]  1  1  -1  -1  -1  
[DBG]  -1  1  1  1  1  
[DBG]  Identifying agents in a submap for rescheduling (when key_agent is there at the time 27):
[DBG]  Agent 3 found intervals in the sub-map:
[DBG]   [25..30]
[DBG]  Agent 3 (interval in submap: [25..30]) contains time 27, added to replan.
[DBG]  Agent 28 found intervals in the sub-map:
[DBG]   [0..41]
[DBG]  Agent 28 (interval in submap: [0..41]) contains time 27, added to replan.
[DBG]  Agent 44 found intervals in the sub-map:
[DBG]   [24..29]
[DBG]  Agent 44 (interval in submap: [24..29]) contains time 27, added to replan.
[DBG]  Agent 57 found intervals in the sub-map:
[DBG]   [21..27]
[DBG]  Agent 57 (interval in submap: [21..27]) contains time 27, added to replan.
[DBG]  Agent 100 found intervals in the sub-map:
[DBG]   [23..28]
[DBG]  Agent 100 (interval in submap: [23..28]) contains time 27, added to replan.
[DBG]  Agent 111 found intervals in the sub-map:
[DBG]   [27..29]
[DBG]  Agent 111 (interval in submap: [27..29]) contains time 27, added to replan.
[DBG]  Agent 148 found intervals in the sub-map:
[DBG]   [31..39]
[DBG]  Agent 148 is not in sub-map at time 27 (intervals: 
[DBG]  [31..39] )
[DBG]  Agent 3 | Start (global): 628 -> (local): (1, 1) at time 27 | Goal (global): 724 -> (local): (4, 1) at time 30
[DBG]  Agent 28 | Start (global): 661 -> (local): (2, 2) at time 27 | Goal (global): 727 -> (local): (4, 4) at time 41
[DBG]  Agent 44 | Start (global): 660 -> (local): (2, 1) at time 27 | Goal (global): 724 -> (local): (4, 1) at time 29
[DBG]  Agent 57 | Start (global): 724 -> (local): (4, 1) at time 27 | Goal (global): 724 -> (local): (4, 1) at time 27
[DBG]  Agent 100 | Start (global): 692 -> (local): (3, 1) at time 27 | Goal (global): 724 -> (local): (4, 1) at time 28
[DBG]  Agent 111 | Start (global): 725 -> (local): (4, 2) at time 27 | Goal (global): 727 -> (local): (4, 4) at time 29
[DBG]  [REPAIR] SAT destroy operator called.
[DBG]  [REPAIR] SAT operator â€“ launching subproblem FOR OPTIMIZATION.
[DBG]  Creating local paths (sx, sy) in the submap for T_sync = 27
[DBG]    Agent 3 (global paths from T=27 to 30) has local path: (1,1) (2,1) (3,1) (4,1) 
[DBG]    Agent 28 (global paths from T=27 to 41) has local path: (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,1) (3,1) (4,1) (4,2) (4,3) (4,4) 
[DBG]    Agent 44 (global paths from T=27 to 29) has local path: (2,1) (3,1) (4,1) 
[DBG]    Agent 57 (global paths from T=27 to 27) has local path: (4,1) 
[DBG]    Agent 100 (global paths from T=27 to 28) has local path: (3,1) (4,1) 
[DBG]    Agent 111 (global paths from T=27 to 29) has local path: (4,2) (4,3) (4,4) 
[DBG]  Checking input data for SAT solver:
[DBG]    - Number of agents to replan: 6
[DBG]  Agent 3 has the original local path length: 4 => Start (1,1), Goal (4,1)
[DBG]  Agent 28 has the original local path length: 15 => Start (2,2), Goal (4,4)
[DBG]  Agent 44 has the original local path length: 3 => Start (2,1), Goal (4,1)
[DBG]  Agent 57 has the original local path length: 1 => Start (4,1), Goal (4,1)
[DBG]  Agent 100 has the original local path length: 2 => Start (3,1), Goal (4,1)
[DBG]  Agent 111 has the original local path length: 3 => Start (4,2), Goal (4,4)
[DBG]  Start position: (1, 1), (2, 2), (2, 1), (4, 1), (3, 1), (4, 2), 
[DBG]  Goal position: (4, 1), (4, 4), (4, 1), (4, 1), (4, 1), (4, 4), 
[DBG]  SAT instance and solver created.
Currently solving
Instance name: scen
Map name: map
Encoding used: disappear_at_goal
SAT solver used: Kissat
Optimizing function: sum of costs
Number of agents: 6
Mks LB: 7
SoC LB: 20
Delta: 0
Remaining time: 300000 [ms]

[STAT] Solver returned: -1
[DBG]  SAT solver failed.
[STAT] SAT solver failed to find a valid solution.
[DBG]  ====================
[DBG]  SAT destroy operator called.
[DBG]  SAT heuristic: 2
[DBG]  key_agent_id: 28
[DBG]  key_agent_id global path length: 42
[DBG]  Submap content (global positions):
[DBG]  595 596 597 598 599 
[DBG]  627 628 629 630 631 
[DBG]  659 660 661 662 663 
[DBG]  691 692 693 694 695 
[DBG]  723 724 725 726 727 
[DBG]  Map content with agents and obstacles:
[DBG]  X A . X . 
[DBG]  . . . X . 
[DBG]  A . A X X 
[DBG]  . . X X X 
[DBG]  X . . . . 
[DBG]  content of the map structure that we pass to the SAT solver:
[DBG]  -1  1  1  -1  1  
[DBG]  1  1  1  -1  1  
[DBG]  1  1  1  -1  -1  
[DBG]  1  1  -1  -1  -1  
[DBG]  -1  1  1  1  1  
[DBG]  Identifying agents in a submap for rescheduling (when key_agent is there at the time 20):
[DBG]  Agent 0 found intervals in the sub-map:
[DBG]   [20..23]
[DBG]  Agent 0 (interval in submap: [20..23]) contains time 20, added to replan.
[DBG]  Agent 3 found intervals in the sub-map:
[DBG]   [25..30]
[DBG]  Agent 3 is not in sub-map at time 20 (intervals: 
[DBG]  [25..30] )
[DBG]  Agent 28 found intervals in the sub-map:
[DBG]   [0..41]
[DBG]  Agent 28 (interval in submap: [0..41]) contains time 20, added to replan.
[DBG]  Agent 45 found intervals in the sub-map:
[DBG]   [19..26]
[DBG]  Agent 45 (interval in submap: [19..26]) contains time 20, added to replan.
[DBG]  Agent 57 found intervals in the sub-map:
[DBG]   [21..27]
[DBG]  Agent 57 is not in sub-map at time 20 (intervals: 
[DBG]  [21..27] )
[DBG]  Agent 0 | Start (global): 659 -> (local): (2, 0) at time 20 | Goal (global): 724 -> (local): (4, 1) at time 23
[DBG]  Agent 28 | Start (global): 661 -> (local): (2, 2) at time 20 | Goal (global): 727 -> (local): (4, 4) at time 41
[DBG]  Agent 45 | Start (global): 596 -> (local): (0, 1) at time 20 | Goal (global): 724 -> (local): (4, 1) at time 26
[DBG]  [REPAIR] SAT destroy operator called.
[DBG]  [REPAIR] SAT operator â€“ launching subproblem FOR OPTIMIZATION.
[DBG]  Creating local paths (sx, sy) in the submap for T_sync = 20
[DBG]    Agent 0 (global paths from T=20 to 23) has local path: (2,0) (3,0) (3,1) (4,1) 
[DBG]    Agent 28 (global paths from T=20 to 41) has local path: (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,1) (3,1) (4,1) (4,2) (4,3) (4,4) 
[DBG]    Agent 45 (global paths from T=20 to 26) has local path: (0,1) (1,1) (2,1) (3,1) (4,1) (4,2) (4,1) 
[DBG]  Checking input data for SAT solver:
[DBG]    - Number of agents to replan: 3
[DBG]  Agent 0 has the original local path length: 4 => Start (2,0), Goal (4,1)
[DBG]  Agent 28 has the original local path length: 22 => Start (2,2), Goal (4,4)
[DBG]  Agent 45 has the original local path length: 7 => Start (0,1), Goal (4,1)
[DBG]  Start position: (2, 0), (2, 2), (0, 1), 
[DBG]  Goal position: (4, 1), (4, 4), (4, 1), 
[DBG]  SAT instance and solver created.
Currently solving
Instance name: scen
Map name: map
Encoding used: disappear_at_goal
SAT solver used: Kissat
Optimizing function: sum of costs
Number of agents: 3
Mks LB: 7
SoC LB: 16
Delta: 0
Remaining time: 300000 [ms]

[STAT] Solver returned: -1
[DBG]  SAT solver failed.
[STAT] SAT solver failed to find a valid solution.
[DBG]  ====================
[DBG]  SAT destroy operator called.
[DBG]  SAT heuristic: 2
[DBG]  key_agent_id: 28
[DBG]  key_agent_id global path length: 42
[DBG]  Submap content (global positions):
[DBG]  595 596 597 598 599 
[DBG]  627 628 629 630 631 
[DBG]  659 660 661 662 663 
[DBG]  691 692 693 694 695 
[DBG]  723 724 725 726 727 
[DBG]  Map content with agents and obstacles:
[DBG]  X . A X . 
[DBG]  . . . X . 
[DBG]  . . A X X 
[DBG]  . . X X X 
[DBG]  X A . . . 
[DBG]  content of the map structure that we pass to the SAT solver:
[DBG]  -1  1  1  -1  1  
[DBG]  1  1  1  -1  1  
[DBG]  1  1  1  -1  -1  
[DBG]  1  1  -1  -1  -1  
[DBG]  -1  1  1  1  1  
[DBG]  Identifying agents in a submap for rescheduling (when key_agent is there at the time 30):
[DBG]  Agent 3 found intervals in the sub-map:
[DBG]   [25..30]
[DBG]  Agent 3 (interval in submap: [25..30]) contains time 30, added to replan.
[DBG]  Agent 26 found intervals in the sub-map:
[DBG]   [30..35]
[DBG]  Agent 26 (interval in submap: [30..35]) contains time 30, added to replan.
[DBG]  Agent 28 found intervals in the sub-map:
[DBG]   [0..41]
[DBG]  Agent 28 (interval in submap: [0..41]) contains time 30, added to replan.
[DBG]  Agent 30 found intervals in the sub-map:
[DBG]  
[DBG]  Agent 30 is not in sub-map at time 30 (intervals: 
[DBG]  )
[DBG]  Agent 45 found intervals in the sub-map:
[DBG]   [19..26]
[DBG]  Agent 45 is not in sub-map at time 30 (intervals: 
[DBG]  [19..26] )
[DBG]  Agent 3 | Start (global): 724 -> (local): (4, 1) at time 30 | Goal (global): 724 -> (local): (4, 1) at time 30
[DBG]  Agent 26 | Start (global): 597 -> (local): (0, 2) at time 30 | Goal (global): 724 -> (local): (4, 1) at time 35
[DBG]  Agent 28 | Start (global): 661 -> (local): (2, 2) at time 30 | Goal (global): 727 -> (local): (4, 4) at time 41
[DBG]  [REPAIR] SAT destroy operator called.
[DBG]  [REPAIR] SAT operator â€“ launching subproblem FOR OPTIMIZATION.
[DBG]  Creating local paths (sx, sy) in the submap for T_sync = 30
[DBG]    Agent 3 (global paths from T=30 to 30) has local path: (4,1) 
[DBG]    Agent 26 (global paths from T=30 to 35) has local path: (0,2) (0,1) (1,1) (2,1) (3,1) (4,1) 
[DBG]    Agent 28 (global paths from T=30 to 41) has local path: (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,1) (3,1) (4,1) (4,2) (4,3) (4,4) 
[DBG]  Checking input data for SAT solver:
[DBG]    - Number of agents to replan: 3
[DBG]  Agent 3 has the original local path length: 1 => Start (4,1), Goal (4,1)
[DBG]  Agent 26 has the original local path length: 6 => Start (0,2), Goal (4,1)
[DBG]  Agent 28 has the original local path length: 12 => Start (2,2), Goal (4,4)
[DBG]  Start position: (4, 1), (0, 2), (2, 2), 
[DBG]  Goal position: (4, 1), (4, 1), (4, 4), 
[DBG]  SAT instance and solver created.
Currently solving
Instance name: scen
Map name: map
Encoding used: disappear_at_goal
SAT solver used: Kissat
Optimizing function: sum of costs
Number of agents: 3
Mks LB: 7
SoC LB: 14
Delta: 0
Remaining time: 300000 [ms]

Vertex conflict! Agents 0, 1, timestep 6, location 0
Found plan [agents = 3] [timesteps = 7]
Agent #0 : 12 0 0 0 0 0 0 
Agent #1 : 1 5 9 8 11 12 0 
Agent #2 : 9 8 11 12 13 14 15 

[STAT] Solver returned: 0
[DBG]  Agent (index) 3 | New local path (submap idx):
[DBG]  12 
[DBG]  Agent (index) 26 | New local path (submap idx):
[DBG]  1 5 9 8 11 12 
[DBG]  Agent (index) 28 | New local path (submap idx):
[DBG]  9 8 11 12 13 14 15 
[DBG]  Update the agent path 3 | Original local length: 1 | New local length: 1
[DBG]  agent 3 t=0 => decoded (sx,sy)=(4,1) => global_id=724
[DBG]  Complete path of agent 3:
[DBG]    Original: 468 468 468 468 468 468 468 468 468 468 468 468 469 470 502 534 534 534 534 534 534 534 534 533 565 597 596 628 660 692 724 756 788 787 786 818 850 882 914 913 912 
[DBG]    New:     468 468 468 468 468 468 468 468 468 468 468 468 469 470 502 534 534 534 534 534 534 534 534 533 565 597 596 628 660 692 724 756 788 787 786 818 850 882 914 913 912 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 468 468 468 468 468 468 468 468 468 468 468 468 469 470 502 534 534 534 534 534 534 534 534 533 565 597 596 628 660 692 
[DBG]    Local path (in submap): 724 
[DBG]    Suffix (out of submap): 756 788 787 786 818 850 882 914 913 912 
[DBG]  Original agent path length 3 je: 41
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 0: 468, 468, 468, 468, 468, 468, 468, 468, 468, 468, 468, 468, 469, 470, 502, 534, 534, 534, 534, 534, 534, 534, 534, 533, 565, 597, 596, 628, 660, 692, 724, 756, 788, 787, 786, 818, 850, 882, 914, 913, 912, 
[DBG]  Path for agent 3 updated, resulting length: 41
[DBG]  Update the agent path 26 | Original local length: 6 | New local length: 6
[DBG]  agent 26 t=0 => decoded (sx,sy)=(0,2) => global_id=597
[DBG]  agent 26 t=1 => decoded (sx,sy)=(1,2) => global_id=629
[DBG]  agent 26 t=2 => decoded (sx,sy)=(2,2) => global_id=661
[DBG]  agent 26 t=3 => decoded (sx,sy)=(2,1) => global_id=660
[DBG]  agent 26 t=4 => decoded (sx,sy)=(3,1) => global_id=692
[DBG]  agent 26 t=5 => decoded (sx,sy)=(4,1) => global_id=724
[DBG]  Complete path of agent 26:
[DBG]    Original: 13 14 15 16 48 49 50 82 83 84 116 148 180 212 213 214 215 247 279 311 343 375 407 439 438 470 502 501 533 565 597 596 628 660 692 724 756 755 
[DBG]    New:     13 14 15 16 48 49 50 82 83 84 116 148 180 212 213 214 215 247 279 311 343 375 407 439 438 470 502 501 533 565 597 629 661 660 692 724 756 755 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 13 14 15 16 48 49 50 82 83 84 116 148 180 212 213 214 215 247 279 311 343 375 407 439 438 470 502 501 533 565 
[DBG]    Local path (in submap): 597 629 661 660 692 724 
[DBG]    Suffix (out of submap): 756 755 
[DBG]  Original agent path length 26 je: 38
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 1: 13, 14, 15, 16, 48, 49, 50, 82, 83, 84, 116, 148, 180, 212, 213, 214, 215, 247, 279, 311, 343, 375, 407, 439, 438, 470, 502, 501, 533, 565, 597, 629, 661, 660, 692, 724, 756, 755, 
[DBG]  Path for agent 26 updated, resulting length: 38
[DBG]  Update the agent path 28 | Original local length: 12 | New local length: 7
[DBG]  agent 28 t=0 => decoded (sx,sy)=(2,2) => global_id=661
[DBG]  agent 28 t=1 => decoded (sx,sy)=(2,1) => global_id=660
[DBG]  agent 28 t=2 => decoded (sx,sy)=(3,1) => global_id=692
[DBG]  agent 28 t=3 => decoded (sx,sy)=(4,1) => global_id=724
[DBG]  agent 28 t=4 => decoded (sx,sy)=(4,2) => global_id=725
[DBG]  agent 28 t=5 => decoded (sx,sy)=(4,3) => global_id=726
[DBG]  agent 28 t=6 => decoded (sx,sy)=(4,4) => global_id=727
[DBG]  Complete path of agent 28:
[DBG]    Original: 661 661 660 628 628 628 628 628 628 628 628 628 628 628 628 628 628 628 660 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 660 692 724 725 726 727 
[DBG]    New:     661 661 660 628 628 628 628 628 628 628 628 628 628 628 628 628 628 628 660 661 661 661 661 661 661 661 661 661 661 661 661 660 692 724 725 726 727 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 661 661 660 628 628 628 628 628 628 628 628 628 628 628 628 628 628 628 660 661 661 661 661 661 661 661 661 661 661 661 
[DBG]    Local path (in submap): 661 660 692 724 725 726 727 
[DBG]    Suffix (out of submap): 
[DBG]  Original agent path length 28 je: 42
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 2: 661, 661, 660, 628, 628, 628, 628, 628, 628, 628, 628, 628, 628, 628, 628, 628, 628, 628, 660, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 660, 692, 724, 725, 726, 727, 
[DBG]  Path for agent 28 updated, resulting length: 37
[DBG]  Paths successfully updated.
[DBG]  (LNS.cpp) New path for agent 3: 
[DBG]  468, 468, 468, 468, 468, 468, 468, 468, 468, 468, 468, 468, 469, 470, 502, 534, 534, 534, 534, 534, 534, 534, 534, 533, 565, 597, 596, 628, 660, 692, 724, 756, 788, 787, 786, 818, 850, 882, 914, 913, 912, 
[DBG]  (LNS.cpp) New path for agent 26: 
[DBG]  13, 14, 15, 16, 48, 49, 50, 82, 83, 84, 116, 148, 180, 212, 213, 214, 215, 247, 279, 311, 343, 375, 407, 439, 438, 470, 502, 501, 533, 565, 597, 629, 661, 660, 692, 724, 756, 755, 
[DBG]  (LNS.cpp) New path for agent 28: 
[DBG]  661, 661, 660, 628, 628, 628, 628, 628, 628, 628, 628, 628, 628, 628, 628, 628, 628, 628, 660, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 660, 692, 724, 725, 726, 727, 
[DBG]  Delta value: 0.0423729
[DBG]  Rewarding metric index = 0
[DBG]  component_weights = {0.998791, 0.000564848, 0.000327017, 0.000317526}
[DBG]  opSuccess value: 1
[STAT] neighbor.sum_of_costs before recomputation: 113
[STAT] neighbor.old_sum_of_costs before recomputation: 118
[STAT] sum_of_costs before recomputation: 4381
[DBG]  Validate solution immediately after SAT success.
[WARNING] Problem after SAT: Target conflict: agent 42 (len 41) traverses target of agent 28 (len 36) at location 727 at timestep 40
[DBG]  [DEBUG] Attempting immediate repair via init_lns because problem occurred after SAT (should be applied only for conflicts...).
[DBG]  [DEBUG] Passing 150 agents to init_lns (skip=true).
[DBG]  [DEBUG] path_table contents for selected agents (neighbor.agents):
[DBG]    Agent 3 => controlling path length=41
[DBG]    Agent 26 => controlling path length=38
[DBG]    Agent 28 => controlling path length=37
[DBG]  hodnota skip_initial_solution=1
[DBG]  We skip initialSolution => call buildCollisionData()
[DBG]  buildCollisionData() called â€“ skip_initial_solution case.
[DBG]  Agents.size()=150, collision_graph.size()=150
[DBG]  agent 28 => updateCollidingPairs => foundCollision
[DBG]  agent 42 => updateCollidingPairs => foundCollision
[DBG]  Conflicting agent pairs:
[DBG]  agent 28 is in conflict with agent 42
[DBG]  buildCollisionData() => sum_of_costs=4376, num_of_colliding_pairs=1
[DBG]  buildCollisionData done => sum_of_costs=4376, num_of_colliding_pairs=1
[DBG]  sum_of_cost hodnota: 4376
[DBG]  After skip/init build => iteration_stats.back(): sum_of_costs=4376, collisions=1
[DEBUG] Using default neighbor generation strategy for conflicts: 0
	InitLNS(PP): runtime = 0.00150838, iterations = 2, colliding pairs = 0, initial colliding pairs = 1, solution cost = 4384, initial solution cost = 4376, failed iterations = 0
[DBG]  [DEBUG] init_lns->sum_of_costs after init_lns->run: 4384
[DBG]  [DEBUG] sum_of_costs after assignment from init_lns->run: 4384
[DBG]  Recomputing sum_of_cost by dividing neighbor.sum_of_costs and neighbor.old_sum_of_costs
[STAT] sum_of_costs after recomputation: 4384
[STAT] Iteration 88
[DBG]  Using SAT operator (destroy+repair SAT).
[DBG]  ====================
[DBG]  SAT destroy operator called.
[DBG]  SAT heuristic: 2
[DBG]  key_agent_id: 28
[DBG]  key_agent_id global path length: 43
[DBG]  Submap content (global positions):
[DBG]  595 596 597 598 599 
[DBG]  627 628 629 630 631 
[DBG]  659 660 661 662 663 
[DBG]  691 692 693 694 695 
[DBG]  723 724 725 726 727 
[DBG]  Map content with agents and obstacles:
[DBG]  X . A X A 
[DBG]  . A . X . 
[DBG]  A . A X X 
[DBG]  . . X X X 
[DBG]  X . . . . 
[DBG]  content of the map structure that we pass to the SAT solver:
[DBG]  -1  1  1  -1  1  
[DBG]  1  1  1  -1  1  
[DBG]  1  1  1  -1  -1  
[DBG]  1  1  -1  -1  -1  
[DBG]  -1  1  1  1  1  
[DBG]  Identifying agents in a submap for rescheduling (when key_agent is there at the time 32):
[DBG]  Agent 26 found intervals in the sub-map:
[DBG]   [30..36]
[DBG]  Agent 26 (interval in submap: [30..36]) contains time 32, added to replan.
[DBG]  Agent 28 found intervals in the sub-map:
[DBG]   [0..42]
[DBG]  Agent 28 (interval in submap: [0..42]) contains time 32, added to replan.
[DBG]  Agent 42 found intervals in the sub-map:
[DBG]   [32..40]
[DBG]  Agent 42 (interval in submap: [32..40]) contains time 32, added to replan.
[DBG]  Agent 45 found intervals in the sub-map:
[DBG]   [19..26]
[DBG]  Agent 45 is not in sub-map at time 32 (intervals: 
[DBG]  [19..26] )
[DBG]  Agent 53 found intervals in the sub-map:
[DBG]   [31..36]
[DBG]  Agent 53 (interval in submap: [31..36]) contains time 32, added to replan.
[DBG]  Agent 148 found intervals in the sub-map:
[DBG]   [31..39]
[DBG]  Agent 148 (interval in submap: [31..39]) contains time 32, added to replan.
[DBG]  Agent 26 | Start (global): 628 -> (local): (1, 1) at time 32 | Goal (global): 725 -> (local): (4, 2) at time 36
[DBG]  Agent 28 | Start (global): 661 -> (local): (2, 2) at time 32 | Goal (global): 727 -> (local): (4, 4) at time 42
[DBG]  Agent 42 | Start (global): 597 -> (local): (0, 2) at time 32 | Goal (global): 727 -> (local): (4, 4) at time 40
[DBG]  Agent 53 | Start (global): 599 -> (local): (0, 4) at time 32 | Goal (global): 599 -> (local): (0, 4) at time 36
[DBG]  Agent 148 | Start (global): 659 -> (local): (2, 0) at time 32 | Goal (global): 660 -> (local): (2, 1) at time 39
[DBG]  [REPAIR] SAT destroy operator called.
[DBG]  [REPAIR] SAT operator â€“ launching subproblem FOR OPTIMIZATION.
[DBG]  Creating local paths (sx, sy) in the submap for T_sync = 32
[DBG]    Agent 26 (global paths from T=32 to 36) has local path: (1,1) (2,1) (3,1) (4,1) (4,2) 
[DBG]    Agent 28 (global paths from T=32 to 42) has local path: (2,2) (2,2) (2,2) (2,2) (2,1) (3,1) (3,1) (4,1) (4,2) (4,3) (4,4) 
[DBG]    Agent 42 (global paths from T=32 to 40) has local path: (0,2) (0,1) (1,1) (2,1) (3,1) (4,1) (4,2) (4,3) (4,4) 
[DBG]    Agent 53 (global paths from T=32 to 36) has local path: (0,4) (0,4) (0,4) (0,4) (0,4) 
[DBG]    Agent 148 (global paths from T=32 to 39) has local path: (2,0) (2,0) (2,0) (2,0) (2,0) (2,0) (2,0) (2,1) 
[DBG]  Checking input data for SAT solver:
[DBG]    - Number of agents to replan: 5
[DBG]  Agent 26 has the original local path length: 5 => Start (1,1), Goal (4,2)
[DBG]  Agent 28 has the original local path length: 11 => Start (2,2), Goal (4,4)
[DBG]  Agent 42 has the original local path length: 9 => Start (0,2), Goal (4,4)
[DBG]  Agent 53 has the original local path length: 5 => Start (0,4), Goal (0,4)
[DBG]  Agent 148 has the original local path length: 8 => Start (2,0), Goal (2,1)
[DBG]  Start position: (1, 1), (2, 2), (0, 2), (0, 4), (2, 0), 
[DBG]  Goal position: (4, 2), (4, 4), (4, 4), (0, 4), (2, 1), 
[DBG]  SAT instance and solver created.
Currently solving
Instance name: scen
Map name: map
Encoding used: disappear_at_goal
SAT solver used: Kissat
Optimizing function: sum of costs
Number of agents: 5
Mks LB: 9
SoC LB: 24
Delta: 0
Remaining time: 300000 [ms]

[STAT] Solver returned: -1
[DBG]  SAT solver failed.
[STAT] SAT solver failed to find a valid solution.
[DBG]  ====================
[DBG]  SAT destroy operator called.
[DBG]  SAT heuristic: 2
[DBG]  key_agent_id: 28
[DBG]  key_agent_id global path length: 43
[DBG]  Submap content (global positions):
[DBG]  595 596 597 598 599 
[DBG]  627 628 629 630 631 
[DBG]  659 660 661 662 663 
[DBG]  691 692 693 694 695 
[DBG]  723 724 725 726 727 
[DBG]  Map content with agents and obstacles:
[DBG]  X . A X . 
[DBG]  . A . X A 
[DBG]  . . A X X 
[DBG]  A A X X X 
[DBG]  X A . . . 
[DBG]  content of the map structure that we pass to the SAT solver:
[DBG]  -1  1  1  -1  1  
[DBG]  1  1  1  -1  1  
[DBG]  1  1  1  -1  -1  
[DBG]  1  1  -1  -1  -1  
[DBG]  -1  1  1  1  1  
[DBG]  Identifying agents in a submap for rescheduling (when key_agent is there at the time 23):
[DBG]  Agent 0 found intervals in the sub-map:
[DBG]   [20..23]
[DBG]  Agent 0 (interval in submap: [20..23]) contains time 23, added to replan.
[DBG]  Agent 28 found intervals in the sub-map:
[DBG]   [0..42]
[DBG]  Agent 28 (interval in submap: [0..42]) contains time 23, added to replan.
[DBG]  Agent 45 found intervals in the sub-map:
[DBG]   [19..26]
[DBG]  Agent 45 (interval in submap: [19..26]) contains time 23, added to replan.
[DBG]  Agent 57 found intervals in the sub-map:
[DBG]   [21..27]
[DBG]  Agent 57 (interval in submap: [21..27]) contains time 23, added to replan.
[DBG]  Agent 71 found intervals in the sub-map:
[DBG]   [22..25]
[DBG]  Agent 71 (interval in submap: [22..25]) contains time 23, added to replan.
[DBG]  Agent 100 found intervals in the sub-map:
[DBG]   [23..28]
[DBG]  Agent 100 (interval in submap: [23..28]) contains time 23, added to replan.
[DBG]  Agent 144 found intervals in the sub-map:
[DBG]   [23..23]
[DBG]  Agent 144 (interval in submap: [23..23]) contains time 23, added to replan.
[DBG]  Agent 0 | Start (global): 724 -> (local): (4, 1) at time 23 | Goal (global): 724 -> (local): (4, 1) at time 23
[DBG]  Agent 28 | Start (global): 661 -> (local): (2, 2) at time 23 | Goal (global): 727 -> (local): (4, 4) at time 42
[DBG]  Agent 45 | Start (global): 692 -> (local): (3, 1) at time 23 | Goal (global): 724 -> (local): (4, 1) at time 26
[DBG]  Agent 57 | Start (global): 628 -> (local): (1, 1) at time 23 | Goal (global): 724 -> (local): (4, 1) at time 27
[DBG]  Agent 71 | Start (global): 691 -> (local): (3, 0) at time 23 | Goal (global): 724 -> (local): (4, 1) at time 25
[DBG]  Agent 100 | Start (global): 597 -> (local): (0, 2) at time 23 | Goal (global): 724 -> (local): (4, 1) at time 28
[DBG]  Agent 144 | Start (global): 631 -> (local): (1, 4) at time 23 | Goal (global): 631 -> (local): (1, 4) at time 23
[DBG]  [REPAIR] SAT destroy operator called.
[DBG]  [REPAIR] SAT operator â€“ launching subproblem FOR OPTIMIZATION.
[DBG]  Creating local paths (sx, sy) in the submap for T_sync = 23
[DBG]    Agent 0 (global paths from T=23 to 23) has local path: (4,1) 
[DBG]    Agent 28 (global paths from T=23 to 42) has local path: (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,1) (3,1) (3,1) (4,1) (4,2) (4,3) (4,4) 
[DBG]    Agent 45 (global paths from T=23 to 26) has local path: (3,1) (4,1) (4,2) (4,1) 
[DBG]    Agent 57 (global paths from T=23 to 27) has local path: (1,1) (2,1) (3,1) (3,1) (4,1) 
[DBG]    Agent 71 (global paths from T=23 to 25) has local path: (3,0) (3,1) (4,1) 
[DBG]    Agent 100 (global paths from T=23 to 28) has local path: (0,2) (0,1) (1,1) (2,1) (3,1) (4,1) 
[DBG]    Agent 144 (global paths from T=23 to 23) has local path: (1,4) 
[DBG]  Checking input data for SAT solver:
[DBG]    - Number of agents to replan: 7
[DBG]  Agent 0 has the original local path length: 1 => Start (4,1), Goal (4,1)
[DBG]  Agent 28 has the original local path length: 20 => Start (2,2), Goal (4,4)
[DBG]  Agent 45 has the original local path length: 4 => Start (3,1), Goal (4,1)
[DBG]  Agent 57 has the original local path length: 5 => Start (1,1), Goal (4,1)
[DBG]  Agent 71 has the original local path length: 3 => Start (3,0), Goal (4,1)
[DBG]  Agent 100 has the original local path length: 6 => Start (0,2), Goal (4,1)
[DBG]  Agent 144 has the original local path length: 1 => Start (1,4), Goal (1,4)
[DBG]  Start position: (4, 1), (2, 2), (3, 1), (1, 1), (3, 0), (0, 2), (1, 4), 
[DBG]  Goal position: (4, 1), (4, 4), (4, 1), (4, 1), (4, 1), (4, 1), (1, 4), 
[DBG]  SAT instance and solver created.
Currently solving
Instance name: scen
Map name: map
Encoding used: disappear_at_goal
SAT solver used: Kissat
Optimizing function: sum of costs
Number of agents: 7
Mks LB: 7
SoC LB: 24
Delta: 0
Remaining time: 300000 [ms]

[STAT] Solver returned: -1
[DBG]  SAT solver failed.
[STAT] SAT solver failed to find a valid solution.
[DBG]  ====================
[DBG]  SAT destroy operator called.
[DBG]  SAT heuristic: 2
[DBG]  key_agent_id: 28
[DBG]  key_agent_id global path length: 43
[DBG]  Submap content (global positions):
[DBG]  626 627 628 629 630 
[DBG]  658 659 660 661 662 
[DBG]  690 691 692 693 694 
[DBG]  722 723 724 725 726 
[DBG]  754 755 756 757 758 
[DBG]  Map content with agents and obstacles:
[DBG]  X . A . X 
[DBG]  . A . . X 
[DBG]  X . A X X 
[DBG]  . X A . . 
[DBG]  X . A A X 
[DBG]  content of the map structure that we pass to the SAT solver:
[DBG]  -1  1  1  1  -1  
[DBG]  1  1  1  1  -1  
[DBG]  -1  1  1  -1  -1  
[DBG]  1  -1  1  1  1  
[DBG]  -1  1  1  1  -1  
[DBG]  Identifying agents in a submap for rescheduling (when key_agent is there at the time 37):
[DBG]  Agent 1 found intervals in the sub-map:
[DBG]   [35..40]
[DBG]  Agent 1 (interval in submap: [35..40]) contains time 37, added to replan.
[DBG]  Agent 26 found intervals in the sub-map:
[DBG]   [32..39]
[DBG]  Agent 26 (interval in submap: [32..39]) contains time 37, added to replan.
[DBG]  Agent 28 found intervals in the sub-map:
[DBG]   [0..41]
[DBG]  Agent 28 (interval in submap: [0..41]) contains time 37, added to replan.
[DBG]  Agent 42 found intervals in the sub-map:
[DBG]   [34..39]
[DBG]  Agent 42 (interval in submap: [34..39]) contains time 37, added to replan.
[DBG]  Agent 55 found intervals in the sub-map:
[DBG]   [42..47]
[DBG]  Agent 55 is not in sub-map at time 37 (intervals: 
[DBG]  [42..47] )
[DBG]  Agent 69 found intervals in the sub-map:
[DBG]   [36..41]
[DBG]  Agent 69 (interval in submap: [36..41]) contains time 37, added to replan.
[DBG]  Agent 148 found intervals in the sub-map:
[DBG]   [30..39]
[DBG]  Agent 148 (interval in submap: [30..39]) contains time 37, added to replan.
[DBG]  Agent 1 | Start (global): 756 -> (local): (4, 2) at time 37 | Goal (global): 726 -> (local): (3, 4) at time 40
[DBG]  Agent 26 | Start (global): 757 -> (local): (4, 3) at time 37 | Goal (global): 755 -> (local): (4, 1) at time 39
[DBG]  Agent 28 | Start (global): 692 -> (local): (2, 2) at time 37 | Goal (global): 726 -> (local): (3, 4) at time 41
[DBG]  Agent 42 | Start (global): 724 -> (local): (3, 2) at time 37 | Goal (global): 726 -> (local): (3, 4) at time 39
[DBG]  Agent 69 | Start (global): 628 -> (local): (0, 2) at time 37 | Goal (global): 756 -> (local): (4, 2) at time 41
[DBG]  Agent 148 | Start (global): 659 -> (local): (1, 1) at time 37 | Goal (global): 660 -> (local): (1, 2) at time 39
[DBG]  [REPAIR] SAT destroy operator called.
[DBG]  [REPAIR] SAT operator â€“ launching subproblem FOR OPTIMIZATION.
[DBG]  Creating local paths (sx, sy) in the submap for T_sync = 37
[DBG]    Agent 1 (global paths from T=37 to 40) has local path: (4,2) (3,2) (3,3) (3,4) 
[DBG]    Agent 26 (global paths from T=37 to 39) has local path: (4,3) (4,2) (4,1) 
[DBG]    Agent 28 (global paths from T=37 to 41) has local path: (2,2) (2,2) (3,2) (3,3) (3,4) 
[DBG]    Agent 42 (global paths from T=37 to 39) has local path: (3,2) (3,3) (3,4) 
[DBG]    Agent 69 (global paths from T=37 to 41) has local path: (0,2) (1,2) (2,2) (3,2) (4,2) 
[DBG]    Agent 148 (global paths from T=37 to 39) has local path: (1,1) (1,1) (1,2) 
[DBG]  Checking input data for SAT solver:
[DBG]    - Number of agents to replan: 6
[DBG]  Agent 1 has the original local path length: 4 => Start (4,2), Goal (3,4)
[DBG]  Agent 26 has the original local path length: 3 => Start (4,3), Goal (4,1)
[DBG]  Agent 28 has the original local path length: 5 => Start (2,2), Goal (3,4)
[DBG]  Agent 42 has the original local path length: 3 => Start (3,2), Goal (3,4)
[DBG]  Agent 69 has the original local path length: 5 => Start (0,2), Goal (4,2)
[DBG]  Agent 148 has the original local path length: 3 => Start (1,1), Goal (1,2)
[DBG]  Start position: (4, 2), (4, 3), (2, 2), (3, 2), (0, 2), (1, 1), 
[DBG]  Goal position: (3, 4), (4, 1), (3, 4), (3, 4), (4, 2), (1, 2), 
[DBG]  SAT instance and solver created.
Currently solving
Instance name: scen
Map name: map
Encoding used: disappear_at_goal
SAT solver used: Kissat
Optimizing function: sum of costs
Number of agents: 6
Mks LB: 5
SoC LB: 21
Delta: 0
Remaining time: 300000 [ms]

[STAT] Solver returned: -1
[DBG]  SAT solver failed.
[STAT] SAT solver failed to find a valid solution.
[DBG]  ====================
[DBG]  SAT destroy operator called.
[DBG]  SAT heuristic: 2
[DBG]  key_agent_id: 28
[DBG]  key_agent_id global path length: 43
[DBG]  Submap content (global positions):
[DBG]  658 659 660 661 662 
[DBG]  690 691 692 693 694 
[DBG]  722 723 724 725 726 
[DBG]  754 755 756 757 758 
[DBG]  786 787 788 789 790 
[DBG]  Map content with agents and obstacles:
[DBG]  . . A . X 
[DBG]  X . A X X 
[DBG]  . X A A A 
[DBG]  X A . . X 
[DBG]  . . . X . 
[DBG]  content of the map structure that we pass to the SAT solver:
[DBG]  1  1  1  1  -1  
[DBG]  -1  1  1  -1  -1  
[DBG]  1  -1  1  1  1  
[DBG]  -1  1  1  1  -1  
[DBG]  1  1  1  -1  1  
[DBG]  Identifying agents in a submap for rescheduling (when key_agent is there at the time 39):
[DBG]  Agent 1 found intervals in the sub-map:
[DBG]   [34..40]
[DBG]  Agent 1 (interval in submap: [34..40]) contains time 39, added to replan.
[DBG]  Agent 26 found intervals in the sub-map:
[DBG]   [33..39]
[DBG]  Agent 26 (interval in submap: [33..39]) contains time 39, added to replan.
[DBG]  Agent 28 found intervals in the sub-map:
[DBG]   [0..41]
[DBG]  Agent 28 (interval in submap: [0..41]) contains time 39, added to replan.
[DBG]  Agent 42 found intervals in the sub-map:
[DBG]   [35..39]
[DBG]  Agent 42 (interval in submap: [35..39]) contains time 39, added to replan.
[DBG]  Agent 55 found intervals in the sub-map:
[DBG]   [45..47]
[DBG]  Agent 55 is not in sub-map at time 39 (intervals: 
[DBG]  [45..47] )
[DBG]  Agent 59 found intervals in the sub-map:
[DBG]  
[DBG]  Agent 59 is not in sub-map at time 39 (intervals: 
[DBG]  )
[DBG]  Agent 69 found intervals in the sub-map:
[DBG]   [38..42]
[DBG]  Agent 69 (interval in submap: [38..42]) contains time 39, added to replan.
[DBG]  Agent 148 found intervals in the sub-map:
[DBG]   [30..39]
[DBG]  Agent 148 (interval in submap: [30..39]) contains time 39, added to replan.
[DBG]  Agent 1 | Start (global): 725 -> (local): (2, 3) at time 39 | Goal (global): 726 -> (local): (2, 4) at time 40
[DBG]  Agent 26 | Start (global): 755 -> (local): (3, 1) at time 39 | Goal (global): 755 -> (local): (3, 1) at time 39
[DBG]  Agent 28 | Start (global): 724 -> (local): (2, 2) at time 39 | Goal (global): 726 -> (local): (2, 4) at time 41
[DBG]  Agent 42 | Start (global): 726 -> (local): (2, 4) at time 39 | Goal (global): 726 -> (local): (2, 4) at time 39
[DBG]  Agent 69 | Start (global): 692 -> (local): (1, 2) at time 39 | Goal (global): 788 -> (local): (4, 2) at time 42
[DBG]  Agent 148 | Start (global): 660 -> (local): (0, 2) at time 39 | Goal (global): 660 -> (local): (0, 2) at time 39
[DBG]  [REPAIR] SAT destroy operator called.
[DBG]  [REPAIR] SAT operator â€“ launching subproblem FOR OPTIMIZATION.
[DBG]  Creating local paths (sx, sy) in the submap for T_sync = 39
[DBG]    Agent 1 (global paths from T=39 to 40) has local path: (2,3) (2,4) 
[DBG]    Agent 26 (global paths from T=39 to 39) has local path: (3,1) 
[DBG]    Agent 28 (global paths from T=39 to 41) has local path: (2,2) (2,3) (2,4) 
[DBG]    Agent 42 (global paths from T=39 to 39) has local path: (2,4) 
[DBG]    Agent 69 (global paths from T=39 to 42) has local path: (1,2) (2,2) (3,2) (4,2) 
[DBG]    Agent 148 (global paths from T=39 to 39) has local path: (0,2) 
[DBG]  Checking input data for SAT solver:
[DBG]    - Number of agents to replan: 6
[DBG]  Agent 1 has the original local path length: 2 => Start (2,3), Goal (2,4)
[DBG]  Agent 26 has the original local path length: 1 => Start (3,1), Goal (3,1)
[DBG]  Agent 28 has the original local path length: 3 => Start (2,2), Goal (2,4)
[DBG]  Agent 42 has the original local path length: 1 => Start (2,4), Goal (2,4)
[DBG]  Agent 69 has the original local path length: 4 => Start (1,2), Goal (4,2)
[DBG]  Agent 148 has the original local path length: 1 => Start (0,2), Goal (0,2)
[DBG]  Start position: (2, 3), (3, 1), (2, 2), (2, 4), (1, 2), (0, 2), 
[DBG]  Goal position: (2, 4), (3, 1), (2, 4), (2, 4), (4, 2), (0, 2), 
[DBG]  SAT instance and solver created.
Currently solving
Instance name: scen
Map name: map
Encoding used: disappear_at_goal
SAT solver used: Kissat
Optimizing function: sum of costs
Number of agents: 6
Mks LB: 4
SoC LB: 12
Delta: 0
Remaining time: 300000 [ms]

Vertex conflict! Agents 0, 1, timestep 2, location 0
Swapping conflict! Agents 0, 1, timestep 2, edge (0,0)
Vertex conflict! Agents 0, 1, timestep 3, location 0
Vertex conflict! Agents 0, 2, timestep 3, location 0
Vertex conflict! Agents 0, 3, timestep 2, location 0
Swapping conflict! Agents 0, 3, timestep 2, edge (0,0)
Vertex conflict! Agents 0, 3, timestep 3, location 0
Vertex conflict! Agents 0, 5, timestep 2, location 0
Swapping conflict! Agents 0, 5, timestep 2, edge (0,0)
Vertex conflict! Agents 0, 5, timestep 3, location 0
Vertex conflict! Agents 1, 2, timestep 3, location 0
Vertex conflict! Agents 1, 3, timestep 1, location 0
Swapping conflict! Agents 1, 3, timestep 1, edge (0,0)
Vertex conflict! Agents 1, 3, timestep 2, location 0
Swapping conflict! Agents 1, 3, timestep 2, edge (0,0)
Vertex conflict! Agents 1, 3, timestep 3, location 0
Vertex conflict! Agents 1, 5, timestep 1, location 0
Swapping conflict! Agents 1, 5, timestep 1, edge (0,0)
Vertex conflict! Agents 1, 5, timestep 2, location 0
Swapping conflict! Agents 1, 5, timestep 2, edge (0,0)
Vertex conflict! Agents 1, 5, timestep 3, location 0
Vertex conflict! Agents 2, 3, timestep 3, location 0
Vertex conflict! Agents 2, 5, timestep 3, location 0
Vertex conflict! Agents 3, 5, timestep 1, location 0
Swapping conflict! Agents 3, 5, timestep 1, edge (0,0)
Vertex conflict! Agents 3, 5, timestep 2, location 0
Swapping conflict! Agents 3, 5, timestep 2, edge (0,0)
Vertex conflict! Agents 3, 5, timestep 3, location 0
Found plan [agents = 6] [timesteps = 4]
Agent #0 : 8 9 0 0 
Agent #1 : 10 0 0 0 
Agent #2 : 7 8 9 0 
Agent #3 : 9 0 0 0 
Agent #4 : 5 7 11 15 
Agent #5 : 2 0 0 0 

[STAT] Solver returned: 0
[DBG]  Agent (index) 1 | New local path (submap idx):
[DBG]  8 9 
[DBG]  Agent (index) 26 | New local path (submap idx):
[DBG]  10 
[DBG]  Agent (index) 28 | New local path (submap idx):
[DBG]  7 8 9 
[DBG]  Agent (index) 42 | New local path (submap idx):
[DBG]  9 
[DBG]  Agent (index) 69 | New local path (submap idx):
[DBG]  5 7 11 15 
[DBG]  Agent (index) 148 | New local path (submap idx):
[DBG]  2 
[DBG]  Update the agent path 1 | Original local length: 2 | New local length: 2
[DBG]  agent 1 t=0 => decoded (sx,sy)=(2,3) => global_id=725
[DBG]  agent 1 t=1 => decoded (sx,sy)=(2,4) => global_id=726
[DBG]  Complete path of agent 1:
[DBG]    Original: 949 949 949 949 949 948 980 948 948 948 948 948 948 948 948 948 948 948 948 948 916 884 883 851 819 819 819 819 819 820 820 820 820 819 787 755 756 756 724 725 726 727 728 
[DBG]    New:     949 949 949 949 949 948 980 948 948 948 948 948 948 948 948 948 948 948 948 948 916 884 883 851 819 819 819 819 819 820 820 820 820 819 787 755 756 756 724 725 726 727 728 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 949 949 949 949 949 948 980 948 948 948 948 948 948 948 948 948 948 948 948 948 916 884 883 851 819 819 819 819 819 820 820 820 820 819 787 755 756 756 724 
[DBG]    Local path (in submap): 725 726 
[DBG]    Suffix (out of submap): 727 728 
[DBG]  Original agent path length 1 je: 43
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 0: 949, 949, 949, 949, 949, 948, 980, 948, 948, 948, 948, 948, 948, 948, 948, 948, 948, 948, 948, 948, 916, 884, 883, 851, 819, 819, 819, 819, 819, 820, 820, 820, 820, 819, 787, 755, 756, 756, 724, 725, 726, 727, 728, 
[DBG]  Path for agent 1 updated, resulting length: 43
[DBG]  Update the agent path 26 | Original local length: 1 | New local length: 1
[DBG]  agent 26 t=0 => decoded (sx,sy)=(3,1) => global_id=755
[DBG]  Complete path of agent 26:
[DBG]    Original: 13 14 15 16 48 49 50 82 83 115 116 148 149 181 213 214 215 247 279 311 343 375 407 439 438 470 469 501 533 565 597 596 628 660 692 724 725 757 756 755 
[DBG]    New:     13 14 15 16 48 49 50 82 83 115 116 148 149 181 213 214 215 247 279 311 343 375 407 439 438 470 469 501 533 565 597 596 628 660 692 724 725 757 756 755 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 13 14 15 16 48 49 50 82 83 115 116 148 149 181 213 214 215 247 279 311 343 375 407 439 438 470 469 501 533 565 597 596 628 660 692 724 725 757 756 
[DBG]    Local path (in submap): 755 
[DBG]    Suffix (out of submap): 
[DBG]  Original agent path length 26 je: 40
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 1: 13, 14, 15, 16, 48, 49, 50, 82, 83, 115, 116, 148, 149, 181, 213, 214, 215, 247, 279, 311, 343, 375, 407, 439, 438, 470, 469, 501, 533, 565, 597, 596, 628, 660, 692, 724, 725, 757, 756, 755, 
[DBG]  Path for agent 26 updated, resulting length: 40
[DBG]  Update the agent path 28 | Original local length: 3 | New local length: 3
[DBG]  agent 28 t=0 => decoded (sx,sy)=(2,2) => global_id=724
[DBG]  agent 28 t=1 => decoded (sx,sy)=(2,3) => global_id=725
[DBG]  agent 28 t=2 => decoded (sx,sy)=(2,4) => global_id=726
[DBG]  Complete path of agent 28:
[DBG]    Original: 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 660 692 692 724 725 726 727 
[DBG]    New:     661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 660 692 692 724 725 726 727 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 660 692 692 
[DBG]    Local path (in submap): 724 725 726 
[DBG]    Suffix (out of submap): 727 
[DBG]  Original agent path length 28 je: 43
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 2: 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 660, 692, 692, 724, 725, 726, 727, 
[DBG]  Path for agent 28 updated, resulting length: 43
[DBG]  Update the agent path 42 | Original local length: 1 | New local length: 1
[DBG]  agent 42 t=0 => decoded (sx,sy)=(2,4) => global_id=726
[DBG]  Complete path of agent 42:
[DBG]    Original: 224 256 257 289 321 353 354 355 356 357 389 390 391 423 424 425 426 427 428 429 430 431 432 464 465 466 467 468 469 501 533 565 597 596 628 660 692 724 725 726 727 759 
[DBG]    New:     224 256 257 289 321 353 354 355 356 357 389 390 391 423 424 425 426 427 428 429 430 431 432 464 465 466 467 468 469 501 533 565 597 596 628 660 692 724 725 726 727 759 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 224 256 257 289 321 353 354 355 356 357 389 390 391 423 424 425 426 427 428 429 430 431 432 464 465 466 467 468 469 501 533 565 597 596 628 660 692 724 725 
[DBG]    Local path (in submap): 726 
[DBG]    Suffix (out of submap): 727 759 
[DBG]  Original agent path length 42 je: 42
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 3: 224, 256, 257, 289, 321, 353, 354, 355, 356, 357, 389, 390, 391, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 464, 465, 466, 467, 468, 469, 501, 533, 565, 597, 596, 628, 660, 692, 724, 725, 726, 727, 759, 
[DBG]  Path for agent 42 updated, resulting length: 42
[DBG]  Update the agent path 69 | Original local length: 4 | New local length: 4
[DBG]  agent 69 t=0 => decoded (sx,sy)=(1,2) => global_id=692
[DBG]  agent 69 t=1 => decoded (sx,sy)=(2,2) => global_id=724
[DBG]  agent 69 t=2 => decoded (sx,sy)=(3,2) => global_id=756
[DBG]  agent 69 t=3 => decoded (sx,sy)=(4,2) => global_id=788
[DBG]  Complete path of agent 69:
[DBG]    Original: 4 5 37 69 70 71 72 104 105 106 138 139 140 141 173 205 237 269 301 333 365 366 398 430 431 463 464 465 466 467 468 469 501 533 565 597 629 628 660 692 724 756 788 820 
[DBG]    New:     4 5 37 69 70 71 72 104 105 106 138 139 140 141 173 205 237 269 301 333 365 366 398 430 431 463 464 465 466 467 468 469 501 533 565 597 629 628 660 692 724 756 788 820 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 4 5 37 69 70 71 72 104 105 106 138 139 140 141 173 205 237 269 301 333 365 366 398 430 431 463 464 465 466 467 468 469 501 533 565 597 629 628 660 
[DBG]    Local path (in submap): 692 724 756 788 
[DBG]    Suffix (out of submap): 820 
[DBG]  Original agent path length 69 je: 44
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 4: 4, 5, 37, 69, 70, 71, 72, 104, 105, 106, 138, 139, 140, 141, 173, 205, 237, 269, 301, 333, 365, 366, 398, 430, 431, 463, 464, 465, 466, 467, 468, 469, 501, 533, 565, 597, 629, 628, 660, 692, 724, 756, 788, 820, 
[DBG]  Path for agent 69 updated, resulting length: 44
[DBG]  Update the agent path 148 | Original local length: 1 | New local length: 1
[DBG]  agent 148 t=0 => decoded (sx,sy)=(0,2) => global_id=660
[DBG]  Complete path of agent 148:
[DBG]    Original: 776 776 776 744 744 776 776 776 808 809 810 811 812 813 781 782 750 718 686 687 719 718 718 718 718 719 720 721 689 657 658 659 659 659 659 659 659 659 659 660 
[DBG]    New:     776 776 776 744 744 776 776 776 808 809 810 811 812 813 781 782 750 718 686 687 719 718 718 718 718 719 720 721 689 657 658 659 659 659 659 659 659 659 659 660 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 776 776 776 744 744 776 776 776 808 809 810 811 812 813 781 782 750 718 686 687 719 718 718 718 718 719 720 721 689 657 658 659 659 659 659 659 659 659 659 
[DBG]    Local path (in submap): 660 
[DBG]    Suffix (out of submap): 
[DBG]  Original agent path length 148 je: 40
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 5: 776, 776, 776, 744, 744, 776, 776, 776, 808, 809, 810, 811, 812, 813, 781, 782, 750, 718, 686, 687, 719, 718, 718, 718, 718, 719, 720, 721, 689, 657, 658, 659, 659, 659, 659, 659, 659, 659, 659, 660, 
[DBG]  Path for agent 148 updated, resulting length: 40
[DBG]  Paths successfully updated.
[DBG]  (LNS.cpp) New path for agent 1: 
[DBG]  949, 949, 949, 949, 949, 948, 980, 948, 948, 948, 948, 948, 948, 948, 948, 948, 948, 948, 948, 948, 916, 884, 883, 851, 819, 819, 819, 819, 819, 820, 820, 820, 820, 819, 787, 755, 756, 756, 724, 725, 726, 727, 728, 
[DBG]  (LNS.cpp) New path for agent 26: 
[DBG]  13, 14, 15, 16, 48, 49, 50, 82, 83, 115, 116, 148, 149, 181, 213, 214, 215, 247, 279, 311, 343, 375, 407, 439, 438, 470, 469, 501, 533, 565, 597, 596, 628, 660, 692, 724, 725, 757, 756, 755, 
[DBG]  (LNS.cpp) New path for agent 28: 
[DBG]  661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 660, 692, 692, 724, 725, 726, 727, 
[DBG]  (LNS.cpp) New path for agent 42: 
[DBG]  224, 256, 257, 289, 321, 353, 354, 355, 356, 357, 389, 390, 391, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 464, 465, 466, 467, 468, 469, 501, 533, 565, 597, 596, 628, 660, 692, 724, 725, 726, 727, 759, 
[DBG]  (LNS.cpp) New path for agent 69: 
[DBG]  4, 5, 37, 69, 70, 71, 72, 104, 105, 106, 138, 139, 140, 141, 173, 205, 237, 269, 301, 333, 365, 366, 398, 430, 431, 463, 464, 465, 466, 467, 468, 469, 501, 533, 565, 597, 629, 628, 660, 692, 724, 756, 788, 820, 
[DBG]  (LNS.cpp) New path for agent 148: 
[DBG]  776, 776, 776, 744, 744, 776, 776, 776, 808, 809, 810, 811, 812, 813, 781, 782, 750, 718, 686, 687, 719, 718, 718, 718, 718, 719, 720, 721, 689, 657, 658, 659, 659, 659, 659, 659, 659, 659, 659, 660, 
[DBG]  Delta value: 0
[DBG]  Rewarding metric index = 0
[DBG]  component_weights = {0.998851, 0.000536638, 0.000310685, 0.000301668}
[DBG]  opSuccess value: 1
[STAT] neighbor.sum_of_costs before recomputation: 246
[STAT] neighbor.old_sum_of_costs before recomputation: 246
[STAT] sum_of_costs before recomputation: 4384
[DBG]  Validate solution immediately after SAT success.
[DBG]  No problems after SAT replan.
[DBG]  Recomputing sum_of_cost by dividing neighbor.sum_of_costs and neighbor.old_sum_of_costs
[STAT] sum_of_costs after recomputation: 4384
[STAT] Iteration 89
[DBG]  Using SAT operator (destroy+repair SAT).
[DBG]  ====================
[DBG]  SAT destroy operator called.
[DBG]  SAT heuristic: 2
[DBG]  key_agent_id: 28
[DBG]  key_agent_id global path length: 43
[DBG]  Submap content (global positions):
[DBG]  595 596 597 598 599 
[DBG]  627 628 629 630 631 
[DBG]  659 660 661 662 663 
[DBG]  691 692 693 694 695 
[DBG]  723 724 725 726 727 
[DBG]  Map content with agents and obstacles:
[DBG]  X . . X . 
[DBG]  . A . X . 
[DBG]  . . A X X 
[DBG]  . . X X X 
[DBG]  X . . . A 
[DBG]  content of the map structure that we pass to the SAT solver:
[DBG]  -1  1  1  -1  1  
[DBG]  1  1  1  -1  1  
[DBG]  1  1  1  -1  -1  
[DBG]  1  1  -1  -1  -1  
[DBG]  -1  1  1  1  1  
[DBG]  Identifying agents in a submap for rescheduling (when key_agent is there at the time 7):
[DBG]  Agent 28 found intervals in the sub-map:
[DBG]   [0..42]
[DBG]  Agent 28 (interval in submap: [0..42]) contains time 7, added to replan.
[DBG]  Agent 46 found intervals in the sub-map:
[DBG]   [4..7]
[DBG]  Agent 46 (interval in submap: [4..7]) contains time 7, added to replan.
[DBG]  Agent 63 found intervals in the sub-map:
[DBG]  
[DBG]  Agent 63 is not in sub-map at time 7 (intervals: 
[DBG]  )
[DBG]  Agent 89 found intervals in the sub-map:
[DBG]   [5..10]
[DBG]  Agent 89 (interval in submap: [5..10]) contains time 7, added to replan.
[DBG]  Agent 113 found intervals in the sub-map:
[DBG]  
[DBG]  Agent 113 is not in sub-map at time 7 (intervals: 
[DBG]  )
[DBG]  Agent 28 | Start (global): 661 -> (local): (2, 2) at time 7 | Goal (global): 727 -> (local): (4, 4) at time 42
[DBG]  Agent 46 | Start (global): 727 -> (local): (4, 4) at time 7 | Goal (global): 727 -> (local): (4, 4) at time 7
[DBG]  Agent 89 | Start (global): 628 -> (local): (1, 1) at time 7 | Goal (global): 724 -> (local): (4, 1) at time 10
[DBG]  [REPAIR] SAT destroy operator called.
[DBG]  [REPAIR] SAT operator â€“ launching subproblem FOR OPTIMIZATION.
[DBG]  Creating local paths (sx, sy) in the submap for T_sync = 7
[DBG]    Agent 28 (global paths from T=7 to 42) has local path: (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,1) (3,1) (3,1) (4,1) (4,2) (4,3) (4,4) 
[DBG]    Agent 46 (global paths from T=7 to 7) has local path: (4,4) 
[DBG]    Agent 89 (global paths from T=7 to 10) has local path: (1,1) (2,1) (3,1) (4,1) 
[DBG]  Checking input data for SAT solver:
[DBG]    - Number of agents to replan: 3
[DBG]  Agent 28 has the original local path length: 36 => Start (2,2), Goal (4,4)
[DBG]  Agent 46 has the original local path length: 1 => Start (4,4), Goal (4,4)
[DBG]  Agent 89 has the original local path length: 4 => Start (1,1), Goal (4,1)
[DBG]  Start position: (2, 2), (4, 4), (1, 1), 
[DBG]  Goal position: (4, 4), (4, 4), (4, 1), 
[DBG]  SAT instance and solver created.
Currently solving
Instance name: scen
Map name: map
Encoding used: disappear_at_goal
SAT solver used: Kissat
Optimizing function: sum of costs
Number of agents: 3
Mks LB: 7
SoC LB: 12
Delta: 0
Remaining time: 300000 [ms]

[STAT] Solver returned: -1
[DBG]  SAT solver failed.
[STAT] SAT solver failed to find a valid solution.
[DBG]  ====================
[DBG]  SAT destroy operator called.
[DBG]  SAT heuristic: 2
[DBG]  key_agent_id: 28
[DBG]  key_agent_id global path length: 43
[DBG]  Submap content (global positions):
[DBG]  595 596 597 598 599 
[DBG]  627 628 629 630 631 
[DBG]  659 660 661 662 663 
[DBG]  691 692 693 694 695 
[DBG]  723 724 725 726 727 
[DBG]  Map content with agents and obstacles:
[DBG]  X . . X . 
[DBG]  . . . X . 
[DBG]  . . A X X 
[DBG]  . . X X X 
[DBG]  X A . . . 
[DBG]  content of the map structure that we pass to the SAT solver:
[DBG]  -1  1  1  -1  1  
[DBG]  1  1  1  -1  1  
[DBG]  1  1  1  -1  -1  
[DBG]  1  1  -1  -1  -1  
[DBG]  -1  1  1  1  1  
[DBG]  Identifying agents in a submap for rescheduling (when key_agent is there at the time 3):
[DBG]  Agent 7 found intervals in the sub-map:
[DBG]  
[DBG]  Agent 7 is not in sub-map at time 3 (intervals: 
[DBG]  )
[DBG]  Agent 28 found intervals in the sub-map:
[DBG]   [0..42]
[DBG]  Agent 28 (interval in submap: [0..42]) contains time 3, added to replan.
[DBG]  Agent 108 found intervals in the sub-map:
[DBG]   [0..4]
[DBG]  Agent 108 (interval in submap: [0..4]) contains time 3, added to replan.
[DBG]  Agent 28 | Start (global): 661 -> (local): (2, 2) at time 3 | Goal (global): 727 -> (local): (4, 4) at time 42
[DBG]  Agent 108 | Start (global): 724 -> (local): (4, 1) at time 3 | Goal (global): 725 -> (local): (4, 2) at time 4
[DBG]  [REPAIR] SAT destroy operator called.
[DBG]  [REPAIR] SAT operator â€“ launching subproblem FOR OPTIMIZATION.
[DBG]  Creating local paths (sx, sy) in the submap for T_sync = 3
[DBG]    Agent 28 (global paths from T=3 to 42) has local path: (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,1) (3,1) (3,1) (4,1) (4,2) (4,3) (4,4) 
[DBG]    Agent 108 (global paths from T=3 to 4) has local path: (4,1) (4,2) 
[DBG]  Checking input data for SAT solver:
[DBG]    - Number of agents to replan: 2
[DBG]  Agent 28 has the original local path length: 40 => Start (2,2), Goal (4,4)
[DBG]  Agent 108 has the original local path length: 2 => Start (4,1), Goal (4,2)
[DBG]  Start position: (2, 2), (4, 1), 
[DBG]  Goal position: (4, 4), (4, 2), 
[DBG]  SAT instance and solver created.
Currently solving
Instance name: scen
Map name: map
Encoding used: disappear_at_goal
SAT solver used: Kissat
Optimizing function: sum of costs
Number of agents: 2
Mks LB: 7
SoC LB: 9
Delta: 0
Remaining time: 300000 [ms]

Found plan [agents = 2] [timesteps = 7]
Agent #0 : 9 8 11 12 13 14 15 
Agent #1 : 12 13 0 0 0 0 0 

[STAT] Solver returned: 0
[DBG]  Agent (index) 28 | New local path (submap idx):
[DBG]  9 8 11 12 13 14 15 
[DBG]  Agent (index) 108 | New local path (submap idx):
[DBG]  12 13 
[DBG]  Update the agent path 28 | Original local length: 40 | New local length: 7
[DBG]  agent 28 t=0 => decoded (sx,sy)=(2,2) => global_id=661
[DBG]  agent 28 t=1 => decoded (sx,sy)=(2,1) => global_id=660
[DBG]  agent 28 t=2 => decoded (sx,sy)=(3,1) => global_id=692
[DBG]  agent 28 t=3 => decoded (sx,sy)=(4,1) => global_id=724
[DBG]  agent 28 t=4 => decoded (sx,sy)=(4,2) => global_id=725
[DBG]  agent 28 t=5 => decoded (sx,sy)=(4,3) => global_id=726
[DBG]  agent 28 t=6 => decoded (sx,sy)=(4,4) => global_id=727
[DBG]  Complete path of agent 28:
[DBG]    Original: 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 660 692 692 724 725 726 727 
[DBG]    New:     661 661 661 661 660 692 724 725 726 727 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 661 661 661 
[DBG]    Local path (in submap): 661 660 692 724 725 726 727 
[DBG]    Suffix (out of submap): 
[DBG]  Original agent path length 28 je: 43
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 0: 661, 661, 661, 661, 660, 692, 724, 725, 726, 727, 
[DBG]  Path for agent 28 updated, resulting length: 10
[DBG]  Update the agent path 108 | Original local length: 2 | New local length: 2
[DBG]  agent 108 t=0 => decoded (sx,sy)=(4,1) => global_id=724
[DBG]  agent 108 t=1 => decoded (sx,sy)=(4,2) => global_id=725
[DBG]  Complete path of agent 108:
[DBG]    Original: 628 660 692 724 725 757 756 788 820 821 822 854 855 856 888 889 890 891 892 924 956 957 989 1021 
[DBG]    New:     628 660 692 724 725 757 756 788 820 821 822 854 855 856 888 889 890 891 892 924 956 957 989 1021 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 628 660 692 
[DBG]    Local path (in submap): 724 725 
[DBG]    Suffix (out of submap): 757 756 788 820 821 822 854 855 856 888 889 890 891 892 924 956 957 989 1021 
[DBG]  Original agent path length 108 je: 24
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 1: 628, 660, 692, 724, 725, 757, 756, 788, 820, 821, 822, 854, 855, 856, 888, 889, 890, 891, 892, 924, 956, 957, 989, 1021, 
[DBG]  Path for agent 108 updated, resulting length: 24
[DBG]  Paths successfully updated.
[DBG]  (LNS.cpp) New path for agent 28: 
[DBG]  661, 661, 661, 661, 660, 692, 724, 725, 726, 727, 
[DBG]  (LNS.cpp) New path for agent 108: 
[DBG]  628, 660, 692, 724, 725, 757, 756, 788, 820, 821, 822, 854, 855, 856, 888, 889, 890, 891, 892, 924, 956, 957, 989, 1021, 
[DBG]  Delta value: 0.507692
[DBG]  Rewarding metric index = 0
[DBG]  component_weights = {0.999276, 0.00033828, 0.000195846, 0.000190162}
[DBG]  opSuccess value: 1
[STAT] neighbor.sum_of_costs before recomputation: 32
[STAT] neighbor.old_sum_of_costs before recomputation: 65
[STAT] sum_of_costs before recomputation: 4384
[DBG]  Validate solution immediately after SAT success.
[WARNING] Problem after SAT: Target conflict: agent 1 (len 42) traverses target of agent 28 (len 9) at location 727 at timestep 41
[DBG]  [DEBUG] Attempting immediate repair via init_lns because problem occurred after SAT (should be applied only for conflicts...).
[DBG]  [DEBUG] Passing 150 agents to init_lns (skip=true).
[DBG]  [DEBUG] path_table contents for selected agents (neighbor.agents):
[DBG]    Agent 28 => controlling path length=10
[DBG]    Agent 108 => controlling path length=24
[DBG]  hodnota skip_initial_solution=1
[DBG]  We skip initialSolution => call buildCollisionData()
[DBG]  buildCollisionData() called â€“ skip_initial_solution case.
[DBG]  Agents.size()=150, collision_graph.size()=150
[DBG]  agent 1 => updateCollidingPairs => foundCollision
[DBG]  agent 28 => updateCollidingPairs => foundCollision
[DBG]  agent 42 => updateCollidingPairs => foundCollision
[DBG]  agent 111 => updateCollidingPairs => foundCollision
[DBG]  Conflicting agent pairs:
[DBG]  agent 1 is in conflict with agent 28
[DBG]  agent 28 is in conflict with agent 42
[DBG]  agent 28 is in conflict with agent 111
[DBG]  buildCollisionData() => sum_of_costs=4351, num_of_colliding_pairs=3
[DBG]  buildCollisionData done => sum_of_costs=4351, num_of_colliding_pairs=3
[DBG]  sum_of_cost hodnota: 4351
[DBG]  After skip/init build => iteration_stats.back(): sum_of_costs=4351, collisions=3
[DEBUG] Using default neighbor generation strategy for conflicts: 1
[DEBUG] Using default neighbor generation strategy for conflicts: 1
[DEBUG] Using default neighbor generation strategy for conflicts: 2
[DEBUG] Using default neighbor generation strategy for conflicts: 2
[DEBUG] Using default neighbor generation strategy for conflicts: 1
	InitLNS(PP): runtime = 0.00851375, iterations = 6, colliding pairs = 0, initial colliding pairs = 3, solution cost = 4397, initial solution cost = 4351, failed iterations = 0
[DBG]  [DEBUG] init_lns->sum_of_costs after init_lns->run: 4397
[DBG]  [DEBUG] sum_of_costs after assignment from init_lns->run: 4397
[DBG]  Recomputing sum_of_cost by dividing neighbor.sum_of_costs and neighbor.old_sum_of_costs
[STAT] sum_of_costs after recomputation: 4397
[STAT] Iteration 90
[DBG]  Using SAT operator (destroy+repair SAT).
[DBG]  ====================
[DBG]  SAT destroy operator called.
[DBG]  SAT heuristic: 2
[DBG]  key_agent_id: 28
[DBG]  key_agent_id global path length: 42
[DBG]  Submap content (global positions):
[DBG]  595 596 597 598 599 
[DBG]  627 628 629 630 631 
[DBG]  659 660 661 662 663 
[DBG]  691 692 693 694 695 
[DBG]  723 724 725 726 727 
[DBG]  Map content with agents and obstacles:
[DBG]  X A . X A 
[DBG]  . . . X . 
[DBG]  A A A X X 
[DBG]  . . X X X 
[DBG]  X . . . . 
[DBG]  content of the map structure that we pass to the SAT solver:
[DBG]  -1  1  1  -1  1  
[DBG]  1  1  1  -1  1  
[DBG]  1  1  1  -1  -1  
[DBG]  1  1  -1  -1  -1  
[DBG]  -1  1  1  1  1  
[DBG]  Identifying agents in a submap for rescheduling (when key_agent is there at the time 33):
[DBG]  Agent 26 found intervals in the sub-map:
[DBG]   [30..36]
[DBG]  Agent 26 (interval in submap: [30..36]) contains time 33, added to replan.
[DBG]  Agent 28 found intervals in the sub-map:
[DBG]   [0..41]
[DBG]  Agent 28 (interval in submap: [0..41]) contains time 33, added to replan.
[DBG]  Agent 42 found intervals in the sub-map:
[DBG]   [32..40]
[DBG]  Agent 42 (interval in submap: [32..40]) contains time 33, added to replan.
[DBG]  Agent 45 found intervals in the sub-map:
[DBG]   [19..26]
[DBG]  Agent 45 is not in sub-map at time 33 (intervals: 
[DBG]  [19..26] )
[DBG]  Agent 53 found intervals in the sub-map:
[DBG]   [31..36]
[DBG]  Agent 53 (interval in submap: [31..36]) contains time 33, added to replan.
[DBG]  Agent 148 found intervals in the sub-map:
[DBG]   [31..39]
[DBG]  Agent 148 (interval in submap: [31..39]) contains time 33, added to replan.
[DBG]  Agent 26 | Start (global): 660 -> (local): (2, 1) at time 33 | Goal (global): 725 -> (local): (4, 2) at time 36
[DBG]  Agent 28 | Start (global): 661 -> (local): (2, 2) at time 33 | Goal (global): 727 -> (local): (4, 4) at time 41
[DBG]  Agent 42 | Start (global): 596 -> (local): (0, 1) at time 33 | Goal (global): 727 -> (local): (4, 4) at time 40
[DBG]  Agent 53 | Start (global): 599 -> (local): (0, 4) at time 33 | Goal (global): 599 -> (local): (0, 4) at time 36
[DBG]  Agent 148 | Start (global): 659 -> (local): (2, 0) at time 33 | Goal (global): 660 -> (local): (2, 1) at time 39
[DBG]  [REPAIR] SAT destroy operator called.
[DBG]  [REPAIR] SAT operator â€“ launching subproblem FOR OPTIMIZATION.
[DBG]  Creating local paths (sx, sy) in the submap for T_sync = 33
[DBG]    Agent 26 (global paths from T=33 to 36) has local path: (2,1) (3,1) (4,1) (4,2) 
[DBG]    Agent 28 (global paths from T=33 to 41) has local path: (2,2) (2,2) (2,2) (2,1) (3,1) (4,1) (4,2) (4,3) (4,4) 
[DBG]    Agent 42 (global paths from T=33 to 40) has local path: (0,1) (1,1) (2,1) (3,1) (4,1) (4,2) (4,3) (4,4) 
[DBG]    Agent 53 (global paths from T=33 to 36) has local path: (0,4) (0,4) (0,4) (0,4) 
[DBG]    Agent 148 (global paths from T=33 to 39) has local path: (2,0) (2,0) (2,0) (2,0) (2,0) (2,0) (2,1) 
[DBG]  Checking input data for SAT solver:
[DBG]    - Number of agents to replan: 5
[DBG]  Agent 26 has the original local path length: 4 => Start (2,1), Goal (4,2)
[DBG]  Agent 28 has the original local path length: 9 => Start (2,2), Goal (4,4)
[DBG]  Agent 42 has the original local path length: 8 => Start (0,1), Goal (4,4)
[DBG]  Agent 53 has the original local path length: 4 => Start (0,4), Goal (0,4)
[DBG]  Agent 148 has the original local path length: 7 => Start (2,0), Goal (2,1)
[DBG]  Start position: (2, 1), (2, 2), (0, 1), (0, 4), (2, 0), 
[DBG]  Goal position: (4, 2), (4, 4), (4, 4), (0, 4), (2, 1), 
[DBG]  SAT instance and solver created.
Currently solving
Instance name: scen
Map name: map
Encoding used: disappear_at_goal
SAT solver used: Kissat
Optimizing function: sum of costs
Number of agents: 5
Mks LB: 8
SoC LB: 22
Delta: 0
Remaining time: 300000 [ms]

[STAT] Solver returned: -1
[DBG]  SAT solver failed.
[STAT] SAT solver failed to find a valid solution.
[DBG]  ====================
[DBG]  SAT destroy operator called.
[DBG]  SAT heuristic: 2
[DBG]  key_agent_id: 28
[DBG]  key_agent_id global path length: 42
[DBG]  Submap content (global positions):
[DBG]  595 596 597 598 599 
[DBG]  627 628 629 630 631 
[DBG]  659 660 661 662 663 
[DBG]  691 692 693 694 695 
[DBG]  723 724 725 726 727 
[DBG]  Map content with agents and obstacles:
[DBG]  X . . X . 
[DBG]  . . . X . 
[DBG]  . . A X X 
[DBG]  . . X X X 
[DBG]  X A . . . 
[DBG]  content of the map structure that we pass to the SAT solver:
[DBG]  -1  1  1  -1  1  
[DBG]  1  1  1  -1  1  
[DBG]  1  1  1  -1  -1  
[DBG]  1  1  -1  -1  -1  
[DBG]  -1  1  1  1  1  
[DBG]  Identifying agents in a submap for rescheduling (when key_agent is there at the time 13):
[DBG]  Agent 10 found intervals in the sub-map:
[DBG]  
[DBG]  Agent 10 is not in sub-map at time 13 (intervals: 
[DBG]  )
[DBG]  Agent 28 found intervals in the sub-map:
[DBG]   [0..41]
[DBG]  Agent 28 (interval in submap: [0..41]) contains time 13, added to replan.
[DBG]  Agent 74 found intervals in the sub-map:
[DBG]  
[DBG]  Agent 74 is not in sub-map at time 13 (intervals: 
[DBG]  )
[DBG]  Agent 86 found intervals in the sub-map:
[DBG]  
[DBG]  Agent 86 is not in sub-map at time 13 (intervals: 
[DBG]  )
[DBG]  Agent 109 found intervals in the sub-map:
[DBG]  
[DBG]  Agent 109 is not in sub-map at time 13 (intervals: 
[DBG]  )
[DBG]  Agent 131 found intervals in the sub-map:
[DBG]   [8..13]
[DBG]  Agent 131 (interval in submap: [8..13]) contains time 13, added to replan.
[DBG]  Agent 135 found intervals in the sub-map:
[DBG]  
[DBG]  Agent 135 is not in sub-map at time 13 (intervals: 
[DBG]  )
[DBG]  Agent 28 | Start (global): 661 -> (local): (2, 2) at time 13 | Goal (global): 727 -> (local): (4, 4) at time 41
[DBG]  Agent 131 | Start (global): 724 -> (local): (4, 1) at time 13 | Goal (global): 724 -> (local): (4, 1) at time 13
[DBG]  [REPAIR] SAT destroy operator called.
[DBG]  [REPAIR] SAT operator â€“ launching subproblem FOR OPTIMIZATION.
[DBG]  Creating local paths (sx, sy) in the submap for T_sync = 13
[DBG]    Agent 28 (global paths from T=13 to 41) has local path: (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,1) (3,1) (4,1) (4,2) (4,3) (4,4) 
[DBG]    Agent 131 (global paths from T=13 to 13) has local path: (4,1) 
[DBG]  Checking input data for SAT solver:
[DBG]    - Number of agents to replan: 2
[DBG]  Agent 28 has the original local path length: 29 => Start (2,2), Goal (4,4)
[DBG]  Agent 131 has the original local path length: 1 => Start (4,1), Goal (4,1)
[DBG]  Start position: (2, 2), (4, 1), 
[DBG]  Goal position: (4, 4), (4, 1), 
[DBG]  SAT instance and solver created.
Currently solving
Instance name: scen
Map name: map
Encoding used: disappear_at_goal
SAT solver used: Kissat
Optimizing function: sum of costs
Number of agents: 2
Mks LB: 7
SoC LB: 8
Delta: 0
Remaining time: 300000 [ms]

Found plan [agents = 2] [timesteps = 7]
Agent #0 : 9 8 11 12 13 14 15 
Agent #1 : 12 0 0 0 0 0 0 

[STAT] Solver returned: 0
[DBG]  Agent (index) 28 | New local path (submap idx):
[DBG]  9 8 11 12 13 14 15 
[DBG]  Agent (index) 131 | New local path (submap idx):
[DBG]  12 
[DBG]  Update the agent path 28 | Original local length: 29 | New local length: 7
[DBG]  agent 28 t=0 => decoded (sx,sy)=(2,2) => global_id=661
[DBG]  agent 28 t=1 => decoded (sx,sy)=(2,1) => global_id=660
[DBG]  agent 28 t=2 => decoded (sx,sy)=(3,1) => global_id=692
[DBG]  agent 28 t=3 => decoded (sx,sy)=(4,1) => global_id=724
[DBG]  agent 28 t=4 => decoded (sx,sy)=(4,2) => global_id=725
[DBG]  agent 28 t=5 => decoded (sx,sy)=(4,3) => global_id=726
[DBG]  agent 28 t=6 => decoded (sx,sy)=(4,4) => global_id=727
[DBG]  Complete path of agent 28:
[DBG]    Original: 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 660 692 724 725 726 727 
[DBG]    New:     661 661 661 661 661 661 661 661 661 661 661 661 661 661 660 692 724 725 726 727 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 661 661 661 661 661 661 661 661 661 661 661 661 661 
[DBG]    Local path (in submap): 661 660 692 724 725 726 727 
[DBG]    Suffix (out of submap): 
[DBG]  Original agent path length 28 je: 42
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 0: 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 660, 692, 724, 725, 726, 727, 
[DBG]  Path for agent 28 updated, resulting length: 20
[DBG]  Update the agent path 131 | Original local length: 1 | New local length: 1
[DBG]  agent 131 t=0 => decoded (sx,sy)=(4,1) => global_id=724
[DBG]  Complete path of agent 131:
[DBG]    Original: 341 373 405 437 469 501 533 565 597 596 628 660 692 724 756 788 820 819 851 850 849 848 847 846 878 877 876 875 843 811 779 778 777 745 713 712 
[DBG]    New:     341 373 405 437 469 501 533 565 597 596 628 660 692 724 756 788 820 819 851 850 849 848 847 846 878 877 876 875 843 811 779 778 777 745 713 712 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 341 373 405 437 469 501 533 565 597 596 628 660 692 
[DBG]    Local path (in submap): 724 
[DBG]    Suffix (out of submap): 756 788 820 819 851 850 849 848 847 846 878 877 876 875 843 811 779 778 777 745 713 712 
[DBG]  Original agent path length 131 je: 36
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 1: 341, 373, 405, 437, 469, 501, 533, 565, 597, 596, 628, 660, 692, 724, 756, 788, 820, 819, 851, 850, 849, 848, 847, 846, 878, 877, 876, 875, 843, 811, 779, 778, 777, 745, 713, 712, 
[DBG]  Path for agent 131 updated, resulting length: 36
[DBG]  Paths successfully updated.
[DBG]  (LNS.cpp) New path for agent 28: 
[DBG]  661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 660, 692, 724, 725, 726, 727, 
[DBG]  (LNS.cpp) New path for agent 131: 
[DBG]  341, 373, 405, 437, 469, 501, 533, 565, 597, 596, 628, 660, 692, 724, 756, 788, 820, 819, 851, 850, 849, 848, 847, 846, 878, 877, 876, 875, 843, 811, 779, 778, 777, 745, 713, 712, 
[DBG]  Delta value: 0.289474
[DBG]  Rewarding metric index = 0
[DBG]  component_weights = {0.999466, 0.00024927, 0.000144314, 0.000140126}
[DBG]  opSuccess value: 1
[STAT] neighbor.sum_of_costs before recomputation: 54
[STAT] neighbor.old_sum_of_costs before recomputation: 76
[STAT] sum_of_costs before recomputation: 4397
[DBG]  Validate solution immediately after SAT success.
[WARNING] Problem after SAT: Target conflict: agent 42 (len 41) traverses target of agent 28 (len 19) at location 727 at timestep 40
[DBG]  [DEBUG] Attempting immediate repair via init_lns because problem occurred after SAT (should be applied only for conflicts...).
[DBG]  [DEBUG] Passing 150 agents to init_lns (skip=true).
[DBG]  [DEBUG] path_table contents for selected agents (neighbor.agents):
[DBG]    Agent 28 => controlling path length=20
[DBG]    Agent 131 => controlling path length=36
[DBG]  hodnota skip_initial_solution=1
[DBG]  We skip initialSolution => call buildCollisionData()
[DBG]  buildCollisionData() called â€“ skip_initial_solution case.
[DBG]  Agents.size()=150, collision_graph.size()=150
[DBG]  agent 28 => updateCollidingPairs => foundCollision
[DBG]  agent 42 => updateCollidingPairs => foundCollision
[DBG]  agent 100 => updateCollidingPairs => foundCollision
[DBG]  Conflicting agent pairs:
[DBG]  agent 28 is in conflict with agent 42
[DBG]  agent 28 is in conflict with agent 100
[DBG]  buildCollisionData() => sum_of_costs=4375, num_of_colliding_pairs=2
[DBG]  buildCollisionData done => sum_of_costs=4375, num_of_colliding_pairs=2
[DBG]  sum_of_cost hodnota: 4375
[DBG]  After skip/init build => iteration_stats.back(): sum_of_costs=4375, collisions=2
[DEBUG] Using default neighbor generation strategy for conflicts: 1
[DEBUG] Using default neighbor generation strategy for conflicts: 2
[DEBUG] Using default neighbor generation strategy for conflicts: 1
[DEBUG] Using default neighbor generation strategy for conflicts: 1
[DEBUG] Using default neighbor generation strategy for conflicts: 1
[DEBUG] Using default neighbor generation strategy for conflicts: 0
	InitLNS(PP): runtime = 0.0125023, iterations = 7, colliding pairs = 0, initial colliding pairs = 2, solution cost = 4380, initial solution cost = 4375, failed iterations = 0
[DBG]  [DEBUG] init_lns->sum_of_costs after init_lns->run: 4380
[DBG]  [DEBUG] sum_of_costs after assignment from init_lns->run: 4380
[DBG]  Recomputing sum_of_cost by dividing neighbor.sum_of_costs and neighbor.old_sum_of_costs
[STAT] sum_of_costs after recomputation: 4380
[STAT] Iteration 91
[DBG]  Using SAT operator (destroy+repair SAT).
[DBG]  ====================
[DBG]  SAT destroy operator called.
[DBG]  SAT heuristic: 2
[DBG]  key_agent_id: 28
[DBG]  key_agent_id global path length: 40
[DBG]  Submap content (global positions):
[DBG]  595 596 597 598 599 
[DBG]  627 628 629 630 631 
[DBG]  659 660 661 662 663 
[DBG]  691 692 693 694 695 
[DBG]  723 724 725 726 727 
[DBG]  Map content with agents and obstacles:
[DBG]  X . . X . 
[DBG]  . . . X . 
[DBG]  A A A X X 
[DBG]  . A X X X 
[DBG]  X A . . . 
[DBG]  content of the map structure that we pass to the SAT solver:
[DBG]  -1  1  1  -1  1  
[DBG]  1  1  1  -1  1  
[DBG]  1  1  1  -1  -1  
[DBG]  1  1  -1  -1  -1  
[DBG]  -1  1  1  1  1  
[DBG]  Identifying agents in a submap for rescheduling (when key_agent is there at the time 28):
[DBG]  Agent 3 found intervals in the sub-map:
[DBG]   [25..30]
[DBG]  Agent 3 (interval in submap: [25..30]) contains time 28, added to replan.
[DBG]  Agent 26 found intervals in the sub-map:
[DBG]   [30..38]
[DBG]  Agent 26 is not in sub-map at time 28 (intervals: 
[DBG]  [30..38] )
[DBG]  Agent 28 found intervals in the sub-map:
[DBG]   [0..39]
[DBG]  Agent 28 (interval in submap: [0..39]) contains time 28, added to replan.
[DBG]  Agent 44 found intervals in the sub-map:
[DBG]   [24..29]
[DBG]  Agent 44 (interval in submap: [24..29]) contains time 28, added to replan.
[DBG]  Agent 45 found intervals in the sub-map:
[DBG]   [19..26]
[DBG]  Agent 45 is not in sub-map at time 28 (intervals: 
[DBG]  [19..26] )
[DBG]  Agent 61 found intervals in the sub-map:
[DBG]  
[DBG]  Agent 61 is not in sub-map at time 28 (intervals: 
[DBG]  )
[DBG]  Agent 100 found intervals in the sub-map:
[DBG]   [23..28]
[DBG]  Agent 100 (interval in submap: [23..28]) contains time 28, added to replan.
[DBG]  Agent 111 found intervals in the sub-map:
[DBG]  
[DBG]  Agent 111 is not in sub-map at time 28 (intervals: 
[DBG]  )
[DBG]  Agent 148 found intervals in the sub-map:
[DBG]   [27..39]
[DBG]  Agent 148 (interval in submap: [27..39]) contains time 28, added to replan.
[DBG]  Agent 3 | Start (global): 660 -> (local): (2, 1) at time 28 | Goal (global): 724 -> (local): (4, 1) at time 30
[DBG]  Agent 28 | Start (global): 661 -> (local): (2, 2) at time 28 | Goal (global): 727 -> (local): (4, 4) at time 39
[DBG]  Agent 44 | Start (global): 692 -> (local): (3, 1) at time 28 | Goal (global): 724 -> (local): (4, 1) at time 29
[DBG]  Agent 100 | Start (global): 724 -> (local): (4, 1) at time 28 | Goal (global): 724 -> (local): (4, 1) at time 28
[DBG]  Agent 148 | Start (global): 659 -> (local): (2, 0) at time 28 | Goal (global): 660 -> (local): (2, 1) at time 39
[DBG]  [REPAIR] SAT destroy operator called.
[DBG]  [REPAIR] SAT operator â€“ launching subproblem FOR OPTIMIZATION.
[DBG]  Creating local paths (sx, sy) in the submap for T_sync = 28
[DBG]    Agent 3 (global paths from T=28 to 30) has local path: (2,1) (3,1) (4,1) 
[DBG]    Agent 28 (global paths from T=28 to 39) has local path: (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,1) (3,1) (4,1) (4,2) (4,3) (4,4) 
[DBG]    Agent 44 (global paths from T=28 to 29) has local path: (3,1) (4,1) 
[DBG]    Agent 100 (global paths from T=28 to 28) has local path: (4,1) 
[DBG]    Agent 148 (global paths from T=28 to 39) has local path: (2,0) (2,1) (1,1) (1,1) (1,1) (1,1) (1,1) (2,1) (2,2) (2,2) (2,2) (2,1) 
[DBG]  Checking input data for SAT solver:
[DBG]    - Number of agents to replan: 5
[DBG]  Agent 3 has the original local path length: 3 => Start (2,1), Goal (4,1)
[DBG]  Agent 28 has the original local path length: 12 => Start (2,2), Goal (4,4)
[DBG]  Agent 44 has the original local path length: 2 => Start (3,1), Goal (4,1)
[DBG]  Agent 100 has the original local path length: 1 => Start (4,1), Goal (4,1)
[DBG]  Agent 148 has the original local path length: 12 => Start (2,0), Goal (2,1)
[DBG]  Start position: (2, 1), (2, 2), (3, 1), (4, 1), (2, 0), 
[DBG]  Goal position: (4, 1), (4, 4), (4, 1), (4, 1), (2, 1), 
[DBG]  SAT instance and solver created.
Currently solving
Instance name: scen
Map name: map
Encoding used: disappear_at_goal
SAT solver used: Kissat
Optimizing function: sum of costs
Number of agents: 5
Mks LB: 7
SoC LB: 15
Delta: 0
Remaining time: 300000 [ms]

[STAT] Solver returned: -1
[DBG]  SAT solver failed.
[STAT] SAT solver failed to find a valid solution.
[DBG]  ====================
[DBG]  SAT destroy operator called.
[DBG]  SAT heuristic: 2
[DBG]  key_agent_id: 28
[DBG]  key_agent_id global path length: 40
[DBG]  Submap content (global positions):
[DBG]  595 596 597 598 599 
[DBG]  627 628 629 630 631 
[DBG]  659 660 661 662 663 
[DBG]  691 692 693 694 695 
[DBG]  723 724 725 726 727 
[DBG]  Map content with agents and obstacles:
[DBG]  X A A X . 
[DBG]  . A . X . 
[DBG]  . . A X X 
[DBG]  . A X X X 
[DBG]  X A A . . 
[DBG]  content of the map structure that we pass to the SAT solver:
[DBG]  -1  1  1  -1  1  
[DBG]  1  1  1  -1  1  
[DBG]  1  1  1  -1  -1  
[DBG]  1  1  -1  -1  -1  
[DBG]  -1  1  1  1  1  
[DBG]  Identifying agents in a submap for rescheduling (when key_agent is there at the time 25):
[DBG]  Agent 3 found intervals in the sub-map:
[DBG]   [25..30]
[DBG]  Agent 3 (interval in submap: [25..30]) contains time 25, added to replan.
[DBG]  Agent 28 found intervals in the sub-map:
[DBG]   [0..39]
[DBG]  Agent 28 (interval in submap: [0..39]) contains time 25, added to replan.
[DBG]  Agent 44 found intervals in the sub-map:
[DBG]   [24..29]
[DBG]  Agent 44 (interval in submap: [24..29]) contains time 25, added to replan.
[DBG]  Agent 45 found intervals in the sub-map:
[DBG]   [19..26]
[DBG]  Agent 45 (interval in submap: [19..26]) contains time 25, added to replan.
[DBG]  Agent 57 found intervals in the sub-map:
[DBG]   [21..27]
[DBG]  Agent 57 (interval in submap: [21..27]) contains time 25, added to replan.
[DBG]  Agent 71 found intervals in the sub-map:
[DBG]   [22..25]
[DBG]  Agent 71 (interval in submap: [22..25]) contains time 25, added to replan.
[DBG]  Agent 100 found intervals in the sub-map:
[DBG]   [23..28]
[DBG]  Agent 100 (interval in submap: [23..28]) contains time 25, added to replan.
[DBG]  Agent 144 found intervals in the sub-map:
[DBG]   [23..23]
[DBG]  Agent 144 is not in sub-map at time 25 (intervals: 
[DBG]  [23..23] )
[DBG]  Agent 148 found intervals in the sub-map:
[DBG]   [27..39]
[DBG]  Agent 148 is not in sub-map at time 25 (intervals: 
[DBG]  [27..39] )
[DBG]  Agent 3 | Start (global): 597 -> (local): (0, 2) at time 25 | Goal (global): 724 -> (local): (4, 1) at time 30
[DBG]  Agent 28 | Start (global): 661 -> (local): (2, 2) at time 25 | Goal (global): 727 -> (local): (4, 4) at time 39
[DBG]  Agent 44 | Start (global): 596 -> (local): (0, 1) at time 25 | Goal (global): 724 -> (local): (4, 1) at time 29
[DBG]  Agent 45 | Start (global): 725 -> (local): (4, 2) at time 25 | Goal (global): 724 -> (local): (4, 1) at time 26
[DBG]  Agent 57 | Start (global): 692 -> (local): (3, 1) at time 25 | Goal (global): 724 -> (local): (4, 1) at time 27
[DBG]  Agent 71 | Start (global): 724 -> (local): (4, 1) at time 25 | Goal (global): 724 -> (local): (4, 1) at time 25
[DBG]  Agent 100 | Start (global): 628 -> (local): (1, 1) at time 25 | Goal (global): 724 -> (local): (4, 1) at time 28
[DBG]  [REPAIR] SAT destroy operator called.
[DBG]  [REPAIR] SAT operator â€“ launching subproblem FOR OPTIMIZATION.
[DBG]  Creating local paths (sx, sy) in the submap for T_sync = 25
[DBG]    Agent 3 (global paths from T=25 to 30) has local path: (0,2) (0,1) (1,1) (2,1) (3,1) (4,1) 
[DBG]    Agent 28 (global paths from T=25 to 39) has local path: (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,1) (3,1) (4,1) (4,2) (4,3) (4,4) 
[DBG]    Agent 44 (global paths from T=25 to 29) has local path: (0,1) (1,1) (2,1) (3,1) (4,1) 
[DBG]    Agent 45 (global paths from T=25 to 26) has local path: (4,2) (4,1) 
[DBG]    Agent 57 (global paths from T=25 to 27) has local path: (3,1) (3,1) (4,1) 
[DBG]    Agent 71 (global paths from T=25 to 25) has local path: (4,1) 
[DBG]    Agent 100 (global paths from T=25 to 28) has local path: (1,1) (2,1) (3,1) (4,1) 
[DBG]  Checking input data for SAT solver:
[DBG]    - Number of agents to replan: 7
[DBG]  Agent 3 has the original local path length: 6 => Start (0,2), Goal (4,1)
[DBG]  Agent 28 has the original local path length: 15 => Start (2,2), Goal (4,4)
[DBG]  Agent 44 has the original local path length: 5 => Start (0,1), Goal (4,1)
[DBG]  Agent 45 has the original local path length: 2 => Start (4,2), Goal (4,1)
[DBG]  Agent 57 has the original local path length: 3 => Start (3,1), Goal (4,1)
[DBG]  Agent 71 has the original local path length: 1 => Start (4,1), Goal (4,1)
[DBG]  Agent 100 has the original local path length: 4 => Start (1,1), Goal (4,1)
[DBG]  Start position: (0, 2), (2, 2), (0, 1), (4, 2), (3, 1), (4, 1), (1, 1), 
[DBG]  Goal position: (4, 1), (4, 4), (4, 1), (4, 1), (4, 1), (4, 1), (4, 1), 
[DBG]  SAT instance and solver created.
Currently solving
Instance name: scen
Map name: map
Encoding used: disappear_at_goal
SAT solver used: Kissat
Optimizing function: sum of costs
Number of agents: 7
Mks LB: 7
SoC LB: 27
Delta: 0
Remaining time: 300000 [ms]

[STAT] Solver returned: -1
[DBG]  SAT solver failed.
[STAT] SAT solver failed to find a valid solution.
[DBG]  ====================
[DBG]  SAT destroy operator called.
[DBG]  SAT heuristic: 2
[DBG]  key_agent_id: 28
[DBG]  key_agent_id global path length: 40
[DBG]  Submap content (global positions):
[DBG]  595 596 597 598 599 
[DBG]  627 628 629 630 631 
[DBG]  659 660 661 662 663 
[DBG]  691 692 693 694 695 
[DBG]  723 724 725 726 727 
[DBG]  Map content with agents and obstacles:
[DBG]  X . . X . 
[DBG]  . . . X . 
[DBG]  A . A X X 
[DBG]  . . X X X 
[DBG]  X . . . . 
[DBG]  content of the map structure that we pass to the SAT solver:
[DBG]  -1  1  1  -1  1  
[DBG]  1  1  1  -1  1  
[DBG]  1  1  1  -1  -1  
[DBG]  1  1  -1  -1  -1  
[DBG]  -1  1  1  1  1  
[DBG]  Identifying agents in a submap for rescheduling (when key_agent is there at the time 16):
[DBG]  Agent 28 found intervals in the sub-map:
[DBG]   [0..39]
[DBG]  Agent 28 (interval in submap: [0..39]) contains time 16, added to replan.
[DBG]  Agent 74 found intervals in the sub-map:
[DBG]  
[DBG]  Agent 74 is not in sub-map at time 16 (intervals: 
[DBG]  )
[DBG]  Agent 96 found intervals in the sub-map:
[DBG]   [16..19]
[DBG]  Agent 96 (interval in submap: [16..19]) contains time 16, added to replan.
[DBG]  Agent 109 found intervals in the sub-map:
[DBG]  
[DBG]  Agent 109 is not in sub-map at time 16 (intervals: 
[DBG]  )
[DBG]  Agent 114 found intervals in the sub-map:
[DBG]  
[DBG]  Agent 114 is not in sub-map at time 16 (intervals: 
[DBG]  )
[DBG]  Agent 28 | Start (global): 661 -> (local): (2, 2) at time 16 | Goal (global): 727 -> (local): (4, 4) at time 39
[DBG]  Agent 96 | Start (global): 659 -> (local): (2, 0) at time 16 | Goal (global): 724 -> (local): (4, 1) at time 19
[DBG]  [REPAIR] SAT destroy operator called.
[DBG]  [REPAIR] SAT operator â€“ launching subproblem FOR OPTIMIZATION.
[DBG]  Creating local paths (sx, sy) in the submap for T_sync = 16
[DBG]    Agent 28 (global paths from T=16 to 39) has local path: (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,1) (3,1) (4,1) (4,2) (4,3) (4,4) 
[DBG]    Agent 96 (global paths from T=16 to 19) has local path: (2,0) (3,0) (3,1) (4,1) 
[DBG]  Checking input data for SAT solver:
[DBG]    - Number of agents to replan: 2
[DBG]  Agent 28 has the original local path length: 24 => Start (2,2), Goal (4,4)
[DBG]  Agent 96 has the original local path length: 4 => Start (2,0), Goal (4,1)
[DBG]  Start position: (2, 2), (2, 0), 
[DBG]  Goal position: (4, 4), (4, 1), 
[DBG]  SAT instance and solver created.
Currently solving
Instance name: scen
Map name: map
Encoding used: disappear_at_goal
SAT solver used: Kissat
Optimizing function: sum of costs
Number of agents: 2
Mks LB: 7
SoC LB: 11
Delta: 0
Remaining time: 300000 [ms]

[STAT] Solver returned: -1
[DBG]  SAT solver failed.
[STAT] SAT solver failed to find a valid solution.
[DBG]  ====================
[DBG]  SAT destroy operator called.
[DBG]  SAT heuristic: 2
[DBG]  key_agent_id: 28
[DBG]  key_agent_id global path length: 40
[DBG]  Submap content (global positions):
[DBG]  595 596 597 598 599 
[DBG]  627 628 629 630 631 
[DBG]  659 660 661 662 663 
[DBG]  691 692 693 694 695 
[DBG]  723 724 725 726 727 
[DBG]  Map content with agents and obstacles:
[DBG]  X A . X . 
[DBG]  . . . X . 
[DBG]  . . A X X 
[DBG]  . A X X X 
[DBG]  X . . . . 
[DBG]  content of the map structure that we pass to the SAT solver:
[DBG]  -1  1  1  -1  1  
[DBG]  1  1  1  -1  1  
[DBG]  1  1  1  -1  -1  
[DBG]  1  1  -1  -1  -1  
[DBG]  -1  1  1  1  1  
[DBG]  Identifying agents in a submap for rescheduling (when key_agent is there at the time 9):
[DBG]  Agent 10 found intervals in the sub-map:
[DBG]  
[DBG]  Agent 10 is not in sub-map at time 9 (intervals: 
[DBG]  )
[DBG]  Agent 28 found intervals in the sub-map:
[DBG]   [0..39]
[DBG]  Agent 28 (interval in submap: [0..39]) contains time 9, added to replan.
[DBG]  Agent 89 found intervals in the sub-map:
[DBG]   [5..10]
[DBG]  Agent 89 (interval in submap: [5..10]) contains time 9, added to replan.
[DBG]  Agent 131 found intervals in the sub-map:
[DBG]   [8..13]
[DBG]  Agent 131 (interval in submap: [8..13]) contains time 9, added to replan.
[DBG]  Agent 135 found intervals in the sub-map:
[DBG]  
[DBG]  Agent 135 is not in sub-map at time 9 (intervals: 
[DBG]  )
[DBG]  Agent 28 | Start (global): 661 -> (local): (2, 2) at time 9 | Goal (global): 727 -> (local): (4, 4) at time 39
[DBG]  Agent 89 | Start (global): 692 -> (local): (3, 1) at time 9 | Goal (global): 724 -> (local): (4, 1) at time 10
[DBG]  Agent 131 | Start (global): 596 -> (local): (0, 1) at time 9 | Goal (global): 724 -> (local): (4, 1) at time 13
[DBG]  [REPAIR] SAT destroy operator called.
[DBG]  [REPAIR] SAT operator â€“ launching subproblem FOR OPTIMIZATION.
[DBG]  Creating local paths (sx, sy) in the submap for T_sync = 9
[DBG]    Agent 28 (global paths from T=9 to 39) has local path: (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,1) (3,1) (4,1) (4,2) (4,3) (4,4) 
[DBG]    Agent 89 (global paths from T=9 to 10) has local path: (3,1) (4,1) 
[DBG]    Agent 131 (global paths from T=9 to 13) has local path: (0,1) (1,1) (2,1) (3,1) (4,1) 
[DBG]  Checking input data for SAT solver:
[DBG]    - Number of agents to replan: 3
[DBG]  Agent 28 has the original local path length: 31 => Start (2,2), Goal (4,4)
[DBG]  Agent 89 has the original local path length: 2 => Start (3,1), Goal (4,1)
[DBG]  Agent 131 has the original local path length: 5 => Start (0,1), Goal (4,1)
[DBG]  Start position: (2, 2), (3, 1), (0, 1), 
[DBG]  Goal position: (4, 4), (4, 1), (4, 1), 
[DBG]  SAT instance and solver created.
Currently solving
Instance name: scen
Map name: map
Encoding used: disappear_at_goal
SAT solver used: Kissat
Optimizing function: sum of costs
Number of agents: 3
Mks LB: 7
SoC LB: 14
Delta: 0
Remaining time: 300000 [ms]

Vertex conflict! Agents 1, 2, timestep 5, location 0
Swapping conflict! Agents 1, 2, timestep 5, edge (0,0)
Vertex conflict! Agents 1, 2, timestep 6, location 0
Found plan [agents = 3] [timesteps = 7]
Agent #0 : 9 8 11 12 13 14 15 
Agent #1 : 11 12 0 0 0 0 0 
Agent #2 : 0 4 8 11 12 0 0 

[STAT] Solver returned: 0
[DBG]  Agent (index) 28 | New local path (submap idx):
[DBG]  9 8 11 12 13 14 15 
[DBG]  Agent (index) 89 | New local path (submap idx):
[DBG]  11 12 
[DBG]  Agent (index) 131 | New local path (submap idx):
[DBG]  0 4 8 11 12 
[DBG]  Update the agent path 28 | Original local length: 31 | New local length: 7
[DBG]  agent 28 t=0 => decoded (sx,sy)=(2,2) => global_id=661
[DBG]  agent 28 t=1 => decoded (sx,sy)=(2,1) => global_id=660
[DBG]  agent 28 t=2 => decoded (sx,sy)=(3,1) => global_id=692
[DBG]  agent 28 t=3 => decoded (sx,sy)=(4,1) => global_id=724
[DBG]  agent 28 t=4 => decoded (sx,sy)=(4,2) => global_id=725
[DBG]  agent 28 t=5 => decoded (sx,sy)=(4,3) => global_id=726
[DBG]  agent 28 t=6 => decoded (sx,sy)=(4,4) => global_id=727
[DBG]  Complete path of agent 28:
[DBG]    Original: 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 660 692 724 725 726 727 
[DBG]    New:     661 661 661 661 661 661 661 661 661 661 660 692 724 725 726 727 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 661 661 661 661 661 661 661 661 661 
[DBG]    Local path (in submap): 661 660 692 724 725 726 727 
[DBG]    Suffix (out of submap): 
[DBG]  Original agent path length 28 je: 40
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 0: 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 660, 692, 724, 725, 726, 727, 
[DBG]  Path for agent 28 updated, resulting length: 16
[DBG]  Update the agent path 89 | Original local length: 2 | New local length: 2
[DBG]  agent 89 t=0 => decoded (sx,sy)=(3,1) => global_id=692
[DBG]  agent 89 t=1 => decoded (sx,sy)=(4,1) => global_id=724
[DBG]  Complete path of agent 89:
[DBG]    Original: 437 469 501 533 565 597 596 628 660 692 724 756 788 788 788 820 821 822 854 886 918 950 982 983 1015 
[DBG]    New:     437 469 501 533 565 597 596 628 660 692 724 756 788 788 788 820 821 822 854 886 918 950 982 983 1015 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 437 469 501 533 565 597 596 628 660 
[DBG]    Local path (in submap): 692 724 
[DBG]    Suffix (out of submap): 756 788 788 788 820 821 822 854 886 918 950 982 983 1015 
[DBG]  Original agent path length 89 je: 25
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 1: 437, 469, 501, 533, 565, 597, 596, 628, 660, 692, 724, 756, 788, 788, 788, 820, 821, 822, 854, 886, 918, 950, 982, 983, 1015, 
[DBG]  Path for agent 89 updated, resulting length: 25
[DBG]  Update the agent path 131 | Original local length: 5 | New local length: 5
[DBG]  agent 131 t=0 => decoded (sx,sy)=(0,1) => global_id=596
[DBG]  agent 131 t=1 => decoded (sx,sy)=(1,1) => global_id=628
[DBG]  agent 131 t=2 => decoded (sx,sy)=(2,1) => global_id=660
[DBG]  agent 131 t=3 => decoded (sx,sy)=(3,1) => global_id=692
[DBG]  agent 131 t=4 => decoded (sx,sy)=(4,1) => global_id=724
[DBG]  Complete path of agent 131:
[DBG]    Original: 341 373 405 437 469 501 533 565 597 596 628 660 692 724 756 788 820 819 851 850 849 848 847 846 878 877 876 875 843 811 779 778 777 745 713 712 
[DBG]    New:     341 373 405 437 469 501 533 565 597 596 628 660 692 724 756 788 820 819 851 850 849 848 847 846 878 877 876 875 843 811 779 778 777 745 713 712 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 341 373 405 437 469 501 533 565 597 
[DBG]    Local path (in submap): 596 628 660 692 724 
[DBG]    Suffix (out of submap): 756 788 820 819 851 850 849 848 847 846 878 877 876 875 843 811 779 778 777 745 713 712 
[DBG]  Original agent path length 131 je: 36
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 2: 341, 373, 405, 437, 469, 501, 533, 565, 597, 596, 628, 660, 692, 724, 756, 788, 820, 819, 851, 850, 849, 848, 847, 846, 878, 877, 876, 875, 843, 811, 779, 778, 777, 745, 713, 712, 
[DBG]  Path for agent 131 updated, resulting length: 36
[DBG]  Paths successfully updated.
[DBG]  (LNS.cpp) New path for agent 28: 
[DBG]  661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 660, 692, 724, 725, 726, 727, 
[DBG]  (LNS.cpp) New path for agent 89: 
[DBG]  437, 469, 501, 533, 565, 597, 596, 628, 660, 692, 724, 756, 788, 788, 788, 820, 821, 822, 854, 886, 918, 950, 982, 983, 1015, 
[DBG]  (LNS.cpp) New path for agent 131: 
[DBG]  341, 373, 405, 437, 469, 501, 533, 565, 597, 596, 628, 660, 692, 724, 756, 788, 820, 819, 851, 850, 849, 848, 847, 846, 878, 877, 876, 875, 843, 811, 779, 778, 777, 745, 713, 712, 
[DBG]  Delta value: 0.244898
[DBG]  Rewarding metric index = 0
[DBG]  component_weights = {0.999593, 0.000190246, 0.000110142, 0.000106946}
[DBG]  opSuccess value: 1
[STAT] neighbor.sum_of_costs before recomputation: 74
[STAT] neighbor.old_sum_of_costs before recomputation: 98
[STAT] sum_of_costs before recomputation: 4380
[DBG]  Validate solution immediately after SAT success.
[WARNING] Problem after SAT: Target conflict: agent 42 (len 39) traverses target of agent 28 (len 15) at location 727 at timestep 38
[DBG]  [DEBUG] Attempting immediate repair via init_lns because problem occurred after SAT (should be applied only for conflicts...).
[DBG]  [DEBUG] Passing 150 agents to init_lns (skip=true).
[DBG]  [DEBUG] path_table contents for selected agents (neighbor.agents):
[DBG]    Agent 28 => controlling path length=16
[DBG]    Agent 89 => controlling path length=25
[DBG]    Agent 131 => controlling path length=36
[DBG]  hodnota skip_initial_solution=1
[DBG]  We skip initialSolution => call buildCollisionData()
[DBG]  buildCollisionData() called â€“ skip_initial_solution case.
[DBG]  Agents.size()=150, collision_graph.size()=150
[DBG]  agent 28 => updateCollidingPairs => foundCollision
[DBG]  agent 42 => updateCollidingPairs => foundCollision
[DBG]  Conflicting agent pairs:
[DBG]  agent 28 is in conflict with agent 42
[DBG]  buildCollisionData() => sum_of_costs=4356, num_of_colliding_pairs=1
[DBG]  buildCollisionData done => sum_of_costs=4356, num_of_colliding_pairs=1
[DBG]  sum_of_cost hodnota: 4356
[DBG]  After skip/init build => iteration_stats.back(): sum_of_costs=4356, collisions=1
[DEBUG] Using default neighbor generation strategy for conflicts: 2
[DEBUG] Using default neighbor generation strategy for conflicts: 0
	InitLNS(PP): runtime = 0.00288208, iterations = 3, colliding pairs = 0, initial colliding pairs = 1, solution cost = 4379, initial solution cost = 4356, failed iterations = 0
[DBG]  [DEBUG] init_lns->sum_of_costs after init_lns->run: 4379
[DBG]  [DEBUG] sum_of_costs after assignment from init_lns->run: 4379
[DBG]  Recomputing sum_of_cost by dividing neighbor.sum_of_costs and neighbor.old_sum_of_costs
[STAT] sum_of_costs after recomputation: 4379
[STAT] Iteration 92
[DBG]  Using SAT operator (destroy+repair SAT).
[DBG]  ====================
[DBG]  SAT destroy operator called.
[DBG]  SAT heuristic: 2
[DBG]  key_agent_id: 28
[DBG]  key_agent_id global path length: 40
[DBG]  Submap content (global positions):
[DBG]  595 596 597 598 599 
[DBG]  627 628 629 630 631 
[DBG]  659 660 661 662 663 
[DBG]  691 692 693 694 695 
[DBG]  723 724 725 726 727 
[DBG]  Map content with agents and obstacles:
[DBG]  X . . X A 
[DBG]  . . A X . 
[DBG]  . . A X X 
[DBG]  . . X X X 
[DBG]  X . . . . 
[DBG]  content of the map structure that we pass to the SAT solver:
[DBG]  -1  1  1  -1  1  
[DBG]  1  1  1  -1  1  
[DBG]  1  1  1  -1  -1  
[DBG]  1  1  -1  -1  -1  
[DBG]  -1  1  1  1  1  
[DBG]  Identifying agents in a submap for rescheduling (when key_agent is there at the time 31):
[DBG]  Agent 26 found intervals in the sub-map:
[DBG]   [30..38]
[DBG]  Agent 26 (interval in submap: [30..38]) contains time 31, added to replan.
[DBG]  Agent 28 found intervals in the sub-map:
[DBG]   [0..39]
[DBG]  Agent 28 (interval in submap: [0..39]) contains time 31, added to replan.
[DBG]  Agent 53 found intervals in the sub-map:
[DBG]   [31..36]
[DBG]  Agent 53 (interval in submap: [31..36]) contains time 31, added to replan.
[DBG]  Agent 148 found intervals in the sub-map:
[DBG]   [36..37]
[DBG]  Agent 148 is not in sub-map at time 31 (intervals: 
[DBG]  [36..37] )
[DBG]  Agent 26 | Start (global): 629 -> (local): (1, 2) at time 31 | Goal (global): 724 -> (local): (4, 1) at time 38
[DBG]  Agent 28 | Start (global): 661 -> (local): (2, 2) at time 31 | Goal (global): 727 -> (local): (4, 4) at time 39
[DBG]  Agent 53 | Start (global): 599 -> (local): (0, 4) at time 31 | Goal (global): 599 -> (local): (0, 4) at time 36
[DBG]  [REPAIR] SAT destroy operator called.
[DBG]  [REPAIR] SAT operator â€“ launching subproblem FOR OPTIMIZATION.
[DBG]  Creating local paths (sx, sy) in the submap for T_sync = 31
[DBG]    Agent 26 (global paths from T=31 to 38) has local path: (1,2) (1,2) (1,2) (1,2) (1,1) (2,1) (3,1) (4,1) 
[DBG]    Agent 28 (global paths from T=31 to 39) has local path: (2,2) (2,2) (2,2) (2,1) (3,1) (4,1) (4,2) (4,3) (4,4) 
[DBG]    Agent 53 (global paths from T=31 to 36) has local path: (0,4) (0,4) (0,4) (0,4) (0,4) (0,4) 
[DBG]  Checking input data for SAT solver:
[DBG]    - Number of agents to replan: 3
[DBG]  Agent 26 has the original local path length: 8 => Start (1,2), Goal (4,1)
[DBG]  Agent 28 has the original local path length: 9 => Start (2,2), Goal (4,4)
[DBG]  Agent 53 has the original local path length: 6 => Start (0,4), Goal (0,4)
[DBG]  Start position: (1, 2), (2, 2), (0, 4), 
[DBG]  Goal position: (4, 1), (4, 4), (0, 4), 
[DBG]  SAT instance and solver created.
Currently solving
Instance name: scen
Map name: map
Encoding used: disappear_at_goal
SAT solver used: Kissat
Optimizing function: sum of costs
Number of agents: 3
Mks LB: 7
SoC LB: 13
Delta: 0
Remaining time: 300000 [ms]

Vertex conflict! Agents 0, 2, timestep 5, location 0
Swapping conflict! Agents 0, 2, timestep 5, edge (0,0)
Vertex conflict! Agents 0, 2, timestep 6, location 0
Found plan [agents = 3] [timesteps = 7]
Agent #0 : 5 9 8 11 12 0 0 
Agent #1 : 9 8 11 12 13 14 15 
Agent #2 : 2 0 0 0 0 0 0 

[STAT] Solver returned: 0
[DBG]  Agent (index) 26 | New local path (submap idx):
[DBG]  5 9 8 11 12 
[DBG]  Agent (index) 28 | New local path (submap idx):
[DBG]  9 8 11 12 13 14 15 
[DBG]  Agent (index) 53 | New local path (submap idx):
[DBG]  2 
[DBG]  Update the agent path 26 | Original local length: 8 | New local length: 5
[DBG]  agent 26 t=0 => decoded (sx,sy)=(1,2) => global_id=629
[DBG]  agent 26 t=1 => decoded (sx,sy)=(2,2) => global_id=661
[DBG]  agent 26 t=2 => decoded (sx,sy)=(2,1) => global_id=660
[DBG]  agent 26 t=3 => decoded (sx,sy)=(3,1) => global_id=692
[DBG]  agent 26 t=4 => decoded (sx,sy)=(4,1) => global_id=724
[DBG]  Complete path of agent 26:
[DBG]    Original: 13 14 46 47 79 80 81 82 83 84 116 148 180 212 213 214 215 247 279 311 343 375 407 439 438 470 469 501 533 565 597 629 629 629 629 628 660 692 724 756 755 
[DBG]    New:     13 14 46 47 79 80 81 82 83 84 116 148 180 212 213 214 215 247 279 311 343 375 407 439 438 470 469 501 533 565 597 629 661 660 692 724 756 755 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 13 14 46 47 79 80 81 82 83 84 116 148 180 212 213 214 215 247 279 311 343 375 407 439 438 470 469 501 533 565 597 
[DBG]    Local path (in submap): 629 661 660 692 724 756 755 
[DBG]    Suffix (out of submap): 
[DBG]  Original agent path length 26 je: 41
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 0: 13, 14, 46, 47, 79, 80, 81, 82, 83, 84, 116, 148, 180, 212, 213, 214, 215, 247, 279, 311, 343, 375, 407, 439, 438, 470, 469, 501, 533, 565, 597, 629, 661, 660, 692, 724, 756, 755, 
[DBG]  Path for agent 26 updated, resulting length: 38
[DBG]  Update the agent path 28 | Original local length: 9 | New local length: 7
[DBG]  agent 28 t=0 => decoded (sx,sy)=(2,2) => global_id=661
[DBG]  agent 28 t=1 => decoded (sx,sy)=(2,1) => global_id=660
[DBG]  agent 28 t=2 => decoded (sx,sy)=(3,1) => global_id=692
[DBG]  agent 28 t=3 => decoded (sx,sy)=(4,1) => global_id=724
[DBG]  agent 28 t=4 => decoded (sx,sy)=(4,2) => global_id=725
[DBG]  agent 28 t=5 => decoded (sx,sy)=(4,3) => global_id=726
[DBG]  agent 28 t=6 => decoded (sx,sy)=(4,4) => global_id=727
[DBG]  Complete path of agent 28:
[DBG]    Original: 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 660 692 724 725 726 727 
[DBG]    New:     661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 660 692 724 725 726 727 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 
[DBG]    Local path (in submap): 661 660 692 724 725 726 727 
[DBG]    Suffix (out of submap): 
[DBG]  Original agent path length 28 je: 40
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 1: 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 660, 692, 724, 725, 726, 727, 
[DBG]  Path for agent 28 updated, resulting length: 38
[DBG]  Update the agent path 53 | Original local length: 6 | New local length: 1
[DBG]  agent 53 t=0 => decoded (sx,sy)=(0,4) => global_id=599
[DBG]  Complete path of agent 53:
[DBG]    Original: 84 116 148 180 212 244 276 277 278 310 311 343 375 376 408 440 440 472 504 505 506 507 508 508 540 539 538 570 569 601 600 599 599 599 599 599 599 600 632 664 696 728 729 761 793 792 824 823 822 821 
[DBG]    New:     84 116 148 180 212 244 276 277 278 310 311 343 375 376 408 440 440 472 504 505 506 507 508 508 540 539 538 570 569 601 600 599 600 632 664 696 728 729 761 793 792 824 823 822 821 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 84 116 148 180 212 244 276 277 278 310 311 343 375 376 408 440 440 472 504 505 506 507 508 508 540 539 538 570 569 601 600 
[DBG]    Local path (in submap): 599 600 632 664 696 728 
[DBG]    Suffix (out of submap): 729 761 793 792 824 823 822 821 
[DBG]  Original agent path length 53 je: 50
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 2: 84, 116, 148, 180, 212, 244, 276, 277, 278, 310, 311, 343, 375, 376, 408, 440, 440, 472, 504, 505, 506, 507, 508, 508, 540, 539, 538, 570, 569, 601, 600, 599, 600, 632, 664, 696, 728, 729, 761, 793, 792, 824, 823, 822, 821, 
[DBG]  Path for agent 53 updated, resulting length: 45
[DBG]  Paths successfully updated.
[DBG]  (LNS.cpp) New path for agent 26: 
[DBG]  13, 14, 46, 47, 79, 80, 81, 82, 83, 84, 116, 148, 180, 212, 213, 214, 215, 247, 279, 311, 343, 375, 407, 439, 438, 470, 469, 501, 533, 565, 597, 629, 661, 660, 692, 724, 756, 755, 
[DBG]  (LNS.cpp) New path for agent 28: 
[DBG]  661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 660, 692, 724, 725, 726, 727, 
[DBG]  (LNS.cpp) New path for agent 53: 
[DBG]  84, 116, 148, 180, 212, 244, 276, 277, 278, 310, 311, 343, 375, 376, 408, 440, 440, 472, 504, 505, 506, 507, 508, 508, 540, 539, 538, 570, 569, 601, 600, 599, 600, 632, 664, 696, 728, 729, 761, 793, 792, 824, 823, 822, 821, 
[DBG]  Delta value: 0.078125
[DBG]  Rewarding metric index = 0
[DBG]  component_weights = {0.999641, 0.000167645, 9.70576e-05, 9.42407e-05}
[DBG]  opSuccess value: 1
[STAT] neighbor.sum_of_costs before recomputation: 118
[STAT] neighbor.old_sum_of_costs before recomputation: 128
[STAT] sum_of_costs before recomputation: 4379
[DBG]  Validate solution immediately after SAT success.
[WARNING] Problem after SAT: Vertex conflict between agents 1 and 53 at location 761 at timestep 38
[DBG]  [DEBUG] Attempting immediate repair via init_lns because problem occurred after SAT (should be applied only for conflicts...).
[DBG]  [DEBUG] Passing 150 agents to init_lns (skip=true).
[DBG]  [DEBUG] path_table contents for selected agents (neighbor.agents):
[DBG]    Agent 26 => controlling path length=38
[DBG]    Agent 28 => controlling path length=38
[DBG]    Agent 53 => controlling path length=45
[DBG]  hodnota skip_initial_solution=1
[DBG]  We skip initialSolution => call buildCollisionData()
[DBG]  buildCollisionData() called â€“ skip_initial_solution case.
[DBG]  Agents.size()=150, collision_graph.size()=150
[DBG]  agent 1 => updateCollidingPairs => foundCollision
[DBG]  agent 26 => updateCollidingPairs => foundCollision
[DBG]  agent 28 => updateCollidingPairs => foundCollision
[DBG]  agent 42 => updateCollidingPairs => foundCollision
[DBG]  agent 53 => updateCollidingPairs => foundCollision
[DBG]  agent 111 => updateCollidingPairs => foundCollision
[DBG]  Conflicting agent pairs:
[DBG]  agent 1 is in conflict with agent 53
[DBG]  agent 26 is in conflict with agent 42
[DBG]  agent 28 is in conflict with agent 42
[DBG]  agent 53 is in conflict with agent 111
[DBG]  buildCollisionData() => sum_of_costs=4369, num_of_colliding_pairs=4
[DBG]  buildCollisionData done => sum_of_costs=4369, num_of_colliding_pairs=4
[DBG]  sum_of_cost hodnota: 4369
[DBG]  After skip/init build => iteration_stats.back(): sum_of_costs=4369, collisions=4
[DEBUG] Using default neighbor generation strategy for conflicts: 2
[DEBUG] Using default neighbor generation strategy for conflicts: 2
[DEBUG] Using default neighbor generation strategy for conflicts: 2
[DEBUG] Using default neighbor generation strategy for conflicts: 1
[DEBUG] Using default neighbor generation strategy for conflicts: 0
	InitLNS(PP): runtime = 0.00630058, iterations = 6, colliding pairs = 0, initial colliding pairs = 4, solution cost = 4370, initial solution cost = 4369, failed iterations = 0
[DBG]  [DEBUG] init_lns->sum_of_costs after init_lns->run: 4370
[DBG]  [DEBUG] sum_of_costs after assignment from init_lns->run: 4370
[DBG]  Recomputing sum_of_cost by dividing neighbor.sum_of_costs and neighbor.old_sum_of_costs
[STAT] sum_of_costs after recomputation: 4370
[STAT] Iteration 93
[DBG]  Using SAT operator (destroy+repair SAT).
[DBG]  ====================
[DBG]  SAT destroy operator called.
[DBG]  SAT heuristic: 2
[DBG]  key_agent_id: 28
[DBG]  key_agent_id global path length: 40
[DBG]  Submap content (global positions):
[DBG]  595 596 597 598 599 
[DBG]  627 628 629 630 631 
[DBG]  659 660 661 662 663 
[DBG]  691 692 693 694 695 
[DBG]  723 724 725 726 727 
[DBG]  Map content with agents and obstacles:
[DBG]  X . A X . 
[DBG]  . A . X . 
[DBG]  A A A X X 
[DBG]  . . X X X 
[DBG]  X . . . . 
[DBG]  content of the map structure that we pass to the SAT solver:
[DBG]  -1  1  1  -1  1  
[DBG]  1  1  1  -1  1  
[DBG]  1  1  1  -1  -1  
[DBG]  1  1  -1  -1  -1  
[DBG]  -1  1  1  1  1  
[DBG]  Identifying agents in a submap for rescheduling (when key_agent is there at the time 21):
[DBG]  Agent 0 found intervals in the sub-map:
[DBG]   [20..23]
[DBG]  Agent 0 (interval in submap: [20..23]) contains time 21, added to replan.
[DBG]  Agent 28 found intervals in the sub-map:
[DBG]   [0..33] [37..39]
[DBG]  Agent 28 (interval in submap: [0..33]) contains time 21, added to replan.
[DBG]  Agent 45 found intervals in the sub-map:
[DBG]   [19..26]
[DBG]  Agent 45 (interval in submap: [19..26]) contains time 21, added to replan.
[DBG]  Agent 57 found intervals in the sub-map:
[DBG]   [21..27]
[DBG]  Agent 57 (interval in submap: [21..27]) contains time 21, added to replan.
[DBG]  Agent 119 found intervals in the sub-map:
[DBG]   [12..23]
[DBG]  Agent 119 (interval in submap: [12..23]) contains time 21, added to replan.
[DBG]  Agent 0 | Start (global): 660 -> (local): (2, 1) at time 21 | Goal (global): 724 -> (local): (4, 1) at time 23
[DBG]  Agent 28 | Start (global): 661 -> (local): (2, 2) at time 21 | Goal (global): 725 -> (local): (4, 2) at time 33
[DBG]  Agent 45 | Start (global): 628 -> (local): (1, 1) at time 21 | Goal (global): 724 -> (local): (4, 1) at time 26
[DBG]  Agent 57 | Start (global): 597 -> (local): (0, 2) at time 21 | Goal (global): 724 -> (local): (4, 1) at time 27
[DBG]  Agent 119 | Start (global): 659 -> (local): (2, 0) at time 21 | Goal (global): 659 -> (local): (2, 0) at time 23
[DBG]  [REPAIR] SAT destroy operator called.
[DBG]  [REPAIR] SAT operator â€“ launching subproblem FOR OPTIMIZATION.
[DBG]  Creating local paths (sx, sy) in the submap for T_sync = 21
[DBG]    Agent 0 (global paths from T=21 to 23) has local path: (2,1) (3,1) (4,1) 
[DBG]    Agent 28 (global paths from T=21 to 33) has local path: (2,2) (2,2) (2,2) (2,2) (2,1) (2,0) (2,0) (2,0) (2,0) (2,1) (3,1) (4,1) (4,2) 
[DBG]    Agent 45 (global paths from T=21 to 26) has local path: (1,1) (2,1) (3,1) (4,1) (4,2) (4,1) 
[DBG]    Agent 57 (global paths from T=21 to 27) has local path: (0,2) (1,2) (1,1) (2,1) (3,1) (3,1) (4,1) 
[DBG]    Agent 119 (global paths from T=21 to 23) has local path: (2,0) (1,0) (2,0) 
[DBG]  Checking input data for SAT solver:
[DBG]    - Number of agents to replan: 5
[DBG]  Agent 0 has the original local path length: 3 => Start (2,1), Goal (4,1)
[DBG]  Agent 28 has the original local path length: 13 => Start (2,2), Goal (4,2)
[DBG]  Agent 45 has the original local path length: 6 => Start (1,1), Goal (4,1)
[DBG]  Agent 57 has the original local path length: 7 => Start (0,2), Goal (4,1)
[DBG]  Agent 119 has the original local path length: 3 => Start (2,0), Goal (2,0)
[DBG]  Start position: (2, 1), (2, 2), (1, 1), (0, 2), (2, 0), 
[DBG]  Goal position: (4, 1), (4, 2), (4, 1), (4, 1), (2, 0), 
[DBG]  SAT instance and solver created.
Currently solving
Instance name: scen
Map name: map
Encoding used: disappear_at_goal
SAT solver used: Kissat
Optimizing function: sum of costs
Number of agents: 5
Mks LB: 6
SoC LB: 19
Delta: 0
Remaining time: 300000 [ms]

[STAT] Solver returned: -1
[DBG]  SAT solver failed.
[STAT] SAT solver failed to find a valid solution.
[DBG]  ====================
[DBG]  SAT destroy operator called.
[DBG]  SAT heuristic: 2
[DBG]  key_agent_id: 28
[DBG]  key_agent_id global path length: 40
[DBG]  Submap content (global positions):
[DBG]  595 596 597 598 599 
[DBG]  627 628 629 630 631 
[DBG]  659 660 661 662 663 
[DBG]  691 692 693 694 695 
[DBG]  723 724 725 726 727 
[DBG]  Map content with agents and obstacles:
[DBG]  X . . X . 
[DBG]  . . . X A 
[DBG]  . A A X X 
[DBG]  A . X X X 
[DBG]  X . . . . 
[DBG]  content of the map structure that we pass to the SAT solver:
[DBG]  -1  1  1  -1  1  
[DBG]  1  1  1  -1  1  
[DBG]  1  1  1  -1  -1  
[DBG]  1  1  -1  -1  -1  
[DBG]  -1  1  1  1  1  
[DBG]  Identifying agents in a submap for rescheduling (when key_agent is there at the time 17):
[DBG]  Agent 24 found intervals in the sub-map:
[DBG]   [17..17]
[DBG]  Agent 24 (interval in submap: [17..17]) contains time 17, added to replan.
[DBG]  Agent 28 found intervals in the sub-map:
[DBG]   [0..33] [37..39]
[DBG]  Agent 28 (interval in submap: [0..33]) contains time 17, added to replan.
[DBG]  Agent 30 found intervals in the sub-map:
[DBG]  
[DBG]  Agent 30 is not in sub-map at time 17 (intervals: 
[DBG]  )
[DBG]  Agent 96 found intervals in the sub-map:
[DBG]   [16..19]
[DBG]  Agent 96 (interval in submap: [16..19]) contains time 17, added to replan.
[DBG]  Agent 109 found intervals in the sub-map:
[DBG]  
[DBG]  Agent 109 is not in sub-map at time 17 (intervals: 
[DBG]  )
[DBG]  Agent 119 found intervals in the sub-map:
[DBG]   [12..23]
[DBG]  Agent 119 (interval in submap: [12..23]) contains time 17, added to replan.
[DBG]  Agent 24 | Start (global): 631 -> (local): (1, 4) at time 17 | Goal (global): 631 -> (local): (1, 4) at time 17
[DBG]  Agent 28 | Start (global): 661 -> (local): (2, 2) at time 17 | Goal (global): 725 -> (local): (4, 2) at time 33
[DBG]  Agent 96 | Start (global): 691 -> (local): (3, 0) at time 17 | Goal (global): 724 -> (local): (4, 1) at time 19
[DBG]  Agent 119 | Start (global): 660 -> (local): (2, 1) at time 17 | Goal (global): 659 -> (local): (2, 0) at time 23
[DBG]  [REPAIR] SAT destroy operator called.
[DBG]  [REPAIR] SAT operator â€“ launching subproblem FOR OPTIMIZATION.
[DBG]  Creating local paths (sx, sy) in the submap for T_sync = 17
[DBG]    Agent 24 (global paths from T=17 to 17) has local path: (1,4) 
[DBG]    Agent 28 (global paths from T=17 to 33) has local path: (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,1) (2,0) (2,0) (2,0) (2,0) (2,1) (3,1) (4,1) (4,2) 
[DBG]    Agent 96 (global paths from T=17 to 19) has local path: (3,0) (3,1) (4,1) 
[DBG]    Agent 119 (global paths from T=17 to 23) has local path: (2,1) (2,1) (3,1) (3,0) (2,0) (1,0) (2,0) 
[DBG]  Checking input data for SAT solver:
[DBG]    - Number of agents to replan: 4
[DBG]  Agent 24 has the original local path length: 1 => Start (1,4), Goal (1,4)
[DBG]  Agent 28 has the original local path length: 17 => Start (2,2), Goal (4,2)
[DBG]  Agent 96 has the original local path length: 3 => Start (3,0), Goal (4,1)
[DBG]  Agent 119 has the original local path length: 7 => Start (2,1), Goal (2,0)
[DBG]  Start position: (1, 4), (2, 2), (3, 0), (2, 1), 
[DBG]  Goal position: (1, 4), (4, 2), (4, 1), (2, 0), 
[DBG]  SAT instance and solver created.
Currently solving
Instance name: scen
Map name: map
Encoding used: disappear_at_goal
SAT solver used: Kissat
Optimizing function: sum of costs
Number of agents: 4
Mks LB: 5
SoC LB: 11
Delta: 0
Remaining time: 300000 [ms]

Vertex conflict! Agents 0, 2, timestep 3, location 0
Swapping conflict! Agents 0, 2, timestep 3, edge (0,0)
Vertex conflict! Agents 0, 2, timestep 4, location 0
Vertex conflict! Agents 0, 3, timestep 2, location 0
Swapping conflict! Agents 0, 3, timestep 2, edge (0,0)
Vertex conflict! Agents 0, 3, timestep 3, location 0
Swapping conflict! Agents 0, 3, timestep 3, edge (0,0)
Vertex conflict! Agents 0, 3, timestep 4, location 0
Vertex conflict! Agents 2, 3, timestep 3, location 0
Swapping conflict! Agents 2, 3, timestep 3, edge (0,0)
Vertex conflict! Agents 2, 3, timestep 4, location 0
Found plan [agents = 4] [timesteps = 5]
Agent #0 : 6 0 0 0 0 
Agent #1 : 9 8 11 12 13 
Agent #2 : 10 11 12 0 0 
Agent #3 : 8 7 0 0 0 

[STAT] Solver returned: 0
[DBG]  Agent (index) 24 | New local path (submap idx):
[DBG]  6 
[DBG]  Agent (index) 28 | New local path (submap idx):
[DBG]  9 8 11 12 13 
[DBG]  Agent (index) 96 | New local path (submap idx):
[DBG]  10 11 12 
[DBG]  Agent (index) 119 | New local path (submap idx):
[DBG]  8 7 
[DBG]  Update the agent path 24 | Original local length: 1 | New local length: 1
[DBG]  agent 24 t=0 => decoded (sx,sy)=(1,4) => global_id=631
[DBG]  Complete path of agent 24:
[DBG]    Original: 891 892 892 893 861 829 797 765 733 732 731 730 729 697 696 664 632 631 632 633 
[DBG]    New:     891 892 892 893 861 829 797 765 733 732 731 730 729 697 696 664 632 631 632 633 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 891 892 892 893 861 829 797 765 733 732 731 730 729 697 696 664 632 
[DBG]    Local path (in submap): 631 
[DBG]    Suffix (out of submap): 632 633 
[DBG]  Original agent path length 24 je: 20
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 0: 891, 892, 892, 893, 861, 829, 797, 765, 733, 732, 731, 730, 729, 697, 696, 664, 632, 631, 632, 633, 
[DBG]  Path for agent 24 updated, resulting length: 20
[DBG]  Update the agent path 28 | Original local length: 17 | New local length: 5
[DBG]  agent 28 t=0 => decoded (sx,sy)=(2,2) => global_id=661
[DBG]  agent 28 t=1 => decoded (sx,sy)=(2,1) => global_id=660
[DBG]  agent 28 t=2 => decoded (sx,sy)=(3,1) => global_id=692
[DBG]  agent 28 t=3 => decoded (sx,sy)=(4,1) => global_id=724
[DBG]  agent 28 t=4 => decoded (sx,sy)=(4,2) => global_id=725
[DBG]  Complete path of agent 28:
[DBG]    Original: 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 660 659 659 659 659 660 692 724 725 757 757 757 725 726 727 
[DBG]    New:     661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 660 692 724 725 757 757 757 725 726 727 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 
[DBG]    Local path (in submap): 661 660 692 724 725 757 757 757 725 726 727 
[DBG]    Suffix (out of submap): 
[DBG]  Original agent path length 28 je: 40
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 1: 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 660, 692, 724, 725, 757, 757, 757, 725, 726, 727, 
[DBG]  Path for agent 28 updated, resulting length: 28
[DBG]  Update the agent path 96 | Original local length: 3 | New local length: 3
[DBG]  agent 96 t=0 => decoded (sx,sy)=(3,0) => global_id=691
[DBG]  agent 96 t=1 => decoded (sx,sy)=(3,1) => global_id=692
[DBG]  agent 96 t=2 => decoded (sx,sy)=(4,1) => global_id=724
[DBG]  Complete path of agent 96:
[DBG]    Original: 647 648 680 712 713 714 715 683 684 685 686 687 688 689 657 658 659 691 692 724 756 788 820 821 822 823 824 856 857 858 826 827 
[DBG]    New:     647 648 680 712 713 714 715 683 684 685 686 687 688 689 657 658 659 691 692 724 756 788 820 821 822 823 824 856 857 858 826 827 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 647 648 680 712 713 714 715 683 684 685 686 687 688 689 657 658 659 
[DBG]    Local path (in submap): 691 692 724 
[DBG]    Suffix (out of submap): 756 788 820 821 822 823 824 856 857 858 826 827 
[DBG]  Original agent path length 96 je: 32
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 2: 647, 648, 680, 712, 713, 714, 715, 683, 684, 685, 686, 687, 688, 689, 657, 658, 659, 691, 692, 724, 756, 788, 820, 821, 822, 823, 824, 856, 857, 858, 826, 827, 
[DBG]  Path for agent 96 updated, resulting length: 32
[DBG]  Update the agent path 119 | Original local length: 7 | New local length: 2
[DBG]  agent 119 t=0 => decoded (sx,sy)=(2,1) => global_id=660
[DBG]  agent 119 t=1 => decoded (sx,sy)=(2,0) => global_id=659
[DBG]  Complete path of agent 119:
[DBG]    Original: 861 893 861 829 797 765 733 732 731 730 729 728 727 726 725 724 692 660 660 692 691 659 627 659 658 657 656 655 623 622 590 589 588 556 524 492 460 428 427 395 363 331 299 300 268 236 204 172 140 
[DBG]    New:     861 893 861 829 797 765 733 732 731 730 729 728 727 726 725 724 692 660 659 658 657 656 655 623 622 590 589 588 556 524 492 460 428 427 395 363 331 299 300 268 236 204 172 140 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 861 893 861 829 797 765 733 732 731 730 729 728 727 726 725 724 692 
[DBG]    Local path (in submap): 660 659 658 657 656 655 623 
[DBG]    Suffix (out of submap): 622 590 589 588 556 524 492 460 428 427 395 363 331 299 300 268 236 204 172 140 
[DBG]  Original agent path length 119 je: 49
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 3: 861, 893, 861, 829, 797, 765, 733, 732, 731, 730, 729, 728, 727, 726, 725, 724, 692, 660, 659, 658, 657, 656, 655, 623, 622, 590, 589, 588, 556, 524, 492, 460, 428, 427, 395, 363, 331, 299, 300, 268, 236, 204, 172, 140, 
[DBG]  Path for agent 119 updated, resulting length: 44
[DBG]  Paths successfully updated.
[DBG]  (LNS.cpp) New path for agent 24: 
[DBG]  891, 892, 892, 893, 861, 829, 797, 765, 733, 732, 731, 730, 729, 697, 696, 664, 632, 631, 632, 633, 
[DBG]  (LNS.cpp) New path for agent 28: 
[DBG]  661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 660, 692, 724, 725, 757, 757, 757, 725, 726, 727, 
[DBG]  (LNS.cpp) New path for agent 96: 
[DBG]  647, 648, 680, 712, 713, 714, 715, 683, 684, 685, 686, 687, 688, 689, 657, 658, 659, 691, 692, 724, 756, 788, 820, 821, 822, 823, 824, 856, 857, 858, 826, 827, 
[DBG]  (LNS.cpp) New path for agent 119: 
[DBG]  861, 893, 861, 829, 797, 765, 733, 732, 731, 730, 729, 728, 727, 726, 725, 724, 692, 660, 659, 658, 657, 656, 655, 623, 622, 590, 589, 588, 556, 524, 492, 460, 428, 427, 395, 363, 331, 299, 300, 268, 236, 204, 172, 140, 
[DBG]  Delta value: 0.124088
[DBG]  Rewarding metric index = 0
[DBG]  component_weights = {0.999697, 0.00014169, 8.20308e-05, 7.96501e-05}
[DBG]  opSuccess value: 1
[STAT] neighbor.sum_of_costs before recomputation: 120
[STAT] neighbor.old_sum_of_costs before recomputation: 137
[STAT] sum_of_costs before recomputation: 4370
[DBG]  Validate solution immediately after SAT success.
[WARNING] Problem after SAT: Vertex conflict between agents 0 and 119 at location 658 at timestep 19
[DBG]  [DEBUG] Attempting immediate repair via init_lns because problem occurred after SAT (should be applied only for conflicts...).
[DBG]  [DEBUG] Passing 150 agents to init_lns (skip=true).
[DBG]  [DEBUG] path_table contents for selected agents (neighbor.agents):
[DBG]    Agent 24 => controlling path length=20
[DBG]    Agent 28 => controlling path length=28
[DBG]    Agent 96 => controlling path length=32
[DBG]    Agent 119 => controlling path length=44
[DBG]  hodnota skip_initial_solution=1
[DBG]  We skip initialSolution => call buildCollisionData()
[DBG]  buildCollisionData() called â€“ skip_initial_solution case.
[DBG]  Agents.size()=150, collision_graph.size()=150
[DBG]  agent 0 => updateCollidingPairs => foundCollision
[DBG]  agent 28 => updateCollidingPairs => foundCollision
[DBG]  agent 42 => updateCollidingPairs => foundCollision
[DBG]  agent 45 => updateCollidingPairs => foundCollision
[DBG]  agent 71 => updateCollidingPairs => foundCollision
[DBG]  agent 101 => updateCollidingPairs => foundCollision
[DBG]  agent 119 => updateCollidingPairs => foundCollision
[DBG]  agent 130 => updateCollidingPairs => foundCollision
[DBG]  Conflicting agent pairs:
[DBG]  agent 0 is in conflict with agent 119
[DBG]  agent 28 is in conflict with agent 42
[DBG]  agent 28 is in conflict with agent 45
[DBG]  agent 71 is in conflict with agent 119
[DBG]  agent 101 is in conflict with agent 119
[DBG]  agent 119 is in conflict with agent 130
[DBG]  buildCollisionData() => sum_of_costs=4353, num_of_colliding_pairs=6
[DBG]  buildCollisionData done => sum_of_costs=4353, num_of_colliding_pairs=6
[DBG]  sum_of_cost hodnota: 4353
[DBG]  After skip/init build => iteration_stats.back(): sum_of_costs=4353, collisions=6
[DEBUG] Using default neighbor generation strategy for conflicts: 2
[DEBUG] Using default neighbor generation strategy for conflicts: 0
[DEBUG] Using default neighbor generation strategy for conflicts: 2
[DEBUG] Using default neighbor generation strategy for conflicts: 2
[DEBUG] Using default neighbor generation strategy for conflicts: 0
[DEBUG] Using default neighbor generation strategy for conflicts: 2
[DEBUG] Using default neighbor generation strategy for conflicts: 1
[DEBUG] Using default neighbor generation strategy for conflicts: 2
[DEBUG] Using default neighbor generation strategy for conflicts: 1
[DEBUG] Using default neighbor generation strategy for conflicts: 1
	InitLNS(PP): runtime = 0.0136747, iterations = 11, colliding pairs = 0, initial colliding pairs = 6, solution cost = 4363, initial solution cost = 4353, failed iterations = 0
[DBG]  [DEBUG] init_lns->sum_of_costs after init_lns->run: 4363
[DBG]  [DEBUG] sum_of_costs after assignment from init_lns->run: 4363
[DBG]  Recomputing sum_of_cost by dividing neighbor.sum_of_costs and neighbor.old_sum_of_costs
[STAT] sum_of_costs after recomputation: 4363
[STAT] Iteration 94
[DBG]  Using SAT operator (destroy+repair SAT).
[DBG]  ====================
[DBG]  SAT destroy operator called.
[DBG]  SAT heuristic: 2
[DBG]  key_agent_id: 28
[DBG]  key_agent_id global path length: 40
[DBG]  Submap content (global positions):
[DBG]  595 596 597 598 599 
[DBG]  627 628 629 630 631 
[DBG]  659 660 661 662 663 
[DBG]  691 692 693 694 695 
[DBG]  723 724 725 726 727 
[DBG]  Map content with agents and obstacles:
[DBG]  X . . X . 
[DBG]  . . A X . 
[DBG]  . . A X X 
[DBG]  . A X X X 
[DBG]  X . A A . 
[DBG]  content of the map structure that we pass to the SAT solver:
[DBG]  -1  1  1  -1  1  
[DBG]  1  1  1  -1  1  
[DBG]  1  1  1  -1  -1  
[DBG]  1  1  -1  -1  -1  
[DBG]  -1  1  1  1  1  
[DBG]  Identifying agents in a submap for rescheduling (when key_agent is there at the time 6):
[DBG]  Agent 28 found intervals in the sub-map:
[DBG]   [0..20] [37..39]
[DBG]  Agent 28 (interval in submap: [0..20]) contains time 6, added to replan.
[DBG]  Agent 46 found intervals in the sub-map:
[DBG]   [4..7]
[DBG]  Agent 46 (interval in submap: [4..7]) contains time 6, added to replan.
[DBG]  Agent 89 found intervals in the sub-map:
[DBG]   [5..10]
[DBG]  Agent 89 (interval in submap: [5..10]) contains time 6, added to replan.
[DBG]  Agent 91 found intervals in the sub-map:
[DBG]   [6..8]
[DBG]  Agent 91 (interval in submap: [6..8]) contains time 6, added to replan.
[DBG]  Agent 108 found intervals in the sub-map:
[DBG]   [0..7]
[DBG]  Agent 108 (interval in submap: [0..7]) contains time 6, added to replan.
[DBG]  Agent 113 found intervals in the sub-map:
[DBG]  
[DBG]  Agent 113 is not in sub-map at time 6 (intervals: 
[DBG]  )
[DBG]  Agent 28 | Start (global): 661 -> (local): (2, 2) at time 6 | Goal (global): 724 -> (local): (4, 1) at time 20
[DBG]  Agent 46 | Start (global): 726 -> (local): (4, 3) at time 6 | Goal (global): 727 -> (local): (4, 4) at time 7
[DBG]  Agent 89 | Start (global): 629 -> (local): (1, 2) at time 6 | Goal (global): 724 -> (local): (4, 1) at time 10
[DBG]  Agent 91 | Start (global): 725 -> (local): (4, 2) at time 6 | Goal (global): 727 -> (local): (4, 4) at time 8
[DBG]  Agent 108 | Start (global): 692 -> (local): (3, 1) at time 6 | Goal (global): 724 -> (local): (4, 1) at time 7
[DBG]  [REPAIR] SAT destroy operator called.
[DBG]  [REPAIR] SAT operator â€“ launching subproblem FOR OPTIMIZATION.
[DBG]  Creating local paths (sx, sy) in the submap for T_sync = 6
[DBG]    Agent 28 (global paths from T=6 to 20) has local path: (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,1) (3,1) (4,1) 
[DBG]    Agent 46 (global paths from T=6 to 7) has local path: (4,3) (4,4) 
[DBG]    Agent 89 (global paths from T=6 to 10) has local path: (1,2) (1,1) (2,1) (3,1) (4,1) 
[DBG]    Agent 91 (global paths from T=6 to 8) has local path: (4,2) (4,3) (4,4) 
[DBG]    Agent 108 (global paths from T=6 to 7) has local path: (3,1) (4,1) 
[DBG]  Checking input data for SAT solver:
[DBG]    - Number of agents to replan: 5
[DBG]  Agent 28 has the original local path length: 15 => Start (2,2), Goal (4,1)
[DBG]  Agent 46 has the original local path length: 2 => Start (4,3), Goal (4,4)
[DBG]  Agent 89 has the original local path length: 5 => Start (1,2), Goal (4,1)
[DBG]  Agent 91 has the original local path length: 3 => Start (4,2), Goal (4,4)
[DBG]  Agent 108 has the original local path length: 2 => Start (3,1), Goal (4,1)
[DBG]  Start position: (2, 2), (4, 3), (1, 2), (4, 2), (3, 1), 
[DBG]  Goal position: (4, 1), (4, 4), (4, 1), (4, 4), (4, 1), 
[DBG]  SAT instance and solver created.
Currently solving
Instance name: scen
Map name: map
Encoding used: disappear_at_goal
SAT solver used: Kissat
Optimizing function: sum of costs
Number of agents: 5
Mks LB: 5
SoC LB: 16
Delta: 0
Remaining time: 300000 [ms]

Vertex conflict! Agents 0, 1, timestep 4, location 0
Vertex conflict! Agents 0, 3, timestep 4, location 0
Vertex conflict! Agents 0, 4, timestep 4, location 0
Vertex conflict! Agents 1, 3, timestep 3, location 0
Swapping conflict! Agents 1, 3, timestep 3, edge (0,0)
Vertex conflict! Agents 1, 3, timestep 4, location 0
Vertex conflict! Agents 1, 4, timestep 2, location 0
Swapping conflict! Agents 1, 4, timestep 2, edge (0,0)
Vertex conflict! Agents 1, 4, timestep 3, location 0
Swapping conflict! Agents 1, 4, timestep 3, edge (0,0)
Vertex conflict! Agents 1, 4, timestep 4, location 0
Vertex conflict! Agents 3, 4, timestep 3, location 0
Swapping conflict! Agents 3, 4, timestep 3, edge (0,0)
Vertex conflict! Agents 3, 4, timestep 4, location 0
Found plan [agents = 5] [timesteps = 5]
Agent #0 : 9 8 11 12 0 
Agent #1 : 14 15 0 0 0 
Agent #2 : 5 9 8 11 12 
Agent #3 : 13 14 15 0 0 
Agent #4 : 11 12 0 0 0 

[STAT] Solver returned: 0
[DBG]  Agent (index) 28 | New local path (submap idx):
[DBG]  9 8 11 12 
[DBG]  Agent (index) 46 | New local path (submap idx):
[DBG]  14 15 
[DBG]  Agent (index) 89 | New local path (submap idx):
[DBG]  5 9 8 11 12 
[DBG]  Agent (index) 91 | New local path (submap idx):
[DBG]  13 14 15 
[DBG]  Agent (index) 108 | New local path (submap idx):
[DBG]  11 12 
[DBG]  Update the agent path 28 | Original local length: 15 | New local length: 4
[DBG]  agent 28 t=0 => decoded (sx,sy)=(2,2) => global_id=661
[DBG]  agent 28 t=1 => decoded (sx,sy)=(2,1) => global_id=660
[DBG]  agent 28 t=2 => decoded (sx,sy)=(3,1) => global_id=692
[DBG]  agent 28 t=3 => decoded (sx,sy)=(4,1) => global_id=724
[DBG]  Complete path of agent 28:
[DBG]    Original: 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 660 692 724 756 757 757 757 757 757 757 757 757 757 757 757 757 757 757 757 725 726 727 
[DBG]    New:     661 661 661 661 661 661 661 660 692 724 756 757 757 757 757 757 757 757 757 757 757 757 757 757 757 757 725 726 727 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 661 661 661 661 661 661 
[DBG]    Local path (in submap): 661 660 692 724 756 757 757 757 757 757 757 757 757 757 757 
[DBG]    Suffix (out of submap): 757 757 757 757 757 725 726 727 
[DBG]  Original agent path length 28 je: 40
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 0: 661, 661, 661, 661, 661, 661, 661, 660, 692, 724, 756, 757, 757, 757, 757, 757, 757, 757, 757, 757, 757, 757, 757, 757, 757, 757, 725, 726, 727, 
[DBG]  Path for agent 28 updated, resulting length: 29
[DBG]  Update the agent path 46 | Original local length: 2 | New local length: 2
[DBG]  agent 46 t=0 => decoded (sx,sy)=(4,3) => global_id=726
[DBG]  agent 46 t=1 => decoded (sx,sy)=(4,4) => global_id=727
[DBG]  Complete path of agent 46:
[DBG]    Original: 786 787 755 756 724 725 726 727 728 696 664 632 633 601 569 570 538 539 540 508 476 444 412 413 381 349 317 285 284 252 
[DBG]    New:     786 787 755 756 724 725 726 727 728 696 664 632 633 601 569 570 538 539 540 508 476 444 412 413 381 349 317 285 284 252 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 786 787 755 756 724 725 
[DBG]    Local path (in submap): 726 727 
[DBG]    Suffix (out of submap): 728 696 664 632 633 601 569 570 538 539 540 508 476 444 412 413 381 349 317 285 284 252 
[DBG]  Original agent path length 46 je: 30
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 1: 786, 787, 755, 756, 724, 725, 726, 727, 728, 696, 664, 632, 633, 601, 569, 570, 538, 539, 540, 508, 476, 444, 412, 413, 381, 349, 317, 285, 284, 252, 
[DBG]  Path for agent 46 updated, resulting length: 30
[DBG]  Update the agent path 89 | Original local length: 5 | New local length: 5
[DBG]  agent 89 t=0 => decoded (sx,sy)=(1,2) => global_id=629
[DBG]  agent 89 t=1 => decoded (sx,sy)=(2,2) => global_id=661
[DBG]  agent 89 t=2 => decoded (sx,sy)=(2,1) => global_id=660
[DBG]  agent 89 t=3 => decoded (sx,sy)=(3,1) => global_id=692
[DBG]  agent 89 t=4 => decoded (sx,sy)=(4,1) => global_id=724
[DBG]  Complete path of agent 89:
[DBG]    Original: 437 469 501 533 565 597 629 628 660 692 724 756 788 788 788 820 821 822 854 886 918 950 982 1014 1015 
[DBG]    New:     437 469 501 533 565 597 629 661 660 692 724 756 788 788 788 820 821 822 854 886 918 950 982 1014 1015 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 437 469 501 533 565 597 
[DBG]    Local path (in submap): 629 661 660 692 724 
[DBG]    Suffix (out of submap): 756 788 788 788 820 821 822 854 886 918 950 982 1014 1015 
[DBG]  Original agent path length 89 je: 25
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 2: 437, 469, 501, 533, 565, 597, 629, 661, 660, 692, 724, 756, 788, 788, 788, 820, 821, 822, 854, 886, 918, 950, 982, 1014, 1015, 
[DBG]  Path for agent 89 updated, resulting length: 25
[DBG]  Update the agent path 91 | Original local length: 3 | New local length: 3
[DBG]  agent 91 t=0 => decoded (sx,sy)=(4,2) => global_id=725
[DBG]  agent 91 t=1 => decoded (sx,sy)=(4,3) => global_id=726
[DBG]  agent 91 t=2 => decoded (sx,sy)=(4,4) => global_id=727
[DBG]  Complete path of agent 91:
[DBG]    Original: 787 819 787 755 756 757 725 726 727 728 696 664 632 600 601 569 570 570 571 539 507 508 476 476 476 476 476 476 508 507 475 443 411 411 411 411 411 379 380 381 
[DBG]    New:     787 819 787 755 756 757 725 726 727 728 696 664 632 600 601 569 570 570 571 539 507 508 476 476 476 476 476 476 508 507 475 443 411 411 411 411 411 379 380 381 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 787 819 787 755 756 757 
[DBG]    Local path (in submap): 725 726 727 
[DBG]    Suffix (out of submap): 728 696 664 632 600 601 569 570 570 571 539 507 508 476 476 476 476 476 476 508 507 475 443 411 411 411 411 411 379 380 381 
[DBG]  Original agent path length 91 je: 40
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 3: 787, 819, 787, 755, 756, 757, 725, 726, 727, 728, 696, 664, 632, 600, 601, 569, 570, 570, 571, 539, 507, 508, 476, 476, 476, 476, 476, 476, 508, 507, 475, 443, 411, 411, 411, 411, 411, 379, 380, 381, 
[DBG]  Path for agent 91 updated, resulting length: 40
[DBG]  Update the agent path 108 | Original local length: 2 | New local length: 2
[DBG]  agent 108 t=0 => decoded (sx,sy)=(3,1) => global_id=692
[DBG]  agent 108 t=1 => decoded (sx,sy)=(4,1) => global_id=724
[DBG]  Complete path of agent 108:
[DBG]    Original: 628 628 660 660 660 692 692 724 756 788 820 819 819 819 851 851 883 884 885 917 917 918 919 920 952 953 954 955 956 957 989 1021 
[DBG]    New:     628 628 660 660 660 692 692 724 756 788 820 819 819 819 851 851 883 884 885 917 917 918 919 920 952 953 954 955 956 957 989 1021 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 628 628 660 660 660 692 
[DBG]    Local path (in submap): 692 724 
[DBG]    Suffix (out of submap): 756 788 820 819 819 819 851 851 883 884 885 917 917 918 919 920 952 953 954 955 956 957 989 1021 
[DBG]  Original agent path length 108 je: 32
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 4: 628, 628, 660, 660, 660, 692, 692, 724, 756, 788, 820, 819, 819, 819, 851, 851, 883, 884, 885, 917, 917, 918, 919, 920, 952, 953, 954, 955, 956, 957, 989, 1021, 
[DBG]  Path for agent 108 updated, resulting length: 32
[DBG]  Paths successfully updated.
[DBG]  (LNS.cpp) New path for agent 28: 
[DBG]  661, 661, 661, 661, 661, 661, 661, 660, 692, 724, 756, 757, 757, 757, 757, 757, 757, 757, 757, 757, 757, 757, 757, 757, 757, 757, 725, 726, 727, 
[DBG]  (LNS.cpp) New path for agent 46: 
[DBG]  786, 787, 755, 756, 724, 725, 726, 727, 728, 696, 664, 632, 633, 601, 569, 570, 538, 539, 540, 508, 476, 444, 412, 413, 381, 349, 317, 285, 284, 252, 
[DBG]  (LNS.cpp) New path for agent 89: 
[DBG]  437, 469, 501, 533, 565, 597, 629, 661, 660, 692, 724, 756, 788, 788, 788, 820, 821, 822, 854, 886, 918, 950, 982, 1014, 1015, 
[DBG]  (LNS.cpp) New path for agent 91: 
[DBG]  787, 819, 787, 755, 756, 757, 725, 726, 727, 728, 696, 664, 632, 600, 601, 569, 570, 570, 571, 539, 507, 508, 476, 476, 476, 476, 476, 476, 508, 507, 475, 443, 411, 411, 411, 411, 411, 379, 380, 381, 
[DBG]  (LNS.cpp) New path for agent 108: 
[DBG]  628, 628, 660, 660, 660, 692, 692, 724, 756, 788, 820, 819, 819, 819, 851, 851, 883, 884, 885, 917, 917, 918, 919, 920, 952, 953, 954, 955, 956, 957, 989, 1021, 
[DBG]  Delta value: 0.0679012
[DBG]  Rewarding metric index = 0
[DBG]  component_weights = {0.99973, 0.000126051, 7.29767e-05, 7.08587e-05}
[DBG]  opSuccess value: 1
[STAT] neighbor.sum_of_costs before recomputation: 151
[STAT] neighbor.old_sum_of_costs before recomputation: 162
[STAT] sum_of_costs before recomputation: 4363
[DBG]  Validate solution immediately after SAT success.
[WARNING] Problem after SAT: Target conflict: agent 42 (len 39) traverses target of agent 28 (len 28) at location 727 at timestep 38
[DBG]  [DEBUG] Attempting immediate repair via init_lns because problem occurred after SAT (should be applied only for conflicts...).
[DBG]  [DEBUG] Passing 150 agents to init_lns (skip=true).
[DBG]  [DEBUG] path_table contents for selected agents (neighbor.agents):
[DBG]    Agent 28 => controlling path length=29
[DBG]    Agent 46 => controlling path length=30
[DBG]    Agent 89 => controlling path length=25
[DBG]    Agent 91 => controlling path length=40
[DBG]    Agent 108 => controlling path length=32
[DBG]  hodnota skip_initial_solution=1
[DBG]  We skip initialSolution => call buildCollisionData()
[DBG]  buildCollisionData() called â€“ skip_initial_solution case.
[DBG]  Agents.size()=150, collision_graph.size()=150
[DBG]  agent 28 => updateCollidingPairs => foundCollision
[DBG]  agent 42 => updateCollidingPairs => foundCollision
[DBG]  Conflicting agent pairs:
[DBG]  agent 28 is in conflict with agent 42
[DBG]  buildCollisionData() => sum_of_costs=4352, num_of_colliding_pairs=1
[DBG]  buildCollisionData done => sum_of_costs=4352, num_of_colliding_pairs=1
[DBG]  sum_of_cost hodnota: 4352
[DBG]  After skip/init build => iteration_stats.back(): sum_of_costs=4352, collisions=1
[DEBUG] Using default neighbor generation strategy for conflicts: 1
[DEBUG] Using default neighbor generation strategy for conflicts: 1
	InitLNS(PP): runtime = 0.00468846, iterations = 3, colliding pairs = 0, initial colliding pairs = 1, solution cost = 4368, initial solution cost = 4352, failed iterations = 1
[DBG]  [DEBUG] init_lns->sum_of_costs after init_lns->run: 4368
[DBG]  [DEBUG] sum_of_costs after assignment from init_lns->run: 4368
[DBG]  Recomputing sum_of_cost by dividing neighbor.sum_of_costs and neighbor.old_sum_of_costs
[STAT] sum_of_costs after recomputation: 4368
[STAT] Iteration 95
[DBG]  Using SAT operator (destroy+repair SAT).
[DBG]  ====================
[DBG]  SAT destroy operator called.
[DBG]  SAT heuristic: 2
[DBG]  key_agent_id: 28
[DBG]  key_agent_id global path length: 40
[DBG]  Submap content (global positions):
[DBG]  751 752 753 754 755 
[DBG]  783 784 785 786 787 
[DBG]  815 816 817 818 819 
[DBG]  847 848 849 850 851 
[DBG]  879 880 881 882 883 
[DBG]  Map content with agents and obstacles:
[DBG]  . . . X A 
[DBG]  A A X . A 
[DBG]  . X A A A 
[DBG]  . . . . . 
[DBG]  . . . A . 
[DBG]  content of the map structure that we pass to the SAT solver:
[DBG]  1  1  1  -1  1  
[DBG]  1  1  -1  1  1  
[DBG]  1  -1  1  1  1  
[DBG]  1  1  1  1  1  
[DBG]  1  1  1  1  1  
[DBG]  Identifying agents in a submap for rescheduling (when key_agent is there at the time 29):
[DBG]  Agent 0 found intervals in the sub-map:
[DBG]   [24..30]
[DBG]  Agent 0 (interval in submap: [24..30]) contains time 29, added to replan.
[DBG]  Agent 1 found intervals in the sub-map:
[DBG]   [22..29]
[DBG]  Agent 1 (interval in submap: [22..29]) contains time 29, added to replan.
[DBG]  Agent 3 found intervals in the sub-map:
[DBG]   [25..33]
[DBG]  Agent 3 (interval in submap: [25..33]) contains time 29, added to replan.
[DBG]  Agent 11 found intervals in the sub-map:
[DBG]   [21..30]
[DBG]  Agent 11 (interval in submap: [21..30]) contains time 29, added to replan.
[DBG]  Agent 27 found intervals in the sub-map:
[DBG]   [20..22]
[DBG]  Agent 27 is not in sub-map at time 29 (intervals: 
[DBG]  [20..22] )
[DBG]  Agent 28 found intervals in the sub-map:
[DBG]   [24..33]
[DBG]  Agent 28 (interval in submap: [24..33]) contains time 29, added to replan.
[DBG]  Agent 45 found intervals in the sub-map:
[DBG]   [27..31]
[DBG]  Agent 45 (interval in submap: [27..31]) contains time 29, added to replan.
[DBG]  Agent 57 found intervals in the sub-map:
[DBG]   [29..34]
[DBG]  Agent 57 (interval in submap: [29..34]) contains time 29, added to replan.
[DBG]  Agent 71 found intervals in the sub-map:
[DBG]  
[DBG]  Agent 71 is not in sub-map at time 29 (intervals: 
[DBG]  )
[DBG]  Agent 83 found intervals in the sub-map:
[DBG]   [28..33]
[DBG]  Agent 83 (interval in submap: [28..33]) contains time 29, added to replan.
[DBG]  Agent 131 found intervals in the sub-map:
[DBG]  
[DBG]  Agent 131 is not in sub-map at time 29 (intervals: 
[DBG]  )
[DBG]  Agent 148 found intervals in the sub-map:
[DBG]   [20..26]
[DBG]  Agent 148 is not in sub-map at time 29 (intervals: 
[DBG]  [20..26] )
[DBG]  Agent 0 | Start (global): 882 -> (local): (4, 3) at time 29 | Goal (global): 883 -> (local): (4, 4) at time 30
[DBG]  Agent 1 | Start (global): 819 -> (local): (2, 4) at time 29 | Goal (global): 819 -> (local): (2, 4) at time 29
[DBG]  Agent 3 | Start (global): 787 -> (local): (1, 4) at time 29 | Goal (global): 882 -> (local): (4, 3) at time 33
[DBG]  Agent 11 | Start (global): 784 -> (local): (1, 1) at time 29 | Goal (global): 752 -> (local): (0, 1) at time 30
[DBG]  Agent 28 | Start (global): 817 -> (local): (2, 2) at time 29 | Goal (global): 787 -> (local): (1, 4) at time 33
[DBG]  Agent 45 | Start (global): 818 -> (local): (2, 3) at time 29 | Goal (global): 849 -> (local): (3, 2) at time 31
[DBG]  Agent 57 | Start (global): 755 -> (local): (0, 4) at time 29 | Goal (global): 882 -> (local): (4, 3) at time 34
[DBG]  Agent 83 | Start (global): 783 -> (local): (1, 0) at time 29 | Goal (global): 880 -> (local): (4, 1) at time 33
[DBG]  [REPAIR] SAT destroy operator called.
[DBG]  [REPAIR] SAT operator â€“ launching subproblem FOR OPTIMIZATION.
[DBG]  Creating local paths (sx, sy) in the submap for T_sync = 29
[DBG]    Agent 0 (global paths from T=29 to 30) has local path: (4,3) (4,4) 
[DBG]    Agent 1 (global paths from T=29 to 29) has local path: (2,4) 
[DBG]    Agent 3 (global paths from T=29 to 33) has local path: (1,4) (2,4) (2,3) (3,3) (4,3) 
[DBG]    Agent 11 (global paths from T=29 to 30) has local path: (1,1) (0,1) 
[DBG]    Agent 28 (global paths from T=29 to 33) has local path: (2,2) (2,3) (1,3) (1,3) (1,4) 
[DBG]    Agent 45 (global paths from T=29 to 31) has local path: (2,3) (3,3) (3,2) 
[DBG]    Agent 57 (global paths from T=29 to 34) has local path: (0,4) (1,4) (2,4) (2,3) (3,3) (4,3) 
[DBG]    Agent 83 (global paths from T=29 to 33) has local path: (1,0) (2,0) (3,0) (4,0) (4,1) 
[DBG]  Checking input data for SAT solver:
[DBG]    - Number of agents to replan: 8
[DBG]  Agent 0 has the original local path length: 2 => Start (4,3), Goal (4,4)
[DBG]  Agent 1 has the original local path length: 1 => Start (2,4), Goal (2,4)
[DBG]  Agent 3 has the original local path length: 5 => Start (1,4), Goal (4,3)
[DBG]  Agent 11 has the original local path length: 2 => Start (1,1), Goal (0,1)
[DBG]  Agent 28 has the original local path length: 5 => Start (2,2), Goal (1,4)
[DBG]  Agent 45 has the original local path length: 3 => Start (2,3), Goal (3,2)
[DBG]  Agent 57 has the original local path length: 6 => Start (0,4), Goal (4,3)
[DBG]  Agent 83 has the original local path length: 5 => Start (1,0), Goal (4,1)
[DBG]  Start position: (4, 3), (2, 4), (1, 4), (1, 1), (2, 2), (2, 3), (0, 4), (1, 0), 
[DBG]  Goal position: (4, 4), (2, 4), (4, 3), (0, 1), (1, 4), (3, 2), (4, 3), (4, 1), 
[DBG]  SAT instance and solver created.
Currently solving
Instance name: scen
Map name: map
Encoding used: disappear_at_goal
SAT solver used: Kissat
Optimizing function: sum of costs
Number of agents: 8
Mks LB: 6
SoC LB: 28
Delta: 0
Remaining time: 300000 [ms]

Vertex conflict! Agents 0, 1, timestep 2, location 0
Swapping conflict! Agents 0, 1, timestep 2, edge (0,0)
Vertex conflict! Agents 0, 1, timestep 3, location 0
Swapping conflict! Agents 0, 1, timestep 3, edge (0,0)
Vertex conflict! Agents 0, 1, timestep 4, location 0
Swapping conflict! Agents 0, 1, timestep 4, edge (0,0)
Vertex conflict! Agents 0, 1, timestep 5, location 0
Vertex conflict! Agents 0, 2, timestep 5, location 0
Vertex conflict! Agents 0, 3, timestep 2, location 0
Swapping conflict! Agents 0, 3, timestep 2, edge (0,0)
Vertex conflict! Agents 0, 3, timestep 3, location 0
Swapping conflict! Agents 0, 3, timestep 3, edge (0,0)
Vertex conflict! Agents 0, 3, timestep 4, location 0
Swapping conflict! Agents 0, 3, timestep 4, edge (0,0)
Vertex conflict! Agents 0, 3, timestep 5, location 0
Vertex conflict! Agents 0, 4, timestep 4, location 0
Swapping conflict! Agents 0, 4, timestep 4, edge (0,0)
Vertex conflict! Agents 0, 4, timestep 5, location 0
Vertex conflict! Agents 0, 5, timestep 3, location 0
Swapping conflict! Agents 0, 5, timestep 3, edge (0,0)
Vertex conflict! Agents 0, 5, timestep 4, location 0
Swapping conflict! Agents 0, 5, timestep 4, edge (0,0)
Vertex conflict! Agents 0, 5, timestep 5, location 0
Vertex conflict! Agents 0, 7, timestep 5, location 0
Vertex conflict! Agents 1, 2, timestep 5, location 0
Vertex conflict! Agents 1, 3, timestep 2, location 0
Swapping conflict! Agents 1, 3, timestep 2, edge (0,0)
Vertex conflict! Agents 1, 3, timestep 3, location 0
Swapping conflict! Agents 1, 3, timestep 3, edge (0,0)
Vertex conflict! Agents 1, 3, timestep 4, location 0
Swapping conflict! Agents 1, 3, timestep 4, edge (0,0)
Vertex conflict! Agents 1, 3, timestep 5, location 0
Vertex conflict! Agents 1, 4, timestep 4, location 0
Swapping conflict! Agents 1, 4, timestep 4, edge (0,0)
Vertex conflict! Agents 1, 4, timestep 5, location 0
Vertex conflict! Agents 1, 5, timestep 3, location 0
Swapping conflict! Agents 1, 5, timestep 3, edge (0,0)
Vertex conflict! Agents 1, 5, timestep 4, location 0
Swapping conflict! Agents 1, 5, timestep 4, edge (0,0)
Vertex conflict! Agents 1, 5, timestep 5, location 0
Vertex conflict! Agents 1, 7, timestep 5, location 0
Vertex conflict! Agents 2, 3, timestep 5, location 0
Vertex conflict! Agents 2, 4, timestep 5, location 0
Vertex conflict! Agents 2, 5, timestep 5, location 0
Vertex conflict! Agents 2, 7, timestep 5, location 0
Vertex conflict! Agents 3, 4, timestep 4, location 0
Swapping conflict! Agents 3, 4, timestep 4, edge (0,0)
Vertex conflict! Agents 3, 4, timestep 5, location 0
Vertex conflict! Agents 3, 5, timestep 3, location 0
Swapping conflict! Agents 3, 5, timestep 3, edge (0,0)
Vertex conflict! Agents 3, 5, timestep 4, location 0
Swapping conflict! Agents 3, 5, timestep 4, edge (0,0)
Vertex conflict! Agents 3, 5, timestep 5, location 0
Vertex conflict! Agents 3, 7, timestep 5, location 0
Vertex conflict! Agents 4, 5, timestep 4, location 0
Swapping conflict! Agents 4, 5, timestep 4, edge (0,0)
Vertex conflict! Agents 4, 5, timestep 5, location 0
Vertex conflict! Agents 4, 7, timestep 5, location 0
Vertex conflict! Agents 5, 7, timestep 5, location 0
Found plan [agents = 8] [timesteps = 6]
Agent #0 : 20 21 0 0 0 0 
Agent #1 : 11 0 0 0 0 0 
Agent #2 : 7 11 16 21 20 0 
Agent #3 : 5 1 0 0 0 0 
Agent #4 : 9 10 11 7 0 0 
Agent #5 : 10 15 14 0 0 0 
Agent #6 : 3 7 6 10 15 20 
Agent #7 : 4 8 12 17 18 0 

[STAT] Solver returned: 0
[DBG]  Agent (index) 0 | New local path (submap idx):
[DBG]  20 21 
[DBG]  Agent (index) 1 | New local path (submap idx):
[DBG]  11 
[DBG]  Agent (index) 3 | New local path (submap idx):
[DBG]  7 11 16 21 20 
[DBG]  Agent (index) 11 | New local path (submap idx):
[DBG]  5 1 
[DBG]  Agent (index) 28 | New local path (submap idx):
[DBG]  9 10 11 7 
[DBG]  Agent (index) 45 | New local path (submap idx):
[DBG]  10 15 14 
[DBG]  Agent (index) 57 | New local path (submap idx):
[DBG]  3 7 6 10 15 20 
[DBG]  Agent (index) 83 | New local path (submap idx):
[DBG]  4 8 12 17 18 
[DBG]  Update the agent path 0 | Original local length: 2 | New local length: 2
[DBG]  agent 0 t=0 => decoded (sx,sy)=(4,3) => global_id=882
[DBG]  agent 0 t=1 => decoded (sx,sy)=(4,4) => global_id=883
[DBG]  Complete path of agent 0:
[DBG]    Original: 517 549 550 551 583 615 647 648 649 650 682 714 746 778 810 811 843 875 876 877 878 878 846 878 879 847 879 880 881 882 883 884 885 886 887 888 856 857 858 859 860 861 862 830 798 799 
[DBG]    New:     517 549 550 551 583 615 647 648 649 650 682 714 746 778 810 811 843 875 876 877 878 878 846 878 879 847 879 880 881 882 883 884 885 886 887 888 856 857 858 859 860 861 862 830 798 799 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 517 549 550 551 583 615 647 648 649 650 682 714 746 778 810 811 843 875 876 877 878 878 846 878 879 847 879 880 881 
[DBG]    Local path (in submap): 882 883 
[DBG]    Suffix (out of submap): 884 885 886 887 888 856 857 858 859 860 861 862 830 798 799 
[DBG]  Original agent path length 0 je: 46
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 0: 517, 549, 550, 551, 583, 615, 647, 648, 649, 650, 682, 714, 746, 778, 810, 811, 843, 875, 876, 877, 878, 878, 846, 878, 879, 847, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 856, 857, 858, 859, 860, 861, 862, 830, 798, 799, 
[DBG]  Path for agent 0 updated, resulting length: 46
[DBG]  Update the agent path 1 | Original local length: 1 | New local length: 1
[DBG]  agent 1 t=0 => decoded (sx,sy)=(2,4) => global_id=819
[DBG]  Complete path of agent 1:
[DBG]    Original: 949 949 949 949 949 948 980 948 948 948 948 948 948 948 948 948 948 948 948 948 916 884 883 883 883 883 883 883 851 819 820 821 822 823 824 792 793 761 729 728 
[DBG]    New:     949 949 949 949 949 948 980 948 948 948 948 948 948 948 948 948 948 948 948 948 916 884 883 883 883 883 883 883 851 819 820 821 822 823 824 792 793 761 729 728 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 949 949 949 949 949 948 980 948 948 948 948 948 948 948 948 948 948 948 948 948 916 884 883 883 883 883 883 883 851 
[DBG]    Local path (in submap): 819 
[DBG]    Suffix (out of submap): 820 821 822 823 824 792 793 761 729 728 
[DBG]  Original agent path length 1 je: 40
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 1: 949, 949, 949, 949, 949, 948, 980, 948, 948, 948, 948, 948, 948, 948, 948, 948, 948, 948, 948, 948, 916, 884, 883, 883, 883, 883, 883, 883, 851, 819, 820, 821, 822, 823, 824, 792, 793, 761, 729, 728, 
[DBG]  Path for agent 1 updated, resulting length: 40
[DBG]  Update the agent path 3 | Original local length: 5 | New local length: 5
[DBG]  agent 3 t=0 => decoded (sx,sy)=(1,4) => global_id=787
[DBG]  agent 3 t=1 => decoded (sx,sy)=(2,4) => global_id=819
[DBG]  agent 3 t=2 => decoded (sx,sy)=(3,4) => global_id=851
[DBG]  agent 3 t=3 => decoded (sx,sy)=(4,4) => global_id=883
[DBG]  agent 3 t=4 => decoded (sx,sy)=(4,3) => global_id=882
[DBG]  Complete path of agent 3:
[DBG]    Original: 468 468 468 468 468 468 468 468 468 468 468 468 469 469 469 501 533 565 597 629 661 660 692 724 756 755 755 755 787 787 819 818 850 882 914 946 914 913 912 
[DBG]    New:     468 468 468 468 468 468 468 468 468 468 468 468 469 469 469 501 533 565 597 629 661 660 692 724 756 755 755 755 787 787 819 851 883 882 914 946 914 913 912 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 468 468 468 468 468 468 468 468 468 468 468 468 469 469 469 501 533 565 597 629 661 660 692 724 756 755 755 755 787 
[DBG]    Local path (in submap): 787 819 851 883 882 
[DBG]    Suffix (out of submap): 914 946 914 913 912 
[DBG]  Original agent path length 3 je: 39
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 2: 468, 468, 468, 468, 468, 468, 468, 468, 468, 468, 468, 468, 469, 469, 469, 501, 533, 565, 597, 629, 661, 660, 692, 724, 756, 755, 755, 755, 787, 787, 819, 851, 883, 882, 914, 946, 914, 913, 912, 
[DBG]  Path for agent 3 updated, resulting length: 39
[DBG]  Update the agent path 11 | Original local length: 2 | New local length: 2
[DBG]  agent 11 t=0 => decoded (sx,sy)=(1,1) => global_id=784
[DBG]  agent 11 t=1 => decoded (sx,sy)=(0,1) => global_id=752
[DBG]  Complete path of agent 11:
[DBG]    Original: 990 990 990 990 990 989 988 956 955 923 923 891 890 858 857 856 824 823 822 821 820 819 851 850 849 848 847 815 783 784 752 720 721 689 657 
[DBG]    New:     990 990 990 990 990 989 988 956 955 923 923 891 890 858 857 856 824 823 822 821 820 819 851 850 849 848 847 815 783 784 752 720 721 689 657 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 990 990 990 990 990 989 988 956 955 923 923 891 890 858 857 856 824 823 822 821 820 819 851 850 849 848 847 815 783 
[DBG]    Local path (in submap): 784 752 
[DBG]    Suffix (out of submap): 720 721 689 657 
[DBG]  Original agent path length 11 je: 35
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 3: 990, 990, 990, 990, 990, 989, 988, 956, 955, 923, 923, 891, 890, 858, 857, 856, 824, 823, 822, 821, 820, 819, 851, 850, 849, 848, 847, 815, 783, 784, 752, 720, 721, 689, 657, 
[DBG]  Path for agent 11 updated, resulting length: 35
[DBG]  Update the agent path 28 | Original local length: 5 | New local length: 4
[DBG]  agent 28 t=0 => decoded (sx,sy)=(2,2) => global_id=817
[DBG]  agent 28 t=1 => decoded (sx,sy)=(2,3) => global_id=818
[DBG]  agent 28 t=2 => decoded (sx,sy)=(2,4) => global_id=819
[DBG]  agent 28 t=3 => decoded (sx,sy)=(1,4) => global_id=787
[DBG]  Complete path of agent 28:
[DBG]    Original: 661 661 661 661 661 660 660 692 724 725 725 724 692 660 660 660 660 659 658 659 660 692 724 756 755 787 819 818 817 817 818 786 786 787 788 756 724 725 726 727 
[DBG]    New:     661 661 661 661 661 660 660 692 724 725 725 724 692 660 660 660 660 659 658 659 660 692 724 756 755 787 819 818 817 817 818 819 787 788 756 724 725 726 727 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 661 661 661 661 661 660 660 692 724 725 725 724 692 660 660 660 660 659 658 659 660 692 724 756 755 787 819 818 817 
[DBG]    Local path (in submap): 817 818 819 787 788 
[DBG]    Suffix (out of submap): 756 724 725 726 727 
[DBG]  Original agent path length 28 je: 40
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 4: 661, 661, 661, 661, 661, 660, 660, 692, 724, 725, 725, 724, 692, 660, 660, 660, 660, 659, 658, 659, 660, 692, 724, 756, 755, 787, 819, 818, 817, 817, 818, 819, 787, 788, 756, 724, 725, 726, 727, 
[DBG]  Path for agent 28 updated, resulting length: 39
[DBG]  Update the agent path 45 | Original local length: 3 | New local length: 3
[DBG]  agent 45 t=0 => decoded (sx,sy)=(2,3) => global_id=818
[DBG]  agent 45 t=1 => decoded (sx,sy)=(3,3) => global_id=850
[DBG]  agent 45 t=2 => decoded (sx,sy)=(3,2) => global_id=849
[DBG]  Complete path of agent 45:
[DBG]    Original: 153 185 184 216 248 247 279 311 343 375 407 407 439 438 437 469 501 533 565 597 629 661 660 692 724 756 788 787 786 818 850 849 
[DBG]    New:     153 185 184 216 248 247 279 311 343 375 407 407 439 438 437 469 501 533 565 597 629 661 660 692 724 756 788 787 786 818 850 849 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 153 185 184 216 248 247 279 311 343 375 407 407 439 438 437 469 501 533 565 597 629 661 660 692 724 756 788 787 786 
[DBG]    Local path (in submap): 818 850 849 
[DBG]    Suffix (out of submap): 
[DBG]  Original agent path length 45 je: 32
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 5: 153, 185, 184, 216, 248, 247, 279, 311, 343, 375, 407, 407, 439, 438, 437, 469, 501, 533, 565, 597, 629, 661, 660, 692, 724, 756, 788, 787, 786, 818, 850, 849, 
[DBG]  Path for agent 45 updated, resulting length: 32
[DBG]  Update the agent path 57 | Original local length: 6 | New local length: 6
[DBG]  agent 57 t=0 => decoded (sx,sy)=(0,4) => global_id=755
[DBG]  agent 57 t=1 => decoded (sx,sy)=(1,4) => global_id=787
[DBG]  agent 57 t=2 => decoded (sx,sy)=(1,3) => global_id=786
[DBG]  agent 57 t=3 => decoded (sx,sy)=(2,3) => global_id=818
[DBG]  agent 57 t=4 => decoded (sx,sy)=(3,3) => global_id=850
[DBG]  agent 57 t=5 => decoded (sx,sy)=(4,3) => global_id=882
[DBG]  Complete path of agent 57:
[DBG]    Original: 185 217 249 281 313 345 345 377 376 376 375 375 407 439 438 470 470 469 501 533 565 597 629 628 660 692 692 724 756 755 787 819 818 850 882 914 913 912 944 976 977 
[DBG]    New:     185 217 249 281 313 345 345 377 376 376 375 375 407 439 438 470 470 469 501 533 565 597 629 628 660 692 692 724 756 755 787 786 818 850 882 914 913 912 944 976 977 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 185 217 249 281 313 345 345 377 376 376 375 375 407 439 438 470 470 469 501 533 565 597 629 628 660 692 692 724 756 
[DBG]    Local path (in submap): 755 787 786 818 850 882 
[DBG]    Suffix (out of submap): 914 913 912 944 976 977 
[DBG]  Original agent path length 57 je: 41
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 6: 185, 217, 249, 281, 313, 345, 345, 377, 376, 376, 375, 375, 407, 439, 438, 470, 470, 469, 501, 533, 565, 597, 629, 628, 660, 692, 692, 724, 756, 755, 787, 786, 818, 850, 882, 914, 913, 912, 944, 976, 977, 
[DBG]  Path for agent 57 updated, resulting length: 41
[DBG]  Update the agent path 83 | Original local length: 5 | New local length: 5
[DBG]  agent 83 t=0 => decoded (sx,sy)=(1,0) => global_id=783
[DBG]  agent 83 t=1 => decoded (sx,sy)=(2,0) => global_id=815
[DBG]  agent 83 t=2 => decoded (sx,sy)=(3,0) => global_id=847
[DBG]  agent 83 t=3 => decoded (sx,sy)=(4,0) => global_id=879
[DBG]  agent 83 t=4 => decoded (sx,sy)=(4,1) => global_id=880
[DBG]  Complete path of agent 83:
[DBG]    Original: 18 50 82 81 113 112 144 176 208 207 239 271 303 335 367 366 398 430 462 494 526 558 590 591 623 655 687 719 751 783 815 847 879 880 912 944 976 977 1009 
[DBG]    New:     18 50 82 81 113 112 144 176 208 207 239 271 303 335 367 366 398 430 462 494 526 558 590 591 623 655 687 719 751 783 815 847 879 880 912 944 976 977 1009 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 18 50 82 81 113 112 144 176 208 207 239 271 303 335 367 366 398 430 462 494 526 558 590 591 623 655 687 719 751 
[DBG]    Local path (in submap): 783 815 847 879 880 
[DBG]    Suffix (out of submap): 912 944 976 977 1009 
[DBG]  Original agent path length 83 je: 39
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 7: 18, 50, 82, 81, 113, 112, 144, 176, 208, 207, 239, 271, 303, 335, 367, 366, 398, 430, 462, 494, 526, 558, 590, 591, 623, 655, 687, 719, 751, 783, 815, 847, 879, 880, 912, 944, 976, 977, 1009, 
[DBG]  Path for agent 83 updated, resulting length: 39
[DBG]  Paths successfully updated.
[DBG]  (LNS.cpp) New path for agent 0: 
[DBG]  517, 549, 550, 551, 583, 615, 647, 648, 649, 650, 682, 714, 746, 778, 810, 811, 843, 875, 876, 877, 878, 878, 846, 878, 879, 847, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 856, 857, 858, 859, 860, 861, 862, 830, 798, 799, 
[DBG]  (LNS.cpp) New path for agent 1: 
[DBG]  949, 949, 949, 949, 949, 948, 980, 948, 948, 948, 948, 948, 948, 948, 948, 948, 948, 948, 948, 948, 916, 884, 883, 883, 883, 883, 883, 883, 851, 819, 820, 821, 822, 823, 824, 792, 793, 761, 729, 728, 
[DBG]  (LNS.cpp) New path for agent 3: 
[DBG]  468, 468, 468, 468, 468, 468, 468, 468, 468, 468, 468, 468, 469, 469, 469, 501, 533, 565, 597, 629, 661, 660, 692, 724, 756, 755, 755, 755, 787, 787, 819, 851, 883, 882, 914, 946, 914, 913, 912, 
[DBG]  (LNS.cpp) New path for agent 11: 
[DBG]  990, 990, 990, 990, 990, 989, 988, 956, 955, 923, 923, 891, 890, 858, 857, 856, 824, 823, 822, 821, 820, 819, 851, 850, 849, 848, 847, 815, 783, 784, 752, 720, 721, 689, 657, 
[DBG]  (LNS.cpp) New path for agent 28: 
[DBG]  661, 661, 661, 661, 661, 660, 660, 692, 724, 725, 725, 724, 692, 660, 660, 660, 660, 659, 658, 659, 660, 692, 724, 756, 755, 787, 819, 818, 817, 817, 818, 819, 787, 788, 756, 724, 725, 726, 727, 
[DBG]  (LNS.cpp) New path for agent 45: 
[DBG]  153, 185, 184, 216, 248, 247, 279, 311, 343, 375, 407, 407, 439, 438, 437, 469, 501, 533, 565, 597, 629, 661, 660, 692, 724, 756, 788, 787, 786, 818, 850, 849, 
[DBG]  (LNS.cpp) New path for agent 57: 
[DBG]  185, 217, 249, 281, 313, 345, 345, 377, 376, 376, 375, 375, 407, 439, 438, 470, 470, 469, 501, 533, 565, 597, 629, 628, 660, 692, 692, 724, 756, 755, 787, 786, 818, 850, 882, 914, 913, 912, 944, 976, 977, 
[DBG]  (LNS.cpp) New path for agent 83: 
[DBG]  18, 50, 82, 81, 113, 112, 144, 176, 208, 207, 239, 271, 303, 335, 367, 366, 398, 430, 462, 494, 526, 558, 590, 591, 623, 655, 687, 719, 751, 783, 815, 847, 879, 880, 912, 944, 976, 977, 1009, 
[DBG]  Delta value: 0.00328947
[DBG]  Rewarding metric index = 0
[DBG]  component_weights = {0.999744, 0.000119357, 6.91015e-05, 6.7096e-05}
[DBG]  opSuccess value: 1
[STAT] neighbor.sum_of_costs before recomputation: 303
[STAT] neighbor.old_sum_of_costs before recomputation: 304
[STAT] sum_of_costs before recomputation: 4368
[DBG]  Validate solution immediately after SAT success.
[WARNING] Problem after SAT: Vertex conflict between agents 26 and 28 at location 756 at timestep 34
[DBG]  [DEBUG] Attempting immediate repair via init_lns because problem occurred after SAT (should be applied only for conflicts...).
[DBG]  [DEBUG] Passing 150 agents to init_lns (skip=true).
[DBG]  [DEBUG] path_table contents for selected agents (neighbor.agents):
[DBG]    Agent 0 => controlling path length=46
[DBG]    Agent 1 => controlling path length=40
[DBG]    Agent 3 => controlling path length=39
[DBG]    Agent 11 => controlling path length=35
[DBG]    Agent 28 => controlling path length=39
[DBG]    Agent 45 => controlling path length=32
[DBG]    Agent 57 => controlling path length=41
[DBG]    Agent 83 => controlling path length=39
[DBG]  hodnota skip_initial_solution=1
[DBG]  We skip initialSolution => call buildCollisionData()
[DBG]  buildCollisionData() called â€“ skip_initial_solution case.
[DBG]  Agents.size()=150, collision_graph.size()=150
[DBG]  agent 26 => updateCollidingPairs => foundCollision
[DBG]  agent 28 => updateCollidingPairs => foundCollision
[DBG]  agent 42 => updateCollidingPairs => foundCollision
[DBG]  agent 44 => updateCollidingPairs => foundCollision
[DBG]  agent 53 => updateCollidingPairs => foundCollision
[DBG]  Conflicting agent pairs:
[DBG]  agent 26 is in conflict with agent 28
[DBG]  agent 28 is in conflict with agent 42
[DBG]  agent 28 is in conflict with agent 44
[DBG]  agent 28 is in conflict with agent 53
[DBG]  buildCollisionData() => sum_of_costs=4367, num_of_colliding_pairs=4
[DBG]  buildCollisionData done => sum_of_costs=4367, num_of_colliding_pairs=4
[DBG]  sum_of_cost hodnota: 4367
[DBG]  After skip/init build => iteration_stats.back(): sum_of_costs=4367, collisions=4
[DEBUG] Using default neighbor generation strategy for conflicts: 0
	InitLNS(PP): runtime = 0.000947625, iterations = 2, colliding pairs = 0, initial colliding pairs = 4, solution cost = 4365, initial solution cost = 4367, failed iterations = 0
[DBG]  [DEBUG] init_lns->sum_of_costs after init_lns->run: 4365
[DBG]  [DEBUG] sum_of_costs after assignment from init_lns->run: 4365
[DBG]  Recomputing sum_of_cost by dividing neighbor.sum_of_costs and neighbor.old_sum_of_costs
[STAT] sum_of_costs after recomputation: 4365
[STAT] Iteration 96
[DBG]  Using SAT operator (destroy+repair SAT).
[DBG]  ====================
[DBG]  SAT destroy operator called.
[DBG]  SAT heuristic: 2
[DBG]  key_agent_id: 28
[DBG]  key_agent_id global path length: 40
[DBG]  Submap content (global positions):
[DBG]  658 659 660 661 662 
[DBG]  690 691 692 693 694 
[DBG]  722 723 724 725 726 
[DBG]  754 755 756 757 758 
[DBG]  786 787 788 789 790 
[DBG]  Map content with agents and obstacles:
[DBG]  . . . . X 
[DBG]  X A . X X 
[DBG]  . X A A . 
[DBG]  X . . . X 
[DBG]  . . . X . 
[DBG]  content of the map structure that we pass to the SAT solver:
[DBG]  1  1  1  1  -1  
[DBG]  -1  1  1  -1  -1  
[DBG]  1  -1  1  1  1  
[DBG]  -1  1  1  1  -1  
[DBG]  1  1  1  -1  1  
[DBG]  Identifying agents in a submap for rescheduling (when key_agent is there at the time 36):
[DBG]  Agent 1 found intervals in the sub-map:
[DBG]  
[DBG]  Agent 1 is not in sub-map at time 36 (intervals: 
[DBG]  )
[DBG]  Agent 26 found intervals in the sub-map:
[DBG]   [29..33]
[DBG]  Agent 26 is not in sub-map at time 36 (intervals: 
[DBG]  [29..33] )
[DBG]  Agent 28 found intervals in the sub-map:
[DBG]   [0..25] [28..28] [31..38]
[DBG]  Agent 28 (interval in submap: [31..38]) contains time 36, added to replan.
[DBG]  Agent 42 found intervals in the sub-map:
[DBG]   [31..37]
[DBG]  Agent 42 (interval in submap: [31..37]) contains time 36, added to replan.
[DBG]  Agent 44 found intervals in the sub-map:
[DBG]   [27..32]
[DBG]  Agent 44 is not in sub-map at time 36 (intervals: 
[DBG]  [27..32] )
[DBG]  Agent 45 found intervals in the sub-map:
[DBG]   [21..28]
[DBG]  Agent 45 is not in sub-map at time 36 (intervals: 
[DBG]  [21..28] )
[DBG]  Agent 69 found intervals in the sub-map:
[DBG]   [34..40]
[DBG]  Agent 69 (interval in submap: [34..40]) contains time 36, added to replan.
[DBG]  Agent 148 found intervals in the sub-map:
[DBG]   [32..34]
[DBG]  Agent 148 is not in sub-map at time 36 (intervals: 
[DBG]  [32..34] )
[DBG]  Agent 28 | Start (global): 724 -> (local): (2, 2) at time 36 | Goal (global): 726 -> (local): (2, 4) at time 38
[DBG]  Agent 42 | Start (global): 725 -> (local): (2, 3) at time 36 | Goal (global): 726 -> (local): (2, 4) at time 37
[DBG]  Agent 69 | Start (global): 691 -> (local): (1, 1) at time 36 | Goal (global): 788 -> (local): (4, 2) at time 40
[DBG]  [REPAIR] SAT destroy operator called.
[DBG]  [REPAIR] SAT operator â€“ launching subproblem FOR OPTIMIZATION.
[DBG]  Creating local paths (sx, sy) in the submap for T_sync = 36
[DBG]    Agent 28 (global paths from T=36 to 38) has local path: (2,2) (2,3) (2,4) 
[DBG]    Agent 42 (global paths from T=36 to 37) has local path: (2,3) (2,4) 
[DBG]    Agent 69 (global paths from T=36 to 40) has local path: (1,1) (1,2) (2,2) (3,2) (4,2) 
[DBG]  Checking input data for SAT solver:
[DBG]    - Number of agents to replan: 3
[DBG]  Agent 28 has the original local path length: 3 => Start (2,2), Goal (2,4)
[DBG]  Agent 42 has the original local path length: 2 => Start (2,3), Goal (2,4)
[DBG]  Agent 69 has the original local path length: 5 => Start (1,1), Goal (4,2)
[DBG]  Start position: (2, 2), (2, 3), (1, 1), 
[DBG]  Goal position: (2, 4), (2, 4), (4, 2), 
[DBG]  SAT instance and solver created.
Currently solving
Instance name: scen
Map name: map
Encoding used: disappear_at_goal
SAT solver used: Kissat
Optimizing function: sum of costs
Number of agents: 3
Mks LB: 5
SoC LB: 10
Delta: 0
Remaining time: 300000 [ms]

Vertex conflict! Agents 0, 1, timestep 3, location 0
Swapping conflict! Agents 0, 1, timestep 3, edge (0,0)
Vertex conflict! Agents 0, 1, timestep 4, location 0
Found plan [agents = 3] [timesteps = 5]
Agent #0 : 7 8 9 0 0 
Agent #1 : 8 9 0 0 0 
Agent #2 : 4 5 7 11 15 

[STAT] Solver returned: 0
[DBG]  Agent (index) 28 | New local path (submap idx):
[DBG]  7 8 9 
[DBG]  Agent (index) 42 | New local path (submap idx):
[DBG]  8 9 
[DBG]  Agent (index) 69 | New local path (submap idx):
[DBG]  4 5 7 11 15 
[DBG]  Update the agent path 28 | Original local length: 3 | New local length: 3
[DBG]  agent 28 t=0 => decoded (sx,sy)=(2,2) => global_id=724
[DBG]  agent 28 t=1 => decoded (sx,sy)=(2,3) => global_id=725
[DBG]  agent 28 t=2 => decoded (sx,sy)=(2,4) => global_id=726
[DBG]  Complete path of agent 28:
[DBG]    Original: 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 660 692 691 692 724 756 788 787 819 819 787 819 819 787 786 787 788 756 724 725 726 727 
[DBG]    New:     661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 660 692 691 692 724 756 788 787 819 819 787 819 819 787 786 787 788 756 724 725 726 727 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 660 692 691 692 724 756 788 787 819 819 787 819 819 787 786 787 788 756 
[DBG]    Local path (in submap): 724 725 726 
[DBG]    Suffix (out of submap): 727 
[DBG]  Original agent path length 28 je: 40
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 0: 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 660, 692, 691, 692, 724, 756, 788, 787, 819, 819, 787, 819, 819, 787, 786, 787, 788, 756, 724, 725, 726, 727, 
[DBG]  Path for agent 28 updated, resulting length: 40
[DBG]  Update the agent path 42 | Original local length: 2 | New local length: 2
[DBG]  agent 42 t=0 => decoded (sx,sy)=(2,3) => global_id=725
[DBG]  agent 42 t=1 => decoded (sx,sy)=(2,4) => global_id=726
[DBG]  Complete path of agent 42:
[DBG]    Original: 224 256 257 289 321 353 354 355 356 357 358 359 360 361 362 363 395 427 428 429 430 431 432 464 496 528 560 561 593 625 657 658 659 660 692 724 725 726 727 759 
[DBG]    New:     224 256 257 289 321 353 354 355 356 357 358 359 360 361 362 363 395 427 428 429 430 431 432 464 496 528 560 561 593 625 657 658 659 660 692 724 725 726 727 759 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 224 256 257 289 321 353 354 355 356 357 358 359 360 361 362 363 395 427 428 429 430 431 432 464 496 528 560 561 593 625 657 658 659 660 692 724 
[DBG]    Local path (in submap): 725 726 
[DBG]    Suffix (out of submap): 727 759 
[DBG]  Original agent path length 42 je: 40
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 1: 224, 256, 257, 289, 321, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 395, 427, 428, 429, 430, 431, 432, 464, 496, 528, 560, 561, 593, 625, 657, 658, 659, 660, 692, 724, 725, 726, 727, 759, 
[DBG]  Path for agent 42 updated, resulting length: 40
[DBG]  Update the agent path 69 | Original local length: 5 | New local length: 5
[DBG]  agent 69 t=0 => decoded (sx,sy)=(1,1) => global_id=691
[DBG]  agent 69 t=1 => decoded (sx,sy)=(1,2) => global_id=692
[DBG]  agent 69 t=2 => decoded (sx,sy)=(2,2) => global_id=724
[DBG]  agent 69 t=3 => decoded (sx,sy)=(3,2) => global_id=756
[DBG]  agent 69 t=4 => decoded (sx,sy)=(4,2) => global_id=788
[DBG]  Complete path of agent 69:
[DBG]    Original: 4 5 6 7 8 9 41 42 74 106 138 139 140 172 204 236 237 269 301 333 365 366 398 430 462 494 526 558 590 591 592 593 625 657 658 659 691 692 724 756 788 820 
[DBG]    New:     4 5 6 7 8 9 41 42 74 106 138 139 140 172 204 236 237 269 301 333 365 366 398 430 462 494 526 558 590 591 592 593 625 657 658 659 691 692 724 756 788 820 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 4 5 6 7 8 9 41 42 74 106 138 139 140 172 204 236 237 269 301 333 365 366 398 430 462 494 526 558 590 591 592 593 625 657 658 659 
[DBG]    Local path (in submap): 691 692 724 756 788 
[DBG]    Suffix (out of submap): 820 
[DBG]  Original agent path length 69 je: 42
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 2: 4, 5, 6, 7, 8, 9, 41, 42, 74, 106, 138, 139, 140, 172, 204, 236, 237, 269, 301, 333, 365, 366, 398, 430, 462, 494, 526, 558, 590, 591, 592, 593, 625, 657, 658, 659, 691, 692, 724, 756, 788, 820, 
[DBG]  Path for agent 69 updated, resulting length: 42
[DBG]  Paths successfully updated.
[DBG]  (LNS.cpp) New path for agent 28: 
[DBG]  661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 660, 692, 691, 692, 724, 756, 788, 787, 819, 819, 787, 819, 819, 787, 786, 787, 788, 756, 724, 725, 726, 727, 
[DBG]  (LNS.cpp) New path for agent 42: 
[DBG]  224, 256, 257, 289, 321, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 395, 427, 428, 429, 430, 431, 432, 464, 496, 528, 560, 561, 593, 625, 657, 658, 659, 660, 692, 724, 725, 726, 727, 759, 
[DBG]  (LNS.cpp) New path for agent 69: 
[DBG]  4, 5, 6, 7, 8, 9, 41, 42, 74, 106, 138, 139, 140, 172, 204, 236, 237, 269, 301, 333, 365, 366, 398, 430, 462, 494, 526, 558, 590, 591, 592, 593, 625, 657, 658, 659, 691, 692, 724, 756, 788, 820, 
[DBG]  Delta value: 0
[DBG]  Rewarding metric index = 0
[DBG]  component_weights = {0.999757, 0.000113391, 6.56473e-05, 6.37421e-05}
[DBG]  opSuccess value: 1
[STAT] neighbor.sum_of_costs before recomputation: 119
[STAT] neighbor.old_sum_of_costs before recomputation: 119
[STAT] sum_of_costs before recomputation: 4365
[DBG]  Validate solution immediately after SAT success.
[DBG]  No problems after SAT replan.
[DBG]  Recomputing sum_of_cost by dividing neighbor.sum_of_costs and neighbor.old_sum_of_costs
[STAT] sum_of_costs after recomputation: 4365
[STAT] Iteration 97
[DBG]  Using SAT operator (destroy+repair SAT).
[DBG]  ====================
[DBG]  SAT destroy operator called.
[DBG]  SAT heuristic: 2
[DBG]  key_agent_id: 28
[DBG]  key_agent_id global path length: 40
[DBG]  Submap content (global positions):
[DBG]  595 596 597 598 599 
[DBG]  627 628 629 630 631 
[DBG]  659 660 661 662 663 
[DBG]  691 692 693 694 695 
[DBG]  723 724 725 726 727 
[DBG]  Map content with agents and obstacles:
[DBG]  X . . X . 
[DBG]  . . . X . 
[DBG]  . A A X X 
[DBG]  . . X X X 
[DBG]  X . . . A 
[DBG]  content of the map structure that we pass to the SAT solver:
[DBG]  -1  1  1  -1  1  
[DBG]  1  1  1  -1  1  
[DBG]  1  1  1  -1  -1  
[DBG]  1  1  -1  -1  -1  
[DBG]  -1  1  1  1  1  
[DBG]  Identifying agents in a submap for rescheduling (when key_agent is there at the time 8):
[DBG]  Agent 28 found intervals in the sub-map:
[DBG]   [0..22] [36..39]
[DBG]  Agent 28 (interval in submap: [0..22]) contains time 8, added to replan.
[DBG]  Agent 63 found intervals in the sub-map:
[DBG]  
[DBG]  Agent 63 is not in sub-map at time 8 (intervals: 
[DBG]  )
[DBG]  Agent 89 found intervals in the sub-map:
[DBG]   [5..10]
[DBG]  Agent 89 (interval in submap: [5..10]) contains time 8, added to replan.
[DBG]  Agent 91 found intervals in the sub-map:
[DBG]   [6..8]
[DBG]  Agent 91 (interval in submap: [6..8]) contains time 8, added to replan.
[DBG]  Agent 131 found intervals in the sub-map:
[DBG]  
[DBG]  Agent 131 is not in sub-map at time 8 (intervals: 
[DBG]  )
[DBG]  Agent 28 | Start (global): 661 -> (local): (2, 2) at time 8 | Goal (global): 724 -> (local): (4, 1) at time 22
[DBG]  Agent 89 | Start (global): 660 -> (local): (2, 1) at time 8 | Goal (global): 724 -> (local): (4, 1) at time 10
[DBG]  Agent 91 | Start (global): 727 -> (local): (4, 4) at time 8 | Goal (global): 727 -> (local): (4, 4) at time 8
[DBG]  [REPAIR] SAT destroy operator called.
[DBG]  [REPAIR] SAT operator â€“ launching subproblem FOR OPTIMIZATION.
[DBG]  Creating local paths (sx, sy) in the submap for T_sync = 8
[DBG]    Agent 28 (global paths from T=8 to 22) has local path: (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,1) (3,1) (3,0) (3,1) (4,1) 
[DBG]    Agent 89 (global paths from T=8 to 10) has local path: (2,1) (3,1) (4,1) 
[DBG]    Agent 91 (global paths from T=8 to 8) has local path: (4,4) 
[DBG]  Checking input data for SAT solver:
[DBG]    - Number of agents to replan: 3
[DBG]  Agent 28 has the original local path length: 15 => Start (2,2), Goal (4,1)
[DBG]  Agent 89 has the original local path length: 3 => Start (2,1), Goal (4,1)
[DBG]  Agent 91 has the original local path length: 1 => Start (4,4), Goal (4,4)
[DBG]  Start position: (2, 2), (2, 1), (4, 4), 
[DBG]  Goal position: (4, 1), (4, 1), (4, 4), 
[DBG]  SAT instance and solver created.
Currently solving
Instance name: scen
Map name: map
Encoding used: disappear_at_goal
SAT solver used: Kissat
Optimizing function: sum of costs
Number of agents: 3
Mks LB: 4
SoC LB: 8
Delta: 0
Remaining time: 300000 [ms]

Vertex conflict! Agents 1, 2, timestep 3, location 0
Found plan [agents = 3] [timesteps = 4]
Agent #0 : 9 8 11 12 
Agent #1 : 8 11 12 0 
Agent #2 : 15 0 0 0 

[STAT] Solver returned: 0
[DBG]  Agent (index) 28 | New local path (submap idx):
[DBG]  9 8 11 12 
[DBG]  Agent (index) 89 | New local path (submap idx):
[DBG]  8 11 12 
[DBG]  Agent (index) 91 | New local path (submap idx):
[DBG]  15 
[DBG]  Update the agent path 28 | Original local length: 15 | New local length: 4
[DBG]  agent 28 t=0 => decoded (sx,sy)=(2,2) => global_id=661
[DBG]  agent 28 t=1 => decoded (sx,sy)=(2,1) => global_id=660
[DBG]  agent 28 t=2 => decoded (sx,sy)=(3,1) => global_id=692
[DBG]  agent 28 t=3 => decoded (sx,sy)=(4,1) => global_id=724
[DBG]  Complete path of agent 28:
[DBG]    Original: 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 660 692 691 692 724 756 788 787 819 819 787 819 819 787 786 787 788 756 724 725 726 727 
[DBG]    New:     661 661 661 661 661 661 661 661 661 660 692 724 756 788 787 819 819 787 819 819 787 786 787 788 756 724 725 726 727 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 661 661 661 661 661 661 661 661 
[DBG]    Local path (in submap): 661 660 692 724 756 788 787 819 819 787 819 819 787 786 787 
[DBG]    Suffix (out of submap): 788 756 724 725 726 727 
[DBG]  Original agent path length 28 je: 40
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 0: 661, 661, 661, 661, 661, 661, 661, 661, 661, 660, 692, 724, 756, 788, 787, 819, 819, 787, 819, 819, 787, 786, 787, 788, 756, 724, 725, 726, 727, 
[DBG]  Path for agent 28 updated, resulting length: 29
[DBG]  Update the agent path 89 | Original local length: 3 | New local length: 3
[DBG]  agent 89 t=0 => decoded (sx,sy)=(2,1) => global_id=660
[DBG]  agent 89 t=1 => decoded (sx,sy)=(3,1) => global_id=692
[DBG]  agent 89 t=2 => decoded (sx,sy)=(4,1) => global_id=724
[DBG]  Complete path of agent 89:
[DBG]    Original: 437 469 501 533 565 597 596 628 660 692 724 756 788 788 788 820 821 822 854 886 918 950 982 1014 1015 
[DBG]    New:     437 469 501 533 565 597 596 628 660 692 724 756 788 788 788 820 821 822 854 886 918 950 982 1014 1015 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 437 469 501 533 565 597 596 628 
[DBG]    Local path (in submap): 660 692 724 
[DBG]    Suffix (out of submap): 756 788 788 788 820 821 822 854 886 918 950 982 1014 1015 
[DBG]  Original agent path length 89 je: 25
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 1: 437, 469, 501, 533, 565, 597, 596, 628, 660, 692, 724, 756, 788, 788, 788, 820, 821, 822, 854, 886, 918, 950, 982, 1014, 1015, 
[DBG]  Path for agent 89 updated, resulting length: 25
[DBG]  Update the agent path 91 | Original local length: 1 | New local length: 1
[DBG]  agent 91 t=0 => decoded (sx,sy)=(4,4) => global_id=727
[DBG]  Complete path of agent 91:
[DBG]    Original: 787 819 787 755 756 757 725 726 727 728 696 664 632 600 601 569 570 570 571 539 507 508 476 476 476 476 476 476 508 507 475 443 411 411 411 411 411 379 380 381 
[DBG]    New:     787 819 787 755 756 757 725 726 727 728 696 664 632 600 601 569 570 570 571 539 507 508 476 476 476 476 476 476 508 507 475 443 411 411 411 411 411 379 380 381 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 787 819 787 755 756 757 725 726 
[DBG]    Local path (in submap): 727 
[DBG]    Suffix (out of submap): 728 696 664 632 600 601 569 570 570 571 539 507 508 476 476 476 476 476 476 508 507 475 443 411 411 411 411 411 379 380 381 
[DBG]  Original agent path length 91 je: 40
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 2: 787, 819, 787, 755, 756, 757, 725, 726, 727, 728, 696, 664, 632, 600, 601, 569, 570, 570, 571, 539, 507, 508, 476, 476, 476, 476, 476, 476, 508, 507, 475, 443, 411, 411, 411, 411, 411, 379, 380, 381, 
[DBG]  Path for agent 91 updated, resulting length: 40
[DBG]  Paths successfully updated.
[DBG]  (LNS.cpp) New path for agent 28: 
[DBG]  661, 661, 661, 661, 661, 661, 661, 661, 661, 660, 692, 724, 756, 788, 787, 819, 819, 787, 819, 819, 787, 786, 787, 788, 756, 724, 725, 726, 727, 
[DBG]  (LNS.cpp) New path for agent 89: 
[DBG]  437, 469, 501, 533, 565, 597, 596, 628, 660, 692, 724, 756, 788, 788, 788, 820, 821, 822, 854, 886, 918, 950, 982, 1014, 1015, 
[DBG]  (LNS.cpp) New path for agent 91: 
[DBG]  787, 819, 787, 755, 756, 757, 725, 726, 727, 728, 696, 664, 632, 600, 601, 569, 570, 570, 571, 539, 507, 508, 476, 476, 476, 476, 476, 476, 508, 507, 475, 443, 411, 411, 411, 411, 411, 379, 380, 381, 
[DBG]  Delta value: 0.107843
[DBG]  Rewarding metric index = 0
[DBG]  component_weights = {0.999792, 9.72386e-05, 5.62959e-05, 5.46621e-05}
[DBG]  opSuccess value: 1
[STAT] neighbor.sum_of_costs before recomputation: 91
[STAT] neighbor.old_sum_of_costs before recomputation: 102
[STAT] sum_of_costs before recomputation: 4365
[DBG]  Validate solution immediately after SAT success.
[WARNING] Problem after SAT: Edge conflict between agents 28 and 3 at edge (724,725) at timestep 26
[DBG]  [DEBUG] Attempting immediate repair via init_lns because problem occurred after SAT (should be applied only for conflicts...).
[DBG]  [DEBUG] Passing 150 agents to init_lns (skip=true).
[DBG]  [DEBUG] path_table contents for selected agents (neighbor.agents):
[DBG]    Agent 28 => controlling path length=29
[DBG]    Agent 89 => controlling path length=25
[DBG]    Agent 91 => controlling path length=40
[DBG]  hodnota skip_initial_solution=1
[DBG]  We skip initialSolution => call buildCollisionData()
[DBG]  buildCollisionData() called â€“ skip_initial_solution case.
[DBG]  Agents.size()=150, collision_graph.size()=150
[DBG]  agent 3 => updateCollidingPairs => foundCollision
[DBG]  agent 28 => updateCollidingPairs => foundCollision
[DBG]  agent 42 => updateCollidingPairs => foundCollision
[DBG]  agent 45 => updateCollidingPairs => foundCollision
[DBG]  agent 70 => updateCollidingPairs => foundCollision
[DBG]  agent 71 => updateCollidingPairs => foundCollision
[DBG]  agent 89 => updateCollidingPairs => foundCollision
[DBG]  Conflicting agent pairs:
[DBG]  agent 3 is in conflict with agent 28
[DBG]  agent 28 is in conflict with agent 42
[DBG]  agent 28 is in conflict with agent 45
[DBG]  agent 28 is in conflict with agent 70
[DBG]  agent 28 is in conflict with agent 71
[DBG]  agent 28 is in conflict with agent 89
[DBG]  buildCollisionData() => sum_of_costs=4354, num_of_colliding_pairs=6
[DBG]  buildCollisionData done => sum_of_costs=4354, num_of_colliding_pairs=6
[DBG]  sum_of_cost hodnota: 4354
[DBG]  After skip/init build => iteration_stats.back(): sum_of_costs=4354, collisions=6
[DEBUG] Using default neighbor generation strategy for conflicts: 2
[DEBUG] Using default neighbor generation strategy for conflicts: 2
	InitLNS(PP): runtime = 0.00229937, iterations = 3, colliding pairs = 0, initial colliding pairs = 6, solution cost = 4361, initial solution cost = 4354, failed iterations = 0
[DBG]  [DEBUG] init_lns->sum_of_costs after init_lns->run: 4361
[DBG]  [DEBUG] sum_of_costs after assignment from init_lns->run: 4361
[DBG]  Recomputing sum_of_cost by dividing neighbor.sum_of_costs and neighbor.old_sum_of_costs
[STAT] sum_of_costs after recomputation: 4361
[STAT] Iteration 98
[DBG]  Using SAT operator (destroy+repair SAT).
[DBG]  ====================
[DBG]  SAT destroy operator called.
[DBG]  SAT heuristic: 2
[DBG]  key_agent_id: 28
[DBG]  key_agent_id global path length: 40
[DBG]  Submap content (global positions):
[DBG]  595 596 597 598 599 
[DBG]  627 628 629 630 631 
[DBG]  659 660 661 662 663 
[DBG]  691 692 693 694 695 
[DBG]  723 724 725 726 727 
[DBG]  Map content with agents and obstacles:
[DBG]  X . A X . 
[DBG]  . . . X . 
[DBG]  . . A X X 
[DBG]  . A X X X 
[DBG]  X . A . . 
[DBG]  content of the map structure that we pass to the SAT solver:
[DBG]  -1  1  1  -1  1  
[DBG]  1  1  1  -1  1  
[DBG]  1  1  1  -1  -1  
[DBG]  1  1  -1  -1  -1  
[DBG]  -1  1  1  1  1  
[DBG]  Identifying agents in a submap for rescheduling (when key_agent is there at the time 5):
[DBG]  Agent 28 found intervals in the sub-map:
[DBG]   [0..22] [36..39]
[DBG]  Agent 28 (interval in submap: [0..22]) contains time 5, added to replan.
[DBG]  Agent 46 found intervals in the sub-map:
[DBG]   [4..7]
[DBG]  Agent 46 (interval in submap: [4..7]) contains time 5, added to replan.
[DBG]  Agent 89 found intervals in the sub-map:
[DBG]   [5..10]
[DBG]  Agent 89 (interval in submap: [5..10]) contains time 5, added to replan.
[DBG]  Agent 108 found intervals in the sub-map:
[DBG]   [0..7]
[DBG]  Agent 108 (interval in submap: [0..7]) contains time 5, added to replan.
[DBG]  Agent 28 | Start (global): 661 -> (local): (2, 2) at time 5 | Goal (global): 724 -> (local): (4, 1) at time 22
[DBG]  Agent 46 | Start (global): 725 -> (local): (4, 2) at time 5 | Goal (global): 727 -> (local): (4, 4) at time 7
[DBG]  Agent 89 | Start (global): 597 -> (local): (0, 2) at time 5 | Goal (global): 724 -> (local): (4, 1) at time 10
[DBG]  Agent 108 | Start (global): 692 -> (local): (3, 1) at time 5 | Goal (global): 724 -> (local): (4, 1) at time 7
[DBG]  [REPAIR] SAT destroy operator called.
[DBG]  [REPAIR] SAT operator â€“ launching subproblem FOR OPTIMIZATION.
[DBG]  Creating local paths (sx, sy) in the submap for T_sync = 5
[DBG]    Agent 28 (global paths from T=5 to 22) has local path: (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,1) (2,0) (2,1) (3,1) (4,1) 
[DBG]    Agent 46 (global paths from T=5 to 7) has local path: (4,2) (4,3) (4,4) 
[DBG]    Agent 89 (global paths from T=5 to 10) has local path: (0,2) (0,1) (1,1) (2,1) (3,1) (4,1) 
[DBG]    Agent 108 (global paths from T=5 to 7) has local path: (3,1) (3,1) (4,1) 
[DBG]  Checking input data for SAT solver:
[DBG]    - Number of agents to replan: 4
[DBG]  Agent 28 has the original local path length: 18 => Start (2,2), Goal (4,1)
[DBG]  Agent 46 has the original local path length: 3 => Start (4,2), Goal (4,4)
[DBG]  Agent 89 has the original local path length: 6 => Start (0,2), Goal (4,1)
[DBG]  Agent 108 has the original local path length: 3 => Start (3,1), Goal (4,1)
[DBG]  Start position: (2, 2), (4, 2), (0, 2), (3, 1), 
[DBG]  Goal position: (4, 1), (4, 4), (4, 1), (4, 1), 
[DBG]  SAT instance and solver created.
Currently solving
Instance name: scen
Map name: map
Encoding used: disappear_at_goal
SAT solver used: Kissat
Optimizing function: sum of costs
Number of agents: 4
Mks LB: 6
SoC LB: 15
Delta: 0
Remaining time: 300000 [ms]

Vertex conflict! Agents 0, 1, timestep 4, location 0
Swapping conflict! Agents 0, 1, timestep 4, edge (0,0)
Vertex conflict! Agents 0, 1, timestep 5, location 0
Vertex conflict! Agents 0, 3, timestep 4, location 0
Swapping conflict! Agents 0, 3, timestep 4, edge (0,0)
Vertex conflict! Agents 0, 3, timestep 5, location 0
Vertex conflict! Agents 1, 3, timestep 3, location 0
Swapping conflict! Agents 1, 3, timestep 3, edge (0,0)
Vertex conflict! Agents 1, 3, timestep 4, location 0
Swapping conflict! Agents 1, 3, timestep 4, edge (0,0)
Vertex conflict! Agents 1, 3, timestep 5, location 0
Found plan [agents = 4] [timesteps = 6]
Agent #0 : 9 8 11 12 0 0 
Agent #1 : 13 14 15 0 0 0 
Agent #2 : 1 5 9 8 11 12 
Agent #3 : 11 12 0 0 0 0 

[STAT] Solver returned: 0
[DBG]  Agent (index) 28 | New local path (submap idx):
[DBG]  9 8 11 12 
[DBG]  Agent (index) 46 | New local path (submap idx):
[DBG]  13 14 15 
[DBG]  Agent (index) 89 | New local path (submap idx):
[DBG]  1 5 9 8 11 12 
[DBG]  Agent (index) 108 | New local path (submap idx):
[DBG]  11 12 
[DBG]  Update the agent path 28 | Original local length: 18 | New local length: 4
[DBG]  agent 28 t=0 => decoded (sx,sy)=(2,2) => global_id=661
[DBG]  agent 28 t=1 => decoded (sx,sy)=(2,1) => global_id=660
[DBG]  agent 28 t=2 => decoded (sx,sy)=(3,1) => global_id=692
[DBG]  agent 28 t=3 => decoded (sx,sy)=(4,1) => global_id=724
[DBG]  Complete path of agent 28:
[DBG]    Original: 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 660 659 660 692 724 756 788 820 819 819 787 819 819 787 786 787 788 756 724 725 726 727 
[DBG]    New:     661 661 661 661 661 661 660 692 724 756 788 820 819 819 787 819 819 787 786 787 788 756 724 725 726 727 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 661 661 661 661 661 
[DBG]    Local path (in submap): 661 660 692 724 756 788 820 819 819 787 819 819 787 786 787 788 756 724 
[DBG]    Suffix (out of submap): 725 726 727 
[DBG]  Original agent path length 28 je: 40
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 0: 661, 661, 661, 661, 661, 661, 660, 692, 724, 756, 788, 820, 819, 819, 787, 819, 819, 787, 786, 787, 788, 756, 724, 725, 726, 727, 
[DBG]  Path for agent 28 updated, resulting length: 26
[DBG]  Update the agent path 46 | Original local length: 3 | New local length: 3
[DBG]  agent 46 t=0 => decoded (sx,sy)=(4,2) => global_id=725
[DBG]  agent 46 t=1 => decoded (sx,sy)=(4,3) => global_id=726
[DBG]  agent 46 t=2 => decoded (sx,sy)=(4,4) => global_id=727
[DBG]  Complete path of agent 46:
[DBG]    Original: 786 787 755 756 724 725 726 727 728 696 664 632 633 601 569 570 538 539 540 508 476 444 412 413 381 349 317 285 284 252 
[DBG]    New:     786 787 755 756 724 725 726 727 728 696 664 632 633 601 569 570 538 539 540 508 476 444 412 413 381 349 317 285 284 252 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 786 787 755 756 724 
[DBG]    Local path (in submap): 725 726 727 
[DBG]    Suffix (out of submap): 728 696 664 632 633 601 569 570 538 539 540 508 476 444 412 413 381 349 317 285 284 252 
[DBG]  Original agent path length 46 je: 30
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 1: 786, 787, 755, 756, 724, 725, 726, 727, 728, 696, 664, 632, 633, 601, 569, 570, 538, 539, 540, 508, 476, 444, 412, 413, 381, 349, 317, 285, 284, 252, 
[DBG]  Path for agent 46 updated, resulting length: 30
[DBG]  Update the agent path 89 | Original local length: 6 | New local length: 6
[DBG]  agent 89 t=0 => decoded (sx,sy)=(0,2) => global_id=597
[DBG]  agent 89 t=1 => decoded (sx,sy)=(1,2) => global_id=629
[DBG]  agent 89 t=2 => decoded (sx,sy)=(2,2) => global_id=661
[DBG]  agent 89 t=3 => decoded (sx,sy)=(2,1) => global_id=660
[DBG]  agent 89 t=4 => decoded (sx,sy)=(3,1) => global_id=692
[DBG]  agent 89 t=5 => decoded (sx,sy)=(4,1) => global_id=724
[DBG]  Complete path of agent 89:
[DBG]    Original: 437 469 501 533 565 597 596 628 660 692 724 756 788 788 788 820 821 822 854 886 918 950 982 1014 1015 
[DBG]    New:     437 469 501 533 565 597 629 661 660 692 724 756 788 788 788 820 821 822 854 886 918 950 982 1014 1015 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 437 469 501 533 565 
[DBG]    Local path (in submap): 597 629 661 660 692 724 
[DBG]    Suffix (out of submap): 756 788 788 788 820 821 822 854 886 918 950 982 1014 1015 
[DBG]  Original agent path length 89 je: 25
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 2: 437, 469, 501, 533, 565, 597, 629, 661, 660, 692, 724, 756, 788, 788, 788, 820, 821, 822, 854, 886, 918, 950, 982, 1014, 1015, 
[DBG]  Path for agent 89 updated, resulting length: 25
[DBG]  Update the agent path 108 | Original local length: 3 | New local length: 2
[DBG]  agent 108 t=0 => decoded (sx,sy)=(3,1) => global_id=692
[DBG]  agent 108 t=1 => decoded (sx,sy)=(4,1) => global_id=724
[DBG]  Complete path of agent 108:
[DBG]    Original: 628 628 660 660 660 692 692 724 756 788 820 819 819 819 851 851 883 884 885 917 917 918 919 920 952 953 954 955 956 957 989 1021 
[DBG]    New:     628 628 660 660 660 692 724 756 788 820 819 819 819 851 851 883 884 885 917 917 918 919 920 952 953 954 955 956 957 989 1021 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 628 628 660 660 660 
[DBG]    Local path (in submap): 692 724 756 
[DBG]    Suffix (out of submap): 788 820 819 819 819 851 851 883 884 885 917 917 918 919 920 952 953 954 955 956 957 989 1021 
[DBG]  Original agent path length 108 je: 32
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 3: 628, 628, 660, 660, 660, 692, 724, 756, 788, 820, 819, 819, 819, 851, 851, 883, 884, 885, 917, 917, 918, 919, 920, 952, 953, 954, 955, 956, 957, 989, 1021, 
[DBG]  Path for agent 108 updated, resulting length: 31
[DBG]  Paths successfully updated.
[DBG]  (LNS.cpp) New path for agent 28: 
[DBG]  661, 661, 661, 661, 661, 661, 660, 692, 724, 756, 788, 820, 819, 819, 787, 819, 819, 787, 786, 787, 788, 756, 724, 725, 726, 727, 
[DBG]  (LNS.cpp) New path for agent 46: 
[DBG]  786, 787, 755, 756, 724, 725, 726, 727, 728, 696, 664, 632, 633, 601, 569, 570, 538, 539, 540, 508, 476, 444, 412, 413, 381, 349, 317, 285, 284, 252, 
[DBG]  (LNS.cpp) New path for agent 89: 
[DBG]  437, 469, 501, 533, 565, 597, 629, 661, 660, 692, 724, 756, 788, 788, 788, 820, 821, 822, 854, 886, 918, 950, 982, 1014, 1015, 
[DBG]  (LNS.cpp) New path for agent 108: 
[DBG]  628, 628, 660, 660, 660, 692, 724, 756, 788, 820, 819, 819, 819, 851, 851, 883, 884, 885, 917, 917, 918, 919, 920, 952, 953, 954, 955, 956, 957, 989, 1021, 
[DBG]  Delta value: 0.121951
[DBG]  Rewarding metric index = 0
[DBG]  component_weights = {0.999824, 8.23384e-05, 4.76695e-05, 4.6286e-05}
[DBG]  opSuccess value: 1
[STAT] neighbor.sum_of_costs before recomputation: 108
[STAT] neighbor.old_sum_of_costs before recomputation: 123
[STAT] sum_of_costs before recomputation: 4361
[DBG]  Validate solution immediately after SAT success.
[WARNING] Problem after SAT: Vertex conflict between agents 28 and 3 at location 725 at timestep 23
[DBG]  [DEBUG] Attempting immediate repair via init_lns because problem occurred after SAT (should be applied only for conflicts...).
[DBG]  [DEBUG] Passing 150 agents to init_lns (skip=true).
[DBG]  [DEBUG] path_table contents for selected agents (neighbor.agents):
[DBG]    Agent 28 => controlling path length=26
[DBG]    Agent 46 => controlling path length=30
[DBG]    Agent 89 => controlling path length=25
[DBG]    Agent 108 => controlling path length=31
[DBG]  hodnota skip_initial_solution=1
[DBG]  We skip initialSolution => call buildCollisionData()
[DBG]  buildCollisionData() called â€“ skip_initial_solution case.
[DBG]  Agents.size()=150, collision_graph.size()=150
[DBG]  agent 3 => updateCollidingPairs => foundCollision
[DBG]  agent 4 => updateCollidingPairs => foundCollision
[DBG]  agent 28 => updateCollidingPairs => foundCollision
[DBG]  agent 35 => updateCollidingPairs => foundCollision
[DBG]  agent 42 => updateCollidingPairs => foundCollision
[DBG]  agent 47 => updateCollidingPairs => foundCollision
[DBG]  agent 70 => updateCollidingPairs => foundCollision
[DBG]  agent 89 => updateCollidingPairs => foundCollision
[DBG]  agent 96 => updateCollidingPairs => foundCollision
[DBG]  agent 108 => updateCollidingPairs => foundCollision
[DBG]  Conflicting agent pairs:
[DBG]  agent 3 is in conflict with agent 28
[DBG]  agent 4 is in conflict with agent 108
[DBG]  agent 28 is in conflict with agent 42
[DBG]  agent 28 is in conflict with agent 70
[DBG]  agent 28 is in conflict with agent 96
[DBG]  agent 28 is in conflict with agent 108
[DBG]  agent 35 is in conflict with agent 108
[DBG]  agent 47 is in conflict with agent 108
[DBG]  agent 89 is in conflict with agent 108
[DBG]  buildCollisionData() => sum_of_costs=4346, num_of_colliding_pairs=9
[DBG]  buildCollisionData done => sum_of_costs=4346, num_of_colliding_pairs=9
[DBG]  sum_of_cost hodnota: 4346
[DBG]  After skip/init build => iteration_stats.back(): sum_of_costs=4346, collisions=9
[DEBUG] Using default neighbor generation strategy for conflicts: 1
[DEBUG] Using default neighbor generation strategy for conflicts: 2
[DEBUG] Using default neighbor generation strategy for conflicts: 1
	InitLNS(PP): runtime = 0.00460042, iterations = 4, colliding pairs = 0, initial colliding pairs = 9, solution cost = 4339, initial solution cost = 4346, failed iterations = 0
[DBG]  [DEBUG] init_lns->sum_of_costs after init_lns->run: 4339
[DBG]  [DEBUG] sum_of_costs after assignment from init_lns->run: 4339
[DBG]  Recomputing sum_of_cost by dividing neighbor.sum_of_costs and neighbor.old_sum_of_costs
[STAT] sum_of_costs after recomputation: 4339
[STAT] Iteration 99
[DBG]  Using SAT operator (destroy+repair SAT).
[DBG]  ====================
[DBG]  SAT destroy operator called.
[DBG]  SAT heuristic: 2
[DBG]  key_agent_id: 28
[DBG]  key_agent_id global path length: 40
[DBG]  Submap content (global positions):
[DBG]  595 596 597 598 599 
[DBG]  627 628 629 630 631 
[DBG]  659 660 661 662 663 
[DBG]  691 692 693 694 695 
[DBG]  723 724 725 726 727 
[DBG]  Map content with agents and obstacles:
[DBG]  X . . X . 
[DBG]  . . . X . 
[DBG]  A . A X X 
[DBG]  . . X X X 
[DBG]  X A . . . 
[DBG]  content of the map structure that we pass to the SAT solver:
[DBG]  -1  1  1  -1  1  
[DBG]  1  1  1  -1  1  
[DBG]  1  1  1  -1  -1  
[DBG]  1  1  -1  -1  -1  
[DBG]  -1  1  1  1  1  
[DBG]  Identifying agents in a submap for rescheduling (when key_agent is there at the time 15):
[DBG]  Agent 4 found intervals in the sub-map:
[DBG]  
[DBG]  Agent 4 is not in sub-map at time 15 (intervals: 
[DBG]  )
[DBG]  Agent 28 found intervals in the sub-map:
[DBG]   [0..20] [37..39]
[DBG]  Agent 28 (interval in submap: [0..20]) contains time 15, added to replan.
[DBG]  Agent 74 found intervals in the sub-map:
[DBG]  
[DBG]  Agent 74 is not in sub-map at time 15 (intervals: 
[DBG]  )
[DBG]  Agent 109 found intervals in the sub-map:
[DBG]  
[DBG]  Agent 109 is not in sub-map at time 15 (intervals: 
[DBG]  )
[DBG]  Agent 119 found intervals in the sub-map:
[DBG]   [12..23]
[DBG]  Agent 119 (interval in submap: [12..23]) contains time 15, added to replan.
[DBG]  Agent 135 found intervals in the sub-map:
[DBG]   [4..4] [9..24]
[DBG]  Agent 135 (interval in submap: [9..24]) contains time 15, added to replan.
[DBG]  Agent 28 | Start (global): 661 -> (local): (2, 2) at time 15 | Goal (global): 724 -> (local): (4, 1) at time 20
[DBG]  Agent 119 | Start (global): 724 -> (local): (4, 1) at time 15 | Goal (global): 659 -> (local): (2, 0) at time 23
[DBG]  Agent 135 | Start (global): 659 -> (local): (2, 0) at time 15 | Goal (global): 659 -> (local): (2, 0) at time 24
[DBG]  [REPAIR] SAT destroy operator called.
[DBG]  [REPAIR] SAT operator â€“ launching subproblem FOR OPTIMIZATION.
[DBG]  Creating local paths (sx, sy) in the submap for T_sync = 15
[DBG]    Agent 28 (global paths from T=15 to 20) has local path: (2,2) (2,2) (2,2) (2,1) (3,1) (4,1) 
[DBG]    Agent 119 (global paths from T=15 to 23) has local path: (4,1) (3,1) (2,1) (2,0) (1,0) (1,0) (1,0) (1,0) (2,0) 
[DBG]    Agent 135 (global paths from T=15 to 24) has local path: (2,0) (1,0) (1,1) (1,1) (1,1) (1,1) (1,1) (1,1) (1,0) (2,0) 
[DBG]  Checking input data for SAT solver:
[DBG]    - Number of agents to replan: 3
[DBG]  Agent 28 has the original local path length: 6 => Start (2,2), Goal (4,1)
[DBG]  Agent 119 has the original local path length: 9 => Start (4,1), Goal (2,0)
[DBG]  Agent 135 has the original local path length: 10 => Start (2,0), Goal (2,0)
[DBG]  Start position: (2, 2), (4, 1), (2, 0), 
[DBG]  Goal position: (4, 1), (2, 0), (2, 0), 
[DBG]  SAT instance and solver created.
Currently solving
Instance name: scen
Map name: map
Encoding used: disappear_at_goal
SAT solver used: Kissat
Optimizing function: sum of costs
Number of agents: 3
Mks LB: 4
SoC LB: 9
Delta: 0
Remaining time: 300000 [ms]

Found plan [agents = 3] [timesteps = 4]
Agent #0 : 9 8 11 12 
Agent #1 : 12 11 10 7 
Agent #2 : 7 0 0 0 

[STAT] Solver returned: 0
[DBG]  Agent (index) 28 | New local path (submap idx):
[DBG]  9 8 11 12 
[DBG]  Agent (index) 119 | New local path (submap idx):
[DBG]  12 11 10 7 
[DBG]  Agent (index) 135 | New local path (submap idx):
[DBG]  7 
[DBG]  Update the agent path 28 | Original local length: 6 | New local length: 4
[DBG]  agent 28 t=0 => decoded (sx,sy)=(2,2) => global_id=661
[DBG]  agent 28 t=1 => decoded (sx,sy)=(2,1) => global_id=660
[DBG]  agent 28 t=2 => decoded (sx,sy)=(3,1) => global_id=692
[DBG]  agent 28 t=3 => decoded (sx,sy)=(4,1) => global_id=724
[DBG]  Complete path of agent 28:
[DBG]    Original: 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 660 692 724 756 757 757 757 757 757 757 757 757 757 757 757 757 757 757 757 725 726 727 
[DBG]    New:     661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 660 692 724 756 757 757 757 757 757 757 757 757 757 757 757 757 757 757 757 725 726 727 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 
[DBG]    Local path (in submap): 661 660 692 724 756 757 
[DBG]    Suffix (out of submap): 757 757 757 757 757 757 757 757 757 757 757 757 757 757 725 726 727 
[DBG]  Original agent path length 28 je: 40
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 0: 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 660, 692, 724, 756, 757, 757, 757, 757, 757, 757, 757, 757, 757, 757, 757, 757, 757, 757, 757, 725, 726, 727, 
[DBG]  Path for agent 28 updated, resulting length: 38
[DBG]  Update the agent path 119 | Original local length: 9 | New local length: 4
[DBG]  agent 119 t=0 => decoded (sx,sy)=(4,1) => global_id=724
[DBG]  agent 119 t=1 => decoded (sx,sy)=(3,1) => global_id=692
[DBG]  agent 119 t=2 => decoded (sx,sy)=(3,0) => global_id=691
[DBG]  agent 119 t=3 => decoded (sx,sy)=(2,0) => global_id=659
[DBG]  Complete path of agent 119:
[DBG]    Original: 861 893 861 829 797 765 733 732 731 730 729 728 727 726 725 724 692 660 659 627 627 627 627 659 658 657 656 655 654 622 590 589 588 556 524 492 460 428 427 395 363 331 299 300 268 236 204 172 140 
[DBG]    New:     861 893 861 829 797 765 733 732 731 730 729 728 727 726 725 724 692 691 659 658 657 656 655 654 622 590 589 588 556 524 492 460 428 427 395 363 331 299 300 268 236 204 172 140 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 861 893 861 829 797 765 733 732 731 730 729 728 727 726 725 
[DBG]    Local path (in submap): 724 692 691 659 658 657 656 655 654 
[DBG]    Suffix (out of submap): 622 590 589 588 556 524 492 460 428 427 395 363 331 299 300 268 236 204 172 140 
[DBG]  Original agent path length 119 je: 49
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 1: 861, 893, 861, 829, 797, 765, 733, 732, 731, 730, 729, 728, 727, 726, 725, 724, 692, 691, 659, 658, 657, 656, 655, 654, 622, 590, 589, 588, 556, 524, 492, 460, 428, 427, 395, 363, 331, 299, 300, 268, 236, 204, 172, 140, 
[DBG]  Path for agent 119 updated, resulting length: 44
[DBG]  Update the agent path 135 | Original local length: 10 | New local length: 1
[DBG]  agent 135 t=0 => decoded (sx,sy)=(2,0) => global_id=659
[DBG]  Complete path of agent 135:
[DBG]    Original: 696 696 696 728 727 759 759 759 759 727 726 725 724 692 691 659 627 628 628 628 628 628 628 627 659 658 657 656 655 654 622 623 591 590 589 588 556 524 523 522 521 520 519 487 486 485 484 483 482 450 449 448 416 384 
[DBG]    New:     696 696 696 728 727 759 759 759 759 727 726 725 724 692 691 659 658 657 656 655 654 622 623 591 590 589 588 556 524 523 522 521 520 519 487 486 485 484 483 482 450 449 448 416 384 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 696 696 696 728 727 759 759 759 759 727 726 725 724 692 691 
[DBG]    Local path (in submap): 659 658 657 656 655 654 622 623 591 590 
[DBG]    Suffix (out of submap): 589 588 556 524 523 522 521 520 519 487 486 485 484 483 482 450 449 448 416 384 
[DBG]  Original agent path length 135 je: 54
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 2: 696, 696, 696, 728, 727, 759, 759, 759, 759, 727, 726, 725, 724, 692, 691, 659, 658, 657, 656, 655, 654, 622, 623, 591, 590, 589, 588, 556, 524, 523, 522, 521, 520, 519, 487, 486, 485, 484, 483, 482, 450, 449, 448, 416, 384, 
[DBG]  Path for agent 135 updated, resulting length: 45
[DBG]  Paths successfully updated.
[DBG]  (LNS.cpp) New path for agent 28: 
[DBG]  661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 660, 692, 724, 756, 757, 757, 757, 757, 757, 757, 757, 757, 757, 757, 757, 757, 757, 757, 757, 725, 726, 727, 
[DBG]  (LNS.cpp) New path for agent 119: 
[DBG]  861, 893, 861, 829, 797, 765, 733, 732, 731, 730, 729, 728, 727, 726, 725, 724, 692, 691, 659, 658, 657, 656, 655, 654, 622, 590, 589, 588, 556, 524, 492, 460, 428, 427, 395, 363, 331, 299, 300, 268, 236, 204, 172, 140, 
[DBG]  (LNS.cpp) New path for agent 135: 
[DBG]  696, 696, 696, 728, 727, 759, 759, 759, 759, 727, 726, 725, 724, 692, 691, 659, 658, 657, 656, 655, 654, 622, 623, 591, 590, 589, 588, 556, 524, 523, 522, 521, 520, 519, 487, 486, 485, 484, 483, 482, 450, 449, 448, 416, 384, 
[DBG]  Delta value: 0.114286
[DBG]  Rewarding metric index = 0
[DBG]  component_weights = {0.99985, 7.02006e-05, 4.06424e-05, 3.94628e-05}
[DBG]  opSuccess value: 1
[STAT] neighbor.sum_of_costs before recomputation: 124
[STAT] neighbor.old_sum_of_costs before recomputation: 140
[STAT] sum_of_costs before recomputation: 4339
[DBG]  Validate solution immediately after SAT success.
[WARNING] Problem after SAT: Target conflict: agent 42 (len 39) traverses target of agent 28 (len 37) at location 727 at timestep 38
[DBG]  [DEBUG] Attempting immediate repair via init_lns because problem occurred after SAT (should be applied only for conflicts...).
[DBG]  [DEBUG] Passing 150 agents to init_lns (skip=true).
[DBG]  [DEBUG] path_table contents for selected agents (neighbor.agents):
[DBG]    Agent 28 => controlling path length=38
[DBG]    Agent 119 => controlling path length=44
[DBG]    Agent 135 => controlling path length=45
[DBG]  hodnota skip_initial_solution=1
[DBG]  We skip initialSolution => call buildCollisionData()
[DBG]  buildCollisionData() called â€“ skip_initial_solution case.
[DBG]  Agents.size()=150, collision_graph.size()=150
[DBG]  agent 28 => updateCollidingPairs => foundCollision
[DBG]  agent 42 => updateCollidingPairs => foundCollision
[DBG]  agent 43 => updateCollidingPairs => foundCollision
[DBG]  agent 71 => updateCollidingPairs => foundCollision
[DBG]  agent 83 => updateCollidingPairs => foundCollision
[DBG]  agent 96 => updateCollidingPairs => foundCollision
[DBG]  agent 98 => updateCollidingPairs => foundCollision
[DBG]  agent 101 => updateCollidingPairs => foundCollision
[DBG]  agent 119 => updateCollidingPairs => foundCollision
[DBG]  agent 130 => updateCollidingPairs => foundCollision
[DBG]  agent 135 => updateCollidingPairs => foundCollision
[DBG]  Conflicting agent pairs:
[DBG]  agent 28 is in conflict with agent 42
[DBG]  agent 43 is in conflict with agent 135
[DBG]  agent 71 is in conflict with agent 119
[DBG]  agent 71 is in conflict with agent 135
[DBG]  agent 83 is in conflict with agent 135
[DBG]  agent 96 is in conflict with agent 119
[DBG]  agent 96 is in conflict with agent 135
[DBG]  agent 98 is in conflict with agent 135
[DBG]  agent 101 is in conflict with agent 119
[DBG]  agent 119 is in conflict with agent 130
[DBG]  agent 130 is in conflict with agent 135
[DBG]  buildCollisionData() => sum_of_costs=4323, num_of_colliding_pairs=11
[DBG]  buildCollisionData done => sum_of_costs=4323, num_of_colliding_pairs=11
[DBG]  sum_of_cost hodnota: 4323
[DBG]  After skip/init build => iteration_stats.back(): sum_of_costs=4323, collisions=11
[DEBUG] Using default neighbor generation strategy for conflicts: 2
[DEBUG] Using default neighbor generation strategy for conflicts: 1
[DEBUG] Using default neighbor generation strategy for conflicts: 2
[DEBUG] Using default neighbor generation strategy for conflicts: 2
[DEBUG] Using default neighbor generation strategy for conflicts: 2
[DEBUG] Using default neighbor generation strategy for conflicts: 1
[DEBUG] Using default neighbor generation strategy for conflicts: 0
[DEBUG] Using default neighbor generation strategy for conflicts: 2
[DEBUG] Using default neighbor generation strategy for conflicts: 2
[DEBUG] Using default neighbor generation strategy for conflicts: 1
[DEBUG] Using default neighbor generation strategy for conflicts: 1
	InitLNS(PP): runtime = 0.0197623, iterations = 12, colliding pairs = 0, initial colliding pairs = 11, solution cost = 4301, initial solution cost = 4323, failed iterations = 0
[DBG]  [DEBUG] init_lns->sum_of_costs after init_lns->run: 4301
[DBG]  [DEBUG] sum_of_costs after assignment from init_lns->run: 4301
[DBG]  Recomputing sum_of_cost by dividing neighbor.sum_of_costs and neighbor.old_sum_of_costs
[STAT] sum_of_costs after recomputation: 4301
[STAT] Iteration 100
[DBG]  Using SAT operator (destroy+repair SAT).
[DBG]  ====================
[DBG]  SAT destroy operator called.
[DBG]  SAT heuristic: 2
[DBG]  key_agent_id: 28
[DBG]  key_agent_id global path length: 42
[DBG]  Submap content (global positions):
[DBG]  691 692 693 694 695 
[DBG]  723 724 725 726 727 
[DBG]  755 756 757 758 759 
[DBG]  787 788 789 790 791 
[DBG]  819 820 821 822 823 
[DBG]  Map content with agents and obstacles:
[DBG]  . . X X X 
[DBG]  X A A . . 
[DBG]  . . A X . 
[DBG]  . . X . X 
[DBG]  . . . . . 
[DBG]  content of the map structure that we pass to the SAT solver:
[DBG]  1  1  -1  -1  -1  
[DBG]  -1  1  1  1  1  
[DBG]  1  1  1  -1  1  
[DBG]  1  1  -1  1  -1  
[DBG]  1  1  1  1  1  
[DBG]  Identifying agents in a submap for rescheduling (when key_agent is there at the time 38):
[DBG]  Agent 26 found intervals in the sub-map:
[DBG]   [30..33]
[DBG]  Agent 26 is not in sub-map at time 38 (intervals: 
[DBG]  [30..33] )
[DBG]  Agent 28 found intervals in the sub-map:
[DBG]   [32..41]
[DBG]  Agent 28 (interval in submap: [32..41]) contains time 38, added to replan.
[DBG]  Agent 42 found intervals in the sub-map:
[DBG]   [35..41]
[DBG]  Agent 42 (interval in submap: [35..41]) contains time 38, added to replan.
[DBG]  Agent 45 found intervals in the sub-map:
[DBG]   [26..30]
[DBG]  Agent 45 is not in sub-map at time 38 (intervals: 
[DBG]  [26..30] )
[DBG]  Agent 53 found intervals in the sub-map:
[DBG]   [29..34]
[DBG]  Agent 53 is not in sub-map at time 38 (intervals: 
[DBG]  [29..34] )
[DBG]  Agent 69 found intervals in the sub-map:
[DBG]   [36..41]
[DBG]  Agent 69 (interval in submap: [36..41]) contains time 38, added to replan.
[DBG]  Agent 28 | Start (global): 757 -> (local): (2, 2) at time 38 | Goal (global): 727 -> (local): (1, 4) at time 41
[DBG]  Agent 42 | Start (global): 725 -> (local): (1, 2) at time 38 | Goal (global): 759 -> (local): (2, 4) at time 41
[DBG]  Agent 69 | Start (global): 724 -> (local): (1, 1) at time 38 | Goal (global): 820 -> (local): (4, 1) at time 41
[DBG]  [REPAIR] SAT destroy operator called.
[DBG]  [REPAIR] SAT operator â€“ launching subproblem FOR OPTIMIZATION.
[DBG]  Creating local paths (sx, sy) in the submap for T_sync = 38
[DBG]    Agent 28 (global paths from T=38 to 41) has local path: (2,2) (1,2) (1,3) (1,4) 
[DBG]    Agent 42 (global paths from T=38 to 41) has local path: (1,2) (1,3) (1,4) (2,4) 
[DBG]    Agent 69 (global paths from T=38 to 41) has local path: (1,1) (2,1) (3,1) (4,1) 
[DBG]  Checking input data for SAT solver:
[DBG]    - Number of agents to replan: 3
[DBG]  Agent 28 has the original local path length: 4 => Start (2,2), Goal (1,4)
[DBG]  Agent 42 has the original local path length: 4 => Start (1,2), Goal (2,4)
[DBG]  Agent 69 has the original local path length: 4 => Start (1,1), Goal (4,1)
[DBG]  Start position: (2, 2), (1, 2), (1, 1), 
[DBG]  Goal position: (1, 4), (2, 4), (4, 1), 
[DBG]  SAT instance and solver created.
Currently solving
Instance name: scen
Map name: map
Encoding used: disappear_at_goal
SAT solver used: Kissat
Optimizing function: sum of costs
Number of agents: 3
Mks LB: 4
SoC LB: 12
Delta: 0
Remaining time: 300000 [ms]

Found plan [agents = 3] [timesteps = 4]
Agent #0 : 8 3 4 5 
Agent #1 : 3 4 5 9 
Agent #2 : 2 7 11 14 

[STAT] Solver returned: 0
[DBG]  Agent (index) 28 | New local path (submap idx):
[DBG]  8 3 4 5 
[DBG]  Agent (index) 42 | New local path (submap idx):
[DBG]  3 4 5 9 
[DBG]  Agent (index) 69 | New local path (submap idx):
[DBG]  2 7 11 14 
[DBG]  Update the agent path 28 | Original local length: 4 | New local length: 4
[DBG]  agent 28 t=0 => decoded (sx,sy)=(2,2) => global_id=757
[DBG]  agent 28 t=1 => decoded (sx,sy)=(1,2) => global_id=725
[DBG]  agent 28 t=2 => decoded (sx,sy)=(1,3) => global_id=726
[DBG]  agent 28 t=3 => decoded (sx,sy)=(1,4) => global_id=727
[DBG]  Complete path of agent 28:
[DBG]    Original: 661 661 661 661 661 661 661 629 597 596 597 629 629 629 629 629 629 629 629 629 629 629 629 629 629 661 661 661 661 661 660 660 692 724 725 757 757 757 757 725 726 727 
[DBG]    New:     661 661 661 661 661 661 661 629 597 596 597 629 629 629 629 629 629 629 629 629 629 629 629 629 629 661 661 661 661 661 660 660 692 724 725 757 757 757 757 725 726 727 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 661 661 661 661 661 661 661 629 597 596 597 629 629 629 629 629 629 629 629 629 629 629 629 629 629 661 661 661 661 661 660 660 692 724 725 757 757 757 
[DBG]    Local path (in submap): 757 725 726 727 
[DBG]    Suffix (out of submap): 
[DBG]  Original agent path length 28 je: 42
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 0: 661, 661, 661, 661, 661, 661, 661, 629, 597, 596, 597, 629, 629, 629, 629, 629, 629, 629, 629, 629, 629, 629, 629, 629, 629, 661, 661, 661, 661, 661, 660, 660, 692, 724, 725, 757, 757, 757, 757, 725, 726, 727, 
[DBG]  Path for agent 28 updated, resulting length: 42
[DBG]  Update the agent path 42 | Original local length: 4 | New local length: 4
[DBG]  agent 42 t=0 => decoded (sx,sy)=(1,2) => global_id=725
[DBG]  agent 42 t=1 => decoded (sx,sy)=(1,3) => global_id=726
[DBG]  agent 42 t=2 => decoded (sx,sy)=(1,4) => global_id=727
[DBG]  agent 42 t=3 => decoded (sx,sy)=(2,4) => global_id=759
[DBG]  Complete path of agent 42:
[DBG]    Original: 224 256 288 289 321 353 354 355 387 419 420 421 422 423 424 425 426 427 428 429 430 431 463 462 494 526 558 590 591 592 593 625 657 658 659 691 692 724 725 726 727 759 
[DBG]    New:     224 256 288 289 321 353 354 355 387 419 420 421 422 423 424 425 426 427 428 429 430 431 463 462 494 526 558 590 591 592 593 625 657 658 659 691 692 724 725 726 727 759 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 224 256 288 289 321 353 354 355 387 419 420 421 422 423 424 425 426 427 428 429 430 431 463 462 494 526 558 590 591 592 593 625 657 658 659 691 692 724 
[DBG]    Local path (in submap): 725 726 727 759 
[DBG]    Suffix (out of submap): 
[DBG]  Original agent path length 42 je: 42
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 1: 224, 256, 288, 289, 321, 353, 354, 355, 387, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 463, 462, 494, 526, 558, 590, 591, 592, 593, 625, 657, 658, 659, 691, 692, 724, 725, 726, 727, 759, 
[DBG]  Path for agent 42 updated, resulting length: 42
[DBG]  Update the agent path 69 | Original local length: 4 | New local length: 4
[DBG]  agent 69 t=0 => decoded (sx,sy)=(1,1) => global_id=724
[DBG]  agent 69 t=1 => decoded (sx,sy)=(2,1) => global_id=756
[DBG]  agent 69 t=2 => decoded (sx,sy)=(3,1) => global_id=788
[DBG]  agent 69 t=3 => decoded (sx,sy)=(4,1) => global_id=820
[DBG]  Complete path of agent 69:
[DBG]    Original: 4 5 6 7 8 9 41 42 74 106 138 139 140 172 204 236 237 269 301 333 365 366 398 430 462 494 526 558 590 591 592 593 625 657 658 659 691 692 724 756 788 820 
[DBG]    New:     4 5 6 7 8 9 41 42 74 106 138 139 140 172 204 236 237 269 301 333 365 366 398 430 462 494 526 558 590 591 592 593 625 657 658 659 691 692 724 756 788 820 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 4 5 6 7 8 9 41 42 74 106 138 139 140 172 204 236 237 269 301 333 365 366 398 430 462 494 526 558 590 591 592 593 625 657 658 659 691 692 
[DBG]    Local path (in submap): 724 756 788 820 
[DBG]    Suffix (out of submap): 
[DBG]  Original agent path length 69 je: 42
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 2: 4, 5, 6, 7, 8, 9, 41, 42, 74, 106, 138, 139, 140, 172, 204, 236, 237, 269, 301, 333, 365, 366, 398, 430, 462, 494, 526, 558, 590, 591, 592, 593, 625, 657, 658, 659, 691, 692, 724, 756, 788, 820, 
[DBG]  Path for agent 69 updated, resulting length: 42
[DBG]  Paths successfully updated.
[DBG]  (LNS.cpp) New path for agent 28: 
[DBG]  661, 661, 661, 661, 661, 661, 661, 629, 597, 596, 597, 629, 629, 629, 629, 629, 629, 629, 629, 629, 629, 629, 629, 629, 629, 661, 661, 661, 661, 661, 660, 660, 692, 724, 725, 757, 757, 757, 757, 725, 726, 727, 
[DBG]  (LNS.cpp) New path for agent 42: 
[DBG]  224, 256, 288, 289, 321, 353, 354, 355, 387, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 463, 462, 494, 526, 558, 590, 591, 592, 593, 625, 657, 658, 659, 691, 692, 724, 725, 726, 727, 759, 
[DBG]  (LNS.cpp) New path for agent 69: 
[DBG]  4, 5, 6, 7, 8, 9, 41, 42, 74, 106, 138, 139, 140, 172, 204, 236, 237, 269, 301, 333, 365, 366, 398, 430, 462, 494, 526, 558, 590, 591, 592, 593, 625, 657, 658, 659, 691, 692, 724, 756, 788, 820, 
[DBG]  Delta value: 0
[DBG]  Rewarding metric index = 0
[DBG]  component_weights = {0.999857, 6.66911e-05, 3.86105e-05, 3.749e-05}
[DBG]  opSuccess value: 1
[STAT] neighbor.sum_of_costs before recomputation: 123
[STAT] neighbor.old_sum_of_costs before recomputation: 123
[STAT] sum_of_costs before recomputation: 4301
[DBG]  Validate solution immediately after SAT success.
[DBG]  No problems after SAT replan.
[DBG]  Recomputing sum_of_cost by dividing neighbor.sum_of_costs and neighbor.old_sum_of_costs
[STAT] sum_of_costs after recomputation: 4301
[STAT] LNS(PP;PP): runtime = 0.55484, iterations = 101, solution cost = 4301, initial solution cost = 4490, failed iterations = 1
[STAT] SAT total runtime = 0.112373 s
[STAT] Other operators runtime = 0.40237 s
[STAT] SAT runtime ratio = 20.2533 %
