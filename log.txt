[DBG]  hodnota skip_initial_solution=0
[DBG]  getInitialSolution() => succ=1, sum_of_costs=4461, num_of_colliding_pairs=1
[DBG]  After skip/init build => iteration_stats.back(): sum_of_costs=4461, collisions=1
[DEBUG] Using default neighbor generation strategy for conflicts: 0
	InitLNS(PP): runtime = 0.0230592, iterations = 2, colliding pairs = 0, initial colliding pairs = 1, solution cost = 4490, initial solution cost = 4461, failed iterations = 0
[STAT] Iteration 1
[DBG]  Using SAT operator (destroy+repair SAT).
[DBG]  ====================
[DBG]  SAT destroy operator called.
[DBG]  SAT heuristic: 2
[DBG]  key_agent_id: 120
[DBG]  key_agent_id global path length: 43
[DBG]  Submap content (global positions):
[DBG]  169 170 171 172 173 
[DBG]  201 202 203 204 205 
[DBG]  233 234 235 236 237 
[DBG]  265 266 267 268 269 
[DBG]  297 298 299 300 301 
[DBG]  Map content with agents and obstacles:
[DBG]  X . X . . 
[DBG]  X X . . . 
[DBG]  . . A A . 
[DBG]  . . . . . 
[DBG]  A A . . . 
[DBG]  content of the map structure that we pass to the SAT solver:
[DBG]  -1  1  -1  1  1  
[DBG]  -1  -1  1  1  1  
[DBG]  1  1  1  1  1  
[DBG]  1  1  1  1  1  
[DBG]  1  1  1  1  1  
[DBG]  Identifying agents in a submap for rescheduling (when key_agent is there at the time 11):
[DBG]  Agent 22 found intervals in the sub-map:
[DBG]   [8..16]
[DBG]  Agent 22 (interval in submap: [8..16]) contains time 11, added to replan.
[DBG]  Agent 87 found intervals in the sub-map:
[DBG]   [9..12]
[DBG]  Agent 87 (interval in submap: [9..12]) contains time 11, added to replan.
[DBG]  Agent 107 found intervals in the sub-map:
[DBG]   [9..16]
[DBG]  Agent 107 (interval in submap: [9..16]) contains time 11, added to replan.
[DBG]  Agent 120 found intervals in the sub-map:
[DBG]   [0..39]
[DBG]  Agent 120 (interval in submap: [0..39]) contains time 11, added to replan.
[DBG]  Agent 22 | Start (global): 297 -> (local): (4, 0) at time 11 | Goal (global): 269 -> (local): (3, 4) at time 16
[DBG]  Agent 87 | Start (global): 298 -> (local): (4, 1) at time 11 | Goal (global): 299 -> (local): (4, 2) at time 12
[DBG]  Agent 107 | Start (global): 236 -> (local): (2, 3) at time 11 | Goal (global): 297 -> (local): (4, 0) at time 16
[DBG]  Agent 120 | Start (global): 235 -> (local): (2, 2) at time 11 | Goal (global): 265 -> (local): (3, 0) at time 39
[DBG]  [REPAIR] SAT destroy operator called.
[DBG]  [REPAIR] SAT operator â€“ launching subproblem FOR OPTIMIZATION.
[DBG]  Creating local paths (sx, sy) in the submap for T_sync = 11
[DBG]    Agent 22 (global paths from T=11 to 16) has local path: (4,0) (4,1) (4,2) (4,3) (3,3) (3,4) 
[DBG]    Agent 87 (global paths from T=11 to 12) has local path: (4,1) (4,2) 
[DBG]    Agent 107 (global paths from T=11 to 16) has local path: (2,3) (3,3) (3,2) (3,1) (4,1) (4,0) 
[DBG]    Agent 120 (global paths from T=11 to 39) has local path: (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (3,2) (3,1) (3,0) (3,0) (3,0) (3,0) (3,0) (3,0) (3,0) 
[DBG]  Checking input data for SAT solver:
[DBG]    - Number of agents to replan: 4
[DBG]  Agent 22 has the original local path length: 6 => Start (4,0), Goal (3,4)
[DBG]  Agent 87 has the original local path length: 2 => Start (4,1), Goal (4,2)
[DBG]  Agent 107 has the original local path length: 6 => Start (2,3), Goal (4,0)
[DBG]  Agent 120 has the original local path length: 29 => Start (2,2), Goal (3,0)
[DBG]  Start position: (4, 0), (4, 1), (2, 3), (2, 2), 
[DBG]  Goal position: (3, 4), (4, 2), (4, 0), (3, 0), 
[DBG]  SAT instance and solver created.
Currently solving
Instance name: scen
Map name: map
Encoding used: disappear_at_goal
SAT solver used: Kissat
Optimizing function: sum of costs
Number of agents: 4
Mks LB: 6
SoC LB: 18
Delta: 0
Remaining time: 300000 [ms]

Vertex conflict! Agents 1, 3, timestep 4, location 0
Swapping conflict! Agents 1, 3, timestep 4, edge (0,0)
Vertex conflict! Agents 1, 3, timestep 5, location 0
Found plan [agents = 4] [timesteps = 6]
Agent #0 : 16 17 18 19 20 15 
Agent #1 : 17 18 0 0 0 0 
Agent #2 : 9 14 13 18 17 16 
Agent #3 : 8 13 12 11 0 0 

[DBG]  Solver returned: 0
[DBG]  Agent (index) 22 | New local path (submap idx):
[DBG]  16 17 18 19 20 15 
[DBG]  Agent (index) 87 | New local path (submap idx):
[DBG]  17 18 
[DBG]  Agent (index) 107 | New local path (submap idx):
[DBG]  9 14 13 18 17 16 
[DBG]  Agent (index) 120 | New local path (submap idx):
[DBG]  8 13 12 11 
[DBG]  Update the agent path 22 | Original local length: 6 | New local length: 6
[DBG]  agent 22 t=0 => decoded (sx,sy)=(4,0) => global_id=297
[DBG]  agent 22 t=1 => decoded (sx,sy)=(4,1) => global_id=298
[DBG]  agent 22 t=2 => decoded (sx,sy)=(4,2) => global_id=299
[DBG]  agent 22 t=3 => decoded (sx,sy)=(4,3) => global_id=300
[DBG]  agent 22 t=4 => decoded (sx,sy)=(4,4) => global_id=301
[DBG]  agent 22 t=5 => decoded (sx,sy)=(3,4) => global_id=269
[DBG]  Complete path of agent 22:
[DBG]    Original: 329 329 361 362 362 362 361 329 297 297 297 297 298 299 300 268 269 270 271 303 304 336 337 338 338 339 340 308 340 339 
[DBG]    New:     329 329 361 362 362 362 361 329 297 297 297 297 298 299 300 301 269 270 271 303 304 336 337 338 338 339 340 308 340 339 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 329 329 361 362 362 362 361 329 297 297 297 
[DBG]    Local path (in submap): 297 298 299 300 301 269 
[DBG]    Suffix (out of submap): 270 271 303 304 336 337 338 338 339 340 308 340 339 
[DBG]  Original agent path length 22 je: 30
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 0: 329, 329, 361, 362, 362, 362, 361, 329, 297, 297, 297, 297, 298, 299, 300, 301, 269, 270, 271, 303, 304, 336, 337, 338, 338, 339, 340, 308, 340, 339, 
[DBG]  Path for agent 22 updated, resulting length: 30
[DBG]  Update the agent path 87 | Original local length: 2 | New local length: 2
[DBG]  agent 87 t=0 => decoded (sx,sy)=(4,1) => global_id=298
[DBG]  agent 87 t=1 => decoded (sx,sy)=(4,2) => global_id=299
[DBG]  Complete path of agent 87:
[DBG]    Original: 231 263 263 263 263 263 263 263 264 265 266 298 299 331 363 395 427 459 491 523 555 587 619 651 650 682 714 
[DBG]    New:     231 263 263 263 263 263 263 263 264 265 266 298 299 331 363 395 427 459 491 523 555 587 619 651 650 682 714 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 231 263 263 263 263 263 263 263 264 265 266 
[DBG]    Local path (in submap): 298 299 
[DBG]    Suffix (out of submap): 331 363 395 427 459 491 523 555 587 619 651 650 682 714 
[DBG]  Original agent path length 87 je: 27
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 1: 231, 263, 263, 263, 263, 263, 263, 263, 264, 265, 266, 298, 299, 331, 363, 395, 427, 459, 491, 523, 555, 587, 619, 651, 650, 682, 714, 
[DBG]  Path for agent 87 updated, resulting length: 27
[DBG]  Update the agent path 107 | Original local length: 6 | New local length: 6
[DBG]  agent 107 t=0 => decoded (sx,sy)=(2,3) => global_id=236
[DBG]  agent 107 t=1 => decoded (sx,sy)=(3,3) => global_id=268
[DBG]  agent 107 t=2 => decoded (sx,sy)=(3,2) => global_id=267
[DBG]  agent 107 t=3 => decoded (sx,sy)=(4,2) => global_id=299
[DBG]  agent 107 t=4 => decoded (sx,sy)=(4,1) => global_id=298
[DBG]  agent 107 t=5 => decoded (sx,sy)=(4,0) => global_id=297
[DBG]  Complete path of agent 107:
[DBG]    Original: 16 15 47 46 45 77 76 108 140 172 204 236 268 267 266 298 297 329 361 393 425 457 456 455 454 486 485 517 549 581 613 645 677 709 741 740 772 804 836 
[DBG]    New:     16 15 47 46 45 77 76 108 140 172 204 236 268 267 299 298 297 329 361 393 425 457 456 455 454 486 485 517 549 581 613 645 677 709 741 740 772 804 836 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 16 15 47 46 45 77 76 108 140 172 204 
[DBG]    Local path (in submap): 236 268 267 299 298 297 
[DBG]    Suffix (out of submap): 329 361 393 425 457 456 455 454 486 485 517 549 581 613 645 677 709 741 740 772 804 836 
[DBG]  Original agent path length 107 je: 39
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 2: 16, 15, 47, 46, 45, 77, 76, 108, 140, 172, 204, 236, 268, 267, 299, 298, 297, 329, 361, 393, 425, 457, 456, 455, 454, 486, 485, 517, 549, 581, 613, 645, 677, 709, 741, 740, 772, 804, 836, 
[DBG]  Path for agent 107 updated, resulting length: 39
[DBG]  Update the agent path 120 | Original local length: 29 | New local length: 4
[DBG]  agent 120 t=0 => decoded (sx,sy)=(2,2) => global_id=235
[DBG]  agent 120 t=1 => decoded (sx,sy)=(3,2) => global_id=267
[DBG]  agent 120 t=2 => decoded (sx,sy)=(3,1) => global_id=266
[DBG]  agent 120 t=3 => decoded (sx,sy)=(3,0) => global_id=265
[DBG]  Complete path of agent 120:
[DBG]    Original: 203 235 235 235 235 235 235 235 235 235 235 235 235 235 235 235 235 235 235 235 235 235 235 235 235 235 235 235 235 235 235 267 266 265 265 265 265 265 265 265 264 232 200 
[DBG]    New:     203 235 235 235 235 235 235 235 235 235 235 235 267 266 265 264 232 200 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 203 235 235 235 235 235 235 235 235 235 235 
[DBG]    Local path (in submap): 235 267 266 265 264 232 200 
[DBG]    Suffix (out of submap): 
[DBG]  Original agent path length 120 je: 43
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 3: 203, 235, 235, 235, 235, 235, 235, 235, 235, 235, 235, 235, 267, 266, 265, 264, 232, 200, 
[DBG]  Path for agent 120 updated, resulting length: 18
[DBG]  Paths successfully updated.
[DBG]  (LNS.cpp) New path for agent 22: 
[DBG]  329, 329, 361, 362, 362, 362, 361, 329, 297, 297, 297, 297, 298, 299, 300, 301, 269, 270, 271, 303, 304, 336, 337, 338, 338, 339, 340, 308, 340, 339, 
[DBG]  (LNS.cpp) New path for agent 87: 
[DBG]  231, 263, 263, 263, 263, 263, 263, 263, 264, 265, 266, 298, 299, 331, 363, 395, 427, 459, 491, 523, 555, 587, 619, 651, 650, 682, 714, 
[DBG]  (LNS.cpp) New path for agent 107: 
[DBG]  16, 15, 47, 46, 45, 77, 76, 108, 140, 172, 204, 236, 268, 267, 299, 298, 297, 329, 361, 393, 425, 457, 456, 455, 454, 486, 485, 517, 549, 581, 613, 645, 677, 709, 741, 740, 772, 804, 836, 
[DBG]  (LNS.cpp) New path for agent 120: 
[DBG]  203, 235, 235, 235, 235, 235, 235, 235, 235, 235, 235, 235, 267, 266, 265, 264, 232, 200, 
[DBG]  Delta value: 0.185185
[DBG]  Rewarding metric index = 2
[DBG]  component_weights = {0.235429, 0.235429, 0.293713, 0.235429}
[DBG]  opSuccess value: 1
[STAT] neighbor.sum_of_costs before recomputation: 110
[STAT] neighbor.old_sum_of_costs before recomputation: 135
[STAT] sum_of_costs before recomputation: 4490
[DBG]  Validate solution immediately after SAT success.
[WARNING] Problem after SAT: Vertex conflict between agents 120 and 15 at location 265 at timestep 14
[DBG]  [DEBUG] Attempting immediate repair via init_lns because problem occurred after SAT (should be applied only for conflicts...).
[DBG]  [DEBUG] Passing 150 agents to init_lns (skip=true).
[DBG]  [DEBUG] path_table contents for selected agents (neighbor.agents):
[DBG]    Agent 22 => controlling path length=30
[DBG]    Agent 87 => controlling path length=27
[DBG]    Agent 107 => controlling path length=39
[DBG]    Agent 120 => controlling path length=18
[DBG]  hodnota skip_initial_solution=1
[DBG]  We skip initialSolution => call buildCollisionData()
[DBG]  buildCollisionData() called â€“ skip_initial_solution case.
[DBG]  Agents.size()=150, collision_graph.size()=150
[DBG]  agent 15 => updateCollidingPairs => foundCollision
[DBG]  agent 101 => updateCollidingPairs => foundCollision
[DBG]  agent 116 => updateCollidingPairs => foundCollision
[DBG]  agent 120 => updateCollidingPairs => foundCollision
[DBG]  Conflicting agent pairs:
[DBG]  agent 15 is in conflict with agent 120
[DBG]  agent 101 is in conflict with agent 120
[DBG]  agent 116 is in conflict with agent 120
[DBG]  buildCollisionData() => sum_of_costs=4465, num_of_colliding_pairs=3
[DBG]  buildCollisionData done => sum_of_costs=4465, num_of_colliding_pairs=3
[DBG]  sum_of_cost hodnota: 4465
[DBG]  After skip/init build => iteration_stats.back(): sum_of_costs=4465, collisions=3
[DEBUG] Using default neighbor generation strategy for conflicts: 1
	InitLNS(PP): runtime = 0.00326112, iterations = 2, colliding pairs = 0, initial colliding pairs = 3, solution cost = 4472, initial solution cost = 4465, failed iterations = 0
[DBG]  [DEBUG] init_lns->sum_of_costs after init_lns->run: 4472
[DBG]  [DEBUG] sum_of_costs after assignment from init_lns->run: 4472
[DBG]  Recomputing sum_of_cost by dividing neighbor.sum_of_costs and neighbor.old_sum_of_costs
[STAT] sum_of_costs after recomputation: 4472
[STAT] Iteration 2
[DBG]  Random chance did not select SAT operator (r=68), using default strategy.
[DBG]  opSuccess value: 0
[STAT] Iteration 2
[DBG]  Random chance did not select SAT operator (r=81), using default strategy.
[DBG]  opSuccess value: 0
[STAT] Iteration 2
[DBG]  Random chance did not select SAT operator (r=50), using default strategy.
[DBG]  opSuccess value: 0
[STAT] neighbor.sum_of_costs before recomputation: 302
[STAT] neighbor.old_sum_of_costs before recomputation: 303
[STAT] sum_of_costs before recomputation: 4472
[DBG]  Recomputing sum_of_cost by dividing neighbor.sum_of_costs and neighbor.old_sum_of_costs
[STAT] sum_of_costs after recomputation: 4471
[STAT] Iteration 3
[DBG]  Random chance did not select SAT operator (r=82), using default strategy.
[DBG]  opSuccess value: 0
[STAT] Iteration 3
[DBG]  Using SAT operator (destroy+repair SAT).
[DBG]  ====================
[DBG]  SAT destroy operator called.
[DBG]  SAT heuristic: 2
[DBG]  key_agent_id: 28
[DBG]  key_agent_id global path length: 44
[DBG]  Submap content (global positions):
[DBG]  595 596 597 598 599 
[DBG]  627 628 629 630 631 
[DBG]  659 660 661 662 663 
[DBG]  691 692 693 694 695 
[DBG]  723 724 725 726 727 
[DBG]  Map content with agents and obstacles:
[DBG]  X A . X . 
[DBG]  . A . X . 
[DBG]  A . A X X 
[DBG]  . . X X X 
[DBG]  X . . . . 
[DBG]  content of the map structure that we pass to the SAT solver:
[DBG]  -1  1  1  -1  1  
[DBG]  1  1  1  -1  1  
[DBG]  1  1  1  -1  -1  
[DBG]  1  1  -1  -1  -1  
[DBG]  -1  1  1  1  1  
[DBG]  Identifying agents in a submap for rescheduling (when key_agent is there at the time 8):
[DBG]  Agent 28 found intervals in the sub-map:
[DBG]   [0..43]
[DBG]  Agent 28 (interval in submap: [0..43]) contains time 8, added to replan.
[DBG]  Agent 63 found intervals in the sub-map:
[DBG]   [7..16]
[DBG]  Agent 63 (interval in submap: [7..16]) contains time 8, added to replan.
[DBG]  Agent 89 found intervals in the sub-map:
[DBG]   [7..12]
[DBG]  Agent 89 (interval in submap: [7..12]) contains time 8, added to replan.
[DBG]  Agent 113 found intervals in the sub-map:
[DBG]   [6..10]
[DBG]  Agent 113 (interval in submap: [6..10]) contains time 8, added to replan.
[DBG]  Agent 28 | Start (global): 661 -> (local): (2, 2) at time 8 | Goal (global): 727 -> (local): (4, 4) at time 43
[DBG]  Agent 63 | Start (global): 659 -> (local): (2, 0) at time 8 | Goal (global): 597 -> (local): (0, 2) at time 16
[DBG]  Agent 89 | Start (global): 596 -> (local): (0, 1) at time 8 | Goal (global): 724 -> (local): (4, 1) at time 12
[DBG]  Agent 113 | Start (global): 628 -> (local): (1, 1) at time 8 | Goal (global): 597 -> (local): (0, 2) at time 10
[DBG]  [REPAIR] SAT destroy operator called.
[DBG]  [REPAIR] SAT operator â€“ launching subproblem FOR OPTIMIZATION.
[DBG]  Creating local paths (sx, sy) in the submap for T_sync = 8
[DBG]    Agent 28 (global paths from T=8 to 43) has local path: (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,1) (3,1) (4,1) (4,2) (4,3) (4,4) 
[DBG]    Agent 63 (global paths from T=8 to 16) has local path: (2,0) (2,0) (2,0) (2,1) (2,1) (2,1) (1,1) (1,2) (0,2) 
[DBG]    Agent 89 (global paths from T=8 to 12) has local path: (0,1) (1,1) (2,1) (3,1) (4,1) 
[DBG]    Agent 113 (global paths from T=8 to 10) has local path: (1,1) (1,2) (0,2) 
[DBG]  Checking input data for SAT solver:
[DBG]    - Number of agents to replan: 4
[DBG]  Agent 28 has the original local path length: 36 => Start (2,2), Goal (4,4)
[DBG]  Agent 63 has the original local path length: 9 => Start (2,0), Goal (0,2)
[DBG]  Agent 89 has the original local path length: 5 => Start (0,1), Goal (4,1)
[DBG]  Agent 113 has the original local path length: 3 => Start (1,1), Goal (0,2)
[DBG]  Start position: (2, 2), (2, 0), (0, 1), (1, 1), 
[DBG]  Goal position: (4, 4), (0, 2), (4, 1), (0, 2), 
[DBG]  SAT instance and solver created.
Currently solving
Instance name: scen
Map name: map
Encoding used: disappear_at_goal
SAT solver used: Kissat
Optimizing function: sum of costs
Number of agents: 4
Mks LB: 7
SoC LB: 20
Delta: 0
Remaining time: 300000 [ms]

Vertex conflict! Agents 1, 2, timestep 5, location 0
Swapping conflict! Agents 1, 2, timestep 5, edge (0,0)
Vertex conflict! Agents 1, 2, timestep 6, location 0
Vertex conflict! Agents 1, 3, timestep 5, location 0
Swapping conflict! Agents 1, 3, timestep 5, edge (0,0)
Vertex conflict! Agents 1, 3, timestep 6, location 0
Vertex conflict! Agents 2, 3, timestep 5, location 0
Swapping conflict! Agents 2, 3, timestep 5, edge (0,0)
Vertex conflict! Agents 2, 3, timestep 6, location 0
Found plan [agents = 4] [timesteps = 7]
Agent #0 : 9 8 11 12 13 14 15 
Agent #1 : 7 3 4 5 1 0 0 
Agent #2 : 0 4 8 11 12 0 0 
Agent #3 : 4 5 1 0 0 0 0 

[DBG]  Solver returned: 0
[DBG]  Agent (index) 28 | New local path (submap idx):
[DBG]  9 8 11 12 13 14 15 
[DBG]  Agent (index) 63 | New local path (submap idx):
[DBG]  7 3 4 5 1 
[DBG]  Agent (index) 89 | New local path (submap idx):
[DBG]  0 4 8 11 12 
[DBG]  Agent (index) 113 | New local path (submap idx):
[DBG]  4 5 1 
[DBG]  Update the agent path 28 | Original local length: 36 | New local length: 7
[DBG]  agent 28 t=0 => decoded (sx,sy)=(2,2) => global_id=661
[DBG]  agent 28 t=1 => decoded (sx,sy)=(2,1) => global_id=660
[DBG]  agent 28 t=2 => decoded (sx,sy)=(3,1) => global_id=692
[DBG]  agent 28 t=3 => decoded (sx,sy)=(4,1) => global_id=724
[DBG]  agent 28 t=4 => decoded (sx,sy)=(4,2) => global_id=725
[DBG]  agent 28 t=5 => decoded (sx,sy)=(4,3) => global_id=726
[DBG]  agent 28 t=6 => decoded (sx,sy)=(4,4) => global_id=727
[DBG]  Complete path of agent 28:
[DBG]    Original: 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 660 692 724 725 726 727 
[DBG]    New:     661 661 661 661 661 661 661 661 661 660 692 724 725 726 727 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 661 661 661 661 661 661 661 661 
[DBG]    Local path (in submap): 661 660 692 724 725 726 727 
[DBG]    Suffix (out of submap): 
[DBG]  Original agent path length 28 je: 44
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 0: 661, 661, 661, 661, 661, 661, 661, 661, 661, 660, 692, 724, 725, 726, 727, 
[DBG]  Path for agent 28 updated, resulting length: 15
[DBG]  Update the agent path 63 | Original local length: 9 | New local length: 5
[DBG]  agent 63 t=0 => decoded (sx,sy)=(2,0) => global_id=659
[DBG]  agent 63 t=1 => decoded (sx,sy)=(1,0) => global_id=627
[DBG]  agent 63 t=2 => decoded (sx,sy)=(1,1) => global_id=628
[DBG]  agent 63 t=3 => decoded (sx,sy)=(1,2) => global_id=629
[DBG]  agent 63 t=4 => decoded (sx,sy)=(0,2) => global_id=597
[DBG]  Complete path of agent 63:
[DBG]    Original: 689 689 689 689 689 657 658 659 659 659 659 660 660 660 628 629 597 565 565 533 501 469 468 467 466 465 433 401 400 368 368 368 336 304 303 302 
[DBG]    New:     689 689 689 689 689 657 658 659 659 627 628 629 597 565 565 533 501 469 468 467 466 465 433 401 400 368 368 368 336 304 303 302 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 689 689 689 689 689 657 658 659 
[DBG]    Local path (in submap): 659 627 628 629 597 565 565 533 501 
[DBG]    Suffix (out of submap): 469 468 467 466 465 433 401 400 368 368 368 336 304 303 302 
[DBG]  Original agent path length 63 je: 36
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 1: 689, 689, 689, 689, 689, 657, 658, 659, 659, 627, 628, 629, 597, 565, 565, 533, 501, 469, 468, 467, 466, 465, 433, 401, 400, 368, 368, 368, 336, 304, 303, 302, 
[DBG]  Path for agent 63 updated, resulting length: 32
[DBG]  Update the agent path 89 | Original local length: 5 | New local length: 5
[DBG]  agent 89 t=0 => decoded (sx,sy)=(0,1) => global_id=596
[DBG]  agent 89 t=1 => decoded (sx,sy)=(1,1) => global_id=628
[DBG]  agent 89 t=2 => decoded (sx,sy)=(2,1) => global_id=660
[DBG]  agent 89 t=3 => decoded (sx,sy)=(3,1) => global_id=692
[DBG]  agent 89 t=4 => decoded (sx,sy)=(4,1) => global_id=724
[DBG]  Complete path of agent 89:
[DBG]    Original: 437 469 501 502 534 533 565 597 596 628 660 692 724 756 788 787 819 820 821 822 854 854 886 918 950 982 1014 1015 
[DBG]    New:     437 469 501 502 534 533 565 597 596 628 660 692 724 756 788 787 819 820 821 822 854 854 886 918 950 982 1014 1015 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 437 469 501 502 534 533 565 597 
[DBG]    Local path (in submap): 596 628 660 692 724 
[DBG]    Suffix (out of submap): 756 788 787 819 820 821 822 854 854 886 918 950 982 1014 1015 
[DBG]  Original agent path length 89 je: 28
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 2: 437, 469, 501, 502, 534, 533, 565, 597, 596, 628, 660, 692, 724, 756, 788, 787, 819, 820, 821, 822, 854, 854, 886, 918, 950, 982, 1014, 1015, 
[DBG]  Path for agent 89 updated, resulting length: 28
[DBG]  Update the agent path 113 | Original local length: 3 | New local length: 3
[DBG]  agent 113 t=0 => decoded (sx,sy)=(1,1) => global_id=628
[DBG]  agent 113 t=1 => decoded (sx,sy)=(1,2) => global_id=629
[DBG]  agent 113 t=2 => decoded (sx,sy)=(0,2) => global_id=597
[DBG]  Complete path of agent 113:
[DBG]    Original: 529 561 593 625 657 658 659 627 628 629 597 565 566 534 502 503 504 472 440 408 376 377 378 378 379 380 348 349 317 318 319 287 255 254 222 
[DBG]    New:     529 561 593 625 657 658 659 627 628 629 597 565 566 534 502 503 504 472 440 408 376 377 378 378 379 380 348 349 317 318 319 287 255 254 222 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 529 561 593 625 657 658 659 627 
[DBG]    Local path (in submap): 628 629 597 
[DBG]    Suffix (out of submap): 565 566 534 502 503 504 472 440 408 376 377 378 378 379 380 348 349 317 318 319 287 255 254 222 
[DBG]  Original agent path length 113 je: 35
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 3: 529, 561, 593, 625, 657, 658, 659, 627, 628, 629, 597, 565, 566, 534, 502, 503, 504, 472, 440, 408, 376, 377, 378, 378, 379, 380, 348, 349, 317, 318, 319, 287, 255, 254, 222, 
[DBG]  Path for agent 113 updated, resulting length: 35
[DBG]  Paths successfully updated.
[DBG]  (LNS.cpp) New path for agent 28: 
[DBG]  661, 661, 661, 661, 661, 661, 661, 661, 661, 660, 692, 724, 725, 726, 727, 
[DBG]  (LNS.cpp) New path for agent 63: 
[DBG]  689, 689, 689, 689, 689, 657, 658, 659, 659, 627, 628, 629, 597, 565, 565, 533, 501, 469, 468, 467, 466, 465, 433, 401, 400, 368, 368, 368, 336, 304, 303, 302, 
[DBG]  (LNS.cpp) New path for agent 89: 
[DBG]  437, 469, 501, 502, 534, 533, 565, 597, 596, 628, 660, 692, 724, 756, 788, 787, 819, 820, 821, 822, 854, 854, 886, 918, 950, 982, 1014, 1015, 
[DBG]  (LNS.cpp) New path for agent 113: 
[DBG]  529, 561, 593, 625, 657, 658, 659, 627, 628, 629, 597, 565, 566, 534, 502, 503, 504, 472, 440, 408, 376, 377, 378, 378, 379, 380, 348, 349, 317, 318, 319, 287, 255, 254, 222, 
[DBG]  Delta value: 0.23741
[DBG]  Rewarding metric index = 3
[DBG]  component_weights = {0.219775, 0.219775, 0.274184, 0.286266}
[DBG]  opSuccess value: 1
[STAT] neighbor.sum_of_costs before recomputation: 106
[STAT] neighbor.old_sum_of_costs before recomputation: 139
[STAT] sum_of_costs before recomputation: 4471
[DBG]  Validate solution immediately after SAT success.
[WARNING] Problem after SAT: Target conflict: agent 1 (len 19) traverses target of agent 28 (len 14) at location 727 at timestep 18
[DBG]  [DEBUG] Attempting immediate repair via init_lns because problem occurred after SAT (should be applied only for conflicts...).
[DBG]  [DEBUG] Passing 150 agents to init_lns (skip=true).
[DBG]  [DEBUG] path_table contents for selected agents (neighbor.agents):
[DBG]    Agent 28 => controlling path length=15
[DBG]    Agent 63 => controlling path length=32
[DBG]    Agent 89 => controlling path length=28
[DBG]    Agent 113 => controlling path length=35
[DBG]  hodnota skip_initial_solution=1
[DBG]  We skip initialSolution => call buildCollisionData()
[DBG]  buildCollisionData() called â€“ skip_initial_solution case.
[DBG]  Agents.size()=150, collision_graph.size()=150
[DBG]  agent 1 => updateCollidingPairs => foundCollision
[DBG]  agent 28 => updateCollidingPairs => foundCollision
[DBG]  agent 42 => updateCollidingPairs => foundCollision
[DBG]  agent 63 => updateCollidingPairs => foundCollision
[DBG]  agent 67 => updateCollidingPairs => foundCollision
[DBG]  agent 119 => updateCollidingPairs => foundCollision
[DBG]  agent 135 => updateCollidingPairs => foundCollision
[DBG]  Conflicting agent pairs:
[DBG]  agent 1 is in conflict with agent 28
[DBG]  agent 28 is in conflict with agent 42
[DBG]  agent 63 is in conflict with agent 67
[DBG]  agent 63 is in conflict with agent 119
[DBG]  agent 63 is in conflict with agent 135
[DBG]  buildCollisionData() => sum_of_costs=4438, num_of_colliding_pairs=5
[DBG]  buildCollisionData done => sum_of_costs=4438, num_of_colliding_pairs=5
[DBG]  sum_of_cost hodnota: 4438
[DBG]  After skip/init build => iteration_stats.back(): sum_of_costs=4438, collisions=5
[DEBUG] Using default neighbor generation strategy for conflicts: 0
[DEBUG] Using default neighbor generation strategy for conflicts: 1
[DEBUG] Using default neighbor generation strategy for conflicts: 0
[DEBUG] Using default neighbor generation strategy for conflicts: 1
	InitLNS(PP): runtime = 0.00844754, iterations = 5, colliding pairs = 0, initial colliding pairs = 5, solution cost = 4495, initial solution cost = 4438, failed iterations = 0
[DBG]  [DEBUG] init_lns->sum_of_costs after init_lns->run: 4495
[DBG]  [DEBUG] sum_of_costs after assignment from init_lns->run: 4495
[DBG]  Recomputing sum_of_cost by dividing neighbor.sum_of_costs and neighbor.old_sum_of_costs
[STAT] sum_of_costs after recomputation: 4495
[STAT] Iteration 4
[DBG]  Using SAT operator (destroy+repair SAT).
[DBG]  ====================
[DBG]  SAT destroy operator called.
[DBG]  SAT heuristic: 2
[DBG]  key_agent_id: 28
[DBG]  key_agent_id global path length: 57
[DBG]  Submap content (global positions):
[DBG]  595 596 597 598 599 
[DBG]  627 628 629 630 631 
[DBG]  659 660 661 662 663 
[DBG]  691 692 693 694 695 
[DBG]  723 724 725 726 727 
[DBG]  Map content with agents and obstacles:
[DBG]  X . . X . 
[DBG]  . . . X . 
[DBG]  A . A X X 
[DBG]  . . X X X 
[DBG]  X A . . . 
[DBG]  content of the map structure that we pass to the SAT solver:
[DBG]  -1  1  1  -1  1  
[DBG]  1  1  1  -1  1  
[DBG]  1  1  1  -1  -1  
[DBG]  1  1  -1  -1  -1  
[DBG]  -1  1  1  1  1  
[DBG]  Identifying agents in a submap for rescheduling (when key_agent is there at the time 17):
[DBG]  Agent 1 found intervals in the sub-map:
[DBG]   [13..15]
[DBG]  Agent 1 is not in sub-map at time 17 (intervals: 
[DBG]  [13..15] )
[DBG]  Agent 28 found intervals in the sub-map:
[DBG]   [0..56]
[DBG]  Agent 28 (interval in submap: [0..56]) contains time 17, added to replan.
[DBG]  Agent 61 found intervals in the sub-map:
[DBG]   [17..23]
[DBG]  Agent 61 (interval in submap: [17..23]) contains time 17, added to replan.
[DBG]  Agent 79 found intervals in the sub-map:
[DBG]   [17..22]
[DBG]  Agent 79 (interval in submap: [17..22]) contains time 17, added to replan.
[DBG]  Agent 28 | Start (global): 661 -> (local): (2, 2) at time 17 | Goal (global): 727 -> (local): (4, 4) at time 56
[DBG]  Agent 61 | Start (global): 659 -> (local): (2, 0) at time 17 | Goal (global): 597 -> (local): (0, 2) at time 23
[DBG]  Agent 79 | Start (global): 724 -> (local): (4, 1) at time 17 | Goal (global): 597 -> (local): (0, 2) at time 22
[DBG]  [REPAIR] SAT destroy operator called.
[DBG]  [REPAIR] SAT operator â€“ launching subproblem FOR OPTIMIZATION.
[DBG]  Creating local paths (sx, sy) in the submap for T_sync = 17
[DBG]    Agent 28 (global paths from T=17 to 56) has local path: (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,1) (3,1) (4,1) (4,1) (4,1) (4,1) (4,1) (4,1) (4,1) (4,1) (4,1) (4,1) (4,1) (4,1) (4,1) (4,1) (4,1) (4,1) (4,1) (4,1) (4,2) (4,3) (4,4) 
[DBG]    Agent 61 (global paths from T=17 to 23) has local path: (2,0) (2,0) (2,0) (2,1) (1,1) (1,2) (0,2) 
[DBG]    Agent 79 (global paths from T=17 to 22) has local path: (4,1) (3,1) (2,1) (1,1) (1,2) (0,2) 
[DBG]  Checking input data for SAT solver:
[DBG]    - Number of agents to replan: 3
[DBG]  Agent 28 has the original local path length: 40 => Start (2,2), Goal (4,4)
[DBG]  Agent 61 has the original local path length: 7 => Start (2,0), Goal (0,2)
[DBG]  Agent 79 has the original local path length: 6 => Start (4,1), Goal (0,2)
[DBG]  Start position: (2, 2), (2, 0), (4, 1), 
[DBG]  Goal position: (4, 4), (0, 2), (0, 2), 
[DBG]  SAT instance and solver created.
Currently solving
Instance name: scen
Map name: map
Encoding used: disappear_at_goal
SAT solver used: Kissat
Optimizing function: sum of costs
Number of agents: 3
Mks LB: 7
SoC LB: 18
Delta: 0
Remaining time: 300000 [ms]

[DBG]  Solver returned: -1
[DBG]  SAT solver failed.
[STAT] SAT solver failed to find a valid solution.
[DBG]  ====================
[DBG]  SAT destroy operator called.
[DBG]  SAT heuristic: 2
[DBG]  key_agent_id: 28
[DBG]  key_agent_id global path length: 57
[DBG]  Submap content (global positions):
[DBG]  595 596 597 598 599 
[DBG]  627 628 629 630 631 
[DBG]  659 660 661 662 663 
[DBG]  691 692 693 694 695 
[DBG]  723 724 725 726 727 
[DBG]  Map content with agents and obstacles:
[DBG]  X . . X . 
[DBG]  A . . X . 
[DBG]  . A A X X 
[DBG]  . . X X X 
[DBG]  X A . . . 
[DBG]  content of the map structure that we pass to the SAT solver:
[DBG]  -1  1  1  -1  1  
[DBG]  1  1  1  -1  1  
[DBG]  1  1  1  -1  -1  
[DBG]  1  1  -1  -1  -1  
[DBG]  -1  1  1  1  1  
[DBG]  Identifying agents in a submap for rescheduling (when key_agent is there at the time 12):
[DBG]  Agent 28 found intervals in the sub-map:
[DBG]   [0..56]
[DBG]  Agent 28 (interval in submap: [0..56]) contains time 12, added to replan.
[DBG]  Agent 63 found intervals in the sub-map:
[DBG]   [7..16]
[DBG]  Agent 63 (interval in submap: [7..16]) contains time 12, added to replan.
[DBG]  Agent 86 found intervals in the sub-map:
[DBG]   [11..15]
[DBG]  Agent 86 (interval in submap: [11..15]) contains time 12, added to replan.
[DBG]  Agent 89 found intervals in the sub-map:
[DBG]   [7..12]
[DBG]  Agent 89 (interval in submap: [7..12]) contains time 12, added to replan.
[DBG]  Agent 28 | Start (global): 661 -> (local): (2, 2) at time 12 | Goal (global): 727 -> (local): (4, 4) at time 56
[DBG]  Agent 63 | Start (global): 660 -> (local): (2, 1) at time 12 | Goal (global): 597 -> (local): (0, 2) at time 16
[DBG]  Agent 86 | Start (global): 627 -> (local): (1, 0) at time 12 | Goal (global): 597 -> (local): (0, 2) at time 15
[DBG]  Agent 89 | Start (global): 724 -> (local): (4, 1) at time 12 | Goal (global): 724 -> (local): (4, 1) at time 12
[DBG]  [REPAIR] SAT destroy operator called.
[DBG]  [REPAIR] SAT operator â€“ launching subproblem FOR OPTIMIZATION.
[DBG]  Creating local paths (sx, sy) in the submap for T_sync = 12
[DBG]    Agent 28 (global paths from T=12 to 56) has local path: (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,1) (3,1) (4,1) (4,1) (4,1) (4,1) (4,1) (4,1) (4,1) (4,1) (4,1) (4,1) (4,1) (4,1) (4,1) (4,1) (4,1) (4,1) (4,1) (4,1) (4,2) (4,3) (4,4) 
[DBG]    Agent 63 (global paths from T=12 to 16) has local path: (2,1) (2,1) (1,1) (0,1) (0,2) 
[DBG]    Agent 86 (global paths from T=12 to 15) has local path: (1,0) (1,1) (0,1) (0,2) 
[DBG]    Agent 89 (global paths from T=12 to 12) has local path: (4,1) 
[DBG]  Checking input data for SAT solver:
[DBG]    - Number of agents to replan: 4
[DBG]  Agent 28 has the original local path length: 45 => Start (2,2), Goal (4,4)
[DBG]  Agent 63 has the original local path length: 5 => Start (2,1), Goal (0,2)
[DBG]  Agent 86 has the original local path length: 4 => Start (1,0), Goal (0,2)
[DBG]  Agent 89 has the original local path length: 1 => Start (4,1), Goal (4,1)
[DBG]  Start position: (2, 2), (2, 1), (1, 0), (4, 1), 
[DBG]  Goal position: (4, 4), (0, 2), (0, 2), (4, 1), 
[DBG]  SAT instance and solver created.
Currently solving
Instance name: scen
Map name: map
Encoding used: disappear_at_goal
SAT solver used: Kissat
Optimizing function: sum of costs
Number of agents: 4
Mks LB: 7
SoC LB: 16
Delta: 0
Remaining time: 300000 [ms]

[DBG]  Solver returned: -1
[DBG]  SAT solver failed.
[STAT] SAT solver failed to find a valid solution.
[DBG]  ====================
[DBG]  SAT destroy operator called.
[DBG]  SAT heuristic: 2
[DBG]  key_agent_id: 28
[DBG]  key_agent_id global path length: 57
[DBG]  Submap content (global positions):
[DBG]  595 596 597 598 599 
[DBG]  627 628 629 630 631 
[DBG]  659 660 661 662 663 
[DBG]  691 692 693 694 695 
[DBG]  723 724 725 726 727 
[DBG]  Map content with agents and obstacles:
[DBG]  X A . X . 
[DBG]  . A . X . 
[DBG]  . . A X X 
[DBG]  . . X X X 
[DBG]  X . . A . 
[DBG]  content of the map structure that we pass to the SAT solver:
[DBG]  -1  1  1  -1  1  
[DBG]  1  1  1  -1  1  
[DBG]  1  1  1  -1  -1  
[DBG]  1  1  -1  -1  -1  
[DBG]  -1  1  1  1  1  
[DBG]  Identifying agents in a submap for rescheduling (when key_agent is there at the time 14):
[DBG]  Agent 1 found intervals in the sub-map:
[DBG]   [13..15]
[DBG]  Agent 1 (interval in submap: [13..15]) contains time 14, added to replan.
[DBG]  Agent 28 found intervals in the sub-map:
[DBG]   [0..56]
[DBG]  Agent 28 (interval in submap: [0..56]) contains time 14, added to replan.
[DBG]  Agent 63 found intervals in the sub-map:
[DBG]   [7..16]
[DBG]  Agent 63 (interval in submap: [7..16]) contains time 14, added to replan.
[DBG]  Agent 86 found intervals in the sub-map:
[DBG]   [11..15]
[DBG]  Agent 86 (interval in submap: [11..15]) contains time 14, added to replan.
[DBG]  Agent 1 | Start (global): 726 -> (local): (4, 3) at time 14 | Goal (global): 727 -> (local): (4, 4) at time 15
[DBG]  Agent 28 | Start (global): 661 -> (local): (2, 2) at time 14 | Goal (global): 727 -> (local): (4, 4) at time 56
[DBG]  Agent 63 | Start (global): 628 -> (local): (1, 1) at time 14 | Goal (global): 597 -> (local): (0, 2) at time 16
[DBG]  Agent 86 | Start (global): 596 -> (local): (0, 1) at time 14 | Goal (global): 597 -> (local): (0, 2) at time 15
[DBG]  [REPAIR] SAT destroy operator called.
[DBG]  [REPAIR] SAT operator â€“ launching subproblem FOR OPTIMIZATION.
[DBG]  Creating local paths (sx, sy) in the submap for T_sync = 14
[DBG]    Agent 1 (global paths from T=14 to 15) has local path: (4,3) (4,4) 
[DBG]    Agent 28 (global paths from T=14 to 56) has local path: (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,1) (3,1) (4,1) (4,1) (4,1) (4,1) (4,1) (4,1) (4,1) (4,1) (4,1) (4,1) (4,1) (4,1) (4,1) (4,1) (4,1) (4,1) (4,1) (4,1) (4,2) (4,3) (4,4) 
[DBG]    Agent 63 (global paths from T=14 to 16) has local path: (1,1) (0,1) (0,2) 
[DBG]    Agent 86 (global paths from T=14 to 15) has local path: (0,1) (0,2) 
[DBG]  Checking input data for SAT solver:
[DBG]    - Number of agents to replan: 4
[DBG]  Agent 1 has the original local path length: 2 => Start (4,3), Goal (4,4)
[DBG]  Agent 28 has the original local path length: 43 => Start (2,2), Goal (4,4)
[DBG]  Agent 63 has the original local path length: 3 => Start (1,1), Goal (0,2)
[DBG]  Agent 86 has the original local path length: 2 => Start (0,1), Goal (0,2)
[DBG]  Start position: (4, 3), (2, 2), (1, 1), (0, 1), 
[DBG]  Goal position: (4, 4), (4, 4), (0, 2), (0, 2), 
[DBG]  SAT instance and solver created.
Currently solving
Instance name: scen
Map name: map
Encoding used: disappear_at_goal
SAT solver used: Kissat
Optimizing function: sum of costs
Number of agents: 4
Mks LB: 7
SoC LB: 14
Delta: 0
Remaining time: 300000 [ms]

Vertex conflict! Agents 0, 2, timestep 3, location 0
Swapping conflict! Agents 0, 2, timestep 3, edge (0,0)
Vertex conflict! Agents 0, 2, timestep 4, location 0
Swapping conflict! Agents 0, 2, timestep 4, edge (0,0)
Vertex conflict! Agents 0, 2, timestep 5, location 0
Swapping conflict! Agents 0, 2, timestep 5, edge (0,0)
Vertex conflict! Agents 0, 2, timestep 6, location 0
Vertex conflict! Agents 0, 3, timestep 2, location 0
Swapping conflict! Agents 0, 3, timestep 2, edge (0,0)
Vertex conflict! Agents 0, 3, timestep 3, location 0
Swapping conflict! Agents 0, 3, timestep 3, edge (0,0)
Vertex conflict! Agents 0, 3, timestep 4, location 0
Swapping conflict! Agents 0, 3, timestep 4, edge (0,0)
Vertex conflict! Agents 0, 3, timestep 5, location 0
Swapping conflict! Agents 0, 3, timestep 5, edge (0,0)
Vertex conflict! Agents 0, 3, timestep 6, location 0
Vertex conflict! Agents 2, 3, timestep 3, location 0
Swapping conflict! Agents 2, 3, timestep 3, edge (0,0)
Vertex conflict! Agents 2, 3, timestep 4, location 0
Swapping conflict! Agents 2, 3, timestep 4, edge (0,0)
Vertex conflict! Agents 2, 3, timestep 5, location 0
Swapping conflict! Agents 2, 3, timestep 5, edge (0,0)
Vertex conflict! Agents 2, 3, timestep 6, location 0
Found plan [agents = 4] [timesteps = 7]
Agent #0 : 14 15 0 0 0 0 0 
Agent #1 : 9 8 11 12 13 14 15 
Agent #2 : 4 5 1 0 0 0 0 
Agent #3 : 0 1 0 0 0 0 0 

[DBG]  Solver returned: 0
[DBG]  Agent (index) 1 | New local path (submap idx):
[DBG]  14 15 
[DBG]  Agent (index) 28 | New local path (submap idx):
[DBG]  9 8 11 12 13 14 15 
[DBG]  Agent (index) 63 | New local path (submap idx):
[DBG]  4 5 1 
[DBG]  Agent (index) 86 | New local path (submap idx):
[DBG]  0 1 
[DBG]  Update the agent path 1 | Original local length: 2 | New local length: 2
[DBG]  agent 1 t=0 => decoded (sx,sy)=(4,3) => global_id=726
[DBG]  agent 1 t=1 => decoded (sx,sy)=(4,4) => global_id=727
[DBG]  Complete path of agent 1:
[DBG]    Original: 949 950 918 886 885 884 883 851 819 787 755 756 757 725 726 727 728 
[DBG]    New:     949 950 918 886 885 884 883 851 819 787 755 756 757 725 726 727 728 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 949 950 918 886 885 884 883 851 819 787 755 756 757 725 
[DBG]    Local path (in submap): 726 727 
[DBG]    Suffix (out of submap): 728 
[DBG]  Original agent path length 1 je: 17
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 0: 949, 950, 918, 886, 885, 884, 883, 851, 819, 787, 755, 756, 757, 725, 726, 727, 728, 
[DBG]  Path for agent 1 updated, resulting length: 17
[DBG]  Update the agent path 28 | Original local length: 43 | New local length: 7
[DBG]  agent 28 t=0 => decoded (sx,sy)=(2,2) => global_id=661
[DBG]  agent 28 t=1 => decoded (sx,sy)=(2,1) => global_id=660
[DBG]  agent 28 t=2 => decoded (sx,sy)=(3,1) => global_id=692
[DBG]  agent 28 t=3 => decoded (sx,sy)=(4,1) => global_id=724
[DBG]  agent 28 t=4 => decoded (sx,sy)=(4,2) => global_id=725
[DBG]  agent 28 t=5 => decoded (sx,sy)=(4,3) => global_id=726
[DBG]  agent 28 t=6 => decoded (sx,sy)=(4,4) => global_id=727
[DBG]  Complete path of agent 28:
[DBG]    Original: 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 660 692 724 724 724 724 724 724 724 724 724 724 724 724 724 724 724 724 724 724 725 726 727 
[DBG]    New:     661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 660 692 724 725 726 727 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 661 661 661 661 661 661 661 661 661 661 661 661 661 661 
[DBG]    Local path (in submap): 661 660 692 724 725 726 727 
[DBG]    Suffix (out of submap): 
[DBG]  Original agent path length 28 je: 57
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 1: 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 660, 692, 724, 725, 726, 727, 
[DBG]  Path for agent 28 updated, resulting length: 21
[DBG]  Update the agent path 63 | Original local length: 3 | New local length: 3
[DBG]  agent 63 t=0 => decoded (sx,sy)=(1,1) => global_id=628
[DBG]  agent 63 t=1 => decoded (sx,sy)=(1,2) => global_id=629
[DBG]  agent 63 t=2 => decoded (sx,sy)=(0,2) => global_id=597
[DBG]  Complete path of agent 63:
[DBG]    Original: 689 689 689 689 689 657 658 659 659 659 659 660 660 660 628 596 597 565 565 533 501 469 468 467 466 465 464 432 400 368 368 368 336 304 303 302 
[DBG]    New:     689 689 689 689 689 657 658 659 659 659 659 660 660 660 628 629 597 565 565 533 501 469 468 467 466 465 464 432 400 368 368 368 336 304 303 302 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 689 689 689 689 689 657 658 659 659 659 659 660 660 660 
[DBG]    Local path (in submap): 628 629 597 
[DBG]    Suffix (out of submap): 565 565 533 501 469 468 467 466 465 464 432 400 368 368 368 336 304 303 302 
[DBG]  Original agent path length 63 je: 36
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 2: 689, 689, 689, 689, 689, 657, 658, 659, 659, 659, 659, 660, 660, 660, 628, 629, 597, 565, 565, 533, 501, 469, 468, 467, 466, 465, 464, 432, 400, 368, 368, 368, 336, 304, 303, 302, 
[DBG]  Path for agent 63 updated, resulting length: 36
[DBG]  Update the agent path 86 | Original local length: 2 | New local length: 2
[DBG]  agent 86 t=0 => decoded (sx,sy)=(0,1) => global_id=596
[DBG]  agent 86 t=1 => decoded (sx,sy)=(0,2) => global_id=597
[DBG]  Complete path of agent 86:
[DBG]    Original: 781 782 750 718 686 687 688 689 689 657 658 659 627 628 596 597 565 566 534 502 503 504 505 506 538 539 540 541 
[DBG]    New:     781 782 750 718 686 687 688 689 689 657 658 659 627 628 596 597 565 566 534 502 503 504 505 506 538 539 540 541 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 781 782 750 718 686 687 688 689 689 657 658 659 627 628 
[DBG]    Local path (in submap): 596 597 
[DBG]    Suffix (out of submap): 565 566 534 502 503 504 505 506 538 539 540 541 
[DBG]  Original agent path length 86 je: 28
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 3: 781, 782, 750, 718, 686, 687, 688, 689, 689, 657, 658, 659, 627, 628, 596, 597, 565, 566, 534, 502, 503, 504, 505, 506, 538, 539, 540, 541, 
[DBG]  Path for agent 86 updated, resulting length: 28
[DBG]  Paths successfully updated.
[DBG]  (LNS.cpp) New path for agent 1: 
[DBG]  949, 950, 918, 886, 885, 884, 883, 851, 819, 787, 755, 756, 757, 725, 726, 727, 728, 
[DBG]  (LNS.cpp) New path for agent 28: 
[DBG]  661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 660, 692, 724, 725, 726, 727, 
[DBG]  (LNS.cpp) New path for agent 63: 
[DBG]  689, 689, 689, 689, 689, 657, 658, 659, 659, 659, 659, 660, 660, 660, 628, 629, 597, 565, 565, 533, 501, 469, 468, 467, 466, 465, 464, 432, 400, 368, 368, 368, 336, 304, 303, 302, 
[DBG]  (LNS.cpp) New path for agent 86: 
[DBG]  781, 782, 750, 718, 686, 687, 688, 689, 689, 657, 658, 659, 627, 628, 596, 597, 565, 566, 534, 502, 503, 504, 505, 506, 538, 539, 540, 541, 
[DBG]  Delta value: 0.268657
[DBG]  Rewarding metric index = 0
[DBG]  component_weights = {0.273344, 0.204686, 0.255359, 0.266611}
[DBG]  opSuccess value: 1
[STAT] neighbor.sum_of_costs before recomputation: 98
[STAT] neighbor.old_sum_of_costs before recomputation: 134
[STAT] sum_of_costs before recomputation: 4495
[DBG]  Validate solution immediately after SAT success.
[WARNING] Problem after SAT: Target conflict: agent 42 (len 56) traverses target of agent 28 (len 20) at location 727 at timestep 55
[DBG]  [DEBUG] Attempting immediate repair via init_lns because problem occurred after SAT (should be applied only for conflicts...).
[DBG]  [DEBUG] Passing 150 agents to init_lns (skip=true).
[DBG]  [DEBUG] path_table contents for selected agents (neighbor.agents):
[DBG]    Agent 1 => controlling path length=17
[DBG]    Agent 28 => controlling path length=21
[DBG]    Agent 63 => controlling path length=36
[DBG]    Agent 86 => controlling path length=28
[DBG]  hodnota skip_initial_solution=1
[DBG]  We skip initialSolution => call buildCollisionData()
[DBG]  buildCollisionData() called â€“ skip_initial_solution case.
[DBG]  Agents.size()=150, collision_graph.size()=150
[DBG]  agent 28 => updateCollidingPairs => foundCollision
[DBG]  agent 42 => updateCollidingPairs => foundCollision
[DBG]  agent 79 => updateCollidingPairs => foundCollision
[DBG]  Conflicting agent pairs:
[DBG]  agent 28 is in conflict with agent 42
[DBG]  agent 28 is in conflict with agent 79
[DBG]  buildCollisionData() => sum_of_costs=4459, num_of_colliding_pairs=2
[DBG]  buildCollisionData done => sum_of_costs=4459, num_of_colliding_pairs=2
[DBG]  sum_of_cost hodnota: 4459
[DBG]  After skip/init build => iteration_stats.back(): sum_of_costs=4459, collisions=2
[DEBUG] Using default neighbor generation strategy for conflicts: 0
[DEBUG] Using default neighbor generation strategy for conflicts: 1
	InitLNS(PP): runtime = 0.006589, iterations = 3, colliding pairs = 0, initial colliding pairs = 2, solution cost = 4476, initial solution cost = 4459, failed iterations = 0
[DBG]  [DEBUG] init_lns->sum_of_costs after init_lns->run: 4476
[DBG]  [DEBUG] sum_of_costs after assignment from init_lns->run: 4476
[DBG]  Recomputing sum_of_cost by dividing neighbor.sum_of_costs and neighbor.old_sum_of_costs
[STAT] sum_of_costs after recomputation: 4476
[STAT] Iteration 5
[DBG]  Random chance did not select SAT operator (r=91), using default strategy.
[DBG]  opSuccess value: 0
[STAT] Iteration 5
[DBG]  Using SAT operator (destroy+repair SAT).
[DBG]  ====================
[DBG]  SAT destroy operator called.
[DBG]  SAT heuristic: 2
[DBG]  key_agent_id: 28
[DBG]  key_agent_id global path length: 57
[DBG]  Submap content (global positions):
[DBG]  626 627 628 629 630 
[DBG]  658 659 660 661 662 
[DBG]  690 691 692 693 694 
[DBG]  722 723 724 725 726 
[DBG]  754 755 756 757 758 
[DBG]  Map content with agents and obstacles:
[DBG]  X . . . X 
[DBG]  . . . . X 
[DBG]  X . A X X 
[DBG]  . X . . . 
[DBG]  X . . . X 
[DBG]  content of the map structure that we pass to the SAT solver:
[DBG]  -1  1  1  1  -1  
[DBG]  1  1  1  1  -1  
[DBG]  -1  1  1  -1  -1  
[DBG]  1  -1  1  1  1  
[DBG]  -1  1  1  1  -1  
[DBG]  Identifying agents in a submap for rescheduling (when key_agent is there at the time 37):
[DBG]  Agent 28 found intervals in the sub-map:
[DBG]   [0..55]
[DBG]  Agent 28 (interval in submap: [0..55]) contains time 37, added to replan.
[DBG]  Agent 42 found intervals in the sub-map:
[DBG]   [51..54]
[DBG]  Agent 42 is not in sub-map at time 37 (intervals: 
[DBG]  [51..54] )
[DBG]  Agent 55 found intervals in the sub-map:
[DBG]   [38..42]
[DBG]  Agent 55 is not in sub-map at time 37 (intervals: 
[DBG]  [38..42] )
[DBG]  Agent 148 found intervals in the sub-map:
[DBG]   [29..34]
[DBG]  Agent 148 is not in sub-map at time 37 (intervals: 
[DBG]  [29..34] )
[DBG]  Agent 28 | Start (global): 692 -> (local): (2, 2) at time 37 | Goal (global): 726 -> (local): (3, 4) at time 55
[DBG]  [REPAIR] SAT destroy operator called.
[DBG]  [REPAIR] SAT operator â€“ launching subproblem FOR OPTIMIZATION.
[DBG]  Creating local paths (sx, sy) in the submap for T_sync = 37
[DBG]    Agent 28 (global paths from T=37 to 55) has local path: (2,2) (3,2) (3,2) (3,2) (3,2) (3,2) (3,2) (3,2) (3,2) (3,2) (3,2) (3,2) (3,2) (3,2) (3,2) (3,2) (3,2) (3,3) (3,4) 
[DBG]  Checking input data for SAT solver:
[DBG]    - Number of agents to replan: 1
[DBG]  Agent 28 has the original local path length: 19 => Start (2,2), Goal (3,4)
[DBG]  Start position: (2, 2), 
[DBG]  Goal position: (3, 4), 
[DBG]  SAT instance and solver created.
Currently solving
Instance name: scen
Map name: map
Encoding used: disappear_at_goal
SAT solver used: Kissat
Optimizing function: sum of costs
Number of agents: 1
Mks LB: 4
SoC LB: 4
Delta: 0
Remaining time: 300000 [ms]

Found plan [agents = 1] [timesteps = 4]
Agent #0 : 8 10 11 12 

[DBG]  Solver returned: 0
[DBG]  Agent (index) 28 | New local path (submap idx):
[DBG]  8 10 11 12 
[DBG]  Update the agent path 28 | Original local length: 19 | New local length: 4
[DBG]  agent 28 t=0 => decoded (sx,sy)=(2,2) => global_id=692
[DBG]  agent 28 t=1 => decoded (sx,sy)=(3,2) => global_id=724
[DBG]  agent 28 t=2 => decoded (sx,sy)=(3,3) => global_id=725
[DBG]  agent 28 t=3 => decoded (sx,sy)=(3,4) => global_id=726
[DBG]  Complete path of agent 28:
[DBG]    Original: 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 629 629 629 628 627 659 691 692 724 724 724 724 724 724 724 724 724 724 724 724 724 724 724 724 725 726 727 
[DBG]    New:     661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 629 629 629 628 627 659 691 692 724 725 726 727 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 629 629 629 628 627 659 691 
[DBG]    Local path (in submap): 692 724 725 726 727 
[DBG]    Suffix (out of submap): 
[DBG]  Original agent path length 28 je: 57
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 0: 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 629, 629, 629, 628, 627, 659, 691, 692, 724, 725, 726, 727, 
[DBG]  Path for agent 28 updated, resulting length: 42
[DBG]  Paths successfully updated.
[DBG]  (LNS.cpp) New path for agent 28: 
[DBG]  661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 629, 629, 629, 628, 627, 659, 691, 692, 724, 725, 726, 727, 
[DBG]  Delta value: 0.267857
[DBG]  Rewarding metric index = 1
[DBG]  component_weights = {0.255824, 0.255662, 0.238992, 0.249523}
[DBG]  opSuccess value: 1
[STAT] neighbor.sum_of_costs before recomputation: 41
[STAT] neighbor.old_sum_of_costs before recomputation: 56
[STAT] sum_of_costs before recomputation: 4476
[DBG]  Validate solution immediately after SAT success.
[WARNING] Problem after SAT: Target conflict: agent 42 (len 56) traverses target of agent 28 (len 41) at location 727 at timestep 55
[DBG]  [DEBUG] Attempting immediate repair via init_lns because problem occurred after SAT (should be applied only for conflicts...).
[DBG]  [DEBUG] Passing 150 agents to init_lns (skip=true).
[DBG]  [DEBUG] path_table contents for selected agents (neighbor.agents):
[DBG]    Agent 28 => controlling path length=42
[DBG]  hodnota skip_initial_solution=1
[DBG]  We skip initialSolution => call buildCollisionData()
[DBG]  buildCollisionData() called â€“ skip_initial_solution case.
[DBG]  Agents.size()=150, collision_graph.size()=150
[DBG]  agent 28 => updateCollidingPairs => foundCollision
[DBG]  agent 42 => updateCollidingPairs => foundCollision
[DBG]  Conflicting agent pairs:
[DBG]  agent 28 is in conflict with agent 42
[DBG]  buildCollisionData() => sum_of_costs=4461, num_of_colliding_pairs=1
[DBG]  buildCollisionData done => sum_of_costs=4461, num_of_colliding_pairs=1
[DBG]  sum_of_cost hodnota: 4461
[DBG]  After skip/init build => iteration_stats.back(): sum_of_costs=4461, collisions=1
[DEBUG] Using default neighbor generation strategy for conflicts: 1
	InitLNS(PP): runtime = 0.00269287, iterations = 2, colliding pairs = 0, initial colliding pairs = 1, solution cost = 4500, initial solution cost = 4461, failed iterations = 0
[DBG]  [DEBUG] init_lns->sum_of_costs after init_lns->run: 4500
[DBG]  [DEBUG] sum_of_costs after assignment from init_lns->run: 4500
[DBG]  Recomputing sum_of_cost by dividing neighbor.sum_of_costs and neighbor.old_sum_of_costs
[STAT] sum_of_costs after recomputation: 4500
[STAT] Iteration 6
[DBG]  Using SAT operator (destroy+repair SAT).
[DBG]  ====================
[DBG]  SAT destroy operator called.
[DBG]  SAT heuristic: 2
[DBG]  key_agent_id: 28
[DBG]  key_agent_id global path length: 57
[DBG]  Submap content (global positions):
[DBG]  658 659 660 661 662 
[DBG]  690 691 692 693 694 
[DBG]  722 723 724 725 726 
[DBG]  754 755 756 757 758 
[DBG]  786 787 788 789 790 
[DBG]  Map content with agents and obstacles:
[DBG]  . . . . X 
[DBG]  X . . X X 
[DBG]  . X A A . 
[DBG]  X . . . X 
[DBG]  . . . X . 
[DBG]  content of the map structure that we pass to the SAT solver:
[DBG]  1  1  1  1  -1  
[DBG]  -1  1  1  -1  -1  
[DBG]  1  -1  1  1  1  
[DBG]  -1  1  1  1  -1  
[DBG]  1  1  1  -1  1  
[DBG]  Identifying agents in a submap for rescheduling (when key_agent is there at the time 53):
[DBG]  Agent 28 found intervals in the sub-map:
[DBG]   [0..13] [20..22] [28..55]
[DBG]  Agent 28 (interval in submap: [28..55]) contains time 53, added to replan.
[DBG]  Agent 42 found intervals in the sub-map:
[DBG]   [49..54]
[DBG]  Agent 42 (interval in submap: [49..54]) contains time 53, added to replan.
[DBG]  Agent 28 | Start (global): 724 -> (local): (2, 2) at time 53 | Goal (global): 726 -> (local): (2, 4) at time 55
[DBG]  Agent 42 | Start (global): 725 -> (local): (2, 3) at time 53 | Goal (global): 726 -> (local): (2, 4) at time 54
[DBG]  [REPAIR] SAT destroy operator called.
[DBG]  [REPAIR] SAT operator â€“ launching subproblem FOR OPTIMIZATION.
[DBG]  Creating local paths (sx, sy) in the submap for T_sync = 53
[DBG]    Agent 28 (global paths from T=53 to 55) has local path: (2,2) (2,3) (2,4) 
[DBG]    Agent 42 (global paths from T=53 to 54) has local path: (2,3) (2,4) 
[DBG]  Checking input data for SAT solver:
[DBG]    - Number of agents to replan: 2
[DBG]  Agent 28 has the original local path length: 3 => Start (2,2), Goal (2,4)
[DBG]  Agent 42 has the original local path length: 2 => Start (2,3), Goal (2,4)
[DBG]  Start position: (2, 2), (2, 3), 
[DBG]  Goal position: (2, 4), (2, 4), 
[DBG]  SAT instance and solver created.
Currently solving
Instance name: scen
Map name: map
Encoding used: disappear_at_goal
SAT solver used: Kissat
Optimizing function: sum of costs
Number of agents: 2
Mks LB: 3
SoC LB: 5
Delta: 0
Remaining time: 300000 [ms]

Found plan [agents = 2] [timesteps = 3]
Agent #0 : 7 8 9 
Agent #1 : 8 9 0 

[DBG]  Solver returned: 0
[DBG]  Agent (index) 28 | New local path (submap idx):
[DBG]  7 8 9 
[DBG]  Agent (index) 42 | New local path (submap idx):
[DBG]  8 9 
[DBG]  Update the agent path 28 | Original local length: 3 | New local length: 3
[DBG]  agent 28 t=0 => decoded (sx,sy)=(2,2) => global_id=724
[DBG]  agent 28 t=1 => decoded (sx,sy)=(2,3) => global_id=725
[DBG]  agent 28 t=2 => decoded (sx,sy)=(2,4) => global_id=726
[DBG]  Complete path of agent 28:
[DBG]    Original: 661 661 661 661 661 661 661 661 661 661 661 660 660 660 628 628 628 628 628 629 661 661 661 629 628 628 628 628 660 661 661 661 660 692 691 692 724 724 724 724 724 724 724 724 724 724 724 724 724 724 724 724 724 724 725 726 727 
[DBG]    New:     661 661 661 661 661 661 661 661 661 661 661 660 660 660 628 628 628 628 628 629 661 661 661 629 628 628 628 628 660 661 661 661 660 692 691 692 724 724 724 724 724 724 724 724 724 724 724 724 724 724 724 724 724 724 725 726 727 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 661 661 661 661 661 661 661 661 661 661 661 660 660 660 628 628 628 628 628 629 661 661 661 629 628 628 628 628 660 661 661 661 660 692 691 692 724 724 724 724 724 724 724 724 724 724 724 724 724 724 724 724 724 
[DBG]    Local path (in submap): 724 725 726 
[DBG]    Suffix (out of submap): 727 
[DBG]  Original agent path length 28 je: 57
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 0: 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 660, 660, 660, 628, 628, 628, 628, 628, 629, 661, 661, 661, 629, 628, 628, 628, 628, 660, 661, 661, 661, 660, 692, 691, 692, 724, 724, 724, 724, 724, 724, 724, 724, 724, 724, 724, 724, 724, 724, 724, 724, 724, 724, 725, 726, 727, 
[DBG]  Path for agent 28 updated, resulting length: 57
[DBG]  Update the agent path 42 | Original local length: 2 | New local length: 2
[DBG]  agent 42 t=0 => decoded (sx,sy)=(2,3) => global_id=725
[DBG]  agent 42 t=1 => decoded (sx,sy)=(2,4) => global_id=726
[DBG]  Complete path of agent 42:
[DBG]    Original: 224 224 224 256 257 289 321 353 354 355 387 419 418 450 482 483 484 516 548 580 581 613 645 646 678 710 742 774 806 807 808 809 777 778 779 780 812 813 814 846 846 847 879 880 881 882 883 851 819 787 788 756 757 725 726 727 759 
[DBG]    New:     224 224 224 256 257 289 321 353 354 355 387 419 418 450 482 483 484 516 548 580 581 613 645 646 678 710 742 774 806 807 808 809 777 778 779 780 812 813 814 846 846 847 879 880 881 882 883 851 819 787 788 756 757 725 726 727 759 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 224 224 224 256 257 289 321 353 354 355 387 419 418 450 482 483 484 516 548 580 581 613 645 646 678 710 742 774 806 807 808 809 777 778 779 780 812 813 814 846 846 847 879 880 881 882 883 851 819 787 788 756 757 
[DBG]    Local path (in submap): 725 726 
[DBG]    Suffix (out of submap): 727 759 
[DBG]  Original agent path length 42 je: 57
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 1: 224, 224, 224, 256, 257, 289, 321, 353, 354, 355, 387, 419, 418, 450, 482, 483, 484, 516, 548, 580, 581, 613, 645, 646, 678, 710, 742, 774, 806, 807, 808, 809, 777, 778, 779, 780, 812, 813, 814, 846, 846, 847, 879, 880, 881, 882, 883, 851, 819, 787, 788, 756, 757, 725, 726, 727, 759, 
[DBG]  Path for agent 42 updated, resulting length: 57
[DBG]  Paths successfully updated.
[DBG]  (LNS.cpp) New path for agent 28: 
[DBG]  661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 660, 660, 660, 628, 628, 628, 628, 628, 629, 661, 661, 661, 629, 628, 628, 628, 628, 660, 661, 661, 661, 660, 692, 691, 692, 724, 724, 724, 724, 724, 724, 724, 724, 724, 724, 724, 724, 724, 724, 724, 724, 724, 724, 725, 726, 727, 
[DBG]  (LNS.cpp) New path for agent 42: 
[DBG]  224, 224, 224, 256, 257, 289, 321, 353, 354, 355, 387, 419, 418, 450, 482, 483, 484, 516, 548, 580, 581, 613, 645, 646, 678, 710, 742, 774, 806, 807, 808, 809, 777, 778, 779, 780, 812, 813, 814, 846, 846, 847, 879, 880, 881, 882, 883, 851, 819, 787, 788, 756, 757, 725, 726, 727, 759, 
[DBG]  Delta value: 0
[DBG]  Rewarding metric index = 2
[DBG]  component_weights = {0.252646, 0.252486, 0.248445, 0.246423}
[DBG]  opSuccess value: 1
[STAT] neighbor.sum_of_costs before recomputation: 112
[STAT] neighbor.old_sum_of_costs before recomputation: 112
[STAT] sum_of_costs before recomputation: 4500
[DBG]  Validate solution immediately after SAT success.
[DBG]  No problems after SAT replan.
[DBG]  Recomputing sum_of_cost by dividing neighbor.sum_of_costs and neighbor.old_sum_of_costs
[STAT] sum_of_costs after recomputation: 4500
[STAT] Iteration 7
[DBG]  Using SAT operator (destroy+repair SAT).
[DBG]  ====================
[DBG]  SAT destroy operator called.
[DBG]  SAT heuristic: 2
[DBG]  key_agent_id: 28
[DBG]  key_agent_id global path length: 57
[DBG]  Submap content (global positions):
[DBG]  562 563 564 565 566 
[DBG]  594 595 596 597 598 
[DBG]  626 627 628 629 630 
[DBG]  658 659 660 661 662 
[DBG]  690 691 692 693 694 
[DBG]  Map content with agents and obstacles:
[DBG]  X . X A . 
[DBG]  . X . . X 
[DBG]  X . A . X 
[DBG]  . . . A X 
[DBG]  X . . X X 
[DBG]  content of the map structure that we pass to the SAT solver:
[DBG]  -1  1  -1  1  1  
[DBG]  1  -1  1  1  -1  
[DBG]  -1  1  1  1  -1  
[DBG]  1  1  1  1  -1  
[DBG]  -1  1  1  -1  -1  
[DBG]  Identifying agents in a submap for rescheduling (when key_agent is there at the time 26):
[DBG]  Agent 28 found intervals in the sub-map:
[DBG]   [0..35]
[DBG]  Agent 28 (interval in submap: [0..35]) contains time 26, added to replan.
[DBG]  Agent 30 found intervals in the sub-map:
[DBG]   [21..27]
[DBG]  Agent 30 (interval in submap: [21..27]) contains time 26, added to replan.
[DBG]  Agent 45 found intervals in the sub-map:
[DBG]   [17..28]
[DBG]  Agent 45 (interval in submap: [17..28]) contains time 26, added to replan.
[DBG]  Agent 74 found intervals in the sub-map:
[DBG]   [12..21]
[DBG]  Agent 74 is not in sub-map at time 26 (intervals: 
[DBG]  [12..21] )
[DBG]  Agent 28 | Start (global): 628 -> (local): (2, 2) at time 26 | Goal (global): 692 -> (local): (4, 2) at time 35
[DBG]  Agent 30 | Start (global): 565 -> (local): (0, 3) at time 26 | Goal (global): 566 -> (local): (0, 4) at time 27
[DBG]  Agent 45 | Start (global): 661 -> (local): (3, 3) at time 26 | Goal (global): 692 -> (local): (4, 2) at time 28
[DBG]  [REPAIR] SAT destroy operator called.
[DBG]  [REPAIR] SAT operator â€“ launching subproblem FOR OPTIMIZATION.
[DBG]  Creating local paths (sx, sy) in the submap for T_sync = 26
[DBG]    Agent 28 (global paths from T=26 to 35) has local path: (2,2) (2,2) (3,2) (3,3) (3,3) (3,3) (3,2) (4,2) (4,1) (4,2) 
[DBG]    Agent 30 (global paths from T=26 to 27) has local path: (0,3) (0,4) 
[DBG]    Agent 45 (global paths from T=26 to 28) has local path: (3,3) (3,2) (4,2) 
[DBG]  Checking input data for SAT solver:
[DBG]    - Number of agents to replan: 3
[DBG]  Agent 28 has the original local path length: 10 => Start (2,2), Goal (4,2)
[DBG]  Agent 30 has the original local path length: 2 => Start (0,3), Goal (0,4)
[DBG]  Agent 45 has the original local path length: 3 => Start (3,3), Goal (4,2)
[DBG]  Start position: (2, 2), (0, 3), (3, 3), 
[DBG]  Goal position: (4, 2), (0, 4), (4, 2), 
[DBG]  SAT instance and solver created.
Currently solving
Instance name: scen
Map name: map
Encoding used: disappear_at_goal
SAT solver used: Kissat
Optimizing function: sum of costs
Number of agents: 3
Mks LB: 3
SoC LB: 8
Delta: 0
Remaining time: 300000 [ms]

[DBG]  Solver returned: -1
[DBG]  SAT solver failed.
[STAT] SAT solver failed to find a valid solution.
[DBG]  ====================
[DBG]  SAT destroy operator called.
[DBG]  SAT heuristic: 2
[DBG]  key_agent_id: 28
[DBG]  key_agent_id global path length: 57
[DBG]  Submap content (global positions):
[DBG]  595 596 597 598 599 
[DBG]  627 628 629 630 631 
[DBG]  659 660 661 662 663 
[DBG]  691 692 693 694 695 
[DBG]  723 724 725 726 727 
[DBG]  Map content with agents and obstacles:
[DBG]  X A . X . 
[DBG]  . A . X . 
[DBG]  . A A X X 
[DBG]  A . X X X 
[DBG]  X A . . . 
[DBG]  content of the map structure that we pass to the SAT solver:
[DBG]  -1  1  1  -1  1  
[DBG]  1  1  1  -1  1  
[DBG]  1  1  1  -1  -1  
[DBG]  1  1  -1  -1  -1  
[DBG]  -1  1  1  1  1  
[DBG]  Identifying agents in a submap for rescheduling (when key_agent is there at the time 20):
[DBG]  Agent 11 found intervals in the sub-map:
[DBG]   [18..21]
[DBG]  Agent 11 (interval in submap: [18..21]) contains time 20, added to replan.
[DBG]  Agent 28 found intervals in the sub-map:
[DBG]   [0..56]
[DBG]  Agent 28 (interval in submap: [0..56]) contains time 20, added to replan.
[DBG]  Agent 30 found intervals in the sub-map:
[DBG]   [20..25]
[DBG]  Agent 30 (interval in submap: [20..25]) contains time 20, added to replan.
[DBG]  Agent 45 found intervals in the sub-map:
[DBG]   [18..30]
[DBG]  Agent 45 (interval in submap: [18..30]) contains time 20, added to replan.
[DBG]  Agent 61 found intervals in the sub-map:
[DBG]   [17..23]
[DBG]  Agent 61 (interval in submap: [17..23]) contains time 20, added to replan.
[DBG]  Agent 74 found intervals in the sub-map:
[DBG]   [13..19]
[DBG]  Agent 74 is not in sub-map at time 20 (intervals: 
[DBG]  [13..19] )
[DBG]  Agent 79 found intervals in the sub-map:
[DBG]   [17..22]
[DBG]  Agent 79 (interval in submap: [17..22]) contains time 20, added to replan.
[DBG]  Agent 11 | Start (global): 691 -> (local): (3, 0) at time 20 | Goal (global): 659 -> (local): (2, 0) at time 21
[DBG]  Agent 28 | Start (global): 661 -> (local): (2, 2) at time 20 | Goal (global): 727 -> (local): (4, 4) at time 56
[DBG]  Agent 30 | Start (global): 724 -> (local): (4, 1) at time 20 | Goal (global): 597 -> (local): (0, 2) at time 25
[DBG]  Agent 45 | Start (global): 596 -> (local): (0, 1) at time 20 | Goal (global): 725 -> (local): (4, 2) at time 30
[DBG]  Agent 61 | Start (global): 660 -> (local): (2, 1) at time 20 | Goal (global): 597 -> (local): (0, 2) at time 23
[DBG]  Agent 79 | Start (global): 628 -> (local): (1, 1) at time 20 | Goal (global): 597 -> (local): (0, 2) at time 22
[DBG]  [REPAIR] SAT destroy operator called.
[DBG]  [REPAIR] SAT operator â€“ launching subproblem FOR OPTIMIZATION.
[DBG]  Creating local paths (sx, sy) in the submap for T_sync = 20
[DBG]    Agent 11 (global paths from T=20 to 21) has local path: (3,0) (2,0) 
[DBG]    Agent 28 (global paths from T=20 to 56) has local path: (2,2) (2,2) (2,2) (1,2) (1,1) (1,1) (1,1) (1,1) (2,1) (2,2) (2,2) (2,2) (2,1) (3,1) (3,0) (3,1) (4,1) (4,1) (4,1) (4,1) (4,1) (4,1) (4,1) (4,1) (4,1) (4,1) (4,1) (4,1) (4,1) (4,1) (4,1) (4,1) (4,1) (4,1) (4,2) (4,3) (4,4) 
[DBG]    Agent 30 (global paths from T=20 to 25) has local path: (4,1) (3,1) (2,1) (1,1) (0,1) (0,2) 
[DBG]    Agent 45 (global paths from T=20 to 30) has local path: (0,1) (0,1) (0,1) (0,1) (0,2) (1,2) (2,2) (2,1) (3,1) (4,1) (4,2) 
[DBG]    Agent 61 (global paths from T=20 to 23) has local path: (2,1) (1,1) (1,2) (0,2) 
[DBG]    Agent 79 (global paths from T=20 to 22) has local path: (1,1) (1,2) (0,2) 
[DBG]  Checking input data for SAT solver:
[DBG]    - Number of agents to replan: 6
[DBG]  Agent 11 has the original local path length: 2 => Start (3,0), Goal (2,0)
[DBG]  Agent 28 has the original local path length: 37 => Start (2,2), Goal (4,4)
[DBG]  Agent 30 has the original local path length: 6 => Start (4,1), Goal (0,2)
[DBG]  Agent 45 has the original local path length: 11 => Start (0,1), Goal (4,2)
[DBG]  Agent 61 has the original local path length: 4 => Start (2,1), Goal (0,2)
[DBG]  Agent 79 has the original local path length: 3 => Start (1,1), Goal (0,2)
[DBG]  Start position: (3, 0), (2, 2), (4, 1), (0, 1), (2, 1), (1, 1), 
[DBG]  Goal position: (2, 0), (4, 4), (0, 2), (4, 2), (0, 2), (0, 2), 
[DBG]  SAT instance and solver created.
Currently solving
Instance name: scen
Map name: map
Encoding used: disappear_at_goal
SAT solver used: Kissat
Optimizing function: sum of costs
Number of agents: 6
Mks LB: 7
SoC LB: 28
Delta: 0
Remaining time: 300000 [ms]

[DBG]  Solver returned: -1
[DBG]  SAT solver failed.
[STAT] SAT solver failed to find a valid solution.
[DBG]  ====================
[DBG]  SAT destroy operator called.
[DBG]  SAT heuristic: 2
[DBG]  key_agent_id: 28
[DBG]  key_agent_id global path length: 57
[DBG]  Submap content (global positions):
[DBG]  626 627 628 629 630 
[DBG]  658 659 660 661 662 
[DBG]  690 691 692 693 694 
[DBG]  722 723 724 725 726 
[DBG]  754 755 756 757 758 
[DBG]  Map content with agents and obstacles:
[DBG]  X . . . X 
[DBG]  . A A . X 
[DBG]  X . A X X 
[DBG]  . X A . . 
[DBG]  X . . . X 
[DBG]  content of the map structure that we pass to the SAT solver:
[DBG]  -1  1  1  1  -1  
[DBG]  1  1  1  1  -1  
[DBG]  -1  1  1  -1  -1  
[DBG]  1  -1  1  1  1  
[DBG]  -1  1  1  1  -1  
[DBG]  Identifying agents in a submap for rescheduling (when key_agent is there at the time 33):
[DBG]  Agent 26 found intervals in the sub-map:
[DBG]   [30..35]
[DBG]  Agent 26 (interval in submap: [30..35]) contains time 33, added to replan.
[DBG]  Agent 28 found intervals in the sub-map:
[DBG]   [0..55]
[DBG]  Agent 28 (interval in submap: [0..55]) contains time 33, added to replan.
[DBG]  Agent 53 found intervals in the sub-map:
[DBG]   [32..36]
[DBG]  Agent 53 (interval in submap: [32..36]) contains time 33, added to replan.
[DBG]  Agent 148 found intervals in the sub-map:
[DBG]   [29..34]
[DBG]  Agent 148 (interval in submap: [29..34]) contains time 33, added to replan.
[DBG]  Agent 26 | Start (global): 724 -> (local): (3, 2) at time 33 | Goal (global): 755 -> (local): (4, 1) at time 35
[DBG]  Agent 28 | Start (global): 692 -> (local): (2, 2) at time 33 | Goal (global): 726 -> (local): (3, 4) at time 55
[DBG]  Agent 53 | Start (global): 660 -> (local): (1, 2) at time 33 | Goal (global): 756 -> (local): (4, 2) at time 36
[DBG]  Agent 148 | Start (global): 659 -> (local): (1, 1) at time 33 | Goal (global): 660 -> (local): (1, 2) at time 34
[DBG]  [REPAIR] SAT destroy operator called.
[DBG]  [REPAIR] SAT operator â€“ launching subproblem FOR OPTIMIZATION.
[DBG]  Creating local paths (sx, sy) in the submap for T_sync = 33
[DBG]    Agent 26 (global paths from T=33 to 35) has local path: (3,2) (4,2) (4,1) 
[DBG]    Agent 28 (global paths from T=33 to 55) has local path: (2,2) (2,1) (2,2) (3,2) (3,2) (3,2) (3,2) (3,2) (3,2) (3,2) (3,2) (3,2) (3,2) (3,2) (3,2) (3,2) (3,2) (3,2) (3,2) (3,2) (3,2) (3,3) (3,4) 
[DBG]    Agent 53 (global paths from T=33 to 36) has local path: (1,2) (2,2) (3,2) (4,2) 
[DBG]    Agent 148 (global paths from T=33 to 34) has local path: (1,1) (1,2) 
[DBG]  Checking input data for SAT solver:
[DBG]    - Number of agents to replan: 4
[DBG]  Agent 26 has the original local path length: 3 => Start (3,2), Goal (4,1)
[DBG]  Agent 28 has the original local path length: 23 => Start (2,2), Goal (3,4)
[DBG]  Agent 53 has the original local path length: 4 => Start (1,2), Goal (4,2)
[DBG]  Agent 148 has the original local path length: 2 => Start (1,1), Goal (1,2)
[DBG]  Start position: (3, 2), (2, 2), (1, 2), (1, 1), 
[DBG]  Goal position: (4, 1), (3, 4), (4, 2), (1, 2), 
[DBG]  SAT instance and solver created.
Currently solving
Instance name: scen
Map name: map
Encoding used: disappear_at_goal
SAT solver used: Kissat
Optimizing function: sum of costs
Number of agents: 4
Mks LB: 4
SoC LB: 13
Delta: 0
Remaining time: 300000 [ms]

Vertex conflict! Agents 0, 3, timestep 3, location 0
Found plan [agents = 4] [timesteps = 4]
Agent #0 : 10 14 13 0 
Agent #1 : 8 10 11 12 
Agent #2 : 5 8 10 14 
Agent #3 : 4 5 0 0 

[DBG]  Solver returned: 0
[DBG]  Agent (index) 26 | New local path (submap idx):
[DBG]  10 14 13 
[DBG]  Agent (index) 28 | New local path (submap idx):
[DBG]  8 10 11 12 
[DBG]  Agent (index) 53 | New local path (submap idx):
[DBG]  5 8 10 14 
[DBG]  Agent (index) 148 | New local path (submap idx):
[DBG]  4 5 
[DBG]  Update the agent path 26 | Original local length: 3 | New local length: 3
[DBG]  agent 26 t=0 => decoded (sx,sy)=(3,2) => global_id=724
[DBG]  agent 26 t=1 => decoded (sx,sy)=(4,2) => global_id=756
[DBG]  agent 26 t=2 => decoded (sx,sy)=(4,1) => global_id=755
[DBG]  Complete path of agent 26:
[DBG]    Original: 13 14 15 47 48 49 50 82 83 115 116 148 180 212 244 276 277 309 341 373 405 437 469 501 533 533 533 565 597 596 628 660 692 724 756 755 
[DBG]    New:     13 14 15 47 48 49 50 82 83 115 116 148 180 212 244 276 277 309 341 373 405 437 469 501 533 533 533 565 597 596 628 660 692 724 756 755 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 13 14 15 47 48 49 50 82 83 115 116 148 180 212 244 276 277 309 341 373 405 437 469 501 533 533 533 565 597 596 628 660 692 
[DBG]    Local path (in submap): 724 756 755 
[DBG]    Suffix (out of submap): 
[DBG]  Original agent path length 26 je: 36
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 0: 13, 14, 15, 47, 48, 49, 50, 82, 83, 115, 116, 148, 180, 212, 244, 276, 277, 309, 341, 373, 405, 437, 469, 501, 533, 533, 533, 565, 597, 596, 628, 660, 692, 724, 756, 755, 
[DBG]  Path for agent 26 updated, resulting length: 36
[DBG]  Update the agent path 28 | Original local length: 23 | New local length: 4
[DBG]  agent 28 t=0 => decoded (sx,sy)=(2,2) => global_id=692
[DBG]  agent 28 t=1 => decoded (sx,sy)=(3,2) => global_id=724
[DBG]  agent 28 t=2 => decoded (sx,sy)=(3,3) => global_id=725
[DBG]  agent 28 t=3 => decoded (sx,sy)=(3,4) => global_id=726
[DBG]  Complete path of agent 28:
[DBG]    Original: 661 661 661 661 661 661 661 661 661 661 661 660 660 660 628 628 628 628 628 629 661 661 661 629 628 628 628 628 660 661 661 661 660 692 691 692 724 724 724 724 724 724 724 724 724 724 724 724 724 724 724 724 724 724 725 726 727 
[DBG]    New:     661 661 661 661 661 661 661 661 661 661 661 660 660 660 628 628 628 628 628 629 661 661 661 629 628 628 628 628 660 661 661 661 660 692 724 725 726 727 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 661 661 661 661 661 661 661 661 661 661 661 660 660 660 628 628 628 628 628 629 661 661 661 629 628 628 628 628 660 661 661 661 660 
[DBG]    Local path (in submap): 692 724 725 726 727 
[DBG]    Suffix (out of submap): 
[DBG]  Original agent path length 28 je: 57
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 1: 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 660, 660, 660, 628, 628, 628, 628, 628, 629, 661, 661, 661, 629, 628, 628, 628, 628, 660, 661, 661, 661, 660, 692, 724, 725, 726, 727, 
[DBG]  Path for agent 28 updated, resulting length: 38
[DBG]  Update the agent path 53 | Original local length: 4 | New local length: 4
[DBG]  agent 53 t=0 => decoded (sx,sy)=(1,2) => global_id=660
[DBG]  agent 53 t=1 => decoded (sx,sy)=(2,2) => global_id=692
[DBG]  agent 53 t=2 => decoded (sx,sy)=(3,2) => global_id=724
[DBG]  agent 53 t=3 => decoded (sx,sy)=(4,2) => global_id=756
[DBG]  Complete path of agent 53:
[DBG]    Original: 84 116 148 180 212 244 276 308 309 310 311 343 375 375 376 375 407 439 438 470 470 470 470 470 470 469 469 501 533 565 597 596 628 660 692 724 756 788 820 821 
[DBG]    New:     84 116 148 180 212 244 276 308 309 310 311 343 375 375 376 375 407 439 438 470 470 470 470 470 470 469 469 501 533 565 597 596 628 660 692 724 756 788 820 821 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 84 116 148 180 212 244 276 308 309 310 311 343 375 375 376 375 407 439 438 470 470 470 470 470 470 469 469 501 533 565 597 596 628 
[DBG]    Local path (in submap): 660 692 724 756 
[DBG]    Suffix (out of submap): 788 820 821 
[DBG]  Original agent path length 53 je: 40
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 2: 84, 116, 148, 180, 212, 244, 276, 308, 309, 310, 311, 343, 375, 375, 376, 375, 407, 439, 438, 470, 470, 470, 470, 470, 470, 469, 469, 501, 533, 565, 597, 596, 628, 660, 692, 724, 756, 788, 820, 821, 
[DBG]  Path for agent 53 updated, resulting length: 40
[DBG]  Update the agent path 148 | Original local length: 2 | New local length: 2
[DBG]  agent 148 t=0 => decoded (sx,sy)=(1,1) => global_id=659
[DBG]  agent 148 t=1 => decoded (sx,sy)=(1,2) => global_id=660
[DBG]  Complete path of agent 148:
[DBG]    Original: 776 808 808 808 808 808 807 806 806 807 808 809 841 873 874 875 876 877 878 846 847 848 848 849 817 818 819 820 788 756 724 692 691 659 660 
[DBG]    New:     776 808 808 808 808 808 807 806 806 807 808 809 841 873 874 875 876 877 878 846 847 848 848 849 817 818 819 820 788 756 724 692 691 659 660 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 776 808 808 808 808 808 807 806 806 807 808 809 841 873 874 875 876 877 878 846 847 848 848 849 817 818 819 820 788 756 724 692 691 
[DBG]    Local path (in submap): 659 660 
[DBG]    Suffix (out of submap): 
[DBG]  Original agent path length 148 je: 35
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 3: 776, 808, 808, 808, 808, 808, 807, 806, 806, 807, 808, 809, 841, 873, 874, 875, 876, 877, 878, 846, 847, 848, 848, 849, 817, 818, 819, 820, 788, 756, 724, 692, 691, 659, 660, 
[DBG]  Path for agent 148 updated, resulting length: 35
[DBG]  Paths successfully updated.
[DBG]  (LNS.cpp) New path for agent 26: 
[DBG]  13, 14, 15, 47, 48, 49, 50, 82, 83, 115, 116, 148, 180, 212, 244, 276, 277, 309, 341, 373, 405, 437, 469, 501, 533, 533, 533, 565, 597, 596, 628, 660, 692, 724, 756, 755, 
[DBG]  (LNS.cpp) New path for agent 28: 
[DBG]  661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 660, 660, 660, 628, 628, 628, 628, 628, 629, 661, 661, 661, 629, 628, 628, 628, 628, 660, 661, 661, 661, 660, 692, 724, 725, 726, 727, 
[DBG]  (LNS.cpp) New path for agent 53: 
[DBG]  84, 116, 148, 180, 212, 244, 276, 308, 309, 310, 311, 343, 375, 375, 376, 375, 407, 439, 438, 470, 470, 470, 470, 470, 470, 469, 469, 501, 533, 565, 597, 596, 628, 660, 692, 724, 756, 788, 820, 821, 
[DBG]  (LNS.cpp) New path for agent 148: 
[DBG]  776, 808, 808, 808, 808, 808, 807, 806, 806, 807, 808, 809, 841, 873, 874, 875, 876, 877, 878, 846, 847, 848, 848, 849, 817, 818, 819, 820, 788, 756, 724, 692, 691, 659, 660, 
[DBG]  Delta value: 0.115854
[DBG]  Rewarding metric index = 1
[DBG]  component_weights = {0.241979, 0.284045, 0.237956, 0.236019}
[DBG]  opSuccess value: 1
[STAT] neighbor.sum_of_costs before recomputation: 145
[STAT] neighbor.old_sum_of_costs before recomputation: 164
[STAT] sum_of_costs before recomputation: 4500
[DBG]  Validate solution immediately after SAT success.
[WARNING] Problem after SAT: Target conflict: agent 42 (len 56) traverses target of agent 28 (len 37) at location 727 at timestep 55
[DBG]  [DEBUG] Attempting immediate repair via init_lns because problem occurred after SAT (should be applied only for conflicts...).
[DBG]  [DEBUG] Passing 150 agents to init_lns (skip=true).
[DBG]  [DEBUG] path_table contents for selected agents (neighbor.agents):
[DBG]    Agent 26 => controlling path length=36
[DBG]    Agent 28 => controlling path length=38
[DBG]    Agent 53 => controlling path length=40
[DBG]    Agent 148 => controlling path length=35
[DBG]  hodnota skip_initial_solution=1
[DBG]  We skip initialSolution => call buildCollisionData()
[DBG]  buildCollisionData() called â€“ skip_initial_solution case.
[DBG]  Agents.size()=150, collision_graph.size()=150
[DBG]  agent 28 => updateCollidingPairs => foundCollision
[DBG]  agent 42 => updateCollidingPairs => foundCollision
[DBG]  Conflicting agent pairs:
[DBG]  agent 28 is in conflict with agent 42
[DBG]  buildCollisionData() => sum_of_costs=4481, num_of_colliding_pairs=1
[DBG]  buildCollisionData done => sum_of_costs=4481, num_of_colliding_pairs=1
[DBG]  sum_of_cost hodnota: 4481
[DBG]  After skip/init build => iteration_stats.back(): sum_of_costs=4481, collisions=1
[DEBUG] Using default neighbor generation strategy for conflicts: 1
[DEBUG] Using default neighbor generation strategy for conflicts: 1
	InitLNS(PP): runtime = 0.00550138, iterations = 3, colliding pairs = 0, initial colliding pairs = 1, solution cost = 4514, initial solution cost = 4481, failed iterations = 0
[DBG]  [DEBUG] init_lns->sum_of_costs after init_lns->run: 4514
[DBG]  [DEBUG] sum_of_costs after assignment from init_lns->run: 4514
[DBG]  Recomputing sum_of_cost by dividing neighbor.sum_of_costs and neighbor.old_sum_of_costs
[STAT] sum_of_costs after recomputation: 4514
[STAT] Iteration 8
[DBG]  Random chance did not select SAT operator (r=52), using default strategy.
[DBG]  opSuccess value: 0
[STAT] Iteration 8
[DBG]  Random chance did not select SAT operator (r=59), using default strategy.
[DBG]  opSuccess value: 0
[STAT] Iteration 8
[DBG]  Random chance did not select SAT operator (r=56), using default strategy.
[DBG]  opSuccess value: 0
[STAT] Iteration 8
[DBG]  Using SAT operator (destroy+repair SAT).
[DBG]  ====================
[DBG]  SAT destroy operator called.
[DBG]  SAT heuristic: 2
[DBG]  key_agent_id: 28
[DBG]  key_agent_id global path length: 57
[DBG]  Submap content (global positions):
[DBG]  595 596 597 598 599 
[DBG]  627 628 629 630 631 
[DBG]  659 660 661 662 663 
[DBG]  691 692 693 694 695 
[DBG]  723 724 725 726 727 
[DBG]  Map content with agents and obstacles:
[DBG]  X . . X . 
[DBG]  . . . X . 
[DBG]  A . A X X 
[DBG]  . . X X X 
[DBG]  X . . A . 
[DBG]  content of the map structure that we pass to the SAT solver:
[DBG]  -1  1  1  -1  1  
[DBG]  1  1  1  -1  1  
[DBG]  1  1  1  -1  -1  
[DBG]  1  1  -1  -1  -1  
[DBG]  -1  1  1  1  1  
[DBG]  Identifying agents in a submap for rescheduling (when key_agent is there at the time 6):
[DBG]  Agent 28 found intervals in the sub-map:
[DBG]   [0..20] [29..36] [54..56]
[DBG]  Agent 28 (interval in submap: [0..20]) contains time 6, added to replan.
[DBG]  Agent 46 found intervals in the sub-map:
[DBG]   [4..7]
[DBG]  Agent 46 (interval in submap: [4..7]) contains time 6, added to replan.
[DBG]  Agent 108 found intervals in the sub-map:
[DBG]   [0..5]
[DBG]  Agent 108 is not in sub-map at time 6 (intervals: 
[DBG]  [0..5] )
[DBG]  Agent 113 found intervals in the sub-map:
[DBG]   [6..12]
[DBG]  Agent 113 (interval in submap: [6..12]) contains time 6, added to replan.
[DBG]  Agent 28 | Start (global): 661 -> (local): (2, 2) at time 6 | Goal (global): 597 -> (local): (0, 2) at time 20
[DBG]  Agent 46 | Start (global): 726 -> (local): (4, 3) at time 6 | Goal (global): 727 -> (local): (4, 4) at time 7
[DBG]  Agent 113 | Start (global): 659 -> (local): (2, 0) at time 6 | Goal (global): 727 -> (local): (4, 4) at time 12
[DBG]  [REPAIR] SAT destroy operator called.
[DBG]  [REPAIR] SAT operator â€“ launching subproblem FOR OPTIMIZATION.
[DBG]  Creating local paths (sx, sy) in the submap for T_sync = 6
[DBG]    Agent 28 (global paths from T=6 to 20) has local path: (2,2) (2,2) (2,2) (2,2) (2,2) (2,1) (2,1) (2,1) (1,1) (1,1) (1,1) (1,1) (1,1) (1,2) (0,2) 
[DBG]    Agent 46 (global paths from T=6 to 7) has local path: (4,3) (4,4) 
[DBG]    Agent 113 (global paths from T=6 to 12) has local path: (2,0) (2,1) (3,1) (4,1) (4,2) (4,3) (4,4) 
[DBG]  Checking input data for SAT solver:
[DBG]    - Number of agents to replan: 3
[DBG]  Agent 28 has the original local path length: 15 => Start (2,2), Goal (0,2)
[DBG]  Agent 46 has the original local path length: 2 => Start (4,3), Goal (4,4)
[DBG]  Agent 113 has the original local path length: 7 => Start (2,0), Goal (4,4)
[DBG]  Start position: (2, 2), (4, 3), (2, 0), 
[DBG]  Goal position: (0, 2), (4, 4), (4, 4), 
[DBG]  SAT instance and solver created.
Currently solving
Instance name: scen
Map name: map
Encoding used: disappear_at_goal
SAT solver used: Kissat
Optimizing function: sum of costs
Number of agents: 3
Mks LB: 7
SoC LB: 12
Delta: 0
Remaining time: 300000 [ms]

Vertex conflict! Agents 0, 1, timestep 3, location 0
Swapping conflict! Agents 0, 1, timestep 3, edge (0,0)
Vertex conflict! Agents 0, 1, timestep 4, location 0
Swapping conflict! Agents 0, 1, timestep 4, edge (0,0)
Vertex conflict! Agents 0, 1, timestep 5, location 0
Swapping conflict! Agents 0, 1, timestep 5, edge (0,0)
Vertex conflict! Agents 0, 1, timestep 6, location 0
Found plan [agents = 3] [timesteps = 7]
Agent #0 : 9 5 1 0 0 0 0 
Agent #1 : 14 15 0 0 0 0 0 
Agent #2 : 7 10 11 12 13 14 15 

[DBG]  Solver returned: 0
[DBG]  Agent (index) 28 | New local path (submap idx):
[DBG]  9 5 1 
[DBG]  Agent (index) 46 | New local path (submap idx):
[DBG]  14 15 
[DBG]  Agent (index) 113 | New local path (submap idx):
[DBG]  7 10 11 12 13 14 15 
[DBG]  Update the agent path 28 | Original local length: 15 | New local length: 3
[DBG]  agent 28 t=0 => decoded (sx,sy)=(2,2) => global_id=661
[DBG]  agent 28 t=1 => decoded (sx,sy)=(1,2) => global_id=629
[DBG]  agent 28 t=2 => decoded (sx,sy)=(0,2) => global_id=597
[DBG]  Complete path of agent 28:
[DBG]    Original: 661 661 661 661 661 661 661 661 661 661 661 660 660 660 628 628 628 628 628 629 597 565 533 534 534 502 501 533 565 597 596 628 660 661 660 692 724 756 757 757 757 757 757 757 757 757 757 757 757 757 757 757 757 757 725 726 727 
[DBG]    New:     661 661 661 661 661 661 661 629 597 565 533 534 534 502 501 533 565 597 596 628 660 661 660 692 724 756 757 757 757 757 757 757 757 757 757 757 757 757 757 757 757 757 725 726 727 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 661 661 661 661 661 661 
[DBG]    Local path (in submap): 661 629 597 565 533 534 534 502 501 533 565 597 596 628 660 
[DBG]    Suffix (out of submap): 661 660 692 724 756 757 757 757 757 757 757 757 757 757 757 757 757 757 757 757 757 725 726 727 
[DBG]  Original agent path length 28 je: 57
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 0: 661, 661, 661, 661, 661, 661, 661, 629, 597, 565, 533, 534, 534, 502, 501, 533, 565, 597, 596, 628, 660, 661, 660, 692, 724, 756, 757, 757, 757, 757, 757, 757, 757, 757, 757, 757, 757, 757, 757, 757, 757, 757, 725, 726, 727, 
[DBG]  Path for agent 28 updated, resulting length: 45
[DBG]  Update the agent path 46 | Original local length: 2 | New local length: 2
[DBG]  agent 46 t=0 => decoded (sx,sy)=(4,3) => global_id=726
[DBG]  agent 46 t=1 => decoded (sx,sy)=(4,4) => global_id=727
[DBG]  Complete path of agent 46:
[DBG]    Original: 786 787 788 756 724 725 726 727 728 696 664 632 633 601 569 570 538 539 507 475 476 444 445 413 381 349 317 285 284 252 
[DBG]    New:     786 787 788 756 724 725 726 727 728 696 664 632 633 601 569 570 538 539 507 475 476 444 445 413 381 349 317 285 284 252 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 786 787 788 756 724 725 
[DBG]    Local path (in submap): 726 727 
[DBG]    Suffix (out of submap): 728 696 664 632 633 601 569 570 538 539 507 475 476 444 445 413 381 349 317 285 284 252 
[DBG]  Original agent path length 46 je: 30
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 1: 786, 787, 788, 756, 724, 725, 726, 727, 728, 696, 664, 632, 633, 601, 569, 570, 538, 539, 507, 475, 476, 444, 445, 413, 381, 349, 317, 285, 284, 252, 
[DBG]  Path for agent 46 updated, resulting length: 30
[DBG]  Update the agent path 113 | Original local length: 7 | New local length: 7
[DBG]  agent 113 t=0 => decoded (sx,sy)=(2,0) => global_id=659
[DBG]  agent 113 t=1 => decoded (sx,sy)=(3,0) => global_id=691
[DBG]  agent 113 t=2 => decoded (sx,sy)=(3,1) => global_id=692
[DBG]  agent 113 t=3 => decoded (sx,sy)=(4,1) => global_id=724
[DBG]  agent 113 t=4 => decoded (sx,sy)=(4,2) => global_id=725
[DBG]  agent 113 t=5 => decoded (sx,sy)=(4,3) => global_id=726
[DBG]  agent 113 t=6 => decoded (sx,sy)=(4,4) => global_id=727
[DBG]  Complete path of agent 113:
[DBG]    Original: 529 561 593 625 657 658 659 660 692 724 725 726 727 728 696 664 632 633 601 602 603 571 539 540 541 541 509 477 445 413 381 349 350 318 319 287 255 254 222 
[DBG]    New:     529 561 593 625 657 658 659 691 692 724 725 726 727 728 696 664 632 633 601 602 603 571 539 540 541 541 509 477 445 413 381 349 350 318 319 287 255 254 222 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 529 561 593 625 657 658 
[DBG]    Local path (in submap): 659 691 692 724 725 726 727 
[DBG]    Suffix (out of submap): 728 696 664 632 633 601 602 603 571 539 540 541 541 509 477 445 413 381 349 350 318 319 287 255 254 222 
[DBG]  Original agent path length 113 je: 39
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 2: 529, 561, 593, 625, 657, 658, 659, 691, 692, 724, 725, 726, 727, 728, 696, 664, 632, 633, 601, 602, 603, 571, 539, 540, 541, 541, 509, 477, 445, 413, 381, 349, 350, 318, 319, 287, 255, 254, 222, 
[DBG]  Path for agent 113 updated, resulting length: 39
[DBG]  Paths successfully updated.
[DBG]  (LNS.cpp) New path for agent 28: 
[DBG]  661, 661, 661, 661, 661, 661, 661, 629, 597, 565, 533, 534, 534, 502, 501, 533, 565, 597, 596, 628, 660, 661, 660, 692, 724, 756, 757, 757, 757, 757, 757, 757, 757, 757, 757, 757, 757, 757, 757, 757, 757, 757, 725, 726, 727, 
[DBG]  (LNS.cpp) New path for agent 46: 
[DBG]  786, 787, 788, 756, 724, 725, 726, 727, 728, 696, 664, 632, 633, 601, 569, 570, 538, 539, 507, 475, 476, 444, 445, 413, 381, 349, 317, 285, 284, 252, 
[DBG]  (LNS.cpp) New path for agent 113: 
[DBG]  529, 561, 593, 625, 657, 658, 659, 691, 692, 724, 725, 726, 727, 728, 696, 664, 632, 633, 601, 602, 603, 571, 539, 540, 541, 541, 509, 477, 445, 413, 381, 349, 350, 318, 319, 287, 255, 254, 222, 
[DBG]  Delta value: 0.097561
[DBG]  Rewarding metric index = 2
[DBG]  component_weights = {0.233354, 0.273921, 0.265118, 0.227607}
[DBG]  opSuccess value: 1
[STAT] neighbor.sum_of_costs before recomputation: 111
[STAT] neighbor.old_sum_of_costs before recomputation: 123
[STAT] sum_of_costs before recomputation: 4514
[DBG]  Validate solution immediately after SAT success.
[WARNING] Problem after SAT: Vertex conflict between agents 30 and 28 at location 660 at timestep 22
[DBG]  [DEBUG] Attempting immediate repair via init_lns because problem occurred after SAT (should be applied only for conflicts...).
[DBG]  [DEBUG] Passing 150 agents to init_lns (skip=true).
[DBG]  [DEBUG] path_table contents for selected agents (neighbor.agents):
[DBG]    Agent 28 => controlling path length=45
[DBG]    Agent 46 => controlling path length=30
[DBG]    Agent 113 => controlling path length=39
[DBG]  hodnota skip_initial_solution=1
[DBG]  We skip initialSolution => call buildCollisionData()
[DBG]  buildCollisionData() called â€“ skip_initial_solution case.
[DBG]  Agents.size()=150, collision_graph.size()=150
[DBG]  agent 28 => updateCollidingPairs => foundCollision
[DBG]  agent 30 => updateCollidingPairs => foundCollision
[DBG]  agent 42 => updateCollidingPairs => foundCollision
[DBG]  agent 45 => updateCollidingPairs => foundCollision
[DBG]  agent 61 => updateCollidingPairs => foundCollision
[DBG]  agent 86 => updateCollidingPairs => foundCollision
[DBG]  agent 135 => updateCollidingPairs => foundCollision
[DBG]  Conflicting agent pairs:
[DBG]  agent 28 is in conflict with agent 30
[DBG]  agent 28 is in conflict with agent 42
[DBG]  agent 28 is in conflict with agent 45
[DBG]  agent 28 is in conflict with agent 61
[DBG]  agent 28 is in conflict with agent 86
[DBG]  agent 28 is in conflict with agent 135
[DBG]  buildCollisionData() => sum_of_costs=4502, num_of_colliding_pairs=6
[DBG]  buildCollisionData done => sum_of_costs=4502, num_of_colliding_pairs=6
[DBG]  sum_of_cost hodnota: 4502
[DBG]  After skip/init build => iteration_stats.back(): sum_of_costs=4502, collisions=6
[DEBUG] Using default neighbor generation strategy for conflicts: 2
[DEBUG] Using default neighbor generation strategy for conflicts: 1
	InitLNS(PP): runtime = 0.00580483, iterations = 3, colliding pairs = 0, initial colliding pairs = 6, solution cost = 4537, initial solution cost = 4502, failed iterations = 0
[DBG]  [DEBUG] init_lns->sum_of_costs after init_lns->run: 4537
[DBG]  [DEBUG] sum_of_costs after assignment from init_lns->run: 4537
[DBG]  Recomputing sum_of_cost by dividing neighbor.sum_of_costs and neighbor.old_sum_of_costs
[STAT] sum_of_costs after recomputation: 4537
[STAT] Iteration 9
[DBG]  Using SAT operator (destroy+repair SAT).
[DBG]  ====================
[DBG]  SAT destroy operator called.
[DBG]  SAT heuristic: 2
[DBG]  key_agent_id: 28
[DBG]  key_agent_id global path length: 57
[DBG]  Submap content (global positions):
[DBG]  691 692 693 694 695 
[DBG]  723 724 725 726 727 
[DBG]  755 756 757 758 759 
[DBG]  787 788 789 790 791 
[DBG]  819 820 821 822 823 
[DBG]  Map content with agents and obstacles:
[DBG]  . . X X X 
[DBG]  X . . . . 
[DBG]  . . A X . 
[DBG]  . . X . X 
[DBG]  . . . . . 
[DBG]  content of the map structure that we pass to the SAT solver:
[DBG]  1  1  -1  -1  -1  
[DBG]  -1  1  1  1  1  
[DBG]  1  1  1  -1  1  
[DBG]  1  1  -1  1  -1  
[DBG]  1  1  1  1  1  
[DBG]  Identifying agents in a submap for rescheduling (when key_agent is there at the time 44):
[DBG]  Agent 28 found intervals in the sub-map:
[DBG]   [35..56]
[DBG]  Agent 28 (interval in submap: [35..56]) contains time 44, added to replan.
[DBG]  Agent 28 | Start (global): 757 -> (local): (2, 2) at time 44 | Goal (global): 727 -> (local): (1, 4) at time 56
[DBG]  [REPAIR] SAT destroy operator called.
[DBG]  [REPAIR] SAT operator â€“ launching subproblem FOR OPTIMIZATION.
[DBG]  Creating local paths (sx, sy) in the submap for T_sync = 44
[DBG]    Agent 28 (global paths from T=44 to 56) has local path: (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (1,2) (1,3) (1,4) 
[DBG]  Checking input data for SAT solver:
[DBG]    - Number of agents to replan: 1
[DBG]  Agent 28 has the original local path length: 13 => Start (2,2), Goal (1,4)
[DBG]  Start position: (2, 2), 
[DBG]  Goal position: (1, 4), 
[DBG]  SAT instance and solver created.
Currently solving
Instance name: scen
Map name: map
Encoding used: disappear_at_goal
SAT solver used: Kissat
Optimizing function: sum of costs
Number of agents: 1
Mks LB: 4
SoC LB: 4
Delta: 0
Remaining time: 300000 [ms]

Found plan [agents = 1] [timesteps = 4]
Agent #0 : 8 3 4 5 

[DBG]  Solver returned: 0
[DBG]  Agent (index) 28 | New local path (submap idx):
[DBG]  8 3 4 5 
[DBG]  Update the agent path 28 | Original local length: 13 | New local length: 4
[DBG]  agent 28 t=0 => decoded (sx,sy)=(2,2) => global_id=757
[DBG]  agent 28 t=1 => decoded (sx,sy)=(1,2) => global_id=725
[DBG]  agent 28 t=2 => decoded (sx,sy)=(1,3) => global_id=726
[DBG]  agent 28 t=3 => decoded (sx,sy)=(1,4) => global_id=727
[DBG]  Complete path of agent 28:
[DBG]    Original: 661 661 661 661 661 661 661 661 661 661 661 660 628 628 628 628 628 628 628 628 628 628 629 629 629 629 629 629 629 629 629 629 629 628 660 692 724 725 757 757 757 757 757 757 757 757 757 757 757 757 757 757 757 757 725 726 727 
[DBG]    New:     661 661 661 661 661 661 661 661 661 661 661 660 628 628 628 628 628 628 628 628 628 628 629 629 629 629 629 629 629 629 629 629 629 628 660 692 724 725 757 757 757 757 757 757 757 725 726 727 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 661 661 661 661 661 661 661 661 661 661 661 660 628 628 628 628 628 628 628 628 628 628 629 629 629 629 629 629 629 629 629 629 629 628 660 692 724 725 757 757 757 757 757 757 
[DBG]    Local path (in submap): 757 725 726 727 
[DBG]    Suffix (out of submap): 
[DBG]  Original agent path length 28 je: 57
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 0: 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 660, 628, 628, 628, 628, 628, 628, 628, 628, 628, 628, 629, 629, 629, 629, 629, 629, 629, 629, 629, 629, 629, 628, 660, 692, 724, 725, 757, 757, 757, 757, 757, 757, 757, 725, 726, 727, 
[DBG]  Path for agent 28 updated, resulting length: 48
[DBG]  Paths successfully updated.
[DBG]  (LNS.cpp) New path for agent 28: 
[DBG]  661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 660, 628, 628, 628, 628, 628, 628, 628, 628, 628, 628, 629, 629, 629, 629, 629, 629, 629, 629, 629, 629, 629, 628, 660, 692, 724, 725, 757, 757, 757, 757, 757, 757, 757, 725, 726, 727, 
[DBG]  Delta value: 0.160714
[DBG]  Rewarding metric index = 2
[DBG]  component_weights = {0.220394, 0.258708, 0.305932, 0.214966}
[DBG]  opSuccess value: 1
[STAT] neighbor.sum_of_costs before recomputation: 47
[STAT] neighbor.old_sum_of_costs before recomputation: 56
[STAT] sum_of_costs before recomputation: 4537
[DBG]  Validate solution immediately after SAT success.
[WARNING] Problem after SAT: Target conflict: agent 42 (len 56) traverses target of agent 28 (len 47) at location 727 at timestep 55
[DBG]  [DEBUG] Attempting immediate repair via init_lns because problem occurred after SAT (should be applied only for conflicts...).
[DBG]  [DEBUG] Passing 150 agents to init_lns (skip=true).
[DBG]  [DEBUG] path_table contents for selected agents (neighbor.agents):
[DBG]    Agent 28 => controlling path length=48
[DBG]  hodnota skip_initial_solution=1
[DBG]  We skip initialSolution => call buildCollisionData()
[DBG]  buildCollisionData() called â€“ skip_initial_solution case.
[DBG]  Agents.size()=150, collision_graph.size()=150
[DBG]  agent 28 => updateCollidingPairs => foundCollision
[DBG]  agent 42 => updateCollidingPairs => foundCollision
[DBG]  Conflicting agent pairs:
[DBG]  agent 28 is in conflict with agent 42
[DBG]  buildCollisionData() => sum_of_costs=4528, num_of_colliding_pairs=1
[DBG]  buildCollisionData done => sum_of_costs=4528, num_of_colliding_pairs=1
[DBG]  sum_of_cost hodnota: 4528
[DBG]  After skip/init build => iteration_stats.back(): sum_of_costs=4528, collisions=1
[DEBUG] Using default neighbor generation strategy for conflicts: 1
	InitLNS(PP): runtime = 0.00493579, iterations = 2, colliding pairs = 0, initial colliding pairs = 1, solution cost = 4553, initial solution cost = 4528, failed iterations = 0
[DBG]  [DEBUG] init_lns->sum_of_costs after init_lns->run: 4553
[DBG]  [DEBUG] sum_of_costs after assignment from init_lns->run: 4553
[DBG]  Recomputing sum_of_cost by dividing neighbor.sum_of_costs and neighbor.old_sum_of_costs
[STAT] sum_of_costs after recomputation: 4553
[STAT] Iteration 10
[DBG]  Random chance did not select SAT operator (r=64), using default strategy.
[DBG]  opSuccess value: 0
[STAT] Iteration 10
[DBG]  Random chance did not select SAT operator (r=64), using default strategy.
[DBG]  opSuccess value: 0
[STAT] Iteration 10
[DBG]  Using SAT operator (destroy+repair SAT).
[DBG]  ====================
[DBG]  SAT destroy operator called.
[DBG]  SAT heuristic: 2
[DBG]  key_agent_id: 28
[DBG]  key_agent_id global path length: 57
[DBG]  Submap content (global positions):
[DBG]  561 562 563 564 565 
[DBG]  593 594 595 596 597 
[DBG]  625 626 627 628 629 
[DBG]  657 658 659 660 661 
[DBG]  689 690 691 692 693 
[DBG]  Map content with agents and obstacles:
[DBG]  . X . X . 
[DBG]  . . X . . 
[DBG]  . X A . . 
[DBG]  . . . . . 
[DBG]  . X . . X 
[DBG]  content of the map structure that we pass to the SAT solver:
[DBG]  1  -1  1  -1  1  
[DBG]  1  1  -1  1  1  
[DBG]  1  -1  1  1  1  
[DBG]  1  1  1  1  1  
[DBG]  1  -1  1  1  -1  
[DBG]  Identifying agents in a submap for rescheduling (when key_agent is there at the time 27):
[DBG]  Agent 26 found intervals in the sub-map:
[DBG]   [32..39]
[DBG]  Agent 26 is not in sub-map at time 27 (intervals: 
[DBG]  [32..39] )
[DBG]  Agent 28 found intervals in the sub-map:
[DBG]   [0..40]
[DBG]  Agent 28 (interval in submap: [0..40]) contains time 27, added to replan.
[DBG]  Agent 45 found intervals in the sub-map:
[DBG]   [31..38]
[DBG]  Agent 45 is not in sub-map at time 27 (intervals: 
[DBG]  [31..38] )
[DBG]  Agent 28 | Start (global): 627 -> (local): (2, 2) at time 27 | Goal (global): 692 -> (local): (4, 3) at time 40
[DBG]  [REPAIR] SAT destroy operator called.
[DBG]  [REPAIR] SAT operator â€“ launching subproblem FOR OPTIMIZATION.
[DBG]  Creating local paths (sx, sy) in the submap for T_sync = 27
[DBG]    Agent 28 (global paths from T=27 to 40) has local path: (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (3,2) (3,1) (3,1) (3,2) (4,2) (4,3) 
[DBG]  Checking input data for SAT solver:
[DBG]    - Number of agents to replan: 1
[DBG]  Agent 28 has the original local path length: 14 => Start (2,2), Goal (4,3)
[DBG]  Start position: (2, 2), 
[DBG]  Goal position: (4, 3), 
[DBG]  SAT instance and solver created.
Currently solving
Instance name: scen
Map name: map
Encoding used: disappear_at_goal
SAT solver used: Kissat
Optimizing function: sum of costs
Number of agents: 1
Mks LB: 4
SoC LB: 4
Delta: 0
Remaining time: 300000 [ms]

Found plan [agents = 1] [timesteps = 4]
Agent #0 : 8 13 17 18 

[DBG]  Solver returned: 0
[DBG]  Agent (index) 28 | New local path (submap idx):
[DBG]  8 13 17 18 
[DBG]  Update the agent path 28 | Original local length: 14 | New local length: 4
[DBG]  agent 28 t=0 => decoded (sx,sy)=(2,2) => global_id=627
[DBG]  agent 28 t=1 => decoded (sx,sy)=(3,2) => global_id=659
[DBG]  agent 28 t=2 => decoded (sx,sy)=(4,2) => global_id=691
[DBG]  agent 28 t=3 => decoded (sx,sy)=(4,3) => global_id=692
[DBG]  Complete path of agent 28:
[DBG]    Original: 661 661 661 661 661 661 661 661 661 661 661 660 692 692 692 660 659 627 627 627 627 627 627 627 627 627 627 627 627 627 627 627 627 627 627 659 658 658 659 691 692 724 724 724 724 724 724 724 724 724 724 724 724 724 725 726 727 
[DBG]    New:     661 661 661 661 661 661 661 661 661 661 661 660 692 692 692 660 659 627 627 627 627 627 627 627 627 627 627 627 659 691 692 724 724 724 724 724 724 724 724 724 724 724 724 724 725 726 727 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 661 661 661 661 661 661 661 661 661 661 661 660 692 692 692 660 659 627 627 627 627 627 627 627 627 627 627 
[DBG]    Local path (in submap): 627 659 691 692 724 724 724 724 724 724 724 724 724 724 
[DBG]    Suffix (out of submap): 724 724 724 725 726 727 
[DBG]  Original agent path length 28 je: 57
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 0: 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 660, 692, 692, 692, 660, 659, 627, 627, 627, 627, 627, 627, 627, 627, 627, 627, 627, 659, 691, 692, 724, 724, 724, 724, 724, 724, 724, 724, 724, 724, 724, 724, 724, 725, 726, 727, 
[DBG]  Path for agent 28 updated, resulting length: 47
[DBG]  Paths successfully updated.
[DBG]  (LNS.cpp) New path for agent 28: 
[DBG]  661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 660, 692, 692, 692, 660, 659, 627, 627, 627, 627, 627, 627, 627, 627, 627, 627, 627, 659, 691, 692, 724, 724, 724, 724, 724, 724, 724, 724, 724, 724, 724, 724, 724, 725, 726, 727, 
[DBG]  Delta value: 0.178571
[DBG]  Rewarding metric index = 3
[DBG]  component_weights = {0.209556, 0.245985, 0.290887, 0.253572}
[DBG]  opSuccess value: 1
[STAT] neighbor.sum_of_costs before recomputation: 46
[STAT] neighbor.old_sum_of_costs before recomputation: 56
[STAT] sum_of_costs before recomputation: 4553
[DBG]  Validate solution immediately after SAT success.
[WARNING] Problem after SAT: Vertex conflict between agents 28 and 26 at location 724 at timestep 40
[DBG]  [DEBUG] Attempting immediate repair via init_lns because problem occurred after SAT (should be applied only for conflicts...).
[DBG]  [DEBUG] Passing 150 agents to init_lns (skip=true).
[DBG]  [DEBUG] path_table contents for selected agents (neighbor.agents):
[DBG]    Agent 28 => controlling path length=47
[DBG]  hodnota skip_initial_solution=1
[DBG]  We skip initialSolution => call buildCollisionData()
[DBG]  buildCollisionData() called â€“ skip_initial_solution case.
[DBG]  Agents.size()=150, collision_graph.size()=150
[DBG]  agent 26 => updateCollidingPairs => foundCollision
[DBG]  agent 28 => updateCollidingPairs => foundCollision
[DBG]  agent 42 => updateCollidingPairs => foundCollision
[DBG]  agent 45 => updateCollidingPairs => foundCollision
[DBG]  agent 53 => updateCollidingPairs => foundCollision
[DBG]  agent 148 => updateCollidingPairs => foundCollision
[DBG]  Conflicting agent pairs:
[DBG]  agent 26 is in conflict with agent 28
[DBG]  agent 28 is in conflict with agent 42
[DBG]  agent 28 is in conflict with agent 45
[DBG]  agent 28 is in conflict with agent 53
[DBG]  agent 28 is in conflict with agent 148
[DBG]  buildCollisionData() => sum_of_costs=4543, num_of_colliding_pairs=5
[DBG]  buildCollisionData done => sum_of_costs=4543, num_of_colliding_pairs=5
[DBG]  sum_of_cost hodnota: 4543
[DBG]  After skip/init build => iteration_stats.back(): sum_of_costs=4543, collisions=5
[DEBUG] Using default neighbor generation strategy for conflicts: 0
	InitLNS(PP): runtime = 0.00238146, iterations = 2, colliding pairs = 0, initial colliding pairs = 5, solution cost = 4561, initial solution cost = 4543, failed iterations = 0
[DBG]  [DEBUG] init_lns->sum_of_costs after init_lns->run: 4561
[DBG]  [DEBUG] sum_of_costs after assignment from init_lns->run: 4561
[DBG]  Recomputing sum_of_cost by dividing neighbor.sum_of_costs and neighbor.old_sum_of_costs
[STAT] sum_of_costs after recomputation: 4561
[STAT] Iteration 11
[DBG]  Using SAT operator (destroy+repair SAT).
[DBG]  ====================
[DBG]  SAT destroy operator called.
[DBG]  SAT heuristic: 2
[DBG]  key_agent_id: 28
[DBG]  key_agent_id global path length: 57
[DBG]  Submap content (global positions):
[DBG]  595 596 597 598 599 
[DBG]  627 628 629 630 631 
[DBG]  659 660 661 662 663 
[DBG]  691 692 693 694 695 
[DBG]  723 724 725 726 727 
[DBG]  Map content with agents and obstacles:
[DBG]  X . . X . 
[DBG]  . . A X . 
[DBG]  . . A X X 
[DBG]  . . X X X 
[DBG]  X . . A . 
[DBG]  content of the map structure that we pass to the SAT solver:
[DBG]  -1  1  1  -1  1  
[DBG]  1  1  1  -1  1  
[DBG]  1  1  1  -1  -1  
[DBG]  1  1  -1  -1  -1  
[DBG]  -1  1  1  1  1  
[DBG]  Identifying agents in a submap for rescheduling (when key_agent is there at the time 28):
[DBG]  Agent 26 found intervals in the sub-map:
[DBG]   [33..40]
[DBG]  Agent 26 is not in sub-map at time 28 (intervals: 
[DBG]  [33..40] )
[DBG]  Agent 28 found intervals in the sub-map:
[DBG]   [0..56]
[DBG]  Agent 28 (interval in submap: [0..56]) contains time 28, added to replan.
[DBG]  Agent 45 found intervals in the sub-map:
[DBG]   [32..39]
[DBG]  Agent 45 is not in sub-map at time 28 (intervals: 
[DBG]  [32..39] )
[DBG]  Agent 53 found intervals in the sub-map:
[DBG]   [27..32]
[DBG]  Agent 53 (interval in submap: [27..32]) contains time 28, added to replan.
[DBG]  Agent 111 found intervals in the sub-map:
[DBG]   [26..29]
[DBG]  Agent 111 (interval in submap: [26..29]) contains time 28, added to replan.
[DBG]  Agent 28 | Start (global): 661 -> (local): (2, 2) at time 28 | Goal (global): 727 -> (local): (4, 4) at time 56
[DBG]  Agent 53 | Start (global): 629 -> (local): (1, 2) at time 28 | Goal (global): 724 -> (local): (4, 1) at time 32
[DBG]  Agent 111 | Start (global): 726 -> (local): (4, 3) at time 28 | Goal (global): 727 -> (local): (4, 4) at time 29
[DBG]  [REPAIR] SAT destroy operator called.
[DBG]  [REPAIR] SAT operator â€“ launching subproblem FOR OPTIMIZATION.
[DBG]  Creating local paths (sx, sy) in the submap for T_sync = 28
[DBG]    Agent 28 (global paths from T=28 to 56) has local path: (2,2) (2,2) (2,2) (2,1) (2,1) (2,1) (2,1) (2,1) (2,1) (2,1) (2,1) (2,1) (3,1) (4,1) (4,1) (4,1) (4,1) (4,1) (4,1) (4,1) (4,1) (4,1) (4,1) (4,1) (4,1) (4,1) (4,2) (4,3) (4,4) 
[DBG]    Agent 53 (global paths from T=28 to 32) has local path: (1,2) (1,1) (2,1) (3,1) (4,1) 
[DBG]    Agent 111 (global paths from T=28 to 29) has local path: (4,3) (4,4) 
[DBG]  Checking input data for SAT solver:
[DBG]    - Number of agents to replan: 3
[DBG]  Agent 28 has the original local path length: 29 => Start (2,2), Goal (4,4)
[DBG]  Agent 53 has the original local path length: 5 => Start (1,2), Goal (4,1)
[DBG]  Agent 111 has the original local path length: 2 => Start (4,3), Goal (4,4)
[DBG]  Start position: (2, 2), (1, 2), (4, 3), 
[DBG]  Goal position: (4, 4), (4, 1), (4, 4), 
[DBG]  SAT instance and solver created.
Currently solving
Instance name: scen
Map name: map
Encoding used: disappear_at_goal
SAT solver used: Kissat
Optimizing function: sum of costs
Number of agents: 3
Mks LB: 7
SoC LB: 14
Delta: 0
Remaining time: 300000 [ms]

Vertex conflict! Agents 1, 2, timestep 5, location 0
Swapping conflict! Agents 1, 2, timestep 5, edge (0,0)
Vertex conflict! Agents 1, 2, timestep 6, location 0
Found plan [agents = 3] [timesteps = 7]
Agent #0 : 9 8 11 12 13 14 15 
Agent #1 : 5 9 8 11 12 0 0 
Agent #2 : 14 15 0 0 0 0 0 

[DBG]  Solver returned: 0
[DBG]  Agent (index) 28 | New local path (submap idx):
[DBG]  9 8 11 12 13 14 15 
[DBG]  Agent (index) 53 | New local path (submap idx):
[DBG]  5 9 8 11 12 
[DBG]  Agent (index) 111 | New local path (submap idx):
[DBG]  14 15 
[DBG]  Update the agent path 28 | Original local length: 29 | New local length: 7
[DBG]  agent 28 t=0 => decoded (sx,sy)=(2,2) => global_id=661
[DBG]  agent 28 t=1 => decoded (sx,sy)=(2,1) => global_id=660
[DBG]  agent 28 t=2 => decoded (sx,sy)=(3,1) => global_id=692
[DBG]  agent 28 t=3 => decoded (sx,sy)=(4,1) => global_id=724
[DBG]  agent 28 t=4 => decoded (sx,sy)=(4,2) => global_id=725
[DBG]  agent 28 t=5 => decoded (sx,sy)=(4,3) => global_id=726
[DBG]  agent 28 t=6 => decoded (sx,sy)=(4,4) => global_id=727
[DBG]  Complete path of agent 28:
[DBG]    Original: 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 660 660 660 660 660 660 660 660 660 692 724 724 724 724 724 724 724 724 724 724 724 724 724 725 726 727 
[DBG]    New:     661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 660 692 724 725 726 727 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 
[DBG]    Local path (in submap): 661 660 692 724 725 726 727 
[DBG]    Suffix (out of submap): 
[DBG]  Original agent path length 28 je: 57
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 0: 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 660, 692, 724, 725, 726, 727, 
[DBG]  Path for agent 28 updated, resulting length: 35
[DBG]  Update the agent path 53 | Original local length: 5 | New local length: 5
[DBG]  agent 53 t=0 => decoded (sx,sy)=(1,2) => global_id=629
[DBG]  agent 53 t=1 => decoded (sx,sy)=(2,2) => global_id=661
[DBG]  agent 53 t=2 => decoded (sx,sy)=(2,1) => global_id=660
[DBG]  agent 53 t=3 => decoded (sx,sy)=(3,1) => global_id=692
[DBG]  agent 53 t=4 => decoded (sx,sy)=(4,1) => global_id=724
[DBG]  Complete path of agent 53:
[DBG]    Original: 84 116 148 180 212 244 276 308 309 277 276 308 308 308 308 340 341 373 405 437 469 501 533 533 533 533 565 597 629 628 660 692 724 756 788 820 821 
[DBG]    New:     84 116 148 180 212 244 276 308 309 277 276 308 308 308 308 340 341 373 405 437 469 501 533 533 533 533 565 597 629 661 660 692 724 756 788 820 821 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 84 116 148 180 212 244 276 308 309 277 276 308 308 308 308 340 341 373 405 437 469 501 533 533 533 533 565 597 
[DBG]    Local path (in submap): 629 661 660 692 724 
[DBG]    Suffix (out of submap): 756 788 820 821 
[DBG]  Original agent path length 53 je: 37
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 1: 84, 116, 148, 180, 212, 244, 276, 308, 309, 277, 276, 308, 308, 308, 308, 340, 341, 373, 405, 437, 469, 501, 533, 533, 533, 533, 565, 597, 629, 661, 660, 692, 724, 756, 788, 820, 821, 
[DBG]  Path for agent 53 updated, resulting length: 37
[DBG]  Update the agent path 111 | Original local length: 2 | New local length: 2
[DBG]  agent 111 t=0 => decoded (sx,sy)=(4,3) => global_id=726
[DBG]  agent 111 t=1 => decoded (sx,sy)=(4,4) => global_id=727
[DBG]  Complete path of agent 111:
[DBG]    Original: 964 996 997 998 999 1000 968 936 937 905 906 874 875 876 877 878 846 847 848 849 850 818 786 787 755 756 724 725 726 727 728 696 664 632 600 601 602 570 538 539 540 
[DBG]    New:     964 996 997 998 999 1000 968 936 937 905 906 874 875 876 877 878 846 847 848 849 850 818 786 787 755 756 724 725 726 727 728 696 664 632 600 601 602 570 538 539 540 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 964 996 997 998 999 1000 968 936 937 905 906 874 875 876 877 878 846 847 848 849 850 818 786 787 755 756 724 725 
[DBG]    Local path (in submap): 726 727 
[DBG]    Suffix (out of submap): 728 696 664 632 600 601 602 570 538 539 540 
[DBG]  Original agent path length 111 je: 41
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 2: 964, 996, 997, 998, 999, 1000, 968, 936, 937, 905, 906, 874, 875, 876, 877, 878, 846, 847, 848, 849, 850, 818, 786, 787, 755, 756, 724, 725, 726, 727, 728, 696, 664, 632, 600, 601, 602, 570, 538, 539, 540, 
[DBG]  Path for agent 111 updated, resulting length: 41
[DBG]  Paths successfully updated.
[DBG]  (LNS.cpp) New path for agent 28: 
[DBG]  661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 660, 692, 724, 725, 726, 727, 
[DBG]  (LNS.cpp) New path for agent 53: 
[DBG]  84, 116, 148, 180, 212, 244, 276, 308, 309, 277, 276, 308, 308, 308, 308, 340, 341, 373, 405, 437, 469, 501, 533, 533, 533, 533, 565, 597, 629, 661, 660, 692, 724, 756, 788, 820, 821, 
[DBG]  (LNS.cpp) New path for agent 111: 
[DBG]  964, 996, 997, 998, 999, 1000, 968, 936, 937, 905, 906, 874, 875, 876, 877, 878, 846, 847, 848, 849, 850, 818, 786, 787, 755, 756, 724, 725, 726, 727, 728, 696, 664, 632, 600, 601, 602, 570, 538, 539, 540, 
[DBG]  Delta value: 0.166667
[DBG]  Rewarding metric index = 3
[DBG]  component_weights = {0.198099, 0.232537, 0.274984, 0.294379}
[DBG]  opSuccess value: 1
[STAT] neighbor.sum_of_costs before recomputation: 110
[STAT] neighbor.old_sum_of_costs before recomputation: 132
[STAT] sum_of_costs before recomputation: 4561
[DBG]  Validate solution immediately after SAT success.
[WARNING] Problem after SAT: Target conflict: agent 42 (len 56) traverses target of agent 28 (len 34) at location 727 at timestep 55
[DBG]  [DEBUG] Attempting immediate repair via init_lns because problem occurred after SAT (should be applied only for conflicts...).
[DBG]  [DEBUG] Passing 150 agents to init_lns (skip=true).
[DBG]  [DEBUG] path_table contents for selected agents (neighbor.agents):
[DBG]    Agent 28 => controlling path length=35
[DBG]    Agent 53 => controlling path length=37
[DBG]    Agent 111 => controlling path length=41
[DBG]  hodnota skip_initial_solution=1
[DBG]  We skip initialSolution => call buildCollisionData()
[DBG]  buildCollisionData() called â€“ skip_initial_solution case.
[DBG]  Agents.size()=150, collision_graph.size()=150
[DBG]  agent 28 => updateCollidingPairs => foundCollision
[DBG]  agent 42 => updateCollidingPairs => foundCollision
[DBG]  agent 148 => updateCollidingPairs => foundCollision
[DBG]  Conflicting agent pairs:
[DBG]  agent 28 is in conflict with agent 42
[DBG]  agent 28 is in conflict with agent 148
[DBG]  buildCollisionData() => sum_of_costs=4539, num_of_colliding_pairs=2
[DBG]  buildCollisionData done => sum_of_costs=4539, num_of_colliding_pairs=2
[DBG]  sum_of_cost hodnota: 4539
[DBG]  After skip/init build => iteration_stats.back(): sum_of_costs=4539, collisions=2
[DEBUG] Using default neighbor generation strategy for conflicts: 2
[DEBUG] Using default neighbor generation strategy for conflicts: 0
	InitLNS(PP): runtime = 0.00247, iterations = 3, colliding pairs = 0, initial colliding pairs = 2, solution cost = 4557, initial solution cost = 4539, failed iterations = 0
[DBG]  [DEBUG] init_lns->sum_of_costs after init_lns->run: 4557
[DBG]  [DEBUG] sum_of_costs after assignment from init_lns->run: 4557
[DBG]  Recomputing sum_of_cost by dividing neighbor.sum_of_costs and neighbor.old_sum_of_costs
[STAT] sum_of_costs after recomputation: 4557
[STAT] Iteration 12
[DBG]  Using SAT operator (destroy+repair SAT).
[DBG]  ====================
[DBG]  SAT destroy operator called.
[DBG]  SAT heuristic: 2
[DBG]  key_agent_id: 28
[DBG]  key_agent_id global path length: 57
[DBG]  Submap content (global positions):
[DBG]  658 659 660 661 662 
[DBG]  690 691 692 693 694 
[DBG]  722 723 724 725 726 
[DBG]  754 755 756 757 758 
[DBG]  786 787 788 789 790 
[DBG]  Map content with agents and obstacles:
[DBG]  . . . . X 
[DBG]  X . . X X 
[DBG]  . X A . . 
[DBG]  X . . A X 
[DBG]  . . . X . 
[DBG]  content of the map structure that we pass to the SAT solver:
[DBG]  1  1  1  1  -1  
[DBG]  -1  1  1  -1  -1  
[DBG]  1  -1  1  1  1  
[DBG]  -1  1  1  1  -1  
[DBG]  1  1  1  -1  1  
[DBG]  Identifying agents in a submap for rescheduling (when key_agent is there at the time 52):
[DBG]  Agent 28 found intervals in the sub-map:
[DBG]   [0..21] [38..55]
[DBG]  Agent 28 (interval in submap: [38..55]) contains time 52, added to replan.
[DBG]  Agent 42 found intervals in the sub-map:
[DBG]   [49..54]
[DBG]  Agent 42 (interval in submap: [49..54]) contains time 52, added to replan.
[DBG]  Agent 28 | Start (global): 724 -> (local): (2, 2) at time 52 | Goal (global): 726 -> (local): (2, 4) at time 55
[DBG]  Agent 42 | Start (global): 757 -> (local): (3, 3) at time 52 | Goal (global): 726 -> (local): (2, 4) at time 54
[DBG]  [REPAIR] SAT destroy operator called.
[DBG]  [REPAIR] SAT operator â€“ launching subproblem FOR OPTIMIZATION.
[DBG]  Creating local paths (sx, sy) in the submap for T_sync = 52
[DBG]    Agent 28 (global paths from T=52 to 55) has local path: (2,2) (2,2) (2,3) (2,4) 
[DBG]    Agent 42 (global paths from T=52 to 54) has local path: (3,3) (2,3) (2,4) 
[DBG]  Checking input data for SAT solver:
[DBG]    - Number of agents to replan: 2
[DBG]  Agent 28 has the original local path length: 4 => Start (2,2), Goal (2,4)
[DBG]  Agent 42 has the original local path length: 3 => Start (3,3), Goal (2,4)
[DBG]  Start position: (2, 2), (3, 3), 
[DBG]  Goal position: (2, 4), (2, 4), 
[DBG]  SAT instance and solver created.
Currently solving
Instance name: scen
Map name: map
Encoding used: disappear_at_goal
SAT solver used: Kissat
Optimizing function: sum of costs
Number of agents: 2
Mks LB: 3
SoC LB: 6
Delta: 0
Remaining time: 300000 [ms]

[DBG]  Solver returned: -1
[DBG]  SAT solver failed.
[STAT] SAT solver failed to find a valid solution.
[DBG]  ====================
[DBG]  SAT destroy operator called.
[DBG]  SAT heuristic: 2
[DBG]  key_agent_id: 28
[DBG]  key_agent_id global path length: 57
[DBG]  Submap content (global positions):
[DBG]  595 596 597 598 599 
[DBG]  627 628 629 630 631 
[DBG]  659 660 661 662 663 
[DBG]  691 692 693 694 695 
[DBG]  723 724 725 726 727 
[DBG]  Map content with agents and obstacles:
[DBG]  X . . X . 
[DBG]  . . . X . 
[DBG]  . . A X X 
[DBG]  . A X X X 
[DBG]  X . . . A 
[DBG]  content of the map structure that we pass to the SAT solver:
[DBG]  -1  1  1  -1  1  
[DBG]  1  1  1  -1  1  
[DBG]  1  1  1  -1  -1  
[DBG]  1  1  -1  -1  -1  
[DBG]  -1  1  1  1  1  
[DBG]  Identifying agents in a submap for rescheduling (when key_agent is there at the time 4):
[DBG]  Agent 7 found intervals in the sub-map:
[DBG]   [1..4]
[DBG]  Agent 7 (interval in submap: [1..4]) contains time 4, added to replan.
[DBG]  Agent 28 found intervals in the sub-map:
[DBG]   [0..56]
[DBG]  Agent 28 (interval in submap: [0..56]) contains time 4, added to replan.
[DBG]  Agent 46 found intervals in the sub-map:
[DBG]   [5..7]
[DBG]  Agent 46 is not in sub-map at time 4 (intervals: 
[DBG]  [5..7] )
[DBG]  Agent 108 found intervals in the sub-map:
[DBG]   [0..5]
[DBG]  Agent 108 (interval in submap: [0..5]) contains time 4, added to replan.
[DBG]  Agent 7 | Start (global): 727 -> (local): (4, 4) at time 4 | Goal (global): 727 -> (local): (4, 4) at time 4
[DBG]  Agent 28 | Start (global): 661 -> (local): (2, 2) at time 4 | Goal (global): 727 -> (local): (4, 4) at time 56
[DBG]  Agent 108 | Start (global): 692 -> (local): (3, 1) at time 4 | Goal (global): 724 -> (local): (4, 1) at time 5
[DBG]  [REPAIR] SAT destroy operator called.
[DBG]  [REPAIR] SAT operator â€“ launching subproblem FOR OPTIMIZATION.
[DBG]  Creating local paths (sx, sy) in the submap for T_sync = 4
[DBG]    Agent 7 (global paths from T=4 to 4) has local path: (4,4) 
[DBG]    Agent 28 (global paths from T=4 to 56) has local path: (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (1,2) (1,2) (1,2) (1,2) (1,2) (1,2) (1,2) (1,2) (1,2) (1,2) (1,2) (1,2) (1,2) (1,2) (1,1) (1,0) (2,0) (3,0) (3,1) (4,1) (4,1) (4,1) (4,1) (4,1) (4,1) (4,1) (4,1) (4,1) (4,1) (4,1) (4,1) (4,1) (4,2) (4,3) (4,4) 
[DBG]    Agent 108 (global paths from T=4 to 5) has local path: (3,1) (4,1) 
[DBG]  Checking input data for SAT solver:
[DBG]    - Number of agents to replan: 3
[DBG]  Agent 7 has the original local path length: 1 => Start (4,4), Goal (4,4)
[DBG]  Agent 28 has the original local path length: 53 => Start (2,2), Goal (4,4)
[DBG]  Agent 108 has the original local path length: 2 => Start (3,1), Goal (4,1)
[DBG]  Start position: (4, 4), (2, 2), (3, 1), 
[DBG]  Goal position: (4, 4), (4, 4), (4, 1), 
[DBG]  SAT instance and solver created.
Currently solving
Instance name: scen
Map name: map
Encoding used: disappear_at_goal
SAT solver used: Kissat
Optimizing function: sum of costs
Number of agents: 3
Mks LB: 7
SoC LB: 10
Delta: 0
Remaining time: 300000 [ms]

Vertex conflict! Agents 0, 2, timestep 2, location 0
Swapping conflict! Agents 0, 2, timestep 2, edge (0,0)
Vertex conflict! Agents 0, 2, timestep 3, location 0
Swapping conflict! Agents 0, 2, timestep 3, edge (0,0)
Vertex conflict! Agents 0, 2, timestep 4, location 0
Swapping conflict! Agents 0, 2, timestep 4, edge (0,0)
Vertex conflict! Agents 0, 2, timestep 5, location 0
Swapping conflict! Agents 0, 2, timestep 5, edge (0,0)
Vertex conflict! Agents 0, 2, timestep 6, location 0
Found plan [agents = 3] [timesteps = 7]
Agent #0 : 15 0 0 0 0 0 0 
Agent #1 : 9 8 11 12 13 14 15 
Agent #2 : 11 12 0 0 0 0 0 

[DBG]  Solver returned: 0
[DBG]  Agent (index) 7 | New local path (submap idx):
[DBG]  15 
[DBG]  Agent (index) 28 | New local path (submap idx):
[DBG]  9 8 11 12 13 14 15 
[DBG]  Agent (index) 108 | New local path (submap idx):
[DBG]  11 12 
[DBG]  Update the agent path 7 | Original local length: 1 | New local length: 1
[DBG]  agent 7 t=0 => decoded (sx,sy)=(4,4) => global_id=727
[DBG]  Complete path of agent 7:
[DBG]    Original: 756 724 725 726 727 728 729 761 793 792 792 792 824 856 856 856 856 888 920 921 
[DBG]    New:     756 724 725 726 727 728 729 761 793 792 792 792 824 856 856 856 856 888 920 921 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 756 724 725 726 
[DBG]    Local path (in submap): 727 
[DBG]    Suffix (out of submap): 728 729 761 793 792 792 792 824 856 856 856 856 888 920 921 
[DBG]  Original agent path length 7 je: 20
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 0: 756, 724, 725, 726, 727, 728, 729, 761, 793, 792, 792, 792, 824, 856, 856, 856, 856, 888, 920, 921, 
[DBG]  Path for agent 7 updated, resulting length: 20
[DBG]  Update the agent path 28 | Original local length: 53 | New local length: 7
[DBG]  agent 28 t=0 => decoded (sx,sy)=(2,2) => global_id=661
[DBG]  agent 28 t=1 => decoded (sx,sy)=(2,1) => global_id=660
[DBG]  agent 28 t=2 => decoded (sx,sy)=(3,1) => global_id=692
[DBG]  agent 28 t=3 => decoded (sx,sy)=(4,1) => global_id=724
[DBG]  agent 28 t=4 => decoded (sx,sy)=(4,2) => global_id=725
[DBG]  agent 28 t=5 => decoded (sx,sy)=(4,3) => global_id=726
[DBG]  agent 28 t=6 => decoded (sx,sy)=(4,4) => global_id=727
[DBG]  Complete path of agent 28:
[DBG]    Original: 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 629 629 629 629 629 629 629 629 629 629 629 629 629 629 628 627 659 691 692 724 724 724 724 724 724 724 724 724 724 724 724 724 725 726 727 
[DBG]    New:     661 661 661 661 661 660 692 724 725 726 727 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 661 661 661 661 
[DBG]    Local path (in submap): 661 660 692 724 725 726 727 
[DBG]    Suffix (out of submap): 
[DBG]  Original agent path length 28 je: 57
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 1: 661, 661, 661, 661, 661, 660, 692, 724, 725, 726, 727, 
[DBG]  Path for agent 28 updated, resulting length: 11
[DBG]  Update the agent path 108 | Original local length: 2 | New local length: 2
[DBG]  agent 108 t=0 => decoded (sx,sy)=(3,1) => global_id=692
[DBG]  agent 108 t=1 => decoded (sx,sy)=(4,1) => global_id=724
[DBG]  Complete path of agent 108:
[DBG]    Original: 628 660 692 692 692 724 756 788 788 788 820 821 822 854 886 887 888 920 952 953 954 955 956 988 989 1021 
[DBG]    New:     628 660 692 692 692 724 756 788 788 788 820 821 822 854 886 887 888 920 952 953 954 955 956 988 989 1021 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 628 660 692 692 
[DBG]    Local path (in submap): 692 724 
[DBG]    Suffix (out of submap): 756 788 788 788 820 821 822 854 886 887 888 920 952 953 954 955 956 988 989 1021 
[DBG]  Original agent path length 108 je: 26
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 2: 628, 660, 692, 692, 692, 724, 756, 788, 788, 788, 820, 821, 822, 854, 886, 887, 888, 920, 952, 953, 954, 955, 956, 988, 989, 1021, 
[DBG]  Path for agent 108 updated, resulting length: 26
[DBG]  Paths successfully updated.
[DBG]  (LNS.cpp) New path for agent 7: 
[DBG]  756, 724, 725, 726, 727, 728, 729, 761, 793, 792, 792, 792, 824, 856, 856, 856, 856, 888, 920, 921, 
[DBG]  (LNS.cpp) New path for agent 28: 
[DBG]  661, 661, 661, 661, 661, 660, 692, 724, 725, 726, 727, 
[DBG]  (LNS.cpp) New path for agent 108: 
[DBG]  628, 660, 692, 692, 692, 724, 756, 788, 788, 788, 820, 821, 822, 854, 886, 887, 888, 920, 952, 953, 954, 955, 956, 988, 989, 1021, 
[DBG]  Delta value: 0.46
[DBG]  Rewarding metric index = 1
[DBG]  component_weights = {0.176114, 0.317711, 0.244466, 0.261709}
[DBG]  opSuccess value: 1
[STAT] neighbor.sum_of_costs before recomputation: 54
[STAT] neighbor.old_sum_of_costs before recomputation: 100
[STAT] sum_of_costs before recomputation: 4557
[DBG]  Validate solution immediately after SAT success.
[WARNING] Problem after SAT: Target conflict: agent 42 (len 56) traverses target of agent 28 (len 10) at location 727 at timestep 55
[DBG]  [DEBUG] Attempting immediate repair via init_lns because problem occurred after SAT (should be applied only for conflicts...).
[DBG]  [DEBUG] Passing 150 agents to init_lns (skip=true).
[DBG]  [DEBUG] path_table contents for selected agents (neighbor.agents):
[DBG]    Agent 7 => controlling path length=20
[DBG]    Agent 28 => controlling path length=11
[DBG]    Agent 108 => controlling path length=26
[DBG]  hodnota skip_initial_solution=1
[DBG]  We skip initialSolution => call buildCollisionData()
[DBG]  buildCollisionData() called â€“ skip_initial_solution case.
[DBG]  Agents.size()=150, collision_graph.size()=150
[DBG]  agent 28 => updateCollidingPairs => foundCollision
[DBG]  agent 42 => updateCollidingPairs => foundCollision
[DBG]  agent 111 => updateCollidingPairs => foundCollision
[DBG]  agent 113 => updateCollidingPairs => foundCollision
[DBG]  Conflicting agent pairs:
[DBG]  agent 28 is in conflict with agent 42
[DBG]  agent 28 is in conflict with agent 111
[DBG]  agent 28 is in conflict with agent 113
[DBG]  buildCollisionData() => sum_of_costs=4511, num_of_colliding_pairs=3
[DBG]  buildCollisionData done => sum_of_costs=4511, num_of_colliding_pairs=3
[DBG]  sum_of_cost hodnota: 4511
[DBG]  After skip/init build => iteration_stats.back(): sum_of_costs=4511, collisions=3
[DEBUG] Using default neighbor generation strategy for conflicts: 1
[DEBUG] Using default neighbor generation strategy for conflicts: 2
[DEBUG] Using default neighbor generation strategy for conflicts: 2
[DEBUG] Using default neighbor generation strategy for conflicts: 1
	InitLNS(PP): runtime = 0.00717829, iterations = 5, colliding pairs = 0, initial colliding pairs = 3, solution cost = 4541, initial solution cost = 4511, failed iterations = 0
[DBG]  [DEBUG] init_lns->sum_of_costs after init_lns->run: 4541
[DBG]  [DEBUG] sum_of_costs after assignment from init_lns->run: 4541
[DBG]  Recomputing sum_of_cost by dividing neighbor.sum_of_costs and neighbor.old_sum_of_costs
[STAT] sum_of_costs after recomputation: 4541
[STAT] Iteration 13
[DBG]  Using SAT operator (destroy+repair SAT).
[DBG]  ====================
[DBG]  SAT destroy operator called.
[DBG]  SAT heuristic: 2
[DBG]  key_agent_id: 28
[DBG]  key_agent_id global path length: 57
[DBG]  Submap content (global positions):
[DBG]  691 692 693 694 695 
[DBG]  723 724 725 726 727 
[DBG]  755 756 757 758 759 
[DBG]  787 788 789 790 791 
[DBG]  819 820 821 822 823 
[DBG]  Map content with agents and obstacles:
[DBG]  . A X X X 
[DBG]  X . . . . 
[DBG]  . . A X . 
[DBG]  A A X . X 
[DBG]  A . . . . 
[DBG]  content of the map structure that we pass to the SAT solver:
[DBG]  1  1  -1  -1  -1  
[DBG]  -1  1  1  1  1  
[DBG]  1  1  1  -1  1  
[DBG]  1  1  -1  1  -1  
[DBG]  1  1  1  1  1  
[DBG]  Identifying agents in a submap for rescheduling (when key_agent is there at the time 42):
[DBG]  Agent 26 found intervals in the sub-map:
[DBG]   [38..51]
[DBG]  Agent 26 (interval in submap: [38..51]) contains time 42, added to replan.
[DBG]  Agent 28 found intervals in the sub-map:
[DBG]   [24..56]
[DBG]  Agent 28 (interval in submap: [24..56]) contains time 42, added to replan.
[DBG]  Agent 42 found intervals in the sub-map:
[DBG]   [48..56]
[DBG]  Agent 42 is not in sub-map at time 42 (intervals: 
[DBG]  [48..56] )
[DBG]  Agent 45 found intervals in the sub-map:
[DBG]   [37..43]
[DBG]  Agent 45 (interval in submap: [37..43]) contains time 42, added to replan.
[DBG]  Agent 55 found intervals in the sub-map:
[DBG]   [41..42]
[DBG]  Agent 55 (interval in submap: [41..42]) contains time 42, added to replan.
[DBG]  Agent 69 found intervals in the sub-map:
[DBG]   [42..43]
[DBG]  Agent 69 (interval in submap: [42..43]) contains time 42, added to replan.
[DBG]  Agent 26 | Start (global): 788 -> (local): (3, 1) at time 42 | Goal (global): 755 -> (local): (2, 0) at time 51
[DBG]  Agent 28 | Start (global): 757 -> (local): (2, 2) at time 42 | Goal (global): 727 -> (local): (1, 4) at time 56
[DBG]  Agent 45 | Start (global): 787 -> (local): (3, 0) at time 42 | Goal (global): 819 -> (local): (4, 0) at time 43
[DBG]  Agent 55 | Start (global): 692 -> (local): (0, 1) at time 42 | Goal (global): 692 -> (local): (0, 1) at time 42
[DBG]  Agent 69 | Start (global): 819 -> (local): (4, 0) at time 42 | Goal (global): 820 -> (local): (4, 1) at time 43
[DBG]  [REPAIR] SAT destroy operator called.
[DBG]  [REPAIR] SAT operator â€“ launching subproblem FOR OPTIMIZATION.
[DBG]  Creating local paths (sx, sy) in the submap for T_sync = 42
[DBG]    Agent 26 (global paths from T=42 to 51) has local path: (3,1) (3,1) (3,1) (3,1) (3,1) (3,1) (3,1) (3,1) (3,0) (2,0) 
[DBG]    Agent 28 (global paths from T=42 to 56) has local path: (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (1,2) (1,3) (1,4) 
[DBG]    Agent 45 (global paths from T=42 to 43) has local path: (3,0) (4,0) 
[DBG]    Agent 55 (global paths from T=42 to 42) has local path: (0,1) 
[DBG]    Agent 69 (global paths from T=42 to 43) has local path: (4,0) (4,1) 
[DBG]  Checking input data for SAT solver:
[DBG]    - Number of agents to replan: 5
[DBG]  Agent 26 has the original local path length: 10 => Start (3,1), Goal (2,0)
[DBG]  Agent 28 has the original local path length: 15 => Start (2,2), Goal (1,4)
[DBG]  Agent 45 has the original local path length: 2 => Start (3,0), Goal (4,0)
[DBG]  Agent 55 has the original local path length: 1 => Start (0,1), Goal (0,1)
[DBG]  Agent 69 has the original local path length: 2 => Start (4,0), Goal (4,1)
[DBG]  Start position: (3, 1), (2, 2), (3, 0), (0, 1), (4, 0), 
[DBG]  Goal position: (2, 0), (1, 4), (4, 0), (0, 1), (4, 1), 
[DBG]  SAT instance and solver created.
Currently solving
Instance name: scen
Map name: map
Encoding used: disappear_at_goal
SAT solver used: Kissat
Optimizing function: sum of costs
Number of agents: 5
Mks LB: 4
SoC LB: 12
Delta: 0
Remaining time: 300000 [ms]

Vertex conflict! Agents 0, 2, timestep 3, location 0
Vertex conflict! Agents 0, 3, timestep 3, location 0
Vertex conflict! Agents 0, 4, timestep 3, location 0
Vertex conflict! Agents 2, 3, timestep 2, location 0
Swapping conflict! Agents 2, 3, timestep 2, edge (0,0)
Vertex conflict! Agents 2, 3, timestep 3, location 0
Vertex conflict! Agents 2, 4, timestep 2, location 0
Swapping conflict! Agents 2, 4, timestep 2, edge (0,0)
Vertex conflict! Agents 2, 4, timestep 3, location 0
Vertex conflict! Agents 3, 4, timestep 2, location 0
Swapping conflict! Agents 3, 4, timestep 2, edge (0,0)
Vertex conflict! Agents 3, 4, timestep 3, location 0
Found plan [agents = 5] [timesteps = 4]
Agent #0 : 11 10 6 0 
Agent #1 : 8 3 4 5 
Agent #2 : 10 13 0 0 
Agent #3 : 1 0 0 0 
Agent #4 : 13 14 0 0 

[DBG]  Solver returned: 0
[DBG]  Agent (index) 26 | New local path (submap idx):
[DBG]  11 10 6 
[DBG]  Agent (index) 28 | New local path (submap idx):
[DBG]  8 3 4 5 
[DBG]  Agent (index) 45 | New local path (submap idx):
[DBG]  10 13 
[DBG]  Agent (index) 55 | New local path (submap idx):
[DBG]  1 
[DBG]  Agent (index) 69 | New local path (submap idx):
[DBG]  13 14 
[DBG]  Update the agent path 26 | Original local length: 10 | New local length: 3
[DBG]  agent 26 t=0 => decoded (sx,sy)=(3,1) => global_id=788
[DBG]  agent 26 t=1 => decoded (sx,sy)=(3,0) => global_id=787
[DBG]  agent 26 t=2 => decoded (sx,sy)=(2,0) => global_id=755
[DBG]  Complete path of agent 26:
[DBG]    Original: 13 13 45 46 47 48 49 50 82 83 115 147 148 180 212 244 276 277 278 279 311 343 375 407 439 440 472 504 503 502 501 533 565 597 596 628 627 659 691 692 724 756 788 788 788 788 788 788 788 788 787 755 
[DBG]    New:     13 13 45 46 47 48 49 50 82 83 115 147 148 180 212 244 276 277 278 279 311 343 375 407 439 440 472 504 503 502 501 533 565 597 596 628 627 659 691 692 724 756 788 787 755 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 13 13 45 46 47 48 49 50 82 83 115 147 148 180 212 244 276 277 278 279 311 343 375 407 439 440 472 504 503 502 501 533 565 597 596 628 627 659 691 692 724 756 
[DBG]    Local path (in submap): 788 787 755 
[DBG]    Suffix (out of submap): 
[DBG]  Original agent path length 26 je: 52
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 0: 13, 13, 45, 46, 47, 48, 49, 50, 82, 83, 115, 147, 148, 180, 212, 244, 276, 277, 278, 279, 311, 343, 375, 407, 439, 440, 472, 504, 503, 502, 501, 533, 565, 597, 596, 628, 627, 659, 691, 692, 724, 756, 788, 787, 755, 
[DBG]  Path for agent 26 updated, resulting length: 45
[DBG]  Update the agent path 28 | Original local length: 15 | New local length: 4
[DBG]  agent 28 t=0 => decoded (sx,sy)=(2,2) => global_id=757
[DBG]  agent 28 t=1 => decoded (sx,sy)=(1,2) => global_id=725
[DBG]  agent 28 t=2 => decoded (sx,sy)=(1,3) => global_id=726
[DBG]  agent 28 t=3 => decoded (sx,sy)=(1,4) => global_id=727
[DBG]  Complete path of agent 28:
[DBG]    Original: 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 660 692 691 691 691 691 691 691 691 692 724 756 757 757 757 757 757 757 757 757 757 757 757 757 757 757 757 757 757 757 757 725 726 727 
[DBG]    New:     661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 660 692 691 691 691 691 691 691 691 692 724 756 757 757 757 757 757 757 757 757 725 726 727 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 660 692 691 691 691 691 691 691 691 692 724 756 757 757 757 757 757 757 757 
[DBG]    Local path (in submap): 757 725 726 727 
[DBG]    Suffix (out of submap): 
[DBG]  Original agent path length 28 je: 57
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 1: 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 660, 692, 691, 691, 691, 691, 691, 691, 691, 692, 724, 756, 757, 757, 757, 757, 757, 757, 757, 757, 725, 726, 727, 
[DBG]  Path for agent 28 updated, resulting length: 46
[DBG]  Update the agent path 45 | Original local length: 2 | New local length: 2
[DBG]  agent 45 t=0 => decoded (sx,sy)=(3,0) => global_id=787
[DBG]  agent 45 t=1 => decoded (sx,sy)=(4,0) => global_id=819
[DBG]  Complete path of agent 45:
[DBG]    Original: 153 154 154 154 154 154 154 154 153 185 217 216 215 215 215 247 279 278 310 311 312 344 376 408 440 472 504 503 502 534 533 565 597 596 628 627 659 691 692 724 756 788 787 819 818 850 849 
[DBG]    New:     153 154 154 154 154 154 154 154 153 185 217 216 215 215 215 247 279 278 310 311 312 344 376 408 440 472 504 503 502 534 533 565 597 596 628 627 659 691 692 724 756 788 787 819 818 850 849 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 153 154 154 154 154 154 154 154 153 185 217 216 215 215 215 247 279 278 310 311 312 344 376 408 440 472 504 503 502 534 533 565 597 596 628 627 659 691 692 724 756 788 
[DBG]    Local path (in submap): 787 819 
[DBG]    Suffix (out of submap): 818 850 849 
[DBG]  Original agent path length 45 je: 47
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 2: 153, 154, 154, 154, 154, 154, 154, 154, 153, 185, 217, 216, 215, 215, 215, 247, 279, 278, 310, 311, 312, 344, 376, 408, 440, 472, 504, 503, 502, 534, 533, 565, 597, 596, 628, 627, 659, 691, 692, 724, 756, 788, 787, 819, 818, 850, 849, 
[DBG]  Path for agent 45 updated, resulting length: 47
[DBG]  Update the agent path 55 | Original local length: 1 | New local length: 1
[DBG]  agent 55 t=0 => decoded (sx,sy)=(0,1) => global_id=692
[DBG]  Complete path of agent 55:
[DBG]    Original: 34 66 98 99 100 132 164 196 228 260 261 293 294 326 327 328 360 361 362 363 395 427 428 429 430 462 463 464 465 466 467 468 469 501 533 565 597 596 628 627 659 691 692 
[DBG]    New:     34 66 98 99 100 132 164 196 228 260 261 293 294 326 327 328 360 361 362 363 395 427 428 429 430 462 463 464 465 466 467 468 469 501 533 565 597 596 628 627 659 691 692 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 34 66 98 99 100 132 164 196 228 260 261 293 294 326 327 328 360 361 362 363 395 427 428 429 430 462 463 464 465 466 467 468 469 501 533 565 597 596 628 627 659 691 
[DBG]    Local path (in submap): 692 
[DBG]    Suffix (out of submap): 
[DBG]  Original agent path length 55 je: 43
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 3: 34, 66, 98, 99, 100, 132, 164, 196, 228, 260, 261, 293, 294, 326, 327, 328, 360, 361, 362, 363, 395, 427, 428, 429, 430, 462, 463, 464, 465, 466, 467, 468, 469, 501, 533, 565, 597, 596, 628, 627, 659, 691, 692, 
[DBG]  Path for agent 55 updated, resulting length: 43
[DBG]  Update the agent path 69 | Original local length: 2 | New local length: 2
[DBG]  agent 69 t=0 => decoded (sx,sy)=(4,0) => global_id=819
[DBG]  agent 69 t=1 => decoded (sx,sy)=(4,1) => global_id=820
[DBG]  Complete path of agent 69:
[DBG]    Original: 4 5 6 7 8 9 41 73 105 106 138 139 140 172 173 205 237 269 301 333 365 366 398 430 462 494 526 558 590 622 654 655 687 719 751 783 815 847 848 849 817 818 819 820 
[DBG]    New:     4 5 6 7 8 9 41 73 105 106 138 139 140 172 173 205 237 269 301 333 365 366 398 430 462 494 526 558 590 622 654 655 687 719 751 783 815 847 848 849 817 818 819 820 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 4 5 6 7 8 9 41 73 105 106 138 139 140 172 173 205 237 269 301 333 365 366 398 430 462 494 526 558 590 622 654 655 687 719 751 783 815 847 848 849 817 818 
[DBG]    Local path (in submap): 819 820 
[DBG]    Suffix (out of submap): 
[DBG]  Original agent path length 69 je: 44
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 4: 4, 5, 6, 7, 8, 9, 41, 73, 105, 106, 138, 139, 140, 172, 173, 205, 237, 269, 301, 333, 365, 366, 398, 430, 462, 494, 526, 558, 590, 622, 654, 655, 687, 719, 751, 783, 815, 847, 848, 849, 817, 818, 819, 820, 
[DBG]  Path for agent 69 updated, resulting length: 44
[DBG]  Paths successfully updated.
[DBG]  (LNS.cpp) New path for agent 26: 
[DBG]  13, 13, 45, 46, 47, 48, 49, 50, 82, 83, 115, 147, 148, 180, 212, 244, 276, 277, 278, 279, 311, 343, 375, 407, 439, 440, 472, 504, 503, 502, 501, 533, 565, 597, 596, 628, 627, 659, 691, 692, 724, 756, 788, 787, 755, 
[DBG]  (LNS.cpp) New path for agent 28: 
[DBG]  661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 660, 692, 691, 691, 691, 691, 691, 691, 691, 692, 724, 756, 757, 757, 757, 757, 757, 757, 757, 757, 725, 726, 727, 
[DBG]  (LNS.cpp) New path for agent 45: 
[DBG]  153, 154, 154, 154, 154, 154, 154, 154, 153, 185, 217, 216, 215, 215, 215, 247, 279, 278, 310, 311, 312, 344, 376, 408, 440, 472, 504, 503, 502, 534, 533, 565, 597, 596, 628, 627, 659, 691, 692, 724, 756, 788, 787, 819, 818, 850, 849, 
[DBG]  (LNS.cpp) New path for agent 55: 
[DBG]  34, 66, 98, 99, 100, 132, 164, 196, 228, 260, 261, 293, 294, 326, 327, 328, 360, 361, 362, 363, 395, 427, 428, 429, 430, 462, 463, 464, 465, 466, 467, 468, 469, 501, 533, 565, 597, 596, 628, 627, 659, 691, 692, 
[DBG]  (LNS.cpp) New path for agent 69: 
[DBG]  4, 5, 6, 7, 8, 9, 41, 73, 105, 106, 138, 139, 140, 172, 173, 205, 237, 269, 301, 333, 365, 366, 398, 430, 462, 494, 526, 558, 590, 622, 654, 655, 687, 719, 751, 783, 815, 847, 848, 849, 817, 818, 819, 820, 
[DBG]  Delta value: 0.0756303
[DBG]  Rewarding metric index = 3
[DBG]  component_weights = {0.170223, 0.307083, 0.236288, 0.286406}
[DBG]  opSuccess value: 1
[STAT] neighbor.sum_of_costs before recomputation: 220
[STAT] neighbor.old_sum_of_costs before recomputation: 238
[STAT] sum_of_costs before recomputation: 4541
[DBG]  Validate solution immediately after SAT success.
[WARNING] Problem after SAT: Target conflict: agent 42 (len 56) traverses target of agent 26 (len 44) at location 755 at timestep 50
[DBG]  [DEBUG] Attempting immediate repair via init_lns because problem occurred after SAT (should be applied only for conflicts...).
[DBG]  [DEBUG] Passing 150 agents to init_lns (skip=true).
[DBG]  [DEBUG] path_table contents for selected agents (neighbor.agents):
[DBG]    Agent 26 => controlling path length=45
[DBG]    Agent 28 => controlling path length=46
[DBG]    Agent 45 => controlling path length=47
[DBG]    Agent 55 => controlling path length=43
[DBG]    Agent 69 => controlling path length=44
[DBG]  hodnota skip_initial_solution=1
[DBG]  We skip initialSolution => call buildCollisionData()
[DBG]  buildCollisionData() called â€“ skip_initial_solution case.
[DBG]  Agents.size()=150, collision_graph.size()=150
[DBG]  agent 26 => updateCollidingPairs => foundCollision
[DBG]  agent 28 => updateCollidingPairs => foundCollision
[DBG]  agent 42 => updateCollidingPairs => foundCollision
[DBG]  Conflicting agent pairs:
[DBG]  agent 26 is in conflict with agent 42
[DBG]  agent 28 is in conflict with agent 42
[DBG]  buildCollisionData() => sum_of_costs=4523, num_of_colliding_pairs=2
[DBG]  buildCollisionData done => sum_of_costs=4523, num_of_colliding_pairs=2
[DBG]  sum_of_cost hodnota: 4523
[DBG]  After skip/init build => iteration_stats.back(): sum_of_costs=4523, collisions=2
[DEBUG] Using default neighbor generation strategy for conflicts: 2
[DEBUG] Using default neighbor generation strategy for conflicts: 0
	InitLNS(PP): runtime = 0.00489875, iterations = 3, colliding pairs = 0, initial colliding pairs = 2, solution cost = 4550, initial solution cost = 4523, failed iterations = 0
[DBG]  [DEBUG] init_lns->sum_of_costs after init_lns->run: 4550
[DBG]  [DEBUG] sum_of_costs after assignment from init_lns->run: 4550
[DBG]  Recomputing sum_of_cost by dividing neighbor.sum_of_costs and neighbor.old_sum_of_costs
[STAT] sum_of_costs after recomputation: 4550
[STAT] Iteration 14
[DBG]  Using SAT operator (destroy+repair SAT).
[DBG]  ====================
[DBG]  SAT destroy operator called.
[DBG]  SAT heuristic: 2
[DBG]  key_agent_id: 28
[DBG]  key_agent_id global path length: 57
[DBG]  Submap content (global positions):
[DBG]  595 596 597 598 599 
[DBG]  627 628 629 630 631 
[DBG]  659 660 661 662 663 
[DBG]  691 692 693 694 695 
[DBG]  723 724 725 726 727 
[DBG]  Map content with agents and obstacles:
[DBG]  X . . X . 
[DBG]  . . . X . 
[DBG]  . . A X X 
[DBG]  . A X X X 
[DBG]  X A . . . 
[DBG]  content of the map structure that we pass to the SAT solver:
[DBG]  -1  1  1  -1  1  
[DBG]  1  1  1  -1  1  
[DBG]  1  1  1  -1  -1  
[DBG]  1  1  -1  -1  -1  
[DBG]  -1  1  1  1  1  
[DBG]  Identifying agents in a submap for rescheduling (when key_agent is there at the time 9):
[DBG]  Agent 28 found intervals in the sub-map:
[DBG]   [0..28] [54..56]
[DBG]  Agent 28 (interval in submap: [0..28]) contains time 9, added to replan.
[DBG]  Agent 63 found intervals in the sub-map:
[DBG]  
[DBG]  Agent 63 is not in sub-map at time 9 (intervals: 
[DBG]  )
[DBG]  Agent 89 found intervals in the sub-map:
[DBG]   [5..11]
[DBG]  Agent 89 (interval in submap: [5..11]) contains time 9, added to replan.
[DBG]  Agent 113 found intervals in the sub-map:
[DBG]   [6..12]
[DBG]  Agent 113 (interval in submap: [6..12]) contains time 9, added to replan.
[DBG]  Agent 28 | Start (global): 661 -> (local): (2, 2) at time 9 | Goal (global): 724 -> (local): (4, 1) at time 28
[DBG]  Agent 89 | Start (global): 692 -> (local): (3, 1) at time 9 | Goal (global): 725 -> (local): (4, 2) at time 11
[DBG]  Agent 113 | Start (global): 724 -> (local): (4, 1) at time 9 | Goal (global): 727 -> (local): (4, 4) at time 12
[DBG]  [REPAIR] SAT destroy operator called.
[DBG]  [REPAIR] SAT operator â€“ launching subproblem FOR OPTIMIZATION.
[DBG]  Creating local paths (sx, sy) in the submap for T_sync = 9
[DBG]    Agent 28 (global paths from T=9 to 28) has local path: (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,1) (2,1) (1,1) (2,1) (3,1) (4,1) 
[DBG]    Agent 89 (global paths from T=9 to 11) has local path: (3,1) (4,1) (4,2) 
[DBG]    Agent 113 (global paths from T=9 to 12) has local path: (4,1) (4,2) (4,3) (4,4) 
[DBG]  Checking input data for SAT solver:
[DBG]    - Number of agents to replan: 3
[DBG]  Agent 28 has the original local path length: 20 => Start (2,2), Goal (4,1)
[DBG]  Agent 89 has the original local path length: 3 => Start (3,1), Goal (4,2)
[DBG]  Agent 113 has the original local path length: 4 => Start (4,1), Goal (4,4)
[DBG]  Start position: (2, 2), (3, 1), (4, 1), 
[DBG]  Goal position: (4, 1), (4, 2), (4, 4), 
[DBG]  SAT instance and solver created.
Currently solving
Instance name: scen
Map name: map
Encoding used: disappear_at_goal
SAT solver used: Kissat
Optimizing function: sum of costs
Number of agents: 3
Mks LB: 4
SoC LB: 11
Delta: 0
Remaining time: 300000 [ms]

Found plan [agents = 3] [timesteps = 4]
Agent #0 : 9 8 11 12 
Agent #1 : 11 12 13 0 
Agent #2 : 12 13 14 15 

[DBG]  Solver returned: 0
[DBG]  Agent (index) 28 | New local path (submap idx):
[DBG]  9 8 11 12 
[DBG]  Agent (index) 89 | New local path (submap idx):
[DBG]  11 12 13 
[DBG]  Agent (index) 113 | New local path (submap idx):
[DBG]  12 13 14 15 
[DBG]  Update the agent path 28 | Original local length: 20 | New local length: 4
[DBG]  agent 28 t=0 => decoded (sx,sy)=(2,2) => global_id=661
[DBG]  agent 28 t=1 => decoded (sx,sy)=(2,1) => global_id=660
[DBG]  agent 28 t=2 => decoded (sx,sy)=(3,1) => global_id=692
[DBG]  agent 28 t=3 => decoded (sx,sy)=(4,1) => global_id=724
[DBG]  Complete path of agent 28:
[DBG]    Original: 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 660 660 628 660 692 724 756 755 755 755 755 755 755 755 756 757 757 757 757 757 757 757 757 757 757 757 757 757 757 757 757 725 726 727 
[DBG]    New:     661 661 661 661 661 661 661 661 661 661 660 692 724 756 755 755 755 755 755 755 755 756 757 757 757 757 757 757 757 757 757 757 757 757 757 757 757 757 725 726 727 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 661 661 661 661 661 661 661 661 661 
[DBG]    Local path (in submap): 661 660 692 724 756 755 755 755 755 755 755 755 756 757 757 757 757 757 757 757 
[DBG]    Suffix (out of submap): 757 757 757 757 757 757 757 757 757 725 726 727 
[DBG]  Original agent path length 28 je: 57
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 0: 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 660, 692, 724, 756, 755, 755, 755, 755, 755, 755, 755, 756, 757, 757, 757, 757, 757, 757, 757, 757, 757, 757, 757, 757, 757, 757, 757, 757, 725, 726, 727, 
[DBG]  Path for agent 28 updated, resulting length: 41
[DBG]  Update the agent path 89 | Original local length: 3 | New local length: 3
[DBG]  agent 89 t=0 => decoded (sx,sy)=(3,1) => global_id=692
[DBG]  agent 89 t=1 => decoded (sx,sy)=(4,1) => global_id=724
[DBG]  agent 89 t=2 => decoded (sx,sy)=(4,2) => global_id=725
[DBG]  Complete path of agent 89:
[DBG]    Original: 437 469 501 533 565 597 629 628 660 692 724 725 757 756 788 787 819 820 821 822 854 854 886 918 950 982 983 1015 
[DBG]    New:     437 469 501 533 565 597 629 628 660 692 724 725 757 756 788 787 819 820 821 822 854 854 886 918 950 982 983 1015 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 437 469 501 533 565 597 629 628 660 
[DBG]    Local path (in submap): 692 724 725 
[DBG]    Suffix (out of submap): 757 756 788 787 819 820 821 822 854 854 886 918 950 982 983 1015 
[DBG]  Original agent path length 89 je: 28
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 1: 437, 469, 501, 533, 565, 597, 629, 628, 660, 692, 724, 725, 757, 756, 788, 787, 819, 820, 821, 822, 854, 854, 886, 918, 950, 982, 983, 1015, 
[DBG]  Path for agent 89 updated, resulting length: 28
[DBG]  Update the agent path 113 | Original local length: 4 | New local length: 4
[DBG]  agent 113 t=0 => decoded (sx,sy)=(4,1) => global_id=724
[DBG]  agent 113 t=1 => decoded (sx,sy)=(4,2) => global_id=725
[DBG]  agent 113 t=2 => decoded (sx,sy)=(4,3) => global_id=726
[DBG]  agent 113 t=3 => decoded (sx,sy)=(4,4) => global_id=727
[DBG]  Complete path of agent 113:
[DBG]    Original: 529 561 593 625 657 658 659 660 692 724 725 726 727 728 696 664 632 600 601 569 569 570 538 539 540 541 509 477 445 413 381 349 317 318 319 287 255 254 222 
[DBG]    New:     529 561 593 625 657 658 659 660 692 724 725 726 727 728 696 664 632 600 601 569 569 570 538 539 540 541 509 477 445 413 381 349 317 318 319 287 255 254 222 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 529 561 593 625 657 658 659 660 692 
[DBG]    Local path (in submap): 724 725 726 727 
[DBG]    Suffix (out of submap): 728 696 664 632 600 601 569 569 570 538 539 540 541 509 477 445 413 381 349 317 318 319 287 255 254 222 
[DBG]  Original agent path length 113 je: 39
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 2: 529, 561, 593, 625, 657, 658, 659, 660, 692, 724, 725, 726, 727, 728, 696, 664, 632, 600, 601, 569, 569, 570, 538, 539, 540, 541, 509, 477, 445, 413, 381, 349, 317, 318, 319, 287, 255, 254, 222, 
[DBG]  Path for agent 113 updated, resulting length: 39
[DBG]  Paths successfully updated.
[DBG]  (LNS.cpp) New path for agent 28: 
[DBG]  661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 660, 692, 724, 756, 755, 755, 755, 755, 755, 755, 755, 756, 757, 757, 757, 757, 757, 757, 757, 757, 757, 757, 757, 757, 757, 757, 757, 757, 725, 726, 727, 
[DBG]  (LNS.cpp) New path for agent 89: 
[DBG]  437, 469, 501, 533, 565, 597, 629, 628, 660, 692, 724, 725, 757, 756, 788, 787, 819, 820, 821, 822, 854, 854, 886, 918, 950, 982, 983, 1015, 
[DBG]  (LNS.cpp) New path for agent 113: 
[DBG]  529, 561, 593, 625, 657, 658, 659, 660, 692, 724, 725, 726, 727, 728, 696, 664, 632, 600, 601, 569, 569, 570, 538, 539, 540, 541, 509, 477, 445, 413, 381, 349, 317, 318, 319, 287, 255, 254, 222, 
[DBG]  Delta value: 0.132231
[DBG]  Rewarding metric index = 1
[DBG]  component_weights = {0.160753, 0.345629, 0.223144, 0.270473}
[DBG]  opSuccess value: 1
[STAT] neighbor.sum_of_costs before recomputation: 105
[STAT] neighbor.old_sum_of_costs before recomputation: 121
[STAT] sum_of_costs before recomputation: 4550
[DBG]  Validate solution immediately after SAT success.
[WARNING] Problem after SAT: Target conflict: agent 42 (len 56) traverses target of agent 28 (len 40) at location 727 at timestep 55
[DBG]  [DEBUG] Attempting immediate repair via init_lns because problem occurred after SAT (should be applied only for conflicts...).
[DBG]  [DEBUG] Passing 150 agents to init_lns (skip=true).
[DBG]  [DEBUG] path_table contents for selected agents (neighbor.agents):
[DBG]    Agent 28 => controlling path length=41
[DBG]    Agent 89 => controlling path length=28
[DBG]    Agent 113 => controlling path length=39
[DBG]  hodnota skip_initial_solution=1
[DBG]  We skip initialSolution => call buildCollisionData()
[DBG]  buildCollisionData() called â€“ skip_initial_solution case.
[DBG]  Agents.size()=150, collision_graph.size()=150
[DBG]  agent 28 => updateCollidingPairs => foundCollision
[DBG]  agent 42 => updateCollidingPairs => foundCollision
[DBG]  agent 45 => updateCollidingPairs => foundCollision
[DBG]  agent 89 => updateCollidingPairs => foundCollision
[DBG]  Conflicting agent pairs:
[DBG]  agent 28 is in conflict with agent 42
[DBG]  agent 28 is in conflict with agent 45
[DBG]  agent 28 is in conflict with agent 89
[DBG]  buildCollisionData() => sum_of_costs=4534, num_of_colliding_pairs=3
[DBG]  buildCollisionData done => sum_of_costs=4534, num_of_colliding_pairs=3
[DBG]  sum_of_cost hodnota: 4534
[DBG]  After skip/init build => iteration_stats.back(): sum_of_costs=4534, collisions=3
[DEBUG] Using default neighbor generation strategy for conflicts: 0
	InitLNS(PP): runtime = 0.00148946, iterations = 2, colliding pairs = 0, initial colliding pairs = 3, solution cost = 4550, initial solution cost = 4534, failed iterations = 0
[DBG]  [DEBUG] init_lns->sum_of_costs after init_lns->run: 4550
[DBG]  [DEBUG] sum_of_costs after assignment from init_lns->run: 4550
[DBG]  Recomputing sum_of_cost by dividing neighbor.sum_of_costs and neighbor.old_sum_of_costs
[STAT] sum_of_costs after recomputation: 4550
[STAT] Iteration 15
[DBG]  Random chance did not select SAT operator (r=55), using default strategy.
[DBG]  opSuccess value: 0
[STAT] Iteration 15
[DBG]  Using SAT operator (destroy+repair SAT).
[DBG]  ====================
[DBG]  SAT destroy operator called.
[DBG]  SAT heuristic: 2
[DBG]  key_agent_id: 28
[DBG]  key_agent_id global path length: 57
[DBG]  Submap content (global positions):
[DBG]  530 531 532 533 534 
[DBG]  562 563 564 565 566 
[DBG]  594 595 596 597 598 
[DBG]  626 627 628 629 630 
[DBG]  658 659 660 661 662 
[DBG]  Map content with agents and obstacles:
[DBG]  . . X A A 
[DBG]  X . X . . 
[DBG]  . X A . X 
[DBG]  X . . . X 
[DBG]  . . A . X 
[DBG]  content of the map structure that we pass to the SAT solver:
[DBG]  1  1  -1  1  1  
[DBG]  -1  1  -1  1  1  
[DBG]  1  -1  1  1  -1  
[DBG]  -1  1  1  1  -1  
[DBG]  1  1  1  1  -1  
[DBG]  Identifying agents in a submap for rescheduling (when key_agent is there at the time 31):
[DBG]  Agent 26 found intervals in the sub-map:
[DBG]   [30..37]
[DBG]  Agent 26 (interval in submap: [30..37]) contains time 31, added to replan.
[DBG]  Agent 28 found intervals in the sub-map:
[DBG]   [0..38]
[DBG]  Agent 28 (interval in submap: [0..38]) contains time 31, added to replan.
[DBG]  Agent 45 found intervals in the sub-map:
[DBG]  
[DBG]  Agent 45 is not in sub-map at time 31 (intervals: 
[DBG]  )
[DBG]  Agent 61 found intervals in the sub-map:
[DBG]   [21..31]
[DBG]  Agent 61 (interval in submap: [21..31]) contains time 31, added to replan.
[DBG]  Agent 148 found intervals in the sub-map:
[DBG]   [28..31]
[DBG]  Agent 148 (interval in submap: [28..31]) contains time 31, added to replan.
[DBG]  Agent 26 | Start (global): 533 -> (local): (0, 3) at time 31 | Goal (global): 659 -> (local): (4, 1) at time 37
[DBG]  Agent 28 | Start (global): 596 -> (local): (2, 2) at time 31 | Goal (global): 659 -> (local): (4, 1) at time 38
[DBG]  Agent 61 | Start (global): 534 -> (local): (0, 4) at time 31 | Goal (global): 534 -> (local): (0, 4) at time 31
[DBG]  Agent 148 | Start (global): 660 -> (local): (4, 2) at time 31 | Goal (global): 660 -> (local): (4, 2) at time 31
[DBG]  [REPAIR] SAT destroy operator called.
[DBG]  [REPAIR] SAT operator â€“ launching subproblem FOR OPTIMIZATION.
[DBG]  Creating local paths (sx, sy) in the submap for T_sync = 31
[DBG]    Agent 26 (global paths from T=31 to 37) has local path: (0,3) (1,3) (2,3) (3,3) (3,2) (3,1) (4,1) 
[DBG]    Agent 28 (global paths from T=31 to 38) has local path: (2,2) (2,2) (2,2) (2,2) (2,2) (3,2) (3,1) (4,1) 
[DBG]    Agent 61 (global paths from T=31 to 31) has local path: (0,4) 
[DBG]    Agent 148 (global paths from T=31 to 31) has local path: (4,2) 
[DBG]  Checking input data for SAT solver:
[DBG]    - Number of agents to replan: 4
[DBG]  Agent 26 has the original local path length: 7 => Start (0,3), Goal (4,1)
[DBG]  Agent 28 has the original local path length: 8 => Start (2,2), Goal (4,1)
[DBG]  Agent 61 has the original local path length: 1 => Start (0,4), Goal (0,4)
[DBG]  Agent 148 has the original local path length: 1 => Start (4,2), Goal (4,2)
[DBG]  Start position: (0, 3), (2, 2), (0, 4), (4, 2), 
[DBG]  Goal position: (4, 1), (4, 1), (0, 4), (4, 2), 
[DBG]  SAT instance and solver created.
Currently solving
Instance name: scen
Map name: map
Encoding used: disappear_at_goal
SAT solver used: Kissat
Optimizing function: sum of costs
Number of agents: 4
Mks LB: 7
SoC LB: 13
Delta: 0
Remaining time: 300000 [ms]

Vertex conflict! Agents 1, 2, timestep 4, location 0
Swapping conflict! Agents 1, 2, timestep 4, edge (0,0)
Vertex conflict! Agents 1, 2, timestep 5, location 0
Swapping conflict! Agents 1, 2, timestep 5, edge (0,0)
Vertex conflict! Agents 1, 2, timestep 6, location 0
Vertex conflict! Agents 1, 3, timestep 4, location 0
Swapping conflict! Agents 1, 3, timestep 4, edge (0,0)
Vertex conflict! Agents 1, 3, timestep 5, location 0
Swapping conflict! Agents 1, 3, timestep 5, edge (0,0)
Vertex conflict! Agents 1, 3, timestep 6, location 0
Vertex conflict! Agents 2, 3, timestep 1, location 0
Swapping conflict! Agents 2, 3, timestep 1, edge (0,0)
Vertex conflict! Agents 2, 3, timestep 2, location 0
Swapping conflict! Agents 2, 3, timestep 2, edge (0,0)
Vertex conflict! Agents 2, 3, timestep 3, location 0
Swapping conflict! Agents 2, 3, timestep 3, edge (0,0)
Vertex conflict! Agents 2, 3, timestep 4, location 0
Swapping conflict! Agents 2, 3, timestep 4, edge (0,0)
Vertex conflict! Agents 2, 3, timestep 5, location 0
Swapping conflict! Agents 2, 3, timestep 5, edge (0,0)
Vertex conflict! Agents 2, 3, timestep 6, location 0
Found plan [agents = 4] [timesteps = 7]
Agent #0 : 2 5 9 12 16 15 14 
Agent #1 : 8 11 15 14 0 0 0 
Agent #2 : 3 0 0 0 0 0 0 
Agent #3 : 15 0 0 0 0 0 0 

[DBG]  Solver returned: 0
[DBG]  Agent (index) 26 | New local path (submap idx):
[DBG]  2 5 9 12 16 15 14 
[DBG]  Agent (index) 28 | New local path (submap idx):
[DBG]  8 11 15 14 
[DBG]  Agent (index) 61 | New local path (submap idx):
[DBG]  3 
[DBG]  Agent (index) 148 | New local path (submap idx):
[DBG]  15 
[DBG]  Update the agent path 26 | Original local length: 7 | New local length: 7
[DBG]  agent 26 t=0 => decoded (sx,sy)=(0,3) => global_id=533
[DBG]  agent 26 t=1 => decoded (sx,sy)=(1,3) => global_id=565
[DBG]  agent 26 t=2 => decoded (sx,sy)=(2,3) => global_id=597
[DBG]  agent 26 t=3 => decoded (sx,sy)=(3,3) => global_id=629
[DBG]  agent 26 t=4 => decoded (sx,sy)=(4,3) => global_id=661
[DBG]  agent 26 t=5 => decoded (sx,sy)=(4,2) => global_id=660
[DBG]  agent 26 t=6 => decoded (sx,sy)=(4,1) => global_id=659
[DBG]  Complete path of agent 26:
[DBG]    Original: 13 13 45 46 47 48 49 81 82 83 84 116 148 180 212 244 276 277 278 279 311 312 344 376 408 440 472 504 503 502 534 533 565 597 629 628 627 659 691 692 724 756 755 787 819 818 818 818 818 819 787 755 
[DBG]    New:     13 13 45 46 47 48 49 81 82 83 84 116 148 180 212 244 276 277 278 279 311 312 344 376 408 440 472 504 503 502 534 533 565 597 629 661 660 659 691 692 724 756 755 787 819 818 818 818 818 819 787 755 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 13 13 45 46 47 48 49 81 82 83 84 116 148 180 212 244 276 277 278 279 311 312 344 376 408 440 472 504 503 502 534 
[DBG]    Local path (in submap): 533 565 597 629 661 660 659 
[DBG]    Suffix (out of submap): 691 692 724 756 755 787 819 818 818 818 818 819 787 755 
[DBG]  Original agent path length 26 je: 52
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 0: 13, 13, 45, 46, 47, 48, 49, 81, 82, 83, 84, 116, 148, 180, 212, 244, 276, 277, 278, 279, 311, 312, 344, 376, 408, 440, 472, 504, 503, 502, 534, 533, 565, 597, 629, 661, 660, 659, 691, 692, 724, 756, 755, 787, 819, 818, 818, 818, 818, 819, 787, 755, 
[DBG]  Path for agent 26 updated, resulting length: 52
[DBG]  Update the agent path 28 | Original local length: 8 | New local length: 4
[DBG]  agent 28 t=0 => decoded (sx,sy)=(2,2) => global_id=596
[DBG]  agent 28 t=1 => decoded (sx,sy)=(3,2) => global_id=628
[DBG]  agent 28 t=2 => decoded (sx,sy)=(4,2) => global_id=660
[DBG]  agent 28 t=3 => decoded (sx,sy)=(4,1) => global_id=659
[DBG]  Complete path of agent 28:
[DBG]    Original: 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 660 660 628 628 628 629 629 628 596 596 596 596 596 628 627 659 691 692 724 756 757 757 757 757 757 757 757 757 757 757 757 725 726 727 
[DBG]    New:     661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 660 660 628 628 628 629 629 628 596 628 660 659 691 692 724 756 757 757 757 757 757 757 757 757 757 757 757 725 726 727 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 660 660 628 628 628 629 629 628 
[DBG]    Local path (in submap): 596 628 660 659 691 692 724 756 
[DBG]    Suffix (out of submap): 757 757 757 757 757 757 757 757 757 757 757 725 726 727 
[DBG]  Original agent path length 28 je: 57
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 1: 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 660, 660, 628, 628, 628, 629, 629, 628, 596, 628, 660, 659, 691, 692, 724, 756, 757, 757, 757, 757, 757, 757, 757, 757, 757, 757, 757, 725, 726, 727, 
[DBG]  Path for agent 28 updated, resulting length: 53
[DBG]  Update the agent path 61 | Original local length: 1 | New local length: 1
[DBG]  agent 61 t=0 => decoded (sx,sy)=(0,4) => global_id=534
[DBG]  Complete path of agent 61:
[DBG]    Original: 813 813 813 813 813 813 813 814 782 783 784 784 784 784 784 752 752 720 721 689 657 658 659 627 628 629 629 629 597 565 566 534 502 470 438 439 440 408 409 377 345 313 
[DBG]    New:     813 813 813 813 813 813 813 814 782 783 784 784 784 784 784 752 752 720 721 689 657 658 659 627 628 629 629 629 597 565 566 534 502 470 438 439 440 408 409 377 345 313 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 813 813 813 813 813 813 813 814 782 783 784 784 784 784 784 752 752 720 721 689 657 658 659 627 628 629 629 629 597 565 566 
[DBG]    Local path (in submap): 534 
[DBG]    Suffix (out of submap): 502 470 438 439 440 408 409 377 345 313 
[DBG]  Original agent path length 61 je: 42
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 2: 813, 813, 813, 813, 813, 813, 813, 814, 782, 783, 784, 784, 784, 784, 784, 752, 752, 720, 721, 689, 657, 658, 659, 627, 628, 629, 629, 629, 597, 565, 566, 534, 502, 470, 438, 439, 440, 408, 409, 377, 345, 313, 
[DBG]  Path for agent 61 updated, resulting length: 42
[DBG]  Update the agent path 148 | Original local length: 1 | New local length: 1
[DBG]  agent 148 t=0 => decoded (sx,sy)=(4,2) => global_id=660
[DBG]  Complete path of agent 148:
[DBG]    Original: 776 777 777 777 745 745 745 746 714 714 714 714 714 682 683 682 683 684 685 653 653 653 654 686 687 688 656 657 658 659 659 660 
[DBG]    New:     776 777 777 777 745 745 745 746 714 714 714 714 714 682 683 682 683 684 685 653 653 653 654 686 687 688 656 657 658 659 659 660 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 776 777 777 777 745 745 745 746 714 714 714 714 714 682 683 682 683 684 685 653 653 653 654 686 687 688 656 657 658 659 659 
[DBG]    Local path (in submap): 660 
[DBG]    Suffix (out of submap): 
[DBG]  Original agent path length 148 je: 32
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 3: 776, 777, 777, 777, 745, 745, 745, 746, 714, 714, 714, 714, 714, 682, 683, 682, 683, 684, 685, 653, 653, 653, 654, 686, 687, 688, 656, 657, 658, 659, 659, 660, 
[DBG]  Path for agent 148 updated, resulting length: 32
[DBG]  Paths successfully updated.
[DBG]  (LNS.cpp) New path for agent 26: 
[DBG]  13, 13, 45, 46, 47, 48, 49, 81, 82, 83, 84, 116, 148, 180, 212, 244, 276, 277, 278, 279, 311, 312, 344, 376, 408, 440, 472, 504, 503, 502, 534, 533, 565, 597, 629, 661, 660, 659, 691, 692, 724, 756, 755, 787, 819, 818, 818, 818, 818, 819, 787, 755, 
[DBG]  (LNS.cpp) New path for agent 28: 
[DBG]  661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 660, 660, 628, 628, 628, 629, 629, 628, 596, 628, 660, 659, 691, 692, 724, 756, 757, 757, 757, 757, 757, 757, 757, 757, 757, 757, 757, 725, 726, 727, 
[DBG]  (LNS.cpp) New path for agent 61: 
[DBG]  813, 813, 813, 813, 813, 813, 813, 814, 782, 783, 784, 784, 784, 784, 784, 752, 752, 720, 721, 689, 657, 658, 659, 627, 628, 629, 629, 629, 597, 565, 566, 534, 502, 470, 438, 439, 440, 408, 409, 377, 345, 313, 
[DBG]  (LNS.cpp) New path for agent 148: 
[DBG]  776, 777, 777, 777, 745, 745, 745, 746, 714, 714, 714, 714, 714, 682, 683, 682, 683, 684, 685, 653, 653, 653, 654, 686, 687, 688, 656, 657, 658, 659, 659, 660, 
[DBG]  Delta value: 0.0223464
[DBG]  Rewarding metric index = 1
[DBG]  component_weights = {0.156631, 0.362411, 0.217421, 0.263537}
[DBG]  opSuccess value: 1
[STAT] neighbor.sum_of_costs before recomputation: 175
[STAT] neighbor.old_sum_of_costs before recomputation: 179
[STAT] sum_of_costs before recomputation: 4550
[DBG]  Validate solution immediately after SAT success.
[WARNING] Problem after SAT: Target conflict: agent 26 (len 51) traverses target of agent 148 (len 31) at location 660 at timestep 36
[DBG]  [DEBUG] Attempting immediate repair via init_lns because problem occurred after SAT (should be applied only for conflicts...).
[DBG]  [DEBUG] Passing 150 agents to init_lns (skip=true).
[DBG]  [DEBUG] path_table contents for selected agents (neighbor.agents):
[DBG]    Agent 26 => controlling path length=52
[DBG]    Agent 28 => controlling path length=53
[DBG]    Agent 61 => controlling path length=42
[DBG]    Agent 148 => controlling path length=32
[DBG]  hodnota skip_initial_solution=1
[DBG]  We skip initialSolution => call buildCollisionData()
[DBG]  buildCollisionData() called â€“ skip_initial_solution case.
[DBG]  Agents.size()=150, collision_graph.size()=150
[DBG]  agent 26 => updateCollidingPairs => foundCollision
[DBG]  agent 28 => updateCollidingPairs => foundCollision
[DBG]  agent 42 => updateCollidingPairs => foundCollision
[DBG]  agent 148 => updateCollidingPairs => foundCollision
[DBG]  Conflicting agent pairs:
[DBG]  agent 26 is in conflict with agent 148
[DBG]  agent 28 is in conflict with agent 42
[DBG]  agent 28 is in conflict with agent 148
[DBG]  buildCollisionData() => sum_of_costs=4546, num_of_colliding_pairs=3
[DBG]  buildCollisionData done => sum_of_costs=4546, num_of_colliding_pairs=3
[DBG]  sum_of_cost hodnota: 4546
[DBG]  After skip/init build => iteration_stats.back(): sum_of_costs=4546, collisions=3
[DEBUG] Using default neighbor generation strategy for conflicts: 0
[DEBUG] Using default neighbor generation strategy for conflicts: 1
[DEBUG] Using default neighbor generation strategy for conflicts: 1
[DEBUG] Using default neighbor generation strategy for conflicts: 1
	InitLNS(PP): runtime = 0.0101604, iterations = 5, colliding pairs = 0, initial colliding pairs = 3, solution cost = 4523, initial solution cost = 4546, failed iterations = 0
[DBG]  [DEBUG] init_lns->sum_of_costs after init_lns->run: 4523
[DBG]  [DEBUG] sum_of_costs after assignment from init_lns->run: 4523
[DBG]  Recomputing sum_of_cost by dividing neighbor.sum_of_costs and neighbor.old_sum_of_costs
[STAT] sum_of_costs after recomputation: 4523
[STAT] Iteration 16
[DBG]  Using SAT operator (destroy+repair SAT).
[DBG]  ====================
[DBG]  SAT destroy operator called.
[DBG]  SAT heuristic: 2
[DBG]  key_agent_id: 28
[DBG]  key_agent_id global path length: 57
[DBG]  Submap content (global positions):
[DBG]  817 818 819 820 821 
[DBG]  849 850 851 852 853 
[DBG]  881 882 883 884 885 
[DBG]  913 914 915 916 917 
[DBG]  945 946 947 948 949 
[DBG]  Map content with agents and obstacles:
[DBG]  . . . . . 
[DBG]  . . A X X 
[DBG]  . . A . . 
[DBG]  . . X . . 
[DBG]  X . X . . 
[DBG]  content of the map structure that we pass to the SAT solver:
[DBG]  1  1  1  1  1  
[DBG]  1  1  1  -1  -1  
[DBG]  1  1  1  1  1  
[DBG]  1  1  -1  1  1  
[DBG]  -1  1  -1  1  1  
[DBG]  Identifying agents in a submap for rescheduling (when key_agent is there at the time 47):
[DBG]  Agent 26 found intervals in the sub-map:
[DBG]  
[DBG]  Agent 26 is not in sub-map at time 47 (intervals: 
[DBG]  )
[DBG]  Agent 28 found intervals in the sub-map:
[DBG]   [43..49]
[DBG]  Agent 28 (interval in submap: [43..49]) contains time 47, added to replan.
[DBG]  Agent 42 found intervals in the sub-map:
[DBG]   [44..48]
[DBG]  Agent 42 (interval in submap: [44..48]) contains time 47, added to replan.
[DBG]  Agent 28 | Start (global): 883 -> (local): (2, 2) at time 47 | Goal (global): 819 -> (local): (0, 2) at time 49
[DBG]  Agent 42 | Start (global): 851 -> (local): (1, 2) at time 47 | Goal (global): 819 -> (local): (0, 2) at time 48
[DBG]  [REPAIR] SAT destroy operator called.
[DBG]  [REPAIR] SAT operator â€“ launching subproblem FOR OPTIMIZATION.
[DBG]  Creating local paths (sx, sy) in the submap for T_sync = 47
[DBG]    Agent 28 (global paths from T=47 to 49) has local path: (2,2) (1,2) (0,2) 
[DBG]    Agent 42 (global paths from T=47 to 48) has local path: (1,2) (0,2) 
[DBG]  Checking input data for SAT solver:
[DBG]    - Number of agents to replan: 2
[DBG]  Agent 28 has the original local path length: 3 => Start (2,2), Goal (0,2)
[DBG]  Agent 42 has the original local path length: 2 => Start (1,2), Goal (0,2)
[DBG]  Start position: (2, 2), (1, 2), 
[DBG]  Goal position: (0, 2), (0, 2), 
[DBG]  SAT instance and solver created.
Currently solving
Instance name: scen
Map name: map
Encoding used: disappear_at_goal
SAT solver used: Kissat
Optimizing function: sum of costs
Number of agents: 2
Mks LB: 3
SoC LB: 5
Delta: 0
Remaining time: 300000 [ms]

Found plan [agents = 2] [timesteps = 3]
Agent #0 : 10 7 2 
Agent #1 : 7 2 0 

[DBG]  Solver returned: 0
[DBG]  Agent (index) 28 | New local path (submap idx):
[DBG]  10 7 2 
[DBG]  Agent (index) 42 | New local path (submap idx):
[DBG]  7 2 
[DBG]  Update the agent path 28 | Original local length: 3 | New local length: 3
[DBG]  agent 28 t=0 => decoded (sx,sy)=(2,2) => global_id=883
[DBG]  agent 28 t=1 => decoded (sx,sy)=(1,2) => global_id=851
[DBG]  agent 28 t=2 => decoded (sx,sy)=(0,2) => global_id=819
[DBG]  Complete path of agent 28:
[DBG]    Original: 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 660 660 628 660 692 724 756 788 787 787 787 787 787 787 787 787 787 787 787 787 819 851 883 883 883 851 819 787 788 756 724 725 726 727 
[DBG]    New:     661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 660 660 628 660 692 724 756 788 787 787 787 787 787 787 787 787 787 787 787 787 819 851 883 883 883 851 819 787 788 756 724 725 726 727 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 660 660 628 660 692 724 756 788 787 787 787 787 787 787 787 787 787 787 787 787 819 851 883 883 
[DBG]    Local path (in submap): 883 851 819 
[DBG]    Suffix (out of submap): 787 788 756 724 725 726 727 
[DBG]  Original agent path length 28 je: 57
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 0: 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 660, 660, 628, 660, 692, 724, 756, 788, 787, 787, 787, 787, 787, 787, 787, 787, 787, 787, 787, 787, 819, 851, 883, 883, 883, 851, 819, 787, 788, 756, 724, 725, 726, 727, 
[DBG]  Path for agent 28 updated, resulting length: 57
[DBG]  Update the agent path 42 | Original local length: 2 | New local length: 2
[DBG]  agent 42 t=0 => decoded (sx,sy)=(1,2) => global_id=851
[DBG]  agent 42 t=1 => decoded (sx,sy)=(0,2) => global_id=819
[DBG]  Complete path of agent 42:
[DBG]    Original: 224 224 256 288 289 321 353 354 354 355 387 388 420 421 422 423 424 425 457 458 490 491 523 524 523 555 555 523 524 556 588 589 590 591 623 655 687 719 751 783 815 847 879 880 881 882 850 851 819 787 788 756 757 725 726 727 759 
[DBG]    New:     224 224 256 288 289 321 353 354 354 355 387 388 420 421 422 423 424 425 457 458 490 491 523 524 523 555 555 523 524 556 588 589 590 591 623 655 687 719 751 783 815 847 879 880 881 882 850 851 819 787 788 756 757 725 726 727 759 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 224 224 256 288 289 321 353 354 354 355 387 388 420 421 422 423 424 425 457 458 490 491 523 524 523 555 555 523 524 556 588 589 590 591 623 655 687 719 751 783 815 847 879 880 881 882 850 
[DBG]    Local path (in submap): 851 819 
[DBG]    Suffix (out of submap): 787 788 756 757 725 726 727 759 
[DBG]  Original agent path length 42 je: 57
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 1: 224, 224, 256, 288, 289, 321, 353, 354, 354, 355, 387, 388, 420, 421, 422, 423, 424, 425, 457, 458, 490, 491, 523, 524, 523, 555, 555, 523, 524, 556, 588, 589, 590, 591, 623, 655, 687, 719, 751, 783, 815, 847, 879, 880, 881, 882, 850, 851, 819, 787, 788, 756, 757, 725, 726, 727, 759, 
[DBG]  Path for agent 42 updated, resulting length: 57
[DBG]  Paths successfully updated.
[DBG]  (LNS.cpp) New path for agent 28: 
[DBG]  661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 660, 660, 628, 660, 692, 724, 756, 788, 787, 787, 787, 787, 787, 787, 787, 787, 787, 787, 787, 787, 819, 851, 883, 883, 883, 851, 819, 787, 788, 756, 724, 725, 726, 727, 
[DBG]  (LNS.cpp) New path for agent 42: 
[DBG]  224, 224, 256, 288, 289, 321, 353, 354, 354, 355, 387, 388, 420, 421, 422, 423, 424, 425, 457, 458, 490, 491, 523, 524, 523, 555, 555, 523, 524, 556, 588, 589, 590, 591, 623, 655, 687, 719, 751, 783, 815, 847, 879, 880, 881, 882, 850, 851, 819, 787, 788, 756, 757, 725, 726, 727, 759, 
[DBG]  Delta value: 0
[DBG]  Rewarding metric index = 2
[DBG]  component_weights = {0.154859, 0.358311, 0.226275, 0.260555}
[DBG]  opSuccess value: 1
[STAT] neighbor.sum_of_costs before recomputation: 112
[STAT] neighbor.old_sum_of_costs before recomputation: 112
[STAT] sum_of_costs before recomputation: 4523
[DBG]  Validate solution immediately after SAT success.
[DBG]  No problems after SAT replan.
[DBG]  Recomputing sum_of_cost by dividing neighbor.sum_of_costs and neighbor.old_sum_of_costs
[STAT] sum_of_costs after recomputation: 4523
[STAT] Iteration 17
[DBG]  Random chance did not select SAT operator (r=92), using default strategy.
[DBG]  opSuccess value: 0
[STAT] Iteration 17
[DBG]  Using SAT operator (destroy+repair SAT).
[DBG]  ====================
[DBG]  SAT destroy operator called.
[DBG]  SAT heuristic: 2
[DBG]  key_agent_id: 28
[DBG]  key_agent_id global path length: 57
[DBG]  Submap content (global positions):
[DBG]  661 662 663 664 665 
[DBG]  693 694 695 696 697 
[DBG]  725 726 727 728 729 
[DBG]  757 758 759 760 761 
[DBG]  789 790 791 792 793 
[DBG]  Map content with agents and obstacles:
[DBG]  . X X . X 
[DBG]  X X X . . 
[DBG]  . . A . . 
[DBG]  . X A X . 
[DBG]  X . X . . 
[DBG]  content of the map structure that we pass to the SAT solver:
[DBG]  1  -1  -1  1  -1  
[DBG]  -1  -1  -1  1  1  
[DBG]  1  1  1  1  1  
[DBG]  1  -1  1  -1  1  
[DBG]  -1  1  -1  1  1  
[DBG]  Identifying agents in a submap for rescheduling (when key_agent is there at the time 56):
[DBG]  Agent 28 found intervals in the sub-map:
[DBG]   [0..22] [54..56]
[DBG]  Agent 28 (interval in submap: [54..56]) contains time 56, added to replan.
[DBG]  Agent 42 found intervals in the sub-map:
[DBG]   [52..56]
[DBG]  Agent 42 (interval in submap: [52..56]) contains time 56, added to replan.
[DBG]  Agent 28 | Start (global): 727 -> (local): (2, 2) at time 56 | Goal (global): 727 -> (local): (2, 2) at time 56
[DBG]  Agent 42 | Start (global): 759 -> (local): (3, 2) at time 56 | Goal (global): 759 -> (local): (3, 2) at time 56
[DBG]  [REPAIR] SAT destroy operator called.
[DBG]  [REPAIR] SAT operator â€“ launching subproblem FOR OPTIMIZATION.
[DBG]  Creating local paths (sx, sy) in the submap for T_sync = 56
[DBG]    Agent 28 (global paths from T=56 to 56) has local path: (2,2) 
[DBG]    Agent 42 (global paths from T=56 to 56) has local path: (3,2) 
[DBG]  Checking input data for SAT solver:
[DBG]    - Number of agents to replan: 2
[DBG]  Agent 28 has the original local path length: 1 => Start (2,2), Goal (2,2)
[DBG]  Agent 42 has the original local path length: 1 => Start (3,2), Goal (3,2)
[DBG]  Start position: (2, 2), (3, 2), 
[DBG]  Goal position: (2, 2), (3, 2), 
[DBG]  SAT instance and solver created.
Currently solving
Instance name: scen
Map name: map
Encoding used: disappear_at_goal
SAT solver used: Kissat
Optimizing function: sum of costs
Number of agents: 2
Mks LB: 1
SoC LB: 2
Delta: 0
Remaining time: 300000 [ms]

Found plan [agents = 2] [timesteps = 1]
Agent #0 : 6 
Agent #1 : 10 

[DBG]  Solver returned: 0
[DBG]  Agent (index) 28 | New local path (submap idx):
[DBG]  6 
[DBG]  Agent (index) 42 | New local path (submap idx):
[DBG]  10 
[DBG]  Update the agent path 28 | Original local length: 1 | New local length: 1
[DBG]  agent 28 t=0 => decoded (sx,sy)=(2,2) => global_id=727
[DBG]  Complete path of agent 28:
[DBG]    Original: 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 660 660 628 660 692 724 756 788 787 787 787 787 787 787 787 787 787 787 787 787 819 851 883 883 883 851 819 787 788 756 724 725 726 727 
[DBG]    New:     661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 660 660 628 660 692 724 756 788 787 787 787 787 787 787 787 787 787 787 787 787 819 851 883 883 883 851 819 787 788 756 724 725 726 727 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 660 660 628 660 692 724 756 788 787 787 787 787 787 787 787 787 787 787 787 787 819 851 883 883 883 851 819 787 788 756 724 725 726 
[DBG]    Local path (in submap): 727 
[DBG]    Suffix (out of submap): 
[DBG]  Original agent path length 28 je: 57
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 0: 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 660, 660, 628, 660, 692, 724, 756, 788, 787, 787, 787, 787, 787, 787, 787, 787, 787, 787, 787, 787, 819, 851, 883, 883, 883, 851, 819, 787, 788, 756, 724, 725, 726, 727, 
[DBG]  Path for agent 28 updated, resulting length: 57
[DBG]  Update the agent path 42 | Original local length: 1 | New local length: 1
[DBG]  agent 42 t=0 => decoded (sx,sy)=(3,2) => global_id=759
[DBG]  Complete path of agent 42:
[DBG]    Original: 224 224 256 288 289 321 353 354 354 355 387 388 420 421 422 423 424 425 457 458 490 491 523 524 523 555 555 523 524 556 588 589 590 591 623 655 687 719 751 783 815 847 879 880 881 882 850 851 819 787 788 756 757 725 726 727 759 
[DBG]    New:     224 224 256 288 289 321 353 354 354 355 387 388 420 421 422 423 424 425 457 458 490 491 523 524 523 555 555 523 524 556 588 589 590 591 623 655 687 719 751 783 815 847 879 880 881 882 850 851 819 787 788 756 757 725 726 727 759 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 224 224 256 288 289 321 353 354 354 355 387 388 420 421 422 423 424 425 457 458 490 491 523 524 523 555 555 523 524 556 588 589 590 591 623 655 687 719 751 783 815 847 879 880 881 882 850 851 819 787 788 756 757 725 726 727 
[DBG]    Local path (in submap): 759 
[DBG]    Suffix (out of submap): 
[DBG]  Original agent path length 42 je: 57
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 1: 224, 224, 256, 288, 289, 321, 353, 354, 354, 355, 387, 388, 420, 421, 422, 423, 424, 425, 457, 458, 490, 491, 523, 524, 523, 555, 555, 523, 524, 556, 588, 589, 590, 591, 623, 655, 687, 719, 751, 783, 815, 847, 879, 880, 881, 882, 850, 851, 819, 787, 788, 756, 757, 725, 726, 727, 759, 
[DBG]  Path for agent 42 updated, resulting length: 57
[DBG]  Paths successfully updated.
[DBG]  (LNS.cpp) New path for agent 28: 
[DBG]  661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 660, 660, 628, 660, 692, 724, 756, 788, 787, 787, 787, 787, 787, 787, 787, 787, 787, 787, 787, 787, 819, 851, 883, 883, 883, 851, 819, 787, 788, 756, 724, 725, 726, 727, 
[DBG]  (LNS.cpp) New path for agent 42: 
[DBG]  224, 224, 256, 288, 289, 321, 353, 354, 354, 355, 387, 388, 420, 421, 422, 423, 424, 425, 457, 458, 490, 491, 523, 524, 523, 555, 555, 523, 524, 556, 588, 589, 590, 591, 623, 655, 687, 719, 751, 783, 815, 847, 879, 880, 881, 882, 850, 851, 819, 787, 788, 756, 757, 725, 726, 727, 759, 
[DBG]  Delta value: 0
[DBG]  Rewarding metric index = 1
[DBG]  component_weights = {0.151992, 0.370188, 0.222087, 0.255732}
[DBG]  opSuccess value: 1
[STAT] neighbor.sum_of_costs before recomputation: 112
[STAT] neighbor.old_sum_of_costs before recomputation: 112
[STAT] sum_of_costs before recomputation: 4523
[DBG]  Validate solution immediately after SAT success.
[DBG]  No problems after SAT replan.
[DBG]  Recomputing sum_of_cost by dividing neighbor.sum_of_costs and neighbor.old_sum_of_costs
[STAT] sum_of_costs after recomputation: 4523
[STAT] Iteration 18
[DBG]  Using SAT operator (destroy+repair SAT).
[DBG]  ====================
[DBG]  SAT destroy operator called.
[DBG]  SAT heuristic: 2
[DBG]  key_agent_id: 28
[DBG]  key_agent_id global path length: 57
[DBG]  Submap content (global positions):
[DBG]  595 596 597 598 599 
[DBG]  627 628 629 630 631 
[DBG]  659 660 661 662 663 
[DBG]  691 692 693 694 695 
[DBG]  723 724 725 726 727 
[DBG]  Map content with agents and obstacles:
[DBG]  X A . X . 
[DBG]  . . . X . 
[DBG]  . . A X X 
[DBG]  . A X X X 
[DBG]  X A . . . 
[DBG]  content of the map structure that we pass to the SAT solver:
[DBG]  -1  1  1  -1  1  
[DBG]  1  1  1  -1  1  
[DBG]  1  1  1  -1  -1  
[DBG]  1  1  -1  -1  -1  
[DBG]  -1  1  1  1  1  
[DBG]  Identifying agents in a submap for rescheduling (when key_agent is there at the time 21):
[DBG]  Agent 11 found intervals in the sub-map:
[DBG]   [18..23]
[DBG]  Agent 11 (interval in submap: [18..23]) contains time 21, added to replan.
[DBG]  Agent 28 found intervals in the sub-map:
[DBG]   [0..28] [53..56]
[DBG]  Agent 28 (interval in submap: [0..28]) contains time 21, added to replan.
[DBG]  Agent 30 found intervals in the sub-map:
[DBG]   [20..29]
[DBG]  Agent 30 (interval in submap: [20..29]) contains time 21, added to replan.
[DBG]  Agent 61 found intervals in the sub-map:
[DBG]   [22..28]
[DBG]  Agent 61 is not in sub-map at time 21 (intervals: 
[DBG]  [22..28] )
[DBG]  Agent 79 found intervals in the sub-map:
[DBG]   [17..23]
[DBG]  Agent 79 (interval in submap: [17..23]) contains time 21, added to replan.
[DBG]  Agent 11 | Start (global): 692 -> (local): (3, 1) at time 21 | Goal (global): 659 -> (local): (2, 0) at time 23
[DBG]  Agent 28 | Start (global): 661 -> (local): (2, 2) at time 21 | Goal (global): 724 -> (local): (4, 1) at time 28
[DBG]  Agent 30 | Start (global): 724 -> (local): (4, 1) at time 21 | Goal (global): 597 -> (local): (0, 2) at time 29
[DBG]  Agent 79 | Start (global): 596 -> (local): (0, 1) at time 21 | Goal (global): 597 -> (local): (0, 2) at time 23
[DBG]  [REPAIR] SAT destroy operator called.
[DBG]  [REPAIR] SAT operator â€“ launching subproblem FOR OPTIMIZATION.
[DBG]  Creating local paths (sx, sy) in the submap for T_sync = 21
[DBG]    Agent 11 (global paths from T=21 to 23) has local path: (3,1) (2,1) (2,0) 
[DBG]    Agent 28 (global paths from T=21 to 28) has local path: (2,2) (2,2) (2,1) (2,1) (1,1) (2,1) (3,1) (4,1) 
[DBG]    Agent 30 (global paths from T=21 to 29) has local path: (4,1) (3,1) (3,0) (2,0) (1,0) (1,1) (1,1) (1,2) (0,2) 
[DBG]    Agent 79 (global paths from T=21 to 23) has local path: (0,1) (0,1) (0,2) 
[DBG]  Checking input data for SAT solver:
[DBG]    - Number of agents to replan: 4
[DBG]  Agent 11 has the original local path length: 3 => Start (3,1), Goal (2,0)
[DBG]  Agent 28 has the original local path length: 8 => Start (2,2), Goal (4,1)
[DBG]  Agent 30 has the original local path length: 9 => Start (4,1), Goal (0,2)
[DBG]  Agent 79 has the original local path length: 3 => Start (0,1), Goal (0,2)
[DBG]  Start position: (3, 1), (2, 2), (4, 1), (0, 1), 
[DBG]  Goal position: (2, 0), (4, 1), (0, 2), (0, 2), 
[DBG]  SAT instance and solver created.
Currently solving
Instance name: scen
Map name: map
Encoding used: disappear_at_goal
SAT solver used: Kissat
Optimizing function: sum of costs
Number of agents: 4
Mks LB: 6
SoC LB: 15
Delta: 0
Remaining time: 300000 [ms]

[DBG]  Solver returned: -1
[DBG]  SAT solver failed.
[STAT] SAT solver failed to find a valid solution.
[DBG]  ====================
[DBG]  SAT destroy operator called.
[DBG]  SAT heuristic: 2
[DBG]  key_agent_id: 28
[DBG]  key_agent_id global path length: 57
[DBG]  Submap content (global positions):
[DBG]  722 723 724 725 726 
[DBG]  754 755 756 757 758 
[DBG]  786 787 788 789 790 
[DBG]  818 819 820 821 822 
[DBG]  850 851 852 853 854 
[DBG]  Map content with agents and obstacles:
[DBG]  . X . . . 
[DBG]  X . . . X 
[DBG]  . A A X . 
[DBG]  . . . . . 
[DBG]  . . X X . 
[DBG]  content of the map structure that we pass to the SAT solver:
[DBG]  1  -1  1  1  1  
[DBG]  -1  1  1  1  -1  
[DBG]  1  1  1  -1  1  
[DBG]  1  1  1  1  1  
[DBG]  1  1  -1  -1  1  
[DBG]  Identifying agents in a submap for rescheduling (when key_agent is there at the time 30):
[DBG]  Agent 3 found intervals in the sub-map:
[DBG]   [27..33]
[DBG]  Agent 3 (interval in submap: [27..33]) contains time 30, added to replan.
[DBG]  Agent 28 found intervals in the sub-map:
[DBG]   [28..44] [48..55]
[DBG]  Agent 28 (interval in submap: [28..44]) contains time 30, added to replan.
[DBG]  Agent 45 found intervals in the sub-map:
[DBG]   [33..41]
[DBG]  Agent 45 is not in sub-map at time 30 (intervals: 
[DBG]  [33..41] )
[DBG]  Agent 148 found intervals in the sub-map:
[DBG]  
[DBG]  Agent 148 is not in sub-map at time 30 (intervals: 
[DBG]  )
[DBG]  Agent 3 | Start (global): 787 -> (local): (2, 1) at time 30 | Goal (global): 850 -> (local): (4, 0) at time 33
[DBG]  Agent 28 | Start (global): 788 -> (local): (2, 2) at time 30 | Goal (global): 851 -> (local): (4, 1) at time 44
[DBG]  [REPAIR] SAT destroy operator called.
[DBG]  [REPAIR] SAT operator â€“ launching subproblem FOR OPTIMIZATION.
[DBG]  Creating local paths (sx, sy) in the submap for T_sync = 30
[DBG]    Agent 3 (global paths from T=30 to 33) has local path: (2,1) (2,0) (3,0) (4,0) 
[DBG]    Agent 28 (global paths from T=30 to 44) has local path: (2,2) (2,1) (2,1) (2,1) (2,1) (2,1) (2,1) (2,1) (2,1) (2,1) (2,1) (2,1) (2,1) (3,1) (4,1) 
[DBG]  Checking input data for SAT solver:
[DBG]    - Number of agents to replan: 2
[DBG]  Agent 3 has the original local path length: 4 => Start (2,1), Goal (4,0)
[DBG]  Agent 28 has the original local path length: 15 => Start (2,2), Goal (4,1)
[DBG]  Start position: (2, 1), (2, 2), 
[DBG]  Goal position: (4, 0), (4, 1), 
[DBG]  SAT instance and solver created.
Currently solving
Instance name: scen
Map name: map
Encoding used: disappear_at_goal
SAT solver used: Kissat
Optimizing function: sum of costs
Number of agents: 2
Mks LB: 4
SoC LB: 8
Delta: 0
Remaining time: 300000 [ms]

Found plan [agents = 2] [timesteps = 4]
Agent #0 : 8 12 17 16 
Agent #1 : 9 13 12 17 

[DBG]  Solver returned: 0
[DBG]  Agent (index) 3 | New local path (submap idx):
[DBG]  8 12 17 16 
[DBG]  Agent (index) 28 | New local path (submap idx):
[DBG]  9 13 12 17 
[DBG]  Update the agent path 3 | Original local length: 4 | New local length: 4
[DBG]  agent 3 t=0 => decoded (sx,sy)=(2,1) => global_id=787
[DBG]  agent 3 t=1 => decoded (sx,sy)=(3,1) => global_id=819
[DBG]  agent 3 t=2 => decoded (sx,sy)=(4,1) => global_id=851
[DBG]  agent 3 t=3 => decoded (sx,sy)=(4,0) => global_id=850
[DBG]  Complete path of agent 3:
[DBG]    Original: 468 468 468 468 468 468 468 467 435 435 467 468 469 470 502 534 533 533 533 534 566 565 597 629 661 660 692 724 756 788 787 786 818 850 882 881 881 881 881 880 912 
[DBG]    New:     468 468 468 468 468 468 468 467 435 435 467 468 469 470 502 534 533 533 533 534 566 565 597 629 661 660 692 724 756 788 787 819 851 850 882 881 881 881 881 880 912 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 468 468 468 468 468 468 468 467 435 435 467 468 469 470 502 534 533 533 533 534 566 565 597 629 661 660 692 724 756 788 
[DBG]    Local path (in submap): 787 819 851 850 
[DBG]    Suffix (out of submap): 882 881 881 881 881 880 912 
[DBG]  Original agent path length 3 je: 41
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 0: 468, 468, 468, 468, 468, 468, 468, 467, 435, 435, 467, 468, 469, 470, 502, 534, 533, 533, 533, 534, 566, 565, 597, 629, 661, 660, 692, 724, 756, 788, 787, 819, 851, 850, 882, 881, 881, 881, 881, 880, 912, 
[DBG]  Path for agent 3 updated, resulting length: 41
[DBG]  Update the agent path 28 | Original local length: 15 | New local length: 4
[DBG]  agent 28 t=0 => decoded (sx,sy)=(2,2) => global_id=788
[DBG]  agent 28 t=1 => decoded (sx,sy)=(3,2) => global_id=820
[DBG]  agent 28 t=2 => decoded (sx,sy)=(3,1) => global_id=819
[DBG]  agent 28 t=3 => decoded (sx,sy)=(4,1) => global_id=851
[DBG]  Complete path of agent 28:
[DBG]    Original: 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 660 660 628 660 692 724 756 788 787 787 787 787 787 787 787 787 787 787 787 787 819 851 883 883 883 851 819 787 788 756 724 725 726 727 
[DBG]    New:     661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 660 660 628 660 692 724 756 788 820 819 851 883 883 883 851 819 787 788 756 724 725 726 727 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 660 660 628 660 692 724 756 
[DBG]    Local path (in submap): 788 820 819 851 883 883 883 851 819 787 788 756 724 725 726 
[DBG]    Suffix (out of submap): 727 
[DBG]  Original agent path length 28 je: 57
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 1: 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 660, 660, 628, 660, 692, 724, 756, 788, 820, 819, 851, 883, 883, 883, 851, 819, 787, 788, 756, 724, 725, 726, 727, 
[DBG]  Path for agent 28 updated, resulting length: 46
[DBG]  Paths successfully updated.
[DBG]  (LNS.cpp) New path for agent 3: 
[DBG]  468, 468, 468, 468, 468, 468, 468, 467, 435, 435, 467, 468, 469, 470, 502, 534, 533, 533, 533, 534, 566, 565, 597, 629, 661, 660, 692, 724, 756, 788, 787, 819, 851, 850, 882, 881, 881, 881, 881, 880, 912, 
[DBG]  (LNS.cpp) New path for agent 28: 
[DBG]  661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 660, 660, 628, 660, 692, 724, 756, 788, 820, 819, 851, 883, 883, 883, 851, 819, 787, 788, 756, 724, 725, 726, 727, 
[DBG]  Delta value: 0.114583
[DBG]  Rewarding metric index = 1
[DBG]  component_weights = {0.142832, 0.408146, 0.208702, 0.24032}
[DBG]  opSuccess value: 1
[STAT] neighbor.sum_of_costs before recomputation: 85
[STAT] neighbor.old_sum_of_costs before recomputation: 96
[STAT] sum_of_costs before recomputation: 4523
[DBG]  Validate solution immediately after SAT success.
[WARNING] Problem after SAT: Target conflict: agent 42 (len 56) traverses target of agent 28 (len 45) at location 727 at timestep 55
[DBG]  [DEBUG] Attempting immediate repair via init_lns because problem occurred after SAT (should be applied only for conflicts...).
[DBG]  [DEBUG] Passing 150 agents to init_lns (skip=true).
[DBG]  [DEBUG] path_table contents for selected agents (neighbor.agents):
[DBG]    Agent 3 => controlling path length=41
[DBG]    Agent 28 => controlling path length=46
[DBG]  hodnota skip_initial_solution=1
[DBG]  We skip initialSolution => call buildCollisionData()
[DBG]  buildCollisionData() called â€“ skip_initial_solution case.
[DBG]  Agents.size()=150, collision_graph.size()=150
[DBG]  agent 28 => updateCollidingPairs => foundCollision
[DBG]  agent 42 => updateCollidingPairs => foundCollision
[DBG]  Conflicting agent pairs:
[DBG]  agent 28 is in conflict with agent 42
[DBG]  buildCollisionData() => sum_of_costs=4512, num_of_colliding_pairs=1
[DBG]  buildCollisionData done => sum_of_costs=4512, num_of_colliding_pairs=1
[DBG]  sum_of_cost hodnota: 4512
[DBG]  After skip/init build => iteration_stats.back(): sum_of_costs=4512, collisions=1
[DEBUG] Using default neighbor generation strategy for conflicts: 1
[DEBUG] Using default neighbor generation strategy for conflicts: 2
[DEBUG] Using default neighbor generation strategy for conflicts: 0
	InitLNS(PP): runtime = 0.00568538, iterations = 4, colliding pairs = 0, initial colliding pairs = 1, solution cost = 4521, initial solution cost = 4512, failed iterations = 0
[DBG]  [DEBUG] init_lns->sum_of_costs after init_lns->run: 4521
[DBG]  [DEBUG] sum_of_costs after assignment from init_lns->run: 4521
[DBG]  Recomputing sum_of_cost by dividing neighbor.sum_of_costs and neighbor.old_sum_of_costs
[STAT] sum_of_costs after recomputation: 4521
[STAT] Iteration 19
[DBG]  Using SAT operator (destroy+repair SAT).
[DBG]  ====================
[DBG]  SAT destroy operator called.
[DBG]  SAT heuristic: 2
[DBG]  key_agent_id: 28
[DBG]  key_agent_id global path length: 46
[DBG]  Submap content (global positions):
[DBG]  595 596 597 598 599 
[DBG]  627 628 629 630 631 
[DBG]  659 660 661 662 663 
[DBG]  691 692 693 694 695 
[DBG]  723 724 725 726 727 
[DBG]  Map content with agents and obstacles:
[DBG]  X A . X . 
[DBG]  . . . X . 
[DBG]  A A A X X 
[DBG]  . A X X X 
[DBG]  X . . . . 
[DBG]  content of the map structure that we pass to the SAT solver:
[DBG]  -1  1  1  -1  1  
[DBG]  1  1  1  -1  1  
[DBG]  1  1  1  -1  -1  
[DBG]  1  1  -1  -1  -1  
[DBG]  -1  1  1  1  1  
[DBG]  Identifying agents in a submap for rescheduling (when key_agent is there at the time 22):
[DBG]  Agent 3 found intervals in the sub-map:
[DBG]  
[DBG]  Agent 3 is not in sub-map at time 22 (intervals: 
[DBG]  )
[DBG]  Agent 11 found intervals in the sub-map:
[DBG]   [18..23]
[DBG]  Agent 11 (interval in submap: [18..23]) contains time 22, added to replan.
[DBG]  Agent 28 found intervals in the sub-map:
[DBG]   [0..40] [43..45]
[DBG]  Agent 28 (interval in submap: [0..40]) contains time 22, added to replan.
[DBG]  Agent 30 found intervals in the sub-map:
[DBG]   [20..29]
[DBG]  Agent 30 (interval in submap: [20..29]) contains time 22, added to replan.
[DBG]  Agent 61 found intervals in the sub-map:
[DBG]   [22..28]
[DBG]  Agent 61 (interval in submap: [22..28]) contains time 22, added to replan.
[DBG]  Agent 79 found intervals in the sub-map:
[DBG]   [17..23]
[DBG]  Agent 79 (interval in submap: [17..23]) contains time 22, added to replan.
[DBG]  Agent 11 | Start (global): 660 -> (local): (2, 1) at time 22 | Goal (global): 659 -> (local): (2, 0) at time 23
[DBG]  Agent 28 | Start (global): 661 -> (local): (2, 2) at time 22 | Goal (global): 725 -> (local): (4, 2) at time 40
[DBG]  Agent 30 | Start (global): 692 -> (local): (3, 1) at time 22 | Goal (global): 597 -> (local): (0, 2) at time 29
[DBG]  Agent 61 | Start (global): 659 -> (local): (2, 0) at time 22 | Goal (global): 597 -> (local): (0, 2) at time 28
[DBG]  Agent 79 | Start (global): 596 -> (local): (0, 1) at time 22 | Goal (global): 597 -> (local): (0, 2) at time 23
[DBG]  [REPAIR] SAT destroy operator called.
[DBG]  [REPAIR] SAT operator â€“ launching subproblem FOR OPTIMIZATION.
[DBG]  Creating local paths (sx, sy) in the submap for T_sync = 22
[DBG]    Agent 11 (global paths from T=22 to 23) has local path: (2,1) (2,0) 
[DBG]    Agent 28 (global paths from T=22 to 40) has local path: (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,1) (2,1) (2,1) (2,1) (2,1) (2,1) (2,1) (3,1) (4,1) (4,2) 
[DBG]    Agent 30 (global paths from T=22 to 29) has local path: (3,1) (3,0) (2,0) (2,1) (1,1) (1,1) (1,2) (0,2) 
[DBG]    Agent 61 (global paths from T=22 to 28) has local path: (2,0) (1,0) (1,1) (1,2) (1,2) (1,2) (0,2) 
[DBG]    Agent 79 (global paths from T=22 to 23) has local path: (0,1) (0,2) 
[DBG]  Checking input data for SAT solver:
[DBG]    - Number of agents to replan: 5
[DBG]  Agent 11 has the original local path length: 2 => Start (2,1), Goal (2,0)
[DBG]  Agent 28 has the original local path length: 19 => Start (2,2), Goal (4,2)
[DBG]  Agent 30 has the original local path length: 8 => Start (3,1), Goal (0,2)
[DBG]  Agent 61 has the original local path length: 7 => Start (2,0), Goal (0,2)
[DBG]  Agent 79 has the original local path length: 2 => Start (0,1), Goal (0,2)
[DBG]  Start position: (2, 1), (2, 2), (3, 1), (2, 0), (0, 1), 
[DBG]  Goal position: (2, 0), (4, 2), (0, 2), (0, 2), (0, 2), 
[DBG]  SAT instance and solver created.
Currently solving
Instance name: scen
Map name: map
Encoding used: disappear_at_goal
SAT solver used: Kissat
Optimizing function: sum of costs
Number of agents: 5
Mks LB: 5
SoC LB: 19
Delta: 0
Remaining time: 300000 [ms]

[DBG]  Solver returned: -1
[DBG]  SAT solver failed.
[STAT] SAT solver failed to find a valid solution.
[DBG]  ====================
[DBG]  SAT destroy operator called.
[DBG]  SAT heuristic: 2
[DBG]  key_agent_id: 28
[DBG]  key_agent_id global path length: 46
[DBG]  Submap content (global positions):
[DBG]  626 627 628 629 630 
[DBG]  658 659 660 661 662 
[DBG]  690 691 692 693 694 
[DBG]  722 723 724 725 726 
[DBG]  754 755 756 757 758 
[DBG]  Map content with agents and obstacles:
[DBG]  X . A A X 
[DBG]  . . . . X 
[DBG]  X A A X X 
[DBG]  . X . . . 
[DBG]  X . . . X 
[DBG]  content of the map structure that we pass to the SAT solver:
[DBG]  -1  1  1  1  -1  
[DBG]  1  1  1  1  -1  
[DBG]  -1  1  1  -1  -1  
[DBG]  1  -1  1  1  1  
[DBG]  -1  1  1  1  -1  
[DBG]  Identifying agents in a submap for rescheduling (when key_agent is there at the time 38):
[DBG]  Agent 28 found intervals in the sub-map:
[DBG]   [0..44]
[DBG]  Agent 28 (interval in submap: [0..44]) contains time 38, added to replan.
[DBG]  Agent 42 found intervals in the sub-map:
[DBG]   [37..43]
[DBG]  Agent 42 (interval in submap: [37..43]) contains time 38, added to replan.
[DBG]  Agent 55 found intervals in the sub-map:
[DBG]   [38..41]
[DBG]  Agent 55 (interval in submap: [38..41]) contains time 38, added to replan.
[DBG]  Agent 148 found intervals in the sub-map:
[DBG]   [35..41]
[DBG]  Agent 148 (interval in submap: [35..41]) contains time 38, added to replan.
[DBG]  Agent 28 | Start (global): 692 -> (local): (2, 2) at time 38 | Goal (global): 726 -> (local): (3, 4) at time 44
[DBG]  Agent 42 | Start (global): 628 -> (local): (0, 2) at time 38 | Goal (global): 726 -> (local): (3, 4) at time 43
[DBG]  Agent 55 | Start (global): 629 -> (local): (0, 3) at time 38 | Goal (global): 692 -> (local): (2, 2) at time 41
[DBG]  Agent 148 | Start (global): 691 -> (local): (2, 1) at time 38 | Goal (global): 660 -> (local): (1, 2) at time 41
[DBG]  [REPAIR] SAT destroy operator called.
[DBG]  [REPAIR] SAT operator â€“ launching subproblem FOR OPTIMIZATION.
[DBG]  Creating local paths (sx, sy) in the submap for T_sync = 38
[DBG]    Agent 28 (global paths from T=38 to 44) has local path: (2,2) (3,2) (3,3) (4,3) (4,3) (3,3) (3,4) 
[DBG]    Agent 42 (global paths from T=38 to 43) has local path: (0,2) (1,2) (2,2) (3,2) (3,3) (3,4) 
[DBG]    Agent 55 (global paths from T=38 to 41) has local path: (0,3) (0,2) (1,2) (2,2) 
[DBG]    Agent 148 (global paths from T=38 to 41) has local path: (2,1) (1,1) (1,1) (1,2) 
[DBG]  Checking input data for SAT solver:
[DBG]    - Number of agents to replan: 4
[DBG]  Agent 28 has the original local path length: 7 => Start (2,2), Goal (3,4)
[DBG]  Agent 42 has the original local path length: 6 => Start (0,2), Goal (3,4)
[DBG]  Agent 55 has the original local path length: 4 => Start (0,3), Goal (2,2)
[DBG]  Agent 148 has the original local path length: 4 => Start (2,1), Goal (1,2)
[DBG]  Start position: (2, 2), (0, 2), (0, 3), (2, 1), 
[DBG]  Goal position: (3, 4), (3, 4), (2, 2), (1, 2), 
[DBG]  SAT instance and solver created.
Currently solving
Instance name: scen
Map name: map
Encoding used: disappear_at_goal
SAT solver used: Kissat
Optimizing function: sum of costs
Number of agents: 4
Mks LB: 6
SoC LB: 17
Delta: 0
Remaining time: 300000 [ms]

[DBG]  Solver returned: -1
[DBG]  SAT solver failed.
[STAT] SAT solver failed to find a valid solution.
[DBG]  ====================
[DBG]  SAT destroy operator called.
[DBG]  SAT heuristic: 2
[DBG]  key_agent_id: 28
[DBG]  key_agent_id global path length: 46
[DBG]  Submap content (global positions):
[DBG]  595 596 597 598 599 
[DBG]  627 628 629 630 631 
[DBG]  659 660 661 662 663 
[DBG]  691 692 693 694 695 
[DBG]  723 724 725 726 727 
[DBG]  Map content with agents and obstacles:
[DBG]  X . . X . 
[DBG]  . . A X . 
[DBG]  . . A X X 
[DBG]  . . X X X 
[DBG]  X . . . . 
[DBG]  content of the map structure that we pass to the SAT solver:
[DBG]  -1  1  1  -1  1  
[DBG]  1  1  1  -1  1  
[DBG]  1  1  1  -1  -1  
[DBG]  1  1  -1  -1  -1  
[DBG]  -1  1  1  1  1  
[DBG]  Identifying agents in a submap for rescheduling (when key_agent is there at the time 13):
[DBG]  Agent 1 found intervals in the sub-map:
[DBG]  
[DBG]  Agent 1 is not in sub-map at time 13 (intervals: 
[DBG]  )
[DBG]  Agent 28 found intervals in the sub-map:
[DBG]   [0..40] [43..45]
[DBG]  Agent 28 (interval in submap: [0..40]) contains time 13, added to replan.
[DBG]  Agent 74 found intervals in the sub-map:
[DBG]   [15..19]
[DBG]  Agent 74 is not in sub-map at time 13 (intervals: 
[DBG]  [15..19] )
[DBG]  Agent 86 found intervals in the sub-map:
[DBG]   [10..14]
[DBG]  Agent 86 (interval in submap: [10..14]) contains time 13, added to replan.
[DBG]  Agent 28 | Start (global): 661 -> (local): (2, 2) at time 13 | Goal (global): 725 -> (local): (4, 2) at time 40
[DBG]  Agent 86 | Start (global): 629 -> (local): (1, 2) at time 13 | Goal (global): 597 -> (local): (0, 2) at time 14
[DBG]  [REPAIR] SAT destroy operator called.
[DBG]  [REPAIR] SAT operator â€“ launching subproblem FOR OPTIMIZATION.
[DBG]  Creating local paths (sx, sy) in the submap for T_sync = 13
[DBG]    Agent 28 (global paths from T=13 to 40) has local path: (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,2) (2,1) (2,1) (2,1) (2,1) (2,1) (2,1) (2,1) (3,1) (4,1) (4,2) 
[DBG]    Agent 86 (global paths from T=13 to 14) has local path: (1,2) (0,2) 
[DBG]  Checking input data for SAT solver:
[DBG]    - Number of agents to replan: 2
[DBG]  Agent 28 has the original local path length: 28 => Start (2,2), Goal (4,2)
[DBG]  Agent 86 has the original local path length: 2 => Start (1,2), Goal (0,2)
[DBG]  Start position: (2, 2), (1, 2), 
[DBG]  Goal position: (4, 2), (0, 2), 
[DBG]  SAT instance and solver created.
Currently solving
Instance name: scen
Map name: map
Encoding used: disappear_at_goal
SAT solver used: Kissat
Optimizing function: sum of costs
Number of agents: 2
Mks LB: 5
SoC LB: 7
Delta: 0
Remaining time: 300000 [ms]

Found plan [agents = 2] [timesteps = 5]
Agent #0 : 9 8 11 12 13 
Agent #1 : 5 1 0 0 0 

[DBG]  Solver returned: 0
[DBG]  Agent (index) 28 | New local path (submap idx):
[DBG]  9 8 11 12 13 
[DBG]  Agent (index) 86 | New local path (submap idx):
[DBG]  5 1 
[DBG]  Update the agent path 28 | Original local length: 28 | New local length: 5
[DBG]  agent 28 t=0 => decoded (sx,sy)=(2,2) => global_id=661
[DBG]  agent 28 t=1 => decoded (sx,sy)=(2,1) => global_id=660
[DBG]  agent 28 t=2 => decoded (sx,sy)=(3,1) => global_id=692
[DBG]  agent 28 t=3 => decoded (sx,sy)=(4,1) => global_id=724
[DBG]  agent 28 t=4 => decoded (sx,sy)=(4,2) => global_id=725
[DBG]  Complete path of agent 28:
[DBG]    Original: 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 660 660 660 660 660 660 660 692 724 725 757 757 725 726 727 
[DBG]    New:     661 661 661 661 661 661 661 661 661 661 661 661 661 661 660 692 724 725 757 757 725 726 727 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 661 661 661 661 661 661 661 661 661 661 661 661 661 
[DBG]    Local path (in submap): 661 660 692 724 725 757 757 725 726 727 
[DBG]    Suffix (out of submap): 
[DBG]  Original agent path length 28 je: 46
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 0: 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 660, 692, 724, 725, 757, 757, 725, 726, 727, 
[DBG]  Path for agent 28 updated, resulting length: 23
[DBG]  Update the agent path 86 | Original local length: 2 | New local length: 2
[DBG]  agent 86 t=0 => decoded (sx,sy)=(1,2) => global_id=629
[DBG]  agent 86 t=1 => decoded (sx,sy)=(0,2) => global_id=597
[DBG]  Complete path of agent 86:
[DBG]    Original: 781 782 750 751 719 720 721 689 657 658 659 627 628 629 597 565 566 534 534 502 503 504 505 506 507 539 540 541 
[DBG]    New:     781 782 750 751 719 720 721 689 657 658 659 627 628 629 597 565 566 534 534 502 503 504 505 506 507 539 540 541 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 781 782 750 751 719 720 721 689 657 658 659 627 628 
[DBG]    Local path (in submap): 629 597 
[DBG]    Suffix (out of submap): 565 566 534 534 502 503 504 505 506 507 539 540 541 
[DBG]  Original agent path length 86 je: 28
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 1: 781, 782, 750, 751, 719, 720, 721, 689, 657, 658, 659, 627, 628, 629, 597, 565, 566, 534, 534, 502, 503, 504, 505, 506, 507, 539, 540, 541, 
[DBG]  Path for agent 86 updated, resulting length: 28
[DBG]  Paths successfully updated.
[DBG]  (LNS.cpp) New path for agent 28: 
[DBG]  661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 660, 692, 724, 725, 757, 757, 725, 726, 727, 
[DBG]  (LNS.cpp) New path for agent 86: 
[DBG]  781, 782, 750, 751, 719, 720, 721, 689, 657, 658, 659, 627, 628, 629, 597, 565, 566, 534, 534, 502, 503, 504, 505, 506, 507, 539, 540, 541, 
[DBG]  Delta value: 0.319444
[DBG]  Rewarding metric index = 1
[DBG]  component_weights = {0.123267, 0.489219, 0.180114, 0.207401}
[DBG]  opSuccess value: 1
[STAT] neighbor.sum_of_costs before recomputation: 49
[STAT] neighbor.old_sum_of_costs before recomputation: 72
[STAT] sum_of_costs before recomputation: 4521
[DBG]  Validate solution immediately after SAT success.
[WARNING] Problem after SAT: Target conflict: agent 42 (len 45) traverses target of agent 28 (len 22) at location 727 at timestep 44
[DBG]  [DEBUG] Attempting immediate repair via init_lns because problem occurred after SAT (should be applied only for conflicts...).
[DBG]  [DEBUG] Passing 150 agents to init_lns (skip=true).
[DBG]  [DEBUG] path_table contents for selected agents (neighbor.agents):
[DBG]    Agent 28 => controlling path length=23
[DBG]    Agent 86 => controlling path length=28
[DBG]  hodnota skip_initial_solution=1
[DBG]  We skip initialSolution => call buildCollisionData()
[DBG]  buildCollisionData() called â€“ skip_initial_solution case.
[DBG]  Agents.size()=150, collision_graph.size()=150
[DBG]  agent 28 => updateCollidingPairs => foundCollision
[DBG]  agent 42 => updateCollidingPairs => foundCollision
[DBG]  agent 45 => updateCollidingPairs => foundCollision
[DBG]  Conflicting agent pairs:
[DBG]  agent 28 is in conflict with agent 42
[DBG]  agent 28 is in conflict with agent 45
[DBG]  buildCollisionData() => sum_of_costs=4498, num_of_colliding_pairs=2
[DBG]  buildCollisionData done => sum_of_costs=4498, num_of_colliding_pairs=2
[DBG]  sum_of_cost hodnota: 4498
[DBG]  After skip/init build => iteration_stats.back(): sum_of_costs=4498, collisions=2
[DEBUG] Using default neighbor generation strategy for conflicts: 0
	InitLNS(PP): runtime = 0.001717, iterations = 2, colliding pairs = 0, initial colliding pairs = 2, solution cost = 4520, initial solution cost = 4498, failed iterations = 0
[DBG]  [DEBUG] init_lns->sum_of_costs after init_lns->run: 4520
[DBG]  [DEBUG] sum_of_costs after assignment from init_lns->run: 4520
[DBG]  Recomputing sum_of_cost by dividing neighbor.sum_of_costs and neighbor.old_sum_of_costs
[STAT] sum_of_costs after recomputation: 4520
[STAT] Iteration 20
[DBG]  Random chance did not select SAT operator (r=85), using default strategy.
[DBG]  opSuccess value: 0
[STAT] Iteration 20
[DBG]  Random chance did not select SAT operator (r=79), using default strategy.
[DBG]  opSuccess value: 0
[STAT] Iteration 20
[DBG]  Using SAT operator (destroy+repair SAT).
[DBG]  ====================
[DBG]  SAT destroy operator called.
[DBG]  SAT heuristic: 2
[DBG]  key_agent_id: 28
[DBG]  key_agent_id global path length: 46
[DBG]  Submap content (global positions):
[DBG]  625 626 627 628 629 
[DBG]  657 658 659 660 661 
[DBG]  689 690 691 692 693 
[DBG]  721 722 723 724 725 
[DBG]  753 754 755 756 757 
[DBG]  Map content with agents and obstacles:
[DBG]  . X . . . 
[DBG]  . . . . . 
[DBG]  . X A . X 
[DBG]  . . X . . 
[DBG]  . X A . . 
[DBG]  content of the map structure that we pass to the SAT solver:
[DBG]  1  -1  1  1  1  
[DBG]  1  1  1  1  1  
[DBG]  1  -1  1  1  -1  
[DBG]  1  1  -1  1  1  
[DBG]  1  -1  1  1  1  
[DBG]  Identifying agents in a submap for rescheduling (when key_agent is there at the time 34):
[DBG]  Agent 26 found intervals in the sub-map:
[DBG]   [29..34]
[DBG]  Agent 26 (interval in submap: [29..34]) contains time 34, added to replan.
[DBG]  Agent 28 found intervals in the sub-map:
[DBG]   [0..43]
[DBG]  Agent 28 (interval in submap: [0..43]) contains time 34, added to replan.
[DBG]  Agent 45 found intervals in the sub-map:
[DBG]   [28..33]
[DBG]  Agent 45 is not in sub-map at time 34 (intervals: 
[DBG]  [28..33] )
[DBG]  Agent 53 found intervals in the sub-map:
[DBG]  
[DBG]  Agent 53 is not in sub-map at time 34 (intervals: 
[DBG]  )
[DBG]  Agent 148 found intervals in the sub-map:
[DBG]   [35..41]
[DBG]  Agent 148 is not in sub-map at time 34 (intervals: 
[DBG]  [35..41] )
[DBG]  Agent 26 | Start (global): 755 -> (local): (4, 2) at time 34 | Goal (global): 755 -> (local): (4, 2) at time 34
[DBG]  Agent 28 | Start (global): 691 -> (local): (2, 2) at time 34 | Goal (global): 725 -> (local): (3, 4) at time 43
[DBG]  [REPAIR] SAT destroy operator called.
[DBG]  [REPAIR] SAT operator â€“ launching subproblem FOR OPTIMIZATION.
[DBG]  Creating local paths (sx, sy) in the submap for T_sync = 34
[DBG]    Agent 26 (global paths from T=34 to 34) has local path: (4,2) 
[DBG]    Agent 28 (global paths from T=34 to 43) has local path: (2,2) (2,2) (2,2) (2,2) (2,3) (3,3) (3,4) (4,4) (4,4) (3,4) 
[DBG]  Checking input data for SAT solver:
[DBG]    - Number of agents to replan: 2
[DBG]  Agent 26 has the original local path length: 1 => Start (4,2), Goal (4,2)
[DBG]  Agent 28 has the original local path length: 10 => Start (2,2), Goal (3,4)
[DBG]  Start position: (4, 2), (2, 2), 
[DBG]  Goal position: (4, 2), (3, 4), 
[DBG]  SAT instance and solver created.
Currently solving
Instance name: scen
Map name: map
Encoding used: disappear_at_goal
SAT solver used: Kissat
Optimizing function: sum of costs
Number of agents: 2
Mks LB: 4
SoC LB: 5
Delta: 0
Remaining time: 300000 [ms]

Found plan [agents = 2] [timesteps = 4]
Agent #0 : 17 0 0 0 
Agent #1 : 10 11 14 15 

[DBG]  Solver returned: 0
[DBG]  Agent (index) 26 | New local path (submap idx):
[DBG]  17 
[DBG]  Agent (index) 28 | New local path (submap idx):
[DBG]  10 11 14 15 
[DBG]  Update the agent path 26 | Original local length: 1 | New local length: 1
[DBG]  agent 26 t=0 => decoded (sx,sy)=(4,2) => global_id=755
[DBG]  Complete path of agent 26:
[DBG]    Original: 13 13 45 46 47 48 49 81 82 83 115 147 148 180 212 244 276 277 309 341 373 405 437 469 501 533 565 597 596 628 660 692 724 756 755 
[DBG]    New:     13 13 45 46 47 48 49 81 82 83 115 147 148 180 212 244 276 277 309 341 373 405 437 469 501 533 565 597 596 628 660 692 724 756 755 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 13 13 45 46 47 48 49 81 82 83 115 147 148 180 212 244 276 277 309 341 373 405 437 469 501 533 565 597 596 628 660 692 724 756 
[DBG]    Local path (in submap): 755 
[DBG]    Suffix (out of submap): 
[DBG]  Original agent path length 26 je: 35
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 0: 13, 13, 45, 46, 47, 48, 49, 81, 82, 83, 115, 147, 148, 180, 212, 244, 276, 277, 309, 341, 373, 405, 437, 469, 501, 533, 565, 597, 596, 628, 660, 692, 724, 756, 755, 
[DBG]  Path for agent 26 updated, resulting length: 35
[DBG]  Update the agent path 28 | Original local length: 10 | New local length: 4
[DBG]  agent 28 t=0 => decoded (sx,sy)=(2,2) => global_id=691
[DBG]  agent 28 t=1 => decoded (sx,sy)=(2,3) => global_id=692
[DBG]  agent 28 t=2 => decoded (sx,sy)=(3,3) => global_id=724
[DBG]  agent 28 t=3 => decoded (sx,sy)=(3,4) => global_id=725
[DBG]  Complete path of agent 28:
[DBG]    Original: 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 660 692 691 691 691 691 691 692 724 725 757 757 725 726 727 
[DBG]    New:     661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 660 692 691 691 692 724 725 726 727 
[DBG]  Rendering the ORIGINAL path:
[DBG]    Prefix (before submap): 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 661 660 692 691 
[DBG]    Local path (in submap): 691 692 724 725 726 727 
[DBG]    Suffix (out of submap): 
[DBG]  Original agent path length 28 je: 46
[DBG]  (SATUtils.cpp) new path in agents[a].path of the agent 1: 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 660, 692, 691, 691, 692, 724, 725, 726, 727, 
[DBG]  Path for agent 28 updated, resulting length: 40
[DBG]  Paths successfully updated.
[DBG]  (LNS.cpp) New path for agent 26: 
[DBG]  13, 13, 45, 46, 47, 48, 49, 81, 82, 83, 115, 147, 148, 180, 212, 244, 276, 277, 309, 341, 373, 405, 437, 469, 501, 533, 565, 597, 596, 628, 660, 692, 724, 756, 755, 
[DBG]  (LNS.cpp) New path for agent 28: 
[DBG]  661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 661, 660, 692, 691, 691, 692, 724, 725, 726, 727, 
[DBG]  Delta value: 0.0759494
[DBG]  Rewarding metric index = 3
[DBG]  component_weights = {0.119968, 0.476127, 0.175294, 0.228611}
[DBG]  opSuccess value: 1
[STAT] neighbor.sum_of_costs before recomputation: 73
[STAT] neighbor.old_sum_of_costs before recomputation: 79
[STAT] sum_of_costs before recomputation: 4520
[DBG]  Validate solution immediately after SAT success.
[WARNING] Problem after SAT: Target conflict: agent 42 (len 45) traverses target of agent 28 (len 39) at location 727 at timestep 44
[DBG]  [DEBUG] Attempting immediate repair via init_lns because problem occurred after SAT (should be applied only for conflicts...).
[DBG]  [DEBUG] Passing 150 agents to init_lns (skip=true).
[DBG]  [DEBUG] path_table contents for selected agents (neighbor.agents):
[DBG]    Agent 26 => controlling path length=35
[DBG]    Agent 28 => controlling path length=40
[DBG]  hodnota skip_initial_solution=1
[DBG]  We skip initialSolution => call buildCollisionData()
[DBG]  buildCollisionData() called â€“ skip_initial_solution case.
[DBG]  Agents.size()=150, collision_graph.size()=150
[DBG]  agent 28 => updateCollidingPairs => foundCollision
[DBG]  agent 42 => updateCollidingPairs => foundCollision
[DBG]  agent 148 => updateCollidingPairs => foundCollision
[DBG]  Conflicting agent pairs:
[DBG]  agent 28 is in conflict with agent 42
[DBG]  agent 28 is in conflict with agent 148
[DBG]  buildCollisionData() => sum_of_costs=4514, num_of_colliding_pairs=2
[DBG]  buildCollisionData done => sum_of_costs=4514, num_of_colliding_pairs=2
[DBG]  sum_of_cost hodnota: 4514
[DBG]  After skip/init build => iteration_stats.back(): sum_of_costs=4514, collisions=2
[DEBUG] Using default neighbor generation strategy for conflicts: 1
	InitLNS(PP): runtime = 0.00116692, iterations = 2, colliding pairs = 0, initial colliding pairs = 2, solution cost = 4521, initial solution cost = 4514, failed iterations = 0
[DBG]  [DEBUG] init_lns->sum_of_costs after init_lns->run: 4521
[DBG]  [DEBUG] sum_of_costs after assignment from init_lns->run: 4521
[DBG]  Recomputing sum_of_cost by dividing neighbor.sum_of_costs and neighbor.old_sum_of_costs
[STAT] sum_of_costs after recomputation: 4521
[STAT] LNS(PP;PP): runtime = 0.245146, iterations = 21, solution cost = 4521, initial solution cost = 4490, failed iterations = 14
